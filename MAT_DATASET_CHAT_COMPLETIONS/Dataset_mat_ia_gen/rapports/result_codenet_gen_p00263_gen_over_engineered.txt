================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:21:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from abc import ABC, abstractmethod

class BitStream:
    def __init__(self, hex_string: str):
        # 16 hex chars representing 32 bits
        self.hex_string = hex_string
        self.value = int(hex_string, 16)

    def get_bit(self, pos: int) -> int:
        # pos: 1-based bit index from left (MSB)
        if not (1 <= pos <= 32):
            raise ValueError("Bit position must be between 1 and 32.")
        shift = 32 - pos
        return (self.value >> shift) & 1

    def __repr__(self):
        return f"BitStream({self.hex_string})"

class Component(ABC):
    @abstractmethod
    def extract_bits(self, bitstream: BitStream):
        pass

    @abstractmethod
    def value(self) -> int or float:
        pass

class SignBit(Component):
    def __init__(self):
        self.bit = 0

    def extract_bits(self, bitstream: BitStream):
        self.bit = bitstream.get_bit(1)

    def value(self) -> int:
        # (-1)^bit
        return (-1) ** self.bit

    def __repr__(self):
        return f"SignBit(bit={self.bit})"

class IntegerPart(Component):
    def __init__(self):
        self.bits = []

    def extract_bits(self, bitstream: BitStream):
        # Bits 8 to 31 (24 bits)
        self.bits = [bitstream.get_bit(i) for i in range(8, 32)]

    def value(self) -> int:
        total = 0
        # b8 is LSB of integer part or MSB? The problem states:
        # integer value = b8 + 2^1 * b9 + 2^2 * b10 ... 2^23 * b31
        # So b8 is 2^0 place
        for i, bit in enumerate(self.bits):
            total += bit << i  # bit * 2^i
        return total

    def __repr__(self):
        return f"IntegerPart(bits={self.bits})"

class FractionalPart(Component):
    def __init__(self):
        self.bits = []

    def extract_bits(self, bitstream: BitStream):
        # Bits 2 to 7 (6 bits for fraction)
        # But problem states 7 bits fractional part: bits 2 to 8 or 1 to 7 from right?
        # The problem states: rightmost 7 bits are fraction (b1 to b7),
        # so bits 32 to 26 are fractional bits?
        # Bits 1 to 7 (from left to right) are from right is b1 to b7. But bit 1 is sign bit by problem.
        # Re-check problem indexing:
        # b1 ... b32 are bits, bit1 is MSB (sign)
        # integer part = b8 to b31 (24 bits)
        # fractional part = b1 to b7 (7 bits)
        # So fractional bits are the lowest 7 bits, thus bits 25 to 31 or 26 to 32 from left?
        # Bits from left : 1 (MSB) .. 32 (LSB)
        # Fractional bits: b1 to b7 are **rightmost 7 bits** => bits 32 (b1) to 26 (b7).
        # So fractional bits are bits 26 to 32 from left, reversed order b1..b7 from right:
        # b1 = bit 32, b2=bit31,...,b7=bit26
        self.bits = [bitstream.get_bit(i) for i in range(26, 33)]

    def value(self) -> float:
        # Sum (0.5)^i * b_i for i=1..7, with b1 is rightmost bit (bit 32)
        total = 0.0
        for i, bit in enumerate(reversed(self.bits), start=1):
            total += bit * (0.5 ** i)
        return total

    def __repr__(self):
        return f"FractionalPart(bits={self.bits})"

class KongoFloat:
    def __init__(self, hex_string: str):
        self.bitstream = BitStream(hex_string)
        self.sign = SignBit()
        self.integer = IntegerPart()
        self.fraction = FractionalPart()

        # Extract all parts.
        self.sign.extract_bits(self.bitstream)
        self.integer.extract_bits(self.bitstream)
        self.fraction.extract_bits(self.bitstream)

    def to_decimal_str(self) -> str:
        # calculate float value exactly
        sign_val = self.sign.value()
        int_val = self.integer.value()
        frac_val = self.fraction.value()
        total_val = sign_val * (int_val + frac_val)

        # format output as requested
        # - omit trailing zeros in fraction
        # - output fraction as "0" if fractional part is zero
        # Use exact arithmetic for fractional part:
        # The fractional part can be converted to fraction for exactness:
        # Since fractional part is sum of (b_i * 1/2^i), denominator is power of two.
        # Use fractions to avoid float rounding errors.
        from fractions import Fraction
        frac_fraction = Fraction(0)
        for i, bit in enumerate(reversed(self.fraction.bits), start=1):
            if bit == 1:
                frac_fraction += Fraction(1, 2**i)

        int_fraction = Fraction(self.integer.value())
        val_fraction = int_fraction + frac_fraction

        if sign_val == -1:
            val_fraction = -val_fraction

        # Now convert fraction to decimal string without approximation:
        # convert numerator and denominator to decimal string
        numerator = val_fraction.numerator
        denominator = val_fraction.denominator

        # If denominator is 1, integer number
        if denominator == 1:
            result = str(numerator) + ".0"
            return result

        # else decimal with fraction part
        # convert fraction to decimal with exact representation (denominator is power of 2)
        # denominator is 2^{k}, k<=31

        # generate decimal digits of fractional part:
        # total_val = integer part + fractional part

        # separate integer and fractional parts:
        abs_frac = val_fraction if val_fraction >= 0 else -val_fraction
        integer_part = abs_frac.numerator // abs_frac.denominator
        fractional_part = abs_frac - integer_part

        # convert fractional_part to decimal digits until exact or trailing zeros
        # max 7 decimal places enough or until fractional part zero.
        # However, we must generate exactly to not lose information and avoid floating point errors.

        # actually, denominator divides 2^7=128
        # but integer part can be larger, so longest fraction decimal length can be estimated.

        # We'll generate decimal fraction digits as long as fractional_part !=0:

        digits = []
        frac = fractional_part
        max_digits = 20  # more than enough for denominator power of 2 up to 2^31

        for _ in range(max_digits):
            frac *= 10
            digit = frac.numerator // frac.denominator
            digits.append(str(digit))
            frac -= digit
            if frac == 0:
                break

        # strip trailing zeros
        while digits and digits[-1] == '0':
            digits.pop()

        if not digits:
            # fractional part zero
            frac_str = "0"
        else:
            frac_str = "".join(digits)

        sign_str = "-" if val_fraction < 0 else ""

        return f"{sign_str}{integer_part}.{frac_str}"

def main():
    import sys

    class InputReader:
        def __init__(self):
            self.Q = int(sys.stdin.readline().strip())
            self.bitstrings = [sys.stdin.readline().strip() for _ in range(self.Q)]

    input_data = InputReader()

    for bitstr in input_data.bitstrings:
        kf = KongoFloat(bitstr)
        print(kf.to_decimal_str())

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' abc' (ID: 75094)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' ABC' (ID: 33047)
  Prédit: ' ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -0.1270483285188675
    2. 'ABC' → logprob: -2.1270482540130615
    3. 'AB' → logprob: -10.00204849243164
    4. ' A' → logprob: -10.37704849243164
    5. 'ABCDE' → logprob: -11.25204849243164
    6. 'abc' → logprob: -11.75204849243164
    7. 'abstract' → logprob: -12.25204849243164
    8. 'A' → logprob: -12.37704849243164
    9. ' ' → logprob: -12.75204849243164
    10. ' ' → logprob: -12.75204849243164

Token 4: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6396735906600952
    2. '.' → logprob: -0.7646735906600952
    3. 'import' → logprob: -6.514673709869385
    4. ':' → logprob: -6.764673709869385
    5. '<|end|>' → logprob: -6.889673709869385
    6. ' ,' → logprob: -7.014673709869385
    7. ' ' → logprob: -7.514673709869385
    8. ' .' → logprob: -7.514673709869385
    9. '```' → logprob: -8.139673233032227
    10. '' → logprob: -8.264673233032227

Token 5: ' abstract' (ID: 13004)
  Prédit: 'abstract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.6097452640533447
    2. ' abstract' → logprob: -0.8597452640533447
    3. 'Abstract' → logprob: -3.4847452640533447
    4. ' ' → logprob: -6.859745025634766
    5. ' ABC' → logprob: -7.734745025634766
    6. '.abstract' → logprob: -8.484745025634766
    7. ' Abstract' → logprob: -8.734745025634766
    8. '```' → logprob: -8.984745025634766
    9. 'Meta' → logprob: -9.484745025634766
    10. 'ABC' → logprob: -9.484745025634766

Token 6: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.00020449401927180588
    2. 'm' → logprob: -8.625204086303711
    3. 'meth' → logprob: -11.375204086303711
    4. '_method' → logprob: -12.375204086303711
    5. 'classmethod' → logprob: -12.625204086303711
    6. 'met' → logprob: -13.500204086303711
    7. 'me' → logprob: -13.500204086303711
    8. ' method' → logprob: -13.875204086303711
    9. 'meta' → logprob: -14.125204086303711
    10. '_' → logprob: -15.125204086303711

Token 7: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48189130425453186
    2. '```' → logprob: -1.4818912744522095
    3. 'class' → logprob: -2.356891393661499
    4. '

' → logprob: -4.23189115524292
    5. '<|end|>' → logprob: -4.35689115524292
    6. '' → logprob: -4.60689115524292
    7. '\n' → logprob: -4.85689115524292
    8. ' class' → logprob: -5.98189115524292
    9. '
' → logprob: -6.10689115524292
    10. '\' → logprob: -6.10689115524292

Token 8: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.055614374577999115
    2. '

' → logprob: -3.805614471435547
    3. 'class' → logprob: -3.930614471435547
    4. '```' → logprob: -5.555614471435547
    5. '
' → logprob: -5.930614471435547
    6. '\n' → logprob: -6.430614471435547
    7. '' → logprob: -6.930614471435547
    8. '  
' → logprob: -7.680614471435547
    9. '`
' → logprob: -7.680614471435547
    10. ' 
' → logprob: -7.805614471435547

Token 9: ' Bit' (ID: 9422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03231189772486687
    2. ' Abstract' → logprob: -3.7823119163513184
    3. ' My' → logprob: -5.407311916351318
    4. ' A' → logprob: -7.407311916351318
    5. ' Base' → logprob: -7.532311916351318
    6. ' Serializer' → logprob: -7.657311916351318
    7. ' Space' → logprob: -7.782311916351318
    8. ' Object' → logprob: -7.907311916351318
    9. ' ABC' → logprob: -7.907311916351318
    10. ' User' → logprob: -8.28231143951416

Token 10: 'Stream' (ID: 4193)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07405900955200195
    2. ':' → logprob: -2.949059009552002
    3. 'Converter' → logprob: -4.699059009552002
    4. '(Bit' → logprob: -6.074059009552002
    5. ' :' → logprob: -6.449059009552002
    6. 'Vector' → logprob: -7.074059009552002
    7. '):' → logprob: -7.324059009552002
    8. '   ' → logprob: -7.324059009552002
    9. 'Array' → logprob: -8.074058532714844
    10. ' (' → logprob: -8.449058532714844

Token 11: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11343805491924286
    2. '(' → logprob: -2.238438129425049
    3. '(:' → logprob: -8.23843765258789
    4. '():' → logprob: -8.98843765258789
    5. '(Abstract' → logprob: -9.61343765258789
    6. ' :' → logprob: -10.61343765258789
    7. '):' → logprob: -10.73843765258789
    8. '(Bit' → logprob: -10.86343765258789
    9. ':**' → logprob: -11.23843765258789
    10. '(object' → logprob: -11.36343765258789

Token 12: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4235345721244812
    2. '   ' → logprob: -1.548534631729126
    3. '(' → logprob: -3.173534631729126
    4. '<|end|>' → logprob: -3.673534631729126
    5. '```' → logprob: -3.673534631729126
    6. '(object' → logprob: -4.923534393310547
    7. '    ' → logprob: -5.173534393310547
    8. '()' → logprob: -5.548534393310547
    9. '():' → logprob: -5.673534393310547
    10. '\' → logprob: -6.173534393310547

Token 13: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.636804461479187
    2. '   ' → logprob: -1.261804461479187
    3. 'def' (adapté à ' def') → logprob: -1.761804461479187
    4. '    ' → logprob: -5.011804580688477
    5. ' pass' → logprob: -5.636804580688477
    6. '    
' → logprob: -6.261804580688477
    7. '```' → logprob: -6.886804580688477
    8. ' ' → logprob: -7.136804580688477
    9. ' 
' → logprob: -7.636804580688477
    10. 'pass' → logprob: -7.886804580688477

Token 14: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.024740099906921387
    2. ' init' → logprob: -4.774740219116211
    3. '_init' → logprob: -5.399740219116211
    4. ' read' → logprob: -6.149740219116211
    5. 'init' → logprob: -6.274740219116211
    6. ' get' → logprob: -6.274740219116211
    7. ' write' → logprob: -6.399740219116211
    8. '__' → logprob: -6.899740219116211
    9. ' _' → logprob: -7.024740219116211
    10. ' append' → logprob: -7.399740219116211

Token 15: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -5.512236498361744e-07
    2. 'ini' → logprob: -14.500000953674316
    3. 'in' → logprob: -18.0
    4. '_init' → logprob: -18.5
    5. ' init' → logprob: -19.125
    6. 'int' → logprob: -19.5
    7. 'inite' → logprob: -20.625
    8. 'i' → logprob: -21.75
    9. 'iter' → logprob: -21.875
    10. 'initi' → logprob: -21.875

Token 16: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.028264211490750313
    2. '__' → logprob: -3.653264284133911
    3. '__(
' → logprob: -7.278264045715332
    4. '(self' → logprob: -7.403264045715332
    5. '(' → logprob: -8.028264045715332
    6. '__((' → logprob: -9.153264045715332
    7. '__(*' → logprob: -9.153264045715332
    8. ' (' → logprob: -10.403264045715332
    9. '<|end|>' → logprob: -10.528264045715332
    10. '__('' → logprob: -10.778264045715332

Token 17: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.000508591765537858
    2. ' self' → logprob: -7.625508785247803
    3. 'data' → logprob: -11.250508308410645
    4. ')' → logprob: -12.125508308410645
    5. 'buffer' → logprob: -13.625508308410645
    6. 'bit' → logprob: -15.750508308410645
    7. '0' → logprob: -16.00050926208496
    8. 'source' → logprob: -16.00050926208496
    9. 'se' → logprob: -16.12550926208496
    10. 'stream' → logprob: -16.62550926208496

Token 18: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019120287150144577
    2. ' ,' → logprob: -4.644120216369629
    3. ')' → logprob: -5.394120216369629
    4. 'self' → logprob: -5.644120216369629
    5. '<|end|>' → logprob: -7.519120216369629
    6. ' self' → logprob: -8.644120216369629
    7. ' )' → logprob: -8.769120216369629
    8. ',self' → logprob: -9.269120216369629
    9. ',data' → logprob: -10.144120216369629
    10. '):' → logprob: -10.144120216369629

Token 19: ' hex' (ID: 26157)
  Prédit: ' data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.28919097781181335
    2. 'data' → logprob: -1.4141910076141357
    3. 'self' → logprob: -5.914190769195557
    4. ' self' → logprob: -5.914190769195557
    5. ' source' → logprob: -6.789190769195557
    6. ' bytes' → logprob: -7.789190769195557
    7. 'source' → logprob: -7.914190769195557
    8. ' bits' → logprob: -8.664191246032715
    9. ')' → logprob: -9.039191246032715
    10. ' bit' → logprob: -9.539191246032715

Token 20: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.19761165976524353
    2. '_str' → logprob: -2.6976115703582764
    3. '_' → logprob: -3.1976115703582764
    4. 'string' → logprob: -3.1976115703582764
    5. '):' → logprob: -4.3226118087768555
    6. ')' → logprob: -4.3226118087768555
    7. '_value' → logprob: -7.1976118087768555
    8. ':' → logprob: -8.072611808776855
    9. 'str' → logprob: -8.072611808776855
    10. '_)' → logprob: -8.072611808776855

Token 21: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003800788428634405
    2. ')' → logprob: -5.878800868988037
    3. ':' → logprob: -7.003800868988037
    4. ' ):' → logprob: -10.503800392150879
    5. '):
' → logprob: -10.753800392150879
    6. '=' → logprob: -11.003800392150879
    7. '   ' → logprob: -11.128800392150879
    8. ' :' → logprob: -13.503800392150879
    9. '=None' → logprob: -13.503800392150879
    10. ' ' → logprob: -14.003800392150879

Token 22: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.575951099395752
    2. ' str' → logprob: -0.825951099395752
    3. ')' → logprob: -11.575950622558594
    4. '   ' → logprob: -14.575950622558594
    5. '	str' → logprob: -14.700950622558594
    6. 's' → logprob: -14.950950622558594
    7. ' ' → logprob: -15.325950622558594
    8. '(str' → logprob: -15.950950622558594
    9. ':str' → logprob: -15.950950622558594
    10. '[str' → logprob: -16.075950622558594

Token 23: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023353906348347664
    2. ')' → logprob: -3.7733538150787354
    3. '):
' → logprob: -9.523353576660156
    4. ':' → logprob: -10.898353576660156
    5. ' ):' → logprob: -11.523353576660156
    6. ')->' → logprob: -12.898353576660156
    7. '   ' → logprob: -13.273353576660156
    8. ',' → logprob: -14.148353576660156
    9. '):
' → logprob: -14.523353576660156
    10. ' )' → logprob: -15.273353576660156

Token 24: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001616261899471283
    2. 'self' → logprob: -6.626616477966309
    3. '   ' → logprob: -9.376616477966309
    4. ' self' → logprob: -10.001616477966309
    5. '      ' → logprob: -10.001616477966309
    6. '        ' → logprob: -10.376616477966309
    7. '    ' → logprob: -10.626616477966309
    8. ')' → logprob: -11.001616477966309
    9. '```' → logprob: -11.376616477966309
    10. 's' → logprob: -12.001616477966309

Token 25: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14346739649772644
    2. 'self' → logprob: -2.143467426300049
    3. ' self' → logprob: -4.518467426300049
    4. 's' → logprob: -5.518467426300049
    5. '   ' → logprob: -7.393467426300049
    6. ')' → logprob: -8.64346694946289
    7. ' ' → logprob: -8.76846694946289
    8. '      ' → logprob: -9.26846694946289
    9. '        ' → logprob: -9.76846694946289
    10. '    ' → logprob: -9.89346694946289

Token 26: ' ' (ID: 220)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4597708284854889
    2. 'self' → logprob: -1.5847707986831665
    3. '       ' → logprob: -2.084770917892456
    4. ' ' → logprob: -4.209770679473877
    5. '        ' → logprob: -4.959770679473877
    6. ' super' → logprob: -4.959770679473877
    7. 'super' → logprob: -5.959770679473877
    8. ' hex' → logprob: -6.584770679473877
    9. 's' → logprob: -6.834770679473877
    10. ' s' → logprob: -7.334770679473877

Token 27: '16' (ID: 1125)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004057383164763451
    2. '       ' → logprob: -6.00405740737915
    3. ' self' → logprob: -7.37905740737915
    4. 'super' → logprob: -7.50405740737915
    5. 'hex' → logprob: -8.004056930541992
    6. 'import' → logprob: -10.754056930541992
    7. 's' → logprob: -11.379056930541992
    8. 'bytes' → logprob: -11.879056930541992
    9. 'def' → logprob: -12.254056930541992
    10. '```' → logprob: -12.254056930541992

Token 28: ' hex' (ID: 26157)
  Prédit: ' bytes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bytes' → logprob: -1.4122905731201172
    2. '       ' → logprob: -1.6622905731201172
    3. ')' → logprob: -2.162290573120117
    4. '   ' → logprob: -2.537290573120117
    5. 'self' → logprob: -2.787290573120117
    6. ' ' → logprob: -2.787290573120117
    7. ' self' → logprob: -2.912290573120117
    8. 'import' → logprob: -2.912290573120117
    9. ':' → logprob: -3.537290573120117
    10. '-bit' → logprob: -3.912290573120117

Token 29: ' chars' (ID: 47991)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1672171801328659
    2. ' characters' → logprob: -3.042217254638672
    3. ' )' → logprob: -3.917217254638672
    4. ')' → logprob: -3.917217254638672
    5. '   ' → logprob: -4.042217254638672
    6. ' digits' → logprob: -4.292217254638672
    7. 'adecimal' → logprob: -5.167217254638672
    8. '_chars' → logprob: -5.667217254638672
    9. ' chars' → logprob: -5.792217254638672
    10. '  ' → logprob: -5.917217254638672

Token 30: ' representing' (ID: 25389)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5927273035049438
    2. ' ' → logprob: -0.9677273035049438
    3. ')' → logprob: -3.9677271842956543
    4. '       ' → logprob: -4.217727184295654
    5. '=' → logprob: -4.717727184295654
    6. ',' → logprob: -4.842727184295654
    7. ' )' → logprob: -5.842727184295654
    8. '<|end|>' → logprob: -5.842727184295654
    9. '   ' → logprob: -6.217727184295654
    10. ' ,' → logprob: -6.467727184295654

Token 31: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12098535895347595
    2. '64' → logprob: -2.620985269546509
    3. '8' → logprob: -3.245985269546509
    4. ' a' → logprob: -6.495985507965088
    5. ' bytes' → logprob: -8.49598503112793
    6. '1' → logprob: -8.99598503112793
    7. '  ' → logprob: -9.24598503112793
    8. ' one' → logprob: -9.62098503112793
    9. 'a' → logprob: -9.74598503112793
    10. '   ' → logprob: -9.87098503112793

Token 32: '32' (ID: 1398)
  Prédit: '64'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '64' → logprob: -0.021381467580795288
    2. '8' → logprob: -4.146381378173828
    3. ' ' → logprob: -5.271381378173828
    4. '6' → logprob: -9.646381378173828
    5. '   ' → logprob: -10.146381378173828
    6. '4' → logprob: -10.271381378173828
    7. 'each' → logprob: -11.396381378173828
    8. '  ' → logprob: -11.521381378173828
    9. ' a' → logprob: -11.521381378173828
    10. 'a' → logprob: -11.646381378173828

Token 33: ' bits' (ID: 18189)
  Prédit: ' bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bits' → logprob: -0.01599670946598053
    2. 'bits' → logprob: -4.765996932983398
    3. ' bytes' → logprob: -5.640996932983398
    4. ' ' → logprob: -5.765996932983398
    5. '_bits' → logprob: -8.265996932983398
    6. '-bit' → logprob: -8.890996932983398
    7. 'bytes' → logprob: -9.140996932983398
    8. '<|end|>' → logprob: -9.390996932983398
    9. 'bit' → logprob: -10.390996932983398
    10. ' bit' → logprob: -10.890996932983398

Token 34: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08941442519426346
    2. ':' → logprob: -3.589414358139038
    3. ')' → logprob: -4.089414596557617
    4. ',' → logprob: -4.714414596557617
    5. ' :' → logprob: -4.714414596557617
    6. 'self' → logprob: -4.964414596557617
    7. '   ' → logprob: -5.339414596557617
    8. ' ' → logprob: -5.589414596557617
    9. ' self' → logprob: -6.089414596557617
    10. '):' → logprob: -6.589414596557617

Token 35: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004434035625308752
    2. 'self' → logprob: -5.754434108734131
    3. ' self' → logprob: -7.504434108734131
    4. '      ' → logprob: -8.129433631896973
    5. ',' → logprob: -9.504433631896973
    6. '   ' → logprob: -9.629433631896973
    7. ' super' → logprob: -10.254433631896973
    8. 's' → logprob: -10.379433631896973
    9. 'super' → logprob: -10.379433631896973
    10. ')' → logprob: -10.754433631896973

Token 36: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.22333888709545135
    2. '       ' → logprob: -2.0983388423919678
    3. 'self' (adapté à ' self') → logprob: -2.7233388423919678
    4. ' super' → logprob: -5.598339080810547
    5. ' s' → logprob: -5.973339080810547
    6. ' ' → logprob: -6.223339080810547
    7. '        ' → logprob: -6.973339080810547
    8. 's' → logprob: -7.348339080810547
    9. 'super' → logprob: -7.473339080810547
    10. ' hex' → logprob: -7.598339080810547

Token 37: '.hex' (ID: 111068)
  Prédit: '.hex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.hex' → logprob: -0.7734310030937195
    2. '.bits' → logprob: -1.1484310626983643
    3. '.' → logprob: -2.6484310626983643
    4. '.data' → logprob: -2.6484310626983643
    5. '._' → logprob: -3.3984310626983643
    6. '.buffer' → logprob: -3.8984310626983643
    7. '.bit' → logprob: -4.523430824279785
    8. 'data' → logprob: -5.273430824279785
    9. '_bits' → logprob: -6.273430824279785
    10. ' .' → logprob: -6.523430824279785

Token 38: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.02698677033185959
    2. '_' → logprob: -3.901986837387085
    3. '_data' → logprob: -5.151986598968506
    4. '_str' → logprob: -8.526987075805664
    5. '_bytes' → logprob: -9.151987075805664
    6. '_s' → logprob: -9.651987075805664
    7. '_value' → logprob: -9.776987075805664
    8. ' _' → logprob: -10.151987075805664
    9. '_to' → logprob: -10.276987075805664
    10. 'String' → logprob: -10.401987075805664

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3157998323440552
    2. '=' → logprob: -1.3157998323440552
    3. ' ' → logprob: -7.190799713134766
    4. '<|end|>' → logprob: -7.315799713134766
    5. '.' → logprob: -7.815799713134766
    6. ')' → logprob: -8.315799713134766
    7. '[:]' → logprob: -8.565799713134766
    8. ',' → logprob: -9.565799713134766
    9. '<|end|>' → logprob: -10.440799713134766
    10. '=[]' → logprob: -10.690799713134766

Token 40: ' hex' (ID: 26157)
  Prédit: ' hex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hex' → logprob: -0.20144949853420258
    2. 'hex' → logprob: -1.7014495134353638
    3. '(hex' → logprob: -11.326449394226074
    4. ' ' → logprob: -11.451449394226074
    5. ' bytes' → logprob: -12.451449394226074
    6. ''' → logprob: -13.201449394226074
    7. 'bytes' → logprob: -13.576449394226074
    8. '"' → logprob: -14.076449394226074
    9. '.hex' → logprob: -14.263949394226074
    10. '''' → logprob: -14.451449394226074

Token 41: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.000743995129596442
    2. '_' → logprob: -7.375743865966797
    3. '_str' → logprob: -10.250743865966797
    4. 'string' → logprob: -10.250743865966797
    5. '_s' → logprob: -10.750743865966797
    6. '_char' → logprob: -11.000743865966797
    7. ' _' → logprob: -13.000743865966797
    8. 'String' → logprob: -13.625743865966797
    9. 's' → logprob: -13.875743865966797
    10. '_strings' → logprob: -14.625743865966797

Token 42: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3554323613643646
    2. '<|end|>' → logprob: -1.605432391166687
    3. '       ' → logprob: -3.2304322719573975
    4. '   ' → logprob: -3.9804322719573975
    5. ' ' → logprob: -4.230432510375977
    6. 'def' → logprob: -4.480432510375977
    7. '<|end|>' → logprob: -5.480432510375977
    8. '\n' → logprob: -6.105432510375977
    9. ',' → logprob: -6.605432510375977
    10. '\' → logprob: -6.980432510375977

Token 43: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18945126235485077
    2. '       ' → logprob: -2.189451217651367
    3. '   ' → logprob: -3.689451217651367
    4. ' ' → logprob: -4.439451217651367
    5. 'def' → logprob: -4.689451217651367
    6. '<|end|>' → logprob: -4.689451217651367
    7. '\n' → logprob: -6.939451217651367
    8. 'self' → logprob: -6.939451217651367
    9. ' def' → logprob: -7.689451217651367
    10. '    
' → logprob: -7.814451217651367

Token 44: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4881112575531006
    2. ' self' → logprob: -1.4881112575531006
    3. ' ' → logprob: -2.6131112575531006
    4. '   ' → logprob: -3.6131112575531006
    5. 'self' (adapté à ' self') → logprob: -3.9881112575531006
    6. 'def' → logprob: -4.48811149597168
    7. ' pass' → logprob: -4.61311149597168
    8. ' def' → logprob: -4.86311149597168
    9. '        ' → logprob: -5.23811149597168
    10. '    ' → logprob: -5.98811149597168

Token 45: '.value' (ID: 4683)
  Prédit: '_bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.04138265550136566
    2. '._' → logprob: -4.291382789611816
    3. '_bytes' → logprob: -4.291382789611816
    4. '.' → logprob: -4.916382789611816
    5. 'bits' → logprob: -6.416382789611816
    6. '.bits' → logprob: -6.666382789611816
    7. '_bit' → logprob: -6.791382789611816
    8. '_data' → logprob: -7.541382789611816
    9. '_value' → logprob: -8.791382789611816
    10. '_string' → logprob: -9.041382789611816

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006924115587025881
    2. '=' → logprob: -5.006924152374268
    3. ' ' → logprob: -8.63192367553711
    4. 's' → logprob: -10.63192367553711
    5. '   ' → logprob: -13.25692367553711
    6. '  ' → logprob: -13.38192367553711
    7. '0' → logprob: -14.25692367553711
    8. ' |=' → logprob: -15.13192367553711
    9. ' <<=' → logprob: -15.25692367553711
    10. '32' → logprob: -15.75692367553711

Token 47: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.38703441619873047
    2. 'int' → logprob: -1.1370344161987305
    3. '0' → logprob: -8.76203441619873
    4. ' ' → logprob: -12.13703441619873
    5. '   ' → logprob: -13.88703441619873
    6. '[int' → logprob: -15.63703441619873
    7. '(int' → logprob: -15.76203441619873
    8. '	int' → logprob: -16.262035369873047
    9. '  ' → logprob: -16.512035369873047
    10. '<int' → logprob: -18.012035369873047

Token 48: '(hex' (ID: 99522)
  Prédit: '(hex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(hex' → logprob: -0.011583181098103523
    2. '(self' → logprob: -4.51158332824707
    3. '(' → logprob: -7.63658332824707
    4. 'hex' → logprob: -10.26158332824707
    5. 'self' → logprob: -11.38658332824707
    6. '(f' → logprob: -12.76158332824707
    7. '('' → logprob: -14.01158332824707
    8. '(bin' → logprob: -14.38658332824707
    9. '(h' → logprob: -14.63658332824707
    10. '(int' → logprob: -14.76158332824707

Token 49: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -2.8444881536415778e-05
    2. 'string' → logprob: -10.500028610229492
    3. 'String' → logprob: -14.375028610229492
    4. '_' → logprob: -16.625028610229492
    5. '-string' → logprob: -16.625028610229492
    6. ' string' → logprob: -16.750028610229492
    7. '_STRING' → logprob: -17.000028610229492
    8. '```' → logprob: -17.500028610229492
    9. '_String' → logprob: -18.000028610229492
    10. '_strings' → logprob: -18.375028610229492

Token 50: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011021859245374799
    2. ' ,' → logprob: -9.125110626220703
    3. '16' → logprob: -14.625110626220703
    4. '`,' → logprob: -14.875110626220703
    5. '```' → logprob: -16.000110626220703
    6. '   ' → logprob: -16.000110626220703
    7. '(),' → logprob: -16.875110626220703
    8. ' ' → logprob: -17.375110626220703
    9. '',' → logprob: -17.500110626220703
    10. '，' → logprob: -17.750110626220703

Token 51: ' ' (ID: 220)
  Prédit: '16'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '16' → logprob: -0.0008061755215749145
    2. ' ' → logprob: -7.1258063316345215
    3. '1' → logprob: -14.000805854797363
    4. ')' → logprob: -15.125805854797363
    5. '0' → logprob: -15.625805854797363
    6. '   ' → logprob: -16.00080680847168
    7. '```' → logprob: -16.00080680847168
    8. 'base' → logprob: -16.50080680847168
    9. ' base' → logprob: -18.06330680847168
    10. 'hex' → logprob: -18.12580680847168

Token 52: '16' (ID: 1125)
  Prédit: '16'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '16' → logprob: -1.306760805164231e-05
    2. '1' → logprob: -11.50001335144043
    3. ' ' → logprob: -13.00001335144043
    4. 'base' → logprob: -15.00001335144043
    5. '```' → logprob: -15.50001335144043
    6. '0' → logprob: -16.75001335144043
    7. ')' → logprob: -17.62501335144043
    8. ' base' → logprob: -17.87501335144043
    9. '   ' → logprob: -18.25001335144043
    10. '１６' → logprob: -18.25001335144043

Token 53: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8624639324116288e-06
    2. ')
' → logprob: -13.875001907348633
    3. ' )' → logprob: -14.500001907348633
    4. '),' → logprob: -15.500001907348633
    5. '))' → logprob: -16.000001907348633
    6. '   ' → logprob: -16.625001907348633
    7. ')}' → logprob: -17.125001907348633
    8. ')`' → logprob: -17.375001907348633
    9. '}' → logprob: -17.750001907348633
    10. ')return' → logprob: -18.625001907348633

Token 54: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.46485206484794617
    2. '<|end|>' → logprob: -1.4648520946502686
    3. ' 
' → logprob: -3.3398520946502686
    4. 'def' → logprob: -3.5898520946502686
    5. '   ' → logprob: -3.5898520946502686
    6. ' def' → logprob: -4.8398518562316895
    7. '    ' → logprob: -4.9648518562316895
    8. '    
' → logprob: -5.0898518562316895
    9. '  ' → logprob: -5.4648518562316895
    10. '
' → logprob: -5.8398518562316895

Token 55: ' def' (ID: 1056)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8682196736335754
    2. 'def' (adapté à ' def') → logprob: -0.9932196736335754
    3. ' def' → logprob: -1.7432196140289307
    4. '   ' → logprob: -4.61821985244751
    5. '    ' → logprob: -4.74321985244751
    6. '<|end|>' → logprob: -5.24321985244751
    7. ' 
' → logprob: -5.74321985244751
    8. '  ' → logprob: -6.99321985244751
    9. '     
' → logprob: -6.99321985244751
    10. '    
' → logprob: -6.99321985244751

Token 56: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.22891226410865784
    2. ' read' → logprob: -1.6039122343063354
    3. ' bit' → logprob: -6.478912353515625
    4. ' to' → logprob: -7.103912353515625
    5. ' bits' → logprob: -7.728912353515625
    6. 'read' → logprob: -8.853912353515625
    7. ' convert' → logprob: -9.103912353515625
    8. 'get' → logprob: -9.103912353515625
    9. ' write' → logprob: -10.228912353515625
    10. ' _' → logprob: -10.353912353515625

Token 57: '_bit' (ID: 39574)
  Prédit: '_bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.09532934427261353
    2. '_bit' → logprob: -2.4703292846679688
    3. '_' → logprob: -5.095329284667969
    4. '_value' → logprob: -8.970329284667969
    5. '_next' → logprob: -10.720329284667969
    6. ' _' → logprob: -11.470329284667969
    7. 'bits' → logprob: -11.470329284667969
    8. '_mask' → logprob: -11.720329284667969
    9. 'bit' → logprob: -11.970329284667969
    10. 'Bits' → logprob: -12.220329284667969

Token 58: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5023424625396729
    2. '(' → logprob: -1.0023424625396729
    3. 's' → logprob: -3.752342462539673
    4. '(s' → logprob: -5.502342224121094
    5. 'self' → logprob: -9.252342224121094
    6. ' (' → logprob: -9.877342224121094
    7. '(index' → logprob: -10.252342224121094
    8. '(i' → logprob: -11.002342224121094
    9. '<|end|>' → logprob: -11.252342224121094
    10. '_at' → logprob: -11.377342224121094

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.978233846486546e-05
    2. ' ,' → logprob: -10.375049591064453
    3. ',index' → logprob: -11.625049591064453
    4. '<|end|>' → logprob: -12.625049591064453
    5. 'self' → logprob: -13.250049591064453
    6. ')' → logprob: -14.000049591064453
    7. 's' → logprob: -14.125049591064453
    8. 'index' → logprob: -15.125049591064453
    9. ',uint' → logprob: -15.250049591064453
    10. ',int' → logprob: -15.250049591064453

Token 60: ' pos' (ID: 1253)
  Prédit: ' index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.05923819541931152
    2. 'index' → logprob: -3.9342381954193115
    3. ' position' → logprob: -4.309238433837891
    4. ' bit' → logprob: -4.434238433837891
    5. ' pos' → logprob: -5.184238433837891
    6. ' idx' → logprob: -5.934238433837891
    7. ' i' → logprob: -6.059238433837891
    8. ' self' → logprob: -7.059238433837891
    9. 'pos' → logprob: -7.934238433837891
    10. 'position' → logprob: -8.18423843383789

Token 61: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014638452790677547
    2. ')' → logprob: -4.889638423919678
    3. ':' → logprob: -5.014638423919678
    4. ' ):' → logprob: -8.639638900756836
    5. '):
' → logprob: -8.764638900756836
    6. ':int' → logprob: -11.264638900756836
    7. ' ' → logprob: -12.514638900756836
    8. 's' → logprob: -12.639638900756836
    9. '   ' → logprob: -13.139638900756836
    10. ',' → logprob: -13.264638900756836

Token 62: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.48829740285873413
    2. ' int' → logprob: -1.988297462463379
    3. ')' → logprob: -2.113297462463379
    4. ' )' → logprob: -2.113297462463379
    5. ' ' → logprob: -5.738297462463379
    6. ' ):' → logprob: -6.238297462463379
    7. ':int' → logprob: -6.488297462463379
    8. '):' → logprob: -8.238297462463379
    9. '[int' → logprob: -8.363297462463379
    10. '   ' → logprob: -8.738297462463379

Token 63: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.035817939788103104
    2. '):' → logprob: -3.410817861557007
    3. ' )' → logprob: -6.285818099975586
    4. ' ):' → logprob: -8.535818099975586
    5. '   ' → logprob: -9.660818099975586
    6. ')->' → logprob: -10.285818099975586
    7. ':' → logprob: -12.785818099975586
    8. '):
' → logprob: -12.785818099975586
    9. ' )->' → logprob: -13.035818099975586
    10. ' ' → logprob: -13.285818099975586

Token 64: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.30332720279693604
    2. '):' → logprob: -1.553327202796936
    3. '():' → logprob: -4.0533270835876465
    4. '->' → logprob: -4.4283270835876465
    5. ')' → logprob: -4.6783270835876465
    6. ' ->' → logprob: -4.9283270835876465
    7. ')->' → logprob: -6.3033270835876465
    8. '   ' → logprob: -6.9283270835876465
    9. ' :' → logprob: -7.3033270835876465
    10. '       ' → logprob: -7.8033270835876465

Token 65: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.23017653822898865
    2. 'int' → logprob: -1.605176568031311
    3. ' bool' → logprob: -5.4801764488220215
    4. 'bool' → logprob: -7.6051764488220215
    5. ' ' → logprob: -9.48017692565918
    6. '[int' → logprob: -13.10517692565918
    7. '1' → logprob: -13.23017692565918
    8. ' ' → logprob: -13.73017692565918
    9. ' str' → logprob: -13.73017692565918
    10. '	int' → logprob: -14.10517692565918

Token 66: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002721064258366823
    2. '):' → logprob: -6.127720832824707
    3. '():' → logprob: -8.627720832824707
    4. ' :' → logprob: -8.627720832824707
    5. ':return' → logprob: -9.502720832824707
    6. '<|end|>' → logprob: -10.252720832824707
    7. ',' → logprob: -11.002720832824707
    8. ':
' → logprob: -11.252720832824707
    9. ')' → logprob: -11.752720832824707
    10. ':**' → logprob: -11.752720832824707

Token 67: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34874436259269714
    2. '        ' → logprob: -1.7237443923950195
    3. '    ' → logprob: -3.0987443923950195
    4. ' return' → logprob: -3.5987443923950195
    5. ' ' → logprob: -3.9737443923950195
    6. 'return' → logprob: -4.4737443923950195
    7. '   ' → logprob: -6.2237443923950195
    8. ':' → logprob: -6.9737443923950195
    9. ' ' → logprob: -6.9737443923950195
    10. 'shift' → logprob: -6.9737443923950195

Token 68: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.14660832285881042
    2. 'return' → logprob: -2.021608352661133
    3. ' bit' → logprob: -6.521608352661133
    4. ' shift' → logprob: -6.646608352661133
    5. 'shift' → logprob: -7.396608352661133
    6. '       ' → logprob: -8.146608352661133
    7. '```' → logprob: -9.021608352661133
    8. 'bit' → logprob: -10.021608352661133
    9. '   ' → logprob: -10.771608352661133
    10. ' ' → logprob: -10.771608352661133

Token 69: ' pos' (ID: 1253)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.04168982803821564
    2. 'return' → logprob: -4.166689872741699
    3. ' bit' → logprob: -4.416689872741699
    4. ' shift' → logprob: -4.541689872741699
    5. 'shift' → logprob: -7.166689872741699
    6. ' if' → logprob: -7.291689872741699
    7. ' (' → logprob: -8.2916898727417
    8. 'bit' → logprob: -8.4166898727417
    9. ' pos' → logprob: -8.9166898727417
    10. '   ' → logprob: -8.9166898727417

Token 70: ':' (ID: 25)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.7840498685836792
    2. ')' → logprob: -0.9090498685836792
    3. ' =' → logprob: -2.9090499877929688
    4. ' ' → logprob: -3.5340499877929688
    5. '=' → logprob: -3.7840499877929688
    6. '<|end|>' → logprob: -4.159049987792969
    7. ':' → logprob: -5.409049987792969
    8. ' from' → logprob: -6.034049987792969
    9. '<|end|>' → logprob: -6.034049987792969
    10. ' )' → logprob: -6.034049987792969

Token 71: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22617001831531525
    2. '31' → logprob: -1.6011700630187988
    3. '32' → logprob: -7.601170063018799
    4. '15' → logprob: -9.10116958618164
    5. '35' → logprob: -9.85116958618164
    6. '34' → logprob: -10.72616958618164
    7. '3' → logprob: -10.97616958618164
    8. '33' → logprob: -11.35116958618164
    9. '30' → logprob: -11.47616958618164
    10. '1' → logprob: -11.60116958618164

Token 72: '1' (ID: 16)
  Prédit: '31'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '31' → logprob: -0.014243659563362598
    2. '0' → logprob: -4.2642436027526855
    3. ' ' → logprob: -10.139244079589844
    4. '32' → logprob: -11.764244079589844
    5. 'bit' → logprob: -11.889244079589844
    6. '15' → logprob: -12.139244079589844
    7. 'position' → logprob: -12.514244079589844
    8. 'the' → logprob: -12.764244079589844
    9. 'from' → logprob: -12.889244079589844
    10. 'index' → logprob: -13.139244079589844

Token 73: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.057780392467975616
    2. 'based' → logprob: -3.4327805042266846
    3. '-index' → logprob: -4.3077802658081055
    4. ' -' → logprob: -5.3077802658081055
    5. '-' → logprob: -6.8077802658081055
    6. '9' → logprob: -7.3077802658081055
    7. ' ' → logprob: -7.3077802658081055
    8. ' based' → logprob: -7.5577802658081055
    9. '6' → logprob: -7.8077802658081055
    10. '7' → logprob: -7.9327802658081055

Token 74: ' bit' (ID: 3546)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3803964853286743
    2. '<|end|>' → logprob: -1.3803964853286743
    3. '       ' → logprob: -1.7553964853286743
    4. 'def' → logprob: -3.1303963661193848
    5. ' ' → logprob: -3.1303963661193848
    6. ' bit' → logprob: -3.2553963661193848
    7. '   ' → logprob: -3.6303963661193848
    8. ',' → logprob: -3.7553963661193848
    9. 'shift' → logprob: -3.8803963661193848
    10. ' shift' → logprob: -4.380396366119385

Token 75: ' index' (ID: 3472)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0544593334197998
    2. ' =' → logprob: -1.0544593334197998
    3. 's' → logprob: -2.6794593334198
    4. '=' → logprob: -2.8044593334198
    5. '_index' → logprob: -3.1794593334198
    6. ',' → logprob: -3.3044593334198
    7. 'def' → logprob: -3.8044593334198
    8. 'index' → logprob: -4.679459571838379
    9. ' ' → logprob: -4.804459571838379
    10. '-' → logprob: -4.929459571838379

Token 76: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19658271968364716
    2. ':' → logprob: -2.821582794189453
    3. ')' → logprob: -3.071582794189453
    4. '   ' → logprob: -3.196582794189453
    5. '```' → logprob: -4.946582794189453
    6. ',' → logprob: -5.321582794189453
    7. ' ' → logprob: -5.571582794189453
    8. 'def' → logprob: -6.071582794189453
    9. '):' → logprob: -6.196582794189453
    10. '=' → logprob: -6.321582794189453

Token 77: ' left' (ID: 3561)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.0654333159327507
    2. ' left' → logprob: -2.9404332637786865
    3. 'left' → logprob: -5.315433502197266
    4. 'the' → logprob: -5.315433502197266
    5. ' right' → logprob: -7.565433502197266
    6. 'right' → logprob: -9.815433502197266
    7. ' ' → logprob: -10.315433502197266
    8. '32' → logprob: -10.440433502197266
    9. '31' → logprob: -11.315433502197266
    10. '1' → logprob: -12.190433502197266

Token 78: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4146181344985962
    2. '   ' → logprob: -2.4146180152893066
    3. ' ' → logprob: -3.0396180152893066
    4. ')' → logprob: -3.0396180152893066
    5. '```' → logprob: -3.2896180152893066
    6. ',' → logprob: -3.6646180152893066
    7. ':' → logprob: -4.289618015289307
    8. ' to' → logprob: -4.539618015289307
    9. 'def' → logprob: -4.789618015289307
    10. 'shift' → logprob: -5.164618015289307

Token 79: 'MS' (ID: 6359)
  Prédit: 'most'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'most' → logprob: -0.9441794753074646
    2. '1' → logprob: -1.3191795349121094
    3. '0' → logprob: -2.1941795349121094
    4. 'left' → logprob: -3.0691795349121094
    5. ' most' → logprob: -3.1941795349121094
    6. 'MS' → logprob: -3.6941795349121094
    7. 'the' → logprob: -3.8191795349121094
    8. ')' → logprob: -4.444179534912109
    9. '16' → logprob: -4.444179534912109
    10. ' ' → logprob: -4.694179534912109

Token 80: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.004629245959222317
    2. 'b' → logprob: -5.379629135131836
    3. 'bit' → logprob: -13.254629135131836
    4. '1' → logprob: -13.379629135131836
    5. ')' → logprob: -13.504629135131836
    6. 'Bit' → logprob: -13.629629135131836
    7. '-' → logprob: -14.129629135131836
    8. '`)' → logprob: -14.379629135131836
    9. '_' → logprob: -14.629629135131836
    10. ' B' → logprob: -15.379629135131836

Token 81: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014997448306530714
    2. ' to' → logprob: -7.251499652862549
    3. ' )' → logprob: -8.001500129699707
    4. ',' → logprob: -8.751500129699707
    5. ')
' → logprob: -9.251500129699707
    6. ' side' → logprob: -9.501500129699707
    7. ' at' → logprob: -10.876500129699707
    8. '),' → logprob: -11.126500129699707
    9. '):' → logprob: -11.751500129699707
    10. ' of' → logprob: -11.751500129699707

Token 82: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011161597445607185
    2. ' shift' → logprob: -5.136161804199219
    3. ' return' → logprob: -6.761161804199219
    4. 'shift' → logprob: -6.886161804199219
    5. '        ' → logprob: -7.136161804199219
    6. ' bit' → logprob: -7.386161804199219
    7. '   ' → logprob: -7.636161804199219
    8. ' mask' → logprob: -8.261161804199219
    9. ' n' → logprob: -9.386161804199219
    10. ' ' → logprob: -9.511161804199219

Token 83: ' if' (ID: 538)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8923702239990234
    2. ' bit' → logprob: -1.2673702239990234
    3. 'return' → logprob: -1.8923702239990234
    4. ' shift' → logprob: -3.0173702239990234
    5. 'bit' → logprob: -3.1423702239990234
    6. 'shift' → logprob: -3.3923702239990234
    7. '   ' → logprob: -4.017370223999023
    8. ' total' → logprob: -4.517370223999023
    9. 'total' → logprob: -6.642370223999023
    10. '       ' → logprob: -7.642370223999023

Token 84: ' not' (ID: 625)
  Prédit: ' pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.02078956365585327
    2. 'pos' → logprob: -3.895789623260498
    3. ' not' → logprob: -8.39578914642334
    4. '	pos' → logprob: -11.77078914642334
    5. '1' → logprob: -12.14578914642334
    6. ' ' → logprob: -12.64578914642334
    7. 'not' → logprob: -13.27078914642334
    8. '0' → logprob: -13.39578914642334
    9. '(pos' → logprob: -14.14578914642334
    10. ' self' → logprob: -14.39578914642334

Token 85: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.12595438957214355
    2. '(' → logprob: -2.5009543895721436
    3. ' ' → logprob: -3.7509543895721436
    4. '1' → logprob: -4.375954627990723
    5. '0' → logprob: -8.625954627990723
    6. ' isinstance' → logprob: -9.500954627990723
    7. '  ' → logprob: -12.125954627990723
    8. '<|end|>' → logprob: -12.500954627990723
    9. ' hasattr' → logprob: -14.250954627990723
    10. ' ' → logprob: -14.938454627990723

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011084727942943573
    2. ' ' → logprob: -4.51108455657959
    3. '(' → logprob: -10.76108455657959
    4. '   ' → logprob: -12.13608455657959
    5. '0' → logprob: -12.38608455657959
    6. ' (' → logprob: -12.51108455657959
    7. '  ' → logprob: -13.63608455657959
    8. '```' → logprob: -15.63608455657959
    9. ' isinstance' → logprob: -15.69858455657959
    10. 'pos' → logprob: -15.94858455657959

Token 87: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.009780056774616241
    2. '<=' → logprob: -4.634779930114746
    3. ' ' → logprob: -10.759779930114746
    4. ' <<=' → logprob: -14.384779930114746
    5. ' ≤' → logprob: -14.509779930114746
    6. '0' → logprob: -14.759779930114746
    7. '1' → logprob: -15.134779930114746
    8. ' <<' → logprob: -15.634779930114746
    9. '   ' → logprob: -15.759779930114746
    10. '```' → logprob: -16.009780883789062

Token 88: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0380416102707386
    2. ' pos' → logprob: -3.288041591644287
    3. '	pos' → logprob: -16.163042068481445
    4. ' ' → logprob: -18.538042068481445
    5. '_pos' → logprob: -18.913042068481445
    6. 'position' → logprob: -19.288042068481445
    7. '(pos' → logprob: -19.663042068481445
    8. ',pos' → logprob: -20.038042068481445
    9. '   ' → logprob: -20.163042068481445
    10. '.pos' → logprob: -20.288042068481445

Token 89: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.386895090341568
    2. '<=' → logprob: -1.1368950605392456
    3. '<|end|>' → logprob: -11.136895179748535
    4. '<|end|>' → logprob: -12.261895179748535
    5. ' and' → logprob: -13.511895179748535
    6. ' ' → logprob: -14.386895179748535
    7. 'and' → logprob: -14.511895179748535
    8. ')<=' → logprob: -14.511895179748535
    9. '```' → logprob: -14.761895179748535
    10. ']<=' → logprob: -14.886895179748535

Token 90: ' ' (ID: 220)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -0.00033117449493147433
    2. ' ' → logprob: -8.250330924987793
    3. '3' → logprob: -9.625330924987793
    4. 'len' → logprob: -14.250330924987793
    5. '31' → logprob: -14.500330924987793
    6. '  ' → logprob: -14.625330924987793
    7. '33' → logprob: -14.625330924987793
    8. '   ' → logprob: -14.937830924987793
    9. 'self' → logprob: -15.000330924987793
    10. '16' → logprob: -15.750330924987793

Token 91: '32' (ID: 1398)
  Prédit: '32'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -0.00017588881019037217
    2. ' ' → logprob: -9.250175476074219
    3. '3' → logprob: -9.500175476074219
    4. 'len' → logprob: -13.000175476074219
    5. 'self' → logprob: -14.125175476074219
    6. '64' → logprob: -14.875175476074219
    7. '31' → logprob: -15.250175476074219
    8. '16' → logprob: -15.250175476074219
    9. '33' → logprob: -15.437675476074219
    10. '  ' → logprob: -15.625175476074219

Token 92: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.474663108587265
    2. '):
' → logprob: -0.9746631383895874
    3. ' and' → logprob: -8.099662780761719
    4. '):
' → logprob: -9.349662780761719
    5. ' ):' → logprob: -9.724662780761719
    6. ' ):
' → logprob: -9.849662780761719
    7. ')' → logprob: -9.974662780761719
    8. ':' → logprob: -10.849662780761719
    9. '):

' → logprob: -12.099662780761719
    10. '       ' → logprob: -12.224662780761719

Token 93: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5087919235229492
    2. '           ' → logprob: -1.1337919235229492
    3. ':
' → logprob: -2.883791923522949
    4. '):
' → logprob: -5.508791923522949
    5. '):' → logprob: -5.508791923522949
    6. ' :' → logprob: -6.008791923522949
    7. ':return' → logprob: -6.258791923522949
    8. '
' → logprob: -6.383791923522949
    9. ' :
' → logprob: -6.508791923522949
    10. '       ' → logprob: -6.508791923522949

Token 94: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.43157467246055603
    2. 'raise' (adapté à ' raise') → logprob: -1.4315747022628784
    3. ' return' → logprob: -2.806574583053589
    4. '           ' → logprob: -3.306574583053589
    5. 'return' → logprob: -4.431574821472168
    6. '            ' → logprob: -6.806574821472168
    7. '
' → logprob: -7.556574821472168
    8. ' ' → logprob: -8.556574821472168
    9. '               ' → logprob: -8.806574821472168
    10. '	raise' → logprob: -9.056574821472168

Token 95: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.0036163469776511192
    2. 'Value' → logprob: -5.7536163330078125
    3. ' Index' → logprob: -7.7536163330078125
    4. 'Index' → logprob: -11.753616333007812
    5. ' Val' → logprob: -14.503616333007812
    6. ' ' → logprob: -15.128616333007812
    7. '	Value' → logprob: -15.253616333007812
    8. '_value' → logprob: -15.378616333007812
    9. '_Value' → logprob: -16.628616333007812
    10. ' value' → logprob: -17.003616333007812

Token 96: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.1269380897283554
    2. 'rror' → logprob: -2.1269381046295166
    3. 'ror' → logprob: -12.126937866210938
    4. 'error' → logprob: -13.126937866210938
    5. 'r' → logprob: -13.876937866210938
    6. 'n' → logprob: -13.876937866210938
    7. 'Value' → logprob: -15.501937866210938
    8. 'nd' → logprob: -16.001937866210938
    9. 'alue' → logprob: -16.626937866210938
    10. 'LError' → logprob: -16.751937866210938

Token 97: '("' (ID: 568)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4841140806674957
    2. '("' → logprob: -0.9841140508651733
    3. '('' → logprob: -5.359114170074463
    4. '(' → logprob: -5.984114170074463
    5. '(
' → logprob: -6.359114170074463
    6. '        
' → logprob: -8.234113693237305
    7. ',' → logprob: -8.359113693237305
    8. '(f' → logprob: -9.109113693237305
    9. '
' → logprob: -9.484113693237305
    10. '   ' → logprob: -9.734113693237305

Token 98: 'Bit' (ID: 10973)
  Prédit: 'Bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bit' → logprob: -0.44272735714912415
    2. 'pos' → logprob: -1.1927273273468018
    3. 'Position' → logprob: -3.3177273273468018
    4. 'bit' → logprob: -4.567727565765381
    5. ' Bit' → logprob: -5.317727565765381
    6. 'Pos' → logprob: -7.067727565765381
    7. ' pos' → logprob: -7.192727565765381
    8. 'Invalid' → logprob: -7.442727565765381
    9. ' bit' → logprob: -8.067727088928223
    10. 'position' → logprob: -8.942727088928223

Token 99: ' position' (ID: 4010)
  Prédit: ' position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.004585703834891319
    2. ' index' → logprob: -5.5045857429504395
    3. 'position' → logprob: -8.379585266113281
    4. 'pos' → logprob: -9.004585266113281
    5. ' pos' → logprob: -9.879585266113281
    6. ' positions' → logprob: -9.879585266113281
    7. ' ' → logprob: -10.379585266113281
    8. 'index' → logprob: -11.379585266113281
    9. ' out' → logprob: -12.254585266113281
    10. ' number' → logprob: -13.379585266113281

Token 100: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.04967089369893074
    2. ' out' → logprob: -3.049670934677124
    3. 'must' → logprob: -7.049670696258545
    4. ' should' → logprob: -8.799671173095703
    5. 'out' → logprob: -9.674671173095703
    6. 'should' → logprob: -14.549671173095703
    7. ' ' → logprob: -15.174671173095703
    8. ' outside' → logprob: -15.549671173095703
    9. '```' → logprob: -15.924671173095703
    10. '1' → logprob: -16.549671173095703

Token 101: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -1.5094070477061905e-05
    2. 'be' → logprob: -11.500015258789062
    3. ' between' → logprob: -12.875015258789062
    4. '<|end|>' → logprob: -14.000015258789062
    5. ' ' → logprob: -14.500015258789062
    6. ' range' → logprob: -15.125015258789062
    7. '1' → logprob: -15.625015258789062
    8. ' not' → logprob: -15.625015258789062
    9. '```' → logprob: -16.000015258789062
    10. 'between' → logprob: -16.875015258789062

Token 102: ' between' (ID: 2870)
  Prédit: ' between'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' between' → logprob: -0.02424744889140129
    2. 'between' → logprob: -3.899247407913208
    3. ' in' → logprob: -6.524247646331787
    4. '1' → logprob: -6.774247646331787
    5. ' ' → logprob: -7.274247646331787
    6. ' within' → logprob: -8.024247169494629
    7. 'in' → logprob: -10.649247169494629
    8. 'etween' → logprob: -11.024247169494629
    9. 'within' → logprob: -11.774247169494629
    10. '32' → logprob: -12.024247169494629

Token 103: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.17974551022052765
    2. ' ' → logprob: -1.8047455549240112
    3. '```' → logprob: -14.4297456741333
    4. '32' → logprob: -16.054744720458984
    5. '   ' → logprob: -16.304744720458984
    6. '16' → logprob: -17.242244720458984
    7. '  ' → logprob: -17.929744720458984
    8. '`' → logprob: -18.117244720458984
    9. '<|end|>' → logprob: -18.554744720458984
    10. '
' → logprob: -18.617244720458984

Token 104: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001963881659321487
    2. ' ' → logprob: -8.62519645690918
    3. '32' → logprob: -11.00019645690918
    4. '```' → logprob: -16.12519645690918
    5. '16' → logprob: -16.75019645690918
    6. '33' → logprob: -18.62519645690918
    7. '
' → logprob: -18.68769645690918
    8. 'and' → logprob: -18.93769645690918
    9. '   ' → logprob: -19.00019645690918
    10. '`' → logprob: -19.37519645690918

Token 105: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.012520836666226387
    2. 'and' → logprob: -4.387520790100098
    3. ' ' → logprob: -12.512520790100098
    4. '32' → logprob: -13.387520790100098
    5. '   ' → logprob: -13.512520790100098
    6. '1' → logprob: -13.512520790100098
    7. ',' → logprob: -13.887520790100098
    8. ')' → logprob: -14.137520790100098
    9. '```' → logprob: -14.387520790100098
    10. '0' → logprob: -15.137520790100098

Token 106: ' ' (ID: 220)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -0.08894447982311249
    2. ' ' → logprob: -2.463944435119629
    3. '33' → logprob: -13.526444435119629
    4. '31' → logprob: -13.901444435119629
    5. '34' → logprob: -14.713944435119629
    6. '```' → logprob: -15.026444435119629
    7. '  ' → logprob: -15.463944435119629
    8. '16' → logprob: -15.713944435119629
    9. '36' → logprob: -15.901444435119629
    10. '
' → logprob: -16.151445388793945

Token 107: '32' (ID: 1398)
  Prédit: '32'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -0.00011009939044015482
    2. ' ' → logprob: -9.125109672546387
    3. '```' → logprob: -14.875109672546387
    4. '33' → logprob: -15.250109672546387
    5. '
' → logprob: -16.000110626220703
    6. '31' → logprob: -16.312610626220703
    7. '34' → logprob: -16.437610626220703
    8. '   ' → logprob: -16.625110626220703
    9. '3' → logprob: -16.875110626220703
    10. '  ' → logprob: -17.187610626220703

Token 108: '.")
' (ID: 27834)
  Prédit: '")
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.2616964280605316
    2. ')")
' → logprob: -1.761696457862854
    3. '")' → logprob: -3.0116963386535645
    4. ')")' → logprob: -5.6366963386535645
    5. ')' → logprob: -6.0116963386535645
    6. '")
' → logprob: -6.3866963386535645
    7. '.")
' → logprob: -6.7616963386535645
    8. '       ' → logprob: -9.011696815490723
    9. ')
' → logprob: -9.511696815490723
    10. ' ")
' → logprob: -10.011696815490723

Token 109: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020992238074541092
    2. ' mask' → logprob: -4.770992279052734
    3. ' shift' → logprob: -5.020992279052734
    4. 'mask' → logprob: -6.395992279052734
    5. 'shift' → logprob: -6.395992279052734
    6. ' bit' → logprob: -6.895992279052734
    7. ' return' → logprob: -7.145992279052734
    8. 'bit' → logprob: -8.895992279052734
    9. '
' → logprob: -9.020992279052734
    10. 'return' → logprob: -9.395992279052734

Token 110: ' shift' (ID: 12847)
  Prédit: ' shift'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shift' → logprob: -0.7782107591629028
    2. ' bit' → logprob: -1.0282107591629028
    3. 'shift' (adapté à ' shift') → logprob: -2.7782106399536133
    4. '       ' → logprob: -3.0282106399536133
    5. ' return' → logprob: -3.2782106399536133
    6. 'bit' → logprob: -3.9032106399536133
    7. ' mask' → logprob: -4.653210639953613
    8. 'return' → logprob: -5.778210639953613
    9. 'mask' → logprob: -6.778210639953613
    10. ' shifted' → logprob: -7.903210639953613

Token 111: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08359231799840927
    2. '=' → logprob: -2.958592414855957
    3. '_amount' → logprob: -3.583592414855957
    4. 'amount' → logprob: -8.708592414855957
    5. '   ' → logprob: -8.958592414855957
    6. 'ed' → logprob: -9.583592414855957
    7. ' ' → logprob: -9.958592414855957
    8. 's' → logprob: -10.458592414855957
    9. '_count' → logprob: -10.833592414855957
    10. '_val' → logprob: -11.083592414855957

Token 112: ' ' (ID: 220)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -0.0011899876408278942
    2. ' ' → logprob: -6.751190185546875
    3. '31' → logprob: -11.501190185546875
    4. '33' → logprob: -12.376190185546875
    5. '   ' → logprob: -12.376190185546875
    6. '(' → logprob: -14.626190185546875
    7. '       ' → logprob: -15.501190185546875
    8. '34' → logprob: -15.876190185546875
    9. '```' → logprob: -16.251190185546875
    10. '    ' → logprob: -16.376190185546875

Token 113: '32' (ID: 1398)
  Prédit: '32'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -0.0002146226615877822
    2. ' ' → logprob: -8.625214576721191
    3. '(' → logprob: -10.750214576721191
    4. '31' → logprob: -11.500214576721191
    5. '33' → logprob: -13.375214576721191
    6. '   ' → logprob: -14.000214576721191
    7. '```' → logprob: -15.125214576721191
    8. ' (' → logprob: -15.500214576721191
    9. '`' → logprob: -16.375215530395508
    10. '34' → logprob: -16.500215530395508

Token 114: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6933445930480957
    2. ' -' → logprob: -0.6933445930480957
    3. '-pos' → logprob: -8.818344116210938
    4. '-token' → logprob: -10.318344116210938
    5. '-p' → logprob: -11.568344116210938
    6. ' ' → logprob: -13.068344116210938
    7. '-bit' → logprob: -13.568344116210938
    8. '-position' → logprob: -14.318344116210938
    9. '-m' → logprob: -14.943344116210938
    10. '-key' → logprob: -15.193344116210938

Token 115: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.04858771339058876
    2. ' pos' → logprob: -3.0485877990722656
    3. '(pos' → logprob: -15.423587799072266
    4. '	pos' → logprob: -15.798587799072266
    5. '_pos' → logprob: -17.298587799072266
    6. '[pos' → logprob: -17.548587799072266
    7. 'position' → logprob: -18.173587799072266
    8. ' ' → logprob: -18.798587799072266
    9. ',pos' → logprob: -18.923587799072266
    10. '```' → logprob: -18.923587799072266

Token 116: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16633976995944977
    2. '       ' → logprob: -1.9163397550582886
    3. ' self' → logprob: -6.541339874267578
    4. ' ' → logprob: -6.791339874267578
    5. 'self' → logprob: -7.041339874267578
    6. '
' → logprob: -7.416339874267578
    7. '<|end|>' → logprob: -7.541339874267578
    8. '   ' → logprob: -8.041339874267578
    9. '        
' → logprob: -8.666339874267578
    10. '  
' → logprob: -9.041339874267578

Token 117: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5775027871131897
    2. '       ' → logprob: -1.327502727508545
    3. '
' → logprob: -2.077502727508545
    4. ' )' → logprob: -4.327502727508545
    5. 'return' → logprob: -4.452502727508545
    6. ' return' → logprob: -5.327502727508545
    7. ')
' → logprob: -5.452502727508545
    8. '>>' → logprob: -6.202502727508545
    9. ' >>' → logprob: -6.327502727508545
    10. ' ' → logprob: -6.327502727508545

Token 118: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.12848885357379913
    2. ' return' → logprob: -2.253488779067993
    3. '       ' → logprob: -4.253489017486572
    4. '
' → logprob: -7.003489017486572
    5. ')' → logprob: -8.128488540649414
    6. ')return' → logprob: -10.253488540649414
    7. '```' → logprob: -10.753488540649414
    8. ')
' → logprob: -10.878488540649414
    9. '	return' → logprob: -11.753488540649414
    10. ':return' → logprob: -11.878488540649414

Token 119: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.07889551669359207
    2. ' (' → logprob: -2.5788955688476562
    3. '       ' → logprob: -13.578895568847656
    4. '   ' → logprob: -13.828895568847656
    5. '(this' → logprob: -13.953895568847656
    6. '(value' → logprob: -14.703895568847656
    7. '(bit' → logprob: -14.828895568847656
    8. ' ' → logprob: -15.203895568847656
    9. '(v' → logprob: -15.328895568847656
    10. '(val' → logprob: -15.453895568847656

Token 120: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006554916966706514
    2. ' self' → logprob: -5.256555080413818
    3. '(self' → logprob: -6.631555080413818
    4. ' (' → logprob: -13.50655460357666
    5. '       ' → logprob: -15.00655460357666
    6. ')' → logprob: -15.50655460357666
    7. '[self' → logprob: -15.75655460357666
    8. '
' → logprob: -16.506555557250977
    9. '	self' → logprob: -17.381555557250977
    10. '           ' → logprob: -17.381555557250977

Token 121: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.0003212805895600468
    2. '.' → logprob: -8.125321388244629
    3. ' .' → logprob: -11.250321388244629
    4. 'value' → logprob: -11.375321388244629
    5. ').' → logprob: -14.750321388244629
    6. ' value' → logprob: -15.375321388244629
    7. '.Value' → logprob: -17.375320434570312
    8. '.val' → logprob: -17.375320434570312
    9. '```' → logprob: -17.375320434570312
    10. '`.' → logprob: -17.750320434570312

Token 122: ' >>' (ID: 6832)
  Prédit: ' >>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >>' → logprob: -0.004668526351451874
    2. '>>' → logprob: -5.379668712615967
    3. ' ' → logprob: -10.629668235778809
    4. ' ' → logprob: -11.879668235778809
    5. ' >' → logprob: -12.004668235778809
    6. ' &' → logprob: -12.379668235778809
    7. ' >>=' → logprob: -12.879668235778809
    8. '>' → logprob: -12.879668235778809
    9. ')' → logprob: -14.504668235778809
    10. ' >>
' → logprob: -14.504668235778809

Token 123: ' shift' (ID: 12847)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.07889056205749512
    2. ' shift' → logprob: -2.578890562057495
    3. ' ' → logprob: -14.828890800476074
    4. 'hift' → logprob: -15.328890800476074
    5. '.shift' → logprob: -16.453889846801758
    6. '```' → logprob: -16.703889846801758
    7. '_shift' → logprob: -16.828889846801758
    8. ')' → logprob: -18.328889846801758
    9. 'sh' → logprob: -18.328889846801758
    10. '<|end|>' → logprob: -18.328889846801758

Token 124: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00043615259346552193
    2. ' )' → logprob: -7.750436305999756
    3. ')&' → logprob: -12.125435829162598
    4. '1' → logprob: -16.750436782836914
    5. '&' → logprob: -17.250436782836914
    6. ')
' → logprob: -18.500436782836914
    7. '）' → logprob: -18.625436782836914
    8. ' &' → logprob: -18.750436782836914
    9. '`)' → logprob: -18.875436782836914
    10. '```' → logprob: -19.250436782836914

Token 125: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.16023612022399902
    2. '&' → logprob: -1.910236120223999
    3. '&amp' → logprob: -12.160236358642578
    4. ')&' → logprob: -12.660236358642578
    5. ' ' → logprob: -13.910236358642578
    6. ' &
' → logprob: -14.035236358642578
    7. '&nbsp' → logprob: -14.285236358642578
    8. ')' → logprob: -15.035236358642578
    9. '&
' → logprob: -15.035236358642578
    10. ' &)' → logprob: -15.285236358642578

Token 126: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0067154900170862675
    2. ' ' → logprob: -5.006715297698975
    3. '0' → logprob: -16.381715774536133
    4. '   ' → logprob: -18.006715774536133
    5. '```' → logprob: -18.631715774536133
    6. '`' → logprob: -19.506715774536133
    7. ' ' → logprob: -19.506715774536133
    8. '
' → logprob: -19.631715774536133
    9. '' → logprob: -20.006715774536133
    10. '  ' → logprob: -20.381715774536133

Token 127: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -12.87500286102295
    3. '0' → logprob: -15.37500286102295
    4. '```' → logprob: -18.375001907348633
    5. '`' → logprob: -20.000001907348633
    6. '   ' → logprob: -20.125001907348633
    7. '(' → logprob: -20.875001907348633
    8. '' → logprob: -21.312501907348633
    9. '
' → logprob: -21.375001907348633
    10. '01' → logprob: -21.437501907348633

Token 128: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 129: '   ' (ID: 271)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.3646712899208069
    2. '
' → logprob: -1.239671230316162
    3. '```' → logprob: -5.239671230316162
    4. '   ' → logprob: -5.489671230316162
    5. ' ' → logprob: -6.614671230316162
    6. ' class' → logprob: -6.739671230316162
    7. '    
' → logprob: -6.864671230316162
    8. ' 
' → logprob: -6.864671230316162
    9. '  
' → logprob: -7.239671230316162
    10. '

' → logprob: -8.11467170715332

Token 130: ' def' (ID: 1056)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.011200725100934505
    2. 'def' (adapté à ' def') → logprob: -4.511200904846191
    3. '   ' → logprob: -9.761200904846191
    4. ' class' → logprob: -9.761200904846191
    5. ' ' → logprob: -11.136200904846191
    6. '```' → logprob: -11.886200904846191
    7. ' def' → logprob: -12.386200904846191
    8. 'from' → logprob: -12.636200904846191
    9. '@' → logprob: -13.636200904846191
    10. '@property' → logprob: -14.011200904846191

Token 131: ' __' (ID: 2516)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.2163257598876953
    2. 'get' → logprob: -2.0913257598876953
    3. ' __' → logprob: -3.5913257598876953
    4. ' to' → logprob: -4.591325759887695
    5. 'to' → logprob: -4.966325759887695
    6. '__' → logprob: -5.341325759887695
    7. ' read' → logprob: -5.466325759887695
    8. ' extract' → logprob: -5.591325759887695
    9. ' bit' → logprob: -6.341325759887695
    10. ' set' → logprob: -6.341325759887695

Token 132: 'repr' (ID: 67002)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.6236218810081482
    2. 'repr' → logprob: -0.8736218810081482
    3. 'len' → logprob: -3.748621940612793
    4. 'int' → logprob: -4.623621940612793
    5. 'getitem' → logprob: -4.623621940612793
    6. 'eq' → logprob: -6.373621940612793
    7. 'iter' → logprob: -7.248621940612793
    8. 'l' → logprob: -7.498621940612793
    9. 'get' → logprob: -8.373621940612793
    10. 'init' → logprob: -9.998621940612793

Token 133: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.029907960444688797
    2. '__' → logprob: -3.5299079418182373
    3. '__('' → logprob: -9.529908180236816
    4. '__(
' → logprob: -9.654908180236816
    5. '__((' → logprob: -11.779908180236816
    6. '__("' → logprob: -12.404908180236816
    7. '(self' → logprob: -12.904908180236816
    8. '___' → logprob: -12.904908180236816
    9. '(' → logprob: -13.654908180236816
    10. '__.__' → logprob: -14.154908180236816

Token 134: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00026336227892898023
    2. ')' → logprob: -8.250263214111328
    3. ' self' → logprob: -13.875263214111328
    4. '_self' → logprob: -14.375263214111328
    5. '(self' → logprob: -15.500263214111328
    6. 'Self' → logprob: -15.625263214111328
    7. '<|end|>' → logprob: -17.750263214111328
    8. '$self' → logprob: -17.875263214111328
    9. '	self' → logprob: -18.000263214111328
    10. '0' → logprob: -18.375263214111328

Token 135: '):
' (ID: 1883)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.7000761032104492
    2. '__)' → logprob: -0.7000761032104492
    3. '__(' → logprob: -5.325076103210449
    4. '__('' → logprob: -6.700076103210449
    5. '__)
' → logprob: -8.82507610321045
    6. '__).' → logprob: -9.20007610321045
    7. '__),' → logprob: -9.45007610321045
    8. '__:' → logprob: -9.57507610321045
    9. '__)

' → logprob: -9.95007610321045
    10. '__))' → logprob: -9.95007610321045

Token 136: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06620145589113235
    2. 'return' → logprob: -3.3162014484405518
    3. ' return' → logprob: -3.8162014484405518
    4. ' f' → logprob: -5.691201686859131
    5. 'f' → logprob: -6.191201686859131
    6. '   ' → logprob: -8.191201210021973
    7. '"' → logprob: -10.941201210021973
    8. '	return' → logprob: -12.191201210021973
    9. ':return' → logprob: -12.191201210021973
    10. '    ' → logprob: -12.316201210021973

Token 137: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5792166590690613
    2. 'return' (adapté à ' return') → logprob: -0.8292166590690613
    3. ' f' → logprob: -6.329216480255127
    4. 'f' → logprob: -7.079216480255127
    5. '       ' → logprob: -7.579216480255127
    6. '   ' → logprob: -8.954216957092285
    7. ' ' → logprob: -13.204216957092285
    8. '    ' → logprob: -13.329216957092285
    9. '	return' → logprob: -13.579216957092285
    10. '{return' → logprob: -15.204216957092285

Token 138: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.38687264919281006
    2. 'f' → logprob: -1.13687264919281
    3. '	f' → logprob: -14.136872291564941
    4. ' ' → logprob: -15.011872291564941
    5. ''f' → logprob: -15.886872291564941
    6. '(f' → logprob: -16.261873245239258
    7. '   ' → logprob: -16.261873245239258
    8. ' hex' → logprob: -16.511873245239258
    9. ' ' → logprob: -16.636873245239258
    10. 'hex' → logprob: -16.636873245239258

Token 139: '"' (ID: 1)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.12266623973846436
    2. '(f' → logprob: -2.247666358947754
    3. '"' → logprob: -5.622666358947754
    4. '"<' → logprob: -5.872666358947754
    5. '"(' → logprob: -6.497666358947754
    6. '`' → logprob: -7.622666358947754
    7. ''f' → logprob: -7.622666358947754
    8. ''(' → logprob: -8.247666358947754
    9. ''<' → logprob: -8.747666358947754
    10. ''' → logprob: -8.747666358947754

Token 140: 'Bit' (ID: 10973)
  Prédit: 'Bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bit' → logprob: -0.0051169381476938725
    2. '<' → logprob: -5.505116939544678
    3. '"' → logprob: -7.630116939544678
    4. '"<' → logprob: -8.50511646270752
    5. ''' → logprob: -8.63011646270752
    6. 'f' → logprob: -10.13011646270752
    7. ''<' → logprob: -10.63011646270752
    8. ' Bit' → logprob: -10.63011646270752
    9. 'Hex' → logprob: -10.63011646270752
    10. '(Bit' → logprob: -11.00511646270752

Token 141: 'Stream' (ID: 4193)
  Prédit: 'Stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stream' → logprob: -1.8624639324116288e-06
    2. 'stream' → logprob: -14.125001907348633
    3. 'String' → logprob: -14.250001907348633
    4. 'St' → logprob: -16.750001907348633
    5. 'S' → logprob: -17.125001907348633
    6. 'Str' → logprob: -17.250001907348633
    7. ' Stream' → logprob: -17.250001907348633
    8. '{' → logprob: -17.375001907348633
    9. '```' → logprob: -17.375001907348633
    10. '_stream' → logprob: -17.625001907348633

Token 142: '({' (ID: 3972)
  Prédit: '({'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -0.04022860527038574
    2. '('{' → logprob: -3.5402286052703857
    3. '(hex' → logprob: -4.790228843688965
    4. '(self' → logprob: -6.665228843688965
    5. '(' → logprob: -7.290228843688965
    6. '<{' → logprob: -9.915228843688965
    7. '(f' → logprob: -9.915228843688965
    8. '(<' → logprob: -11.040228843688965
    9. '("{' → logprob: -11.290228843688965
    10. '(value' → logprob: -11.665228843688965

Token 143: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015395039226859808
    2. 'repr' → logprob: -6.501539707183838
    3. 'hex' → logprob: -10.37653923034668
    4. ' self' → logprob: -12.25153923034668
    5. ' repr' → logprob: -14.62653923034668
    6. '```' → logprob: -15.75153923034668
    7. '`' → logprob: -15.87653923034668
    8. ''' → logprob: -16.25153923034668
    9. '{' → logprob: -16.37653923034668
    10. '   ' → logprob: -16.37653923034668

Token 144: '.hex' (ID: 111068)
  Prédit: '.hex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.hex' → logprob: -1.0280383548888494e-06
    2. '.' → logprob: -14.250000953674316
    3. 'hex' → logprob: -16.125001907348633
    4. ' .' → logprob: -16.500001907348633
    5. '.Hex' → logprob: -16.875001907348633
    6. '.he' → logprob: -17.125001907348633
    7. ').' → logprob: -18.250001907348633
    8. '.value' → logprob: -18.500001907348633
    9. '.bit' → logprob: -19.000001907348633
    10. '.self' → logprob: -19.250001907348633

Token 145: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -5.9153885558771435e-06
    2. 'string' → logprob: -12.500005722045898
    3. '_' → logprob: -13.375005722045898
    4. 'String' → logprob: -15.500005722045898
    5. '_str' → logprob: -15.750005722045898
    6. '_String' → logprob: -16.7500057220459
    7. '_STRING' → logprob: -16.7500057220459
    8. '_stream' → logprob: -17.3750057220459
    9. '_strings' → logprob: -17.6250057220459
    10. '}_' → logprob: -18.0000057220459

Token 146: '})' (ID: 9263)
  Prédit: '})'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '})' → logprob: -3.130576806142926e-05
    2. '!' → logprob: -11.375031471252441
    3. ')' → logprob: -11.750031471252441
    4. ' })' → logprob: -12.500031471252441
    5. '}")' → logprob: -13.125031471252441
    6. '"})' → logprob: -13.500031471252441
    7. ''})' → logprob: -13.500031471252441
    8. ')"' → logprob: -13.750031471252441
    9. ')}' → logprob: -14.125031471252441
    10. '}' → logprob: -14.375031471252441

Token 147: '"

' (ID: 2678)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3448500335216522
    2. '")' → logprob: -1.4698500633239746
    3. '"' → logprob: -3.4698500633239746
    4. '<|end|>' → logprob: -3.7198500633239746
    5. '```' → logprob: -5.594850063323975
    6. '}' → logprob: -6.969850063323975
    7. '<|end|>' → logprob: -7.969850063323975
    8. '"""' → logprob: -8.344849586486816
    9. ')"' → logprob: -8.469849586486816
    10. '">' → logprob: -9.094849586486816

Token 148: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.03840693086385727
    2. '
' → logprob: -3.9134068489074707
    3. '

' → logprob: -4.038406848907471
    4. ' class' → logprob: -10.163407325744629
    5. '```' → logprob: -10.788407325744629
    6. '
' → logprob: -11.413407325744629
    7. '<class' → logprob: -12.913407325744629
    8. '"class' → logprob: -14.038407325744629
    9. '


' → logprob: -14.038407325744629
    10. '' → logprob: -14.288407325744629

Token 149: ' Component' (ID: 10996)
  Prédit: ' Packet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Packet' → logprob: -0.3325637876987457
    2. ' Parser' → logprob: -1.5825637578964233
    3. ' Decoder' → logprob: -3.207563877105713
    4. ' Abstract' → logprob: -4.457563877105713
    5. ' Instruction' → logprob: -5.332563877105713
    6. ' ABC' → logprob: -5.707563877105713
    7. ' Payload' → logprob: -6.082563877105713
    8. ' Data' → logprob: -6.457563877105713
    9. ' Binary' → logprob: -6.582563877105713
    10. ' Processor' → logprob: -6.582563877105713

Token 150: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.249780638725497e-05
    2. ' (' → logprob: -11.000032424926758
    3. '(Abstract' → logprob: -11.875032424926758
    4. '(Component' → logprob: -12.125032424926758
    5. ':' → logprob: -13.500032424926758
    6. 'Base' → logprob: -15.125032424926758
    7. 'Component' → logprob: -15.125032424926758
    8. '(
' → logprob: -16.125032424926758
    9. '```' → logprob: -16.125032424926758
    10. 'Abstract' → logprob: -16.250032424926758

Token 151: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.0013344056205824018
    2. ' ABC' → logprob: -6.626334190368652
    3. ')' → logprob: -12.626334190368652
    4. ' ' → logprob: -13.876334190368652
    5. '):
' → logprob: -14.001334190368652
    6. 'AB' → logprob: -14.126334190368652
    7. 'ABCDE' → logprob: -14.126334190368652
    8. ',' → logprob: -14.626334190368652
    9. '   ' → logprob: -14.876334190368652
    10. 'abc' → logprob: -15.376334190368652

Token 152: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006348780007101595
    2. '):
' → logprob: -7.500634670257568
    3. ')' → logprob: -10.125635147094727
    4. ':' → logprob: -10.500635147094727
    5. '):
' → logprob: -12.375635147094727
    6. '):

' → logprob: -13.000635147094727
    7. ' ):' → logprob: -13.000635147094727
    8. '>):' → logprob: -13.375635147094727
    9. '[]):' → logprob: -14.000635147094727
    10. ',' → logprob: -14.125635147094727

Token 153: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005435812287032604
    2. '    
' → logprob: -5.755435943603516
    3. '
' → logprob: -6.505435943603516
    4. ':' → logprob: -8.630435943603516
    5. ' indentation' → logprob: -8.880435943603516
    6. '<|end|>' → logprob: -8.880435943603516
    7. ' 
' → logprob: -10.005435943603516
    8. '   ' → logprob: -10.130435943603516
    9. '    ' → logprob: -10.630435943603516
    10. ')' → logprob: -10.755435943603516

Token 154: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028296655043959618
    2. ' @' → logprob: -3.903296709060669
    3. '@' (adapté à ' @') → logprob: -5.65329647064209
    4. '    
' → logprob: -6.40329647064209
    5. ' def' → logprob: -6.77829647064209
    6. '
' → logprob: -6.90329647064209
    7. 'def' → logprob: -8.27829647064209
    8. ' 
' → logprob: -9.90329647064209
    9. '    ' → logprob: -9.90329647064209
    10. '   ' → logprob: -10.77829647064209

Token 155: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.0005606581107713282
    2. 'property' → logprob: -7.500560760498047
    3. 'ab' → logprob: -13.000560760498047
    4. 'staticmethod' → logprob: -13.000560760498047
    5. ' abstract' → logprob: -13.625560760498047
    6. 'abs' → logprob: -14.125560760498047
    7. 'classmethod' → logprob: -14.125560760498047
    8. 'abc' → logprob: -15.375560760498047
    9. '@property' → logprob: -16.750560760498047
    10. '.abstract' → logprob: -17.375560760498047

Token 156: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.038063641637563705
    2. '_method' → logprob: -3.2880635261535645
    3. 'classmethod' → logprob: -11.413064002990723
    4. '_' → logprob: -12.413064002990723
    5. 'meth' → logprob: -12.913064002990723
    6. 'ethod' → logprob: -13.663064002990723
    7. '_m' → logprob: -13.913064002990723
    8. ' method' → logprob: -13.913064002990723
    9. 'staticmethod' → logprob: -14.913064002990723
    10. '__' → logprob: -14.913064002990723

Token 157: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06332094222307205
    2. 'def' → logprob: -2.8133208751678467
    3. ' def' → logprob: -7.188321113586426
    4. 'method' → logprob: -7.688321113586426
    5. '    
' → logprob: -9.313321113586426
    6. '
' → logprob: -11.188321113586426
    7. '_method' → logprob: -11.563321113586426
    8. '<|end|>' → logprob: -11.938321113586426
    9. '  
' → logprob: -12.313321113586426
    10. 'classmethod' → logprob: -12.688321113586426

Token 158: '   ' (ID: 271)
  Prédit: 'method'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.17655618488788605
    2. 'def' → logprob: -2.05155611038208
    3. '
' → logprob: -3.92655611038208
    4. '_method' → logprob: -4.42655611038208
    5. ' def' → logprob: -6.80155611038208
    6. '    
' → logprob: -8.426556587219238
    7. ' method' → logprob: -8.926556587219238
    8. '   ' → logprob: -9.301556587219238
    9. 'classmethod' → logprob: -10.676556587219238
    10. 'ethod' → logprob: -10.926556587219238

Token 159: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0026592432986944914
    2. 'method' → logprob: -6.752659320831299
    3. ' def' → logprob: -7.002659320831299
    4. '
' → logprob: -7.502659320831299
    5. 'property' → logprob: -11.37765884399414
    6. 'classmethod' → logprob: -11.50265884399414
    7. 'staticmethod' → logprob: -13.25265884399414
    8. '   ' → logprob: -13.87765884399414
    9. '    
' → logprob: -14.37765884399414
    10. 'bit' → logprob: -14.62765884399414

Token 160: ' extract' (ID: 13424)
  Prédit: ' render'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' render' → logprob: -0.9235897660255432
    2. ' process' → logprob: -1.5485897064208984
    3. ' parse' → logprob: -2.6735897064208984
    4. 'render' → logprob: -2.6735897064208984
    5. 'process' → logprob: -2.7985897064208984
    6. ' evaluate' → logprob: -3.0485897064208984
    7. ' decode' → logprob: -3.5485897064208984
    8. ' execute' → logprob: -3.9235897064208984
    9. ' encode' → logprob: -4.298589706420898
    10. 'evaluate' → logprob: -4.423589706420898

Token 161: '_bits' (ID: 48415)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.13025906682014465
    2. '_bits' → logprob: -3.2552590370178223
    3. '_data' → logprob: -3.5052590370178223
    4. '_bit' → logprob: -4.130259037017822
    5. '(' → logprob: -4.255259037017822
    6. '_value' → logprob: -4.505259037017822
    7. '_' → logprob: -4.755259037017822
    8. '_component' → logprob: -7.005259037017822
    9. 'self' → logprob: -7.255259037017822
    10. '_self' → logprob: -7.505259037017822

Token 162: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00041125001735053957
    2. '(' → logprob: -8.000411033630371
    3. 'self' → logprob: -9.750411033630371
    4. ' (' → logprob: -11.250411033630371
    5. '(s' → logprob: -13.500411033630371
    6. '   ' → logprob: -13.875411033630371
    7. '(
' → logprob: -14.000411033630371
    8. ' self' → logprob: -14.500411033630371
    9. 'from' → logprob: -15.125411033630371
    10. '
' → logprob: -16.625411987304688

Token 163: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016971589997410774
    2. 'self' → logprob: -4.266971588134766
    3. '):' → logprob: -6.641971588134766
    4. ')' → logprob: -7.266971588134766
    5. ' ,' → logprob: -7.516971588134766
    6. '):
' → logprob: -9.266971588134766
    7. ' self' → logprob: -10.141971588134766
    8. ',self' → logprob: -10.391971588134766
    9. '   ' → logprob: -10.516971588134766
    10. '       ' → logprob: -11.516971588134766

Token 164: ' bit' (ID: 3546)
  Prédit: ' bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -1.057188868522644
    2. 'bit' → logprob: -1.057188868522644
    3. 'self' → logprob: -1.682188868522644
    4. ' self' → logprob: -2.3071889877319336
    5. ')' → logprob: -5.682188987731934
    6. 'stream' → logprob: -5.682188987731934
    7. ' stream' → logprob: -5.807188987731934
    8. ' data' → logprob: -6.432188987731934
    9. 'bits' → logprob: -6.557188987731934
    10. ' bits' → logprob: -6.682188987731934

Token 165: 'stream' (ID: 8598)
  Prédit: '_stream'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stream' → logprob: -0.5781313180923462
    2. 'stream' → logprob: -0.8281313180923462
    3. 's' → logprob: -6.828131198883057
    4. 'pos' → logprob: -8.328131675720215
    5. ' stream' → logprob: -8.578131675720215
    6. '_position' → logprob: -8.953131675720215
    7. 'Stream' → logprob: -8.953131675720215
    8. '):' → logprob: -9.453131675720215
    9. '_pos' → logprob: -9.453131675720215
    10. '   ' → logprob: -9.578131675720215

Token 166: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5203232765197754
    2. ',' → logprob: -1.1453232765197754
    3. '):' → logprob: -2.5203232765197754
    4. ')' → logprob: -5.895323276519775
    5. ' :' → logprob: -6.270323276519775
    6. ' ):' → logprob: -6.520323276519775
    7. ' ,' → logprob: -7.270323276519775
    8. '   ' → logprob: -8.770322799682617
    9. ' )' → logprob: -9.645322799682617
    10. '):
' → logprob: -10.520322799682617

Token 167: ' Bit' (ID: 9422)
  Prédit: ' Bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Bit' → logprob: -0.048723623156547546
    2. 'Bit' → logprob: -3.0487236976623535
    3. ')' → logprob: -9.173723220825195
    4. ' bit' → logprob: -11.173723220825195
    5. ' ' → logprob: -12.048723220825195
    6. ' )' → logprob: -12.548723220825195
    7. '(Bit' → logprob: -12.923723220825195
    8. '   ' → logprob: -13.423723220825195
    9. 'bit' → logprob: -13.923723220825195
    10. '.Bit' → logprob: -14.298723220825195

Token 168: 'Stream' (ID: 4193)
  Prédit: 'Stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stream' → logprob: -0.00011391390580683947
    2. 'stream' → logprob: -9.125113487243652
    3. '_stream' → logprob: -12.875113487243652
    4. '_Stream' → logprob: -13.750113487243652
    5. ' Stream' → logprob: -15.625113487243652
    6. 'estream' → logprob: -15.750113487243652
    7. '_STREAM' → logprob: -15.875113487243652
    8. 'S' → logprob: -16.25011444091797
    9. 'astream' → logprob: -16.25011444091797
    10. 'ostream' → logprob: -16.37511444091797

Token 169: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3930666148662567
    2. ')' → logprob: -1.143066644668579
    3. '):' → logprob: -5.14306640625
    4. '   ' → logprob: -8.26806640625
    5. ' ,' → logprob: -10.26806640625
    6. ' )' → logprob: -11.01806640625
    7. ')->' → logprob: -12.14306640625
    8. '       ' → logprob: -12.39306640625
    9. ',)' → logprob: -12.39306640625
    10. ',pos' → logprob: -12.64306640625

Token 170: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.039172153919935226
    2. ' pass' → logprob: -3.2891721725463867
    3. '<|end|>' → logprob: -7.164172172546387
    4. 'pass' → logprob: -8.414172172546387
    5. '   ' → logprob: -9.914172172546387
    6. ' ' → logprob: -10.289172172546387
    7. '    ' → logprob: -10.914172172546387
    8. '...' → logprob: -11.539172172546387
    9. '	pass' → logprob: -11.914172172546387
    10. ' ...' → logprob: -11.914172172546387

Token 171: ' pass' (ID: 1853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25477373600006104
    2. ' pass' → logprob: -1.504773736000061
    3. 'pass' (adapté à ' pass') → logprob: -5.8797736167907715
    4. '...' → logprob: -11.25477409362793
    5. '   ' → logprob: -11.37977409362793
    6. '	pass' → logprob: -12.12977409362793
    7. '<|end|>' → logprob: -12.12977409362793
    8. ' ...' → logprob: -12.25477409362793
    9. ' ' → logprob: -12.87977409362793
    10. '      ' → logprob: -14.37977409362793

Token 172: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 173: '   ' (ID: 271)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.2018072009086609
    2. '
' → logprob: -1.7018072605133057
    3. '

' → logprob: -8.326807022094727
    4. '<|end|>' → logprob: -9.576807022094727
    5. ' class' → logprob: -9.951807022094727
    6. '
' → logprob: -11.576807022094727
    7. '   ' → logprob: -12.076807022094727
    8. '  
' → logprob: -12.326807022094727
    9. '    
' → logprob: -12.326807022094727
    10. '```' → logprob: -12.701807022094727

Token 174: ' @' (ID: 759)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0011972516076639295
    2. '
' → logprob: -6.751197338104248
    3. ' class' → logprob: -11.00119686126709
    4. '

' → logprob: -12.12619686126709
    5. 'def' → logprob: -12.87619686126709
    6. '   ' → logprob: -14.25119686126709
    7. '```' → logprob: -15.00119686126709
    8. '    
' → logprob: -15.37619686126709
    9. '
' → logprob: -15.62619686126709
    10. 'import' → logprob: -15.75119686126709

Token 175: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.11983074247837067
    2. 'property' → logprob: -2.619830846786499
    3. 'staticmethod' → logprob: -3.619830846786499
    4. 'classmethod' → logprob: -4.49483060836792
    5. 'abc' → logprob: -6.36983060836792
    6. 'dat' → logprob: -7.99483060836792
    7. 'component' → logprob: -9.869831085205078
    8. 'class' → logprob: -10.369831085205078
    9. ' abstract' → logprob: -11.369831085205078
    10. 'ABC' → logprob: -12.369831085205078

Token 176: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.030392026528716087
    2. 'def' → logprob: -3.6553919315338135
    3. '
' → logprob: -6.155392169952393
    4. ' def' → logprob: -6.905392169952393
    5. ' method' → logprob: -7.780392169952393
    6. '_method' → logprob: -8.655391693115234
    7. '<|end|>' → logprob: -9.280391693115234
    8. '    
' → logprob: -9.780391693115234
    9. 'classmethod' → logprob: -10.030391693115234
    10. 'ethod' → logprob: -10.405391693115234

Token 177: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.044533621519804
    2. ' def' → logprob: -3.1695337295532227
    3. '
' → logprob: -6.544533729553223
    4. '   ' → logprob: -9.294533729553223
    5. '<|end|>' → logprob: -13.794533729553223
    6. '	def' → logprob: -14.169533729553223
    7. '
' → logprob: -15.044533729553223
    8. '  ' → logprob: -15.044533729553223
    9. '_def' → logprob: -15.544533729553223
    10. '    
' → logprob: -15.544533729553223

Token 178: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0023486497811973095
    2. '
' → logprob: -6.25234842300415
    3. '   ' → logprob: -8.252348899841309
    4. ' def' → logprob: -8.752348899841309
    5. '
' → logprob: -15.127348899841309
    6. '	def' → logprob: -15.252348899841309
    7. 'classmethod' → logprob: -16.002347946166992
    8. 'class' → logprob: -16.002347946166992
    9. '```' → logprob: -16.252347946166992
    10. 'method' → logprob: -16.377347946166992

Token 179: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00025680975522845984
    2. 'classmethod' → logprob: -9.000256538391113
    3. ' def' → logprob: -9.500256538391113
    4. 'property' → logprob: -10.125256538391113
    5. 'staticmethod' → logprob: -11.625256538391113
    6. 'method' → logprob: -12.375256538391113
    7. 'class' → logprob: -12.875256538391113
    8. '
' → logprob: -13.250256538391113
    9. 'repr' → logprob: -14.125256538391113
    10. '   ' → logprob: -16.50025749206543

Token 180: ' value' (ID: 1432)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2700611650943756
    2. ' __' → logprob: -1.5200611352920532
    3. 'repr' → logprob: -6.020061016082764
    4. 'decode' → logprob: -6.145061016082764
    5. 'encode' → logprob: -6.520061016082764
    6. 'serialize' → logprob: -6.520061016082764
    7. 'render' → logprob: -6.770061016082764
    8. 'to' → logprob: -6.770061016082764
    9. ' encode' → logprob: -6.895061016082764
    10. 'process' → logprob: -6.895061016082764

Token 181: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.000122608442325145
    2. '(' → logprob: -9.250123023986816
    3. 'self' → logprob: -10.750123023986816
    4. '()' → logprob: -13.500123023986816
    5. '   ' → logprob: -14.125123023986816
    6. ' (' → logprob: -14.375123023986816
    7. '(
' → logprob: -14.625123023986816
    8. '()(' → logprob: -14.625123023986816
    9. 's' → logprob: -15.250123023986816
    10. 'def' → logprob: -15.375123023986816

Token 182: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007419675588607788
    2. '):
' → logprob: -5.757419586181641
    3. 'self' → logprob: -6.007419586181641
    4. ')' → logprob: -6.382419586181641
    5. '(self' → logprob: -10.13241958618164
    6. ' ):' → logprob: -10.75741958618164
    7. '   ' → logprob: -11.63241958618164
    8. ',' → logprob: -12.50741958618164
    9. '):
' → logprob: -13.75741958618164
    10. ':' → logprob: -13.88241958618164

Token 183: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.003977242857217789
    2. 'self' → logprob: -5.753977298736572
    3. '   ' → logprob: -7.878977298736572
    4. '       ' → logprob: -8.628976821899414
    5. '(' → logprob: -9.378976821899414
    6. ':' → logprob: -10.253976821899414
    7. 'def' → logprob: -10.378976821899414
    8. ')' → logprob: -10.628976821899414
    9. '():' → logprob: -11.003976821899414
    10. '):' → logprob: -11.503976821899414

Token 184: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00914426613599062
    2. ' int' → logprob: -4.759144306182861
    3. 'object' → logprob: -8.259143829345703
    4. 'None' → logprob: -8.509143829345703
    5. 'any' → logprob: -10.759143829345703
    6. 'str' → logprob: -11.009143829345703
    7. ' None' → logprob: -11.384143829345703
    8. ' object' → logprob: -11.634143829345703
    9. 'float' → logprob: -12.384143829345703
    10. ' any' → logprob: -12.634143829345703

Token 185: ' or' (ID: 503)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 186: ' float' (ID: 4428)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -1.3538811206817627
    2. 'None' → logprob: -1.3538811206817627
    3. 'float' → logprob: -1.6038811206817627
    4. ' str' → logprob: -2.1038811206817627
    5. 'str' → logprob: -2.3538811206817627
    6. ' float' → logprob: -2.7288811206817627
    7. ' ' → logprob: -9.978880882263184
    8. 'bool' → logprob: -10.478880882263184
    9. '   ' → logprob: -11.603880882263184
    10. ' bytes' → logprob: -11.728880882263184

Token 187: ':
' (ID: 734)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 188: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 189: ' pass' (ID: 1853)
  Prédit: '...'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '...' → logprob: -0.41177916526794434
    2. 'pass' (adapté à ' pass') → logprob: -1.4117791652679443
    3. ' pass' → logprob: -2.7867791652679443
    4. '       ' → logprob: -4.036779403686523
    5. '   ' → logprob: -4.411779403686523
    6. 'None' → logprob: -7.286779403686523
    7. '	pass' → logprob: -7.411779403686523
    8. ' ...' → logprob: -7.661779403686523
    9. ')' → logprob: -8.536779403686523
    10. '  ' → logprob: -9.286779403686523

Token 190: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.732678234577179
    2. '
' → logprob: -1.3576781749725342
    3. '<|end|>' → logprob: -1.3576781749725342
    4. '<|end|>' → logprob: -6.232678413391113
    5. '   ' → logprob: -6.607678413391113
    6. '

' → logprob: -7.482678413391113
    7. ' class' → logprob: -7.857678413391113
    8. '    
' → logprob: -8.232678413391113
    9. '```' → logprob: -9.607678413391113
    10. '  
' → logprob: -9.732678413391113

Token 191: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00410012761130929
    2. '
' → logprob: -5.504100322723389
    3. ' class' → logprob: -11.12909984588623
    4. '<|end|>' → logprob: -12.87909984588623
    5. '

' → logprob: -13.12909984588623
    6. '    
' → logprob: -14.50409984588623
    7. ' 
' → logprob: -15.12909984588623
    8. '\n' → logprob: -15.12909984588623
    9. '```' → logprob: -15.12909984588623
    10. '  
' → logprob: -15.25409984588623

Token 192: ' Sign' (ID: 10746)
  Prédit: ' Temperature'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Temperature' → logprob: -1.1184238195419312
    2. 'Temperature' → logprob: -1.2434238195419312
    3. ' Integer' → logprob: -2.7434239387512207
    4. 'Integer' → logprob: -2.9934239387512207
    5. 'Int' → logprob: -3.2434239387512207
    6. ' Int' → logprob: -3.8684239387512207
    7. 'Flag' → logprob: -4.118423938751221
    8. 'Signed' → logprob: -4.243423938751221
    9. ' Flag' → logprob: -4.368423938751221
    10. ' Header' → logprob: -4.493423938751221

Token 193: 'Bit' (ID: 10973)
  Prédit: 'Bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bit' → logprob: -0.3869282603263855
    2. 'Component' → logprob: -1.2619283199310303
    3. '(Component' → logprob: -4.011928081512451
    4. 'ificant' → logprob: -4.261928081512451
    5. 'bit' → logprob: -6.636928081512451
    6. 'Extension' → logprob: -7.136928081512451
    7. 'Extend' → logprob: -7.761928081512451
    8. '<Component' → logprob: -8.13692855834961
    9. 'ed' → logprob: -8.26192855834961
    10. '(Bit' → logprob: -8.38692855834961

Token 194: '(Component' (ID: 98072)
  Prédit: '(Component'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Component' → logprob: -0.05776847526431084
    2. 'Component' → logprob: -3.5577685832977295
    3. ':' → logprob: -4.30776834487915
    4. 'Bit' → logprob: -5.05776834487915
    5. '():' → logprob: -5.80776834487915
    6. '(' → logprob: -6.05776834487915
    7. '(Bit' → logprob: -6.18276834487915
    8. 'Extractor' → logprob: -9.057768821716309
    9. '(Sign' → logprob: -9.682768821716309
    10. '<Component' → logprob: -10.307768821716309

Token 195: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00023250321100931615
    2. '):
' → logprob: -8.750232696533203
    3. ':' → logprob: -10.000232696533203
    4. ')' → logprob: -10.750232696533203
    5. ' ):' → logprob: -12.875232696533203
    6. ',' → logprob: -13.375232696533203
    7. '):
' → logprob: -13.625232696533203
    8. '   ' → logprob: -14.125232696533203
    9. '):

' → logprob: -15.000232696533203
    10. '():' → logprob: -15.625232696533203

Token 196: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0034408881328999996
    2. '
' → logprob: -6.378440856933594
    3. ' def' → logprob: -7.003440856933594
    4. ':' → logprob: -7.253440856933594
    5. 'def' → logprob: -9.753440856933594
    6. ':
' → logprob: -10.378440856933594
    7. '    
' → logprob: -11.003440856933594
    8. '):
' → logprob: -12.128440856933594
    9. '```' → logprob: -13.253440856933594
    10. '	def' → logprob: -13.628440856933594

Token 197: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.18498249351978302
    2. ' def' → logprob: -2.0599825382232666
    3. '   ' → logprob: -3.1849825382232666
    4. '	def' → logprob: -10.934982299804688
    5. ' ' → logprob: -11.559982299804688
    6. '  ' → logprob: -12.184982299804688
    7. ')' → logprob: -13.309982299804688
    8. 'class' → logprob: -13.309982299804688
    9. '    ' → logprob: -13.309982299804688
    10. '"""' → logprob: -14.184982299804688

Token 198: ' __' (ID: 2516)
  Prédit: ' extract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' extract' → logprob: -0.32581576704978943
    2. ' __' → logprob: -1.9508157968521118
    3. 'extract' → logprob: -2.0758156776428223
    4. '__' → logprob: -5.325815677642822
    5. ' def' → logprob: -5.325815677642822
    6. 'def' → logprob: -7.950815677642822
    7. ' init' → logprob: -8.70081615447998
    8. '_extract' → logprob: -9.45081615447998
    9. 'init' → logprob: -10.07581615447998
    10. '   ' → logprob: -10.32581615447998

Token 199: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.7432603272027336e-06
    2. 'nit' → logprob: -14.250001907348633
    3. 'def' → logprob: -14.625001907348633
    4. 'inite' → logprob: -15.875001907348633
    5. 'int' → logprob: -16.250001907348633
    6. ' init' → logprob: -16.375001907348633
    7. '(init' → logprob: -16.625001907348633
    8. '```' → logprob: -16.625001907348633
    9. '	init' → logprob: -17.500001907348633
    10. 'i' → logprob: -17.500001907348633

Token 200: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01729055866599083
    2. '__(' → logprob: -4.1422905921936035
    3. '_(' → logprob: -7.2672905921936035
    4. '()' → logprob: -8.767290115356445
    5. '(' → logprob: -9.142290115356445
    6. ' (' → logprob: -9.392290115356445
    7. 'self' → logprob: -9.767290115356445
    8. '   ' → logprob: -10.142290115356445
    9. '```' → logprob: -10.517290115356445
    10. '()(' → logprob: -10.642290115356445

Token 201: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002831464516930282
    2. ')' → logprob: -8.750283241271973
    3. '):
' → logprob: -9.500283241271973
    4. ' self' → logprob: -10.500283241271973
    5. '
' → logprob: -11.125283241271973
    6. '   ' → logprob: -12.500283241271973
    7. '0' → logprob: -14.000283241271973
    8. '):

' → logprob: -14.250283241271973
    9. ')
' → logprob: -14.500283241271973
    10. '       ' → logprob: -14.875283241271973

Token 202: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8473402857780457
    2. 'self' → logprob: -1.0973403453826904
    3. '):' → logprob: -1.9723403453826904
    4. '):
' → logprob: -2.4723403453826904
    5. ' self' → logprob: -5.847340106964111
    6. ')' → logprob: -5.972340106964111
    7. '(self' → logprob: -6.097340106964111
    8. ',self' → logprob: -6.347340106964111
    9. '   ' → logprob: -6.847340106964111
    10. '):
' → logprob: -6.972340106964111

Token 203: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.025332925841212273
    2. '   ' → logprob: -4.275332927703857
    3. '       ' → logprob: -4.650332927703857
    4. ' self' → logprob: -7.025332927703857
    5. '
' → logprob: -8.5253324508667
    6. 'None' → logprob: -8.6503324508667
    7. ')' → logprob: -9.1503324508667
    8. '0' → logprob: -9.9003324508667
    9. ' ' → logprob: -10.4003324508667
    10. 'pass' → logprob: -10.7753324508667

Token 204: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0005524366861209273
    2. ' self' → logprob: -8.1255521774292
    3. '   ' → logprob: -9.1255521774292
    4. '       ' → logprob: -9.6255521774292
    5. 'pass' → logprob: -9.8755521774292
    6. '
' → logprob: -11.0005521774292
    7. 'super' → logprob: -12.1255521774292
    8. 'None' → logprob: -12.3755521774292
    9. '0' → logprob: -13.3755521774292
    10. ' ' → logprob: -14.2505521774292

Token 205: '.bit' (ID: 61866)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.02074892818927765
    2. '_bit' → logprob: -4.770749092102051
    3. '_bits' → logprob: -5.270749092102051
    4. '_sign' → logprob: -5.520749092102051
    5. '.' → logprob: -6.520749092102051
    6. '.sign' → logprob: -7.520749092102051
    7. '.bit' → logprob: -7.645749092102051
    8. '_value' → logprob: -9.14574909210205
    9. '.bits' → logprob: -9.14574909210205
    10. '.value' → logprob: -9.64574909210205

Token 206: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12283683568239212
    2. '=' → logprob: -2.2478368282318115
    3. '_value' → logprob: -4.997837066650391
    4. '=None' → logprob: -6.122837066650391
    5. 's' → logprob: -7.622837066650391
    6. 'value' → logprob: -8.74783706665039
    7. ':' → logprob: -8.99783706665039
    8. '_pos' → logprob: -9.74783706665039
    9. '_position' → logprob: -9.87283706665039
    10. '<|end|>' → logprob: -9.99783706665039

Token 207: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.883968710899353
    2. 'None' → logprob: -0.883968710899353
    3. ' None' → logprob: -1.758968710899353
    4. ' ' → logprob: -6.508968830108643
    5. '(None' → logprob: -13.008968353271484
    6. '   ' → logprob: -13.258968353271484
    7. '_None' → logprob: -13.758968353271484
    8. '=None' → logprob: -14.258968353271484
    9. '-' → logprob: -14.508968353271484
    10. '.None' → logprob: -15.133968353271484

Token 208: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.47442856431007385
    2. 'None' → logprob: -0.9744285345077515
    3. ' None' → logprob: -7.974428653717041
    4. ' ' → logprob: -12.224428176879883
    5. 'none' → logprob: -14.349428176879883
    6. '-' → logprob: -14.349428176879883
    7. '(None' → logprob: -14.849428176879883
    8. '   ' → logprob: -15.474428176879883
    9. '_None' → logprob: -15.599428176879883
    10. '=None' → logprob: -16.099428176879883

Token 209: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7938802242279053
    2. '   ' → logprob: -1.0438802242279053
    3. '<|end|>' → logprob: -1.6688802242279053
    4. '<|end|>' → logprob: -5.543880462646484
    5. '

' → logprob: -6.418880462646484
    6. 'def' → logprob: -7.168880462646484
    7. '    
' → logprob: -7.668880462646484
    8. ' ' → logprob: -8.918880462646484
    9. '  
' → logprob: -9.168880462646484
    10. '  ' → logprob: -9.293880462646484

Token 210: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43999192118644714
    2. '
' → logprob: -1.0649919509887695
    3. 'def' → logprob: -5.4399919509887695
    4. '<|end|>' → logprob: -5.4399919509887695
    5. '    
' → logprob: -6.5649919509887695
    6. '  
' → logprob: -8.31499195098877
    7. ' def' → logprob: -8.56499195098877
    8. '

' → logprob: -8.81499195098877
    9. '<|end|>' → logprob: -8.93999195098877
    10. ' ' → logprob: -9.18999195098877

Token 211: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00038360210601240396
    2. ' def' → logprob: -7.875383377075195
    3. '   ' → logprob: -12.625383377075195
    4. '
' → logprob: -16.000383377075195
    5. '	def' → logprob: -17.000383377075195
    6. '    
' → logprob: -18.250383377075195
    7. ' ' → logprob: -18.875383377075195
    8. '

' → logprob: -19.625383377075195
    9. '  ' → logprob: -19.750383377075195
    10. 'ndef' → logprob: -20.500383377075195

Token 212: ' extract' (ID: 13424)
  Prédit: 'extract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'extract' → logprob: -0.2014193832874298
    2. ' extract' → logprob: -1.7014193534851074
    3. 'def' → logprob: -13.201419830322266
    4. '.extract' → logprob: -13.201419830322266
    5. '_extract' → logprob: -13.326419830322266
    6. 'ex' → logprob: -14.951419830322266
    7. ' def' → logprob: -16.076419830322266
    8. ' ' → logprob: -16.451419830322266
    9. 'Extract' → logprob: -16.701419830322266
    10. ' ' → logprob: -17.451419830322266

Token 213: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -1.7432603272027336e-06
    2. '_' → logprob: -13.500001907348633
    3. '_bit' → logprob: -16.125001907348633
    4. '_BITS' → logprob: -16.875001907348633
    5. '_b' → logprob: -17.750001907348633
    6. ' _' → logprob: -18.000001907348633
    7. '_bytes' → logprob: -19.000001907348633
    8. ')_' → logprob: -19.750001907348633
    9. '__' → logprob: -20.250001907348633
    10. '(self' → logprob: -20.375001907348633

Token 214: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.700132997939363e-05
    2. '(' → logprob: -11.000017166137695
    3. ' (' → logprob: -16.125017166137695
    4. 'self' → logprob: -16.500017166137695
    5. '(
' → logprob: -18.250017166137695
    6. '(s' → logprob: -19.500017166137695
    7. '   ' → logprob: -20.500017166137695
    8. '(sel' → logprob: -20.500017166137695
    9. ',self' → logprob: -20.750017166137695
    10. ' self' → logprob: -21.000017166137695

Token 215: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3425219549390022e-05
    2. ' ,' → logprob: -11.37501335144043
    3. ',self' → logprob: -13.37501335144043
    4. 'self' → logprob: -15.62501335144043
    5. ',b' → logprob: -17.25001335144043
    6. '(self' → logprob: -17.50001335144043
    7. ',
' → logprob: -17.50001335144043
    8. '   ' → logprob: -18.50001335144043
    9. ',s' → logprob: -19.25001335144043
    10. '       ' → logprob: -19.87501335144043

Token 216: ' bit' (ID: 3546)
  Prédit: ' bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.2519296407699585
    2. 'bit' → logprob: -1.5019296407699585
    3. '(bit' → logprob: -15.50192928314209
    4. '_bit' → logprob: -16.126930236816406
    5. 'Bit' → logprob: -16.251930236816406
    6. ' Bit' → logprob: -16.751930236816406
    7. '-bit' → logprob: -17.001930236816406
    8. 'self' → logprob: -17.251930236816406
    9. '.bit' → logprob: -17.376930236816406
    10. 'bitr' → logprob: -17.501930236816406

Token 217: 'stream' (ID: 8598)
  Prédit: 'stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stream' → logprob: -0.048634372651576996
    2. '_stream' → logprob: -3.0486342906951904
    3. '(stream' → logprob: -10.17363452911377
    4. ')' → logprob: -12.54863452911377
    5. ' stream' → logprob: -14.04863452911377
    6. '.stream' → logprob: -14.17363452911377
    7. '_bits' → logprob: -14.42363452911377
    8. 's' → logprob: -14.42363452911377
    9. ')_' → logprob: -14.42363452911377
    10. '_' → logprob: -14.92363452911377

Token 218: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011081460979767144
    2. 'self' → logprob: -9.500110626220703
    3. ' ,' → logprob: -11.000110626220703
    4. ':' → logprob: -11.875110626220703
    5. '(self' → logprob: -12.000110626220703
    6. '   ' → logprob: -13.125110626220703
    7. ',self' → logprob: -13.125110626220703
    8. '       ' → logprob: -13.625110626220703
    9. ' self' → logprob: -15.000110626220703
    10. '):' → logprob: -15.000110626220703

Token 219: ' Bit' (ID: 9422)
  Prédit: ' bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.0790133848786354
    2. 'bit' → logprob: -2.5790133476257324
    3. ' Bit' → logprob: -9.82901382446289
    4. 'Bit' → logprob: -9.82901382446289
    5. '(bit' → logprob: -12.20401382446289
    6. 'self' → logprob: -12.82901382446289
    7. '_bit' → logprob: -12.95401382446289
    8. ')' → logprob: -13.07901382446289
    9. ' self' → logprob: -13.32901382446289
    10. '.bit' → logprob: -13.82901382446289

Token 220: 'Stream' (ID: 4193)
  Prédit: 'stream'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stream' → logprob: -0.002006791764870286
    2. 'Stream' → logprob: -6.252007007598877
    3. '_stream' → logprob: -9.877006530761719
    4. ' stream' → logprob: -11.002006530761719
    5. 'ream' → logprob: -12.002006530761719
    6. '   ' → logprob: -13.752006530761719
    7. 'st' → logprob: -15.002006530761719
    8. ')' → logprob: -15.002006530761719
    9. '       ' → logprob: -15.002006530761719
    10. 'stre' → logprob: -15.002006530761719

Token 221: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3149511516094208
    2. '):' → logprob: -1.3149511814117432
    3. '):
' → logprob: -6.814950942993164
    4. '       ' → logprob: -8.814950942993164
    5. '   ' → logprob: -8.814950942993164
    6. ':' → logprob: -8.939950942993164
    7. ')' → logprob: -9.814950942993164
    8. ' ,' → logprob: -9.939950942993164
    9. '):
' → logprob: -10.314950942993164
    10. ' ):' → logprob: -11.439950942993164

Token 222: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00269015203230083
    2. ' self' → logprob: -6.002690315246582
    3. 'self' → logprob: -8.502690315246582
    4. '   ' → logprob: -12.377690315246582
    5. ' for' → logprob: -12.752690315246582
    6. '      ' → logprob: -14.002690315246582
    7. ' ' → logprob: -14.377690315246582
    8. ',' → logprob: -14.502690315246582
    9. ' bit' → logprob: -14.877690315246582
    10. '           ' → logprob: -15.502690315246582

Token 223: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.10389987379312515
    2. ' self' → logprob: -2.3538999557495117
    3. '       ' → logprob: -5.603899955749512
    4. ' ' → logprob: -13.728899955749512
    5. '   ' → logprob: -14.228899955749512
    6. '	self' → logprob: -14.603899955749512
    7. '      ' → logprob: -15.853899955749512
    8. '        ' → logprob: -16.228899002075195
    9. '  ' → logprob: -16.353899002075195
    10. ' ' → logprob: -16.728899002075195

Token 224: '.bit' (ID: 61866)
  Prédit: '.bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bit' → logprob: -1.981667537620524e-06
    2. '.' → logprob: -13.875001907348633
    3. '.bits' → logprob: -14.875001907348633
    4. '.b' → logprob: -15.625001907348633
    5. ' .' → logprob: -16.125001907348633
    6. '.bet' → logprob: -16.125001907348633
    7. 'bit' → logprob: -16.625001907348633
    8. '.dot' → logprob: -18.500001907348633
    9. '.byte' → logprob: -18.625001907348633
    10. ' bit' → logprob: -19.250001907348633

Token 225: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602243334054947
    2. '=' → logprob: -1.9102243185043335
    3. ' ' → logprob: -15.660223960876465
    4. ' +=' → logprob: -18.78522491455078
    5. '.=' → logprob: -18.91022491455078
    6. '=self' → logprob: -19.03522491455078
    7. '=

' → logprob: -19.41022491455078
    8. 's' → logprob: -19.41022491455078
    9. '＝' → logprob: -20.03522491455078
    10. ' =
' → logprob: -20.28522491455078

Token 226: ' bit' (ID: 3546)
  Prédit: ' bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.31326571106910706
    2. 'bit' → logprob: -1.3132656812667847
    3. '(bit' → logprob: -12.688265800476074
    4. '1' → logprob: -15.188265800476074
    5. ' ' → logprob: -15.938265800476074
    6. '0' → logprob: -16.188264846801758
    7. 'bitr' → logprob: -16.188264846801758
    8. 'b' → logprob: -16.313264846801758
    9. '_bit' → logprob: -16.438264846801758
    10. '.bit' → logprob: -17.063264846801758

Token 227: 'stream' (ID: 8598)
  Prédit: 'stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stream' → logprob: -0.003915257286280394
    2. 'bit' → logprob: -5.753915309906006
    3. '_stream' → logprob: -7.628915309906006
    4. '(bit' → logprob: -9.628914833068848
    5. '(stream' → logprob: -10.003914833068848
    6. '_bit' → logprob: -10.503914833068848
    7. ' ' → logprob: -10.878914833068848
    8. '.stream' → logprob: -11.128914833068848
    9. '1' → logprob: -11.378914833068848
    10. 's' → logprob: -11.503914833068848

Token 228: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -8.85235276655294e-05
    2. '.' → logprob: -9.500088691711426
    3. ' .' → logprob: -11.375088691711426
    4. 'get' → logprob: -13.125088691711426
    5. '   ' → logprob: -16.37508773803711
    6. '```' → logprob: -18.00008773803711
    7. ' ' → logprob: -18.12508773803711
    8. '`.' → logprob: -18.25008773803711
    9. ').' → logprob: -18.25008773803711
    10. '​.' → logprob: -18.50008773803711

Token 229: '_bit' (ID: 39574)
  Prédit: '_bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bit' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.375000953674316
    3. 'bit' → logprob: -15.500000953674316
    4. '_bits' → logprob: -16.875
    5. '_b' → logprob: -17.125
    6. '_BIT' → logprob: -17.125
    7. ' bit' → logprob: -18.125
    8. '```' → logprob: -19.375
    9. 'Bit' → logprob: -19.875
    10. '_pos' → logprob: -20.0

Token 230: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.619311974034645e-05
    2. '1' → logprob: -10.250036239624023
    3. '6' → logprob: -14.750036239624023
    4. '2' → logprob: -15.500036239624023
    5. '3' → logprob: -16.000036239624023
    6. '4' → logprob: -16.875036239624023
    7. '8' → logprob: -17.125036239624023
    8. ' (' → logprob: -17.250036239624023
    9. '7' → logprob: -17.625036239624023
    10. '(
' → logprob: -17.750036239624023

Token 231: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.875000953674316
    3. '32' → logprob: -15.875000953674316
    4. '16' → logprob: -16.125001907348633
    5. '```' → logprob: -16.375001907348633
    6. '0' → logprob: -16.750001907348633
    7. '31' → logprob: -16.875001907348633
    8. '   ' → logprob: -17.125001907348633
    9. '

' → logprob: -17.750001907348633
    10. '2' → logprob: -18.000001907348633

Token 232: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0802738870552275e-05
    2. ')
' → logprob: -12.25001049041748
    3. ' )' → logprob: -12.25001049041748
    4. '<|end|>' → logprob: -14.37501049041748
    5. ')return' → logprob: -15.37501049041748
    6. '       ' → logprob: -15.75001049041748
    7. '   ' → logprob: -16.875011444091797
    8. ')

' → logprob: -17.625011444091797
    9. ')#' → logprob: -17.750011444091797
    10. '())' → logprob: -17.875011444091797

Token 233: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 234: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0007194612408056855
    2. '   ' → logprob: -7.8757195472717285
    3. ' def' → logprob: -8.00071907043457
    4. '@property' → logprob: -13.37571907043457
    5. '    
' → logprob: -14.00071907043457
    6. ' ' → logprob: -14.50071907043457
    7. '	def' → logprob: -14.87571907043457
    8. '
' → logprob: -15.50071907043457
    9. '       ' → logprob: -15.75071907043457
    10. '```' → logprob: -16.00071907043457

Token 235: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.3133973777294159
    2. 'value' → logprob: -1.3133974075317383
    3. ' ' → logprob: -9.188397407531738
    4. ' def' → logprob: -11.563397407531738
    5. 'def' → logprob: -11.813397407531738
    6. ' property' → logprob: -12.313397407531738
    7. '_value' → logprob: -12.563397407531738
    8. 'property' → logprob: -12.688397407531738
    9. '@property' → logprob: -13.313397407531738
    10. '
' → logprob: -14.563397407531738

Token 236: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004090393427759409
    2. '(' → logprob: -5.504090309143066
    3. ' (' → logprob: -12.129090309143066
    4. '()' → logprob: -13.254090309143066
    5. '(
' → logprob: -13.254090309143066
    6. '   ' → logprob: -13.754090309143066
    7. 'self' → logprob: -14.004090309143066
    8. 'def' → logprob: -15.379090309143066
    9. '```' → logprob: -15.504090309143066
    10. ' ' → logprob: -15.754090309143066

Token 237: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025033246725797653
    2. '):' → logprob: -3.7750332355499268
    3. '):
' → logprob: -7.525033473968506
    4. '   ' → logprob: -8.025032997131348
    5. '(self' → logprob: -8.525032997131348
    6. ')return' → logprob: -8.650032997131348
    7. ' )' → logprob: -8.900032997131348
    8. 'self' → logprob: -9.525032997131348
    9. '()' → logprob: -9.775032997131348
    10. ')}' → logprob: -10.525032997131348

Token 238: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.20590701699256897
    2. '->' → logprob: -2.580907106399536
    3. '   ' → logprob: -2.955907106399536
    4. ':' → logprob: -3.455907106399536
    5. '       ' → logprob: -4.580906867980957
    6. 'self' → logprob: -5.080906867980957
    7. ' ->' → logprob: -5.205906867980957
    8. '(' → logprob: -6.830906867980957
    9. ')' → logprob: -6.955906867980957
    10. ':return' → logprob: -6.955906867980957

Token 239: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.18202945590019226
    2. 'int' → logprob: -1.8070294857025146
    3. ' float' → logprob: -6.3070292472839355
    4. 'float' → logprob: -7.8070292472839355
    5. '(int' → logprob: -10.682029724121094
    6. ' ' → logprob: -11.932029724121094
    7. ' (' → logprob: -12.307029724121094
    8. '1' → logprob: -12.432029724121094
    9. ' -' → logprob: -12.557029724121094
    10. '-' → logprob: -12.682029724121094

Token 240: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012793096713721752
    2. ':
' → logprob: -4.387793064117432
    3. ':return' → logprob: -8.76279354095459
    4. '   ' → logprob: -10.63779354095459
    5. '-' → logprob: -10.88779354095459
    6. ' :' → logprob: -11.01279354095459
    7. '{' → logprob: -11.26279354095459
    8. '       ' → logprob: -11.38779354095459
    9. ' =' → logprob: -12.13779354095459
    10. '=' → logprob: -12.13779354095459

Token 241: '       ' (ID: 309)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4479042589664459
    2. '       ' → logprob: -1.5729042291641235
    3. 'return' → logprob: -2.322904348373413
    4. '-' → logprob: -3.947904348373413
    5. ' -' → logprob: -3.947904348373413
    6. '0' → logprob: -4.822904109954834
    7. '   ' → logprob: -5.322904109954834
    8. ' ' → logprob: -6.822904109954834
    9. '    ' → logprob: -6.947904109954834
    10. '1' → logprob: -7.072904109954834

Token 242: ' #' (ID: 1069)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.23670384287834167
    2. '0' → logprob: -2.611703872680664
    3. '-self' → logprob: -3.361703872680664
    4. ' -' → logprob: -3.486703872680664
    5. 'self' → logprob: -3.486703872680664
    6. ' self' → logprob: -4.236703872680664
    7. '-return' → logprob: -5.111703872680664
    8. ' ' → logprob: -5.111703872680664
    9. 'return' → logprob: -5.361703872680664
    10. '1' → logprob: -5.611703872680664

Token 243: ' (-' (ID: 21382)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.21079686284065247
    2. ' return' → logprob: -1.71079683303833
    3. '0' → logprob: -4.71079683303833
    4. '1' → logprob: -8.960797309875488
    5. '       ' → logprob: -9.835797309875488
    6. ' ' → logprob: -10.210797309875488
    7. '-' → logprob: -10.210797309875488
    8. '   ' → logprob: -10.585797309875488
    9. ' if' → logprob: -11.210797309875488
    10. 'if' → logprob: -11.210797309875488

Token 244: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.751746746478602e-05
    2. ')' → logprob: -10.62504768371582
    3. ' ' → logprob: -11.25004768371582
    4. '(' → logprob: -12.37504768371582
    5. '0' → logprob: -12.87504768371582
    6. 'self' → logprob: -13.12504768371582
    7. ' (' → logprob: -14.75004768371582
    8. '2' → logprob: -15.00004768371582
    9. '   ' → logprob: -15.37504768371582
    10. ' )' → logprob: -16.87504768371582

Token 245: ')^' (ID: 73602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030210332944989204
    2. ')**' → logprob: -3.530210256576538
    3. ' if' → logprob: -7.905210494995117
    4. ' )' → logprob: -9.405210494995117
    5. 'if' → logprob: -13.155210494995117
    6. '   ' → logprob: -13.405210494995117
    7. '```' → logprob: -13.655210494995117
    8. '       ' → logprob: -14.155210494995117
    9. '1' → logprob: -14.530210494995117
    10. ')^' → logprob: -14.530210494995117

Token 246: 'bit' (ID: 6516)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004882152716163546
    2. ' self' → logprob: -7.62548828125
    3. '1' → logprob: -16.62548828125
    4. '<|end|>' → logprob: -16.62548828125
    5. '(self' → logprob: -16.87548828125
    6. '0' → logprob: -17.37548828125
    7. '```' → logprob: -18.62548828125
    8. '`' → logprob: -18.75048828125
    9. ' ' → logprob: -18.75048828125
    10. '
' → logprob: -19.25048828125

Token 247: '
' (ID: 198)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.47439590096473694
    2. '<|end|>' → logprob: -2.099395990371704
    3. '**' → logprob: -2.599395990371704
    4. '*' → logprob: -2.849395990371704
    5. ' **' → logprob: -3.224395990371704
    6. ')' → logprob: -3.849395990371704
    7. ' if' → logprob: -4.224395751953125
    8. '*self' → logprob: -4.599395751953125
    9. '       ' → logprob: -4.974395751953125
    10. 'self' → logprob: -5.349395751953125

Token 248: '       ' (ID: 309)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.9427907466888428
    2. 'return' → logprob: -1.1927907466888428
    3. '       ' → logprob: -1.4427907466888428
    4. '**' → logprob: -3.3177907466888428
    5. ' if' → logprob: -4.192790985107422
    6. ')' → logprob: -5.692790985107422
    7. '
' → logprob: -5.817790985107422
    8. '   ' → logprob: -5.942790985107422
    9. ' **' → logprob: -5.942790985107422
    10. '(' → logprob: -6.817790985107422

Token 249: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04943504184484482
    2. ' return' → logprob: -3.0494351387023926
    3. '       ' → logprob: -7.174435138702393
    4. '1' → logprob: -9.674434661865234
    5. '(-' → logprob: -11.924434661865234
    6. '-' → logprob: -12.424434661865234
    7. '   ' → logprob: -13.549434661865234
    8. '2' → logprob: -13.674434661865234
    9. '```' → logprob: -13.799434661865234
    10. 'if' → logprob: -14.424434661865234

Token 250: ' (-' (ID: 21382)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.13015682995319366
    2. '-' → logprob: -2.1301567554473877
    3. ' (-' → logprob: -6.255156993865967
    4. '1' → logprob: -7.130156993865967
    5. ' -' → logprob: -7.880156993865967
    6. '(' → logprob: -9.630156517028809
    7. '((-' → logprob: -10.505156517028809
    8. '0' → logprob: -11.005156517028809
    9. ' ' → logprob: -11.630156517028809
    10. 'pow' → logprob: -13.005156517028809

Token 251: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -16.87500762939453
    4. '           ' → logprob: -17.12500762939453
    5. ')' → logprob: -17.75000762939453
    6. '       ' → logprob: -18.37500762939453
    7. '  ' → logprob: -19.00000762939453
    8. '１' → logprob: -20.12500762939453
    9. '۱' → logprob: -20.12500762939453
    10. '    ' → logprob: -20.50000762939453

Token 252: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06210818141698837
    2. ')**' → logprob: -2.812108278274536
    3. '**' → logprob: -9.062108039855957
    4. ')^' → logprob: -10.937108039855957
    5. 'self' → logprob: -12.312108039855957
    6. '```' → logprob: -14.687108039855957
    7. ' )' → logprob: -14.812108039855957
    8. '`)' → logprob: -15.187108039855957
    9. '）' → logprob: -15.687108039855957
    10. '*' → logprob: -15.687108039855957

Token 253: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.13970057666301727
    2. '*self' → logprob: -2.8897006511688232
    3. ' self' → logprob: -3.6397006511688232
    4. 'self' → logprob: -3.6397006511688232
    5. ' **' → logprob: -3.8897006511688232
    6. ' ' → logprob: -7.264700412750244
    7. ' *' → logprob: -8.514700889587402
    8. ')**' → logprob: -8.639700889587402
    9. '(self' → logprob: -8.639700889587402
    10. ')' → logprob: -9.139700889587402

Token 254: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.5597102396423e-05
    2. ' self' → logprob: -10.250035285949707
    3. '       ' → logprob: -17.000036239624023
    4. '(self' → logprob: -17.375036239624023
    5. '   ' → logprob: -19.375036239624023
    6. '[self' → logprob: -20.125036239624023
    7. '      ' → logprob: -20.500036239624023
    8. '    ' → logprob: -20.625036239624023
    9. '	self' → logprob: -21.250036239624023
    10. '  ' → logprob: -21.250036239624023

Token 255: '.bit' (ID: 61866)
  Prédit: '.bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bit' → logprob: -0.0001310719089815393
    2. '.' → logprob: -9.000130653381348
    3. ' .' → logprob: -12.625130653381348
    4. '.bits' → logprob: -13.000130653381348
    5. ' bit' → logprob: -15.500130653381348
    6. '.byte' → logprob: -15.625130653381348
    7. '​.' → logprob: -15.625130653381348
    8. '.b' → logprob: -15.750130653381348
    9. '.dot' → logprob: -15.750130653381348
    10. '```' → logprob: -15.750130653381348

Token 256: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 257: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 258: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 259: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.00306683755479753
    2. ' repr' → logprob: -6.8780670166015625
    3. '__' → logprob: -7.0030670166015625
    4. 'repr' → logprob: -7.2530670166015625
    5. '_repr' → logprob: -8.128067016601562
    6. ' ' → logprob: -9.753067016601562
    7. ' def' → logprob: -9.753067016601562
    8. ' _' → logprob: -13.128067016601562
    9. ' ' → logprob: -14.753067016601562
    10. 'def' → logprob: -15.253067016601562

Token 260: 'repr' (ID: 67002)
  Prédit: 'repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: -1.8624639324116288e-06
    2. 'str' → logprob: -13.250001907348633
    3. '_repr' → logprob: -17.125001907348633
    4. 'rep' → logprob: -17.375001907348633
    5. 'eq' → logprob: -18.625001907348633
    6. ' repr' → logprob: -19.375001907348633
    7. 'init' → logprob: -19.625001907348633
    8. 'representation' → logprob: -21.125001907348633
    9. 'r' → logprob: -21.250001907348633
    10. '   ' → logprob: -22.250001907348633

Token 261: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.005713808350265026
    2. '(self' → logprob: -5.630713939666748
    3. '__' → logprob: -6.255713939666748
    4. '__(
' → logprob: -9.38071346282959
    5. '__('' → logprob: -9.63071346282959
    6. '(' → logprob: -11.00571346282959
    7. '__((' → logprob: -11.25571346282959
    8. '__("' → logprob: -11.75571346282959
    9. '```' → logprob: -13.88071346282959
    10. '__.__' → logprob: -14.25571346282959

Token 262: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.372294698550832e-06
    2. ')' → logprob: -11.875009536743164
    3. ' self' → logprob: -13.250009536743164
    4. '(self' → logprob: -15.125009536743164
    5. 'Self' → logprob: -15.500009536743164
    6. '	self' → logprob: -18.250009536743164
    7. 'f' → logprob: -18.500009536743164
    8. ')(' → logprob: -19.000009536743164
    9. 's' → logprob: -19.250009536743164
    10. '   ' → logprob: -19.500009536743164

Token 263: '):
' (ID: 1883)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.05603498965501785
    2. '__' → logprob: -3.931035041809082
    3. '(self' → logprob: -4.181035041809082
    4. 'self' → logprob: -4.181035041809082
    5. ')(' → logprob: -6.806035041809082
    6. '__(
' → logprob: -6.931035041809082
    7. '__)' → logprob: -7.056035041809082
    8. ')' → logprob: -7.431035041809082
    9. '__('' → logprob: -8.181035041809082
    10. '):
' → logprob: -9.431035041809082

Token 264: '       ' (ID: 309)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.60439133644104
    2. 'f' → logprob: -1.10439133644104
    3. '       ' → logprob: -2.10439133644104
    4. '   ' → logprob: -8.354391098022461
    5. '"' → logprob: -11.604391098022461
    6. ' return' → logprob: -12.604391098022461
    7. 'return' → logprob: -12.729391098022461
    8. ' ' → logprob: -12.979391098022461
    9. '      ' → logprob: -13.229391098022461
    10. '           ' → logprob: -13.854391098022461

Token 265: ' return' (ID: 622)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.004682645667344332
    2. 'return' (adapté à ' return') → logprob: -5.504682540893555
    3. ' f' → logprob: -7.504682540893555
    4. '   ' → logprob: -11.129682540893555
    5. '"' → logprob: -11.379682540893555
    6. ' return' → logprob: -11.504682540893555
    7. '       ' → logprob: -11.504682540893555
    8. 'Sign' → logprob: -12.004682540893555
    9. ' Sign' → logprob: -15.254682540893555
    10. ' ' → logprob: -15.504682540893555

Token 266: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.3868791460990906
    2. 'f' → logprob: -1.1368792057037354
    3. '"' → logprob: -11.886878967285156
    4. ' ' → logprob: -14.511878967285156
    5. ''f' → logprob: -14.761878967285156
    6. ' "' → logprob: -16.011878967285156
    7. ''' → logprob: -16.136878967285156
    8. '(f' → logprob: -16.636878967285156
    9. '	f' → logprob: -17.011878967285156
    10. 'F' → logprob: -17.386878967285156

Token 267: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.39560744166374207
    2. '"(' → logprob: -1.1456074714660645
    3. 'f' → logprob: -5.6456074714660645
    4. '("' → logprob: -6.5206074714660645
    5. '(Sign' → logprob: -6.6456074714660645
    6. 'Sign' → logprob: -6.7706074714660645
    7. ' f' → logprob: -8.270606994628906
    8. '("(' → logprob: -8.520606994628906
    9. '"<' → logprob: -8.520606994628906
    10. '(f' → logprob: -8.645606994628906

Token 268: 'Sign' (ID: 7898)
  Prédit: 'Sign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sign' → logprob: -0.0029186380561441183
    2. '"' → logprob: -5.877918720245361
    3. 'f' → logprob: -9.502918243408203
    4. ''S' → logprob: -11.752918243408203
    5. '{' → logprob: -12.252918243408203
    6. ''' → logprob: -12.252918243408203
    7. ' Sign' → logprob: -12.377918243408203
    8. '(Sign' → logprob: -12.377918243408203
    9. '"{' → logprob: -13.502918243408203
    10. 'sign' → logprob: -13.752918243408203

Token 269: 'Bit' (ID: 10973)
  Prédit: 'Bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bit' → logprob: -1.0206720617134124e-05
    2. '(Bit' → logprob: -11.62501049041748
    3. '(' → logprob: -15.25001049041748
    4. 'bit' → logprob: -15.50001049041748
    5. ' Bit' → logprob: -16.000009536743164
    6. '{' → logprob: -16.000009536743164
    7. '"' → logprob: -16.125009536743164
    8. 'Bits' → logprob: -16.500009536743164
    9. 'Byte' → logprob: -16.750009536743164
    10. '(-' → logprob: -17.125009536743164

Token 270: '(bit' (ID: 123258)
  Prédit: '(bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bit' → logprob: -0.35341182351112366
    2. '({' → logprob: -1.3534117937088013
    3. '(self' → logprob: -3.353411912918091
    4. '(sign' → logprob: -5.853411674499512
    5. '()' → logprob: -7.228411674499512
    6. '(' → logprob: -7.478411674499512
    7. '(value' → logprob: -8.978411674499512
    8. '(Sign' → logprob: -10.228411674499512
    9. '{' → logprob: -10.728411674499512
    10. '(Bit' → logprob: -11.478411674499512

Token 271: '={' (ID: 1693)
  Prédit: '={'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '={' → logprob: -0.000344044849043712
    2. '=' → logprob: -8.000344276428223
    3. '=self' → logprob: -12.375344276428223
    4. '{' → logprob: -12.500344276428223
    5. '={!' → logprob: -16.000343322753906
    6. '==' → logprob: -16.125343322753906
    7. ' ={' → logprob: -16.250343322753906
    8. '=}' → logprob: -16.500343322753906
    9. '={{' → logprob: -17.125343322753906
    10. '={`' → logprob: -17.250343322753906

Token 272: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005239683669060469
    2. '{' → logprob: -5.255239486694336
    3. ' self' → logprob: -12.130239486694336
    4. '0' → logprob: -15.755239486694336
    5. '1' → logprob: -15.755239486694336
    6. '{
' → logprob: -16.255239486694336
    7. '       ' → logprob: -16.380239486694336
    8. ')' → logprob: -17.380239486694336
    9. '   ' → logprob: -17.505239486694336
    10. '(self' → logprob: -18.505239486694336

Token 273: '.bit' (ID: 61866)
  Prédit: '.bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bit' → logprob: -0.02057856135070324
    2. 'bit' → logprob: -3.895578622817993
    3. '.' → logprob: -10.395578384399414
    4. ' bit' → logprob: -13.270578384399414
    5. '-bit' → logprob: -13.770578384399414
    6. ' .' → logprob: -13.770578384399414
    7. '```' → logprob: -14.270578384399414
    8. ')' → logprob: -15.020578384399414
    9. '.b' → logprob: -15.270578384399414
    10. ' бит' → logprob: -15.645578384399414

Token 274: '})' (ID: 9263)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005993809318169951
    2. ')"' → logprob: -7.625599384307861
    3. ')">' → logprob: -9.625598907470703
    4. ')")' → logprob: -10.125598907470703
    5. '")' → logprob: -13.375598907470703
    6. ')`' → logprob: -13.625598907470703
    7. ')}' → logprob: -13.875598907470703
    8. '}' → logprob: -14.500598907470703
    9. '})' → logprob: -15.000598907470703
    10. ' )' → logprob: -15.250598907470703

Token 275: '"

' (ID: 2678)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 276: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.003481278195977211
    2. ' class' → logprob: -6.253481388092041
    3. '<|end|>' → logprob: -7.378481388092041
    4. '
' → logprob: -7.878481388092041
    5. '<class' → logprob: -9.128480911254883
    6. '```' → logprob: -9.628480911254883
    7. '#' → logprob: -9.628480911254883
    8. 'e' → logprob: -9.878480911254883
    9. '

' → logprob: -10.628480911254883
    10. ')' → logprob: -10.753480911254883

Token 277: ' Integer' (ID: 6611)
  Prédit: 'Exponent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Exponent' → logprob: -0.011769349686801434
    2. ' Ex' → logprob: -4.5117692947387695
    3. 'Ex' → logprob: -8.38676929473877
    4. 'Exp' → logprob: -9.13676929473877
    5. ' ' → logprob: -9.76176929473877
    6. ' Exp' → logprob: -9.88676929473877
    7. 'Magnitude' → logprob: -10.01176929473877
    8. 'Sign' → logprob: -10.51176929473877
    9. 'Mant' → logprob: -10.51176929473877
    10. 'Bi' → logprob: -10.76176929473877

Token 278: 'Part' (ID: 5681)
  Prédit: 'Part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Part' → logprob: -0.056002989411354065
    2. 'Bits' → logprob: -3.3060030937194824
    3. 'Component' → logprob: -4.931003093719482
    4. 'Bit' → logprob: -5.306003093719482
    5. 'Value' → logprob: -5.681003093719482
    6. 'Field' → logprob: -6.306003093719482
    7. '(Component' → logprob: -9.556002616882324
    8. 'Exponent' → logprob: -9.931002616882324
    9. 'Magnitude' → logprob: -10.056002616882324
    10. 'Mant' → logprob: -10.306002616882324

Token 279: '(Component' (ID: 98072)
  Prédit: '(Component'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Component' → logprob: -0.00025275684311054647
    2. ':' → logprob: -8.625252723693848
    3. '(' → logprob: -9.625252723693848
    4. '<Component' → logprob: -12.375252723693848
    5. '@Component' → logprob: -13.875252723693848
    6. '(Bit' → logprob: -15.125252723693848
    7. '(component' → logprob: -15.250252723693848
    8. '(Abstract' → logprob: -15.500252723693848
    9. '\Component' → logprob: -16.000253677368164
    10. '.Component' → logprob: -16.000253677368164

Token 280: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.048735883086919785
    2. '):
' → logprob: -3.0487358570098877
    3. ')' → logprob: -9.298735618591309
    4. '):

' → logprob: -10.173735618591309
    5. '):
' → logprob: -11.423735618591309
    6. ':' → logprob: -12.798735618591309
    7. '   ' → logprob: -12.923735618591309
    8. '<|end|>' → logprob: -14.173735618591309
    9. 'def' → logprob: -15.048735618591309
    10. ',' → logprob: -15.298735618591309

Token 281: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029023895040154457
    2. ' def' → logprob: -4.029024124145508
    3. 'def' → logprob: -4.529024124145508
    4. '	def' → logprob: -11.904024124145508
    5. ' ' → logprob: -12.029024124145508
    6. '  ' → logprob: -12.654024124145508
    7. '```' → logprob: -12.904024124145508
    8. '    
' → logprob: -13.529024124145508
    9. ')' → logprob: -14.154024124145508
    10. '    ' → logprob: -14.404024124145508

Token 282: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.21045856177806854
    2. ' def' → logprob: -1.710458517074585
    3. '   ' → logprob: -4.710458755493164
    4. ' ' → logprob: -13.585458755493164
    5. '	def' → logprob: -13.835458755493164
    6. '
' → logprob: -14.335458755493164
    7. '  ' → logprob: -14.335458755493164
    8. '```' → logprob: -15.210458755493164
    9. '    ' → logprob: -17.335458755493164
    10. 'class' → logprob: -17.460458755493164

Token 283: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6047140955924988
    2. ' __' → logprob: -0.8547140955924988
    3. 'def' → logprob: -4.1047139167785645
    4. 'init' → logprob: -4.9797139167785645
    5. ' def' → logprob: -5.4797139167785645
    6. '_init' → logprob: -7.2297139167785645
    7. ' init' → logprob: -10.479714393615723
    8. '```' → logprob: -10.604714393615723
    9. '___' → logprob: -10.979714393615723
    10. '.__' → logprob: -12.104714393615723

Token 284: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.5776860184123507e-06
    2. 'int' → logprob: -14.12500286102295
    3. ' init' → logprob: -14.12500286102295
    4. '__' → logprob: -14.25000286102295
    5. 'def' → logprob: -14.75000286102295
    6. '_init' → logprob: -17.750001907348633
    7. '```' → logprob: -17.875001907348633
    8. ' __' → logprob: -19.000001907348633
    9. '	init' → logprob: -19.750001907348633
    10. 'inite' → logprob: -19.750001907348633

Token 285: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.009817597456276417
    2. '(self' → logprob: -4.634817600250244
    3. '   ' → logprob: -11.009817123413086
    4. '(' → logprob: -11.134817123413086
    5. '__' → logprob: -11.134817123413086
    6. '_(' → logprob: -12.009817123413086
    7. '       ' → logprob: -13.009817123413086
    8. 'self' → logprob: -13.134817123413086
    9. 'def' → logprob: -13.384817123413086
    10. '__(
' → logprob: -13.384817123413086

Token 286: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.8193366486229934e-05
    2. '):
' → logprob: -12.250018119812012
    3. '0' → logprob: -12.375018119812012
    4. '   ' → logprob: -12.750018119812012
    5. '       ' → logprob: -12.875018119812012
    6. ' self' → logprob: -13.125018119812012
    7. ')' → logprob: -13.875018119812012
    8. '
' → logprob: -15.375018119812012
    9. 'elf' → logprob: -16.000019073486328
    10. '(self' → logprob: -16.375019073486328

Token 287: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.030139321461319923
    2. '):' → logprob: -4.280139446258545
    3. '       ' → logprob: -4.905139446258545
    4. 'self' → logprob: -5.405139446258545
    5. ',' → logprob: -6.030139446258545
    6. '   ' → logprob: -6.655139446258545
    7. ' ):
' → logprob: -9.905138969421387
    8. ')' → logprob: -10.030138969421387
    9. '(self' → logprob: -10.155138969421387
    10. '():
' → logprob: -10.655138969421387

Token 288: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2865723967552185
    2. 'self' → logprob: -1.4115724563598633
    3. '   ' → logprob: -5.536572456359863
    4. '0' → logprob: -7.161572456359863
    5. ' self' → logprob: -7.536572456359863
    6. 'def' → logprob: -10.286572456359863
    7. ' ' → logprob: -10.411572456359863
    8. '):
' → logprob: -10.411572456359863
    9. '
' → logprob: -10.911572456359863
    10. '(self' → logprob: -11.161572456359863

Token 289: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.001486058346927166
    2. '       ' → logprob: -6.626485824584961
    3. ' self' → logprob: -8.876485824584961
    4. '   ' → logprob: -11.501485824584961
    5. '0' → logprob: -11.751485824584961
    6. 'super' → logprob: -14.001485824584961
    7. 'def' → logprob: -14.376485824584961
    8. ' ' → logprob: -15.501485824584961
    9. '
' → logprob: -15.876485824584961
    10. '(self' → logprob: -16.12648582458496

Token 290: '.bits' (ID: 89914)
  Prédit: '.bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bits' → logprob: -0.19626839458942413
    2. '.value' → logprob: -1.9462684392929077
    3. 'bits' → logprob: -3.571268320083618
    4. 'value' → logprob: -5.571268558502197
    5. '.start' → logprob: -6.821268558502197
    6. '.high' → logprob: -7.571268558502197
    7. '.length' → logprob: -7.946268558502197
    8. 'start' → logprob: -8.321268081665039
    9. '.part' → logprob: -8.321268081665039
    10. '.val' → logprob: -8.571268081665039

Token 291: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02633095160126686
    2. ' =' → logprob: -3.6513309478759766
    3. '=[]' → logprob: -10.776330947875977
    4. ':' → logprob: -11.651330947875977
    5. ' ' → logprob: -15.526330947875977
    6. '=[]
' → logprob: -16.026330947875977
    7. '=None' → logprob: -16.151330947875977
    8. '[' → logprob: -16.276330947875977
    9. '   ' → logprob: -16.526330947875977
    10. '[]' → logprob: -16.651330947875977

Token 292: ' []

' (ID: 32833)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2876565158367157
    2. '[]' → logprob: -1.412656545639038
    3. '[' → logprob: -5.162656307220459
    4. '""' → logprob: -8.162656784057617
    5. '''' → logprob: -9.162656784057617
    6. ' []' → logprob: -9.537656784057617
    7. '[]}' → logprob: -9.662656784057617
    8. '[]

' → logprob: -9.662656784057617
    9. '[:]' → logprob: -10.037656784057617
    10. ' ' → logprob: -10.162656784057617

Token 293: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07380692660808563
    2. 'def' → logprob: -3.0738070011138916
    3. '<|end|>' → logprob: -3.9488070011138916
    4. '
' → logprob: -5.6988067626953125
    5. ' def' → logprob: -6.5738067626953125
    6. '<|end|>' → logprob: -7.3238067626953125
    7. '    
' → logprob: -9.073806762695312
    8. '	def' → logprob: -10.198806762695312
    9. ' ' → logprob: -10.823806762695312
    10. '```' → logprob: -11.448806762695312

Token 294: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0004634392389561981
    2. ' def' → logprob: -7.750463485717773
    3. '   ' → logprob: -10.375463485717773
    4. '	def' → logprob: -13.500463485717773
    5. '
' → logprob: -16.125463485717773
    6. '    
' → logprob: -18.000463485717773
    7. ' ' → logprob: -18.000463485717773
    8. '```' → logprob: -18.875463485717773
    9. 'ndef' → logprob: -19.250463485717773
    10. '  ' → logprob: -20.125463485717773

Token 295: ' extract' (ID: 13424)
  Prédit: 'extract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'extract' → logprob: -0.0619698166847229
    2. ' extract' → logprob: -2.811969757080078
    3. 'def' → logprob: -13.436969757080078
    4. '.extract' → logprob: -15.061969757080078
    5. '_extract' → logprob: -15.436969757080078
    6. ' def' → logprob: -17.311969757080078
    7. 'Extract' → logprob: -17.436969757080078
    8. ' ' → logprob: -17.811969757080078
    9. 'ex' → logprob: -17.811969757080078
    10. '`' → logprob: -18.186969757080078

Token 296: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -14.625000953674316
    3. '_BITS' → logprob: -17.375
    4. '_parts' → logprob: -17.625
    5. '_tokens' → logprob: -18.0
    6. '_b' → logprob: -18.625
    7. ' _' → logprob: -18.625
    8. 'bits' → logprob: -18.75
    9. '_bytes' → logprob: -19.0
    10. '```' → logprob: -19.125

Token 297: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00034952821442857385
    2. '(' → logprob: -8.375349998474121
    3. ',' → logprob: -9.250349998474121
    4. 'self' → logprob: -11.750349998474121
    5. '(bit' → logprob: -12.000349998474121
    6. '   ' → logprob: -12.750349998474121
    7. '(
' → logprob: -12.875349998474121
    8. ' (' → logprob: -13.875349998474121
    9. ',self' → logprob: -14.375349998474121
    10. '(Bit' → logprob: -14.500349998474121

Token 298: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003012617235071957
    2. 'self' → logprob: -8.750301361083984
    3. '(self' → logprob: -9.375301361083984
    4. ',self' → logprob: -10.375301361083984
    5. ' ,' → logprob: -11.500301361083984
    6. '   ' → logprob: -12.000301361083984
    7. '       ' → logprob: -12.750301361083984
    8. '(' → logprob: -13.000301361083984
    9. ')' → logprob: -13.875301361083984
    10. ',
' → logprob: -14.250301361083984

Token 299: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.4287770390510559
    2. ' bit' → logprob: -1.0537769794464111
    3. 'self' → logprob: -9.678776741027832
    4. ' self' → logprob: -11.928776741027832
    5. 'Bit' → logprob: -12.928776741027832
    6. '   ' → logprob: -13.803776741027832
    7. '(bit' → logprob: -13.803776741027832
    8. ' ' → logprob: -14.553776741027832
    9. '_bit' → logprob: -15.178776741027832
    10. '.bit' → logprob: -15.303776741027832

Token 300: 'stream' (ID: 8598)
  Prédit: 'stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stream' → logprob: -0.0001317871210630983
    2. '_bits' → logprob: -10.125131607055664
    3. '_stream' → logprob: -10.125131607055664
    4. '(stream' → logprob: -10.875131607055664
    5. '   ' → logprob: -12.375131607055664
    6. 'bits' → logprob: -12.500131607055664
    7. '       ' → logprob: -12.750131607055664
    8. 'bit' → logprob: -12.875131607055664
    9. 's' → logprob: -13.000131607055664
    10. '```' → logprob: -13.375131607055664

Token 301: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007855643052607775
    2. 'self' → logprob: -7.7507853507995605
    3. '   ' → logprob: -9.000785827636719
    4. '       ' → logprob: -9.125785827636719
    5. '(self' → logprob: -10.125785827636719
    6. ' ,' → logprob: -10.375785827636719
    7. ',self' → logprob: -11.250785827636719
    8. ' self' → logprob: -11.875785827636719
    9. 'def' → logprob: -11.875785827636719
    10. ':' → logprob: -12.500785827636719

Token 302: ' Bit' (ID: 9422)
  Prédit: 'Bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bit' → logprob: -0.38792309165000916
    2. ' Bit' → logprob: -1.1379231214523315
    3. 'self' → logprob: -7.387923240661621
    4. 'bit' → logprob: -8.512923240661621
    5. ' bit' → logprob: -8.637923240661621
    6. ' self' → logprob: -11.012923240661621
    7. '   ' → logprob: -11.387923240661621
    8. '(Bit' → logprob: -11.512923240661621
    9. '       ' → logprob: -12.387923240661621
    10. ' ' → logprob: -12.512923240661621

Token 303: 'Stream' (ID: 4193)
  Prédit: 'Stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stream' → logprob: -0.00010509284038562328
    2. 'stream' → logprob: -9.375104904174805
    3. '32' → logprob: -11.875104904174805
    4. ' ' → logprob: -12.500104904174805
    5. '_stream' → logprob: -12.875104904174805
    6. '1' → logprob: -13.375104904174805
    7. 'ream' → logprob: -13.625104904174805
    8. '   ' → logprob: -13.750104904174805
    9. ' Stream' → logprob: -14.500104904174805
    10. '16' → logprob: -15.000104904174805

Token 304: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15255551040172577
    2. '):
' → logprob: -2.152555465698242
    3. '):' → logprob: -4.277555465698242
    4. '       ' → logprob: -4.777555465698242
    5. ':' → logprob: -6.652555465698242
    6. '   ' → logprob: -7.527555465698242
    7. '(' → logprob: -7.527555465698242
    8. ':
' → logprob: -9.027555465698242
    9. ' ,' → logprob: -9.027555465698242
    10. ',
' → logprob: -9.652555465698242

Token 305: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0073181502521038055
    2. 'self' → logprob: -5.507318019866943
    3. 'for' → logprob: -6.382318019866943
    4. ' for' → logprob: -6.882318019866943
    5. ' self' → logprob: -7.632318019866943
    6. '   ' → logprob: -10.382318496704102
    7. ' ' → logprob: -14.257318496704102
    8. '      ' → logprob: -14.757318496704102
    9. '	self' → logprob: -15.507318496704102
    10. '     ' → logprob: -15.632318496704102

Token 306: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.18875494599342346
    2. 'for' → logprob: -2.4387550354003906
    3. '       ' → logprob: -2.9387550354003906
    4. ' self' → logprob: -3.5637550354003906
    5. ' for' → logprob: -5.688755035400391
    6. '   ' → logprob: -9.81375503540039
    7. ' ' → logprob: -10.93875503540039
    8. '#' (adapté à ' #') → logprob: -12.68875503540039
    9. '	self' → logprob: -12.81375503540039
    10. '      ' → logprob: -13.06375503540039

Token 307: ' Bits' (ID: 104003)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6986072659492493
    2. 'for' → logprob: -0.9486072659492493
    3. ' self' → logprob: -3.0736072063446045
    4. ' for' → logprob: -3.1986072063446045
    5. '       ' → logprob: -3.5736072063446045
    6. '   ' → logprob: -8.948607444763184
    7. ' ' → logprob: -9.448607444763184
    8. 'def' → logprob: -10.573607444763184
    9. 'For' → logprob: -11.448607444763184
    10. '  ' → logprob: -11.636107444763184

Token 308: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1232404708862305
    2. ' from' → logprob: -1.7482404708862305
    3. ' range' → logprob: -2.1232404708862305
    4. ' for' → logprob: -2.3732404708862305
    5. '       ' → logprob: -2.4982404708862305
    6. 'from' → logprob: -2.6232404708862305
    7. 'range' → logprob: -3.1232404708862305
    8. ' ' → logprob: -3.3732404708862305
    9. ' in' → logprob: -3.7482404708862305
    10. '=' → logprob: -4.4982404708862305

Token 309: '8' (ID: 23)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008817004971206188
    2. 'range' → logprob: -5.133817195892334
    3. 'from' → logprob: -6.133817195892334
    4. '   ' → logprob: -8.258816719055176
    5. ' ' → logprob: -8.633816719055176
    6. '(' → logprob: -9.508816719055176
    7. 'def' → logprob: -10.383816719055176
    8. ':' → logprob: -10.883816719055176
    9. ' range' → logprob: -10.883816719055176
    10. '[' → logprob: -11.008816719055176

Token 310: ' to' (ID: 316)
  Prédit: ' through'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' through' → logprob: -0.8769725561141968
    2. ' to' → logprob: -1.0019725561141968
    3. 'to' → logprob: -2.1269726753234863
    4. ',' → logprob: -3.1269726753234863
    5. 'through' → logprob: -3.3769726753234863
    6. '   ' → logprob: -4.501972675323486
    7. '       ' → logprob: -5.876972675323486
    8. ' ' → logprob: -6.376972675323486
    9. 'def' → logprob: -7.126972675323486
    10. ' ,' → logprob: -7.126972675323486

Token 311: ' ' (ID: 220)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '15' → logprob: -0.8754660487174988
    2. '23' → logprob: -1.5004661083221436
    3. '16' → logprob: -2.5004661083221436
    4. '12' → logprob: -2.5004661083221436
    5. '11' → logprob: -2.5004661083221436
    6. '14' → logprob: -3.3754661083221436
    7. '24' → logprob: -3.3754661083221436
    8. '31' → logprob: -4.8754658699035645
    9. '13' → logprob: -5.0004658699035645
    10. '30' → logprob: -5.0004658699035645

Token 312: '31' (ID: 2911)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.9559549689292908
    2. '23' → logprob: -1.0809550285339355
    3. '12' → logprob: -2.4559550285339355
    4. '16' → logprob: -2.5809550285339355
    5. '11' → logprob: -3.2059550285339355
    6. '31' → logprob: -3.7059550285339355
    7. '24' → logprob: -4.0809550285339355
    8. '14' → logprob: -4.3309550285339355
    9. '30' → logprob: -5.4559550285339355
    10. '13' → logprob: -5.8309550285339355

Token 313: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05823451653122902
    2. ' for' → logprob: -3.058234453201294
    3. 'for' → logprob: -4.683234691619873
    4. '   ' → logprob: -9.558234214782715
    5. 'self' → logprob: -9.683234214782715
    6. ',' → logprob: -9.808234214782715
    7. ':' → logprob: -9.933234214782715
    8. '      ' → logprob: -10.808234214782715
    9. ' self' → logprob: -10.933234214782715
    10. ' =' → logprob: -11.308234214782715

Token 314: '24' (ID: 1494)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.635096549987793
    2. ' for' → logprob: -1.385096549987793
    3. '8' → logprob: -2.010096549987793
    4. 'range' → logprob: -2.635096549987793
    5. '       ' → logprob: -5.510096549987793
    6. ' range' → logprob: -5.635096549987793
    7. '7' → logprob: -6.135096549987793
    8. 'from' → logprob: -6.635096549987793
    9. ')' → logprob: -7.385096549987793
    10. ' ' → logprob: -7.385096549987793

Token 315: ' bits' (ID: 18189)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.034959323704242706
    2. '       ' → logprob: -4.409959316253662
    3. '):
' → logprob: -4.534959316253662
    4. '):' → logprob: -5.409959316253662
    5. ' for' → logprob: -5.784959316253662
    6. ')
' → logprob: -6.534959316253662
    7. 'for' → logprob: -7.034959316253662
    8. '   ' → logprob: -8.03495979309082
    9. 'self' → logprob: -8.15995979309082
    10. ' )' → logprob: -8.40995979309082

Token 316: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9374927878379822
    2. ' for' → logprob: -1.312492847442627
    3. '       ' → logprob: -2.187492847442627
    4. '):
' → logprob: -2.312492847442627
    5. ')
' → logprob: -2.437492847442627
    6. '):' → logprob: -3.437492847442627
    7. 'for' → logprob: -5.062492847442627
    8. ',' → logprob: -7.312492847442627
    9. '   ' → logprob: -7.937492847442627
    10. '):
' → logprob: -7.937492847442627

Token 317: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09644147753715515
    2. 'for' → logprob: -2.9714415073394775
    3. ' for' → logprob: -3.2214415073394775
    4. '   ' → logprob: -7.221441268920898
    5. 'self' → logprob: -9.846441268920898
    6. ' self' → logprob: -11.721441268920898
    7. ',' → logprob: -12.346441268920898
    8. '      ' → logprob: -12.846441268920898
    9. 'def' → logprob: -12.971441268920898
    10. '     ' → logprob: -13.096441268920898

Token 318: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.1168966218829155
    2. 'for' → logprob: -2.866896629333496
    3. '       ' → logprob: -2.991896629333496
    4. ' self' → logprob: -5.866896629333496
    5. ' for' → logprob: -7.866896629333496
    6. '   ' → logprob: -10.366896629333496
    7. ' ' → logprob: -12.866896629333496
    8. '	self' → logprob: -13.366896629333496
    9. '      ' → logprob: -13.991896629333496
    10. '[self' → logprob: -14.116896629333496

Token 319: '.bits' (ID: 89914)
  Prédit: '.bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bits' → logprob: -3.4121114822482923e-06
    2. 'bits' → logprob: -12.750003814697266
    3. '(bits' → logprob: -15.625003814697266
    4. '.' → logprob: -15.875003814697266
    5. '.bit' → logprob: -17.125003814697266
    6. '.b' → logprob: -17.125003814697266
    7. ' .' → logprob: -17.625003814697266
    8. '<bits' → logprob: -18.125003814697266
    9. '.parts' → logprob: -18.375003814697266
    10. 'Bits' → logprob: -19.250003814697266

Token 320: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04883216693997383
    2. ' =' → logprob: -3.0488321781158447
    3. '.clear' → logprob: -8.423831939697266
    4. '=[]' → logprob: -11.298831939697266
    5. '[:]' → logprob: -12.048831939697266
    6. '=[' → logprob: -12.673831939697266
    7. '.extend' → logprob: -13.048831939697266
    8. '.append' → logprob: -14.048831939697266
    9. ' =[' → logprob: -15.298831939697266
    10. '=[]
' → logprob: -15.423831939697266

Token 321: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.013283402658998966
    2. ' [' → logprob: -4.5132832527160645
    3. '[int' → logprob: -6.3882832527160645
    4. '[self' → logprob: -8.013283729553223
    5. '[token' → logprob: -9.888283729553223
    6. '[b' → logprob: -10.513283729553223
    7. '[get' → logprob: -10.888283729553223
    8. '[key' → logprob: -11.513283729553223
    9. '[array' → logprob: -11.513283729553223
    10. '[word' → logprob: -11.513283729553223

Token 322: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.029760440811514854
    2. ' bit' → logprob: -3.5297603607177734
    3. '           ' → logprob: -12.154760360717773
    4. '(bit' → logprob: -12.904760360717773
    5. '       ' → logprob: -14.404760360717773
    6. '   ' → logprob: -14.779760360717773
    7. '               ' → logprob: -14.904760360717773
    8. '.bit' → logprob: -16.154760360717773
    9. ' ' → logprob: -16.404760360717773
    10. '-bit' → logprob: -16.529760360717773

Token 323: 'stream' (ID: 8598)
  Prédit: 'stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stream' → logprob: -0.6543352603912354
    2. '(bit' → logprob: -1.0293352603912354
    3. 'bit' → logprob: -2.1543352603912354
    4. '(stream' → logprob: -5.404335021972656
    5. '(' → logprob: -7.529335021972656
    6. ' (' → logprob: -7.654335021972656
    7. ' bit' → logprob: -7.779335021972656
    8. 's' → logprob: -7.904335021972656
    9. '(
' → logprob: -8.529335021972656
    10. '_stream' → logprob: -9.029335021972656

Token 324: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -4.811348480870947e-05
    2. '.' → logprob: -10.50004768371582
    3. ' .' → logprob: -11.25004768371582
    4. 'get' → logprob: -11.87504768371582
    5. ').' → logprob: -15.87504768371582
    6. '   ' → logprob: -16.62504768371582
    7. ' ' → logprob: -16.75004768371582
    8. ' get' → logprob: -17.00004768371582
    9. '<|end|>' → logprob: -17.12504768371582
    10. '>.' → logprob: -17.25004768371582

Token 325: '_bit' (ID: 39574)
  Prédit: '_bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bit' → logprob: -0.00010330478107789531
    2. 'bit' → logprob: -9.625102996826172
    3. '(bit' → logprob: -11.500102996826172
    4. '_bits' → logprob: -12.125102996826172
    5. ' bit' → logprob: -12.250102996826172
    6. '_' → logprob: -12.750102996826172
    7. ' _' → logprob: -13.000102996826172
    8. '(' → logprob: -13.375102996826172
    9. '```' → logprob: -13.500102996826172
    10. '(_' → logprob: -13.625102996826172

Token 326: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.030051883310079575
    2. '(pos' → logprob: -3.5300519466400146
    3. '(' → logprob: -8.280052185058594
    4. 'pos' → logprob: -11.405052185058594
    5. '(b' → logprob: -11.655052185058594
    6. '(p' → logprob: -11.655052185058594
    7. '(x' → logprob: -12.030052185058594
    8. '(n' → logprob: -12.530052185058594
    9. '(j' → logprob: -12.905052185058594
    10. '(k' → logprob: -13.280052185058594

Token 327: ')' (ID: 8)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07472892850637436
    2. ')' → logprob: -2.6997289657592773
    3. 'for' → logprob: -5.449728965759277
    4. ' ' → logprob: -8.074728965759277
    5. ' i' → logprob: -9.574728965759277
    6. '8' → logprob: -10.074728965759277
    7. ' )' → logprob: -10.949728965759277
    8. ' from' → logprob: -11.199728965759277
    9. 'i' → logprob: -12.074728965759277
    10. '(' → logprob: -12.324728965759277

Token 328: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06197262182831764
    2. 'for' → logprob: -2.8119726181030273
    3. ' ' → logprob: -13.186972618103027
    4. '(i' → logprob: -13.561972618103027
    5. 'i' → logprob: -14.686972618103027
    6. '	for' → logprob: -15.311972618103027
    7. ' i' → logprob: -15.436972618103027
    8. '(' → logprob: -15.686972618103027
    9. '()' → logprob: -16.061973571777344
    10. '8' → logprob: -16.311973571777344

Token 329: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1006815955042839
    2. 'range' → logprob: -2.3506815433502197
    3. 'i' → logprob: -8.35068130493164
    4. ' i' → logprob: -8.35068130493164
    5. ' ' → logprob: -13.97568130493164
    6. '(range' → logprob: -14.10068130493164
    7. '	range' → logprob: -14.60068130493164
    8. '   ' → logprob: -16.72568130493164
    9. '  ' → logprob: -16.72568130493164
    10. ' in' → logprob: -16.72568130493164

Token 330: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05994090437889099
    2. 'in' → logprob: -2.934940814971924
    3. 'range' → logprob: -5.434940814971924
    4. ' range' → logprob: -7.309940814971924
    5. ' ' → logprob: -11.934941291809082
    6. '(range' → logprob: -12.059941291809082
    7. '
' → logprob: -14.559941291809082
    8. '18' → logprob: -14.809941291809082
    9. 'i' → logprob: -15.309941291809082
    10. '8' → logprob: -15.434941291809082

Token 331: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00861468818038702
    2. ' range' → logprob: -4.758614540100098
    3. '(range' → logprob: -16.383615493774414
    4. '   ' → logprob: -17.383615493774414
    5. ' ' → logprob: -17.883615493774414
    6. '	range' → logprob: -18.758615493774414
    7. '
' → logprob: -19.008615493774414
    8. '  ' → logprob: -19.758615493774414
    9. 'list' → logprob: -20.883615493774414
    10. 'Range' → logprob: -20.883615493774414

Token 332: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0036153970286250114
    2. '8' → logprob: -5.628615379333496
    3. ' (' → logprob: -11.128615379333496
    4. '(
' → logprob: -15.003615379333496
    5. ' ' → logprob: -15.503615379333496
    6. '[' → logprob: -18.003616333007812
    7. '```' → logprob: -18.128616333007812
    8. '7' → logprob: -18.253616333007812
    9. '   ' → logprob: -18.378616333007812
    10. '{' → logprob: -18.378616333007812

Token 333: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -1.3425219549390022e-05
    2. ' ' → logprob: -11.25001335144043
    3. '9' → logprob: -16.12501335144043
    4. '18' → logprob: -16.37501335144043
    5. '   ' → logprob: -17.87501335144043
    6. '۸' → logprob: -18.18751335144043
    7. '８' → logprob: -18.75001335144043
    8. '16' → logprob: -18.87501335144043
    9. '08' → logprob: -19.06251335144043
    10. '  ' → logprob: -19.12501335144043

Token 334: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.368984107510187e-05
    2. ' ,' → logprob: -10.375033378601074
    3. ',
' → logprob: -13.375033378601074
    4. '32' → logprob: -14.625033378601074
    5. '16' → logprob: -15.375033378601074
    6. ',int' → logprob: -17.12503433227539
    7. '1' → logprob: -17.37503433227539
    8. '18' → logprob: -17.62503433227539
    9. '8' → logprob: -17.75003433227539
    10. '31' → logprob: -17.87503433227539

Token 335: ' ' (ID: 220)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -5.796184723294573e-06
    2. '31' → logprob: -12.750005722045898
    3. '8' → logprob: -13.375005722045898
    4. '   ' → logprob: -15.750005722045898
    5. ' ' → logprob: -15.875005722045898
    6. '{' → logprob: -15.875005722045898
    7. '```' → logprob: -16.1250057220459
    8. '
' → logprob: -16.2500057220459
    9. '	' → logprob: -16.5000057220459
    10. '(' → logprob: -16.6250057220459

Token 336: '32' (ID: 1398)
  Prédit: '32'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -6.2729995988775045e-06
    2. '8' → logprob: -12.625006675720215
    3. '31' → logprob: -13.125006675720215
    4. ' ' → logprob: -15.375006675720215
    5. '
' → logprob: -15.750006675720215
    6. '   ' → logprob: -16.1250057220459
    7. '{' → logprob: -16.6250057220459
    8. '

' → logprob: -16.7500057220459
    9. '```' → logprob: -16.8750057220459
    10. '1' → logprob: -17.2500057220459

Token 337: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00042768914136104286
    2. ' )' → logprob: -8.37542724609375
    3. '+' → logprob: -9.00042724609375
    4. ')' → logprob: -9.62542724609375
    5. ' +' → logprob: -13.00042724609375
    6. ')]
' → logprob: -13.00042724609375
    7. ']' → logprob: -14.62542724609375
    8. ')])' → logprob: -14.62542724609375
    9. ')]

' → logprob: -15.00042724609375
    10. ')][' → logprob: -15.37542724609375

Token 338: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7198401093482971
    2. 'def' → logprob: -0.7198401093482971
    3. '<|end|>' → logprob: -4.094840049743652
    4. ' def' → logprob: -4.844840049743652
    5. '<|end|>' → logprob: -7.844840049743652
    6. '

' → logprob: -7.969840049743652
    7. '
' → logprob: -8.094840049743652
    8. ' ' → logprob: -8.344840049743652
    9. ')' → logprob: -8.969840049743652
    10. '  ' → logprob: -9.094840049743652

Token 339: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.049473054707050323
    2. '   ' → logprob: -3.0494730472564697
    3. ' def' → logprob: -7.049473285675049
    4. '
' → logprob: -11.79947280883789
    5. ')' → logprob: -12.79947280883789
    6. ' ' → logprob: -13.17447280883789
    7. '	def' → logprob: -13.29947280883789
    8. '```' → logprob: -14.04947280883789
    9. '    
' → logprob: -14.17447280883789
    10. '  ' → logprob: -14.29947280883789

Token 340: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.048603612929582596
    2. ' value' → logprob: -3.0486035346984863
    3. 'def' → logprob: -12.298604011535645
    4. '_value' → logprob: -12.298604011535645
    5. ' ' → logprob: -13.173604011535645
    6. '__' → logprob: -14.048604011535645
    7. 'get' → logprob: -14.423604011535645
    8. '   ' → logprob: -14.548604011535645
    9. 'bits' → logprob: -14.548604011535645
    10. '  ' → logprob: -14.673604011535645

Token 341: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.9862216504407115e-05
    2. '(' → logprob: -10.875020027160645
    3. ' (' → logprob: -14.875020027160645
    4. 'self' → logprob: -15.625020027160645
    5. '   ' → logprob: -16.000019073486328
    6. '(s' → logprob: -16.125019073486328
    7. '()' → logprob: -17.000019073486328
    8. '       ' → logprob: -17.875019073486328
    9. '(
' → logprob: -17.875019073486328
    10. ' ' → logprob: -18.000019073486328

Token 342: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003907543432433158
    2. '   ' → logprob: -9.125391006469727
    3. '):' → logprob: -9.625391006469727
    4. '):
' → logprob: -10.000391006469727
    5. '(self' → logprob: -10.000391006469727
    6. 'self' → logprob: -10.250391006469727
    7. 'def' → logprob: -10.500391006469727
    8. '       ' → logprob: -10.625391006469727
    9. ')->' → logprob: -11.250391006469727
    10. '()' → logprob: -11.500391006469727

Token 343: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.21807169914245605
    2. ' ->' → logprob: -1.968071699142456
    3. '(self' → logprob: -2.968071699142456
    4. '   ' → logprob: -6.093071937561035
    5. '       ' → logprob: -6.468071937561035
    6. ':' → logprob: -7.843071937561035
    7. ')' → logprob: -8.093071937561035
    8. 'self' → logprob: -9.093071937561035
    9. ' ' → logprob: -9.843071937561035
    10. '(' → logprob: -9.968071937561035

Token 344: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.38929155468940735
    2. ' int' → logprob: -1.139291524887085
    3. 'float' → logprob: -6.514291763305664
    4. ' float' → logprob: -7.014291763305664
    5. '   ' → logprob: -10.764291763305664
    6. ' ' → logprob: -11.639291763305664
    7. '(int' → logprob: -12.639291763305664
    8. '  ' → logprob: -14.139291763305664
    9. '[int' → logprob: -14.139291763305664
    10. '	int' → logprob: -14.264291763305664

Token 345: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.14296193420886993
    2. ':' → logprob: -2.0179619789123535
    3. '():
' → logprob: -9.267961502075195
    4. '       ' → logprob: -9.767961502075195
    5. ':
' → logprob: -9.892961502075195
    6. '):
' → logprob: -9.892961502075195
    7. ' :
' → logprob: -11.517961502075195
    8. '=' → logprob: -12.392961502075195
    9. '():' → logprob: -12.517961502075195
    10. ':return' → logprob: -12.517961502075195

Token 346: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002948578679934144
    2. 'return' → logprob: -6.627948760986328
    3. 'int' → logprob: -7.252948760986328
    4. '   ' → logprob: -8.377948760986328
    5. ' return' → logprob: -8.377948760986328
    6. 'sum' → logprob: -8.377948760986328
    7. '0' → logprob: -9.002948760986328
    8. ' int' → logprob: -10.877948760986328
    9. '      ' → logprob: -10.877948760986328
    10. ' ' → logprob: -11.002948760986328

Token 347: ' total' (ID: 3609)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.40268003940582275
    2. 'val' → logprob: -2.027679920196533
    3. '       ' → logprob: -2.277679920196533
    4. ' result' → logprob: -3.402679920196533
    5. 'res' → logprob: -3.652679920196533
    6. 'return' → logprob: -4.152679920196533
    7. ' val' → logprob: -4.527679920196533
    8. 'sum' → logprob: -5.902679920196533
    9. 'total' (adapté à ' total') → logprob: -5.902679920196533
    10. ' return' → logprob: -6.277679920196533

Token 348: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132685124874115
    2. ' =' → logprob: -1.3132685422897339
    3. ' ' → logprob: -12.188268661499023
    4. '   ' → logprob: -13.813268661499023
    5. '0' → logprob: -14.813268661499023
    6. '       ' → logprob: -15.438268661499023
    7. '  ' → logprob: -16.938268661499023
    8. 's' → logprob: -17.438268661499023
    9. 'return' → logprob: -17.563268661499023
    10. '    ' → logprob: -17.688268661499023

Token 349: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003805064770858735
    2. ' ' → logprob: -7.875380516052246
    3. 'sum' → logprob: -15.250380516052246
    4. '   ' → logprob: -16.37537956237793
    5. '       ' → logprob: -16.87537956237793
    6. ' sum' → logprob: -17.12537956237793
    7. '(' → logprob: -18.75037956237793
    8. '  ' → logprob: -19.37537956237793
    9. '     ' → logprob: -20.37537956237793
    10. '
' → logprob: -20.37537956237793

Token 350: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010270876373397186
    2. 'sum' → logprob: -9.250102996826172
    3. ' ' → logprob: -12.000102996826172
    4. ' sum' → logprob: -15.875102996826172
    5. '   ' → logprob: -16.250102996826172
    6. '(' → logprob: -16.500102996826172
    7. '(sum' → logprob: -18.750102996826172
    8. 'int' → logprob: -18.750102996826172
    9. '
' → logprob: -19.375102996826172
    10. '```' → logprob: -19.562602996826172

Token 351: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2839304506778717
    2. '
' → logprob: -1.6589304208755493
    3. ' for' → logprob: -3.158930540084839
    4. 'for' → logprob: -4.28393030166626
    5. '<|end|>' → logprob: -9.283930778503418
    6. '        
' → logprob: -9.408930778503418
    7. '
' → logprob: -9.533930778503418
    8. ',' → logprob: -9.783930778503418
    9. '	for' → logprob: -10.033930778503418
    10. '   ' → logprob: -10.158930778503418

Token 352: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.277299165725708
    2. ' for' → logprob: -1.527299165725708
    3. 'for' → logprob: -3.777299165725708
    4. '
' → logprob: -6.277298927307129
    5. '   ' → logprob: -8.402298927307129
    6. '        
' → logprob: -11.027298927307129
    7. '	for' → logprob: -11.902298927307129
    8. ' 
' → logprob: -12.152298927307129
    9. '    
' → logprob: -12.152298927307129
    10. ',' → logprob: -12.152298927307129

Token 353: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4744471311569214
    2. 'for' → logprob: -0.9744471311569214
    3. '       ' → logprob: -7.974447250366211
    4. '
' → logprob: -10.724447250366211
    5. '   ' → logprob: -13.724447250366211
    6. '	for' → logprob: -14.224447250366211
    7. '        ' → logprob: -14.599447250366211
    8. '```' → logprob: -14.599447250366211
    9. ' ' → logprob: -14.724447250366211
    10. ' 
' → logprob: -15.599447250366211

Token 354: ' b' (ID: 287)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007787139620631933
    2. ' for' → logprob: -4.882787227630615
    3. '       ' → logprob: -8.632786750793457
    4. '   ' → logprob: -13.507786750793457
    5. '```' → logprob: -14.507786750793457
    6. '
' → logprob: -15.257786750793457
    7. ' ' → logprob: -15.757786750793457
    8. '	for' → logprob: -16.132787704467773
    9. '        
' → logprob: -16.507787704467773
    10. 'shift' → logprob: -16.632787704467773

Token 355: '8' (ID: 23)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13306748867034912
    2. 'its' → logprob: -2.6330676078796387
    3. 'it' → logprob: -3.7580676078796387
    4. ' for' → logprob: -3.8830676078796387
    5. 'in' → logprob: -5.258067607879639
    6. '=' → logprob: -7.133067607879639
    7. ' =' → logprob: -7.258067607879639
    8. '   ' → logprob: -7.383067607879639
    9. ' in' → logprob: -7.508067607879639
    10. 'i' → logprob: -8.50806713104248

Token 356: ' is' (ID: 382)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.7766812443733215
    2. ' for' → logprob: -1.7766811847686768
    3. 'for' → logprob: -2.0266811847686768
    4. '       ' → logprob: -2.2766811847686768
    5. 'to' → logprob: -3.1516811847686768
    6. '   ' → logprob: -3.9016811847686768
    7. ' in' → logprob: -4.151681423187256
    8. ',' → logprob: -4.401681423187256
    9. '-' → logprob: -4.401681423187256
    10. ' ' → logprob: -4.776681423187256

Token 357: ' L' (ID: 451)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5122146010398865
    2. 'self' → logprob: -1.3872146606445312
    3. '24' → logprob: -3.1372146606445312
    4. '23' → logprob: -3.3872146606445312
    5. ' ' → logprob: -3.8872146606445312
    6. '0' → logprob: -4.262214660644531
    7. '31' → logprob: -5.262214660644531
    8. ' self' → logprob: -5.387214660644531
    9. '7' → logprob: -5.387214660644531
    10. '(' → logprob: -5.512214660644531

Token 358: 'SB' (ID: 28639)
  Prédit: 'eft'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eft' → logprob: -0.14382383227348328
    2. 'e' → logprob: -2.8938238620758057
    3. 'ength' → logprob: -4.018823623657227
    4. 'en' → logprob: -4.018823623657227
    5. 'ast' → logprob: -4.268823623657227
    6. 'east' → logprob: -4.393823623657227
    7. 'ist' → logprob: -4.893823623657227
    8. 'sb' → logprob: -6.268823623657227
    9. '   ' → logprob: -6.393823623657227
    10. '=' → logprob: -6.518823623657227

Token 359: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45381319522857666
    2. ',' → logprob: -1.4538131952285767
    3. ' for' → logprob: -3.703813076019287
    4. 'for' → logprob: -3.703813076019287
    5. '-' → logprob: -3.828813076019287
    6. '0' → logprob: -4.703813076019287
    7. '=' → logprob: -5.203813076019287
    8. '8' → logprob: -5.328813076019287
    9. ',
' → logprob: -5.328813076019287
    10. '   ' → logprob: -5.578813076019287

Token 360: ' integer' (ID: 16336)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.017082689329981804
    2. 'range' → logprob: -5.017082691192627
    3. '24' → logprob: -5.392082691192627
    4. ' self' → logprob: -5.892082691192627
    5. 'the' → logprob: -7.017082691192627
    6. 'total' → logprob: -7.392082691192627
    7. '   ' → logprob: -8.392082214355469
    8. 're' → logprob: -8.392082214355469
    9. '23' → logprob: -8.892082214355469
    10. 'int' → logprob: -9.142082214355469

Token 361: ' part' (ID: 997)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.607609212398529
    2. 's' → logprob: -2.357609272003174
    3. 'for' → logprob: -2.482609272003174
    4. 'part' → logprob: -2.982609272003174
    5. '   ' → logprob: -3.107609272003174
    6. ',' → logprob: -3.357609272003174
    7. ' for' → logprob: -3.357609272003174
    8. ' part' → logprob: -3.607609272003174
    9. '_part' → logprob: -4.107609272003174
    10. 'self' → logprob: -4.607609272003174

Token 362: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16134409606456757
    2. ' for' → logprob: -2.161344051361084
    3. 'for' → logprob: -4.161344051361084
    4. ',' → logprob: -5.161344051361084
    5. '
' → logprob: -5.661344051361084
    6. '   ' → logprob: -5.911344051361084
    7. '+' → logprob: -7.286344051361084
    8. ':' → logprob: -7.286344051361084
    9. ' ' → logprob: -7.411344051361084
    10. '0' → logprob: -7.411344051361084

Token 363: ' MS' (ID: 15861)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.4019166231155396
    2. ' highest' → logprob: -2.27691650390625
    3. ' self' → logprob: -2.65191650390625
    4. ' ' → logprob: -2.65191650390625
    5. ' the' → logprob: -2.77691650390625
    6. ' b' → logprob: -2.77691650390625
    7. ' reverse' → logprob: -3.15191650390625
    8. 'self' → logprob: -3.15191650390625
    9. ' reversed' → logprob: -3.15191650390625
    10. 'bits' → logprob: -3.52691650390625

Token 364: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0004801240866072476
    2. 'b' → logprob: -7.7504801750183105
    3. 'bit' → logprob: -11.125479698181152
    4. 'Bit' → logprob: -11.500479698181152
    5. '
' → logprob: -12.125479698181152
    6. ' B' → logprob: -12.250479698181152
    7. '   ' → logprob: -12.250479698181152
    8. '8' → logprob: -12.875479698181152
    9. '

' → logprob: -13.625479698181152
    10. '1' → logprob: -14.250479698181152

Token 365: '?' (ID: 30)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.884007453918457
    2. ',' → logprob: -2.009007453918457
    3. ' of' → logprob: -2.509007453918457
    4. '-' → logprob: -2.509007453918457
    5. '   ' → logprob: -2.634007453918457
    6. 'of' → logprob: -3.759007453918457
    7. ':' → logprob: -3.884007453918457
    8. '8' → logprob: -4.134007453918457
    9. ' ' → logprob: -4.259007453918457
    10. ' for' → logprob: -4.384007453918457

Token 366: ' The' (ID: 623)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03323804587125778
    2. ' ' → logprob: -5.283237934112549
    3. '31' → logprob: -5.533237934112549
    4. '=' → logprob: -5.783237934112549
    5. ' for' → logprob: -5.783237934112549
    6. '24' → logprob: -5.783237934112549
    7. ',' → logprob: -6.283237934112549
    8. '   ' → logprob: -6.533237934112549
    9. 'for' → logprob: -6.783237934112549
    10. '32' → logprob: -6.908237934112549

Token 367: ' problem' (ID: 4792)
  Prédit: '31'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '31' → logprob: -0.6079159379005432
    2. 'reverse' → logprob: -2.7329158782958984
    3. ' is' → logprob: -2.9829158782958984
    4. ' reverse' → logprob: -3.1079158782958984
    5. '32' → logprob: -3.3579158782958984
    6. ' ' → logprob: -3.6079158782958984
    7. ' bits' → logprob: -3.6079158782958984
    8. '24' → logprob: -3.7329158782958984
    9. '16' → logprob: -3.7329158782958984
    10. 'ms' → logprob: -3.9829158782958984

Token 368: ' states' (ID: 9407)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17152027785778046
    2. ' is' → logprob: -3.046520233154297
    3. '   ' → logprob: -3.796520233154297
    4. ':' → logprob: -4.046520233154297
    5. '32' → logprob: -4.171520233154297
    6. 'is' → logprob: -4.671520233154297
    7. ',' → logprob: -4.671520233154297
    8. ' ' → logprob: -5.546520233154297
    9. '31' → logprob: -5.671520233154297
    10. '=' → logprob: -5.921520233154297

Token 369: ':
' (ID: 734)
  Prédit: '31'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '31' → logprob: -0.5045217275619507
    2. 're' → logprob: -2.3795218467712402
    3. 'that' → logprob: -3.3795218467712402
    4. ' that' → logprob: -3.5045218467712402
    5. 'for' → logprob: -3.5045218467712402
    6. '24' → logprob: -3.6295218467712402
    7. '23' → logprob: -3.8795218467712402
    8. '32' → logprob: -4.00452184677124
    9. '       ' → logprob: -4.00452184677124
    10. '           ' → logprob: -4.00452184677124

Token 370: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20494316518306732
    2. '24' → logprob: -2.8299431800842285
    3. ' ' → logprob: -3.4549431800842285
    4. '32' → logprob: -4.2049431800842285
    5. '31' → logprob: -4.4549431800842285
    6. ' for' → logprob: -4.8299431800842285
    7. '8' → logprob: -4.9549431800842285
    8. '#' → logprob: -4.9549431800842285
    9. '28' → logprob: -5.5799431800842285
    10. '7' → logprob: -5.5799431800842285

Token 371: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7004047632217407
    2. ' for' → logprob: -2.075404644012451
    3. '31' → logprob: -2.825404644012451
    4. 'reverse' → logprob: -2.825404644012451
    5. '       ' → logprob: -3.075404644012451
    6. '#' (adapté à ' #') → logprob: -3.325404644012451
    7. ' ' → logprob: -3.450404644012451
    8. '   ' → logprob: -3.700404644012451
    9. 'range' → logprob: -3.825404644012451
    10. 're' → logprob: -4.325404644012451

Token 372: ' integer' (ID: 16336)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.43205058574676514
    2. '#' → logprob: -1.3070505857467651
    3. ' for' → logprob: -4.057050704956055
    4. 'reverse' → logprob: -4.057050704956055
    5. '       ' → logprob: -4.557050704956055
    6. 'from' → logprob: -4.932050704956055
    7. 'b' → logprob: -4.932050704956055
    8. '   ' → logprob: -5.807050704956055
    9. 'total' → logprob: -6.057050704956055
    10. '31' → logprob: -6.432050704956055

Token 373: ' value' (ID: 1432)
  Prédit: '_part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.660585343837738
    2. '=' → logprob: -2.285585403442383
    3. ' =' → logprob: -2.285585403442383
    4. 's' → logprob: -2.785585403442383
    5. '_bits' → logprob: -3.160585403442383
    6. '_parts' → logprob: -3.410585403442383
    7. 'part' → logprob: -3.660585403442383
    8. '       ' → logprob: -3.910585403442383
    9. 'Part' → logprob: -4.160585403442383
    10. ' part' → logprob: -4.285585403442383

Token 374: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8701148629188538
    2. '=' → logprob: -1.245114803314209
    3. ',' → logprob: -2.120114803314209
    4. ' =' → logprob: -2.995114803314209
    5. '8' → logprob: -3.995114803314209
    6. ' for' → logprob: -4.120114803314209
    7. ' ' → logprob: -4.120114803314209
    8. '   ' → logprob: -4.245114803314209
    9. ' ,' → logprob: -4.620114803314209
    10. 'for' → logprob: -4.995114803314209

Token 375: ' b' (ID: 287)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.6008809208869934
    2. 'total' → logprob: -1.4758808612823486
    3. ' sum' → logprob: -2.7258808612823486
    4. 'self' → logprob: -2.9758808612823486
    5. ' total' → logprob: -3.3508808612823486
    6. '(sum' → logprob: -4.100881099700928
    7. ' (' → logprob: -4.225881099700928
    8. '(total' → logprob: -4.350881099700928
    9. ' self' → logprob: -4.725881099700928
    10. '(self' → logprob: -5.350881099700928

Token 376: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.26911845803260803
    2. '31' → logprob: -1.5191184282302856
    3. '32' → logprob: -4.769118309020996
    4. '7' → logprob: -5.894118309020996
    5. '[' → logprob: -6.144118309020996
    6. '23' → logprob: -6.894118309020996
    7. '24' → logprob: -7.269118309020996
    8. ' ' → logprob: -8.144118309020996
    9. '(' → logprob: -8.769118309020996
    10. '30' → logprob: -9.144118309020996

Token 377: ' +' (ID: 659)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.5873917937278748
    2. ' ' → logprob: -2.5873918533325195
    3. '2' → logprob: -2.8373918533325195
    4. '       ' → logprob: -3.2123918533325195
    5. '[' → logprob: -3.4623918533325195
    6. '8' → logprob: -3.4623918533325195
    7. ',' → logprob: -3.8373918533325195
    8. ')' → logprob: -3.9623918533325195
    9. ':' → logprob: -3.9623918533325195
    10. '[::-' → logprob: -3.9623918533325195

Token 378: ' ' (ID: 220)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8564209938049316
    2. 'b' → logprob: -1.4814209938049316
    3. ' b' → logprob: -1.4814209938049316
    4. '(' → logprob: -3.9814209938049316
    5. '(b' → logprob: -3.9814209938049316
    6. ' ' → logprob: -4.231420993804932
    7. '2' → logprob: -4.731420993804932
    8. ' self' → logprob: -4.731420993804932
    9. ' sum' → logprob: -4.731420993804932
    10. 'self' → logprob: -4.731420993804932

Token 379: '2' (ID: 17)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8229337930679321
    2. ' (' → logprob: -1.6979337930679321
    3. '(' → logprob: -2.3229336738586426
    4. 'sum' → logprob: -2.5729336738586426
    5. '2' → logprob: -3.3229336738586426
    6. '(b' → logprob: -3.4479336738586426
    7. ' b' → logprob: -3.6979336738586426
    8. '(sum' → logprob: -3.8229336738586426
    9. 'self' → logprob: -4.072933673858643
    10. '(i' → logprob: -4.447933673858643

Token 380: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.13280907273292542
    2. ' **' → logprob: -2.3828091621398926
    3. '-' → logprob: -4.382809162139893
    4. ' -' → logprob: -5.382809162139893
    5. '```' → logprob: -5.507809162139893
    6. '8' → logprob: -5.882809162139893
    7. ' ' → logprob: -6.382809162139893
    8. '[' → logprob: -6.507809162139893
    9. '7' → logprob: -7.007809162139893
    10. '^' → logprob: -7.257809162139893

Token 381: '1' (ID: 16)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -1.3967431783676147
    2. '24' → logprob: -1.3967431783676147
    3. '7' → logprob: -1.7717431783676147
    4. '23' → logprob: -2.1467432975769043
    5. '16' → logprob: -2.3967432975769043
    6. '0' → logprob: -3.0217432975769043
    7. '(' → logprob: -3.5217432975769043
    8. '8' → logprob: -3.8967432975769043
    9. '1' → logprob: -4.146743297576904
    10. '9' → logprob: -6.146743297576904

Token 382: ' *' (ID: 425)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.7040278315544128
    2. '**' → logprob: -1.8290278911590576
    3. '8' → logprob: -2.4540278911590576
    4. ')' → logprob: -2.9540278911590576
    5. ' ' → logprob: -3.3290278911590576
    6. ' **' → logprob: -3.5790278911590576
    7. '+' → logprob: -3.8290278911590576
    8. '       ' → logprob: -3.9540278911590576
    9. '
' → logprob: -4.0790276527404785
    10. ',' → logprob: -4.0790276527404785

Token 383: ' b' (ID: 287)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08497076481580734
    2. 'bits' → logprob: -2.959970712661743
    3. ' self' → logprob: -3.709970712661743
    4. ' bits' → logprob: -5.834970951080322
    5. '(self' → logprob: -6.709970951080322
    6. '(bits' → logprob: -7.834970951080322
    7. 'bit' → logprob: -8.334970474243164
    8. 'b' → logprob: -9.459970474243164
    9. '(' → logprob: -9.584970474243164
    10. '`' → logprob: -9.709970474243164

Token 384: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.010916120372712612
    2. '8' → logprob: -5.010916233062744
    3. '[' → logprob: -6.635916233062744
    4. '32' → logprob: -6.760916233062744
    5. '17' → logprob: -7.760916233062744
    6. 't' → logprob: -8.010915756225586
    7. '16' → logprob: -8.260915756225586
    8. 'its' → logprob: -8.510915756225586
    9. '15' → logprob: -9.135915756225586
    10. '(' → logprob: -9.635915756225586

Token 385: ' +' (ID: 659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6819411516189575
    2. '+' → logprob: -1.4319411516189575
    3. ' +' → logprob: -2.431941032409668
    4. ' ' → logprob: -2.556941032409668
    5. '[' → logprob: -4.306941032409668
    6. ')' → logprob: -4.306941032409668
    7. '8' → logprob: -4.431941032409668
    8. ':' → logprob: -4.556941032409668
    9. '   ' → logprob: -4.931941032409668
    10. '0' → logprob: -4.931941032409668

Token 386: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4109489917755127
    2. ' ' → logprob: -1.1609489917755127
    3. '       ' → logprob: -4.785948753356934
    4. ' b' → logprob: -5.285948753356934
    5. 'b' → logprob: -5.535948753356934
    6. '...' → logprob: -6.035948753356934
    7. '   ' → logprob: -6.660948753356934
    8. '           ' → logprob: -7.160948753356934
    9. '               ' → logprob: -8.160948753356934
    10. '"' → logprob: -9.035948753356934

Token 387: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.014070413075387478
    2. '...' → logprob: -5.014070510864258
    3. ' ' → logprob: -5.389070510864258
    4. 'b' → logprob: -6.764070510864258
    5. '3' → logprob: -7.764070510864258
    6. '   ' → logprob: -8.014070510864258
    7. '(' → logprob: -9.139070510864258
    8. '
' → logprob: -9.139070510864258
    9. '       ' → logprob: -9.264070510864258
    10. '`' → logprob: -9.889070510864258

Token 388: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.2032412439584732
    2. ' **' → logprob: -2.0782413482666016
    3. ' ' → logprob: -4.078241348266602
    4. '^' → logprob: -4.703241348266602
    5. '       ' → logprob: -4.953241348266602
    6. '0' → logprob: -5.078241348266602
    7. '```' → logprob: -5.078241348266602
    8. '*' → logprob: -6.078241348266602
    9. '-' → logprob: -6.203241348266602
    10. '[' → logprob: -6.578241348266602

Token 389: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.23183204233646393
    2. '1' → logprob: -1.6068320274353027
    3. '0' → logprob: -5.981832027435303
    4. '7' → logprob: -6.606832027435303
    5. '8' → logprob: -7.356832027435303
    6. '9' → logprob: -8.231832504272461
    7. '15' → logprob: -8.481832504272461
    8. '17' → logprob: -8.481832504272461
    9. '16' → logprob: -8.606832504272461
    10. ' ' → logprob: -8.731832504272461

Token 390: ' *' (ID: 425)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2389146089553833
    2. ' for' → logprob: -1.2389146089553833
    3. '       ' → logprob: -2.3639144897460938
    4. 'for' → logprob: -2.3639144897460938
    5. '[i' → logprob: -2.7389144897460938
    6. '8' → logprob: -3.2389144897460938
    7. '   ' → logprob: -3.6139144897460938
    8. ' ' → logprob: -3.8639144897460938
    9. '```' → logprob: -4.488914489746094
    10. '(' → logprob: -4.738914489746094

Token 391: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.016862353309988976
    2. ' b' → logprob: -4.766862392425537
    3. 'bit' → logprob: -5.266862392425537
    4. 'self' → logprob: -6.891862392425537
    5. '(' → logprob: -7.641862392425537
    6. 'i' → logprob: -8.016861915588379
    7. ' (' → logprob: -8.141861915588379
    8. '(b' → logprob: -8.766861915588379
    9. '(i' → logprob: -8.766861915588379
    10. ' bit' → logprob: -9.641861915588379

Token 392: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.016988934949040413
    2. '32' → logprob: -4.891988754272461
    3. '9' → logprob: -5.516988754272461
    4. '8' → logprob: -5.641988754272461
    5. '(' → logprob: -6.516988754272461
    6. ' ' → logprob: -9.266988754272461
    7. '30' → logprob: -10.141988754272461
    8. ' (' → logprob: -10.266988754272461
    9. '31' → logprob: -11.016988754272461
    10. '[' → logprob: -11.141988754272461

Token 393: ' ...' (ID: 2550)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028914913535118103
    2. '   ' → logprob: -4.403914928436279
    3. ' ' → logprob: -5.653914928436279
    4. ')' → logprob: -6.153914928436279
    5. ' for' → logprob: -6.153914928436279
    6. '8' → logprob: -7.028914928436279
    7. ',' → logprob: -7.403914928436279
    8. '+' → logprob: -7.403914928436279
    9. '  ' → logprob: -7.528914928436279
    10. '[' → logprob: -7.653914928436279

Token 394: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2283649891614914
    2. ')' → logprob: -3.228364944458008
    3. ' for' → logprob: -3.228364944458008
    4. ' ' → logprob: -3.353364944458008
    5. '   ' → logprob: -3.853364944458008
    6. '8' → logprob: -4.228364944458008
    7. 'for' → logprob: -4.853364944458008
    8. '[' → logprob: -4.978364944458008
    9. '<|end|>' → logprob: -5.103364944458008
    10. ':' → logprob: -5.353364944458008

Token 395: '2' (ID: 17)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7791073322296143
    2. ')' → logprob: -1.2791073322296143
    3. ' for' → logprob: -3.4041073322296143
    4. ']' → logprob: -3.4041073322296143
    5. '   ' → logprob: -3.4041073322296143
    6. '[' → logprob: -3.6541073322296143
    7. 'for' → logprob: -3.6541073322296143
    8. '+' → logprob: -3.9041073322296143
    9. ')
' → logprob: -4.154107093811035
    10. '8' → logprob: -4.279107093811035

Token 396: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.23925922811031342
    2. '^' → logprob: -1.6142592430114746
    3. ' **' → logprob: -5.114259243011475
    4. '```' → logprob: -5.614259243011475
    5. '3' → logprob: -7.114259243011475
    6. ' ' → logprob: -7.489259243011475
    7. '   ' → logprob: -7.739259243011475
    8. '`' → logprob: -7.864259243011475
    9. '-' → logprob: -8.239258766174316
    10. '8' → logprob: -8.239258766174316

Token 397: '23' (ID: 1860)
  Prédit: '23'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '23' → logprob: -0.038782116025686264
    2. '24' → logprob: -4.538782119750977
    3. '(' → logprob: -4.663782119750977
    4. '2' → logprob: -4.788782119750977
    5. '16' → logprob: -5.788782119750977
    6. '22' → logprob: -6.038782119750977
    7. '1' → logprob: -6.788782119750977
    8. '15' → logprob: -7.163782119750977
    9. '17' → logprob: -7.788782119750977
    10. '0' → logprob: -8.163782119750977

Token 398: ' *' (ID: 425)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030118849128484726
    2. '   ' → logprob: -4.280118942260742
    3. ' for' → logprob: -5.405118942260742
    4. ' ' → logprob: -5.780118942260742
    5. ')' → logprob: -6.405118942260742
    6. ',' → logprob: -7.155118942260742
    7. '0' → logprob: -7.405118942260742
    8. 'for' → logprob: -7.530118942260742
    9. ':' → logprob: -7.655118942260742
    10. '+' → logprob: -7.780118942260742

Token 399: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.06852763146162033
    2. 'self' → logprob: -3.1935276985168457
    3. 'bit' → logprob: -3.9435276985168457
    4. 'bits' → logprob: -5.693527698516846
    5. ' b' → logprob: -6.693527698516846
    6. ' self' → logprob: -6.943527698516846
    7. ' bit' → logprob: -8.818527221679688
    8. ' bits' → logprob: -9.943527221679688
    9. '31' → logprob: -10.693527221679688
    10. '32' → logprob: -11.318527221679688

Token 400: '31' (ID: 2911)
  Prédit: '31'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '31' → logprob: -0.07448398321866989
    2. '32' → logprob: -2.699483871459961
    3. '39' → logprob: -6.074483871459961
    4. '8' → logprob: -6.449483871459961
    5. '30' → logprob: -8.199483871459961
    6. '38' → logprob: -8.949483871459961
    7. '37' → logprob: -9.574483871459961
    8. '(' → logprob: -10.199483871459961
    9. '
' → logprob: -10.824483871459961
    10. '7' → logprob: -10.949483871459961

Token 401: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03624225780367851
    2. ' for' → logprob: -3.7862422466278076
    3. '
' → logprob: -5.411242485046387
    4. '   ' → logprob: -5.786242485046387
    5. 'for' → logprob: -6.661242485046387
    6. '[::-' → logprob: -6.911242485046387
    7. 'def' → logprob: -7.286242485046387
    8. ' ' → logprob: -7.286242485046387
    9. ',' → logprob: -8.036242485046387
    10. '<|end|>' → logprob: -8.911242485046387

Token 402: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015535091981291771
    2. ' for' → logprob: -4.8905348777771
    3. '   ' → logprob: -5.3905348777771
    4. ' return' → logprob: -7.1405348777771
    5. 'return' → logprob: -7.6405348777771
    6. ',' → logprob: -8.015535354614258
    7. ' ' → logprob: -8.015535354614258
    8. 'for' → logprob: -8.265535354614258
    9. '
' → logprob: -8.640535354614258
    10. '<|end|>' → logprob: -8.640535354614258

Token 403: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19685690104961395
    2. '       ' → logprob: -2.19685697555542
    3. ' for' → logprob: -2.69685697555542
    4. '
' → logprob: -10.321856498718262
    5. '   ' → logprob: -10.446856498718262
    6. '```' → logprob: -10.446856498718262
    7. 'return' → logprob: -11.946856498718262
    8. 'def' → logprob: -12.571856498718262
    9. '	for' → logprob: -12.821856498718262
    10. ' ' → logprob: -12.946856498718262

Token 404: ' So' (ID: 2632)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.047836028039455414
    2. ' for' → logprob: -3.6728360652923584
    3. '       ' → logprob: -3.9228360652923584
    4. 'total' → logprob: -6.797835826873779
    5. 'return' → logprob: -9.297836303710938
    6. 'result' → logprob: -9.297836303710938
    7. 'def' → logprob: -9.422836303710938
    8. '
' → logprob: -9.922836303710938
    9. '   ' → logprob: -10.422836303710938
    10. ' total' → logprob: -10.672836303710938

Token 405: ' b' (ID: 287)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8762297034263611
    2. 'total' → logprob: -1.5012297630310059
    3. ' total' → logprob: -2.501229763031006
    4. ' self' → logprob: -2.501229763031006
    5. 'for' → logprob: -2.751229763031006
    6. ' for' → logprob: -2.876229763031006
    7. '       ' → logprob: -3.126229763031006
    8. 'bits' → logprob: -4.376229763031006
    9. '
' → logprob: -5.251229763031006
    10. '   ' → logprob: -5.626229763031006

Token 406: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.0038676580879837275
    2. '31' → logprob: -5.8788676261901855
    3. '32' → logprob: -7.8788676261901855
    4. ' ' → logprob: -8.128868103027344
    5. '[' → logprob: -9.003868103027344
    6. 's' → logprob: -9.378868103027344
    7. '7' → logprob: -10.753868103027344
    8. '23' → logprob: -10.878868103027344
    9. 'its' → logprob: -11.128868103027344
    10. '28' → logprob: -11.378868103027344

Token 407: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.2602865993976593
    2. 'is' → logprob: -2.010286569595337
    3. ' +' → logprob: -3.510286569595337
    4. ' has' → logprob: -3.760286569595337
    5. ' *' → logprob: -5.135286808013916
    6. ')' → logprob: -5.510286808013916
    7. '+' → logprob: -5.510286808013916
    8. '=' → logprob: -5.760286808013916
    9. ' at' → logprob: -5.885286808013916
    10. 'has' → logprob: -6.010286808013916

Token 408: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.052430443465709686
    2. 'the' → logprob: -3.6774303913116455
    3. '0' → logprob: -4.052430629730225
    4. 'bit' → logprob: -5.802430629730225
    5. ' the' → logprob: -6.427430629730225
    6. ' ' → logprob: -6.677430629730225
    7. 'LS' → logprob: -7.177430629730225
    8. 'least' → logprob: -7.177430629730225
    9. 'bits' → logprob: -8.552430152893066
    10. ' bit' → logprob: -9.052430152893066

Token 409: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.034519609063863754
    2. '0' → logprob: -3.534519672393799
    3. 'the' → logprob: -6.034519672393799
    4. 'LS' → logprob: -7.159519672393799
    5. '2' → logprob: -7.534519672393799
    6. 'least' → logprob: -7.659519672393799
    7. 'bit' → logprob: -8.53451919555664
    8. ' ' → logprob: -9.03451919555664
    9. ' the' → logprob: -9.28451919555664
    10. 'bits' → logprob: -10.28451919555664

Token 410: '^' (ID: 61)
  Prédit: ' **'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.40630871057510376
    2. '**' → logprob: -1.281308650970459
    3. '0' → logprob: -3.156308650970459
    4. ' ' → logprob: -5.031308650970459
    5. ' -' → logprob: -5.531308650970459
    6. '^' → logprob: -6.406308650970459
    7. ')' → logprob: -7.656308650970459
    8. ' *' → logprob: -8.281309127807617
    9. '-' → logprob: -8.781309127807617
    10. ' ^' → logprob: -9.156309127807617

Token 411: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.0484450437361374e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -15.625040054321289
    4. '```' → logprob: -16.37504005432129
    5. '`' → logprob: -17.00004005432129
    6. '  ' → logprob: -17.87504005432129
    7. '           ' → logprob: -18.25004005432129
    8. '1' → logprob: -18.50004005432129
    9. '       ' → logprob: -18.62504005432129
    10. '=' → logprob: -18.75004005432129

Token 412: ' place' (ID: 2475)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04529779404401779
    2. ' for' → logprob: -3.295297861099243
    3. 'for' → logprob: -5.545297622680664
    4. '
' → logprob: -5.920297622680664
    5. ',' → logprob: -7.795297622680664
    6. '   ' → logprob: -9.420297622680664
    7. '        
' → logprob: -10.170297622680664
    8. '```' → logprob: -10.920297622680664
    9. '<|end|>' → logprob: -11.295297622680664
    10. '           ' → logprob: -11.795297622680664

Token 413: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00460386136546731
    2. '
' → logprob: -6.004603862762451
    3. ',' → logprob: -7.004603862762451
    4. ' for' → logprob: -7.379603862762451
    5. '   ' → logprob: -9.004603385925293
    6. '        
' → logprob: -9.129603385925293
    7. 'for' → logprob: -9.254603385925293
    8. '+' → logprob: -9.754603385925293
    9. '.' → logprob: -10.879603385925293
    10. ':' → logprob: -11.379603385925293

Token 414: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01221529021859169
    2. ' for' → logprob: -4.6372151374816895
    3. 'for' → logprob: -6.3872151374816895
    4. '   ' → logprob: -7.7622151374816895
    5. '
' → logprob: -9.387215614318848
    6. ',' → logprob: -9.637215614318848
    7. 'total' → logprob: -10.512215614318848
    8. '+' → logprob: -10.637215614318848
    9. '8' → logprob: -10.762215614318848
    10. '```' → logprob: -11.012215614318848

Token 415: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.039282768964767456
    2. '       ' → logprob: -3.53928279876709
    3. ' for' → logprob: -4.66428279876709
    4. '   ' → logprob: -10.53928279876709
    5. 'total' → logprob: -11.28928279876709
    6. '```' → logprob: -11.53928279876709
    7. '
' → logprob: -12.66428279876709
    8. 'def' → logprob: -13.91428279876709
    9. '	for' → logprob: -14.03928279876709
    10. 'return' → logprob: -14.03928279876709

Token 416: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08392670005559921
    2. ' i' → logprob: -2.7089266777038574
    3. 'idx' → logprob: -5.208926677703857
    4. ' idx' → logprob: -5.333926677703857
    5. 'index' → logprob: -5.833926677703857
    6. ' index' → logprob: -7.708926677703857
    7. '   ' → logprob: -8.708927154541016
    8. ' ' → logprob: -10.458927154541016
    9. 'pos' → logprob: -11.958927154541016
    10. '       ' → logprob: -12.333927154541016

Token 417: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.046592842787504196
    2. ',' → logprob: -3.296592950820923
    3. '(' → logprob: -5.171592712402344
    4. 'in' → logprob: -6.546592712402344
    5. '8' → logprob: -7.546592712402344
    6. '(range' → logprob: -8.421592712402344
    7. ' ,' → logprob: -8.546592712402344
    8. 'range' → logprob: -8.796592712402344
    9. ' (' → logprob: -8.921592712402344
    10. ' range' → logprob: -10.171592712402344

Token 418: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.015276364050805569
    2. 'b' → logprob: -4.7652764320373535
    3. ' bit' → logprob: -5.0152764320373535
    4. ' b' → logprob: -12.640275955200195
    5. '(bit' → logprob: -15.140275955200195
    6. 'bitr' → logprob: -16.140275955200195
    7. 'bt' → logprob: -16.515275955200195
    8. 'bits' → logprob: -16.765275955200195
    9. 'Bit' → logprob: -17.015275955200195
    10. '	b' → logprob: -17.140275955200195

Token 419: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.033655498176813126
    2. 'in' → logprob: -3.4086554050445557
    3. ' ' → logprob: -12.158655166625977
    4. ',' → logprob: -12.658655166625977
    5. '	in' → logprob: -14.658655166625977
    6. 's' → logprob: -15.408655166625977
    7. '  ' → logprob: -15.908655166625977
    8. 'import' → logprob: -16.033655166625977
    9. '```' → logprob: -16.158655166625977
    10. ' ,' → logprob: -16.658655166625977

Token 420: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.12692831456661224
    2. ' enumerate' → logprob: -2.1269283294677734
    3. '```' → logprob: -16.376928329467773
    4. 'en' → logprob: -16.376928329467773
    5. 'enum' → logprob: -17.126928329467773
    6. 'Enumer' → logprob: -18.376928329467773
    7. '   ' → logprob: -18.751928329467773
    8. '`' → logprob: -19.001928329467773
    9. '.enumer' → logprob: -19.251928329467773
    10. 'enqueue' → logprob: -19.626928329467773

Token 421: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00011224505578866228
    2. 'self' → logprob: -9.375112533569336
    3. '(re' → logprob: -11.125112533569336
    4. ' (' → logprob: -11.750112533569336
    5. '(' → logprob: -12.375112533569336
    6. ' self' → logprob: -14.750112533569336
    7. 're' → logprob: -16.500112533569336
    8. '       ' → logprob: -16.875112533569336
    9. '(s' → logprob: -18.000112533569336
    10. '   ' → logprob: -18.125112533569336

Token 422: '.bits' (ID: 89914)
  Prédit: '.bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bits' → logprob: -3.047134305234067e-05
    2. 'bits' → logprob: -11.000030517578125
    3. ' .' → logprob: -11.875030517578125
    4. '.' → logprob: -12.750030517578125
    5. '.b' → logprob: -13.000030517578125
    6. '(bits' → logprob: -14.000030517578125
    7. ' bits' → logprob: -15.250030517578125
    8. '   ' → logprob: -15.750030517578125
    9. ').' → logprob: -16.250030517578125
    10. '.bit' → logprob: -16.750030517578125

Token 423: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3930152952671051
    2. '):
' → logprob: -1.2680152654647827
    3. ':' → logprob: -3.1430153846740723
    4. ':
' → logprob: -8.518014907836914
    5. '):
' → logprob: -8.768014907836914
    6. ' ):' → logprob: -11.018014907836914
    7. '       ' → logprob: -11.268014907836914
    8. '[::-' → logprob: -11.518014907836914
    9. ' :' → logprob: -11.768014907836914
    10. '():' → logprob: -11.893014907836914

Token 424: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01823434978723526
    2. 'total' → logprob: -4.5182342529296875
    3. ' total' → logprob: -5.3932342529296875
    4. '       ' → logprob: -7.1432342529296875
    5. '
' → logprob: -7.3932342529296875
    6. '(total' → logprob: -7.5182342529296875
    7. ' if' → logprob: -8.393234252929688
    8. ',' → logprob: -9.268234252929688
    9. 'if' → logprob: -9.893234252929688
    10. '            
' → logprob: -10.268234252929688

Token 425: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.5807746648788452
    2. 'total' (adapté à ' total') → logprob: -0.8307746648788452
    3. '               ' → logprob: -5.580774784088135
    4. '           ' → logprob: -7.205774784088135
    5. '(total' → logprob: -8.705774307250977
    6. ' if' → logprob: -9.955774307250977
    7. '   ' → logprob: -10.330774307250977
    8. '
' → logprob: -11.705774307250977
    9. 'if' → logprob: -11.705774307250977
    10. '$total' → logprob: -11.705774307250977

Token 426: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4741298258304596
    2. ' +=' → logprob: -0.9741297960281372
    3. '|' → logprob: -10.599129676818848
    4. '+' → logprob: -10.849129676818848
    5. ' |=' → logprob: -12.099129676818848
    6. '+=(' → logprob: -14.099129676818848
    7. '    ' → logprob: -14.474129676818848
    8. ' +' → logprob: -14.474129676818848
    9. ']+=' → logprob: -15.474129676818848
    10. '   ' → logprob: -15.474129676818848

Token 427: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.00539822643622756
    2. ' bit' → logprob: -5.255398273468018
    3. '(bit' → logprob: -8.75539779663086
    4. '(' → logprob: -12.38039779663086
    5. '   ' → logprob: -13.63039779663086
    6. ' (' → logprob: -13.75539779663086
    7. ' ' → logprob: -15.75539779663086
    8. '  ' → logprob: -16.63039779663086
    9. 'bits' → logprob: -17.63039779663086
    10. 'bitr' → logprob: -17.75539779663086

Token 428: ' <<' (ID: 2256)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.005875821225345135
    2. '*' → logprob: -5.255875587463379
    3. ' <<' → logprob: -7.505875587463379
    4. '<<' → logprob: -10.255875587463379
    5. '*(' → logprob: -10.255875587463379
    6. ' ' → logprob: -12.380875587463379
    7. '(' → logprob: -12.505875587463379
    8. '```' → logprob: -13.005875587463379
    9. ' (' → logprob: -13.130875587463379
    10. '1' → logprob: -13.755875587463379

Token 429: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002613358374219388
    2. ' i' → logprob: -8.250261306762695
    3. '(i' → logprob: -19.250261306762695
    4. '`' → logprob: -19.250261306762695
    5. '	i' → logprob: -19.375261306762695
    6. ' ' → logprob: -19.500261306762695
    7. '```' → logprob: -19.625261306762695
    8. '[i' → logprob: -21.000261306762695
    9. ' (' → logprob: -21.250261306762695
    10. '{i' → logprob: -21.250261306762695

Token 430: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.041549403220415115
    2. '
' → logprob: -3.7915494441986084
    3. 'return' → logprob: -4.416549205780029
    4. ' return' → logprob: -5.291549205780029
    5. '<|end|>' → logprob: -7.041549205780029
    6. ':return' → logprob: -10.791549682617188
    7. '	return' → logprob: -10.916549682617188
    8. '   ' → logprob: -11.041549682617188
    9. '
' → logprob: -11.041549682617188
    10. ')return' → logprob: -11.166549682617188

Token 431: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08923814445734024
    2. '
' → logprob: -3.589238166809082
    3. 'return' → logprob: -3.589238166809082
    4. '<|end|>' → logprob: -3.839238166809082
    5. ' return' → logprob: -4.839238166809082
    6. '   ' → logprob: -9.339238166809082
    7. ':return' → logprob: -9.339238166809082
    8. '        
' → logprob: -9.339238166809082
    9. ')return' → logprob: -9.464238166809082
    10. '  
' → logprob: -9.714238166809082

Token 432: ' bit' (ID: 3546)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09400971233844757
    2. '<|end|>' → logprob: -2.4690096378326416
    3. ' i' → logprob: -5.844009876251221
    4. ' ' → logprob: -6.719009876251221
    5. '
' → logprob: -8.094009399414062
    6. '<|end|>' → logprob: -8.344009399414062
    7. '(i' → logprob: -8.844009399414062
    8. ')' → logprob: -9.094009399414062
    9. '[i' → logprob: -10.219009399414062
    10. '```' → logprob: -10.469009399414062

Token 433: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 434: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10294226557016373
    2. 'i' → logprob: -3.1029422283172607
    3. ' (' → logprob: -3.3529422283172607
    4. '(i' → logprob: -4.22794246673584
    5. '2' → logprob: -6.10294246673584
    6. ' i' → logprob: -7.10294246673584
    7. '1' → logprob: -8.60294246673584
    8. ' ' → logprob: -9.85294246673584
    9. '(
' → logprob: -11.47794246673584
    10. '```' → logprob: -11.72794246673584

Token 435: '2' (ID: 17)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0027342629618942738
    2. '(' → logprob: -6.002734184265137
    3. '(i' → logprob: -8.502734184265137
    4. ' i' → logprob: -10.252734184265137
    5. ' (' → logprob: -11.377734184265137
    6. '2' → logprob: -12.002734184265137
    7. '1' → logprob: -13.377734184265137
    8. '```' → logprob: -14.752734184265137
    9. '
' → logprob: -15.502734184265137
    10. '(
' → logprob: -15.877734184265137

Token 436: '^' (ID: 61)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08167467266321182
    2. '<|end|>' → logprob: -2.956674575805664
    3. ' i' → logprob: -4.206674575805664
    4. '**' → logprob: -5.581674575805664
    5. '(i' → logprob: -5.706674575805664
    6. '[i' → logprob: -6.581674575805664
    7. '*i' → logprob: -6.706674575805664
    8. '<|end|>' → logprob: -7.081674575805664
    9. '```' → logprob: -8.081674575805664
    10. '^' → logprob: -8.581674575805664

Token 437: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.313314952421933e-05
    2. ' i' → logprob: -9.750062942504883
    3. '<|end|>' → logprob: -12.375062942504883
    4. '0' → logprob: -15.375062942504883
    5. '```' → logprob: -15.875062942504883
    6. '(i' → logprob: -15.875062942504883
    7. '
' → logprob: -16.875062942504883
    8. '<|end|>' → logprob: -16.875062942504883
    9. '{i' → logprob: -17.250062942504883
    10. ' ' → logprob: -17.375062942504883

Token 438: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038777295500040054
    2. '
' → logprob: -3.5387773513793945
    3. 'return' → logprob: -5.6637773513793945
    4. '<|end|>' → logprob: -5.6637773513793945
    5. ' return' → logprob: -6.2887773513793945
    6. '
' → logprob: -10.288777351379395
    7. '   ' → logprob: -10.413777351379395
    8. '<|end|>' → logprob: -10.663777351379395
    9. '        
' → logprob: -11.038777351379395
    10. '0' → logprob: -11.538777351379395

Token 439: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003468928625807166
    2. 'return' → logprob: -6.128468990325928
    3. ' return' → logprob: -6.753468990325928
    4. '
' → logprob: -9.87846851348877
    5. '<|end|>' → logprob: -10.50346851348877
    6. '   ' → logprob: -11.12846851348877
    7. '	return' → logprob: -12.00346851348877
    8. '        
' → logprob: -13.00346851348877
    9. '	' → logprob: -13.12846851348877
    10. ',' → logprob: -13.37846851348877

Token 440: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2558392584323883
    2. 'return' (adapté à ' return') → logprob: -1.505839228630066
    3. ' return' → logprob: -6.1308393478393555
    4. '   ' → logprob: -6.3808393478393555
    5. '	return' → logprob: -10.630839347839355
    6. '
' → logprob: -12.755839347839355
    7. '           ' → logprob: -12.755839347839355
    8. ' ' → logprob: -13.630839347839355
    9. '	' → logprob: -14.380839347839355
    10. '     ' → logprob: -14.505839347839355

Token 441: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.005233763717114925
    2. ' total' → logprob: -5.2552337646484375
    3. '(total' → logprob: -18.630233764648438
    4. 'tot' → logprob: -19.130233764648438
    5. '	total' → logprob: -19.505233764648438
    6. '   ' → logprob: -20.255233764648438
    7. '$total' → logprob: -21.130233764648438
    8. ' ' → logprob: -22.005233764648438
    9. '0' → logprob: -22.380233764648438
    10. ',total' → logprob: -22.505233764648438

Token 442: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 443: '   ' (ID: 271)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.004318199120461941
    2. '<|end|>' → logprob: -5.5043182373046875
    3. '   ' → logprob: -9.004318237304688
    4. ' class' → logprob: -9.754318237304688
    5. '
' → logprob: -11.129318237304688
    6. ' ' → logprob: -11.254318237304688
    7. ')' → logprob: -11.879318237304688
    8. '<|end|>' → logprob: -12.004318237304688
    9. '#' → logprob: -12.629318237304688
    10. '<class' → logprob: -12.629318237304688

Token 444: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6175513863563538
    2. '<|end|>' → logprob: -1.367551326751709
    3. '   ' → logprob: -1.867551326751709
    4. 'class' → logprob: -3.492551326751709
    5. 'def' (adapté à ' def') → logprob: -3.992551326751709
    6. ' ' → logprob: -7.117551326751709
    7. '  ' → logprob: -7.867551326751709
    8. '```' → logprob: -7.992551326751709
    9. '<|end|>' → logprob: -8.117551803588867
    10. '    
' → logprob: -8.367551803588867

Token 445: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.386951208114624
    2. '__' → logprob: -1.136951208114624
    3. '_repr' → logprob: -9.886951446533203
    4. ' def' → logprob: -11.136951446533203
    5. 'repr' → logprob: -11.886951446533203
    6. 'def' → logprob: -12.136951446533203
    7. '___' → logprob: -14.511951446533203
    8. '.__' → logprob: -14.511951446533203
    9. '_rep' → logprob: -14.511951446533203
    10. ' ' → logprob: -14.886951446533203

Token 446: 'repr' (ID: 67002)
  Prédit: 'repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: 0.0
    2. '_repr' → logprob: -17.875
    3. ' repr' → logprob: -19.125
    4. 'str' → logprob: -19.125
    5. 'rep' → logprob: -19.875
    6. 'representation' → logprob: -24.5
    7. '```' → logprob: -24.625
    8. 'represent' → logprob: -24.875
    9. 'r' → logprob: -25.5
    10. '`' → logprob: -27.125

Token 447: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.006961757782846689
    2. '(self' → logprob: -5.381961822509766
    3. '__' → logprob: -6.881961822509766
    4. '__(
' → logprob: -6.881961822509766
    5. '__((' → logprob: -8.631961822509766
    6. '__('' → logprob: -10.381961822509766
    7. '__("' → logprob: -10.631961822509766
    8. 'self' → logprob: -11.006961822509766
    9. '(' → logprob: -11.506961822509766
    10. '__(*' → logprob: -12.131961822509766

Token 448: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.2200749754119897e-06
    2. ' self' → logprob: -13.625001907348633
    3. ')' → logprob: -14.125001907348633
    4. 'f' → logprob: -15.875001907348633
    5. '(self' → logprob: -16.125001907348633
    6. 'Self' → logprob: -17.250001907348633
    7. '   ' → logprob: -19.750001907348633
    8. '       ' → logprob: -20.000001907348633
    9. '"' → logprob: -20.375001907348633
    10. '	self' → logprob: -20.500001907348633

Token 449: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02616594359278679
    2. 'self' → logprob: -4.401165962219238
    3. '(' → logprob: -4.776165962219238
    4. ')(' → logprob: -5.901165962219238
    5. ')' → logprob: -7.401165962219238
    6. '__(' → logprob: -7.401165962219238
    7. ')(
' → logprob: -8.151165962219238
    8. '|(
' → logprob: -8.776165962219238
    9. '__(
' → logprob: -8.901165962219238
    10. '(
' → logprob: -8.901165962219238

Token 450: '       ' (ID: 309)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.3582858741283417
    2. '       ' → logprob: -1.358285903930664
    3. ' f' → logprob: -3.233285903930664
    4. '   ' → logprob: -5.733285903930664
    5. 'self' → logprob: -7.108285903930664
    6. 'Integer' → logprob: -8.358285903930664
    7. 'return' → logprob: -8.483285903930664
    8. '           ' → logprob: -10.608285903930664
    9. 'def' → logprob: -10.608285903930664
    10. '```' → logprob: -10.983285903930664

Token 451: ' return' (ID: 622)
  Prédit: 'Integer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Integer' → logprob: -0.06223062798380852
    2. 'f' → logprob: -2.8122305870056152
    3. ' f' → logprob: -9.187231063842773
    4. 'return' (adapté à ' return') → logprob: -9.312231063842773
    5. ' Integer' → logprob: -9.687231063842773
    6. '"' → logprob: -12.187231063842773
    7. '=Integer' → logprob: -14.187231063842773
    8. '	Integer' → logprob: -15.062231063842773
    9. '<Integer' → logprob: -15.062231063842773
    10. ',Integer' → logprob: -15.187231063842773

Token 452: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.20142056047916412
    2. ' f' → logprob: -1.701420545578003
    3. '"' → logprob: -12.451420783996582
    4. 'Integer' → logprob: -13.076420783996582
    5. ' Integer' → logprob: -13.701420783996582
    6. ' ' → logprob: -15.951420783996582
    7. '   ' → logprob: -17.326419830322266
    8. '	f' → logprob: -17.451419830322266
    9. '  ' → logprob: -18.451419830322266
    10. ' "' → logprob: -18.451419830322266

Token 453: '"' (ID: 1)
  Prédit: 'Integer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Integer' → logprob: -0.4552704393863678
    2. '"' → logprob: -1.7052704095840454
    3. 'f' → logprob: -1.7052704095840454
    4. '(Integer' → logprob: -7.330270290374756
    5. '=Integer' → logprob: -7.830270290374756
    6. ' f' → logprob: -8.580270767211914
    7. '_Integer' → logprob: -8.705270767211914
    8. '<Integer' → logprob: -8.705270767211914
    9. '	Integer' → logprob: -9.080270767211914
    10. ' Integer' → logprob: -9.080270767211914

Token 454: 'Integer' (ID: 5437)
  Prédit: 'Integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Integer' → logprob: -1.5048530030981055e-06
    2. ' Integer' → logprob: -14.500001907348633
    3. '(Integer' → logprob: -15.125001907348633
    4. '<Integer' → logprob: -15.625001907348633
    5. 'integer' → logprob: -16.000001907348633
    6. '.Integer' → logprob: -16.250001907348633
    7. '`' → logprob: -16.500001907348633
    8. '"' → logprob: -16.875001907348633
    9. ''' → logprob: -17.125001907348633
    10. '{' → logprob: -17.625001907348633

Token 455: 'Part' (ID: 5681)
  Prédit: 'Part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Part' → logprob: 0.0
    2. ' Part' → logprob: -19.75
    3. ' part' → logprob: -20.0
    4. 'part' → logprob: -20.125
    5. 'Parts' → logprob: -21.375
    6. '_part' → logprob: -22.375
    7. '(' → logprob: -22.375
    8. 'Parte' → logprob: -22.375
    9. '-Part' → logprob: -22.625
    10. '{' → logprob: -23.375

Token 456: '(bits' (ID: 170698)
  Prédit: '(bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bits' → logprob: -6.034592388459714e-06
    2. 'bits' → logprob: -12.125005722045898
    3. '(' → logprob: -15.000005722045898
    4. '(bit' → logprob: -16.7500057220459
    5. '```' → logprob: -16.7500057220459
    6. '<bits' → logprob: -17.2500057220459
    7. '(b' → logprob: -18.2500057220459
    8. '{' → logprob: -18.3750057220459
    9. '(parts' → logprob: -18.8750057220459
    10. '(bounds' → logprob: -18.8750057220459

Token 457: '={' (ID: 1693)
  Prédit: '={'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '={' → logprob: -7.703443770878948e-06
    2. '=' → logprob: -12.750007629394531
    3. '{' → logprob: -13.000007629394531
    4. '=self' → logprob: -13.000007629394531
    5. '={[' → logprob: -16.50000762939453
    6. 'self' → logprob: -16.87500762939453
    7. '=[' → logprob: -17.25000762939453
    8. '={'' → logprob: -17.75000762939453
    9. '={{' → logprob: -18.00000762939453
    10. ']={' → logprob: -18.87500762939453

Token 458: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.096126576769166e-05
    2. '''.' → logprob: -10.500041007995605
    3. '{' → logprob: -11.375041007995605
    4. ' self' → logprob: -13.375041007995605
    5. '[self' → logprob: -15.500041007995605
    6. '[' → logprob: -17.37504005432129
    7. '(self' → logprob: -19.25004005432129
    8. ''' → logprob: -19.62504005432129
    9. ''{' → logprob: -20.00004005432129
    10. ' ' → logprob: -20.00004005432129

Token 459: '.bits' (ID: 89914)
  Prédit: '.bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bits' → logprob: -0.23087537288665771
    2. 'bits' → logprob: -1.6058753728866577
    3. 'self' → logprob: -5.230875492095947
    4. '.' → logprob: -10.355875015258789
    5. ' bits' → logprob: -10.730875015258789
    6. '(bits' → logprob: -11.480875015258789
    7. '[' → logprob: -12.355875015258789
    8. '_bits' → logprob: -12.355875015258789
    9. '{' → logprob: -12.480875015258789
    10. '.b' → logprob: -12.730875015258789

Token 460: '})' (ID: 9263)
  Prédit: ')"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')"' → logprob: -0.02347944676876068
    2. ')' → logprob: -3.773479461669922
    3. '})' → logprob: -8.898479461669922
    4. ')">' → logprob: -10.023479461669922
    5. ')}' → logprob: -10.898479461669922
    6. ')`' → logprob: -11.273479461669922
    7. ')")' → logprob: -11.523479461669922
    8. ')”' → logprob: -12.023479461669922
    9. ')**' → logprob: -13.648479461669922
    10. ')"

' → logprob: -13.773479461669922

Token 461: '"

' (ID: 2678)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00012523093027994037
    2. '<|end|>' → logprob: -9.12512493133545
    3. ' class' → logprob: -11.25012493133545
    4. ')' → logprob: -13.75012493133545
    5. '```' → logprob: -14.37512493133545
    6. '<class' → logprob: -15.00012493133545
    7. '#' → logprob: -15.00012493133545
    8. '
' → logprob: -15.25012493133545
    9. '<|end|>' → logprob: -15.25012493133545
    10. '}' → logprob: -16.375125885009766

Token 462: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -2.339278580620885e-06
    2. '#' → logprob: -14.000001907348633
    3. ' class' → logprob: -14.125001907348633
    4. '<class' → logprob: -15.125001907348633
    5. '<|end|>' → logprob: -15.750001907348633
    6. '"class' → logprob: -17.250001907348633
    7. '...' → logprob: -18.000001907348633
    8. 'Class' → logprob: -18.125001907348633
    9. '-class' → logprob: -18.125001907348633
    10. '[' → logprob: -18.250001907348633

Token 463: ' Fraction' (ID: 112108)
  Prédit: 'Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fraction' → logprob: -0.001971457852050662
    2. 'Decimal' → logprob: -7.001971244812012
    3. ' Fraction' → logprob: -7.626971244812012
    4. 'Mant' → logprob: -8.376971244812012
    5. 'Exponent' → logprob: -8.376971244812012
    6. 'Frac' → logprob: -9.751971244812012
    7. 'Floating' → logprob: -11.626971244812012
    8. 'Float' → logprob: -11.751971244812012
    9. 'Sign' → logprob: -12.126971244812012
    10. ' fractional' → logprob: -12.501971244812012

Token 464: 'al' (ID: 280)
  Prédit: 'Part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Part' → logprob: -0.5760224461555481
    2. 'al' → logprob: -0.8260224461555481
    3. 'Bit' → logprob: -10.201022148132324
    4. 'Parts' → logprob: -10.701022148132324
    5. 'Bits' → logprob: -11.326022148132324
    6. '(Bit' → logprob: -12.951022148132324
    7. '(' → logprob: -13.201022148132324
    8. ' Part' → logprob: -13.326022148132324
    9. ' part' → logprob: -13.576022148132324
    10. 'Component' → logprob: -13.826022148132324

Token 465: 'Part' (ID: 5681)
  Prédit: 'Part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Part' → logprob: -7.896309739408025e-07
    2. 'part' → logprob: -14.625000953674316
    3. ' part' → logprob: -15.750000953674316
    4. ' Part' → logprob: -16.5
    5. 'Parts' → logprob: -17.125
    6. '_part' → logprob: -18.25
    7. 'Bits' → logprob: -19.125
    8. 'Component' → logprob: -19.375
    9. 'Bit' → logprob: -19.375
    10. '-part' → logprob: -21.375

Token 466: '(Component' (ID: 98072)
  Prédit: '(Component'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Component' → logprob: -0.0008157044649124146
    2. '(' → logprob: -7.7508158683776855
    3. ':' → logprob: -7.8758158683776855
    4. '<Component' → logprob: -13.500815391540527
    5. '(Abstract' → logprob: -13.625815391540527
    6. '@Component' → logprob: -14.375815391540527
    7. '```' → logprob: -14.875815391540527
    8. '):' → logprob: -15.125815391540527
    9. '(Base' → logprob: -15.500815391540527
    10. '(Module' → logprob: -16.125816345214844

Token 467: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0790327712893486
    2. '):' → logprob: -2.5790326595306396
    3. '):
' → logprob: -8.954032897949219
    4. ')' → logprob: -12.204032897949219
    5. '):

' → logprob: -12.704032897949219
    6. '   ' → logprob: -12.954032897949219
    7. '(Component' → logprob: -13.829032897949219
    8. ':' → logprob: -13.954032897949219
    9. ':
' → logprob: -14.329032897949219
    10. 'def' → logprob: -15.329032897949219

Token 468: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00017159747949335724
    2. 'def' → logprob: -9.000171661376953
    3. ' def' → logprob: -10.125171661376953
    4. '	def' → logprob: -12.625171661376953
    5. '```' → logprob: -12.750171661376953
    6. 'class' → logprob: -13.750171661376953
    7. ' ' → logprob: -16.000171661376953
    8. '  ' → logprob: -16.125171661376953
    9. '   ' → logprob: -16.250171661376953
    10. '    
' → logprob: -16.500171661376953

Token 469: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.011968781240284443
    2. ' def' → logprob: -5.011968612670898
    3. '   ' → logprob: -5.386968612670898
    4. 'class' → logprob: -7.511968612670898
    5. '```' → logprob: -9.511968612670898
    6. ' ' → logprob: -11.136968612670898
    7. '	def' → logprob: -11.761968612670898
    8. '
' → logprob: -12.761968612670898
    9. '``' → logprob: -12.761968612670898
    10. '  ' → logprob: -12.886968612670898

Token 470: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5789546966552734
    2. 'init' → logprob: -0.8289546966552734
    3. 'def' → logprob: -6.203954696655273
    4. '_init' → logprob: -7.203954696655273
    5. '```' → logprob: -8.578954696655273
    6. ' __' → logprob: -9.953954696655273
    7. '.__' → logprob: -12.578954696655273
    8. '`' → logprob: -13.828954696655273
    9. '
' → logprob: -14.203954696655273
    10. '___' → logprob: -14.328954696655273

Token 471: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -6.704273118884885e-07
    2. 'def' → logprob: -14.750000953674316
    3. '__' → logprob: -15.625000953674316
    4. ' init' → logprob: -17.125
    5. '_init' → logprob: -17.25
    6. '```' → logprob: -18.0
    7. '(init' → logprob: -19.0
    8. 'class' → logprob: -19.125
    9. '   ' → logprob: -19.25
    10. '`' → logprob: -19.375

Token 472: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.004150699358433485
    2. '(self' → logprob: -5.504150867462158
    3. '__' → logprob: -10.129150390625
    4. 'self' → logprob: -11.004150390625
    5. 'def' → logprob: -12.129150390625
    6. '(' → logprob: -12.254150390625
    7. 'class' → logprob: -13.129150390625
    8. '_(' → logprob: -13.504150390625
    9. '   ' → logprob: -13.879150390625
    10. '__(
' → logprob: -14.629150390625

Token 473: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.6240566083070007e-06
    2. ' self' → logprob: -13.750001907348633
    3. '       ' → logprob: -15.875001907348633
    4. '0' → logprob: -16.125001907348633
    5. '   ' → logprob: -16.500001907348633
    6. '(self' → logprob: -16.500001907348633
    7. 'def' → logprob: -17.125001907348633
    8. 'class' → logprob: -17.625001907348633
    9. 'elf' → logprob: -18.750001907348633
    10. '
' → logprob: -20.500001907348633

Token 474: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.018806928768754005
    2. '):' → logprob: -4.1438069343566895
    3. '()):
' → logprob: -6.6438069343566895
    4. '():
' → logprob: -7.0188069343566895
    5. '()' → logprob: -7.8938069343566895
    6. ')' → logprob: -9.518806457519531
    7. '       ' → logprob: -10.143806457519531
    8. '   ' → logprob: -10.268806457519531
    9. '():' → logprob: -10.393806457519531
    10. '):

' → logprob: -12.143806457519531

Token 475: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02340817265212536
    2. '       ' → logprob: -4.398407936096191
    3. 'def' → logprob: -4.648407936096191
    4. '   ' → logprob: -7.023407936096191
    5. ' self' → logprob: -8.148407936096191
    6. '0' → logprob: -9.898407936096191
    7. ' ' → logprob: -11.023407936096191
    8. ' def' → logprob: -12.148407936096191
    9. 'class' → logprob: -13.398407936096191
    10. '
' → logprob: -13.398407936096191

Token 476: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -4.704065213445574e-05
    2. ' self' → logprob: -10.375046730041504
    3. '       ' → logprob: -11.125046730041504
    4. '   ' → logprob: -14.250046730041504
    5. 'def' → logprob: -16.50004768371582
    6. '	self' → logprob: -16.50004768371582
    7. '0' → logprob: -16.62504768371582
    8. '(self' → logprob: -16.87504768371582
    9. 'super' → logprob: -17.00004768371582
    10. ' ' → logprob: -17.37504768371582

Token 477: '.bits' (ID: 89914)
  Prédit: '.bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bits' → logprob: -0.03806708753108978
    2. 'bits' → logprob: -3.288067102432251
    3. '_bits' → logprob: -11.913066864013672
    4. ' bits' → logprob: -11.913066864013672
    5. '(bits' → logprob: -12.038066864013672
    6. '.parts' → logprob: -13.038066864013672
    7. ' .' → logprob: -13.788066864013672
    8. '   ' → logprob: -14.038066864013672
    9. 'Bits' → logprob: -15.038066864013672
    10. '.bit' → logprob: -15.163066864013672

Token 478: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12784957885742188
    2. ' =' → logprob: -2.127849578857422
    3. '=[]' → logprob: -7.002849578857422
    4. ':' → logprob: -11.877849578857422
    5. '<|end|>' → logprob: -13.377849578857422
    6. ' ' → logprob: -14.127849578857422
    7. '=[]
' → logprob: -14.127849578857422
    8. '   ' → logprob: -14.252849578857422
    9. '[]' → logprob: -14.752849578857422
    10. '<|end|>' → logprob: -16.252849578857422

Token 479: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.011065390892326832
    2. '[]

' → logprob: -4.511065483093262
    3. '[' → logprob: -11.136065483093262
    4. '[]
' → logprob: -13.011065483093262
    5. ' []' → logprob: -15.261065483093262
    6. '[]}' → logprob: -16.011064529418945
    7. '([]' → logprob: -16.136064529418945
    8. '[]"' → logprob: -16.261064529418945
    9. '[])' → logprob: -16.511064529418945
    10. ' []

' → logprob: -17.261064529418945

Token 480: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06465384364128113
    2. 'def' → logprob: -2.8146538734436035
    3. ' def' → logprob: -5.9396538734436035
    4. '    
' → logprob: -11.189653396606445
    5. '
' → logprob: -11.439653396606445
    6. '	def' → logprob: -11.564653396606445
    7. '```' → logprob: -12.064653396606445
    8. ' ' → logprob: -12.439653396606445
    9. '<|end|>' → logprob: -13.064653396606445
    10. '  ' → logprob: -13.064653396606445

Token 481: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -3.547789674485102e-05
    2. ' def' → logprob: -10.375035285949707
    3. '   ' → logprob: -12.375035285949707
    4. '	def' → logprob: -17.750036239624023
    5. '    
' → logprob: -18.625036239624023
    6. '```' → logprob: -19.500036239624023
    7. ' ' → logprob: -20.750036239624023
    8. 'de' → logprob: -21.000036239624023
    9. '
' → logprob: -21.125036239624023
    10. 'Def' → logprob: -21.750036239624023

Token 482: ' extract' (ID: 13424)
  Prédit: 'extract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'extract' → logprob: -0.004078997299075127
    2. ' extract' → logprob: -5.5040788650512695
    3. 'def' → logprob: -14.50407886505127
    4. '.extract' → logprob: -16.629079818725586
    5. '_extract' → logprob: -18.754079818725586
    6. 'expand' → logprob: -19.504079818725586
    7. ' def' → logprob: -20.504079818725586
    8. 'export' → logprob: -20.879079818725586
    9. 'Extract' → logprob: -21.379079818725586
    10. 'ex' → logprob: -21.504079818725586

Token 483: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: 0.0
    2. '_BITS' → logprob: -17.375
    3. '_' → logprob: -17.5
    4. '_b' → logprob: -18.5
    5. '_parts' → logprob: -19.0
    6. 'bits' → logprob: -19.5
    7. '_bytes' → logprob: -20.125
    8. 'Bits' → logprob: -20.375
    9. '_components' → logprob: -20.375
    10. '_bit' → logprob: -20.5

Token 484: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.5332478142227046e-05
    2. 'self' → logprob: -11.625015258789062
    3. '(' → logprob: -12.000015258789062
    4. '   ' → logprob: -16.250015258789062
    5. ' (' → logprob: -17.750015258789062
    6. '       ' → logprob: -18.000015258789062
    7. 'def' → logprob: -18.125015258789062
    8. ' self' → logprob: -18.125015258789062
    9. '=self' → logprob: -18.375015258789062
    10. '(
' → logprob: -19.000015258789062

Token 485: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002668192028068006
    2. ',' → logprob: -9.000267028808594
    3. 'self' → logprob: -9.750267028808594
    4. '       ' → logprob: -10.375267028808594
    5. '(' → logprob: -10.500267028808594
    6. '   ' → logprob: -11.000267028808594
    7. ' (' → logprob: -12.125267028808594
    8. ',self' → logprob: -13.375267028808594
    9. 'def' → logprob: -14.250267028808594
    10. ')' → logprob: -14.500267028808594

Token 486: ' bit' (ID: 3546)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07300562411546707
    2. ' self' → logprob: -3.4480056762695312
    3. 'bit' → logprob: -3.6980056762695312
    4. ' bit' → logprob: -4.323005676269531
    5. '   ' → logprob: -8.573005676269531
    6. '(self' → logprob: -9.073005676269531
    7. '       ' → logprob: -9.448005676269531
    8. 'def' → logprob: -9.948005676269531
    9. ' ' → logprob: -10.073005676269531
    10. ')' → logprob: -10.948005676269531

Token 487: 'stream' (ID: 8598)
  Prédit: 'stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stream' → logprob: -6.396757089532912e-05
    2. 'self' → logprob: -10.2500638961792
    3. '(stream' → logprob: -11.7500638961792
    4. '(self' → logprob: -11.7500638961792
    5. '_stream' → logprob: -12.8750638961792
    6. '   ' → logprob: -13.2500638961792
    7. '```' → logprob: -13.3750638961792
    8. '       ' → logprob: -13.7500638961792
    9. 'ream' → logprob: -14.1250638961792
    10. 'string' → logprob: -14.3750638961792

Token 488: ':' (ID: 25)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.026408396661281586
    2. 'self' → logprob: -4.0264081954956055
    3. '       ' → logprob: -5.0264081954956055
    4. '   ' → logprob: -6.9014081954956055
    5. ')' → logprob: -8.526408195495605
    6. ',' → logprob: -8.526408195495605
    7. 'def' → logprob: -9.026408195495605
    8. '```' → logprob: -10.651408195495605
    9. '(' → logprob: -10.776408195495605
    10. ')(' → logprob: -10.901408195495605

Token 489: ' Bit' (ID: 9422)
  Prédit: 'Bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bit' → logprob: -0.007393771782517433
    2. 'self' → logprob: -5.007393836975098
    3. ' Bit' → logprob: -7.632393836975098
    4. '(Bit' → logprob: -9.507393836975098
    5. '   ' → logprob: -10.257393836975098
    6. 'def' → logprob: -10.507393836975098
    7. 'bit' → logprob: -10.632393836975098
    8. '       ' → logprob: -11.007393836975098
    9. ' bit' → logprob: -12.382393836975098
    10. '(self' → logprob: -12.757393836975098

Token 490: 'Stream' (ID: 4193)
  Prédit: 'stream'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stream' → logprob: -0.0016186459688469768
    2. 'Stream' → logprob: -6.7516188621521
    3. '.get' → logprob: -8.501618385314941
    4. '   ' → logprob: -9.376618385314941
    5. ')' → logprob: -9.626618385314941
    6. '.stream' → logprob: -10.501618385314941
    7. 'get' → logprob: -11.001618385314941
    8. '       ' → logprob: -11.751618385314941
    9. 'steam' → logprob: -12.251618385314941
    10. '_stream' → logprob: -12.376618385314941

Token 491: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0854247584939003
    2. 'self' → logprob: -3.2104246616363525
    3. ',' → logprob: -3.8354246616363525
    4. '       ' → logprob: -4.085424900054932
    5. ')' → logprob: -6.585424900054932
    6. '):
' → logprob: -7.210424900054932
    7. '   ' → logprob: -7.460424900054932
    8. ' self' → logprob: -8.835424423217773
    9. 'def' → logprob: -9.460424423217773
    10. '):' → logprob: -10.210424423217773

Token 492: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020180940628051758
    2. 'self' → logprob: -6.252017974853516
    3. '#' → logprob: -9.627017974853516
    4. '   ' → logprob: -11.002017974853516
    5. ' self' → logprob: -12.002017974853516
    6. ' ' → logprob: -15.627017974853516
    7. '[self' → logprob: -15.877017974853516
    8. '           ' → logprob: -16.627017974853516
    9. '	self' → logprob: -16.627017974853516
    10. '[' → logprob: -16.752017974853516

Token 493: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.056126732379198074
    2. '       ' → logprob: -2.931126832962036
    3. ' self' → logprob: -6.806126594543457
    4. '#' (adapté à ' #') → logprob: -9.556126594543457
    5. '   ' → logprob: -9.931126594543457
    6. 'for' → logprob: -11.931126594543457
    7. ' ' → logprob: -12.681126594543457
    8. '[self' → logprob: -12.806126594543457
    9. '	self' → logprob: -13.556126594543457
    10. '(self' → logprob: -13.931126594543457

Token 494: ' Bits' (ID: 104003)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5411417484283447
    2. 'self' → logprob: -0.9161417484283447
    3. '       ' → logprob: -4.166141510009766
    4. ' self' → logprob: -7.166141510009766
    5. 'Bits' → logprob: -7.666141510009766
    6. ' #' → logprob: -7.916141510009766
    7. '
' → logprob: -9.166141510009766
    8. '7' → logprob: -9.291141510009766
    9. 'def' → logprob: -9.291141510009766
    10. '   ' → logprob: -9.291141510009766

Token 495: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.314616322517395
    2. '32' → logprob: -1.439616322517395
    3. ' ' → logprob: -4.9396162033081055
    4. 'def' → logprob: -5.3146162033081055
    5. ' in' → logprob: -5.6896162033081055
    6. '=' → logprob: -6.0646162033081055
    7. '2' → logprob: -6.4396162033081055
    8. 'range' → logprob: -6.5646162033081055
    9. 's' → logprob: -6.8146162033081055
    10. ' =' → logprob: -7.0646162033081055

Token 496: '2' (ID: 17)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -0.2990274429321289
    2. '2' → logprob: -1.674027442932129
    3. '(' → logprob: -2.924027442932129
    4. '[' → logprob: -4.174027442932129
    5. '{' → logprob: -6.924027442932129
    6. '3' → logprob: -8.174027442932129
    7. '33' → logprob: -9.049027442932129
    8. '4' → logprob: -9.174027442932129
    9. '([' → logprob: -9.424027442932129
    10. '31' → logprob: -9.549027442932129

Token 497: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.4178950786590576
    2. ',' → logprob: -1.7928950786590576
    3. 'to' → logprob: -2.1678950786590576
    4. '       ' → logprob: -3.1678950786590576
    5. ' ,' → logprob: -4.917895317077637
    6. ' ' → logprob: -5.542895317077637
    7. ' through' → logprob: -6.292895317077637
    8. '   ' → logprob: -6.542895317077637
    9. '=' → logprob: -7.417895317077637
    10. '2' → logprob: -7.667895317077637

Token 498: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.017248498275876045
    2. '4' → logprob: -4.767248630523682
    3. '5' → logprob: -5.642248630523682
    4. '3' → logprob: -6.142248630523682
    5. '6' → logprob: -6.142248630523682
    6. '2' → logprob: -7.517248630523682
    7. ' ' → logprob: -9.392248153686523
    8. '32' → logprob: -9.392248153686523
    9. '8' → logprob: -11.017248153686523
    10. '31' → logprob: -12.142248153686523

Token 499: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00021521867893170565
    2. '6' → logprob: -9.500215530395508
    3. '8' → logprob: -9.750215530395508
    4. '4' → logprob: -10.000215530395508
    5. '3' → logprob: -11.000215530395508
    6. '5' → logprob: -11.750215530395508
    7. '2' → logprob: -12.875215530395508
    8. 'class' → logprob: -13.500215530395508
    9. ' ' → logprob: -14.000215530395508
    10. '1' → logprob: -14.062715530395508

Token 500: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021777553483843803
    2. ' for' → logprob: -5.146777629852295
    3. '(self' → logprob: -5.271777629852295
    4. ' (' → logprob: -5.646777629852295
    5. ':' → logprob: -6.396777629852295
    6. 'self' → logprob: -6.646777629852295
    7. 'for' → logprob: -6.646777629852295
    8. '(' → logprob: -6.771777629852295
    9. ',' → logprob: -7.521777629852295
    10. '   ' → logprob: -7.521777629852295

Token 501: '6' (ID: 21)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '8' → logprob: -0.20174232125282288
    2. '7' → logprob: -1.7017422914505005
    3. ' ' → logprob: -8.326742172241211
    4. '   ' → logprob: -10.326742172241211
    5. '9' → logprob: -11.201742172241211
    6. 'range' → logprob: -11.326742172241211
    7. '       ' → logprob: -12.826742172241211
    8. ')' → logprob: -12.826742172241211
    9. '    ' → logprob: -13.076742172241211
    10. '  ' → logprob: -13.076742172241211

Token 502: ' bits' (ID: 18189)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.941931962966919
    2. '):' → logprob: -1.316931962966919
    3. ',' → logprob: -2.191931962966919
    4. ')' → logprob: -2.316931962966919
    5. '       ' → logprob: -2.566931962966919
    6. ' to' → logprob: -4.19193172454834
    7. ' for' → logprob: -4.44193172454834
    8. '   ' → logprob: -4.56693172454834
    9. 'for' → logprob: -5.94193172454834
    10. ':' → logprob: -5.94193172454834

Token 503: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3778756260871887
    2. '):
' → logprob: -1.752875566482544
    3. ')
' → logprob: -2.127875566482544
    4. ')' → logprob: -4.002875804901123
    5. '):' → logprob: -5.752875804901123
    6. 'for' → logprob: -8.127875328063965
    7. '   ' → logprob: -8.877875328063965
    8. 'self' → logprob: -9.377875328063965
    9. '):
' → logprob: -9.502875328063965
    10. ' for' → logprob: -9.877875328063965

Token 504: ' fraction' (ID: 33763)
  Prédit: 'fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fraction' → logprob: -0.007262531667947769
    2. 'the' → logprob: -5.507262706756592
    3. ' fractional' → logprob: -6.632262706756592
    4. 'frac' → logprob: -7.257262706756592
    5. ')' → logprob: -8.132262229919434
    6. ' fraction' → logprob: -8.632262229919434
    7. 'i' → logprob: -9.007262229919434
    8. ' the' → logprob: -9.257262229919434
    9. 'self' → logprob: -9.257262229919434
    10. 'fra' → logprob: -9.882262229919434

Token 505: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.04316920414566994
    2. ')' → logprob: -3.9181692600250244
    3. '       ' → logprob: -3.9181692600250244
    4. '):
' → logprob: -6.168169021606445
    5. '   ' → logprob: -8.918169021606445
    6. '):' → logprob: -9.043169021606445
    7. ')
' → logprob: -9.543169021606445
    8. 'self' → logprob: -10.293169021606445
    9. ')

' → logprob: -11.043169021606445
    10. ' )
' → logprob: -11.793169021606445

Token 506: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16049493849277496
    2. 'self' → logprob: -1.9104949235916138
    3. '   ' → logprob: -8.410494804382324
    4. ' self' → logprob: -10.035494804382324
    5. 'for' → logprob: -13.285494804382324
    6. 'def' → logprob: -14.660494804382324
    7. '           ' → logprob: -14.785494804382324
    8. '[self' → logprob: -14.785494804382324
    9. '	self' → logprob: -14.785494804382324
    10. '     ' → logprob: -15.285494804382324

Token 507: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0025374903343617916
    2. '       ' → logprob: -6.002537727355957
    3. ' self' → logprob: -9.752537727355957
    4. '   ' → logprob: -12.627537727355957
    5. '	self' → logprob: -15.127537727355957
    6. ' ' → logprob: -17.00253677368164
    7. '(self' → logprob: -18.00253677368164
    8. '[self' → logprob: -18.62753677368164
    9. '  ' → logprob: -19.00253677368164
    10. '           ' → logprob: -19.00253677368164

Token 508: ' But' (ID: 3072)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00039623770862817764
    2. '       ' → logprob: -8.000395774841309
    3. ' self' → logprob: -9.750395774841309
    4. '   ' → logprob: -13.000395774841309
    5. '	self' → logprob: -16.125396728515625
    6. ' ' → logprob: -16.375396728515625
    7. '
' → logprob: -17.375396728515625
    8. '  ' → logprob: -18.250396728515625
    9. 'for' → logprob: -18.250396728515625
    10. '(self' → logprob: -18.250396728515625

Token 509: ' problem' (ID: 4792)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.1938763856887817
    2. 'bits' → logprob: -1.5688763856887817
    3. 'self' → logprob: -1.8188763856887817
    4. 'fraction' → logprob: -2.068876266479492
    5. '#' → logprob: -2.318876266479492
    6. 'there' → logprob: -3.693876266479492
    7. '       ' → logprob: -3.943876266479492
    8. 'range' → logprob: -4.693876266479492
    9. 'since' → logprob: -4.693876266479492
    10. 'Bits' → logprob: -5.193876266479492

Token 510: ' states' (ID: 9407)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -1.0181249380111694
    2. 'states' → logprob: -1.2681249380111694
    3. ' states' → logprob: -2.143125057220459
    4. ':' → logprob: -3.018125057220459
    5. 'st' → logprob: -3.268125057220459
    6. '.' → logprob: -3.893125057220459
    7. '#' → logprob: -4.393125057220459
    8. 'def' → logprob: -4.393125057220459
    9. '=' → logprob: -4.643125057220459
    10. '   ' → logprob: -4.643125057220459

Token 511: ' ' (ID: 220)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6920573711395264
    2. '       ' → logprob: -1.8170573711395264
    3. ' self' → logprob: -1.9420573711395264
    4. '#' → logprob: -3.3170573711395264
    5. 'bits' → logprob: -3.4420573711395264
    6. 'for' → logprob: -3.6920573711395264
    7. ' for' → logprob: -3.6920573711395264
    8. '[' → logprob: -4.1920576095581055
    9. 'range' → logprob: -4.3170576095581055
    10. ' [' → logprob: -5.0670576095581055

Token 512: '7' (ID: 22)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9076687693595886
    2. 'self' → logprob: -1.1576688289642334
    3. 'bits' → logprob: -2.1576688289642334
    4. 'fraction' → logprob: -2.7826688289642334
    5. 'Bits' → logprob: -3.2826688289642334
    6. 'for' → logprob: -3.7826688289642334
    7. 'that' → logprob: -4.657668590545654
    8. '       ' → logprob: -4.907668590545654
    9. '6' → logprob: -5.157668590545654
    10. 'the' → logprob: -5.157668590545654

Token 513: ' bits' (ID: 18189)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12096508592367172
    2. '       ' → logprob: -3.245965003967285
    3. ' ,' → logprob: -3.745965003967285
    4. 'def' → logprob: -3.995965003967285
    5. '   ' → logprob: -3.995965003967285
    6. ' to' → logprob: -5.370965003967285
    7. ' for' → logprob: -5.745965003967285
    8. 'for' → logprob: -6.245965003967285
    9. 'to' → logprob: -6.495965003967285
    10. ' ' → logprob: -6.620965003967285

Token 514: ' fractional' (ID: 136350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1502116471529007
    2. ' =' → logprob: -2.6502115726470947
    3. '=' → logprob: -2.9002115726470947
    4. ' for' → logprob: -4.900211811065674
    5. 'for' → logprob: -5.900211811065674
    6. '   ' → logprob: -6.775211811065674
    7. ':' → logprob: -7.650211811065674
    8. '[' → logprob: -7.650211811065674
    9. ' [' → logprob: -8.525211334228516
    10. '      ' → logprob: -8.650211334228516

Token 515: ' part' (ID: 997)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11293134093284607
    2. '=' → logprob: -3.362931251525879
    3. ' =' → logprob: -3.612931251525879
    4. '   ' → logprob: -4.487931251525879
    5. ' for' → logprob: -4.487931251525879
    6. 'self' → logprob: -5.112931251525879
    7. 'for' → logprob: -5.237931251525879
    8. '[' → logprob: -5.362931251525879
    9. ' [' → logprob: -6.612931251525879
    10. ',' → logprob: -6.862931251525879

Token 516: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007155064959079027
    2. ' for' → logprob: -5.507154941558838
    3. '   ' → logprob: -6.382154941558838
    4. ',' → logprob: -8.382155418395996
    5. 'for' → logprob: -8.382155418395996
    6. '[' → logprob: -8.632155418395996
    7. '=' → logprob: -9.132155418395996
    8. ' (' → logprob: -9.132155418395996
    9. '(' → logprob: -9.507155418395996
    10. ' =' → logprob: -9.632155418395996

Token 517: ' bits' (ID: 18189)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4757321774959564
    2. '       ' → logprob: -1.8507322072982788
    3. 'for' → logprob: -1.9757322072982788
    4. ' for' → logprob: -3.3507320880889893
    5. ' self' → logprob: -3.6007320880889893
    6. '[' → logprob: -4.725732326507568
    7. '[self' → logprob: -5.225732326507568
    8. ' [' → logprob: -6.100732326507568
    9. 'range' → logprob: -6.225732326507568
    10. '   ' → logprob: -7.100732326507568

Token 518: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1637605428695679
    2. '(' → logprob: -1.4137605428695679
    3. '=' → logprob: -1.5387605428695679
    4. '2' → logprob: -2.1637606620788574
    5. ' ' → logprob: -2.6637606620788574
    6. '       ' → logprob: -4.538760662078857
    7. '   ' → logprob: -4.788760662078857
    8. 'range' → logprob: -5.163760662078857
    9. 's' → logprob: -5.538760662078857
    10. ' (' → logprob: -5.663760662078857

Token 519: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0023157147224992514
    2. '(' → logprob: -6.877315521240234
    3. ' ' → logprob: -7.627315521240234
    4. 'from' → logprob: -7.627315521240234
    5. '   ' → logprob: -9.502315521240234
    6. 'range' → logprob: -10.002315521240234
    7. '8' → logprob: -10.502315521240234
    8. ' (' → logprob: -10.877315521240234
    9. '[' → logprob: -10.877315521240234
    10. '3' → logprob: -11.189815521240234

Token 520: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.7011396884918213
    2. ',' → logprob: -1.0761396884918213
    3. 'to' → logprob: -2.4511396884918213
    4. '2' → logprob: -3.4511396884918213
    5. '   ' → logprob: -4.326139450073242
    6. ' ' → logprob: -4.451139450073242
    7. '       ' → logprob: -5.076139450073242
    8. ' ,' → logprob: -5.326139450073242
    9. '3' → logprob: -6.201139450073242
    10. ' through' → logprob: -6.326139450073242

Token 521: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -5.512236498361744e-07
    2. '9' → logprob: -15.375000953674316
    3. ' ' → logprob: -15.625000953674316
    4. '7' → logprob: -17.125
    5. '...' → logprob: -17.625
    6. '   ' → logprob: -18.125
    7. '08' → logprob: -18.25
    8. '```' → logprob: -18.375
    9. '８' → logprob: -18.5625
    10. '
' → logprob: -18.5625

Token 522: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -5.512236498361744e-07
    2. '7' → logprob: -15.375000953674316
    3. '9' → logprob: -16.125
    4. '...' → logprob: -17.125
    5. '```' → logprob: -17.25
    6. ' ' → logprob: -17.375
    7. '８' → logprob: -17.625
    8. '15' → logprob: -18.5
    9. '   ' → logprob: -18.6875
    10. '08' → logprob: -18.6875

Token 523: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026838488411158323
    2. 'self' → logprob: -6.002683639526367
    3. ' self' → logprob: -9.127683639526367
    4. '   ' → logprob: -9.377683639526367
    5. 'def' → logprob: -13.127683639526367
    6. '[' → logprob: -13.252683639526367
    7. '[self' → logprob: -13.377683639526367
    8. '      ' → logprob: -13.502683639526367
    9. '           ' → logprob: -13.502683639526367
    10. ',' → logprob: -13.877683639526367

Token 524: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.08473312854766846
    2. '8' → logprob: -2.584733009338379
    3. '13' → logprob: -6.584733009338379
    4. 'range' → logprob: -6.709733009338379
    5. '[' → logprob: -6.834733009338379
    6. ' ' → logprob: -7.084733009338379
    7. 'bits' → logprob: -7.709733009338379
    8. '(' → logprob: -8.834733009338379
    9. '9' → logprob: -8.834733009338379
    10. '14' → logprob: -9.459733009338379

Token 525: '1' (ID: 16)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.0445513054728508
    2. '7' → logprob: -3.294551372528076
    3. '2' → logprob: -5.669551372528076
    4. '9' → logprob: -6.044551372528076
    5. '13' → logprob: -8.419550895690918
    6. ' ' → logprob: -9.419550895690918
    7. '1' → logprob: -9.669550895690918
    8. '   ' → logprob: -10.044550895690918
    9. '```' → logprob: -10.044550895690918
    10. '3' → logprob: -10.419550895690918

Token 526: ' to' (ID: 316)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8615942001342773
    2. '       ' → logprob: -1.2365942001342773
    3. '   ' → logprob: -2.6115942001342773
    4. ':' → logprob: -2.9865942001342773
    5. '7' → logprob: -3.4865942001342773
    6. '8' → logprob: -3.9865942001342773
    7. '(' → logprob: -3.9865942001342773
    8. '  ' → logprob: -4.236594200134277
    9. '2' → logprob: -4.361594200134277
    10. '[' → logprob: -4.486594200134277

Token 527: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.2732631266117096
    2. '9' → logprob: -1.6482630968093872
    3. '7' → logprob: -3.1482632160186768
    4. ' ' → logprob: -5.773262977600098
    5. '13' → logprob: -8.023262977600098
    6. '1' → logprob: -8.898262977600098
    7. '2' → logprob: -9.273262977600098
    8. '14' → logprob: -10.398262977600098
    9. '```' → logprob: -11.460762977600098
    10. '   ' → logprob: -11.523262977600098

Token 528: '7' (ID: 22)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.010177690535783768
    2. '7' → logprob: -4.6351776123046875
    3. '9' → logprob: -8.010177612304688
    4. '1' → logprob: -10.135177612304688
    5. '```' → logprob: -10.947677612304688
    6. '2' → logprob: -11.510177612304688
    7. '...' → logprob: -12.447677612304688
    8. '
' → logprob: -13.260177612304688
    9. '   ' → logprob: -13.385177612304688
    10. ' ' → logprob: -13.447677612304688

Token 529: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0350867435336113
    2. 'self' → logprob: -3.7850866317749023
    3. '=' → logprob: -5.660086631774902
    4. '   ' → logprob: -5.910086631774902
    5. '[' → logprob: -6.035086631774902
    6. '[self' → logprob: -7.285086631774902
    7. ' =' → logprob: -7.535086631774902
    8. ' self' → logprob: -8.035086631774902
    9. 'def' → logprob: -8.160086631774902
    10. '7' → logprob: -8.285086631774902

Token 530: ' right' (ID: 1849)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.021239809691905975
    2. 'bit' → logprob: -5.146239757537842
    3. ' ' → logprob: -5.396239757537842
    4. 'range' → logprob: -6.021239757537842
    5. 'the' → logprob: -6.271239757537842
    6. 'Bit' → logprob: -6.521239757537842
    7. 'def' → logprob: -6.646239757537842
    8. '9' → logprob: -6.896239757537842
    9. ' bit' → logprob: -7.896239757537842
    10. 'user' → logprob: -8.271240234375

Token 531: '?
' (ID: 3901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026457158848643303
    2. '   ' → logprob: -4.5264573097229
    3. '[' → logprob: -5.1514573097229
    4. 'self' → logprob: -5.7764573097229
    5. 'def' → logprob: -5.9014573097229
    6. ' ' → logprob: -7.1514573097229
    7. '7' → logprob: -7.5264573097229
    8. '=' → logprob: -8.026456832885742
    9. '[self' → logprob: -8.151456832885742
    10. ' self' → logprob: -8.401456832885742

Token 532: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05875205621123314
    2. 'self' → logprob: -3.0587520599365234
    3. ' self' → logprob: -5.308752059936523
    4. '   ' → logprob: -5.808752059936523
    5. '[' → logprob: -7.183752059936523
    6. '7' → logprob: -8.058752059936523
    7. ' ' → logprob: -8.558752059936523
    8. '8' → logprob: -9.058752059936523
    9. 'def' → logprob: -9.183752059936523
    10. '[self' → logprob: -9.183752059936523

Token 533: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.019727090373635292
    2. '       ' → logprob: -4.1447272300720215
    3. ' self' → logprob: -5.6447272300720215
    4. '#' (adapté à ' #') → logprob: -9.394726753234863
    5. '	self' → logprob: -11.394726753234863
    6. ' ' → logprob: -11.769726753234863
    7. '   ' → logprob: -11.894726753234863
    8. 'def' → logprob: -12.019726753234863
    9. '(self' → logprob: -12.394726753234863
    10. '[self' → logprob: -12.394726753234863

Token 534: ' The' (ID: 623)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002759345108643174
    2. '       ' → logprob: -6.2527594566345215
    3. '#' → logprob: -7.7527594566345215
    4. ' self' → logprob: -8.127758979797363
    5. '   ' → logprob: -10.377758979797363
    6. 'def' → logprob: -10.627758979797363
    7. '	self' → logprob: -12.502758979797363
    8. ' ' → logprob: -12.627758979797363
    9. '7' → logprob: -12.752758979797363
    10. '[self' → logprob: -12.752758979797363

Token 535: ' problem' (ID: 4792)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.004876977298408747
    2. ' bits' → logprob: -6.254877090454102
    3. '.bits' → logprob: -6.254877090454102
    4. 'def' → logprob: -7.754877090454102
    5. '#' → logprob: -8.504877090454102
    6. '```' → logprob: -9.379877090454102
    7. '(bits' → logprob: -9.754877090454102
    8. '`' → logprob: -10.129877090454102
    9. 'fraction' → logprob: -10.504877090454102
    10. 'extract' → logprob: -10.629877090454102

Token 536: ' states' (ID: 9407)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7507190108299255
    2. 'bits' → logprob: -1.5007190704345703
    3. 'def' → logprob: -1.7507190704345703
    4. ' =' → logprob: -3.7507190704345703
    5. '.get' → logprob: -4.25071907043457
    6. ' bits' → logprob: -4.37571907043457
    7. '   ' → logprob: -4.37571907043457
    8. ':' → logprob: -4.37571907043457
    9. '.bits' → logprob: -4.50071907043457
    10. '_bits' → logprob: -4.75071907043457

Token 537: ':' (ID: 25)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.15411309897899628
    2. '       ' → logprob: -3.0291130542755127
    3. 'bits' → logprob: -3.4041130542755127
    4. '[' → logprob: -3.7791130542755127
    5. ' self' → logprob: -4.404113292694092
    6. '[self' → logprob: -4.654113292694092
    7. '   ' → logprob: -5.154113292694092
    8. '#' → logprob: -5.529113292694092
    9. 'def' → logprob: -5.904113292694092
    10. 'Bits' → logprob: -7.029113292694092

Token 538: ' right' (ID: 1849)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.11723020672798157
    2. '#' → logprob: -3.117230176925659
    3. 'def' → logprob: -3.867230176925659
    4. '       ' → logprob: -4.117230415344238
    5. ' self' → logprob: -4.367230415344238
    6. '   ' → logprob: -4.867230415344238
    7. 'for' → logprob: -5.367230415344238
    8. '7' → logprob: -7.117230415344238
    9. ' for' → logprob: -7.617230415344238
    10. '2' → logprob: -7.742230415344238

Token 539: 'most' (ID: 5309)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4135316014289856
    2. 'def' → logprob: -1.9135315418243408
    3. '   ' → logprob: -2.663531541824341
    4. '[' → logprob: -3.538531541824341
    5. 'self' → logprob: -3.788531541824341
    6. '<|end|>' → logprob: -4.03853178024292
    7. ' ' → logprob: -5.03853178024292
    8. '(' → logprob: -5.16353178024292
    9. '8' → logprob: -5.53853178024292
    10. '7' → logprob: -5.78853178024292

Token 540: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 541: '7' (ID: 22)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 542: ' bits' (ID: 18189)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 543: ' are' (ID: 553)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8567076325416565
    2. ' =' → logprob: -1.2317075729370117
    3. '=' → logprob: -1.7317075729370117
    4. '   ' → logprob: -3.1067075729370117
    5. 'def' → logprob: -3.8567075729370117
    6. '(' → logprob: -4.481707572937012
    7. 'self' → logprob: -5.356707572937012
    8. '[' → logprob: -5.356707572937012
    9. ':' → logprob: -5.981707572937012
    10. '(self' → logprob: -5.981707572937012

Token 544: ' fraction' (ID: 33763)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5661879181861877
    2. 'bits' → logprob: -1.441187858581543
    3. 'fraction' → logprob: -2.066187858581543
    4. 'from' → logprob: -4.316187858581543
    5. 'range' → logprob: -4.316187858581543
    6. ' bits' → logprob: -5.441187858581543
    7. '32' → logprob: -5.441187858581543
    8. '2' → logprob: -5.566187858581543
    9. '7' → logprob: -5.566187858581543
    10. 'self' → logprob: -5.691187858581543

Token 545: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39101681113243103
    2. '   ' → logprob: -2.016016721725464
    3. 'def' → logprob: -2.266016721725464
    4. '=' → logprob: -3.891016721725464
    5. ' =' → logprob: -4.141016960144043
    6. '(' → logprob: -4.516016960144043
    7. '[' → logprob: -4.516016960144043
    8. ' (' → logprob: -5.391016960144043
    9. 'from' → logprob: -5.891016960144043
    10. ',' → logprob: -6.016016960144043

Token 546: 'b' (ID: 65)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '26' → logprob: -0.5588093996047974
    2. '2' → logprob: -1.5588093996047974
    3. '25' → logprob: -1.9338093996047974
    4. ' ' → logprob: -3.433809280395508
    5. '(' → logprob: -4.808809280395508
    6. 'range' → logprob: -5.308809280395508
    7. 'from' → logprob: -5.683809280395508
    8. '27' → logprob: -5.808809280395508
    9. ' [' → logprob: -5.933809280395508
    10. 'for' → logprob: -6.183809280395508

Token 547: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0395025871694088
    2. '25' → logprob: -4.2895026206970215
    3. '9' → logprob: -4.6645026206970215
    4. '24' → logprob: -5.1645026206970215
    5. '26' → logprob: -6.2895026206970215
    6. '29' → logprob: -6.2895026206970215
    7. '8' → logprob: -6.4145026206970215
    8. '32' → logprob: -6.6645026206970215
    9. ' ' → logprob: -6.9145026206970215
    10. '16' → logprob: -7.6645026206970215

Token 548: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.776592493057251
    2. '2' → logprob: -0.901592493057251
    3. ' to' → logprob: -3.276592493057251
    4. 'to' → logprob: -3.276592493057251
    5. ')' → logprob: -4.401592254638672
    6. ' ' → logprob: -4.401592254638672
    7. '9' → logprob: -4.526592254638672
    8. ' ,' → logprob: -4.651592254638672
    9. '),' → logprob: -6.026592254638672
    10. 's' → logprob: -6.401592254638672

Token 549: ' b' (ID: 287)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0009225384565070271
    2. '8' → logprob: -7.000922679901123
    3. '31' → logprob: -12.750922203063965
    4. '1' → logprob: -13.000922203063965
    5. '```' → logprob: -13.250922203063965
    6. '
' → logprob: -14.375922203063965
    7. '32' → logprob: -14.500922203063965
    8. 'b' → logprob: -14.500922203063965
    9. ' ' → logprob: -14.500922203063965
    10. '6' → logprob: -15.250922203063965

Token 550: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.2921391725540161
    2. '8' → logprob: -1.4171391725540161
    3. '25' → logprob: -4.917139053344727
    4. '26' → logprob: -6.667139053344727
    5. '31' → logprob: -7.292139053344727
    6. '24' → logprob: -7.667139053344727
    7. '32' → logprob: -8.042139053344727
    8. '6' → logprob: -8.292139053344727
    9. '1' → logprob: -8.667139053344727
    10. '9' → logprob: -8.917139053344727

Token 551: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2444579005241394
    2. '):' → logprob: -3.119457960128784
    3. '   ' → logprob: -3.494457960128784
    4. ':' → logprob: -3.494457960128784
    5. '       ' → logprob: -3.494457960128784
    6. '):
' → logprob: -3.619457960128784
    7. '(' → logprob: -4.619457721710205
    8. '<|end|>' → logprob: -4.744457721710205
    9. 'def' → logprob: -5.244457721710205
    10. ' ' → logprob: -5.619457721710205

Token 552: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007538817590102553
    2. '   ' → logprob: -7.875753879547119
    3. '#' → logprob: -9.625754356384277
    4. 'def' → logprob: -10.000754356384277
    5. 'self' → logprob: -10.000754356384277
    6. '<|end|>' → logprob: -10.125754356384277
    7. ')' → logprob: -10.250754356384277
    8. '...' → logprob: -10.750754356384277
    9. 'from' → logprob: -10.750754356384277
    10. ' ' → logprob: -11.000754356384277

Token 553: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.41492921113967896
    2. '       ' → logprob: -1.5399291515350342
    3. '#' (adapté à ' #') → logprob: -2.289929151535034
    4. ' self' → logprob: -4.414929389953613
    5. 'for' → logprob: -6.039929389953613
    6. '   ' → logprob: -6.914929389953613
    7. 'but' → logprob: -6.914929389953613
    8. ' so' → logprob: -6.914929389953613
    9. 'which' → logprob: -7.039929389953613
    10. 'so' → logprob: -7.164929389953613

Token 554: ' so' (ID: 813)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0770190879702568
    2. '       ' → logprob: -2.827018976211548
    3. '#' → logprob: -4.452019214630127
    4. ' self' → logprob: -6.077019214630127
    5. 'def' → logprob: -7.952019214630127
    6. '   ' → logprob: -8.327018737792969
    7. ' #' → logprob: -10.327018737792969
    8. '	self' → logprob: -10.327018737792969
    9. ' ' → logprob: -10.452018737792969
    10. '...' → logprob: -10.577018737792969

Token 555: ' bits' (ID: 18189)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.015617720782756805
    2. '       ' → logprob: -4.515617847442627
    3. ' self' → logprob: -5.765617847442627
    4. '#' → logprob: -7.515617847442627
    5. '[self' → logprob: -8.265617370605469
    6. 'def' → logprob: -8.890617370605469
    7. '   ' → logprob: -9.390617370605469
    8. '[' → logprob: -10.140617370605469
    9. ' ' → logprob: -10.265617370605469
    10. '...' → logprob: -10.265617370605469

Token 556: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7730271816253662
    2. ' =' → logprob: -1.2730271816253662
    3. '2' → logprob: -2.023027181625366
    4. '   ' → logprob: -3.523027181625366
    5. 'def' → logprob: -3.773027181625366
    6. 'from' → logprob: -4.023027420043945
    7. '(' → logprob: -4.648027420043945
    8. 'range' → logprob: -5.023027420043945
    9. ' ' → logprob: -5.273027420043945
    10. '25' → logprob: -5.523027420043945

Token 557: '32' (ID: 1398)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.6707547903060913
    2. '25' → logprob: -1.4207547903060913
    3. '(' → logprob: -1.7957547903060913
    4. '2' → logprob: -2.920754909515381
    5. '1' → logprob: -4.670754909515381
    6. 'from' → logprob: -5.295754909515381
    7. '=' → logprob: -5.795754909515381
    8. ' ' → logprob: -6.170754909515381
    9. '32' → logprob: -6.795754909515381
    10. ' (' → logprob: -7.233254909515381

Token 558: ' to' (ID: 316)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3204886019229889
    2. ' -' → logprob: -2.445488691329956
    3. '25' → logprob: -3.070488691329956
    4. ' ' → logprob: -3.320488691329956
    5. 'to' → logprob: -3.445488691329956
    6. ' to' → logprob: -4.320488452911377
    7. '       ' → logprob: -4.445488452911377
    8. '23' → logprob: -4.820488452911377
    9. '26' → logprob: -5.195488452911377
    10. '   ' → logprob: -5.445488452911377

Token 559: ' ' (ID: 220)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.0001951961312443018
    2. '27' → logprob: -9.375195503234863
    3. '32' → logprob: -9.500195503234863
    4. '(' → logprob: -11.125195503234863
    5. '

' → logprob: -12.375195503234863
    6. '28' → logprob: -12.750195503234863
    7. ' ' → logprob: -13.125195503234863
    8. '
' → logprob: -13.625195503234863
    9. '25' → logprob: -13.625195503234863
    10. '...' → logprob: -13.750195503234863

Token 560: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -6.170270353322849e-05
    2. '27' → logprob: -10.250061988830566
    3. '32' → logprob: -11.375061988830566
    4. '(' → logprob: -12.625061988830566
    5. '...' → logprob: -13.000061988830566
    6. '

' → logprob: -13.250061988830566
    7. '28' → logprob: -13.375061988830566
    8. '25' → logprob: -13.875061988830566
    9. '``' → logprob: -14.000061988830566
    10. '
' → logprob: -14.437561988830566

Token 561: ' are' (ID: 553)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3081109821796417
    2. 'def' → logprob: -2.3081109523773193
    3. '   ' → logprob: -2.4331109523773193
    4. '=' → logprob: -3.3081109523773193
    5. ' =' → logprob: -4.308111190795898
    6. 'self' → logprob: -5.433111190795898
    7. '(' → logprob: -5.558111190795898
    8. '(self' → logprob: -5.558111190795898
    9. ' def' → logprob: -5.808111190795898
    10. '[' → logprob: -6.183111190795898

Token 562: ' fractional' (ID: 136350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4215344488620758
    2. 'range' → logprob: -2.046534538269043
    3. ' [' → logprob: -2.421534538269043
    4. '[i' → logprob: -2.546534538269043
    5. ' range' → logprob: -4.171534538269043
    6. 'list' → logprob: -4.546534538269043
    7. ' list' → logprob: -4.671534538269043
    8. '[b' → logprob: -5.296534538269043
    9. '[self' → logprob: -6.796534538269043
    10. 'b' → logprob: -7.171534538269043

Token 563: ' bits' (ID: 18189)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0419604778289795
    2. ':' → logprob: -1.1669604778289795
    3. '       ' → logprob: -2.2919604778289795
    4. 'def' → logprob: -2.2919604778289795
    5. ':
' → logprob: -2.6669604778289795
    6. '(' → logprob: -4.041960716247559
    7. ' (' → logprob: -5.041960716247559
    8. '):
' → logprob: -5.041960716247559
    9. '=' → logprob: -5.416960716247559
    10. ' def' → logprob: -5.541960716247559

Token 564: '?
' (ID: 3901)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8972142338752747
    2. '       ' → logprob: -1.1472141742706299
    3. 'def' → logprob: -1.3972141742706299
    4. '=' → logprob: -5.147214412689209
    5. '
' → logprob: -5.522214412689209
    6. ' def' → logprob: -5.522214412689209
    7. '(' → logprob: -5.897214412689209
    8. ':' → logprob: -6.397214412689209
    9. ' =' → logprob: -6.397214412689209
    10. ' (' → logprob: -6.647214412689209

Token 565: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018391563789919019
    2. '   ' → logprob: -6.3768391609191895
    3. 'self' → logprob: -9.501838684082031
    4. '#' → logprob: -11.626838684082031
    5. ' self' → logprob: -11.626838684082031
    6. 'pass' → logprob: -11.751838684082031
    7. '<|end|>' → logprob: -12.001838684082031
    8. 'def' → logprob: -12.126838684082031
    9. ' pass' → logprob: -12.626838684082031
    10. ' ' → logprob: -12.751838684082031

Token 566: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4737720787525177
    2. '       ' → logprob: -1.0987720489501953
    3. ' self' → logprob: -3.2237720489501953
    4. 'pass' → logprob: -6.598772048950195
    5. '#' (adapté à ' #') → logprob: -6.723772048950195
    6. '   ' → logprob: -7.098772048950195
    7. ' pass' → logprob: -7.973772048950195
    8. 'def' → logprob: -8.723772048950195
    9. ' ' → logprob: -9.098772048950195
    10. '...' → logprob: -10.223772048950195

Token 567: ' Bits' (ID: 104003)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.016634227707982063
    2. '       ' → logprob: -4.391634464263916
    3. ' self' → logprob: -5.891634464263916
    4. '#' → logprob: -6.766634464263916
    5. 'def' → logprob: -9.391633987426758
    6. '   ' → logprob: -10.391633987426758
    7. 'pass' → logprob: -11.141633987426758
    8. '
' → logprob: -11.266633987426758
    9. ' ' → logprob: -11.891633987426758
    10. 'Ass' → logprob: -12.016633987426758

Token 568: ' ' (ID: 220)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.7205396294593811
    2. ' ' → logprob: -1.2205395698547363
    3. '=' → logprob: -2.7205395698547363
    4. '32' → logprob: -2.9705395698547363
    5. ' =' → logprob: -3.9705395698547363
    6. '   ' → logprob: -4.095539569854736
    7. 'from' → logprob: -4.470539569854736
    8. '25' → logprob: -4.595539569854736
    9. '24' → logprob: -4.845539569854736
    10. '2' → logprob: -5.220539569854736

Token 569: '1' (ID: 16)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '26' → logprob: -0.004401632584631443
    2. '25' → logprob: -5.629401683807373
    3. '32' → logprob: -7.504401683807373
    4. '27' → logprob: -8.879401206970215
    5. '2' → logprob: -9.629401206970215
    6. '(' → logprob: -10.504401206970215
    7. '

' → logprob: -12.629401206970215
    8. '```' → logprob: -12.941901206970215
    9. 'i' → logprob: -13.691901206970215
    10. '...' → logprob: -13.691901206970215

Token 570: ' to' (ID: 316)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4630002975463867
    2. '8' → logprob: -2.0880002975463867
    3. '7' → logprob: -3.0880002975463867
    4. ',' → logprob: -3.2130002975463867
    5. '9' → logprob: -3.2130002975463867
    6. ' ' → logprob: -3.5880002975463867
    7. '6' → logprob: -3.8380002975463867
    8. ' ,' → logprob: -4.213000297546387
    9. '0' → logprob: -4.463000297546387
    10. ' to' → logprob: -4.588000297546387

Token 571: ' ' (ID: 220)
  Prédit: '25'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '25' → logprob: -0.6707541942596436
    2. '26' → logprob: -1.0457541942596436
    3. '7' → logprob: -2.0457541942596436
    4. '32' → logprob: -5.545754432678223
    5. '8' → logprob: -6.170754432678223
    6. '31' → logprob: -6.795754432678223
    7. ' ' → logprob: -8.295754432678223
    8. '27' → logprob: -8.795754432678223
    9. '24' → logprob: -9.045754432678223
    10. '6' → logprob: -9.045754432678223

Token 572: '7' (ID: 22)
  Prédit: '25'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '25' → logprob: -0.6944748759269714
    2. '7' → logprob: -0.9444748759269714
    3. '26' → logprob: -2.319474935531616
    4. '8' → logprob: -5.069474697113037
    5. '32' → logprob: -5.194474697113037
    6. '24' → logprob: -7.319474697113037
    7. '31' → logprob: -8.069475173950195
    8. '1' → logprob: -9.256975173950195
    9. '16' → logprob: -9.506975173950195
    10. '6' → logprob: -9.694475173950195

Token 573: ' (' (ID: 350)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4815182387828827
    2. ' =' → logprob: -1.731518268585205
    3. 'def' → logprob: -2.231518268585205
    4. '   ' → logprob: -2.481518268585205
    5. '       ' → logprob: -5.106518268585205
    6. ')' → logprob: -6.731518268585205
    7. ' def' → logprob: -6.856518268585205
    8. ' ' → logprob: -6.981518268585205
    9. ':' → logprob: -7.356518268585205
    10. '[' → logprob: -7.356518268585205

Token 574: 'from' (ID: 2845)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '32' → logprob: -0.8570592999458313
    2. '26' → logprob: -0.9820592999458313
    3. ')' → logprob: -2.1070592403411865
    4. ',' → logprob: -3.8570592403411865
    5. ' ' → logprob: -4.107059478759766
    6. '27' → logprob: -4.857059478759766
    7. '2' → logprob: -4.982059478759766
    8. '23' → logprob: -5.857059478759766
    9. '31' → logprob: -5.982059478759766
    10. '   ' → logprob: -6.107059478759766

Token 575: ' left' (ID: 3561)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '26' → logprob: -0.06747036427259445
    2. '32' → logprob: -2.9424703121185303
    3. '27' → logprob: -4.567470550537109
    4. ' ' → logprob: -6.692470550537109
    5. 'right' → logprob: -8.31747055053711
    6. '25' → logprob: -8.56747055053711
    7. 'left' → logprob: -9.44247055053711
    8. '1' → logprob: -10.06747055053711
    9. 'bit' → logprob: -10.06747055053711
    10. '2' → logprob: -10.19247055053711

Token 576: ' to' (ID: 316)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2589075565338135
    2. '):
' → logprob: -2.3839075565338135
    3. ',' → logprob: -3.3839075565338135
    4. '32' → logprob: -3.3839075565338135
    5. ':' → logprob: -3.7589075565338135
    6. '       ' → logprob: -4.133907318115234
    7. '   ' → logprob: -4.508907318115234
    8. ')' → logprob: -5.133907318115234
    9. '...' → logprob: -5.883907318115234
    10. '=' → logprob: -6.508907318115234

Token 577: ' right' (ID: 1849)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '32' → logprob: -0.7679996490478516
    2. '26' → logprob: -1.3929996490478516
    3. 'right' → logprob: -1.6429996490478516
    4. 'left' → logprob: -3.3929996490478516
    5. '27' → logprob: -4.142999649047852
    6. ' ' → logprob: -4.267999649047852
    7. '31' → logprob: -4.767999649047852
    8. ')' → logprob: -5.517999649047852
    9. '25' → logprob: -5.892999649047852
    10. '28' → logprob: -6.017999649047852

Token 578: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5009062886238098
    2. ':' → logprob: -1.500906229019165
    3. '):
' → logprob: -2.250906229019165
    4. ')' → logprob: -3.875906229019165
    5. '   ' → logprob: -4.625906467437744
    6. '<|end|>' → logprob: -4.750906467437744
    7. '       ' → logprob: -4.875906467437744
    8. '32' → logprob: -5.250906467437744
    9. ',' → logprob: -6.000906467437744
    10. 'def' → logprob: -6.375906467437744

Token 579: ' are' (ID: 553)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23303958773612976
    2. '   ' → logprob: -1.9830396175384521
    3. 'def' → logprob: -2.983039617538452
    4. '<|end|>' → logprob: -5.608039379119873
    5. ' def' → logprob: -6.108039379119873
    6. '[' → logprob: -6.233039379119873
    7. ' ' → logprob: -6.483039379119873
    8. ')' → logprob: -6.733039379119873
    9. '32' → logprob: -6.858039379119873
    10. '=' → logprob: -6.983039379119873

Token 580: ' from' (ID: 591)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04355993494391441
    2. 'range' → logprob: -3.543560028076172
    3. '[]' → logprob: -5.168560028076172
    4. 'list' → logprob: -5.918560028076172
    5. ' [' → logprob: -6.043560028076172
    6. '32' → logprob: -6.793560028076172
    7. '26' → logprob: -8.418560028076172
    8. 'bit' → logprob: -8.543560028076172
    9. '   ' → logprob: -8.918560028076172
    10. '#' → logprob: -9.043560028076172

Token 581: ' right' (ID: 1849)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '26' → logprob: -0.06407204270362854
    2. '27' → logprob: -3.0640721321105957
    3. '32' → logprob: -4.814072132110596
    4. ' ' → logprob: -5.064072132110596
    5. '25' → logprob: -8.564071655273438
    6. 'bit' → logprob: -9.064071655273438
    7. ' bit' → logprob: -9.564071655273438
    8. '2' → logprob: -9.564071655273438
    9. '31' → logprob: -9.814071655273438
    10. '   ' → logprob: -10.001571655273438

Token 582: ' is' (ID: 382)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.07900869846344
    2. '<|end|>' → logprob: -1.70400869846344
    3. ' ' → logprob: -1.95400869846344
    4. '       ' → logprob: -2.2040085792541504
    5. 'def' → logprob: -2.3290085792541504
    6. ' def' → logprob: -3.0790085792541504
    7. '32' → logprob: -3.8290085792541504
    8. ')' → logprob: -4.32900857925415
    9. ':' → logprob: -5.07900857925415
    10. '  ' → logprob: -5.32900857925415

Token 583: ' b' (ID: 287)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '26' → logprob: -0.40419578552246094
    2. '32' → logprob: -1.904195785522461
    3. ' ' → logprob: -2.279195785522461
    4. '27' → logprob: -2.904195785522461
    5. '25' → logprob: -4.404195785522461
    6. '[' → logprob: -5.404195785522461
    7. '33' → logprob: -6.279195785522461
    8. ' [' → logprob: -6.529195785522461
    9. '31' → logprob: -6.779195785522461
    10. 'range' → logprob: -6.904195785522461

Token 584: '1' (ID: 16)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -0.39020267128944397
    2. '26' → logprob: -1.2652026414871216
    3. '31' → logprob: -4.515202522277832
    4. '25' → logprob: -5.265202522277832
    5. 'its' → logprob: -5.390202522277832
    6. '1' → logprob: -5.515202522277832
    7. ' ' → logprob: -5.765202522277832
    8. '7' → logprob: -6.140202522277832
    9. '8' → logprob: -6.140202522277832
    10. '27' → logprob: -6.390202522277832

Token 585: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4256227016448975
    2. 'def' → logprob: -1.5506227016448975
    3. ' =' → logprob: -1.8006227016448975
    4. '=' → logprob: -2.3006227016448975
    5. '       ' → logprob: -2.3006227016448975
    6. ':' → logprob: -2.4256227016448975
    7. ' def' → logprob: -3.4256227016448975
    8. '<|end|>' → logprob: -4.175622940063477
    9. ' ' → logprob: -4.425622940063477
    10. ')' → logprob: -5.050622940063477

Token 586: ' b' (ID: 287)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '26' → logprob: -0.034557946026325226
    2. '32' → logprob: -3.909558057785034
    3. ' ' → logprob: -5.034557819366455
    4. '27' → logprob: -5.659557819366455
    5. '7' → logprob: -6.034557819366455
    6. '8' → logprob: -6.784557819366455
    7. '25' → logprob: -9.034558296203613
    8. '28' → logprob: -9.847058296203613
    9. '1' → logprob: -10.284558296203613
    10. '31' → logprob: -10.409558296203613

Token 587: '7' (ID: 22)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.10167653113603592
    2. '32' → logprob: -2.7266764640808105
    3. '7' → logprob: -3.8516764640808105
    4. '8' → logprob: -5.3516764640808105
    5. '25' → logprob: -5.8516764640808105
    6. '27' → logprob: -6.4766764640808105
    7. '1' → logprob: -8.101676940917969
    8. '31' → logprob: -9.351676940917969
    9. ' ' → logprob: -9.414176940917969
    10. '33' → logprob: -10.101676940917969

Token 588: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.899435818195343
    2. '       ' → logprob: -0.899435818195343
    3. '<|end|>' → logprob: -2.3994357585906982
    4. 'def' → logprob: -3.2744357585906982
    5. ')' → logprob: -4.774435997009277
    6. ':' → logprob: -5.149435997009277
    7. ' ' → logprob: -5.149435997009277
    8. ' def' → logprob: -5.399435997009277
    9. '[' → logprob: -5.524435997009277
    10. '<|end|>' → logprob: -5.524435997009277

Token 589: ' But' (ID: 3072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13273455202579498
    2. '   ' → logprob: -2.257734537124634
    3. 'def' → logprob: -4.507734775543213
    4. ' ' → logprob: -6.257734775543213
    5. ' def' → logprob: -6.382734775543213
    6. '<|end|>' → logprob: -6.382734775543213
    7. '```' → logprob: -7.382734775543213
    8. ')' → logprob: -7.632734775543213
    9. ' self' → logprob: -7.882734775543213
    10. 'self' → logprob: -7.882734775543213

Token 590: ' bit' (ID: 3546)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7705365419387817
    2. '       ' → logprob: -1.5205365419387817
    3. '   ' → logprob: -2.645536422729492
    4. ' def' → logprob: -3.145536422729492
    5. ' self' → logprob: -3.520536422729492
    6. '32' → logprob: -3.645536422729492
    7. ' ' → logprob: -3.645536422729492
    8. ' for' → logprob: -3.645536422729492
    9. 'self' → logprob: -4.395536422729492
    10. 'range' → logprob: -4.770536422729492

Token 591: ' ' (ID: 220)
  Prédit: 'stream'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stream' → logprob: -1.031125783920288
    2. '32' → logprob: -1.156125783920288
    3. ' ' → logprob: -1.781125783920288
    4. 's' → logprob: -3.156125783920288
    5. ')' → logprob: -3.781125783920288
    6. '   ' → logprob: -4.406126022338867
    7. '31' → logprob: -4.531126022338867
    8. '16' → logprob: -4.531126022338867
    9. '29' → logprob: -5.156126022338867
    10. 'positions' → logprob: -5.406126022338867

Token 592: '1' (ID: 16)
  Prédit: 'stream'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stream' → logprob: -0.13470211625099182
    2. '32' → logprob: -2.384702205657959
    3. 'def' → logprob: -4.634702205657959
    4. '2' → logprob: -5.384702205657959
    5. 'positions' → logprob: -5.509702205657959
    6. 's' → logprob: -5.509702205657959
    7. '26' → logprob: -6.759702205657959
    8. '29' → logprob: -6.884702205657959
    9. '16' → logprob: -7.009702205657959
    10. '31' → logprob: -7.134702205657959

Token 593: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2845065593719482
    2. '=' → logprob: -1.6595065593719482
    3. 's' → logprob: -2.2845065593719482
    4. '2' → logprob: -2.6595065593719482
    5. '7' → logprob: -2.6595065593719482
    6. ':' → logprob: -2.6595065593719482
    7. '3' → logprob: -3.0345065593719482
    8. ' ' → logprob: -3.0345065593719482
    9. ')' → logprob: -3.6595065593719482
    10. ',' → logprob: -4.034506797790527

Token 594: ' sign' (ID: 2232)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '32' → logprob: -0.30360865592956543
    2. '26' → logprob: -2.1786086559295654
    3. '1' → logprob: -3.0536086559295654
    4. ' ' → logprob: -3.1786086559295654
    5. '2' → logprob: -3.8036086559295654
    6. '9' → logprob: -5.4286088943481445
    7. '8' → logprob: -5.6786088943481445
    8. '7' → logprob: -5.8036088943481445
    9. '33' → logprob: -5.8036088943481445
    10. '27' → logprob: -5.8036088943481445

Token 595: ' bit' (ID: 3546)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.685684084892273
    2. '   ' → logprob: -1.310684084892273
    3. '<|end|>' → logprob: -2.4356842041015625
    4. ')' → logprob: -3.3106842041015625
    5. 'def' → logprob: -3.3106842041015625
    6. ' ' → logprob: -3.6856842041015625
    7. '32' → logprob: -5.3106842041015625
    8. ' def' → logprob: -5.4356842041015625
    9. 'from' → logprob: -5.5606842041015625
    10. ',' → logprob: -5.6856842041015625

Token 596: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11620425432920456
    2. '   ' → logprob: -2.491204261779785
    3. '<|end|>' → logprob: -4.616204261779785
    4. 'def' → logprob: -4.866204261779785
    5. ')' → logprob: -5.866204261779785
    6. ' ' → logprob: -6.366204261779785
    7. ' def' → logprob: -7.741204261779785
    8. ',' → logprob: -7.866204261779785
    9. '32' → logprob: -7.866204261779785
    10. 'self' → logprob: -8.116204261779785

Token 597: ' problem' (ID: 4792)
  Prédit: 'definition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'definition' → logprob: -0.06376495212316513
    2. 'design' → logprob: -3.563765048980713
    3. ' definition' → logprob: -4.313765048980713
    4. ' design' → logprob: -5.688765048980713
    5. '7' → logprob: -6.063765048980713
    6. 'def' → logprob: -6.063765048980713
    7. '1' → logprob: -6.313765048980713
    8. 'the' → logprob: -6.438765048980713
    9. 'left' → logprob: -6.688765048980713
    10. 'position' → logprob: -6.938765048980713

Token 598: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1778343915939331
    2. '   ' → logprob: -2.1778345108032227
    3. 'def' → logprob: -4.052834510803223
    4. '<|end|>' → logprob: -4.052834510803223
    5. ' ' → logprob: -5.677834510803223
    6. ')' → logprob: -5.802834510803223
    7. '32' → logprob: -6.552834510803223
    8. ' def' → logprob: -7.052834510803223
    9. '...' → logprob: -7.052834510803223
    10. 'self' → logprob: -7.677834510803223

Token 599: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014914247207343578
    2. '   ' → logprob: -4.389914035797119
    3. '<|end|>' → logprob: -7.014914035797119
    4. ' ' → logprob: -7.639914035797119
    5. ')' → logprob: -8.389914512634277
    6. '      ' → logprob: -9.014914512634277
    7. '32' → logprob: -9.014914512634277
    8. 'def' → logprob: -9.264914512634277
    9. '        ' → logprob: -9.889914512634277
    10. '  ' → logprob: -10.014914512634277

Token 600: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4618281126022339
    2. 'self' → logprob: -1.3368281126022339
    3. ' self' → logprob: -3.2118282318115234
    4. ' for' → logprob: -3.2118282318115234
    5. 'for' → logprob: -4.086828231811523
    6. '   ' → logprob: -6.336828231811523
    7. '#' (adapté à ' #') → logprob: -6.461828231811523
    8. 'def' → logprob: -6.586828231811523
    9. ' ' → logprob: -6.711828231811523
    10. 'pass' → logprob: -6.836828231811523

Token 601: ' Re' (ID: 907)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8724542260169983
    2. 'self' → logprob: -0.9974542260169983
    3. ' self' → logprob: -1.7474541664123535
    4. 'def' → logprob: -4.2474541664123535
    5. '#' → logprob: -4.3724541664123535
    6. '   ' → logprob: -5.2474541664123535
    7. 'for' → logprob: -6.7474541664123535
    8. ' for' → logprob: -6.8724541664123535
    9. ' def' → logprob: -7.1224541664123535
    10. ' #' → logprob: -7.1224541664123535

Token 602: '-check' (ID: 30411)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17793229222297668
    2. 'f' → logprob: -3.0529322624206543
    3. 'store' → logprob: -3.8029322624206543
    4. 'turn' → logprob: -3.9279322624206543
    5. 'write' → logprob: -4.302932262420654
    6. 'd' → logprob: -4.427932262420654
    7. 'define' → logprob: -4.677932262420654
    8. 'ad' → logprob: -5.802932262420654
    9. '       ' → logprob: -5.927932262420654
    10. 'm' → logprob: -6.052932262420654

Token 603: ' problem' (ID: 4792)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5732149481773376
    2. 'self' → logprob: -1.1982150077819824
    3. '#' → logprob: -2.5732150077819824
    4. ' self' → logprob: -3.4482150077819824
    5. 'def' → logprob: -4.323215007781982
    6. '   ' → logprob: -5.323215007781982
    7. '<|end|>' → logprob: -6.073215007781982
    8. ' ' → logprob: -7.073215007781982
    9. ' #' → logprob: -7.323215007781982
    10. '...' → logprob: -7.573215007781982

Token 604: ' indexing' (ID: 105989)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5723984837532043
    2. '<|end|>' → logprob: -1.4473984241485596
    3. '   ' → logprob: -2.8223984241485596
    4. ' def' → logprob: -3.5723984241485596
    5. '       ' → logprob: -3.5723984241485596
    6. '<|end|>' → logprob: -3.6973984241485596
    7. '...' → logprob: -4.947398662567139
    8. '(' → logprob: -5.072398662567139
    9. '.' → logprob: -5.197398662567139
    10. ')' → logprob: -5.447398662567139

Token 605: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.042516738176345825
    2. 'self' → logprob: -4.042516708374023
    3. '   ' → logprob: -5.167516708374023
    4. 'pass' → logprob: -5.167516708374023
    5. '<|end|>' → logprob: -5.542516708374023
    6. ' pass' → logprob: -6.167516708374023
    7. 'def' → logprob: -6.667516708374023
    8. '...' → logprob: -6.917516708374023
    9. ' self' → logprob: -7.167516708374023
    10. '#' → logprob: -7.167516708374023

Token 606: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004528150428086519
    2. '   ' → logprob: -6.754528045654297
    3. '#' → logprob: -6.879528045654297
    4. ' pass' → logprob: -7.504528045654297
    5. 'pass' → logprob: -8.254528045654297
    6. 'self' → logprob: -8.379528045654297
    7. 'def' → logprob: -8.379528045654297
    8. '<|end|>' → logprob: -8.629528045654297
    9. '...' → logprob: -8.879528045654297
    10. ' ' → logprob: -9.254528045654297

Token 607: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4705599844455719
    2. 'self' → logprob: -1.3455599546432495
    3. 'for' → logprob: -2.970560073852539
    4. '#' (adapté à ' #') → logprob: -4.220560073852539
    5. ' self' → logprob: -4.220560073852539
    6. ' for' → logprob: -4.220560073852539
    7. 'pass' → logprob: -4.970560073852539
    8. ' pass' → logprob: -5.220560073852539
    9. '   ' → logprob: -6.220560073852539
    10. ' ' → logprob: -6.845560073852539

Token 608: ' b' (ID: 287)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0305941104888916
    2. 'def' → logprob: -1.2805941104888916
    3. '   ' → logprob: -1.4055941104888916
    4. ' for' → logprob: -3.2805941104888916
    5. 'for' → logprob: -3.5305941104888916
    6. ' ' → logprob: -4.0305938720703125
    7. 'self' → logprob: -4.6555938720703125
    8. ' def' → logprob: -5.2805938720703125
    9. '7' → logprob: -5.5305938720703125
    10. 'range' → logprob: -6.2805938720703125

Token 609: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3628476560115814
    2. '26' → logprob: -2.1128475666046143
    3. '32' → logprob: -2.3628475666046143
    4. '9' → logprob: -3.6128475666046143
    5. '8' → logprob: -4.237847805023193
    6. '25' → logprob: -5.112847805023193
    7. '1' → logprob: -5.112847805023193
    8. ' ' → logprob: -5.362847805023193
    9. '16' → logprob: -5.362847805023193
    10. '17' → logprob: -5.612847805023193

Token 610: ' ...' (ID: 2550)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6781243681907654
    2. ' =' → logprob: -1.5531244277954102
    3. '2' → logprob: -2.42812442779541
    4. ',' → logprob: -3.42812442779541
    5. '<|end|>' → logprob: -3.55312442779541
    6. ' to' → logprob: -3.67812442779541
    7. '8' → logprob: -3.67812442779541
    8. 'to' → logprob: -4.17812442779541
    9. 'def' → logprob: -4.55312442779541
    10. ':' → logprob: -4.67812442779541

Token 611: ' b' (ID: 287)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1061534881591797
    2. ' =' → logprob: -1.3561534881591797
    3. '32' → logprob: -2.3561534881591797
    4. '<|end|>' → logprob: -2.9811534881591797
    5. '       ' → logprob: -3.1061534881591797
    6. ':' → logprob: -3.2311534881591797
    7. ')' → logprob: -3.6061534881591797
    8. '...' → logprob: -3.6061534881591797
    9. ' ' → logprob: -3.6061534881591797
    10. '2' → logprob: -3.9811534881591797

Token 612: '32' (ID: 1398)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.5433995723724365
    2. '2' → logprob: -1.1683995723724365
    3. '26' → logprob: -2.7933995723724365
    4. '32' → logprob: -3.5433995723724365
    5. ' ' → logprob: -5.168399810791016
    6. '8' → logprob: -5.543399810791016
    7. '16' → logprob: -6.168399810791016
    8. '1' → logprob: -6.668399810791016
    9. '25' → logprob: -6.668399810791016
    10. '29' → logprob: -7.043399810791016

Token 613: ' are' (ID: 553)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1040274053812027
    2. '   ' → logprob: -2.604027509689331
    3. 'def' → logprob: -4.729027271270752
    4. ' ' → logprob: -5.104027271270752
    5. '<|end|>' → logprob: -5.979027271270752
    6. '32' → logprob: -6.354027271270752
    7. ' =' → logprob: -7.354027271270752
    8. ')' → logprob: -7.479027271270752
    9. '      ' → logprob: -7.729027271270752
    10. '  ' → logprob: -7.979027271270752

Token 614: ' bits' (ID: 18189)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.8081881999969482
    2. '32' → logprob: -1.0581881999969482
    3. '26' → logprob: -2.3081881999969482
    4. '[' → logprob: -3.3081881999969482
    5. 'from' → logprob: -4.308188438415527
    6. '2' → logprob: -4.433188438415527
    7. ' ' → logprob: -4.933188438415527
    8. ' range' → logprob: -4.933188438415527
    9. '8' → logprob: -5.058188438415527
    10. '25' → logprob: -5.558188438415527

Token 615: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.814907431602478
    2. '   ' → logprob: -1.814907431602478
    3. 'def' → logprob: -1.814907431602478
    4. '<|end|>' → logprob: -2.3149075508117676
    5. ' ' → logprob: -3.3149075508117676
    6. ')' → logprob: -4.064907550811768
    7. '[' → logprob: -4.189907550811768
    8. '32' → logprob: -4.814907550811768
    9. '(' → logprob: -5.064907550811768
    10. '7' → logprob: -5.439907550811768

Token 616: ' bit' (ID: 3546)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '26' → logprob: -0.465952605009079
    2. '2' → logprob: -1.3409526348114014
    3. '       ' → logprob: -3.5909526348114014
    4. ' ' → logprob: -3.5909526348114014
    5. '   ' → logprob: -3.8409526348114014
    6. 'from' → logprob: -4.840952396392822
    7. '32' → logprob: -5.090952396392822
    8. 'range' → logprob: -5.340952396392822
    9. '
' → logprob: -6.090952396392822
    10. '9' → logprob: -6.340952396392822

Token 617: '1' (ID: 16)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7215982675552368
    2. '32' → logprob: -1.2215982675552368
    3. '2' → logprob: -2.4715981483459473
    4. '16' → logprob: -2.8465981483459473
    5. '9' → logprob: -4.471598148345947
    6. 's' → logprob: -4.596598148345947
    7. '8' → logprob: -4.846598148345947
    8. '26' → logprob: -5.346598148345947
    9. ' =' → logprob: -5.471598148345947
    10. 'from' → logprob: -5.596598148345947

Token 618: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6643872261047363
    2. '=' → logprob: -1.2893872261047363
    3. ':' → logprob: -2.1643872261047363
    4. '32' → logprob: -3.6643872261047363
    5. '2' → logprob: -4.039387226104736
    6. ')' → logprob: -4.164387226104736
    7. ' ' → logprob: -4.664387226104736
    8. ' :' → logprob: -5.539387226104736
    9. '(' → logprob: -5.914387226104736
    10. '<|end|>' → logprob: -5.914387226104736

Token 619: ' MS' (ID: 15861)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.39403069019317627
    2. '26' → logprob: -2.1440305709838867
    3. ' ' → logprob: -2.6440305709838867
    4. '9' → logprob: -2.7690305709838867
    5. '32' → logprob: -3.2690305709838867
    6. '25' → logprob: -3.8940305709838867
    7. '1' → logprob: -5.644030570983887
    8. '8' → logprob: -5.644030570983887
    9. '24' → logprob: -6.519030570983887
    10. '16' → logprob: -6.894030570983887

Token 620: 'B' (ID: 33)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '32' → logprob: -0.2038116753101349
    2. '8' → logprob: -2.8288116455078125
    3. '2' → logprob: -3.0788116455078125
    4. ' ' → logprob: -3.8288116455078125
    5. '9' → logprob: -4.0788116455078125
    6. '7' → logprob: -4.8288116455078125
    7. 'range' → logprob: -4.8288116455078125
    8. ')' → logprob: -5.3288116455078125
    9. 'def' → logprob: -5.7038116455078125
    10. '   ' → logprob: -6.0788116455078125

Token 621: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12304262071847916
    2. '   ' → logprob: -2.373042583465576
    3. ' ' → logprob: -5.248042583465576
    4. 'def' → logprob: -5.373042583465576
    5. '<|end|>' → logprob: -5.748042583465576
    6. ' for' → logprob: -5.998042583465576
    7. '[' → logprob: -6.623042583465576
    8. ')' → logprob: -7.498042583465576
    9. 'self' → logprob: -7.748042583465576
    10. '32' → logprob: -7.998042583465576

Token 622: 'sign' (ID: 14677)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.707317054271698
    2. '26' → logprob: -1.4573171138763428
    3. '25' → logprob: -2.7073171138763428
    4. '32' → logprob: -2.7073171138763428
    5. '9' → logprob: -3.3323171138763428
    6. ' ' → logprob: -3.3323171138763428
    7. ')' → logprob: -3.5823171138763428
    8. '8' → logprob: -4.207316875457764
    9. '24' → logprob: -4.707316875457764
    10. '1' → logprob: -5.457316875457764

Token 623: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10052161663770676
    2. ',' → logprob: -3.8505215644836426
    3. ' )' → logprob: -3.8505215644836426
    4. '2' → logprob: -4.725521564483643
    5. '   ' → logprob: -4.725521564483643
    6. ' ' → logprob: -4.850521564483643
    7. '),' → logprob: -4.975521564483643
    8. '32' → logprob: -5.725521564483643
    9. '       ' → logprob: -5.850521564483643
    10. ' ,' → logprob: -5.850521564483643

Token 624: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01008481252938509
    2. '   ' → logprob: -5.010084629058838
    3. ' ' → logprob: -7.760084629058838
    4. '<|end|>' → logprob: -7.885084629058838
    5. ')' → logprob: -8.010085105895996
    6. ',' → logprob: -8.260085105895996
    7. ' for' → logprob: -8.385085105895996
    8. '...' → logprob: -8.385085105895996
    9. '      ' → logprob: -8.510085105895996
    10. '#' → logprob: -8.635085105895996

Token 625: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20234143733978271
    2. ' for' → logprob: -2.5773415565490723
    3. 'for' → logprob: -2.5773415565490723
    4. '   ' → logprob: -3.9523415565490723
    5. 'def' → logprob: -5.577341556549072
    6. ' ' → logprob: -6.202341556549072
    7. 'self' → logprob: -6.952341556549072
    8. '      ' → logprob: -6.952341556549072
    9. '#' (adapté à ' #') → logprob: -7.202341556549072
    10. '7' → logprob: -7.327341556549072

Token 626: ' integer' (ID: 16336)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5065680742263794
    2. 'for' → logprob: -2.00656795501709
    3. 'def' → logprob: -2.13156795501709
    4. '       ' → logprob: -2.50656795501709
    5. '#' → logprob: -3.50656795501709
    6. '   ' → logprob: -4.13156795501709
    7. 'fraction' → logprob: -5.00656795501709
    8. ' self' → logprob: -6.13156795501709
    9. 'bits' → logprob: -6.25656795501709
    10. ' for' → logprob: -6.25656795501709

Token 627: ' part' (ID: 997)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8779210448265076
    2. '=' → logprob: -1.6279211044311523
    3. ' ' → logprob: -2.3779211044311523
    4. 's' → logprob: -2.8779211044311523
    5. '   ' → logprob: -3.0029211044311523
    6. '32' → logprob: -3.5029211044311523
    7. 'def' → logprob: -3.5029211044311523
    8. ')' → logprob: -4.002921104431152
    9. ',' → logprob: -4.252921104431152
    10. '       ' → logprob: -4.252921104431152

Token 628: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7765986919403076
    2. 'def' → logprob: -1.6515986919403076
    3. ' =' → logprob: -2.4015986919403076
    4. '   ' → logprob: -2.5265986919403076
    5. ' for' → logprob: -3.0265986919403076
    6. 'for' → logprob: -3.2765986919403076
    7. '=' → logprob: -3.6515986919403076
    8. '<|end|>' → logprob: -3.7765986919403076
    9. ' ' → logprob: -4.526598930358887
    10. ':' → logprob: -5.276598930358887

Token 629: ' b' (ID: 287)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6028167009353638
    2. '26' → logprob: -1.3528167009353638
    3. '9' → logprob: -2.977816581726074
    4. '25' → logprob: -3.352816581726074
    5. '8' → logprob: -3.852816581726074
    6. '32' → logprob: -4.102816581726074
    7. '[' → logprob: -4.227816581726074
    8. ' ' → logprob: -4.352816581726074
    9. 'i' → logprob: -5.227816581726074
    10. ' range' → logprob: -5.477816581726074

Token 630: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.09088801592588425
    2. ' ' → logprob: -3.590888023376465
    3. '9' → logprob: -3.590888023376465
    4. '32' → logprob: -3.965888023376465
    5. '2' → logprob: -5.215888023376465
    6. '26' → logprob: -6.590888023376465
    7. '16' → logprob: -6.840888023376465
    8. '25' → logprob: -7.590888023376465
    9. '[' → logprob: -7.715888023376465
    10. 's' → logprob: -7.715888023376465

Token 631: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16092199087142944
    2. ' to' → logprob: -3.160922050476074
    3. '   ' → logprob: -3.535922050476074
    4. ',' → logprob: -4.285922050476074
    5. ' for' → logprob: -4.285922050476074
    6. ' =' → logprob: -5.160922050476074
    7. 'def' → logprob: -5.285922050476074
    8. '...' → logprob: -5.410922050476074
    9. ' ' → logprob: -5.535922050476074
    10. ':' → logprob: -5.660922050476074

Token 632: ' b' (ID: 287)
  Prédit: '31'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '31' → logprob: -0.0006751431501470506
    2. '32' → logprob: -8.250675201416016
    3. '25' → logprob: -8.375675201416016
    4. '26' → logprob: -9.500675201416016
    5. 'b' → logprob: -9.750675201416016
    6. ' ' → logprob: -10.250675201416016
    7. '24' → logprob: -12.500675201416016
    8. '30' → logprob: -12.750675201416016
    9. '23' → logprob: -13.313175201416016
    10. '   ' → logprob: -13.375675201416016

Token 633: '31' (ID: 2911)
  Prédit: '31'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '31' → logprob: -0.0087887616828084
    2. '32' → logprob: -4.758788585662842
    3. '25' → logprob: -9.1337890625
    4. '26' → logprob: -9.7587890625
    5. '30' → logprob: -13.2587890625
    6. '15' → logprob: -13.7587890625
    7. '```' → logprob: -14.2587890625
    8. '1' → logprob: -14.5712890625
    9. '23' → logprob: -14.6962890625
    10. '24' → logprob: -14.6962890625

Token 634: ' (' (ID: 350)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9119170904159546
    2. '       ' → logprob: -1.0369170904159546
    3. 'for' → logprob: -2.286917209625244
    4. '   ' → logprob: -2.661917209625244
    5. '7' → logprob: -3.911917209625244
    6. 'def' → logprob: -4.536917209625244
    7. ' ' → logprob: -4.911917209625244
    8. '<|end|>' → logprob: -5.161917209625244
    9. ' and' → logprob: -5.411917209625244
    10. ')' → logprob: -5.536917209625244

Token 635: '24' (ID: 1494)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '32' → logprob: -0.3626181483268738
    2. '8' → logprob: -1.9876182079315186
    3. '26' → logprob: -2.1126182079315186
    4. 'range' → logprob: -4.4876179695129395
    5. 'for' → logprob: -4.8626179695129395
    6. ')' → logprob: -4.9876179695129395
    7. ' ' → logprob: -5.1126179695129395
    8. '9' → logprob: -5.3626179695129395
    9. '   ' → logprob: -6.3626179695129395
    10. ' for' → logprob: -6.8626179695129395

Token 636: ' bits' (ID: 18189)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32977962493896484
    2. ',' → logprob: -1.5797796249389648
    3. '+' → logprob: -3.829779624938965
    4. ')]' → logprob: -3.954779624938965
    5. '32' → logprob: -4.329779624938965
    6. '),' → logprob: -5.079779624938965
    7. '])' → logprob: -5.954779624938965
    8. '2' → logprob: -6.454779624938965
    9. ']' → logprob: -6.579779624938965
    10. ')
' → logprob: -6.829779624938965

Token 637: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.30788522958755493
    2. '32' → logprob: -2.43288516998291
    3. '       ' → logprob: -2.93288516998291
    4. ',' → logprob: -3.30788516998291
    5. '<|end|>' → logprob: -3.68288516998291
    6. '...' → logprob: -3.93288516998291
    7. '<|end|>' → logprob: -4.93288516998291
    8. '   ' → logprob: -5.18288516998291
    9. '),' → logprob: -5.30788516998291
    10. '```' → logprob: -5.30788516998291

Token 638: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3170908987522125
    2. 'for' → logprob: -1.9420908689498901
    3. ' for' → logprob: -2.8170909881591797
    4. '   ' → logprob: -3.5670909881591797
    5. 'def' → logprob: -4.81709098815918
    6. 'self' → logprob: -4.94209098815918
    7. ' ' → logprob: -5.56709098815918
    8. '#' → logprob: -5.94209098815918
    9. '7' → logprob: -5.94209098815918
    10. ' and' → logprob: -6.06709098815918

Token 639: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0978678464889526
    2. '32' → logprob: -1.4728678464889526
    3. '#' (adapté à ' #') → logprob: -1.7228678464889526
    4. '   ' → logprob: -2.347867965698242
    5. 'def' → logprob: -2.847867965698242
    6. ' ' → logprob: -4.347867965698242
    7. 'self' → logprob: -4.597867965698242
    8. '31' → logprob: -4.722867965698242
    9. 'for' → logprob: -4.722867965698242
    10. ' #' → logprob: -4.847867965698242

Token 640: ' fractional' (ID: 136350)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8858800530433655
    2. 'def' → logprob: -1.0108799934387207
    3. '       ' → logprob: -2.5108799934387207
    4. '   ' → logprob: -2.8858799934387207
    5. '32' → logprob: -3.2608799934387207
    6. '7' → logprob: -4.135879993438721
    7. '#' → logprob: -4.510879993438721
    8. 'fraction' → logprob: -5.510879993438721
    9. '31' → logprob: -5.760879993438721
    10. '33' → logprob: -6.385879993438721

Token 641: ' part' (ID: 997)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2576039433479309
    2. '=' → logprob: -2.382603883743286
    3. '_part' → logprob: -2.757603883743286
    4. 'Part' → logprob: -3.507603883743286
    5. 's' → logprob: -4.507604122161865
    6. 'def' → logprob: -4.757604122161865
    7. '   ' → logprob: -4.757604122161865
    8. '_bits' → logprob: -5.507604122161865
    9. '       ' → logprob: -6.632604122161865
    10. 'to' → logprob: -6.882604122161865

Token 642: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5308565497398376
    2. ' =' → logprob: -0.9058565497398376
    3. '   ' → logprob: -5.655856609344482
    4. 'def' → logprob: -5.780856609344482
    5. '=[' → logprob: -8.405856132507324
    6. '=[]' → logprob: -8.655856132507324
    7. '       ' → logprob: -8.780856132507324
    8. ' ' → logprob: -9.030856132507324
    9. 'self' → logprob: -9.530856132507324
    10. 'from' → logprob: -10.030856132507324

Token 643: ' b' (ID: 287)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.21130749583244324
    2. 'range' → logprob: -1.9613075256347656
    3. 'list' → logprob: -3.0863075256347656
    4. ' [' → logprob: -6.461307525634766
    5. '[]' → logprob: -7.461307525634766
    6. ' list' → logprob: -7.586307525634766
    7. '32' → logprob: -7.711307525634766
    8. ' range' → logprob: -8.211307525634766
    9. '[list' → logprob: -8.711307525634766
    10. 'b' → logprob: -8.961307525634766

Token 644: '1' (ID: 16)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '26' → logprob: -0.1393280327320099
    2. '25' → logprob: -2.6393280029296875
    3. '32' → logprob: -2.8893280029296875
    4. '24' → logprob: -6.2643280029296875
    5. ' ' → logprob: -7.0143280029296875
    6. '2' → logprob: -9.014328002929688
    7. '27' → logprob: -10.514328002929688
    8. '23' → logprob: -10.639328002929688
    9. '(' → logprob: -11.264328002929688
    10. '22' → logprob: -11.764328002929688

Token 645: ' to' (ID: 316)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5800006985664368
    2. '6' → logprob: -1.705000638961792
    3. '9' → logprob: -2.205000638961792
    4. '7' → logprob: -2.830000638961792
    5. ' ' → logprob: -3.580000638961792
    6. '8' → logprob: -4.330000877380371
    7. '0' → logprob: -4.705000877380371
    8. '32' → logprob: -5.080000877380371
    9. '3' → logprob: -5.330000877380371
    10. ')' → logprob: -5.830000877380371

Token 646: ' b' (ID: 287)
  Prédit: '25'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '25' → logprob: -0.6382207870483398
    2. '7' → logprob: -0.7632207870483398
    3. '8' → logprob: -5.51322078704834
    4. '31' → logprob: -7.63822078704834
    5. '26' → logprob: -8.13822078704834
    6. ' ' → logprob: -8.26322078704834
    7. '15' → logprob: -8.88822078704834
    8. '32' → logprob: -9.01322078704834
    9. '24' → logprob: -9.76322078704834
    10. '6' → logprob: -10.01322078704834

Token 647: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.24045585095882416
    2. '25' → logprob: -1.7404558658599854
    3. '8' → logprob: -3.4904558658599854
    4. '15' → logprob: -5.865455627441406
    5. '26' → logprob: -6.240455627441406
    6. '32' → logprob: -7.115455627441406
    7. '9' → logprob: -7.615455627441406
    8. ' ' → logprob: -7.615455627441406
    9. '16' → logprob: -7.990455627441406
    10. '1' → logprob: -8.365455627441406

Token 648: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22708530724048615
    2. '   ' → logprob: -1.9770853519439697
    3. 'def' → logprob: -3.8520853519439697
    4. '=' → logprob: -5.102085113525391
    5. ' (' → logprob: -5.227085113525391
    6. '(' → logprob: -5.352085113525391
    7. ' ' → logprob: -5.352085113525391
    8. ' =' → logprob: -5.602085113525391
    9. ':' → logprob: -5.727085113525391
    10. '<|end|>' → logprob: -5.727085113525391

Token 649: '7' (ID: 22)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '26' → logprob: -0.8435743451118469
    2. '9' → logprob: -1.3435742855072021
    3. '32' → logprob: -1.5935742855072021
    4. '8' → logprob: -2.968574285507202
    5. '25' → logprob: -3.468574285507202
    6. ')' → logprob: -4.468574523925781
    7. '16' → logprob: -6.093574523925781
    8. '31' → logprob: -6.343574523925781
    9. ' ' → logprob: -6.468574523925781
    10. '23' → logprob: -6.593574523925781

Token 650: ' bits' (ID: 18189)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2872732877731323
    2. '7' → logprob: -1.6622732877731323
    3. ',' → logprob: -1.9122732877731323
    4. '2' → logprob: -2.662273406982422
    5. ' ,' → logprob: -2.662273406982422
    6. ':' → logprob: -2.787273406982422
    7. '3' → logprob: -3.287273406982422
    8. 'to' → logprob: -3.662273406982422
    9. ' to' → logprob: -4.162273406982422
    10. '6' → logprob: -4.162273406982422

Token 651: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3963410556316376
    2. ')' → logprob: -2.02134108543396
    3. '   ' → logprob: -2.52134108543396
    4. ' for' → logprob: -3.39634108543396
    5. '<|end|>' → logprob: -3.52134108543396
    6. ',' → logprob: -4.771340847015381
    7. '<|end|>' → logprob: -5.021340847015381
    8. 'from' → logprob: -5.146340847015381
    9. ' (' → logprob: -5.771340847015381
    10. 'def' → logprob: -6.021340847015381

Token 652: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026692116633057594
    2. '   ' → logprob: -3.9016921520233154
    3. 'self' → logprob: -5.901691913604736
    4. 'def' → logprob: -5.901691913604736
    5. ' self' → logprob: -8.526692390441895
    6. ' ' → logprob: -9.026692390441895
    7. ' for' → logprob: -9.776692390441895
    8. '      ' → logprob: -10.026692390441895
    9. 'for' → logprob: -10.026692390441895
    10. '#' → logprob: -10.526692390441895

Token 653: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4284738004207611
    2. '       ' → logprob: -1.5534738302230835
    3. 'def' → logprob: -2.803473711013794
    4. ' self' → logprob: -3.178473711013794
    5. '#' (adapté à ' #') → logprob: -3.928473711013794
    6. '   ' → logprob: -4.803473949432373
    7. 'for' → logprob: -6.178473949432373
    8. ' ' → logprob: -7.178473949432373
    9. ' for' → logprob: -7.178473949432373
    10. ' #' → logprob: -7.303473949432373

Token 654: ' So' (ID: 2632)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4461546242237091
    2. '       ' → logprob: -1.8211545944213867
    3. 'def' → logprob: -1.8211545944213867
    4. '   ' → logprob: -3.9461545944213867
    5. ' self' → logprob: -4.321154594421387
    6. ' ' → logprob: -6.946154594421387
    7. 'for' → logprob: -7.196154594421387
    8. ' def' → logprob: -7.696154594421387
    9. '#' → logprob: -7.946154594421387
    10. '7' → logprob: -8.571154594421387

Token 655: ' fractional' (ID: 136350)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6990481615066528
    2. 'def' → logprob: -0.9490481615066528
    3. '       ' → logprob: -2.8240480422973633
    4. '   ' → logprob: -3.1990480422973633
    5. ' self' → logprob: -4.574048042297363
    6. ' def' → logprob: -6.574048042297363
    7. ' ' → logprob: -6.824048042297363
    8. '
' → logprob: -7.199048042297363
    9. '#' → logprob: -7.199048042297363
    10. '  ' → logprob: -8.199048042297363

Token 656: ' bits' (ID: 18189)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09867660701274872
    2. '   ' → logprob: -2.4736766815185547
    3. '_bits' → logprob: -6.098676681518555
    4. '_part' → logprob: -6.473676681518555
    5. 'bits' → logprob: -6.598676681518555
    6. '       ' → logprob: -6.723676681518555
    7. '
' → logprob: -6.723676681518555
    8. ' def' → logprob: -7.348676681518555
    9. '```' → logprob: -7.973676681518555
    10. ' ' → logprob: -8.348676681518555

Token 657: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5817849040031433
    2. '=' → logprob: -0.8317849040031433
    3. '   ' → logprob: -5.706784725189209
    4. '       ' → logprob: -6.456784725189209
    5. 'def' → logprob: -7.456784725189209
    6. ' ' → logprob: -9.081785202026367
    7. '=self' → logprob: -10.331785202026367
    8. '=[' → logprob: -10.331785202026367
    9. 'self' → logprob: -10.331785202026367
    10. '=[]' → logprob: -10.581785202026367

Token 658: ' the' (ID: 290)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09380915015935898
    2. ' [' → logprob: -2.843809127807617
    3. '[b' → logprob: -3.968809127807617
    4. '[self' → logprob: -5.093809127807617
    5. '   ' → logprob: -6.718809127807617
    6. '[i' → logprob: -6.718809127807617
    7. 'range' → logprob: -7.343809127807617
    8. '       ' → logprob: -7.468809127807617
    9. 'bit' → logprob: -7.593809127807617
    10. '[f' → logprob: -7.968809127807617

Token 659: ' lowest' (ID: 23120)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12164762616157532
    2. 'bits' → logprob: -2.246647596359253
    3. 'fraction' → logprob: -6.246647834777832
    4. 'def' → logprob: -6.746647834777832
    5. 'for' → logprob: -6.746647834777832
    6. '   ' → logprob: -6.871647834777832
    7. ' [' → logprob: -7.496647834777832
    8. ' bits' → logprob: -8.121647834777832
    9. '.bits' → logprob: -8.246647834777832
    10. '[b' → logprob: -8.371647834777832

Token 660: ' ' (ID: 220)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -0.7442935109138489
    2. ' ' → logprob: -1.744293451309204
    3. '   ' → logprob: -2.119293451309204
    4. 'def' → logprob: -3.244293451309204
    5. '       ' → logprob: -3.369293451309204
    6. '26' → logprob: -3.369293451309204
    7. ' (' → logprob: -4.244293689727783
    8. ' to' → logprob: -4.619293689727783
    9. ',' → logprob: -4.744293689727783
    10. '(' → logprob: -4.744293689727783

Token 661: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.6068501472473145
    2. '25' → logprob: -0.9818501472473145
    3. ' ' → logprob: -2.9818501472473145
    4. 'bits' → logprob: -4.4818501472473145
    5. '26' → logprob: -4.6068501472473145
    6. '32' → logprob: -6.4818501472473145
    7. ' bits' → logprob: -6.8568501472473145
    8. '8' → logprob: -6.9818501472473145
    9. 'right' → logprob: -7.4818501472473145
    10. '```' → logprob: -7.4818501472473145

Token 662: ' bits' (ID: 18189)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7589350342750549
    2. ' bits' → logprob: -2.13393497467041
    3. '   ' → logprob: -2.38393497467041
    4. 'bits' → logprob: -2.75893497467041
    5. ' to' → logprob: -3.00893497467041
    6. ' def' → logprob: -3.50893497467041
    7. '       ' → logprob: -3.63393497467041
    8. ' ' → logprob: -3.63393497467041
    9. '32' → logprob: -3.88393497467041
    10. '<|end|>' → logprob: -4.38393497467041

Token 663: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42647337913513184
    2. '       ' → logprob: -1.5514733791351318
    3. 'def' → logprob: -2.426473379135132
    4. ' =' → logprob: -3.676473379135132
    5. '=' → logprob: -4.301473617553711
    6. 'self' → logprob: -5.926473617553711
    7. ' def' → logprob: -7.176473617553711
    8. ' ' → logprob: -7.301473617553711
    9. '[' → logprob: -7.426473617553711
    10. '  ' → logprob: -8.051473617553711

Token 664: ' thus' (ID: 13972)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.5165807008743286
    2. 'self' → logprob: -1.8915807008743286
    3. ' [' → logprob: -2.141580581665039
    4. '[' → logprob: -2.141580581665039
    5. ' self' → logprob: -2.766580581665039
    6. '   ' → logprob: -3.016580581665039
    7. 'i' → logprob: -3.141580581665039
    8. 'range' → logprob: -3.141580581665039
    9. 'from' → logprob: -3.141580581665039
    10. 'for' → logprob: -3.766580581665039

Token 665: ' bits' (ID: 18189)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5773215889930725
    2. '[' → logprob: -1.5773215293884277
    3. 'range' → logprob: -3.0773215293884277
    4. '[self' → logprob: -3.0773215293884277
    5. 'list' → logprob: -3.2023215293884277
    6. ' [' → logprob: -3.5773215293884277
    7. 'for' → logprob: -4.077321529388428
    8. '[pos' → logprob: -4.077321529388428
    9. '[b' → logprob: -4.577321529388428
    10. 'bits' → logprob: -5.077321529388428

Token 666: ' ' (ID: 220)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.0028098674956709146
    2. '25' → logprob: -6.127810001373291
    3. '32' → logprob: -8.377809524536133
    4. '   ' → logprob: -8.877809524536133
    5. ' ' → logprob: -9.502809524536133
    6. '=' → logprob: -10.002809524536133
    7. 'from' → logprob: -10.502809524536133
    8. '       ' → logprob: -10.752809524536133
    9. '(' → logprob: -11.002809524536133
    10. ' =' → logprob: -11.752809524536133

Token 667: '25' (ID: 1161)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '26' → logprob: -0.0006516746943816543
    2. '(' → logprob: -8.500651359558105
    3. 'from' → logprob: -8.625651359558105
    4. '32' → logprob: -8.750651359558105
    5. '=' → logprob: -10.250651359558105
    6. ' ' → logprob: -10.875651359558105
    7. '   ' → logprob: -11.750651359558105
    8. 'to' → logprob: -11.875651359558105
    9. '```' → logprob: -11.875651359558105
    10. ':' → logprob: -12.250651359558105

Token 668: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.8584195971488953
    2. ',' → logprob: -0.9834195971488953
    3. ' to' → logprob: -1.73341965675354
    4. '32' → logprob: -3.98341965675354
    5. ' ,' → logprob: -6.483419418334961
    6. '26' → logprob: -6.858419418334961
    7. '   ' → logprob: -7.233419418334961
    8. ' ' → logprob: -7.858419418334961
    9. '       ' → logprob: -7.858419418334961
    10. ',
' → logprob: -8.233419418334961

Token 669: ' ' (ID: 220)
  Prédit: '31'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '31' → logprob: -0.0013719070702791214
    2. '32' → logprob: -6.62637186050415
    3. ' ' → logprob: -10.001372337341309
    4. '   ' → logprob: -15.126372337341309
    5. '  ' → logprob: -16.376371383666992
    6. '30' → logprob: -16.376371383666992
    7. '
' → logprob: -17.501371383666992
    8. '1' → logprob: -17.501371383666992
    9. '```' → logprob: -17.876371383666992
    10. '      ' → logprob: -18.001371383666992

Token 670: '31' (ID: 2911)
  Prédit: '31'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '31' → logprob: -0.004624272231012583
    2. '32' → logprob: -5.379624366760254
    3. ' ' → logprob: -12.504624366760254
    4. '1' → logprob: -15.879624366760254
    5. '30' → logprob: -16.754623413085938
    6. '
' → logprob: -16.879623413085938
    7. '33' → logprob: -17.754623413085938
    8. '   ' → logprob: -18.254623413085938
    9. '```' → logprob: -18.254623413085938
    10. '29' → logprob: -18.504623413085938

Token 671: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5452340245246887
    2. '   ' → logprob: -1.045233964920044
    3. 'def' → logprob: -3.045233964920044
    4. ' =' → logprob: -4.795234203338623
    5. '=' → logprob: -5.045234203338623
    6. 'self' → logprob: -6.170234203338623
    7. '[' → logprob: -7.920234203338623
    8. ' def' → logprob: -7.920234203338623
    9. ' ' → logprob: -8.170233726501465
    10. ',' → logprob: -8.170233726501465

Token 672: ' ' (ID: 220)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.07550211250782013
    2. '25' → logprob: -2.8255021572113037
    3. ' ' → logprob: -4.700501918792725
    4. '27' → logprob: -6.325501918792725
    5. 'bits' → logprob: -6.575501918792725
    6. 'Bits' → logprob: -8.200502395629883
    7. '(' → logprob: -8.450502395629883
    8. 'range' → logprob: -8.825502395629883
    9. '32' → logprob: -8.950502395629883
    10. ' bits' → logprob: -9.325502395629883

Token 673: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.0006789539474993944
    2. '25' → logprob: -8.000679016113281
    3. '32' → logprob: -8.500679016113281
    4. ' ' → logprob: -9.750679016113281
    5. '27' → logprob: -10.000679016113281
    6. 'Bits' → logprob: -11.125679016113281
    7. '(' → logprob: -11.750679016113281
    8. 'bits' → logprob: -12.250679016113281
    9. '```' → logprob: -13.875679016113281
    10. 'Bit' → logprob: -14.313179016113281

Token 674: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7713696360588074
    2. '32' → logprob: -1.3963696956634521
    3. ':' → logprob: -1.7713696956634521
    4. '26' → logprob: -3.146369695663452
    5. ' to' → logprob: -4.271369457244873
    6. 'to' → logprob: -4.771369457244873
    7. '   ' → logprob: -4.771369457244873
    8. '...' → logprob: -4.771369457244873
    9. ' ,' → logprob: -4.896369457244873
    10. ' ' → logprob: -5.271369457244873

Token 675: ' ' (ID: 220)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -9.9728669738397e-05
    2. '31' → logprob: -9.500100135803223
    3. ' ' → logprob: -10.625100135803223
    4. '
' → logprob: -15.250100135803223
    5. '26' → logprob: -16.875099182128906
    6. '   ' → logprob: -17.000099182128906
    7. '33' → logprob: -17.000099182128906
    8. '30' → logprob: -17.125099182128906
    9. '  ' → logprob: -17.125099182128906
    10. '```' → logprob: -17.500099182128906

Token 676: '32' (ID: 1398)
  Prédit: '32'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -3.607391408877447e-05
    2. '31' → logprob: -10.250036239624023
    3. ' ' → logprob: -15.125036239624023
    4. '
' → logprob: -16.000036239624023
    5. '```' → logprob: -17.000036239624023
    6. '33' → logprob: -17.375036239624023
    7. '30' → logprob: -17.875036239624023
    8. '2' → logprob: -18.125036239624023
    9. '``' → logprob: -18.500036239624023
    10. '26' → logprob: -18.500036239624023

Token 677: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6612065434455872
    2. 'def' → logprob: -1.4112064838409424
    3. '       ' → logprob: -1.6612064838409424
    4. '=' → logprob: -4.0362067222595215
    5. ' def' → logprob: -5.6612067222595215
    6. ' =' → logprob: -5.7862067222595215
    7. '26' → logprob: -5.9112067222595215
    8. '  ' → logprob: -6.2862067222595215
    9. ' ' → logprob: -6.4112067222595215
    10. ',' → logprob: -6.4112067222595215

Token 678: ' left' (ID: 3561)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '26' → logprob: -0.0008941899868659675
    2. '25' → logprob: -7.625894069671631
    3. '32' → logprob: -8.500894546508789
    4. 'pos' → logprob: -9.750894546508789
    5. '27' → logprob: -10.000894546508789
    6. 'left' → logprob: -10.875894546508789
    7. ' ' → logprob: -10.875894546508789
    8. 'right' → logprob: -11.000894546508789
    9. 'range' → logprob: -11.000894546508789
    10. 'bit' → logprob: -12.000894546508789

Token 679: '?
' (ID: 3901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7900170087814331
    2. 'def' → logprob: -1.040017008781433
    3. '   ' → logprob: -1.790017008781433
    4. '=' → logprob: -5.165017127990723
    5. ' def' → logprob: -5.165017127990723
    6. 'self' → logprob: -5.415017127990723
    7. '26' → logprob: -6.290017127990723
    8. ' =' → logprob: -7.290017127990723
    9. '	def' → logprob: -7.290017127990723
    10. ' ' → logprob: -7.415017127990723

Token 680: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08489641547203064
    2. '26' → logprob: -3.3348963260650635
    3. '   ' → logprob: -4.084896564483643
    4. 'def' → logprob: -4.834896564483643
    5. '25' → logprob: -5.584896564483643
    6. '32' → logprob: -5.584896564483643
    7. ' ' → logprob: -6.334896564483643
    8. ')' → logprob: -6.459896564483643
    9. '      ' → logprob: -6.834896564483643
    10. '24' → logprob: -6.959896564483643

Token 681: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36048367619514465
    2. 'self' → logprob: -1.4854836463928223
    3. ' self' → logprob: -3.2354836463928223
    4. 'def' → logprob: -4.235483646392822
    5. '   ' → logprob: -4.610483646392822
    6. '26' → logprob: -5.485483646392822
    7. ' ' → logprob: -6.485483646392822
    8. '      ' → logprob: -6.485483646392822
    9. ' for' → logprob: -7.110483646392822
    10. 'for' → logprob: -7.110483646392822

Token 682: ' Bits' (ID: 104003)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7390595078468323
    2. '       ' → logprob: -1.3640594482421875
    3. 'self' → logprob: -1.6140594482421875
    4. '   ' → logprob: -2.9890594482421875
    5. ' self' → logprob: -5.2390594482421875
    6. '26' → logprob: -5.7390594482421875
    7. ' def' → logprob: -5.9890594482421875
    8. ' ' → logprob: -6.6140594482421875
    9. '7' → logprob: -6.9890594482421875
    10. '25' → logprob: -7.6140594482421875

Token 683: ' from' (ID: 591)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '26' → logprob: -0.5566802620887756
    2. '25' → logprob: -1.3066802024841309
    3. ' ' → logprob: -2.056680202484131
    4. '   ' → logprob: -4.431680202484131
    5. '32' → logprob: -4.556680202484131
    6. '16' → logprob: -6.556680202484131
    7. '       ' → logprob: -6.806680202484131
    8. '2' → logprob: -7.306680202484131
    9. 'from' → logprob: -7.931680202484131
    10. 'def' → logprob: -7.931680202484131

Token 684: ' left' (ID: 3561)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '26' → logprob: -0.002201047958806157
    2. '32' → logprob: -6.627201080322266
    3. '25' → logprob: -7.127201080322266
    4. '27' → logprob: -10.752201080322266
    5. '1' → logprob: -12.002201080322266
    6. ' ' → logprob: -12.127201080322266
    7. '2' → logprob: -12.502201080322266
    8. '(' → logprob: -12.939701080322266
    9. '

' → logprob: -13.064701080322266
    10. '```' → logprob: -13.314701080322266

Token 685: ' :' (ID: 712)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4984302520751953
    2. '   ' → logprob: -1.9984302520751953
    3. '26' → logprob: -2.3734302520751953
    4. '32' → logprob: -2.7484302520751953
    5. 'def' → logprob: -3.4984302520751953
    6. '25' → logprob: -3.9984302520751953
    7. ' ' → logprob: -4.373430252075195
    8. '=' → logprob: -4.373430252075195
    9. ' =' → logprob: -5.123430252075195
    10. '      ' → logprob: -6.248430252075195

Token 686: ' ' (ID: 220)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.06381808966398239
    2. '25' → logprob: -3.4388179779052734
    3. ' ' → logprob: -3.5638179779052734
    4. '32' → logprob: -6.813817977905273
    5. '27' → logprob: -9.188817977905273
    6. '   ' → logprob: -9.813817977905273
    7. 'from' → logprob: -10.438817977905273
    8. 'range' → logprob: -10.876317977905273
    9. ' for' → logprob: -11.938817977905273
    10. 'for' → logprob: -12.001317977905273

Token 687: '1' (ID: 16)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '26' → logprob: -0.08348365128040314
    2. '25' → logprob: -2.5834836959838867
    3. '32' → logprob: -5.958483695983887
    4. ' ' → logprob: -6.333483695983887
    5. '27' → logprob: -9.333483695983887
    6. 'range' → logprob: -10.708483695983887
    7. '   ' → logprob: -11.208483695983887
    8. 'from' → logprob: -11.395983695983887
    9. '```' → logprob: -11.583483695983887
    10. '
' → logprob: -12.020983695983887

Token 688: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.7764183282852173
    2. '7' → logprob: -1.7764183282852173
    3. '6' → logprob: -1.7764183282852173
    4. ' ' → logprob: -2.4014182090759277
    5. '26' → logprob: -2.4014182090759277
    6. '       ' → logprob: -2.9014182090759277
    7. '2' → logprob: -2.9014182090759277
    8. 'def' → logprob: -3.1514182090759277
    9. ' ,' → logprob: -3.4014182090759277
    10. '8' → logprob: -3.5264182090759277

Token 689: 'MS' (ID: 6359)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '26' → logprob: -0.009210065007209778
    2. '25' → logprob: -4.759210109710693
    3. ' ' → logprob: -8.009209632873535
    4. '32' → logprob: -9.259209632873535
    5. ')' → logprob: -9.384209632873535
    6. '2' → logprob: -10.009209632873535
    7. '27' → logprob: -11.134209632873535
    8. '   ' → logprob: -13.259209632873535
    9. ':' → logprob: -13.321709632873535
    10. '),' → logprob: -13.321709632873535

Token 690: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00024477019906044006
    2. 'b' → logprob: -9.250245094299316
    3. '32' → logprob: -9.625245094299316
    4. '1' → logprob: -10.125245094299316
    5. ')' → logprob: -10.750245094299316
    6. ' B' → logprob: -12.000245094299316
    7. '2' → logprob: -13.125245094299316
    8. '   ' → logprob: -13.250245094299316
    9. 'S' → logprob: -13.625245094299316
    10. '3' → logprob: -13.625245094299316

Token 691: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5184740424156189
    2. ' ,' → logprob: -1.6434741020202637
    3. ')' → logprob: -2.7684741020202637
    4. ' to' → logprob: -2.8934741020202637
    5. '...' → logprob: -4.143474102020264
    6. '26' → logprob: -4.393474102020264
    7. ' ' → logprob: -4.518474102020264
    8. '   ' → logprob: -4.893474102020264
    9. 'to' → logprob: -5.018474102020264
    10. ':' → logprob: -5.268474102020264

Token 692: ' ..' (ID: 8548)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4947308301925659
    2. 'def' → logprob: -1.869730830192566
    3. '       ' → logprob: -2.2447309494018555
    4. ' def' → logprob: -3.6197309494018555
    5. '32' → logprob: -3.6197309494018555
    6. '26' → logprob: -3.8697309494018555
    7. ' ' → logprob: -4.2447309494018555
    8. '  ' → logprob: -5.2447309494018555
    9. '31' → logprob: -5.7447309494018555
    10. '	' → logprob: -5.8697309494018555

Token 693: ' ' (ID: 220)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.09140731394290924
    2. '25' → logprob: -2.716407299041748
    3. ' ' → logprob: -4.341407299041748
    4. '27' → logprob: -5.466407299041748
    5. '32' → logprob: -6.216407299041748
    6. '```' → logprob: -7.716407299041748
    7. '2' → logprob: -8.091407775878906
    8. '9' → logprob: -9.028907775878906
    9. '24' → logprob: -9.028907775878906
    10. '33' → logprob: -9.153907775878906

Token 694: '32' (ID: 1398)
  Prédit: '32'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -0.33238282799720764
    2. '26' → logprob: -1.7073827981948853
    3. '25' → logprob: -2.332382917404175
    4. ' ' → logprob: -6.332382678985596
    5. '2' → logprob: -7.332382678985596
    6. '33' → logprob: -7.582382678985596
    7. '```' → logprob: -8.082383155822754
    8. '27' → logprob: -8.207383155822754
    9. '
' → logprob: -8.894883155822754
    10. '8' → logprob: -9.457383155822754

Token 695: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23944200575351715
    2. 'def' → logprob: -1.864441990852356
    3. '       ' → logprob: -3.1144421100616455
    4. ' def' → logprob: -5.739441871643066
    5. '26' → logprob: -5.864441871643066
    6. ' ' → logprob: -6.489441871643066
    7. ')' → logprob: -6.989441871643066
    8. '  ' → logprob: -7.114441871643066
    9. '	def' → logprob: -7.114441871643066
    10. '32' → logprob: -7.239441871643066

Token 696: 'LS' (ID: 10172)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '32' → logprob: -0.257347971200943
    2. '26' → logprob: -1.6323479413986206
    3. ')' → logprob: -4.00734806060791
    4. '25' → logprob: -4.75734806060791
    5. ' ' → logprob: -6.00734806060791
    6. '>' → logprob: -7.38234806060791
    7. '```' → logprob: -8.00734806060791
    8. ')>' → logprob: -8.75734806060791
    9. '27' → logprob: -8.88234806060791
    10. 'left' → logprob: -9.81984806060791

Token 697: 'B' (ID: 33)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '32' → logprob: -0.03971387818455696
    2. '2' → logprob: -3.2897138595581055
    3. '   ' → logprob: -7.4147138595581055
    4. ')' → logprob: -8.914713859558105
    5. '3' → logprob: -9.164713859558105
    6. '7' → logprob: -9.414713859558105
    7. 'pace' → logprob: -9.414713859558105
    8. '(' → logprob: -9.664713859558105
    9. '27' → logprob: -9.914713859558105
    10. 'e' → logprob: -9.914713859558105

Token 698: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24401885271072388
    2. ')' → logprob: -1.744018793106079
    3. '       ' → logprob: -3.869018793106079
    4. '):' → logprob: -5.369019031524658
    5. '32' → logprob: -5.994019031524658
    6. '):
' → logprob: -6.119019031524658
    7. 'def' → logprob: -6.244019031524658
    8. ' ' → logprob: -6.494019031524658
    9. '<|end|>' → logprob: -6.619019031524658
    10. '26' → logprob: -6.619019031524658

Token 699: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07624651491641998
    2. '   ' → logprob: -2.701246500015259
    3. 'def' → logprob: -5.451246738433838
    4. 'self' → logprob: -7.576246738433838
    5. '	' → logprob: -8.45124626159668
    6. ' ' → logprob: -8.45124626159668
    7. '26' → logprob: -8.57624626159668
    8. ')' → logprob: -9.20124626159668
    9. '      ' → logprob: -9.20124626159668
    10. '32' → logprob: -9.32624626159668

Token 700: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6005358695983887
    2. '   ' → logprob: -1.3505358695983887
    3. 'def' → logprob: -1.8505358695983887
    4. 'self' → logprob: -3.6005358695983887
    5. ' self' → logprob: -5.975535869598389
    6. ' ' → logprob: -6.350535869598389
    7. ' def' → logprob: -6.600535869598389
    8. '      ' → logprob: -7.975535869598389
    9. '  ' → logprob: -8.100536346435547
    10. '26' → logprob: -8.225536346435547

Token 701: ' Fraction' (ID: 112108)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.24128304421901703
    2. '   ' → logprob: -1.7412830591201782
    3. '       ' → logprob: -4.116282939910889
    4. ' def' → logprob: -4.491282939910889
    5. ' ' → logprob: -5.491282939910889
    6. '26' → logprob: -5.991282939910889
    7. '
' → logprob: -7.241282939910889
    8. 'for' → logprob: -7.741282939910889
    9. 'self' → logprob: -7.866282939910889
    10. '25' → logprob: -7.991282939910889

Token 702: 'al' (ID: 280)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0970223993062973
    2. '       ' → logprob: -2.847022294998169
    3. '32' → logprob: -4.222022533416748
    4. ' ' → logprob: -4.472022533416748
    5. ' =' → logprob: -6.222022533416748
    6. '  ' → logprob: -6.472022533416748
    7. '16' → logprob: -7.347022533416748
    8. 's' → logprob: -7.472022533416748
    9. '      ' → logprob: -7.472022533416748
    10. '    ' → logprob: -7.597022533416748

Token 703: ' bits' (ID: 18189)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7105473875999451
    2. '   ' → logprob: -0.8355473875999451
    3. '_bits' → logprob: -2.96054744720459
    4. '_part' → logprob: -4.58554744720459
    5. 'bits' → logprob: -5.83554744720459
    6. 'Part' → logprob: -6.33554744720459
    7. '       ' → logprob: -6.46054744720459
    8. '_parts' → logprob: -6.71054744720459
    9. '```' → logprob: -6.96054744720459
    10. '=' → logprob: -7.21054744720459

Token 704: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08160051703453064
    2. ' =' → logprob: -2.7066004276275635
    3. '   ' → logprob: -4.706600666046143
    4. 'def' → logprob: -6.206600666046143
    5. '=[]' → logprob: -9.331600189208984
    6. '       ' → logprob: -9.456600189208984
    7. '=[' → logprob: -9.956600189208984
    8. 'from' → logprob: -10.206600189208984
    9. '=self' → logprob: -10.331600189208984
    10. '[' → logprob: -10.331600189208984

Token 705: ' b' (ID: 287)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7561041712760925
    2. 'range' → logprob: -1.5061042308807373
    3. ' [' → logprob: -1.7561042308807373
    4. ' range' → logprob: -3.0061042308807373
    5. ' list' → logprob: -3.7561042308807373
    6. ' for' → logprob: -4.131103992462158
    7. 'list' → logprob: -4.256103992462158
    8. '   ' → logprob: -4.256103992462158
    9. 'for' → logprob: -4.631103992462158
    10. 'def' → logprob: -5.506103992462158

Token 706: '1' (ID: 16)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '26' → logprob: -0.0004499765345826745
    2. '25' → logprob: -8.000450134277344
    3. ' ' → logprob: -9.125450134277344
    4. '(' → logprob: -13.500450134277344
    5. '   ' → logprob: -13.750450134277344
    6. '=' → logprob: -14.750450134277344
    7. ':' → logprob: -15.000450134277344
    8. '

' → logprob: -15.000450134277344
    9. 'from' → logprob: -15.000450134277344
    10. '32' → logprob: -15.625450134277344

Token 707: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.735164999961853
    2. '       ' → logprob: -2.1101651191711426
    3. '=' → logprob: -2.4851651191711426
    4. ' ' → logprob: -2.4851651191711426
    5. 'def' → logprob: -3.1101651191711426
    6. '   ' → logprob: -3.4851651191711426
    7. '[' → logprob: -3.7351651191711426
    8. '32' → logprob: -3.7351651191711426
    9. '26' → logprob: -3.8601651191711426
    10. 's' → logprob: -4.485165119171143

Token 708: ' b' (ID: 287)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '8' → logprob: -0.6374026536941528
    2. '7' → logprob: -0.7624026536941528
    3. ' ' → logprob: -5.387402534484863
    4. '32' → logprob: -8.887402534484863
    5. '1' → logprob: -10.012402534484863
    6. '26' → logprob: -11.762402534484863
    7. '```' → logprob: -11.887402534484863
    8. '
' → logprob: -12.574902534484863
    9. '9' → logprob: -13.012402534484863
    10. '   ' → logprob: -13.262402534484863

Token 709: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0007232757634483278
    2. '8' → logprob: -7.250723361968994
    3. '32' → logprob: -12.125722885131836
    4. ' ' → logprob: -12.875722885131836
    5. '1' → logprob: -13.625722885131836
    6. '25' → logprob: -14.000722885131836
    7. '```' → logprob: -14.000722885131836
    8. '26' → logprob: -14.125722885131836
    9. '9' → logprob: -14.500722885131836
    10. '31' → logprob: -15.625722885131836

Token 710: ' are' (ID: 553)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4425235986709595
    2. '       ' → logprob: -1.3175235986709595
    3. 'def' → logprob: -2.56752347946167
    4. ' ' → logprob: -6.06752347946167
    5. '<|end|>' → logprob: -6.06752347946167
    6. ' def' → logprob: -6.56752347946167
    7. '[' → logprob: -6.94252347946167
    8. '32' → logprob: -7.19252347946167
    9. ' (' → logprob: -7.31752347946167
    10. ' =' → logprob: -7.69252347946167

Token 711: ' **' (ID: 6240)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1258770376443863
    2. 'list' → logprob: -2.8758771419525146
    3. 'range' → logprob: -3.0008771419525146
    4. 'bits' → logprob: -5.3758769035339355
    5. ' [' → logprob: -5.6258769035339355
    6. ' list' → logprob: -6.2508769035339355
    7. ' range' → logprob: -7.8758769035339355
    8. '26' → logprob: -8.250877380371094
    9. '32' → logprob: -8.250877380371094
    10. 'from' → logprob: -8.375877380371094

Token 712: 'right' (ID: 2460)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.602221667766571
    2. 'range' → logprob: -1.3522217273712158
    3. ' [' → logprob: -2.477221727371216
    4. ' range' → logprob: -3.227221727371216
    5. ' list' → logprob: -3.477221727371216
    6. 'list' → logprob: -3.727221727371216
    7. '26' → logprob: -5.477221488952637
    8. '32' → logprob: -5.602221488952637
    9. ' ' → logprob: -6.852221488952637
    10. 'from' → logprob: -7.227221488952637

Token 713: 'most' (ID: 5309)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.3629142940044403
    2. ' to' → logprob: -1.9879143238067627
    3. '32' → logprob: -2.2379143238067627
    4. ')' → logprob: -3.8629143238067627
    5. 'most' → logprob: -4.237914085388184
    6. ' ' → logprob: -4.862914085388184
    7. ' )' → logprob: -5.862914085388184
    8. '26' → logprob: -5.862914085388184
    9. '31' → logprob: -6.612914085388184
    10. '   ' → logprob: -6.987914085388184

Token 714: ' ' (ID: 220)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6795237064361572
    2. '32' → logprob: -1.6795237064361572
    3. ' ' → logprob: -2.0545237064361572
    4. ' ,' → logprob: -2.1795237064361572
    5. '```' → logprob: -3.6795237064361572
    6. '31' → logprob: -5.304523468017578
    7. ' bits' → logprob: -5.304523468017578
    8. ')' → logprob: -5.429523468017578
    9. '   ' → logprob: -5.554523468017578
    10. '  ' → logprob: -5.929523468017578

Token 715: '7' (ID: 22)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6693940758705139
    2. '7' → logprob: -1.4193940162658691
    3. '32' → logprob: -1.5443940162658691
    4. ' bits' → logprob: -4.544394016265869
    5. '31' → logprob: -5.169394016265869
    6. 'bits' → logprob: -5.919394016265869
    7. '  ' → logprob: -6.419394016265869
    8. '26' → logprob: -6.419394016265869
    9. '```' → logprob: -7.044394016265869
    10. '   ' → logprob: -7.044394016265869

Token 716: ' bits' (ID: 18189)
  Prédit: ' bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bits' → logprob: -0.24005816876888275
    2. 'bits' → logprob: -2.365058183670044
    3. ' ' → logprob: -3.615058183670044
    4. '32' → logprob: -3.865058183670044
    5. '```' → logprob: -3.865058183670044
    6. '7' → logprob: -3.990058183670044
    7. '_bits' → logprob: -4.865057945251465
    8. '31' → logprob: -5.365057945251465
    9. '<|end|>' → logprob: -5.865057945251465
    10. '**' → logprob: -6.740057945251465

Token 717: '**' (ID: 410)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7867697477340698
    2. ':' → logprob: -1.0367697477340698
    3. '       ' → logprob: -2.7867698669433594
    4. '=' → logprob: -3.6617698669433594
    5. ' =' → logprob: -3.6617698669433594
    6. '):' → logprob: -3.7867698669433594
    7. '<|end|>' → logprob: -5.036769866943359
    8. ',' → logprob: -5.036769866943359
    9. ')' → logprob: -5.286769866943359
    10. '(' → logprob: -5.536769866943359

Token 718: ' =>' (ID: 871)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1834891140460968
    2. '       ' → logprob: -2.4334890842437744
    3. 'def' → logprob: -2.6834890842437744
    4. ' def' → logprob: -5.9334893226623535
    5. '32' → logprob: -6.5584893226623535
    6. '	def' → logprob: -6.9334893226623535
    7. ' ' → logprob: -7.0584893226623535
    8. '(' → logprob: -7.0584893226623535
    9. '<|end|>' → logprob: -7.0584893226623535
    10. 'from' → logprob: -7.4334893226623535

Token 719: ' bits' (ID: 18189)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4073968529701233
    2. 'range' → logprob: -1.5323967933654785
    3. 'list' → logprob: -2.6573967933654785
    4. ' [' → logprob: -3.6573967933654785
    5. ' list' → logprob: -4.2823967933654785
    6. ' range' → logprob: -5.2823967933654785
    7. '   ' → logprob: -6.7823967933654785
    8. '26' → logprob: -7.4073967933654785
    9. '[i' → logprob: -7.7823967933654785
    10. 'for' → logprob: -8.032397270202637

Token 720: ' ' (ID: 220)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.0026940784882754087
    2. ' ' → logprob: -6.002694129943848
    3. '   ' → logprob: -9.252694129943848
    4. '25' → logprob: -10.127694129943848
    5. '27' → logprob: -10.502694129943848
    6. '       ' → logprob: -10.877694129943848
    7. '(' → logprob: -11.377694129943848
    8. '  ' → logprob: -12.627694129943848
    9. ' =' → logprob: -13.002694129943848
    10. 'range' → logprob: -13.127694129943848

Token 721: '32' (ID: 1398)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -2.2961512513575144e-05
    2. ' ' → logprob: -11.625022888183594
    3. '32' → logprob: -12.000022888183594
    4. '(' → logprob: -12.500022888183594
    5. 'from' → logprob: -13.375022888183594
    6. '```' → logprob: -14.375022888183594
    7. '25' → logprob: -14.750022888183594
    8. '   ' → logprob: -15.500022888183594
    9. '
' → logprob: -16.250022888183594
    10. '

' → logprob: -16.437522888183594

Token 722: ' (' (ID: 350)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.2482441663742065
    2. 'to' → logprob: -1.2482441663742065
    3. '-' → logprob: -1.8732441663742065
    4. ' ' → logprob: -2.498244285583496
    5. ' -' → logprob: -2.998244285583496
    6. '32' → logprob: -3.623244285583496
    7. '   ' → logprob: -3.748244285583496
    8. '       ' → logprob: -4.123244285583496
    9. '26' → logprob: -4.248244285583496
    10. ',' → logprob: -4.248244285583496

Token 723: 'b' (ID: 65)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '26' → logprob: -0.049266427755355835
    2. ')' → logprob: -3.5492663383483887
    3. '25' → logprob: -4.924266338348389
    4. '27' → logprob: -5.299266338348389
    5. ' ' → logprob: -5.924266338348389
    6. 'to' → logprob: -6.674266338348389
    7. ':' → logprob: -7.049266338348389
    8. '),' → logprob: -7.174266338348389
    9. ' to' → logprob: -7.924266338348389
    10. '```' → logprob: -8.174266815185547

Token 724: '1' (ID: 16)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6236336827278137
    2. '-' → logprob: -2.123633623123169
    3. '26' → logprob: -2.123633623123169
    4. ')' → logprob: -2.498633623123169
    5. ' to' → logprob: -3.123633623123169
    6. 'to' → logprob: -3.373633623123169
    7. '<|end|>' → logprob: -3.748633623123169
    8. '25' → logprob: -4.373633861541748
    9. ' ' → logprob: -4.748633861541748
    10. '32' → logprob: -5.498633861541748

Token 725: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05030501261353493
    2. '),' → logprob: -3.925305128097534
    3. 'to' → logprob: -4.550304889678955
    4. ' to' → logprob: -4.925304889678955
    5. '-' → logprob: -5.800304889678955
    6. ' )' → logprob: -6.300304889678955
    7. ' ' → logprob: -6.425304889678955
    8. '...' → logprob: -6.550304889678955
    9. '   ' → logprob: -7.050304889678955
    10. ')...' → logprob: -7.050304889678955

Token 726: ' to' (ID: 316)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '32' → logprob: -1.0954420566558838
    2. ':' → logprob: -1.4704420566558838
    3. ')' → logprob: -2.345442056655884
    4. '   ' → logprob: -2.595442056655884
    5. ' ' → logprob: -2.845442056655884
    6. '=' → logprob: -3.220442056655884
    7. '26' → logprob: -3.595442056655884
    8. ' :' → logprob: -3.845442056655884
    9. ',' → logprob: -4.095441818237305
    10. ' =' → logprob: -4.095441818237305

Token 727: ' ' (ID: 220)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -4.723352049040841e-06
    2. ' ' → logprob: -12.375004768371582
    3. '
' → logprob: -15.625004768371582
    4. '27' → logprob: -16.125003814697266
    5. '```' → logprob: -17.000003814697266
    6. '

' → logprob: -17.375003814697266
    7. '32' → logprob: -17.500003814697266
    8. '(' → logprob: -17.625003814697266
    9. '   ' → logprob: -17.750003814697266
    10. '...' → logprob: -18.125003814697266

Token 728: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -13.00000286102295
    3. '27' → logprob: -14.87500286102295
    4. '
' → logprob: -16.875003814697266
    5. '(' → logprob: -17.625003814697266
    6. '   ' → logprob: -17.875003814697266
    7. '```' → logprob: -18.000003814697266
    8. '

' → logprob: -18.312503814697266
    9. '  ' → logprob: -18.625003814697266
    10. '32' → logprob: -18.687503814697266

Token 729: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7100595831871033
    2. '=' → logprob: -1.335059642791748
    3. ' =' → logprob: -2.085059642791748
    4. 'def' → logprob: -2.460059642791748
    5. '       ' → logprob: -3.710059642791748
    6. ':' → logprob: -5.585059642791748
    7. '=[]' → logprob: -6.460059642791748
    8. ' def' → logprob: -7.460059642791748
    9. '(' → logprob: -7.835059642791748
    10. ')' → logprob: -7.835059642791748

Token 730: 'b' (ID: 65)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '32' → logprob: -0.00553398160263896
    2. '26' → logprob: -5.6305341720581055
    3. ' ' → logprob: -6.3805341720581055
    4. ')' → logprob: -9.130534172058105
    5. '33' → logprob: -9.880534172058105
    6. '}' → logprob: -11.005534172058105
    7. '
' → logprob: -11.630534172058105
    8. '27' → logprob: -11.755534172058105
    9. '  ' → logprob: -12.005534172058105
    10. '```' → logprob: -12.380534172058105

Token 731: '7' (ID: 22)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.06090393289923668
    2. ')' → logprob: -3.310904026031494
    3. '32' → logprob: -4.185904026031494
    4. '}' → logprob: -6.685904026031494
    5. '>' → logprob: -6.935904026031494
    6. '7' → logprob: -7.060904026031494
    7. '```' → logprob: -7.435904026031494
    8. ']' → logprob: -7.435904026031494
    9. ' ' → logprob: -7.560904026031494
    10. '(' → logprob: -7.560904026031494

Token 732: ').
' (ID: 6294)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9795771837234497
    2. '       ' → logprob: -1.1045771837234497
    3. '):' → logprob: -1.6045771837234497
    4. 'def' → logprob: -3.47957706451416
    5. ')' → logprob: -4.35457706451416
    6. ',' → logprob: -4.47957706451416
    7. 'for' → logprob: -4.85457706451416
    8. '):
' → logprob: -5.22957706451416
    9. ':' → logprob: -5.60457706451416
    10. ' for' → logprob: -5.85457706451416

Token 733: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7181538939476013
    2. '       ' → logprob: -0.7181538939476013
    3. 'def' → logprob: -3.718153953552246
    4. ' def' → logprob: -8.593153953552246
    5. 'self' → logprob: -9.218153953552246
    6. ' ' → logprob: -10.218153953552246
    7. '26' → logprob: -10.843153953552246
    8. '      ' → logprob: -11.593153953552246
    9. '     ' → logprob: -11.843153953552246
    10. ' self' → logprob: -11.968153953552246

Token 734: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4074493646621704
    2. 'def' → logprob: -1.6574493646621704
    3. 'self' → logprob: -2.407449245452881
    4. '   ' → logprob: -3.032449245452881
    5. ' self' → logprob: -5.532449245452881
    6. ' def' → logprob: -7.032449245452881
    7. ' ' → logprob: -8.032449722290039
    8. '26' → logprob: -8.657449722290039
    9. '      ' → logprob: -9.282449722290039
    10. '     ' → logprob: -9.782449722290039

Token 735: ' So' (ID: 2632)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.9622862935066223
    2. 'def' → logprob: -0.9622862935066223
    3. '       ' → logprob: -1.7122862339019775
    4. '   ' → logprob: -3.0872862339019775
    5. ' self' → logprob: -4.962286472320557
    6. ' def' → logprob: -6.587286472320557
    7. ' ' → logprob: -6.837286472320557
    8. '  ' → logprob: -9.462285995483398
    9. '26' → logprob: -9.837285995483398
    10. '
' → logprob: -9.962285995483398

Token 736: ' fractional' (ID: 136350)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12226755917072296
    2. 'def' → logprob: -2.997267484664917
    3. '       ' → logprob: -3.247267484664917
    4. ' self' → logprob: -3.747267484664917
    5. '   ' → logprob: -6.747267723083496
    6. '
' → logprob: -8.122267723083496
    7. 'for' → logprob: -8.372267723083496
    8. ' ' → logprob: -8.497267723083496
    9. ' def' → logprob: -8.747267723083496
    10. '  ' → logprob: -9.372267723083496

Token 737: ' bits' (ID: 18189)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6014424562454224
    2. '_bits' → logprob: -1.3514424562454224
    3. '   ' → logprob: -2.476442337036133
    4. 'bits' → logprob: -2.726442337036133
    5. '_indices' → logprob: -4.476442337036133
    6. '       ' → logprob: -4.601442337036133
    7. 'self' → logprob: -4.851442337036133
    8. 'indices' → logprob: -5.726442337036133
    9. 'Bits' → logprob: -6.476442337036133
    10. ' =' → logprob: -6.976442337036133

Token 738: ' are' (ID: 553)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7139449715614319
    2. ' =' → logprob: -0.7139449715614319
    3. '   ' → logprob: -3.963944911956787
    4. 'def' → logprob: -7.213944911956787
    5. '       ' → logprob: -7.713944911956787
    6. '=self' → logprob: -8.838945388793945
    7. '=[' → logprob: -9.213945388793945
    8. 'self' → logprob: -9.838945388793945
    9. '```' → logprob: -10.338945388793945
    10. '=[]' → logprob: -10.963945388793945

Token 739: ' bits' (ID: 18189)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.34597069025039673
    2. '[i' → logprob: -1.595970630645752
    3. '[self' → logprob: -3.095970630645752
    4. ' [' → logprob: -4.220970630645752
    5. '[b' → logprob: -4.345970630645752
    6. 'range' → logprob: -5.720970630645752
    7. 'list' → logprob: -5.720970630645752
    8. '[list' → logprob: -6.220970630645752
    9. 'self' → logprob: -6.345970630645752
    10. '   ' → logprob: -6.470970630645752

Token 740: ' ' (ID: 220)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '26' → logprob: -0.4722762703895569
    2. '   ' → logprob: -2.222276210784912
    3. '(' → logprob: -2.847276210784912
    4. 'def' → logprob: -2.972276210784912
    5. '32' → logprob: -3.472276210784912
    6. 'for' → logprob: -3.597276210784912
    7. ' =' → logprob: -3.722276210784912
    8. 'range' → logprob: -4.097276210784912
    9. 'in' → logprob: -4.222276210784912
    10. 'from' → logprob: -4.222276210784912

Token 741: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.0003589416155591607
    2. '32' → logprob: -8.750358581542969
    3. '[' → logprob: -9.750358581542969
    4. '25' → logprob: -9.750358581542969
    5. 'range' → logprob: -10.125358581542969
    6. 'from' → logprob: -11.250358581542969
    7. '(' → logprob: -11.375358581542969
    8. 'for' → logprob: -12.625358581542969
    9. 'pos' → logprob: -12.750358581542969
    10. '27' → logprob: -13.125358581542969

Token 742: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07985900342464447
    2. '       ' → logprob: -3.7048590183258057
    3. ' ,' → logprob: -4.329858779907227
    4. '26' → logprob: -4.704858779907227
    5. '   ' → logprob: -4.829858779907227
    6. 'to' → logprob: -4.954858779907227
    7. 'def' → logprob: -5.579858779907227
    8. ' to' → logprob: -5.954858779907227
    9. '32' → logprob: -6.079858779907227
    10. '=' → logprob: -6.204858779907227

Token 743: ' ' (ID: 220)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -5.991464786347933e-05
    2. '33' → logprob: -9.875060081481934
    3. ' ' → logprob: -11.875060081481934
    4. '31' → logprob: -14.375060081481934
    5. '   ' → logprob: -15.375060081481934
    6. '```' → logprob: -15.500060081481934
    7. '
' → logprob: -16.125059127807617
    8. 'to' → logprob: -17.125059127807617
    9. '  ' → logprob: -17.250059127807617
    10. '=' → logprob: -17.500059127807617

Token 744: '32' (ID: 1398)
  Prédit: '32'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -13.37500286102295
    3. '31' → logprob: -14.25000286102295
    4. '
' → logprob: -15.25000286102295
    5. '33' → logprob: -16.375003814697266
    6. '```' → logprob: -16.500003814697266
    7. '   ' → logprob: -17.250003814697266
    8. '  ' → logprob: -17.625003814697266
    9. '322' → logprob: -18.000003814697266
    10. '321' → logprob: -18.125003814697266

Token 745: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5036919116973877
    2. 'def' → logprob: -1.1286919116973877
    3. '       ' → logprob: -2.7536919116973877
    4. '26' → logprob: -5.003691673278809
    5. '=' → logprob: -7.253691673278809
    6. ' def' → logprob: -7.628691673278809
    7. '
' → logprob: -8.753691673278809
    8. ' =' → logprob: -8.753691673278809
    9. 'self' → logprob: -10.003691673278809
    10. '[' → logprob: -10.503691673278809

Token 746: ' left' (ID: 3561)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '26' → logprob: -0.28432756662368774
    2. '32' → logprob: -2.159327507019043
    3. 'range' → logprob: -2.534327507019043
    4. 'left' → logprob: -3.409327507019043
    5. 'bit' → logprob: -4.659327507019043
    6. 'right' → logprob: -4.659327507019043
    7. 'the' → logprob: -9.284327507019043
    8. 'reverse' → logprob: -9.409327507019043
    9. ' ' → logprob: -9.659327507019043
    10. 'lambda' → logprob: -9.659327507019043

Token 747: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7000911235809326
    2. '   ' → logprob: -0.9500911235809326
    3. 'def' → logprob: -2.2000911235809326
    4. '26' → logprob: -5.450091361999512
    5. ' def' → logprob: -7.450091361999512
    6. 'self' → logprob: -7.825091361999512
    7. '[' → logprob: -9.200091361999512
    8. '
' → logprob: -9.825091361999512
    9. ' =' → logprob: -9.950091361999512
    10. ' ' → logprob: -9.950091361999512

Token 748: ' reversed' (ID: 57184)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.9873121380805969
    2. '       ' → logprob: -1.6123120784759521
    3. 'reverse' → logprob: -1.8623120784759521
    4. ' self' → logprob: -2.862312078475952
    5. 'range' → logprob: -2.987312078475952
    6. ' reverse' → logprob: -3.362312078475952
    7. ' ' → logprob: -3.737312078475952
    8. '26' → logprob: -3.862312078475952
    9. '32' → logprob: -4.237312316894531
    10. '28' → logprob: -4.737312316894531

Token 749: ' order' (ID: 2569)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2951110303401947
    2. '   ' → logprob: -1.920111060142517
    3. 'def' → logprob: -2.2951109409332275
    4. 'self' → logprob: -5.795111179351807
    5. '26' → logprob: -5.795111179351807
    6. ' =' → logprob: -7.420111179351807
    7. ' def' → logprob: -7.545111179351807
    8. '=' → logprob: -8.420110702514648
    9. '[self' → logprob: -9.295110702514648
    10. ' self' → logprob: -9.295110702514648

Token 750: ' b' (ID: 287)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49038246273994446
    2. 'def' → logprob: -1.365382432937622
    3. '   ' → logprob: -2.365382432937622
    4. '26' → logprob: -3.740382432937622
    5. 'self' → logprob: -4.490382671356201
    6. ' def' → logprob: -6.490382671356201
    7. ' =' → logprob: -8.240382194519043
    8. ' self' → logprob: -8.240382194519043
    9. '27' → logprob: -8.740382194519043
    10. '=' → logprob: -8.990382194519043

Token 751: '1' (ID: 16)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '26' → logprob: -0.1590234935283661
    2. 'its' → logprob: -2.9090235233306885
    3. ' =' → logprob: -3.2840235233306885
    4. '=' → logprob: -3.5340235233306885
    5. '32' → logprob: -4.409023284912109
    6. 'it' → logprob: -5.284023284912109
    7. '31' → logprob: -6.534023284912109
    8. '7' → logprob: -6.909023284912109
    9. '=[' → logprob: -7.034023284912109
    10. '27' → logprob: -7.409023284912109

Token 752: '..' (ID: 485)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38623371720314026
    2. '   ' → logprob: -2.0112338066101074
    3. '=' → logprob: -2.3862338066101074
    4. 'def' → logprob: -2.8862338066101074
    5. '       ' → logprob: -3.6362338066101074
    6. '26' → logprob: -5.136233806610107
    7. '=[' → logprob: -6.136233806610107
    8. '=[]' → logprob: -7.761233806610107
    9. ' ' → logprob: -8.01123332977295
    10. ':' → logprob: -8.01123332977295

Token 753: 'b' (ID: 65)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '32' → logprob: -1.0018852949142456
    2. '26' → logprob: -1.2518852949142456
    3. 'for' → logprob: -2.376885414123535
    4. ' ' → logprob: -2.626885414123535
    5. '27' → logprob: -3.251885414123535
    6. '7' → logprob: -3.376885414123535
    7. ',' → logprob: -3.751885414123535
    8. '   ' → logprob: -3.876885414123535
    9. ' for' → logprob: -4.376885414123535
    10. '```' → logprob: -4.876885414123535

Token 754: '7' (ID: 22)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.46311870217323303
    2. '7' → logprob: -1.8381186723709106
    3. '32' → logprob: -2.0881187915802
    4. ')' → logprob: -3.9631187915802
    5. '6' → logprob: -4.338118553161621
    6. '27' → logprob: -4.463118553161621
    7. ''' → logprob: -5.213118553161621
    8. ' ' → logprob: -5.463118553161621
    9. '-' → logprob: -5.588118553161621
    10. '=' → logprob: -5.838118553161621

Token 755: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36037400364875793
    2. 'def' → logprob: -1.7353739738464355
    3. '   ' → logprob: -2.4853739738464355
    4. 'self' → logprob: -3.3603739738464355
    5. '26' → logprob: -5.7353739738464355
    6. ' self' → logprob: -6.7353739738464355
    7. ' def' → logprob: -6.7353739738464355
    8. ' =' → logprob: -7.1103739738464355
    9. '=' → logprob: -7.3603739738464355
    10. '
' → logprob: -8.860374450683594

Token 756: ' right' (ID: 1849)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -0.5647861957550049
    2. 'right' → logprob: -1.1897861957550049
    3. 'range' → logprob: -3.064786195755005
    4. 'left' → logprob: -3.064786195755005
    5. '26' → logprob: -3.939786195755005
    6. 'bit' → logprob: -5.064785957336426
    7. 'lambda' → logprob: -5.689785957336426
    8. '31' → logprob: -6.564785957336426
    9. 'reverse' → logprob: -7.314785957336426
    10. ' right' → logprob: -7.689785957336426

Token 757: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7646335959434509
    2. '       ' → logprob: -1.3896336555480957
    3. 'def' → logprob: -1.3896336555480957
    4. '26' → logprob: -3.6396336555480957
    5. ' def' → logprob: -5.514633655548096
    6. 'self' → logprob: -6.264633655548096
    7. '=' → logprob: -6.764633655548096
    8. ' =' → logprob: -7.139633655548096
    9. '27' → logprob: -8.639633178710938
    10. '28' → logprob: -8.764633178710938

Token 758: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015254649333655834
    2. 'self' → logprob: -4.765254497528076
    3. '26' → logprob: -5.640254497528076
    4. '   ' → logprob: -6.765254497528076
    5. 'def' → logprob: -6.890254497528076
    6. ' self' → logprob: -7.640254497528076
    7. ' ' → logprob: -9.765254974365234
    8. 'for' → logprob: -10.015254974365234
    9. '33' → logprob: -10.140254974365234
    10. '      ' → logprob: -10.265254974365234

Token 759: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1512933224439621
    2. 'self' → logprob: -2.2762932777404785
    3. '26' → logprob: -4.0262932777404785
    4. 'def' → logprob: -5.0262932777404785
    5. '   ' → logprob: -5.1512932777404785
    6. 'for' → logprob: -5.7762932777404785
    7. ' self' → logprob: -6.6512932777404785
    8. 'range' → logprob: -6.9012932777404785
    9. ' for' → logprob: -7.6512932777404785
    10. ' ' → logprob: -8.151293754577637

Token 760: ' b' (ID: 287)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.17839336395263672
    2. '       ' → logprob: -2.0533933639526367
    3. 'def' → logprob: -3.6783933639526367
    4. '26' → logprob: -5.928393363952637
    5. 'for' → logprob: -5.928393363952637
    6. ' self' → logprob: -6.053393363952637
    7. '   ' → logprob: -6.553393363952637
    8. ' ' → logprob: -9.303393363952637
    9. ' for' → logprob: -9.803393363952637
    10. '33' → logprob: -9.928393363952637

Token 761: '1' (ID: 16)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.62799072265625
    2. '32' → logprob: -1.12799072265625
    3. '31' → logprob: -2.75299072265625
    4. 'its' → logprob: -3.37799072265625
    5. '1' → logprob: -4.87799072265625
    6. ' =' → logprob: -5.00299072265625
    7. 'it' → logprob: -5.50299072265625
    8. '28' → logprob: -5.62799072265625
    9. '29' → logprob: -5.75299072265625
    10. '=' → logprob: -5.75299072265625

Token 762: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.32261520624160767
    2. ' =' → logprob: -2.197615146636963
    3. ',' → logprob: -3.197615146636963
    4. 'for' → logprob: -3.572615146636963
    5. '26' → logprob: -3.947615146636963
    6. '   ' → logprob: -3.947615146636963
    7. 'def' → logprob: -4.197615146636963
    8. 's' → logprob: -4.197615146636963
    9. ')' → logprob: -5.322615146636963
    10. '32' → logprob: -5.322615146636963

Token 763: ' bit' (ID: 3546)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '32' → logprob: -0.007043090183287859
    2. '26' → logprob: -5.25704288482666
    3. ' ' → logprob: -6.38204288482666
    4. 'bit' → logprob: -10.81954288482666
    5. '   ' → logprob: -11.19454288482666
    6. 'Bit' → logprob: -11.69454288482666
    7. '27' → logprob: -11.81954288482666
    8. '  ' → logprob: -11.88204288482666
    9. '31' → logprob: -12.06954288482666
    10. 'self' → logprob: -12.25704288482666

Token 764: ' ' (ID: 220)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -0.05705452337861061
    2. '26' → logprob: -2.9320545196533203
    3. '   ' → logprob: -7.43205451965332
    4. ' ' → logprob: -7.55705451965332
    5. '(' → logprob: -8.18205451965332
    6. '[' → logprob: -9.18205451965332
    7. '=' → logprob: -9.18205451965332
    8. 'pos' → logprob: -9.30705451965332
    9. '31' → logprob: -9.80705451965332
    10. '27' → logprob: -9.93205451965332

Token 765: '32' (ID: 1398)
  Prédit: '32'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -0.19373337924480438
    2. '26' → logprob: -1.8187333345413208
    3. ' ' → logprob: -4.693733215332031
    4. '(' → logprob: -6.568733215332031
    5. '   ' → logprob: -7.193733215332031
    6. 's' → logprob: -7.443733215332031
    7. 'def' → logprob: -8.193733215332031
    8. '[' → logprob: -8.443733215332031
    9. '27' → logprob: -8.693733215332031
    10. '31' → logprob: -9.068733215332031

Token 766: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21960416436195374
    2. 'def' → logprob: -1.7196041345596313
    3. '=' → logprob: -4.969604015350342
    4. ' def' → logprob: -5.469604015350342
    5. ' =' → logprob: -5.719604015350342
    6. '       ' → logprob: -6.094604015350342
    7. '26' → logprob: -7.344604015350342
    8. '```' → logprob: -8.8446044921875
    9. ' ' → logprob: -8.9696044921875
    10. '
' → logprob: -9.0946044921875

Token 767: ' b' (ID: 287)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6097495555877686
    2. 'b' → logprob: -1.8597495555877686
    3. ' b' → logprob: -2.3597495555877686
    4. '26' → logprob: -2.9847495555877686
    5. 'self' → logprob: -3.3597495555877686
    6. ' ' → logprob: -3.7347495555877686
    7. '```' → logprob: -3.7347495555877686
    8. ' self' → logprob: -4.234749794006348
    9. '   ' → logprob: -4.734749794006348
    10. ' for' → logprob: -4.734749794006348

Token 768: '2' (ID: 17)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -0.4620859622955322
    2. '27' → logprob: -1.7120859622955322
    3. '31' → logprob: -2.2120859622955322
    4. '26' → logprob: -3.0870859622955322
    5. ' ' → logprob: -3.8370859622955322
    6. '7' → logprob: -5.337085723876953
    7. '28' → logprob: -6.462085723876953
    8. '1' → logprob: -6.712085723876953
    9. '25' → logprob: -6.712085723876953
    10. '2' → logprob: -7.087085723876953

Token 769: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2600385546684265
    2. ' =' → logprob: -1.5100386142730713
    3. ',' → logprob: -5.385038375854492
    4. '32' → logprob: -6.385038375854492
    5. ' ' → logprob: -7.510038375854492
    6. '       ' → logprob: -8.260038375854492
    7. '31' → logprob: -8.385038375854492
    8. ':' → logprob: -8.510038375854492
    9. '   ' → logprob: -9.010038375854492
    10. '```' → logprob: -9.260038375854492

Token 770: 'bit' (ID: 6516)
  Prédit: '31'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '31' → logprob: -0.32891300320625305
    2. '32' → logprob: -1.3289129734039307
    3. ' ' → logprob: -4.20391321182251
    4. '33' → logprob: -7.45391321182251
    5. '27' → logprob: -12.703912734985352
    6. '30' → logprob: -12.703912734985352
    7. '29' → logprob: -13.328912734985352
    8. '  ' → logprob: -13.578912734985352
    9. '(' → logprob: -14.578912734985352
    10. '26' → logprob: -14.578912734985352

Token 771: '31' (ID: 2911)
  Prédit: '31'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '31' → logprob: -0.002040583174675703
    2. ' ' → logprob: -6.252040386199951
    3. '32' → logprob: -9.12704086303711
    4. '   ' → logprob: -13.50204086303711
    5. '30' → logprob: -14.12704086303711
    6. '  ' → logprob: -15.12704086303711
    7. '27' → logprob: -15.50204086303711
    8. '33' → logprob: -15.62704086303711
    9. '(' → logprob: -15.87704086303711
    10. ' ' → logprob: -16.68954086303711

Token 772: ',...' (ID: 35229)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4820794463157654
    2. 'def' → logprob: -0.9820794463157654
    3. ' def' → logprob: -5.48207950592041
    4. '=' → logprob: -7.10707950592041
    5. '32' → logprob: -7.23207950592041
    6. '26' → logprob: -7.23207950592041
    7. '       ' → logprob: -7.48207950592041
    8. '	def' → logprob: -7.98207950592041
    9. ',' → logprob: -8.85707950592041
    10. ')' → logprob: -9.23207950592041

Token 773: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6121311187744141
    2. '   ' → logprob: -1.987131118774414
    3. 'def' → logprob: -2.112131118774414
    4. ' for' → logprob: -2.362131118774414
    5. 'for' → logprob: -2.862131118774414
    6. ' def' → logprob: -4.362131118774414
    7. '```' → logprob: -4.737131118774414
    8. '26' → logprob: -4.987131118774414
    9. '32' → logprob: -5.487131118774414
    10. 'class' → logprob: -5.987131118774414

Token 774: 'b' (ID: 65)
  Prédit: '27'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '27' → logprob: -0.05697501823306084
    2. '26' → logprob: -4.0569748878479
    3. ' ' → logprob: -4.5569748878479
    4. '29' → logprob: -4.6819748878479
    5. 'b' → logprob: -5.3069748878479
    6. '       ' → logprob: -5.5569748878479
    7. '31' → logprob: -5.9319748878479
    8. '28' → logprob: -6.3069748878479
    9. 'for' → logprob: -6.4319748878479
    10. '32' → logprob: -6.6819748878479

Token 775: '7' (ID: 22)
  Prédit: '25'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '25' → logprob: -0.16514450311660767
    2. '26' → logprob: -2.040144443511963
    3. '27' → logprob: -4.790144443511963
    4. '3' → logprob: -5.165144443511963
    5. '33' → logprob: -5.165144443511963
    6. '32' → logprob: -7.040144443511963
    7. ' ' → logprob: -7.915144443511963
    8. '7' → logprob: -7.915144443511963
    9. '8' → logprob: -8.040144920349121
    10. '31' → logprob: -8.665144920349121

Token 776: '=' (ID: 28)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0108351707458496
    2. 'for' → logprob: -1.7608351707458496
    3. '=' → logprob: -2.1358351707458496
    4. '   ' → logprob: -2.2608351707458496
    5. ' for' → logprob: -2.3858351707458496
    6. ' =' → logprob: -2.5108351707458496
    7. '       ' → logprob: -3.2608351707458496
    8. ' def' → logprob: -4.88583517074585
    9. ' ' → logprob: -5.38583517074585
    10. ')' → logprob: -5.63583517074585

Token 777: 'bit' (ID: 6516)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.750003814697266
    3. '27' → logprob: -14.375003814697266
    4. '(' → logprob: -16.125003814697266
    5. '   ' → logprob: -17.500003814697266
    6. 'bit' → logprob: -17.875003814697266
    7. '32' → logprob: -18.125003814697266
    8. '
' → logprob: -19.250003814697266
    9. '  ' → logprob: -19.375003814697266
    10. '    ' → logprob: -20.000003814697266

Token 778: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.0008389271679334342
    2. '27' → logprob: -7.125838756561279
    3. ' ' → logprob: -10.500839233398438
    4. '32' → logprob: -12.500839233398438
    5. '(' → logprob: -13.875839233398438
    6. '   ' → logprob: -14.125839233398438
    7. '```' → logprob: -14.875839233398438
    8. '31' → logprob: -15.250839233398438
    9. '  ' → logprob: -15.750839233398438
    10. '=' → logprob: -16.000839233398438

Token 779: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6144850254058838
    2. '   ' → logprob: -1.3644850254058838
    3. '       ' → logprob: -1.6144850254058838
    4. 'self' → logprob: -6.239484786987305
    5. ' def' → logprob: -6.739484786987305
    6. '26' → logprob: -6.864484786987305
    7. '
' → logprob: -8.614484786987305
    8. ' ' → logprob: -10.114484786987305
    9. 'class' → logprob: -10.864484786987305
    10. ' self' → logprob: -10.864484786987305

Token 780: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.061935074627399445
    2. 'def' → logprob: -3.4369351863861084
    3. 'self' → logprob: -3.9369351863861084
    4. '   ' → logprob: -4.811934947967529
    5. ' self' → logprob: -8.811935424804688
    6. '26' → logprob: -10.061935424804688
    7. ' def' → logprob: -10.686935424804688
    8. ' ' → logprob: -11.811935424804688
    9. '           ' → logprob: -11.936935424804688
    10. '      ' → logprob: -12.186935424804688

Token 781: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14047881960868835
    2. 'def' → logprob: -2.2654788494110107
    3. '   ' → logprob: -3.8904788494110107
    4. 'self' (adapté à ' self') → logprob: -5.015478610992432
    5. ' def' → logprob: -9.14047908782959
    6. ' self' → logprob: -10.01547908782959
    7. '
' → logprob: -10.51547908782959
    8. ' ' → logprob: -11.76547908782959
    9. '26' → logprob: -12.51547908782959
    10. '           ' → logprob: -13.01547908782959

Token 782: '.bits' (ID: 89914)
  Prédit: '.bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bits' → logprob: -0.0002715873415581882
    2. 'bits' → logprob: -8.250271797180176
    3. '   ' → logprob: -11.875271797180176
    4. ' .' → logprob: -13.125271797180176
    5. '.bit' → logprob: -15.625271797180176
    6. '```' → logprob: -15.750271797180176
    7. '.' → logprob: -15.875271797180176
    8. '\.' → logprob: -16.25027084350586
    9. '       ' → logprob: -16.25027084350586
    10. 'def' → logprob: -16.37527084350586

Token 783: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048589304089546204
    2. ' =' → logprob: -3.0485892295837402
    3. '=[' → logprob: -13.798589706420898
    4. '=[]' → logprob: -14.048589706420898
    5. ' =[' → logprob: -16.9235897064209
    6. '   ' → logprob: -17.0485897064209
    7. '[' → logprob: -17.9235897064209
    8. '＝' → logprob: -18.6735897064209
    9. '[:]' → logprob: -19.0485897064209
    10. '.append' → logprob: -19.1735897064209

Token 784: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.480199954239652e-05
    2. ' [' → logprob: -9.750064849853516
    3. '[list' → logprob: -13.375064849853516
    4. '[int' → logprob: -14.125064849853516
    5. '[b' → logprob: -14.250064849853516
    6. '[self' → logprob: -14.500064849853516
    7. '[word' → logprob: -15.000064849853516
    8. '[pos' → logprob: -15.250064849853516
    9. '[get' → logprob: -15.375064849853516
    10. '[array' → logprob: -15.750064849853516

Token 785: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -1.318681188422488e-05
    2. ' bit' → logprob: -11.25001335144043
    3. '32' → logprob: -16.37501335144043
    4. '   ' → logprob: -17.87501335144043
    5. '(bit' → logprob: -17.87501335144043
    6. '[' → logprob: -19.25001335144043
    7. '31' → logprob: -19.50001335144043
    8. 'byte' → logprob: -20.00001335144043
    9. '26' → logprob: -20.00001335144043
    10. ' ' → logprob: -20.12501335144043

Token 786: 'stream' (ID: 8598)
  Prédit: 'stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stream' → logprob: -0.5865662693977356
    2. 'bit' → logprob: -1.4615662097930908
    3. '(bit' → logprob: -1.5865662097930908
    4. '(stream' → logprob: -5.96156644821167
    5. '(' → logprob: -6.08656644821167
    6. '32' → logprob: -6.58656644821167
    7. ' bit' → logprob: -8.086565971374512
    8. 'get' → logprob: -8.336565971374512
    9. '   ' → logprob: -9.211565971374512
    10. '31' → logprob: -9.836565971374512

Token 787: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -8.137130498653278e-05
    2. '.' → logprob: -9.500081062316895
    3. ' .' → logprob: -12.875081062316895
    4. '   ' → logprob: -13.000081062316895
    5. 'get' → logprob: -13.625081062316895
    6. '  ' → logprob: -16.12508201599121
    7. ' ' → logprob: -16.75008201599121
    8. ').' → logprob: -16.87508201599121
    9. '       ' → logprob: -17.12508201599121
    10. '].' → logprob: -17.37508201599121

Token 788: '_bit' (ID: 39574)
  Prédit: '_bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bit' → logprob: -0.0006329743773676455
    2. 'bit' → logprob: -7.3756327629089355
    3. '(bit' → logprob: -12.750633239746094
    4. 'Bit' → logprob: -13.375633239746094
    5. '_BIT' → logprob: -14.250633239746094
    6. ' bit' → logprob: -14.875633239746094
    7. '(' → logprob: -15.250633239746094
    8. '32' → logprob: -16.125633239746094
    9. '_' → logprob: -16.250633239746094
    10. '_bits' → logprob: -16.500633239746094

Token 789: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.03001416102051735
    2. '(' → logprob: -3.5300142765045166
    3. '(pos' → logprob: -8.280014038085938
    4. '(bit' → logprob: -12.030014038085938
    5. 'i' → logprob: -13.280014038085938
    6. '32' → logprob: -14.280014038085938
    7. '(b' → logprob: -14.530014038085938
    8. '(j' → logprob: -14.780014038085938
    9. '(x' → logprob: -14.905014038085938
    10. '((' → logprob: -15.530014038085938

Token 790: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010207825107499957
    2. 'for' → logprob: -7.001020908355713
    3. ' for' → logprob: -9.251020431518555
    4. '32' → logprob: -12.876020431518555
    5. '}' → logprob: -13.251020431518555
    6. ' ' → logprob: -13.251020431518555
    7. '   ' → logprob: -13.626020431518555
    8. ' )' → logprob: -13.876020431518555
    9. 'in' → logprob: -13.876020431518555
    10. 'i' → logprob: -13.876020431518555

Token 791: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.061969365924596786
    2. ' for' → logprob: -2.81196928024292
    3. '```' → logprob: -14.436969757080078
    4. '   ' → logprob: -14.811969757080078
    5. ' ' → logprob: -14.936969757080078
    6. '
' → logprob: -15.811969757080078
    7. '	for' → logprob: -15.811969757080078
    8. '32' → logprob: -16.436969757080078
    9. ')' → logprob: -16.686969757080078
    10. 'from' → logprob: -16.811969757080078

Token 792: ' i' (ID: 575)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007040912751108408
    2. 'i' → logprob: -7.500704288482666
    3. ' range' → logprob: -9.375703811645508
    4. 're' → logprob: -9.625703811645508
    5. '(range' → logprob: -15.375703811645508
    6. ' i' → logprob: -17.125703811645508
    7. 'reverse' → logprob: -17.500703811645508
    8. 'Range' → logprob: -18.625703811645508
    9. '   ' → logprob: -18.875703811645508
    10. ' reversed' → logprob: -19.250703811645508

Token 793: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20173773169517517
    2. 'in' → logprob: -1.7017377614974976
    3. 'range' → logprob: -8.076737403869629
    4. '   ' → logprob: -12.826737403869629
    5. 's' → logprob: -12.951737403869629
    6. 'i' → logprob: -13.451737403869629
    7. 're' → logprob: -13.701737403869629
    8. ' ' → logprob: -14.076737403869629
    9. '
' → logprob: -14.326737403869629
    10. '  ' → logprob: -14.451737403869629

Token 794: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.8074162653647363e-05
    2. 're' → logprob: -11.625018119812012
    3. ' range' → logprob: -11.625018119812012
    4. '[' → logprob: -16.125017166137695
    5. '(range' → logprob: -17.375017166137695
    6. 'reverse' → logprob: -17.750017166137695
    7. 'Range' → logprob: -20.125017166137695
    8. '(' → logprob: -20.875017166137695
    9. '	range' → logprob: -21.125017166137695
    10. 'list' → logprob: -21.250017166137695

Token 795: '(' (ID: 7)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.0011858227662742138
    2. '32' → logprob: -6.751185894012451
    3. '(' → logprob: -11.751185417175293
    4. '{' → logprob: -12.876185417175293
    5. '2' → logprob: -13.251185417175293
    6. '=' → logprob: -14.001185417175293
    7. '   ' → logprob: -14.938685417175293
    8. '[' → logprob: -15.126185417175293
    9. ' ' → logprob: -15.313685417175293
    10. '```' → logprob: -15.438685417175293

Token 796: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.006717974785715342
    2. '32' → logprob: -5.006718158721924
    3. '2' → logprob: -13.631717681884766
    4. '{' → logprob: -14.819217681884766
    5. '(' → logprob: -16.131717681884766
    6. '27' → logprob: -16.256717681884766
    7. '=' → logprob: -16.381717681884766
    8. '```' → logprob: -16.444217681884766
    9. '3' → logprob: -16.694217681884766
    10. '25' → logprob: -16.944217681884766

Token 797: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.204720582696609e-05
    2. ' ,' → logprob: -10.250052452087402
    3. '32' → logprob: -11.500052452087402
    4. '26' → logprob: -12.250052452087402
    5. ',
' → logprob: -14.125052452087402
    6. '6' → logprob: -14.750052452087402
    7. '2' → logprob: -15.375052452087402
    8. '   ' → logprob: -16.750051498413086
    9. 'to' → logprob: -17.125051498413086
    10. '```' → logprob: -17.125051498413086

Token 798: ' ' (ID: 220)
  Prédit: '33'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '33' → logprob: -4.320199877838604e-07
    2. '32' → logprob: -15.25
    3. '```' → logprob: -17.5
    4. '333' → logprob: -17.625
    5. '34' → logprob: -18.0
    6. '-' → logprob: -18.25
    7. '=' → logprob: -18.25
    8. '   ' → logprob: -19.375
    9. '0' → logprob: -19.5
    10. ' ' → logprob: -19.5

Token 799: '33' (ID: 2546)
  Prédit: '33'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '33' → logprob: -7.896309739408025e-07
    2. '32' → logprob: -14.500000953674316
    3. '-' → logprob: -16.0
    4. '333' → logprob: -17.0
    5. '34' → logprob: -17.25
    6. '=' → logprob: -17.625
    7. '```' → logprob: -17.625
    8. '0' → logprob: -18.625
    9. '033' → logprob: -19.375
    10. '``' → logprob: -19.375

Token 800: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00028993739397265017
    2. ')][' → logprob: -8.250289916992188
    3. ' )' → logprob: -11.250289916992188
    4. '[::-' → logprob: -11.500289916992188
    5. ')' → logprob: -13.250289916992188
    6. ')]
' → logprob: -13.625289916992188
    7. ')[' → logprob: -13.625289916992188
    8. '   ' → logprob: -14.500289916992188
    9. '       ' → logprob: -15.375289916992188
    10. ']' → logprob: -15.875289916992188

Token 801: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 802: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.055638834834098816
    2. ' def' → logprob: -3.1806387901306152
    3. '<|end|>' → logprob: -4.680638790130615
    4. '   ' → logprob: -5.930638790130615
    5. '	def' → logprob: -8.305639266967773
    6. '
' → logprob: -8.305639266967773
    7. '<|end|>' → logprob: -10.055639266967773
    8. '```' → logprob: -10.430639266967773
    9. ' ' → logprob: -10.680639266967773
    10. ')' → logprob: -11.430639266967773

Token 803: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.0007530473521910608
    2. ' value' → logprob: -7.250752925872803
    3. 'def' → logprob: -10.250753402709961
    4. '_value' → logprob: -12.250753402709961
    5. '.value' → logprob: -14.000753402709961
    6. '```' → logprob: -14.000753402709961
    7. '__' → logprob: -14.875753402709961
    8. ' ' → logprob: -15.875753402709961
    9. '(value' → logprob: -16.12575340270996
    10. 'values' → logprob: -16.12575340270996

Token 804: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0025217996444553137
    2. '(' → logprob: -6.002521991729736
    3. ' (' → logprob: -10.127521514892578
    4. '   ' → logprob: -13.252521514892578
    5. 'def' → logprob: -13.627521514892578
    6. 'self' → logprob: -13.627521514892578
    7. '()' → logprob: -14.502521514892578
    8. '       ' → logprob: -14.877521514892578
    9. '```' → logprob: -15.002521514892578
    10. ' ' → logprob: -15.502521514892578

Token 805: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5993403196334839
    2. '(' → logprob: -0.9743403196334839
    3. '()' → logprob: -3.2243404388427734
    4. ')' → logprob: -3.5993404388427734
    5. '   ' → logprob: -5.974340438842773
    6. 'def' → logprob: -6.224340438842773
    7. ' (' → logprob: -6.974340438842773
    8. '=' → logprob: -8.974340438842773
    9. ' ' → logprob: -9.099340438842773
    10. 'self' → logprob: -9.349340438842773

Token 806: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.12740856409072876
    2. ' ->' → logprob: -2.127408504486084
    3. ')' → logprob: -8.502408981323242
    4. ':' → logprob: -8.877408981323242
    5. '   ' → logprob: -9.877408981323242
    6. '(' → logprob: -10.002408981323242
    7. '(self' → logprob: -11.127408981323242
    8. 'def' → logprob: -12.002408981323242
    9. '       ' → logprob: -12.127408981323242
    10. '>' → logprob: -12.377408981323242

Token 807: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0009117019944824278
    2. ' float' → logprob: -7.000911712646484
    3. 'int' → logprob: -16.250911712646484
    4. '(float' → logprob: -17.000911712646484
    5. '	float' → logprob: -18.375911712646484
    6. '```' → logprob: -20.125911712646484
    7. '   ' → logprob: -20.250911712646484
    8. 'Float' → logprob: -20.500911712646484
    9. 'flo' → logprob: -20.750911712646484
    10. '=float' → logprob: -21.125911712646484

Token 808: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3265320658683777
    2. ':' → logprob: -2.0765321254730225
    3. '(self' → logprob: -2.4515321254730225
    4. ':
' → logprob: -3.2015321254730225
    5. '   ' → logprob: -4.076531887054443
    6. 'self' → logprob: -4.951531887054443
    7. '(' → logprob: -7.076531887054443
    8. '```' → logprob: -7.576531887054443
    9. 'def' → logprob: -7.951531887054443
    10. '):
' → logprob: -9.076532363891602

Token 809: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004938427824527025
    2. 'total' → logprob: -5.37993860244751
    3. 'result' → logprob: -8.504938125610352
    4. '   ' → logprob: -9.504938125610352
    5. ' total' → logprob: -11.129938125610352
    6. '```' → logprob: -11.504938125610352
    7. '0' → logprob: -12.379938125610352
    8. 'fraction' → logprob: -12.629938125610352
    9. 'val' → logprob: -12.879938125610352
    10. 'value' → logprob: -13.004938125610352

Token 810: ' #' (ID: 1069)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.10896871238946915
    2. 'result' → logprob: -2.608968734741211
    3. '       ' → logprob: -4.108968734741211
    4. 'fraction' → logprob: -4.983968734741211
    5. 'res' → logprob: -5.483968734741211
    6. 'frac' → logprob: -6.733968734741211
    7. 'val' → logprob: -7.108968734741211
    8. 'value' → logprob: -8.733968734741211
    9. 'fract' → logprob: -11.358968734741211
    10. '   ' → logprob: -11.483968734741211

Token 811: ' Sum' (ID: 34138)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.13173536956310272
    2. 'result' → logprob: -2.381735324859619
    3. 'val' → logprob: -4.381735324859619
    4. 'fraction' → logprob: -4.631735324859619
    5. 'res' → logprob: -5.256735324859619
    6. 'frac' → logprob: -5.756735324859619
    7. 'value' → logprob: -8.256735801696777
    8. '   ' → logprob: -9.506735801696777
    9. '       ' → logprob: -10.381735801696777
    10. 'sum' → logprob: -11.256735801696777

Token 812: ' (' (ID: 350)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09211380779743195
    2. ' =' → logprob: -2.967113733291626
    3. '       ' → logprob: -4.467113971710205
    4. 'total' → logprob: -4.717113971710205
    5. 'result' → logprob: -5.092113971710205
    6. 'res' → logprob: -6.342113971710205
    7. '+=' → logprob: -6.717113971710205
    8. '(' → logprob: -7.217113971710205
    9. '   ' → logprob: -7.342113971710205
    10. 'sum' → logprob: -7.467113971710205

Token 813: '0' (ID: 15)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.7260262370109558
    2. 'self' → logprob: -0.8510262370109558
    3. '(bit' → logprob: -3.3510262966156006
    4. 'i' → logprob: -3.6010262966156006
    5. '(' → logprob: -4.6010260581970215
    6. '(self' → logprob: -5.2260260581970215
    7. '(i' → logprob: -5.7260260581970215
    8. '[(' → logprob: -6.2260260581970215
    9. 'b' → logprob: -6.6010260581970215
    10. '((' → logprob: -6.7260260581970215

Token 814: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -4.3226136767771095e-05
    2. ' .' → logprob: -11.000042915344238
    3. '[' → logprob: -12.250042915344238
    4. '       ' → logprob: -12.750042915344238
    5. 'b' → logprob: -12.875042915344238
    6. '**' → logprob: -12.875042915344238
    7. '           ' → logprob: -13.125042915344238
    8. ')' → logprob: -13.500042915344238
    9. '[i' → logprob: -13.875042915344238
    10. '```' → logprob: -13.875042915344238

Token 815: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0027731433510780334
    2. '1' → logprob: -6.502773284912109
    3. '0' → logprob: -7.752773284912109
    4. '   ' → logprob: -7.877773284912109
    5. 'bits' → logprob: -9.12777328491211
    6. '       ' → logprob: -9.25277328491211
    7. '.' → logprob: -9.25277328491211
    8. 'for' → logprob: -10.87777328491211
    9. '```' → logprob: -10.87777328491211
    10. '[' → logprob: -11.37777328491211

Token 816: ')^' (ID: 73602)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.05006999149918556
    2. ' **' → logprob: -3.05007004737854
    3. '*' → logprob: -6.925069808959961
    4. ')' → logprob: -8.550069808959961
    5. ' /' → logprob: -9.550069808959961
    6. '```' → logprob: -9.550069808959961
    7. ' *' → logprob: -9.925069808959961
    8. '**)' → logprob: -10.550069808959961
    9. '
' → logprob: -10.800069808959961
    10. ')**' → logprob: -11.425069808959961

Token 817: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.28689464926719666
    2. '(i' → logprob: -1.411894679069519
    3. '(' → logprob: -5.411894798278809
    4. 'k' → logprob: -7.536894798278809
    5. 'n' → logprob: -8.786894798278809
    6. 'j' → logprob: -9.411894798278809
    7. '(k' → logprob: -9.536894798278809
    8. '((' → logprob: -10.036894798278809
    9. '(bit' → logprob: -10.036894798278809
    10. ' (' → logprob: -10.286894798278809

Token 818: ' *' (ID: 425)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8801597356796265
    2. '=' → logprob: -1.0051597356796265
    3. 'for' → logprob: -2.130159854888916
    4. ' for' → logprob: -3.130159854888916
    5. ' =' → logprob: -4.255159854888916
    6. 'i' → logprob: -4.380159854888916
    7. '(' → logprob: -4.380159854888916
    8. '   ' → logprob: -5.130159854888916
    9. '(i' → logprob: -5.755159854888916
    10. '0' → logprob: -6.505159854888916

Token 819: ' b' (ID: 287)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.009063472039997578
    2. '(self' → logprob: -5.009063243865967
    3. 'bit' → logprob: -6.634063243865967
    4. '(bit' → logprob: -7.759063243865967
    5. '(' → logprob: -7.884063243865967
    6. '(i' → logprob: -9.509063720703125
    7. '((' → logprob: -10.009063720703125
    8. ' self' → logprob: -10.384063720703125
    9. 'i' → logprob: -10.384063720703125
    10. 'b' → logprob: -10.759063720703125

Token 820: '_i' (ID: 10853)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.39446279406547546
    2. 'for' → logprob: -1.1444628238677979
    3. ' for' → logprob: -5.144462585449219
    4. 'in' → logprob: -7.519462585449219
    5. ' i' → logprob: -8.019462585449219
    6. '(i' → logprob: -8.019462585449219
    7. ' in' → logprob: -9.644462585449219
    8. '   ' → logprob: -9.894462585449219
    9. '       ' → logprob: -10.019462585449219
    10. '1' → logprob: -10.019462585449219

Token 821: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12294542789459229
    2. 'for' → logprob: -2.8729453086853027
    3. ' for' → logprob: -2.9979453086853027
    4. '   ' → logprob: -6.622945308685303
    5. 'return' → logprob: -6.997945308685303
    6. '=' → logprob: -7.122945308685303
    7. '
' → logprob: -7.122945308685303
    8. '(' → logprob: -7.372945308685303
    9. '0' → logprob: -7.497945308685303
    10. 'sum' → logprob: -7.497945308685303

Token 822: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0006303519476205111
    2. ' i' → logprob: -7.3756303787231445
    3. 'enumer' → logprob: -12.750630378723145
    4. ',' → logprob: -15.500630378723145
    5. ' ' → logprob: -15.625630378723145
    6. 'range' → logprob: -16.125629425048828
    7. 'self' → logprob: -16.125629425048828
    8. '1' → logprob: -16.750629425048828
    9. '(i' → logprob: -16.875629425048828
    10. ',i' → logprob: -16.875629425048828

Token 823: '=' (ID: 28)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.44494056701660156
    2. 'in' → logprob: -1.0699405670166016
    3. '=' → logprob: -4.194940567016602
    4. '1' → logprob: -7.444940567016602
    5. 'from' → logprob: -7.944940567016602
    6. ' =' → logprob: -9.819940567016602
    7. ',' → logprob: -11.319940567016602
    8. 'i' → logprob: -11.694940567016602
    9. ' ' → logprob: -12.319940567016602
    10. 's' → logprob: -12.819940567016602

Token 824: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00022821188031230122
    2. 'range' → logprob: -8.625227928161621
    3. ' ' → logprob: -10.250227928161621
    4. ' range' → logprob: -11.750227928161621
    5. '(' → logprob: -13.250227928161621
    6. 'from' → logprob: -13.875227928161621
    7. '=' → logprob: -14.375227928161621
    8. 'in' → logprob: -14.500227928161621
    9. '7' → logprob: -14.625227928161621
    10. ' in' → logprob: -15.125227928161621

Token 825: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028552135452628136
    2. 'to' → logprob: -4.278552055358887
    3. ' to' → logprob: -5.528552055358887
    4. 'in' → logprob: -5.653552055358887
    5. ' ,' → logprob: -6.028552055358887
    6. ' in' → logprob: -6.153552055358887
    7. '1' → logprob: -6.653552055358887
    8. ',i' → logprob: -7.778552055358887
    9. '=' → logprob: -9.653552055358887
    10. ',to' → logprob: -9.653552055358887

Token 826: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.875000953674316
    3. 'len' → logprob: -15.125000953674316
    4. '8' → logprob: -17.750001907348633
    5. '```' → logprob: -17.750001907348633
    6. '   ' → logprob: -19.750001907348633
    7. '6' → logprob: -19.875001907348633
    8. ' len' → logprob: -20.875001907348633
    9. '  ' → logprob: -21.375001907348633
    10. '=' → logprob: -21.750001907348633

Token 827: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00901432242244482
    2. 'total' → logprob: -5.134014129638672
    3. 'result' → logprob: -6.009014129638672
    4. 'sum' → logprob: -8.884014129638672
    5. '   ' → logprob: -9.134014129638672
    6. ' total' → logprob: -9.259014129638672
    7. ',' → logprob: -9.759014129638672
    8. 'return' → logprob: -9.884014129638672
    9. '
' → logprob: -10.259014129638672
    10. '```' → logprob: -10.259014129638672

Token 828: ' with' (ID: 483)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5096388459205627
    2. '       ' → logprob: -1.259638786315918
    3. 'total' → logprob: -3.009638786315918
    4. '0' → logprob: -3.509638786315918
    5. ' result' → logprob: -4.259638786315918
    6. 'return' → logprob: -4.759638786315918
    7. ' total' → logprob: -5.259638786315918
    8. 'sum' → logprob: -5.634638786315918
    9. 'value' → logprob: -6.259638786315918
    10. 'fraction' → logprob: -7.009638786315918

Token 829: ' b' (ID: 287)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4779028594493866
    2. 'enumer' → logprob: -0.977902889251709
    3. 'range' → logprob: -6.102902889251709
    4. ' i' → logprob: -6.977902889251709
    5. '7' → logprob: -8.72790241241455
    6. ' enumerate' → logprob: -8.85290241241455
    7. 'reverse' → logprob: -8.97790241241455
    8. 're' → logprob: -9.85290241241455
    9. 'b' → logprob: -9.85290241241455
    10. 'len' → logprob: -10.60290241241455

Token 830: '1' (ID: 16)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5985188484191895
    2. 'i' → logprob: -1.3485188484191895
    3. 'for' → logprob: -2.7235188484191895
    4. '_i' → logprob: -2.9735188484191895
    5. '1' → logprob: -3.7235188484191895
    6. ' in' → logprob: -4.0985188484191895
    7. '7' → logprob: -4.7235188484191895
    8. '=' → logprob: -4.9735188484191895
    9. 'index' → logprob: -5.9735188484191895
    10. ',' → logprob: -5.9735188484191895

Token 831: ' is' (ID: 382)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -1.232517957687378
    2. ':' → logprob: -1.482517957687378
    3. '=' → logprob: -1.982517957687378
    4. ' =' → logprob: -2.357517957687378
    5. ' in' → logprob: -2.732517957687378
    6. '       ' → logprob: -3.482517957687378
    7. ',' → logprob: -3.607517957687378
    8. '*' → logprob: -3.982517957687378
    9. ' for' → logprob: -4.482518196105957
    10. ')' → logprob: -4.607518196105957

Token 832: ' right' (ID: 1849)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00829671137034893
    2. ' self' → logprob: -4.883296489715576
    3. '1' → logprob: -8.258296966552734
    4. '(self' → logprob: -8.633296966552734
    5. '32' → logprob: -9.008296966552734
    6. '=self' → logprob: -10.133296966552734
    7. '7' → logprob: -10.508296966552734
    8. '0' → logprob: -10.883296966552734
    9. ' ' → logprob: -11.133296966552734
    10. '[self' → logprob: -11.633296966552734

Token 833: 'most' (ID: 5309)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5462494492530823
    2. '   ' → logprob: -2.4212493896484375
    3. '/' → logprob: -2.7962493896484375
    4. '```' → logprob: -3.1712493896484375
    5. ' /' → logprob: -3.2962493896484375
    6. '      ' → logprob: -3.4212493896484375
    7. ' ' → logprob: -3.7962493896484375
    8. '*' → logprob: -3.9212493896484375
    9. ',' → logprob: -4.1712493896484375
    10. '  ' → logprob: -4.1712493896484375

Token 834: ' bit' (ID: 3546)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13648763298988342
    2. '=' → logprob: -2.8864877223968506
    3. 'def' → logprob: -4.0114874839782715
    4. '   ' → logprob: -4.1364874839782715
    5. '
' → logprob: -4.8864874839782715
    6. '0' → logprob: -5.0114874839782715
    7. ' =' → logprob: -5.0114874839782715
    8. 'return' → logprob: -5.6364874839782715
    9. '(' → logprob: -5.7614874839782715
    10. ':' → logprob: -6.0114874839782715

Token 835: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5477293133735657
    2. 'result' → logprob: -1.422729253768921
    3. 'total' → logprob: -1.797729253768921
    4. ' result' → logprob: -5.7977294921875
    5. ' total' → logprob: -6.1727294921875
    6. 'sum' → logprob: -6.4227294921875
    7. 'res' → logprob: -6.5477294921875
    8. '
' → logprob: -6.6727294921875
    9. '=' → logprob: -6.7977294921875
    10. ',' → logprob: -7.2977294921875

Token 836: 'bit' (ID: 6516)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.17129279673099518
    2. '7' → logprob: -2.046292781829834
    3. '0' → logprob: -4.171292781829834
    4. 'i' → logprob: -5.546292781829834
    5. 'self' → logprob: -6.046292781829834
    6. '```' → logprob: -6.796292781829834
    7. ')' → logprob: -7.171292781829834
    8. ' ' → logprob: -7.171292781829834
    9. '   ' → logprob: -8.046293258666992
    10. '=' → logprob: -8.046293258666992

Token 837: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0161705017089844
    2. '1' → logprob: -1.3911705017089844
    3. '32' → logprob: -2.1411705017089844
    4. '   ' → logprob: -2.8911705017089844
    5. '7' → logprob: -3.0161705017089844
    6. ' ' → logprob: -3.6411705017089844
    7. ' =' → logprob: -3.6411705017089844
    8. '       ' → logprob: -3.8911705017089844
    9. '26' → logprob: -3.8911705017089844
    10. '```' → logprob: -3.8911705017089844

Token 838: '32' (ID: 1398)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.27065402269363403
    2. '1' → logprob: -1.5206539630889893
    3. '32' → logprob: -4.895654201507568
    4. '=' → logprob: -5.145654201507568
    5. '0' → logprob: -6.520654201507568
    6. ' ' → logprob: -7.270654201507568
    7. '```' → logprob: -7.895654201507568
    8. '[' → logprob: -8.02065372467041
    9. '6' → logprob: -8.02065372467041
    10. 'i' → logprob: -8.02065372467041

Token 839: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2044646292924881
    2. '       ' → logprob: -1.9544646739959717
    3. ',' → logprob: -3.8294646739959717
    4. '):' → logprob: -5.079464435577393
    5. '):
' → logprob: -5.704464435577393
    6. '+' → logprob: -5.829464435577393
    7. '   ' → logprob: -6.079464435577393
    8. '-' → logprob: -6.829464435577393
    9. '),' → logprob: -7.329464435577393
    10. ' )' → logprob: -7.454464435577393

Token 840: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4982459843158722
    2. 'total' → logprob: -0.9982459545135498
    3. 'result' → logprob: -3.99824595451355
    4. ' total' → logprob: -5.248246192932129
    5. ' result' → logprob: -9.248246192932129
    6. 'value' → logprob: -9.998246192932129
    7. 'sum' → logprob: -9.998246192932129
    8. 'res' → logprob: -10.623246192932129
    9. '   ' → logprob: -11.248246192932129
    10. 'return' → logprob: -11.373246192932129

Token 841: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.3996350169181824
    2. '       ' → logprob: -1.1496350765228271
    3. 'result' → logprob: -4.399634838104248
    4. 'res' → logprob: -8.649635314941406
    5. ' total' → logprob: -9.399635314941406
    6. 'fraction' → logprob: -9.524635314941406
    7. 'value' → logprob: -10.274635314941406
    8. 'val' → logprob: -11.399635314941406
    9. 'sum' → logprob: -11.524635314941406
    10. '   ' → logprob: -12.149635314941406

Token 842: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759453177452087
    2. ' =' → logprob: -0.8259453177452087
    3. '       ' → logprob: -12.325944900512695
    4. '   ' → logprob: -13.700944900512695
    5. '    ' → logprob: -16.825944900512695
    6. ' ' → logprob: -16.950944900512695
    7. '0' → logprob: -17.075944900512695
    8. '        ' → logprob: -17.075944900512695
    9. '```' → logprob: -17.450944900512695
    10. '      ' → logprob: -17.825944900512695

Token 843: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.796184723294573e-06
    2. 'sum' → logprob: -12.500005722045898
    3. ' ' → logprob: -13.125005722045898
    4. '   ' → logprob: -17.2500057220459
    5. 'self' → logprob: -18.6250057220459
    6. ' sum' → logprob: -18.7500057220459
    7. '```' → logprob: -18.8750057220459
    8. '       ' → logprob: -18.8750057220459
    9. '(' → logprob: -19.5000057220459
    10. '  ' → logprob: -19.8750057220459

Token 844: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.310693111619912e-05
    2. 'sum' → logprob: -10.125042915344238
    3. ' ' → logprob: -12.875042915344238
    4. '```' → logprob: -16.000043869018555
    5. '   ' → logprob: -16.375043869018555
    6. '(' → logprob: -17.312543869018555
    7. 'self' → logprob: -17.312543869018555
    8. 'float' → logprob: -17.437543869018555
    9. ' sum' → logprob: -17.750043869018555
    10. '``' → logprob: -17.875043869018555

Token 845: '.' (ID: 13)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7759243249893188
    2. '.' → logprob: -1.1509243249893188
    3. '
' → logprob: -1.5259243249893188
    4. '<|end|>' → logprob: -6.775924205780029
    5. '   ' → logprob: -7.025924205780029
    6. '+' → logprob: -7.025924205780029
    7. '0' → logprob: -8.025924682617188
    8. ' +' → logprob: -8.025924682617188
    9. '        ' → logprob: -8.400924682617188
    10. ',' → logprob: -8.400924682617188

Token 846: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007912860601209104
    2. '.' → logprob: -7.875791072845459
    3. 'for' → logprob: -8.375791549682617
    4. '5' → logprob: -9.375791549682617
    5. '       ' → logprob: -10.125791549682617
    6. ' for' → logprob: -11.125791549682617
    7. '```' → logprob: -11.125791549682617
    8. '   ' → logprob: -11.625791549682617
    9. ' ' → logprob: -11.625791549682617
    10. '
' → logprob: -12.250791549682617

Token 847: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13006660342216492
    2. '
' → logprob: -2.6300666332244873
    3. ' for' → logprob: -3.7550666332244873
    4. 'for' → logprob: -4.380066394805908
    5. '   ' → logprob: -4.505066394805908
    6. '<|end|>' → logprob: -6.130066394805908
    7. ',' → logprob: -9.005066871643066
    8. '        
' → logprob: -9.380066871643066
    9. '	for' → logprob: -9.880066871643066
    10. '           ' → logprob: -9.880066871643066

Token 848: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3457791209220886
    2. ' for' → logprob: -1.7207791805267334
    3. 'for' → logprob: -2.2207791805267334
    4. '   ' → logprob: -5.345778942108154
    5. '
' → logprob: -10.220779418945312
    6. '```' → logprob: -10.345779418945312
    7. '           ' → logprob: -11.720779418945312
    8. '     ' → logprob: -11.970779418945312
    9. ' ' → logprob: -11.970779418945312
    10. '	for' → logprob: -12.220779418945312

Token 849: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0007662679417990148
    2. '       ' → logprob: -7.750766277313232
    3. ' for' → logprob: -8.000765800476074
    4. '   ' → logprob: -15.625765800476074
    5. '```' → logprob: -16.25076675415039
    6. '
' → logprob: -17.62576675415039
    7. '	for' → logprob: -17.87576675415039
    8. 'i' → logprob: -18.25076675415039
    9. ' ' → logprob: -19.12576675415039
    10. '      ' → logprob: -19.50076675415039

Token 850: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.623244553338736e-05
    2. ' i' → logprob: -9.625065803527832
    3. 'idx' → logprob: -16.25006675720215
    4. 'index' → logprob: -17.00006675720215
    5. '   ' → logprob: -17.75006675720215
    6. '	i' → logprob: -18.37506675720215
    7. '```' → logprob: -18.50006675720215
    8. ' ' → logprob: -18.75006675720215
    9. '(i' → logprob: -19.50006675720215
    10. '  ' → logprob: -19.87506675720215

Token 851: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12451955676078796
    2. ',' → logprob: -2.6245195865631104
    3. 'in' → logprob: -3.1245195865631104
    4. ' ,' → logprob: -7.999519348144531
    5. '1' → logprob: -8.749519348144531
    6. '=' → logprob: -9.749519348144531
    7. ' ' → logprob: -10.499519348144531
    8. '0' → logprob: -11.499519348144531
    9. ',in' → logprob: -11.749519348144531
    10. '	in' → logprob: -11.874519348144531

Token 852: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -6.511406809295295e-06
    2. ' bit' → logprob: -12.000006675720215
    3. 'b' → logprob: -15.375006675720215
    4. '(bit' → logprob: -17.2500057220459
    5. '_bit' → logprob: -19.7500057220459
    6. 'bitr' → logprob: -20.0000057220459
    7. 'Bit' → logprob: -20.6250057220459
    8. '-bit' → logprob: -20.7500057220459
    9. 'bits' → logprob: -21.2500057220459
    10. 'bite' → logprob: -21.6250057220459

Token 853: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026310397312045097
    2. 'in' → logprob: -3.651310443878174
    3. '	in' → logprob: -12.651309967041016
    4. ',' → logprob: -12.776309967041016
    5. '```' → logprob: -14.026309967041016
    6. '   ' → logprob: -14.026309967041016
    7. ' ' → logprob: -14.151309967041016
    8. '       ' → logprob: -14.651309967041016
    9. 'import' → logprob: -14.901309967041016
    10. '        ' → logprob: -15.526309967041016

Token 854: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0003357006062287837
    2. ' enumerate' → logprob: -8.000335693359375
    3. 'enum' → logprob: -15.875335693359375
    4. 'en' → logprob: -16.750335693359375
    5. '(en' → logprob: -18.125335693359375
    6. 'enqueue' → logprob: -19.250335693359375
    7. '```' → logprob: -19.625335693359375
    8. 'zip' → logprob: -20.000335693359375
    9. 'ex' → logprob: -20.000335693359375
    10. 'in' → logprob: -20.125335693359375

Token 855: '(re' (ID: 8178)
  Prédit: '(re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -0.6459528803825378
    2. '(self' → logprob: -0.7709528803825378
    3. 're' → logprob: -5.0209527015686035
    4. 'self' → logprob: -5.0209527015686035
    5. '(sorted' → logprob: -10.645953178405762
    6. '(reverse' → logprob: -10.895953178405762
    7. '(' → logprob: -11.895953178405762
    8. ' reversed' → logprob: -12.145953178405762
    9. '(range' → logprob: -12.645953178405762
    10. '((' → logprob: -13.145953178405762

Token 856: 'versed' (ID: 76479)
  Prédit: 'versed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'versed' → logprob: -4.320199877838604e-07
    2. 'verse' → logprob: -15.625
    3. 'ver' → logprob: -15.75
    4. 'f' → logprob: -17.875
    5. '[' → logprob: -18.125
    6. 're' → logprob: -18.5
    7. 'self' → logprob: -18.5
    8. 'v' → logprob: -18.625
    9. 've' → logprob: -19.125
    10. '   ' → logprob: -19.75

Token 857: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.320199877838604e-07
    2. 'self' → logprob: -15.0
    3. '(' → logprob: -16.125
    4. ' (' → logprob: -18.25
    5. '[self' → logprob: -19.125
    6. '((' → logprob: -19.875
    7. ' self' → logprob: -20.5
    8. '   ' → logprob: -20.625
    9. '=self' → logprob: -20.625
    10. '       ' → logprob: -20.75

Token 858: '.bits' (ID: 89914)
  Prédit: '.bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bits' → logprob: -0.0009440997382625937
    2. 'bits' → logprob: -7.000944137573242
    3. 'self' → logprob: -10.875944137573242
    4. '(bits' → logprob: -11.750944137573242
    5. '_bits' → logprob: -13.125944137573242
    6. '.b' → logprob: -13.875944137573242
    7. ' bits' → logprob: -14.375944137573242
    8. '```' → logprob: -14.875944137573242
    9. '.self' → logprob: -15.250944137573242
    10. '<bits' → logprob: -15.625944137573242

Token 859: '),' (ID: 936)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018514882773160934
    2. '):
' → logprob: -4.268515110015869
    3. ',' → logprob: -5.518515110015869
    4. '):
' → logprob: -8.768514633178711
    5. '       ' → logprob: -9.143514633178711
    6. ' ):' → logprob: -10.768514633178711
    7. '           ' → logprob: -11.518514633178711
    8. ')' → logprob: -12.268514633178711
    9. ')):' → logprob: -12.268514633178711
    10. '   ' → logprob: -12.393514633178711

Token 860: ' start' (ID: 1604)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04866650700569153
    2. 'start' → logprob: -3.048666477203369
    3. ' ' → logprob: -9.673666954040527
    4. ' start' → logprob: -11.048666954040527
    5. '   ' → logprob: -15.423666954040527
    6. '```' → logprob: -16.29866600036621
    7. '0' → logprob: -17.17366600036621
    8. '  ' → logprob: -17.42366600036621
    9. '):
' → logprob: -17.79866600036621
    10. '2' → logprob: -18.54866600036621

Token 861: '=' (ID: 28)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3935101330280304
    2. '=' → logprob: -1.143510103225708
    3. '(' → logprob: -5.018510341644287
    4. 'from' → logprob: -13.768509864807129
    5. '```' → logprob: -14.018509864807129
    6. ')' → logprob: -15.518509864807129
    7. '{' → logprob: -15.643509864807129
    8. ' =' → logprob: -15.893509864807129
    9. 'def' → logprob: -16.518510818481445
    10. ' ' → logprob: -16.518510818481445

Token 862: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -19.0
    4. '=' → logprob: -19.375
    5. '   ' → logprob: -19.5
    6. '0' → logprob: -19.875
    7. '(' → logprob: -20.125
    8. '
' → logprob: -20.125
    9. '`' → logprob: -20.25
    10. '2' → logprob: -20.25

Token 863: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.576284646987915
    2. '):' → logprob: -0.826284646987915
    3. '):
' → logprob: -8.576284408569336
    4. '       ' → logprob: -9.451284408569336
    5. ':' → logprob: -10.076284408569336
    6. '           ' → logprob: -10.451284408569336
    7. ':
' → logprob: -12.951284408569336
    8. '   ' → logprob: -13.576284408569336
    9. ')' → logprob: -14.201284408569336
    10. ',' → logprob: -14.326284408569336

Token 864: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004971289541572332
    2. 'total' → logprob: -5.504971504211426
    3. ' total' → logprob: -7.129971504211426
    4. '   ' → logprob: -10.129971504211426
    5. '       ' → logprob: -10.879971504211426
    6. '               ' → logprob: -11.254971504211426
    7. '
' → logprob: -11.754971504211426
    8. '(total' → logprob: -12.129971504211426
    9. '```' → logprob: -13.379971504211426
    10. '	       ' → logprob: -14.004971504211426

Token 865: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.00025954778539016843
    2. ' total' → logprob: -8.750259399414062
    3. '           ' → logprob: -9.250259399414062
    4. '               ' → logprob: -12.500259399414062
    5. 'if' → logprob: -13.875259399414062
    6. '   ' → logprob: -15.000259399414062
    7. '(total' → logprob: -17.250259399414062
    8. '       ' → logprob: -18.000259399414062
    9. '	total' → logprob: -18.750259399414062
    10. '                   ' → logprob: -19.125259399414062

Token 866: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.014458700083196163
    2. ' +=' → logprob: -4.264458656311035
    3. '+' → logprob: -9.014458656311035
    4. '+=(' → logprob: -9.014458656311035
    5. '           ' → logprob: -11.014458656311035
    6. '        ' → logprob: -11.264458656311035
    7. '       ' → logprob: -12.014458656311035
    8. '            ' → logprob: -12.014458656311035
    9. ']+=' → logprob: -13.139458656311035
    10. '=' → logprob: -13.139458656311035

Token 867: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.0003571535926312208
    2. ' bit' → logprob: -8.625357627868652
    3. '(bit' → logprob: -9.250357627868652
    4. '(' → logprob: -9.625357627868652
    5. '0' → logprob: -11.125357627868652
    6. ' (' → logprob: -14.875357627868652
    7. '   ' → logprob: -16.250356674194336
    8. ' ' → logprob: -16.500356674194336
    9. 'bits' → logprob: -16.500356674194336
    10. 'float' → logprob: -17.375356674194336

Token 868: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4743094742298126
    2. ' *' → logprob: -0.9743094444274902
    3. '*(' → logprob: -8.474309921264648
    4. '/' → logprob: -11.849309921264648
    5. ' /' → logprob: -12.349309921264648
    6. '   ' → logprob: -13.224309921264648
    7. '```' → logprob: -13.224309921264648
    8. '(' → logprob: -13.349309921264648
    9. '
' → logprob: -13.349309921264648
    10. ' ' → logprob: -13.474309921264648

Token 869: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008620958775281906
    2. '0' → logprob: -4.758620738983154
    3. ' (' → logprob: -12.008621215820312
    4. '2' → logprob: -16.258621215820312
    5. '(pow' → logprob: -16.758621215820312
    6. ' ' → logprob: -17.133621215820312
    7. 'pow' → logprob: -17.258621215820312
    8. '```' → logprob: -17.383621215820312
    9. '   ' → logprob: -18.758621215820312
    10. '`' → logprob: -18.883621215820312

Token 870: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.451116051815916e-05
    2. '(' → logprob: -10.625024795532227
    3. ' ' → logprob: -16.625024795532227
    4. '1' → logprob: -17.250024795532227
    5. '2' → logprob: -18.000024795532227
    6. ')' → logprob: -18.500024795532227
    7. '```' → logprob: -19.375024795532227
    8. '   ' → logprob: -19.625024795532227
    9. '.' → logprob: -20.625024795532227
    10. ' (' → logprob: -21.375024795532227

Token 871: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.008720697835087776
    2. '0' → logprob: -4.758720874786377
    3. '**' → logprob: -9.758720397949219
    4. '           ' → logprob: -11.383720397949219
    5. ' .' → logprob: -11.633720397949219
    6. '(' → logprob: -11.883720397949219
    7. '```' → logprob: -12.383720397949219
    8. ' ' → logprob: -12.633720397949219
    9. ')' → logprob: -12.883720397949219
    10. ' **' → logprob: -13.383720397949219

Token 872: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: 0.0
    2. '0' → logprob: -17.625
    3. '.' → logprob: -18.125
    4. '```' → logprob: -18.25
    5. '   ' → logprob: -18.75
    6. '`' → logprob: -19.1875
    7. 'five' → logprob: -19.25
    8. '25' → logprob: -19.25
    9. '**' → logprob: -19.6875
    10. '05' → logprob: -19.8125

Token 873: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.03458627685904503
    2. ')' → logprob: -3.784586191177368
    3. ' **' → logprob: -4.534586429595947
    4. ')**' → logprob: -7.534586429595947
    5. '*' → logprob: -11.659585952758789
    6. '**)' → logprob: -13.534585952758789
    7. '```' → logprob: -14.784585952758789
    8. ')*' → logprob: -15.284585952758789
    9. ' )' → logprob: -16.28458595275879
    10. ' **)' → logprob: -16.40958595275879

Token 874: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.128163257315464e-07
    2. ' i' → logprob: -15.25
    3. ')i' → logprob: -19.25
    4. '(i' → logprob: -19.375
    5. '	i' → logprob: -21.0
    6. '{i' → logprob: -21.125
    7. '*i' → logprob: -21.625
    8. '```' → logprob: -21.75
    9. '   ' → logprob: -22.375
    10. '%i' → logprob: -23.125

Token 875: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023268191143870354
    2. ')
' → logprob: -3.773268222808838
    3. '       ' → logprob: -10.89826774597168
    4. ')return' → logprob: -13.14826774597168
    5. ')

' → logprob: -13.77326774597168
    6. ')
' → logprob: -13.89826774597168
    7. ' )' → logprob: -15.27326774597168
    8. ')#' → logprob: -17.27326774597168
    9. ')\
' → logprob: -17.52326774597168
    10. ')`' → logprob: -17.77326774597168

Token 876: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00037609596620313823
    2. 'return' → logprob: -8.125375747680664
    3. '
' → logprob: -10.125375747680664
    4. ' return' → logprob: -10.375375747680664
    5. '   ' → logprob: -12.375375747680664
    6. '	return' → logprob: -13.000375747680664
    7. '	' → logprob: -13.875375747680664
    8. '```' → logprob: -14.750375747680664
    9. '<|end|>' → logprob: -14.875375747680664
    10. '           ' → logprob: -15.625375747680664

Token 877: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.57674241065979
    2. '       ' → logprob: -0.82674241065979
    3. ' return' → logprob: -7.201742172241211
    4. '   ' → logprob: -10.201742172241211
    5. '	return' → logprob: -10.951742172241211
    6. '
' → logprob: -14.201742172241211
    7. '	' → logprob: -14.326742172241211
    8. '           ' → logprob: -14.701742172241211
    9. '```' → logprob: -15.576742172241211
    10. ' ' → logprob: -15.701742172241211

Token 878: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -7.493430894101039e-05
    2. ' total' → logprob: -9.500075340270996
    3. 'float' → logprob: -17.12507438659668
    4. 'self' → logprob: -18.75007438659668
    5. '(total' → logprob: -18.75007438659668
    6. 'round' → logprob: -19.62507438659668
    7. '0' → logprob: -19.87507438659668
    8. 'tot' → logprob: -20.00007438659668
    9. '   ' → logprob: -20.87507438659668
    10. '	total' → logprob: -21.00007438659668

Token 879: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17825651168823242
    2. '
' → logprob: -1.9282565116882324
    3. '<|end|>' → logprob: -4.053256511688232
    4. '```' → logprob: -8.55325698852539
    5. '    
' → logprob: -8.67825698852539
    6. '<|end|>' → logprob: -10.05325698852539
    7. 'def' → logprob: -10.67825698852539
    8. '  ' → logprob: -10.92825698852539
    9. '

' → logprob: -11.67825698852539
    10. '  
' → logprob: -11.80325698852539

Token 880: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.4894986785948277e-05
    2. '
' → logprob: -10.375044822692871
    3. 'def' → logprob: -11.375044822692871
    4. '<|end|>' → logprob: -13.500044822692871
    5. '```' → logprob: -14.625044822692871
    6. '    
' → logprob: -16.125045776367188
    7. '       ' → logprob: -16.625045776367188
    8. ' ' → logprob: -17.000045776367188
    9. '  ' → logprob: -17.000045776367188
    10. 'class' → logprob: -17.500045776367188

Token 881: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.001971457852050662
    2. '   ' → logprob: -6.376971244812012
    3. '
' → logprob: -8.751971244812012
    4. ' def' → logprob: -9.376971244812012
    5. '__' → logprob: -11.501971244812012
    6. '<|end|>' → logprob: -12.626971244812012
    7. '```' → logprob: -12.751971244812012
    8. 'class' → logprob: -12.876971244812012
    9. ' ' → logprob: -12.876971244812012
    10. '	def' → logprob: -13.251971244812012

Token 882: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.06198359653353691
    2. ' __' → logprob: -2.811983585357666
    3. '_repr' → logprob: -11.186984062194824
    4. 'repr' → logprob: -14.311984062194824
    5. 'def' → logprob: -14.436984062194824
    6. '.__' → logprob: -14.561984062194824
    7. '___' → logprob: -15.061984062194824
    8. '```' → logprob: -16.186983108520508
    9. '_rep' → logprob: -17.311983108520508
    10. ' def' → logprob: -17.561983108520508

Token 883: 'repr' (ID: 67002)
  Prédit: 'repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: -4.320199877838604e-07
    2. '_repr' → logprob: -15.0
    3. 'rep' → logprob: -18.625
    4. ' repr' → logprob: -20.875
    5. 'str' → logprob: -22.125
    6. 'representation' → logprob: -23.625
    7. '```' → logprob: -24.375
    8. 'represent' → logprob: -24.5
    9. 'r' → logprob: -24.625
    10. '_rep' → logprob: -25.125

Token 884: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.009182778187096119
    2. '(self' → logprob: -4.884182929992676
    3. '__(
' → logprob: -7.009182929992676
    4. '__' → logprob: -7.384182929992676
    5. 'self' → logprob: -10.634182929992676
    6. '__((' → logprob: -11.384182929992676
    7. '__()
' → logprob: -12.384182929992676
    8. '__[' → logprob: -13.009182929992676
    9. '(' → logprob: -13.134182929992676
    10. '__("' → logprob: -13.134182929992676

Token 885: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.534558552724775e-05
    2. 'f' → logprob: -10.750025749206543
    3. '(self' → logprob: -12.750025749206543
    4. ' self' → logprob: -14.375025749206543
    5. ')' → logprob: -15.125025749206543
    6. 'Self' → logprob: -15.875025749206543
    7. 'return' → logprob: -18.125024795532227
    8. '   ' → logprob: -19.875024795532227
    9. 'str' → logprob: -19.875024795532227
    10. '```' → logprob: -20.125024795532227

Token 886: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0006725206621922553
    2. 'self' → logprob: -7.625672340393066
    3. '__(' → logprob: -9.250672340393066
    4. '(' → logprob: -10.375672340393066
    5. '       ' → logprob: -10.500672340393066
    6. '   ' → logprob: -11.625672340393066
    7. ')(' → logprob: -12.000672340393066
    8. ' (' → logprob: -12.375672340393066
    9. '(
' → logprob: -13.375672340393066
    10. ')' → logprob: -13.375672340393066

Token 887: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004876027349382639
    2. 'return' → logprob: -5.379876136779785
    3. 'f' → logprob: -9.004876136779785
    4. ' return' → logprob: -9.254876136779785
    5. '           ' → logprob: -11.004876136779785
    6. '   ' → logprob: -11.879876136779785
    7. 'def' → logprob: -12.129876136779785
    8. ' f' → logprob: -12.754876136779785
    9. '```' → logprob: -13.504876136779785
    10. '"' → logprob: -13.754876136779785

Token 888: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.008061648346483707
    2. '       ' → logprob: -5.00806188583374
    3. ' return' → logprob: -7.00806188583374
    4. 'f' → logprob: -7.75806188583374
    5. '   ' → logprob: -11.758061408996582
    6. '           ' → logprob: -13.008061408996582
    7. 'Fraction' → logprob: -13.633061408996582
    8. ' f' → logprob: -13.758061408996582
    9. '     ' → logprob: -14.508061408996582
    10. '```' → logprob: -15.633061408996582

Token 889: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0007100477814674377
    2. ' f' → logprob: -7.2507100105285645
    3. '"' → logprob: -16.125709533691406
    4. 'Fraction' → logprob: -18.500709533691406
    5. 'F' → logprob: -18.875709533691406
    6. ''f' → logprob: -19.500709533691406
    7. '(f' → logprob: -20.125709533691406
    8. '	f' → logprob: -20.750709533691406
    9. ' ' → logprob: -21.000709533691406
    10. '   ' → logprob: -21.625709533691406

Token 890: '"' (ID: 1)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.08186373859643936
    2. 'Fraction' → logprob: -2.5818636417388916
    3. '"' → logprob: -5.831863880157471
    4. ' f' → logprob: -10.456863403320312
    5. 'fraction' → logprob: -12.831863403320312
    6. 'Fra' → logprob: -13.581863403320312
    7. 'Frac' → logprob: -13.581863403320312
    8. '(f' → logprob: -13.706863403320312
    9. '_fraction' → logprob: -14.206863403320312
    10. ' Fraction' → logprob: -14.831863403320312

Token 891: 'Fraction' (ID: 74401)
  Prédit: 'Fraction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fraction' → logprob: -5.512236498361744e-07
    2. ' Fraction' → logprob: -14.750000953674316
    3. '"' → logprob: -16.625
    4. ''' → logprob: -17.625
    5. 'fraction' → logprob: -17.875
    6. 'f' → logprob: -18.125
    7. '_fraction' → logprob: -18.25
    8. 'Faction' → logprob: -19.625
    9. 'Floating' → logprob: -19.875
    10. ' fractional' → logprob: -20.25

Token 892: 'al' (ID: 280)
  Prédit: 'al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -1.981667537620524e-06
    2. 'ral' → logprob: -14.125001907348633
    3. 'Fraction' → logprob: -14.875001907348633
    4. 'a' → logprob: -15.125001907348633
    5. 'ial' → logprob: -15.375001907348633
    6. 'nal' → logprob: -15.625001907348633
    7. 'l' → logprob: -15.875001907348633
    8. 'Part' → logprob: -16.375001907348633
    9. 'r' → logprob: -18.250001907348633
    10. 'rial' → logprob: -18.500001907348633

Token 893: 'Part' (ID: 5681)
  Prédit: 'Part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Part' → logprob: 0.0
    2. 'Parts' → logprob: -18.5
    3. ' Part' → logprob: -20.125
    4. '"' → logprob: -20.25
    5. 'Bit' → logprob: -21.25
    6. '(' → logprob: -21.5
    7. '`' → logprob: -21.75
    8. ''' → logprob: -22.0
    9. '_part' → logprob: -22.0
    10. 'part' → logprob: -22.125

Token 894: '(bits' (ID: 170698)
  Prédit: '(bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bits' → logprob: -2.2200749754119897e-06
    2. 'bits' → logprob: -13.375001907348633
    3. '(' → logprob: -15.125001907348633
    4. '(parts' → logprob: -15.750001907348633
    5. '(b' → logprob: -17.625001907348633
    6. '(bit' → logprob: -17.750001907348633
    7. '(f' → logprob: -17.875001907348633
    8. '{' → logprob: -18.375001907348633
    9. 'Bits' → logprob: -19.000001907348633
    10. '(fr' → logprob: -19.125001907348633

Token 895: '={' (ID: 1693)
  Prédit: '={'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '={' → logprob: -0.03852875530719757
    2. '{' → logprob: -3.2885286808013916
    3. '=self' → logprob: -8.413528442382812
    4. 'self' → logprob: -8.788528442382812
    5. '=' → logprob: -9.163528442382812
    6. '(self' → logprob: -12.163528442382812
    7. ']={' → logprob: -14.413528442382812
    8. '={(' → logprob: -14.913528442382812
    9. '       ' → logprob: -15.038528442382812
    10. ')' → logprob: -15.163528442382812

Token 896: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005240514408797026
    2. '{' → logprob: -5.255240440368652
    3. ' self' → logprob: -12.255240440368652
    4. '[self' → logprob: -13.255240440368652
    5. '(self' → logprob: -17.13024139404297
    6. '	self' → logprob: -17.25524139404297
    7. ' ' → logprob: -17.63024139404297
    8. '[' → logprob: -18.38024139404297
    9. '{
' → logprob: -18.75524139404297
    10. 'bits' → logprob: -19.00524139404297

Token 897: '.bits' (ID: 89914)
  Prédit: '.bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bits' → logprob: -0.0013511877041310072
    2. 'bits' → logprob: -6.751351356506348
    3. '.' → logprob: -9.001351356506348
    4. 'self' → logprob: -10.501351356506348
    5. '(bits' → logprob: -11.501351356506348
    6. '}' → logprob: -12.376351356506348
    7. '{' → logprob: -12.626351356506348
    8. ' bits' → logprob: -13.001351356506348
    9. '_bits' → logprob: -13.001351356506348
    10. '}.' → logprob: -13.626351356506348

Token 898: '})' (ID: 9263)
  Prédit: ')"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')"' → logprob: -0.1693754345178604
    2. ')' → logprob: -1.9193754196166992
    3. '})' → logprob: -5.419375419616699
    4. ')}' → logprob: -5.544375419616699
    5. ')")' → logprob: -8.1693754196167
    6. ')">' → logprob: -8.4193754196167
    7. ')`' → logprob: -9.2943754196167
    8. '}"' → logprob: -9.6693754196167
    9. ')”' → logprob: -9.9193754196167
    10. '}")' → logprob: -10.5443754196167

Token 899: '"

' (ID: 2678)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008027185685932636
    2. '<|end|>' → logprob: -7.750802516937256
    3. '()' → logprob: -8.500802993774414
    4. '}' → logprob: -9.875802993774414
    5. '")' → logprob: -10.000802993774414
    6. '```' → logprob: -10.875802993774414
    7. ')">' → logprob: -11.125802993774414
    8. ')"' → logprob: -11.125802993774414
    9. '(' → logprob: -12.375802993774414
    10. ')#' → logprob: -12.750802993774414

Token 900: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.396214097738266
    2. '<|end|>' → logprob: -1.3962141275405884
    3. '#' → logprob: -2.771214008331299
    4. ')' → logprob: -4.521214008331299
    5. '<|end|>' → logprob: -6.521214008331299
    6. '```' → logprob: -6.771214008331299
    7. 'value' → logprob: -6.896214008331299
    8. '.' → logprob: -8.021214485168457
    9. ' class' → logprob: -8.021214485168457
    10. '...' → logprob: -8.271214485168457

Token 901: ' K' (ID: 658)
  Prédit: 'Floating'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Floating' → logprob: -0.9023622274398804
    2. 'Number' → logprob: -1.2773622274398804
    3. 'Float' → logprob: -2.02736234664917
    4. 'Composite' → logprob: -2.77736234664917
    5. ' Floating' → logprob: -3.52736234664917
    6. 'Custom' → logprob: -3.90236234664917
    7. 'Fixed' → logprob: -4.40236234664917
    8. 'Combined' → logprob: -4.90236234664917
    9. 'My' → logprob: -5.02736234664917
    10. 'Value' → logprob: -5.40236234664917

Token 902: 'ongo' (ID: 8378)
  Prédit: 'ernel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ernel' → logprob: -0.6170940399169922
    2. 'Component' → logprob: -1.2420940399169922
    3. 'lass' → logprob: -3.117094039916992
    4. 'ey' → logprob: -3.242094039916992
    5. 'nown' → logprob: -4.492094039916992
    6. 'Bits' → logprob: -4.492094039916992
    7. 'Bit' → logprob: -4.617094039916992
    8. 'Exponent' → logprob: -4.742094039916992
    9. 'Components' → logprob: -5.117094039916992
    10. 'eep' → logprob: -5.242094039916992

Token 903: 'Float' (ID: 9820)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -0.7555097341537476
    2. 'Component' → logprob: -1.7555097341537476
    3. 'Float' → logprob: -2.505509853363037
    4. 'Value' → logprob: -2.630509853363037
    5. 'Bit' → logprob: -2.880509853363037
    6. 'Sign' → logprob: -4.380509853363037
    7. '(' → logprob: -4.380509853363037
    8. 'Factor' → logprob: -4.505509853363037
    9. 'Unit' → logprob: -4.630509853363037
    10. '(Component' → logprob: -5.130509853363037

Token 904: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6986400485038757
    2. '(Component' → logprob: -0.9486400485038757
    3. '(' → logprob: -2.1986401081085205
    4. '():' → logprob: -6.073639869689941
    5. '(Abstract' → logprob: -6.948639869689941
    6. '(Bit' → logprob: -7.198639869689941
    7. '(:' → logprob: -9.698639869689941
    8. ':
' → logprob: -9.698639869689941
    9. '(B' → logprob: -9.948639869689941
    10. '(Base' → logprob: -10.573639869689941

Token 905: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012479700380936265
    2. 'def' → logprob: -6.751247882843018
    3. ' def' → logprob: -9.501248359680176
    4. '	def' → logprob: -13.626248359680176
    5. '```' → logprob: -13.626248359680176
    6. '   ' → logprob: -14.626248359680176
    7. ':' → logprob: -16.37624740600586
    8. ')' → logprob: -17.37624740600586
    9. ':def' → logprob: -17.62624740600586
    10. '    
' → logprob: -18.12624740600586

Token 906: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.041521038860082626
    2. ' def' → logprob: -3.2915210723876953
    3. '   ' → logprob: -5.666521072387695
    4. 'BITS' → logprob: -11.666521072387695
    5. 'class' → logprob: -13.291521072387695
    6. ' ' → logprob: -13.916521072387695
    7. '	def' → logprob: -14.041521072387695
    8. 'SIGN' → logprob: -14.666521072387695
    9. '```' → logprob: -15.416521072387695
    10. 'HEX' → logprob: -15.916521072387695

Token 907: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0003107943630311638
    2. '__' → logprob: -8.250310897827148
    3. 'def' → logprob: -10.500310897827148
    4. '_init' → logprob: -11.000310897827148
    5. '```' → logprob: -12.375310897827148
    6. ' __' → logprob: -14.750310897827148
    7. 'int' → logprob: -15.250310897827148
    8. ' init' → logprob: -15.250310897827148
    9. 'repr' → logprob: -16.50031089782715
    10. '**' → logprob: -17.37531089782715

Token 908: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.320199877838604e-07
    2. '_init' → logprob: -16.125
    3. '```' → logprob: -16.125
    4. 'def' → logprob: -16.625
    5. ' init' → logprob: -17.625
    6. '__' → logprob: -18.5
    7. '(init' → logprob: -19.125
    8. '`' → logprob: -19.25
    9. 'name' → logprob: -19.375
    10. '   ' → logprob: -19.75

Token 909: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.021819191053509712
    2. '__(' → logprob: -3.8968191146850586
    3. 'self' → logprob: -7.021819114685059
    4. '(' → logprob: -8.646819114685059
    5. ' (' → logprob: -9.021819114685059
    6. '   ' → logprob: -9.771819114685059
    7. 'def' → logprob: -11.771819114685059
    8. '```' → logprob: -12.021819114685059
    9. ',' → logprob: -12.396819114685059
    10. '_(' → logprob: -12.896819114685059

Token 910: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.5928495486150496e-05
    2. 'hex' → logprob: -11.875016212463379
    3. ' self' → logprob: -12.500016212463379
    4. '0' → logprob: -13.375016212463379
    5. '       ' → logprob: -13.375016212463379
    6. '   ' → logprob: -13.625016212463379
    7. '(self' → logprob: -14.625016212463379
    8. '
' → logprob: -15.125016212463379
    9. '__(' → logprob: -17.500015258789062
    10. ',' → logprob: -17.500015258789062

Token 911: ',' (ID: 11)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2361091822385788
    2. ',' → logprob: -1.6111091375350952
    3. '(self' → logprob: -5.111109256744385
    4. '   ' → logprob: -6.611109256744385
    5. '):
' → logprob: -6.611109256744385
    6. '       ' → logprob: -6.736109256744385
    7. '
' → logprob: -8.361108779907227
    8. ' self' → logprob: -8.611108779907227
    9. '):' → logprob: -9.361108779907227
    10. '__(' → logprob: -9.486108779907227

Token 912: ' hex' (ID: 26157)
  Prédit: 'hex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hex' → logprob: -0.012739191763103008
    2. 'bit' → logprob: -4.512739181518555
    3. ' hex' → logprob: -6.512739181518555
    4. 'self' → logprob: -9.262739181518555
    5. 'bits' → logprob: -10.512739181518555
    6. ' bit' → logprob: -10.637739181518555
    7. '   ' → logprob: -10.887739181518555
    8. 'components' → logprob: -11.012739181518555
    9. 'value' → logprob: -12.262739181518555
    10. 'sign' → logprob: -12.637739181518555

Token 913: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.0002619318547658622
    2. 'string' → logprob: -8.250262260437012
    3. '_value' → logprob: -15.125262260437012
    4. 'String' → logprob: -15.875262260437012
    5. '_str' → logprob: -16.000261306762695
    6. ' string' → logprob: -17.250261306762695
    7. '_code' → logprob: -17.875261306762695
    8. '_STRING' → logprob: -17.875261306762695
    9. '):' → logprob: -18.000261306762695
    10. 'str' → logprob: -18.375261306762695

Token 914: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4353370666503906
    2. ':' → logprob: -1.1853370666503906
    3. '):
' → logprob: -3.0603370666503906
    4. '   ' → logprob: -8.06033706665039
    5. '       ' → logprob: -10.31033706665039
    6. '):
' → logprob: -10.31033706665039
    7. ' :' → logprob: -11.06033706665039
    8. ':str' → logprob: -11.06033706665039
    9. ' ):' → logprob: -11.68533706665039
    10. ')' → logprob: -12.06033706665039

Token 915: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.12706291675567627
    2. ' str' → logprob: -2.1270627975463867
    3. 'hex' → logprob: -9.502062797546387
    4. ' hex' → logprob: -10.127062797546387
    5. ')' → logprob: -11.627062797546387
    6. ':str' → logprob: -12.127062797546387
    7. '(str' → logprob: -12.752062797546387
    8. '):
' → logprob: -14.502062797546387
    9. '   ' → logprob: -14.502062797546387
    10. '[str' → logprob: -14.752062797546387

Token 916: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4744105637073517
    2. '):
' → logprob: -0.9744105339050293
    3. '):
' → logprob: -8.224411010742188
    4. '   ' → logprob: -9.974411010742188
    5. ')' → logprob: -11.224411010742188
    6. '       ' → logprob: -12.474411010742188
    7. ':' → logprob: -14.099411010742188
    8. '):

' → logprob: -15.099411010742188
    9. ' ):' → logprob: -15.349411010742188
    10. ' ' → logprob: -15.724411010742188

Token 917: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001785112835932523
    2. 'self' → logprob: -9.125178337097168
    3. '   ' → logprob: -10.375178337097168
    4. 'def' → logprob: -10.625178337097168
    5. ' self' → logprob: -11.250178337097168
    6. '):
' → logprob: -15.250178337097168
    7. '      ' → logprob: -15.500178337097168
    8. '           ' → logprob: -15.875178337097168
    9. ' def' → logprob: -16.375179290771484
    10. '     ' → logprob: -16.375179290771484

Token 918: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.3736075460910797
    2. '       ' → logprob: -1.4986075162887573
    3. ' self' → logprob: -2.623607635498047
    4. 'bit' → logprob: -4.248607635498047
    5. ' bit' → logprob: -6.623607635498047
    6. '   ' → logprob: -9.123607635498047
    7. '      ' → logprob: -11.123607635498047
    8. ' ' → logprob: -11.248607635498047
    9. '     ' → logprob: -12.123607635498047
    10. '	self' → logprob: -12.748607635498047

Token 919: '.bit' (ID: 61866)
  Prédit: '.hex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.hex' → logprob: -0.4751007556915283
    2. '.bit' → logprob: -0.9751007556915283
    3. '.bits' → logprob: -6.975100517272949
    4. 'hex' → logprob: -10.47510051727295
    5. '.stream' → logprob: -10.97510051727295
    6. '.value' → logprob: -10.97510051727295
    7. 'bit' → logprob: -11.47510051727295
    8. '.raw' → logprob: -12.10010051727295
    9. '.' → logprob: -13.10010051727295
    10. '.components' → logprob: -13.10010051727295

Token 920: 'stream' (ID: 8598)
  Prédit: 'stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stream' → logprob: -1.7120533811976202e-05
    2. '_stream' → logprob: -11.000017166137695
    3. 'Stream' → logprob: -15.125017166137695
    4. 'string' → logprob: -16.625017166137695
    5. 'self' → logprob: -16.875017166137695
    6. 'steam' → logprob: -17.500017166137695
    7. ' stream' → logprob: -18.500017166137695
    8. 's' → logprob: -18.500017166137695
    9. '=' → logprob: -18.750017166137695
    10. 'streams' → logprob: -19.375017166137695

Token 921: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01814994215965271
    2. ' =' → logprob: -4.0181498527526855
    3. '   ' → logprob: -17.018150329589844
    4. 'self' → logprob: -18.393150329589844
    5. '       ' → logprob: -18.643150329589844
    6. 's' → logprob: -19.268150329589844
    7. ':' → logprob: -19.393150329589844
    8. '=self' → logprob: -19.643150329589844
    9. '＝' → logprob: -19.893150329589844
    10. 'import' → logprob: -20.268150329589844

Token 922: ' Bit' (ID: 9422)
  Prédit: 'Bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bit' → logprob: -0.0040785204619169235
    2. ' Bit' → logprob: -5.504078388214111
    3. '(Bit' → logprob: -16.629077911376953
    4. 'bit' → logprob: -18.629077911376953
    5. '   ' → logprob: -18.754077911376953
    6. ' ' → logprob: -20.379077911376953
    7. '       ' → logprob: -21.129077911376953
    8. 'Byte' → logprob: -21.254077911376953
    9. ' bit' → logprob: -21.379077911376953
    10. '  ' → logprob: -21.379077911376953

Token 923: 'Stream' (ID: 4193)
  Prédit: 'Stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stream' → logprob: -0.0007112398743629456
    2. 'stream' → logprob: -7.250711441040039
    3. 'ream' → logprob: -13.875711441040039
    4. '_stream' → logprob: -15.625711441040039
    5. 'estream' → logprob: -16.00071144104004
    6. 'eam' → logprob: -17.37571144104004
    7. 'self' → logprob: -17.50071144104004
    8. ' Stream' → logprob: -17.87571144104004
    9. '_Stream' → logprob: -18.00071144104004
    10. 'Steam' → logprob: -18.12571144104004

Token 924: '(hex' (ID: 99522)
  Prédit: '(hex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(hex' → logprob: -4.961759259458631e-06
    2. 'hex' → logprob: -12.250004768371582
    3. '(' → logprob: -16.3750057220459
    4. '```' → logprob: -19.7500057220459
    5. '.hex' → logprob: -20.0000057220459
    6. '(self' → logprob: -20.6250057220459
    7. '((' → logprob: -20.8750057220459
    8. '(hash' → logprob: -21.0000057220459
    9. ' hex' → logprob: -21.0000057220459
    10. '(hist' → logprob: -21.3750057220459

Token 925: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.00014084660506341606
    2. 'string' → logprob: -8.875141143798828
    3. 'String' → logprob: -14.250141143798828
    4. '_' → logprob: -16.375141143798828
    5. ')' → logprob: -16.750141143798828
    6. '_stream' → logprob: -16.875141143798828
    7. ' string' → logprob: -17.375141143798828
    8. ')_' → logprob: -17.625141143798828
    9. '_STRING' → logprob: -17.750141143798828
    10. '```' → logprob: -17.750141143798828

Token 926: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ')
' → logprob: -13.875001907348633
    3. '   ' → logprob: -15.000001907348633
    4. '       ' → logprob: -15.375001907348633
    5. ' )' → logprob: -16.000001907348633
    6. '")' → logprob: -18.500001907348633
    7. ')

' → logprob: -18.750001907348633
    8. '),' → logprob: -18.875001907348633
    9. '))' → logprob: -19.125001907348633
    10. ' ' → logprob: -19.500001907348633

Token 927: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1571502983570099
    2. 'self' → logprob: -2.6571502685546875
    3. 'def' → logprob: -3.2821502685546875
    4. '   ' → logprob: -3.4071502685546875
    5. ' self' → logprob: -5.6571502685546875
    6. ' def' → logprob: -7.7821502685546875
    7. '
' → logprob: -8.157150268554688
    8. '<|end|>' → logprob: -8.532150268554688
    9. ' ' → logprob: -9.532150268554688
    10. '        
' → logprob: -10.907150268554688

Token 928: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0008104594890028238
    2. '       ' → logprob: -7.250810623168945
    3. ' self' → logprob: -9.375810623168945
    4. '
' → logprob: -11.250810623168945
    5. '   ' → logprob: -13.750810623168945
    6. 'def' → logprob: -14.500810623168945
    7. '#' → logprob: -14.750810623168945
    8. '        
' → logprob: -15.000810623168945
    9. '```' → logprob: -15.875810623168945
    10. '[self' → logprob: -16.750810623168945

Token 929: '.sign' (ID: 27578)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.14052098989486694
    2. '.sign' → logprob: -2.2655210494995117
    3. 'components' → logprob: -3.6405210494995117
    4. '.components' → logprob: -8.015521049499512
    5. 'parts' → logprob: -8.890521049499512
    6. '.' → logprob: -9.015521049499512
    7. '
' → logprob: -9.015521049499512
    8. '=' → logprob: -9.390521049499512
    9. '_sign' → logprob: -9.890521049499512
    10. ' sign' → logprob: -10.265521049499512

Token 930: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08294693380594254
    2. ' =' → logprob: -2.832947015762329
    3. 'bit' → logprob: -3.957947015762329
    4. '_bit' → logprob: -6.45794677734375
    5. 'Bit' → logprob: -9.45794677734375
    6. '_sign' → logprob: -12.83294677734375
    7. '_component' → logprob: -12.83294677734375
    8. 'sign' → logprob: -13.45794677734375
    9. 'component' → logprob: -13.70794677734375
    10. '   ' → logprob: -13.70794677734375

Token 931: ' Sign' (ID: 10746)
  Prédit: 'Sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sign' → logprob: -2.7610454708337784e-05
    2. ' Sign' → logprob: -10.500027656555176
    3. '(Sign' → logprob: -17.50002670288086
    4. '       ' → logprob: -18.00002670288086
    5. 'Signature' → logprob: -20.37502670288086
    6. '   ' → logprob: -20.50002670288086
    7. '     ' → logprob: -21.87502670288086
    8. '.Sign' → logprob: -21.87502670288086
    9. 'Signer' → logprob: -22.00002670288086
    10. '_sign' → logprob: -22.25002670288086

Token 932: 'Bit' (ID: 10973)
  Prédit: 'Bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bit' → logprob: -6.704273118884885e-07
    2. '(Bit' → logprob: -14.375000953674316
    3. 'Bits' → logprob: -17.75
    4. 'bit' → logprob: -17.875
    5. ' Bit' → logprob: -18.0
    6. '_bit' → logprob: -18.75
    7. 'Byte' → logprob: -19.5
    8. '.Bit' → logprob: -19.75
    9. ')' → logprob: -20.25
    10. '_BIT' → logprob: -20.625

Token 933: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16024523973464966
    2. '()
' → logprob: -1.9102451801300049
    3. '()

' → logprob: -11.535244941711426
    4. '()
' → logprob: -11.535244941711426
    5. '()`' → logprob: -15.035244941711426
    6. ' ()' → logprob: -15.410244941711426
    7. '()\' → logprob: -15.785244941711426
    8. ' ()
' → logprob: -16.035245895385742
    9. '().' → logprob: -16.035245895385742
    10. '()</' → logprob: -16.285245895385742

Token 934: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.25736498832702637
    2. '       ' → logprob: -1.5073649883270264
    3. ' self' → logprob: -5.2573652267456055
    4. '   ' → logprob: -8.757365226745605
    5. '	self' → logprob: -10.632365226745605
    6. ' ' → logprob: -12.132365226745605
    7. '[self' → logprob: -12.132365226745605
    8. '<|end|>' → logprob: -12.632365226745605
    9. '        
' → logprob: -12.757365226745605
    10. '```' → logprob: -12.757365226745605

Token 935: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -1.5928495486150496e-05
    2. '       ' → logprob: -11.250016212463379
    3. ' self' → logprob: -12.750016212463379
    4. '   ' → logprob: -17.875015258789062
    5. '        
' → logprob: -18.375015258789062
    6. '
' → logprob: -18.750015258789062
    7. '(self' → logprob: -19.125015258789062
    8. '	self' → logprob: -19.500015258789062
    9. '=self' → logprob: -20.000015258789062
    10. '           ' → logprob: -20.000015258789062

Token 936: '.integer' (ID: 68821)
  Prédit: '.integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.integer' → logprob: -0.004650014918297529
    2. '.f' → logprob: -6.004650115966797
    3. 'integer' → logprob: -6.504650115966797
    4. '.sign' → logprob: -7.504650115966797
    5. '.int' → logprob: -9.504650115966797
    6. 'Integer' → logprob: -10.504650115966797
    7. 'fraction' → logprob: -11.754650115966797
    8. 'sign' → logprob: -12.879650115966797
    9. '.integr' → logprob: -13.129650115966797
    10. '.Integer' → logprob: -13.379650115966797

Token 937: ' =' (ID: 314)
  Prédit: 'Part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Part' → logprob: -0.4607028067111969
    2. '_part' → logprob: -1.2107027769088745
    3. 'part' → logprob: -2.960702896118164
    4. '=' → logprob: -3.960702896118164
    5. ' =' → logprob: -8.085702896118164
    6. ' part' → logprob: -10.960702896118164
    7. '-part' → logprob: -11.835702896118164
    8. '.part' → logprob: -13.710702896118164
    9. '_PART' → logprob: -14.085702896118164
    10. ' Part' → logprob: -14.210702896118164

Token 938: ' Integer' (ID: 6611)
  Prédit: 'Integer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Integer' → logprob: -2.935296834039036e-06
    2. ' Integer' → logprob: -12.75000286102295
    3. '   ' → logprob: -21.625003814697266
    4. '       ' → logprob: -22.750003814697266
    5. ' ' → logprob: -23.500003814697266
    6. '	Integer' → logprob: -23.500003814697266
    7. '(Integer' → logprob: -23.750003814697266
    8. '  ' → logprob: -24.125003814697266
    9. 'integer' → logprob: -25.625003814697266
    10. 'INTEGER' → logprob: -25.875003814697266

Token 939: 'Part' (ID: 5681)
  Prédit: 'Part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Part' → logprob: -2.2200749754119897e-06
    2. 'part' → logprob: -13.125001907348633
    3. ' part' → logprob: -16.750001907348633
    4. '_part' → logprob: -16.875001907348633
    5. ' Part' → logprob: -17.625001907348633
    6. 'Parts' → logprob: -18.625001907348633
    7. '```' → logprob: -18.750001907348633
    8. '-Part' → logprob: -19.625001907348633
    9. '(' → logprob: -19.750001907348633
    10. 'Parte' → logprob: -20.500001907348633

Token 940: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.20143282413482666
    2. '()' → logprob: -1.7014328241348267
    3. '()
' → logprob: -11.576433181762695
    4. '       ' → logprob: -12.201433181762695
    5. '()

' → logprob: -12.451433181762695
    6. '()\' → logprob: -15.076433181762695
    7. 'self' → logprob: -15.576433181762695
    8. '   ' → logprob: -15.826433181762695
    9. ' ()
' → logprob: -16.451433181762695
    10. '())' → logprob: -16.826433181762695

Token 941: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2524458169937134
    2. 'self' → logprob: -1.5024458169937134
    3. ' self' → logprob: -7.752445697784424
    4. '   ' → logprob: -9.877446174621582
    5. '	self' → logprob: -10.627446174621582
    6. '
' → logprob: -12.252446174621582
    7. '```' → logprob: -13.377446174621582
    8. '        
' → logprob: -13.502446174621582
    9. '	' → logprob: -13.627446174621582
    10. '[self' → logprob: -14.127446174621582

Token 942: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0012130910763517022
    2. '       ' → logprob: -6.751213073730469
    3. ' self' → logprob: -10.126213073730469
    4. '   ' → logprob: -13.501213073730469
    5. '```' → logprob: -14.001213073730469
    6. '
' → logprob: -14.501213073730469
    7. '	self' → logprob: -16.37621307373047
    8. '``' → logprob: -18.37621307373047
    9. '(self' → logprob: -18.37621307373047
    10. '        
' → logprob: -18.37621307373047

Token 943: '.f' (ID: 1196)
  Prédit: '.f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.f' → logprob: -0.0010369796073064208
    2. 'fraction' → logprob: -6.876037120819092
    3. '_fraction' → logprob: -14.001036643981934
    4. '.sign' → logprob: -14.251036643981934
    5. '.' → logprob: -14.376036643981934
    6. ' .' → logprob: -14.876036643981934
    7. 'Fraction' → logprob: -14.876036643981934
    8. '.fr' → logprob: -15.126036643981934
    9. ' fractional' → logprob: -15.501036643981934
    10. '
' → logprob: -15.876036643981934

Token 944: 'raction' (ID: 33644)
  Prédit: 'raction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raction' → logprob: -0.00035083942930214107
    2. 'r' → logprob: -8.375350952148438
    3. 'action' → logprob: -9.250350952148438
    4. 'rac' → logprob: -11.125350952148438
    5. 'fraction' → logprob: -12.000350952148438
    6. 'ractions' → logprob: -13.000350952148438
    7. '```' → logprob: -15.625350952148438
    8. 'Fraction' → logprob: -15.750350952148438
    9. 'unction' → logprob: -16.125350952148438
    10. 'part' → logprob: -16.500350952148438

Token 945: ' =' (ID: 314)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.13930781185626984
    2. '=' → logprob: -2.514307737350464
    3. ' =' → logprob: -3.014307737350464
    4. '   ' → logprob: -10.514307975769043
    5. ' ' → logprob: -12.389307975769043
    6. 'a' → logprob: -13.764307975769043
    7. '  ' → logprob: -14.264307975769043
    8. '```' → logprob: -14.264307975769043
    9. 'part' → logprob: -14.514307975769043
    10. '       ' → logprob: -14.514307975769043

Token 946: ' Fraction' (ID: 112108)
  Prédit: 'Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fraction' → logprob: -7.941850526549388e-06
    2. ' Fraction' → logprob: -11.750007629394531
    3. '_fraction' → logprob: -19.50000762939453
    4. 'fraction' → logprob: -21.12500762939453
    5. ' fractional' → logprob: -21.37500762939453
    6. 'Floating' → logprob: -22.12500762939453
    7. ' ' → logprob: -22.50000762939453
    8. 'Faction' → logprob: -22.62500762939453
    9. 'Fragment' → logprob: -22.75000762939453
    10. 'Frac' → logprob: -23.37500762939453

Token 947: 'al' (ID: 280)
  Prédit: 'al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -4.127333340875339e-06
    2. 'Part' → logprob: -12.625003814697266
    3. 'a' → logprob: -14.375003814697266
    4. 'ial' → logprob: -16.625003814697266
    5. 'Bit' → logprob: -16.750003814697266
    6. 'Al' → logprob: -16.875003814697266
    7. 'AL' → logprob: -18.000003814697266
    8. 'Fraction' → logprob: -18.750003814697266
    9. '[' → logprob: -18.875003814697266
    10. 'alc' → logprob: -19.000003814697266

Token 948: 'Part' (ID: 5681)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.1269347220659256
    2. 'Part' → logprob: -2.126934766769409
    3. ' part' → logprob: -13.376935005187988
    4. 'Parts' → logprob: -13.376935005187988
    5. 'a' → logprob: -14.376935005187988
    6. ' Part' → logprob: -14.626935005187988
    7. '_part' → logprob: -14.876935005187988
    8. 'Partial' → logprob: -14.876935005187988
    9. 'part' → logprob: -15.001935005187988
    10. '   ' → logprob: -15.376935005187988

Token 949: '()

' (ID: 5874)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8306912183761597
    2. '   ' → logprob: -1.4556912183761597
    3. '
' → logprob: -1.7056912183761597
    4. '()
' → logprob: -2.080691337585449
    5. 'self' → logprob: -4.080691337585449
    6. '()' → logprob: -5.455691337585449
    7. 'def' → logprob: -6.455691337585449
    8. ' self' → logprob: -7.580691337585449
    9. '()

' → logprob: -7.955691337585449
    10. '(self' → logprob: -8.33069133758545

Token 950: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5738431215286255
    2. 'def' → logprob: -0.9488431215286255
    3. '       ' → logprob: -3.198843002319336
    4. 'self' → logprob: -5.198843002319336
    5. ' def' → logprob: -6.073843002319336
    6. '```' → logprob: -7.448843002319336
    7. '
' → logprob: -9.698843002319336
    8. ' self' → logprob: -9.823843002319336
    9. '<|end|>' → logprob: -10.198843002319336
    10. ' ' → logprob: -10.323843002319336

Token 951: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002997120900545269
    2. '       ' → logprob: -8.500299453735352
    3. 'for' → logprob: -9.750299453735352
    4. ' self' → logprob: -10.500299453735352
    5. '   ' → logprob: -11.625299453735352
    6. 'def' → logprob: -13.625299453735352
    7. '
' → logprob: -16.62529945373535
    8. '```' → logprob: -16.75029945373535
    9. '[self' → logprob: -16.87529945373535
    10. ' for' → logprob: -17.25029945373535

Token 952: ' Extract' (ID: 39239)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0037410527002066374
    2. 'for' → logprob: -5.753741264343262
    3. '       ' → logprob: -7.878741264343262
    4. ' self' → logprob: -8.628741264343262
    5. ' for' → logprob: -13.003741264343262
    6. '[self' → logprob: -13.253741264343262
    7. '   ' → logprob: -14.378741264343262
    8. 'def' → logprob: -14.878741264343262
    9. '
' → logprob: -15.003741264343262
    10. '#' → logprob: -15.003741264343262

Token 953: ' all' (ID: 722)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006399515550583601
    2. 'bits' → logprob: -5.131399631500244
    3. '       ' → logprob: -8.506399154663086
    4. ' self' → logprob: -9.256399154663086
    5. '_bits' → logprob: -9.381399154663086
    6. ' bits' → logprob: -9.756399154663086
    7. 'for' → logprob: -11.006399154663086
    8. 'components' → logprob: -13.006399154663086
    9. '(self' → logprob: -13.256399154663086
    10. '   ' → logprob: -13.256399154663086

Token 954: ' parts' (ID: 7881)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3485042452812195
    2. 'bits' → logprob: -1.4735043048858643
    3. '_bits' → logprob: -3.3485043048858643
    4. ' bits' → logprob: -4.223504066467285
    5. 'components' → logprob: -4.848504066467285
    6. '       ' → logprob: -5.973504066467285
    7. '(self' → logprob: -6.098504066467285
    8. ' self' → logprob: -6.473504066467285
    9. ' components' → logprob: -7.848504066467285
    10. '_components' → logprob: -8.473504066467285

Token 955: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032488892320543528
    2. 'self' → logprob: -5.753248691558838
    3. '   ' → logprob: -10.628249168395996
    4. 'for' → logprob: -10.878249168395996
    5. ' self' → logprob: -11.378249168395996
    6. '
' → logprob: -12.128249168395996
    7. '        
' → logprob: -12.753249168395996
    8. ' for' → logprob: -13.003249168395996
    9. '```' → logprob: -13.378249168395996
    10. '(self' → logprob: -13.628249168395996

Token 956: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009879093617200851
    2. 'self' → logprob: -4.634879112243652
    3. '   ' → logprob: -10.134879112243652
    4. '
' → logprob: -10.759879112243652
    5. '```' → logprob: -11.009879112243652
    6. ' self' → logprob: -11.259879112243652
    7. 'for' → logprob: -11.384879112243652
    8. '	' → logprob: -11.509879112243652
    9. '	self' → logprob: -11.884879112243652
    10. '        
' → logprob: -12.884879112243652

Token 957: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.03372660651803017
    2. '       ' → logprob: -3.533726692199707
    3. ' self' → logprob: -5.533726692199707
    4. '   ' → logprob: -11.783726692199707
    5. 'for' → logprob: -11.783726692199707
    6. '```' → logprob: -14.283726692199707
    7. '	self' → logprob: -14.783726692199707
    8. '[self' → logprob: -14.783726692199707
    9. ' for' → logprob: -15.658726692199707
    10. '        
' → logprob: -16.28372573852539

Token 958: '.sign' (ID: 27578)
  Prédit: '.sign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sign' → logprob: -3.531315314830863e-06
    2. 'sign' → logprob: -12.625003814697266
    3. '.' → logprob: -16.875003814697266
    4. '.extract' → logprob: -17.750003814697266
    5. ' .' → logprob: -18.125003814697266
    6. '.signal' → logprob: -18.375003814697266
    7. '.sig' → logprob: -19.125003814697266
    8. '	sign' → logprob: -19.125003814697266
    9. '   ' → logprob: -19.875003814697266
    10. 'Sign' → logprob: -20.000003814697266

Token 959: '.extract' (ID: 67806)
  Prédit: '.extract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extract' → logprob: -2.0219828002154827e-05
    2. '.' → logprob: -10.875020027160645
    3. ' .' → logprob: -13.875020027160645
    4. '   ' → logprob: -16.25002098083496
    5. 'extract' → logprob: -16.37502098083496
    6. '.decode' → logprob: -17.00002098083496
    7. '.sign' → logprob: -17.25002098083496
    8. ').' → logprob: -17.37502098083496
    9. '.ex' → logprob: -18.50002098083496
    10. '.fetch' → logprob: -18.62502098083496

Token 960: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -5.512236498361744e-07
    2. '_tokens' → logprob: -16.0
    3. '```' → logprob: -16.0
    4. 'bits' → logprob: -17.5
    5. ')_' → logprob: -17.5
    6. '_BITS' → logprob: -17.5
    7. '_parts' → logprob: -17.625
    8. '_bytes' → logprob: -17.625
    9. 'Bits' → logprob: -17.75
    10. '_ticks' → logprob: -18.125

Token 961: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.339278580620885e-06
    2. '(' → logprob: -13.000001907348633
    3. 'self' → logprob: -17.000001907348633
    4. ' (' → logprob: -17.500001907348633
    5. '(
' → logprob: -18.750001907348633
    6. '(this' → logprob: -19.125001907348633
    7. ',self' → logprob: -20.750001907348633
    8. ' self' → logprob: -21.250001907348633
    9. '((' → logprob: -22.125001907348633
    10. '       ' → logprob: -22.500001907348633

Token 962: '.bit' (ID: 61866)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.20146624743938446
    2. '.bit' → logprob: -1.7014662027359009
    3. ' bit' → logprob: -10.57646656036377
    4. ')' → logprob: -11.20146656036377
    5. ').' → logprob: -11.95146656036377
    6. '.' → logprob: -13.45146656036377
    7. '(bit' → logprob: -13.45146656036377
    8. 'Bit' → logprob: -13.95146656036377
    9. '_bit' → logprob: -14.07646656036377
    10. ',' → logprob: -14.20146656036377

Token 963: 'stream' (ID: 8598)
  Prédit: 'stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stream' → logprob: -5.512236498361744e-07
    2. ')' → logprob: -15.500000953674316
    3. 'ream' → logprob: -16.5
    4. 'string' → logprob: -16.625
    5. '_stream' → logprob: -17.125
    6. 'self' → logprob: -17.125
    7. ' stream' → logprob: -18.25
    8. '(stream' → logprob: -18.5
    9. '.stream' → logprob: -18.5
    10. 's' → logprob: -18.625

Token 964: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1603110432624817
    2. ')' → logprob: -1.910310983657837
    3. '       ' → logprob: -10.035310745239258
    4. ')
' → logprob: -10.160310745239258
    5. ')

' → logprob: -13.910310745239258
    6. '   ' → logprob: -13.910310745239258
    7. 'self' → logprob: -14.035310745239258
    8. '())
' → logprob: -14.535310745239258
    9. '()
' → logprob: -15.160310745239258
    10. ' )
' → logprob: -15.410310745239258

Token 965: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3233819603919983
    2. 'self' → logprob: -1.3233819007873535
    3. '	self' → logprob: -5.4483819007873535
    4. '   ' → logprob: -6.0733819007873535
    5. '```' → logprob: -6.0733819007873535
    6. ' self' → logprob: -6.9483819007873535
    7. '        
' → logprob: -9.698382377624512
    8. '
' → logprob: -10.323382377624512
    9. '[self' → logprob: -10.448382377624512
    10. '``' → logprob: -10.573382377624512

Token 966: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.000769009639043361
    2. '       ' → logprob: -7.250769138336182
    3. ' self' → logprob: -9.750768661499023
    4. '```' → logprob: -14.875768661499023
    5. '   ' → logprob: -15.125768661499023
    6. '	self' → logprob: -16.000768661499023
    7. '[self' → logprob: -17.375768661499023
    8. '
' → logprob: -17.375768661499023
    9. '        
' → logprob: -18.500768661499023
    10. '``' → logprob: -19.125768661499023

Token 967: '.integer' (ID: 68821)
  Prédit: '.integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.integer' → logprob: -3.273621405242011e-05
    2. '.f' → logprob: -10.625032424926758
    3. 'integer' → logprob: -11.750032424926758
    4. '.' → logprob: -15.375032424926758
    5. '.int' → logprob: -15.875032424926758
    6. ' .' → logprob: -17.250032424926758
    7. '.Integer' → logprob: -17.250032424926758
    8. '.sign' → logprob: -17.750032424926758
    9. 'fraction' → logprob: -17.875032424926758
    10. '.in' → logprob: -18.125032424926758

Token 968: '.extract' (ID: 67806)
  Prédit: '.extract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extract' → logprob: -2.7491250875755213e-05
    2. '.' → logprob: -10.625027656555176
    3. 'extract' → logprob: -13.000027656555176
    4. ' .' → logprob: -14.625027656555176
    5. '`.' → logprob: -15.375027656555176
    6. '```' → logprob: -16.75002670288086
    7. '   ' → logprob: -17.25002670288086
    8. '.ex' → logprob: -18.12502670288086
    9. '.collect' → logprob: -18.75002670288086
    10. '.
' → logprob: -18.75002670288086

Token 969: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -4.320199877838604e-07
    2. 'bits' → logprob: -15.875
    3. '_parts' → logprob: -16.5
    4. '_' → logprob: -16.625
    5. '_BITS' → logprob: -17.375
    6. '```' → logprob: -17.625
    7. '_ticks' → logprob: -17.875
    8. '_tokens' → logprob: -18.125
    9. 'self' → logprob: -18.375
    10. '_digits' → logprob: -18.375

Token 970: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.2200749754119897e-06
    2. '(' → logprob: -13.375001907348633
    3. ' (' → logprob: -15.000001907348633
    4. 'self' → logprob: -15.500001907348633
    5. '(
' → logprob: -18.625001907348633
    6. '(this' → logprob: -19.000001907348633
    7. '   ' → logprob: -19.750001907348633
    8. ' self' → logprob: -20.500001907348633
    9. '       ' → logprob: -20.875001907348633
    10. ',self' → logprob: -20.875001907348633

Token 971: '.bit' (ID: 61866)
  Prédit: '.bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bit' → logprob: -0.6101900339126587
    2. 'bit' → logprob: -1.3601900339126587
    3. 'self' → logprob: -1.6101900339126587
    4. '(bit' → logprob: -8.985190391540527
    5. ' bit' → logprob: -9.985190391540527
    6. '_bit' → logprob: -10.110190391540527
    7. '(self' → logprob: -10.860190391540527
    8. ')' → logprob: -11.360190391540527
    9. '.self' → logprob: -11.360190391540527
    10. '-bit' → logprob: -11.485190391540527

Token 972: 'stream' (ID: 8598)
  Prédit: 'stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stream' → logprob: -0.0006383348954841495
    2. 'self' → logprob: -7.875638484954834
    3. 'ream' → logprob: -8.625638008117676
    4. '_stream' → logprob: -10.500638008117676
    5. ')' → logprob: -10.875638008117676
    6. '(self' → logprob: -11.375638008117676
    7. '(stream' → logprob: -11.500638008117676
    8. '.stream' → logprob: -12.750638008117676
    9. 'estream' → logprob: -13.500638008117676
    10. ' stream' → logprob: -13.750638008117676

Token 973: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.03291846439242363
    2. ')' → logprob: -3.7829184532165527
    3. '       ' → logprob: -4.657918453216553
    4. '()
' → logprob: -9.532918930053711
    5. 'self' → logprob: -10.282918930053711
    6. '   ' → logprob: -11.282918930053711
    7. '()' → logprob: -11.657918930053711
    8. ')
' → logprob: -11.907918930053711
    9. '
' → logprob: -13.407918930053711
    10. '())
' → logprob: -14.032918930053711

Token 974: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5761046409606934
    2. '       ' → logprob: -0.8261046409606934
    3. ' self' → logprob: -9.076105117797852
    4. '   ' → logprob: -9.951105117797852
    5. '```' → logprob: -12.951105117797852
    6. '	self' → logprob: -15.201105117797852
    7. '           ' → logprob: -15.576105117797852
    8. '(self' → logprob: -16.32610511779785
    9. '[self' → logprob: -16.70110511779785
    10. ' ' → logprob: -16.82610511779785

Token 975: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.000452241423772648
    2. '       ' → logprob: -7.750452041625977
    3. ' self' → logprob: -10.750452041625977
    4. '   ' → logprob: -17.875452041625977
    5. '	self' → logprob: -18.625452041625977
    6. '
' → logprob: -19.250452041625977
    7. '(self' → logprob: -19.625452041625977
    8. ' ' → logprob: -21.000452041625977
    9. '[self' → logprob: -21.500452041625977
    10. '```' → logprob: -21.750452041625977

Token 976: '.f' (ID: 1196)
  Prédit: '.f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.f' → logprob: -0.02975141443312168
    2. 'fraction' → logprob: -3.5297513008117676
    3. '_fraction' → logprob: -15.154751777648926
    4. 'f' → logprob: -15.404751777648926
    5. ' fraction' → logprob: -15.904751777648926
    6. 'Fraction' → logprob: -16.40475082397461
    7. ' .' → logprob: -16.65475082397461
    8. '	f' → logprob: -16.77975082397461
    9. '
' → logprob: -17.15475082397461
    10. 'frac' → logprob: -17.40475082397461

Token 977: 'raction' (ID: 33644)
  Prédit: 'raction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raction' → logprob: -1.2113979209971149e-05
    2. 'action' → logprob: -11.500012397766113
    3. 'r' → logprob: -13.625012397766113
    4. 'fraction' → logprob: -14.125012397766113
    5. 'ractions' → logprob: -17.125011444091797
    6. 'rac' → logprob: -18.125011444091797
    7. 'race' → logprob: -19.875011444091797
    8. '_fraction' → logprob: -20.500011444091797
    9. 'riction' → logprob: -21.250011444091797
    10. '#' → logprob: -21.375011444091797

Token 978: '.extract' (ID: 67806)
  Prédit: '.extract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extract' → logprob: -1.8624639324116288e-06
    2. '.' → logprob: -13.500001907348633
    3. ' .' → logprob: -15.500001907348633
    4. 'extract' → logprob: -15.750001907348633
    5. '```' → logprob: -17.875001907348633
    6. '().' → logprob: -18.375001907348633
    7. '`.' → logprob: -18.875001907348633
    8. '\.' → logprob: -19.125001907348633
    9. '.collect' → logprob: -19.625001907348633
    10. '.decode' → logprob: -20.250001907348633

Token 979: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -9.610702363715973e-06
    2. 'bits' → logprob: -11.625009536743164
    3. '_BITS' → logprob: -16.125009536743164
    4. 'Bits' → logprob: -16.375009536743164
    5. '_tokens' → logprob: -16.375009536743164
    6. '```' → logprob: -16.625009536743164
    7. '_parts' → logprob: -16.750009536743164
    8. '_ticks' → logprob: -17.500009536743164
    9. ')_' → logprob: -17.875009536743164
    10. '"_' → logprob: -18.000009536743164

Token 980: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.319370302458992e-06
    2. 'self' → logprob: -12.750005722045898
    3. '(' → logprob: -13.125005722045898
    4. ' (' → logprob: -15.125005722045898
    5. '()' → logprob: -17.3750057220459
    6. '(
' → logprob: -18.6250057220459
    7. ' self' → logprob: -19.0000057220459
    8. '[self' → logprob: -19.1250057220459
    9. '(this' → logprob: -19.2500057220459
    10. '   ' → logprob: -19.7500057220459

Token 981: '.bit' (ID: 61866)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002160494914278388
    2. '(self' → logprob: -6.502160549163818
    3. ' self' → logprob: -7.877160549163818
    4. 'bit' → logprob: -8.87716007232666
    5. '.bit' → logprob: -9.37716007232666
    6. ')' → logprob: -10.25216007232666
    7. '.self' → logprob: -11.37716007232666
    8. ' bit' → logprob: -13.37716007232666
    9. ' ' → logprob: -14.12716007232666
    10. ',self' → logprob: -14.37716007232666

Token 982: 'stream' (ID: 8598)
  Prédit: 'stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stream' → logprob: -8.840432565193623e-05
    2. 'ream' → logprob: -9.500088691711426
    3. '_stream' → logprob: -11.875088691711426
    4. ')' → logprob: -12.625088691711426
    5. 'self' → logprob: -13.375088691711426
    6. '.stream' → logprob: -14.500088691711426
    7. ' stream' → logprob: -15.000088691711426
    8. 'steam' → logprob: -15.750088691711426
    9. 'estream' → logprob: -16.00008773803711
    10. 'astream' → logprob: -16.00008773803711

Token 983: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.723352049040841e-06
    2. ')
' → logprob: -12.625004768371582
    3. '   ' → logprob: -14.625004768371582
    4. '       ' → logprob: -14.625004768371582
    5. ' )' → logprob: -15.250004768371582
    6. '())' → logprob: -16.125003814697266
    7. '()' → logprob: -16.750003814697266
    8. '))' → logprob: -16.750003814697266
    9. ')}' → logprob: -17.750003814697266
    10. ')

' → logprob: -18.000003814697266

Token 984: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08014688640832901
    2. 'def' → logprob: -2.5801467895507812
    3. ' def' → logprob: -7.080146789550781
    4. '<|end|>' → logprob: -8.205146789550781
    5. '
' → logprob: -9.580146789550781
    6. '```' → logprob: -10.580146789550781
    7. ' ' → logprob: -10.955146789550781
    8. '	def' → logprob: -11.080146789550781
    9. ')' → logprob: -12.580146789550781
    10. '    
' → logprob: -12.955146789550781

Token 985: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -9.968312951968983e-06
    2. '@property' → logprob: -11.750009536743164
    3. ' def' → logprob: -13.750009536743164
    4. '   ' → logprob: -13.875009536743164
    5. '```' → logprob: -19.000009536743164
    6. '	def' → logprob: -19.875009536743164
    7. ')' → logprob: -21.000009536743164
    8. '
' → logprob: -21.125009536743164
    9. '@' → logprob: -21.250009536743164
    10. ' ' → logprob: -21.625009536743164

Token 986: ' to' (ID: 316)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.043742284178733826
    2. ' value' → logprob: -3.1687421798706055
    3. '__' → logprob: -7.2937421798706055
    4. ' __' → logprob: -9.918742179870605
    5. '_value' → logprob: -11.793742179870605
    6. 'def' → logprob: -13.043742179870605
    7. 'to' → logprob: -13.918742179870605
    8. '.value' → logprob: -14.793742179870605
    9. '"value' → logprob: -14.918742179870605
    10. ' ' → logprob: -15.043742179870605

Token 987: '_decimal' (ID: 178716)
  Prédit: '_float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_float' → logprob: -0.008156602270901203
    2. 'float' → logprob: -4.883156776428223
    3. '_' → logprob: -7.883156776428223
    4. '_double' → logprob: -10.008156776428223
    5. '_python' → logprob: -10.133156776428223
    6. 'f' → logprob: -10.758156776428223
    7. '_decimal' → logprob: -11.383156776428223
    8. ' float' → logprob: -11.383156776428223
    9. '_f' → logprob: -11.883156776428223
    10. '   ' → logprob: -12.008156776428223

Token 988: '_str' (ID: 6182)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.584861744660884e-05
    2. '(' → logprob: -10.125045776367188
    3. 'self' → logprob: -12.625045776367188
    4. ' (' → logprob: -14.625045776367188
    5. '_value' → logprob: -14.625045776367188
    6. '()' → logprob: -15.125045776367188
    7. '```' → logprob: -15.125045776367188
    8. 'value' → logprob: -15.250045776367188
    9. '   ' → logprob: -15.625045776367188
    10. '_float' → logprob: -16.000045776367188

Token 989: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.5928495486150496e-05
    2. '(' → logprob: -11.125016212463379
    3. 'self' → logprob: -14.250016212463379
    4. ' (' → logprob: -15.000016212463379
    5. '(
' → logprob: -17.000015258789062
    6. '   ' → logprob: -17.250015258789062
    7. '(s' → logprob: -17.375015258789062
    8. '(Self' → logprob: -17.750015258789062
    9. '       ' → logprob: -18.000015258789062
    10. '(sel' → logprob: -19.625015258789062

Token 990: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7262929677963257
    2. 'self' → logprob: -0.7262929677963257
    3. '(self' → logprob: -3.6012930870056152
    4. '):
' → logprob: -5.726293087005615
    5. '):' → logprob: -6.351293087005615
    6. '   ' → logprob: -8.976292610168457
    7. '       ' → logprob: -9.226292610168457
    8. ')->' → logprob: -10.601292610168457
    9. ')(' → logprob: -11.226292610168457
    10. '):
' → logprob: -11.351292610168457

Token 991: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0001261845463886857
    2. '(' → logprob: -9.125125885009766
    3. 'self' → logprob: -11.500125885009766
    4. '       ' → logprob: -12.625125885009766
    5. '   ' → logprob: -12.750125885009766
    6. ' (' → logprob: -14.375125885009766
    7. '(
' → logprob: -16.250125885009766
    8. 'def' → logprob: -16.875125885009766
    9. '```' → logprob: -17.125125885009766
    10. '(Self' → logprob: -17.250125885009766

Token 992: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.03148401528596878
    2. 'self' → logprob: -3.5314841270446777
    3. 'f' → logprob: -6.531484127044678
    4. ' str' → logprob: -8.28148365020752
    5. 'float' → logprob: -11.53148365020752
    6. 'return' → logprob: -12.15648365020752
    7. '   ' → logprob: -12.53148365020752
    8. 'string' → logprob: -13.65648365020752
    9. '```' → logprob: -14.53148365020752
    10. ' self' → logprob: -14.90648365020752

Token 993: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.015507861971855164
    2. '       ' → logprob: -4.265507698059082
    3. '(' → logprob: -6.890507698059082
    4. '   ' → logprob: -8.515507698059082
    5. 'self' → logprob: -9.390507698059082
    6. '(
' → logprob: -10.265507698059082
    7. ':
' → logprob: -13.890507698059082
    8. '```' → logprob: -13.890507698059082
    9. '(Self' → logprob: -14.265507698059082
    10. '->' → logprob: -14.390507698059082

Token 994: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010306637705070898
    2. '```' → logprob: -9.625102996826172
    3. '   ' → logprob: -11.375102996826172
    4. 'total' → logprob: -12.000102996826172
    5. 'value' → logprob: -12.250102996826172
    6. 'return' → logprob: -12.375102996826172
    7. '`' → logprob: -12.500102996826172
    8. '        ' → logprob: -13.625102996826172
    9. '      ' → logprob: -13.750102996826172
    10. 'integer' → logprob: -13.875102996826172

Token 995: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26656678318977356
    2. 'value' → logprob: -1.7665667533874512
    3. 'total' → logprob: -3.641566753387451
    4. 'val' → logprob: -4.266566753387451
    5. 'sign' → logprob: -4.391566753387451
    6. 'result' → logprob: -5.016566753387451
    7. 'num' → logprob: -6.516566753387451
    8. 'integer' → logprob: -7.016566753387451
    9. 'return' → logprob: -7.516566753387451
    10. 'int' → logprob: -7.891566753387451

Token 996: ' calculate' (ID: 17950)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.10306797921657562
    2. 'val' → logprob: -2.6030678749084473
    3. 'total' → logprob: -3.8530678749084473
    4. 'sign' → logprob: -6.853067874908447
    5. 'result' → logprob: -7.978067874908447
    6. 'return' → logprob: -8.103068351745605
    7. 'num' → logprob: -8.353068351745605
    8. 'integer' → logprob: -8.603068351745605
    9. 'number' → logprob: -8.728068351745605
    10. '   ' → logprob: -8.978068351745605

Token 997: ' float' (ID: 4428)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.6835501194000244
    2. 'val' → logprob: -0.9335501194000244
    3. 'sign' → logprob: -2.8085501194000244
    4. 'str' → logprob: -3.3085501194000244
    5. 'f' → logprob: -5.933549880981445
    6. 'result' → logprob: -7.558549880981445
    7. 'total' → logprob: -7.683549880981445
    8. 'return' → logprob: -8.058549880981445
    9. 'v' → logprob: -8.183549880981445
    10. 'dec' → logprob: -8.683549880981445

Token 998: ' value' (ID: 1432)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22647641599178314
    2. '(self' → logprob: -2.3514764308929443
    3. 'self' → logprob: -3.1014764308929443
    4. 'value' → logprob: -3.4764764308929443
    5. 'result' → logprob: -3.8514764308929443
    6. 'return' → logprob: -5.226476192474365
    7. '(' → logprob: -5.976476192474365
    8. '()' → logprob: -7.601476192474365
    9. '   ' → logprob: -7.851476192474365
    10. 'number' → logprob: -8.101476669311523

Token 999: ' exactly' (ID: 9707)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015137938782572746
    2. 'value' → logprob: -4.390138149261475
    3. 'result' → logprob: -7.015138149261475
    4. 'return' → logprob: -7.390138149261475
    5. 'total' → logprob: -7.765138149261475
    6. 'self' → logprob: -8.640137672424316
    7. '```' → logprob: -8.890137672424316
    8. 'val' → logprob: -9.015137672424316
    9. 'sign' → logprob: -10.015137672424316
    10. 'num' → logprob: -10.515137672424316

Token 1000: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005873094312846661
    2. 'value' → logprob: -5.255873203277588
    3. 'total' → logprob: -8.00587272644043
    4. 'sign' → logprob: -8.88087272644043
    5. '```' → logprob: -9.38087272644043
    6. 'self' → logprob: -10.38087272644043
    7. 'result' → logprob: -11.00587272644043
    8. 'val' → logprob: -11.38087272644043
    9. 'return' → logprob: -11.88087272644043
    10. 'num' → logprob: -13.13087272644043

Token 1001: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024120749905705452
    2. 'value' → logprob: -3.774120807647705
    3. 'total' → logprob: -7.899120807647705
    4. 'sign' → logprob: -8.024120330810547
    5. 'val' → logprob: -9.899120330810547
    6. '```' → logprob: -9.899120330810547
    7. 'result' → logprob: -10.274120330810547
    8. 'return' → logprob: -10.649120330810547
    9. ' value' → logprob: -12.024120330810547
    10. 'float' → logprob: -13.149120330810547

Token 1002: ' sign' (ID: 2232)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.5307474732398987
    2. '       ' → logprob: -1.280747413635254
    3. 'sign' (adapté à ' sign') → logprob: -2.780747413635254
    4. 'val' → logprob: -3.280747413635254
    5. 'total' → logprob: -3.530747413635254
    6. 'result' → logprob: -5.405747413635254
    7. 'return' → logprob: -7.905747413635254
    8. 'num' → logprob: -9.530747413635254
    9. 'v' → logprob: -10.155747413635254
    10. 's' → logprob: -10.155747413635254

Token 1003: '_val' (ID: 13694)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.49107155203819275
    2. ' =' → logprob: -1.2410715818405151
    3. '_value' → logprob: -2.4910714626312256
    4. '_val' → logprob: -4.741071701049805
    5. 'value' → logprob: -6.366071701049805
    6. '.' → logprob: -6.366071701049805
    7. 'self' → logprob: -6.491071701049805
    8. '=self' → logprob: -7.241071701049805
    9. '   ' → logprob: -7.741071701049805
    10. '.value' → logprob: -8.241071701049805

Token 1004: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2814520299434662
    2. ' =' → logprob: -1.4064520597457886
    3. '=self' → logprob: -9.406452178955078
    4. '()' → logprob: -9.531452178955078
    5. '       ' → logprob: -9.656452178955078
    6. 'self' → logprob: -10.906452178955078
    7. '(self' → logprob: -11.156452178955078
    8. ',' → logprob: -11.406452178955078
    9. ' *' → logprob: -11.656452178955078
    10. ')' → logprob: -11.656452178955078

Token 1005: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00021069261129014194
    2. ' self' → logprob: -8.500210762023926
    3. '       ' → logprob: -11.875210762023926
    4. '(self' → logprob: -16.50020980834961
    5. '   ' → logprob: -16.87520980834961
    6. '           ' → logprob: -16.87520980834961
    7. '-self' → logprob: -18.12520980834961
    8. '	self' → logprob: -19.25020980834961
    9. '     ' → logprob: -19.50020980834961
    10. '         ' → logprob: -20.12520980834961

Token 1006: '.sign' (ID: 27578)
  Prédit: '.sign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sign' → logprob: -0.0002613358374219388
    2. 'sign' → logprob: -8.250261306762695
    3. '.' → logprob: -17.125261306762695
    4. ' .' → logprob: -19.250261306762695
    5. '	sign' → logprob: -20.000261306762695
    6. '.sig' → logprob: -20.250261306762695
    7. ' sign' → logprob: -20.375261306762695
    8. '.Sign' → logprob: -20.500261306762695
    9. 'Sign' → logprob: -20.625261306762695
    10. '.value' → logprob: -20.625261306762695

Token 1007: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -4.739826181321405e-05
    2. '.' → logprob: -10.00004768371582
    3. ' .' → logprob: -13.25004768371582
    4. 'value' → logprob: -16.12504768371582
    5. ').' → logprob: -18.50004768371582
    6. '.val' → logprob: -19.75004768371582
    7. '.Value' → logprob: -20.25004768371582
    8. '.
' → logprob: -20.37504768371582
    9. '().' → logprob: -20.87504768371582
    10. '.values' → logprob: -21.12504768371582

Token 1008: '()
' (ID: 1234)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1315941959619522
    2. '
' → logprob: -3.006594181060791
    3. '       ' → logprob: -3.381594181060791
    4. '()' → logprob: -3.756594181060791
    5. '*' → logprob: -4.506594181060791
    6. '()
' → logprob: -6.506594181060791
    7. ',' → logprob: -6.756594181060791
    8. '*self' → logprob: -6.881594181060791
    9. '   ' → logprob: -7.381594181060791
    10. '        
' → logprob: -8.38159465789795

Token 1009: '       ' (ID: 309)
  Prédit: 'integer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'integer' → logprob: -0.5289665460586548
    2. '       ' → logprob: -1.0289665460586548
    3. 'int' → logprob: -3.1539664268493652
    4. ' integer' → logprob: -4.653966426849365
    5. ' int' → logprob: -8.028966903686523
    6. 'total' → logprob: -8.403966903686523
    7. '*' → logprob: -8.903966903686523
    8. ' *' → logprob: -9.528966903686523
    9. 'val' → logprob: -9.528966903686523
    10. ',' → logprob: -9.778966903686523

Token 1010: ' int' (ID: 677)
  Prédit: 'integer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'integer' → logprob: -0.47669893503189087
    2. 'int' (adapté à ' int') → logprob: -0.9766989350318909
    3. ' integer' → logprob: -6.976698875427246
    4. 'val' → logprob: -7.101698875427246
    5. 'intval' → logprob: -8.101698875427246
    6. 'value' → logprob: -8.476698875427246
    7. 'total' → logprob: -9.351698875427246
    8. ' int' → logprob: -9.726698875427246
    9. 'decimal' → logprob: -9.851698875427246
    10. 'result' → logprob: -10.351698875427246

Token 1011: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.002608356298878789
    2. 'eger' → logprob: -6.377608299255371
    3. 'val' → logprob: -7.127608299255371
    4. '_value' → logprob: -9.877608299255371
    5. 'e' → logprob: -10.627608299255371
    6. 'eg' → logprob: -11.377608299255371
    7. 'part' → logprob: -11.877608299255371
    8. '_part' → logprob: -12.127608299255371
    9. 'er' → logprob: -13.627608299255371
    10. 'Val' → logprob: -13.877608299255371

Token 1012: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5824020504951477
    2. ' =' → logprob: -0.8324020504951477
    3. '       ' → logprob: -5.207402229309082
    4. '+' → logprob: -7.957402229309082
    5. ' +' → logprob: -8.207402229309082
    6. '()' → logprob: -8.207402229309082
    7. '   ' → logprob: -11.082402229309082
    8. '*' → logprob: -11.082402229309082
    9. ' ' → logprob: -11.457402229309082
    10. '        ' → logprob: -12.332402229309082

Token 1013: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014167149551212788
    2. ' self' → logprob: -4.264167308807373
    3. '       ' → logprob: -12.639166831970215
    4. '(self' → logprob: -15.139166831970215
    5. '	self' → logprob: -16.26416778564453
    6. '[self' → logprob: -17.63916778564453
    7. '=self' → logprob: -17.76416778564453
    8. '   ' → logprob: -18.51416778564453
    9. '```' → logprob: -18.88916778564453
    10. '           ' → logprob: -19.13916778564453

Token 1014: '.integer' (ID: 68821)
  Prédit: 'integer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'integer' → logprob: -0.03805331513285637
    2. '.integer' → logprob: -3.288053274154663
    3. ' integer' → logprob: -11.663053512573242
    4. '.value' → logprob: -13.913053512573242
    5. '(integer' → logprob: -14.163053512573242
    6. '_integer' → logprob: -14.538053512573242
    7. 'teger' → logprob: -15.038053512573242
    8. 'value' → logprob: -15.288053512573242
    9. 'Integer' → logprob: -15.788053512573242
    10. '.' → logprob: -16.413053512573242

Token 1015: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -4.0484450437361374e-05
    2. 'value' → logprob: -10.125040054321289
    3. '().' → logprob: -15.375040054321289
    4. ' .' → logprob: -16.12504005432129
    5. '```' → logprob: -16.62504005432129
    6. '.' → logprob: -17.75004005432129
    7. '(value' → logprob: -17.75004005432129
    8. '
' → logprob: -19.00004005432129
    9. '   ' → logprob: -19.25004005432129
    10. ' value' → logprob: -19.62504005432129

Token 1016: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0919862687587738
    2. '
' → logprob: -3.2169861793518066
    3. '()' → logprob: -3.7169861793518066
    4. ' +' → logprob: -4.466986179351807
    5. '+' → logprob: -4.716986179351807
    6. '()
' → logprob: -6.341986179351807
    7. '()+' → logprob: -7.966986179351807
    8. ',' → logprob: -8.216986656188965
    9. '        
' → logprob: -8.716986656188965
    10. '        ' → logprob: -9.091986656188965

Token 1017: '       ' (ID: 309)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frac' → logprob: -0.25173965096473694
    2. '       ' → logprob: -1.7517396211624146
    3. ' frac' → logprob: -3.251739740371704
    4. 'fract' → logprob: -4.876739501953125
    5. 'fraction' → logprob: -6.251739501953125
    6. 'fr' → logprob: -7.626739501953125
    7. ' fract' → logprob: -9.126739501953125
    8. '
' → logprob: -9.501739501953125
    9. 'frag' → logprob: -9.876739501953125
    10. 'return' → logprob: -10.126739501953125

Token 1018: ' frac' (ID: 72308)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frac' (adapté à ' frac') → logprob: -0.004487561993300915
    2. 'fraction' → logprob: -6.50448751449585
    3. ' frac' → logprob: -6.75448751449585
    4. 'fract' → logprob: -6.87948751449585
    5. '       ' → logprob: -7.25448751449585
    6. '   ' → logprob: -9.754487991333008
    7. 'frag' → logprob: -11.754487991333008
    8. 'float' → logprob: -12.254487991333008
    9. 'fr' → logprob: -12.379487991333008
    10. 'return' → logprob: -13.754487991333008

Token 1019: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -1.9027791495318525e-05
    2. 'val' → logprob: -11.625019073486328
    3. '_value' → logprob: -11.625019073486328
    4. 'Val' → logprob: -15.250019073486328
    5. '.val' → logprob: -15.625019073486328
    6. ' =' → logprob: -16.250019073486328
    7. '_VAL' → logprob: -16.250019073486328
    8. '._' → logprob: -16.500019073486328
    9. '       ' → logprob: -17.000019073486328
    10. '	val' → logprob: -17.250019073486328

Token 1020: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759544968605042
    2. '=' → logprob: -0.8259544968605042
    3. '       ' → logprob: -11.57595443725586
    4. '        ' → logprob: -13.20095443725586
    5. ')' → logprob: -13.70095443725586
    6. ' ' → logprob: -14.07595443725586
    7. 'self' → logprob: -15.20095443725586
    8. '=self' → logprob: -15.32595443725586
    9. ':' → logprob: -15.45095443725586
    10. '   ' → logprob: -15.57595443725586

Token 1021: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002615742268972099
    2. ' self' → logprob: -8.250261306762695
    3. '(self' → logprob: -15.875261306762695
    4. '       ' → logprob: -16.875261306762695
    5. '0' → logprob: -18.125261306762695
    6. '	self' → logprob: -18.625261306762695
    7. '[self' → logprob: -18.875261306762695
    8. '=self' → logprob: -18.875261306762695
    9. '1' → logprob: -20.125261306762695
    10. '   ' → logprob: -20.250261306762695

Token 1022: '.f' (ID: 1196)
  Prédit: '.f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.f' → logprob: -0.010623060166835785
    2. '.value' → logprob: -4.760622978210449
    3. 'fraction' → logprob: -6.260622978210449
    4. 'value' → logprob: -9.26062297821045
    5. 'f' → logprob: -14.01062297821045
    6. '.' → logprob: -15.63562297821045
    7. 'frac' → logprob: -16.135623931884766
    8. '_fraction' → logprob: -16.760623931884766
    9. 'Fraction' → logprob: -16.885623931884766
    10. ' .' → logprob: -17.135623931884766

Token 1023: 'raction' (ID: 33644)
  Prédit: 'raction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raction' → logprob: -3.070975071750581e-05
    2. 'r' → logprob: -10.875030517578125
    3. 'fraction' → logprob: -11.500030517578125
    4. 'rac' → logprob: -14.250030517578125
    5. 'value' → logprob: -14.500030517578125
    6. 'action' → logprob: -15.000030517578125
    7. 'ractions' → logprob: -16.250030517578125
    8. 'alue' → logprob: -16.875030517578125
    9. 'unction' → logprob: -17.500030517578125
    10. 'actor' → logprob: -19.000030517578125

Token 1024: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -4.56102097814437e-05
    2. 'value' → logprob: -10.000045776367188
    3. ' .' → logprob: -16.375045776367188
    4. '.' → logprob: -17.750045776367188
    5. '   ' → logprob: -20.000045776367188
    6. '```' → logprob: -20.500045776367188
    7. '       ' → logprob: -21.000045776367188
    8. ' value' → logprob: -21.125045776367188
    9. '"value' → logprob: -21.125045776367188
    10. '
' → logprob: -21.375045776367188

Token 1025: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011857230216264725
    2. '
' → logprob: -4.636857032775879
    3. 'return' → logprob: -7.011857032775879
    4. ' return' → logprob: -7.636857032775879
    5. ',' → logprob: -7.761857032775879
    6. '<|end|>' → logprob: -9.261857032775879
    7. '        
' → logprob: -9.636857032775879
    8. 'result' → logprob: -10.511857032775879
    9. ')' → logprob: -11.261857032775879
    10. 'total' → logprob: -11.511857032775879

Token 1026: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016269792104139924
    2. 'return' → logprob: -7.001626968383789
    3. ' return' → logprob: -8.001626968383789
    4. 'result' → logprob: -8.751626968383789
    5. 'total' → logprob: -8.876626968383789
    6. ' total' → logprob: -10.126626968383789
    7. '
' → logprob: -10.876626968383789
    8. ' result' → logprob: -11.376626968383789
    9. 'value' → logprob: -12.376626968383789
    10. '        
' → logprob: -13.376626968383789

Token 1027: ' total' (ID: 3609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9901703000068665
    2. 'result' → logprob: -0.9901703000068665
    3. 'total' (adapté à ' total') → logprob: -2.2401702404022217
    4. 'return' → logprob: -2.2401702404022217
    5. 'value' → logprob: -3.2401702404022217
    6. 'val' → logprob: -5.990170478820801
    7. 'number' → logprob: -7.365170478820801
    8. ' total' → logprob: -7.365170478820801
    9. ' result' → logprob: -7.865170478820801
    10. ' return' → logprob: -8.1151704788208

Token 1028: '_val' (ID: 13694)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889099419116974
    2. ' =' → logprob: -2.5788910388946533
    3. '   ' → logprob: -14.578890800476074
    4. ')' → logprob: -14.703890800476074
    5. 'return' → logprob: -16.57889175415039
    6. ' ' → logprob: -16.82889175415039
    7. '_' → logprob: -16.82889175415039
    8. '*' → logprob: -16.95389175415039
    9. '.' → logprob: -16.95389175415039
    10. 's' → logprob: -17.07889175415039

Token 1029: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931471824645996
    2. ' =' → logprob: -0.6931471824645996
    3. ':' → logprob: -17.068147659301758
    4. '   ' → logprob: -17.443147659301758
    5. ' ' → logprob: -18.068147659301758
    6. '```' → logprob: -19.068147659301758
    7. '       ' → logprob: -19.318147659301758
    8. 's' → logprob: -19.693147659301758
    9. ')' → logprob: -19.693147659301758
    10. '=self' → logprob: -19.818147659301758

Token 1030: ' sign' (ID: 2232)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -9.758300438988954e-05
    2. ' sign' → logprob: -9.250097274780273
    3. '       ' → logprob: -13.750097274780273
    4. '(sign' → logprob: -15.125097274780273
    5. '	sign' → logprob: -17.500097274780273
    6. 'int' → logprob: -18.625097274780273
    7. 'float' → logprob: -19.250097274780273
    8. '   ' → logprob: -19.375097274780273
    9. 'sig' → logprob: -19.625097274780273
    10. 'f' → logprob: -19.875097274780273

Token 1031: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -1.9361264946837764e-07
    2. 'val' → logprob: -16.625
    3. '_' → logprob: -19.0
    4. '_VAL' → logprob: -20.625
    5. '[val' → logprob: -21.375
    6. ' _' → logprob: -21.625
    7. '*' → logprob: -21.625
    8. '_sign' → logprob: -21.75
    9. 'Val' → logprob: -22.0
    10. '(val' → logprob: -22.0

Token 1032: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4742652475833893
    2. '*' → logprob: -0.9742652177810669
    3. '*(' → logprob: -8.599265098571777
    4. ' ' → logprob: -13.599265098571777
    5. '(' → logprob: -14.474265098571777
    6. '```' → logprob: -14.474265098571777
    7. '()' → logprob: -14.724265098571777
    8. '   ' → logprob: -14.724265098571777
    9. '**' → logprob: -14.974265098571777
    10. ' ' → logprob: -16.349266052246094

Token 1033: ' (' (ID: 350)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.014634227380156517
    2. ' (' → logprob: -4.264634132385254
    3. '(total' → logprob: -8.014634132385254
    4. '(float' → logprob: -9.264634132385254
    5. '((' → logprob: -11.639634132385254
    6. '(' → logprob: -11.764634132385254
    7. '   ' → logprob: -12.139634132385254
    8. '(abs' → logprob: -12.139634132385254
    9. '(Int' → logprob: -13.139634132385254
    10. '(round' → logprob: -13.264634132385254

Token 1034: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -6.408677290892228e-05
    2. ' int' → logprob: -9.7500638961792
    3. '(int' → logprob: -12.1250638961792
    4. 'float' → logprob: -16.250064849853516
    5. '   ' → logprob: -16.625064849853516
    6. '(' → logprob: -16.750064849853516
    7. ')' → logprob: -17.625064849853516
    8. '
' → logprob: -18.000064849853516
    9. '[int' → logprob: -18.250064849853516
    10. ' (' → logprob: -18.500064849853516

Token 1035: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -4.842555426876061e-06
    2. 'val' → logprob: -12.250004768371582
    3. 'Val' → logprob: -18.6250057220459
    4. '```' → logprob: -20.3750057220459
    5. '_VAL' → logprob: -20.3750057220459
    6. 's' → logprob: -20.5000057220459
    7. 'ent' → logprob: -20.7500057220459
    8. 'value' → logprob: -21.0000057220459
    9. 'eger' → logprob: -21.0000057220459
    10. ' _' → logprob: -21.2500057220459

Token 1036: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3868741989135742
    2. '+' → logprob: -1.1368741989135742
    3. '+
' → logprob: -13.761874198913574
    4. ')' → logprob: -14.261874198913574
    5. ' +
' → logprob: -14.636874198913574
    6. ' ' → logprob: -15.011874198913574
    7. ' ' → logprob: -15.261874198913574
    8. '       ' → logprob: -15.761874198913574
    9. '```' → logprob: -16.51187515258789
    10. '
' → logprob: -16.63687515258789

Token 1037: ' frac' (ID: 72308)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frac' → logprob: -0.00043162284418940544
    2. ' frac' → logprob: -7.750431537628174
    3. 'frag' → logprob: -14.250432014465332
    4. '   ' → logprob: -16.500431060791016
    5. 'fract' → logprob: -17.375431060791016
    6. ' ' → logprob: -17.750431060791016
    7. '       ' → logprob: -17.875431060791016
    8. 'fr' → logprob: -17.875431060791016
    9. 'fraction' → logprob: -17.875431060791016
    10. 'frm' → logprob: -18.125431060791016

Token 1038: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.00012844942102674395
    2. 'al' → logprob: -9.000128746032715
    3. 'val' → logprob: -12.250128746032715
    4. 'o' → logprob: -18.0001277923584
    5. '       ' → logprob: -18.1251277923584
    6. '_VAL' → logprob: -18.5001277923584
    7. 'ial' → logprob: -18.6251277923584
    8. 'alc' → logprob: -18.8751277923584
    9. '   ' → logprob: -19.1251277923584
    10. '
' → logprob: -19.2501277923584

Token 1039: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31509581208229065
    2. ')
' → logprob: -1.3150957822799683
    3. '       ' → logprob: -6.315095901489258
    4. ')
' → logprob: -11.315095901489258
    5. ')

' → logprob: -12.065095901489258
    6. ')return' → logprob: -12.815095901489258
    7. ' )
' → logprob: -14.190095901489258
    8. ' )' → logprob: -14.690095901489258
    9. '))' → logprob: -14.815095901489258
    10. '   ' → logprob: -15.065095901489258

Token 1040: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022464848589152098
    2. 'return' → logprob: -6.752246379852295
    3. ' return' → logprob: -7.002246379852295
    4. '
' → logprob: -8.877246856689453
    5. '```' → logprob: -11.502246856689453
    6. '	' → logprob: -11.877246856689453
    7. '
' → logprob: -13.502246856689453
    8. '	return' → logprob: -13.502246856689453
    9. '`' → logprob: -13.752246856689453
    10. '   ' → logprob: -14.002246856689453

Token 1041: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0005589892389252782
    2. '       ' → logprob: -7.500558853149414
    3. 'if' → logprob: -12.750558853149414
    4. ' return' → logprob: -12.750558853149414
    5. '```' → logprob: -16.375558853149414
    6. '
' → logprob: -16.875558853149414
    7. '#' (adapté à ' #') → logprob: -18.000558853149414
    8. '{return' → logprob: -18.250558853149414
    9. '	return' → logprob: -18.750558853149414
    10. '   ' → logprob: -18.750558853149414

Token 1042: ' format' (ID: 6011)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00427059642970562
    2. 'if' → logprob: -5.504270553588867
    3. '#' → logprob: -9.254270553588867
    4. 'formatted' → logprob: -10.254270553588867
    5. ' return' → logprob: -10.879270553588867
    6. 'format' → logprob: -11.379270553588867
    7. 'result' → logprob: -12.254270553588867
    8. 'decimal' → logprob: -12.379270553588867
    9. '       ' → logprob: -12.629270553588867
    10. 'digits' → logprob: -12.754270553588867

Token 1043: ' output' (ID: 4733)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.024288296699523926
    2. '"{' → logprob: -4.524288177490234
    3. '{' → logprob: -5.149288177490234
    4. 'f' → logprob: -5.649288177490234
    5. '("{' → logprob: -6.149288177490234
    6. '(f' → logprob: -7.274288177490234
    7. '       ' → logprob: -8.399288177490234
    8. ' return' → logprob: -8.399288177490234
    9. '{return' → logprob: -8.774288177490234
    10. '{:' → logprob: -9.149288177490234

Token 1044: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6203441023826599
    2. 'return' → logprob: -0.8703441023826599
    3. ' return' → logprob: -3.4953441619873047
    4. '{' → logprob: -4.745344161987305
    5. '
' → logprob: -6.245344161987305
    6. 'if' → logprob: -7.245344161987305
    7. '```' → logprob: -7.245344161987305
    8. ' if' → logprob: -8.370344161987305
    9. '{return' → logprob: -8.495344161987305
    10. '{
' → logprob: -8.995344161987305

Token 1045: ' requested' (ID: 17222)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.00037228144356049597
    2. '"{' → logprob: -8.250371932983398
    3. 'str' → logprob: -9.250371932983398
    4. ' f' → logprob: -11.625371932983398
    5. ''{' → logprob: -13.375371932983398
    6. '"' → logprob: -13.625371932983398
    7. '   ' → logprob: -14.250371932983398
    8. '{' → logprob: -14.250371932983398
    9. 'format' → logprob: -14.625371932983398
    10. '(f' → logprob: -15.000371932983398

Token 1046: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1319650113582611
    2. 'return' → logprob: -2.381964921951294
    3. ' return' → logprob: -3.631964921951294
    4. '{' → logprob: -6.006965160369873
    5. '```' → logprob: -6.256965160369873
    6. '{return' → logprob: -9.506964683532715
    7. '
' → logprob: -9.756964683532715
    8. ' {' → logprob: -10.131964683532715
    9. '{:' → logprob: -10.131964683532715
    10. '`' → logprob: -10.256964683532715

Token 1047: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014564678072929382
    2. 'return' → logprob: -4.264564514160156
    3. ' return' → logprob: -8.014564514160156
    4. '```' → logprob: -9.764564514160156
    5. 'if' → logprob: -11.889564514160156
    6. ' if' → logprob: -12.639564514160156
    7. '
' → logprob: -14.139564514160156
    8. '`' → logprob: -14.514564514160156
    9. '{return' → logprob: -14.639564514160156
    10. '   ' → logprob: -14.889564514160156

Token 1048: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3949495255947113
    2. 'if' → logprob: -1.1449495553970337
    3. '       ' → logprob: -4.894949436187744
    4. ' if' → logprob: -8.144949913024902
    5. ' return' → logprob: -8.769949913024902
    6. '```' → logprob: -9.269949913024902
    7. 'f' → logprob: -12.269949913024902
    8. '   ' → logprob: -12.394949913024902
    9. 'result' → logprob: -12.519949913024902
    10. 'formatted' → logprob: -12.769949913024902

Token 1049: ' -' (ID: 533)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2603079080581665
    2. 'if' → logprob: -1.5103079080581665
    3. '       ' → logprob: -4.885307788848877
    4. ' return' → logprob: -7.635307788848877
    5. ' if' → logprob: -8.510308265686035
    6. 'result' → logprob: -10.635308265686035
    7. 'formatted' → logprob: -10.635308265686035
    8. '```' → logprob: -10.760308265686035
    9. '   ' → logprob: -11.260308265686035
    10. 'integer' → logprob: -12.385308265686035

Token 1050: ' omit' (ID: 113296)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6777868866920471
    2. 'f' → logprob: -1.5527868270874023
    3. 'if' → logprob: -1.5527868270874023
    4. ' if' → logprob: -3.8027868270874023
    5. ' f' → logprob: -3.9277868270874023
    6. ' return' → logprob: -4.302786827087402
    7. '"{' → logprob: -4.427786827087402
    8. '{' → logprob: -7.427786827087402
    9. ' "{' → logprob: -8.677786827087402
    10. 'format' → logprob: -8.927786827087402

Token 1051: ' trailing' (ID: 57985)
  Prédit: ' trailing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trailing' → logprob: -1.1463366746902466
    2. '"' → logprob: -1.7713366746902466
    3. ''' → logprob: -2.021336555480957
    4. '0' → logprob: -2.521336555480957
    5. ' leading' → logprob: -2.646336555480957
    6. ' '' → logprob: -3.021336555480957
    7. ' f' → logprob: -3.521336555480957
    8. '.' → logprob: -3.521336555480957
    9. '".' → logprob: -3.646336555480957
    10. 'f' → logprob: -3.646336555480957

Token 1052: ' zeros' (ID: 42274)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031428972724825144
    2. ' zeros' → logprob: -6.003142833709717
    3. ''' → logprob: -8.503143310546875
    4. '.' → logprob: -8.753143310546875
    5. 'zeros' → logprob: -8.753143310546875
    6. ' ' → logprob: -9.003143310546875
    7. '{' → logprob: -12.128143310546875
    8. 'f' → logprob: -12.503143310546875
    9. 'zero' → logprob: -12.503143310546875
    10. ' zero' → logprob: -13.003143310546875

Token 1053: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07797124236822128
    2. 'if' → logprob: -3.4529712200164795
    3. ' if' → logprob: -3.7029712200164795
    4. 'result' → logprob: -5.077971458435059
    5. 'return' → logprob: -5.827971458435059
    6. '
' → logprob: -6.327971458435059
    7. ' s' → logprob: -6.577971458435059
    8. 'value' → logprob: -6.827971458435059
    9. 's' → logprob: -6.952971458435059
    10. 'formatted' → logprob: -6.952971458435059

Token 1054: ' fraction' (ID: 33763)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.1277816891670227
    2. 'fraction' → logprob: -2.252781629562378
    3. 'decimal' → logprob: -5.002781867980957
    4. 'format' → logprob: -6.252781867980957
    5. ' f' → logprob: -6.377781867980957
    6. ' fractional' → logprob: -6.627781867980957
    7. 'the' → logprob: -6.752781867980957
    8. 'str' → logprob: -7.252781867980957
    9. '"{' → logprob: -8.002781867980957
    10. ''{' → logprob: -8.127781867980957

Token 1055: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1767953485250473
    2. 'if' → logprob: -2.426795244216919
    3. ' if' → logprob: -2.801795244216919
    4. 'f' → logprob: -5.551795482635498
    5. ',' → logprob: -6.051795482635498
    6. 's' → logprob: -6.676795482635498
    7. 'import' → logprob: -7.301795482635498
    8. 'return' → logprob: -7.426795482635498
    9. '{' → logprob: -7.676795482635498
    10. '
' → logprob: -7.676795482635498

Token 1056: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006058552302420139
    2. ' if' → logprob: -5.631058692932129
    3. 'if' → logprob: -6.631058692932129
    4. 'format' → logprob: -8.381058692932129
    5. 'return' → logprob: -8.506058692932129
    6. 'result' → logprob: -9.381058692932129
    7. ',' → logprob: -9.381058692932129
    8. '   ' → logprob: -9.506058692932129
    9. 'fraction' → logprob: -9.506058692932129
    10. 'f' → logprob: -9.631058692932129

Token 1057: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2508602440357208
    2. 'if' → logprob: -2.1258602142333984
    3. ' if' → logprob: -2.7508602142333984
    4. 'fraction' → logprob: -3.7508602142333984
    5. 'decimal' → logprob: -5.250860214233398
    6. 'frac' → logprob: -6.500860214233398
    7. 'result' → logprob: -6.500860214233398
    8. ' decimal' → logprob: -6.625860214233398
    9. 'formatted' → logprob: -6.625860214233398
    10. ' fractional' → logprob: -7.250860214233398

Token 1058: ' -' (ID: 533)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2968454957008362
    2. 'fraction' → logprob: -1.9218454360961914
    3. 'frac' → logprob: -2.6718454360961914
    4. '       ' → logprob: -3.9218454360961914
    5. 'decimal' → logprob: -4.796845436096191
    6. '   ' → logprob: -5.796845436096191
    7. 'result' → logprob: -6.171845436096191
    8. ' if' → logprob: -6.296845436096191
    9. 'integer' → logprob: -6.421845436096191
    10. 'formatted' → logprob: -6.671845436096191

Token 1059: ' output' (ID: 4733)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3383583426475525
    2. ' if' → logprob: -1.4633584022521973
    3. 'use' → logprob: -4.963358402252197
    4. ' omit' → logprob: -4.963358402252197
    5. 'include' → logprob: -5.088358402252197
    6. ' use' → logprob: -5.088358402252197
    7. 'format' → logprob: -5.713358402252197
    8. 'keep' → logprob: -5.838358402252197
    9. ' include' → logprob: -5.963358402252197
    10. 'omit' → logprob: -5.963358402252197

Token 1060: ' fraction' (ID: 33763)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.0673359632492065
    2. ' =' → logprob: -1.1923359632492065
    3. ' f' → logprob: -1.3173359632492065
    4. 'format' → logprob: -3.067336082458496
    5. '=f' → logprob: -4.692336082458496
    6. ' format' → logprob: -4.942336082458496
    7. '=' → logprob: -5.067336082458496
    8. '_str' → logprob: -5.442336082458496
    9. 'str' → logprob: -5.567336082458496
    10. '"{' → logprob: -6.192336082458496

Token 1061: ' as' (ID: 472)
  Prédit: '_str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.9931826591491699
    2. '_part' → logprob: -0.9931826591491699
    3. 'al' → logprob: -2.61818265914917
    4. 'part' → logprob: -2.74318265914917
    5. ' =' → logprob: -3.36818265914917
    6. '_parts' → logprob: -3.36818265914917
    7. '=' → logprob: -3.86818265914917
    8. '.' → logprob: -3.86818265914917
    9. '_string' → logprob: -6.74318265914917
    10. 'f' → logprob: -6.86818265914917

Token 1062: ' "' (ID: 392)
  Prédit: 'decimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'decimal' → logprob: -0.4493195116519928
    2. 'f' → logprob: -2.19931960105896
    3. 'str' → logprob: -2.82431960105896
    4. '.' → logprob: -2.94931960105896
    5. ''.' → logprob: -3.44931960105896
    6. 'integer' → logprob: -3.57431960105896
    7. '""' → logprob: -3.69931960105896
    8. '''' → logprob: -4.449319362640381
    9. 'string' → logprob: -4.574319362640381
    10. '"."' → logprob: -5.699319362640381

Token 1063: '0' (ID: 15)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6963168382644653
    2. 'f' → logprob: -1.4463168382644653
    3. '.{' → logprob: -2.196316719055176
    4. '0' → logprob: -3.071316719055176
    5. '{' → logprob: -3.446316719055176
    6. '".' → logprob: -3.446316719055176
    7. '."' → logprob: -4.696316719055176
    8. '"{' → logprob: -5.071316719055176
    9. '.f' → logprob: -5.196316719055176
    10. '""' → logprob: -5.446316719055176

Token 1064: '"' (ID: 1)
  Prédit: '."'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '."' → logprob: -0.08099440485239029
    2. '.' → logprob: -2.8309943675994873
    3. '"' → logprob: -4.080994606018066
    4. '.{' → logprob: -7.455994606018066
    5. '."+' → logprob: -7.705994606018066
    6. '.<' → logprob: -8.330994606018066
    7. '."""' → logprob: -9.080994606018066
    8. '.")' → logprob: -9.830994606018066
    9. '.",' → logprob: -9.830994606018066
    10. '."
' → logprob: -10.080994606018066

Token 1065: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42584121227264404
    2. 'if' → logprob: -1.675841212272644
    3. ' if' → logprob: -1.925841212272644
    4. 'f' → logprob: -5.300841331481934
    5. '```' → logprob: -5.925841331481934
    6. '
' → logprob: -6.175841331481934
    7. '{' → logprob: -7.550841331481934
    8. '.' → logprob: -7.675841331481934
    9. '.f' → logprob: -7.800841331481934
    10. '   ' → logprob: -7.800841331481934

Token 1066: ' fractional' (ID: 136350)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'frac' → logprob: -0.13082516193389893
    2. ' frac' → logprob: -2.7558250427246094
    3. 'fraction' → logprob: -3.6308250427246094
    4. 'total' → logprob: -4.130825042724609
    5. 'int' → logprob: -5.255825042724609
    6. ' total' → logprob: -5.755825042724609
    7. ' no' → logprob: -6.005825042724609
    8. 'no' → logprob: -7.130825042724609
    9. ' int' → logprob: -7.505825042724609
    10. '0' → logprob: -7.755825042724609

Token 1067: ' part' (ID: 997)
  Prédit: '_part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.509192168712616
    2. '_' → logprob: -1.6341922283172607
    3. 'part' → logprob: -1.7591922283172607
    4. ' part' → logprob: -3.5091922283172607
    5. '==' → logprob: -7.009191989898682
    6. '_parts' → logprob: -8.50919246673584
    7. ' ==' → logprob: -9.38419246673584
    8. '_value' → logprob: -9.38419246673584
    9. '=' → logprob: -9.63419246673584
    10. '.' → logprob: -9.63419246673584

Token 1068: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013185410760343075
    2. ' if' → logprob: -4.638185501098633
    3. 'if' → logprob: -5.888185501098633
    4. '
' → logprob: -8.013185501098633
    5. ',' → logprob: -8.763185501098633
    6. 'return' → logprob: -10.513185501098633
    7. '.' → logprob: -10.763185501098633
    8. '   ' → logprob: -10.888185501098633
    9. '```' → logprob: -11.138185501098633
    10. 'f' → logprob: -11.388185501098633

Token 1069: ' zero' (ID: 12421)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014691551215946674
    2. 'zero' → logprob: -4.264691352844238
    3. 'exact' → logprob: -7.764691352844238
    4. ' zero' → logprob: -9.264691352844238
    5. ' ' → logprob: -11.889691352844238
    6. ' exactly' → logprob: -13.639691352844238
    7. 'empty' → logprob: -15.139691352844238
    8. '000' → logprob: -15.264691352844238
    9. '```' → logprob: -16.514692306518555
    10. 'equal' → logprob: -16.764692306518555

Token 1070: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006577650085091591
    2. '
' → logprob: -5.131577491760254
    3. 'if' → logprob: -7.756577491760254
    4. ' if' → logprob: -8.756577491760254
    5. '   ' → logprob: -11.131577491760254
    6. '        
' → logprob: -11.631577491760254
    7. 'return' → logprob: -11.631577491760254
    8. 'fraction' → logprob: -11.881577491760254
    9. '```' → logprob: -11.881577491760254
    10. 'format' → logprob: -12.381577491760254

Token 1071: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.037964027374982834
    2. 'if' → logprob: -3.537964105606079
    3. ' if' → logprob: -5.1629638671875
    4. 'fraction' → logprob: -6.2879638671875
    5. '```' → logprob: -8.2879638671875
    6. 'return' → logprob: -9.4129638671875
    7. '
' → logprob: -9.5379638671875
    8. 'frac' → logprob: -10.0379638671875
    9. '   ' → logprob: -10.4129638671875
    10. ' fraction' → logprob: -10.7879638671875

Token 1072: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.36761385202407837
    2. '       ' → logprob: -1.7426137924194336
    3. 'fraction' → logprob: -2.4926137924194336
    4. ' if' → logprob: -3.1176137924194336
    5. 'integer' → logprob: -6.492613792419434
    6. 'frac' → logprob: -6.492613792419434
    7. 'result' → logprob: -6.617613792419434
    8. 'int' → logprob: -8.117613792419434
    9. ' fraction' → logprob: -8.367613792419434
    10. 'decimal' → logprob: -8.617613792419434

Token 1073: ' Use' (ID: 7649)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10526197403669357
    2. 'integer' → logprob: -2.980262041091919
    3. 'fraction' → logprob: -3.605262041091919
    4. '       ' → logprob: -4.35526180267334
    5. 'int' → logprob: -4.98026180267334
    6. 'frac' → logprob: -6.73026180267334
    7. '   ' → logprob: -7.73026180267334
    8. 'result' → logprob: -8.35526180267334
    9. 'whole' → logprob: -8.73026180267334
    10. 'decimal' → logprob: -9.98026180267334

Token 1074: ' exact' (ID: 6354)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.006967201363295317
    2. 'format' → logprob: -5.631967067718506
    3. ' f' → logprob: -5.881967067718506
    4. '```' → logprob: -9.006967544555664
    5. '"{' → logprob: -9.131967544555664
    6. ''{' → logprob: -9.381967544555664
    7. 'str' → logprob: -10.256967544555664
    8. ' format' → logprob: -10.256967544555664
    9. 'g' → logprob: -10.381967544555664
    10. ''f' → logprob: -10.756967544555664

Token 1075: ' arithmetic' (ID: 81645)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5215288996696472
    2. 'format' → logprob: -1.521528959274292
    3. 'string' → logprob: -3.271528959274292
    4. 'value' → logprob: -3.396528959274292
    5. 'formatted' → logprob: -3.646528959274292
    6. '_str' → logprob: -4.146528720855713
    7. '_format' → logprob: -4.646528720855713
    8. ' =' → logprob: -4.771528720855713
    9. 'decimal' → logprob: -4.771528720855713
    10. '_repr' → logprob: -5.146528720855713

Token 1076: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024993177503347397
    2. '
' → logprob: -6.127499103546143
    3. 'if' → logprob: -8.7524995803833
    4. '```' → logprob: -9.8774995803833
    5. ' if' → logprob: -10.0024995803833
    6. '   ' → logprob: -11.7524995803833
    7. 'fraction' → logprob: -11.7524995803833
    8. 'total' → logprob: -12.1274995803833
    9. '           ' → logprob: -12.2524995803833
    10. 'num' → logprob: -12.2524995803833

Token 1077: ' fractional' (ID: 136350)
  Prédit: 'fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fraction' → logprob: -0.12205635011196136
    2. 'frac' → logprob: -2.872056245803833
    3. 'total' → logprob: -4.247056484222412
    4. 'decimal' → logprob: -4.622056484222412
    5. 'from' → logprob: -4.622056484222412
    6. 'sign' → logprob: -5.122056484222412
    7. 'integer' → logprob: -5.372056484222412
    8. 'the' → logprob: -5.747056484222412
    9. 'value' → logprob: -6.122056484222412
    10. 'dec' → logprob: -6.872056484222412

Token 1078: ' part' (ID: 997)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.14204765856266022
    2. '_part' → logprob: -2.142047643661499
    3. ' part' → logprob: -4.517047882080078
    4. 'parts' → logprob: -5.892047882080078
    5. 'from' → logprob: -8.017047882080078
    6. 'value' → logprob: -8.517047882080078
    7. '_parts' → logprob: -8.642047882080078
    8. '_str' → logprob: -9.017047882080078
    9. 'import' → logprob: -9.392047882080078
    10. '_val' → logprob: -9.642047882080078

Token 1079: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014039215166121721
    2. '
' → logprob: -7.37640380859375
    3. 'if' → logprob: -7.50140380859375
    4. ' if' → logprob: -8.62640380859375
    5. '```' → logprob: -11.00140380859375
    6. 'fraction' → logprob: -11.25140380859375
    7. '   ' → logprob: -12.00140380859375
    8. '        
' → logprob: -13.62640380859375
    9. '           ' → logprob: -13.75140380859375
    10. 'from' → logprob: -13.87640380859375

Token 1080: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5109402537345886
    2. 'if' → logprob: -1.7609403133392334
    3. 'fraction' → logprob: -2.0109403133392334
    4. ' if' → logprob: -2.6359403133392334
    5. '```' → logprob: -4.885940074920654
    6. 'frac' → logprob: -5.135940074920654
    7. 'integer' → logprob: -6.010940074920654
    8. ' fraction' → logprob: -6.385940074920654
    9. 'result' → logprob: -7.135940074920654
    10. 'int' → logprob: -7.135940074920654

Token 1081: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4014877378940582
    2. 'if' → logprob: -1.9014877080917358
    3. 'fraction' → logprob: -1.9014877080917358
    4. 'frac' → logprob: -4.276487827301025
    5. '       ' → logprob: -4.276487827301025
    6. 'import' → logprob: -6.276487827301025
    7. 'integer' → logprob: -7.276487827301025
    8. 'int' → logprob: -7.401487827301025
    9. 'result' → logprob: -7.901487827301025
    10. 'decimal' → logprob: -7.901487827301025

Token 1082: ' The' (ID: 623)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.16562099754810333
    2. 'fraction' → logprob: -2.665621042251587
    3. 'if' → logprob: -2.790621042251587
    4. 'frac' → logprob: -4.540620803833008
    5. '       ' → logprob: -5.665620803833008
    6. 'integer' → logprob: -5.915620803833008
    7. 'import' → logprob: -6.165620803833008
    8. 'int' → logprob: -6.790620803833008
    9. '   ' → logprob: -7.165620803833008
    10. 'decimal' → logprob: -7.415620803833008

Token 1083: ' fractional' (ID: 136350)
  Prédit: 'fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fraction' → logprob: -0.14087072014808655
    2. 'frac' → logprob: -2.5158708095550537
    3. 'return' → logprob: -4.265870571136475
    4. 'if' → logprob: -5.015870571136475
    5. 'from' → logprob: -5.140870571136475
    6. 'format' → logprob: -5.140870571136475
    7. 'formatted' → logprob: -5.390870571136475
    8. 'f' → logprob: -6.140870571136475
    9. 'result' → logprob: -6.140870571136475
    10. 'def' → logprob: -6.265870571136475

Token 1084: ' part' (ID: 997)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.10450674593448639
    2. '_part' → logprob: -2.354506731033325
    3. ' part' → logprob: -5.979506969451904
    4. '_str' → logprob: -7.354506969451904
    5. 'parts' → logprob: -8.354506492614746
    6. 'string' → logprob: -8.604506492614746
    7. '   ' → logprob: -9.104506492614746
    8. '_parts' → logprob: -9.354506492614746
    9. '_val' → logprob: -9.479506492614746
    10. '
' → logprob: -9.854506492614746

Token 1085: ' can' (ID: 665)
  Prédit: '_str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.44707685708999634
    2. 'is' → logprob: -1.5720767974853516
    3. '=' → logprob: -3.0720767974853516
    4. ' is' → logprob: -4.322076797485352
    5. 'part' → logprob: -4.322076797485352
    6. 'str' → logprob: -4.572076797485352
    7. '_part' → logprob: -4.697076797485352
    8. ' =' → logprob: -4.697076797485352
    9. 'fraction' → logprob: -4.822076797485352
    10. 'string' → logprob: -4.947076797485352

Token 1086: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.025460999459028244
    2. ' be' → logprob: -3.900460958480835
    3. 'have' → logprob: -5.525461196899414
    4. 'not' → logprob: -8.525461196899414
    5. '```' → logprob: -9.150461196899414
    6. 'also' → logprob: -9.525461196899414
    7. 'remain' → logprob: -9.900461196899414
    8. 'always' → logprob: -10.275461196899414
    9. '.' → logprob: -10.275461196899414
    10. 'from' → logprob: -10.400461196899414

Token 1087: ' converted' (ID: 28358)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9179671406745911
    2. 'represented' → logprob: -1.0429670810699463
    3. 'exact' → logprob: -2.7929670810699463
    4. 'express' → logprob: -2.9179670810699463
    5. 'repr' → logprob: -3.5429670810699463
    6. 'sum' → logprob: -4.042967319488525
    7. 'fraction' → logprob: -4.417967319488525
    8. 'from' → logprob: -4.417967319488525
    9. 'fra' → logprob: -4.542967319488525
    10. 'Fraction' → logprob: -4.542967319488525

Token 1088: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.025425449013710022
    2. 'from' → logprob: -4.525425434112549
    3. 'exact' → logprob: -5.275425434112549
    4. 'into' → logprob: -5.400425434112549
    5. 'using' → logprob: -6.400425434112549
    6. '       ' → logprob: -6.650425434112549
    7. 'as' → logprob: -7.400425434112549
    8. ' to' → logprob: -7.650425434112549
    9. 'by' → logprob: -8.150425910949707
    10. '```' → logprob: -9.525425910949707

Token 1089: ' fraction' (ID: 33763)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8974112272262573
    2. 'fraction' → logprob: -1.1474112272262573
    3. 'str' → logprob: -2.272411346435547
    4. 'fra' → logprob: -2.772411346435547
    5. 'Fraction' → logprob: -3.022411346435547
    6. 'decimal' → logprob: -3.772411346435547
    7. 'string' → logprob: -4.522411346435547
    8. 'f' → logprob: -4.522411346435547
    9. 'float' → logprob: -5.022411346435547
    10. 'binary' → logprob: -5.647411346435547

Token 1090: ' for' (ID: 395)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.1315155029296875
    2. '       ' → logprob: -2.1315155029296875
    3. ' from' → logprob: -6.2565155029296875
    4. '
' → logprob: -6.5065155029296875
    5. 'import' → logprob: -7.5065155029296875
    6. '#' → logprob: -8.756515502929688
    7. ')' → logprob: -9.881515502929688
    8. ',' → logprob: -10.131515502929688
    9. '=' → logprob: -10.131515502929688
    10. ' =' → logprob: -10.256515502929688

Token 1091: ' exact' (ID: 6354)
  Prédit: 'exact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exact' → logprob: -1.0980708599090576
    2. 'den' → logprob: -2.0980708599090576
    3. 'precision' → logprob: -2.4730708599090576
    4. 'prec' → logprob: -2.8480708599090576
    5. 'display' → logprob: -3.0980708599090576
    6. 'string' → logprob: -3.0980708599090576
    7. 'decimal' → logprob: -3.2230708599090576
    8. 'fraction' → logprob: -3.2230708599090576
    9. ' denominator' → logprob: -3.3480708599090576
    10. 'accur' → logprob: -3.7230708599090576

Token 1092: 'ness' (ID: 2816)
  Prédit: 'representation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'representation' → logprob: -0.43717706203460693
    2. 'from' → logprob: -1.187177062034607
    3. 'decimal' → logprob: -4.5621771812438965
    4. 'den' → logprob: -4.5621771812438965
    5. ' representation' → logprob: -5.0621771812438965
    6. 'string' → logprob: -5.1871771812438965
    7. '```' → logprob: -5.3121771812438965
    8. 'value' → logprob: -6.0621771812438965
    9. 'repr' → logprob: -6.1871771812438965
    10. 'rep' → logprob: -7.0621771812438965

Token 1093: ':
' (ID: 734)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6038355231285095
    2. '       ' → logprob: -0.8538355231285095
    3. '
' → logprob: -3.7288355827331543
    4. ' from' → logprob: -6.228835582733154
    5. '```' → logprob: -7.228835582733154
    6. '        
' → logprob: -8.103835105895996
    7. 'import' → logprob: -8.478835105895996
    8. 'if' → logprob: -10.103835105895996
    9. ',' → logprob: -10.478835105895996
    10. '#' → logprob: -10.478835105895996

Token 1094: '       ' (ID: 309)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5089877843856812
    2. '       ' → logprob: -1.1339877843856812
    3. ' from' → logprob: -2.7589879035949707
    4. '```' → logprob: -4.383987903594971
    5. 'import' → logprob: -8.008987426757812
    6. 'fraction' → logprob: -8.133987426757812
    7. '``' → logprob: -8.508987426757812
    8. 'return' → logprob: -9.508987426757812
    9. ' return' → logprob: -9.633987426757812
    10. ' numerator' → logprob: -9.633987426757812

Token 1095: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.0024437890388071537
    2. '       ' → logprob: -6.377443790435791
    3. 'fraction' → logprob: -8.252443313598633
    4. 'if' → logprob: -8.752443313598633
    5. 'frac' → logprob: -9.002443313598633
    6. 'numer' → logprob: -9.502443313598633
    7. '#' (adapté à ' #') → logprob: -9.752443313598633
    8. 'import' → logprob: -10.502443313598633
    9. 'den' → logprob: -11.127443313598633
    10. '```' → logprob: -11.752443313598633

Token 1096: ' Since' (ID: 12265)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.0012280851369723678
    2. '       ' → logprob: -7.751227855682373
    3. 'fraction' → logprob: -7.876227855682373
    4. 'if' → logprob: -8.626228332519531
    5. 'numer' → logprob: -9.501228332519531
    6. 'frac' → logprob: -9.501228332519531
    7. 'import' → logprob: -10.376228332519531
    8. 'den' → logprob: -11.376228332519531
    9. '   ' → logprob: -11.376228332519531
    10. '#' → logprob: -11.376228332519531

Token 1097: ' fractional' (ID: 136350)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'frac' → logprob: -0.1974341720342636
    2. 'the' → logprob: -2.697434186935425
    3. 'fraction' → logprob: -3.947434186935425
    4. '(' → logprob: -4.322433948516846
    5. 'self' → logprob: -4.322433948516846
    6. 'total' → logprob: -4.447433948516846
    7. '2' → logprob: -4.447433948516846
    8. '0' → logprob: -4.447433948516846
    9. ' frac' → logprob: -4.697433948516846
    10. 'from' → logprob: -4.947433948516846

Token 1098: ' part' (ID: 997)
  Prédit: '_part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.0453806072473526
    2. 'part' → logprob: -4.295380592346191
    3. '_val' → logprob: -4.545380592346191
    4. ' part' → logprob: -4.795380592346191
    5. '_' → logprob: -5.295380592346191
    6. '_parts' → logprob: -5.795380592346191
    7. '_bits' → logprob: -6.670380592346191
    8. '_value' → logprob: -7.295380592346191
    9. ' =' → logprob: -7.420380592346191
    10. '=' → logprob: -8.420380592346191

Token 1099: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.6975978016853333
    2. ' is' → logprob: -1.6975977420806885
    3. '=' → logprob: -1.8225977420806885
    4. 'can' → logprob: -3.8225977420806885
    5. 'bits' → logprob: -4.072597980499268
    6. '       ' → logprob: -4.072597980499268
    7. ' =' → logprob: -4.197597980499268
    8. 'has' → logprob: -4.322597980499268
    9. ' consists' → logprob: -4.447597980499268
    10. 'rep' → logprob: -4.697597980499268

Token 1100: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.1263331025838852
    2. 'a' → logprob: -2.626332998275757
    3. '7' → logprob: -4.501333236694336
    4. '0' → logprob: -4.626333236694336
    5. 'self' → logprob: -5.001333236694336
    6. 'bits' → logprob: -5.626333236694336
    7. ' sum' → logprob: -5.876333236694336
    8. 'represented' → logprob: -6.501333236694336
    9. 'exact' → logprob: -6.626333236694336
    10. 'com' → logprob: -6.751333236694336

Token 1101: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -1.0857346057891846
    2. '       ' → logprob: -1.3357346057891846
    3. ' of' → logprob: -1.7107346057891846
    4. '(' → logprob: -1.8357346057891846
    5. 'from' → logprob: -4.3357343673706055
    6. '   ' → logprob: -4.8357343673706055
    7. ' (' → logprob: -4.8357343673706055
    8. '=' → logprob: -5.2107343673706055
    9. ' =' → logprob: -5.3357343673706055
    10. '0' → logprob: -5.7107343673706055

Token 1102: ' (' (ID: 350)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.059538230299949646
    2. 'bits' → logprob: -3.8095381259918213
    3. 'b' → logprob: -4.9345383644104
    4. '(' → logprob: -5.1845383644104
    5. '[' → logprob: -5.1845383644104
    6. '(bit' → logprob: -5.6845383644104
    7. ' bit' → logprob: -6.0595383644104
    8. 'fra' → logprob: -6.4345383644104
    9. 'i' → logprob: -6.4345383644104
    10. '[i' → logprob: -6.6845383644104

Token 1103: 'b' (ID: 65)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3684850037097931
    2. 'bit' → logprob: -1.3684849739074707
    3. 'Fraction' → logprob: -4.243484973907471
    4. '(' → logprob: -4.243484973907471
    5. '1' → logprob: -4.868484973907471
    6. 'bits' → logprob: -5.743484973907471
    7. 'Bit' → logprob: -5.993484973907471
    8. ')' → logprob: -5.993484973907471
    9. 'b' → logprob: -6.243484973907471
    10. 'frac' → logprob: -6.618484973907471

Token 1104: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.9498390555381775
    2. 'i' → logprob: -1.1998391151428223
    3. '1' → logprob: -1.6998391151428223
    4. '**' → logprob: -3.3248391151428223
    5. '0' → logprob: -3.5748391151428223
    6. '(' → logprob: -4.324839115142822
    7. ')' → logprob: -4.574839115142822
    8. '(i' → logprob: -4.574839115142822
    9. '[i' → logprob: -4.949839115142822
    10. ' ' → logprob: -5.824839115142822

Token 1105: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.18870697915554047
    2. ')' → logprob: -2.938706874847412
    3. '[i' → logprob: -3.313706874847412
    4. '```' → logprob: -3.938706874847412
    5. '*' → logprob: -4.063706874847412
    6. ' /' → logprob: -4.563706874847412
    7. '(i' → logprob: -4.938706874847412
    8. '/' → logprob: -5.188706874847412
    9. ' **' → logprob: -5.438706874847412
    10. '**' → logprob: -5.688706874847412

Token 1106: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23387257754802704
    2. '0' → logprob: -1.7338725328445435
    3. 'Fraction' → logprob: -3.483872652053833
    4. ')' → logprob: -7.858872413635254
    5. 'from' → logprob: -8.483872413635254
    6. ' (' → logprob: -9.108872413635254
    7. 'fraction' → logprob: -9.358872413635254
    8. 'Decimal' → logprob: -9.608872413635254
    9. '2' → logprob: -9.858872413635254
    10. '`' → logprob: -9.983872413635254

Token 1107: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14799031615257263
    2. '0' → logprob: -2.1479902267456055
    3. 'Fraction' → logprob: -3.8979902267456055
    4. 'Decimal' → logprob: -8.272990226745605
    5. ')' → logprob: -9.647990226745605
    6. 'from' → logprob: -9.772990226745605
    7. 'fraction' → logprob: -10.022990226745605
    8. '`' → logprob: -11.147990226745605
    9. 'pow' → logprob: -11.272990226745605
    10. ' (' → logprob: -11.272990226745605

Token 1108: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.0243105199187994
    2. '/(' → logprob: -3.77431058883667
    3. ' /' → logprob: -7.52431058883667
    4. '2' → logprob: -8.399310111999512
    5. '0' → logprob: -8.399310111999512
    6. '```' → logprob: -10.274310111999512
    7. '(' → logprob: -11.774310111999512
    8. ')/(' → logprob: -11.899310111999512
    9. '/
' → logprob: -12.774310111999512
    10. '
' → logprob: -13.024310111999512

Token 1109: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.029761716723442078
    2. '(' → logprob: -3.529761791229248
    3. '```' → logprob: -13.02976131439209
    4. '`' → logprob: -13.15476131439209
    5. '(two' → logprob: -13.40476131439209
    6. ' (' → logprob: -13.40476131439209
    7. '{' → logprob: -13.90476131439209
    8. '
' → logprob: -14.15476131439209
    9. '(str' → logprob: -14.52976131439209
    10. '(
' → logprob: -14.90476131439209

Token 1110: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.2902975380420685
    2. ')' → logprob: -1.665297508239746
    3. ')**' → logprob: -3.165297508239746
    4. '^' → logprob: -4.915297508239746
    5. ' **' → logprob: -5.540297508239746
    6. 'i' → logprob: -5.540297508239746
    7. ')i' → logprob: -6.165297508239746
    8. ')^' → logprob: -7.415297508239746
    9. '```' → logprob: -7.540297508239746
    10. '),' → logprob: -7.665297508239746

Token 1111: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.2762428822461516e-05
    2. ' i' → logprob: -10.375052452087402
    3. '`' → logprob: -12.125052452087402
    4. '1' → logprob: -12.375052452087402
    5. '```' → logprob: -12.625052452087402
    6. '
' → logprob: -12.750052452087402
    7. ')' → logprob: -13.000052452087402
    8. '_i' → logprob: -14.000052452087402
    9. '{i' → logprob: -14.000052452087402
    10. ')i' → logprob: -14.500052452087402

Token 1112: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.044150929898023605
    2. ')
' → logprob: -4.1691508293151855
    3. ')`' → logprob: -4.6691508293151855
    4. '),' → logprob: -5.0441508293151855
    5. ')**' → logprob: -5.4191508293151855
    6. '))' → logprob: -6.2941508293151855
    7. ')")
' → logprob: -6.9191508293151855
    8. ')...' → logprob: -7.2941508293151855
    9. ')",' → logprob: -7.2941508293151855
    10. ' )' → logprob: -7.6691508293151855

Token 1113: ' denominator' (ID: 101279)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3669545352458954
    2. '       ' → logprob: -1.9919545650482178
    3. '#' → logprob: -2.1169545650482178
    4. 'fraction' → logprob: -3.3669545650482178
    5. 'frac' → logprob: -5.616954326629639
    6. 'import' → logprob: -5.866954326629639
    7. ' from' → logprob: -6.616954326629639
    8. 'result' → logprob: -6.741954326629639
    9. 'numer' → logprob: -6.866954326629639
    10. ' numerator' → logprob: -7.116954326629639

Token 1114: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5058184266090393
    2. ' =' → logprob: -1.1308183670043945
    3. ' is' → logprob: -3.0058183670043945
    4. 'is' → logprob: -5.1308183670043945
    5. '**' → logprob: -5.3808183670043945
    6. 's' → logprob: -5.6308183670043945
    7. '```' → logprob: -6.2558183670043945
    8. ')' → logprob: -6.3808183670043945
    9. 'den' → logprob: -7.1308183670043945
    10. ' can' → logprob: -7.1308183670043945

Token 1115: ' power' (ID: 3470)
  Prédit: '128'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '128' → logprob: -0.0022192494943737984
    2. '2' → logprob: -7.252219200134277
    3. 'str' → logprob: -7.252219200134277
    4. '"' → logprob: -7.627219200134277
    5. '127' → logprob: -8.627219200134277
    6. '`' → logprob: -10.252219200134277
    7. '1' → logprob: -10.252219200134277
    8. ''' → logprob: -10.377219200134277
    9. ' ' → logprob: -12.002219200134277
    10. 'pow' → logprob: -12.627219200134277

Token 1116: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.08226028829813004
    2. '       ' → logprob: -3.3322603702545166
    3. ' of' → logprob: -3.3322603702545166
    4. '2' → logprob: -5.7072601318359375
    5. '           ' → logprob: -6.7072601318359375
    6. '   ' → logprob: -6.8322601318359375
    7. ' ' → logprob: -7.8322601318359375
    8. '_of' → logprob: -8.207260131835938
    9. '      ' → logprob: -8.832260131835938
    10. '        ' → logprob: -8.832260131835938

Token 1117: ' two' (ID: 1920)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004041594918817282
    2. '7' → logprob: -5.75404167175293
    3. '10' → logprob: -7.50404167175293
    4. 'two' → logprob: -8.87904167175293
    5. ' ' → logprob: -9.25404167175293
    6. ' two' → logprob: -10.00404167175293
    7. '```' → logprob: -11.50404167175293
    8. '`' → logprob: -12.12904167175293
    9. 'Two' → logprob: -12.25404167175293
    10. '``' → logprob: -12.75404167175293

Token 1118: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09968069195747375
    2. 'from' → logprob: -2.5996806621551514
    3. '
' → logprob: -4.0996809005737305
    4. '#' → logprob: -7.0996809005737305
    5. '        
' → logprob: -7.4746809005737305
    6. ' from' → logprob: -7.5996809005737305
    7. 'import' → logprob: -7.5996809005737305
    8. ',' → logprob: -8.09968090057373
    9. '```' → logprob: -8.34968090057373
    10. 'def' → logprob: -8.47468090057373

Token 1119: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020969238132238388
    2. 'from' → logprob: -4.645969390869141
    3. '```' → logprob: -5.770969390869141
    4. ' numerator' → logprob: -6.145969390869141
    5. 'fraction' → logprob: -6.270969390869141
    6. 'numer' → logprob: -6.395969390869141
    7. ' denominator' → logprob: -7.645969390869141
    8. ' from' → logprob: -7.895969390869141
    9. 'den' → logprob: -8.02096939086914
    10. 'if' → logprob: -8.64596939086914

Token 1120: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13793739676475525
    2. 'from' → logprob: -2.387937307357788
    3. 'numer' → logprob: -4.387937545776367
    4. '
' → logprob: -5.137937545776367
    5. ' numerator' → logprob: -5.137937545776367
    6. 'den' → logprob: -5.887937545776367
    7. 'fraction' → logprob: -5.887937545776367
    8. 'if' → logprob: -6.262937545776367
    9. ' denominator' → logprob: -7.012937545776367
    10. 'num' → logprob: -7.137937545776367

Token 1121: ' Use' (ID: 7649)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.02208160236477852
    2. '       ' → logprob: -4.39708137512207
    3. 'if' → logprob: -5.77208137512207
    4. 'numer' → logprob: -5.89708137512207
    5. 'den' → logprob: -6.14708137512207
    6. 'fraction' → logprob: -7.27208137512207
    7. '#' → logprob: -7.77208137512207
    8. 'frac' → logprob: -8.52208137512207
    9. 'num' → logprob: -9.27208137512207
    10. 'return' → logprob: -10.64708137512207

Token 1122: ' fractions' (ID: 110523)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.0027434122748672962
    2. 'Fraction' → logprob: -6.877743244171143
    3. 'fra' → logprob: -7.502743244171143
    4. 'fraction' → logprob: -7.752743244171143
    5. 'def' → logprob: -7.877743244171143
    6. 'f' → logprob: -9.7527437210083
    7. '#' → logprob: -9.8777437210083
    8. 'self' → logprob: -10.0027437210083
    9. 'import' → logprob: -10.3777437210083
    10. 'frac' → logprob: -10.5027437210083

Token 1123: ' to' (ID: 316)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.04827765002846718
    2. ' from' → logprob: -3.1732776165008545
    3. 'import' → logprob: -5.298277854919434
    4. '.from' → logprob: -8.798277854919434
    5. '
' → logprob: -10.048277854919434
    6. ' import' → logprob: -10.173277854919434
    7. '.F' → logprob: -11.298277854919434
    8. '_from' → logprob: -12.298277854919434
    9. 'From' → logprob: -13.298277854919434
    10. ':' → logprob: -13.298277854919434

Token 1124: ' avoid' (ID: 8397)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.38997742533683777
    2. 'import' → logprob: -1.1399774551391602
    3. 'Fraction' → logprob: -6.01497745513916
    4. ' from' → logprob: -7.88997745513916
    5. 'fra' → logprob: -9.51497745513916
    6. ' import' → logprob: -9.51497745513916
    7. 'fraction' → logprob: -10.26497745513916
    8. ' fractions' → logprob: -10.38997745513916
    9. 'Fra' → logprob: -11.01497745513916
    10. 'convert' → logprob: -11.76497745513916

Token 1125: ' float' (ID: 4428)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.10670344531536102
    2. ' fractions' → logprob: -3.106703519821167
    3. ' from' → logprob: -3.731703519821167
    4. 'import' → logprob: -4.356703281402588
    5. 'Fraction' → logprob: -4.606703281402588
    6. 'fra' → logprob: -4.731703281402588
    7. ' import' → logprob: -8.106703758239746
    8. ' Fraction' → logprob: -8.106703758239746
    9. '```' → logprob: -8.981703758239746
    10. 'fraction' → logprob: -10.606703758239746

Token 1126: ' rounding' (ID: 112605)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.05577797815203667
    2. ' from' → logprob: -3.1807780265808105
    3. 'import' → logprob: -4.4307780265808105
    4. '.from' → logprob: -7.5557780265808105
    5. ' import' → logprob: -9.180777549743652
    6. '_from' → logprob: -9.305777549743652
    7. '```' → logprob: -10.305777549743652
    8. '	from' → logprob: -11.805777549743652
    9. 'module' → logprob: -11.805777549743652
    10. ' module' → logprob: -12.305777549743652

Token 1127: ' errors' (ID: 10664)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.053692203015089035
    2. ' from' → logprob: -3.053692102432251
    3. '       ' → logprob: -5.42869234085083
    4. 'import' → logprob: -8.053691864013672
    5. '
' → logprob: -9.053691864013672
    6. '   ' → logprob: -9.178691864013672
    7. '.from' → logprob: -10.053691864013672
    8. '_from' → logprob: -10.303691864013672
    9. ',' → logprob: -10.553691864013672
    10. '```' → logprob: -10.553691864013672

Token 1128: '.
' (ID: 558)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.08247172087430954
    2. '       ' → logprob: -2.5824716091156006
    3. ' from' → logprob: -5.70747184753418
    4. 'import' → logprob: -8.70747184753418
    5. '```' → logprob: -9.45747184753418
    6. '
' → logprob: -11.95747184753418
    7. ',' → logprob: -12.83247184753418
    8. '        
' → logprob: -14.58247184753418
    9. '   ' → logprob: -14.70747184753418
    10. '``' → logprob: -15.08247184753418

Token 1129: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.495446115732193
    2. 'from' → logprob: -0.9954460859298706
    3. ' from' → logprob: -3.87044620513916
    4. 'import' → logprob: -8.74544620513916
    5. '```' → logprob: -9.37044620513916
    6. '   ' → logprob: -10.12044620513916
    7. '           ' → logprob: -13.24544620513916
    8. '
' → logprob: -13.74544620513916
    9. '        
' → logprob: -14.37044620513916
    10. ',' → logprob: -14.37044620513916

Token 1130: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' (adapté à ' from') → logprob: -0.5931426286697388
    2. '       ' → logprob: -0.8431426286697388
    3. ' from' → logprob: -4.218142509460449
    4. 'import' → logprob: -6.093142509460449
    5. '```' → logprob: -10.46814250946045
    6. '   ' → logprob: -11.21814250946045
    7. '
' → logprob: -11.34314250946045
    8. ' import' → logprob: -11.96814250946045
    9. '        
' → logprob: -12.34314250946045
    10. 'return' → logprob: -13.84314250946045

Token 1131: ' fractions' (ID: 110523)
  Prédit: ' fractions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fractions' → logprob: -0.5765960216522217
    2. 'fra' → logprob: -0.8265960216522217
    3. 'fraction' → logprob: -7.451596260070801
    4. ' fraction' → logprob: -10.2015962600708
    5. ' math' → logprob: -11.8265962600708
    6. 'frac' → logprob: -12.2015962600708
    7. ' fractional' → logprob: -12.7015962600708
    8. 'math' → logprob: -12.8265962600708
    9. 'Fraction' → logprob: -12.8265962600708
    10. ' ' → logprob: -12.8265962600708

Token 1132: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6932718753814697
    2. ' import' → logprob: -0.6932718753814697
    3. '	import' → logprob: -9.44327163696289
    4. 'from' → logprob: -10.94327163696289
    5. ' ' → logprob: -11.31827163696289
    6. '_import' → logprob: -12.44327163696289
    7. '   ' → logprob: -12.56827163696289
    8. ' from' → logprob: -13.69327163696289
    9. ' ' → logprob: -13.94327163696289
    10. ' imports' → logprob: -14.06827163696289

Token 1133: ' Fraction' (ID: 112108)
  Prédit: 'Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fraction' → logprob: -4.870950215263292e-05
    2. 'import' → logprob: -10.250048637390137
    3. ' Fraction' → logprob: -11.875048637390137
    4. 'Fra' → logprob: -12.000048637390137
    5. '_fraction' → logprob: -17.500049591064453
    6. 'from' → logprob: -17.875049591064453
    7. '
' → logprob: -18.125049591064453
    8. 'fraction' → logprob: -18.250049591064453
    9. 'Frac' → logprob: -18.375049591064453
    10. '(F' → logprob: -18.625049591064453

Token 1134: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.033379752188920975
    2. '       ' → logprob: -3.5333797931671143
    3. '

' → logprob: -6.158379554748535
    4. '        
' → logprob: -6.908379554748535
    5. '
' → logprob: -8.658379554748535
    6. 'import' → logprob: -9.283379554748535
    7. 'from' → logprob: -10.158379554748535
    8. '   ' → logprob: -10.783379554748535
    9. 'fraction' → logprob: -10.783379554748535
    10. '<|end|>' → logprob: -10.908379554748535

Token 1135: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35223379731178284
    2. '
' → logprob: -1.2272337675094604
    3. '        
' → logprob: -5.97723388671875
    4. 'from' → logprob: -7.47723388671875
    5. '   ' → logprob: -8.35223388671875
    6. 'import' → logprob: -8.60223388671875
    7. '    
' → logprob: -9.47723388671875
    8. '
' → logprob: -9.85223388671875
    9. '           ' → logprob: -11.10223388671875
    10. '  
' → logprob: -11.10223388671875

Token 1136: ' frac' (ID: 72308)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9330594539642334
    2. 'fraction' → logprob: -0.9330594539642334
    3. 'frac' (adapté à ' frac') → logprob: -1.6830594539642334
    4. 'sign' → logprob: -4.6830596923828125
    5. 'from' → logprob: -5.4330596923828125
    6. 'fr' → logprob: -5.6830596923828125
    7. ' frac' → logprob: -6.0580596923828125
    8. ' fraction' → logprob: -6.3080596923828125
    9. 'f' → logprob: -6.6830596923828125
    10. 'self' → logprob: -6.6830596923828125

Token 1137: '_fraction' (ID: 151287)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.3442981541156769
    2. ' =' → logprob: -1.9692981243133545
    3. '=' → logprob: -2.9692981243133545
    4. '_part' → logprob: -3.2192981243133545
    5. '_fraction' → logprob: -3.2192981243133545
    6. '_frac' → logprob: -4.469298362731934
    7. '_value' → logprob: -4.844298362731934
    8. '_' → logprob: -8.094298362731934
    9. 'val' → logprob: -8.344298362731934
    10. 'Val' → logprob: -9.219298362731934

Token 1138: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47620853781700134
    2. '=' → logprob: -0.9762085676193237
    3. '_frac' → logprob: -6.601208686828613
    4. '_part' → logprob: -7.851208686828613
    5. '_val' → logprob: -9.101208686828613
    6. '_' → logprob: -9.351208686828613
    7. '_fraction' → logprob: -9.726208686828613
    8. 'al' → logprob: -9.976208686828613
    9. '=_' → logprob: -11.226208686828613
    10. '_=' → logprob: -11.476208686828613

Token 1139: ' Fraction' (ID: 112108)
  Prédit: 'Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fraction' → logprob: -0.002270754659548402
    2. 'sum' → logprob: -7.002270698547363
    3. '0' → logprob: -7.377270698547363
    4. 'self' → logprob: -7.502270698547363
    5. ' Fraction' → logprob: -9.127270698547363
    6. 'frac' → logprob: -10.752270698547363
    7. '   ' → logprob: -10.877270698547363
    8. 'fraction' → logprob: -12.002270698547363
    9. 'Frac' → logprob: -12.377270698547363
    10. 'from' → logprob: -12.752270698547363

Token 1140: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1688736379146576
    2. '(fr' → logprob: -2.9188735485076904
    3. '()' → logprob: -3.1688735485076904
    4. '0' → logprob: -4.1688737869262695
    5. '(sum' → logprob: -4.1688737869262695
    6. 'frac' → logprob: -4.6688737869262695
    7. '(self' → logprob: -5.0438737869262695
    8. '()
' → logprob: -5.5438737869262695
    9. '=' → logprob: -5.6688737869262695
    10. 'sum' → logprob: -6.1688737869262695

Token 1141: '0' (ID: 15)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frac' → logprob: -0.364899605512619
    2. 'self' → logprob: -1.7398996353149414
    3. '0' → logprob: -2.8648996353149414
    4. 'sum' → logprob: -3.2398996353149414
    5. 'int' → logprob: -3.4898996353149414
    6. ')' → logprob: -6.489899635314941
    7. '   ' → logprob: -8.114899635314941
    8. '(self' → logprob: -8.489899635314941
    9. 'fraction' → logprob: -8.864899635314941
    10. 'fra' → logprob: -9.489899635314941

Token 1142: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18182732164859772
    2. ')' → logprob: -1.8068273067474365
    3. ')
' → logprob: -6.681827545166016
    4. ' ,' → logprob: -8.681827545166016
    5. '       ' → logprob: -9.181827545166016
    6. '   ' → logprob: -9.431827545166016
    7. ')<<' → logprob: -9.681827545166016
    8. ',
' → logprob: -10.056827545166016
    9. '<|end|>' → logprob: -10.056827545166016
    10. 'import' → logprob: -10.181827545166016

Token 1143: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.034836482256650925
    2. 'for' → logprob: -3.659836530685425
    3. ' for' → logprob: -4.784836292266846
    4. ',' → logprob: -9.909836769104004
    5. '<|end|>' → logprob: -10.534836769104004
    6. '
' → logprob: -10.909836769104004
    7. '        
' → logprob: -11.284836769104004
    8. '   ' → logprob: -11.909836769104004
    9. '           ' → logprob: -12.409836769104004
    10. ')' → logprob: -12.534836769104004

Token 1144: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.050087906420230865
    2. '       ' → logprob: -3.0500879287719727
    3. ' for' → logprob: -6.550087928771973
    4. 'den' → logprob: -11.050087928771973
    5. 'n' → logprob: -11.800087928771973
    6. 'numer' → logprob: -11.800087928771973
    7. '   ' → logprob: -12.050087928771973
    8. 'bits' → logprob: -12.175087928771973
    9. 'frac' → logprob: -12.675087928771973
    10. 'from' → logprob: -12.925087928771973

Token 1145: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0013809482334181666
    2. ' i' → logprob: -7.251380920410156
    3. 'bit' → logprob: -7.626380920410156
    4. 'idx' → logprob: -9.001380920410156
    5. 'index' → logprob: -10.626380920410156
    6. '   ' → logprob: -11.001380920410156
    7. ' ' → logprob: -12.001380920410156
    8. 'ex' → logprob: -13.251380920410156
    9. '(i' → logprob: -13.626380920410156
    10. ' bit' → logprob: -13.626380920410156

Token 1146: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.49781349301338196
    2. 'in' → logprob: -1.4978134632110596
    3. ',' → logprob: -1.9978134632110596
    4. '<|end|>' → logprob: -3.8728134632110596
    5. '1' → logprob: -5.247813701629639
    6. '<|end|>' → logprob: -5.872813701629639
    7. ' ,' → logprob: -6.997813701629639
    8. '       ' → logprob: -6.997813701629639
    9. '=' → logprob: -7.622813701629639
    10. '        ' → logprob: -8.12281322479248

Token 1147: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.00033784625702537596
    2. ' bit' → logprob: -8.000337600708008
    3. 'b' → logprob: -14.125337600708008
    4. '(bit' → logprob: -14.875337600708008
    5. 'bitr' → logprob: -14.875337600708008
    6. 'token' → logprob: -15.125337600708008
    7. ' ' → logprob: -16.000337600708008
    8. '   ' → logprob: -16.625337600708008
    9. '-bit' → logprob: -16.750337600708008
    10. 'bits' → logprob: -16.875337600708008

Token 1148: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.28214994072914124
    2. ',' → logprob: -1.6571499109268188
    3. 'in' → logprob: -2.9071500301361084
    4. ' ,' → logprob: -7.782149791717529
    5. ',in' → logprob: -9.782150268554688
    6. '	in' → logprob: -11.282150268554688
    7. '<|end|>' → logprob: -11.407150268554688
    8. '        ' → logprob: -11.782150268554688
    9. '       ' → logprob: -12.282150268554688
    10. '<|end|>' → logprob: -12.657150268554688

Token 1149: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.00014859484508633614
    2. ' enumerate' → logprob: -8.87514877319336
    3. 'en' → logprob: -12.62514877319336
    4. '(en' → logprob: -13.75014877319336
    5. 'enum' → logprob: -13.87514877319336
    6. '```' → logprob: -13.87514877319336
    7. 'enqueue' → logprob: -14.37514877319336
    8. 'in' → logprob: -15.37514877319336
    9. '.enumer' → logprob: -15.50014877319336
    10. 'evaluate' → logprob: -15.87514877319336

Token 1150: '(re' (ID: 8178)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6748563647270203
    2. 're' → logprob: -1.549856424331665
    3. '(self' → logprob: -1.924856424331665
    4. '(re' → logprob: -2.049856424331665
    5. '(' → logprob: -6.424856185913086
    6. 'rev' → logprob: -8.299856185913086
    7. '(fr' → logprob: -8.549856185913086
    8. '[self' → logprob: -8.674856185913086
    9. 'enumer' → logprob: -8.674856185913086
    10. '[' → logprob: -8.799856185913086

Token 1151: 'versed' (ID: 76479)
  Prédit: 'versed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'versed' → logprob: -0.019271621480584145
    2. 'self' → logprob: -4.0192718505859375
    3. 'f' → logprob: -7.8942718505859375
    4. '[' → logprob: -8.644271850585938
    5. 'vised' → logprob: -8.769271850585938
    6. 'verted' → logprob: -9.519271850585938
    7. 'v' → logprob: -9.769271850585938
    8. 'user' → logprob: -9.769271850585938
    9. '[self' → logprob: -10.644271850585938
    10. 'quired' → logprob: -10.644271850585938

Token 1152: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008694934658706188
    2. '(self' → logprob: -4.758695125579834
    3. ' self' → logprob: -9.883694648742676
    4. '[self' → logprob: -10.508694648742676
    5. '[' → logprob: -13.883694648742676
    6. 'fraction' → logprob: -15.508694648742676
    7. '=self' → logprob: -15.633694648742676
    8. ')' → logprob: -15.883694648742676
    9. '	self' → logprob: -16.008695602416992
    10. '       ' → logprob: -16.133695602416992

Token 1153: '.f' (ID: 1196)
  Prédit: '.f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.f' → logprob: -0.0036840438842773438
    2. '.bits' → logprob: -5.628684043884277
    3. 'bits' → logprob: -10.253684043884277
    4. 'fraction' → logprob: -10.378684043884277
    5. '.fr' → logprob: -12.253684043884277
    6. ').' → logprob: -12.378684043884277
    7. 'frac' → logprob: -13.128684043884277
    8. '.' → logprob: -13.503684043884277
    9. '}.' → logprob: -13.753684043884277
    10. '`.' → logprob: -14.378684043884277

Token 1154: 'raction' (ID: 33644)
  Prédit: 'raction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raction' → logprob: -0.008986921049654484
    2. 'fraction' → logprob: -5.133986949920654
    3. 'ractions' → logprob: -6.883986949920654
    4. 'action' → logprob: -7.133986949920654
    5. '.bits' → logprob: -8.633986473083496
    6. '{' → logprob: -8.758986473083496
    7. 'r' → logprob: -8.883986473083496
    8. 'ction' → logprob: -8.883986473083496
    9. 'bits' → logprob: -9.508986473083496
    10. '`' → logprob: -9.883986473083496

Token 1155: '.bits' (ID: 89914)
  Prédit: '.bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bits' → logprob: -1.8908587662735954e-05
    2. 'bits' → logprob: -11.250019073486328
    3. ' .' → logprob: -13.750019073486328
    4. ').' → logprob: -13.875019073486328
    5. '(bits' → logprob: -14.125019073486328
    6. '.bit' → logprob: -14.250019073486328
    7. '.parts' → logprob: -14.250019073486328
    8. '.' → logprob: -14.750019073486328
    9. '.b' → logprob: -15.875019073486328
    10. 'BITS' → logprob: -15.875019073486328

Token 1156: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00035512709291651845
    2. '):' → logprob: -8.625354766845703
    3. ' ,' → logprob: -10.000354766845703
    4. '       ' → logprob: -10.375354766845703
    5. '):
' → logprob: -10.750354766845703
    6. '(),' → logprob: -10.875354766845703
    7. '),' → logprob: -11.250354766845703
    8. '           ' → logprob: -11.375354766845703
    9. ',start' → logprob: -11.375354766845703
    10. '[::-' → logprob: -11.500354766845703

Token 1157: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.011278177611529827
    2. ' start' → logprob: -4.51127815246582
    3. '1' → logprob: -8.38627815246582
    4. ' ' → logprob: -14.13627815246582
    5. '[start' → logprob: -14.63627815246582
    6. '	start' → logprob: -15.13627815246582
    7. '       ' → logprob: -15.63627815246582
    8. '(start' → logprob: -15.76127815246582
    9. ':start' → logprob: -16.01127815246582
    10. ',start' → logprob: -16.38627815246582

Token 1158: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00020425561524461955
    2. '1' → logprob: -8.500204086303711
    3. '=
' → logprob: -14.250204086303711
    4. '(' → logprob: -17.50020408630371
    5. '```' → logprob: -18.25020408630371
    6. '<|end|>' → logprob: -18.25020408630371
    7. 'from' → logprob: -18.62520408630371
    8. '=

' → logprob: -18.75020408630371
    9. ')=' → logprob: -18.87520408630371
    10. '0' → logprob: -19.12520408630371

Token 1159: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.750001907348633
    3. '=' → logprob: -15.500001907348633
    4. '<|end|>' → logprob: -15.750001907348633
    5. '0' → logprob: -17.000001907348633
    6. '```' → logprob: -17.250001907348633
    7. '2' → logprob: -17.625001907348633
    8. 'from' → logprob: -19.000001907348633
    9. '`' → logprob: -19.000001907348633
    10. '   ' → logprob: -19.125001907348633

Token 1160: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.46974417567253113
    2. ':' → logprob: -1.8447442054748535
    3. '):' → logprob: -1.8447442054748535
    4. '           ' → logprob: -3.3447442054748535
    5. ':
' → logprob: -4.0947442054748535
    6. '       ' → logprob: -5.7197442054748535
    7. ',' → logprob: -5.8447442054748535
    8. ' if' → logprob: -9.219743728637695
    9. '):
' → logprob: -9.219743728637695
    10. '=' → logprob: -9.844743728637695

Token 1161: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0033943254966288805
    2. '       ' → logprob: -6.75339412689209
    3. '<|end|>' → logprob: -7.00339412689209
    4. '          ' → logprob: -8.12839412689209
    5. '            ' → logprob: -8.50339412689209
    6. '               ' → logprob: -8.87839412689209
    7. '        ' → logprob: -9.00339412689209
    8. '   ' → logprob: -9.00339412689209
    9. ':' → logprob: -9.12839412689209
    10. ' ' → logprob: -9.75339412689209

Token 1162: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.29597392678260803
    2. 'frac' → logprob: -1.7959738969802856
    3. ' if' → logprob: -3.170974016189575
    4. 'if' (adapté à ' if') → logprob: -3.795974016189575
    5. ' frac' → logprob: -4.045973777770996
    6. '               ' → logprob: -5.670973777770996
    7. '   ' → logprob: -6.420973777770996
    8. '       ' → logprob: -6.920973777770996
    9. '            ' → logprob: -7.670973777770996
    10. '          ' → logprob: -8.420973777770996

Token 1163: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.02074018120765686
    2. ' bit' → logprob: -3.895740270614624
    3. '           ' → logprob: -8.645740509033203
    4. '               ' → logprob: -11.270740509033203
    5. '(bit' → logprob: -12.645740509033203
    6. 'bits' → logprob: -13.145740509033203
    7. '       ' → logprob: -13.145740509033203
    8. '   ' → logprob: -13.395740509033203
    9. 'bitr' → logprob: -15.395740509033203
    10. '          ' → logprob: -15.645740509033203

Token 1164: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.28624555468559265
    2. ':' → logprob: -2.161245584487915
    3. ' ==' → logprob: -2.161245584487915
    4. ':
' → logprob: -4.786245346069336
    5. '=' → logprob: -5.036245346069336
    6. '):' → logprob: -7.161245346069336
    7. '):
' → logprob: -7.536245346069336
    8. '<|end|>' → logprob: -7.911245346069336
    9. ')==' → logprob: -7.911245346069336
    10. '<|end|>' → logprob: -8.161245346069336

Token 1165: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00220461655408144
    2. ' ' → logprob: -6.127204418182373
    3. '0' → logprob: -10.877204895019531
    4. ')' → logprob: -15.252204895019531
    5. '           ' → logprob: -15.752204895019531
    6. '   ' → logprob: -16.37720489501953
    7. '               ' → logprob: -17.37720489501953
    8. '```' → logprob: -17.62720489501953
    9. '<|end|>' → logprob: -17.75220489501953
    10. '    ' → logprob: -17.87720489501953

Token 1166: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.65707261255011e-06
    2. ' ' → logprob: -12.000008583068848
    3. '0' → logprob: -13.250008583068848
    4. '           ' → logprob: -15.125008583068848
    5. '   ' → logprob: -15.250008583068848
    6. '       ' → logprob: -17.125009536743164
    7. '               ' → logprob: -17.500009536743164
    8. '=' → logprob: -17.875009536743164
    9. '>' → logprob: -19.375009536743164
    10. '                   ' → logprob: -19.500009536743164

Token 1167: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3441105782985687
    2. ':' → logprob: -1.5941106081008911
    3. '               ' → logprob: -2.4691104888916016
    4. '           ' → logprob: -6.094110488891602
    5. '):
' → logprob: -7.094110488891602
    6. ',' → logprob: -8.844110488891602
    7. '):' → logprob: -10.469110488891602
    8. '=' → logprob: -10.594110488891602
    9. ' :' → logprob: -10.844110488891602
    10. ' :
' → logprob: -11.219110488891602

Token 1168: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010310231009498239
    2. '           ' → logprob: -7.876030921936035
    3. ',' → logprob: -8.001030921936035
    4. ':' → logprob: -8.751030921936035
    5. ':
' → logprob: -9.626030921936035
    6. '):
' → logprob: -11.376030921936035
    7. '                ' → logprob: -11.376030921936035
    8. 'frac' → logprob: -11.501030921936035
    9. '	           ' → logprob: -11.876030921936035
    10. '              ' → logprob: -11.876030921936035

Token 1169: ' frac' (ID: 72308)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frac' (adapté à ' frac') → logprob: -0.317861407995224
    2. '               ' → logprob: -1.3178614377975464
    3. '           ' → logprob: -6.192861557006836
    4. '   ' → logprob: -7.317861557006836
    5. ' frac' → logprob: -7.317861557006836
    6. 'from' → logprob: -7.567861557006836
    7. '                   ' → logprob: -8.192861557006836
    8. 'fraction' → logprob: -8.692861557006836
    9. 'fr' → logprob: -9.567861557006836
    10. '       ' → logprob: -10.692861557006836

Token 1170: '_fraction' (ID: 151287)
  Prédit: '_fraction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fraction' → logprob: -6.885492621222511e-05
    2. 'fraction' → logprob: -9.625068664550781
    3. '=' → logprob: -14.125068664550781
    4. 'Fraction' → logprob: -14.250068664550781
    5. '_frequency' → logprob: -14.875068664550781
    6. 'from' → logprob: -15.500068664550781
    7. '_frac' → logprob: -15.625068664550781
    8. '_fragment' → logprob: -16.37506866455078
    9. '_' → logprob: -16.37506866455078
    10. '_factor' → logprob: -16.37506866455078

Token 1171: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.006565337534993887
    2. ' +=' → logprob: -5.131565570831299
    3. '=' → logprob: -7.381565570831299
    4. '+' → logprob: -12.88156509399414
    5. '           ' → logprob: -13.00656509399414
    6. '            ' → logprob: -13.25656509399414
    7. '+=(' → logprob: -13.25656509399414
    8. '        ' → logprob: -13.75656509399414
    9. ']+=' → logprob: -13.75656509399414
    10. '   ' → logprob: -14.25656509399414

Token 1172: ' Fraction' (ID: 112108)
  Prédit: 'Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fraction' → logprob: -4.6087021473795176e-05
    2. ' Fraction' → logprob: -10.375045776367188
    3. '   ' → logprob: -11.375045776367188
    4. '1' → logprob: -13.500045776367188
    5. '       ' → logprob: -13.625045776367188
    6. '           ' → logprob: -14.625045776367188
    7. 'Fra' → logprob: -15.750045776367188
    8. '               ' → logprob: -17.125045776367188
    9. 'fraction' → logprob: -17.125045776367188
    10. 'Frac' → logprob: -17.500045776367188

Token 1173: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25194162130355835
    2. '(' → logprob: -1.5019416809082031
    3. '           ' → logprob: -12.001941680908203
    4. '   ' → logprob: -12.376941680908203
    5. '               ' → logprob: -14.376941680908203
    6. '       ' → logprob: -14.751941680908203
    7. ' ' → logprob: -15.001941680908203
    8. ',' → logprob: -15.251941680908203
    9. '                   ' → logprob: -15.376941680908203
    10. '```' → logprob: -16.751941680908203

Token 1174: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. '(' → logprob: -13.625001907348633
    3. '   ' → logprob: -14.750001907348633
    4. ' ' → logprob: -15.750001907348633
    5. ')' → logprob: -16.375001907348633
    6. '           ' → logprob: -16.750001907348633
    7. '       ' → logprob: -17.875001907348633
    8. ',' → logprob: -19.250001907348633
    9. '               ' → logprob: -19.750001907348633
    10. '  ' → logprob: -20.125001907348633

Token 1175: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011892046313732862
    2. '<<' → logprob: -10.00011920928955
    3. ' ,' → logprob: -10.12511920928955
    4. '2' → logprob: -11.00011920928955
    5. '           ' → logprob: -11.62511920928955
    6. '   ' → logprob: -12.75011920928955
    7. '               ' → logprob: -13.87511920928955
    8. '       ' → logprob: -14.12511920928955
    9. ',(' → logprob: -14.25011920928955
    10. '(' → logprob: -14.37511920928955

Token 1176: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.537868779967539e-06
    2. '(' → logprob: -12.000008583068848
    3. ' ' → logprob: -13.750008583068848
    4. '1' → logprob: -14.375008583068848
    5. '   ' → logprob: -14.500008583068848
    6. '```' → logprob: -17.00000762939453
    7. '`' → logprob: -17.87500762939453
    8. '           ' → logprob: -17.87500762939453
    9. ')' → logprob: -18.00000762939453
    10. '       ' → logprob: -18.62500762939453

Token 1177: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9504606825648807e-05
    2. '(' → logprob: -10.875019073486328
    3. '1' → logprob: -14.625019073486328
    4. ' ' → logprob: -17.250019073486328
    5. '   ' → logprob: -17.500019073486328
    6. '```' → logprob: -18.125019073486328
    7. ')' → logprob: -18.500019073486328
    8. '`' → logprob: -18.750019073486328
    9. '
' → logprob: -19.500019073486328
    10. '[' → logprob: -20.500019073486328

Token 1178: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0017080175457522273
    2. ' **' → logprob: -6.376708030700684
    3. '^' → logprob: -12.251708030700684
    4. ')' → logprob: -14.626708030700684
    5. '           ' → logprob: -14.751708030700684
    6. '*' → logprob: -16.126707077026367
    7. '```' → logprob: -16.751707077026367
    8. '**)' → logprob: -16.876707077026367
    9. '[i' → logprob: -17.126707077026367
    10. '   ' → logprob: -17.501707077026367

Token 1179: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.664371848164592e-05
    2. ' i' → logprob: -11.875016212463379
    3. ')i' → logprob: -11.875016212463379
    4. '(i' → logprob: -13.500016212463379
    5. '{i' → logprob: -14.500016212463379
    6. '*i' → logprob: -15.000016212463379
    7. ')' → logprob: -15.875016212463379
    8. '[i' → logprob: -16.000017166137695
    9. '<|end|>' → logprob: -16.125017166137695
    10. '=i' → logprob: -17.000017166137695

Token 1180: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000523246475495398
    2. ')
' → logprob: -7.625523090362549
    3. '       ' → logprob: -10.750523567199707
    4. '<|end|>' → logprob: -12.500523567199707
    5. '           ' → logprob: -13.000523567199707
    6. ' )' → logprob: -13.500523567199707
    7. ')return' → logprob: -13.625523567199707
    8. '               ' → logprob: -13.875523567199707
    9. ')}' → logprob: -13.875523567199707
    10. ')
' → logprob: -14.375523567199707

Token 1181: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29178333282470703
    2. '
' → logprob: -1.416783332824707
    3. '<|end|>' → logprob: -5.041783332824707
    4. '        
' → logprob: -6.291783332824707
    5. ')' → logprob: -7.291783332824707
    6. ' if' → logprob: -8.416783332824707
    7. ',' → logprob: -8.416783332824707
    8. '```' → logprob: -8.791783332824707
    9. '   ' → logprob: -8.916783332824707
    10. '        ' → logprob: -9.291783332824707

Token 1182: ' int' (ID: 677)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3418754041194916
    2. '       ' → logprob: -1.466875433921814
    3. 'sign' → logprob: -3.8418753147125244
    4. 'integer' → logprob: -4.2168755531311035
    5. 'int' (adapté à ' int') → logprob: -4.7168755531311035
    6. 'from' → logprob: -4.9668755531311035
    7. 'import' → logprob: -6.2168755531311035
    8. '
' → logprob: -6.8418755531311035
    9. ' if' → logprob: -7.2168755531311035
    10. '        
' → logprob: -7.3418755531311035

Token 1183: '_fraction' (ID: 151287)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.0577559769153595
    2. '_fraction' → logprob: -3.557755947113037
    3. '_part' → logprob: -3.807755947113037
    4. '_value' → logprob: -6.057755947113037
    5. '_frac' → logprob: -6.807755947113037
    6. 'val' → logprob: -7.057755947113037
    7. 'part' → logprob: -7.182755947113037
    8. '_total' → logprob: -9.432756423950195
    9. '_' → logprob: -9.932756423950195
    10. 'al' → logprob: -10.057756423950195

Token 1184: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31084972620010376
    2. '_part' → logprob: -1.560849666595459
    3. '=' → logprob: -3.435849666595459
    4. 'al' → logprob: -4.185849666595459
    5. '_' → logprob: -5.435849666595459
    6. '_value' → logprob: -6.435849666595459
    7. '_val' → logprob: -6.435849666595459
    8. '_fraction' → logprob: -6.810849666595459
    9. '=_' → logprob: -7.810849666595459
    10. '_frac' → logprob: -8.060850143432617

Token 1185: ' Fraction' (ID: 112108)
  Prédit: 'Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fraction' → logprob: -0.024222787469625473
    2. 'sign' → logprob: -4.3992228507995605
    3. 'self' → logprob: -4.8992228507995605
    4. 'frac' → logprob: -6.0242228507995605
    5. 'int' → logprob: -6.5242228507995605
    6. 'abs' → logprob: -8.649222373962402
    7. 'fraction' → logprob: -10.399222373962402
    8. '(sign' → logprob: -10.524222373962402
    9. ' Fraction' → logprob: -11.149222373962402
    10. 'Frac' → logprob: -11.149222373962402

Token 1186: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.602398693561554
    2. '(int' → logprob: -0.852398693561554
    3. '(sign' → logprob: -3.852398633956909
    4. 'int' → logprob: -5.977398872375488
    5. 'self' → logprob: -7.227398872375488
    6. 'sign' → logprob: -7.477398872375488
    7. '(abs' → logprob: -7.852398872375488
    8. '((' → logprob: -8.102398872375488
    9. '(' → logprob: -8.977398872375488
    10. '=int' → logprob: -9.477398872375488

Token 1187: '.integer' (ID: 68821)
  Prédit: 'integer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'integer' → logprob: -0.3727540373802185
    2. '.integer' → logprob: -1.7477540969848633
    3. '(integer' → logprob: -2.6227540969848633
    4. ')' → logprob: -3.7477540969848633
    5. '+' → logprob: -4.747754096984863
    6. '_integer' → logprob: -4.747754096984863
    7. 'int' → logprob: -5.497754096984863
    8. '(self' → logprob: -6.247754096984863
    9. 'to' → logprob: -6.372754096984863
    10. 'self' → logprob: -6.497754096984863

Token 1188: '.value' (ID: 4683)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02325223572552204
    2. ')' → logprob: -4.273252010345459
    3. 'self' → logprob: -6.023252010345459
    4. '(' → logprob: -6.023252010345459
    5. '(total' → logprob: -6.398252010345459
    6. '.value' → logprob: -7.148252010345459
    7. ',' → logprob: -7.898252010345459
    8. '(value' → logprob: -8.273252487182617
    9. 'value' → logprob: -8.648252487182617
    10. ')+' → logprob: -8.898252487182617

Token 1189: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.1154584214091301
    2. '(),' → logprob: -2.4904584884643555
    3. ')' → logprob: -4.4904584884643555
    4. '()' → logprob: -4.4904584884643555
    5. 'self' → logprob: -6.7404584884643555
    6. '(self' → logprob: -7.2404584884643555
    7. ' ())' → logprob: -7.9904584884643555
    8. '())
' → logprob: -8.115458488464355
    9. '()),' → logprob: -8.115458488464355
    10. ',' → logprob: -8.115458488464355

Token 1190: '       ' (ID: 309)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8103284239768982
    2. '       ' → logprob: -0.9353284239768982
    3. ' +' → logprob: -1.935328483581543
    4. 'from' → logprob: -4.810328483581543
    5. '```' → logprob: -5.685328483581543
    6. '
' → logprob: -6.310328483581543
    7. ')' → logprob: -6.810328483581543
    8. 'frac' → logprob: -7.060328483581543
    9. 'fraction' → logprob: -7.810328483581543
    10. '_fraction' → logprob: -8.060328483581543

Token 1191: ' val' (ID: 1459)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6792652010917664
    2. 'total' → logprob: -1.3042652606964111
    3. 'frac' → logprob: -1.8042652606964111
    4. 'from' → logprob: -3.679265260696411
    5. 'result' → logprob: -4.429265022277832
    6. 'fraction' → logprob: -4.679265022277832
    7. 'final' → logprob: -4.804265022277832
    8. 'decimal' → logprob: -6.804265022277832
    9. ' total' → logprob: -8.429265022277832
    10. 'dec' → logprob: -8.554265022277832

Token 1192: '_fraction' (ID: 151287)
  Prédit: '_fraction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fraction' → logprob: -0.16691820323467255
    2. ' =' → logprob: -1.916918158531189
    3. '_frac' → logprob: -5.5419182777404785
    4. '=' → logprob: -6.1669182777404785
    5. '   ' → logprob: -8.91691780090332
    6. '_' → logprob: -8.91691780090332
    7. 'fraction' → logprob: -9.54191780090332
    8. 'raction' → logprob: -9.79191780090332
    9. '       ' → logprob: -10.04191780090332
    10. 'frac' → logprob: -10.54191780090332

Token 1193: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687190413475037
    2. '=' → logprob: -1.1368719339370728
    3. ')' → logprob: -15.261872291564941
    4. ' +=' → logprob: -15.511872291564941
    5. '   ' → logprob: -15.636872291564941
    6. '+=' → logprob: -16.261871337890625
    7. ':' → logprob: -16.511871337890625
    8. ' ' → logprob: -16.636871337890625
    9. ',' → logprob: -17.261871337890625
    10. '.' → logprob: -17.886871337890625

Token 1194: ' int' (ID: 677)
  Prédit: 'Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Fraction' → logprob: -0.29830434918403625
    2. 'self' → logprob: -1.7983043193817139
    3. 'sign' → logprob: -2.798304319381714
    4. 'frac' → logprob: -3.798304319381714
    5. '       ' → logprob: -5.173304557800293
    6. 'Frac' → logprob: -6.923304557800293
    7. '(self' → logprob: -7.673304557800293
    8. '(sign' → logprob: -7.673304557800293
    9. ' Fraction' → logprob: -8.048304557800293
    10. '           ' → logprob: -8.548304557800293

Token 1195: '_fraction' (ID: 151287)
  Prédit: '_fraction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fraction' → logprob: -0.044966213405132294
    2. 'Fraction' → logprob: -3.169966220855713
    3. '(sign' → logprob: -7.794966220855713
    4. 'frac' → logprob: -8.169965744018555
    5. 'fraction' → logprob: -8.419965744018555
    6. '_frac' → logprob: -8.794965744018555
    7. ')' → logprob: -8.794965744018555
    8. '_f' → logprob: -8.794965744018555
    9. '_' → logprob: -9.044965744018555
    10. '(' → logprob: -9.419965744018555

Token 1196: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.28138017654418945
    2. ' +' → logprob: -1.4063801765441895
    3. '*' → logprob: -9.156379699707031
    4. '       ' → logprob: -9.656379699707031
    5. ' *' → logprob: -11.156379699707031
    6. '+=' → logprob: -11.406379699707031
    7. '<|end|>' → logprob: -11.531379699707031
    8. '=' → logprob: -12.656379699707031
    9. 'from' → logprob: -12.781379699707031
    10. ' +=' → logprob: -12.781379699707031

Token 1197: ' frac' (ID: 72308)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frac' → logprob: -0.0001884015218820423
    2. ' frac' → logprob: -8.750188827514648
    3. 'sign' → logprob: -11.875188827514648
    4. 'fraction' → logprob: -11.875188827514648
    5. 'Fraction' → logprob: -12.500188827514648
    6. 'fr' → logprob: -12.625188827514648
    7. '(fr' → logprob: -13.250188827514648
    8. 'fract' → logprob: -13.250188827514648
    9. 'frag' → logprob: -13.750188827514648
    10. '   ' → logprob: -13.750188827514648

Token 1198: '_fraction' (ID: 151287)
  Prédit: '_fraction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fraction' → logprob: -0.48209190368652344
    2. 'frac' → logprob: -0.9820919036865234
    3. '_frac' → logprob: -5.357091903686523
    4. 'fraction' → logprob: -5.857091903686523
    5. 'fract' → logprob: -8.607091903686523
    6. '(fr' → logprob: -8.857091903686523
    7. ' frac' → logprob: -10.107091903686523
    8. 'raction' → logprob: -11.482091903686523
    9. 'fra' → logprob: -11.732091903686523
    10. 'fr' → logprob: -11.857091903686523

Token 1199: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09319029748439789
    2. '       ' → logprob: -2.5931901931762695
    3. '<|end|>' → logprob: -4.5931901931762695
    4. ' if' → logprob: -6.9681901931762695
    5. '+' → logprob: -7.4681901931762695
    6. ')' → logprob: -7.8431901931762695
    7. '        
' → logprob: -7.9681901931762695
    8. '[' → logprob: -8.46819019317627
    9. ' +' → logprob: -8.46819019317627
    10. ',' → logprob: -8.46819019317627

Token 1200: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22450381517410278
    2. 'if' → logprob: -2.349503755569458
    3. 'sign' → logprob: -2.474503755569458
    4. ' if' → logprob: -4.224503993988037
    5. ' sign' → logprob: -6.224503993988037
    6. '
' → logprob: -6.724503993988037
    7. '```' → logprob: -6.974503993988037
    8. 'return' → logprob: -7.099503993988037
    9. '        
' → logprob: -7.349503993988037
    10. 'from' → logprob: -7.349503993988037

Token 1201: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3052210211753845
    2. 'sign' → logprob: -1.5552210807800293
    3. '       ' → logprob: -3.0552210807800293
    4. 'from' → logprob: -6.180221080780029
    5. 'return' → logprob: -6.930221080780029
    6. 'fraction' → logprob: -7.680221080780029
    7. ' if' → logprob: -7.930221080780029
    8. 'neg' → logprob: -8.305220603942871
    9. '
' → logprob: -8.680220603942871
    10. '```' → logprob: -9.055220603942871

Token 1202: ' sign' (ID: 2232)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0724620446562767
    2. 'frac' → logprob: -3.0724620819091797
    3. 'total' → logprob: -4.32246208190918
    4. 'abs' → logprob: -5.82246208190918
    5. 'self' → logprob: -5.82246208190918
    6. ' val' → logprob: -6.32246208190918
    7. 'sign' → logprob: -6.82246208190918
    8. 'int' → logprob: -7.32246208190918
    9. ' frac' → logprob: -8.32246208190918
    10. 'fraction' → logprob: -8.57246208190918

Token 1203: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.0007769925869069993
    2. '_fraction' → logprob: -8.125777244567871
    3. 'val' → logprob: -8.250777244567871
    4. '_frac' → logprob: -9.750777244567871
    5. '==' → logprob: -10.000777244567871
    6. '<' → logprob: -10.500777244567871
    7. '>' → logprob: -10.625777244567871
    8. '==-' → logprob: -11.500777244567871
    9. ' ==' → logprob: -11.750777244567871
    10. '()' → logprob: -12.125777244567871

Token 1204: ' ==' (ID: 951)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6542713642120361
    2. ' <' → logprob: -1.2792713642120361
    3. ' ==' → logprob: -2.154271364212036
    4. '==' → logprob: -2.529271364212036
    5. '==-' → logprob: -5.154271125793457
    6. '>' → logprob: -8.279271125793457
    7. '=' → logprob: -10.154271125793457
    8. '*' → logprob: -10.404271125793457
    9. '```' → logprob: -10.404271125793457
    10. ' >' → logprob: -11.029271125793457

Token 1205: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0008208265644498169
    2. '0' → logprob: -7.125820636749268
    3. ' -' → logprob: -11.125821113586426
    4. '1' → logprob: -14.125821113586426
    5. ' ' → logprob: -15.125821113586426
    6. '−' → logprob: -15.250821113586426
    7. '-)' → logprob: -16.12582015991211
    8. '\-' → logprob: -17.12582015991211
    9. '-=' → logprob: -17.12582015991211
    10. '   ' → logprob: -17.25082015991211

Token 1206: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '<|end|>' → logprob: -14.625000953674316
    3. ' ' → logprob: -15.375000953674316
    4. '">' → logprob: -17.875
    5. ':' → logprob: -18.0
    6. ')' → logprob: -18.375
    7. '=' → logprob: -18.375
    8. '```' → logprob: -18.5
    9. '...' → logprob: -19.625
    10. '>' → logprob: -19.625

Token 1207: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06437019258737564
    2. ':
' → logprob: -2.8143701553344727
    3. '           ' → logprob: -6.564370155334473
    4. '       ' → logprob: -8.314370155334473
    5. ':return' → logprob: -8.564370155334473
    6. ',' → logprob: -8.689370155334473
    7. ' and' → logprob: -8.689370155334473
    8. ' :' → logprob: -10.564370155334473
    9. '):' → logprob: -10.814370155334473
    10. '-' → logprob: -10.814370155334473

Token 1208: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009515985148027539
    2. ' return' → logprob: -7.875951766967773
    3. 'return' → logprob: -7.875951766967773
    4. '-' → logprob: -10.000951766967773
    5. '       ' → logprob: -10.125951766967773
    6. '   ' → logprob: -10.875951766967773
    7. '            ' → logprob: -10.875951766967773
    8. '               ' → logprob: -11.000951766967773
    9. '          ' → logprob: -11.000951766967773
    10. '		' → logprob: -11.750951766967773

Token 1209: ' val' (ID: 1459)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6470742225646973
    2. 'val' (adapté à ' val') → logprob: -0.7720742225646973
    3. '-' → logprob: -5.647074222564697
    4. 'sign' → logprob: -5.897074222564697
    5. 'result' → logprob: -5.897074222564697
    6. '-val' → logprob: -6.397074222564697
    7. 'output' → logprob: -7.147074222564697
    8. 's' → logprob: -7.647074222564697
    9. ' val' → logprob: -7.897074222564697
    10. 'res' → logprob: -7.897074222564697

Token 1210: '_fraction' (ID: 151287)
  Prédit: '_fraction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fraction' → logprob: -0.00032116140937432647
    2. '_' → logprob: -8.875321388244629
    3. 'fraction' → logprob: -9.750321388244629
    4. '=' → logprob: -10.750321388244629
    5. '_-' → logprob: -11.125321388244629
    6. '-' → logprob: -11.375321388244629
    7. '_sign' → logprob: -11.375321388244629
    8. 'Fraction' → logprob: -11.750321388244629
    9. ' =' → logprob: -11.750321388244629
    10. '_frac' → logprob: -12.250321388244629

Token 1211: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00015109812375158072
    2. ' =' → logprob: -8.875150680541992
    3. '*=' → logprob: -11.625150680541992
    4. '=-' → logprob: -13.250150680541992
    5. '-=' → logprob: -15.250150680541992
    6. '.=' → logprob: -15.500150680541992
    7. '*' → logprob: -17.500150680541992
    8. '   ' → logprob: -17.625150680541992
    9. '=

' → logprob: -17.625150680541992
    10. '```' → logprob: -17.625150680541992

Token 1212: ' -' (ID: 533)
  Prédit: '-val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-val' → logprob: -0.2385028600692749
    2. '-' → logprob: -2.6135029792785645
    3. '-F' → logprob: -2.8635029792785645
    4. '-f' → logprob: -3.2385029792785645
    5. '-fr' → logprob: -3.9885029792785645
    6. '-Val' → logprob: -4.1135029792785645
    7. ' -' → logprob: -5.3635029792785645
    8. '-Fr' → logprob: -6.4885029792785645
    9. '-value' → logprob: -6.6135029792785645
    10. '-values' → logprob: -10.863502502441406

Token 1213: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -3.547789674485102e-05
    2. ' val' → logprob: -10.250035285949707
    3. '	val' → logprob: -17.250036239624023
    4. '(val' → logprob: -17.625036239624023
    5. '   ' → logprob: -18.500036239624023
    6. '1' → logprob: -19.000036239624023
    7. 'Val' → logprob: -19.125036239624023
    8. 'valg' → logprob: -19.125036239624023
    9. '_val' → logprob: -19.250036239624023
    10. '           ' → logprob: -19.375036239624023

Token 1214: '_fraction' (ID: 151287)
  Prédit: '_fraction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fraction' → logprob: -0.0005831766175106168
    2. 'fraction' → logprob: -7.500583171844482
    3. 'val' → logprob: -10.75058364868164
    4. 'frac' → logprob: -12.00058364868164
    5. 'Fraction' → logprob: -14.00058364868164
    6. 'fract' → logprob: -14.25058364868164
    7. 'raction' → logprob: -15.12558364868164
    8. '_frac' → logprob: -15.12558364868164
    9. '_factor' → logprob: -15.87558364868164
    10. '_fragment' → logprob: -16.37558364868164

Token 1215: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.30570971965789795
    2. '       ' → logprob: -1.430709719657898
    3. '<|end|>' → logprob: -3.8057098388671875
    4. '        
' → logprob: -6.8057098388671875
    5. '<|end|>' → logprob: -8.805709838867188
    6. '
' → logprob: -8.930709838867188
    7. '\n' → logprob: -8.930709838867188
    8. '

' → logprob: -9.430709838867188
    9. ' 
' → logprob: -9.805709838867188
    10. '\' → logprob: -9.930709838867188

Token 1216: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43130001425743103
    2. '
' → logprob: -1.0563000440597534
    3. 'return' → logprob: -6.181300163269043
    4. '        
' → logprob: -8.806300163269043
    5. '
' → logprob: -9.431300163269043
    6. 'if' → logprob: -9.556300163269043
    7. ' return' → logprob: -9.806300163269043
    8. '```' → logprob: -10.056300163269043
    9. '   ' → logprob: -10.806300163269043
    10. ' if' → logprob: -10.931300163269043

Token 1217: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6609288454055786
    2. 'if' → logprob: -0.7859288454055786
    3. '
' → logprob: -4.160928726196289
    4. 'return' → logprob: -5.660928726196289
    5. 'from' → logprob: -6.410928726196289
    6. 'num' → logprob: -6.410928726196289
    7. 'numer' → logprob: -6.660928726196289
    8. ' if' → logprob: -6.660928726196289
    9. 'result' → logprob: -6.785928726196289
    10. '#' (adapté à ' #') → logprob: -8.035928726196289

Token 1218: ' Now' (ID: 6549)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.024465715512633324
    2. '       ' → logprob: -4.649465560913086
    3. 'numer' → logprob: -4.649465560913086
    4. '#' → logprob: -6.774465560913086
    5. 'num' → logprob: -6.774465560913086
    6. 'from' → logprob: -7.149465560913086
    7. 'decimal' → logprob: -7.649465560913086
    8. 'result' → logprob: -8.149465560913086
    9. 'int' → logprob: -8.149465560913086
    10. 'integer' → logprob: -8.274465560913086

Token 1219: ' convert' (ID: 8452)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6334648728370667
    2. 'numer' → logprob: -1.2584648132324219
    3. 'if' → logprob: -2.008464813232422
    4. 'int' → logprob: -4.383464813232422
    5. 'integer' → logprob: -4.508464813232422
    6. 'num' → logprob: -4.758464813232422
    7. ' numerator' → logprob: -5.133464813232422
    8. 'whole' → logprob: -5.133464813232422
    9. '#' → logprob: -6.008464813232422
    10. ' if' → logprob: -6.133464813232422

Token 1220: ' fraction' (ID: 33763)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33570653200149536
    2. 'if' → logprob: -1.5857064723968506
    3. 'numer' → logprob: -2.7107064723968506
    4. 'num' → logprob: -4.58570671081543
    5. '
' → logprob: -6.46070671081543
    6. 'int' → logprob: -6.83570671081543
    7. ' if' → logprob: -8.46070671081543
    8. 'from' → logprob: -8.58570671081543
    9. 'return' → logprob: -8.96070671081543
    10. '#' → logprob: -8.96070671081543

Token 1221: ' to' (ID: 316)
  Prédit: 'numer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numer' → logprob: -0.5822453498840332
    2. 'num' → logprob: -2.082245349884033
    3. '       ' → logprob: -2.207245349884033
    4. '.n' → logprob: -3.207245349884033
    5. '
' → logprob: -3.707245349884033
    6. '_num' → logprob: -3.832245349884033
    7. ' =' → logprob: -4.332245349884033
    8. '=' → logprob: -4.332245349884033
    9. 'to' → logprob: -4.457245349884033
    10. '.' → logprob: -4.582245349884033

Token 1222: ' decimal' (ID: 26964)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.8013988137245178
    2. 'str' → logprob: -1.051398754119873
    3. 'decimal' → logprob: -1.926398754119873
    4. 'string' → logprob: -3.176398754119873
    5. 'mixed' → logprob: -5.426398754119873
    6. 'f' → logprob: -5.551398754119873
    7. 'numer' → logprob: -5.676398754119873
    8. ' float' → logprob: -6.676398754119873
    9. 'val' → logprob: -7.426398754119873
    10. 'Decimal' → logprob: -8.551399230957031

Token 1223: ' string' (ID: 1621)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12392228096723557
    2. '
' → logprob: -2.748922348022461
    3. 'numer' → logprob: -4.123922348022461
    4. 'num' → logprob: -4.998922348022461
    5. 'dec' → logprob: -4.998922348022461
    6. 'decimal' → logprob: -5.123922348022461
    7. 'return' → logprob: -5.623922348022461
    8. 'val' → logprob: -5.623922348022461
    9. '```' → logprob: -5.998922348022461
    10. 'result' → logprob: -6.248922348022461

Token 1224: ' without' (ID: 2935)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05062112957239151
    2. '
' → logprob: -3.0506210327148438
    3. 'numer' → logprob: -6.800621032714844
    4. '        
' → logprob: -7.675621032714844
    5. ' numerator' → logprob: -9.050621032714844
    6. ',' → logprob: -9.300621032714844
    7. '
' → logprob: -9.300621032714844
    8. 'num' → logprob: -10.675621032714844
    9. 'result' → logprob: -11.550621032714844
    10. 'return' → logprob: -11.550621032714844

Token 1225: ' approximation' (ID: 112838)
  Prédit: 'loss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'loss' → logprob: -0.8011462092399597
    2. 'los' → logprob: -1.3011462688446045
    3. 'using' → logprob: -1.9261462688446045
    4. 'ex' → logprob: -3.8011462688446045
    5. 'tr' → logprob: -3.9261462688446045
    6. 're' → logprob: -4.051146030426025
    7. 'lim' → logprob: -4.426146030426025
    8. 'limit' → logprob: -4.426146030426025
    9. 'floating' → logprob: -4.676146030426025
    10. ' losing' → logprob: -4.801146030426025

Token 1226: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2857774496078491
    2. '
' → logprob: -1.4107774496078491
    3. '        
' → logprob: -6.285777568817139
    4. '
' → logprob: -6.660777568817139
    5. ',' → logprob: -7.910777568817139
    6. '.' → logprob: -8.66077709197998
    7. ' numerator' → logprob: -9.03577709197998
    8. ')' → logprob: -9.78577709197998
    9. '```' → logprob: -9.91077709197998
    10. 'result' → logprob: -9.91077709197998

Token 1227: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00024548539659008384
    2. '```' → logprob: -8.875245094299316
    3. 'return' → logprob: -9.875245094299316
    4. ' if' → logprob: -11.375245094299316
    5. 'if' → logprob: -11.500245094299316
    6. ' return' → logprob: -12.000245094299316
    7. 'num' → logprob: -12.250245094299316
    8. '
' → logprob: -12.625245094299316
    9. '           ' → logprob: -12.750245094299316
    10. '`' → logprob: -12.750245094299316

Token 1228: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1425010859966278
    2. 'return' → logprob: -2.51750111579895
    3. 'decimal' → logprob: -4.267500877380371
    4. 'numer' → logprob: -4.892500877380371
    5. 'result' → logprob: -4.892500877380371
    6. 'from' → logprob: -5.142500877380371
    7. 'num' → logprob: -5.392500877380371
    8. 'dec' → logprob: -5.392500877380371
    9. 'if' → logprob: -6.017500877380371
    10. 'import' → logprob: -6.267500877380371

Token 1229: ' convert' (ID: 8452)
  Prédit: 'decimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'decimal' → logprob: -1.016116976737976
    2. 'return' → logprob: -1.266116976737976
    3. 'dec' → logprob: -2.0161170959472656
    4. 'numer' → logprob: -2.3911170959472656
    5. '       ' → logprob: -2.8911170959472656
    6. 'if' → logprob: -4.016117095947266
    7. 'from' → logprob: -4.016117095947266
    8. 'num' → logprob: -4.391117095947266
    9. 'digits' → logprob: -5.016117095947266
    10. 'result' → logprob: -5.141117095947266

Token 1230: ' numerator' (ID: 149054)
  Prédit: 'numer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numer' → logprob: -1.2631639242172241
    2. 'decimal' → logprob: -1.3881639242172241
    3. 'return' → logprob: -2.0131640434265137
    4. 'dec' → logprob: -2.1381640434265137
    5. 'result' → logprob: -2.7631640434265137
    6. 'num' → logprob: -3.7631640434265137
    7. '
' → logprob: -3.8881640434265137
    8. '       ' → logprob: -4.138164043426514
    9. 'digits' → logprob: -4.263164043426514
    10. 'val' → logprob: -4.263164043426514

Token 1231: ' and' (ID: 326)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.24615080654621124
    2. ',' → logprob: -1.9961508512496948
    3. '.' → logprob: -4.121150970458984
    4. '//' → logprob: -4.246150970458984
    5. ' /' → logprob: -4.371150970458984
    6. 'val' → logprob: -4.996150970458984
    7. '```' → logprob: -5.121150970458984
    8. ')' → logprob: -5.496150970458984
    9. '*' → logprob: -5.621150970458984
    10. '=' → logprob: -5.871150970458984

Token 1232: ' denominator' (ID: 101279)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.0007129086880013347
    2. ' denominator' → logprob: -7.250712871551514
    3. 'val' → logprob: -13.125713348388672
    4. 'fraction' → logprob: -15.000713348388672
    5. '#' → logprob: -16.000713348388672
    6. '_den' → logprob: -16.375713348388672
    7. 'decimal' → logprob: -16.500713348388672
    8. '100' → logprob: -16.750713348388672
    9. '   ' → logprob: -16.875713348388672
    10. '```' → logprob: -17.125713348388672

Token 1233: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4233753681182861
    2. 'num' → logprob: -1.5483753681182861
    3. 'numer' → logprob: -1.5483753681182861
    4. '=' → logprob: -1.6733753681182861
    5. ' =' → logprob: -3.298375368118286
    6. ',' → logprob: -4.048375129699707
    7. ' numerator' → logprob: -4.673375129699707
    8. '#' → logprob: -4.673375129699707
    9. '_n' → logprob: -4.923375129699707
    10. '   ' → logprob: -4.923375129699707

Token 1234: ' decimal' (ID: 26964)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.4521661400794983
    2. 'decimal' → logprob: -1.2021660804748535
    3. 'Decimal' → logprob: -4.4521660804748535
    4. 'int' → logprob: -4.8271660804748535
    5. 'dec' → logprob: -4.8271660804748535
    6. 'string' → logprob: -4.9521660804748535
    7. 'val' → logprob: -5.2021660804748535
    8. 'digits' → logprob: -5.7021660804748535
    9. 'Fraction' → logprob: -5.8271660804748535
    10. 'value' → logprob: -5.9521660804748535

Token 1235: ' string' (ID: 1621)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1554642915725708
    2. '
' → logprob: -2.6554641723632812
    3. 'num' → logprob: -3.4054641723632812
    4. 'numer' → logprob: -3.4054641723632812
    5. '```' → logprob: -6.155464172363281
    6. ' numerator' → logprob: -6.530464172363281
    7. ',' → logprob: -7.405464172363281
    8. '        
' → logprob: -7.405464172363281
    9. '#' → logprob: -8.280464172363281
    10. '_n' → logprob: -8.280464172363281

Token 1236: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5907310843467712
    2. 'num' → logprob: -1.215731143951416
    3. 'numer' → logprob: -2.090731143951416
    4. '
' → logprob: -4.090731143951416
    5. '```' → logprob: -5.715731143951416
    6. 'n' → logprob: -5.965731143951416
    7. 'from' → logprob: -6.965731143951416
    8. 'if' → logprob: -7.340731143951416
    9. '#' → logprob: -7.590731143951416
    10. '_n' → logprob: -8.340730667114258

Token 1237: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06536742299795151
    2. 'num' → logprob: -3.4403674602508545
    3. 'numer' → logprob: -3.6903674602508545
    4. ' numerator' → logprob: -6.190367221832275
    5. 'n' → logprob: -7.315367221832275
    6. '```' → logprob: -7.440367221832275
    7. ',' → logprob: -7.440367221832275
    8. '
' → logprob: -7.940367221832275
    9. ' num' → logprob: -8.190367698669434
    10. '           ' → logprob: -8.815367698669434

Token 1238: ' numerator' (ID: 149054)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8070219159126282
    2. 'num' → logprob: -1.0570218563079834
    3. 'numer' → logprob: -1.6820218563079834
    4. ' numerator' → logprob: -4.8070220947265625
    5. 'n' → logprob: -5.1820220947265625
    6. 'if' → logprob: -5.5570220947265625
    7. 'return' → logprob: -6.6820220947265625
    8. ' num' → logprob: -8.182022094726562
    9. 'den' → logprob: -8.557022094726562
    10. '
' → logprob: -9.057022094726562

Token 1239: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5895097255706787
    2. ' =' → logprob: -0.8395097255706787
    3. ',' → logprob: -4.464509963989258
    4. '<|end|>' → logprob: -7.964509963989258
    5. '   ' → logprob: -8.214509963989258
    6. ')' → logprob: -8.589509963989258
    7. '.' → logprob: -8.714509963989258
    8. ' ' → logprob: -8.714509963989258
    9. ' /' → logprob: -9.214509963989258
    10. 'str' → logprob: -9.339509963989258

Token 1240: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.007826411165297031
    2. 'abs' → logprob: -5.382826328277588
    3. ' val' → logprob: -6.257826328277588
    4. 'str' → logprob: -7.132826328277588
    5. 'self' → logprob: -7.757826328277588
    6. ' abs' → logprob: -10.132826805114746
    7. 'int' → logprob: -11.882826805114746
    8. ' str' → logprob: -12.382826805114746
    9. ' self' → logprob: -12.757826805114746
    10. '       ' → logprob: -12.882826805114746

Token 1241: '_fraction' (ID: 151287)
  Prédit: '_fraction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fraction' → logprob: -6.027225754223764e-05
    2. 'fraction' → logprob: -10.750060081481934
    3. 'Fraction' → logprob: -11.000060081481934
    4. '   ' → logprob: -12.500060081481934
    5. 'val' → logprob: -12.500060081481934
    6. '\' → logprob: -13.125060081481934
    7. '_ratio' → logprob: -13.375060081481934
    8. '_factor' → logprob: -14.000060081481934
    9. 'umerator' → logprob: -14.250060081481934
    10. 'ation' → logprob: -14.375060081481934

Token 1242: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.00190472393296659
    2. 'numer' → logprob: -6.751904487609863
    3. '.' → logprob: -7.501904487609863
    4. '.abs' → logprob: -10.001904487609863
    5. 'umerator' → logprob: -10.251904487609863
    6. ' numerator' → logprob: -10.501904487609863
    7. '```' → logprob: -11.376904487609863
    8. '.num' → logprob: -11.626904487609863
    9. '<|end|>' → logprob: -11.751904487609863
    10. ' .' → logprob: -11.876904487609863

Token 1243: 'umerator' (ID: 152035)
  Prédit: 'umerator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umerator' → logprob: -0.2526620626449585
    2. 'um' → logprob: -1.5026620626449585
    3. 'umer' → logprob: -7.252662181854248
    4. '   ' → logprob: -12.25266170501709
    5. 'numer' → logprob: -12.25266170501709
    6. '```' → logprob: -12.37766170501709
    7. 'abs' → logprob: -12.75266170501709
    8. '**' → logprob: -13.87766170501709
    9. ' numerator' → logprob: -14.37766170501709
    10. '
' → logprob: -14.62766170501709

Token 1244: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1245: '       ' (ID: 309)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.008192665874958038
    2. '       ' → logprob: -5.383192539215088
    3. ' denominator' → logprob: -7.133192539215088
    4. '/' → logprob: -7.258192539215088
    5. '.' → logprob: -7.383192539215088
    6. '/
' → logprob: -7.508192539215088
    7. ',' → logprob: -8.133193016052246
    8. '```' → logprob: -9.258193016052246
    9. '.den' → logprob: -9.633193016052246
    10. '   ' → logprob: -9.883193016052246

Token 1246: ' denominator' (ID: 101279)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.0003187810070812702
    2. 'if' → logprob: -8.62531852722168
    3. ' denominator' → logprob: -9.37531852722168
    4. 'decimal' → logprob: -10.25031852722168
    5. 'numer' → logprob: -11.87531852722168
    6. '   ' → logprob: -12.25031852722168
    7. ''' → logprob: -13.50031852722168
    8. ''.' → logprob: -13.50031852722168
    9. '"."' → logprob: -13.87531852722168
    10. '"/' → logprob: -14.12531852722168

Token 1247: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02054574340581894
    2. '=' → logprob: -3.895545721054077
    3. '<|end|>' → logprob: -13.395545959472656
    4. ',' → logprob: -13.645545959472656
    5. ')' → logprob: -14.895545959472656
    6. '=n' → logprob: -15.645545959472656
    7. ' =
' → logprob: -16.145545959472656
    8. ' ' → logprob: -16.145545959472656
    9. 'import' → logprob: -16.770545959472656
    10. '<|end|>' → logprob: -16.895545959472656

Token 1248: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -3.547789674485102e-05
    2. ' val' → logprob: -10.250035285949707
    3. 'den' → logprob: -17.250036239624023
    4. '   ' → logprob: -18.750036239624023
    5. 'int' → logprob: -19.500036239624023
    6. '	val' → logprob: -19.750036239624023
    7. ' ' → logprob: -20.875036239624023
    8. '(val' → logprob: -21.000036239624023
    9. 'v' → logprob: -21.250036239624023
    10. 'frac' → logprob: -21.250036239624023

Token 1249: '_fraction' (ID: 151287)
  Prédit: '_fraction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fraction' → logprob: -0.28803467750549316
    2. 'val' → logprob: -1.4130346775054932
    3. 'fraction' → logprob: -5.163034439086914
    4. '_val' → logprob: -6.913034439086914
    5. 'den' → logprob: -9.788034439086914
    6. '.val' → logprob: -10.538034439086914
    7. 'Fraction' → logprob: -11.163034439086914
    8. 'frac' → logprob: -11.413034439086914
    9. '_den' → logprob: -11.538034439086914
    10. '_frac' → logprob: -12.038034439086914

Token 1250: '.den' (ID: 152740)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.16442273557186127
    2. '.den' → logprob: -2.2894227504730225
    3. '_den' → logprob: -3.6644227504730225
    4. '```' → logprob: -4.414422512054443
    5. '<|end|>' → logprob: -5.539422512054443
    6. '
' → logprob: -6.789422512054443
    7. ' denominator' → logprob: -6.789422512054443
    8. '**' → logprob: -6.914422512054443
    9. ' ' → logprob: -7.539422512054443
    10. '#' → logprob: -7.664422512054443

Token 1251: 'ominator' (ID: 96399)
  Prédit: 'ominator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ominator' → logprob: -2.696889623621246e-06
    2. 'om' → logprob: -13.50000286102295
    3. 'umerator' → logprob: -14.12500286102295
    4. 'omin' → logprob: -14.50000286102295
    5. 'inator' → logprob: -17.625001907348633
    6. 'omi' → logprob: -18.000001907348633
    7. '```' → logprob: -18.000001907348633
    8. 'imator' → logprob: -18.625001907348633
    9. '**' → logprob: -19.375001907348633
    10. '   ' → logprob: -19.375001907348633

Token 1252: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10159868001937866
    2. 'if' → logprob: -3.2265987396240234
    3. '       ' → logprob: -3.6015987396240234
    4. ' if' → logprob: -3.7265987396240234
    5. '```' → logprob: -6.851598739624023
    6. ',
' → logprob: -7.101598739624023
    7. ',' → logprob: -7.101598739624023
    8. '
' → logprob: -7.476598739624023
    9. '.
' → logprob: -8.101598739624023
    10. '        
' → logprob: -8.101598739624023

Token 1253: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2085002362728119
    2. '       ' → logprob: -1.7085002660751343
    3. ' if' → logprob: -5.208500385284424
    4. '```' → logprob: -7.958500385284424
    5. 'num' → logprob: -8.333499908447266
    6. '
' → logprob: -8.958499908447266
    7. ',' → logprob: -9.083499908447266
    8. '        
' → logprob: -9.083499908447266
    9. '#' → logprob: -9.083499908447266
    10. '   ' → logprob: -9.458499908447266

Token 1254: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04060104116797447
    2. ' if' → logprob: -3.4156010150909424
    3. '       ' → logprob: -5.4156012535095215
    4. 'integer' → logprob: -6.7906012535095215
    5. 'result' → logprob: -7.9156012535095215
    6. 'decimal' → logprob: -8.540600776672363
    7. 'quot' → logprob: -8.665600776672363
    8. 'int' → logprob: -8.915600776672363
    9. '
' → logprob: -9.415600776672363
    10. ' integer' → logprob: -9.540600776672363

Token 1255: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.19821186363697052
    2. 'integer' → logprob: -1.823211908340454
    3. 'int' → logprob: -4.323211669921875
    4. '#' → logprob: -6.698211669921875
    5. 'whole' → logprob: -6.948211669921875
    6. 'quot' → logprob: -7.448211669921875
    7. '   ' → logprob: -7.573211669921875
    8. ' if' → logprob: -7.948211669921875
    9. '       ' → logprob: -8.198211669921875
    10. 'result' → logprob: -8.323211669921875

Token 1256: ' denominator' (ID: 101279)
  Prédit: 'numer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numer' → logprob: -0.9031887054443359
    2. ' numerator' → logprob: -1.153188705444336
    3. 'den' → logprob: -1.403188705444336
    4. ' denominator' → logprob: -3.403188705444336
    5. ' den' → logprob: -12.403188705444336
    6. 'n' → logprob: -13.153188705444336
    7. 'umerator' → logprob: -13.528188705444336
    8. 'Numer' → logprob: -13.528188705444336
    9. '   ' → logprob: -13.778188705444336
    10. ' ' → logprob: -13.903188705444336

Token 1257: ' is' (ID: 382)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20170003175735474
    2. '==' → logprob: -1.70169997215271
    3. '%' → logprob: -8.326700210571289
    4. ' %' → logprob: -10.451700210571289
    5. '=' → logprob: -11.701700210571289
    6. '===' → logprob: -13.701700210571289
    7. ' ' → logprob: -13.701700210571289
    8. ' ' → logprob: -13.701700210571289
    9. '```' → logprob: -13.826700210571289
    10. ')' → logprob: -14.076700210571289

Token 1258: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -18.125045776367188
    4. 'den' → logprob: -18.750045776367188
    5. '=' → logprob: -18.875045776367188
    6. '       ' → logprob: -19.625045776367188
    7. '           ' → logprob: -19.750045776367188
    8. '==' → logprob: -20.375045776367188
    9. '`' → logprob: -20.500045776367188
    10. 'n' → logprob: -20.750045776367188

Token 1259: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -17.3750057220459
    4. 'den' → logprob: -18.2500057220459
    5. '           ' → logprob: -20.7500057220459
    6. '       ' → logprob: -21.0000057220459
    7. '  ' → logprob: -21.0000057220459
    8. '0' → logprob: -21.2500057220459
    9. '`' → logprob: -21.5000057220459
    10. '    ' → logprob: -21.7500057220459

Token 1260: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005236837547272444
    2. ':
' → logprob: -6.380236625671387
    3. ':return' → logprob: -6.505236625671387
    4. '==' → logprob: -7.505236625671387
    5. ' or' → logprob: -7.630236625671387
    6. ' and' → logprob: -8.130236625671387
    7. '{' → logprob: -8.630236625671387
    8. ',' → logprob: -8.880236625671387
    9. '       ' → logprob: -9.005236625671387
    10. '           ' → logprob: -9.130236625671387

Token 1261: ' integer' (ID: 16336)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3216207027435303
    2. 'return' → logprob: -1.3216207027435303
    3. '           ' → logprob: -4.821620941162109
    4. ':return' → logprob: -8.69662094116211
    5. '       ' → logprob: -10.32162094116211
    6. '```' → logprob: -10.94662094116211
    7. '          ' → logprob: -11.32162094116211
    8. ':' → logprob: -11.57162094116211
    9. '               ' → logprob: -11.94662094116211
    10. '{return' → logprob: -12.57162094116211

Token 1262: ' number' (ID: 2086)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.040740728378296
    2. ':' → logprob: -1.665740728378296
    3. '.' → logprob: -2.290740728378296
    4. '"' → logprob: -2.915740728378296
    5. 'part' → logprob: -3.415740728378296
    6. ' part' → logprob: -3.540740728378296
    7. '_str' → logprob: -3.665740728378296
    8. '""' → logprob: -3.665740728378296
    9. 'string' → logprob: -3.915740728378296
    10. 'str' → logprob: -4.040740966796875

Token 1263: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005600834731012583
    2. ':
' → logprob: -5.880600929260254
    3. '           ' → logprob: -7.005600929260254
    4. ',' → logprob: -7.130600929260254
    5. '       ' → logprob: -7.630600929260254
    6. ':return' → logprob: -7.880600929260254
    7. ' or' → logprob: -9.880600929260254
    8. '{' → logprob: -10.255600929260254
    9. '.' → logprob: -10.380600929260254
    10. ' and' → logprob: -10.505600929260254

Token 1264: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5215801000595093
    2. '       ' → logprob: -1.3965801000595093
    3. ':' → logprob: -1.8965801000595093
    4. ':
' → logprob: -5.146580219268799
    5. '{' → logprob: -6.646580219268799
    6. ',' → logprob: -7.771580219268799
    7. ' if' → logprob: -8.02157974243164
    8. ' and' → logprob: -8.27157974243164
    9. ' or' → logprob: -8.39657974243164
    10. '{
' → logprob: -8.77157974243164

Token 1265: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25901123881340027
    2. ' if' → logprob: -1.7590112686157227
    3. 'if' (adapté à ' if') → logprob: -2.8840112686157227
    4. '           ' → logprob: -10.634011268615723
    5. '   ' → logprob: -11.134011268615723
    6. '```' → logprob: -11.759011268615723
    7. ',' → logprob: -12.509011268615723
    8. ':' → logprob: -13.134011268615723
    9. '        ' → logprob: -13.384011268615723
    10. 'If' → logprob: -13.634011268615723

Token 1266: ' denominator' (ID: 101279)
  Prédit: ' denominator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' denominator' → logprob: -0.3902384042739868
    2. 'den' → logprob: -1.1402384042739868
    3. ' numerator' → logprob: -5.765238285064697
    4. 'numer' → logprob: -8.765238761901855
    5. 'val' → logprob: -10.140238761901855
    6. ' den' → logprob: -11.390238761901855
    7. ' denom' → logprob: -11.640238761901855
    8. ' val' → logprob: -12.140238761901855
    9. ' denomination' → logprob: -12.515238761901855
    10. ' denomin' → logprob: -13.515238761901855

Token 1267: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6326901912689209
    2. ' ==' → logprob: -0.7576901912689209
    3. '=' → logprob: -9.7576904296875
    4. '[' → logprob: -11.7576904296875
    5. '===' → logprob: -11.7576904296875
    6. '{' → logprob: -12.3826904296875
    7. ')==' → logprob: -12.7576904296875
    8. '==
' → logprob: -12.8826904296875
    9. '```' → logprob: -13.3826904296875
    10. ')' → logprob: -13.6326904296875

Token 1268: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007100477814674377
    2. ' ' → logprob: -7.2507100105285645
    3. '```' → logprob: -16.625709533691406
    4. '   ' → logprob: -17.375709533691406
    5. '0' → logprob: -19.375709533691406
    6. '       ' → logprob: -19.375709533691406
    7. '           ' → logprob: -19.375709533691406
    8. '=' → logprob: -19.875709533691406
    9. '`' → logprob: -20.375709533691406
    10. '[' → logprob: -21.125709533691406

Token 1269: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '```' → logprob: -17.375003814697266
    4. '   ' → logprob: -19.250003814697266
    5. '=' → logprob: -20.312503814697266
    6. '0' → logprob: -20.937503814697266
    7. '۱' → logprob: -21.375003814697266
    8. '           ' → logprob: -21.625003814697266
    9. '       ' → logprob: -21.625003814697266
    10. '>' → logprob: -21.625003814697266

Token 1270: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019109532237052917
    2. ':
' → logprob: -4.269109725952148
    3. '           ' → logprob: -5.769109725952148
    4. ':return' → logprob: -6.394109725952148
    5. 'return' → logprob: -9.394109725952148
    6. '       ' → logprob: -11.019109725952148
    7. ' return' → logprob: -11.894109725952148
    8. ' and' → logprob: -12.019109725952148
    9. ',' → logprob: -12.269109725952148
    10. '.' → logprob: -12.269109725952148

Token 1271: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01628069020807743
    2. 'return' → logprob: -4.141280651092529
    3. ' return' → logprob: -8.391281127929688
    4. '```' → logprob: -12.391281127929688
    5. '
' → logprob: -12.516281127929688
    6. '{return' → logprob: -13.016281127929688
    7. '		' → logprob: -13.391281127929688
    8. '               ' → logprob: -13.516281127929688
    9. '          ' → logprob: -13.516281127929688
    10. '       ' → logprob: -13.891281127929688

Token 1272: ' result' (ID: 1534)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1297426074743271
    2. '           ' → logprob: -2.1297426223754883
    3. ' return' → logprob: -5.879742622375488
    4. '   ' → logprob: -11.879742622375488
    5. '       ' → logprob: -12.504742622375488
    6. '               ' → logprob: -13.754742622375488
    7. '	return' → logprob: -13.879742622375488
    8. '{return' → logprob: -14.004742622375488
    9. ':return' → logprob: -14.254742622375488
    10. '          ' → logprob: -15.004742622375488

Token 1273: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12182377278804779
    2. '=' → logprob: -2.246823787689209
    3. 'return' → logprob: -5.246823787689209
    4. ' return' → logprob: -5.746823787689209
    5. '           ' → logprob: -7.746823787689209
    6. ':return' → logprob: -11.24682331085205
    7. '=f' → logprob: -11.49682331085205
    8. '       ' → logprob: -11.62182331085205
    9. ':' → logprob: -11.99682331085205
    10. '               ' → logprob: -12.12182331085205

Token 1274: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0016647082520648837
    2. 'f' → logprob: -6.501664638519287
    3. ' str' → logprob: -8.751665115356445
    4. '           ' → logprob: -13.626665115356445
    5. '   ' → logprob: -13.751665115356445
    6. ' f' → logprob: -14.001665115356445
    7. '       ' → logprob: -14.376665115356445
    8. '(str' → logprob: -15.251665115356445
    9. '               ' → logprob: -16.376665115356445
    10. '	str' → logprob: -16.501665115356445

Token 1275: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00302191823720932
    2. 'numer' → logprob: -6.378021717071533
    3. '(-' → logprob: -7.628021717071533
    4. '(abs' → logprob: -8.003022193908691
    5. 'n' → logprob: -8.503022193908691
    6. 'sign' → logprob: -8.878022193908691
    7. '(sign' → logprob: -9.753022193908691
    8. '(' → logprob: -10.003022193908691
    9. 'abs' → logprob: -10.378022193908691
    10. '(int' → logprob: -11.503022193908691

Token 1276: 'umerator' (ID: 152035)
  Prédit: 'umerator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umerator' → logprob: -0.00029399030609056354
    2. 'umer' → logprob: -9.000293731689453
    3. 'numer' → logprob: -9.750293731689453
    4. 'um' → logprob: -10.000293731689453
    5. 'val' → logprob: -10.375293731689453
    6. '(n' → logprob: -10.875293731689453
    7. '(' → logprob: -12.125293731689453
    8. 'ator' → logprob: -13.125293731689453
    9. '   ' → logprob: -13.375293731689453
    10. '{' → logprob: -13.500293731689453

Token 1277: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.41129949549213e-05
    2. ')
' → logprob: -9.750083923339844
    3. ' )' → logprob: -11.500083923339844
    4. ')return' → logprob: -11.875083923339844
    5. '<|end|>' → logprob: -12.250083923339844
    6. '       ' → logprob: -13.375083923339844
    7. '<|end|>' → logprob: -14.750083923339844
    8. '   ' → logprob: -15.125083923339844
    9. ')+' → logprob: -15.500083923339844
    10. '```' → logprob: -15.500083923339844

Token 1278: ' +' (ID: 659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00710925180464983
    2. 'return' → logprob: -5.50710916519165
    3. 'else' → logprob: -5.88210916519165
    4. ' else' → logprob: -9.132109642028809
    5. '           ' → logprob: -9.882109642028809
    6. ' return' → logprob: -10.632109642028809
    7. '
' → logprob: -10.882109642028809
    8. 'elif' → logprob: -11.132109642028809
    9. ')' → logprob: -12.507109642028809
    10. '<|end|>' → logprob: -12.507109642028809

Token 1279: ' ".' (ID: 11730)
  Prédit: '".'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '".' → logprob: -0.402783066034317
    2. '""' → logprob: -1.1527830362319946
    3. ''.' → logprob: -4.652782917022705
    4. '"."' → logprob: -5.902782917022705
    5. '''' → logprob: -6.402782917022705
    6. '"' → logprob: -6.527782917022705
    7. ' ".' → logprob: -9.152783393859863
    8. '"\' → logprob: -9.527783393859863
    9. '''.' → logprob: -9.902783393859863
    10. ' ""' → logprob: -10.027783393859863

Token 1280: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3856492842023727e-06
    2. '"' → logprob: -14.125000953674316
    3. '00' → logprob: -14.375000953674316
    4. '000' → logprob: -18.500001907348633
    5. ''' → logprob: -19.000001907348633
    6. ' ' → logprob: -20.000001907348633
    7. '```' → logprob: -20.875001907348633
    8. 'rstrip' → logprob: -21.625001907348633
    9. '""' → logprob: -22.125001907348633
    10. '``' → logprob: -22.125001907348633

Token 1281: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.001176416757516563
    2. '"
' → logprob: -6.751176357269287
    3. '"
' → logprob: -12.626176834106445
    4. '"`' → logprob: -14.001176834106445
    5. '"""' → logprob: -14.751176834106445
    6. '       ' → logprob: -15.001176834106445
    7. '"`
' → logprob: -15.126176834106445
    8. ''"' → logprob: -15.376176834106445
    9. '")' → logprob: -15.626176834106445
    10. '"}' → logprob: -15.626176834106445

Token 1282: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09201627224683762
    2. 'else' → logprob: -2.4670162200927734
    3. ' else' → logprob: -6.592016220092773
    4. '```' → logprob: -6.967016220092773
    5. 'elif' → logprob: -7.592016220092773
    6. ')' → logprob: -10.217016220092773
    7. '\n' → logprob: -10.217016220092773
    8. '   ' → logprob: -10.342016220092773
    9. '
' → logprob: -10.467016220092773
    10. '[' → logprob: -10.717016220092773

Token 1283: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1250612586736679
    2. 'else' → logprob: -2.250061273574829
    3. 'return' (adapté à ' return') → logprob: -5.25006103515625
    4. '           ' → logprob: -5.25006103515625
    5. ' else' → logprob: -6.50006103515625
    6. 'elif' → logprob: -9.87506103515625
    7. '   ' → logprob: -10.12506103515625
    8. ' return' → logprob: -10.25006103515625
    9. '```' → logprob: -10.37506103515625
    10. '
' → logprob: -12.75006103515625

Token 1284: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -2.339278580620885e-06
    2. ' result' → logprob: -13.000001907348633
    3. 'return' → logprob: -20.375001907348633
    4. '```' → logprob: -20.375001907348633
    5. '
' → logprob: -21.000001907348633
    6. '(result' → logprob: -22.500001907348633
    7. '`' → logprob: -22.500001907348633
    8. '   ' → logprob: -22.750001907348633
    9. '           ' → logprob: -23.000001907348633
    10. '       ' → logprob: -23.500001907348633

Token 1285: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04490204527974129
    2. '
' → logprob: -3.6699020862579346
    3. 'else' → logprob: -4.7949018478393555
    4. '        
' → logprob: -5.6699018478393555
    5. '\n' → logprob: -5.9199018478393555
    6. 'elif' → logprob: -6.9199018478393555
    7. '\
' → logprob: -7.1699018478393555
    8. '```' → logprob: -7.9199018478393555
    9. ' else' → logprob: -8.169901847839355
    10. '' → logprob: -8.169901847839355

Token 1286: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031518787145614624
    2. '
' → logprob: -3.6565186977386475
    3. '        
' → logprob: -5.406518936157227
    4. 'else' → logprob: -8.031518936157227
    5. '   ' → logprob: -9.156518936157227
    6. '    
' → logprob: -9.156518936157227
    7. '```' → logprob: -9.656518936157227
    8. 'elif' → logprob: -10.406518936157227
    9. '\
' → logprob: -10.781518936157227
    10. '           ' → logprob: -11.406518936157227

Token 1287: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36186185479164124
    2. '#' (adapté à ' #') → logprob: -2.2368619441986084
    3. 'decimal' → logprob: -2.8618619441986084
    4. 'result' → logprob: -3.1118619441986084
    5. 'else' → logprob: -3.4868619441986084
    6. 'numer' → logprob: -3.9868619441986084
    7. '
' → logprob: -4.361861705780029
    8. 'integer' → logprob: -4.611861705780029
    9. 'quot' → logprob: -4.611861705780029
    10. 'num' → logprob: -5.986861705780029

Token 1288: ' else' (ID: 1203)
  Prédit: 'integer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'integer' → logprob: -0.34552836418151855
    2. '#' → logprob: -2.3455283641815186
    3. 'decimal' → logprob: -3.0955283641815186
    4. 'quot' → logprob: -3.0955283641815186
    5. 'result' → logprob: -3.5955283641815186
    6. 'whole' → logprob: -3.8455283641815186
    7. 'int' → logprob: -4.095528602600098
    8. '   ' → logprob: -4.220528602600098
    9. '       ' → logprob: -4.470528602600098
    10. 'digits' → logprob: -4.970528602600098

Token 1289: ' decimal' (ID: 26964)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6437394618988037
    2. 'numer' → logprob: -1.1437394618988037
    3. '#' → logprob: -3.2687394618988037
    4. 'result' → logprob: -3.3937394618988037
    5. 'num' → logprob: -4.018739700317383
    6. 'integer' → logprob: -4.393739700317383
    7. ' numerator' → logprob: -4.393739700317383
    8. 'quot' → logprob: -4.643739700317383
    9. 'decimal' → logprob: -4.643739700317383
    10. '
' → logprob: -5.143739700317383

Token 1290: ' with' (ID: 483)
  Prédit: '_point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.8247795104980469
    2. '       ' → logprob: -2.074779510498047
    3. '_places' → logprob: -2.324779510498047
    4. '_parts' → logprob: -2.824779510498047
    5. '_repr' → logprob: -3.449779510498047
    6. '   ' → logprob: -3.574779510498047
    7. 'point' → logprob: -3.699779510498047
    8. '_place' → logprob: -3.949779510498047
    9. '_' → logprob: -4.074779510498047
    10. '.' → logprob: -4.074779510498047

Token 1291: ' fraction' (ID: 33763)
  Prédit: 'numer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numer' → logprob: -0.3874521851539612
    2. 'den' → logprob: -1.8874521255493164
    3. ''.' → logprob: -3.5124521255493164
    4. 'decimal' → logprob: -3.7624521255493164
    5. '"."' → logprob: -4.012452125549316
    6. '".' → logprob: -4.387452125549316
    7. ' numerator' → logprob: -4.512452125549316
    8. '"' → logprob: -4.512452125549316
    9. 'result' → logprob: -4.637452125549316
    10. ''' → logprob: -4.887452125549316

Token 1292: ' part' (ID: 997)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2811743021011353
    2. ':
' → logprob: -1.4061743021011353
    3. '       ' → logprob: -1.6561743021011353
    4. ' =' → logprob: -2.2811741828918457
    5. '   ' → logprob: -3.0311741828918457
    6. 'result' → logprob: -3.4061741828918457
    7. '=' → logprob: -3.7811741828918457
    8. '```' → logprob: -3.9061741828918457
    9. '
' → logprob: -4.031174182891846
    10. '.' → logprob: -5.156174182891846

Token 1293: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23789532482624054
    2. '
' → logprob: -2.1128952503204346
    3. 'numer' → logprob: -3.1128952503204346
    4. ' numerator' → logprob: -4.362895488739014
    5. '```' → logprob: -4.737895488739014
    6. '        
' → logprob: -4.862895488739014
    7. ':
' → logprob: -5.862895488739014
    8. 'num' → logprob: -6.362895488739014
    9. 'result' → logprob: -6.362895488739014
    10. '``' → logprob: -6.487895488739014

Token 1294: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22015318274497986
    2. ':' → logprob: -2.0951530933380127
    3. ' =' → logprob: -3.5951530933380127
    4. ':
' → logprob: -3.7201530933380127
    5. '=' → logprob: -4.595153331756592
    6. ',' → logprob: -5.845153331756592
    7. '{' → logprob: -6.470153331756592
    8. '        
' → logprob: -6.470153331756592
    9. '           ' → logprob: -7.095153331756592
    10. '
' → logprob: -7.345153331756592

Token 1295: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7444826364517212
    2. 'numer' → logprob: -1.2444826364517212
    3. '
' → logprob: -2.8694825172424316
    4. 'num' → logprob: -3.1194825172424316
    5. ' numerator' → logprob: -3.2444825172424316
    6. 'result' → logprob: -3.3694825172424316
    7. 'quot' → logprob: -4.494482517242432
    8. '        
' → logprob: -4.494482517242432
    9. 'decimal' → logprob: -4.619482517242432
    10. '#' (adapté à ' #') → logprob: -5.244482517242432

Token 1296: ' convert' (ID: 8452)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5144974589347839
    2. 'numer' → logprob: -1.2644975185394287
    3. 'decimal' → logprob: -3.3894975185394287
    4. 'quot' → logprob: -3.6394975185394287
    5. 'integer' → logprob: -4.01449728012085
    6. 'result' → logprob: -4.13949728012085
    7. 'num' → logprob: -4.38949728012085
    8. 'dec' → logprob: -6.26449728012085
    9. 'digits' → logprob: -6.26449728012085
    10. 'int' → logprob: -6.76449728012085

Token 1297: ' fraction' (ID: 33763)
  Prédit: ' numerator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' numerator' → logprob: -0.27272164821624756
    2. 'numer' → logprob: -1.5227216482162476
    3. '"' → logprob: -5.022721767425537
    4. 'decimal' → logprob: -5.897721767425537
    5. 'num' → logprob: -6.147721767425537
    6. 'result' → logprob: -6.272721767425537
    7. '       ' → logprob: -6.647721767425537
    8. '""' → logprob: -6.772721767425537
    9. '   ' → logprob: -7.522721767425537
    10. ' quotient' → logprob: -7.647721767425537

Token 1298: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7331541180610657
    2. ',' → logprob: -1.733154058456421
    3. 'numer' → logprob: -2.358154058456421
    4. '_part' → logprob: -2.733154058456421
    5. '_parts' → logprob: -3.608154058456421
    6. '=' → logprob: -3.733154058456421
    7. '_digits' → logprob: -3.733154058456421
    8. '       ' → logprob: -4.233154296875
    9. '_n' → logprob: -4.358154296875
    10. 'part' → logprob: -4.858154296875

Token 1299: ' decimal' (ID: 26964)
  Prédit: 'decimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decimal' → logprob: -0.13137240707874298
    2. 'numer' → logprob: -3.0063724517822266
    3. 'integer' → logprob: -4.006372451782227
    4. 'str' → logprob: -4.006372451782227
    5. 'digits' → logprob: -4.131372451782227
    6. 'string' → logprob: -5.381372451782227
    7. '"' → logprob: -5.756372451782227
    8. ' decimal' → logprob: -6.006372451782227
    9. '""' → logprob: -6.256372451782227
    10. 'dec' → logprob: -6.506372451782227

Token 1300: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8478410840034485
    2. '_part' → logprob: -1.7228410243988037
    3. ' =' → logprob: -1.8478410243988037
    4. ' numerator' → logprob: -2.9728410243988037
    5. '_parts' → logprob: -3.2228410243988037
    6. '_n' → logprob: -3.7228410243988037
    7. 'numer' → logprob: -3.8478410243988037
    8. 'part' → logprob: -3.8478410243988037
    9. '
' → logprob: -4.722841262817383
    10. ',' → logprob: -5.222841262817383

Token 1301: ' exact' (ID: 6354)
  Prédit: 'numer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numer' → logprob: -0.15225671231746674
    2. '#' → logprob: -3.402256727218628
    3. 'decimal' → logprob: -3.777256727218628
    4. 'digits' → logprob: -4.027256488800049
    5. 'precision' → logprob: -4.277256488800049
    6. 're' → logprob: -4.902256488800049
    7. 'def' → logprob: -5.277256488800049
    8. ' numerator' → logprob: -5.402256488800049
    9. 'import' → logprob: -5.527256488800049
    10. 'from' → logprob: -5.652256488800049

Token 1302: ' representation' (ID: 22311)
  Prédit: 'division'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'division' → logprob: -0.5277631282806396
    2. 'decimal' → logprob: -1.9027631282806396
    3. 'digits' → logprob: -2.2777631282806396
    4. 'precision' → logprob: -3.6527631282806396
    5. 'quot' → logprob: -4.277763366699219
    6. 'import' → logprob: -4.277763366699219
    7. 'result' → logprob: -4.527763366699219
    8. 'numer' → logprob: -4.527763366699219
    9. ' division' → logprob: -4.527763366699219
    10. 'point' → logprob: -4.652763366699219

Token 1303: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17745812237262726
    2. '
' → logprob: -2.0524580478668213
    3. 'numer' → logprob: -4.4274582862854
    4. '        
' → logprob: -4.8024582862854
    5. ' numerator' → logprob: -5.5524582862854
    6. 'num' → logprob: -6.0524582862854
    7. ',' → logprob: -6.3024582862854
    8. '```' → logprob: -6.4274582862854
    9. 'result' → logprob: -6.8024582862854
    10. '#' → logprob: -7.4274582862854

Token 1304: 'den' (ID: 1660)
  Prédit: ' numerator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' numerator' → logprob: -0.4291955232620239
    2. 'numer' → logprob: -1.304195523262024
    3. ')' → logprob: -3.5541954040527344
    4. '       ' → logprob: -3.5541954040527344
    5. 'result' → logprob: -5.679195404052734
    6. '")' → logprob: -6.179195404052734
    7. 'num' → logprob: -6.304195404052734
    8. '           ' → logprob: -6.429195404052734
    9. '#' → logprob: -6.554195404052734
    10. ' denominator' → logprob: -7.054195404052734

Token 1305: 'ominator' (ID: 96399)
  Prédit: 'ominator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ominator' → logprob: -0.0032875132746994495
    2. '```' → logprob: -6.253287315368652
    3. 'umerator' → logprob: -7.378287315368652
    4. 'om' → logprob: -8.253287315368652
    5. '   ' → logprob: -8.753287315368652
    6. '``' → logprob: -9.378287315368652
    7. '#' → logprob: -10.128287315368652
    8. '       ' → logprob: -10.128287315368652
    9. 'imal' → logprob: -10.503287315368652
    10. 'ormal' → logprob: -10.628287315368652

Token 1306: ' is' (ID: 382)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.6066442728042603
    2. '%' → logprob: -1.7316442728042603
    3. ' !=' → logprob: -2.2316441535949707
    4. ' >' → logprob: -3.3566441535949707
    5. '```' → logprob: -3.8566441535949707
    6. ')' → logprob: -4.106644153594971
    7. '       ' → logprob: -4.356644153594971
    8. '>' → logprob: -4.481644153594971
    9. '!=' → logprob: -4.731644153594971
    10. '           ' → logprob: -4.731644153594971

Token 1307: ' power' (ID: 3470)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04680626466870308
    2. 'a' → logprob: -3.6718063354492188
    3. ' a' → logprob: -4.796806335449219
    4. 'power' → logprob: -5.921806335449219
    5. '10' → logprob: -6.046806335449219
    6. ' ' → logprob: -6.296806335449219
    7. 'powers' → logprob: -6.296806335449219
    8. ' power' → logprob: -7.671806335449219
    9. '1' → logprob: -7.796806335449219
    10. '
' → logprob: -8.046806335449219

Token 1308: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.06302136182785034
    2. ' of' → logprob: -2.938021421432495
    3. '       ' → logprob: -5.188021183013916
    4. '   ' → logprob: -7.313021183013916
    5. '10' → logprob: -7.688021183013916
    6. 'Of' → logprob: -7.938021183013916
    7. '           ' → logprob: -8.063021659851074
    8. '2' → logprob: -8.688021659851074
    9. '_of' → logprob: -8.813021659851074
    10. '*' → logprob: -9.313021659851074

Token 1309: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01249435730278492
    2. '10' → logprob: -4.5124945640563965
    3. 'two' → logprob: -6.6374945640563965
    4. ' ' → logprob: -9.512494087219238
    5. 'Two' → logprob: -10.762494087219238
    6. ' two' → logprob: -10.887494087219238
    7. '5' → logprob: -12.012494087219238
    8. '```' → logprob: -12.387494087219238
    9. 'ten' → logprob: -13.012494087219238
    10. '   ' → logprob: -13.012494087219238

Token 1310: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0010844941716641188
    2. '10' → logprob: -7.126084327697754
    3. 'two' → logprob: -8.376084327697754
    4. ' ' → logprob: -10.626084327697754
    5. ' two' → logprob: -11.251084327697754
    6. '```' → logprob: -12.251084327697754
    7. 'Two' → logprob: -12.501084327697754
    8. '   ' → logprob: -13.876084327697754
    9. '`' → logprob: -14.251084327697754
    10. '_two' → logprob: -14.376084327697754

Token 1311: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9313870072364807
    2. ')' → logprob: -1.431386947631836
    3. '):
' → logprob: -1.681386947631836
    4. '):' → logprob: -2.306386947631836
    5. ',' → logprob: -3.681386947631836
    6. ':' → logprob: -4.306386947631836
    7. ')
' → logprob: -4.431386947631836
    8. '           ' → logprob: -5.556386947631836
    9. ':
' → logprob: -5.681386947631836
    10. '```' → logprob: -5.806386947631836

Token 1312: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027364622801542282
    2. 'numer' → logprob: -5.027364730834961
    3. ' numerator' → logprob: -5.402364730834961
    4. 'num' → logprob: -5.402364730834961
    5. '```' → logprob: -5.777364730834961
    6. 'result' → logprob: -6.277364730834961
    7. '        
' → logprob: -7.027364730834961
    8. '
' → logprob: -7.402364730834961
    9. 'div' → logprob: -7.527364730834961
    10. '``' → logprob: -7.652364730834961

Token 1313: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12695592641830444
    2. 'numer' → logprob: -2.876955986022949
    3. '
' → logprob: -3.376955986022949
    4. '        
' → logprob: -4.876955986022949
    5. 'num' → logprob: -5.376955986022949
    6. 'integer' → logprob: -5.501955986022949
    7. ' numerator' → logprob: -5.876955986022949
    8. 'result' → logprob: -6.251955986022949
    9. 'quot' → logprob: -6.626955986022949
    10. '#' (adapté à ' #') → logprob: -6.876955986022949

Token 1314: ' denominator' (ID: 101279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19356128573417664
    2. 'numer' → logprob: -2.943561315536499
    3. 'integer' → logprob: -2.943561315536499
    4. 'decimal' → logprob: -3.943561315536499
    5. 'quot' → logprob: -4.19356107711792
    6. 'result' → logprob: -4.56856107711792
    7. 'int' → logprob: -5.31856107711792
    8. 'num' → logprob: -5.44356107711792
    9. '#' → logprob: -5.69356107711792
    10. 'whole' → logprob: -6.19356107711792

Token 1315: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.373469740152359
    2. ' =' → logprob: -2.623469829559326
    3. '_bits' → logprob: -2.873469829559326
    4. '_pow' → logprob: -3.123469829559326
    5. '==' → logprob: -3.623469829559326
    6. '>' → logprob: -3.998469829559326
    7. '_digits' → logprob: -4.498469829559326
    8. '_exp' → logprob: -4.623469829559326
    9. '#' → logprob: -4.998469829559326
    10. '_power' → logprob: -5.123469829559326

Token 1316: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.7889545559883118
    2. '2' → logprob: -1.288954496383667
    3. 'den' → logprob: -1.413954496383667
    4. '   ' → logprob: -5.413954734802246
    5. '1' → logprob: -5.913954734802246
    6. 'pow' → logprob: -5.913954734802246
    7. '(' → logprob: -6.038954734802246
    8. '5' → logprob: -6.163954734802246
    9. 'def' → logprob: -6.413954734802246
    10. '#' → logprob: -6.413954734802246

Token 1317: '2' (ID: 17)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5142930150032043
    2. '2' → logprob: -1.5142929553985596
    3. 'den' → logprob: -1.8892929553985596
    4. '(' → logprob: -4.639293193817139
    5. 'pow' → logprob: -5.014293193817139
    6. '1' → logprob: -5.889293193817139
    7. '5' → logprob: -6.264293193817139
    8. '   ' → logprob: -6.389293193817139
    9. '#' → logprob: -6.764293193817139
    10. 'numer' → logprob: -7.264293193817139

Token 1318: '^{' (ID: 42923)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.7110620141029358
    2. ' **' → logprob: -0.8360620141029358
    3. '0' → logprob: -3.336061954498291
    4. ' *' → logprob: -3.961061954498291
    5. '
' → logprob: -5.836061954498291
    6. '*' → logprob: -5.836061954498291
    7. '**
' → logprob: -5.961061954498291
    8. '```' → logprob: -6.086061954498291
    9. ' ' → logprob: -6.336061954498291
    10. ' **
' → logprob: -6.461061954498291

Token 1319: 'k' (ID: 74)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.13465847074985504
    2. 'len' → logprob: -2.6346585750579834
    3. 'max' → logprob: -3.5096585750579834
    4. '7' → logprob: -4.384658336639404
    5. 'val' → logprob: -5.384658336639404
    6. 'frac' → logprob: -5.509658336639404
    7. '(' → logprob: -7.134658336639404
    8. '(len' → logprob: -8.759658813476562
    9. 'int' → logprob: -8.884658813476562
    10. 'fraction' → logprob: -8.884658813476562

Token 1320: '},' (ID: 4180)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.3381592631340027
    2. '```' → logprob: -2.0881593227386475
    3. '}' → logprob: -2.2131593227386475
    4. ')' → logprob: -3.7131593227386475
    5. '}
' → logprob: -5.588159084320068
    6. 'k' → logprob: -5.588159084320068
    7. ' ' → logprob: -5.963159084320068
    8. ' **' → logprob: -6.088159084320068
    9. '``' → logprob: -6.213159084320068
    10. '`' → logprob: -6.463159084320068

Token 1321: ' k' (ID: 372)
  Prédit: ' remainder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' remainder' → logprob: -1.8691134452819824
    2. '       ' → logprob: -1.9941134452819824
    3. ' numerator' → logprob: -1.9941134452819824
    4. ' result' → logprob: -2.2441134452819824
    5. 'result' → logprob: -2.3691134452819824
    6. ' decimal' → logprob: -2.9941134452819824
    7. 'num' → logprob: -3.2441134452819824
    8. ' scale' → logprob: -3.2441134452819824
    9. 'decimal' → logprob: -3.3691134452819824
    10. '           ' → logprob: -3.4941134452819824

Token 1322: '<=' (ID: 16672)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5406317710876465
    2. ' =' → logprob: -0.9156317710876465
    3. '       ' → logprob: -5.2906317710876465
    4. 'import' → logprob: -6.0406317710876465
    5. '```' → logprob: -6.0406317710876465
    6. '==' → logprob: -6.5406317710876465
    7. '           ' → logprob: -6.6656317710876465
    8. '#' → logprob: -7.4156317710876465
    9. '_tokens' → logprob: -7.6656317710876465
    10. ' <<=' → logprob: -8.165632247924805

Token 1323: '31' (ID: 2911)
  Prédit: '24'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '24' → logprob: -0.058837126940488815
    2. '25' → logprob: -3.8088371753692627
    3. '31' → logprob: -4.433836936950684
    4. '23' → logprob: -4.933836936950684
    5. '27' → logprob: -4.933836936950684
    6. '32' → logprob: -5.683836936950684
    7. '26' → logprob: -6.183836936950684
    8. '30' → logprob: -6.933836936950684
    9. '28' → logprob: -7.183836936950684
    10. ' ' → logprob: -7.808836936950684

Token 1324: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0935593768954277
    2. '
' → logprob: -2.7185592651367188
    3. '        
' → logprob: -4.468559265136719
    4. '```' → logprob: -5.218559265136719
    5. '#' → logprob: -7.218559265136719
    6. '``' → logprob: -7.343559265136719
    7. '   ' → logprob: -7.468559265136719
    8. 'n' → logprob: -7.468559265136719
    9. 'numer' → logprob: -7.593559265136719
    10. 'num' → logprob: -8.093559265136719

Token 1325: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11429804563522339
    2. 'numer' → logprob: -2.739298105239868
    3. 'result' → logprob: -4.364297866821289
    4. 'num' → logprob: -4.614297866821289
    5. '        
' → logprob: -5.614297866821289
    6. 'n' → logprob: -5.864297866821289
    7. '
' → logprob: -5.989297866821289
    8. ' numerator' → logprob: -6.114297866821289
    9. '```' → logprob: -6.364297866821289
    10. 'decimal' → logprob: -6.864297866821289

Token 1326: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5360641479492188
    2. 'decimal' → logprob: -1.6610641479492188
    3. 'integer' → logprob: -2.9110641479492188
    4. 'quot' → logprob: -3.2860641479492188
    5. 'numer' → logprob: -3.5360641479492188
    6. '#' (adapté à ' #') → logprob: -3.6610641479492188
    7. 'dec' → logprob: -4.411064147949219
    8. 'scale' → logprob: -4.536064147949219
    9. 'fraction' → logprob: -4.536064147949219
    10. 'digits' → logprob: -4.661064147949219

Token 1327: ' generate' (ID: 10419)
  Prédit: 'decimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'decimal' → logprob: -0.6643512845039368
    2. 'k' → logprob: -1.914351224899292
    3. 'dec' → logprob: -2.539351224899292
    4. '       ' → logprob: -2.789351224899292
    5. 'scale' → logprob: -3.539351224899292
    6. '#' → logprob: -3.664351224899292
    7. 'digits' → logprob: -3.664351224899292
    8. 'num' → logprob: -3.789351224899292
    9. 'den' → logprob: -3.914351224899292
    10. 'quot' → logprob: -4.164351463317871

Token 1328: ' decimal' (ID: 26964)
  Prédit: 'integer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'integer' → logprob: -0.36408114433288574
    2. 'numer' → logprob: -2.2390811443328857
    3. 'int' → logprob: -2.7390811443328857
    4. 'digits' → logprob: -2.9890811443328857
    5. 'result' → logprob: -3.4890811443328857
    6. 'decimal' → logprob: -4.239081382751465
    7. ' integer' → logprob: -4.739081382751465
    8. '       ' → logprob: -5.114081382751465
    9. 'whole' → logprob: -5.239081382751465
    10. 'num' → logprob: -5.239081382751465

Token 1329: ' digits' (ID: 37806)
  Prédit: '_digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_digits' → logprob: -1.0602949857711792
    2. '_n' → logprob: -1.1852949857711792
    3. '_parts' → logprob: -2.3102951049804688
    4. '       ' → logprob: -2.3102951049804688
    5. '_num' → logprob: -3.1852951049804688
    6. '_part' → logprob: -3.8102951049804688
    7. ' numerator' → logprob: -4.060295104980469
    8. 'numer' → logprob: -4.435295104980469
    9. '_places' → logprob: -5.060295104980469
    10. '_' → logprob: -5.060295104980469

Token 1330: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7923111915588379
    2. 'result' → logprob: -1.417311191558838
    3. '
' → logprob: -1.667311191558838
    4. 'digits' → logprob: -3.167311191558838
    5. 'numer' → logprob: -4.542311191558838
    6. ' result' → logprob: -4.917311191558838
    7. '```' → logprob: -5.042311191558838
    8. 'num' → logprob: -5.292311191558838
    9. ' numerator' → logprob: -5.417311191558838
    10. ',' → logprob: -5.542311191558838

Token 1331: ' fractional' (ID: 136350)
  Prédit: 'numer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numer' → logprob: -0.024870578199625015
    2. ' numerator' → logprob: -4.5248703956604
    3. '(n' → logprob: -5.3998703956604
    4. 'fraction' → logprob: -5.5248703956604
    5. 'frac' → logprob: -5.8998703956604
    6. 'decimal' → logprob: -7.0248703956604
    7. 'str' → logprob: -8.399870872497559
    8. 'n' → logprob: -8.524870872497559
    9. ' (' → logprob: -8.524870872497559
    10. 'abs' → logprob: -8.774870872497559

Token 1332: ' part' (ID: 997)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.3877927362918854
    2. '_part' → logprob: -1.137792706489563
    3. ' part' → logprob: -7.137792587280273
    4. '   ' → logprob: -10.762792587280273
    5. '_parts' → logprob: -11.012792587280273
    6. '_fraction' → logprob: -11.012792587280273
    7. '_digits' → logprob: -11.387792587280273
    8. ' ' → logprob: -11.512792587280273
    9. '```' → logprob: -11.762792587280273
    10. 'parts' → logprob: -11.887792587280273

Token 1333: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06278539448976517
    2. '
' → logprob: -3.8127853870391846
    3. ',' → logprob: -4.437785625457764
    4. ':' → logprob: -5.437785625457764
    5. ' =' → logprob: -6.062785625457764
    6. ':
' → logprob: -6.062785625457764
    7. '[' → logprob: -6.062785625457764
    8. '"' → logprob: -6.437785625457764
    9. '\n' → logprob: -6.437785625457764
    10. '        
' → logprob: -6.562785625457764

Token 1334: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022960783913731575
    2. '```' → logprob: -5.022960662841797
    3. 'result' → logprob: -5.272960662841797
    4. 'fraction' → logprob: -6.522960662841797
    5. '        
' → logprob: -6.772960662841797
    6. '``' → logprob: -6.772960662841797
    7. 'numer' → logprob: -7.022960662841797
    8. '`' → logprob: -7.022960662841797
    9. 'digits' → logprob: -7.022960662841797
    10. '
' → logprob: -7.397960662841797

Token 1335: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7972171306610107
    2. 'numer' → logprob: -1.6722171306610107
    3. 'decimal' → logprob: -2.2972171306610107
    4. 'result' → logprob: -2.4222171306610107
    5. 'digits' → logprob: -3.0472171306610107
    6. 'fraction' → logprob: -3.2972171306610107
    7. 'num' → logprob: -3.9222171306610107
    8. 'integer' → logprob: -4.04721736907959
    9. '```' → logprob: -4.29721736907959
    10. ' numerator' → logprob: -5.04721736907959

Token 1336: ' total' (ID: 3609)
  Prédit: 'fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fraction' → logprob: -0.8184672594070435
    2. 'decimal' → logprob: -1.8184672594070435
    3. 'digits' → logprob: -2.068467140197754
    4. '       ' → logprob: -2.068467140197754
    5. 'result' → logprob: -3.068467140197754
    6. 'numer' → logprob: -3.568467140197754
    7. 'frac' → logprob: -3.568467140197754
    8. 'dec' → logprob: -4.943467140197754
    9. 'integer' → logprob: -5.068467140197754
    10. 'num' → logprob: -5.193467140197754

Token 1337: '_val' (ID: 13694)
  Prédit: 'numer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numer' → logprob: -1.2940833568572998
    2. '       ' → logprob: -2.1690833568573
    3. ' numerator' → logprob: -2.1690833568573
    4. '_n' → logprob: -2.2940833568573
    5. '_num' → logprob: -2.2940833568573
    6. ' =' → logprob: -2.4190833568573
    7. '_digits' → logprob: -2.6690833568573
    8. 'num' → logprob: -3.0440833568573
    9. 'digits' → logprob: -4.169083595275879
    10. '=' → logprob: -4.419083595275879

Token 1338: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24306659400463104
    2. '=' → logprob: -1.6180665493011475
    3. ' *' → logprob: -5.743066787719727
    4. '_fraction' → logprob: -5.993066787719727
    5. '*' → logprob: -6.493066787719727
    6. ' *=' → logprob: -6.868066787719727
    7. '```' → logprob: -6.868066787719727
    8. ',' → logprob: -6.993066787719727
    9. '   ' → logprob: -7.368066787719727
    10. '_n' → logprob: -7.493066787719727

Token 1339: ' integer' (ID: 16336)
  Prédit: 'numer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numer' → logprob: -0.4606207609176636
    2. 'abs' → logprob: -1.7106207609176636
    3. 'val' → logprob: -1.8356207609176636
    4. 'int' → logprob: -4.960620880126953
    5. 'str' → logprob: -5.085620880126953
    6. ' numerator' → logprob: -5.460620880126953
    7. 'total' → logprob: -5.835620880126953
    8. ' abs' → logprob: -6.085620880126953
    9. 'sign' → logprob: -6.585620880126953
    10. 'frac' → logprob: -7.085620880126953

Token 1340: ' part' (ID: 997)
  Prédit: '_part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.041867148131132126
    2. 'part' → logprob: -4.041867256164551
    3. ' =' → logprob: -4.916867256164551
    4. '_digits' → logprob: -5.916867256164551
    5. ' part' → logprob: -6.416867256164551
    6. '_' → logprob: -6.416867256164551
    7. '       ' → logprob: -6.666867256164551
    8. '```' → logprob: -6.666867256164551
    9. '_n' → logprob: -6.791867256164551
    10. '=' → logprob: -7.166867256164551

Token 1341: ' +' (ID: 659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2606121003627777
    2. ' =' → logprob: -2.1356120109558105
    3. ' -' → logprob: -3.3856120109558105
    4. '=' → logprob: -4.3856120109558105
    5. '
' → logprob: -4.5106120109558105
    6. '_part' → logprob: -4.6356120109558105
    7. '   ' → logprob: -5.1356120109558105
    8. '```' → logprob: -5.7606120109558105
    9. '-' → logprob: -5.8856120109558105
    10. ' part' → logprob: -6.0106120109558105

Token 1342: ' fractional' (ID: 136350)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'frac' → logprob: -0.1961994469165802
    2. 'numer' → logprob: -3.071199417114258
    3. ' frac' → logprob: -3.196199417114258
    4. 'str' → logprob: -3.821199417114258
    5. 'fraction' → logprob: -3.821199417114258
    6. '""' → logprob: -4.446199417114258
    7. '"' → logprob: -5.196199417114258
    8. ' numerator' → logprob: -5.196199417114258
    9. '''' → logprob: -5.571199417114258
    10. '0' → logprob: -6.071199417114258

Token 1343: ' part' (ID: 997)
  Prédit: '_part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.04620443284511566
    2. '_' → logprob: -4.171204566955566
    3. 'part' → logprob: -4.296204566955566
    4. '_digits' → logprob: -5.046204566955566
    5. ' part' → logprob: -6.171204566955566
    6. '```' → logprob: -6.546204566955566
    7. ' _' → logprob: -6.796204566955566
    8. '_value' → logprob: -7.171204566955566
    9. '       ' → logprob: -7.421204566955566
    10. '   ' → logprob: -7.796204566955566

Token 1344: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.058074239641427994
    2. '
' → logprob: -3.5580742359161377
    3. 'numer' → logprob: -4.808074474334717
    4. '```' → logprob: -5.183074474334717
    5. ' numerator' → logprob: -5.433074474334717
    6. '        
' → logprob: -6.683074474334717
    7. 'int' → logprob: -6.933074474334717
    8. ',' → logprob: -7.058074474334717
    9. 'fraction' → logprob: -7.183074474334717
    10. 'num' → logprob: -7.683074474334717

Token 1345: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04271538555622101
    2. 'numer' → logprob: -4.542715549468994
    3. '```' → logprob: -4.917715549468994
    4. ' numerator' → logprob: -5.167715549468994
    5. '
' → logprob: -5.417715549468994
    6. 'fraction' → logprob: -6.417715549468994
    7. 'num' → logprob: -6.417715549468994
    8. 'result' → logprob: -6.417715549468994
    9. 'decimal' → logprob: -6.542715549468994
    10. '``' → logprob: -7.042715549468994

Token 1346: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012632899917662144
    2. 'int' → logprob: -5.387632846832275
    3. 'integer' → logprob: -5.887632846832275
    4. 'numer' → logprob: -6.637632846832275
    5. '        
' → logprob: -6.762632846832275
    6. '
' → logprob: -7.387632846832275
    7. '   ' → logprob: -7.762632846832275
    8. 'fraction' → logprob: -8.012633323669434
    9. 'num' → logprob: -8.137633323669434
    10. 'decimal' → logprob: -8.387633323669434

Token 1347: ' separate' (ID: 13574)
  Prédit: 'integer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'integer' → logprob: -0.6257609128952026
    2. 'int' → logprob: -1.6257609128952026
    3. '       ' → logprob: -2.250761032104492
    4. 'numer' → logprob: -3.000761032104492
    5. 'decimal' → logprob: -3.375761032104492
    6. 'fraction' → logprob: -3.750761032104492
    7. '#' → logprob: -4.500761032104492
    8. 'den' → logprob: -4.750761032104492
    9. 'result' → logprob: -5.125761032104492
    10. 'num' → logprob: -5.250761032104492

Token 1348: ' integer' (ID: 16336)
  Prédit: 'integer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'integer' → logprob: -0.5753546953201294
    2. 'int' → logprob: -1.3253546953201294
    3. 'numer' → logprob: -2.07535457611084
    4. 'num' → logprob: -3.95035457611084
    5. ' integer' → logprob: -4.32535457611084
    6. ' numerator' → logprob: -4.95035457611084
    7. 'whole' → logprob: -5.95035457611084
    8. ' int' → logprob: -6.45035457611084
    9. '   ' → logprob: -7.07535457611084
    10. 'quot' → logprob: -7.45035457611084

Token 1349: ' and' (ID: 326)
  Prédit: '_part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.06316439062356949
    2. 'part' → logprob: -2.813164472579956
    3. ',' → logprob: -7.813164234161377
    4. '_' → logprob: -8.563164710998535
    5. '_value' → logprob: -8.813164710998535
    6. ' part' → logprob: -8.938164710998535
    7. '_n' → logprob: -9.063164710998535
    8. '_val' → logprob: -9.188164710998535
    9. ' =' → logprob: -10.563164710998535
    10. '=' → logprob: -11.063164710998535

Token 1350: ' fractional' (ID: 136350)
  Prédit: 'fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fraction' → logprob: -0.06215948984026909
    2. ' remainder' → logprob: -4.187159538269043
    3. ' fractional' → logprob: -4.187159538269043
    4. 're' → logprob: -4.562159538269043
    5. 'numer' → logprob: -4.687159538269043
    6. ' numerator' → logprob: -4.937159538269043
    7. 'den' → logprob: -6.687159538269043
    8. ' fraction' → logprob: -7.062159538269043
    9. 'frac' → logprob: -7.562159538269043
    10. ' denominator' → logprob: -8.187159538269043

Token 1351: ' parts' (ID: 7881)
  Prédit: '_part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.11477195471525192
    2. 'part' → logprob: -2.364771842956543
    3. '_' → logprob: -4.489771842956543
    4. ' part' → logprob: -6.364771842956543
    5. '_parts' → logprob: -7.489771842956543
    6. '_value' → logprob: -7.614771842956543
    7. '_val' → logprob: -8.739771842956543
    8. '   ' → logprob: -9.739771842956543
    9. 'parts' → logprob: -9.739771842956543
    10. '```' → logprob: -10.489771842956543

Token 1352: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008457247167825699
    2. '
' → logprob: -5.008457183837891
    3. ',' → logprob: -7.633457183837891
    4. 'int' → logprob: -7.633457183837891
    5. '        
' → logprob: -8.25845718383789
    6. 'integer' → logprob: -8.75845718383789
    7. ' =' → logprob: -9.50845718383789
    8. ':' → logprob: -10.13345718383789
    9. ' integer' → logprob: -10.25845718383789
    10. '=' → logprob: -10.88345718383789

Token 1353: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1299203783273697
    2. ' integer' → logprob: -3.379920482635498
    3. 'int' → logprob: -3.504920482635498
    4. 'integer' → logprob: -3.504920482635498
    5. ' int' → logprob: -3.879920482635498
    6. '```' → logprob: -5.754920482635498
    7. '
' → logprob: -7.004920482635498
    8. '        
' → logprob: -7.129920482635498
    9. '`' → logprob: -7.629920482635498
    10. '``' → logprob: -8.37992000579834

Token 1354: ' abs' (ID: 8443)
  Prédit: 'integer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'integer' → logprob: -0.5609595775604248
    2. 'int' → logprob: -1.5609595775604248
    3. '       ' → logprob: -1.6859595775604248
    4. ' integer' → logprob: -3.560959577560425
    5. ' int' → logprob: -5.560959815979004
    6. 'quot' → logprob: -7.060959815979004
    7. '   ' → logprob: -8.185959815979004
    8. 'numer' → logprob: -8.935959815979004
    9. 'import' → logprob: -9.185959815979004
    10. 'whole' → logprob: -9.810959815979004

Token 1355: '_frac' (ID: 199597)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.1148298904299736
    2. '_value' → logprob: -3.2398297786712646
    3. '_n' → logprob: -3.8648297786712646
    4. 'val' → logprob: -4.114830017089844
    5. '(n' → logprob: -4.614830017089844
    6. '_num' → logprob: -4.739830017089844
    7. 'numer' → logprob: -5.114830017089844
    8. '_part' → logprob: -5.614830017089844
    9. '(val' → logprob: -6.614830017089844
    10. 'value' → logprob: -7.364830017089844

Token 1356: ' =' (ID: 314)
  Prédit: '_part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.4213833510875702
    2. '_val' → logprob: -2.0463833808898926
    3. ' =' → logprob: -2.2963833808898926
    4. '=' → logprob: -2.9213833808898926
    5. '_fraction' → logprob: -3.5463833808898926
    6. 'part' → logprob: -4.546383380889893
    7. 'val' → logprob: -5.171383380889893
    8. 'tion' → logprob: -5.421383380889893
    9. '_value' → logprob: -5.796383380889893
    10. ',' → logprob: -6.546383380889893

Token 1357: ' val' (ID: 1459)
  Prédit: 'numer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numer' → logprob: -0.6613283753395081
    2. 'abs' → logprob: -1.7863283157348633
    3. 'Fraction' → logprob: -1.9113283157348633
    4. 'val' → logprob: -2.0363283157348633
    5. 'frac' → logprob: -3.7863283157348633
    6. ' numerator' → logprob: -4.911328315734863
    7. 'fraction' → logprob: -6.036328315734863
    8. ' abs' → logprob: -7.036328315734863
    9. 'num' → logprob: -7.036328315734863
    10. 'int' → logprob: -7.161328315734863

Token 1358: '_fraction' (ID: 151287)
  Prédit: '_fraction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fraction' → logprob: -4.870950215263292e-05
    2. 'raction' → logprob: -10.500048637390137
    3. 'fraction' → logprob: -11.500048637390137
    4. 'uation' → logprob: -12.250048637390137
    5. '   ' → logprob: -13.375048637390137
    6. '_' → logprob: -13.750048637390137
    7. '_frac' → logprob: -14.375048637390137
    8. 'Fraction' → logprob: -14.875048637390137
    9. '_factor' → logprob: -15.000048637390137
    10. '=' → logprob: -15.250048637390137

Token 1359: ' if' (ID: 538)
  Prédit: '.n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.15627390146255493
    2. ' -' → logprob: -2.65627384185791
    3. '-' → logprob: -2.78127384185791
    4. '_n' → logprob: -5.53127384185791
    5. '-n' → logprob: -5.90627384185791
    6. '=' → logprob: -6.15627384185791
    7. '%' → logprob: -7.28127384185791
    8. '   ' → logprob: -7.28127384185791
    9. ' =' → logprob: -7.28127384185791
    10. '.den' → logprob: -8.03127384185791

Token 1360: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.049611225724220276
    2. 'numer' → logprob: -3.4246113300323486
    3. ' val' → logprob: -4.4246110916137695
    4. '       ' → logprob: -6.4246110916137695
    5. 'abs' → logprob: -7.0496110916137695
    6. ' numerator' → logprob: -7.1746110916137695
    7. '           ' → logprob: -8.79961109161377
    8. 'frac' → logprob: -9.54961109161377
    9. '>' → logprob: -9.79961109161377
    10. '        ' → logprob: -9.79961109161377

Token 1361: '_fraction' (ID: 151287)
  Prédit: '_fraction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fraction' → logprob: -0.04558631777763367
    2. 'abs' → logprob: -3.795586347579956
    3. '<' → logprob: -4.420586109161377
    4. 'val' → logprob: -6.170586109161377
    5. 'fraction' → logprob: -6.545586109161377
    6. '_frac' → logprob: -6.920586109161377
    7. '.abs' → logprob: -6.920586109161377
    8. 'raction' → logprob: -7.295586109161377
    9. 'frac' → logprob: -7.670586109161377
    10. 'numer' → logprob: -7.670586109161377

Token 1362: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.2205863893032074
    2. '<' → logprob: -2.8455862998962402
    3. '>' → logprob: -2.9705862998962402
    4. ' >=' → logprob: -3.2205862998962402
    5. '.n' → logprob: -3.3455862998962402
    6. '.abs' → logprob: -5.34558629989624
    7. '.' → logprob: -5.97058629989624
    8. '.den' → logprob: -6.34558629989624
    9. ' <' → logprob: -7.34558629989624
    10. '<num' → logprob: -7.59558629989624

Token 1363: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011028258595615625
    2. 'Fraction' → logprob: -7.126102924346924
    3. ' ' → logprob: -8.126102447509766
    4. '   ' → logprob: -14.501102447509766
    5. ' Fraction' → logprob: -14.626102447509766
    6. '1' → logprob: -14.751102447509766
    7. '```' → logprob: -15.126102447509766
    8. '  ' → logprob: -15.376102447509766
    9. 'fraction' → logprob: -15.626102447509766
    10. ' ' → logprob: -16.376102447509766

Token 1364: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00013560164370574057
    2. 'Fraction' → logprob: -9.12513542175293
    3. ' ' → logprob: -10.62513542175293
    4. '1' → logprob: -13.62513542175293
    5. '
' → logprob: -15.68763542175293
    6. 'fraction' → logprob: -15.93763542175293
    7. '```' → logprob: -16.31263542175293
    8. '(' → logprob: -16.43763542175293
    9. '   ' → logprob: -16.56263542175293
    10. 'Frac' → logprob: -17.00013542175293

Token 1365: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5249010920524597
    2. ' else' → logprob: -0.8999010920524597
    3. '       ' → logprob: -6.399900913238525
    4. '           ' → logprob: -10.899901390075684
    5. '_else' → logprob: -10.899901390075684
    6. ' or' → logprob: -11.274901390075684
    7. '	else' → logprob: -11.649901390075684
    8. '   ' → logprob: -11.899901390075684
    9. ',' → logprob: -12.024901390075684
    10. 'or' → logprob: -12.649901390075684

Token 1366: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.36633533239364624
    2. '-F' → logprob: -1.616335391998291
    3. '-f' → logprob: -2.991335391998291
    4. '-val' → logprob: -3.741335391998291
    5. '-' → logprob: -4.116335391998291
    6. '-Val' → logprob: -5.116335391998291
    7. '-fr' → logprob: -5.366335391998291
    8. '-Fr' → logprob: -6.241335391998291
    9. 'Fraction' → logprob: -6.616335391998291
    10. ' Fraction' → logprob: -7.241335391998291

Token 1367: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.688212614681106e-05
    2. ' val' → logprob: -11.000017166137695
    3. '           ' → logprob: -17.375017166137695
    4. '	val' → logprob: -17.750017166137695
    5. '       ' → logprob: -18.250017166137695
    6. '(val' → logprob: -18.500017166137695
    7. '_val' → logprob: -18.625017166137695
    8. '   ' → logprob: -18.750017166137695
    9. 'Val' → logprob: -19.125017166137695
    10. '```' → logprob: -20.125017166137695

Token 1368: '_fraction' (ID: 151287)
  Prédit: '_fraction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fraction' → logprob: -0.005977261811494827
    2. '_frac' → logprob: -5.505977153778076
    3. 'frac' → logprob: -7.005977153778076
    4. 'fraction' → logprob: -7.255977153778076
    5. 'raction' → logprob: -8.505977630615234
    6. 'Fraction' → logprob: -10.005977630615234
    7. 'val' → logprob: -10.755977630615234
    8. '   ' → logprob: -12.630977630615234
    9. '       ' → logprob: -13.380977630615234
    10. 'fract' → logprob: -13.505977630615234

Token 1369: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43512940406799316
    2. '
' → logprob: -1.0601294040679932
    3. '        
' → logprob: -6.060129165649414
    4. '<|end|>' → logprob: -6.435129165649414
    5. ',' → logprob: -7.060129165649414
    6. '
' → logprob: -8.310129165649414
    7. '		
' → logprob: -8.810129165649414
    8. '_integer' → logprob: -8.810129165649414
    9. '<|end|>' → logprob: -9.310129165649414
    10. ',
' → logprob: -9.310129165649414

Token 1370: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04231186583638191
    2. 'integer' → logprob: -3.792311906814575
    3. 'int' → logprob: -4.792311668395996
    4. ' integer' → logprob: -5.792311668395996
    5. ',' → logprob: -6.167311668395996
    6. '```' → logprob: -6.167311668395996
    7. '
' → logprob: -6.292311668395996
    8. ' int' → logprob: -8.292311668395996
    9. 'fraction' → logprob: -8.917311668395996
    10. '`' → logprob: -9.042311668395996

Token 1371: ' integer' (ID: 16336)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7295830249786377
    2. 'integer' (adapté à ' integer') → logprob: -0.9795830249786377
    3. 'int' → logprob: -1.9795830249786377
    4. ' integer' → logprob: -6.604582786560059
    5. 'abs' → logprob: -7.479582786560059
    6. '
' → logprob: -7.729582786560059
    7. 'whole' → logprob: -8.229582786560059
    8. 'import' → logprob: -8.479582786560059
    9. ' int' → logprob: -8.479582786560059
    10. '   ' → logprob: -8.604582786560059

Token 1372: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.0063728634268045425
    2. 'part' → logprob: -5.131372928619385
    3. ' =' → logprob: -8.506372451782227
    4. '=' → logprob: -9.006372451782227
    5. ' part' → logprob: -10.006372451782227
    6. '_value' → logprob: -10.256372451782227
    7. '_digits' → logprob: -11.256372451782227
    8. '   ' → logprob: -12.131372451782227
    9. ',' → logprob: -12.756372451782227
    10. 'Part' → logprob: -12.881372451782227

Token 1373: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10054135322570801
    2. ' =' → logprob: -2.350541353225708
    3. ',' → logprob: -8.100541114807129
    4. '=int' → logprob: -10.475541114807129
    5. ')' → logprob: -14.725541114807129
    6. 's' → logprob: -15.100541114807129
    7. '   ' → logprob: -15.350541114807129
    8. '       ' → logprob: -15.600541114807129
    9. '=num' → logprob: -15.725541114807129
    10. '=
' → logprob: -15.725541114807129

Token 1374: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.00029995047952979803
    2. ' abs' → logprob: -8.125300407409668
    3. 'int' → logprob: -13.875300407409668
    4. 'numer' → logprob: -13.875300407409668
    5. '(abs' → logprob: -14.250300407409668
    6. 'integer' → logprob: -14.625300407409668
    7. '   ' → logprob: -14.750300407409668
    8. 'frac' → logprob: -14.875300407409668
    9. ' ' → logprob: -17.12529945373535
    10. '       ' → logprob: -17.25029945373535

Token 1375: '_frac' (ID: 199597)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.9544570446014404
    2. 'abs' → logprob: -1.0794570446014404
    3. 'frac' → logprob: -2.7044570446014404
    4. 'int' → logprob: -3.2044570446014404
    5. '_part' → logprob: -3.2044570446014404
    6. '       ' → logprob: -3.5794570446014404
    7. '(abs' → logprob: -3.7044570446014404
    8. '_val' → logprob: -4.2044572830200195
    9. '_fraction' → logprob: -4.2044572830200195
    10. '_frac' → logprob: -4.2044572830200195

Token 1376: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.06449023634195328
    2. '//' → logprob: -3.68949031829834
    3. ' //' → logprob: -3.81449031829834
    4. '.' → logprob: -5.18949031829834
    5. 'numer' → logprob: -6.31449031829834
    6. '.__' → logprob: -6.68949031829834
    7. '.value' → logprob: -6.68949031829834
    8. 'umerator' → logprob: -6.93949031829834
    9. ' numerator' → logprob: -7.31449031829834
    10. '
' → logprob: -7.31449031829834

Token 1377: 'umerator' (ID: 152035)
  Prédit: 'umerator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umerator' → logprob: -0.0002610974188428372
    2. 'um' → logprob: -8.875261306762695
    3. 'umer' → logprob: -9.375261306762695
    4. '//' → logprob: -10.250261306762695
    5. '   ' → logprob: -15.750261306762695
    6. 'numer' → logprob: -15.875261306762695
    7. 'umber' → logprob: -16.000261306762695
    8. '```' → logprob: -16.250261306762695
    9. 'ume' → logprob: -16.750261306762695
    10. 'u' → logprob: -16.750261306762695

Token 1378: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.12713399529457092
    2. ' //' → logprob: -2.127134084701538
    3. '#' → logprob: -9.752134323120117
    4. '       ' → logprob: -9.877134323120117
    5. '           ' → logprob: -10.127134323120117
    6. ' ' → logprob: -11.127134323120117
    7. '```' → logprob: -11.627134323120117
    8. '   ' → logprob: -11.752134323120117
    9. '
' → logprob: -12.127134323120117
    10. 'div' → logprob: -12.252134323120117

Token 1379: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -6.074907287256792e-05
    2. 'den' → logprob: -9.75006103515625
    3. 'val' → logprob: -13.25006103515625
    4. ' abs' → logprob: -14.37506103515625
    5. '(abs' → logprob: -17.87506103515625
    6. 'frac' → logprob: -18.00006103515625
    7. 'int' → logprob: -19.00006103515625
    8. 'integer' → logprob: -19.12506103515625
    9. '   ' → logprob: -19.50006103515625
    10. 'absor' → logprob: -19.75006103515625

Token 1380: '_frac' (ID: 199597)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0012771383626386523
    2. 'val' → logprob: -6.751276969909668
    3. 'integer' → logprob: -10.001276969909668
    4. 'den' → logprob: -10.501276969909668
    5. '(abs' → logprob: -11.501276969909668
    6. ' abs' → logprob: -11.751276969909668
    7. 'frac' → logprob: -12.126276969909668
    8. 'int' → logprob: -12.251276969909668
    9. '           ' → logprob: -13.626276969909668
    10. '       ' → logprob: -13.751276969909668

Token 1381: '.den' (ID: 152740)
  Prédit: '.den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.den' → logprob: -0.0009202735964208841
    2. 'den' → logprob: -7.000920295715332
    3. '.d' → logprob: -12.250920295715332
    4. '_den' → logprob: -13.625920295715332
    5. 'Den' → logprob: -14.375920295715332
    6. '.n' → logprob: -14.625920295715332
    7. '   ' → logprob: -14.750920295715332
    8. '
' → logprob: -14.875920295715332
    9. ' denominator' → logprob: -15.000920295715332
    10. '.f' → logprob: -15.500920295715332

Token 1382: 'ominator' (ID: 96399)
  Prédit: 'ominator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ominator' → logprob: -1.4855663721391466e-05
    2. 'umerator' → logprob: -11.750015258789062
    3. 'om' → logprob: -12.625015258789062
    4. 'inator' → logprob: -13.125015258789062
    5. 'omin' → logprob: -13.750015258789062
    6. 'imator' → logprob: -14.750015258789062
    7. 'ator' → logprob: -16.875015258789062
    8. 'on' → logprob: -17.250015258789062
    9. 'operator' → logprob: -17.750015258789062
    10. 'omi' → logprob: -18.750015258789062

Token 1383: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009304552339017391
    2. ' remainder' → logprob: -6.134304523468018
    3. '<|end|>' → logprob: -6.134304523468018
    4. ',' → logprob: -7.009304523468018
    5. 'rest' → logprob: -7.134304523468018
    6. '
' → logprob: -7.384304523468018
    7. 'fraction' → logprob: -7.384304523468018
    8. '        
' → logprob: -7.634304523468018
    9. 're' → logprob: -7.634304523468018
    10. ')' → logprob: -8.384305000305176

Token 1384: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2643449902534485
    2. 're' → logprob: -1.7643449306488037
    3. ' remainder' → logprob: -3.6393449306488037
    4. 'rest' → logprob: -4.264345169067383
    5. '```' → logprob: -4.514345169067383
    6. 'fraction' → logprob: -5.264345169067383
    7. 'rem' → logprob: -6.389345169067383
    8. '
' → logprob: -7.139345169067383
    9. 'remaining' → logprob: -7.514345169067383
    10. '``' → logprob: -7.889345169067383

Token 1385: ' fractional' (ID: 136350)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.038241732865571976
    2. ' remainder' → logprob: -3.6632416248321533
    3. 'fraction' → logprob: -5.163241863250732
    4. '       ' → logprob: -6.038241863250732
    5. 'abs' → logprob: -6.413241863250732
    6. '           ' → logprob: -7.913241863250732
    7. 'rem' → logprob: -8.038241386413574
    8. 'frac' → logprob: -8.413241386413574
    9. 'numer' → logprob: -8.538241386413574
    10. 'decimal' → logprob: -8.663241386413574

Token 1386: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.0006089136004447937
    2. '_n' → logprob: -7.500608921051025
    3. 'part' → logprob: -10.125608444213867
    4. '_re' → logprob: -12.250608444213867
    5. '_num' → logprob: -12.750608444213867
    6. ' =' → logprob: -13.250608444213867
    7. '_fraction' → logprob: -13.375608444213867
    8. '_parts' → logprob: -13.500608444213867
    9. '_' → logprob: -14.125608444213867
    10. '=' → logprob: -14.375608444213867

Token 1387: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5286275148391724
    2. '=' → logprob: -0.9036275148391724
    3. '_n' → logprob: -5.528627395629883
    4. '   ' → logprob: -7.653627395629883
    5. '_num' → logprob: -7.778627395629883
    6. '       ' → logprob: -8.403627395629883
    7. '_fraction' → logprob: -9.028627395629883
    8. 'numer' → logprob: -9.403627395629883
    9. '_re' → logprob: -9.403627395629883
    10. 're' → logprob: -10.903627395629883

Token 1388: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.03620603680610657
    2. 'Fraction' → logprob: -3.411206007003784
    3. ' abs' → logprob: -6.411206245422363
    4. '(abs' → logprob: -7.411206245422363
    5. ' Fraction' → logprob: -9.161206245422363
    6. '   ' → logprob: -9.536206245422363
    7. 'Abs' → logprob: -10.411206245422363
    8. '       ' → logprob: -10.786206245422363
    9. 'frac' → logprob: -10.786206245422363
    10. '(' → logprob: -11.161206245422363

Token 1389: '_frac' (ID: 199597)
  Prédit: '_frac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_frac' → logprob: -0.0007142199319787323
    2. '_fraction' → logprob: -7.750714302062988
    3. '_abs' → logprob: -8.250714302062988
    4. 'frac' → logprob: -11.500714302062988
    5. '=' → logprob: -13.000714302062988
    6. '(abs' → logprob: -13.500714302062988
    7. 'Frac' → logprob: -13.500714302062988
    8. '_fr' → logprob: -14.000714302062988
    9. 'abs' → logprob: -14.000714302062988
    10. 'Fraction' → logprob: -14.125714302062988

Token 1390: ' -' (ID: 533)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.246707022190094
    2. ' %' → logprob: -1.9967069625854492
    3. '.n' → logprob: -2.871706962585449
    4. '%n' → logprob: -3.996706962585449
    5. '-' → logprob: -5.746706962585449
    6. ' -' → logprob: -7.246706962585449
    7. '```' → logprob: -7.496706962585449
    8. 'numer' → logprob: -7.746706962585449
    9. '_n' → logprob: -7.871706962585449
    10. ' numerator' → logprob: -8.24670696258545

Token 1391: ' integer' (ID: 16336)
  Prédit: 'Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Fraction' → logprob: -0.0002930366899818182
    2. 'integer' → logprob: -8.250292778015137
    3. 'Integer' → logprob: -10.750292778015137
    4. 'fraction' → logprob: -11.750292778015137
    5. ' Fraction' → logprob: -14.000292778015137
    6. '(' → logprob: -14.750292778015137
    7. '1' → logprob: -15.000292778015137
    8. 'frac' → logprob: -15.500292778015137
    9. '_fraction' → logprob: -15.750292778015137
    10. '(integer' → logprob: -15.875292778015137

Token 1392: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.01182259526103735
    2. 't' → logprob: -4.511822700500488
    3. 'part' → logprob: -7.761822700500488
    4. 's' → logprob: -10.136822700500488
    5. 'r' → logprob: -10.386822700500488
    6. '_' → logprob: -10.636822700500488
    7. '```' → logprob: -10.636822700500488
    8. 'Part' → logprob: -10.886822700500488
    9. '_t' → logprob: -11.136822700500488
    10. '_parts' → logprob: -11.261822700500488

Token 1393: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04108225926756859
    2. '
' → logprob: -3.2910821437835693
    3. '        
' → logprob: -6.916082382202148
    4. '```' → logprob: -7.791082382202148
    5. 'fraction' → logprob: -8.291082382202148
    6. 'numer' → logprob: -8.291082382202148
    7. ',' → logprob: -9.166082382202148
    8. 'frac' → logprob: -9.291082382202148
    9. 'num' → logprob: -9.416082382202148
    10. 'if' → logprob: -9.416082382202148

Token 1394: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005840045399963856
    2. '
' → logprob: -5.380839824676514
    3. '        
' → logprob: -7.005839824676514
    4. '```' → logprob: -8.380840301513672
    5. '   ' → logprob: -10.630840301513672
    6. '`' → logprob: -10.755840301513672
    7. '    
' → logprob: -11.505840301513672
    8. '``' → logprob: -12.130840301513672
    9. '           ' → logprob: -12.380840301513672
    10. '  
' → logprob: -12.630840301513672

Token 1395: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11960262060165405
    2. 'if' → logprob: -2.994602680206299
    3. 'digits' → logprob: -3.494602680206299
    4. 'decimal' → logprob: -3.619602680206299
    5. 'dec' → logprob: -6.369602680206299
    6. '```' → logprob: -6.994602680206299
    7. 'result' → logprob: -7.369602680206299
    8. '#' (adapté à ' #') → logprob: -7.744602680206299
    9. '
' → logprob: -7.744602680206299
    10. 'numer' → logprob: -7.869602680206299

Token 1396: ' convert' (ID: 8452)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1116063594818115
    2. 'decimal' → logprob: -1.1116063594818115
    3. 'digits' → logprob: -1.2366063594818115
    4. 'fraction' → logprob: -3.3616063594818115
    5. 'dec' → logprob: -4.861606597900391
    6. 'if' → logprob: -5.736606597900391
    7. 'result' → logprob: -5.986606597900391
    8. '#' → logprob: -6.611606597900391
    9. 'frac' → logprob: -7.236606597900391
    10. '   ' → logprob: -7.736606597900391

Token 1397: ' fractional' (ID: 136350)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.9828997254371643
    2. 'fraction' → logprob: -1.3578996658325195
    3. 'decimal' → logprob: -1.7328996658325195
    4. '       ' → logprob: -1.9828996658325195
    5. 'numer' → logprob: -3.3578996658325195
    6. 'frac' → logprob: -5.2328996658325195
    7. '           ' → logprob: -5.7328996658325195
    8. 'dec' → logprob: -6.1078996658325195
    9. ' fractional' → logprob: -6.4828996658325195
    10. 'result' → logprob: -6.4828996658325195

Token 1398: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.002009887248277664
    2. '_digits' → logprob: -6.627009868621826
    3. 'part' → logprob: -7.877009868621826
    4. '_str' → logprob: -8.877010345458984
    5. '_n' → logprob: -9.127010345458984
    6. '_decimal' → logprob: -10.752010345458984
    7. '_den' → logprob: -11.627010345458984
    8. ' =' → logprob: -12.002010345458984
    9. '_parts' → logprob: -12.377010345458984
    10. 'digits' → logprob: -12.502010345458984

Token 1399: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.3485560417175293
    2. '_digits' → logprob: -1.4735560417175293
    3. 'numer' → logprob: -1.5985560417175293
    4. '       ' → logprob: -1.8485560417175293
    5. '_n' → logprob: -3.2235560417175293
    6. '_decimal' → logprob: -3.3485560417175293
    7. 'digits' → logprob: -3.5985560417175293
    8. ' =' → logprob: -4.473556041717529
    9. 'decimal' → logprob: -4.973556041717529
    10. '_str' → logprob: -5.098556041717529

Token 1400: ' decimal' (ID: 26964)
  Prédit: 'decimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'decimal' → logprob: -0.07813993841409683
    2. 'digits' → logprob: -3.0781400203704834
    3. 'numer' → logprob: -4.953139781951904
    4. 'Fraction' → logprob: -5.078139781951904
    5. 'str' → logprob: -5.328139781951904
    6. 'fraction' → logprob: -5.953139781951904
    7. 'dec' → logprob: -6.453139781951904
    8. 'string' → logprob: -6.828139781951904
    9. 'Decimal' → logprob: -6.953139781951904
    10. '#' → logprob: -6.953139781951904

Token 1401: ' digits' (ID: 37806)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.566420316696167
    2. 'digits' → logprob: -1.066420316696167
    3. 'numer' → logprob: -3.441420316696167
    4. 'result' → logprob: -3.941420316696167
    5. 'decimal' → logprob: -4.441420555114746
    6. '_digits' → logprob: -5.066420555114746
    7. '```' → logprob: -5.566420555114746
    8. 'num' → logprob: -6.066420555114746
    9. 'fraction' → logprob: -6.066420555114746
    10. '
' → logprob: -6.066420555114746

Token 1402: ' until' (ID: 4609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025085093453526497
    2. 'digits' → logprob: -3.775085210800171
    3. 'decimal' → logprob: -7.775084972381592
    4. 'numer' → logprob: -8.15008544921875
    5. 'fraction' → logprob: -8.27508544921875
    6. '```' → logprob: -8.77508544921875
    7. ' digits' → logprob: -8.77508544921875
    8. 'd' → logprob: -9.15008544921875
    9. '_digits' → logprob: -9.27508544921875
    10. 'result' → logprob: -9.65008544921875

Token 1403: ' exact' (ID: 6354)
  Prédit: 'fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fraction' → logprob: -0.0052966042421758175
    2. 'numer' → logprob: -5.75529670715332
    3. 'den' → logprob: -7.38029670715332
    4. 'True' → logprob: -7.75529670715332
    5. ' fractional' → logprob: -8.00529670715332
    6. 'frac' → logprob: -8.00529670715332
    7. 'fra' → logprob: -9.13029670715332
    8. '       ' → logprob: -10.00529670715332
    9. 'len' → logprob: -10.25529670715332
    10. ' True' → logprob: -10.75529670715332

Token 1404: ' or' (ID: 503)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.5552439093589783
    2. 'fraction' → logprob: -1.805243968963623
    3. '       ' → logprob: -2.055243968963623
    4. 'digit' → logprob: -3.305243968963623
    5. '           ' → logprob: -3.555243968963623
    6. '_digits' → logprob: -3.930243968963623
    7. 'decimal' → logprob: -4.680243968963623
    8. 'frac' → logprob: -4.805243968963623
    9. '```' → logprob: -4.805243968963623
    10. '
' → logprob: -5.680243968963623

Token 1405: ' trailing' (ID: 57985)
  Prédit: 'fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fraction' → logprob: -0.0008748973486945033
    2. ' fractional' → logprob: -7.875874996185303
    3. 'den' → logprob: -8.000874519348145
    4. '#' → logprob: -10.375874519348145
    5. 'fra' → logprob: -11.000874519348145
    6. 'Fraction' → logprob: -11.375874519348145
    7. '```' → logprob: -11.375874519348145
    8. '       ' → logprob: -11.500874519348145
    9. ' fraction' → logprob: -11.750874519348145
    10. 'len' → logprob: -11.750874519348145

Token 1406: ' zeros' (ID: 42274)
  Prédit: 'zeros'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zeros' → logprob: -0.595994770526886
    2. '0' → logprob: -1.0959947109222412
    3. ' zeros' → logprob: -2.595994710922241
    4. 'zero' → logprob: -3.345994710922241
    5. 'digits' → logprob: -6.09599494934082
    6. 'fraction' → logprob: -7.22099494934082
    7. ' zero' → logprob: -7.47099494934082
    8. 'digit' → logprob: -7.84599494934082
    9. 're' → logprob: -8.22099494934082
    10. 'decimal' → logprob: -9.09599494934082

Token 1407: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12020311504602432
    2. ' =' → logprob: -2.8702030181884766
    3. ':' → logprob: -3.7452030181884766
    4. '=' → logprob: -3.9952030181884766
    5. ' or' → logprob: -5.370203018188477
    6. '           ' → logprob: -5.870203018188477
    7. ',' → logprob: -6.745203018188477
    8. '```' → logprob: -6.995203018188477
    9. '.' → logprob: -7.245203018188477
    10. 'digits' → logprob: -7.745203018188477

Token 1408: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017895301803946495
    2. 'digits' → logprob: -4.142895221710205
    3. ' digits' → logprob: -7.642895221710205
    4. '```' → logprob: -8.267895698547363
    5. 'decimal' → logprob: -8.517895698547363
    6. 'fraction' → logprob: -8.767895698547363
    7. '           ' → logprob: -8.767895698547363
    8. 'num' → logprob: -9.142895698547363
    9. 'result' → logprob: -9.392895698547363
    10. '        
' → logprob: -10.017895698547363

Token 1409: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.627284586429596
    2. 'digits' → logprob: -1.0022845268249512
    3. 'decimal' → logprob: -2.627284526824951
    4. 'fraction' → logprob: -4.377284526824951
    5. 'result' → logprob: -5.127284526824951
    6. 'dec' → logprob: -6.127284526824951
    7. 'numer' → logprob: -6.252284526824951
    8. 'from' → logprob: -6.627284526824951
    9. 'if' → logprob: -7.752284526824951
    10. 'num' → logprob: -7.752284526824951

Token 1410: ' max' (ID: 2999)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2745295763015747
    2. 'digits' → logprob: -1.8995295763015747
    3. 'decimal' → logprob: -2.774529457092285
    4. 'fraction' → logprob: -3.774529457092285
    5. 'dec' → logprob: -6.399529457092285
    6. 'result' → logprob: -6.899529457092285
    7. 'from' → logprob: -6.899529457092285
    8. 'frac' → logprob: -7.774529457092285
    9. '   ' → logprob: -8.649529457092285
    10. '#' → logprob: -9.149529457092285

Token 1411: ' ' (ID: 220)
  Prédit: '_digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_digits' → logprob: -0.4095306396484375
    2. '       ' → logprob: -1.4095306396484375
    3. 'digits' → logprob: -3.7845306396484375
    4. '_length' → logprob: -4.5345306396484375
    5. '_decimal' → logprob: -4.6595306396484375
    6. '_precision' → logprob: -5.1595306396484375
    7. '_' → logprob: -5.4095306396484375
    8. '           ' → logprob: -5.5345306396484375
    9. '_len' → logprob: -5.7845306396484375
    10. '_digit' → logprob: -5.9095306396484375

Token 1412: '7' (ID: 22)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.9861600995063782
    2. '_digits' → logprob: -1.6111600399017334
    3. '32' → logprob: -1.7361600399017334
    4. '40' → logprob: -3.1111600399017334
    5. '30' → logprob: -3.2361600399017334
    6. '50' → logprob: -3.4861600399017334
    7. '       ' → logprob: -3.6111600399017334
    8. '20' → logprob: -3.8611600399017334
    9. '100' → logprob: -4.7361602783203125
    10. 'fraction' → logprob: -4.8611602783203125

Token 1413: ' decimal' (ID: 26964)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10707409679889679
    2. 'digits' → logprob: -2.732074022293091
    3. ' digits' → logprob: -3.607074022293091
    4. '_digits' → logprob: -6.35707426071167
    5. ' =' → logprob: -6.60707426071167
    6. '   ' → logprob: -7.10707426071167
    7. '           ' → logprob: -7.23207426071167
    8. 'd' → logprob: -7.48207426071167
    9. '=' → logprob: -7.60707426071167
    10. '0' → logprob: -7.98207426071167

Token 1414: ' places' (ID: 9610)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47050032019615173
    2. '_digits' → logprob: -1.4705003499984741
    3. 'digits' → logprob: -2.9705002307891846
    4. '_' → logprob: -3.4705002307891846
    5. '_places' → logprob: -3.5955002307891846
    6. '      ' → logprob: -4.845500469207764
    7. '_digit' → logprob: -5.720500469207764
    8. ')' → logprob: -5.720500469207764
    9. 'places' → logprob: -5.845500469207764
    10. ' =' → logprob: -6.220500469207764

Token 1415: ' enough' (ID: 4951)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003601336502470076
    2. '
' → logprob: -8.250360488891602
    3. '        
' → logprob: -10.125360488891602
    4. '```' → logprob: -10.250360488891602
    5. 'digits' → logprob: -11.750360488891602
    6. '   ' → logprob: -11.750360488891602
    7. '           ' → logprob: -12.875360488891602
    8. ',' → logprob: -14.500360488891602
    9. ' digits' → logprob: -14.625360488891602
    10. '      ' → logprob: -15.000360488891602

Token 1416: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00023810577113181353
    2. '        
' → logprob: -8.875238418579102
    3. 'digits' → logprob: -9.875238418579102
    4. '
' → logprob: -11.125238418579102
    5. '   ' → logprob: -11.875238418579102
    6. ' digits' → logprob: -12.250238418579102
    7. '<|end|>' → logprob: -12.625238418579102
    8. '           ' → logprob: -12.750238418579102
    9. '```' → logprob: -13.000238418579102
    10. '_digits' → logprob: -13.375238418579102

Token 1417: ' until' (ID: 4609)
  Prédit: '30'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '30' → logprob: -1.5806553363800049
    2. '32' → logprob: -1.7056553363800049
    3. 'while' → logprob: -1.7056553363800049
    4. '20' → logprob: -2.080655336380005
    5. 'until' → logprob: -2.705655336380005
    6. '50' → logprob: -2.830655336380005
    7. '40' → logprob: -3.080655336380005
    8. '100' → logprob: -3.580655336380005
    9. '31' → logprob: -3.830655336380005
    10. 'import' → logprob: -4.205655097961426

Token 1418: ' fractional' (ID: 136350)
  Prédit: 'fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fraction' → logprob: -0.0011245026253163815
    2. ' fractional' → logprob: -6.876124382019043
    3. 'den' → logprob: -10.001124382019043
    4. 'numer' → logprob: -10.501124382019043
    5. ' fraction' → logprob: -11.751124382019043
    6. 'fra' → logprob: -12.751124382019043
    7. '(f' → logprob: -13.501124382019043
    8. '```' → logprob: -13.876124382019043
    9. ' denominator' → logprob: -14.001124382019043
    10. 'Fraction' → logprob: -14.001124382019043

Token 1419: ' part' (ID: 997)
  Prédit: '_part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.002255999017506838
    2. 'part' → logprob: -6.627255916595459
    3. '_' → logprob: -7.377255916595459
    4. '_digits' → logprob: -9.377256393432617
    5. '_parts' → logprob: -9.752256393432617
    6. '```' → logprob: -10.502256393432617
    7. '_n' → logprob: -10.752256393432617
    8. '_fraction' → logprob: -11.002256393432617
    9. '       ' → logprob: -11.377256393432617
    10. '_den' → logprob: -11.627256393432617

Token 1420: ' zero' (ID: 12421)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.37071579694747925
    2. '=' → logprob: -1.745715856552124
    3. '       ' → logprob: -2.745715856552124
    4. ' ==' → logprob: -3.120715856552124
    5. ' =' → logprob: -5.245715618133545
    6. '```' → logprob: -5.370715618133545
    7. 'numer' → logprob: -5.620715618133545
    8. '>' → logprob: -6.495715618133545
    9. 'den' → logprob: -6.495715618133545
    10. 'umerator' → logprob: -6.745715618133545

Token 1421: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016592320753261447
    2. '
' → logprob: -8.001659393310547
    3. 'digits' → logprob: -8.001659393310547
    4. '        
' → logprob: -8.126659393310547
    5. ',' → logprob: -8.251659393310547
    6. '<|end|>' → logprob: -9.251659393310547
    7. '```' → logprob: -9.876659393310547
    8. '   ' → logprob: -10.126659393310547
    9. ' digits' → logprob: -10.501659393310547
    10. '           ' → logprob: -10.751659393310547

Token 1422: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007213291712105274
    2. 'digits' → logprob: -5.632213115692139
    3. '```' → logprob: -5.882213115692139
    4. 'decimal' → logprob: -8.257213592529297
    5. 'result' → logprob: -8.882213592529297
    6. '
' → logprob: -9.257213592529297
    7. '   ' → logprob: -9.757213592529297
    8. 'fraction' → logprob: -9.757213592529297
    9. '``' → logprob: -9.882213592529297
    10. '        
' → logprob: -10.132213592529297

Token 1423: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.066673643887043
    2. 'digits' → logprob: -2.816673755645752
    3. 'decimal' → logprob: -6.316673755645752
    4. 'result' → logprob: -6.941673755645752
    5. '```' → logprob: -7.066673755645752
    6. '
' → logprob: -8.066673278808594
    7. '   ' → logprob: -8.691673278808594
    8. 'fraction' → logprob: -8.691673278808594
    9. ' digits' → logprob: -9.316673278808594
    10. 'dec' → logprob: -9.691673278808594

Token 1424: ' However' (ID: 5551)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01429783832281828
    2. 'digits' → logprob: -4.764297962188721
    3. 'decimal' → logprob: -5.514297962188721
    4. 'result' → logprob: -7.639297962188721
    5. '```' → logprob: -7.764297962188721
    6. 'fraction' → logprob: -7.889297962188721
    7. 'from' → logprob: -9.389297485351562
    8. '   ' → logprob: -9.514297485351562
    9. 'dec' → logprob: -9.639297485351562
    10. 'import' → logprob: -10.514297485351562

Token 1425: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00030316898482851684
    2. '           ' → logprob: -9.500303268432617
    3. '```' → logprob: -9.875303268432617
    4. ',' → logprob: -10.250303268432617
    5. 'digits' → logprob: -10.375303268432617
    6. '   ' → logprob: -10.375303268432617
    7. ' digits' → logprob: -11.625303268432617
    8. ' ' → logprob: -11.625303268432617
    9. '<|end|>' → logprob: -12.000303268432617
    10. '        
' → logprob: -12.375303268432617

Token 1426: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8301792740821838
    2. 'from' → logprob: -1.330179214477539
    3. '#' → logprob: -2.205179214477539
    4. 'decimal' → logprob: -3.080179214477539
    5. 'fraction' → logprob: -3.080179214477539
    6. 'digits' → logprob: -3.830179214477539
    7. '           ' → logprob: -4.205179214477539
    8. ' remainder' → logprob: -4.830179214477539
    9. ' from' → logprob: -4.955179214477539
    10. 'max' → logprob: -5.080179214477539

Token 1427: ' must' (ID: 2804)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16557341814041138
    2. ' continue' → logprob: -2.5405733585357666
    3. 'continue' → logprob: -4.165573596954346
    4. ' need' → logprob: -4.415573596954346
    5. ' can' → logprob: -4.790573596954346
    6. '   ' → logprob: -4.790573596954346
    7. ' should' → logprob: -5.665573596954346
    8. ' have' → logprob: -5.790573596954346
    9. ' will' → logprob: -5.790573596954346
    10. '           ' → logprob: -5.915573596954346

Token 1428: ' generate' (ID: 10419)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.690962553024292
    2. 'limit' → logprob: -2.315962553024292
    3. 'continue' → logprob: -2.440962553024292
    4. 'implement' → logprob: -2.940962553024292
    5. 'generate' → logprob: -3.190962553024292
    6. 'handle' → logprob: -3.565962553024292
    7. ' continue' → logprob: -3.815962553024292
    8. '   ' → logprob: -3.815962553024292
    9. 'convert' → logprob: -4.065962791442871
    10. ' implement' → logprob: -4.190962791442871

Token 1429: ' exactly' (ID: 9707)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.6573512554168701
    2. '       ' → logprob: -1.6573512554168701
    3. 'decimal' → logprob: -1.7823512554168701
    4. 'result' → logprob: -3.03235125541687
    5. 'fraction' → logprob: -3.65735125541687
    6. 'dec' → logprob: -4.407351493835449
    7. '```' → logprob: -4.907351493835449
    8. '           ' → logprob: -5.282351493835449
    9. ' digits' → logprob: -5.657351493835449
    10. 'from' → logprob: -6.282351493835449

Token 1430: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4061915874481201
    2. 'digits' → logprob: -1.4061915874481201
    3. '7' → logprob: -2.03119158744812
    4. '10' → logprob: -2.53119158744812
    5. '"' → logprob: -2.78119158744812
    6. 'fraction' → logprob: -2.90619158744812
    7. ' ' → logprob: -3.65619158744812
    8. 'the' → logprob: -3.90619158744812
    9. 'decimal' → logprob: -4.031191825866699
    10. ''' → logprob: -4.156191825866699

Token 1431: ' not' (ID: 625)
  Prédit: 'avoid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'avoid' → logprob: -0.7671638131141663
    2. 'the' → logprob: -2.0171637535095215
    3. 'ensure' → logprob: -2.2671637535095215
    4. 'max' → logprob: -3.2671637535095215
    5. 'ach' → logprob: -3.3921637535095215
    6. 'full' → logprob: -3.8921637535095215
    7. 'exact' → logprob: -4.0171637535095215
    8. 'prevent' → logprob: -4.0171637535095215
    9. ' avoid' → logprob: -4.1421637535095215
    10. 'accur' → logprob: -4.2671637535095215

Token 1432: ' lose' (ID: 12577)
  Prédit: 'lose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lose' → logprob: -0.10247617959976196
    2. ' lose' → logprob: -3.852476119995117
    3. 'repeat' → logprob: -3.977476119995117
    4. 'in' → logprob: -4.352476119995117
    5. 'lo' → logprob: -4.977476119995117
    6. 'introdu' → logprob: -5.102476119995117
    7. 'loop' → logprob: -5.602476119995117
    8. '       ' → logprob: -5.727476119995117
    9. 'truncate' → logprob: -5.727476119995117
    10. 'have' → logprob: -5.852476119995117

Token 1433: ' information' (ID: 2164)
  Prédit: 'precision'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'precision' → logprob: -1.166300892829895
    2. 'digits' → logprob: -1.666300892829895
    3. '       ' → logprob: -2.0413007736206055
    4. '```' → logprob: -2.4163007736206055
    5. ' precision' → logprob: -2.7913007736206055
    6. ' digits' → logprob: -2.9163007736206055
    7. 'fraction' → logprob: -3.6663007736206055
    8. '`' → logprob: -3.7913007736206055
    9. '           ' → logprob: -3.9163007736206055
    10. 'decimal' → logprob: -4.1663007736206055

Token 1434: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021029175259172916
    2. ',' → logprob: -7.502102851867676
    3. '```' → logprob: -8.377102851867676
    4. '
' → logprob: -8.627102851867676
    5. '        
' → logprob: -8.627102851867676
    6. '   ' → logprob: -8.627102851867676
    7. 'digits' → logprob: -8.752102851867676
    8. '           ' → logprob: -8.877102851867676
    9. '<|end|>' → logprob: -9.377102851867676
    10. 'def' → logprob: -10.127102851867676

Token 1435: ' avoid' (ID: 8397)
  Prédit: 'avoid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avoid' → logprob: -0.639181911945343
    2. ' avoid' → logprob: -1.5141818523406982
    3. '       ' → logprob: -2.0141818523406982
    4. 'return' → logprob: -3.0141818523406982
    5. '```' → logprob: -4.264182090759277
    6. ' return' → logprob: -4.514182090759277
    7. '           ' → logprob: -4.639182090759277
    8. 'prevent' → logprob: -4.889182090759277
    9. 'ensure' → logprob: -6.014182090759277
    10. '   ' → logprob: -6.014182090759277

Token 1436: ' floating' (ID: 35887)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7873982787132263
    2. 'in' → logprob: -2.162398338317871
    3. 're' → logprob: -2.287398338317871
    4. ' trailing' → logprob: -2.287398338317871
    5. 'import' → logprob: -3.412398338317871
    6. ' infinite' → logprob: -4.162398338317871
    7. ' floating' → logprob: -4.287398338317871
    8. '.' → logprob: -4.537398338317871
    9. 'Value' → logprob: -4.537398338317871
    10. '           ' → logprob: -4.787398338317871

Token 1437: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.268907368183136
    2. '_point' → logprob: -1.6439073085784912
    3. '-point' → logprob: -3.768907308578491
    4. 'precision' → logprob: -5.64390754699707
    5. '.' → logprob: -5.76890754699707
    6. '       ' → logprob: -6.14390754699707
    7. '```' → logprob: -6.14390754699707
    8. 'errors' → logprob: -6.39390754699707
    9. '_' → logprob: -6.51890754699707
    10. 'points' → logprob: -6.64390754699707

Token 1438: ' errors' (ID: 10664)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.28359463810920715
    2. 'precision' → logprob: -1.6585946083068848
    3. 'representation' → logprob: -3.6585946083068848
    4. '       ' → logprob: -5.158594608306885
    5. ' digits' → logprob: -5.283594608306885
    6. 'decimal' → logprob: -5.658594608306885
    7. ' representation' → logprob: -6.033594608306885
    8. 'division' → logprob: -6.408594608306885
    9. 'places' → logprob: -6.408594608306885
    10. 'accuracy' → logprob: -6.533594608306885

Token 1439: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020312999840825796
    2. '
' → logprob: -6.752031326293945
    3. '        
' → logprob: -7.877031326293945
    4. ',' → logprob: -8.752031326293945
    5. '```' → logprob: -9.252031326293945
    6. '   ' → logprob: -9.752031326293945
    7. '           ' → logprob: -10.752031326293945
    8. '<|end|>' → logprob: -11.002031326293945
    9. 'def' → logprob: -11.377031326293945
    10. '#' → logprob: -11.502031326293945

Token 1440: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00028171599842607975
    2. '```' → logprob: -8.37528133392334
    3. '        
' → logprob: -10.50028133392334
    4. '`' → logprob: -11.62528133392334
    5. '   ' → logprob: -12.25028133392334
    6. '``' → logprob: -12.75028133392334
    7. '           ' → logprob: -13.00028133392334
    8. '
' → logprob: -13.87528133392334
    9. '      ' → logprob: -14.75028133392334
    10. 'digits' → logprob: -14.87528133392334

Token 1441: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00038586699520237744
    2. 'decimal' → logprob: -9.250386238098145
    3. 'digits' → logprob: -9.375386238098145
    4. '   ' → logprob: -9.875386238098145
    5. '```' → logprob: -10.375386238098145
    6. '
' → logprob: -10.750386238098145
    7. 'dec' → logprob: -10.875386238098145
    8. 'result' → logprob: -10.875386238098145
    9. '        
' → logprob: -11.375386238098145
    10. 'fraction' → logprob: -11.750386238098145

Token 1442: ' actually' (ID: 4771)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06284662336111069
    2. 'decimal' → logprob: -3.1878466606140137
    3. 'fraction' → logprob: -5.187846660614014
    4. 'digits' → logprob: -5.437846660614014
    5. 'dec' → logprob: -6.312846660614014
    6. 'numer' → logprob: -6.437846660614014
    7. 'from' → logprob: -6.562846660614014
    8. '#' → logprob: -6.812846660614014
    9. '   ' → logprob: -7.062846660614014
    10. 'result' → logprob: -7.562846660614014

Token 1443: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.040871717035770416
    2. ' numerator' → logprob: -4.415871620178223
    3. 'from' → logprob: -4.915871620178223
    4. '```' → logprob: -5.165871620178223
    5. 'numer' → logprob: -6.040871620178223
    6. 'fraction' → logprob: -6.540871620178223
    7. ' from' → logprob: -6.540871620178223
    8. ' return' → logprob: -6.790871620178223
    9. '
' → logprob: -6.915871620178223
    10. '#' → logprob: -7.040871620178223

Token 1444: ' denominator' (ID: 101279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4150911271572113
    2. 'numer' → logprob: -2.040091037750244
    3. 'from' → logprob: -2.665091037750244
    4. 'decimal' → logprob: -3.415091037750244
    5. '#' → logprob: -3.790091037750244
    6. 'fraction' → logprob: -3.915091037750244
    7. ' remainder' → logprob: -4.290091037750244
    8. 'num' → logprob: -4.415091037750244
    9. ' numerator' → logprob: -5.165091037750244
    10. 'digits' → logprob: -5.290091037750244

Token 1445: ' divides' (ID: 144028)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11526871472597122
    2. 'is' → logprob: -3.3652687072753906
    3. ' =' → logprob: -3.4902687072753906
    4. '==' → logprob: -4.365268707275391
    5. '```' → logprob: -4.365268707275391
    6. ' is' → logprob: -4.490268707275391
    7. '_is' → logprob: -5.990268707275391
    8. '#' → logprob: -6.240268707275391
    9. ' ==' → logprob: -8.11526870727539
    10. '**' → logprob: -8.11526870727539

Token 1446: ' ' (ID: 220)
  Prédit: 'numer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numer' → logprob: -0.4226689040660858
    2. '2' → logprob: -2.297668933868408
    3. 'exact' → logprob: -2.672668933868408
    4. '       ' → logprob: -3.547668933868408
    5. 'abs' → logprob: -3.797668933868408
    6. '10' → logprob: -3.922668933868408
    7. '1' → logprob: -4.047668933868408
    8. ' numerator' → logprob: -4.047668933868408
    9. 'the' → logprob: -4.172668933868408
    10. 'integer' → logprob: -4.422668933868408

Token 1447: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0338260792195797
    2. '10' → logprob: -3.5338261127471924
    3. '5' → logprob: -6.158825874328613
    4. 'numer' → logprob: -7.908825874328613
    5. '100' → logprob: -8.158825874328613
    6. ' ' → logprob: -8.283825874328613
    7. '   ' → logprob: -8.408825874328613
    8. '```' → logprob: -8.658825874328613
    9. '       ' → logprob: -9.033825874328613
    10. '1' → logprob: -9.033825874328613

Token 1448: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.2835361957550049
    2. ' **' → logprob: -1.4085361957550049
    3. '```' → logprob: -7.408535957336426
    4. ' ' → logprob: -8.283535957336426
    5. ')' → logprob: -8.408535957336426
    6. '   ' → logprob: -8.908535957336426
    7. '       ' → logprob: -9.158535957336426
    8. '           ' → logprob: -9.158535957336426
    9. ''s' → logprob: -9.158535957336426
    10. '0' → logprob: -9.283535957336426

Token 1449: '7' (ID: 22)
  Prédit: '31'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '31' → logprob: -0.4499262273311615
    2. '32' → logprob: -1.1999262571334839
    3. '**' → logprob: -3.4499261379241943
    4. '^' → logprob: -4.074926376342773
    5. '```' → logprob: -4.824926376342773
    6. '37' → logprob: -7.449926376342773
    7. '35' → logprob: -7.949926376342773
    8. '33' → logprob: -8.199926376342773
    9. '100' → logprob: -8.574926376342773
    10. '50' → logprob: -8.574926376342773

Token 1450: '=' (ID: 28)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006348572671413422
    2. '
' → logprob: -5.881348609924316
    3. '```' → logprob: -7.131348609924316
    4. ',' → logprob: -7.256348609924316
    5. '        
' → logprob: -7.256348609924316
    6. '   ' → logprob: -8.131348609924316
    7. '           ' → logprob: -8.631348609924316
    8. 'def' → logprob: -8.881348609924316
    9. ')' → logprob: -9.381348609924316
    10. '#' → logprob: -9.631348609924316

Token 1451: '128' (ID: 8076)
  Prédit: '31'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '31' → logprob: -0.6416836977005005
    2. '32' → logprob: -1.1416836977005005
    3. '7' → logprob: -2.391683578491211
    4. '23' → logprob: -3.891683578491211
    5. 'Fraction' → logprob: -4.891683578491211
    6. '27' → logprob: -5.016683578491211
    7. '28' → logprob: -5.016683578491211
    8. '128' → logprob: -5.141683578491211
    9. ' ' → logprob: -5.266683578491211
    10. '16' → logprob: -6.391683578491211

Token 1452: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0038275104016065598
    2. '```' → logprob: -6.6288275718688965
    3. '
' → logprob: -6.7538275718688965
    4. '#' → logprob: -8.753827095031738
    5. '        
' → logprob: -8.753827095031738
    6. '           ' → logprob: -8.753827095031738
    7. '   ' → logprob: -8.878827095031738
    8. 'def' → logprob: -9.003827095031738
    9. ',' → logprob: -9.253827095031738
    10. 'from' → logprob: -9.628827095031738

Token 1453: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031985121313482523
    2. '```' → logprob: -6.878198623657227
    3. '           ' → logprob: -7.378198623657227
    4. ',' → logprob: -8.253198623657227
    5. '        
' → logprob: -8.878198623657227
    6. '``' → logprob: -8.878198623657227
    7. '   ' → logprob: -9.128198623657227
    8. '`' → logprob: -9.128198623657227
    9. 'Let's' → logprob: -9.378198623657227
    10. '
' → logprob: -9.378198623657227

Token 1454: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017298998311161995
    2. 'decimal' → logprob: -5.267299175262451
    3. 'digits' → logprob: -6.767299175262451
    4. 'numer' → logprob: -6.767299175262451
    5. 'fraction' → logprob: -6.767299175262451
    6. 'dec' → logprob: -7.017299175262451
    7. '```' → logprob: -7.142299175262451
    8. ' remainder' → logprob: -7.142299175262451
    9. 'result' → logprob: -7.267299175262451
    10. 'num' → logprob: -7.267299175262451

Token 1455: ' but' (ID: 889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004662711173295975
    2. 'decimal' → logprob: -6.62966251373291
    3. 'max' → logprob: -6.75466251373291
    4. 'digits' → logprob: -7.62966251373291
    5. '```' → logprob: -8.37966251373291
    6. '   ' → logprob: -8.50466251373291
    7. 'from' → logprob: -8.75466251373291
    8. 'scale' → logprob: -9.00466251373291
    9. 'dec' → logprob: -9.00466251373291
    10. 'num' → logprob: -9.12966251373291

Token 1456: ' integer' (ID: 16336)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'den' → logprob: -1.0392992496490479
    2. '       ' → logprob: -1.5392992496490479
    3. ' denominator' → logprob: -1.6642992496490479
    4. '#' → logprob: -2.289299249649048
    5. 'from' → logprob: -2.914299249649048
    6. 'max' → logprob: -3.664299249649048
    7. '           ' → logprob: -4.539299011230469
    8. 'import' → logprob: -4.789299011230469
    9. '```' → logprob: -5.289299011230469
    10. 'd' → logprob: -5.414299011230469

Token 1457: ' part' (ID: 997)
  Prédit: '_part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.061825040727853775
    2. 'part' → logprob: -3.8118250370025635
    3. '```' → logprob: -4.811825275421143
    4. '_fraction' → logprob: -4.936825275421143
    5. 'den' → logprob: -5.311825275421143
    6. '       ' → logprob: -6.061825275421143
    7. '   ' → logprob: -6.186825275421143
    8. '           ' → logprob: -6.561825275421143
    9. 'fraction' → logprob: -6.561825275421143
    10. '_den' → logprob: -6.561825275421143

Token 1458: ' can' (ID: 665)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.182620644569397
    2. '       ' → logprob: -1.307620644569397
    3. '```' → logprob: -1.807620644569397
    4. ' =' → logprob: -2.6826205253601074
    5. ' is' → logprob: -4.057620525360107
    6. ')' → logprob: -4.057620525360107
    7. ':' → logprob: -4.307620525360107
    8. '           ' → logprob: -4.432620525360107
    9. '
' → logprob: -4.432620525360107
    10. ',' → logprob: -4.682620525360107

Token 1459: ' be' (ID: 413)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9591510891914368
    2. '       ' → logprob: -1.709151029586792
    3. 'be' → logprob: -2.334151029586792
    4. ' be' → logprob: -2.959151029586792
    5. '```' → logprob: -3.209151029586792
    6. ' =' → logprob: -3.584151029586792
    7. '   ' → logprob: -3.584151029586792
    8. ')' → logprob: -3.834151029586792
    9. 'continue' → logprob: -3.834151029586792
    10. '**' → logprob: -4.084151268005371

Token 1460: ' larger' (ID: 12384)
  Prédit: 'larg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'larg' → logprob: -0.8644070029258728
    2. 'up' → logprob: -1.3644070625305176
    3. 'very' → logprob: -2.3644070625305176
    4. 'large' → logprob: -2.4894070625305176
    5. 'much' → logprob: -2.6144070625305176
    6. 'more' → logprob: -4.489407062530518
    7. '32' → logprob: -5.114407062530518
    8. ' up' → logprob: -5.114407062530518
    9. '0' → logprob: -5.239407062530518
    10. 'greater' → logprob: -5.239407062530518

Token 1461: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020562907680869102
    2. '
' → logprob: -4.770563125610352
    3. '```' → logprob: -5.395563125610352
    4. '        
' → logprob: -6.270563125610352
    5. 'numer' → logprob: -7.020563125610352
    6. '#' → logprob: -7.145563125610352
    7. '   ' → logprob: -7.395563125610352
    8. 'decimal' → logprob: -8.020563125610352
    9. 'num' → logprob: -8.020563125610352
    10. '``' → logprob: -8.270563125610352

Token 1462: ' so' (ID: 813)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17620421946048737
    2. 'fraction' → logprob: -3.301204204559326
    3. 'decimal' → logprob: -3.551204204559326
    4. 'numer' → logprob: -3.801204204559326
    5. '#' → logprob: -4.176204204559326
    6. ' remainder' → logprob: -4.676204204559326
    7. '           ' → logprob: -4.926204204559326
    8. 'from' → logprob: -5.426204204559326
    9. ' fractional' → logprob: -5.676204204559326
    10. 'den' → logprob: -5.676204204559326

Token 1463: ' longest' (ID: 37511)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44397130608558655
    2. ' remainder' → logprob: -2.0689713954925537
    3. 'fraction' → logprob: -3.3189713954925537
    4. 'decimal' → logprob: -3.4439713954925537
    5. 'numer' → logprob: -3.4439713954925537
    6. ' numerator' → logprob: -3.6939713954925537
    7. '           ' → logprob: -3.8189713954925537
    8. 'num' → logprob: -4.318971157073975
    9. ' fractional' → logprob: -4.318971157073975
    10. ' decimal' → logprob: -5.193971157073975

Token 1464: ' fraction' (ID: 33763)
  Prédit: 'decimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'decimal' → logprob: -1.6715482473373413
    2. 'fraction' → logprob: -1.7965482473373413
    3. '```' → logprob: -2.046548366546631
    4. '_decimal' → logprob: -2.296548366546631
    5. 'possible' → logprob: -2.546548366546631
    6. '_possible' → logprob: -3.046548366546631
    7. 'digits' → logprob: -3.421548366546631
    8. '_fraction' → logprob: -3.421548366546631
    9. 'def' → logprob: -3.546548366546631
    10. '       ' → logprob: -3.796548366546631

Token 1465: ' decimal' (ID: 26964)
  Prédit: '_part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_part' → logprob: -1.2712311744689941
    2. '_length' → logprob: -1.6462311744689941
    3. ' =' → logprob: -2.021231174468994
    4. '_digits' → logprob: -2.021231174468994
    5. '_' → logprob: -2.396231174468994
    6. '_bits' → logprob: -3.646231174468994
    7. '_parts' → logprob: -4.021231174468994
    8. '       ' → logprob: -4.146231174468994
    9. '=' → logprob: -4.396231174468994
    10. '```' → logprob: -4.521231174468994

Token 1466: ' length' (ID: 5517)
  Prédit: '_digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_digits' → logprob: -1.610390305519104
    2. '       ' → logprob: -1.985390305519104
    3. '_repr' → logprob: -2.4853901863098145
    4. '   ' → logprob: -2.7353901863098145
    5. '_part' → logprob: -2.7353901863098145
    6. '_places' → logprob: -2.8603901863098145
    7. '```' → logprob: -3.2353901863098145
    8. '_' → logprob: -3.2353901863098145
    9. '_length' → logprob: -3.3603901863098145
    10. '_parts' → logprob: -3.7353901863098145

Token 1467: ' can' (ID: 665)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013174229301512241
    2. ' =' → logprob: -6.638174057006836
    3. 'digits' → logprob: -6.638174057006836
    4. '        
' → logprob: -6.763174057006836
    5. '   ' → logprob: -7.013174057006836
    6. ')' → logprob: -7.388174057006836
    7. '
' → logprob: -7.513174057006836
    8. ',' → logprob: -7.638174057006836
    9. '[' → logprob: -7.638174057006836
    10. '#' → logprob: -7.638174057006836

Token 1468: ' be' (ID: 413)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2033568173646927
    2. ' be' → logprob: -1.9533568620681763
    3. 'be' → logprob: -3.8283567428588867
    4. ' =' → logprob: -5.203356742858887
    5. '       ' → logprob: -5.578356742858887
    6. '7' → logprob: -6.328356742858887
    7. '<|end|>' → logprob: -6.828356742858887
    8. '26' → logprob: -6.953356742858887
    9. 'max' → logprob: -7.203356742858887
    10. '...' → logprob: -7.328356742858887

Token 1469: ' estimated' (ID: 20402)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.7070894241333008
    2. 'up' → logprob: -1.8320894241333008
    3. '128' → logprob: -2.332089424133301
    4. 'max' → logprob: -2.707089424133301
    5. '32' → logprob: -2.957089424133301
    6. '30' → logprob: -4.207089424133301
    7. '31' → logprob: -4.332089424133301
    8. '35' → logprob: -4.582089424133301
    9. '...' → logprob: -4.832089424133301
    10. 'found' → logprob: -5.207089424133301

Token 1470: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009027079679071903
    2. 'digits' → logprob: -6.009027004241943
    3. '```' → logprob: -6.009027004241943
    4. ',' → logprob: -7.384027004241943
    5. '        
' → logprob: -7.759027004241943
    6. '   ' → logprob: -7.759027004241943
    7. '           ' → logprob: -8.009027481079102
    8. 'def' → logprob: -8.259027481079102
    9. '#' → logprob: -8.634027481079102
    10. 'n' → logprob: -8.759027481079102

Token 1471: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001208211062476039
    2. '```' → logprob: -7.376208305358887
    3. '        
' → logprob: -8.751208305358887
    4. '
' → logprob: -8.751208305358887
    5. 'decimal' → logprob: -9.376208305358887
    6. '   ' → logprob: -10.376208305358887
    7. '           ' → logprob: -10.501208305358887
    8. 'digits' → logprob: -10.751208305358887
    9. '``' → logprob: -11.376208305358887
    10. '#' → logprob: -11.376208305358887

Token 1472: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011644699610769749
    2. 'decimal' → logprob: -4.7616448402404785
    3. 'digits' → logprob: -7.7616448402404785
    4. 'dec' → logprob: -7.8866448402404785
    5. 'fraction' → logprob: -7.8866448402404785
    6. '   ' → logprob: -7.8866448402404785
    7. '#' (adapté à ' #') → logprob: -8.26164436340332
    8. 'max' → logprob: -8.76164436340332
    9. '```' → logprob: -9.13664436340332
    10. 'num' → logprob: -9.26164436340332

Token 1473: ' We'll' (ID: 46830)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022449083626270294
    2. 'decimal' → logprob: -4.272449016571045
    3. '#' → logprob: -6.647449016571045
    4. 'from' → logprob: -6.897449016571045
    5. '   ' → logprob: -7.022449016571045
    6. 'fraction' → logprob: -7.147449016571045
    7. 'den' → logprob: -7.272449016571045
    8. 'dec' → logprob: -7.397449016571045
    9. 'numer' → logprob: -7.522449016571045
    10. 'max' → logprob: -7.522449016571045

Token 1474: ' generate' (ID: 10419)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0882401391863823
    2. 'def' → logprob: -3.588240146636963
    3. ' multiply' → logprob: -4.338240146636963
    4. 'multiply' → logprob: -5.088240146636963
    5. 'generate' → logprob: -5.338240146636963
    6. '        ' → logprob: -5.463240146636963
    7. '```' → logprob: -5.713240146636963
    8. ' continue' → logprob: -5.713240146636963
    9. ' generate' → logprob: -5.838240146636963
    10. '           ' → logprob: -6.088240146636963

Token 1475: ' decimal' (ID: 26964)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.716151237487793
    2. 'result' → logprob: -1.591151237487793
    3. 'decimal' → logprob: -1.841151237487793
    4. 'numer' → logprob: -2.966151237487793
    5. 'fraction' → logprob: -3.466151237487793
    6. '       ' → logprob: -3.591151237487793
    7. 'dec' → logprob: -5.091151237487793
    8. 'res' → logprob: -5.591151237487793
    9. '```' → logprob: -5.591151237487793
    10. ' digits' → logprob: -5.966151237487793

Token 1476: ' fraction' (ID: 33763)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.604364275932312
    2. '_digits' → logprob: -0.979364275932312
    3. '_' → logprob: -3.6043643951416016
    4. ' digits' → logprob: -3.7293643951416016
    5. '       ' → logprob: -4.104364395141602
    6. ' _' → logprob: -5.479364395141602
    7. '_string' → logprob: -7.104364395141602
    8. '"' → logprob: -7.604364395141602
    9. '_digit' → logprob: -7.729364395141602
    10. '_places' → logprob: -7.854364395141602

Token 1477: ' digits' (ID: 37806)
  Prédit: '_digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -0.5245189070701599
    2. '_part' → logprob: -1.6495189666748047
    3. 'digits' → logprob: -2.7745189666748047
    4. '       ' → logprob: -2.8995189666748047
    5. '_' → logprob: -3.6495189666748047
    6. ' digits' → logprob: -3.8995189666748047
    7. ' part' → logprob: -4.899518966674805
    8. '   ' → logprob: -5.024518966674805
    9. '_string' → logprob: -5.024518966674805
    10. 'part' → logprob: -5.524518966674805

Token 1478: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017849627882242203
    2. ':' → logprob: -4.892849445343018
    3. ' =' → logprob: -5.767849445343018
    4. ',' → logprob: -6.142849445343018
    5. '           ' → logprob: -6.142849445343018
    6. '(' → logprob: -7.392849445343018
    7. '[' → logprob: -7.767849445343018
    8. '=' → logprob: -8.267849922180176
    9. '(n' → logprob: -8.767849922180176
    10. '   ' → logprob: -8.892849922180176

Token 1479: ' long' (ID: 1701)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.12363693863153458
    2. '[]
' → logprob: -3.6236369609832764
    3. '""' → logprob: -3.7486369609832764
    4. ' follows' → logprob: -4.248636722564697
    5. '''' → logprob: -4.623636722564697
    6. 'a' → logprob: -4.998636722564697
    7. 'def' → logprob: -5.373636722564697
    8. 'f' → logprob: -5.373636722564697
    9. 'numer' → logprob: -5.498636722564697
    10. '```' → logprob: -5.623636722564697

Token 1480: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -1.1033843755722046
    2. 'while' → logprob: -1.3533843755722046
    3. ' while' → logprob: -1.7283843755722046
    4. 'as' → logprob: -2.103384494781494
    5. '       ' → logprob: -2.853384494781494
    6. '=' → logprob: -4.103384494781494
    7. '```' → logprob: -4.853384494781494
    8. ')' → logprob: -5.478384494781494
    9. '.' → logprob: -6.478384494781494
    10. ' of' → logprob: -6.478384494781494

Token 1481: ' fractional' (ID: 136350)
  Prédit: 'fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fraction' → logprob: -0.024113181978464127
    2. ' fractional' → logprob: -3.774113178253174
    3. ' fraction' → logprob: -8.399113655090332
    4. 'numer' → logprob: -8.774113655090332
    5. ' True' → logprob: -9.149113655090332
    6. '   ' → logprob: -9.774113655090332
    7. 'den' → logprob: -9.774113655090332
    8. '       ' → logprob: -9.899113655090332
    9. 'True' → logprob: -10.149113655090332
    10. ' numerator' → logprob: -10.524113655090332

Token 1482: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.001059486996382475
    2. '_' → logprob: -7.626059532165527
    3. '_parts' → logprob: -8.751059532165527
    4. 'part' → logprob: -8.751059532165527
    5. '_fraction' → logprob: -8.751059532165527
    6. '```' → logprob: -10.626059532165527
    7. '_digits' → logprob: -11.001059532165527
    8. ' _' → logprob: -12.126059532165527
    9. '_value' → logprob: -12.126059532165527
    10. '`' → logprob: -12.376059532165527

Token 1483: ' !=' (ID: 1666)
  Prédit: '.n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.023805905133485794
    2. ' !=' → logprob: -4.523806095123291
    3. 'numer' → logprob: -5.023806095123291
    4. '.den' → logprob: -6.648806095123291
    5. ' numerator' → logprob: -6.648806095123291
    6. 'umerator' → logprob: -7.148806095123291
    7. '!=' → logprob: -7.273806095123291
    8. '```' → logprob: -7.523806095123291
    9. '>' → logprob: -8.023805618286133
    10. '   ' → logprob: -8.773805618286133

Token 1484: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004122569225728512
    2. 'Fraction' → logprob: -5.504122734069824
    3. ' ' → logprob: -10.129122734069824
    4. '```' → logprob: -12.754122734069824
    5. '   ' → logprob: -14.754122734069824
    6. ' Fraction' → logprob: -14.879122734069824
    7. 'fraction' → logprob: -15.004122734069824
    8. '
' → logprob: -16.379121780395508
    9. '``' → logprob: -16.879121780395508
    10. '>' → logprob: -17.754121780395508

Token 1485: ':

' (ID: 1402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0480307899415493
    2. '           ' → logprob: -3.4230308532714844
    3. ' and' → logprob: -5.298030853271484
    4. ',' → logprob: -5.673030853271484
    5. 'digits' → logprob: -6.048030853271484
    6. 'd' → logprob: -7.798030853271484
    7. 'result' → logprob: -7.923030853271484
    8. ')' → logprob: -8.298030853271484
    9. '   ' → logprob: -8.423030853271484
    10. '        
' → logprob: -8.673030853271484

Token 1486: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004320810548961163
    2. '```' → logprob: -5.7543206214904785
    3. 'digits' → logprob: -7.5043206214904785
    4. 'result' → logprob: -8.254321098327637
    5. 'decimal' → logprob: -9.379321098327637
    6. '           ' → logprob: -9.629321098327637
    7. '``' → logprob: -9.754321098327637
    8. '   ' → logprob: -9.879321098327637
    9. 'fraction' → logprob: -10.629321098327637
    10. 'dec' → logprob: -11.504321098327637

Token 1487: ' digits' (ID: 37806)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05537246912717819
    2. 'decimal' → logprob: -4.05537223815918
    3. 'digits' (adapté à ' digits') → logprob: -4.18037223815918
    4. 'result' → logprob: -4.30537223815918
    5. '```' → logprob: -5.43037223815918
    6. 'fraction' → logprob: -6.05537223815918
    7. 'from' → logprob: -7.93037223815918
    8. 'dec' → logprob: -8.18037223815918
    9. '``' → logprob: -8.80537223815918
    10. 'res' → logprob: -9.80537223815918

Token 1488: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11958400905132294
    2. ' =' → logprob: -2.244584083557129
    3. '=[]' → logprob: -5.119584083557129
    4. '[:]' → logprob: -8.744584083557129
    5. '[' → logprob: -9.119584083557129
    6. '[]' → logprob: -9.244584083557129
    7. '=[]
' → logprob: -9.369584083557129
    8. '.append' → logprob: -9.494584083557129
    9. '   ' → logprob: -9.869584083557129
    10. ',' → logprob: -10.119584083557129

Token 1489: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0001290454383706674
    2. '[]
' → logprob: -9.000128746032715
    3. ' []' → logprob: -13.500128746032715
    4. '[]"' → logprob: -13.625128746032715
    5. '['' → logprob: -13.875128746032715
    6. '[' → logprob: -14.000128746032715
    7. '["' → logprob: -14.750128746032715
    8. '[]}' → logprob: -15.125128746032715
    9. '[],' → logprob: -15.500128746032715
    10. '[]

' → logprob: -15.625128746032715

Token 1490: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2952266335487366
    2. 'fraction' → logprob: -1.7952265739440918
    3. ' remainder' → logprob: -3.295226573944092
    4. 're' → logprob: -4.670226573944092
    5. ' fractional' → logprob: -4.670226573944092
    6. ' numerator' → logprob: -5.170226573944092
    7. 'numer' → logprob: -5.170226573944092
    8. '           ' → logprob: -5.545226573944092
    9. 'frac' → logprob: -5.920226573944092
    10. '```' → logprob: -6.170226573944092

Token 1491: ' frac' (ID: 72308)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.8896079659461975
    2. 'fraction' → logprob: -1.2646079063415527
    3. 'frac' (adapté à ' frac') → logprob: -1.3896079063415527
    4. 'numer' → logprob: -4.014607906341553
    5. 'rem' → logprob: -4.264607906341553
    6. 'f' → logprob: -4.764607906341553
    7. '   ' → logprob: -5.014607906341553
    8. 'fp' → logprob: -5.889607906341553
    9. 'num' → logprob: -6.514607906341553
    10. ' remainder' → logprob: -6.639607906341553

Token 1492: ' =' (ID: 314)
  Prédit: '_fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fraction' → logprob: -0.16696147620677948
    2. 'tion' → logprob: -1.916961431503296
    3. '```' → logprob: -6.291961669921875
    4. 'ction' → logprob: -7.291961669921875
    5. '   ' → logprob: -7.416961669921875
    6. '_' → logprob: -7.541961669921875
    7. 't' → logprob: -7.541961669921875
    8. '_part' → logprob: -7.666961669921875
    9. ' =' → logprob: -8.166961669921875
    10. 'action' → logprob: -8.291961669921875

Token 1493: ' fractional' (ID: 136350)
  Prédit: 'fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fraction' → logprob: -7.994086627149954e-05
    2. 'Fraction' → logprob: -9.500080108642578
    3. ' fractional' → logprob: -12.500080108642578
    4. 'fra' → logprob: -14.500080108642578
    5. '       ' → logprob: -14.875080108642578
    6. '           ' → logprob: -15.125080108642578
    7. '   ' → logprob: -15.875080108642578
    8. '_fraction' → logprob: -16.625080108642578
    9. 'frac' → logprob: -18.000080108642578
    10. '(f' → logprob: -18.750080108642578

Token 1494: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.001050434890203178
    2. '_fraction' → logprob: -6.8760504722595215
    3. '_parts' → logprob: -11.251049995422363
    4. '_frac' → logprob: -13.626049995422363
    5. '_' → logprob: -13.751049995422363
    6. ' _' → logprob: -15.001049995422363
    7. '   ' → logprob: -15.501049995422363
    8. '_partition' → logprob: -15.626049995422363
    9. ')_' → logprob: -15.751049995422363
    10. 'part' → logprob: -15.751049995422363

Token 1495: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12127778679132462
    2. '*' → logprob: -3.1212778091430664
    3. ' *' → logprob: -3.3712778091430664
    4. '       ' → logprob: -4.496277809143066
    5. '```' → logprob: -5.121277809143066
    6. '=' → logprob: -5.246277809143066
    7. ' =' → logprob: -6.246277809143066
    8. '    
' → logprob: -6.496277809143066
    9. '
' → logprob: -6.871277809143066
    10. '<|end|>' → logprob: -6.996277809143066

Token 1496: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016126805916428566
    2. 'while' → logprob: -4.64112663269043
    3. ' while' → logprob: -5.26612663269043
    4. '```' → logprob: -6.89112663269043
    5. '        
' → logprob: -10.01612663269043
    6. '   ' → logprob: -10.76612663269043
    7. '``' → logprob: -10.89112663269043
    8. '           ' → logprob: -10.89112663269043
    9. ',' → logprob: -11.14112663269043
    10. 'for' → logprob: -11.89112663269043

Token 1497: ' max' (ID: 2999)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.32014212012290955
    2. 'for' → logprob: -1.320142149925232
    3. ' while' → logprob: -5.4451422691345215
    4. ' for' → logprob: -6.3201422691345215
    5. '       ' → logprob: -7.4451422691345215
    6. 'frac' → logprob: -10.070141792297363
    7. '   ' → logprob: -10.695141792297363
    8. '```' → logprob: -11.070141792297363
    9. '
' → logprob: -11.195141792297363
    10. '        
' → logprob: -11.320141792297363

Token 1498: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -0.013508652336895466
    2. 'digits' → logprob: -6.1385087966918945
    3. '_length' → logprob: -6.2635087966918945
    4. '7' → logprob: -6.7635087966918945
    5. '_dec' → logprob: -6.8885087966918945
    6. '   ' → logprob: -6.8885087966918945
    7. '_decimal' → logprob: -7.0135087966918945
    8. '_len' → logprob: -7.1385087966918945
    9. '10' → logprob: -7.2635087966918945
    10. '_tokens' → logprob: -7.3885087966918945

Token 1499: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00861468818038702
    2. ' =' → logprob: -4.758614540100098
    3. '=
' → logprob: -17.008615493774414
    4. '+=' → logprob: -17.258615493774414
    5. '   ' → logprob: -18.508615493774414
    6. '```' → logprob: -18.508615493774414
    7. ':' → logprob: -18.633615493774414
    8. ' +=' → logprob: -18.758615493774414
    9. '=}' → logprob: -19.258615493774414
    10. ' ' → logprob: -19.883615493774414

Token 1500: ' ' (ID: 220)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '20' → logprob: -0.7261513471603394
    2. '50' → logprob: -1.1011513471603394
    3. '100' → logprob: -2.976151466369629
    4. '35' → logprob: -3.351151466369629
    5. '40' → logprob: -3.476151466369629
    6. '30' → logprob: -3.476151466369629
    7. '10' → logprob: -4.101151466369629
    8. '15' → logprob: -4.601151466369629
    9. '32' → logprob: -5.726151466369629
    10. '25' → logprob: -6.101151466369629

Token 1501: '20' (ID: 455)
  Prédit: '20'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.5128123760223389
    2. '50' → logprob: -1.3878123760223389
    3. '30' → logprob: -3.012812376022339
    4. '100' → logprob: -3.262812376022339
    5. '40' → logprob: -3.887812376022339
    6. '15' → logprob: -4.012812614440918
    7. '35' → logprob: -4.512812614440918
    8. '10' → logprob: -4.762812614440918
    9. '25' → logprob: -6.387812614440918
    10. '12' → logprob: -6.762812614440918

Token 1502: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2808744013309479
    2. '
' → logprob: -2.280874490737915
    3. 'while' → logprob: -3.655874490737915
    4. '[' → logprob: -4.030874252319336
    5. ')' → logprob: -4.155874252319336
    6. '```' → logprob: -4.155874252319336
    7. '   ' → logprob: -4.530874252319336
    8. '        
' → logprob: -4.780874252319336
    9. '#' → logprob: -5.405874252319336
    10. ' while' → logprob: -5.530874252319336

Token 1503: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39001864194869995
    2. '       ' → logprob: -1.1400187015533447
    3. '        
' → logprob: -7.015018463134766
    4. 'while' → logprob: -7.515018463134766
    5. '   ' → logprob: -8.265018463134766
    6. '<|end|>' → logprob: -8.390018463134766
    7. 'for' → logprob: -9.140018463134766
    8. ',
' → logprob: -9.390018463134766
    9. '    
' → logprob: -9.390018463134766
    10. '#' → logprob: -9.390018463134766

Token 1504: ' more' (ID: 945)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '20' → logprob: -0.979241132736206
    2. '```' → logprob: -1.604241132736206
    3. ' ' → logprob: -2.604241132736206
    4. ')' → logprob: -2.854241132736206
    5. ' for' → logprob: -3.354241132736206
    6. '       ' → logprob: -3.479241132736206
    7. 'for' → logprob: -3.604241132736206
    8. '[' → logprob: -3.729241132736206
    9. 'max' → logprob: -3.979241132736206
    10. '10' → logprob: -3.979241132736206

Token 1505: ' than' (ID: 1572)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09617254883050919
    2. '<|end|>' → logprob: -3.721172571182251
    3. '=' → logprob: -4.346172332763672
    4. 'while' → logprob: -4.596172332763672
    5. '<|end|>' → logprob: -4.721172332763672
    6. '   ' → logprob: -5.096172332763672
    7. '.' → logprob: -5.346172332763672
    8. 'for' → logprob: -5.721172332763672
    9. '           ' → logprob: -5.971172332763672
    10. '[' → logprob: -6.221172332763672

Token 1506: ' enough' (ID: 4951)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.1086328774690628
    2. 'needed' → logprob: -3.608632802963257
    3. 's' → logprob: -3.733632802963257
    4. ' enough' → logprob: -3.858632802963257
    5. '20' → logprob: -4.108633041381836
    6. 'necessary' → logprob: -4.483633041381836
    7. '7' → logprob: -7.358633041381836
    8. '16' → logprob: -8.108633041381836
    9. '30' → logprob: -8.108633041381836
    10. '0' → logprob: -8.358633041381836

Token 1507: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016564352437853813
    2. '
' → logprob: -4.76656436920166
    3. 'while' → logprob: -6.51656436920166
    4. 'for' → logprob: -6.64156436920166
    5. ' for' → logprob: -7.01656436920166
    6. ')' → logprob: -7.01656436920166
    7. '        
' → logprob: -7.14156436920166
    8. '   ' → logprob: -7.64156436920166
    9. ' while' → logprob: -7.76656436920166
    10. '```' → logprob: -7.89156436920166

Token 1508: ' denominator' (ID: 101279)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '20' → logprob: -0.06505526602268219
    2. 'frac' → logprob: -3.4400553703308105
    3. 'fraction' → logprob: -4.9400553703308105
    4. '128' → logprob: -5.0650553703308105
    5. 'max' → logprob: -5.4400553703308105
    6. '7' → logprob: -5.4400553703308105
    7. 'digits' → logprob: -5.9400553703308105
    8. '64' → logprob: -7.3150553703308105
    9. '15' → logprob: -7.5650553703308105
    10. 'len' → logprob: -7.5650553703308105

Token 1509: ' power' (ID: 3470)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3058560788631439
    2. '=' → logprob: -1.4308561086654663
    3. '           ' → logprob: -5.305856227874756
    4. '
' → logprob: -5.305856227874756
    5. ' =' → logprob: -5.305856227874756
    6. 'while' → logprob: -6.805856227874756
    7. '```' → logprob: -6.930856227874756
    8. '-' → logprob: -7.055856227874756
    9. ':' → logprob: -7.180856227874756
    10. ')' → logprob: -7.180856227874756

Token 1510: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10010950267314911
    2. '       ' → logprob: -2.600109577178955
    3. 'of' → logprob: -4.350109577178955
    4. '           ' → logprob: -5.850109577178955
    5. ' =' → logprob: -6.100109577178955
    6. '               ' → logprob: -7.600109577178955
    7. ' of' → logprob: -7.850109577178955
    8. '10' → logprob: -7.975109577178955
    9. '2' → logprob: -8.225109100341797
    10. '_of' → logprob: -8.475109100341797

Token 1511: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002623931737616658
    2. 'two' → logprob: -6.252624034881592
    3. '10' → logprob: -8.127623558044434
    4. '7' → logprob: -8.127623558044434
    5. ' two' → logprob: -11.002623558044434
    6. 'Two' → logprob: -11.377623558044434
    7. '20' → logprob: -11.502623558044434
    8. ' ' → logprob: -11.627623558044434
    9. '```' → logprob: -11.752623558044434
    10. '32' → logprob: -11.877623558044434

Token 1512: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0019279246916994452
    2. '7' → logprob: -7.126927852630615
    3. '-' → logprob: -7.501927852630615
    4. 'two' → logprob: -7.876927852630615
    5. '10' → logprob: -9.876928329467773
    6. '-two' → logprob: -10.501928329467773
    7. '32' → logprob: -10.751928329467773
    8. 'Two' → logprob: -11.126928329467773
    9. '```' → logprob: -11.501928329467773
    10. '20' → logprob: -11.501928329467773

Token 1513: ' up' (ID: 869)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005141846369951963
    2. '
' → logprob: -6.630141735076904
    3. 'for' → logprob: -6.880141735076904
    4. 'while' → logprob: -7.005141735076904
    5. ' for' → logprob: -7.255141735076904
    6. ' while' → logprob: -8.630142211914062
    7. '        
' → logprob: -8.630142211914062
    8. ')' → logprob: -9.005142211914062
    9. '=' → logprob: -9.130142211914062
    10. '```' → logprob: -9.130142211914062

Token 1514: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8065430521965027
    2. '       ' → logprob: -1.3065431118011475
    3. ' =' → logprob: -2.5565431118011475
    4. '"' → logprob: -3.0565431118011475
    5. '   ' → logprob: -3.0565431118011475
    6. '[' → logprob: -4.056542873382568
    7. '_' → logprob: -4.431542873382568
    8. '```' → logprob: -4.806542873382568
    9. ')' → logprob: -5.056542873382568
    10. '.' → logprob: -5.181542873382568

Token 1515: ' ' (ID: 220)
  Prédit: '31'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '31' → logprob: -0.6761172413825989
    2. '7' → logprob: -1.801117181777954
    3. '32' → logprob: -1.801117181777954
    4. '20' → logprob: -1.926117181777954
    5. '30' → logprob: -5.676117420196533
    6. '15' → logprob: -6.301117420196533
    7. '50' → logprob: -6.426117420196533
    8. '10' → logprob: -6.551117420196533
    9. '128' → logprob: -6.801117420196533
    10. '64' → logprob: -7.051117420196533

Token 1516: '2' (ID: 17)
  Prédit: '31'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '31' → logprob: -0.8112546801567078
    2. '32' → logprob: -1.6862547397613525
    3. '50' → logprob: -1.8112547397613525
    4. '20' → logprob: -2.0612547397613525
    5. '7' → logprob: -3.3112547397613525
    6. '40' → logprob: -4.436254501342773
    7. '30' → logprob: -4.561254501342773
    8. '100' → logprob: -5.186254501342773
    9. '35' → logprob: -5.186254501342773
    10. '64' → logprob: -5.811254501342773

Token 1517: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.8453699350357056
    2. '0' → logprob: -0.9703699350357056
    3. '20' → logprob: -2.095369815826416
    4. '7' → logprob: -3.220369815826416
    5. '[' → logprob: -5.345369815826416
    6. '31' → logprob: -5.345369815826416
    7. '```' → logprob: -5.595369815826416
    8. ' **' → logprob: -5.970369815826416
    9. '*' → logprob: -6.095369815826416
    10. '^' → logprob: -6.220369815826416

Token 1518: '31' (ID: 2911)
  Prédit: '31'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '31' → logprob: -0.3597618639469147
    2. '32' → logprob: -2.109761953353882
    3. '20' → logprob: -2.234761953353882
    4. '7' → logprob: -2.859761953353882
    5. '35' → logprob: -5.484761714935303
    6. '50' → logprob: -5.609761714935303
    7. '40' → logprob: -5.734761714935303
    8. '15' → logprob: -6.109761714935303
    9. '10' → logprob: -6.609761714935303
    10. '30' → logprob: -6.984761714935303

Token 1519: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18624451756477356
    2. '
' → logprob: -2.311244487762451
    3. '```' → logprob: -4.311244487762451
    4. 'for' → logprob: -4.561244487762451
    5. 'while' → logprob: -4.561244487762451
    6. '``' → logprob: -5.436244487762451
    7. '        
' → logprob: -5.436244487762451
    8. '   ' → logprob: -5.686244487762451
    9. '`
' → logprob: -5.686244487762451
    10. ')
' → logprob: -5.811244487762451

Token 1520: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013308235444128513
    2. 'for' → logprob: -6.013308048248291
    3. 'while' → logprob: -6.013308048248291
    4. ' for' → logprob: -6.263308048248291
    5. ' while' → logprob: -6.513308048248291
    6. '   ' → logprob: -6.638308048248291
    7. '        
' → logprob: -6.763308048248291
    8. '```' → logprob: -7.013308048248291
    9. '``' → logprob: -8.38830852508545
    10. '	' → logprob: -8.63830852508545

Token 1521: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.558324933052063
    2. '       ' → logprob: -1.058324933052063
    3. ' for' → logprob: -2.6833248138427734
    4. 'while' → logprob: -4.933324813842773
    5. 'fraction' → logprob: -6.683324813842773
    6. '```' → logprob: -7.058324813842773
    7. ' while' → logprob: -7.683324813842773
    8. 'digit' → logprob: -7.933324813842773
    9. 'frac' → logprob: -7.933324813842773
    10. '   ' → logprob: -7.933324813842773

Token 1522: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00749540887773037
    2. 'i' → logprob: -5.007495403289795
    3. '_i' → logprob: -7.632495403289795
    4. '_digit' → logprob: -9.007495880126953
    5. ' _' → logprob: -9.757495880126953
    6. '_
' → logprob: -10.007495880126953
    7. '_=' → logprob: -11.007495880126953
    8. '_digits' → logprob: -11.382495880126953
    9. '```' → logprob: -11.632495880126953
    10. ' i' → logprob: -12.132495880126953

Token 1523: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3321073055267334
    2. 'in' → logprob: -1.3321073055267334
    3. '_' → logprob: -4.3321075439453125
    4. 'i' → logprob: -5.9571075439453125
    5. ' _' → logprob: -6.2071075439453125
    6. ' i' → logprob: -7.8321075439453125
    7. '0' → logprob: -8.957107543945312
    8. '_in' → logprob: -9.082107543945312
    9. ' ' → logprob: -9.582107543945312
    10. '_i' → logprob: -9.582107543945312

Token 1524: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.662937372922897e-05
    2. ' range' → logprob: -9.250096321105957
    3. '[' → logprob: -15.250096321105957
    4. '(range' → logprob: -16.375097274780273
    5. ' ' → logprob: -16.750097274780273
    6. '   ' → logprob: -18.750097274780273
    7. '
' → logprob: -18.750097274780273
    8. '10' → logprob: -18.750097274780273
    9. '```' → logprob: -19.250097274780273
    10. '  ' → logprob: -19.375097274780273

Token 1525: '(max' (ID: 17178)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.12969821691513062
    2. '20' → logprob: -2.1296982765197754
    3. ' max' → logprob: -6.004698276519775
    4. '(max' → logprob: -8.379697799682617
    5. ' ' → logprob: -10.129697799682617
    6. '   ' → logprob: -11.004697799682617
    7. '[max' → logprob: -12.504697799682617
    8. '0' → logprob: -12.879697799682617
    9. '	max' → logprob: -13.504697799682617
    10. '30' → logprob: -13.754697799682617

Token 1526: '_digits' (ID: 108638)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.2304353415966034
    2. '_digits' → logprob: -1.8554353713989258
    3. 'digits' → logprob: -3.855435371398926
    4. '       ' → logprob: -4.105435371398926
    5. 'max' → logprob: -5.355435371398926
    6. '           ' → logprob: -6.230435371398926
    7. '   ' → logprob: -6.480435371398926
    8. '(max' → logprob: -6.980435371398926
    9. '```' → logprob: -7.230435371398926
    10. 'Digits' → logprob: -7.855435371398926

Token 1527: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.007222403772175312
    2. '):' → logprob: -5.6322221755981445
    3. '           ' → logprob: -5.7572221755981445
    4. '       ' → logprob: -8.257222175598145
    5. '   ' → logprob: -9.382222175598145
    6. ':
' → logprob: -10.007222175598145
    7. '):
' → logprob: -10.757222175598145
    8. '():
' → logprob: -11.257222175598145
    9. ':' → logprob: -11.632222175598145
    10. ' ):
' → logprob: -12.132222175598145

Token 1528: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004611099138855934
    2. 'frac' → logprob: -6.004611015319824
    3. '       ' → logprob: -6.254611015319824
    4. '   ' → logprob: -9.004611015319824
    5. '```' → logprob: -9.879611015319824
    6. ' frac' → logprob: -11.379611015319824
    7. '               ' → logprob: -12.004611015319824
    8. ' ' → logprob: -12.754611015319824
    9. '          ' → logprob: -12.879611015319824
    10. 'fract' → logprob: -13.254611015319824

Token 1529: ' frac' (ID: 72308)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frac' (adapté à ' frac') → logprob: -0.4759349524974823
    2. '           ' → logprob: -0.9759349822998047
    3. '   ' → logprob: -7.100934982299805
    4. ' frac' → logprob: -7.475934982299805
    5. 'fr' → logprob: -8.100934982299805
    6. 'fract' → logprob: -9.725934982299805
    7. 'fraction' → logprob: -9.725934982299805
    8. '       ' → logprob: -10.725934982299805
    9. '               ' → logprob: -11.475934982299805
    10. '```' → logprob: -12.975934982299805

Token 1530: ' *=' (ID: 25253)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47453218698501587
    2. '*=' → logprob: -0.9745321869850159
    3. ' *=' → logprob: -7.974532127380371
    4. ' =' → logprob: -9.974532127380371
    5. '   ' → logprob: -11.099532127380371
    6. '*' → logprob: -11.099532127380371
    7. '<<' → logprob: -11.349532127380371
    8. ' <<=' → logprob: -11.849532127380371
    9. '.=' → logprob: -12.599532127380371
    10. '%=' → logprob: -12.849532127380371

Token 1531: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.1637164789135568e-05
    2. 'Fraction' → logprob: -11.750011444091797
    3. 'Decimal' → logprob: -12.500011444091797
    4. 'decimal' → logprob: -18.375011444091797
    5. ' ' → logprob: -20.125011444091797
    6. '100' → logprob: -21.125011444091797
    7. 'ten' → logprob: -21.500011444091797
    8. '(' → logprob: -21.500011444091797
    9. '```' → logprob: -21.750011444091797
    10. '=' → logprob: -21.875011444091797

Token 1532: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.700132997939363e-05
    2. 'Decimal' → logprob: -11.625017166137695
    3. 'Fraction' → logprob: -11.750017166137695
    4. 'decimal' → logprob: -16.250017166137695
    5. ' ' → logprob: -17.875017166137695
    6. '```' → logprob: -19.000017166137695
    7. '2' → logprob: -19.875017166137695
    8. '１０' → logprob: -19.875017166137695
    9. 'ten' → logprob: -20.125017166137695
    10. '   ' → logprob: -20.250017166137695

Token 1533: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1534: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0031337514519691467
    2. '       ' → logprob: -6.628133773803711
    3. '   ' → logprob: -7.878133773803711
    4. 'if' → logprob: -8.253133773803711
    5. 'digit' → logprob: -8.503133773803711
    6. 'token' → logprob: -8.878133773803711
    7. '
' → logprob: -8.878133773803711
    8. 'digits' → logprob: -9.003133773803711
    9. 'num' → logprob: -9.253133773803711
    10. '```' → logprob: -9.878133773803711

Token 1535: ' digit' (ID: 19181)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' (adapté à ' digit') → logprob: -0.008077139034867287
    2. ' digit' → logprob: -5.258077144622803
    3. 'digits' → logprob: -6.133077144622803
    4. 'd' → logprob: -8.133076667785645
    5. 'q' → logprob: -8.508076667785645
    6. '           ' → logprob: -8.883076667785645
    7. 'dig' → logprob: -11.258076667785645
    8. ' digits' → logprob: -11.883076667785645
    9. 'num' → logprob: -12.258076667785645
    10. 'quot' → logprob: -12.258076667785645

Token 1536: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07107536494731903
    2. ' =' → logprob: -2.696075439453125
    3. ',' → logprob: -6.821075439453125
    4. '=int' → logprob: -10.696075439453125
    5. '_value' → logprob: -12.321075439453125
    6. '=d' → logprob: -12.696075439453125
    7. '.' → logprob: -12.821075439453125
    8. '   ' → logprob: -12.946075439453125
    9. ')' → logprob: -13.196075439453125
    10. '.=' → logprob: -13.196075439453125

Token 1537: ' frac' (ID: 72308)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frac' → logprob: -0.005973469465970993
    2. ' frac' → logprob: -5.1309733390808105
    3. '   ' → logprob: -11.380973815917969
    4. 'int' → logprob: -11.380973815917969
    5. ' ' → logprob: -11.505973815917969
    6. 'fraction' → logprob: -12.130973815917969
    7. 'digit' → logprob: -13.380973815917969
    8. 'fract' → logprob: -13.630973815917969
    9. '_frac' → logprob: -14.255973815917969
    10. '  ' → logprob: -14.380973815917969

Token 1538: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.0024509229697287083
    2. '.' → logprob: -6.627450942993164
    3. '//' → logprob: -7.252450942993164
    4. 'numer' → logprob: -8.377450942993164
    5. ' //' → logprob: -10.002450942993164
    6. '.__' → logprob: -10.377450942993164
    7. '_n' → logprob: -10.627450942993164
    8. ' numerator' → logprob: -11.127450942993164
    9. ' .' → logprob: -11.252450942993164
    10. 'n' → logprob: -11.502450942993164

Token 1539: 'umerator' (ID: 152035)
  Prédit: 'umerator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umerator' → logprob: -0.0034141552168875933
    2. 'um' → logprob: -6.503414154052734
    3. 'numer' → logprob: -6.503414154052734
    4. 'umer' → logprob: -8.003414154052734
    5. '//' → logprob: -10.628414154052734
    6. '.' → logprob: -10.878414154052734
    7. 'umber' → logprob: -11.753414154052734
    8. '.n' → logprob: -12.128414154052734
    9. 'u' → logprob: -12.628414154052734
    10. '```' → logprob: -12.753414154052734

Token 1540: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.5232580304145813
    2. '//' → logprob: -0.8982580304145813
    3. '```' → logprob: -9.648258209228516
    4. '//
' → logprob: -10.523258209228516
    5. ' ' → logprob: -11.273258209228516
    6. 'div' → logprob: -11.898258209228516
    7. '`' → logprob: -12.273258209228516
    8. '           ' → logprob: -12.648258209228516
    9. '//=' → logprob: -13.023258209228516
    10. '
' → logprob: -13.148258209228516

Token 1541: ' frac' (ID: 72308)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frac' → logprob: -6.392202976712724e-06
    2. ' frac' → logprob: -12.000006675720215
    3. '   ' → logprob: -16.5000057220459
    4. '  ' → logprob: -19.1250057220459
    5. 'fraction' → logprob: -20.0000057220459
    6. 'fract' → logprob: -20.1250057220459
    7. '    ' → logprob: -20.2500057220459
    8. '     ' → logprob: -20.2500057220459
    9. '_frac' → logprob: -20.5000057220459
    10. '       ' → logprob: -20.7500057220459

Token 1542: '.den' (ID: 152740)
  Prédit: '.den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.den' → logprob: -0.014196529053151608
    2. 'den' → logprob: -4.264196395874023
    3. 'frac' → logprob: -10.889196395874023
    4. '.fr' → logprob: -11.889196395874023
    5. ' denominator' → logprob: -12.889196395874023
    6. 'DEN' → logprob: -13.139196395874023
    7. 'Den' → logprob: -13.764196395874023
    8. '_den' → logprob: -14.639196395874023
    9. '_DEN' → logprob: -14.889196395874023
    10. '.d' → logprob: -15.014196395874023

Token 1543: 'ominator' (ID: 96399)
  Prédit: 'ominator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ominator' → logprob: -0.0002919638354796916
    2. 'om' → logprob: -9.00029182434082
    3. 'umerator' → logprob: -9.37529182434082
    4. 'omin' → logprob: -9.50029182434082
    5. 'omi' → logprob: -12.50029182434082
    6. 'operator' → logprob: -13.62529182434082
    7. 'frac' → logprob: -14.50029182434082
    8. 'ator' → logprob: -14.62529182434082
    9. 'inator' → logprob: -14.87529182434082
    10. 'on' → logprob: -15.00029182434082

Token 1544: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3415839374065399
    2. 'digits' → logprob: -2.4665839672088623
    3. '<|end|>' → logprob: -2.7165839672088623
    4. ')' → logprob: -2.9665839672088623
    5. '```' → logprob: -3.2165839672088623
    6. '               ' → logprob: -4.841583728790283
    7. '            
' → logprob: -5.341583728790283
    8. '[' → logprob: -5.466583728790283
    9. '0' → logprob: -5.716583728790283
    10. '10' → logprob: -5.716583728790283

Token 1545: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.116995669901371
    2. 'frac' → logprob: -2.3669955730438232
    3. '```' → logprob: -5.116995811462402
    4. 'digits' → logprob: -5.741995811462402
    5. ')' → logprob: -6.741995811462402
    6. '
' → logprob: -7.116995811462402
    7. '            
' → logprob: -7.241995811462402
    8. '               ' → logprob: -7.366995811462402
    9. '            ' → logprob: -7.491995811462402
    10. '       ' → logprob: -7.741995811462402

Token 1546: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' (adapté à ' digits') → logprob: -0.00682915560901165
    2. 'frac' → logprob: -5.131829261779785
    3. '           ' → logprob: -7.256829261779785
    4. ' digits' → logprob: -9.006829261779785
    5. 'fr' → logprob: -10.881829261779785
    6. '       ' → logprob: -10.881829261779785
    7. '   ' → logprob: -11.131829261779785
    8. ' frac' → logprob: -12.381829261779785
    9. 'fraction' → logprob: -12.381829261779785
    10. 'if' → logprob: -13.256829261779785

Token 1547: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007973581086844206
    2. '.' → logprob: -7.250797271728516
    3. '=' → logprob: -9.875797271728516
    4. 'append' → logprob: -10.500797271728516
    5. ',' → logprob: -12.250797271728516
    6. 'Append' → logprob: -13.750797271728516
    7. ' =' → logprob: -14.750797271728516
    8. '.push' → logprob: -14.750797271728516
    9. ')' → logprob: -15.125797271728516
    10. '.pop' → logprob: -15.250797271728516

Token 1548: '(str' (ID: 7946)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.20210206508636475
    2. 'digit' → logprob: -1.7021020650863647
    3. '(str' → logprob: -7.577102184295654
    4. ' str' → logprob: -8.952101707458496
    5. ' digit' → logprob: -10.577101707458496
    6. 'chr' → logprob: -11.577101707458496
    7. '(' → logprob: -12.327101707458496
    8. '(d' → logprob: -13.077101707458496
    9. 'digits' → logprob: -14.202101707458496
    10. 'd' → logprob: -14.327101707458496

Token 1549: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0009134899592027068
    2. 'digit' → logprob: -7.000913619995117
    3. '(' → logprob: -13.625913619995117
    4. 'd' → logprob: -14.250913619995117
    5. 'Digit' → logprob: -16.875913619995117
    6. ')' → logprob: -16.875913619995117
    7. ' (' → logprob: -17.125913619995117
    8. ' digit' → logprob: -17.250913619995117
    9. '((' → logprob: -18.125913619995117
    10. '(
' → logprob: -18.500913619995117

Token 1550: 'igit' (ID: 16673)
  Prédit: 'igit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igit' → logprob: -0.3134360611438751
    2. 'digit' → logprob: -1.3134360313415527
    3. ' digit' → logprob: -9.063436508178711
    4. ')' → logprob: -10.563436508178711
    5. '_digit' → logprob: -11.313436508178711
    6. '   ' → logprob: -12.188436508178711
    7. '-digit' → logprob: -12.438436508178711
    8. '(d' → logprob: -13.188436508178711
    9. '[' → logprob: -13.688436508178711
    10. 'git' → logprob: -13.688436508178711

Token 1551: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.12914709746837616
    2. ')' → logprob: -2.1291470527648926
    3. '))
' → logprob: -6.254147052764893
    4. '           ' → logprob: -8.25414752960205
    5. ')
' → logprob: -10.62914752960205
    6. ')))' → logprob: -12.62914752960205
    7. '               ' → logprob: -13.12914752960205
    8. '       ' → logprob: -14.12914752960205
    9. '])' → logprob: -14.62914752960205
    10. '[' → logprob: -14.62914752960205

Token 1552: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003865873673930764
    2. '   ' → logprob: -6.253865718841553
    3. 'frac' → logprob: -6.628865718841553
    4. '       ' → logprob: -7.753865718841553
    5. '```' → logprob: -9.253866195678711
    6. ' frac' → logprob: -10.628866195678711
    7. '               ' → logprob: -11.378866195678711
    8. ' ' → logprob: -11.753866195678711
    9. '          ' → logprob: -11.878866195678711
    10. '
' → logprob: -12.003866195678711

Token 1553: ' frac' (ID: 72308)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frac' (adapté à ' frac') → logprob: -0.0661274716258049
    2. '           ' → logprob: -2.9411275386810303
    3. ' frac' → logprob: -4.566127300262451
    4. '   ' → logprob: -7.566127300262451
    5. '       ' → logprob: -9.19112777709961
    6. 'fraction' → logprob: -9.31612777709961
    7. 'fr' → logprob: -10.44112777709961
    8. '_frac' → logprob: -11.06612777709961
    9. 'fract' → logprob: -11.56612777709961
    10. ' ' → logprob: -11.81612777709961

Token 1554: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.3874264359474182
    2. '=' → logprob: -1.1374263763427734
    3. '%=' → logprob: -7.762426376342773
    4. ' -=' → logprob: -9.512426376342773
    5. '-' → logprob: -9.887426376342773
    6. ' =' → logprob: -12.637426376342773
    7. '*=' → logprob: -14.387426376342773
    8. '.=' → logprob: -15.262426376342773
    9. '=
' → logprob: -15.762426376342773
    10. '%' → logprob: -15.762426376342773

Token 1555: ' digit' (ID: 19181)
  Prédit: 'Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Fraction' → logprob: -7.584239938296378e-06
    2. ' Fraction' → logprob: -12.500007629394531
    3. 'frac' → logprob: -13.125007629394531
    4. 'digit' → logprob: -14.000007629394531
    5. 'Digit' → logprob: -14.625007629394531
    6. 'fraction' → logprob: -15.000007629394531
    7. 'Frac' → logprob: -16.25000762939453
    8. 'int' → logprob: -18.25000762939453
    9. '_fraction' → logprob: -18.37500762939453
    10. '   ' → logprob: -19.37500762939453

Token 1556: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1557: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04955506697297096
    2. '<|end|>' → logprob: -3.4245550632476807
    3. '       ' → logprob: -4.42455530166626
    4. ' if' → logprob: -7.17455530166626
    5. '          ' → logprob: -7.67455530166626
    6. ' ' → logprob: -8.174554824829102
    7. '               ' → logprob: -8.174554824829102
    8. 'if' → logprob: -8.424554824829102
    9. '            
' → logprob: -8.549554824829102
    10. '         ' → logprob: -8.549554824829102

Token 1558: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.051707569509744644
    2. '           ' → logprob: -3.3017075061798096
    3. ' if' → logprob: -4.301707744598389
    4. '       ' → logprob: -11.30170726776123
    5. '```' → logprob: -11.80170726776123
    6. '   ' → logprob: -13.05170726776123
    7. ' ' → logprob: -13.80170726776123
    8. '               ' → logprob: -14.17670726776123
    9. '	if' → logprob: -14.30170726776123
    10. '		' → logprob: -14.30170726776123

Token 1559: ' frac' (ID: 72308)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frac' → logprob: -0.030259495601058006
    2. ' frac' → logprob: -3.530259609222412
    3. ' not' → logprob: -7.780259609222412
    4. 'not' → logprob: -9.655259132385254
    5. ' ' → logprob: -11.530259132385254
    6. 'fraction' → logprob: -12.155259132385254
    7. 'fr' → logprob: -12.530259132385254
    8. '   ' → logprob: -13.530259132385254
    9. 'fra' → logprob: -13.530259132385254
    10. 'digit' → logprob: -13.530259132385254

Token 1560: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.029783006757497787
    2. ' ==' → logprob: -3.529783010482788
    3. '<=' → logprob: -11.404783248901367
    4. '===' → logprob: -11.904783248901367
    5. '.value' → logprob: -12.279783248901367
    6. '=' → logprob: -13.029783248901367
    7. '()==' → logprob: -13.154783248901367
    8. '```' → logprob: -13.279783248901367
    9. '==
' → logprob: -13.904783248901367
    10. ')==' → logprob: -14.154783248901367

Token 1561: ' ' (ID: 220)
  Prédit: 'Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fraction' → logprob: -0.47425976395606995
    2. '0' → logprob: -0.9742597341537476
    3. ' Fraction' → logprob: -8.849259376525879
    4. ' ' → logprob: -10.849259376525879
    5. 'Frac' → logprob: -11.724259376525879
    6. 'Fra' → logprob: -12.349259376525879
    7. 'fraction' → logprob: -12.599259376525879
    8. '   ' → logprob: -13.974259376525879
    9. 'Zero' → logprob: -14.099259376525879
    10. '_fraction' → logprob: -14.724259376525879

Token 1562: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6931792497634888
    2. 'Fraction' → logprob: -0.6931792497634888
    3. ' Fraction' → logprob: -11.0681791305542
    4. ' ' → logprob: -12.0681791305542
    5. 'Fra' → logprob: -12.4431791305542
    6. 'fraction' → logprob: -12.9431791305542
    7. 'Frac' → logprob: -13.0681791305542
    8. 'Zero' → logprob: -15.1931791305542
    9. '_fraction' → logprob: -15.3181791305542
    10. '(' → logprob: -15.4431791305542

Token 1563: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.130204975605011
    2. ':' → logprob: -2.755204916000366
    3. ':
' → logprob: -3.005204916000366
    4. '           ' → logprob: -4.755205154418945
    5. '       ' → logprob: -8.130205154418945
    6. '                   ' → logprob: -11.255205154418945
    7. '              ' → logprob: -11.505205154418945
    8. '.' → logprob: -12.380205154418945
    9. ',' → logprob: -12.505205154418945
    10. '             ' → logprob: -12.505205154418945

Token 1564: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00024299313372466713
    2. '           ' → logprob: -8.875243186950684
    3. ':' → logprob: -9.625243186950684
    4. ':
' → logprob: -10.750243186950684
    5. '              ' → logprob: -11.625243186950684
    6. '       ' → logprob: -12.625243186950684
    7. '                   ' → logprob: -13.000243186950684
    8. '             ' → logprob: -15.000243186950684
    9. '                ' → logprob: -15.500243186950684
    10. '```' → logprob: -16.125242233276367

Token 1565: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011979859322309494
    2. 'break' (adapté à ' break') → logprob: -5.136980056762695
    3. ' break' → logprob: -5.636980056762695
    4. '           ' → logprob: -6.011980056762695
    5. '              ' → logprob: -11.761980056762695
    6. '       ' → logprob: -12.511980056762695
    7. '                   ' → logprob: -12.886980056762695
    8. '	break' → logprob: -12.886980056762695
    9. '             ' → logprob: -13.636980056762695
    10. '   ' → logprob: -14.261980056762695

Token 1566: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04281144589185715
    2. '
' → logprob: -3.292811393737793
    3. '<|end|>' → logprob: -6.167811393737793
    4. '\n' → logprob: -7.167811393737793
    5. '        
' → logprob: -7.667811393737793
    6. 'return' → logprob: -8.417811393737793
    7. '	' → logprob: -8.792811393737793
    8. ')' → logprob: -8.792811393737793
    9. '```' → logprob: -8.917811393737793
    10. '​' → logprob: -9.167811393737793

Token 1567: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011643752455711365
    2. '<|end|>' → logprob: -5.261643886566162
    3. '        
' → logprob: -5.761643886566162
    4. '
' → logprob: -7.386643886566162
    5. '```' → logprob: -8.011643409729004
    6. '  
' → logprob: -8.136643409729004
    7. ')' → logprob: -8.136643409729004
    8. '        ' → logprob: -8.636643409729004
    9. 'return' → logprob: -8.636643409729004
    10. '[' → logprob: -8.761643409729004

Token 1568: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007743862923234701
    2. 'integer' → logprob: -5.882743835449219
    3. 'decimal' → logprob: -6.132743835449219
    4. 'if' → logprob: -7.132743835449219
    5. 'result' → logprob: -7.132743835449219
    6. 'fraction' → logprob: -8.257743835449219
    7. 'int' → logprob: -8.382743835449219
    8. ' integer' → logprob: -8.382743835449219
    9. '```' → logprob: -9.007743835449219
    10. '   ' → logprob: -9.757743835449219

Token 1569: ' strip' (ID: 22967)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7187798619270325
    2. 'integer' → logprob: -1.7187798023223877
    3. 'result' → logprob: -2.3437798023223877
    4. 'decimal' → logprob: -2.3437798023223877
    5. 'int' → logprob: -2.9687798023223877
    6. 'fraction' → logprob: -2.9687798023223877
    7. '       ' → logprob: -3.3437798023223877
    8. 'whole' → logprob: -7.093780040740967
    9. 'frac' → logprob: -7.218780040740967
    10. '#' → logprob: -7.343780040740967

Token 1570: ' trailing' (ID: 57985)
  Prédit: ' trailing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trailing' → logprob: -1.0322883129119873
    2. 'rstrip' → logprob: -1.2822883129119873
    3. '_' → logprob: -1.5322883129119873
    4. 'digits' → logprob: -3.2822883129119873
    5. '_digits' → logprob: -3.6572883129119873
    6. '.rstrip' → logprob: -4.282288551330566
    7. '_tr' → logprob: -4.532288551330566
    8. ' ' → logprob: -4.532288551330566
    9. ' digits' → logprob: -4.532288551330566
    10. 'Trailing' → logprob: -4.657288551330566

Token 1571: ' zeros' (ID: 42274)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10187917947769165
    2. 'zeros' → logprob: -3.351879119873047
    3. ' zeros' → logprob: -3.726879119873047
    4. '"' → logprob: -4.101879119873047
    5. 'digits' → logprob: -4.226879119873047
    6. ''' → logprob: -5.101879119873047
    7. ' ' → logprob: -8.726879119873047
    8. '`' → logprob: -9.101879119873047
    9. ' digits' → logprob: -9.601879119873047
    10. ' '' → logprob: -9.976879119873047

Token 1572: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15695396065711975
    2. 'while' → logprob: -2.031954050064087
    3. ' while' → logprob: -4.281953811645508
    4. '```' → logprob: -8.531953811645508
    5. '	while' → logprob: -9.906953811645508
    6. '   ' → logprob: -10.281953811645508
    7. '``' → logprob: -10.656953811645508
    8. '
' → logprob: -11.031953811645508
    9. 'While' → logprob: -11.406953811645508
    10. ',' → logprob: -11.781953811645508

Token 1573: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2550288140773773
    2. 'while' → logprob: -1.8800288438796997
    3. ' while' → logprob: -2.63002872467041
    4. '   ' → logprob: -8.50502872467041
    5. '```' → logprob: -8.88002872467041
    6. '	while' → logprob: -10.75502872467041
    7. ',' → logprob: -11.00502872467041
    8. 'While' → logprob: -11.75502872467041
    9. 'from' → logprob: -12.00502872467041
    10. 'digits' → logprob: -12.00502872467041

Token 1574: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0078064193949103355
    2. '       ' → logprob: -5.382806301116943
    3. ' while' → logprob: -5.757806301116943
    4. '	while' → logprob: -11.132806777954102
    5. 'While' → logprob: -12.632806777954102
    6. '```' → logprob: -13.007806777954102
    7. '   ' → logprob: -13.257806777954102
    8. 'digits' → logprob: -14.507806777954102
    9. '
' → logprob: -15.382806777954102
    10. '``' → logprob: -15.632806777954102

Token 1575: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.00705184880644083
    2. 'len' → logprob: -5.007051944732666
    3. ' digits' → logprob: -8.007051467895508
    4. ' len' → logprob: -12.757051467895508
    5. '(len' → logprob: -15.382051467895508
    6. 'tokens' → logprob: -16.507051467895508
    7. '```' → logprob: -17.257051467895508
    8. ' ' → logprob: -17.382051467895508
    9. 'digit' → logprob: -18.507051467895508
    10. '_digits' → logprob: -19.007051467895508

Token 1576: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.023270171135663986
    2. ' and' → logprob: -3.7732701301574707
    3. '       ' → logprob: -11.523270606994629
    4. '           ' → logprob: -11.898270606994629
    5. '```' → logprob: -12.523270606994629
    6. '	and' → logprob: -13.398270606994629
    7. '   ' → logprob: -14.523270606994629
    8. '          ' → logprob: -14.648270606994629
    9. '               ' → logprob: -15.023270606994629
    10. '``' → logprob: -15.148270606994629

Token 1577: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -1.0206720617134124e-05
    2. ' digits' → logprob: -11.50001049041748
    3. '   ' → logprob: -20.125009536743164
    4. 'tokens' → logprob: -20.625009536743164
    5. '           ' → logprob: -21.250009536743164
    6. ' ' → logprob: -21.750009536743164
    7. '_digits' → logprob: -22.125009536743164
    8. '               ' → logprob: -22.250009536743164
    9. '```' → logprob: -22.625009536743164
    10. '                   ' → logprob: -23.375009536743164

Token 1578: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0006504826596938074
    2. 'digits' → logprob: -7.375650405883789
    3. '[' → logprob: -11.250650405883789
    4. '==' → logprob: -12.250650405883789
    5. '[
' → logprob: -13.375650405883789
    6. 'and' → logprob: -13.500650405883789
    7. ' digits' → logprob: -13.625650405883789
    8. '```' → logprob: -14.000650405883789
    9. '['' → logprob: -14.375650405883789
    10. '_digits' → logprob: -15.250650405883789

Token 1579: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.23512446880340576
    2. '0' → logprob: -1.7351244688034058
    3. '==' → logprob: -4.360124588012695
    4. '=='' → logprob: -4.985124588012695
    5. ' ==' → logprob: -4.985124588012695
    6. '"' → logprob: -5.735124588012695
    7. '[' → logprob: -6.485124588012695
    8. ''s' → logprob: -8.110124588012695
    9. ' '' → logprob: -8.610124588012695
    10. '='' → logprob: -8.610124588012695

Token 1580: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2319154441356659
    2. ' ==' → logprob: -1.6069154739379883
    3. '=='' → logprob: -5.106915473937988
    4. '=="' → logprob: -8.481915473937988
    5. ']==' → logprob: -9.481915473937988
    6. '=' → logprob: -9.731915473937988
    7. '()==' → logprob: -10.981915473937988
    8. '[' → logprob: -11.356915473937988
    9. '==
' → logprob: -11.481915473937988
    10. ')==' → logprob: -11.731915473937988

Token 1581: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.057061269879341125
    2. ' ==' → logprob: -3.057061195373535
    3. '=='' → logprob: -4.807061195373535
    4. '=="' → logprob: -8.557061195373535
    5. ''' → logprob: -10.682061195373535
    6. '==
' → logprob: -11.057061195373535
    7. '=' → logprob: -11.432061195373535
    8. '[' → logprob: -11.682061195373535
    9. ' =='' → logprob: -12.307061195373535
    10. '0' → logprob: -12.682061195373535

Token 1582: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.023248620331287384
    2. '"' → logprob: -3.7732486724853516
    3. '0' → logprob: -13.398248672485352
    4. ' '' → logprob: -13.523248672485352
    5. '`' → logprob: -15.273248672485352
    6. ' "' → logprob: -18.39824867248535
    7. '‘' → logprob: -18.39824867248535
    8. '   ' → logprob: -18.64824867248535
    9. '('' → logprob: -18.77324867248535
    10. '       ' → logprob: -18.77324867248535

Token 1583: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3132716417312622
    2. '0' → logprob: -1.3132716417312622
    3. '"' → logprob: -11.563271522521973
    4. ' '' → logprob: -15.063271522521973
    5. '   ' → logprob: -17.43827247619629
    6. '`' → logprob: -17.56327247619629
    7. ' ' → logprob: -17.68827247619629
    8. '['' → logprob: -17.81327247619629
    9. ''''' → logprob: -18.06327247619629
    10. '```' → logprob: -18.06327247619629

Token 1584: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.007112686522305012
    2. ':' → logprob: -5.382112503051758
    3. '           ' → logprob: -6.882112503051758
    4. '):
' → logprob: -7.257112503051758
    5. '       ' → logprob: -8.132112503051758
    6. '   ' → logprob: -8.257112503051758
    7. '':
' → logprob: -9.257112503051758
    8. ''):
' → logprob: -10.007112503051758
    9. '():
' → logprob: -11.132112503051758
    10. '.pop' → logprob: -11.382112503051758

Token 1585: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.056184105575084686
    2. ' digits' → logprob: -3.8061840534210205
    3. 'digits' → logprob: -3.9311840534210205
    4. '   ' → logprob: -5.4311842918396
    5. ':
' → logprob: -5.9311842918396
    6. '       ' → logprob: -6.4311842918396
    7. '```' → logprob: -7.0561842918396
    8. '.pop' → logprob: -7.1811842918396
    9. ',' → logprob: -7.4311842918396
    10. '_digits' → logprob: -7.4311842918396

Token 1586: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' (adapté à ' digits') → logprob: -0.006881726905703545
    2. ' digits' → logprob: -5.0068817138671875
    3. '   ' → logprob: -9.131881713867188
    4. '           ' → logprob: -9.881881713867188
    5. '```' → logprob: -12.631881713867188
    6. '               ' → logprob: -13.381881713867188
    7. '``' → logprob: -13.881881713867188
    8. '       ' → logprob: -14.631881713867188
    9. '_digits' → logprob: -15.006881713867188
    10. ' ' → logprob: -15.881881713867188

Token 1587: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.00040898515726439655
    2. 'pop' → logprob: -8.000409126281738
    3. '=' → logprob: -9.750409126281738
    4. '.' → logprob: -11.375409126281738
    5. ' pop' → logprob: -13.375409126281738
    6. '	pop' → logprob: -13.875409126281738
    7. '.Pop' → logprob: -14.625409126281738
    8. '(pop' → logprob: -15.375409126281738
    9. '_pop' → logprob: -15.375409126281738
    10. '.remove' → logprob: -15.875409126281738

Token 1588: '()

' (ID: 5874)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00377964717335999
    2. '<|end|>' → logprob: -6.628779411315918
    3. '```' → logprob: -7.003779411315918
    4. '.' → logprob: -8.128779411315918
    5. '0' → logprob: -8.128779411315918
    6. '        
' → logprob: -8.503779411315918
    7. ')' → logprob: -9.253779411315918
    8. '``' → logprob: -9.378779411315918
    9. '<|end|>' → logprob: -9.378779411315918
    10. ' if' → logprob: -9.753779411315918

Token 1589: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024240586906671524
    2. 'if' → logprob: -4.274240493774414
    3. ' if' → logprob: -4.774240493774414
    4. '```' → logprob: -7.524240493774414
    5. '.' → logprob: -8.149240493774414
    6. '   ' → logprob: -8.399240493774414
    7. ')' → logprob: -9.149240493774414
    8. '
' → logprob: -9.399240493774414
    9. 'result' → logprob: -9.649240493774414
    10. '        
' → logprob: -9.774240493774414

Token 1590: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1756858378648758
    2. '       ' → logprob: -2.1756858825683594
    3. ' if' → logprob: -3.0506858825683594
    4. '```' → logprob: -8.80068588256836
    5. 'result' → logprob: -9.80068588256836
    6. 'return' → logprob: -10.92568588256836
    7. 'decimal' → logprob: -11.05068588256836
    8. '   ' → logprob: -11.17568588256836
    9. '``' → logprob: -13.05068588256836
    10. '.' → logprob: -13.55068588256836

Token 1591: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.668405294418335
    2. ' digits' → logprob: -1.418405294418335
    3. 'digits' → logprob: -1.543405294418335
    4. 'not' → logprob: -3.793405294418335
    5. ' len' → logprob: -5.043405532836914
    6. 'len' → logprob: -5.918405532836914
    7. ' ' → logprob: -10.793405532836914
    8. '   ' → logprob: -11.668405532836914
    9. ' ' → logprob: -12.043405532836914
    10. '.' → logprob: -12.543405532836914

Token 1592: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.01814994215965271
    2. ' digits' → logprob: -4.0181498527526855
    3. '_digits' → logprob: -19.768150329589844
    4. ' ' → logprob: -19.768150329589844
    5. '```' → logprob: -19.768150329589844
    6. '   ' → logprob: -20.393150329589844
    7. '
' → logprob: -20.518150329589844
    8. 'igits' → logprob: -20.893150329589844
    9. 'Digits' → logprob: -20.893150329589844
    10. 'digit' → logprob: -21.143150329589844

Token 1593: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21541717648506165
    2. ':
' → logprob: -1.7154171466827393
    3. '=' → logprob: -4.465417385101318
    4. '.' → logprob: -6.965417385101318
    5. '.append' → logprob: -7.465417385101318
    6. '[' → logprob: -7.965417385101318
    7. ' =' → logprob: -8.84041690826416
    8. '==' → logprob: -9.09041690826416
    9. '+=' → logprob: -9.46541690826416
    10. ':return' → logprob: -10.34041690826416

Token 1594: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16319319605827332
    2. '0' → logprob: -2.4131932258605957
    3. '.' → logprob: -3.5381932258605957
    4. ':
' → logprob: -4.038193225860596
    5. '"' → logprob: -4.788193225860596
    6. ':' → logprob: -5.413193225860596
    7. 'return' → logprob: -7.413193225860596
    8. '".' → logprob: -8.413192749023438
    9. ' return' → logprob: -8.788192749023438
    10. ':return' → logprob: -9.538192749023438

Token 1595: ' #' (ID: 1069)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.8979952335357666
    2. '           ' → logprob: -1.2729952335357666
    3. 'return' → logprob: -2.2729952335357666
    4. '"' → logprob: -2.2729952335357666
    5. ' return' → logprob: -3.2729952335357666
    6. '0' → logprob: -3.2729952335357666
    7. ' digits' → logprob: -3.8979952335357666
    8. 'result' → logprob: -6.1479949951171875
    9. '.' → logprob: -6.2729949951171875
    10. '".' → logprob: -6.8979949951171875

Token 1596: ' fractional' (ID: 136350)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7630845904350281
    2. '           ' → logprob: -1.1380846500396729
    3. ' return' → logprob: -1.6380846500396729
    4. '       ' → logprob: -4.763084411621094
    5. 'result' → logprob: -5.513084411621094
    6. '"' → logprob: -6.013084411621094
    7. '0' → logprob: -6.763084411621094
    8. '.' → logprob: -6.888084411621094
    9. ' result' → logprob: -7.388084411621094
    10. '   ' → logprob: -7.888084411621094

Token 1597: ' part' (ID: 997)
  Prédit: '_part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.07564225792884827
    2. ' part' → logprob: -3.2006423473358154
    3. 'part' → logprob: -3.4506423473358154
    4. '"' → logprob: -9.325642585754395
    5. ' =' → logprob: -9.450642585754395
    6. 'Part' → logprob: -9.700642585754395
    7. '=' → logprob: -9.950642585754395
    8. ' ' → logprob: -10.700642585754395
    9. '	part' → logprob: -10.950642585754395
    10. ' _' → logprob: -11.075642585754395

Token 1598: ' zero' (ID: 12421)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4271412491798401
    2. '==' → logprob: -1.4271411895751953
    3. ' ==' → logprob: -2.3021411895751953
    4. ' =' → logprob: -4.927141189575195
    5. ':' → logprob: -8.302141189575195
    6. '=="' → logprob: -11.302141189575195
    7. ')' → logprob: -11.427141189575195
    8. '"' → logprob: -11.552141189575195
    9. 'is' → logprob: -11.552141189575195
    10. ':
' → logprob: -11.552141189575195

Token 1599: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5988907217979431
    2. ':
' → logprob: -0.8488907217979431
    3. '0' → logprob: -4.098890781402588
    4. ':' → logprob: -5.473890781402588
    5. 'return' → logprob: -6.973890781402588
    6. ':return' → logprob: -7.848890781402588
    7. '       ' → logprob: -8.97389030456543
    8. ' return' → logprob: -8.97389030456543
    9. '.' → logprob: -9.34889030456543
    10. '"' → logprob: -10.09889030456543

Token 1600: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12831218540668488
    2. 'return' → logprob: -2.878312110900879
    3. ' return' → logprob: -2.878312110900879
    4. '       ' → logprob: -6.128312110900879
    5. '.' → logprob: -6.378312110900879
    6. ':
' → logprob: -6.503312110900879
    7. '0' → logprob: -7.253312110900879
    8. ':' → logprob: -7.378312110900879
    9. ':return' → logprob: -7.503312110900879
    10. '   ' → logprob: -8.878312110900879

Token 1601: ' frac' (ID: 72308)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.28701382875442505
    2. ' return' → logprob: -2.1620137691497803
    3. '           ' → logprob: -2.6620137691497803
    4. '"' → logprob: -3.2870137691497803
    5. '.' → logprob: -4.912014007568359
    6. '       ' → logprob: -5.162014007568359
    7. 'result' → logprob: -5.287014007568359
    8. '".' → logprob: -5.537014007568359
    9. '0' → logprob: -5.912014007568359
    10. ' "' → logprob: -7.537014007568359

Token 1602: '_str' (ID: 6182)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.521742582321167
    2. '"' → logprob: -2.146742582321167
    3. ' =' → logprob: -2.396742582321167
    4. '_part' → logprob: -2.396742582321167
    5. '_str' → logprob: -3.146742582321167
    6. '_val' → logprob: -3.271742582321167
    7. '"_' → logprob: -5.021742820739746
    8. '_fraction' → logprob: -5.021742820739746
    9. 'raction' → logprob: -5.646742820739746
    10. 'part' → logprob: -5.896742820739746

Token 1603: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0015024791937321424
    2. ' =' → logprob: -6.501502513885498
    3. '="' → logprob: -16.751502990722656
    4. '='' → logprob: -16.876502990722656
    5. '+=' → logprob: -17.376502990722656
    6. '.=' → logprob: -18.626502990722656
    7. ' ='' → logprob: -18.626502990722656
    8. ' ="' → logprob: -18.876502990722656
    9. '"' → logprob: -19.251502990722656
    10. '```' → logprob: -20.001502990722656

Token 1604: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0048959581181406975
    2. '0' → logprob: -5.50489616394043
    3. ''' → logprob: -7.12989616394043
    4. ' "' → logprob: -11.50489616394043
    5. ' ' → logprob: -12.62989616394043
    6. '`' → logprob: -12.87989616394043
    7. '   ' → logprob: -15.50489616394043
    8. '       ' → logprob: -16.37989616394043
    9. '```' → logprob: -16.50489616394043
    10. ' '' → logprob: -16.75489616394043

Token 1605: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.372294698550832e-06
    2. '"' → logprob: -11.625009536743164
    3. ' ' → logprob: -14.875009536743164
    4. '.' → logprob: -17.250009536743164
    5. ''' → logprob: -17.500009536743164
    6. '""' → logprob: -18.875009536743164
    7. '\"' → logprob: -19.375009536743164
    8. '`' → logprob: -19.500009536743164
    9. '   ' → logprob: -19.625009536743164
    10. '".' → logprob: -19.750009536743164

Token 1606: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.20150260627269745
    2. '"
' → logprob: -1.7015025615692139
    3. '"
' → logprob: -9.826502799987793
    4. '"`
' → logprob: -10.826502799987793
    5. '"`' → logprob: -12.076502799987793
    6. '")' → logprob: -13.076502799987793
    7. '"}' → logprob: -13.576502799987793
    8. '}"
' → logprob: -13.701502799987793
    9. ''"
' → logprob: -13.701502799987793
    10. '}"' → logprob: -14.451502799987793

Token 1607: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09687957167625427
    2. 'else' → logprob: -2.471879482269287
    3. ' else' → logprob: -4.971879482269287
    4. 'return' → logprob: -7.346879482269287
    5. '   ' → logprob: -9.221879959106445
    6. ')' → logprob: -9.346879959106445
    7. '.' → logprob: -10.221879959106445
    8. '           ' → logprob: -10.721879959106445
    9. '
' → logprob: -10.846879959106445
    10. '```' → logprob: -10.846879959106445

Token 1608: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.512475311756134
    2. '       ' → logprob: -1.2624752521514893
    3. ' else' → logprob: -2.1374752521514893
    4. '   ' → logprob: -9.88747501373291
    5. '	else' → logprob: -11.51247501373291
    6. ')' → logprob: -12.26247501373291
    7. '           ' → logprob: -12.63747501373291
    8. ':' → logprob: -12.76247501373291
    9. '<|end|>' → logprob: -13.01247501373291
    10. '```' → logprob: -13.13747501373291

Token 1609: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38127705454826355
    2. ':' → logprob: -1.506277084350586
    3. ':
' → logprob: -2.381277084350586
    4. '       ' → logprob: -7.381277084350586
    5. '.' → logprob: -7.631277084350586
    6. '"' → logprob: -7.881277084350586
    7. '            ' → logprob: -8.256277084350586
    8. '          ' → logprob: -8.631277084350586
    9. '[' → logprob: -9.131277084350586
    10. '               ' → logprob: -9.506277084350586

Token 1610: '           ' (ID: 352)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frac' → logprob: -0.17365030944347382
    2. '           ' → logprob: -2.2986502647399902
    3. '       ' → logprob: -3.2986502647399902
    4. ' frac' → logprob: -4.54865026473999
    5. '"' → logprob: -5.04865026473999
    6. '```' → logprob: -7.17365026473999
    7. '''.' → logprob: -7.29865026473999
    8. ''' → logprob: -7.67365026473999
    9. '"."' → logprob: -8.048650741577148
    10. '   ' → logprob: -8.048650741577148

Token 1611: ' frac' (ID: 72308)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frac' (adapté à ' frac') → logprob: -0.004990863148123026
    2. ' frac' → logprob: -6.129991054534912
    3. '       ' → logprob: -6.754991054534912
    4. '           ' → logprob: -7.629991054534912
    5. ''.' → logprob: -8.629990577697754
    6. '''.' → logprob: -8.754990577697754
    7. 'fr' → logprob: -8.754990577697754
    8. '"."' → logprob: -9.004990577697754
    9. '   ' → logprob: -9.504990577697754
    10. 'fract' → logprob: -9.504990577697754

Token 1612: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -3.1782583391759545e-05
    2. '_' → logprob: -10.625031471252441
    3. '_string' → logprob: -12.375031471252441
    4. ' _' → logprob: -13.750031471252441
    5. '"_' → logprob: -14.375031471252441
    6. '_STR' → logprob: -15.500031471252441
    7. 'Str' → logprob: -15.625031471252441
    8. '_s' → logprob: -15.750031471252441
    9. '```' → logprob: -15.875031471252441
    10. '`' → logprob: -16.375032424926758

Token 1613: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0024826733861118555
    2. ' =' → logprob: -6.002482891082764
    3. '+=' → logprob: -12.002482414245605
    4. '.=' → logprob: -14.877482414245605
    5. ' +=' → logprob: -15.627482414245605
    6. '='' → logprob: -16.252483367919922
    7. '   ' → logprob: -16.252483367919922
    8. '="' → logprob: -16.252483367919922
    9. '"' → logprob: -18.002483367919922
    10. '       ' → logprob: -18.127483367919922

Token 1614: ' "".' (ID: 94734)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.45036327838897705
    2. '''.' → logprob: -1.200363278388977
    3. ' "".' → logprob: -3.2003631591796875
    4. ' ''.' → logprob: -3.9503631591796875
    5. '""' → logprob: -6.5753631591796875
    6. '''' → logprob: -9.075363159179688
    7. ''' → logprob: -12.825363159179688
    8. '   ' → logprob: -12.950363159179688
    9. ' ' → logprob: -13.325363159179688
    10. '".' → logprob: -13.575363159179688

Token 1615: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.0280383548888494e-06
    2. '''.' → logprob: -14.750000953674316
    3. '```' → logprob: -15.125000953674316
    4. '"' → logprob: -16.500001907348633
    5. ' join' → logprob: -16.500001907348633
    6. '.join' → logprob: -17.625001907348633
    7. '".' → logprob: -17.750001907348633
    8. '``' → logprob: -17.875001907348633
    9. 'j' → logprob: -18.125001907348633
    10. 'jo' → logprob: -18.750001907348633

Token 1616: '(d' (ID: 2572)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.029808469116687775
    2. '(d' → logprob: -3.529808521270752
    3. '[d' → logprob: -10.154808044433594
    4. ' digits' → logprob: -11.279808044433594
    5. 'd' → logprob: -12.279808044433594
    6. '[' → logprob: -13.529808044433594
    7. 'digit' → logprob: -15.779808044433594
    8. '	d' → logprob: -16.029808044433594
    9. '_digits' → logprob: -16.279808044433594
    10. ')' → logprob: -16.404808044433594

Token 1617: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.00011856284982059151
    2. 'digits' → logprob: -9.375118255615234
    3. '[d' → logprob: -11.875118255615234
    4. '[' → logprob: -12.000118255615234
    5. '[i' → logprob: -12.125118255615234
    6. '(d' → logprob: -12.125118255615234
    7. 'ig' → logprob: -12.125118255615234
    8. 'igts' → logprob: -13.625118255615234
    9. ' digits' → logprob: -14.125118255615234
    10. 'i' → logprob: -14.375118255615234

Token 1618: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036778708454221487
    2. '")' → logprob: -6.003677845001221
    3. '       ' → logprob: -6.878677845001221
    4. ')
' → logprob: -8.878678321838379
    5. ')"' → logprob: -11.253678321838379
    6. '"' → logprob: -12.003678321838379
    7. ')")' → logprob: -12.128678321838379
    8. '   ' → logprob: -13.628678321838379
    9. ')return' → logprob: -14.003678321838379
    10. '')' → logprob: -14.003678321838379

Token 1619: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006903744302690029
    2. 'return' → logprob: -5.256903648376465
    3. ' return' → logprob: -7.006903648376465
    4. '<|end|>' → logprob: -7.756903648376465
    5. '```' → logprob: -8.631903648376465
    6. ')' → logprob: -10.256903648376465
    7. '.' → logprob: -10.756903648376465
    8. ')return' → logprob: -11.006903648376465
    9. '	return' → logprob: -11.131903648376465
    10. '   ' → logprob: -11.131903648376465

Token 1620: ' sign' (ID: 2232)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3927653431892395
    2. 'return' → logprob: -1.1427652835845947
    3. ' return' → logprob: -5.142765522003174
    4. '```' → logprob: -10.392765045166016
    5. '	return' → logprob: -12.892765045166016
    6. ':return' → logprob: -14.392765045166016
    7. '           ' → logprob: -15.017765045166016
    8. '   ' → logprob: -15.017765045166016
    9. '{return' → logprob: -15.392765045166016
    10. '        
' → logprob: -15.517765045166016

Token 1621: '_str' (ID: 6182)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.40648671984672546
    2. ' =' → logprob: -1.5314867496490479
    3. '_str' → logprob: -2.406486749649048
    4. '_val' → logprob: -3.906486749649048
    5. '_' → logprob: -5.281486511230469
    6. 'if' → logprob: -6.656486511230469
    7. ' if' → logprob: -8.406486511230469
    8. ')' → logprob: -9.156486511230469
    9. 'str' → logprob: -9.406486511230469
    10. '_prefix' → logprob: -9.656486511230469

Token 1622: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014164102263748646
    2. ' =' → logprob: -4.264163970947266
    3. '="-' → logprob: -15.514163970947266
    4. '       ' → logprob: -16.264163970947266
    5. '="' → logprob: -16.514163970947266
    6. '   ' → logprob: -16.514163970947266
    7. '+=' → logprob: -16.639163970947266
    8. '=""' → logprob: -16.889163970947266
    9. 'if' → logprob: -17.514163970947266
    10. '='' → logprob: -17.639163970947266

Token 1623: ' "-"' (ID: 56313)
  Prédit: '"-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"-' → logprob: -0.05967390164732933
    2. ''-' → logprob: -3.05967378616333
    3. '""' → logprob: -4.55967378616333
    4. ' "-"' → logprob: -7.93467378616333
    5. '''' → logprob: -8.809674263000488
    6. '-' → logprob: -10.684674263000488
    7. '("-' → logprob: -11.184674263000488
    8. '"+"' → logprob: -11.934674263000488
    9. ' '-'' → logprob: -12.934674263000488
    10. '“-' → logprob: -13.434674263000488

Token 1624: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.693359375
    2. ' if' → logprob: -0.693359375
    3. '<|end|>' → logprob: -8.818359375
    4. '       ' → logprob: -9.818359375
    5. 'If' → logprob: -13.318359375
    6. '           ' → logprob: -13.693359375
    7. '        ' → logprob: -13.818359375
    8. '+' → logprob: -13.943359375
    9. '[' → logprob: -13.943359375
    10. '```' → logprob: -14.068359375

Token 1625: ' val' (ID: 1459)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6804296970367432
    2. 'sign' → logprob: -0.8054296970367432
    3. 'val' → logprob: -3.305429697036743
    4. 'total' → logprob: -5.430429458618164
    5. ' self' → logprob: -5.555429458618164
    6. '(sign' → logprob: -7.180429458618164
    7. ' val' → logprob: -7.680429458618164
    8. ' sign' → logprob: -7.930429458618164
    9. ' total' → logprob: -9.430429458618164
    10. '(self' → logprob: -9.680429458618164

Token 1626: '_fraction' (ID: 151287)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.29272815585136414
    2. '_fraction' → logprob: -1.9177281856536865
    3. '_val' → logprob: -2.2927281856536865
    4. '_frac' → logprob: -5.542727947235107
    5. 'frac' → logprob: -7.042727947235107
    6. 'fraction' → logprob: -7.167727947235107
    7. '<' → logprob: -9.167728424072266
    8. ' val' → logprob: -9.417728424072266
    9. '(val' → logprob: -11.292728424072266
    10. '_f' → logprob: -11.417728424072266

Token 1627: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.028934955596923828
    2. ' <' → logprob: -3.653934955596924
    3. '<n' → logprob: -6.528934955596924
    4. '.n' → logprob: -7.028934955596924
    5. '<num' → logprob: -8.528934478759766
    6. '<N' → logprob: -11.153934478759766
    7. '   ' → logprob: -11.278934478759766
    8. 'numer' → logprob: -11.403934478759766
    9. 'umerator' → logprob: -11.403934478759766
    10. '.' → logprob: -11.653934478759766

Token 1628: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010366239439463243
    2. 'Fraction' → logprob: -9.250103950500488
    3. ' ' → logprob: -11.875103950500488
    4. '=' → logprob: -16.375102996826172
    5. ' Fraction' → logprob: -16.500102996826172
    6. '(' → logprob: -16.625102996826172
    7. 'Zero' → logprob: -16.875102996826172
    8. '   ' → logprob: -17.250102996826172
    9. '۰' → logprob: -17.250102996826172
    10. 'zero' → logprob: -17.250102996826172

Token 1629: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3544423381972592e-05
    2. 'Fraction' → logprob: -11.37501335144043
    3. ' ' → logprob: -13.12501335144043
    4. '۰' → logprob: -17.87501335144043
    5. '=' → logprob: -18.75001335144043
    6. 'Zero' → logprob: -19.37501335144043
    7. '(' → logprob: -19.50001335144043
    8. '>' → logprob: -19.62501335144043
    9. '"' → logprob: -19.75001335144043
    10. '   ' → logprob: -19.75001335144043

Token 1630: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.13135695457458496
    2. ' else' → logprob: -2.131356954574585
    3. '       ' → logprob: -6.131357192993164
    4. '+' → logprob: -6.756357192993164
    5. '<|end|>' → logprob: -7.006357192993164
    6. '-' → logprob: -9.881357192993164
    7. '           ' → logprob: -10.756357192993164
    8. '   ' → logprob: -11.006357192993164
    9. ')' → logprob: -11.256357192993164
    10. '...' → logprob: -11.756357192993164

Token 1631: ' ""

' (ID: 86057)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.00033713103039190173
    2. '"' → logprob: -8.250337600708008
    3. '''' → logprob: -9.500337600708008
    4. ' ""' → logprob: -14.125337600708008
    5. '"""' → logprob: -15.875337600708008
    6. ''' → logprob: -16.250337600708008
    7. '+' → logprob: -17.625337600708008
    8. '=""' → logprob: -17.750337600708008
    9. '("")' → logprob: -17.750337600708008
    10. '""""' → logprob: -19.125337600708008

Token 1632: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.021271072328090668
    2. '       ' → logprob: -4.271271228790283
    3. ' return' → logprob: -5.021271228790283
    4. '```' → logprob: -7.646271228790283
    5. '``' → logprob: -12.646270751953125
    6. '`' → logprob: -12.771270751953125
    7. '{return' → logprob: -13.521270751953125
    8. '   ' → logprob: -14.521270751953125
    9. '	return' → logprob: -15.896270751953125
    10. ':return' → logprob: -16.021270751953125

Token 1633: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01201237365603447
    2. '       ' → logprob: -4.512012481689453
    3. ' return' → logprob: -7.012012481689453
    4. 'result' → logprob: -10.512012481689453
    5. 'integer' → logprob: -10.512012481689453
    6. '   ' → logprob: -12.637012481689453
    7. '```' → logprob: -12.762012481689453
    8. 'int' → logprob: -13.762012481689453
    9. 'decimal' → logprob: -15.012012481689453
    10. 'final' → logprob: -15.262012481689453

Token 1634: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.031695738434791565
    2. ' f' → logprob: -3.53169584274292
    3. 'sign' → logprob: -6.28169584274292
    4. ' sign' → logprob: -9.531695365905762
    5. '       ' → logprob: -14.781695365905762
    6. '(f' → logprob: -16.156696319580078
    7. '   ' → logprob: -17.031696319580078
    8. '(sign' → logprob: -17.156696319580078
    9. '           ' → logprob: -17.531696319580078
    10. '	f' → logprob: -18.156696319580078

Token 1635: '"{' (ID: 27510)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.6224063038825989
    2. '{' → logprob: -0.8724063038825989
    3. 'sign' → logprob: -3.122406244277954
    4. '"{' → logprob: -6.622406482696533
    5. '{}' → logprob: -11.997406005859375
    6. '(sign' → logprob: -12.372406005859375
    7. ' f' → logprob: -12.622406005859375
    8. '"' → logprob: -12.872406005859375
    9. '(f' → logprob: -13.247406005859375
    10. '   ' → logprob: -13.497406005859375

Token 1636: 'sign' (ID: 14677)
  Prédit: 'sign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: 0.0
    2. ' sign' → logprob: -18.0
    3. '{' → logprob: -20.75
    4. '(sign' → logprob: -21.375
    5. '-sign' → logprob: -23.125
    6. '   ' → logprob: -23.25
    7. 'sig' → logprob: -23.375
    8. '	sign' → logprob: -24.125
    9. ' ' → logprob: -24.875
    10. '           ' → logprob: -25.375

Token 1637: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -1.4974866644479334e-05
    2. 'str' → logprob: -11.875015258789062
    3. '_val' → logprob: -12.125015258789062
    4. '{' → logprob: -13.250015258789062
    5. 'Str' → logprob: -14.625015258789062
    6. 'val' → logprob: -15.375015258789062
    7. '_sign' → logprob: -16.750015258789062
    8. 'sign' → logprob: -17.125015258789062
    9. '{}' → logprob: -17.250015258789062
    10. '}' → logprob: -18.125015258789062

Token 1638: '}{' (ID: 29124)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.0033706773538142443
    2. 'int' → logprob: -5.878370761871338
    3. 'integer' → logprob: -7.628370761871338
    4. 'val' → logprob: -10.37837028503418
    5. '}{' → logprob: -10.75337028503418
    6. 'abs' → logprob: -10.75337028503418
    7. '"{' → logprob: -13.75337028503418
    8. 'str' → logprob: -13.75337028503418
    9. '(int' → logprob: -14.25337028503418
    10. '   ' → logprob: -14.62837028503418

Token 1639: 'integer' (ID: 27378)
  Prédit: 'integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'integer' → logprob: -0.27039453387260437
    2. 'abs' → logprob: -2.1453945636749268
    3. 'numer' → logprob: -2.2703945636749268
    4. 'val' → logprob: -4.770394325256348
    5. 'int' → logprob: -5.145394325256348
    6. 'str' → logprob: -7.020394325256348
    7. '(integer' → logprob: -7.020394325256348
    8. '(abs' → logprob: -8.270394325256348
    9. ' integer' → logprob: -9.895394325256348
    10. 'numeric' → logprob: -10.020394325256348

Token 1640: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -4.036524842376821e-05
    2. 'part' → logprob: -10.750040054321289
    3. '_val' → logprob: -11.375040054321289
    4. '}_' → logprob: -12.625040054321289
    5. 'Part' → logprob: -13.000040054321289
    6. '}' → logprob: -13.500040054321289
    7. '}_{' → logprob: -15.875040054321289
    8. '_value' → logprob: -16.37504005432129
    9. '_fraction' → logprob: -17.12504005432129
    10. ' part' → logprob: -17.25004005432129

Token 1641: '}.{' (ID: 168204)
  Prédit: '}.{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}.{' → logprob: -0.2325524091720581
    2. '.{' → logprob: -1.857552409172058
    3. '{' → logprob: -2.9825525283813477
    4. '.' → logprob: -7.857552528381348
    5. '}{' → logprob: -8.607552528381348
    6. '"."' → logprob: -10.482552528381348
    7. 'f' → logprob: -10.607552528381348
    8. '"{' → logprob: -10.732552528381348
    9. '       ' → logprob: -10.732552528381348
    10. '".' → logprob: -10.857552528381348

Token 1642: 'frac' (ID: 63757)
  Prédit: 'frac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frac' → logprob: -0.004206259269267321
    2. '{' → logprob: -5.50420618057251
    3. 'f' → logprob: -9.004206657409668
    4. 'frag' → logprob: -12.379206657409668
    5. ' frac' → logprob: -15.129206657409668
    6. '}{' → logprob: -15.879206657409668
    7. '"{' → logprob: -16.50420570373535
    8. '   ' → logprob: -16.62920570373535
    9. '_frac' → logprob: -17.25420570373535
    10. ''{' → logprob: -17.37920570373535

Token 1643: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.00014239625306800008
    2. 'str' → logprob: -8.875142097473145
    3. 'Str' → logprob: -13.125142097473145
    4. 'r' → logprob: -16.25014305114746
    5. '```' → logprob: -16.25014305114746
    6. 'fra' → logprob: -16.75014305114746
    7. 'frac' → logprob: -17.00014305114746
    8. 's' → logprob: -17.12514305114746
    9. 'f' → logprob: -17.12514305114746
    10. '`' → logprob: -17.50014305114746

Token 1644: '}"

' (ID: 103433)
  Prédit: '}"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}"' → logprob: -0.00021331508469302207
    2. '"' → logprob: -8.500213623046875
    3. ')"' → logprob: -12.125213623046875
    4. '"}' → logprob: -13.250213623046875
    5. '}' → logprob: -13.625213623046875
    6. '}"
' → logprob: -13.750213623046875
    7. '}")' → logprob: -16.250213623046875
    8. '}}"' → logprob: -16.375213623046875
    9. '```' → logprob: -16.375213623046875
    10. ']"' → logprob: -17.000213623046875

Token 1645: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1646: ' main' (ID: 2758)
  Prédit: ' test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' test' → logprob: -0.3289453685283661
    2. ' parse' → logprob: -1.9539453983306885
    3. ' main' → logprob: -2.2039453983306885
    4. ' convert' → logprob: -4.453945159912109
    5. ' decode' → logprob: -5.078945159912109
    6. ' K' → logprob: -6.078945159912109
    7. ' __' → logprob: -6.953945159912109
    8. ' _' → logprob: -7.328945159912109
    9. ' calculate' → logprob: -7.453945159912109
    10. ' create' → logprob: -7.453945159912109

Token 1647: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00978182628750801
    2. '():
' → logprob: -4.634781837463379
    3. '()' → logprob: -10.759781837463379
    4. '():
' → logprob: -12.884781837463379
    5. ' ():' → logprob: -13.884781837463379
    6. '():

' → logprob: -14.634781837463379
    7. ':' → logprob: -15.884781837463379
    8. '(' → logprob: -16.009780883789062
    9. '()>' → logprob: -16.009780883789062
    10. 'def' → logprob: -16.759780883789062

Token 1648: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17666059732437134
    2. 'import' → logprob: -1.9266605377197266
    3. 'hex' → logprob: -5.176660537719727
    4. '```' → logprob: -5.176660537719727
    5. ' import' → logprob: -6.301660537719727
    6. 'def' → logprob: -6.551660537719727
    7. 'input' → logprob: -7.051660537719727
    8. 'if' → logprob: -8.301660537719727
    9. ' hex' → logprob: -8.801660537719727
    10. 'code' → logprob: -9.676660537719727

Token 1649: ' import' (ID: 1588)
  Prédit: 'hex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hex' → logprob: -1.2063544988632202
    2. 'inputs' → logprob: -1.3313544988632202
    3. 'test' → logprob: -2.2063546180725098
    4. 'import' (adapté à ' import') → logprob: -2.4563546180725098
    5. 'tests' → logprob: -2.8313546180725098
    6. '   ' → logprob: -2.8313546180725098
    7. 'samples' → logprob: -3.5813546180725098
    8. 'input' → logprob: -3.5813546180725098
    9. 'for' → logprob: -4.33135461807251
    10. 's' → logprob: -4.45635461807251

Token 1650: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -1.8624639324116288e-06
    2. ' sys' → logprob: -13.250001907348633
    3. 'math' → logprob: -17.875001907348633
    4. 'io' → logprob: -18.875001907348633
    5. 'json' → logprob: -18.875001907348633
    6. '=sys' → logprob: -19.000001907348633
    7. 'decimal' → logprob: -19.500001907348633
    8. '```' → logprob: -19.625001907348633
    9. '(sys' → logprob: -20.250001907348633
    10. 'random' → logprob: -20.625001907348633

Token 1651: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1407785564661026
    2. 'for' → logprob: -2.1407785415649414
    3. 'if' → logprob: -5.390778541564941
    4. '
' → logprob: -6.015778541564941
    5. ' for' → logprob: -6.390778541564941
    6. 'line' → logprob: -6.640778541564941
    7. 'input' → logprob: -6.890778541564941
    8. 'lines' → logprob: -7.015778541564941
    9. 'args' → logprob: -7.515778541564941
    10. '```' → logprob: -7.765778541564941

Token 1652: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2322738617658615
    2. 'for' → logprob: -1.732273817062378
    3. 'line' → logprob: -3.732273817062378
    4. 'lines' → logprob: -6.107274055480957
    5. 'input' → logprob: -6.357274055480957
    6. 'if' → logprob: -7.107274055480957
    7. ' for' → logprob: -7.607274055480957
    8. 'code' → logprob: -7.857274055480957
    9. 'hex' → logprob: -7.857274055480957
    10. '```' → logprob: -8.482274055480957

Token 1653: ' class' (ID: 744)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.32133209705352783
    2. '   ' → logprob: -2.0713319778442383
    3. 'line' → logprob: -2.3213319778442383
    4. 'hex' → logprob: -3.3213319778442383
    5. 'lines' → logprob: -5.321331977844238
    6. 'if' → logprob: -5.446331977844238
    7. 'args' → logprob: -5.571331977844238
    8. 'input' → logprob: -7.196331977844238
    9. ' for' → logprob: -7.696331977844238
    10. 'data' → logprob: -8.696331977844238

Token 1654: ' Input' (ID: 10090)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.4231732487678528
    2. 'K' → logprob: -1.798173189163208
    3. ' Bit' → logprob: -2.298173189163208
    4. 'Bit' → logprob: -4.423173427581787
    5. 'int' → logprob: -4.548173427581787
    6. ' Component' → logprob: -4.798173427581787
    7. ' argparse' → logprob: -5.173173427581787
    8. 'Component' → logprob: -5.548173427581787
    9. '   ' → logprob: -5.923173427581787
    10. ' int' → logprob: -6.048173427581787

Token 1655: 'Reader' (ID: 7171)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.47954046726226807
    2. 'Reader' → logprob: -1.854540467262268
    3. ':' → logprob: -2.7295403480529785
    4. '():
' → logprob: -2.8545403480529785
    5. 'Line' → logprob: -3.6045403480529785
    6. 'Tokenizer' → logprob: -4.2295403480529785
    7. 'Handler' → logprob: -4.3545403480529785
    8. 'Iterator' → logprob: -5.2295403480529785
    9. '():' → logprob: -5.2295403480529785
    10. '```' → logprob: -5.4795403480529785

Token 1656: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.49545788764953613
    2. ':' → logprob: -0.9954578876495361
    3. '(' → logprob: -4.870457649230957
    4. '(object' → logprob: -4.995457649230957
    5. '():
' → logprob: -6.120457649230957
    6. '   ' → logprob: -6.120457649230957
    7. '():' → logprob: -6.870457649230957
    8. '```' → logprob: -7.870457649230957
    9. ':
' → logprob: -8.495457649230957
    10. '<|end|>' → logprob: -9.120457649230957

Token 1657: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3924347162246704
    2. '   ' → logprob: -1.1424347162246704
    3. 'def' → logprob: -5.892434597015381
    4. '```' → logprob: -6.892434597015381
    5. '    ' → logprob: -7.767434597015381
    6. ' def' → logprob: -7.892434597015381
    7. '	   ' → logprob: -8.392435073852539
    8. '    
' → logprob: -8.517435073852539
    9. ' ' → logprob: -9.392435073852539
    10. '        
' → logprob: -9.517435073852539

Token 1658: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.38953155279159546
    2. ' def' → logprob: -1.1395316123962402
    3. '   ' → logprob: -6.01453161239624
    4. '	def' → logprob: -8.639531135559082
    5. '       ' → logprob: -11.139531135559082
    6. '
' → logprob: -11.514531135559082
    7. '```' → logprob: -12.389531135559082
    8. '__' → logprob: -12.514531135559082
    9. ' ' → logprob: -13.639531135559082
    10. '    
' → logprob: -14.514531135559082

Token 1659: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0015836624661460519
    2. 'init' → logprob: -7.376583576202393
    3. ' __' → logprob: -8.12658405303955
    4. 'iter' → logprob: -8.37658405303955
    5. '```' → logprob: -8.62658405303955
    6. 'read' → logprob: -9.50158405303955
    7. 'staticmethod' → logprob: -9.50158405303955
    8. '___' → logprob: -9.75158405303955
    9. 'next' → logprob: -10.87658405303955
    10. 'def' → logprob: -12.00158405303955

Token 1660: 'init' (ID: 3287)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.4774373769760132
    2. 'init' → logprob: -0.9774373769760132
    3. 'it' → logprob: -6.727437496185303
    4. 'next' → logprob: -7.102437496185303
    5. 'int' → logprob: -7.852437496185303
    6. 'nit' → logprob: -7.852437496185303
    7. 'stdin' → logprob: -8.977437019348145
    8. '```' → logprob: -9.602437019348145
    9. 'ittest' → logprob: -10.102437019348145
    10. '       ' → logprob: -10.352437019348145

Token 1661: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0022841955069452524
    2. '__(' → logprob: -6.127284049987793
    3. '(' → logprob: -10.127284049987793
    4. ' (' → logprob: -10.252284049987793
    5. 'self' → logprob: -12.127284049987793
    6. '=self' → logprob: -12.627284049987793
    7. '```' → logprob: -13.002284049987793
    8. '       ' → logprob: -13.252284049987793
    9. ',' → logprob: -13.502284049987793
    10. '=' → logprob: -13.502284049987793

Token 1662: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.85366350505501e-05
    2. '):
' → logprob: -10.75009822845459
    3. ')' → logprob: -10.87509822845459
    4. '   ' → logprob: -11.12509822845459
    5. ' self' → logprob: -11.12509822845459
    6. '       ' → logprob: -11.37509822845459
    7. '           ' → logprob: -11.87509822845459
    8. '):' → logprob: -12.62509822845459
    9. '
' → logprob: -12.87509822845459
    10. 'sys' → logprob: -12.87509822845459

Token 1663: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12488808482885361
    2. '):' → logprob: -3.1248881816864014
    3. '):
' → logprob: -3.2498881816864014
    4. 'self' → logprob: -3.4998881816864014
    5. '(self' → logprob: -5.999887943267822
    6. ',self' → logprob: -6.624887943267822
    7. '       ' → logprob: -8.12488842010498
    8. '   ' → logprob: -9.12488842010498
    9. '```' → logprob: -9.87488842010498
    10. ' self' → logprob: -10.12488842010498

Token 1664: '           ' (ID: 352)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004434035625308752
    2. '           ' → logprob: -5.504434108734131
    3. '   ' → logprob: -9.629433631896973
    4. '```' → logprob: -9.629433631896973
    5. '
' → logprob: -9.754433631896973
    6. '       ' → logprob: -10.129433631896973
    7. ' self' → logprob: -10.504433631896973
    8. '               ' → logprob: -10.879433631896973
    9. '                   ' → logprob: -11.254433631896973
    10. '(self' → logprob: -11.504433631896973

Token 1665: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.003946605604141951
    2. '
' → logprob: -6.003946781158447
    3. 'def' → logprob: -7.253946781158447
    4. 'lines' → logprob: -7.878946781158447
    5. 'import' → logprob: -8.878946304321289
    6. '           ' → logprob: -9.753946304321289
    7. ' self' → logprob: -10.378946304321289
    8. '```' → logprob: -10.628946304321289
    9. 'buffer' → logprob: -10.878946304321289
    10. 'data' → logprob: -10.878946304321289

Token 1666: '.Q' (ID: 21666)
  Prédit: '.buffer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.buffer' → logprob: -0.13990063965320587
    2. '.lines' → logprob: -2.3899006843566895
    3. '._' → logprob: -4.2649006843566895
    4. 'buffer' → logprob: -4.7649006843566895
    5. '.data' → logprob: -5.6399006843566895
    6. '.input' → logprob: -6.0149006843566895
    7. '.stdin' → logprob: -6.0149006843566895
    8. '.buf' → logprob: -6.1399006843566895
    9. '.tokens' → logprob: -6.2649006843566895
    10. 'lines' → logprob: -6.5149006843566895

Token 1667: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5778814554214478
    2. '=' → logprob: -0.8278814554214478
    3. '   ' → logprob: -6.827881336212158
    4. '       ' → logprob: -8.077881813049316
    5. '    ' → logprob: -8.577881813049316
    6. 'import' → logprob: -9.202881813049316
    7. ' ' → logprob: -10.452881813049316
    8. '<|end|>' → logprob: -10.452881813049316
    9. '        ' → logprob: -10.577881813049316
    10. '  ' → logprob: -10.827881813049316

Token 1668: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0009211080614477396
    2. '0' → logprob: -7.125921249389648
    3. ' int' → logprob: -9.125921249389648
    4. 'len' → logprob: -12.375921249389648
    5. '[int' → logprob: -13.750921249389648
    6. ' ' → logprob: -14.375921249389648
    7. 'None' → logprob: -14.375921249389648
    8. '   ' → logprob: -14.875921249389648
    9. '1' → logprob: -15.375921249389648
    10. '  ' → logprob: -15.625921249389648

Token 1669: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.014161627739667892
    2. 'sys' → logprob: -4.514161586761475
    3. '(input' → logprob: -6.014161586761475
    4. 'input' → logprob: -7.389161586761475
    5. '(' → logprob: -11.014162063598633
    6. '(next' → logprob: -11.139162063598633
    7. ' sys' → logprob: -12.139162063598633
    8. 'next' → logprob: -12.264162063598633
    9. '=sys' → logprob: -12.639162063598633
    10. '(
' → logprob: -13.764162063598633

Token 1670: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.13993556797504425
    2. '(stdin' → logprob: -2.2649354934692383
    3. 'stdin' → logprob: -3.7649354934692383
    4. '.readline' → logprob: -5.764935493469238
    5. '()' → logprob: -8.889935493469238
    6. 'input' → logprob: -9.014935493469238
    7. '.argv' → logprob: -9.389935493469238
    8. ' stdin' → logprob: -10.264935493469238
    9. '(argv' → logprob: -11.139935493469238
    10. '())' → logprob: -11.139935493469238

Token 1671: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00010449681576574221
    2. '().' → logprob: -10.125104904174805
    3. '.stdin' → logprob: -10.750104904174805
    4. 'read' → logprob: -11.125104904174805
    5. '(stdin' → logprob: -11.125104904174805
    6. ' readline' → logprob: -11.875104904174805
    7. 'stdin' → logprob: -12.250104904174805
    8. '.read' → logprob: -14.250104904174805
    9. '()' → logprob: -15.250104904174805
    10. '.' → logprob: -15.625104904174805

Token 1672: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.004066763445734978
    2. '())
' → logprob: -6.0040669441223145
    3. '().' → logprob: -6.5040669441223145
    4. '()' → logprob: -9.379066467285156
    5. '())
' → logprob: -12.504066467285156
    6. '())

' → logprob: -12.879066467285156
    7. ' ())' → logprob: -14.379066467285156
    8. ')' → logprob: -14.504066467285156
    9. '()
' → logprob: -15.254066467285156
    10. '(' → logprob: -16.004066467285156

Token 1673: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0017957277595996857
    2. 'rstrip' → logprob: -6.501795768737793
    3. '())' → logprob: -8.751795768737793
    4. '().' → logprob: -9.376795768737793
    5. ' strip' → logprob: -10.251795768737793
    6. '(strip' → logprob: -12.251795768737793
    7. '()' → logprob: -12.501795768737793
    8. ')' → logprob: -13.251795768737793
    9. '_strip' → logprob: -13.376795768737793
    10. 'r' → logprob: -13.501795768737793

Token 1674: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2019897699356079
    2. '())
' → logprob: -1.701989769935608
    3. '()' → logprob: -7.951989650726318
    4. ')' → logprob: -8.826990127563477
    5. '())
' → logprob: -9.826990127563477
    6. '())

' → logprob: -11.576990127563477
    7. ')
' → logprob: -11.576990127563477
    8. '()
' → logprob: -12.576990127563477
    9. '       ' → logprob: -14.076990127563477
    10. '   ' → logprob: -15.451990127563477

Token 1675: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03328278660774231
    2. '
' → logprob: -3.53328275680542
    3. 'def' → logprob: -6.03328275680542
    4. '   ' → logprob: -7.28328275680542
    5. '           ' → logprob: -8.533283233642578
    6. '```' → logprob: -9.408283233642578
    7. 'self' → logprob: -10.158283233642578
    8. '<|end|>' → logprob: -10.158283233642578
    9. ' def' → logprob: -10.533283233642578
    10. '        
' → logprob: -10.533283233642578

Token 1676: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.10507257282733917
    2. '           ' → logprob: -2.355072498321533
    3. 'def' → logprob: -5.605072498321533
    4. ' self' → logprob: -6.855072498321533
    5. '
' → logprob: -9.855072975158691
    6. '       ' → logprob: -10.230072975158691
    7. '   ' → logprob: -11.855072975158691
    8. '	       ' → logprob: -12.480072975158691
    9. '	self' → logprob: -12.605072975158691
    10. '<|end|>' → logprob: -12.730072975158691

Token 1677: '.bit' (ID: 61866)
  Prédit: '.lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.lines' → logprob: -1.1964962482452393
    2. '.hex' → logprob: -1.3214962482452393
    3. '.inputs' → logprob: -1.6964962482452393
    4. '.' → logprob: -2.0714962482452393
    5. 'queries' → logprob: -3.8214962482452393
    6. '.n' → logprob: -3.8214962482452393
    7. '.data' → logprob: -4.07149600982666
    8. 'hex' → logprob: -4.57149600982666
    9. '.bits' → logprob: -4.94649600982666
    10. '.input' → logprob: -5.19649600982666

Token 1678: 'strings' (ID: 41195)
  Prédit: 'stream'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stream' → logprob: -0.022688716650009155
    2. 's' → logprob: -4.522688865661621
    3. 'streams' → logprob: -4.647688865661621
    4. 'reader' → logprob: -6.772688865661621
    5. '_reader' → logprob: -7.522688865661621
    6. '_stream' → logprob: -9.022688865661621
    7. 'string' → logprob: -9.897688865661621
    8. 'index' → logprob: -10.772688865661621
    9. '=' → logprob: -10.897688865661621
    10. '_index' → logprob: -11.397688865661621

Token 1679: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22969241440296173
    2. ' =' → logprob: -1.6046924591064453
    3. '=[]' → logprob: -5.479692459106445
    4. '=[]
' → logprob: -10.729692459106445
    5. '[]' → logprob: -10.729692459106445
    6. '   ' → logprob: -11.104692459106445
    7. '.append' → logprob: -11.729692459106445
    8. '.readline' → logprob: -12.479692459106445
    9. ')' → logprob: -12.604692459106445
    10. '=None' → logprob: -12.729692459106445

Token 1680: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08609194308519363
    2. '[]' → logprob: -2.586091995239258
    3. '[self' → logprob: -5.586091995239258
    4. ' [' → logprob: -7.461091995239258
    5. '[list' → logprob: -7.961091995239258
    6. '[line' → logprob: -8.086091995239258
    7. '[s' → logprob: -8.086091995239258
    8. '[str' → logprob: -8.336091995239258
    9. '[t' → logprob: -8.336091995239258
    10. ' []' → logprob: -8.461091995239258

Token 1681: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -6.392202976712724e-06
    2. ' sys' → logprob: -12.000006675720215
    3. '               ' → logprob: -16.6250057220459
    4. '           ' → logprob: -16.7500057220459
    5. '                   ' → logprob: -18.5000057220459
    6. '(sys' → logprob: -19.2500057220459
    7. 'line' → logprob: -19.3750057220459
    8. '
' → logprob: -19.6250057220459
    9. '   ' → logprob: -20.3750057220459
    10. '       ' → logprob: -20.7500057220459

Token 1682: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.001940653775818646
    2. 'stdin' → logprob: -6.251940727233887
    3. '(stdin' → logprob: -11.501940727233887
    4. '.stdout' → logprob: -13.751940727233887
    5. '.' → logprob: -14.876940727233887
    6. '.readline' → logprob: -15.376940727233887
    7. ' stdin' → logprob: -16.50193977355957
    8. 'in' → logprob: -16.75193977355957
    9. '.argv' → logprob: -17.25193977355957
    10. '```' → logprob: -17.25193977355957

Token 1683: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.0206720617134124e-05
    2. '().' → logprob: -11.62501049041748
    3. ' readline' → logprob: -13.87501049041748
    4. '.' → logprob: -16.000009536743164
    5. '.stdin' → logprob: -16.000009536743164
    6. '
' → logprob: -17.125009536743164
    7. 'read' → logprob: -18.750009536743164
    8. '```' → logprob: -19.000009536743164
    9. 'stdin' → logprob: -19.375009536743164
    10. 'line' → logprob: -19.375009536743164

Token 1684: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.47626737493556e-05
    2. '()' → logprob: -10.37503433227539
    3. '.strip' → logprob: -13.37503433227539
    4. '           ' → logprob: -14.00003433227539
    5. '()].' → logprob: -15.12503433227539
    6. '               ' → logprob: -15.37503433227539
    7. '()
' → logprob: -16.00003433227539
    8. ' ().' → logprob: -16.25003433227539
    9. '       ' → logprob: -16.75003433227539
    10. '()).' → logprob: -16.87503433227539

Token 1685: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -7.52919222577475e-05
    2. 'rstrip' → logprob: -9.500075340270996
    3. ' strip' → logprob: -14.875075340270996
    4. '_strip' → logprob: -17.75007438659668
    5. '.strip' → logprob: -18.12507438659668
    6. '(strip' → logprob: -18.62507438659668
    7. 'read' → logprob: -18.87507438659668
    8. '-strip' → logprob: -20.87507438659668
    9. '```' → logprob: -21.12507438659668
    10. 'stripe' → logprob: -21.50007438659668

Token 1686: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.273621405242011e-05
    2. '()]' → logprob: -10.750032424926758
    3. 'for' → logprob: -12.000032424926758
    4. '()
' → logprob: -13.000032424926758
    5. '()]
' → logprob: -14.250032424926758
    6. '())' → logprob: -14.375032424926758
    7. ' for' → logprob: -14.750032424926758
    8. ' ()' → logprob: -15.125032424926758
    9. '()\' → logprob: -15.375032424926758
    10. '           ' → logprob: -15.500032424926758

Token 1687: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.32088711857795715
    2. ' for' → logprob: -1.8208870887756348
    3. 'for' → logprob: -2.1958870887756348
    4. '           ' → logprob: -6.695887088775635
    5. '()]' → logprob: -9.695887565612793
    6. '               ' → logprob: -11.320887565612793
    7. '```' → logprob: -11.695887565612793
    8. ']' → logprob: -11.945887565612793
    9. ')' → logprob: -12.195887565612793
    10. '       ' → logprob: -12.320887565612793

Token 1688: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0010711579816415906
    2. '_q' → logprob: -7.376070976257324
    3. '_Q' → logprob: -8.126070976257324
    4. '_i' → logprob: -9.126070976257324
    5. '_range' → logprob: -11.626070976257324
    6. '_line' → logprob: -12.001070976257324
    7. ' _' → logprob: -12.001070976257324
    8. '_in' → logprob: -12.501070976257324
    9. '_
' → logprob: -12.626070976257324
    10. '_j' → logprob: -13.501070976257324

Token 1689: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006443815305829048
    2. 'in' → logprob: -5.506443977355957
    3. ' range' → logprob: -6.131443977355957
    4. '_range' → logprob: -8.756443977355957
    5. ' in' → logprob: -10.631443977355957
    6. '_' → logprob: -12.131443977355957
    7. '...' → logprob: -14.131443977355957
    8. '(range' → logprob: -14.631443977355957
    9. '_in' → logprob: -15.006443977355957
    10. '	range' → logprob: -15.756443977355957

Token 1690: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.1472419600977446e-06
    2. ' range' → logprob: -13.750000953674316
    3. '_range' → logprob: -19.000001907348633
    4. '_' → logprob: -19.875001907348633
    5. '
' → logprob: -20.750001907348633
    6. '(range' → logprob: -21.625001907348633
    7. '	range' → logprob: -21.750001907348633
    8. '.range' → logprob: -23.625001907348633
    9. '...' → logprob: -23.875001907348633
    10. 'Q' → logprob: -24.000001907348633

Token 1691: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001450187264708802
    2. ' self' → logprob: -9.000144958496094
    3. '(self' → logprob: -10.750144958496094
    4. '
' → logprob: -16.500144958496094
    5. '           ' → logprob: -17.375144958496094
    6. 'Q' → logprob: -17.375144958496094
    7. '0' → logprob: -17.625144958496094
    8. '```' → logprob: -19.500144958496094
    9. '   ' → logprob: -19.625144958496094
    10. '	self' → logprob: -20.000144958496094

Token 1692: '.Q' (ID: 21666)
  Prédit: '.Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Q' → logprob: -5.836499985889532e-05
    2. 'Q' → logprob: -9.7500581741333
    3. '<Q' → logprob: -17.750059127807617
    4. '(Q' → logprob: -18.375059127807617
    5. '.' → logprob: -18.750059127807617
    6. 'self' → logprob: -18.750059127807617
    7. ',Q' → logprob: -20.000059127807617
    8. ').' → logprob: -20.125059127807617
    9. '	Q' → logprob: -20.250059127807617
    10. '_Q' → logprob: -20.375059127807617

Token 1693: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.3438327843905427e-05
    2. ']' → logprob: -11.37502384185791
    3. '       ' → logprob: -12.25002384185791
    4. '])]' → logprob: -12.87502384185791
    5. ')])' → logprob: -13.62502384185791
    6. '           ' → logprob: -14.00002384185791
    7. '])' → logprob: -14.25002384185791
    8. ')' → logprob: -14.50002384185791
    9. '   ' → logprob: -14.50002384185791
    10. ')]
' → logprob: -14.75002384185791

Token 1694: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06102842465043068
    2. 'def' → logprob: -2.936028480529785
    3. '
' → logprob: -6.311028480529785
    4. '<|end|>' → logprob: -6.561028480529785
    5. 'for' → logprob: -6.686028480529785
    6. '       ' → logprob: -6.811028480529785
    7. '```' → logprob: -7.936028480529785
    8. ' def' → logprob: -10.186028480529785
    9. '    
' → logprob: -10.436028480529785
    10. '<|end|>' → logprob: -10.561028480529785

Token 1695: ' input' (ID: 3422)
  Prédit: 'reader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reader' → logprob: -0.5310800671577454
    2. '   ' → logprob: -0.9060800671577454
    3. 'input' (adapté à ' input') → logprob: -5.03108024597168
    4. ' reader' → logprob: -7.65608024597168
    5. '
' → logprob: -8.28108024597168
    6. 'def' → logprob: -8.40608024597168
    7. 'ir' → logprob: -8.53108024597168
    8. '```' → logprob: -9.90608024597168
    9. 'inputs' → logprob: -10.15608024597168
    10. 'data' → logprob: -10.15608024597168

Token 1696: '_data' (ID: 3537)
  Prédit: '_reader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reader' → logprob: -0.0016195995267480612
    2. 'Reader' → logprob: -7.126619815826416
    3. 'reader' → logprob: -7.126619815826416
    4. '_data' → logprob: -11.751619338989258
    5. ' =' → logprob: -14.251619338989258
    6. '_line' → logprob: -14.751619338989258
    7. '()' → logprob: -14.751619338989258
    8. '=' → logprob: -14.751619338989258
    9. 'data' → logprob: -15.126619338989258
    10. '   ' → logprob: -15.501619338989258

Token 1697: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.474165141582489
    2. ' =' → logprob: -0.974165141582489
    3. '   ' → logprob: -10.099164962768555
    4. '=input' → logprob: -10.224164962768555
    5. ')' → logprob: -12.849164962768555
    6. '       ' → logprob: -13.474164962768555
    7. '()' → logprob: -13.474164962768555
    8. '.' → logprob: -13.974164962768555
    9. '_reader' → logprob: -14.224164962768555
    10. '    ' → logprob: -14.724164962768555

Token 1698: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -9.615255839889869e-05
    2. ' Input' → logprob: -9.250096321105957
    3. '	Input' → logprob: -19.62509536743164
    4. 'input' → logprob: -20.50009536743164
    5. '_input' → logprob: -21.12509536743164
    6. '_Input' → logprob: -21.75009536743164
    7. '<Input' → logprob: -22.87509536743164
    8. '   ' → logprob: -23.00009536743164
    9. '\Input' → logprob: -23.00009536743164
    10. '.Input' → logprob: -23.25009536743164

Token 1699: 'Reader' (ID: 7171)
  Prédit: 'Reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -1.0802738870552275e-05
    2. '_reader' → logprob: -11.50001049041748
    3. 'reader' → logprob: -15.12501049041748
    4. 'Data' → logprob: -15.12501049041748
    5. '_data' → logprob: -17.125011444091797
    6. 'Writer' → logprob: -17.250011444091797
    7. '   ' → logprob: -18.250011444091797
    8. 'data' → logprob: -18.500011444091797
    9. 'Readers' → logprob: -18.625011444091797
    10. 'Read' → logprob: -18.625011444091797

Token 1700: '()

' (ID: 5874)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08541753888130188
    2. 'for' → logprob: -2.7104175090789795
    3. '
' → logprob: -4.460417747497559
    4. 'k' → logprob: -5.960417747497559
    5. ' for' → logprob: -6.960417747497559
    6. '    
' → logprob: -8.710417747497559
    7. 'kc' → logprob: -9.835417747497559
    8. 'def' → logprob: -11.210417747497559
    9. ' k' → logprob: -11.710417747497559
    10. 'results' → logprob: -11.960417747497559

Token 1701: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3872153162956238
    2. 'for' → logprob: -1.1372153759002686
    3. ' for' → logprob: -8.137215614318848
    4. 'def' → logprob: -10.512215614318848
    5. '
' → logprob: -11.012215614318848
    6. '```' → logprob: -12.637215614318848
    7. '    
' → logprob: -12.887215614318848
    8. '	for' → logprob: -14.262215614318848
    9. 'outputs' → logprob: -14.262215614318848
    10. '<|end|>' → logprob: -15.262215614318848

Token 1702: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00044092073221690953
    2. '   ' → logprob: -8.00044059753418
    3. 'results' → logprob: -9.37544059753418
    4. 'outputs' → logprob: -11.25044059753418
    5. ' for' → logprob: -11.87544059753418
    6. '```' → logprob: -15.25044059753418
    7. 'output' → logprob: -15.75044059753418
    8. 'answers' → logprob: -16.00044059753418
    9. 'result' → logprob: -16.50044059753418
    10. 'def' → logprob: -16.62544059753418

Token 1703: ' bit' (ID: 3546)
  Prédit: 'hex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hex' → logprob: -0.07757365703582764
    2. 'bit' → logprob: -3.077573776245117
    3. ' hex' → logprob: -3.702573776245117
    4. ' bit' → logprob: -5.827573776245117
    5. 'hs' → logprob: -7.452573776245117
    6. 'bs' → logprob: -8.452573776245117
    7. ' hs' → logprob: -9.827573776245117
    8. 'bits' → logprob: -10.077573776245117
    9. 'h' → logprob: -10.077573776245117
    10. 'line' → logprob: -11.077573776245117

Token 1704: 'str' (ID: 689)
  Prédit: 'string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'string' → logprob: -0.0019691966008394957
    2. 'strings' → logprob: -6.251969337463379
    3. 'stream' → logprob: -10.251969337463379
    4. '_string' → logprob: -12.501969337463379
    5. 'str' → logprob: -13.376969337463379
    6. 's' → logprob: -17.376968383789062
    7. 'streams' → logprob: -17.376968383789062
    8. '_str' → logprob: -18.001968383789062
    9. '   ' → logprob: -18.251968383789062
    10. '_strings' → logprob: -19.001968383789062

Token 1705: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005235291086137295
    2. 'in' → logprob: -5.255235195159912
    3. '   ' → logprob: -14.13023567199707
    4. ' ' → logprob: -15.00523567199707
    5. 's' → logprob: -15.25523567199707
    6. '  ' → logprob: -16.38023567199707
    7. '_in' → logprob: -17.13023567199707
    8. 'e' → logprob: -17.25523567199707
    9. 'In' → logprob: -17.63023567199707
    10. '	in' → logprob: -17.63023567199707

Token 1706: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0007059985073283315
    2. ' input' → logprob: -8.12570571899414
    3. 'Bit' → logprob: -8.87570571899414
    4. 'K' → logprob: -9.12570571899414
    5. 'bit' → logprob: -9.12570571899414
    6. '   ' → logprob: -10.62570571899414
    7. '(input' → logprob: -10.62570571899414
    8. ':' → logprob: -13.87570571899414
    9. '[input' → logprob: -14.75070571899414
    10. ' ' → logprob: -15.00070571899414

Token 1707: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -1.3306015716807451e-05
    2. 'str' → logprob: -12.25001335144043
    3. 'in' → logprob: -13.37501335144043
    4. '_' → logprob: -13.37501335144043
    5. '_str' → logprob: -13.37501335144043
    6. 'stream' → logprob: -14.00001335144043
    7. 'string' → logprob: -14.50001335144043
    8. '```' → logprob: -14.87501335144043
    9. '_strings' → logprob: -15.00001335144043
    10. '   ' → logprob: -15.00001335144043

Token 1708: '.bit' (ID: 61866)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2876470685005188
    2. ':
' → logprob: -1.412647008895874
    3. '.bit' → logprob: -6.162647247314453
    4. '.K' → logprob: -6.662647247314453
    5. '   ' → logprob: -7.662647247314453
    6. 'in' → logprob: -7.662647247314453
    7. '.' → logprob: -7.787647247314453
    8. '.strip' → logprob: -8.037647247314453
    9. ' in' → logprob: -8.287647247314453
    10. 'bit' → logprob: -8.412647247314453

Token 1709: 'strings' (ID: 41195)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0621192641556263
    2. 'strings' → logprob: -2.812119245529175
    3. 'stream' → logprob: -9.687119483947754
    4. '   ' → logprob: -9.812119483947754
    5. 'string' → logprob: -11.187119483947754
    6. 'streams' → logprob: -11.687119483947754
    7. 'stri' → logprob: -12.187119483947754
    8. 's' → logprob: -12.562119483947754
    9. '```' → logprob: -13.937119483947754
    10. '       ' → logprob: -14.062119483947754

Token 1710: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4359852373600006
    2. ':' → logprob: -1.1859852075576782
    3. '       ' → logprob: -3.3109853267669678
    4. '   ' → logprob: -4.560985088348389
    5. '():
' → logprob: -7.435985088348389
    6. '):
' → logprob: -8.185985565185547
    7. ',' → logprob: -10.435985565185547
    8. ' =' → logprob: -10.685985565185547
    9. '=' → logprob: -11.185985565185547
    10. '```' → logprob: -11.810985565185547

Token 1711: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009646998951211572
    2. '   ' → logprob: -7.375964641571045
    3. ':
' → logprob: -8.750965118408203
    4. ':' → logprob: -9.750965118408203
    5. ' k' → logprob: -9.750965118408203
    6. 'k' → logprob: -10.250965118408203
    7. '```' → logprob: -11.500965118408203
    8. '
' → logprob: -12.375965118408203
    9. ' K' → logprob: -12.750965118408203
    10. 'K' → logprob: -12.875965118408203

Token 1712: ' k' (ID: 372)
  Prédit: 'kf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kf' → logprob: -0.3309056758880615
    2. 'k' (adapté à ' k') → logprob: -1.3309056758880615
    3. '   ' → logprob: -4.580905914306641
    4. ' k' → logprob: -5.705905914306641
    5. 'num' → logprob: -6.580905914306641
    6. '       ' → logprob: -6.705905914306641
    7. 'number' → logprob: -7.705905914306641
    8. 'kong' → logprob: -8.83090591430664
    9. 'value' → logprob: -8.95590591430664
    10. 'float' → logprob: -9.70590591430664

Token 1713: 'f' (ID: 69)
  Prédit: 'ongo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ongo' → logprob: -0.0012083302717655897
    2. 'k' → logprob: -7.251208305358887
    3. 'o' → logprob: -8.751208305358887
    4. ' =' → logprob: -9.251208305358887
    5. '#' → logprob: -9.751208305358887
    6. '_' → logprob: -10.001208305358887
    7. '   ' → logprob: -10.501208305358887
    8. '=' → logprob: -10.751208305358887
    9. 'f' → logprob: -10.876208305358887
    10. 'ong' → logprob: -11.376208305358887

Token 1714: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269678920507431
    2. '=' → logprob: -2.1269679069519043
    3. 'f' → logprob: -10.626967430114746
    4. '   ' → logprob: -11.751967430114746
    5. '=k' → logprob: -12.126967430114746
    6. '=f' → logprob: -14.001967430114746
    7. 'o' → logprob: -15.501967430114746
    8. 'u' → logprob: -15.501967430114746
    9. '       ' → logprob: -15.626967430114746
    10. '=float' → logprob: -16.001968383789062

Token 1715: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -4.320199877838604e-07
    2. ' K' → logprob: -14.75
    3. '	K' → logprob: -21.5
    4. '   ' → logprob: -22.625
    5. 'k' → logprob: -23.0
    6. '>K' → logprob: -23.375
    7. '<K' → logprob: -24.375
    8. '       ' → logprob: -24.625
    9. '_K' → logprob: -25.375
    10. '"K' → logprob: -26.625

Token 1716: 'ongo' (ID: 8378)
  Prédit: 'ongo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ongo' → logprob: -0.0013060718774795532
    2. 'K' → logprob: -7.251306056976318
    3. 'o' → logprob: -7.876306056976318
    4. 'k' → logprob: -8.876306533813477
    5. 'ong' → logprob: -10.251306533813477
    6. 'ONGO' → logprob: -11.126306533813477
    7. '```' → logprob: -11.376306533813477
    8. 'on' → logprob: -12.751306533813477
    9. 'O' → logprob: -13.251306533813477
    10. 'f' → logprob: -13.376306533813477

Token 1717: 'Float' (ID: 9820)
  Prédit: 'Float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Float' → logprob: -1.9361264946837764e-07
    2. '<Float' → logprob: -16.625
    3. '(Float' → logprob: -17.875
    4. 'float' → logprob: -18.125
    5. '.Float' → logprob: -18.5
    6. 'Flo' → logprob: -18.625
    7. '_float' → logprob: -19.125
    8. '```' → logprob: -20.0
    9. ' Float' → logprob: -20.875
    10. '_FLOAT' → logprob: -21.625

Token 1718: '(bit' (ID: 123258)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.475549578666687
    2. '(bit' → logprob: -0.975549578666687
    3. '(' → logprob: -6.725549697875977
    4. 'k' → logprob: -9.850549697875977
    5. '(hex' → logprob: -10.100549697875977
    6. '(key' → logprob: -10.225549697875977
    7. '.k' → logprob: -10.225549697875977
    8. 'bit' → logprob: -10.475549697875977
    9. '.bit' → logprob: -10.475549697875977
    10. '=' → logprob: -11.475549697875977

Token 1719: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.008122196421027184
    2. 'stream' → logprob: -5.008121967315674
    3. 'Stream' → logprob: -6.633121967315674
    4. 'string' → logprob: -9.758122444152832
    5. '_stream' → logprob: -11.758122444152832
    6. '   ' → logprob: -11.883122444152832
    7. 'stre' → logprob: -12.508122444152832
    8. 'ström' → logprob: -12.758122444152832
    9. 'st' → logprob: -13.133122444152832
    10. 'stri' → logprob: -13.258122444152832

Token 1720: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14894157648086548
    2. ')
' → logprob: -2.2739415168762207
    3. '       ' → logprob: -3.3989415168762207
    4. ').' → logprob: -6.398941516876221
    5. ')
' → logprob: -8.523941993713379
    6. '.to' → logprob: -9.523941993713379
    7. '.' → logprob: -10.273941993713379
    8. '   ' → logprob: -10.648941993713379
    9. '<|end|>' → logprob: -10.898941993713379
    10. '
' → logprob: -12.148941993713379

Token 1721: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0573439747095108
    2. '       ' → logprob: -3.0573439598083496
    3. '   ' → logprob: -4.80734395980835
    4. ' print' → logprob: -7.55734395980835
    5. '```' → logprob: -10.682344436645508
    6. '	print' → logprob: -13.432344436645508
    7. '           ' → logprob: -14.057344436645508
    8. '`' → logprob: -14.307344436645508
    9. ' ' → logprob: -15.932344436645508
    10. '
' → logprob: -16.307344436645508

Token 1722: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.008129963040119e-06
    2. ' print' → logprob: -12.500003814697266
    3. '       ' → logprob: -15.625003814697266
    4. '	print' → logprob: -17.875003814697266
    5. '
' → logprob: -18.375003814697266
    6. '   ' → logprob: -18.875003814697266
    7. '```' → logprob: -19.875003814697266
    8. '#print' → logprob: -20.500003814697266
    9. 'result' → logprob: -20.750003814697266
    10. 'output' → logprob: -20.875003814697266

Token 1723: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.10022003948688507
    2. 'kf' → logprob: -2.350219964981079
    3. 'k' → logprob: -11.3502197265625
    4. ' k' → logprob: -13.8502197265625
    5. 'KF' → logprob: -15.4752197265625
    6. '	k' → logprob: -15.4752197265625
    7. '{k' → logprob: -16.1002197265625
    8. '(' → logprob: -16.2252197265625
    9. '_k' → logprob: -17.9752197265625
    10. '(f' → logprob: -18.4752197265625

Token 1724: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -6.704273118884885e-07
    2. '(f' → logprob: -16.125
    3. ')' → logprob: -16.5
    4. '_f' → logprob: -16.75
    5. '```' → logprob: -17.25
    6. '(k' → logprob: -17.5
    7. 'of' → logprob: -17.625
    8. 'kf' → logprob: -17.625
    9. 'o' → logprob: -17.875
    10. ''f' → logprob: -18.0

Token 1725: '.to' (ID: 3552)
  Prédit: '.to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.to' → logprob: -2.5776860184123507e-06
    2. ').' → logprob: -13.87500286102295
    3. '.' → logprob: -14.12500286102295
    4. '.To' → logprob: -14.50000286102295
    5. ' .' → logprob: -15.12500286102295
    6. '().' → logprob: -16.750001907348633
    7. ')' → logprob: -17.250001907348633
    8. 'to' → logprob: -17.875001907348633
    9. '.tolist' → logprob: -18.000001907348633
    10. '{}.' → logprob: -19.125001907348633

Token 1726: '_decimal' (ID: 178716)
  Prédit: '_decimal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_decimal' → logprob: -0.00010902655776590109
    2. 'decimal' → logprob: -9.12510871887207
    3. 'Decimal' → logprob: -16.62510871887207
    4. '_dec' → logprob: -19.00010871887207
    5. 'f' → logprob: -19.87510871887207
    6. '```' → logprob: -19.87510871887207
    7. 'e' → logprob: -20.12510871887207
    8. 'ec' → logprob: -20.12510871887207
    9. ' decimal' → logprob: -20.37510871887207
    10. 'o' → logprob: -20.50010871887207

Token 1727: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -2.3319124011322856e-05
    2. 'str' → logprob: -10.750022888183594
    3. 'Str' → logprob: -13.250022888183594
    4. ')' → logprob: -17.125022888183594
    5. ')_' → logprob: -19.250022888183594
    6. '_STR' → logprob: -19.375022888183594
    7. '()' → logprob: -20.750022888183594
    8. '$str' → logprob: -20.750022888183594
    9. 'string' → logprob: -21.125022888183594
    10. 'String' → logprob: -21.250022888183594

Token 1728: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0009873192757368088
    2. '()' → logprob: -7.500987529754639
    3. ')' → logprob: -7.750987529754639
    4. '(k' → logprob: -13.87598705291748
    5. '())
' → logprob: -13.87598705291748
    6. '()))' → logprob: -14.12598705291748
    7. '(' → logprob: -14.37598705291748
    8. ' ())' → logprob: -14.75098705291748
    9. '();)' → logprob: -16.125988006591797
    10. '))' → logprob: -17.125988006591797

Token 1729: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.006988984532654285
    2. '```' → logprob: -5.631989002227783
    3. '<|end|>' → logprob: -6.131989002227783
    4. ' if' → logprob: -7.131989002227783
    5. '#' → logprob: -8.131988525390625
    6. '<|end|>' → logprob: -9.881988525390625
    7. 'If' → logprob: -11.381988525390625
    8. '...' → logprob: -11.631988525390625
    9. '__' → logprob: -11.881988525390625
    10. '``' → logprob: -12.381988525390625

Token 1730: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2519775629043579
    2. ' __' → logprob: -1.501977562904358
    3. 'name' → logprob: -10.126977920532227
    4. '```' → logprob: -11.876977920532227
    5. '_name' → logprob: -14.626977920532227
    6. ' name' → logprob: -14.876977920532227
    7. '(__' → logprob: -16.001977920532227
    8. '___' → logprob: -16.001977920532227
    9. '.__' → logprob: -16.376977920532227
    10. 'if' → logprob: -16.876977920532227

Token 1731: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.023932429030537605
    2. '==' → logprob: -4.023932456970215
    3. '=="' → logprob: -5.648932456970215
    4. ' ==' → logprob: -6.398932456970215
    5. '=='' → logprob: -8.023932456970215
    6. 'name' → logprob: -9.023932456970215
    7. '```' → logprob: -10.023932456970215
    8. 'if' → logprob: -10.773932456970215
    9. '__.__' → logprob: -10.898932456970215
    10. 'main' → logprob: -11.648932456970215

Token 1732: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0029742566403001547
    2. '==' → logprob: -6.127974033355713
    3. '=="' → logprob: -7.377974033355713
    4. ' ==' → logprob: -9.252974510192871
    5. '__.__' → logprob: -9.877974510192871
    6. '=='' → logprob: -11.752974510192871
    7. '```' → logprob: -12.627974510192871
    8. '__["' → logprob: -13.627974510192871
    9. '___' → logprob: -14.002974510192871
    10. '__.' → logprob: -14.127974510192871

Token 1733: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1496707797050476
    2. '=="' → logprob: -2.6496708393096924
    3. '__' → logprob: -2.8996708393096924
    4. '=='' → logprob: -4.899670600891113
    5. ' ==' → logprob: -5.149670600891113
    6. '==
' → logprob: -10.649670600891113
    7. '```' → logprob: -12.649670600891113
    8. '=' → logprob: -12.774670600891113
    9. '===' → logprob: -13.024670600891113
    10. '"' → logprob: -13.274670600891113

Token 1734: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.011050059460103512
    2. ''' → logprob: -4.511050224304199
    3. '__' → logprob: -13.1360502243042
    4. ' "__' → logprob: -15.2610502243042
    5. '"name' → logprob: -16.886049270629883
    6. '   ' → logprob: -18.261049270629883
    7. '`' → logprob: -18.636049270629883
    8. '"class' → logprob: -18.886049270629883
    9. '"user' → logprob: -19.011049270629883
    10. '("__' → logprob: -19.136049270629883

Token 1735: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.2704731225967407
    2. '__' → logprob: -1.5204731225967407
    3. '"' → logprob: -4.020473003387451
    4. ''' → logprob: -8.39547348022461
    5. 'name' → logprob: -8.77047348022461
    6. '__":
' → logprob: -11.14547348022461
    7. '"name' → logprob: -11.77047348022461
    8. '   ' → logprob: -12.39547348022461
    9. '_main' → logprob: -12.39547348022461
    10. ' main' → logprob: -12.39547348022461

Token 1736: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.12836743891239166
    2. '__' → logprob: -2.1283674240112305
    3. '__':
' → logprob: -6.6283674240112305
    4. '__
' → logprob: -10.00336742401123
    5. '__.' → logprob: -10.75336742401123
    6. '__.__' → logprob: -11.12836742401123
    7. '__["' → logprob: -11.25336742401123
    8. '__
' → logprob: -12.00336742401123
    9. '```' → logprob: -12.25336742401123
    10. '__",' → logprob: -13.25336742401123

Token 1737: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0021038639824837446
    2. '   ' → logprob: -6.502103805541992
    3. ' main' → logprob: -8.002103805541992
    4. '	main' → logprob: -8.502103805541992
    5. '    
' → logprob: -10.877103805541992
    6. 'import' → logprob: -11.252103805541992
    7. '_main' → logprob: -11.627103805541992
    8. '
' → logprob: -11.752103805541992
    9. '__' → logprob: -12.002103805541992
    10. '(main' → logprob: -12.752103805541992

Token 1738: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -2.8206473871250637e-05
    2. '   ' → logprob: -10.500028610229492
    3. ' main' → logprob: -14.750028610229492
    4. '	main' → logprob: -15.875028610229492
    5. 'import' → logprob: -16.750028610229492
    6. '  ' → logprob: -21.625028610229492
    7. '(main' → logprob: -21.750028610229492
    8. '_main' → logprob: -22.625028610229492
    9. '.main' → logprob: -22.750028610229492
    10. ' ' → logprob: -23.125028610229492

Token 1739: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1737
Tokens correctement prédits (1ère position, stricte): 562
Tokens correctement prédits (1ère position, avec adaptation): 619
Tokens correctement prédits (top 10): 1197
Précision stricte (1ère position): 32.35%
Précision adaptée (1ère position): 35.64%
Précision (top 10): 68.91%
================================================================================
