================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:09:45
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

for line in sys.stdin:
    a = line.strip()
    if not a:
        continue
    a = float(a)
    seq = [a]
    for i in range(1, 10):
        if (i+1) % 2 == 0:  # even index (1-based)
            seq.append(seq[-1] * 2)
        else:  # odd index (1-based)
            seq.append(seq[-1] / 3)
    print(sum(seq))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'for' (ID: 1938)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.042949914932251
    2. '.' → logprob: -1.167949914932251
    3. '<|end|>' → logprob: -2.292949914932251
    4. 'import' → logprob: -2.542949914932251
    5. '' → logprob: -2.542949914932251
    6. '#' → logprob: -3.792949914932251
    7. '\' → logprob: -4.417949676513672
    8. '
' → logprob: -4.792949676513672
    9. 'print' → logprob: -5.042949676513672
    10. ';' → logprob: -5.667949676513672

Token 4: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0024264329113066196
    2. '  ' → logprob: -6.127426624298096
    3. ' i' → logprob: -8.377426147460938
    4. ' space' → logprob: -13.377426147460938
    5. '_' → logprob: -13.877426147460938
    6. ' )' → logprob: -14.127426147460938
    7. 'i' → logprob: -14.127426147460938
    8. ' ‌' → logprob: -14.127426147460938
    9. ' a' → logprob: -14.252426147460938
    10. '```' → logprob: -14.377426147460938

Token 5: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1365940123796463
    2. 'in' → logprob: -2.13659405708313
    3. '[' → logprob: -5.261593818664551
    4. ':' → logprob: -6.136593818664551
    5. ' ' → logprob: -7.886593818664551
    6. ' :' → logprob: -8.13659381866455
    7. '[:' → logprob: -8.38659381866455
    8. '[:]' → logprob: -8.51159381866455
    9. '.' → logprob: -8.63659381866455
    10. '[]' → logprob: -9.01159381866455

Token 6: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.0622611939907074
    2. 'sys' → logprob: -2.8122611045837402
    3. '=sys' → logprob: -9.062261581420898
    4. ' ' → logprob: -10.062261581420898
    5. ' iter' → logprob: -10.562261581420898
    6. ' file' → logprob: -10.687261581420898
    7. '	sys' → logprob: -10.812261581420898
    8. '(sys' → logprob: -11.062261581420898
    9. ' open' → logprob: -11.812261581420898
    10. '```' → logprob: -11.937261581420898

Token 7: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.008858248591423035
    2. '.readline' → logprob: -4.7588582038879395
    3. '.stdin' → logprob: -9.383858680725098
    4. '.argv' → logprob: -10.133858680725098
    5. '.stdout' → logprob: -10.633858680725098
    6. ' .' → logprob: -10.758858680725098
    7. '.readlines' → logprob: -11.133858680725098
    8. '```' → logprob: -12.133858680725098
    9. '.setdefault' → logprob: -12.383858680725098
    10. '.`' → logprob: -12.508858680725098

Token 8: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.636475493200123e-05
    2. ':
' → logprob: -10.250076293945312
    3. ' :' → logprob: -11.500076293945312
    4. ':**' → logprob: -11.625076293945312
    5. '[:]' → logprob: -12.000076293945312
    6. '):' → logprob: -12.375076293945312
    7. '>:' → logprob: -12.750076293945312
    8. '':' → logprob: -13.250076293945312
    9. '`:' → logprob: -14.250076293945312
    10. ',:' → logprob: -14.500076293945312

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003065030323341489
    2. '   ' → logprob: -9.000306129455566
    3. 'print' → logprob: -9.625306129455566
    4. '    
' → logprob: -9.750306129455566
    5. ' print' → logprob: -10.750306129455566
    6. '```' → logprob: -11.500306129455566
    7. '.strip' → logprob: -12.250306129455566
    8. '\t' → logprob: -12.625306129455566
    9. ':' → logprob: -12.875306129455566
    10. '    ' → logprob: -13.125306129455566

Token 10: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1871080845594406
    2. 'print' → logprob: -1.937108039855957
    3. ' print' → logprob: -3.687108039855957
    4. ' line' → logprob: -6.937108039855957
    5. 'line' → logprob: -8.687108039855957
    6. ' if' → logprob: -9.312108039855957
    7. '    ' → logprob: -9.437108039855957
    8. 'pass' → logprob: -9.562108039855957
    9. ' pass' → logprob: -9.687108039855957
    10. 'if' → logprob: -11.437108039855957

Token 11: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2965022325515747
    2. '=' → logprob: -1.4215022325515747
    3. 'd' → logprob: -2.171502113342285
    4. '.append' → logprob: -2.421502113342285
    5. ' ' → logprob: -2.671502113342285
    6. '.' → logprob: -2.921502113342285
    7. '   ' → logprob: -2.921502113342285
    8. 'dd' → logprob: -3.046502113342285
    9. 'r' → logprob: -4.671502113342285
    10. 'p' → logprob: -4.921502113342285

Token 12: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.07553217560052872
    2. 'line' → logprob: -3.2005321979522705
    3. ' int' → logprob: -3.7005321979522705
    4. 'int' → logprob: -4.950531959533691
    5. ' float' → logprob: -9.700531959533691
    6. ' ' → logprob: -9.950531959533691
    7. '	line' → logprob: -10.450531959533691
    8. '   ' → logprob: -10.700531959533691
    9. ' a' → logprob: -11.700531959533691
    10. 'a' → logprob: -11.950531959533691

Token 13: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.12298568338155746
    2. '.split' → logprob: -2.997985601425171
    3. '.' → logprob: -3.247985601425171
    4. '.rstrip' → logprob: -3.622985601425171
    5. 'rstrip' → logprob: -9.99798583984375
    6. '.readline' → logprob: -10.37298583984375
    7. 'strip' → logprob: -10.49798583984375
    8. '.s' → logprob: -10.62298583984375
    9. 'split' → logprob: -10.62298583984375
    10. ' .' → logprob: -10.87298583984375

Token 14: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07010804861783981
    2. '(' → logprob: -2.695107936859131
    3. '(
' → logprob: -10.570108413696289
    4. '('' → logprob: -11.070108413696289
    5. ' ()' → logprob: -11.195108413696289
    6. '`()' → logprob: -11.320108413696289
    7. ')' → logprob: -11.570108413696289
    8. '(

' → logprob: -11.695108413696289
    9. '()
' → logprob: -11.820108413696289
    10. '().' → logprob: -11.820108413696289

Token 15: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 16: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5426186919212341
    2. ' if' → logprob: -1.167618751525879
    3. '   ' → logprob: -2.667618751525879
    4. ' ' → logprob: -4.417618751525879
    5. ':' → logprob: -5.167618751525879
    6. 'print' → logprob: -5.667618751525879
    7. '<|end|>' → logprob: -5.792618751525879
    8. '    ' → logprob: -6.417618751525879
    9. '```' → logprob: -6.417618751525879
    10. 'i' → logprob: -6.667618751525879

Token 17: ' not' (ID: 625)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.242519348859787
    2. ' not' → logprob: -2.1175193786621094
    3. 'a' → logprob: -2.3675193786621094
    4. ' ' → logprob: -7.242519378662109
    5. 'not' → logprob: -7.742519378662109
    6. ' len' → logprob: -9.49251937866211
    7. 'len' → logprob: -11.36751937866211
    8. '  ' → logprob: -11.36751937866211
    9. '   ' → logprob: -11.49251937866211
    10. ''' → logprob: -11.49251937866211

Token 18: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.08910621702671051
    2. 'a' → logprob: -2.464106321334839
    3. ' ' → logprob: -8.714106559753418
    4. '  ' → logprob: -14.714106559753418
    5. '   ' → logprob: -14.714106559753418
    6. ' ' → logprob: -14.839106559753418
    7. '	a' → logprob: -14.964106559753418
    8. ' isinstance' → logprob: -15.589106559753418
    9. '(a' → logprob: -15.714106559753418
    10. '_a' → logprob: -16.3391056060791

Token 19: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008702484192326665
    2. ' :' → logprob: -7.250870227813721
    3. ':
' → logprob: -8.875870704650879
    4. ' or' → logprob: -11.875870704650879
    5. ':return' → logprob: -11.875870704650879
    6. '   ' → logprob: -13.250870704650879
    7. '):' → logprob: -13.875870704650879
    8. ' continue' → logprob: -13.875870704650879
    9. '.' → logprob: -14.500870704650879
    10. ' :
' → logprob: -14.875870704650879

Token 20: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031892398837953806
    2. '   ' → logprob: -6.5031890869140625
    3. ' continue' → logprob: -6.6281890869140625
    4. ' break' → logprob: -8.503189086914062
    5. 'continue' → logprob: -9.128189086914062
    6. '```' → logprob: -10.878189086914062
    7. '    ' → logprob: -11.378189086914062
    8. 'break' → logprob: -11.878189086914062
    9. '           ' → logprob: -13.378189086914062
    10. '    
' → logprob: -13.503189086914062

Token 21: ' continue' (ID: 4901)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.22900526225566864
    2. 'break' → logprob: -1.604005217552185
    3. '   ' → logprob: -5.854005336761475
    4. '       ' → logprob: -7.354005336761475
    5. '	break' → logprob: -10.479004859924316
    6. ' continue' → logprob: -11.354004859924316
    7. 'continue' (adapté à ' continue') → logprob: -11.479004859924316
    8. ' ' → logprob: -11.854004859924316
    9. '```' → logprob: -11.979004859924316
    10. '    ' → logprob: -12.979004859924316

Token 22: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024426743388175964
    2. '    
' → logprob: -3.7744266986846924
    3. '```' → logprob: -7.8994269371032715
    4. '        
' → logprob: -8.149426460266113
    5. '       ' → logprob: -9.149426460266113
    6. '\n' → logprob: -9.274426460266113
    7. '
' → logprob: -9.774426460266113
    8. '\' → logprob: -10.149426460266113
    9. '  
' → logprob: -10.149426460266113
    10. '     
' → logprob: -10.649426460266113

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004597439547069371
    2. '    
' → logprob: -8.000459671020508
    3. 'print' → logprob: -9.125459671020508
    4. '```' → logprob: -12.500459671020508
    5. '       ' → logprob: -12.750459671020508
    6. 'a' → logprob: -13.500459671020508
    7. '        
' → logprob: -13.500459671020508
    8. ' print' → logprob: -13.750459671020508
    9. '    ' → logprob: -14.000459671020508
    10. '<|end|>' → logprob: -14.375459671020508

Token 24: ' a' (ID: 261)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.663474977016449
    2. '   ' → logprob: -0.788474977016449
    3. 'if' → logprob: -4.163475036621094
    4. 'try' → logprob: -5.038475036621094
    5. ' print' → logprob: -5.663475036621094
    6. ' if' → logprob: -6.163475036621094
    7. 'a' (adapté à ' a') → logprob: -7.163475036621094
    8. 'result' → logprob: -7.538475036621094
    9. 'b' → logprob: -8.038475036621094
    10. ' try' → logprob: -8.663475036621094

Token 25: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.3545637130737305
    2. '<|end|>' → logprob: -1.4795637130737305
    3. '.split' → logprob: -1.6045637130737305
    4. '.' → logprob: -2.4795637130737305
    5. '+' → logprob: -2.9795637130737305
    6. ' =' → logprob: -3.2295637130737305
    7. '[' → logprob: -3.7295637130737305
    8. '<|end|>' → logprob: -3.8545637130737305
    9. ')' → logprob: -4.3545637130737305
    10. '.lower' → logprob: -4.3545637130737305

Token 26: ' float' (ID: 4428)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7060914635658264
    2. ' a' → logprob: -1.2060914039611816
    3. ' int' → logprob: -2.3310914039611816
    4. 'int' → logprob: -2.3310914039611816
    5. ' list' → logprob: -4.706091403961182
    6. 'list' → logprob: -5.956091403961182
    7. ' ' → logprob: -8.33109188079834
    8. ' map' → logprob: -8.33109188079834
    9. ' float' → logprob: -8.95609188079834
    10. '   ' → logprob: -9.45609188079834

Token 27: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.002476135268807411
    2. '(' → logprob: -6.002476215362549
    3. ' (' → logprob: -16.25247573852539
    4. '(x' → logprob: -16.37747573852539
    5. '((' → logprob: -16.75247573852539
    6. '(
' → logprob: -17.25247573852539
    7. '(A' → logprob: -17.37747573852539
    8. '('' → logprob: -17.50247573852539
    9. '(i' → logprob: -17.50247573852539
    10. '(ai' → logprob: -17.62747573852539

Token 28: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3306015716807451e-05
    2. '))' → logprob: -11.87501335144043
    3. ' )' → logprob: -12.50001335144043
    4. ')
' → logprob: -14.25001335144043
    5. ')`' → logprob: -14.62501335144043
    6. '   ' → logprob: -15.50001335144043
    7. '')' → logprob: -15.62501335144043
    8. ')))' → logprob: -16.00001335144043
    9. ')**' → logprob: -16.12501335144043
    10. '*' → logprob: -16.12501335144043

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03737715631723404
    2. '<|end|>' → logprob: -3.912377119064331
    3. '+' → logprob: -5.28737735748291
    4. '*' → logprob: -5.53737735748291
    5. ')' → logprob: -6.53737735748291
    6. '**' → logprob: -6.91237735748291
    7. ' ' → logprob: -6.91237735748291
    8. '    
' → logprob: -7.28737735748291
    9. '    ' → logprob: -7.53737735748291
    10. ' *' → logprob: -7.66237735748291

Token 30: ' seq' (ID: 26775)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10052528232336044
    2. 'if' → logprob: -2.850525379180908
    3. ' if' → logprob: -3.475525379180908
    4. '+' → logprob: -6.225525379180908
    5. 'print' → logprob: -6.350525379180908
    6. '*' → logprob: -6.725525379180908
    7. ')' → logprob: -7.975525379180908
    8. ' *' → logprob: -8.10052490234375
    9. 's' → logprob: -8.60052490234375
    10. '    ' → logprob: -8.85052490234375

Token 31: ' =' (ID: 314)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.2785375416278839
    2. ' =' → logprob: -1.9035375118255615
    3. '_len' → logprob: -3.4035375118255615
    4. 'ence' → logprob: -4.278537750244141
    5. '.' → logprob: -4.528537750244141
    6. 'u' → logprob: -4.653537750244141
    7. '[' → logprob: -5.278537750244141
    8. '_' → logprob: -5.528537750244141
    9. '[]' → logprob: -5.778537750244141
    10. '_val' → logprob: -6.528537750244141

Token 32: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.3858993351459503
    2. '[' → logprob: -1.885899305343628
    3. '[a' → logprob: -2.385899305343628
    4. '[]' → logprob: -3.010899305343628
    5. ' []' → logprob: -3.885899305343628
    6. '[int' → logprob: -5.510899543762207
    7. '[str' → logprob: -7.385899543762207
    8. 'range' → logprob: -8.135899543762207
    9. 'a' → logprob: -8.385899543762207
    10. '[s' → logprob: -9.010899543762207

Token 33: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004167083650827408
    2. '0' → logprob: -5.754167079925537
    3. '1' → logprob: -7.379167079925537
    4. '   ' → logprob: -8.379167556762695
    5. ' a' → logprob: -9.254167556762695
    6. '2' → logprob: -11.629167556762695
    7. 'int' → logprob: -11.754167556762695
    8. '100' → logprob: -12.129167556762695
    9. '3' → logprob: -12.754167556762695
    10. '(a' → logprob: -12.879167556762695

Token 34: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0014218994183465838
    2. ')]' → logprob: -7.626421928405762
    3. ')' → logprob: -7.876421928405762
    4. ' ]' → logprob: -8.001421928405762
    5. ',' → logprob: -8.751421928405762
    6. ' for' → logprob: -11.126421928405762
    7. ']
' → logprob: -11.126421928405762
    8. '   ' → logprob: -12.126421928405762
    9. '])' → logprob: -12.501421928405762
    10. 'for' → logprob: -12.626421928405762

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028720423579216003
    2. ' while' → logprob: -6.877871990203857
    3. 'while' → logprob: -7.377871990203857
    4. '<|end|>' → logprob: -7.377871990203857
    5. '    
' → logprob: -8.377872467041016
    6. '
' → logprob: -9.002872467041016
    7. ',' → logprob: -9.377872467041016
    8. 'for' → logprob: -10.377872467041016
    9. ' for' → logprob: -10.377872467041016
    10. '.' → logprob: -11.002872467041016

Token 36: ' for' (ID: 395)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.551519513130188
    2. '   ' → logprob: -1.176519513130188
    3. ' while' → logprob: -2.3015193939208984
    4. 'for' (adapté à ' for') → logprob: -4.676519393920898
    5. ' for' → logprob: -6.051519393920898
    6. '    
' → logprob: -7.051519393920898
    7. 'try' → logprob: -7.301519393920898
    8. ',' → logprob: -7.676519393920898
    9. '.' → logprob: -8.051519393920898
    10. '
' → logprob: -8.426519393920898

Token 37: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.29123103618621826
    2. ' _' → logprob: -1.5412310361862183
    3. '_' → logprob: -3.791231155395508
    4. 'i' → logprob: -4.791231155395508
    5. ' ' → logprob: -4.916231155395508
    6. '_i' → logprob: -8.416231155395508
    7. ' j' → logprob: -10.541231155395508
    8. ' b' → logprob: -11.166231155395508
    9. ' x' → logprob: -11.541231155395508
    10. ' in' → logprob: -11.791231155395508

Token 38: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014690721407532692
    2. 'in' → logprob: -4.26469087600708
    3. ' ' → logprob: -7.88969087600708
    4. '+' → logprob: -10.014690399169922
    5. '_' → logprob: -10.389690399169922
    6. '	in' → logprob: -11.139690399169922
    7. '1' → logprob: -11.264690399169922
    8. '_in' → logprob: -11.889690399169922
    9. '0' → logprob: -12.139690399169922
    10. ',' → logprob: -12.139690399169922

Token 39: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.12694375216960907
    2. 'range' → logprob: -2.126943826675415
    3. ' ' → logprob: -11.626943588256836
    4. '	range' → logprob: -12.626943588256836
    5. '[' → logprob: -13.251943588256836
    6. '   ' → logprob: -14.251943588256836
    7. '  ' → logprob: -14.626943588256836
    8. '(range' → logprob: -15.626943588256836
    9. ' xrange' → logprob: -16.001943588256836
    10. ' [' → logprob: -16.376943588256836

Token 40: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000712074339389801
    2. ' (' → logprob: -7.250711917877197
    3. '(len' → logprob: -13.250712394714355
    4. '1' → logprob: -15.750712394714355
    5. ' ' → logprob: -16.87571144104004
    6. '(
' → logprob: -17.00071144104004
    7. '(i' → logprob: -18.37571144104004
    8. '   ' → logprob: -18.62571144104004
    9. '	' → logprob: -18.62571144104004
    10. '()' → logprob: -18.75071144104004

Token 41: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.013713262043893337
    2. '10' → logprob: -5.138713359832764
    3. ' ' → logprob: -5.388713359832764
    4. '5' → logprob: -7.013713359832764
    5. '3' → logprob: -7.263713359832764
    6. '9' → logprob: -7.263713359832764
    7. '4' → logprob: -8.013712882995605
    8. '2' → logprob: -8.263712882995605
    9. 'len' → logprob: -9.763712882995605
    10. '100' → logprob: -10.013712882995605

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08166379481554031
    2. ' ,' → logprob: -2.5816638469696045
    3. ' ' → logprob: -6.831663608551025
    4. ',len' → logprob: -7.456663608551025
    5. '0' → logprob: -7.581663608551025
    6. '10' → logprob: -8.456664085388184
    7. '20' → logprob: -9.081664085388184
    8. '2' → logprob: -10.206664085388184
    9. '1' → logprob: -10.331664085388184
    10. '6' → logprob: -10.456664085388184

Token 43: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.09627021849155426
    2. '100' → logprob: -3.3462703227996826
    3. ' ' → logprob: -3.4712703227996826
    4. '5' → logprob: -4.5962700843811035
    5. '20' → logprob: -4.7212700843811035
    6. '11' → logprob: -6.2212700843811035
    7. '50' → logprob: -7.0962700843811035
    8. '6' → logprob: -7.2212700843811035
    9. '15' → logprob: -7.7212700843811035
    10. '4' → logprob: -7.9712700843811035

Token 44: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.03960537537932396
    2. '100' → logprob: -4.164605140686035
    3. '5' → logprob: -4.289605140686035
    4. '20' → logprob: -5.414605140686035
    5. '11' → logprob: -6.664605140686035
    6. ' ' → logprob: -6.914605140686035
    7. '6' → logprob: -7.039605140686035
    8. '50' → logprob: -7.914605140686035
    9. '15' → logprob: -8.164605140686035
    10. '4' → logprob: -8.289605140686035

Token 45: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0014640314038842916
    2. ' ):' → logprob: -7.251463890075684
    3. '):
' → logprob: -7.751463890075684
    4. ':' → logprob: -8.626463890075684
    5. '0' → logprob: -9.501463890075684
    6. ')' → logprob: -10.376463890075684
    7. ',' → logprob: -10.751463890075684
    8. '+' → logprob: -12.376463890075684
    9. '9' → logprob: -13.126463890075684
    10. '6' → logprob: -13.626463890075684

Token 46: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2744860649108887
    2. '       ' → logprob: -1.2744860649108887
    3. '    ' → logprob: -1.2744860649108887
    4. '   ' → logprob: -3.0244860649108887
    5. ',' → logprob: -3.5244860649108887
    6. ':' → logprob: -4.649486064910889
    7. '        ' → logprob: -4.899486064910889
    8. ' 
' → logprob: -5.024486064910889
    9. '     
' → logprob: -5.024486064910889
    10. ' ,' → logprob: -5.399486064910889

Token 47: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.27485355734825134
    2. ' a' → logprob: -2.024853467941284
    3. 'a' → logprob: -3.524853467941284
    4. '    ' → logprob: -3.524853467941284
    5. ' seq' → logprob: -3.899853467941284
    6. '       ' → logprob: -4.524853706359863
    7. ' ' → logprob: -5.399853706359863
    8. '   ' → logprob: -5.524853706359863
    9. '        ' → logprob: -6.524853706359863
    10. 'seq' → logprob: -6.649853706359863

Token 48: ' (' (ID: 350)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.957759439945221
    2. ' a' → logprob: -1.7077593803405762
    3. ' seq' → logprob: -1.8327593803405762
    4. 'i' → logprob: -2.332759380340576
    5. 'a' → logprob: -2.832759380340576
    6. ' abs' → logprob: -3.082759380340576
    7. ' len' → logprob: -3.332759380340576
    8. 'seq' → logprob: -3.582759380340576
    9. 'abs' → logprob: -5.457759380340576
    10. 'len' → logprob: -6.082759380340576

Token 49: 'i' (ID: 72)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.0722953081130981
    2. 'a' → logprob: -1.6972953081130981
    3. ' seq' → logprob: -1.8222953081130981
    4. ' abs' → logprob: -2.1972951889038086
    5. ' i' → logprob: -2.5722951889038086
    6. 'seq' → logprob: -2.9472951889038086
    7. 'i' → logprob: -3.1972951889038086
    8. 'abs' → logprob: -3.9472951889038086
    9. ' len' → logprob: -5.947295188903809
    10. ' (' → logprob: -6.322295188903809

Token 50: '+' (ID: 10)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.445978045463562
    2. ' %' → logprob: -1.945978045463562
    3. '==' → logprob: -2.9459781646728516
    4. ' >' → logprob: -3.4459781646728516
    5. ' *' → logprob: -3.6959781646728516
    6. ' <' → logprob: -3.9459781646728516
    7. ' -' → logprob: -3.9459781646728516
    8. ')' → logprob: -4.070978164672852
    9. '%' → logprob: -4.320978164672852
    10. ' ' → logprob: -5.070978164672852

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026367072016000748
    2. ' ' → logprob: -3.9013671875
    3. '2' → logprob: -5.6513671875
    4. ')' → logprob: -7.2763671875
    5. '9' → logprob: -7.6513671875
    6. '3' → logprob: -8.5263671875
    7. 'len' → logprob: -8.9013671875
    8. ' len' → logprob: -9.0263671875
    9. '4' → logprob: -9.1513671875
    10. '0' → logprob: -9.2138671875

Token 52: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022075654938817024
    2. ' )' → logprob: -4.897075653076172
    3. ')*' → logprob: -5.022075653076172
    4. ')%' → logprob: -5.897075653076172
    5. ')<' → logprob: -6.397075653076172
    6. ' <' → logprob: -7.147075653076172
    7. ')**' → logprob: -7.397075653076172
    8. ')==' → logprob: -8.147075653076172
    9. ')<=' → logprob: -8.272075653076172
    10. '<' → logprob: -8.397075653076172

Token 53: ' %' (ID: 1851)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6189975142478943
    2. ' <' → logprob: -1.868997573852539
    3. '*' → logprob: -2.118997573852539
    4. ' ==' → logprob: -3.368997573852539
    5. ')' → logprob: -3.493997573852539
    6. ' %' → logprob: -3.618997573852539
    7. '%' → logprob: -3.993997573852539
    8. '<' → logprob: -3.993997573852539
    9. ' <=' → logprob: -4.118997573852539
    10. ' ' → logprob: -5.368997573852539

Token 54: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.320574015378952
    2. '2' → logprob: -1.6955740451812744
    3. '3' → logprob: -2.4455740451812744
    4. '5' → logprob: -6.570573806762695
    5. '4' → logprob: -6.695573806762695
    6. '7' → logprob: -7.445573806762695
    7. '10' → logprob: -7.820573806762695
    8. ' (' → logprob: -8.695573806762695
    9. '(' → logprob: -9.820573806762695
    10. ' a' → logprob: -10.070573806762695

Token 55: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.7475237250328064
    2. '2' → logprob: -0.8725237250328064
    3. '5' → logprob: -2.372523784637451
    4. '10' → logprob: -4.872523784637451
    5. '4' → logprob: -5.122523784637451
    6. '7' → logprob: -6.872523784637451
    7. '6' → logprob: -8.247523307800293
    8. '9' → logprob: -9.122523307800293
    9. '11' → logprob: -9.497523307800293
    10. ' ' → logprob: -9.872523307800293

Token 56: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1296849250793457
    2. '==' → logprob: -2.3796849250793457
    3. ' !=' → logprob: -3.6296849250793457
    4. '!=' → logprob: -6.754684925079346
    5. '0' → logprob: -7.004684925079346
    6. ' ' → logprob: -8.254684448242188
    7. ':' → logprob: -9.004684448242188
    8. ' =' → logprob: -11.129684448242188
    9. '=' → logprob: -11.379684448242188
    10. '3' → logprob: -11.879684448242188

Token 57: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08148647099733353
    2. '0' → logprob: -2.581486463546753
    3. '1' → logprob: -5.956486701965332
    4. ' ' → logprob: -13.643986701965332
    5. '```' → logprob: -14.831486701965332
    6. ' (' → logprob: -14.831486701965332
    7. ' 
' → logprob: -15.331486701965332
    8. ' 

' → logprob: -15.393986701965332
    9. '(' → logprob: -15.456486701965332
    10. '==' → logprob: -15.518986701965332

Token 58: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06307542324066162
    2. '1' → logprob: -2.813075542449951
    3. ' ' → logprob: -6.813075542449951
    4. '2' → logprob: -12.875575065612793
    5. '```' → logprob: -13.813075065612793
    6. '

' → logprob: -14.063075065612793
    7. '3' → logprob: -14.313075065612793
    8. ' ' → logprob: -15.125575065612793
    9. '4' → logprob: -15.438075065612793
    10. '!' → logprob: -15.813075065612793

Token 59: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0523451492190361
    2. ' :' → logprob: -3.052345037460327
    3. ' and' → logprob: -6.052345275878906
    4. ':
' → logprob: -6.927345275878906
    5. ' :
' → logprob: -8.427345275878906
    6. '       ' → logprob: -9.302345275878906
    7. '):' → logprob: -10.427345275878906
    8. ' or' → logprob: -10.927345275878906
    9. ' ' → logprob: -11.302345275878906
    10. '   ' → logprob: -11.802345275878906

Token 60: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8064916729927063
    2. ' ' → logprob: -1.3064916133880615
    3. '        ' → logprob: -1.8064916133880615
    4. '           ' → logprob: -2.5564916133880615
    5. '        
' → logprob: -4.431491851806641
    6. ' 
' → logprob: -4.806491851806641
    7. '   ' → logprob: -5.806491851806641
    8. '<|end|>' → logprob: -5.806491851806641
    9. '         
' → logprob: -6.056491851806641
    10. '    ' → logprob: -6.306491851806641

Token 61: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8813461661338806
    2. '           ' → logprob: -1.3813462257385254
    3. ' ' → logprob: -2.1313462257385254
    4. ':' → logprob: -2.5063462257385254
    5. '        ' → logprob: -2.8813462257385254
    6. ' 
' → logprob: -4.131346225738525
    7. ' :' → logprob: -4.381346225738525
    8. '   ' → logprob: -4.881346225738525
    9. '#' → logprob: -5.131346225738525
    10. '            ' → logprob: -5.381346225738525

Token 62: ' even' (ID: 1952)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3511570692062378
    2. '           ' → logprob: -1.7261570692062378
    3. ' seq' → logprob: -1.7261570692062378
    4. ' a' → logprob: -1.9761570692062378
    5. 'a' → logprob: -2.9761571884155273
    6. '   ' → logprob: -3.4761571884155273
    7. 'seq' → logprob: -3.4761571884155273
    8. '       ' → logprob: -3.4761571884155273
    9. '    ' → logprob: -3.8511571884155273
    10. '        ' → logprob: -4.226157188415527

Token 63: ' index' (ID: 3472)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24171152710914612
    2. '   ' → logprob: -2.4917116165161133
    3. ' and' → logprob: -3.6167116165161133
    4. '           ' → logprob: -3.6167116165161133
    5. ' :' → logprob: -4.116711616516113
    6. ':
' → logprob: -4.241711616516113
    7. ' ' → logprob: -4.241711616516113
    8. '       ' → logprob: -4.741711616516113
    9. '    ' → logprob: -5.491711616516113
    10. ',' → logprob: -5.866711616516113

Token 64: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7066832184791565
    2. '           ' → logprob: -0.8316832184791565
    3. '   ' → logprob: -3.7066831588745117
    4. '       ' → logprob: -3.8316831588745117
    5. ',' → logprob: -5.331683158874512
    6. ' :' → logprob: -5.331683158874512
    7. ' and' → logprob: -5.581683158874512
    8. '<|end|>' → logprob: -6.081683158874512
    9. ':
' → logprob: -6.581683158874512
    10. ' ' → logprob: -6.956683158874512

Token 65: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06386449933052063
    2. ' )' → logprob: -3.6888644695281982
    3. ' ' → logprob: -5.063864707946777
    4. '<|end|>' → logprob: -5.188864707946777
    5. '):
' → logprob: -5.438864707946777
    6. ',' → logprob: -5.563864707946777
    7. ')
' → logprob: -6.063864707946777
    8. 's' → logprob: -6.313864707946777
    9. '):' → logprob: -6.313864707946777
    10. '),' → logprob: -6.563864707946777

Token 66: '-based' (ID: 8235)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18651075661182404
    2. '):' → logprob: -2.3115108013153076
    3. '):
' → logprob: -2.9365108013153076
    4. ' )' → logprob: -5.4365105628967285
    5. '-based' → logprob: -5.8115105628967285
    6. ')
' → logprob: -5.8115105628967285
    7. '):

' → logprob: -5.9365105628967285
    8. ' ' → logprob: -7.0615105628967285
    9. ' ):
' → logprob: -7.4365105628967285
    10. ' ):' → logprob: -8.061511039733887

Token 67: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09673403203487396
    2. '           ' → logprob: -2.971734046936035
    3. ')
' → logprob: -4.096734046936035
    4. ' )' → logprob: -4.346734046936035
    5. '):
' → logprob: -5.471734046936035
    6. ' )
' → logprob: -6.596734046936035
    7. ',' → logprob: -6.721734046936035
    8. '):' → logprob: -7.096734046936035
    9. '       ' → logprob: -7.346734046936035
    10. '<|end|>' → logprob: -7.346734046936035

Token 68: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03531955927610397
    2. '       ' → logprob: -3.4103195667266846
    3. '        ' → logprob: -8.035319328308105
    4. ',' → logprob: -8.160319328308105
    5. ':' → logprob: -8.660319328308105
    6. '            
' → logprob: -8.785319328308105
    7. '<|end|>' → logprob: -9.285319328308105
    8. '        
' → logprob: -9.535319328308105
    9. '   ' → logprob: -9.535319328308105
    10. ' *' → logprob: -9.785319328308105

Token 69: ' seq' (ID: 26775)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.05751371383667
    2. '           ' → logprob: -1.43251371383667
    3. ' seq' → logprob: -1.68251371383667
    4. ' a' → logprob: -2.43251371383667
    5. '   ' → logprob: -3.05751371383667
    6. 'a' → logprob: -3.30751371383667
    7. 'seq' (adapté à ' seq') → logprob: -4.05751371383667
    8. ' ' → logprob: -4.18251371383667
    9. '        ' → logprob: -5.05751371383667
    10. '    ' → logprob: -5.68251371383667

Token 70: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.03827488049864769
    2. '.' → logprob: -3.2882747650146484
    3. ' .' → logprob: -9.413274765014648
    4. '=' → logprob: -9.663274765014648
    5. '[-' → logprob: -10.288274765014648
    6. '.extend' → logprob: -11.288274765014648
    7. '*=' → logprob: -11.663274765014648
    8. '[' → logprob: -11.913274765014648
    9. '+=' → logprob: -12.163274765014648
    10. ' *=' → logprob: -12.788274765014648

Token 71: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.055784061551094055
    2. '(' → logprob: -2.930783987045288
    3. '(a' → logprob: -7.555784225463867
    4. 'seq' → logprob: -8.430784225463867
    5. ' (' → logprob: -10.805784225463867
    6. '(round' → logprob: -10.930784225463867
    7. '((' → logprob: -10.930784225463867
    8. ' seq' → logprob: -10.930784225463867
    9. '(-' → logprob: -11.180784225463867
    10. '(sequence' → logprob: -11.305784225463867

Token 72: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.02976737916469574
    2. '[i' → logprob: -3.5297672748565674
    3. '[' → logprob: -11.279767036437988
    4. '-' → logprob: -12.779767036437988
    5. 'i' → logprob: -14.654767036437988
    6. '[j' → logprob: -15.279767036437988
    7. '[
' → logprob: -15.779767036437988
    8. '   ' → logprob: -15.779767036437988
    9. ' [-' → logprob: -16.029767990112305
    10. '	' → logprob: -16.779767990112305

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.033905357122421265
    2. '2' → logprob: -3.408905267715454
    3. ' ' → logprob: -8.658905029296875
    4. '3' → logprob: -9.721405029296875
    5. ')' → logprob: -12.471405029296875
    6. ']' → logprob: -13.221405029296875
    7. '])' → logprob: -13.221405029296875
    8. '   ' → logprob: -13.346405029296875
    9. 'i' → logprob: -13.596405029296875
    10. '-' → logprob: -13.596405029296875

Token 74: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2955296039581299
    2. '*' → logprob: -2.17052960395813
    3. ' +' → logprob: -2.67052960395813
    4. ' /' → logprob: -3.67052960395813
    5. ' -' → logprob: -4.170529365539551
    6. '+' → logprob: -4.170529365539551
    7. '/' → logprob: -4.670529365539551
    8. '-' → logprob: -5.545529365539551
    9. ' ' → logprob: -6.295529365539551
    10. ')' → logprob: -8.17052936553955

Token 75: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.9004775285720825
    2. ' *' → logprob: -1.1504775285720825
    3. ' +' → logprob: -2.150477409362793
    4. '+' → logprob: -2.900477409362793
    5. '/' → logprob: -3.150477409362793
    6. ' /' → logprob: -3.650477409362793
    7. ' -' → logprob: -3.900477409362793
    8. '-' → logprob: -4.150477409362793
    9. ' ' → logprob: -8.025477409362793
    10. '**' → logprob: -8.025477409362793

Token 76: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.35146060585975647
    2. ' ' → logprob: -1.601460576057434
    3. '3' → logprob: -3.3514606952667236
    4. '1' → logprob: -3.6014606952667236
    5. '0' → logprob: -3.7264606952667236
    6. 'a' → logprob: -6.1014604568481445
    7. ' a' → logprob: -6.9764604568481445
    8. '4' → logprob: -7.1014604568481445
    9. 'i' → logprob: -7.1014604568481445
    10. '-' → logprob: -7.4764604568481445

Token 77: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.17859560251235962
    2. '1' → logprob: -2.803595542907715
    3. '3' → logprob: -3.053595542907715
    4. '0' → logprob: -3.303595542907715
    5. ' ' → logprob: -5.053595542907715
    6. 'a' → logprob: -5.303595542907715
    7. '-' → logprob: -5.428595542907715
    8. 'i' → logprob: -7.053595542907715
    9. '(' → logprob: -7.678595542907715
    10. '4' → logprob: -7.803595542907715

Token 78: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010081745684146881
    2. '       ' → logprob: -4.885081768035889
    3. ')
' → logprob: -7.010081768035889
    4. '   ' → logprob: -7.385081768035889
    5. 'else' → logprob: -7.885081768035889
    6. ' )' → logprob: -8.26008129119873
    7. ' else' → logprob: -8.26008129119873
    8. '))' → logprob: -10.76008129119873
    9. '+' → logprob: -11.63508129119873
    10. 'elif' → logprob: -12.26008129119873

Token 79: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05008155107498169
    2. ' else' → logprob: -3.925081491470337
    3. '   ' → logprob: -4.175081729888916
    4. 'else' → logprob: -4.300081729888916
    5. '	else' → logprob: -10.300081253051758
    6. 'elif' → logprob: -10.675081253051758
    7. '```' → logprob: -11.175081253051758
    8. '
' → logprob: -11.300081253051758
    9. '<|end|>' → logprob: -11.300081253051758
    10. ' ' → logprob: -11.425081253051758

Token 80: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6105104684829712
    2. ' else' → logprob: -1.3605104684829712
    3. 'else' (adapté à ' else') → logprob: -1.6105104684829712
    4. '   ' → logprob: -7.735510349273682
    5. '	else' → logprob: -9.23551082611084
    6. '	' → logprob: -10.86051082611084
    7. 'elif' → logprob: -10.86051082611084
    8. '    ' → logprob: -11.98551082611084
    9. ' ' → logprob: -12.11051082611084
    10. '```' → logprob: -12.36051082611084

Token 81: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008884591981768608
    2. ':
' → logprob: -5.008884429931641
    3. '           ' → logprob: -6.383884429931641
    4. ' :' → logprob: -8.38388442993164
    5. '       ' → logprob: -9.25888442993164
    6. '          ' → logprob: -9.88388442993164
    7. '        ' → logprob: -10.50888442993164
    8. '   ' → logprob: -10.88388442993164
    9. ' :
' → logprob: -11.38388442993164
    10. '         ' → logprob: -11.75888442993164

Token 82: ' ' (ID: 220)
  Prédit: ' seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seq' → logprob: -0.47667601704597473
    2. 'seq' → logprob: -0.9766759872436523
    3. '           ' → logprob: -6.601675987243652
    4. '       ' → logprob: -7.726675987243652
    5. '        ' → logprob: -7.976675987243652
    6. ' ' → logprob: -9.226675987243652
    7. '    ' → logprob: -9.476675987243652
    8. ' ' → logprob: -9.476675987243652
    9. '   ' → logprob: -9.476675987243652
    10. '            ' → logprob: -9.726675987243652

Token 83: ' #' (ID: 1069)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.016069795936346054
    2. ' seq' → logprob: -4.1410698890686035
    3. '   ' → logprob: -11.141069412231445
    4. '    ' → logprob: -11.766069412231445
    5. ' ' → logprob: -12.766069412231445
    6. '(seq' → logprob: -12.891069412231445
    7. '           ' → logprob: -13.016069412231445
    8. ' ' → logprob: -13.766069412231445
    9. '.seq' → logprob: -14.141069412231445
    10. '       ' → logprob: -14.141069412231445

Token 84: ' odd' (ID: 14210)
  Prédit: ' seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' seq' → logprob: -0.113161101937294
    2. 'seq' → logprob: -2.238161087036133
    3. '    ' → logprob: -8.113161087036133
    4. ' ' → logprob: -11.488161087036133
    5. '   ' → logprob: -11.488161087036133
    6. '  ' → logprob: -12.363161087036133
    7. '(seq' → logprob: -12.738161087036133
    8. '        ' → logprob: -13.238161087036133
    9. '           ' → logprob: -13.613161087036133
    10. ' sequence' → logprob: -13.738161087036133

Token 85: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.33026787638664246
    2. ' index' → logprob: -1.4552679061889648
    3. '<|end|>' → logprob: -3.830267906188965
    4. '_index' → logprob: -4.080267906188965
    5. ':index' → logprob: -5.955267906188965
    6. '<|end|>' → logprob: -6.205267906188965
    7. '#index' → logprob: -6.455267906188965
    8. '	index' → logprob: -6.580267906188965
    9. '[index' → logprob: -8.455267906188965
    10. '   ' → logprob: -8.580267906188965

Token 86: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0518394410610199
    2. '   ' → logprob: -4.051839351654053
    3. ' (' → logprob: -4.051839351654053
    4. '.append' → logprob: -5.676839351654053
    5. ' ' → logprob: -6.051839351654053
    6. ':' → logprob: -6.051839351654053
    7. '          ' → logprob: -6.551839351654053
    8. ' seq' → logprob: -7.301839351654053
    9. '  ' → logprob: -7.676839351654053
    10. '    ' → logprob: -7.801839351654053

Token 87: '1' (ID: 16)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.5674371719360352
    2. ' seq' → logprob: -1.0674371719360352
    3. '-' → logprob: -3.067437171936035
    4. '1' → logprob: -4.317437171936035
    5. ' -' → logprob: -4.692437171936035
    6. '0' → logprob: -4.817437171936035
    7. ' ' → logprob: -5.817437171936035
    8. '*' → logprob: -5.817437171936035
    9. ')' → logprob: -6.067437171936035
    10. '   ' → logprob: -6.442437171936035

Token 88: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.6368754506111145
    2. ' -' → logprob: -1.5118753910064697
    3. '-' → logprob: -2.2618753910064697
    4. 'based' → logprob: -3.1368753910064697
    5. '_based' → logprob: -3.3868753910064697
    6. '+' → logprob: -3.8868753910064697
    7. ' ' → logprob: -4.011875629425049
    8. '   ' → logprob: -5.011875629425049
    9. ')' → logprob: -5.011875629425049
    10. ' based' → logprob: -5.761875629425049

Token 89: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015293273143470287
    2. ':' → logprob: -5.140293121337891
    3. ')' → logprob: -5.390293121337891
    4. '   ' → logprob: -6.265293121337891
    5. ':
' → logprob: -7.515293121337891
    6. '       ' → logprob: -7.515293121337891
    7. '):
' → logprob: -8.14029312133789
    8. '):' → logprob: -8.39029312133789
    9. ' ' → logprob: -8.51529312133789
    10. ' :' → logprob: -8.64029312133789

Token 90: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012794747948646545
    2. ' seq' → logprob: -5.0127949714660645
    3. '       ' → logprob: -5.3877949714660645
    4. 'seq' → logprob: -7.1377949714660645
    5. '        ' → logprob: -8.137794494628906
    6. '            ' → logprob: -9.262794494628906
    7. '          ' → logprob: -9.387794494628906
    8. ' ' → logprob: -9.637794494628906
    9. ' ' → logprob: -10.512794494628906
    10. '	       ' → logprob: -10.637794494628906

Token 91: ' seq' (ID: 26775)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' (adapté à ' seq') → logprob: -0.02341364696621895
    2. ' seq' → logprob: -3.77341365814209
    3. '           ' → logprob: -9.02341365814209
    4. '               ' → logprob: -11.02341365814209
    5. '       ' → logprob: -11.77341365814209
    6. '            ' → logprob: -12.14841365814209
    7. '   ' → logprob: -12.52341365814209
    8. ' ' → logprob: -13.02341365814209
    9. '```' → logprob: -13.14841365814209
    10. '    ' → logprob: -13.27341365814209

Token 92: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.007626506965607405
    2. '.' → logprob: -4.882626533508301
    3. ' .' → logprob: -11.5076265335083
    4. '.app' → logprob: -12.2576265335083
    5. 'append' → logprob: -12.8826265335083
    6. '.extend' → logprob: -13.8826265335083
    7. '[-' → logprob: -14.1326265335083
    8. '.ap' → logprob: -14.5076265335083
    9. '​.' → logprob: -15.2576265335083
    10. 'app' → logprob: -15.7576265335083

Token 93: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.004351078998297453
    2. '(' → logprob: -5.5043511390686035
    3. 'seq' → logprob: -8.504350662231445
    4. '(round' → logprob: -11.004350662231445
    5. ' seq' → logprob: -11.254350662231445
    6. '((' → logprob: -11.379350662231445
    7. '(int' → logprob: -12.254350662231445
    8. '(-' → logprob: -12.254350662231445
    9. '(se' → logprob: -12.379350662231445
    10. ' (' → logprob: -12.504350662231445

Token 94: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.0683535037969705e-05
    2. '[' → logprob: -11.62501049041748
    3. ' [-' → logprob: -13.62501049041748
    4. '	' → logprob: -15.50001049041748
    5. '-' → logprob: -15.75001049041748
    6. '[:-' → logprob: -16.750011444091797
    7. '[
' → logprob: -18.250011444091797
    8. '
' → logprob: -18.375011444091797
    9. '   ' → logprob: -18.375011444091797
    10. '1' → logprob: -18.500011444091797

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.032946836203336716
    2. '-' → logprob: -3.532946825027466
    3. '0' → logprob: -6.032947063446045
    4. '[-' → logprob: -7.657947063446045
    5. '2' → logprob: -8.282946586608887
    6. ' -' → logprob: -10.532946586608887
    7. '[' → logprob: -10.782946586608887
    8. ' ' → logprob: -12.407946586608887
    9. '(-' → logprob: -12.407946586608887
    10. '+' → logprob: -13.157946586608887

Token 96: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.0738988146185875
    2. '+' → logprob: -3.6988987922668457
    3. ' /' → logprob: -3.9488987922668457
    4. ' *' → logprob: -4.448898792266846
    5. ' -' → logprob: -4.823898792266846
    6. '*' → logprob: -5.573898792266846
    7. '/' → logprob: -5.948898792266846
    8. '-' → logprob: -7.698898792266846
    9. ' ' → logprob: -8.073899269104004
    10. '**' → logprob: -9.073899269104004

Token 97: ' /' (ID: 820)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10776211321353912
    2. '+' → logprob: -2.732762098312378
    3. ' /' → logprob: -4.232762336730957
    4. ' -' → logprob: -4.607762336730957
    5. '/' → logprob: -5.232762336730957
    6. '*' → logprob: -5.482762336730957
    7. ' *' → logprob: -6.232762336730957
    8. '-' → logprob: -6.982762336730957
    9. '**' → logprob: -8.732762336730957
    10. ' ' → logprob: -10.107762336730957

Token 98: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.27276894450187683
    2. '2' → logprob: -1.5227689743041992
    3. ' ' → logprob: -4.022768974304199
    4. '4' → logprob: -6.897768974304199
    5. '5' → logprob: -7.022768974304199
    6. '1' → logprob: -8.0227689743042
    7. '10' → logprob: -8.2727689743042
    8. '7' → logprob: -9.6477689743042
    9. '6' → logprob: -10.6477689743042
    10. '0' → logprob: -10.8977689743042

Token 99: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.1635029911994934
    2. '2' → logprob: -1.9135029315948486
    3. '4' → logprob: -6.538503170013428
    4. '5' → logprob: -7.038503170013428
    5. ' ' → logprob: -8.16350269317627
    6. '1' → logprob: -8.28850269317627
    7. '10' → logprob: -8.41350269317627
    8. '7' → logprob: -9.66350269317627
    9. '6' → logprob: -10.66350269317627
    10. '8' → logprob: -10.78850269317627

Token 100: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008146316395141184
    2. ')
' → logprob: -7.125814437866211
    3. '   ' → logprob: -12.250814437866211
    4. ' )' → logprob: -13.375814437866211
    5. ')

' → logprob: -14.250814437866211
    6. '```' → logprob: -14.375814437866211
    7. ')`' → logprob: -14.625814437866211
    8. ')
' → logprob: -14.875814437866211
    9. '))' → logprob: -14.875814437866211
    10. '       ' → logprob: -15.000814437866211

Token 101: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5195608735084534
    2. '   ' → logprob: -1.2695608139038086
    3. '<|end|>' → logprob: -2.3945608139038086
    4. '
' → logprob: -3.8945608139038086
    5. ' print' → logprob: -5.394560813903809
    6. ' for' → logprob: -6.519560813903809
    7. 'for' → logprob: -6.644560813903809
    8. '[' → logprob: -7.019560813903809
    9. ')' → logprob: -7.144560813903809
    10. '\n' → logprob: -7.519560813903809

Token 102: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2523522675037384
    2. 'print' (adapté à ' print') → logprob: -1.502352237701416
    3. ' print' → logprob: -8.627352714538574
    4. 'for' → logprob: -9.252352714538574
    5. '    
' → logprob: -9.627352714538574
    6. '<|end|>' → logprob: -10.502352714538574
    7. '#print' → logprob: -11.127352714538574
    8. '#' → logprob: -11.627352714538574
    9. ' for' → logprob: -12.127352714538574
    10. '```' → logprob: -12.377352714538574

Token 103: '(sum' (ID: 45528)
  Prédit: '(seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.16405878961086273
    2. '(' → logprob: -1.914058804512024
    3. '(*' → logprob: -5.914058685302734
    4. '(len' → logprob: -7.789058685302734
    5. '(sum' → logprob: -8.039058685302734
    6. '(tuple' → logprob: -8.539058685302734
    7. '('' → logprob: -8.664058685302734
    8. '("' → logprob: -12.289058685302734
    9. '(se' → logprob: -12.539058685302734
    10. '(sequence' → logprob: -13.039058685302734

Token 104: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.0001254693343071267
    2. '(' → logprob: -9.000125885009766
    3. '(se' → logprob: -13.625125885009766
    4. ')' → logprob: -14.750125885009766
    5. '(sequence' → logprob: -15.250125885009766
    6. ' (' → logprob: -16.750125885009766
    7. '(s' → logprob: -17.875125885009766
    8. '(
' → logprob: -18.500125885009766
    9. '(sum' → logprob: -19.375125885009766
    10. 'seq' → logprob: -19.750125885009766

Token 105: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038085322827100754
    2. '))' → logprob: -3.2880852222442627
    3. ')))' → logprob: -10.538084983825684
    4. ' )' → logprob: -11.413084983825684
    5. '())' → logprob: -12.788084983825684
    6. '])' → logprob: -13.913084983825684
    7. ')`' → logprob: -14.288084983825684
    8. ')
' → logprob: -14.788084983825684
    9. ' ))' → logprob: -15.038084983825684
    10. ')}' → logprob: -15.163084983825684


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 103
Tokens correctement prédits (1ère position, stricte): 44
Tokens correctement prédits (1ère position, avec adaptation): 46
Tokens correctement prédits (top 10): 85
Précision stricte (1ère position): 42.72%
Précision adaptée (1ère position): 44.66%
Précision (top 10): 82.52%
================================================================================
