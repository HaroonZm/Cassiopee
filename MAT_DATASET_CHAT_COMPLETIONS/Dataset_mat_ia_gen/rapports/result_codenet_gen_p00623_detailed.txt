================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:57:32
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

# Fonction pour parser l'arbre depuis la chaîne d'entrée.
# La structure est soit un noeud interne ( ( gauche droite ) )
# soit une feuille (un entier).
# On renvoie (arbre, position_fin_parse)
def parse_tree(s, pos=0):
    # Ignore les espaces
    while pos < len(s) and s[pos] == ' ':
        pos += 1
    # Si c'est une feuille (un chiffre), on le lit
    if s[pos].isdigit():
        num = 0
        while pos < len(s) and s[pos].isdigit():
            num = num * 10 + int(s[pos])
            pos += 1
        return ('leaf', num), pos
    # Sinon c'est un noeud interne qui commence par '('
    if s[pos] == '(':
        pos += 1
        left, pos = parse_tree(s, pos)
        # ignore un espace après la sous-arbre gauche
        while pos < len(s) and s[pos] == ' ':
            pos += 1
        right, pos = parse_tree(s, pos)
        while pos < len(s) and s[pos] == ' ':
            pos += 1
        # doit se terminer par ')'
        if pos < len(s) and s[pos] == ')':
            pos += 1
        else:
            # la donnée d'entrée doit respecter le format, on ne gère pas l'erreur
            pass
        return ('node', left, right), pos
    # Cas non prévu (par exemple END)
    return None, pos

# Fonction pour calculer le nombre de façons d'écrire les caractères 'A', 'O', 'X' dans les noeuds internes
# pour obtenir l'ensemble complet {a,b,c,d} = {0,1,2,3}
# L'approche:
# - Chaque feuille a un ensemble déjà défini.
# - Un noeud interne a 3 choix possibles: A (intersection), O (union), X (symétrique différence) sur les ensembles des enfants.
# - Pour chaque noeud interne, on fait un dfs en mémorisant (memo) les nombre de façons d'obtenir chaque sous-ensemble.
# - Le résultat final est le nombre de façons d'obtenir {0,1,2,3} (= 15 en bitmask 0b1111) au noeud racine.

# Les ensembles d'éléments a,b,c,d seront représentés sous forme d'entiers 4 bits:
# bit 0 = a, bit 1 = b, bit 2 = c, bit 3 = d

class TreeNode:
    def __init__(self, node_type):
        self.type = node_type  # 'leaf' ou 'node'
        if node_type == 'leaf':
            self.idx = None  # index du subset
        else:
            self.left = None
            self.right = None

def build_tree(parsed_tree):
    # conversion du tuple en objet TreeNode pour plus de commodité
    if parsed_tree[0] == 'leaf':
        leaf = TreeNode('leaf')
        leaf.idx = parsed_tree[1]
        return leaf
    else:
        node = TreeNode('node')
        node.left = build_tree(parsed_tree[1])
        node.right = build_tree(parsed_tree[2])
        return node

def set_operations(op, s1, s2):
    # s1, s2 sont des sets représentés par int (4 bits)
    # Retourne le résultat selon l'opération : A=intersection, O=union, X=symm diff
    if op == 'A':
        return s1 & s2
    elif op == 'O':
        return s1 | s2
    elif op == 'X':
        return s1 ^ s2
    else:
        return 0  # pas attendu

def count_ways(node, subsets, memo):
    # node: TreeNode, subsets: list de sets bits, memo: dict (node_id, set) -> nombre de façons
    # On attribue un id unique à chaque noeud afin d'utiliser memo
    # Pour ce faire, on peut définir une fonction qui génère une id unique par noeud basée sur l'objet id()
    node_id = id(node)
    # Si c'est une feuille, le seul ensemble possible est celui donné par subset[node.idx-1]
    # Car idx est 1-based dans l'énoncé
    if node.type == 'leaf':
        s = subsets[node.idx - 1]
        # On renvoie un dict {ensemble: nombre_de_façons}
        # Ici, 1 façon pour le sous-ensemble défini, 0 pour les autres
        return {s: 1}
    else:
        # Calcul des distributions pour les sous-arbres gauche et droit
        left_dist = count_ways(node.left, subsets, memo)
        right_dist = count_ways(node.right, subsets, memo)

        # Pour le noeud actuel, on veut la distribution (ensemble -> nombre de façons)
        dist = {}
        # Pour chaque couple d'ensembles possibles encodés dans left_dist et right_dist
        # on calcule le résultat possible avec 'A','O','X'
        # puis on cumule le nombre de façons
        for sl, ways_l in left_dist.items():
            for sr, ways_r in right_dist.items():
                for op in ['A','O','X']:
                    res = set_operations(op, sl, sr)
                    dist[res] = dist.get(res, 0) + ways_l * ways_r
        return dist

def main():
    input_lines = sys.stdin.read().splitlines()
    idx = 0
    while True:
        if idx >= len(input_lines):
            break
        line = input_lines[idx].strip()
        if line == 'END':
            break
        # Parse tree
        parsed_tree, pos = parse_tree(line)
        idx += 1
        # Nombre N
        N = int(input_lines[idx].strip())
        idx += 1
        subsets = []
        for _ in range(N):
            bits = list(map(int, input_lines[idx].strip().split()))
            idx += 1
            s = 0
            for i, b in enumerate(bits):
                if b == 1:
                    s |= (1 << i)
            subsets.append(s)
        # Construire arbre d'objets
        root = build_tree(parsed_tree)
        # Calcul du nombre de façons d'obtenir l'ensemble complet {a,b,c,d}, soit 0b1111 = 15
        dist = count_ways(root, subsets, {})
        print(dist.get(15, 0))

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.20064200460910797
    2. '.' → logprob: -2.4506421089172363
    3. '<|end|>' → logprob: -2.8256421089172363
    4. '\' → logprob: -4.700642108917236
    5. 'newline' → logprob: -5.075642108917236
    6. 'import' → logprob: -5.075642108917236
    7. '
' → logprob: -5.700642108917236
    8. '' → logprob: -5.825642108917236
    9. '<|end|>' → logprob: -5.825642108917236
    10. '\r' → logprob: -6.200642108917236

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -9.007317567011341e-05
    2. '[' → logprob: -11.250089645385742
    3. '.import' → logprob: -11.625089645385742
    4. '.readline' → logprob: -11.750089645385742
    5. '```' → logprob: -11.750089645385742
    6. ' .' → logprob: -12.000089645385742
    7. '.
' → logprob: -12.500089645385742
    8. '.`' → logprob: -12.625089645385742
    9. '`.' → logprob: -12.875089645385742
    10. '.user' → logprob: -12.875089645385742

Token 5: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0507420301437378
    2. '_sys' → logprob: -1.5507420301437378
    3. '_trace' → logprob: -2.4257421493530273
    4. 'sys' → logprob: -2.9257421493530273
    5. 's' → logprob: -3.1757421493530273
    6. 'trace' → logprob: -3.5507421493530273
    7. '_set' → logprob: -3.6757421493530273
    8. 'attr' → logprob: -4.050742149353027
    9. '_default' → logprob: -4.175742149353027
    10. '_system' → logprob: -4.300742149353027

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0037562556099146605
    2. 'ursive' → logprob: -6.378756046295166
    3. 'limit' → logprob: -7.003756046295166
    4. 'ur' → logprob: -7.503756046295166
    5. 'urse' → logprob: -9.253756523132324
    6. 'urs' → logprob: -9.503756523132324
    7. '_limit' → logprob: -9.628756523132324
    8. 'ut' → logprob: -9.753756523132324
    9. 'u' → logprob: -10.003756523132324
    10. 't' → logprob: -10.128756523132324

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.4403606057167053
    2. 'limit' → logprob: -1.0653605461120605
    3. '_depth' → logprob: -4.5653605461120605
    4. 'depth' → logprob: -7.5653605461120605
    5. '_' → logprob: -8.315361022949219
    6. '_rate' → logprob: -10.065361022949219
    7. 'lim' → logprob: -10.190361022949219
    8. '_factor' → logprob: -10.440361022949219
    9. '(' → logprob: -10.565361022949219
    10. '_stack' → logprob: -10.690361022949219

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.735893965815194e-05
    2. '(
' → logprob: -11.750017166137695
    3. ' (' → logprob: -12.250017166137695
    4. '(

' → logprob: -12.875017166137695
    5. '(.' → logprob: -14.500017166137695
    6. '("("' → logprob: -14.625017166137695
    7. '((' → logprob: -15.125017166137695
    8. '```' → logprob: -15.500017166137695
    9. '('' → logprob: -16.000017166137695
    10. '(
' → logprob: -16.250017166137695

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6933116912841797
    2. '100' → logprob: -0.6933116912841797
    3. ' ' → logprob: -9.31831169128418
    4. '500' → logprob: -9.94331169128418
    5. '300' → logprob: -11.56831169128418
    6. '999' → logprob: -12.69331169128418
    7. '250' → logprob: -12.81831169128418
    8. '1' → logprob: -12.94331169128418
    9. '150' → logprob: -12.94331169128418
    10. '200' → logprob: -13.31831169128418

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005634739995002747
    2. '00' → logprob: -6.005634784698486
    3. '000' → logprob: -6.005634784698486
    4. '4' → logprob: -7.505634784698486
    5. '6' → logprob: -9.130634307861328
    6. '5' → logprob: -11.755634307861328
    7. '```' → logprob: -12.255634307861328
    8. ')' → logprob: -12.505634307861328
    9. '3' → logprob: -12.630634307861328
    10. '**' → logprob: -12.630634307861328

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00714417127892375
    2. '9' → logprob: -5.632143974304199
    3. '6' → logprob: -5.757143974304199
    4. '8' → logprob: -7.882143974304199
    5. '```' → logprob: -15.7571439743042
    6. ' ' → logprob: -16.507144927978516
    7. '(' → logprob: -17.132144927978516
    8. '5' → logprob: -17.757144927978516
    9. '``' → logprob: -18.257144927978516
    10. '999' → logprob: -18.382144927978516

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3663626305060461e-05
    2. '))' → logprob: -11.75001335144043
    3. ' )' → logprob: -12.12501335144043
    4. ')
' → logprob: -15.62501335144043
    5. ')))' → logprob: -16.75001335144043
    6. ')`' → logprob: -17.00001335144043
    7. ' ' → logprob: -17.25001335144043
    8. '）' → logprob: -18.12501335144043
    9. '`)' → logprob: -18.12501335144043
    10. '```' → logprob: -18.37501335144043

Token 13: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.47046515345573425
    2. '\' → logprob: -1.2204651832580566
    3. '\n' → logprob: -3.7204651832580566
    4. '
' → logprob: -4.220465183258057
    5. '```' → logprob: -4.220465183258057
    6. ')' → logprob: -5.220465183258057
    7. '`' → logprob: -5.470465183258057
    8. 'import' → logprob: -5.595465183258057
    9. '#' → logprob: -5.595465183258057
    10. '

' → logprob: -6.595465183258057

Token 14: ' Fonction' (ID: 189149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9330921173095703
    2. ' def' → logprob: -1.9330921173095703
    3. ' stack' → logprob: -2.4330921173095703
    4. 'stack' → logprob: -2.4330921173095703
    5. 'rec' → logprob: -2.5580921173095703
    6. 'd' → logprob: -2.9330921173095703
    7. ' sys' → logprob: -3.0580921173095703
    8. ' recursion' → logprob: -3.5580921173095703
    9. 'sys' → logprob: -4.43309211730957
    10. 'Rec' → logprob: -4.55809211730957

Token 15: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.45147985219955444
    2. ' def' → logprob: -1.3264799118041992
    3. ' de' → logprob: -2.451479911804199
    4. 'de' → logprob: -5.451479911804199
    5. ' ' → logprob: -5.826479911804199
    6. '_' → logprob: -6.826479911804199
    7. ' d' → logprob: -6.951479911804199
    8. ' ' → logprob: -7.326479911804199
    9. 'd' → logprob: -7.951479911804199
    10. ':' → logprob: -8.8264799118042

Token 16: ' parser' (ID: 14216)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.45582619309425354
    2. 'calcul' → logprob: -1.0808261632919312
    3. 'cal' → logprob: -4.580826282501221
    4. 'def' → logprob: -4.705826282501221
    5. 'factor' → logprob: -6.455826282501221
    6. ' compter' → logprob: -7.455826282501221
    7. ' la' → logprob: -7.580826282501221
    8. ' calc' → logprob: -7.705826282501221
    9. ' définir' → logprob: -7.955826282501221
    10. 'l' → logprob: -8.080825805664062

Token 17: ' l' (ID: 305)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20792311429977417
    2. ' def' → logprob: -1.957923173904419
    3. ')' → logprob: -3.582923173904419
    4. '(' → logprob: -5.08292293548584
    5. ' la' → logprob: -5.08292293548584
    6. ' le' → logprob: -6.70792293548584
    7. ' ' → logprob: -6.70792293548584
    8. ' )' → logprob: -7.20792293548584
    9. '_' → logprob: -7.33292293548584
    10. ':' → logprob: -7.33292293548584

Token 18: ''ar' (ID: 54307)
  Prédit: ''entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -1.0592613220214844
    2. 'a' → logprob: -1.1842613220214844
    3. 'e' → logprob: -1.4342613220214844
    4. 'es' → logprob: -2.9342613220214844
    5. ''' → logprob: -3.6842613220214844
    6. ''ex' → logprob: -4.184261322021484
    7. 'input' → logprob: -5.309261322021484
    8. ''ensemble' → logprob: -6.684261322021484
    9. 'ex' → logprob: -6.934261322021484
    10. ''import' → logprob: -6.934261322021484

Token 19: 'bre' (ID: 9945)
  Prédit: 'bre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bre' → logprob: -0.5944209694862366
    2. 'g' → logprob: -1.2194209098815918
    3. 'bo' → logprob: -2.469420909881592
    4. 'gs' → logprob: -3.719420909881592
    5. 'bres' → logprob: -3.844420909881592
    6. 'gv' → logprob: -4.719420909881592
    7. 'b' → logprob: -5.469420909881592
    8. 'gc' → logprob: -6.219420909881592
    9. 't' → logprob: -6.469420909881592
    10. '```' → logprob: -6.469420909881592

Token 20: ' depuis' (ID: 16277)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012202335521578789
    2. ' def' → logprob: -4.887202262878418
    3. 'de' → logprob: -6.012202262878418
    4. 'd' → logprob: -6.387202262878418
    5. ' de' → logprob: -8.512202262878418
    6. ':' → logprob: -9.137202262878418
    7. '\' → logprob: -10.512202262878418
    8. '#' → logprob: -10.512202262878418
    9. ':def' → logprob: -10.512202262878418
    10. '
' → logprob: -10.887202262878418

Token 21: ' la' (ID: 557)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.49588507413864136
    2. ' un' → logprob: -1.7458851337432861
    3. ' la' → logprob: -2.495885133743286
    4. 'une' → logprob: -2.620885133743286
    5. ' sys' → logprob: -4.370884895324707
    6. ' l' → logprob: -4.745884895324707
    7. ' stdin' → logprob: -4.745884895324707
    8. 'la' → logprob: -5.245884895324707
    9. ' le' → logprob: -5.245884895324707
    10. 'l' → logprob: -5.370884895324707

Token 22: ' chaîne' (ID: 89288)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.7472788095474243
    2. 'chaine' → logprob: -1.6222788095474243
    3. ' chaîne' → logprob: -2.6222786903381348
    4. 'texte' → logprob: -2.6222786903381348
    5. 'stdin' → logprob: -2.8722786903381348
    6. 'string' → logprob: -3.9972786903381348
    7. 'input' → logprob: -3.9972786903381348
    8. ' input' → logprob: -4.122278690338135
    9. ' stdin' → logprob: -4.122278690338135
    10. 'ligne' → logprob: -4.372278690338135

Token 23: ' d' (ID: 272)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7153747081756592
    2. 's' → logprob: -1.7153747081756592
    3. ' =' → logprob: -2.465374708175659
    4. 'd' → logprob: -3.340374708175659
    5. 'de' → logprob: -3.340374708175659
    6. ' :' → logprob: -3.965374708175659
    7. '\' → logprob: -3.965374708175659
    8. '```' → logprob: -3.965374708175659
    9. ',' → logprob: -4.215374946594238
    10. 'input' → logprob: -4.465374946594238

Token 24: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.48312264680862427
    2. 'entrée' → logprob: -0.9831226468086243
    3. 'ar' → logprob: -5.608122825622559
    4. 'entr' → logprob: -6.108122825622559
    5. ''ar' → logprob: -7.358122825622559
    6. 'input' → logprob: -7.608122825622559
    7. 'import' → logprob: -7.733122825622559
    8. ' entrée' → logprob: -7.983122825622559
    9. '’entrée' → logprob: -7.983122825622559
    10. 'entrada' → logprob: -9.233122825622559

Token 25: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12525132298469543
    2. '
' → logprob: -2.625251293182373
    3. '```' → logprob: -4.000251293182373
    4. 'd' → logprob: -4.375251293182373
    5. '\' → logprob: -5.000251293182373
    6. 'de' → logprob: -5.750251293182373
    7. ' def' → logprob: -6.125251293182373
    8. '#' → logprob: -7.625251293182373
    9. '\n' → logprob: -7.625251293182373
    10. ' 
' → logprob: -7.875251293182373

Token 26: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.350386295001954e-05
    2. 'de' → logprob: -10.500073432922363
    3. '```' → logprob: -10.875073432922363
    4. ' def' → logprob: -11.625073432922363
    5. '\' → logprob: -11.750073432922363
    6. 'd' → logprob: -12.250073432922363
    7. '
' → logprob: -12.375073432922363
    8. 'class' → logprob: -14.500073432922363
    9. 'dé' → logprob: -15.625073432922363
    10. ':def' → logprob: -15.625073432922363

Token 27: ' La' (ID: 3038)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013237995095551014
    2. ' def' → logprob: -4.513237953186035
    3. 'd' → logprob: -6.138237953186035
    4. 'de' → logprob: -11.013237953186035
    5. ' d' → logprob: -12.138237953186035
    6. 'class' → logprob: -13.138237953186035
    7. '#' → logprob: -13.263237953186035
    8. ' de' → logprob: -14.013237953186035
    9. '```' → logprob: -14.013237953186035
    10. 'dé' → logprob: -15.013237953186035

Token 28: ' structure' (ID: 8866)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06100441887974739
    2. ' def' → logprob: -2.936004400253296
    3. 'd' → logprob: -5.436004638671875
    4. 'f' → logprob: -7.686004638671875
    5. 'de' → logprob: -8.561004638671875
    6. ' d' → logprob: -8.686004638671875
    7. ' ' → logprob: -8.811004638671875
    8. ')' → logprob: -9.061004638671875
    9. 'e' → logprob: -9.061004638671875
    10. 'r' → logprob: -9.186004638671875

Token 29: ' est' (ID: 893)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.624119758605957
    2. 'de' → logprob: -1.499119758605957
    3. ' de' → logprob: -2.249119758605957
    4. 'd' → logprob: -2.499119758605957
    5. 'def' → logprob: -3.499119758605957
    6. ' d' → logprob: -4.999119758605957
    7. ' class' → logprob: -5.249119758605957
    8. '#' → logprob: -5.749119758605957
    9. ' =' → logprob: -5.999119758605957
    10. ':' → logprob: -6.874119758605957

Token 30: ' soit' (ID: 17293)
  Prédit: 'dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dict' → logprob: -1.3416773080825806
    2. ' une' → logprob: -2.216677188873291
    3. 'def' → logprob: -2.341677188873291
    4. ' un' → logprob: -2.341677188873291
    5. 'une' → logprob: -2.591677188873291
    6. 'd' → logprob: -2.591677188873291
    7. ' défin' → logprob: -3.591677188873291
    8. '{
' → logprob: -3.591677188873291
    9. '{' → logprob: -3.716677188873291
    10. '{'' → logprob: -3.716677188873291

Token 31: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.14161835610866547
    2. 'un' → logprob: -3.641618251800537
    3. 'None' → logprob: -3.641618251800537
    4. ' une' → logprob: -3.766618251800537
    5. ''un' → logprob: -3.891618251800537
    6. ' None' → logprob: -4.141618251800537
    7. '()' → logprob: -5.516618251800537
    8. 'une' → logprob: -5.516618251800537
    9. '(None' → logprob: -6.016618251800537
    10. ' (' → logprob: -6.266618251800537

Token 32: ' noe' (ID: 49921)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -1.0978078842163086
    2. ' entier' → logprob: -1.8478078842163086
    3. 'e' → logprob: -2.0978078842163086
    4. 'nombre' → logprob: -2.3478078842163086
    5. 'n' → logprob: -2.7228078842163086
    6. ' nombre' → logprob: -2.8478078842163086
    7. 'int' → logprob: -3.4728078842163086
    8. ''ent' → logprob: -3.5978078842163086
    9. ' noe' → logprob: -3.8478078842163086
    10. ' arbre' → logprob: -4.472807884216309

Token 33: 'ud' (ID: 527)
  Prédit: 'ud'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ud' → logprob: -0.0017720464384183288
    2. 'u' → logprob: -6.501771926879883
    3. 'd' → logprob: -8.751771926879883
    4. 'e' → logprob: -10.376771926879883
    5. '```' → logprob: -11.001771926879883
    6. 'ude' → logprob: -11.626771926879883
    7. 'uds' → logprob: -11.751771926879883
    8. '#' → logprob: -12.376771926879883
    9. 'uvre' → logprob: -12.751771926879883
    10. 'уд' → logprob: -12.751771926879883

Token 34: ' interne' (ID: 59673)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.742949903011322
    2. ' (' → logprob: -1.8679499626159668
    3. '(' → logprob: -2.242949962615967
    4. ' ' → logprob: -2.867949962615967
    5. ' ou' → logprob: -3.367949962615967
    6. ' =' → logprob: -3.617949962615967
    7. ' vide' → logprob: -3.867949962615967
    8. 'vide' → logprob: -3.992949962615967
    9. '{' → logprob: -4.117949962615967
    10. '(None' → logprob: -4.617949962615967

Token 35: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1035098284482956
    2. ' (' → logprob: -2.7285099029541016
    3. '(' → logprob: -4.478509902954102
    4. ' ,' → logprob: -4.978509902954102
    5. ' ' → logprob: -5.478509902954102
    6. '{' → logprob: -6.103509902954102
    7. ' soit' → logprob: -6.603509902954102
    8. ':' → logprob: -6.978509902954102
    9. ''' → logprob: -7.478509902954102
    10. ' avec' → logprob: -7.728509902954102

Token 36: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7060911655426025
    2. ''' → logprob: -1.2060911655426025
    3. ')' → logprob: -2.7060911655426025
    4. '{' → logprob: -2.8310911655426025
    5. ' (' → logprob: -4.581090927124023
    6. ' '('' → logprob: -4.706090927124023
    7. '"' → logprob: -4.831090927124023
    8. '(n' → logprob: -5.081090927124023
    9. ' ' → logprob: -5.206090927124023
    10. '[' → logprob: -5.456090927124023

Token 37: ' gauche' (ID: 58367)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2768634557723999
    2. '(' → logprob: -1.7768634557724
    3. 'n' → logprob: -4.4018635749816895
    4. ',' → logprob: -4.5268635749816895
    5. 'S' → logprob: -5.0268635749816895
    6. ''' → logprob: -5.2768635749816895
    7. '()' → logprob: -5.2768635749816895
    8. 'N' → logprob: -5.2768635749816895
    9. ' ' → logprob: -5.6518635749816895
    10. ' (' → logprob: -5.9018635749816895

Token 38: ' droite' (ID: 61428)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20729361474514008
    2. ',' → logprob: -1.7072936296463013
    3. ' )' → logprob: -5.707293510437012
    4. '),' → logprob: -6.957293510437012
    5. ' ,' → logprob: -7.707293510437012
    6. ' ' → logprob: -8.957293510437012
    7. '```' → logprob: -9.332293510437012
    8. ';' → logprob: -9.707293510437012
    9. '"' → logprob: -9.832293510437012
    10. ':' → logprob: -9.832293510437012

Token 39: ' )' (ID: 1546)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017339179292321205
    2. ' )' → logprob: -4.14233922958374
    3. '(' → logprob: -7.01733922958374
    4. ' ' → logprob: -9.392338752746582
    5. ' ' → logprob: -9.892338752746582
    6. '),' → logprob: -9.892338752746582
    7. '[' → logprob: -10.017338752746582
    8. ',' → logprob: -10.142338752746582
    9. '))' → logprob: -10.642338752746582
    10. '```' → logprob: -10.892338752746582

Token 40: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.039249539375305176
    2. ' )' → logprob: -3.4142494201660156
    3. '),' → logprob: -6.539249420166016
    4. '(' → logprob: -7.039249420166016
    5. '#' → logprob: -7.039249420166016
    6. ' ' → logprob: -7.414249420166016
    7. ',' → logprob: -7.414249420166016
    8. ' or' → logprob: -8.289249420166016
    9. '|' → logprob: -9.039249420166016
    10. 'def' → logprob: -9.164249420166016

Token 41: '#' (ID: 2)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3928842842578888
    2. ')' → logprob: -1.6428842544555664
    3. '#' → logprob: -3.3928842544555664
    4. '(' → logprob: -3.3928842544555664
    5. ' (' → logprob: -4.267884254455566
    6. ' ' → logprob: -4.642884254455566
    7. ' ,' → logprob: -4.892884254455566
    8. '),' → logprob: -5.017884254455566
    9. 'def' → logprob: -5.267884254455566
    10. ' )' → logprob: -5.392884254455566

Token 42: ' soit' (ID: 17293)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5588535070419312
    2. ')' → logprob: -1.3088535070419312
    3. 'def' → logprob: -2.5588536262512207
    4. ',' → logprob: -3.3088536262512207
    5. ' )' → logprob: -4.433853626251221
    6. ' ' → logprob: -4.933853626251221
    7. '(' → logprob: -5.058853626251221
    8. ' (' → logprob: -5.808853626251221
    9. '),' → logprob: -5.933853626251221
    10. ' def' → logprob: -6.058853626251221

Token 43: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.2666500508785248
    2. ' une' → logprob: -1.5166500806808472
    3. 'une' → logprob: -4.891650199890137
    4. 'un' → logprob: -5.016650199890137
    5. ' a' → logprob: -8.766650199890137
    6. 'a' → logprob: -9.016650199890137
    7. ' None' → logprob: -9.891650199890137
    8. ''un' → logprob: -10.141650199890137
    9. ' ' → logprob: -10.266650199890137
    10. ''une' → logprob: -11.141650199890137

Token 44: ' feuille' (ID: 129760)
  Prédit: 'fe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fe' → logprob: -0.5372413396835327
    2. ' feuille' → logprob: -1.2872413396835327
    3. 'val' → logprob: -2.4122414588928223
    4. 'leaf' → logprob: -4.162241458892822
    5. ' valeur' → logprob: -4.787241458892822
    6. ' ' → logprob: -5.162241458892822
    7. ' leaf' → logprob: -6.037241458892822
    8. 'variable' → logprob: -6.537241458892822
    9. '   ' → logprob: -6.724741458892822
    10. ' variable' → logprob: -6.787241458892822

Token 45: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3238770067691803
    2. '(' → logprob: -1.448876976966858
    3. ':' → logprob: -4.073876857757568
    4. ' :' → logprob: -5.323876857757568
    5. ' ' → logprob: -5.573876857757568
    6. ',' → logprob: -5.698876857757568
    7. ')' → logprob: -6.073876857757568
    8. 'def' → logprob: -6.198876857757568
    9. '(
' → logprob: -6.448876857757568
    10. 's' → logprob: -7.073876857757568

Token 46: 'un' (ID: 373)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.5569716691970825
    2. ')' → logprob: -2.056971549987793
    3. '0' → logprob: -2.306971549987793
    4. ' ' → logprob: -2.681971549987793
    5. '-' → logprob: -3.056971549987793
    6. '[' → logprob: -3.181971549987793
    7. '"' → logprob: -3.431971549987793
    8. ''un' → logprob: -3.431971549987793
    9. ' )' → logprob: -3.431971549987793
    10. 'a' → logprob: -3.556971549987793

Token 47: ' entier' (ID: 80473)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8284064531326294
    2. 'ent' → logprob: -1.5784064531326294
    3. ' entier' → logprob: -1.9534064531326294
    4. 'nombre' → logprob: -2.45340633392334
    5. ' nombre' → logprob: -2.70340633392334
    6. ' ' → logprob: -3.95340633392334
    7. 'int' → logprob: -4.32840633392334
    8. ' int' → logprob: -5.20340633392334
    9. ' )' → logprob: -5.57840633392334
    10. ')' → logprob: -5.82840633392334

Token 48: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016132788732647896
    2. ' )' → logprob: -4.141132831573486
    3. ',' → logprob: -10.266132354736328
    4. '')' → logprob: -11.141132354736328
    5. ' ' → logprob: -11.516132354736328
    6. ' ' → logprob: -11.516132354736328
    7. '))' → logprob: -12.266132354736328
    8. ' ,' → logprob: -12.891132354736328
    9. '),' → logprob: -13.516132354736328
    10. '0' → logprob: -13.516132354736328

Token 49: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00037466554204002023
    2. 'd' → logprob: -8.500374794006348
    3. '
' → logprob: -8.875374794006348
    4. 'de' → logprob: -10.875374794006348
    5. '```' → logprob: -12.250374794006348
    6. '\' → logprob: -12.625374794006348
    7. 'class' → logprob: -12.750374794006348
    8. '#' → logprob: -15.000374794006348
    9. ' def' → logprob: -15.250374794006348
    10. ' 
' → logprob: -15.375374794006348

Token 50: ' On' (ID: 2160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0008667988586239517
    2. 'd' → logprob: -7.625866889953613
    3. ' def' → logprob: -8.125866889953613
    4. 'de' → logprob: -10.375866889953613
    5. '
' → logprob: -10.500866889953613
    6. '#' → logprob: -11.750866889953613
    7. ' 
' → logprob: -11.875866889953613
    8. 'class' → logprob: -12.500866889953613
    9. '```' → logprob: -13.250866889953613
    10. '\' → logprob: -13.500866889953613

Token 51: ' ren' (ID: 5427)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.33229878544807434
    2. ' def' → logprob: -1.332298755645752
    3. 'd' → logprob: -4.457298755645752
    4. ' d' → logprob: -5.457298755645752
    5. ' ' → logprob: -6.457298755645752
    6. ' de' → logprob: -8.08229923248291
    7. 'de' → logprob: -8.45729923248291
    8. ' déf' → logprob: -8.83229923248291
    9. '_' → logprob: -9.08229923248291
    10. 'import' → logprob: -9.45729923248291

Token 52: 'voie' (ID: 70072)
  Prédit: 'voie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'voie' → logprob: -0.009810983203351498
    2. 't' → logprob: -5.009810924530029
    3. 'v' → logprob: -6.259810924530029
    4. 'voit' → logprob: -7.009810924530029
    5. 'voi' → logprob: -9.759811401367188
    6. 'voy' → logprob: -9.884811401367188
    7. 'tre' → logprob: -10.134811401367188
    8. 'vo' → logprob: -10.384811401367188
    9. 'e' → logprob: -10.509811401367188
    10. 'omme' → logprob: -11.384811401367188

Token 53: ' (' (ID: 350)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.29548054933547974
    2. ' l' → logprob: -2.045480489730835
    3. ' None' → logprob: -2.920480489730835
    4. ' une' → logprob: -3.670480489730835
    5. ' le' → logprob: -4.170480728149414
    6. ' ' → logprob: -4.670480728149414
    7. ' un' → logprob: -4.920480728149414
    8. ' lambda' → logprob: -5.170480728149414
    9. 'None' → logprob: -6.295480728149414
    10. ' ' → logprob: -6.795480728149414

Token 54: 'ar' (ID: 277)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.693821907043457
    2. 'value' → logprob: -2.193821907043457
    3. ' node' → logprob: -2.568821907043457
    4. 'lambda' → logprob: -3.068821907043457
    5. 'tree' → logprob: -3.193821907043457
    6. 'l' → logprob: -3.443821907043457
    7. 'val' → logprob: -3.568821907043457
    8. 'None' → logprob: -4.193821907043457
    9. ' arbre' → logprob: -4.193821907043457
    10. ' value' → logprob: -4.318821907043457

Token 55: 'bre' (ID: 9945)
  Prédit: 'bre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bre' → logprob: -0.012760141864418983
    2. 'b' → logprob: -4.387760162353516
    3. 'br' → logprob: -9.262760162353516
    4. 'bo' → logprob: -9.887760162353516
    5. 'bres' → logprob: -10.512760162353516
    6. 'e' → logprob: -10.762760162353516
    7. 'be' → logprob: -11.762760162353516
    8. 'bor' → logprob: -12.387760162353516
    9. '```' → logprob: -12.387760162353516
    10. 'vore' → logprob: -12.387760162353516

Token 56: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005637573776766658
    2. ')' → logprob: -7.750563621520996
    3. ',)' → logprob: -9.375563621520996
    4. '),' → logprob: -11.125563621520996
    5. ' ,' → logprob: -11.125563621520996
    6. 'ar' → logprob: -12.375563621520996
    7. ',),' → logprob: -13.250563621520996
    8. ',None' → logprob: -13.375563621520996
    9. '```' → logprob: -13.500563621520996
    10. ',node' → logprob: -14.375563621520996

Token 57: ' position' (ID: 4010)
  Prédit: ' index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.587124764919281
    2. ' reste' → logprob: -1.8371248245239258
    3. ' pos' → logprob: -2.212124824523926
    4. 'index' → logprob: -3.087124824523926
    5. 'reste' → logprob: -3.587124824523926
    6. ' rest' → logprob: -3.587124824523926
    7. 'pos' → logprob: -3.712124824523926
    8. 'rest' → logprob: -4.337124824523926
    9. ' idx' → logprob: -4.587124824523926
    10. ' position' → logprob: -4.962124824523926

Token 58: '_fin' (ID: 95242)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004590568598359823
    2. ' )' → logprob: -6.0045905113220215
    3. '+' → logprob: -6.7545905113220215
    4. ' +' → logprob: -7.7545905113220215
    5. ',' → logprob: -9.25459098815918
    6. '_parse' → logprob: -9.62959098815918
    7. '_parser' → logprob: -9.62959098815918
    8. '_par' → logprob: -9.87959098815918
    9. '),' → logprob: -10.00459098815918
    10. '_)' → logprob: -10.25459098815918

Token 59: '_parse' (ID: 51194)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005818653153255582
    2. ' )' → logprob: -7.625581741333008
    3. '_' → logprob: -10.750581741333008
    4. '_)' → logprob: -10.875581741333008
    5. ',' → logprob: -11.125581741333008
    6. '),' → logprob: -11.500581741333008
    7. '):' → logprob: -11.625581741333008
    8. '_par' → logprob: -12.125581741333008
    9. '_parser' → logprob: -13.000581741333008
    10. '_parse' → logprob: -13.000581741333008

Token 60: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00034809779026545584
    2. ' )' → logprob: -8.500348091125488
    3. ',' → logprob: -9.500348091125488
    4. '_' → logprob: -9.875348091125488
    5. '):' → logprob: -12.750348091125488
    6. ' ' → logprob: -12.875348091125488
    7. ' ' → logprob: -13.250348091125488
    8. '),' → logprob: -13.250348091125488
    9. '_)' → logprob: -13.500348091125488
    10. '))' → logprob: -13.875348091125488

Token 61: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.024036593735218048
    2. '
' → logprob: -3.7740366458892822
    3. 'de' → logprob: -8.024036407470703
    4. ' def' → logprob: -8.149036407470703
    5. 'd' → logprob: -9.149036407470703
    6. ' 
' → logprob: -10.774036407470703
    7. '

' → logprob: -11.149036407470703
    8. '\' → logprob: -11.774036407470703
    9. '```' → logprob: -11.774036407470703
    10. '#' → logprob: -12.274036407470703

Token 62: ' parse' (ID: 8420)
  Prédit: ' parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.0042131440714001656
    2. ' parser' → logprob: -5.504213333129883
    3. 'parse' → logprob: -9.629213333129883
    4. '_parse' → logprob: -10.254213333129883
    5. ' ' → logprob: -11.129213333129883
    6. '	parse' → logprob: -12.004213333129883
    7. '_parser' → logprob: -12.754213333129883
    8. '  ' → logprob: -13.004213333129883
    9. ' ' → logprob: -13.754213333129883
    10. 'Parser' → logprob: -13.754213333129883

Token 63: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.16124123334884644
    2. '_ar' → logprob: -2.786241292953491
    3. '(' → logprob: -2.911241292953491
    4. '(tree' → logprob: -3.661241292953491
    5. '(ar' → logprob: -6.536241054534912
    6. '_node' → logprob: -6.661241054534912
    7. ' arbre' → logprob: -6.661241054534912
    8. '_' → logprob: -7.036241054534912
    9. '_t' → logprob: -7.786241054534912
    10. 'tree' → logprob: -8.16124153137207

Token 64: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2613363265991211
    2. '(s' → logprob: -1.761336326599121
    3. '(input' → logprob: -3.261336326599121
    4. '(text' → logprob: -5.011336326599121
    5. '(tree' → logprob: -5.136336326599121
    6. '(code' → logprob: -5.886336326599121
    7. '(line' → logprob: -5.886336326599121
    8. '(data' → logprob: -7.261336326599121
    9. '(string' → logprob: -8.761336326599121
    10. '(ss' → logprob: -8.886336326599121

Token 65: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.610702363715973e-06
    2. ',index' → logprob: -12.500009536743164
    3. ' ,' → logprob: -12.875009536743164
    4. ',i' → logprob: -14.000009536743164
    5. ',pos' → logprob: -14.625009536743164
    6. '):' → logprob: -14.875009536743164
    7. ',s' → logprob: -14.875009536743164
    8. ':' → logprob: -15.250009536743164
    9. ',start' → logprob: -15.250009536743164
    10. ',n' → logprob: -15.375009536743164

Token 66: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.4781777262687683
    2. 'pos' → logprob: -0.9781777262687683
    3. ' i' → logprob: -6.353177547454834
    4. 'i' → logprob: -7.228177547454834
    5. ' index' → logprob: -7.353177547454834
    6. 'index' → logprob: -7.978177547454834
    7. ' start' → logprob: -8.103178024291992
    8. 'start' → logprob: -8.853178024291992
    9. ' idx' → logprob: -8.978178024291992
    10. 'idx' → logprob: -10.728178024291992

Token 67: '=' (ID: 28)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0033049776684492826
    2. ')' → logprob: -5.753304958343506
    3. ':' → logprob: -9.753305435180664
    4. ' ):' → logprob: -10.378305435180664
    5. '=' → logprob: -10.878305435180664
    6. '):
' → logprob: -11.003305435180664
    7. ',' → logprob: -14.503305435180664
    8. '):
' → logprob: -14.628305435180664
    9. '+' → logprob: -14.753305435180664
    10. '):

' → logprob: -15.253305435180664

Token 68: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00021843716967850924
    2. ' ' → logprob: -8.625218391418457
    3. '1' → logprob: -10.250218391418457
    4. ')' → logprob: -13.000218391418457
    5. '2' → logprob: -14.000218391418457
    6. '   ' → logprob: -15.875218391418457
    7. '  ' → logprob: -17.125219345092773
    8. ' )' → logprob: -17.187719345092773
    9. '=' → logprob: -17.250219345092773
    10. '۰' → logprob: -17.437719345092773

Token 69: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0017437237547710538
    2. ')' → logprob: -6.376743793487549
    3. '):
' → logprob: -11.00174331665039
    4. ' ):' → logprob: -11.25174331665039
    5. ':' → logprob: -11.50174331665039
    6. ',' → logprob: -13.62674331665039
    7. '):
' → logprob: -16.25174331665039
    8. '):

' → logprob: -16.25174331665039
    9. ' ' → logprob: -16.50174331665039
    10. ')：' → logprob: -16.62674331665039

Token 70: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.49079716205596924
    2. ' ' → logprob: -1.8657971620559692
    3. ' :' → logprob: -2.1157970428466797
    4. '   ' → logprob: -2.7407970428466797
    5. ',' → logprob: -3.9907970428466797
    6. '  ' → logprob: -4.61579704284668
    7. ' if' → logprob: -5.11579704284668
    8. '):' → logprob: -5.49079704284668
    9. ' ,' → logprob: -5.86579704284668
    10. 'if' → logprob: -6.61579704284668

Token 71: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1345285326242447
    2. ' if' → logprob: -2.134528636932373
    3. '   ' → logprob: -5.259528636932373
    4. 's' → logprob: -6.884528636932373
    5. '  ' → logprob: -7.384528636932373
    6. ' ' → logprob: -9.009528160095215
    7. '#' (adapté à ' #') → logprob: -9.009528160095215
    8. '    ' → logprob: -9.134528160095215
    9. 'while' → logprob: -9.259528160095215
    10. ' while' → logprob: -9.509528160095215

Token 72: ' Ignore' (ID: 84342)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06561987847089767
    2. ' if' → logprob: -2.815619945526123
    3. '   ' → logprob: -6.065619945526123
    4. 'n' → logprob: -7.940619945526123
    5. 's' → logprob: -8.315619468688965
    6. 'while' → logprob: -8.315619468688965
    7. '  ' → logprob: -8.440619468688965
    8. ' while' → logprob: -9.940619468688965
    9. ' ' → logprob: -9.940619468688965
    10. '#' → logprob: -10.190619468688965

Token 73: ' les' (ID: 1341)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.4201807975769043
    2. ' ' → logprob: -1.9201807975769043
    3. 'while' → logprob: -1.9201807975769043
    4. '  ' → logprob: -3.5451807975769043
    5. '<|end|>' → logprob: -5.045180797576904
    6. '   ' → logprob: -5.295180797576904
    7. 's' → logprob: -5.420180797576904
    8. '	while' → logprob: -6.420180797576904
    9. '    ' → logprob: -7.170180797576904
    10. ' )' → logprob: -7.420180797576904

Token 74: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.0025798205751925707
    2. 'es' → logprob: -7.002579689025879
    3. 'esp' → logprob: -7.377579689025879
    4. ' spaces' → logprob: -8.002579689025879
    5. 'spaces' → logprob: -8.627579689025879
    6. ' espace' → logprob: -8.877579689025879
    7. ' espacios' → logprob: -8.877579689025879
    8. ' ' → logprob: -9.252579689025879
    9. ' espaços' → logprob: -10.002579689025879
    10. ''esp' → logprob: -10.252579689025879

Token 75: '
' (ID: 198)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.24066446721553802
    2. 'while' → logprob: -1.7406644821166992
    3. ' ' → logprob: -3.740664482116699
    4. '   ' → logprob: -5.115664482116699
    5. '	while' → logprob: -5.365664482116699
    6. '  ' → logprob: -6.865664482116699
    7. 's' → logprob: -7.365664482116699
    8. ',' → logprob: -7.365664482116699
    9. '<|end|>' → logprob: -7.615664482116699
    10. ' ,' → logprob: -7.990664482116699

Token 76: '   ' (ID: 271)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.4197373688220978
    2. 'while' → logprob: -1.1697373390197754
    3. '   ' → logprob: -4.044737339019775
    4. ' ' → logprob: -4.544737339019775
    5. '	while' → logprob: -6.419737339019775
    6. '  ' → logprob: -6.544737339019775
    7. '<|end|>' → logprob: -8.419737815856934
    8. 's' → logprob: -8.419737815856934
    9. '   
' → logprob: -8.544737815856934
    10. '    ' → logprob: -8.919737815856934

Token 77: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.6947454214096069
    2. 'while' (adapté à ' while') → logprob: -0.6947454214096069
    3. '   ' → logprob: -6.8197455406188965
    4. '	while' → logprob: -7.6947455406188965
    5. '  ' → logprob: -10.069745063781738
    6. ' ' → logprob: -13.444745063781738
    7. '    ' → logprob: -13.944745063781738
    8. 'if' → logprob: -13.944745063781738
    9. 'While' → logprob: -13.944745063781738
    10. '<|end|>' → logprob: -13.944745063781738

Token 78: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.022475533187389374
    2. 'pos' → logprob: -3.897475481033325
    3. ' s' → logprob: -6.397475719451904
    4. 's' → logprob: -8.522475242614746
    5. ' ' → logprob: -10.147475242614746
    6. '	pos' → logprob: -10.897475242614746
    7. '  ' → logprob: -12.397475242614746
    8. ' ' → logprob: -12.897475242614746
    9. '(pos' → logprob: -13.897475242614746
    10. '   ' → logprob: -14.522475242614746

Token 79: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.00865853950381279
    2. '<' → logprob: -4.883658409118652
    3. '<len' → logprob: -7.258658409118652
    4. ' ' → logprob: -8.258658409118652
    5. '<|end|>' → logprob: -9.883658409118652
    6. '[' → logprob: -11.883658409118652
    7. 's' → logprob: -12.633658409118652
    8. '<n' → logprob: -13.008658409118652
    9. '<char' → logprob: -13.133658409118652
    10. ' <",' → logprob: -13.133658409118652

Token 80: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.47408074140548706
    2. 'len' → logprob: -0.9740807414054871
    3. '	len' → logprob: -13.599081039428711
    4. '=len' → logprob: -13.599081039428711
    5. '(len' → logprob: -14.599081039428711
    6. '<len' → logprob: -14.724081039428711
    7. ' ' → logprob: -15.849081039428711
    8. '[len' → logprob: -16.22408103942871
    9. '<|end|>' → logprob: -16.59908103942871
    10. ',len' → logprob: -16.97408103942871

Token 81: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0023603097070008516
    2. 's' → logprob: -6.1273603439331055
    3. ' s' → logprob: -9.002360343933105
    4. '(' → logprob: -9.877360343933105
    5. ')' → logprob: -14.752360343933105
    6. ' (' → logprob: -15.502360343933105
    7. ' ' → logprob: -16.37735939025879
    8. ')s' → logprob: -17.00235939025879
    9. '_s' → logprob: -17.12735939025879
    10. ' )' → logprob: -18.12735939025879

Token 82: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016706573078408837
    2. ' )' → logprob: -7.376670837402344
    3. ' and' → logprob: -7.501670837402344
    4. 'and' → logprob: -7.626670837402344
    5. 's' → logprob: -12.876670837402344
    6. ' ' → logprob: -14.376670837402344
    7. '   ' → logprob: -15.126670837402344
    8. '`)' → logprob: -16.001670837402344
    9. ')s' → logprob: -16.001670837402344
    10. '）' → logprob: -16.126670837402344

Token 83: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0031850787345319986
    2. 'and' → logprob: -5.753185272216797
    3. ' ' → logprob: -11.878185272216797
    4. ' ' → logprob: -15.878185272216797
    5. ' et' → logprob: -16.003185272216797
    6. ' и' → logprob: -16.753185272216797
    7. '	and' → logprob: -17.003185272216797
    8. ' if' → logprob: -17.503185272216797
    9. ' a' → logprob: -17.753185272216797
    10. 's' → logprob: -17.878185272216797

Token 84: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.029751643538475037
    2. 's' → logprob: -3.5297515392303467
    3. '(s' → logprob: -14.779751777648926
    4. ' ' → logprob: -14.779751777648926
    5. ' ' → logprob: -15.154751777648926
    6. '	s' → logprob: -16.27975082397461
    7. ' (' → logprob: -17.02975082397461
    8. '  ' → logprob: -17.90475082397461
    9. '```' → logprob: -17.90475082397461
    10. 'ss' → logprob: -18.27975082397461

Token 85: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.00016468366084154695
    2. '[' → logprob: -8.750164985656738
    3. ' [' → logprob: -12.500164985656738
    4. '[s' → logprob: -13.750164985656738
    5. 'pos' → logprob: -14.500164985656738
    6. '[position' → logprob: -15.625164985656738
    7. '[
' → logprob: -15.875164985656738
    8. 's' → logprob: -16.000164031982422
    9. '[int' → logprob: -16.000164031982422
    10. '[p' → logprob: -16.750164031982422

Token 86: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12125930935144424
    2. '=='' → logprob: -2.8712592124938965
    3. ' =='' → logprob: -3.2462592124938965
    4. ' in' → logprob: -4.4962592124938965
    5. '==' → logprob: -5.6212592124938965
    6. 'iss' → logprob: -7.1212592124938965
    7. ' ' → logprob: -7.3712592124938965
    8. '.' → logprob: -7.3712592124938965
    9. ']=='' → logprob: -7.8712592124938965
    10. ' '' → logprob: -7.8712592124938965

Token 87: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12768013775348663
    2. ' =='' → logprob: -2.6276800632476807
    3. ' in' → logprob: -3.5026800632476807
    4. ' ' → logprob: -4.62768030166626
    5. '=='' → logprob: -5.75268030166626
    6. '.' → logprob: -5.87768030166626
    7. ' =="' → logprob: -7.37768030166626
    8. 'iss' → logprob: -7.50268030166626
    9. ' '' → logprob: -8.377679824829102
    10. '==' → logprob: -8.752679824829102

Token 88: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.01828608103096485
    2. ' '' → logprob: -4.018286228179932
    3. ' ' → logprob: -9.393285751342773
    4. '"' → logprob: -9.893285751342773
    5. ''s' → logprob: -14.268285751342773
    6. '32' → logprob: -14.268285751342773
    7. '  ' → logprob: -14.768285751342773
    8. ' "' → logprob: -15.268285751342773
    9. 'space' → logprob: -15.768285751342773
    10. ''espace' → logprob: -15.768285751342773

Token 89: ' '' (ID: 461)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2907579243183136
    2. ' '' → logprob: -1.6657578945159912
    3. ''' → logprob: -2.915757894515991
    4. ' )' → logprob: -5.66575813293457
    5. ' ):' → logprob: -5.91575813293457
    6. '<|end|>' → logprob: -7.54075813293457
    7. ' ')' → logprob: -7.66575813293457
    8. ''s' → logprob: -7.79075813293457
    9. ' "' → logprob: -7.91575813293457
    10. ' :' → logprob: -8.54075813293457

Token 90: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015384310390800238
    2. ':
' → logprob: -6.501538276672363
    3. ',' → logprob: -11.126538276672363
    4. ' :' → logprob: -11.501538276672363
    5. '):' → logprob: -12.376538276672363
    6. '   ' → logprob: -12.626538276672363
    7. '):
' → logprob: -13.501538276672363
    8. 'pos' → logprob: -14.626538276672363
    9. '       ' → logprob: -15.001538276672363
    10. ' :
' → logprob: -15.376538276672363

Token 91: '       ' (ID: 309)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.2299089878797531
    2. ' pos' → logprob: -2.1049089431762695
    3. '   ' → logprob: -2.6049089431762695
    4. '       ' → logprob: -4.9799089431762695
    5. '	pos' → logprob: -5.9799089431762695
    6. '_pos' → logprob: -9.85490894317627
    7. ',pos' → logprob: -10.10490894317627
    8. '	   ' → logprob: -10.85490894317627
    9. '    ' → logprob: -10.97990894317627
    10. '<|end|>' → logprob: -11.35490894317627

Token 92: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -4.842555426876061e-06
    2. ' pos' → logprob: -12.250004768371582
    3. '	pos' → logprob: -17.8750057220459
    4. '   ' → logprob: -18.6250057220459
    5. '_pos' → logprob: -20.7500057220459
    6. 'position' → logprob: -21.1250057220459
    7. 'posit' → logprob: -21.2500057220459
    8. '       ' → logprob: -22.1250057220459
    9. 'p' → logprob: -22.7500057220459
    10. 'Pos' → logprob: -23.1250057220459

Token 93: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00043686782009899616
    2. ' +=' → logprob: -8.000436782836914
    3. '+' → logprob: -9.250436782836914
    4. '=' → logprob: -12.375436782836914
    5. '+='' → logprob: -14.500436782836914
    6. ']+=' → logprob: -14.875436782836914
    7. '+="' → logprob: -15.125436782836914
    8. '+=(' → logprob: -17.750436782836914
    9. '++' → logprob: -17.875436782836914
    10. '   ' → logprob: -19.125436782836914

Token 94: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '۱' → logprob: -22.750003814697266
    4. '１' → logprob: -22.875003814697266
    5. '```' → logprob: -23.500003814697266
    6. '१' → logprob: -23.875003814697266
    7. '১' → logprob: -23.875003814697266
    8. '<|end|>' → logprob: -24.000003814697266
    9. '   ' → logprob: -24.500003814697266
    10. '  ' → logprob: -25.125003814697266

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '```' → logprob: -20.6250057220459
    4. '۱' → logprob: -21.3750057220459
    5. '１' → logprob: -21.7500057220459
    6. '১' → logprob: -21.8125057220459
    7. '  ' → logprob: -22.0000057220459
    8. '१' → logprob: -22.1250057220459
    9. '   ' → logprob: -22.1875057220459
    10. ''' → logprob: -22.5000057220459

Token 96: '
' (ID: 198)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.37271803617477417
    2. 'if' → logprob: -1.247718095779419
    3. '   ' → logprob: -3.997718095779419
    4. ' if' → logprob: -6.24771785736084
    5. ' ' → logprob: -6.37271785736084
    6. '#' → logprob: -7.12271785736084
    7. ' i' → logprob: -8.49771785736084
    8. '    
' → logprob: -8.62271785736084
    9. '  ' → logprob: -8.87271785736084
    10. 'If' → logprob: -9.24771785736084

Token 97: '   ' (ID: 271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07119016349315643
    2. 'if' → logprob: -2.696190118789673
    3. 'I' → logprob: -7.571190357208252
    4. '#' → logprob: -8.071189880371094
    5. '   ' → logprob: -9.071189880371094
    6. '```' → logprob: -9.071189880371094
    7. 'If' → logprob: -9.946189880371094
    8. ' ' → logprob: -9.946189880371094
    9. ' if' → logprob: -10.196189880371094
    10. ' i' → logprob: -11.446189880371094

Token 98: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2525394558906555
    2. 'i' → logprob: -1.5025393962860107
    3. '#' (adapté à ' #') → logprob: -7.87753963470459
    4. 'If' → logprob: -9.62753963470459
    5. 'I' → logprob: -9.87753963470459
    6. ' if' → logprob: -10.00253963470459
    7. '   ' → logprob: -10.50253963470459
    8. '```' → logprob: -11.25253963470459
    9. ' ' → logprob: -11.50253963470459
    10. 'e' → logprob: -12.75253963470459

Token 99: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00034964739461429417
    2. 'i' → logprob: -8.250349998474121
    3. '#' → logprob: -10.500349998474121
    4. ' if' → logprob: -10.875349998474121
    5. '   ' → logprob: -10.875349998474121
    6. 'If' → logprob: -11.250349998474121
    7. '(' → logprob: -13.125349998474121
    8. '```' → logprob: -13.250349998474121
    9. 'I' → logprob: -13.375349998474121
    10. 'return' → logprob: -14.250349998474121

Token 100: ' c' (ID: 274)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.12883998453617096
    2. 's' → logprob: -2.5038399696350098
    3. ' pos' → logprob: -3.6288399696350098
    4. ' s' → logprob: -4.37883996963501
    5. '	pos' → logprob: -12.128840446472168
    6. '(pos' → logprob: -12.253840446472168
    7. 'not' → logprob: -12.941340446472168
    8. 'p' → logprob: -13.191340446472168
    9. 'position' → logprob: -13.316340446472168
    10. ' not' → logprob: -13.316340446472168

Token 101: ''est' (ID: 6616)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.32089266180992126
    2. '(s' → logprob: -1.4458926916122437
    3. 'pos' → logprob: -4.195892810821533
    4. ' s' → logprob: -4.945892810821533
    5. ''s' → logprob: -5.070892810821533
    6. '==' → logprob: -5.570892810821533
    7. '(pos' → logprob: -6.570892810821533
    8. 'e' → logprob: -7.070892810821533
    9. '[pos' → logprob: -7.320892810821533
    10. ''est' → logprob: -7.570892810821533

Token 102: ' une' (ID: 2463)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11738763749599457
    2. ''' → logprob: -2.742387533187866
    3. ''un' → logprob: -3.367387533187866
    4. 'un' → logprob: -4.867387771606445
    5. ''s' → logprob: -6.492387771606445
    6. 's' → logprob: -6.742387771606445
    7. ''une' → logprob: -6.992387771606445
    8. ' (' → logprob: -9.367387771606445
    9. 'd' → logprob: -9.617387771606445
    10. 'ch' → logprob: -9.742387771606445

Token 103: ' feuille' (ID: 129760)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17274945974349976
    2. 'ch' → logprob: -2.0477495193481445
    3. 'digit' → logprob: -4.1727495193481445
    4. '('' → logprob: -4.6727495193481445
    5. 'parent' → logprob: -6.0477495193481445
    6. ')' → logprob: -7.2977495193481445
    7. '(
' → logprob: -7.6727495193481445
    8. 'fe' → logprob: -8.047749519348145
    9. ''' → logprob: -8.297749519348145
    10. '')' → logprob: -9.047749519348145

Token 104: ' (' (ID: 350)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.353624939918518
    2. ':' → logprob: -1.478624939918518
    3. ',' → logprob: -1.978624939918518
    4. ' ' → logprob: -1.978624939918518
    5. 'i' → logprob: -2.6036248207092285
    6. 'if' → logprob: -3.1036248207092285
    7. '   ' → logprob: -3.4786248207092285
    8. 't' → logprob: -3.8536248207092285
    9. ' if' → logprob: -4.1036248207092285
    10. '-' → logprob: -4.4786248207092285

Token 105: 'un' (ID: 373)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8308740258216858
    2. '-' → logprob: -1.080873966217041
    3. '012' → logprob: -1.955873966217041
    4. 'isdigit' → logprob: -3.580873966217041
    5. ''-' → logprob: -4.080873966217041
    6. '0' → logprob: -4.580873966217041
    7. '123' → logprob: -5.205873966217041
    8. 'if' → logprob: -5.580873966217041
    9. ' s' → logprob: -5.580873966217041
    10. ')' → logprob: -5.830873966217041

Token 106: ' chiffre' (ID: 107420)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.3201753497123718
    2. 'ch' → logprob: -1.3201754093170166
    3. 'd' → logprob: -5.4451751708984375
    4. 'c' → logprob: -6.8201751708984375
    5. 'nombre' → logprob: -8.195175170898438
    6. '0' → logprob: -8.195175170898438
    7. ' chiffre' → logprob: -8.320175170898438
    8. '-' → logprob: -8.445175170898438
    9. 'char' → logprob: -8.695175170898438
    10. 'dig' → logprob: -10.445175170898438

Token 107: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4197193682193756
    2. 'if' → logprob: -1.2947193384170532
    3. ' or' → logprob: -3.2947194576263428
    4. ' if' → logprob: -4.044719219207764
    5. '):' → logprob: -5.294719219207764
    6. ',' → logprob: -5.919719219207764
    7. ':' → logprob: -6.419719219207764
    8. '   ' → logprob: -6.669719219207764
    9. ' and' → logprob: -7.169719219207764
    10. 'or' → logprob: -7.294719219207764

Token 108: ' on' (ID: 402)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.9183746576309204
    2. 'start' → logprob: -1.2933746576309204
    3. 'num' → logprob: -2.418374538421631
    4. ' if' → logprob: -2.668374538421631
    5. ' num' → logprob: -2.918374538421631
    6. '   ' → logprob: -3.668374538421631
    7. 'if' → logprob: -4.043374538421631
    8. ' i' → logprob: -4.168374538421631
    9. 'end' → logprob: -4.668374538421631
    10. 'i' → logprob: -4.793374538421631

Token 109: ' le' (ID: 505)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -1.1684380769729614
    2. 'return' → logprob: -2.543437957763672
    3. 'digits' → logprob: -2.543437957763672
    4. 'digit' → logprob: -2.668437957763672
    5. '#' → logprob: -3.043437957763672
    6. 'if' → logprob: -3.168437957763672
    7. 'def' → logprob: -3.168437957763672
    8. '   ' → logprob: -3.293437957763672
    9. ':' → logprob: -3.418437957763672
    10. 'd' → logprob: -3.793437957763672

Token 110: ' lit' (ID: 11980)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -1.1574702262878418
    2. 'parse' → logprob: -1.6574702262878418
    3. 'def' → logprob: -2.907470226287842
    4. 'ind' → logprob: -3.032470226287842
    5. 'read' → logprob: -3.282470226287842
    6. 'return' → logprob: -3.282470226287842
    7. 'par' → logprob: -3.282470226287842
    8. 'digit' → logprob: -3.282470226287842
    9. 'nds' → logprob: -3.532470226287842
    10. 't' → logprob: -4.157470226287842

Token 111: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5996702909469604
    2. ' ' → logprob: -1.8496702909469604
    3. 'i' → logprob: -2.47467041015625
    4. ' if' → logprob: -2.47467041015625
    5. '   ' → logprob: -3.59967041015625
    6. 'n' → logprob: -4.22467041015625
    7. 'd' → logprob: -4.47467041015625
    8. 's' → logprob: -4.47467041015625
    9. 'digit' → logprob: -4.72467041015625
    10. 'token' → logprob: -5.09967041015625

Token 112: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11439000815153122
    2. 'i' → logprob: -2.3643898963928223
    3. ' if' → logprob: -5.489389896392822
    4. 'd' → logprob: -5.489389896392822
    5. '   ' → logprob: -6.239389896392822
    6. 'digit' → logprob: -6.739389896392822
    7. 'n' → logprob: -6.864389896392822
    8. 'elif' → logprob: -7.614389896392822
    9. '#' → logprob: -8.23939037322998
    10. ' ' → logprob: -8.73939037322998

Token 113: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.011402171105146408
    2. 'i' → logprob: -4.511402130126953
    3. 'd' → logprob: -9.261402130126953
    4. ' if' → logprob: -9.886402130126953
    5. 'elif' → logprob: -9.886402130126953
    6. 'digit' → logprob: -9.886402130126953
    7. 'n' → logprob: -10.011402130126953
    8. 'num' → logprob: -10.261402130126953
    9. 'c' → logprob: -11.261402130126953
    10. '#' → logprob: -12.636402130126953

Token 114: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.17267856001853943
    2. 's' → logprob: -2.2976784706115723
    3. ' pos' → logprob: -3.4226784706115723
    4. 'pos' → logprob: -3.6726784706115723
    5. ' '' → logprob: -10.79767894744873
    6. ' ' → logprob: -10.92267894744873
    7. ''' → logprob: -12.04767894744873
    8. 'isdigit' → logprob: -12.04767894744873
    9. ''s' → logprob: -12.54767894744873
    10. '	s' → logprob: -13.04767894744873

Token 115: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.0015299785882234573
    2. '[' → logprob: -6.501530170440674
    3. 'pos' → logprob: -11.001529693603516
    4. '[position' → logprob: -12.376529693603516
    5. 'isdigit' → logprob: -12.376529693603516
    6. ' [' → logprob: -13.751529693603516
    7. '[
' → logprob: -14.751529693603516
    8. '[int' → logprob: -15.001529693603516
    9. '[p' → logprob: -15.626529693603516
    10. ' ' → logprob: -15.626529693603516

Token 116: '].' (ID: 1651)
  Prédit: '.is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.2565244436264038
    2. 'isdigit' → logprob: -1.5065244436264038
    3. '.' → logprob: -6.006524562835693
    4. ' in' → logprob: -6.631524562835693
    5. ').' → logprob: -8.506524085998535
    6. '].' → logprob: -8.631524085998535
    7. '>=' → logprob: -8.631524085998535
    8. ')' → logprob: -9.381524085998535
    9. ' .' → logprob: -9.881524085998535
    10. '>' → logprob: -10.631524085998535

Token 117: 'isdigit' (ID: 187412)
  Prédit: 'isdigit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isdigit' → logprob: -1.9361264946837764e-07
    2. ' is' → logprob: -17.125
    3. 'is' → logprob: -17.5
    4. 'digit' → logprob: -19.375
    5. 'isd' → logprob: -20.75
    6. 'd' → logprob: -21.375
    7. 'i' → logprob: -21.75
    8. 'isal' → logprob: -21.75
    9. '

' → logprob: -22.5
    10. '```' → logprob: -22.75

Token 118: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.009985205717384815
    2. '()' → logprob: -4.634984970092773
    3. '(' → logprob: -8.634984970092773
    4. '():
' → logprob: -10.509984970092773
    5. ':' → logprob: -10.884984970092773
    6. ' ():' → logprob: -12.634984970092773
    7. '()==' → logprob: -14.134984970092773
    8. '):' → logprob: -14.509984970092773
    9. '()>' → logprob: -15.884984970092773
    10. '(),' → logprob: -16.259984970092773

Token 119: '       ' (ID: 309)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.1329236775636673
    2. 'n' → logprob: -3.5079236030578613
    3. 'number' → logprob: -3.6329236030578613
    4. '       ' → logprob: -4.132923603057861
    5. '    ' → logprob: -4.882923603057861
    6. 'token' → logprob: -5.007923603057861
    7. 'i' → logprob: -5.132923603057861
    8. '#' → logprob: -5.132923603057861
    9. '   ' → logprob: -5.257923603057861
    10. ' num' → logprob: -5.382923603057861

Token 120: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' (adapté à ' num') → logprob: -0.06871005892753601
    2. ' num' → logprob: -2.8187100887298584
    3. 'val' → logprob: -6.443709850311279
    4. 'start' → logprob: -6.443709850311279
    5. 'value' → logprob: -6.568709850311279
    6. 'number' → logprob: -7.318709850311279
    7. ' number' → logprob: -7.943709850311279
    8. ' val' → logprob: -8.068710327148438
    9. 'n' → logprob: -8.318710327148438
    10. ' start' → logprob: -8.443710327148438

Token 121: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20376741886138916
    2. '=' → logprob: -1.7037674188613892
    3. 's' → logprob: -7.0787672996521
    4. 'ber' → logprob: -7.3287672996521
    5. '  ' → logprob: -7.9537672996521
    6. ' ' → logprob: -8.953767776489258
    7. '   ' → logprob: -9.953767776489258
    8. '_str' → logprob: -10.078767776489258
    9. '_start' → logprob: -10.078767776489258
    10. 'm' → logprob: -10.328767776489258

Token 122: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002250768942758441
    2. ' ' → logprob: -6.127250671386719
    3. '""' → logprob: -10.377250671386719
    4. '''' → logprob: -10.877250671386719
    5. 'int' → logprob: -12.002250671386719
    6. 's' → logprob: -13.127250671386719
    7. '"' → logprob: -13.127250671386719
    8. ''' → logprob: -13.252250671386719
    9. '  ' → logprob: -13.752250671386719
    10. ' ''' → logprob: -14.252250671386719

Token 123: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.386147626675665e-05
    2. ' ' → logprob: -10.000073432922363
    3. 'int' → logprob: -11.500073432922363
    4. '""' → logprob: -11.750073432922363
    5. '''' → logprob: -12.000073432922363
    6. 's' → logprob: -13.250073432922363
    7. 'pos' → logprob: -13.625073432922363
    8. '"' → logprob: -14.625073432922363
    9. ''' → logprob: -15.375073432922363
    10. 'str' → logprob: -15.875073432922363

Token 124: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 125: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 126: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.15360571444034576
    2. ' while' → logprob: -2.0286056995391846
    3. '<|end|>' → logprob: -4.778605937957764
    4. '<|end|>' → logprob: -6.653605937957764
    5. '	while' → logprob: -7.778605937957764
    6. 'While' → logprob: -8.028605461120605
    7. ' ' → logprob: -9.403605461120605
    8. '       ' → logprob: -9.528605461120605
    9. '    ' → logprob: -9.653605461120605
    10. '   ' → logprob: -9.778605461120605

Token 127: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.4746132493019104
    2. 'pos' → logprob: -0.9746132493019104
    3. ' s' → logprob: -8.099613189697266
    4. 's' → logprob: -8.474613189697266
    5. ' ' → logprob: -11.724613189697266
    6. '	pos' → logprob: -11.849613189697266
    7. '(pos' → logprob: -12.474613189697266
    8. ' ' → logprob: -14.474613189697266
    9. '_pos' → logprob: -14.474613189697266
    10. '   ' → logprob: -14.662113189697266

Token 128: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.12866118550300598
    2. '<' → logprob: -2.1286611557006836
    3. '<len' → logprob: -6.378661155700684
    4. '<|end|>' → logprob: -11.253661155700684
    5. '<n' → logprob: -12.003661155700684
    6. '<num' → logprob: -12.503661155700684
    7. ' ' → logprob: -12.878661155700684
    8. '<size' → logprob: -13.378661155700684
    9. '[' → logprob: -13.628661155700684
    10. '<class' → logprob: -14.003661155700684

Token 129: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.004078401252627373
    2. ' len' → logprob: -5.504078388214111
    3. '(len' → logprob: -18.879077911376953
    4. '	len' → logprob: -19.504077911376953
    5. '<len' → logprob: -20.504077911376953
    6. '[len' → logprob: -20.879077911376953
    7. '=len' → logprob: -21.879077911376953
    8. 'length' → logprob: -23.129077911376953
    9. ',len' → logprob: -23.379077911376953
    10. '```' → logprob: -23.629077911376953

Token 130: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.003178901970386505
    2. 's' → logprob: -5.75317907333374
    3. '(' → logprob: -13.878178596496582
    4. ')' → logprob: -16.6281795501709
    5. ' s' → logprob: -17.0031795501709
    6. '(len' → logprob: -17.6281795501709
    7. ')s' → logprob: -18.2531795501709
    8. 'len' → logprob: -18.2531795501709
    9. '```' → logprob: -18.6281795501709
    10. 'pos' → logprob: -18.7531795501709

Token 131: ')' (ID: 8)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.44887804985046387
    2. 'and' → logprob: -1.1988780498504639
    3. ')' → logprob: -2.823878049850464
    4. 's' → logprob: -8.073878288269043
    5. ' )' → logprob: -8.323878288269043
    6. ' ' → logprob: -9.448878288269043
    7. '   ' → logprob: -10.198878288269043
    8. '(s' → logprob: -10.698878288269043
    9. ' s' → logprob: -11.698878288269043
    10. '        ' → logprob: -11.948878288269043

Token 132: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.47407984733581543
    2. 'and' → logprob: -0.9740798473358154
    3. ' ' → logprob: -13.099080085754395
    4. '   ' → logprob: -15.099080085754395
    5. '	and' → logprob: -15.974080085754395
    6. '    ' → logprob: -16.224079132080078
    7. 's' → logprob: -16.599079132080078
    8. '        ' → logprob: -16.849079132080078
    9. '  ' → logprob: -16.974079132080078
    10. '```' → logprob: -17.599079132080078

Token 133: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.22541718184947968
    2. ' s' → logprob: -1.600417137145996
    3. '(s' → logprob: -13.600417137145996
    4. 'isdigit' → logprob: -13.600417137145996
    5. ' ' → logprob: -14.475417137145996
    6. ' ' → logprob: -14.850417137145996
    7. '	s' → logprob: -15.350417137145996
    8. 'pos' → logprob: -15.350417137145996
    9. 'ss' → logprob: -15.975417137145996
    10. '   ' → logprob: -16.350418090820312

Token 134: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -2.3557529857498594e-05
    2. '[s' → logprob: -11.12502384185791
    3. '[' → logprob: -12.75002384185791
    4. 's' → logprob: -12.87502384185791
    5. 'pos' → logprob: -13.75002384185791
    6. '[position' → logprob: -14.00002384185791
    7. '[
' → logprob: -14.12502384185791
    8. '[p' → logprob: -15.62502384185791
    9. '(pos' → logprob: -16.000022888183594
    10. '[prop' → logprob: -17.000022888183594

Token 135: '].' (ID: 1651)
  Prédit: '.is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.10215914994478226
    2. 'isdigit' → logprob: -2.727159261703491
    3. '.' → logprob: -4.477159023284912
    4. '].' → logprob: -4.727159023284912
    5. ').' → logprob: -4.727159023284912
    6. ' .' → logprob: -6.102159023284912
    7. '().' → logprob: -8.60215950012207
    8. '}.' → logprob: -9.22715950012207
    9. '>.' → logprob: -9.97715950012207
    10. ''].' → logprob: -10.85215950012207

Token 136: 'isdigit' (ID: 187412)
  Prédit: 'isdigit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isdigit' → logprob: -5.512236498361744e-07
    2. 'digit' → logprob: -14.500000953674316
    3. 'isd' → logprob: -18.25
    4. ' is' → logprob: -19.875
    5. ' ' → logprob: -22.5
    6. 'iss' → logprob: -23.0
    7. 'digits' → logprob: -23.125
    8. 'startswith' → logprob: -23.25
    9. 'rstrip' → logprob: -23.625
    10. 'isal' → logprob: -23.875

Token 137: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.02270606718957424
    2. '()' → logprob: -4.022706031799316
    3. '():
' → logprob: -5.397706031799316
    4. '():

' → logprob: -12.147706031799316
    5. ' ():' → logprob: -12.397706031799316
    6. '():
' → logprob: -13.272706031799316
    7. '()==' → logprob: -13.397706031799316
    8. ':' → logprob: -13.522706031799316
    9. '()>' → logprob: -13.522706031799316
    10. '()">' → logprob: -14.022706031799316

Token 138: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11623122543096542
    2. 'num' → logprob: -2.8662312030792236
    3. ' num' → logprob: -3.6162312030792236
    4. '       ' → logprob: -3.9912312030792236
    5. ' ' → logprob: -6.741231441497803
    6. '        ' → logprob: -6.866231441497803
    7. '0' → logprob: -7.116231441497803
    8. '   ' → logprob: -7.366231441497803
    9. ' ' → logprob: -7.491231441497803
    10. '1' → logprob: -7.616231441497803

Token 139: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.3869246244430542
    2. 'num' (adapté à ' num') → logprob: -1.1369246244430542
    3. '	num' → logprob: -10.011924743652344
    4. '   ' → logprob: -12.511924743652344
    5. ' ' → logprob: -13.636924743652344
    6. '           ' → logprob: -14.011924743652344
    7. ',num' → logprob: -14.386924743652344
    8. '
' → logprob: -14.761924743652344
    9. '<num' → logprob: -14.761924743652344
    10. '_num' → logprob: -14.886924743652344

Token 140: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2503243684768677
    2. '=' → logprob: -1.6253243684768677
    3. ' +=' → logprob: -4.000324249267578
    4. ' *=' → logprob: -5.500324249267578
    5. '+=' → logprob: -7.250324249267578
    6. '*=' → logprob: -7.375324249267578
    7. ')' → logprob: -7.750324249267578
    8. '   ' → logprob: -8.375324249267578
    9. '       ' → logprob: -10.250324249267578
    10. ' ' → logprob: -10.250324249267578

Token 141: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.12696097791194916
    2. ' num' → logprob: -2.1269609928131104
    3. '10' → logprob: -10.376960754394531
    4. ' ' → logprob: -14.251960754394531
    5. '(num' → logprob: -14.501960754394531
    6. '	num' → logprob: -15.001960754394531
    7. '   ' → logprob: -16.50196075439453
    8. '```' → logprob: -16.62696075439453
    9. '=num' → logprob: -17.62696075439453
    10. '[num' → logprob: -17.62696075439453

Token 142: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.25264203548431396
    2. ' *' → logprob: -1.502642035484314
    3. '10' → logprob: -7.5026421546936035
    4. '*num' → logprob: -9.502641677856445
    5. '0' → logprob: -10.002641677856445
    6. 'num' → logprob: -10.502641677856445
    7. ' ' → logprob: -11.877641677856445
    8. ' num' → logprob: -12.627641677856445
    9. 's' → logprob: -13.377641677856445
    10. '[num' → logprob: -14.127641677856445

Token 143: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '```' → logprob: -18.0000057220459
    4. '1' → logprob: -19.8750057220459
    5. '   ' → logprob: -20.2500057220459
    6. '
' → logprob: -21.0000057220459
    7. '

' → logprob: -21.6250057220459
    8. '0' → logprob: -21.7500057220459
    9. '۱۰' → logprob: -22.0000057220459
    10. '`' → logprob: -22.0000057220459

Token 144: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -18.875
    4. '1' → logprob: -19.625
    5. '0' → logprob: -20.0
    6. '   ' → logprob: -20.25
    7. '`' → logprob: -21.375
    8. '
' → logprob: -22.25
    9. '۱۰' → logprob: -22.75
    10. '１０' → logprob: -22.875

Token 145: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03804171830415726
    2. ' +' → logprob: -3.288041830062866
    3. '+
' → logprob: -16.288042068481445
    4. '+s' → logprob: -16.913042068481445
    5. ' plus' → logprob: -17.788042068481445
    6. 'plus' → logprob: -18.163042068481445
    7. ' +
' → logprob: -18.288042068481445
    8. '＋' → logprob: -18.288042068481445
    9. '+

' → logprob: -18.413042068481445
    10. ' ' → logprob: -18.413042068481445

Token 146: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0004350797680672258
    2. ' int' → logprob: -7.750434875488281
    3. '(int' → logprob: -12.500434875488281
    4. 'ord' → logprob: -14.250434875488281
    5. '<int' → logprob: -17.87543487548828
    6. '[int' → logprob: -18.25043487548828
    7. '   ' → logprob: -18.37543487548828
    8. '=int' → logprob: -19.37543487548828
    9. '0' → logprob: -20.00043487548828
    10. '(ord' → logprob: -20.12543487548828

Token 147: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.005241702310740948
    2. 's' → logprob: -5.255241870880127
    3. '(' → logprob: -11.755241394042969
    4. ' s' → logprob: -17.63024139404297
    5. '(
' → logprob: -18.38024139404297
    6. ' (' → logprob: -20.38024139404297
    7. '`s' → logprob: -21.13024139404297
    8. ')s' → logprob: -21.38024139404297
    9. '```' → logprob: -22.25524139404297
    10. ''s' → logprob: -22.63024139404297

Token 148: '[pos' (ID: 48272)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5186450481414795
    2. '[s' → logprob: -1.7686450481414795
    3. '[pos' → logprob: -1.7686450481414795
    4. '(s' → logprob: -2.7686450481414795
    5. '[' → logprob: -7.768645286560059
    6. ' s' → logprob: -8.268645286560059
    7. 'pos' → logprob: -9.768645286560059
    8. '[
' → logprob: -10.893645286560059
    9. '{s' → logprob: -11.143645286560059
    10. '(pos' → logprob: -11.643645286560059

Token 149: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00023643692838959396
    2. '[pos' → logprob: -9.375236511230469
    3. '])
' → logprob: -9.500236511230469
    4. ')' → logprob: -10.500236511230469
    5. ']' → logprob: -11.000236511230469
    6. 'pos' → logprob: -11.375236511230469
    7. ''])' → logprob: -12.000236511230469
    8. ' ])' → logprob: -12.250236511230469
    9. '])]' → logprob: -13.125236511230469
    10. ')])' → logprob: -13.125236511230469

Token 150: '           ' (ID: 352)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.4494258165359497
    2. '           ' → logprob: -2.19942569732666
    3. ' pos' → logprob: -2.44942569732666
    4. '       ' → logprob: -2.44942569732666
    5. '   ' → logprob: -2.57442569732666
    6. '
' → logprob: -6.82442569732666
    7. '[pos' → logprob: -8.32442569732666
    8. '	pos' → logprob: -8.69942569732666
    9. '    
' → logprob: -8.82442569732666
    10. ',pos' → logprob: -8.82442569732666

Token 151: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.3868713080883026
    2. 'pos' (adapté à ' pos') → logprob: -1.136871337890625
    3. '	pos' → logprob: -15.761871337890625
    4. '_pos' → logprob: -16.136871337890625
    5. '.pos' → logprob: -17.761871337890625
    6. '[pos' → logprob: -19.761871337890625
    7. ' ' → logprob: -19.886871337890625
    8. '    ' → logprob: -20.136871337890625
    9. '-pos' → logprob: -20.136871337890625
    10. ',pos' → logprob: -20.386871337890625

Token 152: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.12699256837368011
    2. ' +=' → logprob: -2.1269924640655518
    3. '+' → logprob: -9.751992225646973
    4. '=' → logprob: -12.251992225646973
    5. ']+=' → logprob: -14.251992225646973
    6. '+='' → logprob: -15.126992225646973
    7. '+="' → logprob: -15.376992225646973
    8. ')' → logprob: -16.12699317932129
    9. '<|end|>' → logprob: -16.37699317932129
    10. '   ' → logprob: -16.62699317932129

Token 153: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '```' → logprob: -19.250139236450195
    4. '１' → logprob: -20.750139236450195
    5. '۱' → logprob: -21.250139236450195
    6. '   ' → logprob: -21.375139236450195
    7. ' ' → logprob: -22.562639236450195
    8. '0' → logprob: -22.750139236450195
    9. '१' → logprob: -22.812639236450195
    10. '`' → logprob: -22.875139236450195

Token 154: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '```' → logprob: -19.500001907348633
    4. '   ' → logprob: -20.625001907348633
    5. '１' → logprob: -21.812501907348633
    6. '۱' → logprob: -22.250001907348633
    7. '
' → logprob: -22.500001907348633
    8. '0' → logprob: -23.250001907348633
    9. '१' → logprob: -23.250001907348633
    10. '  ' → logprob: -23.250001907348633

Token 155: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04685870558023453
    2. '
' → logprob: -3.421858787536621
    3. '   ' → logprob: -4.921858787536621
    4. 'return' → logprob: -6.296858787536621
    5. ' return' → logprob: -6.546858787536621
    6. '        
' → logprob: -7.421858787536621
    7. '    
' → logprob: -7.796858787536621
    8. '\n' → logprob: -7.921858787536621
    9. ' 
' → logprob: -8.171858787536621
    10. '<|end|>' → logprob: -8.921858787536621

Token 156: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001570683903992176
    2. '   ' → logprob: -6.876570701599121
    3. ' return' → logprob: -8.251570701599121
    4. 'return' → logprob: -8.751570701599121
    5. '        
' → logprob: -10.501570701599121
    6. '    
' → logprob: -10.876570701599121
    7. '
' → logprob: -10.876570701599121
    8. '<|end|>' → logprob: -11.501570701599121
    9. '           ' → logprob: -12.001570701599121
    10. '      ' → logprob: -12.376570701599121

Token 157: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.26724329590797424
    2. ' return' → logprob: -1.5172432661056519
    3. '   ' → logprob: -4.517243385314941
    4. '       ' → logprob: -5.517243385314941
    5. ':return' → logprob: -9.267243385314941
    6. '	return' → logprob: -9.392243385314941
    7. '
' → logprob: -9.892243385314941
    8. ')return' → logprob: -11.392243385314941
    9. '  ' → logprob: -12.642243385314941
    10. ' ' → logprob: -12.767243385314941

Token 158: ' ('' (ID: 9906)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.12975989282131195
    2. ' num' → logprob: -2.1297597885131836
    3. '(num' → logprob: -5.879759788513184
    4. ' (' → logprob: -10.379759788513184
    5. ',num' → logprob: -14.629759788513184
    6. '[num' → logprob: -14.879759788513184
    7. '<num' → logprob: -16.0047607421875
    8. '	num' → logprob: -16.1297607421875
    9. '(' → logprob: -16.1297607421875
    10. ' ' → logprob: -16.3797607421875

Token 159: 'leaf' (ID: 50921)
  Prédit: 'leaf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'leaf' → logprob: -0.05112338438630104
    2. 'num' → logprob: -3.0511233806610107
    3. 'Leaf' → logprob: -6.17612361907959
    4. 'fe' → logprob: -8.55112361907959
    5. 'int' → logprob: -9.05112361907959
    6. 'number' → logprob: -9.55112361907959
    7. '_leaf' → logprob: -11.30112361907959
    8. 'NUM' → logprob: -11.55112361907959
    9. 'value' → logprob: -11.67612361907959
    10. 'node' → logprob: -11.80112361907959

Token 160: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.0004981054808013141
    2. ',' → logprob: -7.750498294830322
    3. '",' → logprob: -10.375497817993164
    4. ''' → logprob: -10.875497817993164
    5. '),' → logprob: -12.500497817993164
    6. ''),' → logprob: -12.500497817993164
    7. '',(' → logprob: -12.625497817993164
    8. ',num' → logprob: -12.750497817993164
    9. '','' → logprob: -14.125497817993164
    10. ' ,' → logprob: -14.500497817993164

Token 161: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.005233882926404476
    2. ' num' → logprob: -5.2552337646484375
    3. '[num' → logprob: -17.380233764648438
    4. '(num' → logprob: -18.380233764648438
    5. '	num' → logprob: -18.505233764648438
    6. ' ' → logprob: -18.630233764648438
    7. ',num' → logprob: -18.630233764648438
    8. '   ' → logprob: -19.005233764648438
    9. ' ' → logprob: -19.630233764648438
    10. '<num' → logprob: -19.880233764648438

Token 162: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008662028703838587
    2. ')' → logprob: -7.125866413116455
    3. ',pos' → logprob: -10.000865936279297
    4. ' ,' → logprob: -11.500865936279297
    5. '),' → logprob: -12.250865936279297
    6. ',)' → logprob: -14.375865936279297
    7. '   ' → logprob: -14.500865936279297
    8. 'pos' → logprob: -15.625865936279297
    9. ' )' → logprob: -16.000865936279297
    10. ',p' → logprob: -17.000865936279297

Token 163: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0007099286303855479
    2. ' pos' → logprob: -7.2507100105285645
    3. '(pos' → logprob: -22.625709533691406
    4. 'position' → logprob: -22.875709533691406
    5. '	pos' → logprob: -23.125709533691406
    6. 'p' → logprob: -23.375709533691406
    7. '[pos' → logprob: -23.500709533691406
    8. '_pos' → logprob: -23.750709533691406
    9. ' ' → logprob: -23.750709533691406
    10. 'Pos' → logprob: -25.125709533691406

Token 164: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24636279046535492
    2. '    
' → logprob: -1.8713628053665161
    3. '\n' → logprob: -3.2463626861572266
    4. ' 
' → logprob: -5.121362686157227
    5. '
' → logprob: -5.496362686157227
    6. '  
' → logprob: -5.746362686157227
    7. '   
' → logprob: -5.996362686157227
    8. '#' → logprob: -6.621362686157227
    9. 'newline' → logprob: -6.746362686157227
    10. ' ' → logprob: -6.871362686157227

Token 165: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045643266290426254
    2. '    
' → logprob: -3.5456433296203613
    3. ' ' → logprob: -6.170643329620361
    4. 'elif' → logprob: -6.295643329620361
    5. '\n' → logprob: -6.295643329620361
    6. '  ' → logprob: -6.420643329620361
    7. '
' → logprob: -6.545643329620361
    8. '<|end|>' → logprob: -6.670643329620361
    9. ' 
' → logprob: -6.795643329620361
    10. '   
' → logprob: -7.045643329620361

Token 166: ' #' (ID: 1069)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7591679692268372
    2. 'elif' → logprob: -0.8841679692268372
    3. '#' (adapté à ' #') → logprob: -2.8841679096221924
    4. 'if' → logprob: -3.2591679096221924
    5. 'else' → logprob: -4.5091681480407715
    6. '   ' → logprob: -4.7591681480407715
    7. '    
' → logprob: -6.7591681480407715
    8. '(
' → logprob: -6.8841681480407715
    9. ')' → logprob: -7.1341681480407715
    10. ' elif' → logprob: -7.5091681480407715

Token 167: ' Sinon' (ID: 154924)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06247914582490921
    2. 'assert' → logprob: -3.937479257583618
    3. '#' → logprob: -4.437479019165039
    4. 'pos' → logprob: -4.812479019165039
    5. '(' → logprob: -4.937479019165039
    6. 'elif' → logprob: -5.187479019165039
    7. ' if' → logprob: -5.312479019165039
    8. 'else' → logprob: -7.187479019165039
    9. 's' → logprob: -7.312479019165039
    10. ' pos' → logprob: -7.562479019165039

Token 168: ' c' (ID: 274)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7119651436805725
    2. 'if' → logprob: -0.8369651436805725
    3. '   ' → logprob: -2.7119650840759277
    4. '#' → logprob: -6.086965084075928
    5. ' pos' → logprob: -6.086965084075928
    6. 'pos' → logprob: -6.461965084075928
    7. ' #' → logprob: -6.961965084075928
    8. 'assert' → logprob: -6.961965084075928
    9. 'elif' → logprob: -7.711965084075928
    10. 's' → logprob: -8.461965560913086

Token 169: ''est' (ID: 6616)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3697870373725891
    2. 'elif' → logprob: -1.7447869777679443
    3. '==' → logprob: -2.9947869777679443
    4. ':' → logprob: -4.119787216186523
    5. '   ' → logprob: -4.494787216186523
    6. '(' → logprob: -5.119787216186523
    7. ' elif' → logprob: -5.119787216186523
    8. '#' → logprob: -5.119787216186523
    9. '('' → logprob: -5.244787216186523
    10. ' (' → logprob: -5.369787216186523

Token 170: ' un' (ID: 537)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.784930944442749
    2. ' s' → logprob: -1.659930944442749
    3. 's' → logprob: -1.784930944442749
    4. ''s' → logprob: -2.534930944442749
    5. ' '('' → logprob: -2.659930944442749
    6. ''un' → logprob: -4.034931182861328
    7. ' '' → logprob: -5.159931182861328
    8. '(' → logprob: -5.659931182861328
    9. ' (' → logprob: -5.784931182861328
    10. ' ' → logprob: -6.159931182861328

Token 171: ' noe' (ID: 49921)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.025238893926143646
    2. '(' → logprob: -4.400238990783691
    3. ' '('' → logprob: -4.400238990783691
    4. ' (' → logprob: -9.275238990783691
    5. '('' → logprob: -9.525238990783691
    6. '"' → logprob: -10.150238990783691
    7. ''(' → logprob: -10.275238990783691
    8. 'paren' → logprob: -10.275238990783691
    9. ''op' → logprob: -11.150238990783691
    10. ''s' → logprob: -11.400238990783691

Token 172: 'ud' (ID: 527)
  Prédit: 'ud'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ud' → logprob: -0.4207259714603424
    2. 'u' → logprob: -1.79572594165802
    3. '(' → logprob: -1.92072594165802
    4. ''' → logprob: -4.6707258224487305
    5. '('' → logprob: -4.9207258224487305
    6. ' (' → logprob: -5.6707258224487305
    7. 'd' → logprob: -5.9207258224487305
    8. 'ur' → logprob: -6.0457258224487305
    9. 'e' → logprob: -6.6707258224487305
    10. ')' → logprob: -6.9207258224487305

Token 173: ' interne' (ID: 59673)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5945266485214233
    2. '(' → logprob: -1.7195266485214233
    3. ' (' → logprob: -2.219526767730713
    4. 'if' → logprob: -2.344526767730713
    5. ' if' → logprob: -3.469526767730713
    6. '('' → logprob: -4.719526767730713
    7. ' ' → logprob: -5.219526767730713
    8. ',' → logprob: -5.344526767730713
    9. '  ' → logprob: -5.594526767730713
    10. '(
' → logprob: -5.719526767730713

Token 174: ' qui' (ID: 2780)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19513195753097534
    2. '(' → logprob: -2.19513201713562
    3. ' (' → logprob: -3.44513201713562
    4. 'if' → logprob: -3.94513201713562
    5. ' if' → logprob: -4.945131778717041
    6. '(
' → logprob: -6.070131778717041
    7. ',' → logprob: -6.570131778717041
    8. '#' → logprob: -6.695131778717041
    9. '('' → logprob: -7.445131778717041
    10. ' ' → logprob: -7.570131778717041

Token 175: ' commence' (ID: 44755)
  Prédit: ' starts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' starts' → logprob: -0.8264569044113159
    2. 'pos' → logprob: -1.701456904411316
    3. 's' → logprob: -2.3264570236206055
    4. ' begins' → logprob: -2.9514570236206055
    5. ' s' → logprob: -3.0764570236206055
    6. ' pos' → logprob: -3.2014570236206055
    7. '[' → logprob: -3.4514570236206055
    8. 'startswith' → logprob: -3.8264570236206055
    9. ' (' → logprob: -4.0764570236206055
    10. 'starts' → logprob: -4.3264570236206055

Token 176: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.362233430147171
    2. ' par' → logprob: -1.6122334003448486
    3. '(' → logprob: -3.1122334003448486
    4. 'with' → logprob: -3.2372334003448486
    5. ' with' → logprob: -4.487233638763428
    6. ' (' → logprob: -5.737233638763428
    7. '('' → logprob: -6.737233638763428
    8. 'if' → logprob: -6.987233638763428
    9. ' by' → logprob: -7.237233638763428
    10. ' avec' → logprob: -7.612233638763428

Token 177: ' '('' (ID: 87284)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.009908604435622692
    2. '(' → logprob: -4.884908676147461
    3. ' '('' → logprob: -6.134908676147461
    4. ''(' → logprob: -9.134908676147461
    5. ' (' → logprob: -11.509908676147461
    6. '('' → logprob: -11.634908676147461
    7. '"' → logprob: -12.259908676147461
    8. ' '' → logprob: -13.884908676147461
    9. ' ' → logprob: -14.134908676147461
    10. '(
' → logprob: -15.384908676147461

Token 178: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.45401716232299805
    2. '   ' → logprob: -1.829017162322998
    3. ' (' → logprob: -1.954017162322998
    4. ' ' → logprob: -3.954017162322998
    5. '(
' → logprob: -3.954017162322998
    6. '(pos' → logprob: -5.204017162322998
    7. 'pos' → logprob: -5.704017162322998
    8. ',' → logprob: -6.079017162322998
    9. ' (
' → logprob: -6.079017162322998
    10. ' pos' → logprob: -6.204017162322998

Token 179: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1567501574754715
    2. 'pos' → logprob: -2.906750202178955
    3. '(' → logprob: -3.156750202178955
    4. 'if' → logprob: -3.406750202178955
    5. ' pos' → logprob: -5.156750202178955
    6. ' if' → logprob: -5.781750202178955
    7. ' (' → logprob: -6.156750202178955
    8. '(pos' → logprob: -7.281750202178955
    9. '(
' → logprob: -7.406750202178955
    10. '    ' → logprob: -7.406750202178955

Token 180: ' if' (ID: 538)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.4084751605987549
    2. 'if' (adapté à ' if') → logprob: -1.1584751605987549
    3. '   ' → logprob: -4.658474922180176
    4. 'assert' → logprob: -5.158474922180176
    5. '(' → logprob: -5.908474922180176
    6. ' pos' → logprob: -6.658474922180176
    7. '(
' → logprob: -7.158474922180176
    8. ' if' → logprob: -7.533474922180176
    9. '(pos' → logprob: -7.908474922180176
    10. 'elif' → logprob: -9.283474922180176

Token 181: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.06935057044029236
    2. 's' → logprob: -2.819350481033325
    3. ' pos' → logprob: -5.194350719451904
    4. 'pos' → logprob: -6.319350719451904
    5. '	s' → logprob: -12.694350242614746
    6. ' ' → logprob: -13.819350242614746
    7. ' ' → logprob: -14.319350242614746
    8. '(s' → logprob: -14.444350242614746
    9. '_s' → logprob: -15.006850242614746
    10. '	pos' → logprob: -15.319350242614746

Token 182: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -8.280175097752362e-05
    2. ' [' → logprob: -10.125082969665527
    3. '[' → logprob: -10.500082969665527
    4. 'pos' → logprob: -11.375082969665527
    5. '[position' → logprob: -13.000082969665527
    6. '[p' → logprob: -13.875082969665527
    7. '[s' → logprob: -16.25008201599121
    8. ' pos' → logprob: -16.25008201599121
    9. '[
' → logprob: -16.37508201599121
    10. '```' → logprob: -16.87508201599121

Token 183: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4271095097064972
    2. ']' → logprob: -1.4271094799041748
    3. '==' → logprob: -2.302109479904175
    4. ']==' → logprob: -5.427109718322754
    5. '[' → logprob: -6.302109718322754
    6. ' ]' → logprob: -7.677109718322754
    7. ')' → logprob: -7.802109718322754
    8. '=' → logprob: -8.302109718322754
    9. ']=='' → logprob: -9.427109718322754
    10. '=='' → logprob: -10.052109718322754

Token 184: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.22590556740760803
    2. '==' → logprob: -1.6009055376052856
    3. '=' → logprob: -8.225905418395996
    4. '=='' → logprob: -8.725905418395996
    5. '[' → logprob: -10.850905418395996
    6. ''' → logprob: -11.100905418395996
    7. ' =' → logprob: -11.725905418395996
    8. '(' → logprob: -11.975905418395996
    9. ' ' → logprob: -12.600905418395996
    10. ' =='' → logprob: -12.600905418395996

Token 185: ' '('' (ID: 87284)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.013927250169217587
    2. ' '('' → logprob: -4.513927459716797
    3. ' '' → logprob: -5.888927459716797
    4. '"' → logprob: -9.763927459716797
    5. '(' → logprob: -10.388927459716797
    6. ''(' → logprob: -11.888927459716797
    7. ' ' → logprob: -12.263927459716797
    8. '('' → logprob: -13.138927459716797
    9. ' (' → logprob: -13.513927459716797
    10. '  ' → logprob: -14.013927459716797

Token 186: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43455028533935547
    2. ' ' → logprob: -1.8095502853393555
    3. '   ' → logprob: -2.9345502853393555
    4. ' :' → logprob: -3.1845502853393555
    5. ',' → logprob: -3.6845502853393555
    6. '       ' → logprob: -3.8095502853393555
    7. ' pos' → logprob: -4.5595502853393555
    8. ')' → logprob: -5.0595502853393555
    9. ' ,' → logprob: -5.1845502853393555
    10. '    ' → logprob: -5.5595502853393555

Token 187: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10733015090227127
    2. '   ' → logprob: -2.607330083847046
    3. 'pos' → logprob: -3.982330083847046
    4. '<|end|>' → logprob: -5.607330322265625
    5. ' pos' → logprob: -5.982330322265625
    6. '	pos' → logprob: -7.232330322265625
    7. '    ' → logprob: -7.357330322265625
    8. ' ' → logprob: -7.857330322265625
    9. '        
' → logprob: -7.982330322265625
    10. '    
' → logprob: -7.982330322265625

Token 188: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.004262769129127264
    2. ' pos' → logprob: -5.754262924194336
    3. '       ' → logprob: -7.754262924194336
    4. '   ' → logprob: -8.379262924194336
    5. 'left' → logprob: -8.379262924194336
    6. ',' → logprob: -9.129262924194336
    7. ' ,' → logprob: -11.504262924194336
    8. '           ' → logprob: -11.504262924194336
    9. ',pos' → logprob: -11.754262924194336
    10. '	pos' → logprob: -11.879262924194336

Token 189: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.02975245751440525
    2. '+=' → logprob: -3.529752492904663
    3. '+' → logprob: -13.904752731323242
    4. '=' → logprob: -14.654752731323242
    5. ']+=' → logprob: -15.404752731323242
    6. ' =' → logprob: -15.779752731323242
    7. ' +' → logprob: -15.904752731323242
    8. '   ' → logprob: -16.779752731323242
    9. 'import' → logprob: -17.654752731323242
    10. ' ' → logprob: -17.654752731323242

Token 190: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003600071184337139
    2. ' ' → logprob: -5.628600120544434
    3. '2' → logprob: -17.003599166870117
    4. '１' → logprob: -18.441099166870117
    5. '```' → logprob: -18.503599166870117
    6. '   ' → logprob: -18.691099166870117
    7. '۱' → logprob: -19.003599166870117
    8. ' ' → logprob: -19.066099166870117
    9. '0' → logprob: -20.128599166870117
    10. '3' → logprob: -20.441099166870117

Token 191: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '0' → logprob: -17.625024795532227
    4. '   ' → logprob: -18.500024795532227
    5. '```' → logprob: -19.250024795532227
    6. '2' → logprob: -19.312524795532227
    7. '１' → logprob: -19.937524795532227
    8. '۱' → logprob: -20.812524795532227
    9. '  ' → logprob: -21.000024795532227
    10. '
' → logprob: -21.125024795532227

Token 192: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6538040041923523
    2. 'left' → logprob: -1.778804063796997
    3. '       ' → logprob: -2.028804063796997
    4. '   ' → logprob: -3.403804063796997
    5. 'g' → logprob: -3.653804063796997
    6. ')' → logprob: -3.903804063796997
    7. ',g' → logprob: -4.403803825378418
    8. ',left' → logprob: -4.403803825378418
    9. ' gauche' → logprob: -4.528803825378418
    10. ' ,' → logprob: -4.778803825378418

Token 193: '       ' (ID: 309)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.6151735186576843
    2. 'left' → logprob: -1.490173578262329
    3. '   ' → logprob: -2.365173578262329
    4. ' gauche' → logprob: -2.990173578262329
    5. '(g' → logprob: -3.615173578262329
    6. '(left' → logprob: -4.11517333984375
    7. '       ' → logprob: -4.24017333984375
    8. ' left' → logprob: -4.86517333984375
    9. ',' → logprob: -5.11517333984375
    10. ' (' → logprob: -5.36517333984375

Token 194: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.35892534255981445
    2. 'g' → logprob: -1.2339253425598145
    3. ' left' → logprob: -4.7339253425598145
    4. ' gauche' → logprob: -6.6089253425598145
    5. '   ' → logprob: -8.858924865722656
    6. 'tree' → logprob: -10.358924865722656
    7. '(left' → logprob: -11.233924865722656
    8. 'gau' → logprob: -11.483924865722656
    9. 'lhs' → logprob: -11.483924865722656
    10. 'node' → logprob: -11.608924865722656

Token 195: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006093980744481087
    2. '_tree' → logprob: -5.881093978881836
    3. ',node' → logprob: -6.256093978881836
    4. '_node' → logprob: -7.131093978881836
    5. 'tree' → logprob: -7.881093978881836
    6. 'node' → logprob: -9.631093978881836
    7. ' subtree' → logprob: -9.756093978881836
    8. 'ar' → logprob: -11.631093978881836
    9. ',left' → logprob: -11.631093978881836
    10. ' ,' → logprob: -11.881093978881836

Token 196: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.14394018054008484
    2. ' pos' → logprob: -2.0189402103424072
    3. 'new' → logprob: -7.393939971923828
    4. ' new' → logprob: -7.518939971923828
    5. 'next' → logprob: -9.643939971923828
    6. ' next' → logprob: -10.393939971923828
    7. '_pos' → logprob: -13.268939971923828
    8. 'p' → logprob: -13.268939971923828
    9. 'end' → logprob: -13.518939971923828
    10. '	pos' → logprob: -13.893939971923828

Token 197: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2832501530647278
    2. '=' → logprob: -1.408250093460083
    3. ' =' → logprob: -6.283250331878662
    4. ' ,' → logprob: -8.658249855041504
    5. ')' → logprob: -10.158249855041504
    6. '),' → logprob: -12.658249855041504
    7. ')=' → logprob: -13.408249855041504
    8. '<|end|>' → logprob: -13.595749855041504
    9. ',...' → logprob: -13.720749855041504
    10. ',)' → logprob: -14.095749855041504

Token 198: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.00033546582562848926
    2. ' parse' → logprob: -8.000335693359375
    3. '(parse' → logprob: -19.875335693359375
    4. '	parse' → logprob: -21.125335693359375
    5. 'par' → logprob: -21.500335693359375
    6. '=parse' → logprob: -21.750335693359375
    7. 'parser' → logprob: -22.625335693359375
    8. '_parse' → logprob: -23.375335693359375
    9. '   ' → logprob: -23.625335693359375
    10. '.parse' → logprob: -24.750335693359375

Token 199: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -7.896309739408025e-07
    2. '_t' → logprob: -14.625000953674316
    3. '_' → logprob: -16.125
    4. 'tree' → logprob: -16.625
    5. '_TREE' → logprob: -18.125
    6. 's' → logprob: -19.0
    7. '<Tree' → logprob: -19.0
    8. ' _' → logprob: -19.125
    9. '_s' → logprob: -19.375
    10. '_code' → logprob: -19.5

Token 200: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.259079363080673e-05
    2. 's' → logprob: -11.750012397766113
    3. ' (' → logprob: -12.500012397766113
    4. '(' → logprob: -14.000012397766113
    5. '```' → logprob: -17.50001335144043
    6. ' ' → logprob: -18.50001335144043
    7. '(
' → logprob: -19.37501335144043
    8. ' s' → logprob: -19.62501335144043
    9. ')' → logprob: -20.25001335144043
    10. ',' → logprob: -20.37501335144043

Token 201: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020024040713906288
    2. ',s' → logprob: -4.895023822784424
    3. '(s' → logprob: -5.145023822784424
    4. 's' → logprob: -5.145023822784424
    5. ')' → logprob: -8.395024299621582
    6. ' ,' → logprob: -8.395024299621582
    7. ',pos' → logprob: -8.770024299621582
    8. ' s' → logprob: -10.145024299621582
    9. ')s' → logprob: -11.645024299621582
    10. '(' → logprob: -11.895024299621582

Token 202: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -9.088346359931165e-07
    2. ' pos' → logprob: -14.000000953674316
    3. '(pos' → logprob: -24.125
    4. '	pos' → logprob: -24.375
    5. ')' → logprob: -24.75
    6. 'p' → logprob: -24.875
    7. 'position' → logprob: -25.0
    8. 'post' → logprob: -25.625
    9. '_pos' → logprob: -25.875
    10. 'pose' → logprob: -26.25

Token 203: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001549737062305212
    2. ')
' → logprob: -6.50154972076416
    3. '   ' → logprob: -10.50154972076416
    4. '       ' → logprob: -11.37654972076416
    5. ' )' → logprob: -11.87654972076416
    6. ' ' → logprob: -14.12654972076416
    7. ',' → logprob: -16.126550674438477
    8. ')
' → logprob: -16.251550674438477
    9. ' ' → logprob: -16.501550674438477
    10. '#' → logprob: -16.876550674438477

Token 204: '       ' (ID: 309)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.060231976211071014
    2. '       ' → logprob: -3.435231924057007
    3. ' right' → logprob: -3.810231924057007
    4. ',right' → logprob: -6.685232162475586
    5. '        
' → logprob: -6.810232162475586
    6. ',' → logprob: -7.560232162475586
    7. '	right' → logprob: -7.560232162475586
    8. '    
' → logprob: -9.060232162475586
    9. ' ,' → logprob: -9.310232162475586
    10. '[right' → logprob: -9.435232162475586

Token 205: ' #' (ID: 1069)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.13243751227855682
    2. '       ' → logprob: -2.8824374675750732
    3. 'while' → logprob: -3.2574374675750732
    4. ' right' → logprob: -3.7574374675750732
    5. ' while' → logprob: -5.507437705993652
    6. 'pos' → logprob: -7.257437705993652
    7. '        
' → logprob: -7.382437705993652
    8. '	right' → logprob: -8.257437705993652
    9. ',' → logprob: -9.132437705993652
    10. ',right' → logprob: -9.257437705993652

Token 206: ' ignore' (ID: 17887)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.9550703763961792
    2. 'while' → logprob: -1.3300703763961792
    3. ' while' → logprob: -1.8300703763961792
    4. ' right' → logprob: -2.2050704956054688
    5. '       ' → logprob: -2.9550704956054688
    6. 'pos' → logprob: -3.8300704956054688
    7. ' pos' → logprob: -6.205070495605469
    8. '   ' → logprob: -6.955070495605469
    9. '        
' → logprob: -7.205070495605469
    10. '    ' → logprob: -7.580070495605469

Token 207: ' un' (ID: 537)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.10010303556919098
    2. 'while' → logprob: -2.8501031398773193
    3. ' ' → logprob: -4.35010290145874
    4. '<|end|>' → logprob: -4.47510290145874
    5. ' les' → logprob: -5.60010290145874
    6. ' spaces' → logprob: -6.22510290145874
    7. '   ' → logprob: -6.47510290145874
    8. ' ' → logprob: -6.60010290145874
    9. '  ' → logprob: -7.47510290145874
    10. ' 
' → logprob: -7.60010290145874

Token 208: ' espace' (ID: 66004)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5565547347068787
    2. ' '' → logprob: -1.5565547943115234
    3. ' espace' → logprob: -2.8065547943115234
    4. ''espace' → logprob: -3.1815547943115234
    5. ' while' → logprob: -3.4315547943115234
    6. 'es' → logprob: -4.181554794311523
    7. ' space' → logprob: -4.306554794311523
    8. 's' → logprob: -4.306554794311523
    9. ' espaces' → logprob: -4.931554794311523
    10. ''s' → logprob: -5.056554794311523

Token 209: ' après' (ID: 16460)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7746593952178955
    2. ' while' → logprob: -1.2746593952178955
    3. '<|end|>' → logprob: -1.7746593952178955
    4. ' ' → logprob: -3.2746593952178955
    5. 'while' → logprob: -3.3996593952178955
    6. '    ' → logprob: -5.149659156799316
    7. 'pos' → logprob: -5.899659156799316
    8. '        ' → logprob: -6.274659156799316
    9. '   ' → logprob: -6.274659156799316
    10. ' 
' → logprob: -6.524659156799316

Token 210: ' la' (ID: 557)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.28599536418914795
    2. 'while' → logprob: -1.785995364189148
    3. '<|end|>' → logprob: -3.0359954833984375
    4. '       ' → logprob: -3.9109954833984375
    5. 'pos' → logprob: -5.4109954833984375
    6. ' if' → logprob: -5.7859954833984375
    7. ' ' → logprob: -5.9109954833984375
    8. ' pos' → logprob: -7.1609954833984375
    9. '   ' → logprob: -7.5359954833984375
    10. 'if' → logprob: -7.5359954833984375

Token 211: ' sous' (ID: 14487)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.13731898367404938
    2. '')' → logprob: -3.0123190879821777
    3. 'right' → logprob: -3.1373190879821777
    4. ')' → logprob: -3.3873190879821777
    5. 'pos' → logprob: -7.512319087982178
    6. ' left' → logprob: -7.762319087982178
    7. '")' → logprob: -8.26231861114502
    8. ''' → logprob: -8.63731861114502
    9. ' ')' → logprob: -9.01231861114502
    10. '#' → logprob: -9.51231861114502

Token 212: '-ar' (ID: 31325)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.07181022316217422
    2. 'tree' → logprob: -2.696810245513916
    3. ')' → logprob: -7.071810245513916
    4. '   ' → logprob: -8.196809768676758
    5. 'arb' → logprob: -8.446809768676758
    6. ' arbre' → logprob: -8.696809768676758
    7. ' tree' → logprob: -9.321809768676758
    8. '```' → logprob: -9.696809768676758
    9. '_ar' → logprob: -9.821809768676758
    10. ' ' → logprob: -10.696809768676758

Token 213: 'bre' (ID: 9945)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.48548242449760437
    2. 'c' → logprob: -1.3604824542999268
    3. 'r' → logprob: -2.6104824542999268
    4. 'bre' → logprob: -3.7354824542999268
    5. 't' → logprob: -4.735482215881348
    6. 'm' → logprob: -5.110482215881348
    7. 'e' → logprob: -5.360482215881348
    8. 'bor' → logprob: -6.360482215881348
    9. 'pos' → logprob: -7.110482215881348
    10. 'bit' → logprob: -7.235482215881348

Token 214: ' gauche' (ID: 58367)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.48917943239212036
    2. 'while' → logprob: -0.9891794323921204
    3. '       ' → logprob: -4.739179611206055
    4. ' ' → logprob: -6.239179611206055
    5. '<|end|>' → logprob: -6.239179611206055
    6. '   ' → logprob: -6.364179611206055
    7. '    ' → logprob: -8.489179611206055
    8. ' if' → logprob: -9.489179611206055
    9. '	while' → logprob: -9.739179611206055
    10. ' 
' → logprob: -9.989179611206055

Token 215: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18316687643527985
    2. ' while' → logprob: -2.433166980743408
    3. 'while' → logprob: -2.558166980743408
    4. '   ' → logprob: -6.308166980743408
    5. '<|end|>' → logprob: -9.93316650390625
    6. '    ' → logprob: -10.05816650390625
    7. '        
' → logprob: -10.18316650390625
    8. ' if' → logprob: -10.18316650390625
    9. ' ' → logprob: -10.30816650390625
    10. ',' → logprob: -10.80816650390625

Token 216: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40158209204673767
    2. 'while' → logprob: -1.77658212184906
    3. ' while' → logprob: -1.90158212184906
    4. '   ' → logprob: -4.77658224105835
    5. 'pos' → logprob: -6.27658224105835
    6. '<|end|>' → logprob: -7.15158224105835
    7. '    ' → logprob: -8.276581764221191
    8. ' ' → logprob: -8.401581764221191
    9. '        
' → logprob: -9.151581764221191
    10. '        ' → logprob: -9.276581764221191

Token 217: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.22766990959644318
    2. ' while' → logprob: -1.6026699542999268
    3. '   ' → logprob: -6.852669715881348
    4. 'if' → logprob: -7.102669715881348
    5. ' if' → logprob: -8.727669715881348
    6. 'pos' → logprob: -8.977669715881348
    7. '       ' → logprob: -9.977669715881348
    8. '	while' → logprob: -10.602669715881348
    9. '    ' → logprob: -11.977669715881348
    10. ' pos' → logprob: -12.227669715881348

Token 218: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.04861098527908325
    2. 'pos' → logprob: -3.0486109256744385
    3. 's' → logprob: -11.04861068725586
    4. '(pos' → logprob: -12.54861068725586
    5. ' s' → logprob: -13.42361068725586
    6. '	pos' → logprob: -13.92361068725586
    7. '_pos' → logprob: -14.42361068725586
    8. '[pos' → logprob: -14.67361068725586
    9. 'Pos' → logprob: -15.17361068725586
    10. ' ' → logprob: -15.79861068725586

Token 219: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.03807787224650383
    2. '<' → logprob: -3.2880778312683105
    3. '<len' → logprob: -10.288078308105469
    4. '<n' → logprob: -14.538078308105469
    5. '<s' → logprob: -14.788078308105469
    6. ' ' → logprob: -15.038078308105469
    7. '<class' → logprob: -15.413078308105469
    8. '[' → logprob: -15.538078308105469
    9. '<size' → logprob: -15.788078308105469
    10. '<int' → logprob: -16.16307830810547

Token 220: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.2014138251543045
    2. ' len' → logprob: -1.701413869857788
    3. '(len' → logprob: -15.201414108276367
    4. '[len' → logprob: -16.201414108276367
    5. '<len' → logprob: -16.701414108276367
    6. '	len' → logprob: -16.826414108276367
    7. '=len' → logprob: -16.826414108276367
    8. ',len' → logprob: -18.326414108276367
    9. '1' → logprob: -19.076414108276367
    10. '```' → logprob: -19.451414108276367

Token 221: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.03807683661580086
    2. 's' → logprob: -3.288076877593994
    3. ' s' → logprob: -10.413076400756836
    4. ' (' → logprob: -12.913076400756836
    5. '(' → logprob: -13.163076400756836
    6. ')' → logprob: -15.038076400756836
    7. '```' → logprob: -15.038076400756836
    8. 'code' → logprob: -16.663076400756836
    9. 'def' → logprob: -16.913076400756836
    10. '[s' → logprob: -17.038076400756836

Token 222: ')' (ID: 8)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12704822421073914
    2. 'and' → logprob: -2.1270482540130615
    3. 's' → logprob: -9.62704849243164
    4. ')' → logprob: -10.12704849243164
    5. ' s' → logprob: -11.62704849243164
    6. ' ' → logprob: -13.37704849243164
    7. ' и' → logprob: -13.75204849243164
    8. '(s' → logprob: -13.75204849243164
    9. ' )' → logprob: -14.50204849243164
    10. '   ' → logprob: -15.50204849243164

Token 223: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16023468971252441
    2. 'and' → logprob: -1.9102346897125244
    3. 's' → logprob: -12.785234451293945
    4. ' <' → logprob: -13.160234451293945
    5. '>' → logprob: -13.285234451293945
    6. '<' → logprob: -14.160234451293945
    7. '```' → logprob: -14.410234451293945
    8. '==' → logprob: -14.535234451293945
    9. ' s' → logprob: -14.660234451293945
    10. '   ' → logprob: -15.035234451293945

Token 224: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.16022564470767975
    2. 's' → logprob: -1.9102256298065186
    3. '(s' → logprob: -13.785225868225098
    4. ' ' → logprob: -15.660225868225098
    5. ' ' → logprob: -16.03522491455078
    6. '	s' → logprob: -16.03522491455078
    7. '_s' → logprob: -17.78522491455078
    8. 'pos' → logprob: -18.16022491455078
    9. '<|end|>' → logprob: -18.28522491455078
    10. ')' → logprob: -18.78522491455078

Token 225: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.00010485442908247933
    2. '[' → logprob: -9.875104904174805
    3. '[s' → logprob: -10.375104904174805
    4. ' [' → logprob: -11.125104904174805
    5. 'pos' → logprob: -12.625104904174805
    6. '[p' → logprob: -12.875104904174805
    7. '][' → logprob: -14.750104904174805
    8. '[position' → logprob: -14.875104904174805
    9. 's' → logprob: -15.500104904174805
    10. '[
' → logprob: -15.500104904174805

Token 226: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04182177037000656
    2. '==' → logprob: -3.5418217182159424
    3. ']' → logprob: -4.6668219566345215
    4. ']==' → logprob: -6.2918219566345215
    5. '=='' → logprob: -8.041821479797363
    6. ' =='' → logprob: -8.416821479797363
    7. ']=='' → logprob: -9.291821479797363
    8. ' ]' → logprob: -9.916821479797363
    9. ')' → logprob: -10.916821479797363
    10. 's' → logprob: -11.541821479797363

Token 227: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.019242851063609123
    2. '==' → logprob: -4.019242763519287
    3. '=='' → logprob: -7.519242763519287
    4. ' =='' → logprob: -7.644242763519287
    5. ''' → logprob: -10.394243240356445
    6. ' ' → logprob: -10.644243240356445
    7. ' '' → logprob: -11.394243240356445
    8. ' =' → logprob: -14.394243240356445
    9. '=="' → logprob: -14.519243240356445
    10. ' ===' → logprob: -14.644243240356445

Token 228: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0007191036129370332
    2. ' '' → logprob: -7.25071907043457
    3. '"' → logprob: -11.62571907043457
    4. ' ' → logprob: -16.50071907043457
    5. '`' → logprob: -17.75071907043457
    6. ''espace' → logprob: -18.87571907043457
    7. ''s' → logprob: -19.00071907043457
    8. 'space' → logprob: -19.25071907043457
    9. ' ' → logprob: -19.37571907043457
    10. '',' → logprob: -20.00071907043457

Token 229: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.7343690991401672
    2. ''' → logprob: -0.8593690991401672
    3. ' ':' → logprob: -2.3593690395355225
    4. '':' → logprob: -6.859369277954102
    5. ' '>' → logprob: -7.859369277954102
    6. ' ')' → logprob: -7.984369277954102
    7. ' ' → logprob: -8.359369277954102
    8. ''s' → logprob: -9.984369277954102
    9. ''>' → logprob: -10.109369277954102
    10. ' ':'' → logprob: -10.359369277954102

Token 230: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5976372361183167
    2. ':' → logprob: -0.8476372361183167
    3. '       ' → logprob: -3.972637176513672
    4. '   ' → logprob: -6.972637176513672
    5. 'pos' → logprob: -7.097637176513672
    6. '):
' → logprob: -7.722637176513672
    7. ',' → logprob: -9.222637176513672
    8. '):' → logprob: -9.347637176513672
    9. '<|end|>' → logprob: -10.097637176513672
    10. '           ' → logprob: -10.222637176513672

Token 231: '           ' (ID: 352)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.11780930310487747
    2. '       ' → logprob: -2.367809295654297
    3. '   ' → logprob: -4.117809295654297
    4. ' pos' → logprob: -6.992809295654297
    5. '           ' → logprob: -8.367809295654297
    6. '	pos' → logprob: -11.117809295654297
    7. '               ' → logprob: -13.992809295654297
    8. ' ' → logprob: -14.992809295654297
    9. ',pos' → logprob: -15.117809295654297
    10. '	   ' → logprob: -15.617809295654297

Token 232: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -1.1472419600977446e-06
    2. ' pos' → logprob: -13.750000953674316
    3. '           ' → logprob: -18.250001907348633
    4. '       ' → logprob: -19.500001907348633
    5. '   ' → logprob: -19.875001907348633
    6. '	pos' → logprob: -21.250001907348633
    7. '               ' → logprob: -23.500001907348633
    8. '_pos' → logprob: -23.875001907348633
    9. 'position' → logprob: -24.000001907348633
    10. 'post' → logprob: -24.000001907348633

Token 233: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.029765645042061806
    2. ' +=' → logprob: -3.5297656059265137
    3. ']+=' → logprob: -12.404766082763672
    4. '            ' → logprob: -12.529766082763672
    5. '           ' → logprob: -12.529766082763672
    6. '        ' → logprob: -13.779766082763672
    7. '       ' → logprob: -14.029766082763672
    8. '=' → logprob: -14.154766082763672
    9. '    ' → logprob: -15.029766082763672
    10. '   ' → logprob: -15.279766082763672

Token 234: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001239196863025427
    2. ' ' → logprob: -9.000123977661133
    3. '   ' → logprob: -15.000123977661133
    4. '           ' → logprob: -16.750123977661133
    5. '       ' → logprob: -17.812623977661133
    6. '```' → logprob: -17.937623977661133
    7. '
' → logprob: -18.500123977661133
    8. '۱' → logprob: -18.812623977661133
    9. '１' → logprob: -19.062623977661133
    10. ')' → logprob: -19.187623977661133

Token 235: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -17.625003814697266
    4. '
' → logprob: -18.000003814697266
    5. '   ' → logprob: -18.187503814697266
    6. ')' → logprob: -19.187503814697266
    7. '۱' → logprob: -19.250003814697266
    8. '

' → logprob: -19.312503814697266
    9. '１' → logprob: -19.375003814697266
    10. '0' → logprob: -19.625003814697266

Token 236: '
' (ID: 198)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0006575119914487004
    2. ' right' → logprob: -7.500657558441162
    3. '       ' → logprob: -10.000657081604004
    4. ',right' → logprob: -10.625657081604004
    5. '<|end|>' → logprob: -11.125657081604004
    6. '	right' → logprob: -12.000657081604004
    7. ',' → logprob: -12.625657081604004
    8. '
' → logprob: -12.750657081604004
    9. '[right' → logprob: -13.125657081604004
    10. ')' → logprob: -13.875657081604004

Token 237: '       ' (ID: 309)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.00014358828775584698
    2. ' right' → logprob: -9.000144004821777
    3. '       ' → logprob: -11.750144004821777
    4. ',right' → logprob: -12.125144004821777
    5. '	right' → logprob: -12.875144004821777
    6. '
' → logprob: -14.000144004821777
    7. 'r' → logprob: -14.250144004821777
    8. '[right' → logprob: -14.500144004821777
    9. ',' → logprob: -14.875144004821777
    10. 'rightness' → logprob: -15.250144004821777

Token 238: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -3.583550642360933e-05
    2. ' right' → logprob: -10.250036239624023
    3. '       ' → logprob: -16.000036239624023
    4. '	right' → logprob: -16.250036239624023
    5. ',right' → logprob: -16.875036239624023
    6. 'r' → logprob: -17.375036239624023
    7. 'rig' → logprob: -18.000036239624023
    8. '[right' → logprob: -18.125036239624023
    9. 'rightness' → logprob: -18.375036239624023
    10. 'root' → logprob: -18.500036239624023

Token 239: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.0219828002154827e-05
    2. ' ,' → logprob: -10.875020027160645
    3. ',pos' → logprob: -14.750020027160645
    4. '=' → logprob: -15.250020027160645
    5. ',right' → logprob: -16.25002098083496
    6. ',left' → logprob: -16.62502098083496
    7. ',new' → logprob: -16.87502098083496
    8. ',next' → logprob: -17.12502098083496
    9. ',
' → logprob: -17.12502098083496
    10. '‌,' → logprob: -17.37502098083496

Token 240: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.3132709264755249
    2. 'pos' → logprob: -1.313270926475525
    3. 's' → logprob: -12.813270568847656
    4. ' s' → logprob: -13.063270568847656
    5. '	pos' → logprob: -13.063270568847656
    6. '(pos' → logprob: -14.063270568847656
    7. '_pos' → logprob: -14.438270568847656
    8. '<|end|>' → logprob: -15.063270568847656
    9. '[pos' → logprob: -15.438270568847656
    10. ',pos' → logprob: -15.688270568847656

Token 241: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1004253402352333
    2. ' =' → logprob: -2.4754252433776855
    3. ',' → logprob: -4.4754252433776855
    4. ' ,' → logprob: -10.725425720214844
    5. ')' → logprob: -11.850425720214844
    6. '=
' → logprob: -13.725425720214844
    7. '<|end|>' → logprob: -13.725425720214844
    8. '   ' → logprob: -13.850425720214844
    9. ')=' → logprob: -13.850425720214844
    10. '),' → logprob: -15.225425720214844

Token 242: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.16022564470767975
    2. ' parse' → logprob: -1.9102256298065186
    3. '(parse' → logprob: -13.660225868225098
    4. '	parse' → logprob: -15.410225868225098
    5. 'par' → logprob: -17.41022491455078
    6. '=parse' → logprob: -17.78522491455078
    7. '_parse' → logprob: -18.28522491455078
    8. 'parser' → logprob: -18.41022491455078
    9. '.parse' → logprob: -18.66022491455078
    10. ' ' → logprob: -20.41022491455078

Token 243: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -5.512236498361744e-07
    2. 'tree' → logprob: -14.625000953674316
    3. '_t' → logprob: -17.875
    4. 's' → logprob: -18.375
    5. '(s' → logprob: -18.375
    6. '_TREE' → logprob: -18.75
    7. '(_' → logprob: -19.125
    8. '_ar' → logprob: -19.5
    9. '_' → logprob: -19.625
    10. '\' → logprob: -19.75

Token 244: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0001170132018160075
    2. 's' → logprob: -9.125117301940918
    3. '(' → logprob: -11.875117301940918
    4. '<|end|>' → logprob: -14.375117301940918
    5. ' (' → logprob: -14.625117301940918
    6. '(
' → logprob: -17.6251163482666
    7. ' s' → logprob: -18.5001163482666
    8. '<|end|>' → logprob: -18.6251163482666
    9. ')' → logprob: -18.7501163482666
    10. '```' → logprob: -19.0001163482666

Token 245: ',' (ID: 11)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.03463245555758476
    2. 's' → logprob: -3.409632444381714
    3. ',' → logprob: -7.534632682800293
    4. ')' → logprob: -8.409632682800293
    5. ' s' → logprob: -9.284632682800293
    6. ',s' → logprob: -9.659632682800293
    7. '(' → logprob: -10.409632682800293
    8. ')s' → logprob: -10.659632682800293
    9. '),' → logprob: -11.784632682800293
    10. ' (' → logprob: -12.284632682800293

Token 246: ' pos' (ID: 1253)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.014173032715916634
    2. ' s' → logprob: -4.2641730308532715
    3. 'pos' → logprob: -11.63917350769043
    4. ' pos' → logprob: -14.88917350769043
    5. '(s' → logprob: -15.38917350769043
    6. ')' → logprob: -16.26417350769043
    7. ' ' → logprob: -17.63917350769043
    8. '   ' → logprob: -17.76417350769043
    9. ' ' → logprob: -18.01417350769043
    10. '	s' → logprob: -18.26417350769043

Token 247: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009240844519808888
    2. ')
' → logprob: -7.375924110412598
    3. '   ' → logprob: -9.000924110412598
    4. '       ' → logprob: -9.250924110412598
    5. '<|end|>' → logprob: -9.750924110412598
    6. ' )' → logprob: -11.750924110412598
    7. ')return' → logprob: -13.125924110412598
    8. '#' → logprob: -13.375924110412598
    9. ' ' → logprob: -13.500924110412598
    10. ')#' → logprob: -13.875924110412598

Token 248: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04837125539779663
    2. '   ' → logprob: -3.5483713150024414
    3. 'while' → logprob: -4.173371315002441
    4. ' while' → logprob: -6.298371315002441
    5. '#' → logprob: -7.923371315002441
    6. '        
' → logprob: -8.548371315002441
    7. '	while' → logprob: -8.673371315002441
    8. '```' → logprob: -9.173371315002441
    9. '<|end|>' → logprob: -9.423371315002441
    10. '           ' → logprob: -9.798371315002441

Token 249: ' while' (ID: 2049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7348944544792175
    2. 'while' (adapté à ' while') → logprob: -0.8598944544792175
    3. '   ' → logprob: -2.8598945140838623
    4. ' while' → logprob: -3.3598945140838623
    5. 'pos' → logprob: -6.359894275665283
    6. '#' → logprob: -6.484894275665283
    7. '	while' → logprob: -7.484894275665283
    8. ')' → logprob: -7.859894275665283
    9. '           ' → logprob: -8.484894752502441
    10. '        
' → logprob: -8.484894752502441

Token 250: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.06994109600782394
    2. 'pos' → logprob: -2.6949410438537598
    3. '(pos' → logprob: -13.444941520690918
    4. '	pos' → logprob: -13.569941520690918
    5. '_pos' → logprob: -14.444941520690918
    6. ' ' → logprob: -15.069941520690918
    7. '[pos' → logprob: -15.069941520690918
    8. ' ' → logprob: -15.194941520690918
    9. '.pos' → logprob: -15.569941520690918
    10. 'Pos' → logprob: -16.0699405670166

Token 251: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.00671584764495492
    2. '<' → logprob: -5.006715774536133
    3. '<len' → logprob: -14.756715774536133
    4. ' ' → logprob: -16.881715774536133
    5. '<int' → logprob: -18.006715774536133
    6. '<class' → logprob: -18.131715774536133
    7. '   ' → logprob: -18.256715774536133
    8. ' ' → logprob: -18.381715774536133
    9. '[' → logprob: -19.131715774536133
    10. '<size' → logprob: -19.506715774536133

Token 252: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.16022513806819916
    2. ' len' → logprob: -1.9102251529693604
    3. '(len' → logprob: -14.035224914550781
    4. '<len' → logprob: -16.41022491455078
    5. '	len' → logprob: -17.03522491455078
    6. '[len' → logprob: -17.16022491455078
    7. '=len' → logprob: -18.41022491455078
    8. 'pos' → logprob: -18.66022491455078
    9. 'length' → logprob: -19.03522491455078
    10. ',len' → logprob: -19.41022491455078

Token 253: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -6.0391463193809614e-05
    2. 's' → logprob: -10.125060081481934
    3. '(len' → logprob: -11.125060081481934
    4. 'len' → logprob: -12.125060081481934
    5. '(' → logprob: -16.25006103515625
    6. 'def' → logprob: -17.75006103515625
    7. ' (' → logprob: -18.50006103515625
    8. '```' → logprob: -19.25006103515625
    9. '   ' → logprob: -19.50006103515625
    10. 'and' → logprob: -20.50006103515625

Token 254: ')' (ID: 8)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16604821383953094
    2. 'and' → logprob: -1.9160481691360474
    3. ')' → logprob: -5.166048049926758
    4. ']' → logprob: -9.541048049926758
    5. '<' → logprob: -12.166048049926758
    6. '>' → logprob: -12.416048049926758
    7. '   ' → logprob: -12.541048049926758
    8. 's' → logprob: -12.666048049926758
    9. ' s' → logprob: -12.916048049926758
    10. ' )' → logprob: -13.291048049926758

Token 255: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.061978328973054886
    2. 'and' → logprob: -2.811978340148926
    3. ' s' → logprob: -13.061978340148926
    4. '==' → logprob: -13.061978340148926
    5. '<' → logprob: -13.186978340148926
    6. 's' → logprob: -13.561978340148926
    7. ' ' → logprob: -13.811978340148926
    8. ' ==' → logprob: -14.311978340148926
    9. '   ' → logprob: -14.436978340148926
    10. ' <' → logprob: -14.686978340148926

Token 256: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.05488826707005501
    2. 's' → logprob: -2.9298882484436035
    3. '(s' → logprob: -12.304888725280762
    4. 'pos' → logprob: -14.554888725280762
    5. ' ' → logprob: -15.179888725280762
    6. ' ' → logprob: -15.429888725280762
    7. '   ' → logprob: -16.179887771606445
    8. '	s' → logprob: -16.304887771606445
    9. ' (' → logprob: -16.929887771606445
    10. '```' → logprob: -17.054887771606445

Token 257: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -3.4121114822482923e-06
    2. 'pos' → logprob: -12.750003814697266
    3. '[' → logprob: -15.625003814697266
    4. '[p' → logprob: -15.875003814697266
    5. '[s' → logprob: -16.750003814697266
    6. '[position' → logprob: -17.125003814697266
    7. '(pos' → logprob: -17.875003814697266
    8. 's' → logprob: -19.250003814697266
    9. '[prop' → logprob: -19.250003814697266
    10. '[user' → logprob: -19.500003814697266

Token 258: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4204307198524475
    2. ' ==' → logprob: -1.2954306602478027
    3. '==' → logprob: -2.9204306602478027
    4. ']==' → logprob: -4.170430660247803
    5. ' ]' → logprob: -9.920431137084961
    6. ']=='' → logprob: -10.670431137084961
    7. '=='' → logprob: -11.545431137084961
    8. ')' → logprob: -12.295431137084961
    9. '']' → logprob: -12.545431137084961
    10. ' ' → logprob: -12.795431137084961

Token 259: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.048675935715436935
    2. '==' → logprob: -3.048676013946533
    3. '=='' → logprob: -9.923675537109375
    4. ' ' → logprob: -10.798675537109375
    5. ' =='' → logprob: -11.548675537109375
    6. ']==' → logprob: -12.798675537109375
    7. ']' → logprob: -13.798675537109375
    8. '=' → logprob: -13.923675537109375
    9. ')' → logprob: -13.923675537109375
    10. '    ' → logprob: -14.298675537109375

Token 260: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0017095671501010656
    2. ' '' → logprob: -6.376709461212158
    3. ''s' → logprob: -12.001709938049316
    4. '')' → logprob: -15.001709938049316
    5. ')' → logprob: -15.376709938049316
    6. '"' → logprob: -15.376709938049316
    7. 's' → logprob: -15.501709938049316
    8. '('' → logprob: -16.001708984375
    9. ' ' → logprob: -16.251708984375
    10. '`' → logprob: -18.251708984375

Token 261: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00026765360962599516
    2. ')' → logprob: -8.87526798248291
    3. ' '' → logprob: -9.25026798248291
    4. '')' → logprob: -10.62526798248291
    5. '"' → logprob: -13.00026798248291
    6. ' ' → logprob: -13.25026798248291
    7. ' )' → logprob: -13.25026798248291
    8. ' ')' → logprob: -14.12526798248291
    9. ' ')'' → logprob: -15.12526798248291
    10. ''s' → logprob: -16.250267028808594

Token 262: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5784698724746704
    2. '       ' → logprob: -1.2034698724746704
    3. '=' → logprob: -2.828469753265381
    4. ':
' → logprob: -3.203469753265381
    5. '           ' → logprob: -3.578469753265381
    6. '   ' → logprob: -5.578469753265381
    7. '+=' → logprob: -5.703469753265381
    8. '==' → logprob: -6.453469753265381
    9. '<|end|>' → logprob: -7.703469753265381
    10. ',' → logprob: -8.203470230102539

Token 263: '           ' (ID: 352)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.050171468406915665
    2. '       ' → logprob: -3.300171375274658
    3. '   ' → logprob: -4.675171375274658
    4. ' pos' → logprob: -6.300171375274658
    5. '           ' → logprob: -7.050171375274658
    6. '	pos' → logprob: -10.675171852111816
    7. '```' → logprob: -13.425171852111816
    8. '               ' → logprob: -14.425171852111816
    9. ' ' → logprob: -14.675171852111816
    10. '   ' → logprob: -14.675171852111816

Token 264: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -1.5048530030981055e-06
    2. ' pos' → logprob: -13.500001907348633
    3. '           ' → logprob: -17.250001907348633
    4. '       ' → logprob: -18.625001907348633
    5. '   ' → logprob: -19.125001907348633
    6. '	pos' → logprob: -20.250001907348633
    7. '_pos' → logprob: -23.125001907348633
    8. 'Pos' → logprob: -23.250001907348633
    9. '               ' → logprob: -23.875001907348633
    10. 'posit' → logprob: -25.125001907348633

Token 265: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0015059324214234948
    2. ' +=' → logprob: -6.5015058517456055
    3. ']+=' → logprob: -13.376505851745605
    4. '       ' → logprob: -14.126505851745605
    5. '           ' → logprob: -14.626505851745605
    6. '   ' → logprob: -15.126505851745605
    7. '+' → logprob: -15.626505851745605
    8. '        ' → logprob: -15.876505851745605
    9. '          ' → logprob: -16.501506805419922
    10. '=' → logprob: -16.626506805419922

Token 266: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.372294698550832e-06
    2. ' ' → logprob: -11.625009536743164
    3. '   ' → logprob: -15.750009536743164
    4. '           ' → logprob: -16.000009536743164
    5. '       ' → logprob: -17.500009536743164
    6. '```' → logprob: -17.625009536743164
    7. '
' → logprob: -18.125009536743164
    8. '               ' → logprob: -18.500009536743164
    9. '                   ' → logprob: -19.000009536743164
    10. '１' → logprob: -20.375009536743164

Token 267: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.9153885558771435e-06
    2. ' ' → logprob: -12.125005722045898
    3. '```' → logprob: -16.1250057220459
    4. '
' → logprob: -16.3750057220459
    5. '   ' → logprob: -16.3750057220459
    6. '           ' → logprob: -17.3125057220459
    7. '

' → logprob: -18.8125057220459
    8. '       ' → logprob: -18.8125057220459
    9. ')' → logprob: -18.8125057220459
    10. '#' → logprob: -19.1250057220459

Token 268: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4132084846496582
    2. '       ' → logprob: -1.1632084846496582
    3. ' if' → logprob: -3.788208484649658
    4. '   ' → logprob: -5.913208484649658
    5. ')' → logprob: -7.788208484649658
    6. 'return' → logprob: -9.2882080078125
    7. '	if' → logprob: -10.0382080078125
    8. 'assert' → logprob: -10.1632080078125
    9. '<|end|>' → logprob: -10.2882080078125
    10. '#' → logprob: -12.2882080078125

Token 269: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10379280894994736
    2. 'pos' → logprob: -3.103792905807495
    3. '   ' → logprob: -3.603792905807495
    4. '       ' → logprob: -4.103792667388916
    5. ')' → logprob: -4.853792667388916
    6. 'assert' → logprob: -6.853792667388916
    7. ' if' → logprob: -7.228792667388916
    8. '<|end|>' → logprob: -9.228793144226074
    9. 'return' → logprob: -9.478793144226074
    10. ']' → logprob: -9.853793144226074

Token 270: ' #' (ID: 1069)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.1610211431980133
    2. 'if' → logprob: -1.911021113395691
    3. 'assert' → logprob: -7.1610212326049805
    4. ' pos' → logprob: -11.66102123260498
    5. '   ' → logprob: -12.28602123260498
    6. 'return' → logprob: -12.66102123260498
    7. ' if' → logprob: -13.16102123260498
    8. ')' → logprob: -13.53602123260498
    9. '	pos' → logprob: -15.28602123260498
    10. '_pos' → logprob: -16.536020278930664

Token 271: ' doit' (ID: 21822)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.2831878066062927
    2. 'if' → logprob: -1.5331878662109375
    3. 'assert' → logprob: -3.5331878662109375
    4. ')' → logprob: -6.5331878662109375
    5. '#' → logprob: -9.783187866210938
    6. ' pos' → logprob: -10.533187866210938
    7. ' if' → logprob: -11.783187866210938
    8. '   ' → logprob: -11.908187866210938
    9. 'return' → logprob: -13.283187866210938
    10. ' assert' → logprob: -13.533187866210938

Token 272: ' se' (ID: 458)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2731208801269531
    2. 're' → logprob: -2.148120880126953
    3. '   ' → logprob: -2.523120880126953
    4. 'être' → logprob: -4.398120880126953
    5. 's' → logprob: -4.648120880126953
    6. ' if' → logprob: -5.523120880126953
    7. 'y' → logprob: -5.648120880126953
    8. 'assert' → logprob: -5.648120880126953
    9. '       ' → logprob: -6.023120880126953
    10. '    ' → logprob: -6.773120880126953

Token 273: ' terminer' (ID: 152867)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.7755059599876404
    2. 'termin' → logprob: -1.0255060195922852
    3. 'tr' → logprob: -2.150506019592285
    4. 'con' → logprob: -4.900506019592285
    5. 'cher' → logprob: -5.150506019592285
    6. 'trer' → logprob: -5.150506019592285
    7. 'term' → logprob: -5.525506019592285
    8. 'ter' → logprob: -5.525506019592285
    9. 'forcer' → logprob: -5.650506019592285
    10. 'find' → logprob: -6.025506019592285

Token 274: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.2562643885612488
    2. ')' → logprob: -1.6312644481658936
    3. ' par' → logprob: -4.5062642097473145
    4. 's' → logprob: -4.7562642097473145
    5. 'if' → logprob: -5.0062642097473145
    6. 'by' → logprob: -6.2562642097473145
    7. '   ' → logprob: -7.6312642097473145
    8. ' by' → logprob: -7.8812642097473145
    9. 'with' → logprob: -8.506264686584473
    10. '<|end|>' → logprob: -8.881264686584473

Token 275: ' ')' (ID: 35910)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.03805456683039665
    2. ')' → logprob: -3.2880544662475586
    3. ' ')'' → logprob: -12.038054466247559
    4. '")' → logprob: -12.163054466247559
    5. ''' → logprob: -13.913054466247559
    6. ')'' → logprob: -14.413054466247559
    7. ' ')' → logprob: -16.538055419921875
    8. ')`' → logprob: -16.788055419921875
    9. '')"' → logprob: -17.163055419921875
    10. '(' → logprob: -17.163055419921875

Token 276: ''
' (ID: 2207)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008492360822856426
    2. '       ' → logprob: -4.883492469787598
    3. '   ' → logprob: -7.633492469787598
    4. ')
' → logprob: -8.758492469787598
    5. 'pos' → logprob: -10.133492469787598
    6. '}' → logprob: -10.383492469787598
    7. ']' → logprob: -10.508492469787598
    8. '           ' → logprob: -10.633492469787598
    9. '')' → logprob: -10.883492469787598
    10. '<|end|>' → logprob: -10.883492469787598

Token 277: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08724856376647949
    2. ')' → logprob: -2.7122485637664795
    3. '       ' → logprob: -4.337248802185059
    4. '   ' → logprob: -5.837248802185059
    5. ' if' → logprob: -7.087248802185059
    6. 'pos' → logprob: -8.462248802185059
    7. 'assert' → logprob: -9.962248802185059
    8. ')
' → logprob: -10.587248802185059
    9. '	if' → logprob: -11.462248802185059
    10. ']' → logprob: -11.962248802185059

Token 278: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.014277150854468346
    2. 'assert' → logprob: -4.26427698135376
    3. 'pos' → logprob: -9.389277458190918
    4. ' if' → logprob: -11.014277458190918
    5. '   ' → logprob: -12.139277458190918
    6. ')' → logprob: -12.139277458190918
    7. '       ' → logprob: -13.639277458190918
    8. 'return' → logprob: -13.889277458190918
    9. ' assert' → logprob: -14.389277458190918
    10. '#' → logprob: -16.2642765045166

Token 279: ' pos' (ID: 1253)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.35009831190109253
    2. 's' → logprob: -1.2250983715057373
    3. 'pos' → logprob: -6.725098133087158
    4. ' pos' → logprob: -7.725098133087158
    5. '	s' → logprob: -12.475098609924316
    6. '(s' → logprob: -12.975098609924316
    7. '_s' → logprob: -13.475098609924316
    8. ' ' → logprob: -14.537598609924316
    9. ' ' → logprob: -15.600098609924316
    10. '   ' → logprob: -15.725098609924316

Token 280: ' <' (ID: 464)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.33170345425605774
    2. ' <' → logprob: -1.7067034244537354
    3. '>=' → logprob: -2.3317034244537354
    4. '<' → logprob: -6.0817036628723145
    5. '<len' → logprob: -6.7067036628723145
    6. '[' → logprob: -10.081703186035156
    7. ' ==' → logprob: -10.206703186035156
    8. ')>=' → logprob: -10.331703186035156
    9. '==' → logprob: -10.456703186035156
    10. ']>=' → logprob: -10.956703186035156

Token 281: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.001170225441455841
    2. ' len' → logprob: -6.7511701583862305
    3. '(len' → logprob: -17.001171112060547
    4. '<len' → logprob: -18.501171112060547
    5. '[len' → logprob: -19.001171112060547
    6. '=len' → logprob: -19.501171112060547
    7. '	len' → logprob: -21.126171112060547
    8. ',len' → logprob: -21.876171112060547
    9. ' ' → logprob: -23.501171112060547
    10. '1' → logprob: -24.001171112060547

Token 282: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.12700191140174866
    2. 's' → logprob: -2.127002000808716
    3. ')' → logprob: -10.127001762390137
    4. ' s' → logprob: -10.502001762390137
    5. ' (' → logprob: -12.877001762390137
    6. ')s' → logprob: -13.002001762390137
    7. '(' → logprob: -13.627001762390137
    8. '(len' → logprob: -16.127002716064453
    9. 'len' → logprob: -16.252002716064453
    10. ' )' → logprob: -16.377002716064453

Token 283: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014128545299172401
    2. ' and' → logprob: -6.751412868499756
    3. 'and' → logprob: -8.376412391662598
    4. ' )' → logprob: -11.751412391662598
    5. '):
' → logprob: -13.501412391662598
    6. ']' → logprob: -14.001412391662598
    7. '')' → logprob: -14.376412391662598
    8. '           ' → logprob: -14.751412391662598
    9. '   ' → logprob: -15.001412391662598
    10. '       ' → logprob: -15.126412391662598

Token 284: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1002274826169014
    2. 'and' → logprob: -2.3502275943756104
    3. '==' → logprob: -11.725227355957031
    4. ')' → logprob: -12.225227355957031
    5. '<' → logprob: -13.100227355957031
    6. ' <' → logprob: -13.475227355957031
    7. ' ==' → logprob: -13.600227355957031
    8. '           ' → logprob: -14.475227355957031
    9. 's' → logprob: -14.975227355957031
    10. '	and' → logprob: -15.225227355957031

Token 285: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2014327198266983
    2. ' s' → logprob: -1.701432704925537
    3. ')' → logprob: -11.076433181762695
    4. ')s' → logprob: -13.201433181762695
    5. '')' → logprob: -13.951433181762695
    6. '   ' → logprob: -14.701433181762695
    7. ' ' → logprob: -14.701433181762695
    8. '	s' → logprob: -15.701433181762695
    9. ' ' → logprob: -16.826433181762695
    10. '(s' → logprob: -16.951433181762695

Token 286: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.0023638748098164797
    2. ']' → logprob: -6.127363681793213
    3. '==' → logprob: -10.002364158630371
    4. '[' → logprob: -10.127364158630371
    5. ']==' → logprob: -10.377364158630371
    6. ')' → logprob: -11.002364158630371
    7. 'pos' → logprob: -11.127364158630371
    8. ' ==' → logprob: -11.502364158630371
    9. '[s' → logprob: -11.627364158630371
    10. 's' → logprob: -12.127364158630371

Token 287: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08159986138343811
    2. ')' → logprob: -2.7065999507904053
    3. ']==' → logprob: -5.081599712371826
    4. '==' → logprob: -5.831599712371826
    5. ' ==' → logprob: -6.456599712371826
    6. '']' → logprob: -7.331599712371826
    7. ')==' → logprob: -8.706600189208984
    8. ' ]' → logprob: -10.706600189208984
    9. ' )' → logprob: -11.331600189208984
    10. ')]' → logprob: -11.956600189208984

Token 288: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5710209608078003
    2. ')' → logprob: -1.0710209608078003
    3. ' ==' → logprob: -2.44602108001709
    4. ')==' → logprob: -5.19602108001709
    5. '=' → logprob: -9.44602108001709
    6. '')' → logprob: -9.82102108001709
    7. ']==' → logprob: -10.19602108001709
    8. '==
' → logprob: -10.82102108001709
    9. ']' → logprob: -11.44602108001709
    10. ')
' → logprob: -12.69602108001709

Token 289: ' ')' (ID: 35910)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.020711220800876617
    2. ')' → logprob: -3.8957111835479736
    3. ' ')' → logprob: -9.145710945129395
    4. ''' → logprob: -10.395710945129395
    5. ' ')'' → logprob: -10.645710945129395
    6. '")' → logprob: -12.520710945129395
    7. ''):' → logprob: -13.145710945129395
    8. ')'' → logprob: -13.895710945129395
    9. '']' → logprob: -14.770710945129395
    10. ' )' → logprob: -15.645710945129395

Token 290: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5616157650947571
    2. ':' → logprob: -1.1866157054901123
    3. '):
' → logprob: -2.8116157054901123
    4. '       ' → logprob: -3.3116157054901123
    5. '):' → logprob: -3.8116157054901123
    6. ')' → logprob: -5.311615943908691
    7. '   ' → logprob: -7.811615943908691
    8. '           ' → logprob: -9.311615943908691
    9. '<|end|>' → logprob: -9.686615943908691
    10. ' :
' → logprob: -9.811615943908691

Token 291: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38877883553504944
    2. '       ' → logprob: -1.138778805732727
    3. 'pos' → logprob: -6.7637786865234375
    4. ' pos' → logprob: -7.5137786865234375
    5. '   ' → logprob: -9.638778686523438
    6. '	       ' → logprob: -9.638778686523438
    7. '<|end|>' → logprob: -11.013778686523438
    8. ',pos' → logprob: -11.388778686523438
    9. '	pos' → logprob: -11.513778686523438
    10. ')' → logprob: -11.763778686523438

Token 292: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.22794461250305176
    2. '           ' → logprob: -1.7279446125030518
    3. ' pos' → logprob: -3.8529446125030518
    4. '       ' → logprob: -5.852944374084473
    5. '               ' → logprob: -6.227944374084473
    6. 'return' → logprob: -9.852944374084473
    7. '	pos' → logprob: -10.602944374084473
    8. '   ' → logprob: -10.977944374084473
    9. '	       ' → logprob: -11.602944374084473
    10. ' return' → logprob: -11.602944374084473

Token 293: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.1608450561761856
    2. '+=' → logprob: -1.9108450412750244
    3. '+' → logprob: -7.6608452796936035
    4. '           ' → logprob: -8.910844802856445
    5. ' +' → logprob: -11.410844802856445
    6. ']+=' → logprob: -13.660844802856445
    7. '       ' → logprob: -13.785844802856445
    8. '=' → logprob: -14.910844802856445
    9. '            ' → logprob: -14.910844802856445
    10. '               ' → logprob: -15.535844802856445

Token 294: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009114635176956654
    2. ' ' → logprob: -7.000911235809326
    3. '   ' → logprob: -18.875911712646484
    4. '```' → logprob: -18.875911712646484
    5. ')' → logprob: -20.375911712646484
    6. '１' → logprob: -20.500911712646484
    7. '
' → logprob: -20.813411712646484
    8. ' ' → logprob: -21.125911712646484
    9. '       ' → logprob: -21.625911712646484
    10. '0' → logprob: -21.688411712646484

Token 295: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '
' → logprob: -20.25
    4. '```' → logprob: -20.625
    5. '   ' → logprob: -20.875
    6. '１' → logprob: -21.875
    7. '0' → logprob: -22.25
    8. ')' → logprob: -22.375
    9. '۱' → logprob: -22.5625
    10. '

' → logprob: -22.9375

Token 296: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005337993614375591
    2. '       ' → logprob: -5.255338191986084
    3. 'return' → logprob: -10.380337715148926
    4. ' return' → logprob: -10.880337715148926
    5. '   ' → logprob: -11.130337715148926
    6. '	       ' → logprob: -11.255337715148926
    7. '		' → logprob: -11.505337715148926
    8. '               ' → logprob: -12.255337715148926
    9. '<|end|>' → logprob: -12.255337715148926
    10. '	   ' → logprob: -13.255337715148926

Token 297: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012227282859385014
    2. '       ' → logprob: -6.751222610473633
    3. 'return' → logprob: -10.126222610473633
    4. '   ' → logprob: -12.126222610473633
    5. ' return' → logprob: -12.126222610473633
    6. '		' → logprob: -14.126222610473633
    7. '               ' → logprob: -14.626222610473633
    8. '	       ' → logprob: -15.126222610473633
    9. '          ' → logprob: -15.751222610473633
    10. '	   ' → logprob: -16.751222610473633

Token 298: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005118480883538723
    2. 'else' (adapté à ' else') → logprob: -6.005118370056152
    3. ' else' → logprob: -6.005118370056152
    4. '   ' → logprob: -8.880118370056152
    5. 'return' → logprob: -10.755118370056152
    6. ' return' → logprob: -11.880118370056152
    7. '           ' → logprob: -12.880118370056152
    8. '	' → logprob: -13.880118370056152
    9. '      ' → logprob: -14.255118370056152
    10. '	else' → logprob: -14.380118370056152

Token 299: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8040220141410828
    2. ':' → logprob: -1.3040220737457275
    3. '           ' → logprob: -1.6790220737457275
    4. ' raise' → logprob: -2.6790220737457275
    5. ' :
' → logprob: -4.304021835327148
    6. '       ' → logprob: -5.554021835327148
    7. 'raise' → logprob: -6.054021835327148
    8. ' :' → logprob: -6.304021835327148
    9. '	raise' → logprob: -6.429021835327148
    10. '        ' → logprob: -6.929021835327148

Token 300: '           ' (ID: 352)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.6718779802322388
    2. ' raise' → logprob: -0.9218779802322388
    3. '       ' → logprob: -2.921877861022949
    4. '           ' → logprob: -3.296877861022949
    5. '	raise' → logprob: -8.29687786102295
    6. '   ' → logprob: -8.42187786102295
    7. 'return' → logprob: -8.92187786102295
    8. ' return' → logprob: -11.42187786102295
    9. 'Raise' → logprob: -11.79687786102295
    10. ' ' → logprob: -12.42187786102295

Token 301: ' #' (ID: 1069)
  Prédit: ' raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.2519311308860779
    2. 'raise' → logprob: -1.5019311904907227
    3. '	raise' → logprob: -14.001931190490723
    4. '   ' → logprob: -14.251931190490723
    5. '    ' → logprob: -15.876931190490723
    6. ' return' → logprob: -16.376930236816406
    7. '
' → logprob: -16.376930236816406
    8. 'return' → logprob: -16.376930236816406
    9. '           ' → logprob: -16.876930236816406
    10. 'assert' → logprob: -17.001930236816406

Token 302: ' la' (ID: 557)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.02975395694375038
    2. ' raise' → logprob: -3.5297539234161377
    3. 'return' → logprob: -12.654753684997559
    4. '	raise' → logprob: -16.154754638671875
    5. '   ' → logprob: -16.279754638671875
    6. '#' → logprob: -16.904754638671875
    7. ' return' → logprob: -17.279754638671875
    8. 'assert' → logprob: -17.529754638671875
    9. 'Raise' → logprob: -17.654754638671875
    10. 'raising' → logprob: -18.779754638671875

Token 303: ' donnée' (ID: 130126)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.18121281266212463
    2. ' raise' → logprob: -1.8062127828598022
    3. 'r' → logprob: -6.931212902069092
    4. 's' → logprob: -8.806212425231934
    5. ' lev' → logprob: -9.431212425231934
    6. '	raise' → logprob: -9.806212425231934
    7. 'n' → logprob: -10.056212425231934
    8. 'return' → logprob: -10.431212425231934
    9. ' return' → logprob: -10.556212425231934
    10. 'lev' → logprob: -10.806212425231934

Token 304: ' d' (ID: 272)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.5944258570671082
    2. ' n' → logprob: -1.219425916671753
    3. ' raise' → logprob: -3.469425916671753
    4. 'n' → logprob: -3.969425916671753
    5. ' return' → logprob: -4.219425678253174
    6. ' man' → logprob: -4.219425678253174
    7. ' s' → logprob: -4.219425678253174
    8. 's' → logprob: -4.344425678253174
    9. ' is' → logprob: -4.719425678253174
    10. ' manque' → logprob: -4.844425678253174

Token 305: ''entrée' (ID: 115820)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.12233897298574448
    2. ''er' → logprob: -2.6223390102386475
    3. ''entrée' → logprob: -3.9973390102386475
    4. 'er' → logprob: -4.747338771820068
    5. ' erreur' → logprob: -5.247338771820068
    6. 'é' → logprob: -5.872338771820068
    7. 'i' → logprob: -6.622338771820068
    8. 'éc' → logprob: -6.747338771820068
    9. 'u' → logprob: -7.247338771820068
    10. ''é' → logprob: -7.622338771820068

Token 306: ' doit' (ID: 21822)
  Prédit: ' raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.048748716711997986
    2. 'raise' → logprob: -3.048748731613159
    3. '	raise' → logprob: -9.673748970031738
    4. ' raises' → logprob: -9.923748970031738
    5. ' continue' → logprob: -10.923748970031738
    6. '_raise' → logprob: -11.673748970031738
    7. '#' → logprob: -12.423748970031738
    8. ' n' → logprob: -12.423748970031738
    9. '.raise' → logprob: -12.798748970031738
    10. ' raising' → logprob: -13.048748970031738

Token 307: ' respecter' (ID: 107203)
  Prédit: ' raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.16254380345344543
    2. 'raise' → logprob: -1.912543773651123
    3. '	raise' → logprob: -7.037543773651123
    4. '_raise' → logprob: -7.537543773651123
    5. ' raised' → logprob: -8.537544250488281
    6. 'être' → logprob: -8.912544250488281
    7. '.raise' → logprob: -9.037544250488281
    8. 'n't' → logprob: -9.162544250488281
    9. 'not' → logprob: -9.287544250488281
    10. ' not' → logprob: -9.662544250488281

Token 308: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.9013075232505798
    2. 'la' → logprob: -1.2763075828552246
    3. ')' → logprob: -2.5263075828552246
    4. 'le' → logprob: -2.5263075828552246
    5. '")' → logprob: -3.1513075828552246
    6. '"' → logprob: -3.5263075828552246
    7. '')' → logprob: -3.9013075828552246
    8. 'Syntax' → logprob: -3.9013075828552246
    9. 's' → logprob: -4.526307582855225
    10. ''' → logprob: -5.276307582855225

Token 309: ' format' (ID: 6011)
  Prédit: 'format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -0.004263126756995916
    2. ' format' → logprob: -6.004262924194336
    3. 'form' → logprob: -6.379262924194336
    4. 'syntax' → logprob: -10.254262924194336
    5. 'pro' → logprob: -10.629262924194336
    6. 'forme' → logprob: -12.129262924194336
    7. 'contr' → logprob: -12.379262924194336
    8. 'par' → logprob: -12.504262924194336
    9. 'formats' → logprob: -12.754262924194336
    10. 's' → logprob: -12.879262924194336

Token 310: ',' (ID: 11)
  Prédit: ' raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.28737837076187134
    2. 'raise' → logprob: -1.4123783111572266
    3. '           ' → logprob: -5.537378311157227
    4. '       ' → logprob: -6.662378311157227
    5. '   ' → logprob: -7.412378311157227
    6. '	raise' → logprob: -8.287378311157227
    7. '
' → logprob: -10.162378311157227
    8. ' return' → logprob: -10.537378311157227
    9. 'return' → logprob: -11.162378311157227
    10. 'Raise' → logprob: -11.412378311157227

Token 311: ' on' (ID: 402)
  Prédit: ' raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.12795960903167725
    2. 'raise' → logprob: -2.127959728240967
    3. '           ' → logprob: -7.377959728240967
    4. ' return' → logprob: -8.002959251403809
    5. 'return' → logprob: -10.502959251403809
    6. '	raise' → logprob: -10.752959251403809
    7. '            ' → logprob: -11.502959251403809
    8. '       ' → logprob: -12.377959251403809
    9. '               ' → logprob: -12.877959251403809
    10. '#' → logprob: -13.252959251403809

Token 312: ' ne' (ID: 453)
  Prédit: ' raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.316026508808136
    2. 'raise' → logprob: -1.3160264492034912
    3. ' return' → logprob: -6.56602668762207
    4. '	raise' → logprob: -7.06602668762207
    5. ' continue' → logprob: -9.06602668762207
    6. '_raise' → logprob: -9.31602668762207
    7. 'return' → logprob: -9.44102668762207
    8. '           ' → logprob: -9.56602668762207
    9. '       ' → logprob: -10.19102668762207
    10. '   ' → logprob: -10.81602668762207

Token 313: ' g' (ID: 329)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.3162035346031189
    2. ' raise' → logprob: -1.3162035942077637
    3. 'r' → logprob: -6.816203594207764
    4. ' return' → logprob: -7.441203594207764
    5. 'return' → logprob: -7.566203594207764
    6. '       ' → logprob: -7.816203594207764
    7. 'pas' → logprob: -9.191203117370605
    8. '	raise' → logprob: -10.441203117370605
    9. 'raises' → logprob: -10.691203117370605
    10. 'l' → logprob: -10.691203117370605

Token 314: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.008056677877902985
    2. 'raise' → logprob: -5.758056640625
    3. 'érer' → logprob: -6.508056640625
    4. 'è' → logprob: -7.133056640625
    5. 'estion' → logprob: -7.508056640625
    6. 'én' → logprob: -8.008056640625
    7. 'èrent' → logprob: -8.008056640625
    8. 'enerate' → logprob: -8.133056640625
    9. 'ére' → logprob: -8.633056640625
    10. 'ere' → logprob: -8.633056640625

Token 315: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.39102235436439514
    2. ' pas' → logprob: -1.1410223245620728
    3. '       ' → logprob: -6.641022205352783
    4. '           ' → logprob: -6.891022205352783
    5. ' plus' → logprob: -6.891022205352783
    6. '   ' → logprob: -8.516022682189941
    7. 'plus' → logprob: -8.766022682189941
    8. '_pas' → logprob: -9.516022682189941
    9. '        ' → logprob: -9.891022682189941
    10. 'pass' → logprob: -10.016022682189941

Token 316: ' l' (ID: 305)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.182429313659668
    2. ' les' → logprob: -1.307429313659668
    3. 'les' → logprob: -2.057429313659668
    4. ' l' → logprob: -2.307429313659668
    5. 'le' → logprob: -3.182429313659668
    6. ' erreur' → logprob: -3.182429313659668
    7. 'd' → logprob: -3.432429313659668
    8. 'er' → logprob: -4.182429313659668
    9. 'l' → logprob: -4.307429313659668
    10. '   ' → logprob: -4.557429313659668

Token 317: ''er' (ID: 88929)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.6540183424949646
    2. ''er' → logprob: -1.0290184020996094
    3. 'e' → logprob: -2.7790184020996094
    4. ''' → logprob: -3.7790184020996094
    5. 'a' → logprob: -4.779018402099609
    6. 'else' → logprob: -5.404018402099609
    7. 'es' → logprob: -5.904018402099609
    8. ' erreur' → logprob: -6.029018402099609
    9. ''import' → logprob: -6.154018402099609
    10. 'assert' → logprob: -6.279018402099609

Token 318: 'reur' (ID: 56784)
  Prédit: 'ur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.5819816589355469
    2. 'reur' → logprob: -0.9569816589355469
    3. 'r' → logprob: -3.456981658935547
    4. 'u' → logprob: -4.206981658935547
    5. 'eur' → logprob: -4.706981658935547
    6. 'e' → logprob: -7.081981658935547
    7. '#' → logprob: -7.956981658935547
    8. '```' → logprob: -8.081981658935547
    9. 'or' → logprob: -10.081981658935547
    10. 're' → logprob: -10.706981658935547

Token 319: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41953936219215393
    2. '           ' → logprob: -1.7945393323898315
    3. '   ' → logprob: -2.669539451599121
    4. ' raise' → logprob: -2.794539451599121
    5. 'raise' → logprob: -3.294539451599121
    6. ' return' → logprob: -5.169539451599121
    7. 'return' → logprob: -6.669539451599121
    8. '	raise' → logprob: -7.544539451599121
    9. ' pass' → logprob: -8.169539451599121
    10. ' ' → logprob: -8.419539451599121

Token 320: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5988712310791016
    2. '       ' → logprob: -1.4738712310791016
    3. ' raise' → logprob: -1.8488712310791016
    4. 'raise' → logprob: -3.3488712310791016
    5. ' return' → logprob: -4.223871231079102
    6. '   ' → logprob: -4.598871231079102
    7. 'return' → logprob: -6.098871231079102
    8. ' pass' → logprob: -7.223871231079102
    9. ' ' → logprob: -7.598871231079102
    10. '        ' → logprob: -8.848871231079102

Token 321: ' pass' (ID: 1853)
  Prédit: ' pass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.21257519721984863
    2. 'pass' (adapté à ' pass') → logprob: -1.8375751972198486
    3. 'raise' → logprob: -4.3375749588012695
    4. 'return' → logprob: -4.7125749588012695
    5. ' return' → logprob: -5.0875749588012695
    6. ' raise' → logprob: -5.5875749588012695
    7. '   ' → logprob: -8.83757495880127
    8. 'pos' → logprob: -9.33757495880127
    9. ' pos' → logprob: -10.33757495880127
    10. '       ' → logprob: -10.46257495880127

Token 322: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03926752135157585
    2. '   ' → logprob: -3.2892675399780273
    3. '	return' → logprob: -7.289267539978027
    4. '<|end|>' → logprob: -8.414267539978027
    5. ' return' → logprob: -9.039267539978027
    6. 'return' → logprob: -9.664267539978027
    7. '	' → logprob: -9.789267539978027
    8. '	   ' → logprob: -10.039267539978027
    9. '        
' → logprob: -12.289267539978027
    10. '           ' → logprob: -12.289267539978027

Token 323: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008714404539205134
    2. 'return' → logprob: -7.500871658325195
    3. '   ' → logprob: -8.500871658325195
    4. ' return' → logprob: -9.125871658325195
    5. '	return' → logprob: -12.625871658325195
    6. ')return' → logprob: -13.625871658325195
    7. '           ' → logprob: -14.250871658325195
    8. '	' → logprob: -14.750871658325195
    9. ':return' → logprob: -15.750871658325195
    10. '	   ' → logprob: -16.000871658325195

Token 324: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.476697713136673
    2. 'return' (adapté à ' return') → logprob: -0.9766976833343506
    3. ' return' → logprob: -5.97669792175293
    4. '   ' → logprob: -9.60169792175293
    5. '	return' → logprob: -11.60169792175293
    6. ':return' → logprob: -13.60169792175293
    7. ')return' → logprob: -14.10169792175293
    8. ' ' → logprob: -14.47669792175293
    9. '        
' → logprob: -15.35169792175293
    10. '{return' → logprob: -15.60169792175293

Token 325: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.019569873809814453
    2. ' ('' → logprob: -4.5195698738098145
    3. '(('' → logprob: -4.7695698738098145
    4. '(' → logprob: -13.894569396972656
    5. ' (' → logprob: -14.519569396972656
    6. '   ' → logprob: -14.769569396972656
    7. ' ' → logprob: -16.144569396972656
    8. ''' → logprob: -17.144569396972656
    9. '((' → logprob: -17.519569396972656
    10. '  ' → logprob: -18.144569396972656

Token 326: 'node' (ID: 7005)
  Prédit: 'node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.004545115400105715
    2. 'internal' → logprob: -5.504545211791992
    3. 'inner' → logprob: -7.754545211791992
    4. 'branch' → logprob: -10.879545211791992
    5. 'pair' → logprob: -11.379545211791992
    6. 'tree' → logprob: -13.254545211791992
    7. 'Node' → logprob: -13.379545211791992
    8. 'inode' → logprob: -13.879545211791992
    9. 'int' → logprob: -14.004545211791992
    10. 'intern' → logprob: -14.504545211791992

Token 327: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.577195405960083
    2. ',' → logprob: -0.827195405960083
    3. ',left' → logprob: -7.452195167541504
    4. ' ,' → logprob: -8.077195167541504
    5. '",' → logprob: -8.452195167541504
    6. 'left' → logprob: -9.577195167541504
    7. '','' → logprob: -10.827195167541504
    8. '),' → logprob: -11.202195167541504
    9. ',node' → logprob: -11.202195167541504
    10. '',(' → logprob: -12.327195167541504

Token 328: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0002989968634210527
    2. ' left' → logprob: -8.125299453735352
    3. '(left' → logprob: -13.500299453735352
    4. '[left' → logprob: -14.625299453735352
    5. '   ' → logprob: -14.875299453735352
    6. ')' → logprob: -15.375299453735352
    7. '(' → logprob: -16.00029945373535
    8. ' ' → logprob: -16.00029945373535
    9. '[' → logprob: -16.12529945373535
    10. '	left' → logprob: -16.50029945373535

Token 329: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00040540905320085585
    2. ' ,' → logprob: -7.875405311584473
    3. ',right' → logprob: -10.625405311584473
    4. ' right' → logprob: -14.250405311584473
    5. 'right' → logprob: -15.125405311584473
    6. ')' → logprob: -17.75040626525879
    7. ',
' → logprob: -18.00040626525879
    8. ',left' → logprob: -18.12540626525879
    9. '[right' → logprob: -18.75040626525879
    10. '),' → logprob: -18.87540626525879

Token 330: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.061967913061380386
    2. ' right' → logprob: -2.8119678497314453
    3. '	right' → logprob: -16.061967849731445
    4. '[right' → logprob: -17.061967849731445
    5. ' ' → logprob: -17.436967849731445
    6. '   ' → logprob: -17.686967849731445
    7. '(right' → logprob: -18.061967849731445
    8. ',right' → logprob: -18.061967849731445
    9. 'Right' → logprob: -18.936967849731445
    10. 'rig' → logprob: -19.436967849731445

Token 331: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7253565192222595
    2. '),' → logprob: -0.9753565192222595
    3. ',' → logprob: -1.9753565788269043
    4. ' ),' → logprob: -10.225356101989746
    5. ' )' → logprob: -11.100356101989746
    6. '   ' → logprob: -11.600356101989746
    7. ',)' → logprob: -12.100356101989746
    8. ',pos' → logprob: -12.225356101989746
    9. ' ,' → logprob: -12.350356101989746
    10. ',),' → logprob: -13.850356101989746

Token 332: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0007099286303855479
    2. ' pos' → logprob: -7.2507100105285645
    3. '	pos' → logprob: -22.125709533691406
    4. '   ' → logprob: -22.625709533691406
    5. 'Pos' → logprob: -23.250709533691406
    6. '_pos' → logprob: -23.500709533691406
    7. 'position' → logprob: -23.875709533691406
    8. '[pos' → logprob: -24.000709533691406
    9. '(pos' → logprob: -25.000709533691406
    10. ' ' → logprob: -25.000709533691406

Token 333: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 334: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 335: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12836743891239166
    2. ' ' → logprob: -2.7533674240112305
    3. 'None' → logprob: -3.3783674240112305
    4. ' None' → logprob: -4.8783674240112305
    5. '    ' → logprob: -5.5033674240112305
    6. '#' (adapté à ' #') → logprob: -6.0033674240112305
    7. 'return' → logprob: -6.5033674240112305
    8. '  ' → logprob: -6.6283674240112305
    9. '<|end|>' → logprob: -6.6283674240112305
    10. ' return' → logprob: -7.1283674240112305

Token 336: ' Cas' (ID: 8066)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -1.0202759504318237
    2. ' None' → logprob: -1.1452759504318237
    3. ' ' → logprob: -1.3952759504318237
    4. ' raise' → logprob: -3.3952760696411133
    5. ' return' → logprob: -4.520276069641113
    6. 'raise' → logprob: -5.020276069641113
    7. 'return' → logprob: -5.520276069641113
    8. ' pos' → logprob: -5.770276069641113
    9. 'pos' → logprob: -6.270276069641113
    10. '    ' → logprob: -6.395276069641113

Token 337: ' non' (ID: 2893)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1301441192626953
    2. '   ' → logprob: -1.5051441192626953
    3. ' else' → logprob: -2.2551441192626953
    4. ' None' → logprob: -2.3801441192626953
    5. ' where' → logprob: -2.7551441192626953
    6. 'else' → logprob: -3.3801441192626953
    7. 'None' → logprob: -3.5051441192626953
    8. ' #' → logprob: -3.8801441192626953
    9. ' raise' → logprob: -4.130144119262695
    10. '    ' → logprob: -4.380144119262695

Token 338: ' prévu' (ID: 90687)
  Prédit: 'pris'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pris' → logprob: -0.9381349682807922
    2. ' prévu' → logprob: -1.3131349086761475
    3. 'g' → logprob: -2.1881349086761475
    4. 'handled' → logprob: -2.4381349086761475
    5. ' g' → logprob: -2.6881349086761475
    6. 'prev' → logprob: -3.6881349086761475
    7. 'pré' → logprob: -3.8131349086761475
    8. ' pris' → logprob: -5.063135147094727
    9. 'pr' → logprob: -5.563135147094727
    10. 'prise' → logprob: -5.688135147094727

Token 339: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31693270802497864
    2. ':' → logprob: -1.5669326782226562
    3. ' :' → logprob: -3.9419326782226562
    4. ' ' → logprob: -4.566932678222656
    5. ':
' → logprob: -5.066932678222656
    6. ',' → logprob: -5.191932678222656
    7. ' raise' → logprob: -5.316932678222656
    8. '    ' → logprob: -5.566932678222656
    9. ' :
' → logprob: -6.066932678222656
    10. '	raise' → logprob: -6.066932678222656

Token 340: 'par' (ID: 796)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.2065688967704773
    2. ' pos' → logprob: -2.706568956375122
    3. 'None' → logprob: -2.956568956375122
    4. ' )' → logprob: -3.581568956375122
    5. ')' → logprob: -3.706568956375122
    6. ' s' → logprob: -5.206568717956543
    7. ' return' → logprob: -5.581568717956543
    8. ' raise' → logprob: -5.956568717956543
    9. 'pos' → logprob: -6.331568717956543
    10. ' ' → logprob: -7.081568717956543

Token 341: ' exemple' (ID: 26320)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5798527002334595
    2. 'ex' → logprob: -2.20485258102417
    3. 'fois' → logprob: -2.57985258102417
    4. 'er' → logprob: -3.20485258102417
    5. ' défaut' → logprob: -3.32985258102417
    6. 'e' → logprob: -3.45485258102417
    7. ' erreur' → logprob: -3.57985258102417
    8. 'error' → logprob: -4.45485258102417
    9. 'else' → logprob: -4.45485258102417
    10. 'd' → logprob: -4.45485258102417

Token 342: ' END' (ID: 22374)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4033764600753784
    2. ' )' → logprob: -1.9033764600753784
    3. ' s' → logprob: -3.153376579284668
    4. ''' → logprob: -3.528376579284668
    5. ' ' → logprob: -4.403376579284668
    6. 's' → logprob: -4.528376579284668
    7. ' return' → logprob: -4.528376579284668
    8. 'None' → logprob: -4.528376579284668
    9. ' )
' → logprob: -4.653376579284668
    10. ' None' → logprob: -4.778376579284668

Token 343: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006787485908716917
    2. ' )' → logprob: -5.131787300109863
    3. ')
' → logprob: -7.381787300109863
    4. '):' → logprob: -10.006787300109863
    5. ' )
' → logprob: -10.506787300109863
    6. '):
' → logprob: -10.506787300109863
    7. '=None' → logprob: -11.006787300109863
    8. 'EOF' → logprob: -11.131787300109863
    9. ')return' → logprob: -11.131787300109863
    10. 'None' → logprob: -11.506787300109863

Token 344: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017551327124238014
    2. ' raise' → logprob: -4.642551422119141
    3. '    ' → logprob: -6.267551422119141
    4. ' ' → logprob: -6.517551422119141
    5. 'raise' → logprob: -6.767551422119141
    6. ' return' → logprob: -6.892551422119141
    7. ':return' → logprob: -7.267551422119141
    8. 'return' → logprob: -8.39255142211914
    9. ' None' → logprob: -8.51755142211914
    10. '    
' → logprob: -8.51755142211914

Token 345: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10318970680236816
    2. ' return' → logprob: -2.603189706802368
    3. 'None' → logprob: -4.103189468383789
    4. '   ' → logprob: -5.478189468383789
    5. 'raise' → logprob: -6.353189468383789
    6. ' None' → logprob: -6.728189468383789
    7. ' raise' → logprob: -8.978189468383789
    8. '(None' → logprob: -8.978189468383789
    9. '
' → logprob: -9.353189468383789
    10. '    
' → logprob: -11.478189468383789

Token 346: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.01141454093158245
    2. ' None' → logprob: -4.761414527893066
    3. '(None' → logprob: -5.886414527893066
    4. '('' → logprob: -11.761414527893066
    5. ',None' → logprob: -11.761414527893066
    6. '('',' → logprob: -13.886414527893066
    7. 's' → logprob: -14.261414527893066
    8. '(' → logprob: -14.511414527893066
    9. '_None' → logprob: -15.011414527893066
    10. '_none' → logprob: -15.261414527893066

Token 347: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 348: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -5.848420551046729e-05
    2. ' pos' → logprob: -9.7500581741333
    3. '0' → logprob: -15.7500581741333
    4. 'position' → logprob: -19.875059127807617
    5. '	pos' → logprob: -20.875059127807617
    6. '_pos' → logprob: -21.250059127807617
    7. 'Pos' → logprob: -22.750059127807617
    8. '[pos' → logprob: -23.625059127807617
    9. '(pos' → logprob: -23.875059127807617
    10. '.pos' → logprob: -24.125059127807617

Token 349: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 350: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1213105246424675
    2. '<|end|>' → logprob: -2.8713104724884033
    3. 'def' → logprob: -3.4963104724884033
    4. '\n' → logprob: -4.746310710906982
    5. '#' → logprob: -4.871310710906982
    6. '

' → logprob: -5.371310710906982
    7. '<|end|>' → logprob: -5.996310710906982
    8. '\' → logprob: -7.496310710906982
    9. '```' → logprob: -7.496310710906982
    10. 'newline' → logprob: -7.621310710906982

Token 351: ' Fonction' (ID: 189149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002524053445085883
    2. '#' → logprob: -6.002523899078369
    3. 'import' → logprob: -10.377524375915527
    4. ' def' → logprob: -11.877524375915527
    5. 'from' → logprob: -13.002524375915527
    6. '
' → logprob: -13.252524375915527
    7. '```' → logprob: -13.502524375915527
    8. 'de' → logprob: -13.877524375915527
    9. 'class' → logprob: -14.002524375915527
    10. '(' → logprob: -14.627524375915527

Token 352: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14549791812896729
    2. ' def' → logprob: -2.1454977989196777
    3. ' compute' → logprob: -5.145497798919678
    4. ' calculate' → logprob: -5.270497798919678
    5. ' for' → logprob: -6.645497798919678
    6. 'calculate' → logprob: -6.645497798919678
    7. ' get' → logprob: -6.895497798919678
    8. 's' → logprob: -7.145497798919678
    9. 'compute' → logprob: -7.770497798919678
    10. ' print' → logprob: -8.270498275756836

Token 353: ' calcul' (ID: 7559)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.2489696741104126
    2. '#' → logprob: -1.3739696741104126
    3. 'evaluate' → logprob: -2.123969554901123
    4. 'compute' → logprob: -2.248969554901123
    5. 'def' → logprob: -3.123969554901123
    6. 'calculate' → logprob: -3.373969554901123
    7. 'is' → logprob: -3.623969554901123
    8. 'sum' → logprob: -3.623969554901123
    9. 'eval' → logprob: -4.123969554901123
    10. 'depth' → logprob: -4.248969554901123

Token 354: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.3491935729980469
    2. 'ate' → logprob: -1.2241935729980469
    3. 'culate' → logprob: -7.849193572998047
    4. 'ating' → logprob: -9.224193572998047
    5. '#' → logprob: -9.849193572998047
    6. 'def' → logprob: -10.224193572998047
    7. 'e' → logprob: -10.349193572998047
    8. 'ulate' → logprob: -10.474193572998047
    9. 'late' → logprob: -10.599193572998047
    10. 'cul' → logprob: -11.849193572998047

Token 355: ' le' (ID: 505)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7652039527893066
    2. '_depth' → logprob: -1.2652039527893066
    3. 'depth' → logprob: -1.7652039527893066
    4. 'max' → logprob: -4.390203952789307
    5. '_tree' → logprob: -4.390203952789307
    6. '_height' → logprob: -4.515203952789307
    7. 'le' → logprob: -4.890203952789307
    8. ' la' → logprob: -5.140203952789307
    9. 'height' → logprob: -5.265203952789307
    10. 'tree' → logprob: -5.390203952789307

Token 356: ' nombre' (ID: 9733)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.4819222092628479
    2. 'max' → logprob: -1.6069221496582031
    3. 'depth' → logprob: -2.481922149658203
    4. 'sum' → logprob: -3.481922149658203
    5. 'diam' → logprob: -3.856922149658203
    6. 'size' → logprob: -3.856922149658203
    7. 'score' → logprob: -4.481922149658203
    8. 'value' → logprob: -5.981922149658203
    9. 'weight' → logprob: -6.231922149658203
    10. 'maximum' → logprob: -6.231922149658203

Token 357: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.4628070294857025
    2. 'def' → logprob: -1.587807059288025
    3. '_de' → logprob: -2.4628069400787354
    4. '#' → logprob: -2.9628069400787354
    5. ' de' → logprob: -4.0878071784973145
    6. 'd' → logprob: -5.7128071784973145
    7. '_nodes' → logprob: -6.0878071784973145
    8. '_' → logprob: -6.3378071784973145
    9. '_fe' → logprob: -6.3378071784973145
    10. '_le' → logprob: -6.7128071784973145

Token 358: ' façons' (ID: 165958)
  Prédit: 'fe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fe' → logprob: -0.6262043118476868
    2. 'no' → logprob: -1.501204252243042
    3. 'nodes' → logprob: -1.876204252243042
    4. 'le' → logprob: -2.876204252243042
    5. 'leaf' → logprob: -3.751204252243042
    6. 'n' → logprob: -5.001204490661621
    7. ' feuilles' → logprob: -7.001204490661621
    8. '```' → logprob: -7.751204490661621
    9. '_fe' → logprob: -8.126204490661621
    10. 'node' → logprob: -8.251204490661621

Token 359: ' d' (ID: 272)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.3578854501247406
    2. 'def' → logprob: -1.482885479927063
    3. ' de' → logprob: -2.8578853607177734
    4. 'd' → logprob: -4.857885360717773
    5. '_de' → logprob: -5.607885360717773
    6. '(' → logprob: -6.732885360717773
    7. ' d' → logprob: -7.107885360717773
    8. '#' → logprob: -7.607885360717773
    9. ' ' → logprob: -8.107885360717773
    10. 'count' → logprob: -8.357885360717773

Token 360: ''é' (ID: 12728)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.03158463537693024
    2. '#' → logprob: -4.656584739685059
    3. ''utiliser' → logprob: -5.406584739685059
    4. 'count' → logprob: -5.906584739685059
    5. 'u' → logprob: -6.281584739685059
    6. ''' → logprob: -6.406584739685059
    7. ''avoir' → logprob: -6.406584739685059
    8. ''é' → logprob: -6.656584739685059
    9. 'a' → logprob: -7.031584739685059
    10. ''obtenir' → logprob: -7.531584739685059

Token 361: 'crire' (ID: 62436)
  Prédit: 'crire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'crire' → logprob: -0.3239605724811554
    2. 'x' → logprob: -2.073960542678833
    3. 'num' → logprob: -2.698960542678833
    4. 'tre' → logprob: -3.698960542678833
    5. 'faire' → logprob: -4.573960781097412
    6. 'm' → logprob: -4.698960781097412
    7. 'valuer' → logprob: -5.073960781097412
    8. 'ffect' → logprob: -5.198960781097412
    9. 'mpl' → logprob: -5.323960781097412
    10. 'count' → logprob: -5.698960781097412

Token 362: ' les' (ID: 1341)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5221896767616272
    2. 'un' → logprob: -1.7721896171569824
    3. 'def' → logprob: -2.6471896171569824
    4. 'd' → logprob: -2.8971896171569824
    5. 'le' → logprob: -3.7721896171569824
    6. '(node' → logprob: -4.147189617156982
    7. ' un' → logprob: -4.522189617156982
    8. 'de' → logprob: -4.522189617156982
    9. '#' → logprob: -4.647189617156982
    10. 'une' → logprob: -5.022189617156982

Token 363: ' caractères' (ID: 183106)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.3575015068054199
    2. 'arb' → logprob: -1.60750150680542
    3. 'tree' → logprob: -3.60750150680542
    4. ''ar' → logprob: -4.10750150680542
    5. 's' → logprob: -4.60750150680542
    6. 'nombre' → logprob: -5.23250150680542
    7. 'n' → logprob: -5.48250150680542
    8. ' arbres' → logprob: -5.48250150680542
    9. '('' → logprob: -5.60750150680542
    10. 'mot' → logprob: -5.73250150680542

Token 364: ' '' (ID: 461)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09781131148338318
    2. 'd' → logprob: -2.972811222076416
    3. 'de' → logprob: -4.222811222076416
    4. 's' → logprob: -5.097811222076416
    5. '(' → logprob: -5.097811222076416
    6. '#' → logprob: -5.472811222076416
    7. 'à' → logprob: -6.722811222076416
    8. 'a' → logprob: -6.847811222076416
    9. ' #' → logprob: -7.597811222076416
    10. '_' → logprob: -7.597811222076416

Token 365: 'A' (ID: 32)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.24770812690258026
    2. '('' → logprob: -2.4977080821990967
    3. '0' → logprob: -2.7477080821990967
    4. 'A' → logprob: -3.8727080821990967
    5. ''' → logprob: -4.622708320617676
    6. 'x' → logprob: -4.622708320617676
    7. '1' → logprob: -4.747708320617676
    8. '(' → logprob: -5.622708320617676
    9. 'n' → logprob: -5.872708320617676
    10. ')' → logprob: -6.372708320617676

Token 366: '',' (ID: 787)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.07457172870635986
    2. '',' → logprob: -2.6995716094970703
    3. '','' → logprob: -6.19957160949707
    4. 'B' → logprob: -7.32457160949707
    5. ' '' → logprob: -7.57457160949707
    6. 'A' → logprob: -8.32457160949707
    7. '')' → logprob: -8.32457160949707
    8. ''A' → logprob: -8.69957160949707
    9. 'a' → logprob: -8.94957160949707
    10. ' ',' → logprob: -9.69957160949707

Token 367: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1573580950498581
    2. '#' → logprob: -2.282358169555664
    3. 'B' → logprob: -3.532358169555664
    4. ' '' → logprob: -4.782358169555664
    5. ''A' → logprob: -6.532358169555664
    6. ''T' → logprob: -6.907358169555664
    7. 'def' → logprob: -7.407358169555664
    8. ' B' → logprob: -7.907358169555664
    9. ''en' → logprob: -8.282358169555664
    10. ' #' → logprob: -8.407358169555664

Token 368: 'O' (ID: 46)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.016598233953118324
    2. ''' → logprob: -4.141598224639893
    3. 'C' → logprob: -8.89159870147705
    4. ' B' → logprob: -9.26659870147705
    5. 'T' → logprob: -9.64159870147705
    6. 'G' → logprob: -10.26659870147705
    7. '(' → logprob: -10.51659870147705
    8. '')' → logprob: -10.64159870147705
    9. ' '' → logprob: -10.76659870147705
    10. '('' → logprob: -10.89159870147705

Token 369: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.42039966583251953
    2. ''' → logprob: -1.1703996658325195
    3. '')' → logprob: -4.7953996658325195
    4. 'R' → logprob: -5.1703996658325195
    5. 'r' → logprob: -5.5453996658325195
    6. '','' → logprob: -5.6703996658325195
    7. 'F' → logprob: -5.7953996658325195
    8. ' ',' → logprob: -6.0453996658325195
    9. ' '' → logprob: -6.1703996658325195
    10. 'f' → logprob: -6.5453996658325195

Token 370: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.391987681388855
    2. '#' → logprob: -1.266987681388855
    3. ''A' → logprob: -4.8919878005981445
    4. ''E' → logprob: -5.0169878005981445
    5. ''I' → logprob: -5.3919878005981445
    6. ''U' → logprob: -5.7669878005981445
    7. 'def' → logprob: -5.8919878005981445
    8. 'et' → logprob: -5.8919878005981445
    9. ''C' → logprob: -6.0169878005981445
    10. ''N' → logprob: -6.2669878005981445

Token 371: 'X' (ID: 55)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.2510181665420532
    2. 'B' → logprob: -1.6260181665420532
    3. ''' → logprob: -1.7510181665420532
    4. 'R' → logprob: -2.5010180473327637
    5. 'E' → logprob: -2.6260180473327637
    6. 'A' → logprob: -3.5010180473327637
    7. 'F' → logprob: -3.5010180473327637
    8. 'X' → logprob: -4.126018047332764
    9. 'O' → logprob: -4.251018047332764
    10. 'I' → logprob: -4.251018047332764

Token 372: ''' (ID: 6)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.5420156121253967
    2. ''' → logprob: -1.042015552520752
    3. '')' → logprob: -3.167015552520752
    4. ',' → logprob: -5.042015552520752
    5. '','' → logprob: -5.542015552520752
    6. ')' → logprob: -6.042015552520752
    7. '_' → logprob: -6.167015552520752
    8. '#' → logprob: -6.417015552520752
    9. ' '' → logprob: -6.792015552520752
    10. ' ',' → logprob: -7.167015552520752

Token 373: ' dans' (ID: 2671)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0018291724845767021
    2. '#' → logprob: -7.001829147338867
    3. '(' → logprob: -8.001829147338867
    4. '(s' → logprob: -9.126829147338867
    5. ' def' → logprob: -9.251829147338867
    6. '(n' → logprob: -9.376829147338867
    7. 'de' → logprob: -9.376829147338867
    8. '(def' → logprob: -10.001829147338867
    9. ' (' → logprob: -10.876829147338867
    10. ',' → logprob: -10.876829147338867

Token 374: ' les' (ID: 1341)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.15549765527248383
    2. '#' → logprob: -2.5304975509643555
    3. 'le' → logprob: -3.7804975509643555
    4. 'un' → logprob: -4.0304975509643555
    5. 'def' → logprob: -4.1554975509643555
    6. 'les' → logprob: -5.5304975509643555
    7. 'une' → logprob: -6.1554975509643555
    8. ' l' → logprob: -7.1554975509643555
    9. 'la' → logprob: -7.5304975509643555
    10. 'cet' → logprob: -8.155497550964355

Token 375: ' noe' (ID: 49921)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.2700790762901306
    2. '#' → logprob: -1.8950791358947754
    3. 'no' → logprob: -3.2700791358947754
    4. 'arb' → logprob: -3.5200791358947754
    5. 'n' → logprob: -5.645079135894775
    6. ' noe' → logprob: -6.020079135894775
    7. 'quel' → logprob: -6.520079135894775
    8. ' arbres' → logprob: -6.520079135894775
    9. 'node' → logprob: -6.770079135894775
    10. 'tree' → logprob: -6.895079135894775

Token 376: 'uds' (ID: 44387)
  Prédit: 'uds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uds' → logprob: -0.07890421897172928
    2. 'ud' → logprob: -2.578904151916504
    3. 'ds' → logprob: -12.578904151916504
    4. '#' → logprob: -12.578904151916504
    5. 'ux' → logprob: -12.828904151916504
    6. 's' → logprob: -13.828904151916504
    7. '```' → logprob: -13.953904151916504
    8. 'udes' → logprob: -14.203904151916504
    9. 'u' → logprob: -14.203904151916504
    10. ' uds' → logprob: -14.578904151916504

Token 377: ' internes' (ID: 183434)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5189144611358643
    2. '#' → logprob: -1.7689144611358643
    3. 'intern' → logprob: -2.0189144611358643
    4. 'inter' → logprob: -3.2689144611358643
    5. ' internes' → logprob: -3.3939144611358643
    6. 'internal' → logprob: -4.018914222717285
    7. '('' → logprob: -5.893914222717285
    8. ' interne' → logprob: -6.518914222717285
    9. ' #' → logprob: -6.643914222717285
    10. '_inter' → logprob: -7.268914222717285

Token 378: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00019901065388694406
    2. '#' → logprob: -9.500199317932129
    3. '(' → logprob: -9.875199317932129
    4. '(
' → logprob: -10.000199317932129
    5. ',' → logprob: -11.625199317932129
    6. ' def' → logprob: -12.250199317932129
    7. '(def' → logprob: -12.500199317932129
    8. ',
' → logprob: -12.625199317932129
    9. '(n' → logprob: -13.125199317932129
    10. 'de' → logprob: -13.750199317932129

Token 379: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.966313281329349e-05
    2. '
' → logprob: -10.500049591064453
    3. ' def' → logprob: -11.250049591064453
    4. '#' → logprob: -11.625049591064453
    5. '\' → logprob: -16.750049591064453
    6. 'import' → logprob: -18.375049591064453
    7. '```' → logprob: -18.375049591064453
    8. '  
' → logprob: -18.625049591064453
    9. 'from' → logprob: -18.750049591064453
    10. '
' → logprob: -19.125049591064453

Token 380: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.466968650580384e-05
    2. '#' → logprob: -10.625054359436035
    3. ' def' → logprob: -10.875054359436035
    4. '
' → logprob: -11.500054359436035
    5. 'from' → logprob: -13.750054359436035
    6. 'import' → logprob: -15.875054359436035
    7. 'dé' → logprob: -17.25005531311035
    8. 'de' → logprob: -17.62505531311035
    9. ' déf' → logprob: -18.00005531311035
    10. ' #' → logprob: -18.37505531311035

Token 381: ' obtenir' (ID: 54423)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8341339230537415
    2. 'le' → logprob: -1.4591338634490967
    3. 'which' → logprob: -3.0841338634490967
    4. ' which' → logprob: -3.3341338634490967
    5. ' laquelle' → logprob: -3.7091338634490967
    6. ' que' → logprob: -3.9591338634490967
    7. 'les' → logprob: -3.9591338634490967
    8. 'l' → logprob: -4.084134101867676
    9. 'que' → logprob: -4.084134101867676
    10. 'def' → logprob: -4.334134101867676

Token 382: ' l' (ID: 305)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.3664159774780273
    2. 'True' → logprob: -1.3664159774780273
    3. ' True' → logprob: -1.6164159774780273
    4. ' le' → logprob: -2.2414159774780273
    5. 'le' → logprob: -2.6164159774780273
    6. ' une' → logprob: -3.6164159774780273
    7. ' la' → logprob: -3.7414159774780273
    8. 'un' → logprob: -3.8664159774780273
    9. 'une' → logprob: -4.616415977478027
    10. '(True' → logprob: -4.866415977478027

Token 383: ''ensemble' (ID: 79341)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6220983266830444
    2. 'e' → logprob: -0.9970983266830444
    3. ''' → logprob: -3.622098445892334
    4. ''a' → logprob: -4.372098445892334
    5. ''ar' → logprob: -4.497098445892334
    6. ''équ' → logprob: -4.497098445892334
    7. ''état' → logprob: -4.872098445892334
    8. ''effet' → logprob: -5.372098445892334
    9. 'es' → logprob: -5.747098445892334
    10. ''ex' → logprob: -5.872098445892334

Token 384: ' complet' (ID: 5127)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.2706279158592224
    2. 'des' → logprob: -2.145627975463867
    3. '<|end|>' → logprob: -3.020627975463867
    4. '_des' → logprob: -3.645627975463867
    5. ' de' → logprob: -4.520627975463867
    6. ')' → logprob: -4.770627975463867
    7. ' of' → logprob: -5.145627975463867
    8. ' d' → logprob: -5.645627975463867
    9. 's' → logprob: -5.645627975463867
    10. 'd' → logprob: -6.020627975463867

Token 385: ' {' (ID: 354)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.47400179505348206
    2. ' des' → logprob: -2.099001884460449
    3. 'des' → logprob: -2.224001884460449
    4. '#' → logprob: -2.724001884460449
    5. '('' → logprob: -4.224001884460449
    6. '
' → logprob: -4.224001884460449
    7. 'de' → logprob: -5.099001884460449
    8. ' de' → logprob: -5.224001884460449
    9. ' def' → logprob: -5.474001884460449
    10. 'possible' → logprob: -5.724001884460449

Token 386: 'a' (ID: 64)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.9856250882148743
    2. '0' → logprob: -1.1106250286102295
    3. ''' → logprob: -1.6106250286102295
    4. 'A' → logprob: -4.110625267028809
    5. ' '' → logprob: -4.110625267028809
    6. ' ' → logprob: -4.235625267028809
    7. 'False' → logprob: -4.485625267028809
    8. 'True' → logprob: -5.360625267028809
    9. '1' → logprob: -5.360625267028809
    10. ''a' → logprob: -5.485625267028809

Token 387: ',b' (ID: 17568)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8706946969032288
    2. ',' → logprob: -1.120694637298584
    3. 's' → logprob: -2.870694637298584
    4. ''b' → logprob: -3.620694637298584
    5. 'b' → logprob: -3.745694637298584
    6. 'll' → logprob: -4.120694637298584
    7. ''a' → logprob: -4.370694637298584
    8. ' '' → logprob: -4.495694637298584
    9. '}' → logprob: -4.495694637298584
    10. ',b' → logprob: -4.620694637298584

Token 388: ',c' (ID: 22261)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3457024097442627
    2. ''' → logprob: -1.5957024097442627
    3. '}' → logprob: -2.2207024097442627
    4. ',' → logprob: -2.2207024097442627
    5. ''_' → logprob: -2.2207024097442627
    6. ''}' → logprob: -2.8457024097442627
    7. '_,' → logprob: -3.9707024097442627
    8. ' }' → logprob: -4.220702171325684
    9. '',' → logprob: -4.220702171325684
    10. 's' → logprob: -4.345702171325684

Token 389: ',d' (ID: 26159)
  Prédit: ',d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.7581381797790527
    2. '}' → logprob: -0.8831381797790527
    3. ','' → logprob: -2.7581381797790527
    4. ',' → logprob: -3.3831381797790527
    5. ''}' → logprob: -5.133138179779053
    6. '',' → logprob: -5.883138179779053
    7. 'def' → logprob: -6.633138179779053
    8. '}'' → logprob: -6.758138179779053
    9. '},' → logprob: -6.758138179779053
    10. '','' → logprob: -7.008138179779053

Token 390: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.04150571674108505
    2. ' }' → logprob: -4.041505813598633
    3. ',' → logprob: -4.541505813598633
    4. ''}' → logprob: -4.791505813598633
    5. '_' → logprob: -7.041505813598633
    6. ''' → logprob: -7.166505813598633
    7. ','' → logprob: -7.666505813598633
    8. 's' → logprob: -8.041505813598633
    9. ' ,' → logprob: -8.291505813598633
    10. 'A' → logprob: -8.666505813598633

Token 391: ' =' (ID: 314)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0002111694193445146
    2. '
' → logprob: -9.000210762023926
    3. 'from' → logprob: -9.500210762023926
    4. '#' → logprob: -11.875210762023926
    5. 'import' → logprob: -12.875210762023926
    6. ' def' → logprob: -13.250210762023926
    7. '```' → logprob: -14.000210762023926
    8. '  
' → logprob: -15.500210762023926
    9. '(' → logprob: -15.750210762023926
    10. '\' → logprob: -16.125211715698242

Token 392: ' {' (ID: 354)
  Prédit: '{''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{'' → logprob: -0.1979912668466568
    2. '{' → logprob: -2.572991371154785
    3. ' {'' → logprob: -2.572991371154785
    4. ' {' → logprob: -4.322991371154785
    5. ''a' → logprob: -4.572991371154785
    6. '{"' → logprob: -7.072991371154785
    7. ''A' → logprob: -7.947991371154785
    8. ''' → logprob: -7.947991371154785
    9. ' '' → logprob: -8.072991371154785
    10. 'a' → logprob: -8.072991371154785

Token 393: '0' (ID: 15)
  Prédit: ''a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''a' → logprob: -0.07745517790317535
    2. ''A' → logprob: -3.2024552822113037
    3. ' '' → logprob: -3.4524552822113037
    4. ''' → logprob: -7.702455043792725
    5. 'a' → logprob: -7.702455043792725
    6. '{'' → logprob: -8.077455520629883
    7. '0' → logprob: -8.077455520629883
    8. 'A' → logprob: -8.327455520629883
    9. ' ' → logprob: -9.077455520629883
    10. '1' → logprob: -9.577455520629883

Token 394: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0436900369822979
    2. 'b' → logprob: -3.6686899662017822
    3. ','' → logprob: -5.168690204620361
    4. 'x' → logprob: -5.793690204620361
    5. ' ,' → logprob: -5.793690204620361
    6. ',b' → logprob: -6.668690204620361
    7. '}' → logprob: -7.043690204620361
    8. '','' → logprob: -8.043689727783203
    9. '0' → logprob: -8.418689727783203
    10. ''' → logprob: -8.543689727783203

Token 395: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05076164752244949
    2. ' ' → logprob: -3.3007616996765137
    3. 'a' → logprob: -5.800761699676514
    4. '0' → logprob: -5.925761699676514
    5. ''a' → logprob: -6.175761699676514
    6. ''e' → logprob: -6.425761699676514
    7. ''' → logprob: -6.550761699676514
    8. 'x' → logprob: -7.300761699676514
    9. ' '' → logprob: -7.800761699676514
    10. 'e' → logprob: -8.550761222839355

Token 396: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1621086150407791
    2. '}' → logprob: -2.0371086597442627
    3. ','' → logprob: -4.537108421325684
    4. 'x' → logprob: -6.287108421325684
    5. 'A' → logprob: -6.662108421325684
    6. '0' → logprob: -6.787108421325684
    7. ' ,' → logprob: -7.287108421325684
    8. ',A' → logprob: -7.662108421325684
    9. ',x' → logprob: -7.912108421325684
    10. 'a' → logprob: -8.037108421325684

Token 397: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.19573621451854706
    2. '0' → logprob: -2.1957361698150635
    3. '1' → logprob: -3.5707361698150635
    4. ' ' → logprob: -4.195736408233643
    5. 'e' → logprob: -4.820736408233643
    6. ''e' → logprob: -4.820736408233643
    7. ''' → logprob: -5.695736408233643
    8. 'a' → logprob: -7.195736408233643
    9. '7' → logprob: -7.570736408233643
    10. '4' → logprob: -7.695736408233643

Token 398: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01616140827536583
    2. '3' → logprob: -4.7661614418029785
    3. ' ,' → logprob: -5.1411614418029785
    4. '}' → logprob: -7.3911614418029785
    5. ','' → logprob: -7.3911614418029785
    6. ',
' → logprob: -9.01616096496582
    7. ',...' → logprob: -9.14116096496582
    8. ' ' → logprob: -10.01616096496582
    9. '...' → logprob: -10.76616096496582
    10. ' ,'' → logprob: -11.01616096496582

Token 399: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0013336940901353955
    2. ' ' → logprob: -6.626333713531494
    3. '   ' → logprob: -13.876333236694336
    4. '  ' → logprob: -14.438833236694336
    5. '...' → logprob: -14.438833236694336
    6. ' ' → logprob: -14.688833236694336
    7. '4' → logprob: -14.751333236694336
    8. ''' → logprob: -14.751333236694336
    9. '}' → logprob: -15.063833236694336
    10. '7' → logprob: -15.063833236694336

Token 400: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.015892183408141136
    2. '}
' → logprob: -4.515892028808594
    3. ' }' → logprob: -5.765892028808594
    4. ',' → logprob: -7.015892028808594
    5. '}

' → logprob: -8.890892028808594
    6. ')' → logprob: -8.890892028808594
    7. ' }
' → logprob: -9.390892028808594
    8. '}.' → logprob: -9.515892028808594
    9. '},' → logprob: -9.890892028808594
    10. 'A' → logprob: -10.015892028808594

Token 401: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0015047440538182855
    2. '
' → logprob: -6.501504898071289
    3. ' def' → logprob: -13.126504898071289
    4. '\' → logprob: -16.25150489807129
    5. ' 
' → logprob: -16.25150489807129
    6. '

' → logprob: -16.62650489807129
    7. '  
' → logprob: -17.12650489807129
    8. 'de' → logprob: -17.12650489807129
    9. '#' → logprob: -17.50150489807129
    10. '
' → logprob: -18.00150489807129

Token 402: ' L' (ID: 451)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000344044849043712
    2. '
' → logprob: -8.125344276428223
    3. 'from' → logprob: -10.000344276428223
    4. '#' → logprob: -13.875344276428223
    5. 'import' → logprob: -14.125344276428223
    6. ' def' → logprob: -14.375344276428223
    7. ' 
' → logprob: -16.000343322753906
    8. '  
' → logprob: -16.375343322753906
    9. 'de' → logprob: -16.500343322753906
    10. 'd' → logprob: -17.875343322753906

Token 403: ''appro' (ID: 134343)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0061012506484985
    2. 'def' → logprob: -1.1311012506484985
    3. 'e' → logprob: -1.2561012506484985
    4. 'eft' → logprob: -5.131101131439209
    5. 'from' → logprob: -5.631101131439209
    6. ' #' → logprob: -5.631101131439209
    7. 'import' → logprob: -5.881101131439209
    8. 'ef' → logprob: -6.006101131439209
    9. 'i' → logprob: -7.006101131439209
    10. 'E' → logprob: -7.131101131439209

Token 404: 'che' (ID: 926)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8191246390342712
    2. 'x' → logprob: -1.194124698638916
    3. 'che' → logprob: -2.194124698638916
    4. 'ch' → logprob: -2.694124698638916
    5. 'ach' → logprob: -3.194124698638916
    6. 'c' → logprob: -4.569124698638916
    7. 'def' → logprob: -4.944124698638916
    8. 'g' → logprob: -5.569124698638916
    9. 'd' → logprob: -5.819124698638916
    10. '```' → logprob: -6.194124698638916

Token 405: ':
' (ID: 734)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09729833900928497
    2. ' def' → logprob: -2.4722983837127686
    3. ':' → logprob: -5.2222981452941895
    4. ' =' → logprob: -7.3472981452941895
    5. '#' → logprob: -7.8472981452941895
    6. ' est' → logprob: -7.8472981452941895
    7. '=' → logprob: -8.097298622131348
    8. '_' → logprob: -8.597298622131348
    9. ' :' → logprob: -8.597298622131348
    10. 'de' → logprob: -8.722298622131348

Token 406: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5645880103111267
    2. '#' → logprob: -1.3145880699157715
    3. 'from' → logprob: -1.9395880699157715
    4. ' def' → logprob: -4.5645880699157715
    5. ' from' → logprob: -5.1895880699157715
    6. ' #' → logprob: -6.0645880699157715
    7. 'import' → logprob: -7.6895880699157715
    8. 'de' → logprob: -9.689587593078613
    9. '```' → logprob: -9.814587593078613
    10. ' 
' → logprob: -10.189587593078613

Token 407: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19857454299926758
    2. 'from' → logprob: -2.1985745429992676
    3. '#' → logprob: -2.6985745429992676
    4. ' def' → logprob: -6.698574542999268
    5. ' from' → logprob: -7.948574542999268
    6. 'import' → logprob: -8.69857406616211
    7. ' #' → logprob: -10.82357406616211
    8. '
' → logprob: -10.94857406616211
    9. 'de' → logprob: -11.57357406616211
    10. 'dé' → logprob: -11.82357406616211

Token 408: ' Chaque' (ID: 94758)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.36000341176986694
    2. 'from' → logprob: -1.2350034713745117
    3. '#' → logprob: -4.860003471374512
    4. 'import' → logprob: -6.735003471374512
    5. ' def' → logprob: -6.860003471374512
    6. ' from' → logprob: -7.110003471374512
    7. '
' → logprob: -8.110003471374512
    8. 'On' → logprob: -8.360003471374512
    9. 'Voici' → logprob: -10.735003471374512
    10. 'Dé' → logprob: -10.860003471374512

Token 409: ' feuille' (ID: 129760)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.19336096942424774
    2. 'def' → logprob: -2.4433610439300537
    3. 'node' → logprob: -3.0683610439300537
    4. ' def' → logprob: -4.318360805511475
    5. ' '' → logprob: -4.568360805511475
    6. '#' → logprob: -5.943360805511475
    7. ' token' → logprob: -6.068360805511475
    8. ' internal' → logprob: -6.318360805511475
    9. ' #' → logprob: -6.568360805511475
    10. ' (' → logprob: -6.818360805511475

Token 410: ' a' (ID: 261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9853947162628174
    2. ' ' → logprob: -2.6103947162628174
    3. ' est' → logprob: -2.7353947162628174
    4. ' a' → logprob: -2.9853947162628174
    5. ' (' → logprob: -3.1103947162628174
    6. ' =' → logprob: -3.2353947162628174
    7. ')' → logprob: -3.2353947162628174
    8. ' représente' → logprob: -3.2353947162628174
    9. ' ,' → logprob: -3.3603947162628174
    10. ' ' → logprob: -3.8603947162628174

Token 411: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.7078705430030823
    2. 'une' → logprob: -1.8328704833984375
    3. '{'' → logprob: -1.8328704833984375
    4. ' un' → logprob: -2.8328704833984375
    5. '{' → logprob: -3.8328704833984375
    6. ''un' → logprob: -4.3328704833984375
    7. 'son' → logprob: -4.8328704833984375
    8. 'le' → logprob: -4.9578704833984375
    9. '({'' → logprob: -4.9578704833984375
    10. 'a' → logprob: -5.0828704833984375

Token 412: ' ensemble' (ID: 33081)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.5428953766822815
    2. 'ensemble' → logprob: -0.9178953766822815
    3. 'ense' → logprob: -5.667895317077637
    4. ' set' → logprob: -5.667895317077637
    5. ' ensemble' → logprob: -5.917895317077637
    6. 'dict' → logprob: -5.917895317077637
    7. 'd' → logprob: -6.792895317077637
    8. 'nombre' → logprob: -7.417895317077637
    9. 'mask' → logprob: -7.667895317077637
    10. 'mapping' → logprob: -7.917895317077637

Token 413: ' déjà' (ID: 21229)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 414: ' déf' (ID: 23956)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'con' → logprob: -1.0103263854980469
    2. 'd' → logprob: -1.1353263854980469
    3. 'com' → logprob: -1.7603263854980469
    4. 'dé' → logprob: -2.885326385498047
    5. '{'' → logprob: -4.135326385498047
    6. 'known' → logprob: -4.510326385498047
    7. 'conn' → logprob: -4.510326385498047
    8. '{' → logprob: -5.010326385498047
    9. ' donné' → logprob: -5.510326385498047
    10. 'def' → logprob: -5.510326385498047

Token 415: 'ini' (ID: 2363)
  Prédit: 'ini'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ini' → logprob: -0.0020724674686789513
    2. 'init' → logprob: -6.877072334289551
    3. 'ni' → logprob: -7.877072334289551
    4. 'inis' → logprob: -8.00207233428955
    5. 'initi' → logprob: -9.62707233428955
    6. 'in' → logprob: -9.62707233428955
    7. 'inition' → logprob: -9.75207233428955
    8. 'inie' → logprob: -10.62707233428955
    9. 'initial' → logprob: -11.12707233428955
    10. 'inite' → logprob: -11.12707233428955

Token 416: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14863596856594086
    2. ',
' → logprob: -3.7736358642578125
    3. '.' → logprob: -3.8986358642578125
    4. '\n' → logprob: -4.2736358642578125
    5. ',' → logprob: -4.3986358642578125
    6. '.
' → logprob: -4.5236358642578125
    7. 'def' → logprob: -4.5236358642578125
    8. '{' → logprob: -4.6486358642578125
    9. '
' → logprob: -4.8986358642578125
    10. '#' → logprob: -5.5236358642578125

Token 417: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11900930106639862
    2. '
' → logprob: -2.619009256362915
    3. '#' → logprob: -4.619009494781494
    4. '<|end|>' → logprob: -4.994009494781494
    5. '\' → logprob: -5.119009494781494
    6. '\n' → logprob: -5.619009494781494
    7. ' def' → logprob: -5.744009494781494
    8. ' 
' → logprob: -5.744009494781494
    9. '  
' → logprob: -5.994009494781494
    10. '```' → logprob: -7.619009494781494

Token 418: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.017355117946863174
    2. '#' → logprob: -4.267354965209961
    3. '
' → logprob: -5.892354965209961
    4. 'from' → logprob: -8.392354965209961
    5. ' def' → logprob: -9.517354965209961
    6. '```' → logprob: -10.142354965209961
    7. '<|end|>' → logprob: -10.767354965209961
    8. '  
' → logprob: -11.392354965209961
    9. ' 
' → logprob: -11.642354965209961
    10. ' #' → logprob: -11.642354965209961

Token 419: ' Un' (ID: 1367)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007755919359624386
    2. '#' → logprob: -5.632755756378174
    3. '
' → logprob: -5.882755756378174
    4. 'from' → logprob: -7.382755756378174
    5. ' def' → logprob: -7.632755756378174
    6. 'Chaque' → logprob: -9.132756233215332
    7. 'import' → logprob: -10.007756233215332
    8. 'On' → logprob: -10.882756233215332
    9. 'Each' → logprob: -10.882756233215332
    10. 'Dé' → logprob: -11.507756233215332

Token 420: ' noe' (ID: 49921)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12156739085912704
    2. ' def' → logprob: -2.496567487716675
    3. 'e' → logprob: -4.496567249298096
    4. '
' → logprob: -4.746567249298096
    5. '#' → logprob: -5.996567249298096
    6. ' espace' → logprob: -6.246567249298096
    7. ' #' → logprob: -6.371567249298096
    8. 'space' → logprob: -6.996567249298096
    9. ' space' → logprob: -7.621567249298096
    10. ' de' → logprob: -7.746567249298096

Token 421: 'ud' (ID: 527)
  Prédit: 'ud'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ud' → logprob: -0.030617255717515945
    2. 'd' → logprob: -3.6556172370910645
    3. 'u' → logprob: -6.2806172370910645
    4. 'de' → logprob: -6.5306172370910645
    5. ')' → logprob: -7.6556172370910645
    6. '('' → logprob: -9.030617713928223
    7. 'def' → logprob: -9.280617713928223
    8. 'e' → logprob: -9.780617713928223
    9. '   ' → logprob: -10.530617713928223
    10. 'x' → logprob: -10.905617713928223

Token 422: ' interne' (ID: 59673)
  Prédit: ' interne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' interne' → logprob: -0.07785788178443909
    2. 'inter' → logprob: -2.9528579711914062
    3. '_inter' → logprob: -4.827857971191406
    4. ' ,' → logprob: -5.202857971191406
    5. ',' → logprob: -5.952857971191406
    6. 'intern' → logprob: -6.202857971191406
    7. 'internal' → logprob: -6.827857971191406
    8. ' interna' → logprob: -7.327857971191406
    9. '_' → logprob: -7.577857971191406
    10. ' intern' → logprob: -7.952857971191406

Token 423: ' a' (ID: 261)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -1.6904603242874146
    2. ' a' → logprob: -1.6904603242874146
    3. '<|end|>' → logprob: -1.9404603242874146
    4. 'a' → logprob: -2.315460205078125
    5. 's' → logprob: -2.815460205078125
    6. 'combine' → logprob: -3.315460205078125
    7. ' has' → logprob: -3.440460205078125
    8. ' compute' → logprob: -3.815460205078125
    9. 'has' → logprob: -3.940460205078125
    10. 'def' → logprob: -4.065460205078125

Token 424: ' ' (ID: 220)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.657568335533142
    2. ' deux' → logprob: -1.657568335533142
    3. ' trois' → logprob: -1.907568335533142
    4. ' une' → logprob: -2.4075684547424316
    5. 'un' → logprob: -2.5325684547424316
    6. 'def' → logprob: -2.7825684547424316
    7. 'une' → logprob: -3.2825684547424316
    8. ' ' → logprob: -3.4075684547424316
    9. 'de' → logprob: -3.5325684547424316
    10. 's' → logprob: -4.032568454742432

Token 425: '3' (ID: 18)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1657745838165283
    2. '3' → logprob: -1.7907745838165283
    3. 'de' → logprob: -1.9157745838165283
    4. 'un' → logprob: -2.1657745838165283
    5. ' trois' → logprob: -3.0407745838165283
    6. '#' → logprob: -3.4157745838165283
    7. '4' → logprob: -3.5407745838165283
    8. 'une' → logprob: -3.5407745838165283
    9. 'des' → logprob: -3.5407745838165283
    10. 'tro' → logprob: -3.5407745838165283

Token 426: ' choix' (ID: 28642)
  Prédit: ' espaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -1.1204804182052612
    2. ' options' → logprob: -1.7454804182052612
    3. ' ' → logprob: -1.9954804182052612
    4. ' ensembles' → logprob: -2.120480537414551
    5. ' possibilités' → logprob: -2.495480537414551
    6. ' choix' → logprob: -3.620480537414551
    7. ' sets' → logprob: -3.995480537414551
    8. ' choices' → logprob: -3.995480537414551
    9. ' opér' → logprob: -4.495480537414551
    10. ' possible' → logprob: -4.745480537414551

Token 427: ' possibles' (ID: 97753)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4803413152694702
    2. ' ,' → logprob: -2.4803414344787598
    3. ',' → logprob: -2.6053414344787598
    4. ' =' → logprob: -2.9803414344787598
    5. 'def' → logprob: -3.2303414344787598
    6. ' d' → logprob: -3.3553414344787598
    7. ''' → logprob: -3.7303414344787598
    8. ' '' → logprob: -4.48034143447876
    9. ' for' → logprob: -4.48034143447876
    10. ':' → logprob: -4.60534143447876

Token 428: ':' (ID: 25)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08577865362167358
    2. ' def' → logprob: -3.2107787132263184
    3. ':' → logprob: -3.8357787132263184
    4. ' :' → logprob: -5.210778713226318
    5. ',' → logprob: -5.585778713226318
    6. '#' → logprob: -5.835778713226318
    7. ' (' → logprob: -6.085778713226318
    8. ''' → logprob: -6.710778713226318
    9. ' de' → logprob: -7.710778713226318
    10. ' '' → logprob: -8.08577823638916

Token 429: ' A' (ID: 355)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.48254987597465515
    2. ''' → logprob: -1.2325499057769775
    3. ''A' → logprob: -3.3575499057769775
    4. ' A' → logprob: -3.8575499057769775
    5. 'A' → logprob: -4.482549667358398
    6. '#' → logprob: -5.357549667358398
    7. '('' → logprob: -5.607549667358398
    8. ''O' → logprob: -6.232549667358398
    9. ' ' → logprob: -6.357549667358398
    10. 'def' → logprob: -6.607549667358398

Token 430: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10768868774175644
    2. ' ,' → logprob: -3.3576886653900146
    3. ''' → logprob: -3.4826886653900146
    4. 'O' → logprob: -4.357688903808594
    5. ',O' → logprob: -4.732688903808594
    6. '',' → logprob: -5.357688903808594
    7. ''O' → logprob: -6.107688903808594
    8. '','' → logprob: -6.607688903808594
    9. 'or' → logprob: -6.607688903808594
    10. ' or' → logprob: -6.732688903808594

Token 431: 'intersection' (ID: 170255)
  Prédit: ' XOR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' XOR' → logprob: -0.9354820847511292
    2. ''' → logprob: -2.1854820251464844
    3. ' '' → logprob: -2.4354820251464844
    4. '),' → logprob: -2.5604820251464844
    5. 'xor' → logprob: -3.0604820251464844
    6. ' xor' → logprob: -3.4354820251464844
    7. ' O' → logprob: -3.4354820251464844
    8. 'X' → logprob: -3.5604820251464844
    9. ',' → logprob: -3.9354820251464844
    10. ' ,' → logprob: -3.9354820251464844

Token 432: '),' (ID: 936)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ,' → logprob: -0.5589549541473389
    2. ',' → logprob: -1.5589549541473389
    3. '),' → logprob: -2.433954954147339
    4. ' |' → logprob: -3.058954954147339
    5. ')' → logprob: -3.433954954147339
    6. ' &' → logprob: -4.308955192565918
    7. ' ),' → logprob: -4.558955192565918
    8. '|' → logprob: -4.808955192565918
    9. ' of' → logprob: -5.683955192565918
    10. '_' → logprob: -5.808955192565918

Token 433: ' O' (ID: 532)
  Prédit: ' O'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' O' → logprob: -0.12778118252754211
    2. 'O' → logprob: -2.1277811527252197
    3. ' ' → logprob: -7.252781391143799
    4. ' X' → logprob: -10.12778091430664
    5. ' ' → logprob: -10.62778091430664
    6. ' ,' → logprob: -11.37778091430664
    7. 'X' → logprob: -11.50278091430664
    8. ',O' → logprob: -11.62778091430664
    9. ',' → logprob: -11.75278091430664
    10. '  ' → logprob: -12.00278091430664

Token 434: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5050830245018005
    2. ',' → logprob: -1.1300830841064453
    3. ' ,' → logprob: -3.1300830841064453
    4. 'r' → logprob: -4.755083084106445
    5. '(' → logprob: -4.755083084106445
    6. ' ' → logprob: -5.755083084106445
    7. 'or' → logprob: -6.005083084106445
    8. ' or' → logprob: -6.505083084106445
    9. ')' → logprob: -6.755083084106445
    10. '|' → logprob: -7.380083084106445

Token 435: 'union' (ID: 37013)
  Prédit: 'union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'union' → logprob: -0.04920049011707306
    2. ' union' → logprob: -3.0492005348205566
    3. '_union' → logprob: -8.174200057983398
    4. 'un' → logprob: -10.174200057983398
    5. '	union' → logprob: -10.174200057983398
    6. ')' → logprob: -10.549200057983398
    7. 'u' → logprob: -10.549200057983398
    8. 'Union' → logprob: -10.799200057983398
    9. '.union' → logprob: -10.799200057983398
    10. ''' → logprob: -10.924200057983398

Token 436: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.023120854049921036
    2. ' ),' → logprob: -3.898120880126953
    3. ')' → logprob: -6.148120880126953
    4. ',' → logprob: -8.523120880126953
    5. ' or' → logprob: -9.523120880126953
    6. ' ou' → logprob: -10.023120880126953
    7. ' )' → logprob: -10.398120880126953
    8. '   ' → logprob: -10.773120880126953
    9. ''),' → logprob: -11.023120880126953
    10. ' ' → logprob: -11.273120880126953

Token 437: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.577712893486023
    2. ' X' → logprob: -0.827712893486023
    3. ' ' → logprob: -6.5777130126953125
    4. '
' → logprob: -8.202713012695312
    5. '  ' → logprob: -10.327713012695312
    6. ' ' → logprob: -10.827713012695312
    7. ' 
' → logprob: -11.077713012695312
    8. '   ' → logprob: -11.827713012695312
    9. '#' → logprob: -12.202713012695312
    10. '

' → logprob: -12.202713012695312

Token 438: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.11457573622465134
    2. ')' → logprob: -2.6145756244659424
    3. '(' → logprob: -3.6145756244659424
    4. '^' → logprob: -6.3645758628845215
    5. '(ex' → logprob: -6.4895758628845215
    6. '(inter' → logprob: -7.2395758628845215
    7. '   ' → logprob: -7.7395758628845215
    8. ',' → logprob: -7.7395758628845215
    9. ' )' → logprob: -7.7395758628845215
    10. ' ^' → logprob: -7.8645758628845215

Token 439: 'sym' (ID: 53095)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1941814422607422
    2. 'xor' → logprob: -2.694181442260742
    3. 'sym' → logprob: -3.819181442260742
    4. 'ex' → logprob: -3.944181442260742
    5. ' symmetric' → logprob: -3.944181442260742
    6. 'exclusive' → logprob: -3.944181442260742
    7. ' xor' → logprob: -5.069181442260742
    8. ' exclusive' → logprob: -5.319181442260742
    9. ')' → logprob: -5.694181442260742
    10. ' sym' → logprob: -5.694181442260742

Token 440: 'étr' (ID: 35025)
  Prédit: 'étr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'étr' → logprob: -0.4000674784183502
    2. 'metric' → logprob: -1.9000674486160278
    3. 'é' → logprob: -2.5250675678253174
    4. 'et' → logprob: -2.7750675678253174
    5. 'm' → logprob: -4.150067329406738
    6. 'etric' → logprob: -4.275067329406738
    7. 'e' → logprob: -6.025067329406738
    8. '_' → logprob: -7.025067329406738
    9. '^' → logprob: -7.025067329406738
    10. 'etr' → logprob: -7.150067329406738

Token 441: 'ique' (ID: 2222)
  Prédit: 'rique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rique' → logprob: -0.3094315528869629
    2. 'rie' → logprob: -1.559431552886963
    3. 'ric' → logprob: -3.184431552886963
    4. 'r' → logprob: -4.684431552886963
    5. 'riques' → logprob: -6.434431552886963
    6. 'rical' → logprob: -6.934431552886963
    7. '_' → logprob: -7.684431552886963
    8. 'ri' → logprob: -7.934431552886963
    9. '```' → logprob: -8.184431076049805
    10. 'tric' → logprob: -8.184431076049805

Token 442: ' différence' (ID: 79196)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7545902729034424
    2. '_' → logprob: -1.1295902729034424
    3. '_difference' → logprob: -2.8795902729034424
    4. ' difference' → logprob: -3.0045902729034424
    5. 'difference' → logprob: -3.0045902729034424
    6. ' )' → logprob: -3.5045902729034424
    7. ' _' → logprob: -5.629590034484863
    8. ' différence' → logprob: -5.879590034484863
    9. ' ' → logprob: -6.129590034484863
    10. ' de' → logprob: -6.629590034484863

Token 443: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011192237958312035
    2. ' )' → logprob: -4.886192321777344
    3. '):' → logprob: -6.511192321777344
    4. ')
' → logprob: -6.886192321777344
    5. ')**' → logprob: -8.636192321777344
    6. '):
' → logprob: -8.761192321777344
    7. '),' → logprob: -8.886192321777344
    8. ').' → logprob: -9.011192321777344
    9. ')\' → logprob: -9.011192321777344
    10. '')' → logprob: -10.261192321777344

Token 444: ' sur' (ID: 1512)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.42982202768325806
    2. '
' → logprob: -1.0548219680786133
    3. '

' → logprob: -8.054821968078613
    4. '#' → logprob: -8.054821968078613
    5. '\' → logprob: -9.054821968078613
    6. '\n' → logprob: -9.304821968078613
    7. '
' → logprob: -9.929821968078613
    8. '  
' → logprob: -10.054821968078613
    9. ' def' → logprob: -10.429821968078613
    10. 'import' → logprob: -10.554821968078613

Token 445: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.3002617061138153
    2. ' ses' → logprob: -2.3002617359161377
    3. 'les' → logprob: -3.1752617359161377
    4. 'left' → logprob: -3.9252617359161377
    5. ' l' → logprob: -4.050261497497559
    6. 'l' → logprob: -4.550261497497559
    7. ' left' → logprob: -4.675261497497559
    8. ' the' → logprob: -4.800261497497559
    9. ' leurs' → logprob: -5.050261497497559
    10. 'the' → logprob: -5.425261497497559

Token 446: ' ensembles' (ID: 144172)
  Prédit: ' ensembles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ensembles' → logprob: -1.003170132637024
    2. 'ense' → logprob: -1.503170132637024
    3. 'de' → logprob: -2.2531700134277344
    4. 'sets' → logprob: -2.5031700134277344
    5. ' sets' → logprob: -2.8781700134277344
    6. ' enfants' → logprob: -2.8781700134277344
    7. ' deux' → logprob: -4.003170013427734
    8. 'ensemble' → logprob: -4.378170013427734
    9. 'g' → logprob: -4.628170013427734
    10. 's' → logprob: -4.878170013427734

Token 447: ' des' (ID: 731)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.035807009786367416
    2. '
' → logprob: -3.410806894302368
    3. '#' → logprob: -6.910807132720947
    4. ' def' → logprob: -7.535807132720947
    5. '\' → logprob: -8.285806655883789
    6. '\n' → logprob: -9.285806655883789
    7. '

' → logprob: -9.785806655883789
    8. 'import' → logprob: -10.035806655883789
    9. '  
' → logprob: -10.285806655883789
    10. '#
' → logprob: -10.535806655883789

Token 448: ' enfants' (ID: 24681)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.44653600454330444
    2. ' enfants' → logprob: -1.6965360641479492
    3. 'en' → logprob: -2.321536064147949
    4. ' deux' → logprob: -3.696536064147949
    5. ' ' → logprob: -4.071536064147949
    6. 'f' → logprob: -4.821536064147949
    7. 'children' → logprob: -4.946536064147949
    8. 's' → logprob: -4.946536064147949
    9. 'child' → logprob: -5.821536064147949
    10. '2' → logprob: -6.071536064147949

Token 449: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00417444109916687
    2. '
' → logprob: -5.50417423248291
    3. '#' → logprob: -9.75417423248291
    4. 'from' → logprob: -11.12917423248291
    5. ' def' → logprob: -11.75417423248291
    6. '\' → logprob: -12.12917423248291
    7. 'import' → logprob: -12.50417423248291
    8. '
' → logprob: -13.62917423248291
    9. '\n' → logprob: -13.75417423248291
    10. '

' → logprob: -14.25417423248291

Token 450: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008965292945504189
    2. '
' → logprob: -4.883965492248535
    3. 'from' → logprob: -6.633965492248535
    4. '#' → logprob: -10.383965492248535
    5. 'import' → logprob: -12.008965492248535
    6. '
' → logprob: -13.383965492248535
    7. '```' → logprob: -13.883965492248535
    8. '\' → logprob: -14.133965492248535
    9. ' def' → logprob: -14.133965492248535
    10. '

' → logprob: -14.133965492248535

Token 451: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0053560249507427216
    2. '
' → logprob: -5.2553558349609375
    3. 'from' → logprob: -9.130355834960938
    4. '#' → logprob: -11.880355834960938
    5. 'import' → logprob: -13.005355834960938
    6. '  
' → logprob: -13.755355834960938
    7. '\' → logprob: -13.880355834960938
    8. '
' → logprob: -14.130355834960938
    9. ' def' → logprob: -14.505355834960938
    10. '

' → logprob: -15.130355834960938

Token 452: ' Pour' (ID: 13931)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00510793412104249
    2. 'from' → logprob: -5.505107879638672
    3. '#' → logprob: -7.255107879638672
    4. '
' → logprob: -8.130107879638672
    5. 'import' → logprob: -10.755107879638672
    6. ' def' → logprob: -12.505107879638672
    7. 'Dé' → logprob: -14.505107879638672
    8. 'dé' → logprob: -14.505107879638672
    9. ' 
' → logprob: -15.255107879638672
    10. 'de' → logprob: -15.380107879638672

Token 453: ' chaque' (ID: 21194)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5293705463409424
    2. ' chaque' → logprob: -1.1543705463409424
    3. '#' → logprob: -3.7793705463409424
    4. ' def' → logprob: -3.9043705463409424
    5. 'calcul' → logprob: -4.654370307922363
    6. 'each' → logprob: -4.779370307922363
    7. 'le' → logprob: -5.404370307922363
    8. ' le' → logprob: -5.404370307922363
    9. ' each' → logprob: -5.779370307922363
    10. 'cache' → logprob: -6.779370307922363

Token 454: ' noe' (ID: 49921)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.8055483102798462
    2. 'def' → logprob: -0.9305483102798462
    3. ' node' → logprob: -2.0555481910705566
    4. 'n' → logprob: -4.680548191070557
    5. ' def' → logprob: -4.680548191070557
    6. 'no' → logprob: -5.555548191070557
    7. ' noe' → logprob: -6.055548191070557
    8. ' n' → logprob: -6.930548191070557
    9. '('' → logprob: -6.930548191070557
    10. '
' → logprob: -7.305548191070557

Token 455: 'ud' (ID: 527)
  Prédit: 'ud'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ud' → logprob: -0.013453729450702667
    2. 'u' → logprob: -4.888453960418701
    3. 'def' → logprob: -6.013453960418701
    4. '   ' → logprob: -6.138453960418701
    5. '```' → logprob: -8.138453483581543
    6. 'ur' → logprob: -9.013453483581543
    7. 'd' → logprob: -9.513453483581543
    8. '       ' → logprob: -9.513453483581543
    9. '#' → logprob: -9.513453483581543
    10. 'de' → logprob: -9.638453483581543

Token 456: ' interne' (ID: 59673)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07579044997692108
    2. ' ,' → logprob: -2.9507904052734375
    3. '_internal' → logprob: -4.5757904052734375
    4. ' interne' → logprob: -5.8257904052734375
    5. 'internal' → logprob: -6.0757904052734375
    6. ' internal' → logprob: -6.5757904052734375
    7. ':' → logprob: -6.8257904052734375
    8. '<|end|>' → logprob: -7.3257904052734375
    9. '_inter' → logprob: -8.450790405273438
    10. '_INTERNAL' → logprob: -8.575790405273438

Token 457: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04682469740509987
    2. ' ,' → logprob: -3.1718246936798096
    3. ':' → logprob: -6.296824932098389
    4. '<|end|>' → logprob: -7.171824932098389
    5. 'def' → logprob: -8.04682445526123
    6. '   ' → logprob: -8.29682445526123
    7. ',
' → logprob: -8.67182445526123
    8. '<|end|>' → logprob: -9.29682445526123
    9. ' ' → logprob: -10.04682445526123
    10. ' (' → logprob: -10.17182445526123

Token 458: ' on' (ID: 402)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4490547776222229
    2. '#' → logprob: -1.1990547180175781
    3. 'from' → logprob: -3.074054718017578
    4. ' def' → logprob: -5.074054718017578
    5. ' #' → logprob: -6.074054718017578
    6. ' on' → logprob: -6.074054718017578
    7. ' from' → logprob: -7.324054718017578
    8. 'on' → logprob: -8.074054718017578
    9. '...' → logprob: -8.324054718017578
    10. 'continue' → logprob: -8.449054718017578

Token 459: ' fait' (ID: 7473)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.22951626777648926
    2. '#' → logprob: -2.3545162677764893
    3. 'continue' → logprob: -3.3545162677764893
    4. 'combine' → logprob: -3.3545162677764893
    5. 'from' → logprob: -4.97951602935791
    6. 'expl' → logprob: -5.10451602935791
    7. 'calculate' → logprob: -5.22951602935791
    8. 'veux' → logprob: -5.72951602935791
    9. 'compute' → logprob: -5.85451602935791
    10. 'calc' → logprob: -6.10451602935791

Token 460: ' un' (ID: 537)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7848647236824036
    2. 'un' → logprob: -1.4098646640777588
    3. 'les' → logprob: -2.159864664077759
    4. 'une' → logprob: -2.784864664077759
    5. 'le' → logprob: -3.284864664077759
    6. '3' → logprob: -4.034864902496338
    7. 'la' → logprob: -4.784864902496338
    8. 'appel' → logprob: -4.784864902496338
    9. ' un' → logprob: -5.034864902496338
    10. 'comb' → logprob: -5.159864902496338

Token 461: ' dfs' (ID: 51252)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4465939700603485
    2. 'dp' → logprob: -1.696593999862671
    3. 'memo' → logprob: -2.821593999862671
    4. 'cache' → logprob: -3.821593999862671
    5. 'dynamic' → logprob: -4.071593761444092
    6. 'dfs' → logprob: -4.571593761444092
    7. 'comb' → logprob: -4.696593761444092
    8. 'dé' → logprob: -4.946593761444092
    9. ' memo' → logprob: -5.571593761444092
    10. 'combine' → logprob: -5.696593761444092

Token 462: ' en' (ID: 469)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0018160749459639192
    2. '
' → logprob: -6.376816272735596
    3. '\' → logprob: -9.751815795898438
    4. '#' → logprob: -11.001815795898438
    5. 'import' → logprob: -11.501815795898438
    6. ' def' → logprob: -11.626815795898438
    7. 'from' → logprob: -12.376815795898438
    8. '
' → logprob: -12.626815795898438
    9. '_def' → logprob: -12.751815795898438
    10. '```' → logprob: -13.626815795898438

Token 463: ' mém' (ID: 136981)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.7474279403686523
    2. ' combin' → logprob: -1.9974279403686523
    3. ' continu' → logprob: -2.1224279403686523
    4. 'memo' → logprob: -2.1224279403686523
    5. 'calcul' → logprob: -2.4974279403686523
    6. ' profondeur' → logprob: -3.2474279403686523
    7. 'comb' → logprob: -3.8724279403686523
    8. 'rec' → logprob: -3.8724279403686523
    9. 'continu' → logprob: -4.122427940368652
    10. 'fonction' → logprob: -4.247427940368652

Token 464: 'oris' (ID: 50689)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.09189394861459732
    2. 'oire' → logprob: -2.7168939113616943
    3. 'or' → logprob: -4.341894149780273
    4. 'ory' → logprob: -5.341894149780273
    5. 'oir' → logprob: -6.966894149780273
    6. '```' → logprob: -7.216894149780273
    7. 'ois' → logprob: -7.466894149780273
    8. 'oi' → logprob: -7.966894149780273
    9. '
' → logprob: -8.466894149780273
    10. 'cache' → logprob: -9.091894149780273

Token 465: 'ant' (ID: 493)
  Prédit: 'ation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.1178215965628624
    2. 'ant' → logprob: -2.36782169342041
    3. 'e' → logprob: -4.86782169342041
    4. 'z' → logprob: -5.36782169342041
    5. '#' → logprob: -6.36782169342041
    6. 'er' → logprob: -6.36782169342041
    7. '```' → logprob: -7.86782169342041
    8. '   ' → logprob: -7.99282169342041
    9. 'ing' → logprob: -9.24282169342041
    10. 'a' → logprob: -9.24282169342041

Token 466: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7462533712387085
    2. 'def' → logprob: -2.496253490447998
    3. ' )' → logprob: -2.871253490447998
    4. '{' → logprob: -3.246253490447998
    5. 'le' → logprob: -3.246253490447998
    6. '  ' → logprob: -3.246253490447998
    7. ' ' → logprob: -3.371253490447998
    8. ' la' → logprob: -3.371253490447998
    9. 'the' → logprob: -3.371253490447998
    10. ' the' → logprob: -3.496253490447998

Token 467: 'memo' (ID: 113822)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1940544843673706
    2. 'le' → logprob: -3.44405460357666
    3. ' la' → logprob: -3.44405460357666
    4. ' )' → logprob: -3.69405460357666
    5. ' l' → logprob: -3.81905460357666
    6. 'l' → logprob: -3.94405460357666
    7. 'the' → logprob: -4.56905460357666
    8. 'pos' → logprob: -5.31905460357666
    9. ' le' → logprob: -5.69405460357666
    10. '(node' → logprob: -5.69405460357666

Token 468: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018389426171779633
    2. ',' → logprob: -4.2683892250061035
    3. '_)' → logprob: -7.2683892250061035
    4. ' )' → logprob: -7.3933892250061035
    5. ')
' → logprob: -7.5183892250061035
    6. 'ization' → logprob: -7.6433892250061035
    7. '_' → logprob: -7.7683892250061035
    8. '=' → logprob: -7.8933892250061035
    9. ' =' → logprob: -8.143389701843262
    10. ',)' → logprob: -8.268389701843262

Token 469: ' les' (ID: 1341)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0835430920124054
    2. '
' → logprob: -3.333543062210083
    3. '_' → logprob: -4.208543300628662
    4. 'memo' → logprob: -4.958543300628662
    5. ' def' → logprob: -5.833543300628662
    6. '#' → logprob: -6.208543300628662
    7. ' _' → logprob: -6.333543300628662
    8. ',' → logprob: -6.583543300628662
    9. '{' → logprob: -6.833543300628662
    10. '_set' → logprob: -7.083543300628662

Token 470: ' nombre' (ID: 9733)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5981457829475403
    2. ' result' → logprob: -2.0981457233428955
    3. 'results' → logprob: -2.4731457233428955
    4. ' next' → logprob: -2.8481457233428955
    5. 'sets' → logprob: -2.8481457233428955
    6. ' results' → logprob: -3.5981457233428955
    7. 'next' → logprob: -3.9731457233428955
    8. 'choices' → logprob: -4.598145961761475
    9. ' sets' → logprob: -4.973145961761475
    10. 'state' → logprob: -4.973145961761475

Token 471: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8401005268096924
    2. ' de' → logprob: -1.3401005268096924
    3. '   ' → logprob: -2.3401005268096924
    4. ' _' → logprob: -3.2151005268096924
    5. 'def' → logprob: -3.9651005268096924
    6. '_de' → logprob: -4.465100288391113
    7. '_tokens' → logprob: -4.465100288391113
    8. '_counts' → logprob: -4.590100288391113
    9. 'aire' → logprob: -4.715100288391113
    10. 's' → logprob: -4.715100288391113

Token 472: ' façons' (ID: 165958)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -1.1861876249313354
    2. 'fa' → logprob: -1.3111876249313354
    3. ' façons' → logprob: -1.4361876249313354
    4. ' ways' → logprob: -2.061187744140625
    5. 'man' → logprob: -3.561187744140625
    6. ' fa' → logprob: -5.311187744140625
    7. 'fois' → logprob: -5.561187744140625
    8. ' man' → logprob: -5.561187744140625
    9. 'poss' → logprob: -5.811187744140625
    10. 'sets' → logprob: -6.311187744140625

Token 473: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.619840681552887
    2. ' d' → logprob: -1.8698406219482422
    3. 'def' → logprob: -1.8698406219482422
    4. 'de' → logprob: -2.869840621948242
    5. 'd' → logprob: -2.994840621948242
    6. ')' → logprob: -4.494840621948242
    7. '_de' → logprob: -4.744840621948242
    8. ',' → logprob: -5.744840621948242
    9. '_possible' → logprob: -5.744840621948242
    10. '_d' → logprob: -5.869840621948242

Token 474: ''obtenir' (ID: 191633)
  Prédit: ''é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''é' → logprob: -0.041901446878910065
    2. ''' → logprob: -4.166901588439941
    3. 'e' → logprob: -4.416901588439941
    4. 'é' → logprob: -5.041901588439941
    5. ' écrire' → logprob: -6.666901588439941
    6. '’é' → logprob: -7.166901588439941
    7. ''utiliser' → logprob: -7.541901588439941
    8. ' e' → logprob: -7.541901588439941
    9. ' '' → logprob: -7.666901588439941
    10. ''ex' → logprob: -7.666901588439941

Token 475: ' chaque' (ID: 21194)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.2638671398162842
    2. 'l' → logprob: -1.3888671398162842
    3. 'each' → logprob: -2.138867139816284
    4. ' chaque' → logprob: -2.513867139816284
    5. 'les' → logprob: -2.763867139816284
    6. ',' → logprob: -3.013867139816284
    7. 'le' → logprob: -3.138867139816284
    8. 'sets' → logprob: -3.638867139816284
    9. ' each' → logprob: -4.138867378234863
    10. ' les' → logprob: -4.513867378234863

Token 476: ' sous' (ID: 14487)
  Prédit: 'sets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sets' → logprob: -1.576398253440857
    2. ')' → logprob: -2.0763983726501465
    3. 'subset' → logprob: -2.0763983726501465
    4. ' subset' → logprob: -2.3263983726501465
    5. ' subsets' → logprob: -2.3263983726501465
    6. ' sets' → logprob: -2.9513983726501465
    7. 'set' → logprob: -3.0763983726501465
    8. ' set' → logprob: -3.9513983726501465
    9. 'result' → logprob: -4.0763983726501465
    10. '{' → logprob: -4.3263983726501465

Token 477: '-' (ID: 12)
  Prédit: 'ense'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ense' → logprob: -1.020957350730896
    2. 'set' → logprob: -1.645957350730896
    3. 'sets' → logprob: -2.0209574699401855
    4. 'ensemble' → logprob: -2.2709574699401855
    5. 'tree' → logprob: -3.0209574699401855
    6. '_' → logprob: -3.0209574699401855
    7. '_tree' → logprob: -3.6459574699401855
    8. '   ' → logprob: -3.8959574699401855
    9. '_sets' → logprob: -4.6459574699401855
    10. '#' → logprob: -4.6459574699401855

Token 478: 'ensemble' (ID: 37301)
  Prédit: 'ense'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ense' → logprob: -0.6519961953163147
    2. 'tree' → logprob: -1.52699613571167
    3. 'sets' → logprob: -2.15199613571167
    4. 'ensemble' → logprob: -2.27699613571167
    5. 'trees' → logprob: -4.02699613571167
    6. 'set' → logprob: -4.27699613571167
    7. '#' → logprob: -5.15199613571167
    8. 'result' → logprob: -6.90199613571167
    9. 'ar' → logprob: -7.40199613571167
    10. 'dict' → logprob: -7.52699613571167

Token 479: '.
' (ID: 558)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.6356076598167419
    2. 'def' → logprob: -0.8856076598167419
    3. '#' → logprob: -3.2606077194213867
    4. 'from' → logprob: -4.760607719421387
    5. '
' → logprob: -5.510607719421387
    6. 'import' → logprob: -5.510607719421387
    7. '#
' → logprob: -7.635607719421387
    8. ',
' → logprob: -7.885607719421387
    9. 'mem' → logprob: -8.135607719421387
    10. '_' → logprob: -8.260607719421387

Token 480: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00990046001970768
    2. '
' → logprob: -5.1349005699157715
    3. '_' → logprob: -6.3849005699157715
    4. '#' → logprob: -7.3849005699157715
    5. ' def' → logprob: -7.5099005699157715
    6. ' 
' → logprob: -8.009900093078613
    7. '\' → logprob: -8.509900093078613
    8. ':' → logprob: -8.759900093078613
    9. '_
' → logprob: -9.509900093078613
    10. 'de' → logprob: -9.634900093078613

Token 481: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01959102600812912
    2. '
' → logprob: -4.144590854644775
    3. '#' → logprob: -6.769590854644775
    4. 'memo' → logprob: -7.144590854644775
    5. 'from' → logprob: -7.644590854644775
    6. '_' → logprob: -8.519591331481934
    7. '\' → logprob: -8.644591331481934
    8. ' 
' → logprob: -8.769591331481934
    9. ':' → logprob: -9.019591331481934
    10. 'import' → logprob: -9.519591331481934

Token 482: ' Le' (ID: 2018)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.015586500987410545
    2. 'from' → logprob: -4.8905863761901855
    3. '#' → logprob: -5.3905863761901855
    4. 'import' → logprob: -6.5155863761901855
    5. 'memo' → logprob: -6.8905863761901855
    6. ' def' → logprob: -7.2655863761901855
    7. '
' → logprob: -9.265586853027344
    8. ' #' → logprob: -11.140586853027344
    9. ' from' → logprob: -11.265586853027344
    10. ' 
' → logprob: -11.265586853027344

Token 483: ' résultat' (ID: 62556)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1420297771692276
    2. ' def' → logprob: -2.5170297622680664
    3. 'd' → logprob: -4.642029762268066
    4. 'from' → logprob: -4.767029762268066
    5. '#' → logprob: -4.892029762268066
    6. 'memo' → logprob: -5.017029762268066
    7. ' memo' → logprob: -5.142029762268066
    8. 'import' → logprob: -5.892029762268066
    9. ' #' → logprob: -6.267029762268066
    10. ' ' → logprob: -6.517029762268066

Token 484: ' final' (ID: 1721)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6014772057533264
    2. '=' → logprob: -1.2264771461486816
    3. ' est' → logprob: -2.7264771461486816
    4. '_' → logprob: -3.7264771461486816
    5. ':' → logprob: -4.601477146148682
    6. ')' → logprob: -4.726477146148682
    7. 'def' → logprob: -4.851477146148682
    8. ' is' → logprob: -5.226477146148682
    9. ' )' → logprob: -5.351477146148682
    10. 'final' → logprob: -5.351477146148682

Token 485: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.2583785057067871
    2. 'est' → logprob: -2.508378505706787
    3. 'def' → logprob: -3.133378505706787
    4. '#' → logprob: -3.508378505706787
    5. 's' → logprob: -3.758378505706787
    6. ':' → logprob: -4.758378505706787
    7. ' =' → logprob: -5.008378505706787
    8. ' s' → logprob: -5.008378505706787
    9. ' def' → logprob: -5.633378505706787
    10. '_est' → logprob: -5.633378505706787

Token 486: ' le' (ID: 505)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -1.4074602127075195
    2. 'lambda' → logprob: -1.7824602127075195
    3. '(' → logprob: -2.4074602127075195
    4. 'def' → logprob: -2.4074602127075195
    5. '{' → logprob: -2.5324602127075195
    6. '(lambda' → logprob: -2.6574602127075195
    7. '{}' → logprob: -2.9074602127075195
    8. '1' → logprob: -2.9074602127075195
    9. ' (' → logprob: -3.2824602127075195
    10. '#' → logprob: -4.1574602127075195

Token 487: ' nombre' (ID: 9733)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -1.6523488759994507
    2. '(' → logprob: -2.2773489952087402
    3. 'nombre' → logprob: -2.5273489952087402
    4. 'memo' → logprob: -2.6523489952087402
    5. ' nombre' → logprob: -2.7773489952087402
    6. 'count' → logprob: -2.9023489952087402
    7. 'def' → logprob: -2.9023489952087402
    8. 'size' → logprob: -2.9023489952087402
    9. '('' → logprob: -3.1523489952087402
    10. 'number' → logprob: -3.6523489952087402

Token 488: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9460635185241699
    2. ' de' → logprob: -1.44606351852417
    3. ' _' → logprob: -1.69606351852417
    4. 'def' → logprob: -3.32106351852417
    5. ')' → logprob: -3.57106351852417
    6. '_total' → logprob: -3.69606351852417
    7. ' d' → logprob: -3.94606351852417
    8. ' )' → logprob: -4.19606351852417
    9. '_de' → logprob: -4.44606351852417
    10. ' def' → logprob: -4.82106351852417

Token 489: ' façons' (ID: 165958)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4371432960033417
    2. ' \' → logprob: -1.812143325805664
    3. ' def' → logprob: -2.687143325805664
    4. '\n' → logprob: -3.812143325805664
    5. ' ways' → logprob: -4.312143325805664
    6. ')' → logprob: -4.437143325805664
    7. 'spaces' → logprob: -4.437143325805664
    8. '\' → logprob: -4.937143325805664
    9. ' espaces' → logprob: -5.062143325805664
    10. ' )' → logprob: -5.062143325805664

Token 490: ' d' (ID: 272)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.029798856005072594
    2. ')' → logprob: -4.654798984527588
    3. ' de' → logprob: -5.279798984527588
    4. ' d' → logprob: -5.779798984527588
    5. '<|end|>' → logprob: -6.154798984527588
    6. 'd' → logprob: -6.404798984527588
    7. 'de' → logprob: -6.529798984527588
    8. ' def' → logprob: -7.154798984527588
    9. '#' → logprob: -7.404798984527588
    10. '_' → logprob: -7.529798984527588

Token 491: ''obtenir' (ID: 191633)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.05096364766359329
    2. ''obtenir' → logprob: -3.5509636402130127
    3. ''é' → logprob: -4.050963878631592
    4. 'é' → logprob: -6.300963878631592
    5. ''avoir' → logprob: -7.550963878631592
    6. ''utiliser' → logprob: -8.175963401794434
    7. ''' → logprob: -8.550963401794434
    8. '')' → logprob: -9.425963401794434
    9. ''e' → logprob: -9.550963401794434
    10. '’obtenir' → logprob: -9.675963401794434

Token 492: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.2627207934856415
    2. 'l' → logprob: -2.137720823287964
    3. 'le' → logprob: -2.887720823287964
    4. ' {' → logprob: -4.262720584869385
    5. '4' → logprob: -4.387720584869385
    6. 'all' → logprob: -4.387720584869385
    7. ' l' → logprob: -5.137720584869385
    8. '#' → logprob: -5.512720584869385
    9. '(' → logprob: -6.262720584869385
    10. 'un' → logprob: -6.637720584869385

Token 493: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002519180765375495
    2. '3' → logprob: -7.627519130706787
    3. ' ' → logprob: -7.627519130706787
    4. '1' → logprob: -7.877519130706787
    5. ''' → logprob: -7.877519130706787
    6. '15' → logprob: -8.002519607543945
    7. 'a' → logprob: -8.502519607543945
    8. '4' → logprob: -9.752519607543945
    9. '7' → logprob: -9.752519607543945
    10. ''a' → logprob: -10.127519607543945

Token 494: ',' (ID: 11)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.18451771140098572
    2. ',' → logprob: -1.809517741203308
    3. ',b' → logprob: -5.559517860412598
    4. ' ,' → logprob: -7.309517860412598
    5. 'x' → logprob: -9.684517860412598
    6. '}' → logprob: -10.559517860412598
    7. ','' → logprob: -11.059517860412598
    8. ',...' → logprob: -11.309517860412598
    9. 'xf' → logprob: -11.309517860412598
    10. '```' → logprob: -11.559517860412598

Token 495: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003034074034076184
    2. ' ' → logprob: -8.125303268432617
    3. '3' → logprob: -12.125303268432617
    4. '15' → logprob: -14.375303268432617
    5. '0' → logprob: -14.750303268432617
    6. '   ' → logprob: -15.250303268432617
    7. '7' → logprob: -15.250303268432617
    8. '
' → logprob: -16.000303268432617
    9. ',' → logprob: -16.125303268432617
    10. ''' → logprob: -16.125303268432617

Token 496: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000578292878344655
    2. ','' → logprob: -7.8755784034729
    3. ' ,' → logprob: -9.375577926635742
    4. '2' → logprob: -10.250577926635742
    5. ',,' → logprob: -10.875577926635742
    6. '}' → logprob: -11.500577926635742
    7. '',' → logprob: -11.750577926635742
    8. '3' → logprob: -12.000577926635742
    9. '','' → logprob: -12.000577926635742
    10. ',...' → logprob: -12.500577926635742

Token 497: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.236549335066229e-05
    2. ' ' → logprob: -11.125021934509277
    3. '3' → logprob: -12.250021934509277
    4. ',' → logprob: -13.875021934509277
    5. '

' → logprob: -14.625021934509277
    6. ''' → logprob: -14.750021934509277
    7. '
' → logprob: -15.125021934509277
    8. '   ' → logprob: -15.375021934509277
    9. '  ' → logprob: -16.125022888183594
    10. '1' → logprob: -16.250022888183594

Token 498: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01023928727954626
    2. '3' → logprob: -4.635239124298096
    3. '}' → logprob: -8.385239601135254
    4. ' ,' → logprob: -9.260239601135254
    5. ','' → logprob: -9.760239601135254
    6. '4' → logprob: -11.135239601135254
    7. '   ' → logprob: -11.385239601135254
    8. '```' → logprob: -11.385239601135254
    9. '{' → logprob: -11.885239601135254
    10. ' ' → logprob: -11.885239601135254

Token 499: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00011808603449026123
    2. '3' → logprob: -9.125118255615234
    3. ' ' → logprob: -11.750118255615234
    4. '
' → logprob: -14.625118255615234
    5. '

' → logprob: -15.500118255615234
    6. '   ' → logprob: -15.625118255615234
    7. ',' → logprob: -15.750118255615234
    8. '1' → logprob: -16.250118255615234
    9. '  ' → logprob: -16.750118255615234
    10. ''' → logprob: -16.875118255615234

Token 500: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0047419723123312
    2. ' }' → logprob: -5.87974214553833
    3. '})' → logprob: -7.00474214553833
    4. '},' → logprob: -7.62974214553833
    5. '}`' → logprob: -9.129741668701172
    6. '}.' → logprob: -9.254741668701172
    7. '}=' → logprob: -9.629741668701172
    8. '}
' → logprob: -9.879741668701172
    9. '4' → logprob: -10.129741668701172
    10. ',' → logprob: -10.129741668701172

Token 501: ' (=' (ID: 72569)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.052229415625333786
    2. 'from' → logprob: -3.677229404449463
    3. 'memo' → logprob: -3.927229404449463
    4. '#' → logprob: -5.552229404449463
    5. '
' → logprob: -6.677229404449463
    6. 'dp' → logprob: -8.552229881286621
    7. 'import' → logprob: -8.552229881286621
    8. '4' → logprob: -9.302229881286621
    9. 'possible' → logprob: -10.427229881286621
    10. 'MOD' → logprob: -10.802229881286621

Token 502: ' ' (ID: 220)
  Prédit: '16'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '16' → logprob: -0.4623214900493622
    2. '15' → logprob: -1.7123215198516846
    3. '4' → logprob: -1.9623215198516846
    4. '1' → logprob: -3.5873215198516846
    5. ' ' → logprob: -4.7123212814331055
    6. '(' → logprob: -5.8373212814331055
    7. '{' → logprob: -5.9623212814331055
    8. '8' → logprob: -6.7123212814331055
    9. '24' → logprob: -6.7123212814331055
    10. '2' → logprob: -7.0873212814331055

Token 503: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.35897645354270935
    2. '16' → logprob: -2.608976364135742
    3. '1' → logprob: -2.733976364135742
    4. '4' → logprob: -2.858976364135742
    5. '(' → logprob: -3.108976364135742
    6. '{' → logprob: -3.608976364135742
    7. 'set' → logprob: -5.108976364135742
    8. '2' → logprob: -5.108976364135742
    9. 'fro' → logprob: -5.483976364135742
    10. '8' → logprob: -5.858976364135742

Token 504: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06855200231075287
    2. '}' → logprob: -2.818552017211914
    3. ' )' → logprob: -5.568552017211914
    4. '})' → logprob: -6.818552017211914
    5. ' }' → logprob: -7.193552017211914
    6. ')
' → logprob: -8.318552017211914
    7. '')' → logprob: -8.818552017211914
    8. '):' → logprob: -9.443552017211914
    9. '0' → logprob: -10.443552017211914
    10. ').' → logprob: -10.568552017211914

Token 505: ' bit' (ID: 3546)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.36834049224853516
    2. 'binary' → logprob: -2.118340492248535
    3. 'bit' → logprob: -2.368340492248535
    4. ' b' → logprob: -3.493340492248535
    5. 'bits' → logprob: -3.868340492248535
    6. 'mask' → logprob: -4.493340492248535
    7. 'bin' → logprob: -4.868340492248535
    8. 'base' → logprob: -5.493340492248535
    9. ' ' → logprob: -5.618340492248535
    10. '#' → logprob: -6.118340492248535

Token 506: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -1.1930679082870483
    2. ')' → logprob: -1.5680679082870483
    3. '111' → logprob: -1.6930679082870483
    4. '1' → logprob: -2.443068027496338
    5. '^' → logprob: -2.943068027496338
    6. 'set' → logprob: -3.068068027496338
    7. '_' → logprob: -3.193068027496338
    8. '15' → logprob: -3.568068027496338
    9. 'f' → logprob: -4.693068027496338
    10. 'b' → logprob: -5.568068027496338

Token 507: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012055358849465847
    2. ' )' → logprob: -4.762055397033691
    3. '):' → logprob: -6.387055397033691
    4. '}' → logprob: -7.012055397033691
    5. ',' → logprob: -9.262055397033691
    6. ')
' → logprob: -9.262055397033691
    7. '#' → logprob: -9.512055397033691
    8. '):
' → logprob: -9.762055397033691
    9. 'def' → logprob: -9.762055397033691
    10. '>' → logprob: -9.887055397033691

Token 508: '0' (ID: 15)
  Prédit: '111'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '111' → logprob: -0.5862732529640198
    2. ')' → logprob: -0.8362732529640198
    3. '+' → logprob: -5.836273193359375
    4. '15' → logprob: -5.961273193359375
    5. ')
' → logprob: -7.211273193359375
    6. ' )' → logprob: -7.586273193359375
    7. 'b' → logprob: -7.961273193359375
    8. '1' → logprob: -7.961273193359375
    9. '')' → logprob: -8.086273193359375
    10. '}' → logprob: -8.211273193359375

Token 509: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0061539351008832455
    2. '111' → logprob: -5.1311540603637695
    3. ')' → logprob: -8.50615406036377
    4. '15' → logprob: -11.75615406036377
    5. 'x' → logprob: -12.63115406036377
    6. '
' → logprob: -13.00615406036377
    7. ' )' → logprob: -13.13115406036377
    8. '^' → logprob: -14.00615406036377
    9. ')
' → logprob: -14.00615406036377
    10. '   ' → logprob: -14.13115406036377

Token 510: '111' (ID: 8780)
  Prédit: '111'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '111' → logprob: -5.438573680294212e-06
    2. '11' → logprob: -12.750005722045898
    3. '1' → logprob: -13.000005722045898
    4. ''' → logprob: -16.7500057220459
    5. ' ' → logprob: -17.6250057220459
    6. '011' → logprob: -18.3750057220459
    7. '_' → logprob: -18.6250057220459
    8. '   ' → logprob: -18.6250057220459
    9. '####' → logprob: -19.1250057220459
    10. '"' → logprob: -19.2500057220459

Token 511: '1' (ID: 16)
  Prédit: '111'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '111' → logprob: -0.20568372309207916
    2. '1' → logprob: -1.830683708190918
    3. '11' → logprob: -4.080683708190918
    4. ')' → logprob: -4.830683708190918
    5. '```' → logprob: -8.080683708190918
    6. '
' → logprob: -8.580683708190918
    7. '_' → logprob: -8.955683708190918
    8. ')
' → logprob: -11.205683708190918
    9. '``' → logprob: -11.830683708190918
    10. ''''' → logprob: -11.955683708190918

Token 512: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013530643656849861
    2. ')
' → logprob: -4.763530731201172
    3. '):' → logprob: -6.763530731201172
    4. ' )' → logprob: -6.888530731201172
    5. '')' → logprob: -7.388530731201172
    6. 'def' → logprob: -7.513530731201172
    7. ')
' → logprob: -8.013530731201172
    8. '):
' → logprob: -8.138530731201172
    9. '4' → logprob: -8.763530731201172
    10. ')

' → logprob: -8.888530731201172

Token 513: ' au' (ID: 2791)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.010130012407898903
    2. 'from' → logprob: -5.260129928588867
    3. '#' → logprob: -5.885129928588867
    4. 'memo' → logprob: -7.135129928588867
    5. '
' → logprob: -7.635129928588867
    6. 'MASK' → logprob: -8.260129928588867
    7. 'mask' → logprob: -9.010129928588867
    8. 'MOD' → logprob: -9.510129928588867
    9. ')' → logprob: -9.760129928588867
    10. 'import' → logprob: -9.885129928588867

Token 514: ' noe' (ID: 49921)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.3899900913238525
    2. 'def' → logprob: -1.3899900913238525
    3. ')' → logprob: -2.6399900913238525
    4. 'final' → logprob: -2.7649900913238525
    5. ' node' → logprob: -2.8899900913238525
    6. ' return' → logprob: -3.1399900913238525
    7. '#' → logprob: -3.2649900913238525
    8. '4' → logprob: -3.7649900913238525
    9. 'node' → logprob: -3.8899900913238525
    10. '15' → logprob: -3.8899900913238525

Token 515: 'ud' (ID: 527)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44785526394844055
    2. 'e' → logprob: -1.5728552341461182
    3. 'd' → logprob: -3.197855234146118
    4. 'de' → logprob: -3.447855234146118
    5. '('' → logprob: -3.822855234146118
    6. 'u' → logprob: -4.072855472564697
    7. '_' → logprob: -4.322855472564697
    8. 'ud' → logprob: -4.572855472564697
    9. '')' → logprob: -5.072855472564697
    10. ''' → logprob: -5.822855472564697

Token 516: ' rac' (ID: 12334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06948636472225189
    2. 'memo' → logprob: -3.194486379623413
    3. 'from' → logprob: -4.194486141204834
    4. '#' → logprob: -4.694486141204834
    5. 'import' → logprob: -7.069486141204834
    6. '
' → logprob: -8.069486618041992
    7. 'mask' → logprob: -8.444486618041992
    8. 'MASK' → logprob: -8.944486618041992
    9. 'mem' → logprob: -9.444486618041992
    10. 'dp' → logprob: -9.694486618041992

Token 517: 'ine' (ID: 514)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0039191762916743755
    2. '#' → logprob: -5.6289191246032715
    3. 'memo' → logprob: -8.50391960144043
    4. '
' → logprob: -10.37891960144043
    5. 'from' → logprob: -10.87891960144043
    6. 'mem' → logprob: -11.12891960144043
    7. 'import' → logprob: -11.75391960144043
    8. ']' → logprob: -12.37891960144043
    9. 'mask' → logprob: -12.87891960144043
    10. ')' → logprob: -12.87891960144043

Token 518: '.

' (ID: 364)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0125663997605443
    2. 'from' → logprob: -5.137566566467285
    3. 'memo' → logprob: -5.262566566467285
    4. '#' → logprob: -7.637566566467285
    5. 'import' → logprob: -8.262566566467285
    6. 'mask' → logprob: -8.512566566467285
    7. 'MASK' → logprob: -8.887566566467285
    8. '
' → logprob: -9.387566566467285
    9. 'dp' → logprob: -10.012566566467285
    10. 'MOD' → logprob: -10.137566566467285

Token 519: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0001766040368238464
    2. 'from' → logprob: -9.250176429748535
    3. 'memo' → logprob: -9.500176429748535
    4. 'mask' → logprob: -13.000176429748535
    5. 'import' → logprob: -13.125176429748535
    6. '#' → logprob: -15.000176429748535
    7. 'dp' → logprob: -15.125176429748535
    8. ' def' → logprob: -15.875176429748535
    9. 'MASK' → logprob: -15.875176429748535
    10. '4' → logprob: -16.12517738342285

Token 520: ' Les' (ID: 7029)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0037068466190248728
    2. 'from' → logprob: -5.628706932067871
    3. '#' → logprob: -9.878706932067871
    4. 'memo' → logprob: -10.878706932067871
    5. 'dp' → logprob: -11.378706932067871
    6. 'MOD' → logprob: -11.753706932067871
    7. 'import' → logprob: -11.878706932067871
    8. 'MASK' → logprob: -12.378706932067871
    9. 'mask' → logprob: -12.753706932067871
    10. 'class' → logprob: -14.628706932067871

Token 521: ' ensembles' (ID: 144172)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5730561017990112
    2. '#' → logprob: -2.073056221008301
    3. 'MASK' → logprob: -2.323056221008301
    4. 'from' → logprob: -2.698056221008301
    5. 'FULL' → logprob: -3.448056221008301
    6. 'A' → logprob: -3.573056221008301
    7. 'ALL' → logprob: -4.198056221008301
    8. 'sub' → logprob: -4.323056221008301
    9. 'full' → logprob: -4.448056221008301
    10. 'SUB' → logprob: -4.698056221008301

Token 522: ' d' (ID: 272)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5360115170478821
    2. 'sets' → logprob: -1.4110114574432373
    3. 'SETS' → logprob: -3.2860114574432373
    4. '=' → logprob: -3.4110114574432373
    5. 'FULL' → logprob: -4.161011695861816
    6. '_sets' → logprob: -4.286011695861816
    7. '#' → logprob: -4.536011695861816
    8. 'full' → logprob: -4.911011695861816
    9. 'sub' → logprob: -4.911011695861816
    10. 'A' → logprob: -5.161011695861816

Token 523: ''' (ID: 6)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.061914086341858
    2. 'bits' → logprob: -1.186914086341858
    3. 'bit' → logprob: -2.9369139671325684
    4. 'A' → logprob: -3.0619139671325684
    5. ''' → logprob: -3.0619139671325684
    6. ' bits' → logprob: -3.3119139671325684
    7. ''A' → logprob: -3.4369139671325684
    8. ' A' → logprob: -3.9369139671325684
    9. '4' → logprob: -4.061913967132568
    10. '#' → logprob: -4.311913967132568

Token 524: 'élé' (ID: 15228)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.3438693881034851
    2. 'bit' → logprob: -2.84386944770813
    3. '4' → logprob: -3.09386944770813
    4. ''inter' → logprob: -3.59386944770813
    5. ''' → logprob: -3.96886944770813
    6. 'élé' → logprob: -4.343869209289551
    7. 'int' → logprob: -4.593869209289551
    8. '#' → logprob: -4.718869209289551
    9. 'def' → logprob: -4.843869209289551
    10. ''ent' → logprob: -4.843869209289551

Token 525: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.3420233428478241
    2. 't' → logprob: -2.5920233726501465
    3. 'ts' → logprob: -2.8420233726501465
    4. 'ents' → logprob: -2.8420233726501465
    5. 'ements' → logprob: -2.9670233726501465
    6. 'nts' → logprob: -3.8420233726501465
    7. 'éments' → logprob: -4.9670233726501465
    8. '#' → logprob: -5.4670233726501465
    9. 'lements' → logprob: -6.2170233726501465
    10. 'ets' → logprob: -6.4670233726501465

Token 526: ' a' (ID: 261)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -1.1052719354629517
    2. 'elements' → logprob: -1.4802719354629517
    3. 'sets' → logprob: -1.8552719354629517
    4. ' =' → logprob: -1.8552719354629517
    5. '=' → logprob: -4.230271816253662
    6. 's' → logprob: -4.355271816253662
    7. 'full' → logprob: -4.480271816253662
    8. '_elements' → logprob: -4.605271816253662
    9. ' sets' → logprob: -4.605271816253662
    10. '={' → logprob: -5.105271816253662

Token 527: ',b' (ID: 17568)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2592196762561798
    2. '=' → logprob: -1.6342196464538574
    3. 're' → logprob: -3.5092196464538574
    4. 's' → logprob: -7.384219646453857
    5. 'r' → logprob: -7.634219646453857
    6. '=re' → logprob: -7.884219646453857
    7. '_' → logprob: -8.759220123291016
    8. ' ' → logprob: -8.759220123291016
    9. 'elements' → logprob: -9.134220123291016
    10. 'b' → logprob: -9.259220123291016

Token 528: ',c' (ID: 22261)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5856238007545471
    2. ',b' → logprob: -1.3356237411499023
    3. 'b' → logprob: -2.5856237411499023
    4. ' =' → logprob: -2.8356237411499023
    5. ',' → logprob: -3.0856237411499023
    6. 's' → logprob: -8.460623741149902
    7. '=b' → logprob: -10.085623741149902
    8. '={' → logprob: -10.210623741149902
    9. ' ,' → logprob: -10.210623741149902
    10. '_b' → logprob: -10.460623741149902

Token 529: ',d' (ID: 26159)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14299343526363373
    2. '=' → logprob: -2.267993450164795
    3. ',' → logprob: -3.642993450164795
    4. ',b' → logprob: -6.517993450164795
    5. 's' → logprob: -6.767993450164795
    6. 'b' → logprob: -7.642993450164795
    7. ' ,' → logprob: -8.892992973327637
    8. '{' → logprob: -9.642992973327637
    9. ',s' → logprob: -10.142992973327637
    10. '={' → logprob: -10.267992973327637

Token 530: ' seront' (ID: 35024)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01315564475953579
    2. '=' → logprob: -5.888155460357666
    3. 's' → logprob: -6.013155460357666
    4. ' =
' → logprob: -6.263155460357666
    5. 'elements' → logprob: -6.513155460357666
    6. 'sets' → logprob: -6.513155460357666
    7. '_elements' → logprob: -7.263155460357666
    8. '_sets' → logprob: -8.513155937194824
    9. ' elements' → logprob: -8.513155937194824
    10. '_' → logprob: -8.638155937194824

Token 531: ' représent' (ID: 42664)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.025019528344273567
    2. 'repr' → logprob: -4.525019645690918
    3. ' représent' → logprob: -5.400019645690918
    4. 'cod' → logprob: -5.775019645690918
    5. '{' → logprob: -6.775019645690918
    6. '#' → logprob: -6.900019645690918
    7. 'represent' → logprob: -6.900019645690918
    8. 'represented' → logprob: -7.650019645690918
    9. 'const' → logprob: -7.900019645690918
    10. '[' → logprob: -8.275019645690918

Token 532: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.008971202187240124
    2. 'é' → logprob: -5.508971214294434
    3. 'ées' → logprob: -5.883971214294434
    4. 'es' → logprob: -6.383971214294434
    5. '=' → logprob: -9.008971214294434
    6. ' par' → logprob: -9.883971214294434
    7. 'e' → logprob: -10.133971214294434
    8. '_' → logprob: -10.133971214294434
    9. 'ée' → logprob: -10.383971214294434
    10. 'as' → logprob: -11.008971214294434

Token 533: ' sous' (ID: 14487)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.7504265308380127
    2. 'en' → logprob: -1.7504265308380127
    3. ' par' → logprob: -1.8754265308380127
    4. 's' → logprob: -2.3754265308380127
    5. ' en' → logprob: -2.5004265308380127
    6. ' sous' → logprob: -4.375426292419434
    7. 'comme' → logprob: -5.375426292419434
    8. ' ' → logprob: -6.375426292419434
    9. 'as' → logprob: -6.500426292419434
    10. ' comme' → logprob: -6.625426292419434

Token 534: ' forme' (ID: 27450)
  Prédit: 'forme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forme' → logprob: -0.050322018563747406
    2. ' forme' → logprob: -3.4253220558166504
    3. 'form' → logprob: -4.30032205581665
    4. 'la' → logprob: -6.05032205581665
    5. 'forma' → logprob: -7.80032205581665
    6. '#' → logprob: -9.050321578979492
    7. 'formes' → logprob: -10.550321578979492
    8. '4' → logprob: -10.800321578979492
    9. 'format' → logprob: -11.300321578979492
    10. ' la' → logprob: -11.550321578979492

Token 535: ' d' (ID: 272)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.2786238491535187
    2. 'd' → logprob: -2.1536238193511963
    3. ' de' → logprob: -2.1536238193511963
    4. ' d' → logprob: -5.403624057769775
    5. 'b' → logprob: -5.653624057769775
    6. 'bit' → logprob: -6.778624057769775
    7. 's' → logprob: -6.903624057769775
    8. '#' → logprob: -7.278624057769775
    9. ' bit' → logprob: -9.903623580932617
    10. ' of' → logprob: -11.028623580932617

Token 536: ''ent' (ID: 53422)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.18939414620399475
    2. 'b' → logprob: -2.689394235610962
    3. 'bits' → logprob: -2.939394235610962
    4. 'int' → logprob: -3.189394235610962
    5. 'ent' → logprob: -4.939393997192383
    6. ' bit' → logprob: -6.439393997192383
    7. 'inte' → logprob: -8.189393997192383
    8. '4' → logprob: -8.189393997192383
    9. 'ints' → logprob: -8.439393997192383
    10. 's' → logprob: -9.189393997192383

Token 537: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -1.2541842460632324
    2. 't' → logprob: -1.6291842460632324
    3. 'ier' → logprob: -1.7541842460632324
    4. 'et' → logprob: -2.5041842460632324
    5. 'êtes' → logprob: -2.5041842460632324
    6. 'bit' → logprob: -3.6291842460632324
    7. 'bits' → logprob: -3.8791842460632324
    8. 'int' → logprob: -4.004184246063232
    9. '```' → logprob: -4.004184246063232
    10. 'etes' → logprob: -4.504184246063232

Token 538: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.5067428350448608
    2. ' (' → logprob: -2.0067429542541504
    3. 'def' → logprob: -2.5067429542541504
    4. 'MASK' → logprob: -3.0067429542541504
    5. ',' → logprob: -3.1317429542541504
    6. ')' → logprob: -3.2567429542541504
    7. 's' → logprob: -3.2567429542541504
    8. 'mask' → logprob: -3.2567429542541504
    9. '{' → logprob: -3.3817429542541504
    10. '
' → logprob: -3.5067429542541504

Token 539: '4' (ID: 19)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 540: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.32874542474746704
    2. 'b' → logprob: -1.3287453651428223
    3. ' bits' → logprob: -4.828745365142822
    4. 'bit' → logprob: -5.203745365142822
    5. '_bits' → logprob: -7.453745365142822
    6. ' b' → logprob: -8.07874584197998
    7. '#' → logprob: -8.57874584197998
    8. '-bit' → logprob: -8.70374584197998
    9. 'BITS' → logprob: -9.45374584197998
    10. '   ' → logprob: -9.70374584197998

Token 541: ':
' (ID: 734)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.134687900543213
    2. '#' → logprob: -1.634687900543213
    3. 'A' → logprob: -2.259687900543213
    4. 'elements' → logprob: -2.884687900543213
    5. 'MASK' → logprob: -3.134687900543213
    6. '
' → logprob: -3.134687900543213
    7. 'import' → logprob: -3.384687900543213
    8. 'mask' → logprob: -3.634687900543213
    9. 'a' → logprob: -4.134687900543213
    10. 'class' → logprob: -4.134687900543213

Token 542: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9423882365226746
    2. 'sets' → logprob: -1.9423882961273193
    3. 'full' → logprob: -2.5673882961273193
    4. ' full' → logprob: -2.6923882961273193
    5. 'mask' → logprob: -3.1923882961273193
    6. ' sets' → logprob: -3.4423882961273193
    7. 'def' → logprob: -3.4423882961273193
    8. 'A' → logprob: -3.8173882961273193
    9. 'MASK' → logprob: -3.8173882961273193
    10. ' #' → logprob: -3.9423882961273193

Token 543: ' bit' (ID: 3546)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2624084949493408
    2. 'sets' → logprob: -1.6374084949493408
    3. 'SETS' → logprob: -1.8874084949493408
    4. 'A' → logprob: -2.762408494949341
    5. 'FULL' → logprob: -3.012408494949341
    6. 'ELEMENT' → logprob: -3.262408494949341
    7. 'SET' → logprob: -3.637408494949341
    8. 'elements' → logprob: -3.762408494949341
    9. 'ALL' → logprob: -4.137408256530762
    10. 'MASK' → logprob: -4.137408256530762

Token 544: ' ' (ID: 220)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9049932360649109
    2. 'mask' → logprob: -0.9049932360649109
    3. ' s' → logprob: -2.7799932956695557
    4. ' =' → logprob: -3.0299932956695557
    5. '_mask' → logprob: -3.0299932956695557
    6. '1' → logprob: -5.279993057250977
    7. '=' → logprob: -5.279993057250977
    8. ' mask' → logprob: -5.529993057250977
    9. ')' → logprob: -5.779993057250977
    10. '_masks' → logprob: -5.779993057250977

Token 545: '0' (ID: 15)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.28768301010131836
    2. 's' → logprob: -2.5376830101013184
    3. '0' → logprob: -3.2876830101013184
    4. ' =' → logprob: -3.5376830101013184
    5. '=' → logprob: -3.7876830101013184
    6. ' mask' → logprob: -3.9126830101013184
    7. '1' → logprob: -4.287683010101318
    8. ' ' → logprob: -4.662683010101318
    9. 'positions' → logprob: -5.287683010101318
    10. 'm' → logprob: -5.412683010101318

Token 546: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.44842177629470825
    2. '=' → logprob: -1.3234217166900635
    3. '1' → logprob: -3.6984217166900635
    4. 'b' → logprob: -3.8234217166900635
    5. '0' → logprob: -4.073421955108643
    6. ' ' → logprob: -4.698421955108643
    7. ',' → logprob: -5.573421955108643
    8. ':' → logprob: -5.698421955108643
    9. ' |=' → logprob: -5.948421955108643
    10. 'x' → logprob: -6.448421955108643

Token 547: ' a' (ID: 261)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6543003916740417
    2. '1' → logprob: -1.5293004512786865
    3. 'a' → logprob: -1.5293004512786865
    4. ' ' → logprob: -3.2793004512786865
    5. ' a' → logprob: -4.779300212860107
    6. 'A' → logprob: -7.904300212860107
    7. 'b' → logprob: -9.029300689697266
    8. '   ' → logprob: -9.529300689697266
    9. 'd' → logprob: -9.904300689697266
    10. ''a' → logprob: -10.341800689697266

Token 548: ',' (ID: 11)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.9063383936882019
    2. ',' → logprob: -1.7813384532928467
    3. ' ' → logprob: -1.7813384532928467
    4. '0' → logprob: -2.7813384532928467
    5. '#' → logprob: -2.9063384532928467
    6. '
' → logprob: -3.6563384532928467
    7. '1' → logprob: -3.9063384532928467
    8. ' ,' → logprob: -3.9063384532928467
    9. 'x' → logprob: -4.531338214874268
    10. ' #' → logprob: -4.781338214874268

Token 549: ' bit' (ID: 3546)
  Prédit: ' bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.34958183765411377
    2. 'bit' → logprob: -1.2245818376541138
    3. '1' → logprob: -7.099581718444824
    4. '#' → logprob: -8.974581718444824
    5. ' ' → logprob: -8.974581718444824
    6. ' #' → logprob: -10.724581718444824
    7. '0' → logprob: -11.224581718444824
    8. 'b' → logprob: -11.849581718444824
    9. '
' → logprob: -12.724581718444824
    10. ' ' → logprob: -12.849581718444824

Token 550: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.48524174094200134
    2. '1' → logprob: -1.3602417707443237
    3. ' =' → logprob: -2.485241651535034
    4. '=' → logprob: -3.360241651535034
    5. '0' → logprob: -4.985241889953613
    6. 'space' → logprob: -6.860241889953613
    7. ' space' → logprob: -8.610241889953613
    8. '[' → logprob: -8.610241889953613
    9. ' 
' → logprob: -8.860241889953613
    10. '    ' → logprob: -8.860241889953613

Token 551: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012984451837837696
    2. ' ' → logprob: -4.387984275817871
    3. '3' → logprob: -8.137984275817871
    4. '0' → logprob: -8.887984275817871
    5. '=' → logprob: -11.262984275817871
    6. ' ' → logprob: -11.887984275817871
    7. 'space' → logprob: -12.137984275817871
    8. '2' → logprob: -12.512984275817871
    9. ' =' → logprob: -13.137984275817871
    10. '```' → logprob: -13.137984275817871

Token 552: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07891512662172318
    2. '=' → logprob: -2.5789151191711426
    3. ' ' → logprob: -11.0789155960083
    4. ' ='' → logprob: -12.9539155960083
    5. 'b' → logprob: -13.3289155960083
    6. ' #' → logprob: -13.9539155960083
    7. 'a' → logprob: -14.0789155960083
    8. ',' → logprob: -14.5789155960083
    9. '0' → logprob: -15.0789155960083
    10. ')' → logprob: -15.3289155960083

Token 553: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.20143243670463562
    2. ' b' → logprob: -1.701432466506958
    3. '1' → logprob: -11.326432228088379
    4. ' ' → logprob: -11.951432228088379
    5. ' ' → logprob: -15.326432228088379
    6. '	b' → logprob: -15.951432228088379
    7. 'c' → logprob: -17.076433181762695
    8. 'a' → logprob: -17.076433181762695
    9. ' б' → logprob: -17.326433181762695
    10. 'bit' → logprob: -17.326433181762695

Token 554: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.107843279838562
    2. '0' → logprob: -1.357843279838562
    3. '2' → logprob: -1.732843279838562
    4. ' bit' → logprob: -1.732843279838562
    5. ',' → logprob: -3.9828433990478516
    6. 'bit' → logprob: -4.732843399047852
    7. '#' → logprob: -5.232843399047852
    8. '[' → logprob: -5.607843399047852
    9. ')' → logprob: -5.732843399047852
    10. '1' → logprob: -5.857843399047852

Token 555: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.2811877131462097
    2. ' bit' → logprob: -1.4061877727508545
    3. '2' → logprob: -10.656188011169434
    4. ' ' → logprob: -11.906188011169434
    5. '#' → logprob: -12.406188011169434
    6. '1' → logprob: -14.406188011169434
    7. 'bits' → logprob: -14.531188011169434
    8. ' #' → logprob: -14.906188011169434
    9. '0' → logprob: -15.031188011169434
    10. '   ' → logprob: -15.156188011169434

Token 556: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3484603464603424
    2. ' ' → logprob: -1.22346031665802
    3. '1' → logprob: -11.72346019744873
    4. '0' → logprob: -13.34846019744873
    5. '=' → logprob: -13.59846019744873
    6. 'space' → logprob: -13.84846019744873
    7. '3' → logprob: -14.34846019744873
    8. ''' → logprob: -14.34846019744873
    9. ' =' → logprob: -14.59846019744873
    10. '[' → logprob: -14.97346019744873

Token 557: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0017381247598677874
    2. ' ' → logprob: -6.37673807144165
    3. '1' → logprob: -10.501738548278809
    4. '3' → logprob: -11.751738548278809
    5. '0' → logprob: -14.751738548278809
    6. '   ' → logprob: -16.751737594604492
    7. 'space' → logprob: -16.876737594604492
    8. 'c' → logprob: -17.001737594604492
    9. '  ' → logprob: -17.251737594604492
    10. '=' → logprob: -17.626737594604492

Token 558: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029751762747764587
    2. '=' → logprob: -3.529751777648926
    3. ' ' → logprob: -14.029751777648926
    4. ' ='' → logprob: -16.52975082397461
    5. ''' → logprob: -16.65475082397461
    6. '0' → logprob: -16.77975082397461
    7. '=True' → logprob: -16.77975082397461
    8. ',' → logprob: -17.15475082397461
    9. '`' → logprob: -17.40475082397461
    10. ' #' → logprob: -17.40475082397461

Token 559: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.16023722290992737
    2. ' c' → logprob: -1.910237193107605
    3. ' ' → logprob: -12.035237312316895
    4. '1' → logprob: -12.035237312316895
    5. '2' → logprob: -14.160237312316895
    6. '0' → logprob: -16.035236358642578
    7. '3' → logprob: -16.160236358642578
    8. '_c' → logprob: -16.160236358642578
    9. '	c' → logprob: -16.785236358642578
    10. '   ' → logprob: -17.535236358642578

Token 560: ',' (ID: 11)
  Prédit: ' bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.22068296372890472
    2. 'bit' → logprob: -2.3456828594207764
    3. ' ' → logprob: -2.5956828594207764
    4. '0' → logprob: -5.2206830978393555
    5. ',' → logprob: -5.3456830978393555
    6. '#' → logprob: -5.4706830978393555
    7. ' #' → logprob: -5.4706830978393555
    8. '2' → logprob: -5.7206830978393555
    9. '1' → logprob: -6.5956830978393555
    10. '```' → logprob: -6.8456830978393555

Token 561: ' bit' (ID: 3546)
  Prédit: ' bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.38687190413475037
    2. 'bit' → logprob: -1.1368719339370728
    3. '#' → logprob: -14.636872291564941
    4. 'pos' → logprob: -14.886872291564941
    5. ' pos' → logprob: -17.136871337890625
    6. '(bit' → logprob: -18.011871337890625
    7. '1' → logprob: -18.136871337890625
    8. ' ' → logprob: -18.386871337890625
    9. ' #' → logprob: -18.511871337890625
    10. '3' → logprob: -18.761871337890625

Token 562: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.06994988024234772
    2. ' ' → logprob: -2.6949498653411865
    3. '[' → logprob: -12.444950103759766
    4. '=' → logprob: -12.819950103759766
    5. ' =' → logprob: -13.319950103759766
    6. '1' → logprob: -13.444950103759766
    7. '0' → logprob: -13.694950103759766
    8. '   ' → logprob: -14.569950103759766
    9. ' ' → logprob: -14.944950103759766
    10. '  ' → logprob: -15.319950103759766

Token 563: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '[' → logprob: -18.875003814697266
    4. '۳' → logprob: -19.750003814697266
    5. '３' → logprob: -21.125003814697266
    6. '0' → logprob: -21.375003814697266
    7. '1' → logprob: -21.500003814697266
    8. '৩' → logprob: -21.625003814697266
    9. '³' → logprob: -21.750003814697266
    10. '=' → logprob: -21.875003814697266

Token 564: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048587825149297714
    2. '=' → logprob: -3.0485877990722656
    3. ' ' → logprob: -15.048587799072266
    4. '`' → logprob: -17.548587799072266
    5. ' ='' → logprob: -17.923587799072266
    6. '1' → logprob: -18.048587799072266
    7. '=True' → logprob: -18.048587799072266
    8. 'b' → logprob: -18.048587799072266
    9. '0' → logprob: -18.423587799072266
    10. '=s' → logprob: -18.423587799072266

Token 565: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.38778868317604065
    2. ' d' → logprob: -1.1377886533737183
    3. '1' → logprob: -7.012788772583008
    4. ' ' → logprob: -11.012788772583008
    5. '3' → logprob: -15.387788772583008
    6. '	d' → logprob: -16.762788772583008
    7. '_d' → logprob: -17.012788772583008
    8. '(d' → logprob: -17.137788772583008
    9. '   ' → logprob: -17.512788772583008
    10. '0' → logprob: -17.762788772583008

Token 566: '

' (ID: 279)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6929178237915039
    2. 'def' → logprob: -0.8179178237915039
    3. 'fe' → logprob: -4.567917823791504
    4. 'leaf' → logprob: -4.692917823791504
    5. 'from' → logprob: -4.942917823791504
    6. 'import' → logprob: -5.567917823791504
    7. 'allowed' → logprob: -5.567917823791504
    8. 'initial' → logprob: -5.692917823791504
    9. 'memo' → logprob: -5.942917823791504
    10. 'possible' → logprob: -6.192917823791504

Token 567: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.095749855041504
    2. '#' → logprob: -1.220749855041504
    3. 'leaf' → logprob: -2.095749855041504
    4. 'fe' → logprob: -2.845749855041504
    5. 'elements' → logprob: -3.470749855041504
    6. 'initial' → logprob: -3.595749855041504
    7. 'LE' → logprob: -3.720749855041504
    8. 'le' → logprob: -4.095749855041504
    9. 'A' → logprob: -4.595749855041504
    10. 'sets' → logprob: -4.845749855041504

Token 568: ' Tree' (ID: 14224)
  Prédit: 'Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solution' → logprob: -0.6406190991401672
    2. 'Tree' → logprob: -1.1406190395355225
    3. 'Node' → logprob: -2.7656190395355225
    4. 'Solver' → logprob: -3.7656190395355225
    5. ' Tree' → logprob: -3.8906190395355225
    6. 'Memo' → logprob: -4.390619277954102
    7. ' Solution' → logprob: -4.765619277954102
    8. 'Set' → logprob: -5.265619277954102
    9. 'DP' → logprob: -6.015619277954102
    10. 'Ways' → logprob: -6.265619277954102

Token 569: 'Node' (ID: 2701)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013095766305923462
    2. '(' → logprob: -4.763095855712891
    3. '():' → logprob: -6.138095855712891
    4. 'Node' → logprob: -6.638095855712891
    5. '{' → logprob: -8.26309585571289
    6. '):' → logprob: -8.51309585571289
    7. ':
' → logprob: -8.88809585571289
    8. '(Node' → logprob: -9.26309585571289
    9. ' :' → logprob: -9.51309585571289
    10. ' (' → logprob: -9.88809585571289

Token 570: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00014334988372866064
    2. ':
' → logprob: -9.250143051147461
    3. '(' → logprob: -10.250143051147461
    4. '():' → logprob: -12.250143051147461
    5. '(object' → logprob: -12.625143051147461
    6. ' :' → logprob: -13.000143051147461
    7. ':def' → logprob: -14.625143051147461
    8. '(:' → logprob: -15.375143051147461
    9. '(":' → logprob: -15.875143051147461
    10. ':

' → logprob: -15.875143051147461

Token 571: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16819719970226288
    2. ' def' → logprob: -1.9181971549987793
    3. ' pass' → logprob: -5.543197154998779
    4. 'def' → logprob: -5.793197154998779
    5. ':' → logprob: -7.793197154998779
    6. '	def' → logprob: -7.918197154998779
    7. ':def' → logprob: -9.168197631835938
    8. '	pass' → logprob: -10.168197631835938
    9. '    ' → logprob: -11.418197631835938
    10. '```' → logprob: -11.793197631835938

Token 572: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.029880767688155174
    2. 'def' (adapté à ' def') → logprob: -3.5298807621002197
    3. ' __' → logprob: -9.02988052368164
    4. '   ' → logprob: -12.02988052368164
    5. '__' → logprob: -12.65488052368164
    6. ' pass' → logprob: -13.65488052368164
    7. '	def' → logprob: -16.02988052368164
    8. 'pass' → logprob: -17.52988052368164
    9. ' None' → logprob: -18.15488052368164
    10. 'class' → logprob: -19.02988052368164

Token 573: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.008631349541246891
    2. '__' → logprob: -4.758631229400635
    3. '_init' → logprob: -12.008631706237793
    4. ' __' → logprob: -12.383631706237793
    5. ' init' → logprob: -12.758631706237793
    6. 'int' → logprob: -13.758631706237793
    7. '(init' → logprob: -14.133631706237793
    8. 'def' → logprob: -15.008631706237793
    9. '	init' → logprob: -15.133631706237793
    10. 'it' → logprob: -15.383631706237793

Token 574: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'inite' → logprob: -19.0
    3. ' init' → logprob: -19.25
    4. '(init' → logprob: -21.5
    5. 'initi' → logprob: -21.625
    6. 'in' → logprob: -21.625
    7. 'ini' → logprob: -21.75
    8. 'int' → logprob: -22.125
    9. '_init' → logprob: -22.25
    10. '	init' → logprob: -22.25

Token 575: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.018170664086937904
    2. '__' → logprob: -4.0181708335876465
    3. '(self' → logprob: -12.018170356750488
    4. '__('' → logprob: -12.143170356750488
    5. '__(
' → logprob: -12.143170356750488
    6. '__((' → logprob: -12.643170356750488
    7. '(' → logprob: -15.018170356750488
    8. '__("' → logprob: -15.643170356750488
    9. '___' → logprob: -15.768170356750488
    10. '_(' → logprob: -16.518171310424805

Token 576: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.60414821645827e-06
    2. ' self' → logprob: -12.875004768371582
    3. 'type' → logprob: -14.375004768371582
    4. ')' → logprob: -14.625004768371582
    5. ''' → logprob: -14.875004768371582
    6. ''s' → logprob: -15.250004768371582
    7. '):
' → logprob: -15.625004768371582
    8. '
' → logprob: -16.500003814697266
    9. '(self' → logprob: -16.625003814697266
    10. '	self' → logprob: -17.125003814697266

Token 577: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07735323160886765
    2. 'self' → logprob: -2.8273532390594482
    3. ' ,' → logprob: -4.327353000640869
    4. '__,' → logprob: -6.702353000640869
    5. ' self' → logprob: -8.327353477478027
    6. ',type' → logprob: -8.452353477478027
    7. ',node' → logprob: -8.952353477478027
    8. 'type' → logprob: -9.452353477478027
    9. ',self' → logprob: -10.452353477478027
    10. ',left' → logprob: -10.702353477478027

Token 578: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.9199097156524658
    2. 'type' → logprob: -1.1699097156524658
    3. 'typ' → logprob: -1.9199097156524658
    4. 'kind' → logprob: -2.419909715652466
    5. 'value' → logprob: -3.169909715652466
    6. 't' → logprob: -6.169909477233887
    7. 'val' → logprob: -6.169909477233887
    8. 'tag' → logprob: -6.169909477233887
    9. 'label' → logprob: -6.544909477233887
    10. 'ty' → logprob: -6.669909477233887

Token 579: '_type' (ID: 3804)
  Prédit: '_type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -0.051253631711006165
    2. 'type' → logprob: -3.0512535572052
    3. ',' → logprob: -6.051253795623779
    4. 'Type' → logprob: -8.676253318786621
    5. ' type' → logprob: -9.301253318786621
    6. ' ,' → logprob: -11.176253318786621
    7. '   ' → logprob: -11.551253318786621
    8. '):' → logprob: -12.051253318786621
    9. ',type' → logprob: -12.426253318786621
    10. 'ype' → logprob: -13.051253318786621

Token 580: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -4.191489642835222e-05
    2. ' ,' → logprob: -10.750041961669922
    3. ',node' → logprob: -10.875041961669922
    4. ',type' → logprob: -14.125041961669922
    5. '   ' → logprob: -15.625041961669922
    6. ',self' → logprob: -16.500041961669922
    7. ',n' → logprob: -16.500041961669922
    8. '=' → logprob: -16.625041961669922
    9. '=None' → logprob: -17.125041961669922
    10. 'self' → logprob: -17.250041961669922

Token 581: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028481123968958855
    2. ',' → logprob: -4.6534810066223145
    3. 'self' → logprob: -4.7784810066223145
    4. '   ' → logprob: -5.0284810066223145
    5. ':' → logprob: -6.9034810066223145
    6. ' self' → logprob: -7.0284810066223145
    7. '(' → logprob: -7.4034810066223145
    8. '(self' → logprob: -8.278481483459473
    9. ' (' → logprob: -8.653481483459473
    10. '    ' → logprob: -8.778481483459473

Token 582: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.28164976835250854
    2. ' self' → logprob: -1.5316498279571533
    3. '       ' → logprob: -3.5316498279571533
    4. '	self' → logprob: -11.156649589538574
    5. '   ' → logprob: -11.531649589538574
    6. '    ' → logprob: -14.656649589538574
    7. '        ' → logprob: -14.781649589538574
    8. '	' → logprob: -14.781649589538574
    9. ' ' → logprob: -15.031649589538574
    10. ' ' → logprob: -15.406649589538574

Token 583: '.type' (ID: 9166)
  Prédit: '.type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.type' → logprob: -0.5590717196464539
    2. '.' → logprob: -1.6840717792510986
    3. '.node' → logprob: -1.8090717792510986
    4. '_type' → logprob: -3.1840717792510986
    5. '._' → logprob: -3.5590717792510986
    6. 'type' → logprob: -5.4340715408325195
    7. ' .' → logprob: -6.3090715408325195
    8. 'Type' → logprob: -6.6840715408325195
    9. '=node' → logprob: -8.30907154083252
    10. '=' → logprob: -8.55907154083252

Token 584: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3895837068557739
    2. ' =' → logprob: -1.139583706855774
    3. ',' → logprob: -6.139583587646484
    4. '_' → logprob: -8.139583587646484
    5. '=None' → logprob: -8.764583587646484
    6. '_=' → logprob: -10.264583587646484
    7. '=node' → logprob: -10.639583587646484
    8. ' ,' → logprob: -11.639583587646484
    9. '   ' → logprob: -11.764583587646484
    10. ' ' → logprob: -12.139583587646484

Token 585: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.003181994194164872
    2. ' node' → logprob: -5.7531819343566895
    3. 'None' → logprob: -12.503182411193848
    4. ' None' → logprob: -14.753182411193848
    5. '	node' → logprob: -17.00318145751953
    6. 'type' → logprob: -18.50318145751953
    7. 'token' → logprob: -19.00318145751953
    8. '(node' → logprob: -19.00318145751953
    9. '[node' → logprob: -19.00318145751953
    10. 'Node' → logprob: -19.62818145751953

Token 586: '_type' (ID: 3804)
  Prédit: '_type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -0.0004858458414673805
    2. 'Type' → logprob: -8.50048542022705
    3. 'type' → logprob: -8.75048542022705
    4. ')' → logprob: -10.62548542022705
    5. '[' → logprob: -10.75048542022705
    6. '_token' → logprob: -10.87548542022705
    7. '._' → logprob: -11.25048542022705
    8. ')_' → logprob: -12.00048542022705
    9. '_' → logprob: -12.25048542022705
    10. '_t' → logprob: -12.37548542022705

Token 587: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30264437198638916
    2. '<|end|>' → logprob: -1.6776443719863892
    3. ',' → logprob: -3.4276442527770996
    4. ' ' → logprob: -3.6776442527770996
    5. '
' → logprob: -4.8026442527771
    6. '   ' → logprob: -6.0526442527771
    7. '	' → logprob: -6.8026442527771
    8. '        
' → logprob: -6.9276442527771
    9. '  ' → logprob: -7.6776442527771
    10. ':' → logprob: -7.6776442527771

Token 588: ' #' (ID: 1069)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05918718874454498
    2. '       ' → logprob: -3.434187173843384
    3. '<|end|>' → logprob: -4.684187412261963
    4. ':' → logprob: -5.059187412261963
    5. '
' → logprob: -5.684187412261963
    6. '=' → logprob: -6.684187412261963
    7. ',
' → logprob: -6.809187412261963
    8. ' ' → logprob: -7.184187412261963
    9. '   ' → logprob: -7.559187412261963
    10. 'def' → logprob: -7.934187412261963

Token 589: ' '' (ID: 461)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.2635161280632019
    2. ' None' → logprob: -1.7635161876678467
    3. ''' → logprob: -3.0135161876678467
    4. ' '' → logprob: -6.013515949249268
    5. 'node' → logprob: -6.138515949249268
    6. ' node' → logprob: -6.138515949249268
    7. ''type' → logprob: -6.513515949249268
    8. ''ar' → logprob: -7.388515949249268
    9. ''s' → logprob: -7.513515949249268
    10. ''import' → logprob: -8.638516426086426

Token 590: 'leaf' (ID: 50921)
  Prédit: 'leaf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'leaf' → logprob: -0.066314697265625
    2. 'internal' → logprob: -3.316314697265625
    3. 'node' → logprob: -3.691314697265625
    4. ''' → logprob: -7.191314697265625
    5. ' '' → logprob: -7.191314697265625
    6. ' leaf' → logprob: -7.941314697265625
    7. ' ')' → logprob: -8.316314697265625
    8. '')' → logprob: -8.441314697265625
    9. 'root' → logprob: -8.816314697265625
    10. 'type' → logprob: -9.191314697265625

Token 591: ''' (ID: 6)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.3294444680213928
    2. ',' → logprob: -1.454444408416748
    3. ''' → logprob: -3.079444408416748
    4. '','' → logprob: -8.204444885253906
    5. ','' → logprob: -8.329444885253906
    6. '_leaf' → logprob: -8.579444885253906
    7. 'leaf' → logprob: -9.079444885253906
    8. ' ,' → logprob: -9.579444885253906
    9. ' ',' → logprob: -9.829444885253906
    10. '')' → logprob: -10.204444885253906

Token 592: ' ou' (ID: 2031)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6667913198471069
    2. '       ' → logprob: -0.7917913198471069
    3. ' or' → logprob: -4.2917914390563965
    4. '<|end|>' → logprob: -4.4167914390563965
    5. '
' → logprob: -5.2917914390563965
    6. ' ,' → logprob: -7.2917914390563965
    7. 'self' → logprob: -7.5417914390563965
    8. ',
' → logprob: -8.166790962219238
    9. '   ' → logprob: -8.291790962219238
    10. ')' → logprob: -8.791790962219238

Token 593: ' '' (ID: 461)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.4356640577316284
    2. ''' → logprob: -1.5606640577316284
    3. ''value' → logprob: -2.935664176940918
    4. 'internal' → logprob: -3.935664176940918
    5. 'leaf' → logprob: -3.935664176940918
    6. ''int' → logprob: -4.310664176940918
    7. 'value' → logprob: -4.810664176940918
    8. 'None' → logprob: -5.060664176940918
    9. 'int' → logprob: -5.060664176940918
    10. 'node' → logprob: -5.310664176940918

Token 594: 'node' (ID: 7005)
  Prédit: 'node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.0023023895919322968
    2. ' node' → logprob: -6.127302169799805
    3. 'internal' → logprob: -9.752302169799805
    4. 'leaf' → logprob: -9.752302169799805
    5. ' internal' → logprob: -14.627302169799805
    6. ' leaf' → logprob: -15.752302169799805
    7. '	node' → logprob: -16.502302169799805
    8. ''' → logprob: -16.502302169799805
    9. 'nod' → logprob: -17.002302169799805
    10. ' '' → logprob: -17.127302169799805

Token 595: ''
' (ID: 2207)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8445909023284912
    2. ')' → logprob: -1.2195909023284912
    3. '')' → logprob: -1.8445909023284912
    4. ''' → logprob: -2.594590902328491
    5. '<|end|>' → logprob: -3.469590902328491
    6. '',' → logprob: -4.71959114074707
    7. '   ' → logprob: -7.09459114074707
    8. '<|end|>' → logprob: -7.71959114074707
    9. '       ' → logprob: -8.34459114074707
    10. ' ,' → logprob: -9.09459114074707

Token 596: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021621601190418005
    2. 'self' → logprob: -6.877161979675293
    3. ',' → logprob: -7.502161979675293
    4. '   ' → logprob: -7.752161979675293
    5. 'def' → logprob: -9.877161979675293
    6. ' self' → logprob: -10.127161979675293
    7. 'if' → logprob: -11.377161979675293
    8. '           ' → logprob: -11.502161979675293
    9. ' if' → logprob: -12.127161979675293
    10. '```' → logprob: -12.127161979675293

Token 597: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.012304665520787239
    2. '       ' → logprob: -4.637304782867432
    3. 'if' (adapté à ' if') → logprob: -6.012304782867432
    4. ' self' → logprob: -9.887304306030273
    5. '   ' → logprob: -10.637304306030273
    6. 'def' → logprob: -11.387304306030273
    7. ' if' → logprob: -12.262304306030273
    8. 'pass' → logprob: -13.262304306030273
    9. 'value' → logprob: -13.512304306030273
    10. '	self' → logprob: -14.012304306030273

Token 598: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.16985896229743958
    2. 'self' → logprob: -1.9198589324951172
    3. ' node' → logprob: -4.794858932495117
    4. ' self' → logprob: -6.669858932495117
    5. 'not' → logprob: -11.169858932495117
    6. ' hasattr' → logprob: -11.419858932495117
    7. '   ' → logprob: -11.794858932495117
    8. '	node' → logprob: -12.294858932495117
    9. 'type' → logprob: -13.169858932495117
    10. '  ' → logprob: -13.669858932495117

Token 599: '_type' (ID: 3804)
  Prédit: '_type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -0.13268809020519257
    2. '.type' → logprob: -2.132688045501709
    3. 'type' → logprob: -5.632688045501709
    4. '       ' → logprob: -7.132688045501709
    5. '.' → logprob: -7.382688045501709
    6. '   ' → logprob: -8.257688522338867
    7. '.has' → logprob: -9.507688522338867
    8. 'Type' → logprob: -9.632688522338867
    9. '._' → logprob: -9.882688522338867
    10. '.next' → logprob: -10.507688522338867

Token 600: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.38761934638023376
    2. ' ==' → logprob: -1.1376193761825562
    3. '=='' → logprob: -7.387619495391846
    4. '=' → logprob: -9.762619018554688
    5. '=="' → logprob: -11.012619018554688
    6. '[' → logprob: -11.137619018554688
    7. '	' → logprob: -11.637619018554688
    8. '==
' → logprob: -12.012619018554688
    9. ' =='' → logprob: -12.762619018554688
    10. ')==' → logprob: -12.887619018554688

Token 601: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0007206532754935324
    2. '"' → logprob: -7.250720500946045
    3. ' '' → logprob: -11.625720977783203
    4. '
' → logprob: -14.000720977783203
    5. '   ' → logprob: -16.125720977783203
    6. '('' → logprob: -16.125720977783203
    7. ''s' → logprob: -16.250720977783203
    8. '`' → logprob: -16.250720977783203
    9. ''a' → logprob: -16.500720977783203
    10. ''user' → logprob: -16.500720977783203

Token 602: 'leaf' (ID: 50921)
  Prédit: 'leaf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'leaf' → logprob: -0.004116750322282314
    2. 'node' → logprob: -5.504116535186768
    3. ' leaf' → logprob: -10.754117012023926
    4. '')' → logprob: -11.754117012023926
    5. 'root' → logprob: -13.754117012023926
    6. 'internal' → logprob: -14.004117012023926
    7. 'tree' → logprob: -14.004117012023926
    8. ''' → logprob: -14.129117012023926
    9. 'le' → logprob: -14.379117012023926
    10. '```' → logprob: -14.504117012023926

Token 603: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.19072739779949188
    2. '':
' → logprob: -1.8157273530960083
    3. ''' → logprob: -5.190727233886719
    4. ',' → logprob: -6.315727233886719
    5. ':' → logprob: -7.065727233886719
    6. '':
' → logprob: -7.190727233886719
    7. '',' → logprob: -7.565727233886719
    8. '):
' → logprob: -7.940727233886719
    9. ''):
' → logprob: -8.190727233886719
    10. '':

' → logprob: -8.565727233886719

Token 604: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01756105199456215
    2. 'self' → logprob: -4.517560958862305
    3. '       ' → logprob: -5.267560958862305
    4. ' self' → logprob: -7.017560958862305
    5. '	       ' → logprob: -8.142560958862305
    6. '   ' → logprob: -9.892560958862305
    7. '		' → logprob: -10.517560958862305
    8. '	   ' → logprob: -10.767560958862305
    9. '	self' → logprob: -11.017560958862305
    10. '		   ' → logprob: -11.642560958862305

Token 605: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.003057449823245406
    2. '           ' → logprob: -6.253057479858398
    3. '       ' → logprob: -7.128057479858398
    4. ' self' → logprob: -8.128057479858398
    5. 'pass' → logprob: -10.753057479858398
    6. '   ' → logprob: -12.378057479858398
    7. '	self' → logprob: -13.128057479858398
    8. '		' → logprob: -14.003057479858398
    9. '               ' → logprob: -14.503057479858398
    10. '(self' → logprob: -14.878057479858398

Token 606: '.idx' (ID: 119077)
  Prédit: '.value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.014861512929201126
    2. '.val' → logprob: -4.389861583709717
    3. 'value' → logprob: -7.014861583709717
    4. '.values' → logprob: -7.389861583709717
    5. '.le' → logprob: -7.889861583709717
    6. '.data' → logprob: -8.139861106872559
    7. '.set' → logprob: -10.014861106872559
    8. '.num' → logprob: -10.389861106872559
    9. '.' → logprob: -10.389861106872559
    10. '.id' → logprob: -10.889861106872559

Token 607: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.694780707359314
    2. ' =' → logprob: -0.694780707359314
    3. '=None' → logprob: -6.5697808265686035
    4. ' ' → logprob: -8.694780349731445
    5. '  ' → logprob: -11.569780349731445
    6. '<|end|>' → logprob: -11.569780349731445
    7. ',' → logprob: -11.694780349731445
    8. '   ' → logprob: -11.694780349731445
    9. 's' → logprob: -12.194780349731445
    10. '_' → logprob: -12.569780349731445

Token 608: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0010924735106527805
    2. '0' → logprob: -7.001092433929443
    3. '-' → logprob: -8.876092910766602
    4. ' None' → logprob: -10.126092910766602
    5. '(None' → logprob: -14.751092910766602
    6. '   ' → logprob: -15.126092910766602
    7. 'int' → logprob: -15.376092910766602
    8. 'none' → logprob: -15.751092910766602
    9. '_None' → logprob: -15.876092910766602
    10. '=None' → logprob: -17.1260929107666

Token 609: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 610: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 611: ' index' (ID: 3472)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0486927404999733
    2. ' None' → logprob: -3.0486927032470703
    3. '0' → logprob: -9.42369270324707
    4. '
' → logprob: -11.67369270324707
    5. '(None' → logprob: -12.29869270324707
    6. '<|end|>' → logprob: -12.92369270324707
    7. '           ' → logprob: -13.17369270324707
    8. '=None' → logprob: -13.54869270324707
    9. '   ' → logprob: -13.54869270324707
    10. 'int' → logprob: -13.92369270324707

Token 612: ' du' (ID: 1462)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 613: ' subset' (ID: 58845)
  Prédit: 'leaf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'leaf' → logprob: -0.6704275608062744
    2. 'fe' → logprob: -1.6704275608062744
    3. 'élé' → logprob: -2.0454275608062744
    4. 'token' → logprob: -2.4204275608062744
    5. 'next' → logprob: -3.7954275608062744
    6. 'node' → logprob: -4.170427322387695
    7. 'bit' → logprob: -4.795427322387695
    8. 'ensemble' → logprob: -4.920427322387695
    9. 'car' → logprob: -5.420427322387695
    10. 'set' → logprob: -5.795427322387695

Token 614: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7003272175788879
    2. '<|end|>' → logprob: -0.7003272175788879
    3. '   ' → logprob: -6.450327396392822
    4. '<|end|>' → logprob: -6.575327396392822
    5. ',' → logprob: -7.075327396392822
    6. '
' → logprob: -7.325327396392822
    7. '           ' → logprob: -7.325327396392822
    8. ' ' → logprob: -7.575327396392822
    9. ' or' → logprob: -8.200326919555664
    10. ';' → logprob: -8.325326919555664

Token 615: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.144143208861351
    2. '<|end|>' → logprob: -2.0191431045532227
    3. ' else' → logprob: -7.644143104553223
    4. '<|end|>' → logprob: -7.769143104553223
    5. 'else' → logprob: -9.269143104553223
    6. '   ' → logprob: -9.519143104553223
    7. ' ' → logprob: -9.519143104553223
    8. '           ' → logprob: -9.644143104553223
    9. '
' → logprob: -9.769143104553223
    10. ')' → logprob: -10.269143104553223

Token 616: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6046940088272095
    2. 'else' (adapté à ' else') → logprob: -0.9796940088272095
    3. 'elif' → logprob: -3.10469388961792
    4. ' else' → logprob: -3.72969388961792
    5. 'self' → logprob: -5.22969388961792
    6. '<|end|>' → logprob: -6.22969388961792
    7. '   ' → logprob: -6.97969388961792
    8. ' elif' → logprob: -7.60469388961792
    9. ' self' → logprob: -8.479694366455078
    10. 'def' → logprob: -8.979694366455078

Token 617: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10626019537448883
    2. ':
' → logprob: -2.731260299682617
    3. '       ' → logprob: -3.356260299682617
    4. '           ' → logprob: -7.981260299682617
    5. '   ' → logprob: -8.356260299682617
    6. ',' → logprob: -8.856260299682617
    7. ' :' → logprob: -10.731260299682617
    8. '{' → logprob: -11.981260299682617
    9. 'self' → logprob: -11.981260299682617
    10. '	   ' → logprob: -12.106260299682617

Token 618: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23874248564243317
    2. 'self' → logprob: -1.988742470741272
    3. '           ' → logprob: -2.6137425899505615
    4. ' self' → logprob: -6.113742351531982
    5. '	self' → logprob: -11.11374282836914
    6. '   ' → logprob: -11.61374282836914
    7. '	       ' → logprob: -11.86374282836914
    8. '	   ' → logprob: -12.48874282836914
    9. '               ' → logprob: -13.23874282836914
    10. '         ' → logprob: -13.86374282836914

Token 619: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -1.4974866644479334e-05
    2. '       ' → logprob: -11.500015258789062
    3. ' self' → logprob: -12.375015258789062
    4. '           ' → logprob: -14.750015258789062
    5. 'pass' → logprob: -16.375015258789062
    6. '	self' → logprob: -17.500015258789062
    7. '   ' → logprob: -17.500015258789062
    8. '#' → logprob: -18.375015258789062
    9. 'def' → logprob: -18.500015258789062
    10. '(self' → logprob: -18.875015258789062

Token 620: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.00161067396402359
    2. '.children' → logprob: -6.75161075592041
    3. '.type' → logprob: -8.87661075592041
    4. '.le' → logprob: -9.00161075592041
    5. '.' → logprob: -9.25161075592041
    6. '.l' → logprob: -10.00161075592041
    7. ' .' → logprob: -11.50161075592041
    8. '.child' → logprob: -11.75161075592041
    9. '.idx' → logprob: -12.50161075592041
    10. '.has' → logprob: -13.00161075592041

Token 621: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10247445851564407
    2. ' =' → logprob: -2.3524744510650635
    3. '=None' → logprob: -6.227474689483643
    4. ',' → logprob: -8.227474212646484
    5. '<|end|>' → logprob: -12.102474212646484
    6. '   ' → logprob: -12.352474212646484
    7. ' ' → logprob: -12.727474212646484
    8. 'None' → logprob: -12.852474212646484
    9. ':' → logprob: -12.852474212646484
    10. ',None' → logprob: -13.477474212646484

Token 622: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -2.7729658540920354e-05
    2. ' None' → logprob: -10.500027656555176
    3. 'self' → logprob: -16.625028610229492
    4. '(None' → logprob: -18.875028610229492
    5. 'none' → logprob: -19.125028610229492
    6. '=None' → logprob: -19.875028610229492
    7. '_None' → logprob: -20.750028610229492
    8. '   ' → logprob: -20.750028610229492
    9. ',None' → logprob: -22.125028610229492
    10. '     ' → logprob: -22.250028610229492

Token 623: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24473971128463745
    2. '           ' → logprob: -2.3697397708892822
    3. '
' → logprob: -2.7447397708892822
    4. '<|end|>' → logprob: -3.2447397708892822
    5. '<|end|>' → logprob: -4.369739532470703
    6. ',' → logprob: -5.369739532470703
    7. '   ' → logprob: -6.744739532470703
    8. ' and' → logprob: -7.619739532470703
    9. '        
' → logprob: -8.619739532470703
    10. ',
' → logprob: -9.119739532470703

Token 624: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2950557470321655
    2. '           ' → logprob: -1.4200557470321655
    3. 'self' → logprob: -4.420055866241455
    4. ',' → logprob: -6.545055866241455
    5. ' self' → logprob: -8.670055389404297
    6. '   ' → logprob: -9.670055389404297
    7. ',self' → logprob: -10.920055389404297
    8. '
' → logprob: -11.170055389404297
    9. '```' → logprob: -11.420055389404297
    10. '               ' → logprob: -11.545055389404297

Token 625: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -6.2729995988775045e-06
    2. ' self' → logprob: -12.250006675720215
    3. '           ' → logprob: -13.500006675720215
    4. '       ' → logprob: -18.3750057220459
    5. '	self' → logprob: -20.6250057220459
    6. '   ' → logprob: -21.1250057220459
    7. '         ' → logprob: -21.2500057220459
    8. '(self' → logprob: -22.1250057220459
    9. '               ' → logprob: -22.1250057220459
    10. 's' → logprob: -22.2500057220459

Token 626: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.0015061709564179182
    2. 'right' → logprob: -6.501506328582764
    3. '.' → logprob: -12.501505851745605
    4. '	right' → logprob: -16.376506805419922
    5. ' .' → logprob: -17.251506805419922
    6. ' right' → logprob: -18.001506805419922
    7. '.left' → logprob: -18.251506805419922
    8. ',right' → logprob: -18.876506805419922
    9. '.Right' → logprob: -19.001506805419922
    10. '_right' → logprob: -19.626506805419922

Token 627: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1274832934141159
    2. ' =' → logprob: -2.127483367919922
    3. '=None' → logprob: -7.502483367919922
    4. 'None' → logprob: -13.752483367919922
    5. '<|end|>' → logprob: -13.752483367919922
    6. ' ' → logprob: -14.877483367919922
    7. ')' → logprob: -15.752483367919922
    8. '   ' → logprob: -15.877483367919922
    9. ' None' → logprob: -16.002483367919922
    10. '(None' → logprob: -16.252483367919922

Token 628: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -2.7610454708337784e-05
    2. ' None' → logprob: -10.500027656555176
    3. '(None' → logprob: -18.12502670288086
    4. '=None' → logprob: -18.87502670288086
    5. '_None' → logprob: -19.87502670288086
    6. 'none' → logprob: -20.00002670288086
    7. '   ' → logprob: -20.37502670288086
    8. ',None' → logprob: -20.87502670288086
    9. 'null' → logprob: -21.50002670288086
    10. '.None' → logprob: -22.25002670288086

Token 629: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 630: 'def' (ID: 1314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11423880606889725
    2. '<|end|>' → logprob: -2.739238739013672
    3. 'def' → logprob: -3.364238739013672
    4. ' ' → logprob: -5.989238739013672
    5. '       ' → logprob: -6.239238739013672
    6. '```' → logprob: -6.739238739013672
    7. ' def' → logprob: -7.114238739013672
    8. '    
' → logprob: -7.739238739013672
    9. 'class' → logprob: -7.864238739013672
    10. 'import' → logprob: -8.239238739013672

Token 631: ' build' (ID: 3024)
  Prédit: ' build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' build' → logprob: -0.07725425809621811
    2. 'build' → logprob: -2.952254295349121
    3. ' parse' → logprob: -3.952254295349121
    4. 'parse' → logprob: -6.577254295349121
    5. ' tree' → logprob: -7.577254295349121
    6. ' convert' → logprob: -7.702254295349121
    7. ' construct' → logprob: -8.952254295349121
    8. 'convert' → logprob: -9.202254295349121
    9. 'from' → logprob: -9.702254295349121
    10. 'construct' → logprob: -10.202254295349121

Token 632: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.00012475410767365247
    2. '_node' → logprob: -10.12512493133545
    3. '_t' → logprob: -10.75012493133545
    4. '_TREE' → logprob: -11.00012493133545
    5. '_T' → logprob: -11.25012493133545
    6. 'Tree' → logprob: -11.62512493133545
    7. '<Tree' → logprob: -12.50012493133545
    8. 'tree' → logprob: -12.87512493133545
    9. '(tree' → logprob: -12.87512493133545
    10. '_ast' → logprob: -13.00012493133545

Token 633: '(parsed' (ID: 96597)
  Prédit: '(parsed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parsed' → logprob: -0.8968692421913147
    2. '(tree' → logprob: -1.39686918258667
    3. '(s' → logprob: -1.77186918258667
    4. '(t' → logprob: -2.52186918258667
    5. '(node' → logprob: -3.27186918258667
    6. '(data' → logprob: -3.64686918258667
    7. '(ast' → logprob: -4.02186918258667
    8. '(parse' → logprob: -4.52186918258667
    9. '(ar' → logprob: -7.27186918258667
    10. '(par' → logprob: -8.271869659423828

Token 634: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.031102648004889488
    2. ')' → logprob: -3.6561026573181152
    3. ')_' → logprob: -6.531102657318115
    4. ',' → logprob: -6.656102657318115
    5. '_node' → logprob: -8.156102180480957
    6. 'tree' → logprob: -8.156102180480957
    7. '(s' → logprob: -8.156102180480957
    8. '_t' → logprob: -8.281102180480957
    9. 's' → logprob: -8.281102180480957
    10. '_s' → logprob: -9.031102180480957

Token 635: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03149580582976341
    2. '):' → logprob: -3.9064958095550537
    3. '(tree' → logprob: -5.531495571136475
    4. '(parsed' → logprob: -6.156495571136475
    5. '(node' → logprob: -6.406495571136475
    6. '   ' → logprob: -6.781495571136475
    7. '):
' → logprob: -7.031495571136475
    8. ',node' → logprob: -7.406495571136475
    9. ')' → logprob: -9.156496047973633
    10. 'parsed' → logprob: -9.406496047973633

Token 636: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00024512779782526195
    2. ' if' → logprob: -9.125245094299316
    3. 'if' → logprob: -9.250245094299316
    4. 'node' → logprob: -10.375245094299316
    5. ' node' → logprob: -11.875245094299316
    6. 'type' → logprob: -14.375245094299316
    7. '   ' → logprob: -14.500245094299316
    8. '	node' → logprob: -15.875245094299316
    9. ',node' → logprob: -16.000246047973633
    10. '	if' → logprob: -16.250246047973633

Token 637: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42138442397117615
    2. 'if' → logprob: -1.5463844537734985
    3. 'node' → logprob: -2.171384334564209
    4. ' if' → logprob: -4.296384334564209
    5. ' node' → logprob: -6.296384334564209
    6. 'type' → logprob: -7.421384334564209
    7. 'tn' → logprob: -8.046384811401367
    8. 't' → logprob: -8.421384811401367
    9. 'typ' → logprob: -9.421384811401367
    10. 'nod' → logprob: -10.546384811401367

Token 638: ' conversion' (ID: 22165)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.7054570317268372
    2. 'if' → logprob: -0.8304570317268372
    3. '   ' → logprob: -2.8304569721221924
    4. 'type' → logprob: -4.9554572105407715
    5. ' if' → logprob: -5.9554572105407715
    6. 'def' → logprob: -7.3304572105407715
    7. ' node' → logprob: -7.5804572105407715
    8. 't' → logprob: -9.080456733703613
    9. 'token' → logprob: -9.080456733703613
    10. '```' → logprob: -10.330456733703613

Token 639: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049573108553886414
    2. 'def' → logprob: -3.4245731830596924
    3. 'type' → logprob: -5.549572944641113
    4. 'node' → logprob: -5.549572944641113
    5. '(node' → logprob: -5.674572944641113
    6. ' if' → logprob: -6.799572944641113
    7. ',' → logprob: -7.299572944641113
    8. 'tree' → logprob: -7.674572944641113
    9. 'if' → logprob: -7.924572944641113
    10. ' node' → logprob: -8.049572944641113

Token 640: ' tuple' (ID: 31311)
  Prédit: 'parsed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parsed' → logprob: -0.0054730442352592945
    2. ' parsed' → logprob: -5.2554731369018555
    3. '(parsed' → logprob: -8.755473136901855
    4. 'token' → logprob: -9.880473136901855
    5. 'par' → logprob: -11.880473136901855
    6. 'def' → logprob: -12.755473136901855
    7. 'None' → logprob: -12.880473136901855
    8. 'Tree' → logprob: -13.255473136901855
    9. 'Parsed' → logprob: -13.255473136901855
    10. 'parse' → logprob: -13.380473136901855

Token 641: ' en' (ID: 469)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.606108546257019
    2. '   ' → logprob: -1.731108546257019
    3. ',' → logprob: -2.7311086654663086
    4. ' if' → logprob: -3.1061086654663086
    5. '=' → logprob: -3.2311086654663086
    6. 'def' → logprob: -3.6061086654663086
    7. 's' → logprob: -4.231108665466309
    8. 'if' → logprob: -4.231108665466309
    9. 'parsed' → logprob: -4.231108665466309
    10. 't' → logprob: -4.856108665466309

Token 642: ' objet' (ID: 13839)
  Prédit: 'Tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.2521815598011017
    2. ' Tree' → logprob: -1.5021815299987793
    3. 'None' → logprob: -9.127182006835938
    4. '	Tree' → logprob: -9.627182006835938
    5. ' None' → logprob: -10.752182006835938
    6. '<Tree' → logprob: -11.127182006835938
    7. '_tree' → logprob: -11.502182006835938
    8. '(Tree' → logprob: -11.627182006835938
    9. ' tree' → logprob: -12.127182006835938
    10. '.Tree' → logprob: -12.127182006835938

Token 643: ' Tree' (ID: 14224)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010961038991808891
    2. ' if' → logprob: -4.760961055755615
    3. 'def' → logprob: -7.135961055755615
    4. ' node' → logprob: -7.135961055755615
    5. 'node' → logprob: -8.260960578918457
    6. '(node' → logprob: -8.885960578918457
    7. 'if' → logprob: -9.010960578918457
    8. '
' → logprob: -10.385960578918457
    9. ',' → logprob: -10.635960578918457
    10. ' root' → logprob: -10.760960578918457

Token 644: 'Node' (ID: 2701)
  Prédit: 'Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.0005825805710628629
    2. 'N' → logprob: -7.500582695007324
    3. '   ' → logprob: -10.625582695007324
    4. 'node' → logprob: -13.625582695007324
    5. '(
' → logprob: -14.125582695007324
    6. '_Node' → logprob: -14.125582695007324
    7. '_node' → logprob: -14.625582695007324
    8. 'Nodes' → logprob: -14.625582695007324
    9. ' Node' → logprob: -15.375582695007324
    10. '_' → logprob: -15.375582695007324

Token 645: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01535936538130045
    2. '(node' → logprob: -5.515359401702881
    3. 'def' → logprob: -5.515359401702881
    4. '
' → logprob: -6.265359401702881
    5. ':' → logprob: -6.890359401702881
    6. 'node' → logprob: -7.140359401702881
    7. 'if' → logprob: -7.390359401702881
    8. '    
' → logprob: -7.515359401702881
    9. ' if' → logprob: -8.015358924865723
    10. ',' → logprob: -8.015358924865723

Token 646: ' plus' (ID: 2932)
  Prédit: ' faciliter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' faciliter' → logprob: -0.09832531213760376
    2. 'fac' → logprob: -2.848325252532959
    3. ' facil' → logprob: -5.473325252532959
    4. 'None' → logprob: -5.723325252532959
    5. 'simpl' → logprob: -5.848325252532959
    6. ' None' → logprob: -5.973325252532959
    7. 'une' → logprob: -6.098325252532959
    8. ' permettre' → logprob: -6.223325252532959
    9. 'la' → logprob: -6.473325252532959
    10. 'l' → logprob: -6.848325252532959

Token 647: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.31083565950393677
    2. ' de' → logprob: -1.810835599899292
    3. ' facile' → logprob: -3.185835599899292
    4. ' pratique' → logprob: -3.685835599899292
    5. 'fac' → logprob: -4.310835838317871
    6. 'struct' → logprob: -5.935835838317871
    7. ' explic' → logprob: -6.185835838317871
    8. ' claire' → logprob: -6.185835838317871
    9. ' clair' → logprob: -6.310835838317871
    10. 'def' → logprob: -6.310835838317871

Token 648: ' commod' (ID: 40847)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.1755342185497284
    2. 'fac' → logprob: -2.550534248352051
    3. 'flex' → logprob: -2.925534248352051
    4. 'con' → logprob: -4.550534248352051
    5. 'commod' → logprob: -5.425534248352051
    6. ' cl' → logprob: -5.675534248352051
    7. 'clar' → logprob: -5.800534248352051
    8. 'sou' → logprob: -5.800534248352051
    9. 'lis' → logprob: -6.425534248352051
    10. 'comod' → logprob: -7.050534248352051

Token 649: 'ité' (ID: 3761)
  Prédit: 'ité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ité' → logprob: -0.0005526751047000289
    2. 'ite' → logprob: -8.000553131103516
    3. 'it' → logprob: -8.625553131103516
    4. 'ités' → logprob: -10.750553131103516
    5. 'itié' → logprob: -11.875553131103516
    6. 'ié' → logprob: -11.875553131103516
    7. 'i' → logprob: -13.750553131103516
    8. 'é' → logprob: -14.875553131103516
    9. 'ity' → logprob: -15.250553131103516
    10. ' it' → logprob: -16.250553131103516

Token 650: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0049468474462628365
    2. ',' → logprob: -6.504946708679199
    3. ' if' → logprob: -6.879946708679199
    4. 'def' → logprob: -7.254946708679199
    5. '(node' → logprob: -7.504946708679199
    6. 'if' → logprob: -8.0049467086792
    7. '
' → logprob: -8.1299467086792
    8. '```' → logprob: -9.2549467086792
    9. '    
' → logprob: -9.3799467086792
    10. 'node' → logprob: -9.6299467086792

Token 651: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001246348983841017
    2. ' if' → logprob: -10.37512493133545
    3. 'if' → logprob: -10.50012493133545
    4. '    
' → logprob: -10.62512493133545
    5. ',' → logprob: -11.25012493133545
    6. 'def' → logprob: -12.00012493133545
    7. 'token' → logprob: -12.37512493133545
    8. '       ' → logprob: -12.50012493133545
    9. ')' → logprob: -12.62512493133545
    10. '   ' → logprob: -13.50012493133545

Token 652: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1833093911409378
    2. 'node' → logprob: -2.183309316635132
    3. '   ' → logprob: -3.058309316635132
    4. 'type' → logprob: -5.433309555053711
    5. 'root' → logprob: -6.058309555053711
    6. ' if' → logprob: -7.558309555053711
    7. 'token' → logprob: -8.058309555053711
    8. 't' → logprob: -9.183309555053711
    9. 'tn' → logprob: -9.933309555053711
    10. 'tp' → logprob: -10.558309555053711

Token 653: ' parsed' (ID: 31111)
  Prédit: 'parsed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parsed' → logprob: -0.018158959224820137
    2. ' parsed' → logprob: -4.018158912658691
    3. ' isinstance' → logprob: -12.643158912658691
    4. ' not' → logprob: -12.893158912658691
    5. 'not' → logprob: -12.893158912658691
    6. 'type' → logprob: -14.893158912658691
    7. '(parsed' → logprob: -15.018158912658691
    8. 'par' → logprob: -16.518159866333008
    9. ' type' → logprob: -17.018159866333008
    10. 'Parsed' → logprob: -18.393159866333008

Token 654: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -4.246537173457909e-06
    2. '_t' → logprob: -12.625003814697266
    3. '_' → logprob: -14.625003814697266
    4. '_node' → logprob: -16.125003814697266
    5. '_TREE' → logprob: -16.250003814697266
    6. 'tree' → logprob: -16.375003814697266
    7. ')_' → logprob: -17.125003814697266
    8. '_ar' → logprob: -17.125003814697266
    9. ' _' → logprob: -18.625003814697266
    10. '_type' → logprob: -18.625003814697266

Token 655: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6985045671463013
    2. ' is' → logprob: -0.6985045671463013
    3. 'is' → logprob: -5.323504447937012
    4. '==' → logprob: -8.323504447937012
    5. ' ==' → logprob: -8.448504447937012
    6. 'None' → logprob: -11.948504447937012
    7. '=None' → logprob: -13.948504447937012
    8. ':' → logprob: -14.698504447937012
    9. '	is' → logprob: -14.698504447937012
    10. '===' → logprob: -14.948504447937012

Token 656: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.778209353797138e-05
    2. ' ' → logprob: -9.625067710876465
    3. '1' → logprob: -14.000067710876465
    4. 'type' → logprob: -15.125067710876465
    5. '[' → logprob: -15.750067710876465
    6. '   ' → logprob: -16.00006866455078
    7. '#' → logprob: -16.62506866455078
    8. '2' → logprob: -18.12506866455078
    9. '<|end|>' → logprob: -18.18756866455078
    10. 'Type' → logprob: -18.25006866455078

Token 657: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.060103803873062134
    2. '==' → logprob: -3.3101038932800293
    3. ' ==' → logprob: -4.310103893280029
    4. ']==' → logprob: -5.310103893280029
    5. ')' → logprob: -5.810103893280029
    6. ']=='' → logprob: -8.685103416442871
    7. '=='' → logprob: -9.060103416442871
    8. '']' → logprob: -9.810103416442871
    9. ' ]' → logprob: -9.935103416442871
    10. '=' → logprob: -10.560103416442871

Token 658: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.08916476368904114
    2. ' ==' → logprob: -2.4641647338867188
    3. '=='' → logprob: -8.464164733886719
    4. '=' → logprob: -12.714164733886719
    5. '=="' → logprob: -13.089164733886719
    6. ']==' → logprob: -13.339164733886719
    7. ''' → logprob: -13.464164733886719
    8. '==
' → logprob: -13.464164733886719
    9. ')' → logprob: -13.589164733886719
    10. '===' → logprob: -13.839164733886719

Token 659: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -4.334533878136426e-05
    2. '"' → logprob: -10.250042915344238
    3. ' '' → logprob: -12.250042915344238
    4. 'leaf' → logprob: -12.875042915344238
    5. '`' → logprob: -16.125043869018555
    6. '
' → logprob: -16.375043869018555
    7. '   ' → logprob: -16.375043869018555
    8. ' ' → logprob: -16.500043869018555
    9. ''s' → logprob: -16.875043869018555
    10. '('' → logprob: -16.875043869018555

Token 660: 'leaf' (ID: 50921)
  Prédit: 'leaf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'leaf' → logprob: -6.718606891809031e-05
    2. 'node' → logprob: -9.625066757202148
    3. ' leaf' → logprob: -15.125066757202148
    4. 'root' → logprob: -15.500066757202148
    5. 'le' → logprob: -16.00006675720215
    6. 'tree' → logprob: -16.25006675720215
    7. ''' → logprob: -16.25006675720215
    8. 'lea' → logprob: -16.25006675720215
    9. '')' → logprob: -17.25006675720215
    10. '_leaf' → logprob: -17.50006675720215

Token 661: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.39124470949172974
    2. '':
' → logprob: -1.141244649887085
    3. ''' → logprob: -5.641244888305664
    4. '':
' → logprob: -7.641244888305664
    5. ''):
' → logprob: -9.016244888305664
    6. ':' → logprob: -9.141244888305664
    7. '',' → logprob: -10.516244888305664
    8. ':
' → logprob: -10.891244888305664
    9. '':

' → logprob: -10.891244888305664
    10. '):
' → logprob: -11.266244888305664

Token 662: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3997606039047241
    2. '       ' → logprob: -1.3997606039047241
    3. ' node' → logprob: -2.6497607231140137
    4. 'node' → logprob: -4.899760723114014
    5. ' leaf' → logprob: -5.649760723114014
    6. ',' → logprob: -8.024760246276855
    7. ',node' → logprob: -8.274760246276855
    8. 'leaf' → logprob: -8.649760246276855
    9. '	node' → logprob: -9.024760246276855
    10. '   ' → logprob: -9.649760246276855

Token 663: ' leaf' (ID: 25882)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.012174775823950768
    2. ' node' → logprob: -4.512174606323242
    3. 'tn' → logprob: -7.262174606323242
    4. 'leaf' (adapté à ' leaf') → logprob: -8.762174606323242
    5. '   ' → logprob: -8.887174606323242
    6. 'n' → logprob: -9.137174606323242
    7. ' leaf' → logprob: -11.012174606323242
    8. 'root' → logprob: -13.137174606323242
    9. 't' → logprob: -13.262174606323242
    10. ' tn' → logprob: -14.012174606323242

Token 664: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.336916983127594
    2. '_node' → logprob: -1.8369169235229492
    3. '=' → logprob: -2.086916923522949
    4. 'node' → logprob: -6.086916923522949
    5. 'Node' → logprob: -8.33691692352295
    6. '=node' → logprob: -10.21191692352295
    7. 'n' → logprob: -10.33691692352295
    8. '_' → logprob: -10.46191692352295
    9. '_leaf' → logprob: -11.83691692352295
    10. '_=' → logprob: -12.21191692352295

Token 665: ' Tree' (ID: 14224)
  Prédit: 'Tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -1.676292231422849e-05
    2. ' Tree' → logprob: -11.000017166137695
    3. '	Tree' → logprob: -20.000017166137695
    4. 'tree' → logprob: -22.750017166137695
    5. '<Tree' → logprob: -23.250017166137695
    6. '(Tree' → logprob: -24.875017166137695
    7. '.Tree' → logprob: -26.250017166137695
    8. 'Trees' → logprob: -26.625017166137695
    9. 'Leaf' → logprob: -27.000017166137695
    10. ' ' → logprob: -27.000017166137695

Token 666: 'Node' (ID: 2701)
  Prédit: 'Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -3.128163257315464e-07
    2. 'node' → logprob: -16.125
    3. 'Leaf' → logprob: -16.25
    4. 'leaf' → logprob: -17.5
    5. '('' → logprob: -20.0
    6. ' Node' → logprob: -20.25
    7. '_node' → logprob: -20.75
    8. 'Token' → logprob: -21.125
    9. '(' → logprob: -21.25
    10. '	Node' → logprob: -21.375

Token 667: '('' (ID: 706)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.003196727717295289
    2. '('' → logprob: -5.753196716308594
    3. ' '' → logprob: -11.128196716308594
    4. '"' → logprob: -12.628196716308594
    5. '   ' → logprob: -15.753196716308594
    6. '`' → logprob: -16.003196716308594
    7. ''import' → logprob: -16.003196716308594
    8. ''s' → logprob: -16.128196716308594
    9. '(' → logprob: -16.503196716308594
    10. ' ('' → logprob: -16.878196716308594

Token 668: 'leaf' (ID: 50921)
  Prédit: 'leaf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'leaf' → logprob: 0.0
    2. 'le' → logprob: -20.625
    3. '_leaf' → logprob: -21.125
    4. ' leaf' → logprob: -22.25
    5. 'lea' → logprob: -22.875
    6. ''' → logprob: -23.875
    7. 'lease' → logprob: -24.125
    8. 'Leaf' → logprob: -24.625
    9. 'lead' → logprob: -24.625
    10. 'leave' → logprob: -25.0

Token 669: '')
' (ID: 2515)
  Prédit: '')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.601630449295044
    2. '')' → logprob: -0.851630449295044
    3. ')' → logprob: -4.226630210876465
    4. ')
' → logprob: -5.226630210876465
    5. ',' → logprob: -5.601630210876465
    6. '',' → logprob: -7.101630210876465
    7. '')
' → logprob: -7.351630210876465
    8. ''' → logprob: -9.101630210876465
    9. ')')
' → logprob: -10.601630210876465
    10. ' ')
' → logprob: -10.976630210876465

Token 670: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2550641894340515
    2. 'leaf' → logprob: -1.8800642490386963
    3. ' leaf' → logprob: -2.6300642490386963
    4. '_leaf' → logprob: -8.755064010620117
    5. '   ' → logprob: -9.005064010620117
    6. '           ' → logprob: -9.630064010620117
    7. 'le' → logprob: -10.380064010620117
    8. ',' → logprob: -10.630064010620117
    9. '<|end|>' → logprob: -10.880064010620117
    10. '	' → logprob: -11.255064010620117

Token 671: ' leaf' (ID: 25882)
  Prédit: 'leaf'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'leaf' (adapté à ' leaf') → logprob: -3.128163257315464e-07
    2. ' leaf' → logprob: -15.5
    3. '       ' → logprob: -16.5
    4. '   ' → logprob: -18.375
    5. 'le' → logprob: -18.75
    6. '           ' → logprob: -19.875
    7. 'leave' → logprob: -21.125
    8. 'lea' → logprob: -21.375
    9. '_leaf' → logprob: -23.125
    10. '```' → logprob: -23.125

Token 672: '.idx' (ID: 119077)
  Prédit: '.idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.idx' → logprob: -7.3458322731312364e-06
    2. '.index' → logprob: -12.000007629394531
    3. '.' → logprob: -14.625007629394531
    4. '.id' → logprob: -14.875007629394531
    5. ' .' → logprob: -15.375007629394531
    6. '.val' → logprob: -17.87500762939453
    7. '.pkl' → logprob: -18.12500762939453
    8. '.type' → logprob: -18.37500762939453
    9. '.indices' → logprob: -18.37500762939453
    10. '	idx' → logprob: -18.75000762939453

Token 673: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02975071594119072
    2. ' =' → logprob: -3.5297508239746094
    3. ' ' → logprob: -16.27975082397461
    4. '.=' → logprob: -17.27975082397461
    5. ')' → logprob: -17.77975082397461
    6. '=int' → logprob: -17.77975082397461
    7. ',' → logprob: -17.90475082397461
    8. ')=' → logprob: -18.27975082397461
    9. '    ' → logprob: -18.40475082397461
    10. '＝' → logprob: -18.40475082397461

Token 674: ' parsed' (ID: 31111)
  Prédit: 'parsed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parsed' → logprob: -0.00018125296628568321
    2. '{' → logprob: -10.000181198120117
    3. 'int' → logprob: -10.250181198120117
    4. ' parsed' → logprob: -10.625181198120117
    5. '(parsed' → logprob: -10.750181198120117
    6. '1' → logprob: -10.750181198120117
    7. '(' → logprob: -11.125181198120117
    8. '4' → logprob: -11.750181198120117
    9. '0' → logprob: -12.375181198120117
    10. '{'' → logprob: -13.500181198120117

Token 675: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -9.253090865968261e-06
    2. 'tree' → logprob: -11.750009536743164
    3. '_TREE' → logprob: -14.125009536743164
    4. 'ed' → logprob: -15.375009536743164
    5. '<Tree' → logprob: -16.375009536743164
    6. ' tree' → logprob: -16.750009536743164
    7. '[' → logprob: -17.000009536743164
    8. '_leaf' → logprob: -17.000009536743164
    9. '	tree' → logprob: -17.500009536743164
    10. 't' → logprob: -17.500009536743164

Token 676: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0016217415686696768
    2. '1' → logprob: -7.001621723175049
    3. '(' → logprob: -7.376621723175049
    4. ' [' → logprob: -10.626622200012207
    5. ' (' → logprob: -10.626622200012207
    6. ',' → logprob: -11.001622200012207
    7. ' ' → logprob: -12.751622200012207
    8. '```' → logprob: -13.001622200012207
    9. '][' → logprob: -13.126622200012207
    10. '#' → logprob: -13.251622200012207

Token 677: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '   ' → logprob: -17.5
    4. '[' → logprob: -17.5
    5. '-' → logprob: -17.75
    6. '2' → logprob: -18.1875
    7. '4' → logprob: -19.0625
    8. '' → logprob: -19.1875
    9. '3' → logprob: -19.25
    10. '```' → logprob: -19.25

Token 678: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0035494628828018904
    2. '<|end|>' → logprob: -5.878549575805664
    3. ')
' → logprob: -7.753549575805664
    4. '<|end|>' → logprob: -9.003549575805664
    5. ')return' → logprob: -9.253549575805664
    6. ' )' → logprob: -9.503549575805664
    7. ']' → logprob: -12.253549575805664
    8. '}' → logprob: -12.503549575805664
    9. '   ' → logprob: -12.878549575805664
    10. '       ' → logprob: -13.003549575805664

Token 679: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017815368482843041
    2. 'return' → logprob: -9.375178337097168
    3. '   ' → logprob: -9.625178337097168
    4. '	' → logprob: -11.250178337097168
    5. ' return' → logprob: -11.625178337097168
    6. '           ' → logprob: -13.125178337097168
    7. '	return' → logprob: -13.875178337097168
    8. '	   ' → logprob: -14.375178337097168
    9. '      ' → logprob: -14.875178337097168
    10. ' ' → logprob: -15.500178337097168

Token 680: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08285048604011536
    2. '       ' → logprob: -2.582850456237793
    3. ' return' → logprob: -5.582850456237793
    4. '   ' → logprob: -8.707850456237793
    5. '	return' → logprob: -10.707850456237793
    6. '           ' → logprob: -14.082850456237793
    7. '	' → logprob: -14.207850456237793
    8. ':return' → logprob: -14.332850456237793
    9. ' ' → logprob: -15.582850456237793
    10. '     ' → logprob: -15.707850456237793

Token 681: ' leaf' (ID: 25882)
  Prédit: 'leaf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'leaf' → logprob: -0.07889077812433243
    2. ' leaf' → logprob: -2.578890800476074
    3. 'le' → logprob: -13.828890800476074
    4. '_leaf' → logprob: -17.703889846801758
    5. 'Leaf' → logprob: -17.828889846801758
    6. 'lea' → logprob: -17.953889846801758
    7. ' ' → logprob: -17.953889846801758
    8. ' ' → logprob: -19.078889846801758
    9. 'leave' → logprob: -19.203889846801758
    10. '   ' → logprob: -19.203889846801758

Token 682: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.56102097814437e-05
    2. '    
' → logprob: -11.000045776367188
    3. '
' → logprob: -11.375045776367188
    4. 'elif' → logprob: -12.000045776367188
    5. '<|end|>' → logprob: -12.750045776367188
    6. ')' → logprob: -13.250045776367188
    7. '   ' → logprob: -13.500045776367188
    8. 'return' → logprob: -13.750045776367188
    9. 'if' → logprob: -13.875045776367188
    10. '.' → logprob: -14.000045776367188

Token 683: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027762281242758036
    2. 'elif' → logprob: -6.752776145935059
    3. '<|end|>' → logprob: -7.127776145935059
    4. ')' → logprob: -8.252776145935059
    5. 'if' → logprob: -8.877776145935059
    6. 'return' → logprob: -9.127776145935059
    7. '    
' → logprob: -9.252776145935059
    8. '
' → logprob: -10.377776145935059
    9. '<|end|>' → logprob: -10.627776145935059
    10. '.' → logprob: -10.877776145935059

Token 684: ' else' (ID: 1203)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.14982740581035614
    2. 'else' (adapté à ' else') → logprob: -2.899827480316162
    3. 'node' → logprob: -2.899827480316162
    4. 'elif' → logprob: -3.649827480316162
    5. '
' → logprob: -6.649827480316162
    6. '   ' → logprob: -7.399827480316162
    7. ' if' → logprob: -7.399827480316162
    8. 'root' → logprob: -8.149827003479004
    9. 'tree' → logprob: -9.774827003479004
    10. ' node' → logprob: -9.899827003479004

Token 685: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7099238038063049
    2. ':' → logprob: -0.9599238038063049
    3. ',' → logprob: -3.70992374420166
    4. ':
' → logprob: -3.70992374420166
    5. '_node' → logprob: -3.70992374420166
    6. '       ' → logprob: -4.08492374420166
    7. 'node' → logprob: -4.20992374420166
    8. ' node' → logprob: -5.08492374420166
    9. ',node' → logprob: -5.33492374420166
    10. '    ' → logprob: -6.45992374420166

Token 686: '       ' (ID: 309)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.3833302855491638
    2. ' node' → logprob: -1.3833303451538086
    3. '   ' → logprob: -2.7583303451538086
    4. '       ' → logprob: -5.508330345153809
    5. '	node' → logprob: -9.133330345153809
    6. '   ' → logprob: -10.758330345153809
    7. ',node' → logprob: -11.008330345153809
    8. 'root' → logprob: -11.508330345153809
    9. '_node' → logprob: -11.633330345153809
    10. 'tree' → logprob: -11.758330345153809

Token 687: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' (adapté à ' node') → logprob: -0.03810380399227142
    2. ' node' → logprob: -3.2881038188934326
    3. 'root' → logprob: -9.788104057312012
    4. 'n' → logprob: -12.913104057312012
    5. 'internal' → logprob: -13.413104057312012
    6. ' internal' → logprob: -14.538104057312012
    7. ' root' → logprob: -14.538104057312012
    8. '   ' → logprob: -15.163104057312012
    9. 'nod' → logprob: -15.288104057312012
    10. '	node' → logprob: -15.538104057312012

Token 688: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0619683600962162
    2. '=' → logprob: -2.8119683265686035
    3. ' ' → logprob: -15.186968803405762
    4. ',' → logprob: -15.811968803405762
    5. '	' → logprob: -16.561967849731445
    6. '_node' → logprob: -16.811967849731445
    7. '_' → logprob: -16.936967849731445
    8. 'node' → logprob: -17.186967849731445
    9. '=node' → logprob: -17.561967849731445
    10. '   ' → logprob: -17.686967849731445

Token 689: ' Tree' (ID: 14224)
  Prédit: 'Tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.001170225441455841
    2. ' Tree' → logprob: -6.7511701583862305
    3. '	Tree' → logprob: -17.751171112060547
    4. '(Tree' → logprob: -20.626171112060547
    5. '<Tree' → logprob: -20.876171112060547
    6. '   ' → logprob: -21.126171112060547
    7. ' ' → logprob: -21.876171112060547
    8. '.Tree' → logprob: -23.001171112060547
    9. 'tree' → logprob: -23.751171112060547
    10. 'Node' → logprob: -23.751171112060547

Token 690: 'Node' (ID: 2701)
  Prédit: 'Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: 0.0
    2. 'node' → logprob: -17.75
    3. 'Tree' → logprob: -17.75
    4. '_Node' → logprob: -18.25
    5. '('' → logprob: -18.75
    6. '_node' → logprob: -19.25
    7. 'N' → logprob: -19.625
    8. '(Node' → logprob: -20.125
    9. ' Node' → logprob: -20.375
    10. 'Nodes' → logprob: -20.5

Token 691: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0019625357817858458
    2. ''' → logprob: -6.251962661743164
    3. ''n' → logprob: -10.501962661743164
    4. '(' → logprob: -12.126962661743164
    5. ''s' → logprob: -14.501962661743164
    6. '(
' → logprob: -15.751962661743164
    7. ' ('' → logprob: -16.626962661743164
    8. ' '' → logprob: -16.626962661743164
    9. ''t' → logprob: -16.751962661743164
    10. '(node' → logprob: -17.501962661743164

Token 692: 'node' (ID: 7005)
  Prédit: 'node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: 0.0
    2. ' node' → logprob: -18.25
    3. ''' → logprob: -20.0
    4. 'nod' → logprob: -21.125
    5. 'n' → logprob: -22.25
    6. '	node' → logprob: -22.25
    7. ''n' → logprob: -23.625
    8. 'Node' → logprob: -23.75
    9. '(node' → logprob: -23.75
    10. '[node' → logprob: -24.125

Token 693: '')
' (ID: 2515)
  Prédit: '')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.6524789929389954
    2. '')' → logprob: -0.9024789929389954
    3. ')' → logprob: -3.5274789333343506
    4. '',' → logprob: -3.7774789333343506
    5. ',' → logprob: -4.65247917175293
    6. ')
' → logprob: -4.77747917175293
    7. '(parsed' → logprob: -6.15247917175293
    8. '')
' → logprob: -7.77747917175293
    9. ''' → logprob: -8.02747917175293
    10. 'parsed' → logprob: -8.15247917175293

Token 694: '       ' (ID: 309)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.03436527028679848
    2. '   ' → logprob: -3.534365177154541
    3. '       ' → logprob: -5.909365177154541
    4. ' node' → logprob: -6.284365177154541
    5. ',node' → logprob: -11.4093656539917
    6. '	node' → logprob: -11.6593656539917
    7. '[node' → logprob: -13.4093656539917
    8. '(node' → logprob: -13.7843656539917
    9. ' ' → logprob: -14.1593656539917
    10. '  ' → logprob: -14.9093656539917

Token 695: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' (adapté à ' node') → logprob: -2.4153549020411447e-05
    2. '       ' → logprob: -10.75002384185791
    3. ' node' → logprob: -13.00002384185791
    4. '   ' → logprob: -14.75002384185791
    5. 'left' → logprob: -19.500024795532227
    6. '	node' → logprob: -19.500024795532227
    7. '(node' → logprob: -20.750024795532227
    8. ',node' → logprob: -21.750024795532227
    9. ' ' → logprob: -22.125024795532227
    10. '           ' → logprob: -22.125024795532227

Token 696: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -1.1472419600977446e-06
    2. ' .' → logprob: -14.625000953674316
    3. 'left' → logprob: -15.000000953674316
    4. '.Left' → logprob: -16.250001907348633
    5. '.' → logprob: -16.500001907348633
    6. '.right' → logprob: -17.000001907348633
    7. '.le' → logprob: -17.500001907348633
    8. '.type' → logprob: -17.750001907348633
    9. ').' → logprob: -18.250001907348633
    10. ',left' → logprob: -19.750001907348633

Token 697: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759396553039551
    2. '=' → logprob: -0.8259396553039551
    3. ',' → logprob: -16.200939178466797
    4. ' ' → logprob: -16.575939178466797
    5. ')' → logprob: -17.325939178466797
    6. '.=' → logprob: -18.075939178466797
    7. '=parse' → logprob: -18.200939178466797
    8. '   ' → logprob: -18.200939178466797
    9. '＝' → logprob: -18.450939178466797
    10. 'build' → logprob: -18.575939178466797

Token 698: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -1.1472419600977446e-06
    2. ' build' → logprob: -13.750000953674316
    3. '(build' → logprob: -22.875001907348633
    4. '	build' → logprob: -22.875001907348633
    5. '   ' → logprob: -23.375001907348633
    6. '.build' → logprob: -25.125001907348633
    7. 'b' → logprob: -25.625001907348633
    8. 'bind' → logprob: -25.750001907348633
    9. 'building' → logprob: -25.750001907348633
    10. 'built' → logprob: -26.000001907348633

Token 699: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -5.848420551046729e-05
    2. 'tree' → logprob: -10.5000581741333
    3. '(parsed' → logprob: -10.5000581741333
    4. 'parsed' → logprob: -12.7500581741333
    5. 'Tree' → logprob: -15.8750581741333
    6. '_t' → logprob: -16.375059127807617
    7. '_TREE' → logprob: -16.500059127807617
    8. '_par' → logprob: -17.000059127807617
    9. '(par' → logprob: -17.750059127807617
    10. '(tree' → logprob: -18.250059127807617

Token 700: '(parsed' (ID: 96597)
  Prédit: '(parsed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parsed' → logprob: -4.274932143744081e-05
    2. '_tree' → logprob: -10.625042915344238
    3. 'parsed' → logprob: -11.125042915344238
    4. '(' → logprob: -13.500042915344238
    5. '(parse' → logprob: -14.000042915344238
    6. 'Tree' → logprob: -15.125042915344238
    7. 'tree' → logprob: -15.125042915344238
    8. '((' → logprob: -15.375042915344238
    9. '(par' → logprob: -15.625042915344238
    10. '(tree' → logprob: -15.625042915344238

Token 701: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -5.44312788406387e-05
    2. 'tree' → logprob: -9.875054359436035
    3. '_t' → logprob: -14.125054359436035
    4. '_ar' → logprob: -15.000054359436035
    5. 'ree' → logprob: -15.500054359436035
    6. 'ar' → logprob: -15.500054359436035
    7. 'e' → logprob: -15.500054359436035
    8. '_node' → logprob: -15.625054359436035
    9. '_TREE' → logprob: -15.625054359436035
    10. 't' → logprob: -15.875054359436035

Token 702: '[' (ID: 58)
  Prédit: '(parsed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parsed' → logprob: -0.287881463766098
    2. '[' → logprob: -1.4128814935684204
    3. '(' → logprob: -5.162881374359131
    4. 'parsed' → logprob: -7.412881374359131
    5. ',' → logprob: -8.912881851196289
    6. '(par' → logprob: -9.287881851196289
    7. '(s' → logprob: -9.912881851196289
    8. ' parsed' → logprob: -10.287881851196289
    9. ' (' → logprob: -10.787881851196289
    10. '([' → logprob: -11.412881851196289

Token 703: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. '2' → logprob: -14.125000953674316
    3. '[' → logprob: -14.750000953674316
    4. ' ' → logprob: -15.625000953674316
    5. '(' → logprob: -18.000001907348633
    6. '   ' → logprob: -18.250001907348633
    7. ',' → logprob: -18.875001907348633
    8. ')' → logprob: -19.250001907348633
    9. '```' → logprob: -19.250001907348633
    10. '#' → logprob: -20.500001907348633

Token 704: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23592634499073029
    2. '])' → logprob: -1.6109263896942139
    3. ')
' → logprob: -4.860926151275635
    4. '[' → logprob: -7.110926151275635
    5. '])
' → logprob: -7.235926151275635
    6. '),' → logprob: -7.360926151275635
    7. ']' → logprob: -8.235926628112793
    8. ')

' → logprob: -8.985926628112793
    9. ',' → logprob: -10.360926628112793
    10. '],' → logprob: -10.860926628112793

Token 705: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008128436165861785
    2. 'node' → logprob: -7.375813007354736
    3. ' node' → logprob: -9.375812530517578
    4. ',node' → logprob: -9.750812530517578
    5. '   ' → logprob: -10.375812530517578
    6. '(node' → logprob: -12.375812530517578
    7. '[node' → logprob: -12.500812530517578
    8. '	node' → logprob: -13.250812530517578
    9. '=node' → logprob: -14.000812530517578
    10. ',' → logprob: -14.000812530517578

Token 706: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' (adapté à ' node') → logprob: -0.003181994194164872
    2. ' node' → logprob: -5.7531819343566895
    3. '       ' → logprob: -12.378182411193848
    4. '	node' → logprob: -17.12818145751953
    5. '(node' → logprob: -18.25318145751953
    6. '.node' → logprob: -19.62818145751953
    7. '[node' → logprob: -19.62818145751953
    8. '           ' → logprob: -19.75318145751953
    9. '   ' → logprob: -20.12818145751953
    10. '        ' → logprob: -20.50318145751953

Token 707: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.0053434474393725395
    2. '.left' → logprob: -5.255343437194824
    3. '.' → logprob: -9.130343437194824
    4. 'right' → logprob: -14.130343437194824
    5. ' .' → logprob: -14.880343437194824
    6. ').' → logprob: -16.50534439086914
    7. '.Right' → logprob: -16.75534439086914
    8. '   ' → logprob: -17.13034439086914
    9. '	right' → logprob: -18.00534439086914
    10. '```' → logprob: -18.25534439086914

Token 708: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759679675102234
    2. '=' → logprob: -0.8259679675102234
    3. ')' → logprob: -11.075967788696289
    4. '=node' → logprob: -12.075967788696289
    5. '<|end|>' → logprob: -12.825967788696289
    6. '(node' → logprob: -13.700967788696289
    7. '   ' → logprob: -13.950967788696289
    8. '(' → logprob: -14.450967788696289
    9. '[' → logprob: -15.450967788696289
    10. '<|end|>' → logprob: -15.575967788696289

Token 709: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -4.842555426876061e-06
    2. ' build' → logprob: -12.250004768371582
    3. '(build' → logprob: -19.0000057220459
    4. '	build' → logprob: -22.1250057220459
    5. 'building' → logprob: -24.3750057220459
    6. 'built' → logprob: -24.6250057220459
    7. '.build' → logprob: -24.7500057220459
    8. 'b' → logprob: -25.3750057220459
    9. '   ' → logprob: -25.5000057220459
    10. ' ' → logprob: -27.1250057220459

Token 710: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.00014084660506341606
    2. 'tree' → logprob: -8.875141143798828
    3. 'Tree' → logprob: -14.875141143798828
    4. '_TREE' → logprob: -15.750141143798828
    5. '-tree' → logprob: -16.125141143798828
    6. 'build' → logprob: -16.250141143798828
    7. '树' → logprob: -16.375141143798828
    8. '(tree' → logprob: -16.625141143798828
    9. 'parsed' → logprob: -17.375141143798828
    10. '_node' → logprob: -17.500141143798828

Token 711: '(parsed' (ID: 96597)
  Prédit: '(parsed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parsed' → logprob: -1.8624639324116288e-06
    2. 'parsed' → logprob: -13.250001907348633
    3. '(par' → logprob: -16.750001907348633
    4. '(parse' → logprob: -17.500001907348633
    5. ' parsed' → logprob: -18.375001907348633
    6. '(' → logprob: -18.625001907348633
    7. '(parser' → logprob: -18.875001907348633
    8. ' (' → logprob: -20.500001907348633
    9. '(sorted' → logprob: -20.875001907348633
    10. '((' → logprob: -21.250001907348633

Token 712: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -8.895480277715251e-06
    2. 'tree' → logprob: -12.125008583068848
    3. '[' → logprob: -13.625008583068848
    4. '_TREE' → logprob: -14.000008583068848
    5. 'parsed' → logprob: -14.625008583068848
    6. '_ar' → logprob: -15.500008583068848
    7. '-tree' → logprob: -15.750008583068848
    8. '_t' → logprob: -16.500009536743164
    9. 'er' → logprob: -16.500009536743164
    10. '树' → logprob: -16.625009536743164

Token 713: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.45848218582978e-06
    2. ',' → logprob: -13.75000286102295
    3. '(' → logprob: -14.12500286102295
    4. ' [' → logprob: -16.000001907348633
    5. ')' → logprob: -16.250001907348633
    6. 's' → logprob: -16.500001907348633
    7. '][' → logprob: -16.875001907348633
    8. '   ' → logprob: -16.875001907348633
    9. '2' → logprob: -17.375001907348633
    10. '1' → logprob: -17.750001907348633

Token 714: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -15.75
    3. ' ' → logprob: -17.625
    4. '   ' → logprob: -19.0
    5. '(' → logprob: -19.25
    6. '２' → logprob: -19.75
    7. '۲' → logprob: -19.75
    8. '```' → logprob: -20.875
    9. '-' → logprob: -21.125
    10. '1' → logprob: -21.75

Token 715: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013011827832087874
    2. ')
' → logprob: -9.000129699707031
    3. ')return' → logprob: -13.000129699707031
    4. ' )' → logprob: -13.250129699707031
    5. '))' → logprob: -13.500129699707031
    6. '])' → logprob: -14.750129699707031
    7. '   ' → logprob: -15.000129699707031
    8. 'return' → logprob: -15.125129699707031
    9. '）' → logprob: -16.87512969970703
    10. ')

' → logprob: -17.00012969970703

Token 716: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21191421151161194
    2. '   ' → logprob: -2.336914300918579
    3. 'return' → logprob: -2.836914300918579
    4. ' return' → logprob: -3.336914300918579
    5. '	return' → logprob: -8.8369140625
    6. ' ' → logprob: -10.8369140625
    7. ':return' → logprob: -12.3369140625
    8. '           ' → logprob: -12.5869140625
    9. '  ' → logprob: -13.0869140625
    10. '    ' → logprob: -13.2119140625

Token 717: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.006738462019711733
    2. ' return' → logprob: -5.006738662719727
    3. '   ' → logprob: -11.256738662719727
    4. '       ' → logprob: -11.506738662719727
    5. '	return' → logprob: -16.131738662719727
    6. ' ' → logprob: -17.881738662719727
    7. '  ' → logprob: -19.756738662719727
    8. ':return' → logprob: -19.881738662719727
    9. '    ' → logprob: -20.881738662719727
    10. '           ' → logprob: -21.631738662719727

Token 718: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.0009114635176956654
    2. ' node' → logprob: -7.000911235809326
    3. '(node' → logprob: -19.875911712646484
    4. '	node' → logprob: -21.000911712646484
    5. 'nod' → logprob: -23.750911712646484
    6. '[node' → logprob: -23.875911712646484
    7. 'Node' → logprob: -24.250911712646484
    8. 'n' → logprob: -24.500911712646484
    9. '`' → logprob: -24.625911712646484
    10. ' ' → logprob: -24.875911712646484

Token 719: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02963997982442379
    2. 'from' → logprob: -4.029640197753906
    3. '#' → logprob: -5.154640197753906
    4. 'import' → logprob: -5.904640197753906
    5. 'memo' → logprob: -6.279640197753906
    6. 'mask' → logprob: -8.029640197753906
    7. '
' → logprob: -8.779640197753906
    8. 'MASK' → logprob: -9.154640197753906
    9. 'class' → logprob: -9.404640197753906
    10. 'dp' → logprob: -9.404640197753906

Token 720: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09523884952068329
    2. 'memo' → logprob: -3.2202389240264893
    3. 'from' → logprob: -3.7202389240264893
    4. '#' → logprob: -4.09523868560791
    5. 'dp' → logprob: -6.09523868560791
    6. 'mask' → logprob: -6.09523868560791
    7. 'MOD' → logprob: -6.22023868560791
    8. 'import' → logprob: -6.34523868560791
    9. 'MASK' → logprob: -7.47023868560791
    10. 'mod' → logprob: -7.97023868560791

Token 721: ' set' (ID: 920)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.0789559930562973
    2. ' dfs' → logprob: -3.328955888748169
    3. 'count' → logprob: -3.453955888748169
    4. ' solve' → logprob: -5.828956127166748
    5. 'dfs' → logprob: -5.953956127166748
    6. ' ways' → logprob: -6.578956127166748
    7. ' calc' → logprob: -7.203956127166748
    8. ' compute' → logprob: -8.07895565032959
    9. 'solve' → logprob: -8.57895565032959
    10. 'dp' → logprob: -9.70395565032959

Token 722: '_operations' (ID: 148404)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.4034843444824219
    2. '_leaf' → logprob: -1.4034843444824219
    3. 'attr' → logprob: -2.153484344482422
    4. '_labels' → logprob: -2.528484344482422
    5. '_m' → logprob: -3.028484344482422
    6. '_bits' → logprob: -3.153484344482422
    7. '_' → logprob: -3.278484344482422
    8. '_sub' → logprob: -3.528484344482422
    9. '_node' → logprob: -3.653484344482422
    10. '_colors' → logprob: -3.778484344482422

Token 723: '(op' (ID: 34275)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.24294430017471313
    2. '(left' → logprob: -2.4929442405700684
    3. '(' → logprob: -2.6179442405700684
    4. '(set' → logprob: -3.6179442405700684
    5. '(A' → logprob: -4.117944240570068
    6. '(lhs' → logprob: -5.367944240570068
    7. '('' → logprob: -6.117944240570068
    8. '(s' → logprob: -6.117944240570068
    9. '(op' → logprob: -6.242944240570068
    10. '(_' → logprob: -6.867944240570068

Token 724: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -1.1418081521987915
    2. 'et' → logprob: -1.6418081521987915
    3. 'ets' → logprob: -1.7668081521987915
    4. '):
' → logprob: -2.016808032989502
    5. 's' → logprob: -2.641808032989502
    6. ')' → logprob: -3.266808032989502
    7. ',' → logprob: -3.641808032989502
    8. '(s' → logprob: -4.266808032989502
    9. '(a' → logprob: -5.266808032989502
    10. 'A' → logprob: -6.016808032989502

Token 725: ' s' (ID: 265)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.288491815328598
    2. 'left' → logprob: -1.5384918451309204
    3. 's' → logprob: -4.038491725921631
    4. 'set' → logprob: -4.913491725921631
    5. 'l' → logprob: -5.163491725921631
    6. 'x' → logprob: -5.913491725921631
    7. ' left' → logprob: -7.288491725921631
    8. 'A' → logprob: -7.413491725921631
    9. 'lhs' → logprob: -7.413491725921631
    10. 'mask' → logprob: -8.413492202758789

Token 726: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1130138635635376
    2. '):' → logprob: -2.613013744354248
    3. 'et' → logprob: -3.613013744354248
    4. 'left' → logprob: -6.113013744354248
    5. '_left' → logprob: -6.488013744354248
    6. ')' → logprob: -6.613013744354248
    7. 'a' → logprob: -7.738013744354248
    8. 'ets' → logprob: -8.113014221191406
    9. ',' → logprob: -8.238014221191406
    10. '):
' → logprob: -8.738014221191406

Token 727: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010075619211420417
    2. ',s' → logprob: -7.251007556915283
    3. '1' → logprob: -8.501008033752441
    4. ' ,' → logprob: -9.751008033752441
    5. 's' → logprob: -10.376008033752441
    6. '_,' → logprob: -13.751008033752441
    7. ' s' → logprob: -13.876008033752441
    8. '0' → logprob: -14.501008033752441
    9. 't' → logprob: -15.251008033752441
    10. 'et' → logprob: -15.376008033752441

Token 728: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4740770161151886
    2. ' s' → logprob: -0.9740769863128662
    3. ' ' → logprob: -18.349077224731445
    4. ',' → logprob: -19.099077224731445
    5. '{s' → logprob: -19.099077224731445
    6. '<|end|>' → logprob: -19.349077224731445
    7. '<|end|>' → logprob: -19.349077224731445
    8. '_s' → logprob: -19.599077224731445
    9. ')' → logprob: -19.724077224731445
    10. '<s' → logprob: -20.099077224731445

Token 729: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.73052782076411e-05
    2. 's' → logprob: -9.625067710876465
    3. '_' → logprob: -15.125067710876465
    4. '=' → logprob: -15.375067710876465
    5. ' s' → logprob: -15.875067710876465
    6. ')' → logprob: -16.37506675720215
    7. ' ' → logprob: -16.50006675720215
    8. '₂' → logprob: -16.50006675720215
    9. '```' → logprob: -16.75006675720215
    10. ',' → logprob: -16.75006675720215

Token 730: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06198056787252426
    2. '):
' → logprob: -2.8119804859161377
    3. '):
' → logprob: -11.561980247497559
    4. ':' → logprob: -12.811980247497559
    5. '   ' → logprob: -15.311980247497559
    6. ')' → logprob: -15.436980247497559
    7. '):

' → logprob: -16.061981201171875
    8. ' ):' → logprob: -16.436981201171875
    9. '}:' → logprob: -17.686981201171875
    10. '#' → logprob: -17.686981201171875

Token 731: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01863541267812252
    2. ' if' → logprob: -4.518635272979736
    3. 'if' → logprob: -4.893635272979736
    4. ':' → logprob: -10.018635749816895
    5. ':
' → logprob: -11.518635749816895
    6. '	if' → logprob: -11.893635749816895
    7. '```' → logprob: -14.143635749816895
    8. '):
' → logprob: -14.393635749816895
    9. '   ' → logprob: -14.643635749816895
    10. '#' → logprob: -15.143635749816895

Token 732: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11665467917919159
    2. '   ' → logprob: -2.366654634475708
    3. ' if' → logprob: -4.116654872894287
    4. '	if' → logprob: -11.991654396057129
    5. '```' → logprob: -12.616654396057129
    6. ' ' → logprob: -13.116654396057129
    7. '  ' → logprob: -14.241654396057129
    8. 'return' → logprob: -14.741654396057129
    9. '       ' → logprob: -14.866654396057129
    10. '#' (adapté à ' #') → logprob: -14.866654396057129

Token 733: ' s' (ID: 265)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0010374527191743255
    2. '   ' → logprob: -7.00103759765625
    3. ' if' → logprob: -9.00103759765625
    4. 'def' → logprob: -13.37603759765625
    5. 'return' → logprob: -14.12603759765625
    6. '{
' → logprob: -15.00103759765625
    7. '```' → logprob: -16.62603759765625
    8. '	if' → logprob: -17.62603759765625
    9. 'op' → logprob: -18.62603759765625
    10. ' ' → logprob: -18.62603759765625

Token 734: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1351328343153
    2. 'et' → logprob: -2.5101327896118164
    3. ' =' → logprob: -3.2601327896118164
    4. '=' → logprob: -5.260132789611816
    5. 'e' → logprob: -8.260132789611816
    6. '=set' → logprob: -8.260132789611816
    7. 'def' → logprob: -8.760132789611816
    8. 's' → logprob: -8.885132789611816
    9. 't' → logprob: -8.885132789611816
    10. 'op' → logprob: -9.010132789611816

Token 735: ',' (ID: 11)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.3059556484222412
    2. '&' → logprob: -1.5559556484222412
    3. '=' → logprob: -4.68095588684082
    4. '   ' → logprob: -4.93095588684082
    5. 'if' → logprob: -4.93095588684082
    6. ' if' → logprob: -4.93095588684082
    7. ',' → logprob: -5.05595588684082
    8. ' =' → logprob: -5.80595588684082
    9. ' ^' → logprob: -5.80595588684082
    10. 'def' → logprob: -6.18095588684082

Token 736: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3132634460926056
    2. ' s' → logprob: -1.3132634162902832
    3. '   ' → logprob: -13.563263893127441
    4. 'op' → logprob: -15.438263893127441
    5. ' ' → logprob: -16.188262939453125
    6. ' op' → logprob: -17.063262939453125
    7. ' ' → logprob: -17.313262939453125
    8. '0' → logprob: -17.938262939453125
    9. '    ' → logprob: -17.938262939453125
    10. 'int' → logprob: -18.063262939453125

Token 737: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011196834966540337
    2. 's' → logprob: -4.886196613311768
    3. 't' → logprob: -7.011196613311768
    4. '=' → logprob: -7.011196613311768
    5. ',' → logprob: -7.386196613311768
    6. '1' → logprob: -7.886196613311768
    7. 'and' → logprob: -8.511197090148926
    8. '&' → logprob: -8.886197090148926
    9. '|' → logprob: -10.011197090148926
    10. 'et' → logprob: -10.386197090148926

Token 738: ' sont' (ID: 5242)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6624327898025513
    2. '=' → logprob: -1.0374327898025513
    3. 'def' → logprob: -3.1624326705932617
    4. ')' → logprob: -4.287432670593262
    5. ' are' → logprob: -4.412432670593262
    6. ',' → logprob: -4.537432670593262
    7. ':' → logprob: -4.662432670593262
    8. ' &' → logprob: -4.787432670593262
    9. '   ' → logprob: -4.912432670593262
    10. 's' → logprob: -5.787432670593262

Token 739: ' des' (ID: 731)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.8776134848594666
    2. '0' → logprob: -1.3776135444641113
    3. ''s' → logprob: -2.1276135444641113
    4. 's' → logprob: -2.6276135444641113
    5. ' int' → logprob: -3.5026135444641113
    6. 'set' → logprob: -4.002613544464111
    7. 'sets' → logprob: -4.127613544464111
    8. ''' → logprob: -4.377613544464111
    9. ' s' → logprob: -4.502613544464111
    10. 'A' → logprob: -5.002613544464111

Token 740: ' sets' (ID: 11982)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.024210216477513313
    2. 'inte' → logprob: -4.399210453033447
    3. 'ints' → logprob: -4.524210453033447
    4. 'sets' → logprob: -8.149209976196289
    5. 'ent' → logprob: -8.274209976196289
    6. ' int' → logprob: -9.399209976196289
    7. 'bit' → logprob: -9.524209976196289
    8. 'set' → logprob: -10.024209976196289
    9. ' integers' → logprob: -10.899209976196289
    10. 'integer' → logprob: -11.399209976196289

Token 741: ' représent' (ID: 42664)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15517178177833557
    2. ' &' → logprob: -3.6551718711853027
    3. ':' → logprob: -4.030171871185303
    4. ' =' → logprob: -4.280171871185303
    5. '&' → logprob: -4.280171871185303
    6. ':
' → logprob: -4.405171871185303
    7. 'A' → logprob: -5.155171871185303
    8. ',' → logprob: -5.280171871185303
    9. '=' → logprob: -5.405171871185303
    10. 's' → logprob: -5.530171871185303

Token 742: 'és' (ID: 1756)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12738192081451416
    2. 'par' → logprob: -2.8773818016052246
    3. '   ' → logprob: -3.8773818016052246
    4. 'en' → logprob: -4.502381801605225
    5. ' par' → logprob: -5.002381801605225
    6. 'as' → logprob: -5.002381801605225
    7. 'ent' → logprob: -5.252381801605225
    8. 'by' → logprob: -5.252381801605225
    9. 'e' → logprob: -6.752381801605225
    10. '_' → logprob: -6.877381801605225

Token 743: ' par' (ID: 686)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.6902173757553101
    2. 'as' → logprob: -1.31521737575531
    3. 'par' → logprob: -1.56521737575531
    4. ' en' → logprob: -4.9402174949646
    5. 's' → logprob: -5.5652174949646
    6. ' as' → logprob: -5.6902174949646
    7. 'int' → logprob: -6.0652174949646
    8. 'by' → logprob: -6.6902174949646
    9. ' par' → logprob: -6.6902174949646
    10. '<int' → logprob: -7.4402174949646

Token 744: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.9141795635223389
    2. 'inte' → logprob: -1.4141795635223389
    3. 'bit' → logprob: -1.5391795635223389
    4. 'bits' → logprob: -2.914179563522339
    5. ' integers' → logprob: -3.539179563522339
    6. 's' → logprob: -3.539179563522339
    7. 'ints' → logprob: -4.914179801940918
    8. 'op' → logprob: -5.289179801940918
    9. ' bit' → logprob: -5.414179801940918
    10. ' int' → logprob: -5.914179801940918

Token 745: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9211444854736328
    2. '   ' → logprob: -1.0461444854736328
    3. ':
' → logprob: -2.296144485473633
    4. ' =' → logprob: -2.921144485473633
    5. '):
' → logprob: -3.296144485473633
    6. ',' → logprob: -4.296144485473633
    7. '=' → logprob: -4.796144485473633
    8. '):' → logprob: -5.046144485473633
    9. ' if' → logprob: -5.171144485473633
    10. '{' → logprob: -5.296144485473633

Token 746: '4' (ID: 19)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24898990988731384
    2. 's' → logprob: -2.7489898204803467
    3. ' s' → logprob: -2.9989898204803467
    4. 'bit' → logprob: -3.9989898204803467
    5. ' )' → logprob: -4.123990058898926
    6. 'int' → logprob: -4.248990058898926
    7. '4' → logprob: -4.373990058898926
    8. '):
' → logprob: -5.123990058898926
    9. 'op' → logprob: -5.123990058898926
    10. ' ' → logprob: -5.248990058898926

Token 747: ' bits' (ID: 18189)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06388875842094421
    2. ' bits' → logprob: -4.0638885498046875
    3. ' )' → logprob: -4.4388885498046875
    4. '
' → logprob: -4.4388885498046875
    5. 'bits' → logprob: -4.6888885498046875
    6. 'b' → logprob: -6.0638885498046875
    7. ' ' → logprob: -6.8138885498046875
    8. '_bits' → logprob: -7.0638885498046875
    9. 'bit' → logprob: -7.1888885498046875
    10. '_' → logprob: -7.1888885498046875

Token 748: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.11156405508518219
    2. ')' → logprob: -3.2365641593933105
    3. ')
' → logprob: -3.2365641593933105
    4. '):' → logprob: -3.7365641593933105
    5. '   ' → logprob: -6.9865641593933105
    6. ',' → logprob: -7.9865641593933105
    7. 's' → logprob: -8.236563682556152
    8. '):
' → logprob: -8.236563682556152
    9. '):

' → logprob: -8.361563682556152
    10. ' s' → logprob: -8.361563682556152

Token 749: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6015474796295166
    2. ':' → logprob: -0.8515474796295166
    3. ':
' → logprob: -3.7265474796295166
    4. 'if' → logprob: -7.8515472412109375
    5. '):' → logprob: -8.476547241210938
    6. ' if' → logprob: -8.601547241210938
    7. '):
' → logprob: -8.851547241210938
    8. '{' → logprob: -9.851547241210938
    9. '```' → logprob: -9.851547241210938
    10. ',' → logprob: -10.476547241210938

Token 750: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11303015053272247
    2. '   ' → logprob: -2.363030195236206
    3. ' if' → logprob: -4.363029956817627
    4. '	if' → logprob: -14.113030433654785
    5. ' ' → logprob: -14.363030433654785
    6. '  ' → logprob: -15.363030433654785
    7. 'return' → logprob: -15.363030433654785
    8. '```' → logprob: -16.86302947998047
    9. '    ' → logprob: -17.23802947998047
    10. '
' → logprob: -17.23802947998047

Token 751: ' Retour' (ID: 146830)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0005928283790126443
    2. '   ' → logprob: -7.7505927085876465
    3. ' if' → logprob: -8.750593185424805
    4. 'return' → logprob: -12.625593185424805
    5. '{
' → logprob: -14.875593185424805
    6. 'i' → logprob: -16.625593185424805
    7. '	if' → logprob: -16.625593185424805
    8. '```' → logprob: -17.000593185424805
    9. '{' → logprob: -17.500593185424805
    10. '1' → logprob: -17.500593185424805

Token 752: 'ne' (ID: 611)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03758326172828674
    2. 'ne' → logprob: -3.662583351135254
    3. 'ns' → logprob: -5.912583351135254
    4. '   ' → logprob: -5.912583351135254
    5. 'urn' → logprob: -5.912583351135254
    6. 's' → logprob: -6.662583351135254
    7. 'ner' → logprob: -7.162583351135254
    8. 'rn' → logprob: -7.787583351135254
    9. ' s' → logprob: -8.537583351135254
    10. ' =' → logprob: -8.787583351135254

Token 753: ' le' (ID: 505)
  Prédit: '{
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{
' → logprob: -0.6913793087005615
    2. 's' → logprob: -1.1913793087005615
    3. '{' → logprob: -2.0663793087005615
    4. '{s' → logprob: -2.8163793087005615
    5. ' s' → logprob: -5.441379547119141
    6. 'op' → logprob: -7.316379547119141
    7. ' {
' → logprob: -7.316379547119141
    8. ' {' → logprob: -7.441379547119141
    9. '(' → logprob: -7.691379547119141
    10. 'None' → logprob: -7.816379547119141

Token 754: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.021754922345280647
    2. ' result' → logprob: -4.771754741668701
    3. 'res' → logprob: -5.271754741668701
    4. 'rés' → logprob: -5.396754741668701
    5. 's' → logprob: -6.646754741668701
    6. '{
' → logprob: -7.021754741668701
    7. ' résultat' → logprob: -7.771754741668701
    8. 'int' → logprob: -8.02175521850586
    9. '{' → logprob: -9.52175521850586
    10. ' s' → logprob: -9.64675521850586

Token 755: ' selon' (ID: 27571)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6955999732017517
    2. ' s' → logprob: -0.9455999732017517
    3. ' =' → logprob: -2.6956000328063965
    4. '=' → logprob: -3.9456000328063965
    5. '{' → logprob: -4.9456000328063965
    6. '   ' → logprob: -5.4456000328063965
    7. '{
' → logprob: -5.6956000328063965
    8. '{s' → logprob: -6.0706000328063965
    9. ' op' → logprob: -6.0706000328063965
    10. ' (' → logprob: -6.5706000328063965

Token 756: ' l' (ID: 305)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.0007115975022315979
    2. ' op' → logprob: -7.250711441040039
    3. ''op' → logprob: -14.000711441040039
    4. '{
' → logprob: -15.250711441040039
    5. '	op' → logprob: -15.250711441040039
    6. '   ' → logprob: -16.12571144104004
    7. '(op' → logprob: -16.75071144104004
    8. ' ' → logprob: -17.00071144104004
    9. '{' → logprob: -17.50071144104004
    10. '_op' → logprob: -18.00071144104004

Token 757: ''op' (ID: 70747)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.010228781029582024
    2. ' op' → logprob: -4.635228633880615
    3. ''op' → logprob: -7.760228633880615
    4. 'opcode' → logprob: -11.010229110717773
    5. 'def' → logprob: -11.135229110717773
    6. '_op' → logprob: -12.510229110717773
    7. 'o' → logprob: -12.885229110717773
    8. '	op' → logprob: -12.885229110717773
    9. '(op' → logprob: -13.510229110717773
    10. 'p' → logprob: -13.760229110717773

Token 758: 'ération' (ID: 24977)
  Prédit: ' op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.6022084355354309
    2. 'op' → logprob: -1.2272083759307861
    3. 'er' → logprob: -2.227208375930786
    4. '   ' → logprob: -3.852208375930786
    5. 'ération' → logprob: -4.602208614349365
    6. '(op' → logprob: -5.102208614349365
    7. '	op' → logprob: -5.852208614349365
    8. '_op' → logprob: -6.227208614349365
    9. ''op' → logprob: -6.227208614349365
    10. 'def' → logprob: -6.602208614349365

Token 759: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16262830793857574
    2. ':' → logprob: -2.287628412246704
    3. ':
' → logprob: -4.037628173828125
    4. ' if' → logprob: -4.287628173828125
    5. 'A' → logprob: -4.912628173828125
    6. '=' → logprob: -5.912628173828125
    7. 'if' → logprob: -6.287628173828125
    8. ',' → logprob: -7.412628173828125
    9. '{' → logprob: -7.412628173828125
    10. ' ' → logprob: -7.537628173828125

Token 760: ' A' (ID: 355)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7040031552314758
    2. '{
' → logprob: -1.204003095626831
    3. '   ' → logprob: -2.454003095626831
    4. ' if' → logprob: -2.704003095626831
    5. '{' → logprob: -3.579003095626831
    6. 's' → logprob: -4.95400333404541
    7. ' s' → logprob: -5.07900333404541
    8. '{s' → logprob: -6.32900333404541
    9. ' A' → logprob: -6.45400333404541
    10. 'A' → logprob: -6.45400333404541

Token 761: '=' (ID: 28)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.5130853652954102
    2. '&' → logprob: -2.01308536529541
    3. ' =' → logprob: -2.76308536529541
    4. '   ' → logprob: -3.01308536529541
    5. ',' → logprob: -3.13808536529541
    6. '=' → logprob: -3.88808536529541
    7. ' ,' → logprob: -4.26308536529541
    8. 'nd' → logprob: -4.63808536529541
    9. ' if' → logprob: -4.63808536529541
    10. ' return' → logprob: -4.88808536529541

Token 762: 'intersection' (ID: 170255)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04844745993614197
    2. '&s' → logprob: -3.423447370529175
    3. '(s' → logprob: -5.173447608947754
    4. '&' → logprob: -5.423447608947754
    5. ' s' → logprob: -6.298447608947754
    6. ''s' → logprob: -7.048447608947754
    7. '(' → logprob: -7.798447608947754
    8. '1' → logprob: -8.423447608947754
    9. 'lambda' → logprob: -8.423447608947754
    10. '(lambda' → logprob: -8.798447608947754

Token 763: ',' (ID: 11)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.6997398734092712
    2. '   ' → logprob: -1.199739933013916
    3. ',' → logprob: -2.324739933013916
    4. ' if' → logprob: -2.699739933013916
    5. 'if' → logprob: -4.449739933013916
    6. ' &' → logprob: -4.699739933013916
    7. '&
' → logprob: -5.949739933013916
    8. ''' → logprob: -6.699739933013916
    9. '=' → logprob: -6.699739933013916
    10. ' ,' → logprob: -6.699739933013916

Token 764: ' O' (ID: 532)
  Prédit: 'O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'O' → logprob: -0.32102566957473755
    2. ''O' → logprob: -1.4460256099700928
    3. ' O' → logprob: -3.6960256099700928
    4. '   ' → logprob: -5.071025848388672
    5. ' '' → logprob: -5.946025848388672
    6. ''' → logprob: -6.446025848388672
    7. 'if' → logprob: -6.946025848388672
    8. ' ' → logprob: -7.821025848388672
    9. '"O' → logprob: -7.821025848388672
    10. '	O' → logprob: -8.571025848388672

Token 765: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22343327105045319
    2. '='' → logprob: -1.973433256149292
    3. ' =' → logprob: -3.223433256149292
    4. 'union' → logprob: -4.348433494567871
    5. ''' → logprob: -6.598433494567871
    6. ''un' → logprob: -7.098433494567871
    7. 'X' → logprob: -7.098433494567871
    8. ' ='' → logprob: -7.223433494567871
    9. '_union' → logprob: -7.223433494567871
    10. '   ' → logprob: -7.348433494567871

Token 766: 'union' (ID: 37013)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06837233901023865
    2. 'union' → logprob: -2.9433722496032715
    3. '(s' → logprob: -4.8183722496032715
    4. ' s' → logprob: -5.8183722496032715
    5. '|' → logprob: -7.0683722496032715
    6. '(' → logprob: -7.8183722496032715
    7. ' (' → logprob: -7.8183722496032715
    8. 'lambda' → logprob: -9.06837272644043
    9. ' union' → logprob: -9.06837272644043
    10. '{s' → logprob: -9.81837272644043

Token 767: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17356161773204803
    2. '   ' → logprob: -2.1735615730285645
    3. ' =' → logprob: -4.1735615730285645
    4. ' ,' → logprob: -4.2985615730285645
    5. '=' → logprob: -4.6735615730285645
    6. 'X' → logprob: -6.2985615730285645
    7. 's' → logprob: -7.1735615730285645
    8. ' if' → logprob: -7.1735615730285645
    9. ' ' → logprob: -7.4235615730285645
    10. ' s' → logprob: -7.4235615730285645

Token 768: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.004670187830924988
    2. ' X' → logprob: -5.504670143127441
    3. '   ' → logprob: -8.379670143127441
    4. ' ' → logprob: -8.504670143127441
    5. ''' → logprob: -10.379670143127441
    6. '       ' → logprob: -10.504670143127441
    7. '  ' → logprob: -10.754670143127441
    8. '           ' → logprob: -11.254670143127441
    9. '         ' → logprob: -11.629670143127441
    10. '
' → logprob: -11.754670143127441

Token 769: '=s' (ID: 32455)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16773360967636108
    2. ' =' → logprob: -2.542733669281006
    3. '=s' → logprob: -2.667733669281006
    4. '^' → logprob: -6.417733669281006
    5. 's' → logprob: -6.667733669281006
    6. '   ' → logprob: -6.917733669281006
    7. '=lambda' → logprob: -7.042733669281006
    8. 'def' → logprob: -8.292733192443848
    9. '(s' → logprob: -8.542733192443848
    10. ' ' → logprob: -8.792733192443848

Token 770: 'ymm' (ID: 147604)
  Prédit: 'ym'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ym' → logprob: -0.7777987122535706
    2. 'ymmetric' → logprob: -0.9027987122535706
    3. 'xor' → logprob: -3.402798652648926
    4. '^' → logprob: -3.527798652648926
    5. '1' → logprob: -3.652798652648926
    6. 'ymm' → logprob: -3.902798652648926
    7. 'x' → logprob: -4.152798652648926
    8. 'et' → logprob: -5.402798652648926
    9. 's' → logprob: -6.152798652648926
    10. '^(' → logprob: -6.777798652648926

Token 771: ' diff' (ID: 8868)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '^' → logprob: -0.20517301559448242
    2. 'étr' → logprob: -2.2051730155944824
    3. 'etric' → logprob: -3.4551730155944824
    4. 'et' → logprob: -3.8301730155944824
    5. 'é' → logprob: -5.080173015594482
    6. '_' → logprob: -5.455173015594482
    7. 'e' → logprob: -5.830173015594482
    8. 'ex' → logprob: -6.955173015594482
    9. ' ^' → logprob: -7.080173015594482
    10. '_diff' → logprob: -7.080173015594482

Token 772: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3654997646808624
    2. ':' → logprob: -1.99049973487854
    3. ':
' → logprob: -2.36549973487854
    4. 'def' → logprob: -3.61549973487854
    5. '):
' → logprob: -4.365499973297119
    6. '(op' → logprob: -4.490499973297119
    7. 's' → logprob: -4.865499973297119
    8. '):' → logprob: -5.490499973297119
    9. ')' → logprob: -6.115499973297119
    10. '(s' → logprob: -6.240499973297119

Token 773: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0905831903219223
    2. '   ' → logprob: -2.590583086013794
    3. ':
' → logprob: -4.840583324432373
    4. '):' → logprob: -5.965583324432373
    5. '):
' → logprob: -7.465583324432373
    6. 'if' → logprob: -8.590582847595215
    7. ' :' → logprob: -9.465582847595215
    8. ' if' → logprob: -9.715582847595215
    9. ')' → logprob: -9.715582847595215
    10. '():' → logprob: -10.090582847595215

Token 774: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7521161437034607
    2. 'if' (adapté à ' if') → logprob: -0.8771161437034607
    3. ' if' → logprob: -2.2521162033081055
    4. ':' → logprob: -5.1271162033081055
    5. '	if' → logprob: -7.6271162033081055
    6. ':
' → logprob: -8.377116203308105
    7. 'return' → logprob: -8.627116203308105
    8. '       ' → logprob: -9.127116203308105
    9. '{' → logprob: -9.377116203308105
    10. '```' → logprob: -9.502116203308105

Token 775: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.0040785204619169235
    2. ' op' → logprob: -5.504078388214111
    3. '	op' → logprob: -17.004077911376953
    4. ' ' → logprob: -17.254077911376953
    5. '   ' → logprob: -19.254077911376953
    6. '(op' → logprob: -19.629077911376953
    7. '_op' → logprob: -20.129077911376953
    8. '  ' → logprob: -20.254077911376953
    9. 'opt' → logprob: -20.504077911376953
    10. 'opf' → logprob: -21.004077911376953

Token 776: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3879241645336151
    2. '==' → logprob: -1.1379241943359375
    3. '=='' → logprob: -7.0129241943359375
    4. '=' → logprob: -9.762924194335938
    5. ' =='' → logprob: -10.012924194335938
    6. '=="' → logprob: -11.137924194335938
    7. '[' → logprob: -11.262924194335938
    8. '==
' → logprob: -12.137924194335938
    9. '	' → logprob: -12.262924194335938
    10. ')==' → logprob: -13.137924194335938

Token 777: ' '' (ID: 461)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.00017040544480551034
    2. 'A' → logprob: -8.750170707702637
    3. '"A' → logprob: -12.000170707702637
    4. ' '' → logprob: -12.250170707702637
    5. '’A' → logprob: -14.625170707702637
    6. ''O' → logprob: -15.500170707702637
    7. '   ' → logprob: -15.875170707702637
    8. '('' → logprob: -16.87516975402832
    9. ' ' → logprob: -16.87516975402832
    10. ''' → logprob: -16.87516975402832

Token 778: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.6047699318733066e-05
    2. ''A' → logprob: -11.375016212463379
    3. ' A' → logprob: -12.375016212463379
    4. 'a' → logprob: -15.375016212463379
    5. ''' → logprob: -17.000015258789062
    6. '	A' → logprob: -17.625015258789062
    7. ' ' → logprob: -17.750015258789062
    8. '_A' → logprob: -18.375015258789062
    9. '"A' → logprob: -18.375015258789062
    10. '')' → logprob: -18.875015258789062

Token 779: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.6551181077957153
    2. '':
' → logprob: -0.7801181077957153
    3. ''' → logprob: -4.405117988586426
    4. ' '' → logprob: -4.780117988586426
    5. ''):
' → logprob: -7.405117988586426
    6. '):
' → logprob: -8.280117988586426
    7. '':
' → logprob: -8.655117988586426
    8. ':' → logprob: -8.780117988586426
    9. ' ':' → logprob: -8.905117988586426
    10. '):' → logprob: -9.280117988586426

Token 780: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.37609198689460754
    2. 's' → logprob: -1.8760919570922852
    3. '   ' → logprob: -1.8760919570922852
    4. ' return' → logprob: -5.001091957092285
    5. ' s' → logprob: -8.251091957092285
    6. '       ' → logprob: -9.626091957092285
    7. ' ' → logprob: -11.126091957092285
    8. '	return' → logprob: -12.626091957092285
    9. '  ' → logprob: -12.876091957092285
    10. '`s' → logprob: -13.126091957092285

Token 781: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.009716320782899857
    2. ' return' → logprob: -4.759716510772705
    3. 's' → logprob: -6.884716510772705
    4. '   ' → logprob: -9.509716033935547
    5. ' s' → logprob: -12.634716033935547
    6. ' ' → logprob: -15.884716033935547
    7. 'r' → logprob: -16.884716033935547
    8. '	return' → logprob: -17.009716033935547
    9. '
' → logprob: -17.134716033935547
    10. '  ' → logprob: -17.384716033935547

Token 782: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0004885728703811765
    2. ' s' → logprob: -7.625488758087158
    3. '(s' → logprob: -14.62548828125
    4. '`s' → logprob: -17.25048828125
    5. '   ' → logprob: -17.37548828125
    6. '{s' → logprob: -19.12548828125
    7. ' (' → logprob: -19.37548828125
    8. ' ' → logprob: -19.50048828125
    9. '(' → logprob: -20.00048828125
    10. ' ' → logprob: -20.12548828125

Token 783: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.190178904333152e-05
    2. 's' → logprob: -10.375031471252441
    3. '&s' → logprob: -14.875031471252441
    4. '(s' → logprob: -16.125032424926758
    5. '&' → logprob: -16.375032424926758
    6. ' s' → logprob: -16.875032424926758
    7. 'n' → logprob: -17.750032424926758
    8. 'et' → logprob: -18.500032424926758
    9. 'r' → logprob: -19.000032424926758
    10. 't' → logprob: -19.375032424926758

Token 784: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.21335546672344208
    2. ' &' → logprob: -1.9633554220199585
    3. '&s' → logprob: -2.963355541229248
    4. '&amp' → logprob: -9.33835506439209
    5. '&S' → logprob: -12.33835506439209
    6. '&
' → logprob: -12.83835506439209
    7. '&A' → logprob: -13.21335506439209
    8. '&nbsp' → logprob: -14.21335506439209
    9. 's' → logprob: -14.71335506439209
    10. ' ' → logprob: -15.58835506439209

Token 785: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0004306692280806601
    2. ' s' → logprob: -7.750430583953857
    3. '   ' → logprob: -18.500431060791016
    4. ' ' → logprob: -19.750431060791016
    5. '  ' → logprob: -19.875431060791016
    6. '	s' → logprob: -20.750431060791016
    7. '    ' → logprob: -22.000431060791016
    8. '_s' → logprob: -22.125431060791016
    9. ' ' → logprob: -22.125431060791016
    10. '`s' → logprob: -22.750431060791016

Token 786: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4748848080635071
    2. 's' → logprob: -0.9748848080635071
    3. '1' → logprob: -7.224884986877441
    4. ' s' → logprob: -9.474884986877441
    5. '(s' → logprob: -14.474884986877441
    6. '   ' → logprob: -15.099884986877441
    7. ' ' → logprob: -15.224884986877441
    8. 'p' → logprob: -15.224884986877441
    9. '3' → logprob: -15.724884986877441
    10. 'm' → logprob: -16.224884033203125

Token 787: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09029427170753479
    2. 'elif' → logprob: -2.715294361114502
    3. '<|end|>' → logprob: -4.715294361114502
    4. ' elif' → logprob: -5.590294361114502
    5. 'O' → logprob: -5.965294361114502
    6. 'if' → logprob: -7.340294361114502
    7. '	elif' → logprob: -7.465294361114502
    8. ' if' → logprob: -7.590294361114502
    9. '    
' → logprob: -7.840294361114502
    10. '  ' → logprob: -7.965294361114502

Token 788: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3559589982032776
    2. 'elif' → logprob: -1.2309589385986328
    3. ' elif' → logprob: -5.730958938598633
    4. '<|end|>' → logprob: -6.230958938598633
    5. 'if' → logprob: -7.480958938598633
    6. ' ' → logprob: -8.105958938598633
    7. '  ' → logprob: -8.105958938598633
    8. '	elif' → logprob: -8.355958938598633
    9. '    
' → logprob: -8.480958938598633
    10. ' if' → logprob: -8.730958938598633

Token 789: ' elif' (ID: 9497)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5782294869422913
    2. 'elif' (adapté à ' elif') → logprob: -0.8282294869422913
    3. '   ' → logprob: -7.0782294273376465
    4. ' elif' → logprob: -7.2032294273376465
    5. ' if' → logprob: -7.4532294273376465
    6. 'O' → logprob: -9.328229904174805
    7. 'i' → logprob: -11.453229904174805
    8. ' O' → logprob: -12.578229904174805
    9. '```' → logprob: -12.578229904174805
    10. 'el' → logprob: -12.703229904174805

Token 790: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.31327173113822937
    2. ' op' → logprob: -1.3132717609405518
    3. ''op' → logprob: -12.438271522521973
    4. '(op' → logprob: -13.188271522521973
    5. 'O' → logprob: -13.438271522521973
    6. 'o' → logprob: -14.188271522521973
    7. '	op' → logprob: -14.313271522521973
    8. ' ' → logprob: -15.313271522521973
    9. ''' → logprob: -15.563271522521973
    10. 'OP' → logprob: -15.813271522521973

Token 791: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1269845962524414
    2. '==' → logprob: -2.1269845962524414
    3. '=='' → logprob: -9.876984596252441
    4. ' =='' → logprob: -12.751984596252441
    5. '=' → logprob: -13.626984596252441
    6. ''' → logprob: -15.501984596252441
    7. ' ' → logprob: -15.751984596252441
    8. '=="' → logprob: -15.751984596252441
    9. '[' → logprob: -16.376983642578125
    10. '   ' → logprob: -16.501983642578125

Token 792: ' '' (ID: 461)
  Prédit: ''O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''O' → logprob: -0.00014799882774241269
    2. ' '' → logprob: -8.875147819519043
    3. ''o' → logprob: -12.625147819519043
    4. 'O' → logprob: -13.125147819519043
    5. ''' → logprob: -13.250147819519043
    6. '’O' → logprob: -14.875147819519043
    7. '"O' → logprob: -15.000147819519043
    8. ' ' → logprob: -15.500147819519043
    9. '   ' → logprob: -16.37514877319336
    10. ' O' → logprob: -17.00014877319336

Token 793: 'O' (ID: 46)
  Prédit: 'O'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'O' → logprob: -0.02632305398583412
    2. ''O' → logprob: -3.651323080062866
    3. ''' → logprob: -12.026323318481445
    4. ' O' → logprob: -12.151323318481445
    5. '"O' → logprob: -12.276323318481445
    6. ''o' → logprob: -12.776323318481445
    7. '`' → logprob: -13.526323318481445
    8. '’O' → logprob: -14.651323318481445
    9. '	O' → logprob: -14.651323318481445
    10. 'О' → logprob: -15.151323318481445

Token 794: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1613670289516449
    2. '       ' → logprob: -2.2863669395446777
    3. ':
' → logprob: -3.5363669395446777
    4. '   ' → logprob: -4.286366939544678
    5. ':return' → logprob: -6.411366939544678
    6. '':' → logprob: -7.286366939544678
    7. ' :' → logprob: -8.036367416381836
    8. ''' → logprob: -8.161367416381836
    9. '':
' → logprob: -8.161367416381836
    10. 'return' → logprob: -8.786367416381836

Token 795: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.9239533543586731
    2. '       ' → logprob: -1.1739532947540283
    3. ' return' → logprob: -1.2989532947540283
    4. '   ' → logprob: -3.9239532947540283
    5. 's' → logprob: -7.423953533172607
    6. ' s' → logprob: -7.548953533172607
    7. ' ' → logprob: -9.67395305633545
    8. '	return' → logprob: -9.79895305633545
    9. '    ' → logprob: -10.67395305633545
    10. '     ' → logprob: -10.79895305633545

Token 796: ' return' (ID: 622)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.814181923866272
    2. 'return' (adapté à ' return') → logprob: -0.814181923866272
    3. ' return' → logprob: -2.5641818046569824
    4. ' s' → logprob: -3.3141818046569824
    5. '   ' → logprob: -7.439181804656982
    6. '       ' → logprob: -10.56418228149414
    7. ' ' → logprob: -10.68918228149414
    8. '  ' → logprob: -11.81418228149414
    9. '    ' → logprob: -13.68918228149414
    10. '	return' → logprob: -13.81418228149414

Token 797: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06196858361363411
    2. ' s' → logprob: -2.8119685649871826
    3. '(s' → logprob: -14.686968803405762
    4. '   ' → logprob: -15.061968803405762
    5. ' ' → logprob: -15.936968803405762
    6. '`s' → logprob: -16.936967849731445
    7. ' (' → logprob: -17.311967849731445
    8. '  ' → logprob: -17.436967849731445
    9. '_s' → logprob: -18.186967849731445
    10. '	s' → logprob: -18.311967849731445

Token 798: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9504606825648807e-05
    2. 's' → logprob: -11.250019073486328
    3. '|' → logprob: -12.125019073486328
    4. ' |' → logprob: -15.500019073486328
    5. ' s' → logprob: -15.750019073486328
    6. '(s' → logprob: -16.000019073486328
    7. '```' → logprob: -16.375019073486328
    8. ' ' → logprob: -16.562519073486328
    9. 'o' → logprob: -17.250019073486328
    10. 'or' → logprob: -17.375019073486328

Token 799: ' |' (ID: 1022)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.03804194927215576
    2. ' |' → logprob: -3.2880420684814453
    3. ' ' → logprob: -15.538042068481445
    4. 'or' → logprob: -16.288042068481445
    5. ' ' → logprob: -16.663042068481445
    6. '|string' → logprob: -17.538042068481445
    7. '│' → logprob: -17.788042068481445
    8. '|
' → logprob: -17.913042068481445
    9. '|`
' → logprob: -17.913042068481445
    10. '|get' → logprob: -17.913042068481445

Token 800: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0485873706638813
    2. ' s' → logprob: -3.0485873222351074
    3. ' ' → logprob: -18.423587799072266
    4. '(s' → logprob: -18.673587799072266
    5. '   ' → logprob: -18.798587799072266
    6. '`s' → logprob: -18.923587799072266
    7. '	s' → logprob: -19.048587799072266
    8. '_s' → logprob: -20.048587799072266
    9. '  ' → logprob: -21.048587799072266
    10. '    ' → logprob: -21.173587799072266

Token 801: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.009795522317290306
    2. 's' → logprob: -4.634795665740967
    3. ' s' → logprob: -10.384795188903809
    4. ' ' → logprob: -12.009795188903809
    5. '   ' → logprob: -14.134795188903809
    6. '_' → logprob: -14.134795188903809
    7. '₂' → logprob: -15.009795188903809
    8. '(s' → logprob: -16.009796142578125
    9. '  ' → logprob: -16.134796142578125
    10. '&s' → logprob: -16.259796142578125

Token 802: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5048530030981055e-06
    2. 'elif' → logprob: -13.500001907348633
    3. '
' → logprob: -16.375001907348633
    4. ',' → logprob: -17.500001907348633
    5. '	elif' → logprob: -17.625001907348633
    6. '    
' → logprob: -17.875001907348633
    7. ' elif' → logprob: -18.125001907348633
    8. '       ' → logprob: -18.625001907348633
    9. '   ' → logprob: -19.500001907348633
    10. '  ' → logprob: -19.500001907348633

Token 803: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.273621405242011e-05
    2. 'elif' → logprob: -10.375032424926758
    3. '	elif' → logprob: -14.625032424926758
    4. '    
' → logprob: -15.375032424926758
    5. '
' → logprob: -15.500032424926758
    6. ' elif' → logprob: -15.875032424926758
    7. '```' → logprob: -16.125032424926758
    8. '<|end|>' → logprob: -16.250032424926758
    9. ',' → logprob: -16.625032424926758
    10. '   ' → logprob: -17.000032424926758

Token 804: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.17714042961597443
    2. '   ' → logprob: -1.927140474319458
    3. 'else' → logprob: -4.427140235900879
    4. 'X' → logprob: -5.427140235900879
    5. ' elif' → logprob: -7.802140235900879
    6. ' else' → logprob: -11.677140235900879
    7. ' X' → logprob: -11.927140235900879
    8. '	elif' → logprob: -13.177140235900879
    9. 'elseif' → logprob: -13.427140235900879
    10. 'return' → logprob: -13.552140235900879

Token 805: ' op' (ID: 991)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.001765382126905024
    2. ' '' → logprob: -6.376765251159668
    3. ' ' → logprob: -10.501765251159668
    4. 'X' → logprob: -10.501765251159668
    5. '   ' → logprob: -12.626765251159668
    6. ' X' → logprob: -13.251765251159668
    7. '`' → logprob: -13.376765251159668
    8. '  ' → logprob: -15.001765251159668
    9. '       ' → logprob: -15.001765251159668
    10. ''O' → logprob: -15.376765251159668

Token 806: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07949816435575485
    2. ' ==' → logprob: -2.579498052597046
    3. '=='' → logprob: -7.454498291015625
    4. '=' → logprob: -10.954498291015625
    5. ''' → logprob: -12.079498291015625
    6. ' =='' → logprob: -13.204498291015625
    7. 'X' → logprob: -13.954498291015625
    8. '===' → logprob: -14.329498291015625
    9. '==
' → logprob: -14.579498291015625
    10. ' ' → logprob: -14.954498291015625

Token 807: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.1756367712223437e-05
    2. 'X' → logprob: -11.500011444091797
    3. ' '' → logprob: -13.875011444091797
    4. '`' → logprob: -15.625011444091797
    5. ' ' → logprob: -15.625011444091797
    6. '   ' → logprob: -15.750011444091797
    7. ''O' → logprob: -16.125011444091797
    8. ''A' → logprob: -18.000011444091797
    9. '  ' → logprob: -18.000011444091797
    10. ''S' → logprob: -18.125011444091797

Token 808: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.3132694363594055
    2. ''' → logprob: -1.3132693767547607
    3. '`' → logprob: -12.31326961517334
    4. ' X' → logprob: -13.81326961517334
    5. '#' → logprob: -14.43826961517334
    6. '['' → logprob: -14.56326961517334
    7. '```' → logprob: -14.81326961517334
    8. ' ' → logprob: -16.063268661499023
    9. ' '' → logprob: -16.188268661499023
    10. '"' → logprob: -16.188268661499023

Token 809: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4631885290145874
    2. ':
' → logprob: -1.4631885290145874
    3. '   ' → logprob: -2.088188648223877
    4. '       ' → logprob: -4.713188648223877
    5. ':return' → logprob: -5.713188648223877
    6. '==' → logprob: -7.713188648223877
    7. ' :' → logprob: -7.963188648223877
    8. ' ==' → logprob: -7.963188648223877
    9. '=' → logprob: -7.963188648223877
    10. '  ' → logprob: -8.338188171386719

Token 810: '       ' (ID: 309)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.48858773708343506
    2. 'return' → logprob: -1.113587737083435
    3. ' return' → logprob: -3.2385878562927246
    4. ' s' → logprob: -4.113587856292725
    5. '   ' → logprob: -5.988587856292725
    6. ' ' → logprob: -10.863587379455566
    7. '```' → logprob: -12.113587379455566
    8. '  ' → logprob: -12.238587379455566
    9. '       ' → logprob: -12.238587379455566
    10. '	return' → logprob: -12.488587379455566

Token 811: ' return' (ID: 622)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.010617274791002274
    2. ' s' → logprob: -4.760617256164551
    3. 'return' (adapté à ' return') → logprob: -6.260617256164551
    4. ' return' → logprob: -9.38561725616455
    5. '   ' → logprob: -12.26061725616455
    6. '(s' → logprob: -14.13561725616455
    7. ' ' → logprob: -14.63561725616455
    8. '_s' → logprob: -15.88561725616455
    9. '	s' → logprob: -16.135618209838867
    10. '{s' → logprob: -16.135618209838867

Token 812: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0012501158053055406
    2. ' s' → logprob: -6.751250267028809
    3. '(s' → logprob: -9.501250267028809
    4. '(' → logprob: -13.126250267028809
    5. ' (' → logprob: -13.251250267028809
    6. '   ' → logprob: -14.126250267028809
    7. '_s' → logprob: -15.251250267028809
    8. '	s' → logprob: -16.001249313354492
    9. ' ' → logprob: -16.251249313354492
    10. '{s' → logprob: -16.876249313354492

Token 813: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008623912930488586
    2. 's' → logprob: -4.758624076843262
    3. '(s' → logprob: -12.008624076843262
    4. ' s' → logprob: -12.758624076843262
    5. '`s' → logprob: -16.633623123168945
    6. '=s' → logprob: -17.383623123168945
    7. ' ' → logprob: -17.508623123168945
    8. 'xor' → logprob: -17.633623123168945
    9. '{s' → logprob: -17.758623123168945
    10. 'w' → logprob: -18.008623123168945

Token 814: ' ^' (ID: 7602)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.39935070276260376
    2. ' ^' → logprob: -1.149350643157959
    3. 's' → logprob: -4.524350643157959
    4. ' s' → logprob: -7.024350643157959
    5. '1' → logprob: -7.899350643157959
    6. ' ' → logprob: -9.024351119995117
    7. '^(' → logprob: -10.149351119995117
    8. '_' → logprob: -11.024351119995117
    9. '&' → logprob: -11.149351119995117
    10. '^{' → logprob: -11.274351119995117

Token 815: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0019289902411401272
    2. ' s' → logprob: -6.251928806304932
    3. ' ' → logprob: -15.37692928314209
    4. '   ' → logprob: -17.001928329467773
    5. '<|end|>' → logprob: -17.376928329467773
    6. '  ' → logprob: -18.376928329467773
    7. '	s' → logprob: -18.501928329467773
    8. '(s' → logprob: -18.626928329467773
    9. '2' → logprob: -19.251928329467773
    10. '32' → logprob: -19.501928329467773

Token 816: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3132808804512024
    2. 's' → logprob: -1.3132808208465576
    3. ' s' → logprob: -11.438281059265137
    4. ' ' → logprob: -11.813281059265137
    5. '```' → logprob: -14.688281059265137
    6. '1' → logprob: -15.563281059265137
    7. '   ' → logprob: -16.43828010559082
    8. '#' → logprob: -17.18828010559082
    9. 'op' → logprob: -17.18828010559082
    10. '(s' → logprob: -17.43828010559082

Token 817: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 818: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 819: ' else' (ID: 1203)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.12922902405261993
    2. '   ' → logprob: -2.5042290687561035
    3. 'else' (adapté à ' else') → logprob: -4.0042290687561035
    4. 'def' → logprob: -4.2542290687561035
    5. '#' → logprob: -6.0042290687561035
    6. ' ' → logprob: -6.2542290687561035
    7. ' return' → logprob: -6.8792290687561035
    8. ')' → logprob: -7.6292290687561035
    9. '.' → logprob: -8.379228591918945
    10. '    
' → logprob: -8.754228591918945

Token 820: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03630157932639122
    2. ':' → logprob: -3.786301612854004
    3. '       ' → logprob: -5.161301612854004
    4. 'raise' → logprob: -5.286301612854004
    5. ' raise' → logprob: -6.911301612854004
    6. '	raise' → logprob: -8.036301612854004
    7. 'None' → logprob: -8.411301612854004
    8. ':
' → logprob: -8.661301612854004
    9. ' None' → logprob: -9.036301612854004
    10. ':return' → logprob: -9.286301612854004

Token 821: '       ' (ID: 309)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.2791818082332611
    2. '0' → logprob: -1.5291818380355835
    3. '       ' → logprob: -4.279181957244873
    4. '   ' → logprob: -4.654181957244873
    5. ' None' → logprob: -5.904181957244873
    6. 'return' → logprob: -7.279181957244873
    7. 'raise' → logprob: -10.404181480407715
    8. '           ' → logprob: -11.029181480407715
    9. '1' → logprob: -11.029181480407715
    10. '(None' → logprob: -11.529181480407715

Token 822: ' return' (ID: 622)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.18599532544612885
    2. '0' → logprob: -1.93599534034729
    3. 'return' (adapté à ' return') → logprob: -3.68599534034729
    4. 'raise' → logprob: -8.435995101928711
    5. ' None' → logprob: -9.060995101928711
    6. '   ' → logprob: -10.435995101928711
    7. 'assert' → logprob: -12.810995101928711
    8. 'pass' → logprob: -13.435995101928711
    9. ' return' → logprob: -13.685995101928711
    10. '1' → logprob: -14.435995101928711

Token 823: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029774215072393417
    2. 'None' → logprob: -3.5297741889953613
    3. ' None' → logprob: -11.15477466583252
    4. 's' → logprob: -12.27977466583252
    5. ' ' → logprob: -12.52977466583252
    6. '   ' → logprob: -14.27977466583252
    7. 'set' → logprob: -16.404773712158203
    8. '-' → logprob: -16.904773712158203
    9. 'none' → logprob: -16.904773712158203
    10. 'False' → logprob: -16.904773712158203

Token 824: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10060678422451019
    2. 'None' → logprob: -2.350606679916382
    3. 's' → logprob: -8.350606918334961
    4. 'set' → logprob: -9.475606918334961
    5. '-' → logprob: -9.725606918334961
    6. ' None' → logprob: -10.725606918334961
    7. ' ' → logprob: -12.975606918334961
    8. '   ' → logprob: -14.475606918334961
    9. 'none' → logprob: -14.600606918334961
    10. '(None' → logprob: -14.725606918334961

Token 825: ' ' (ID: 220)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007453995291143656
    2. 'from' → logprob: -5.007453918457031
    3. 'import' → logprob: -7.882453918457031
    4. 'memo' → logprob: -8.632453918457031
    5. '#' → logprob: -8.882453918457031
    6. '```' → logprob: -10.757453918457031
    7. 'dp' → logprob: -11.882453918457031
    8. '
' → logprob: -12.882453918457031
    9. 'cache' → logprob: -13.257453918457031
    10. 'mem' → logprob: -13.382453918457031

Token 826: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.025069763883948326
    2. 'from' → logprob: -3.9000697135925293
    3. 'memo' → logprob: -5.650069713592529
    4. 'import' → logprob: -7.025069713592529
    5. '#' → logprob: -9.650070190429688
    6. 'dp' → logprob: -10.525070190429688
    7. 'mem' → logprob: -11.400070190429688
    8. 'cache' → logprob: -12.900070190429688
    9. 'MEM' → logprob: -13.900070190429688
    10. '
' → logprob: -14.150070190429688

Token 827: ' pas' (ID: 2173)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 828: ' attendu' (ID: 171331)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.8518785834312439
    2. ' None' → logprob: -1.3518786430358887
    3. ' raise' → logprob: -1.8518786430358887
    4. 'raise' → logprob: -2.8518786430358887
    5. ' valid' → logprob: -4.101878643035889
    6. 'def' → logprob: -4.226878643035889
    7. ' ' → logprob: -4.726878643035889
    8. '#' → logprob: -5.101878643035889
    9. ')' → logprob: -5.226878643035889
    10. 'valid' → logprob: -5.351878643035889

Token 829: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0024684055242687464
    2. 'memo' → logprob: -6.752468585968018
    3. 'from' → logprob: -7.377468585968018
    4. 'import' → logprob: -7.377468585968018
    5. '#' → logprob: -11.00246810913086
    6. 'mem' → logprob: -11.62746810913086
    7. '```' → logprob: -11.62746810913086
    8. 'cache' → logprob: -12.37746810913086
    9. 'dp' → logprob: -12.50246810913086
    10. 'memory' → logprob: -13.75246810913086

Token 830: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.8550976164988242e-05
    2. 'from' → logprob: -11.000018119812012
    3. ' def' → logprob: -14.500018119812012
    4. '#' → logprob: -14.750018119812012
    5. 'import' → logprob: -14.750018119812012
    6. '```' → logprob: -16.375019073486328
    7. ':def' → logprob: -16.625019073486328
    8. '@' → logprob: -16.625019073486328
    9. '(' → logprob: -16.750019073486328
    10. 'ndef' → logprob: -17.375019073486328

Token 831: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.007796602323651314
    2. 'dfs' → logprob: -5.007796764373779
    3. 'solve' → logprob: -7.132796764373779
    4. 'dp' → logprob: -9.382796287536621
    5. 'memo' → logprob: -9.757796287536621
    6. 'ways' → logprob: -10.257796287536621
    7. 'compute' → logprob: -10.257796287536621
    8. 'main' → logprob: -10.507796287536621
    9. ' count' → logprob: -10.632796287536621
    10. ' dfs' → logprob: -12.007796287536621

Token 832: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00039051592466421425
    2. '_paths' → logprob: -9.50039005279541
    3. '_arr' → logprob: -10.00039005279541
    4. 'ways' → logprob: -10.00039005279541
    5. '_nodes' → logprob: -10.25039005279541
    6. '(node' → logprob: -10.25039005279541
    7. '_methods' → logprob: -10.75039005279541
    8. 'Ways' → logprob: -10.87539005279541
    9. '_t' → logprob: -11.37539005279541
    10. '_counts' → logprob: -11.75039005279541

Token 833: 'ways' (ID: 2771)
  Prédit: 'ways'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.00015824666479602456
    2. 'sub' → logprob: -10.250158309936523
    3. 'config' → logprob: -10.250158309936523
    4. 'sets' → logprob: -10.625158309936523
    5. 'configs' → logprob: -10.625158309936523
    6. 'way' → logprob: -12.000158309936523
    7. 'express' → logprob: -12.125158309936523
    8. 'forms' → logprob: -12.250158309936523
    9. 'assign' → logprob: -12.375158309936523
    10. 'patterns' → logprob: -13.000158309936523

Token 834: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.075981505215168
    2. '(root' → logprob: -2.825981616973877
    3. '(tree' → logprob: -4.325981616973877
    4. '(' → logprob: -7.325981616973877
    5. '(n' → logprob: -11.075981140136719
    6. '(t' → logprob: -11.450981140136719
    7. ' (' → logprob: -12.075981140136719
    8. '(nodes' → logprob: -13.825981140136719
    9. '(Tree' → logprob: -13.825981140136719
    10. '(parent' → logprob: -13.950981140136719

Token 835: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.031216345727443695
    2. '):' → logprob: -3.7812163829803467
    3. ',node' → logprob: -4.906216144561768
    4. '(node' → logprob: -7.906216144561768
    5. '):
' → logprob: -9.156216621398926
    6. ',n' → logprob: -10.531216621398926
    7. ' ,' → logprob: -10.906216621398926
    8. ')' → logprob: -11.906216621398926
    9. '   ' → logprob: -12.281216621398926
    10. ' ):' → logprob: -12.781216621398926

Token 836: ' subsets' (ID: 165377)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.0012005893513560295
    2. ' memo' → logprob: -6.7512006759643555
    3. ')' → logprob: -11.126200675964355
    4. 'mem' → logprob: -12.001200675964355
    5. '   ' → logprob: -12.626200675964355
    6. ' ' → logprob: -14.126200675964355
    7. 'm' → logprob: -14.251200675964355
    8. 'mask' → logprob: -14.501200675964355
    9. 'memory' → logprob: -14.501200675964355
    10. '):
' → logprob: -14.626200675964355

Token 837: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22749978303909302
    2. '):' → logprob: -1.6024997234344482
    3. '):
' → logprob: -6.227499961853027
    4. ')' → logprob: -10.352499961853027
    5. ' ,' → logprob: -11.352499961853027
    6. ' ):' → logprob: -11.352499961853027
    7. '   ' → logprob: -11.477499961853027
    8. '=None' → logprob: -11.727499961853027
    9. ':' → logprob: -11.977499961853027
    10. ',m' → logprob: -12.102499961853027

Token 838: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -9.65101717156358e-05
    2. ' memo' → logprob: -9.250096321105957
    3. 'cache' → logprob: -16.250097274780273
    4. 'mem' → logprob: -16.375097274780273
    5. 'm' → logprob: -16.750097274780273
    6. '   ' → logprob: -17.375097274780273
    7. 'memory' → logprob: -18.125097274780273
    8. '           ' → logprob: -18.875097274780273
    9. ' ' → logprob: -19.375097274780273
    10. ')' → logprob: -19.375097274780273

Token 839: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04024074971675873
    2. '):
' → logprob: -3.66524076461792
    3. ',' → logprob: -4.29024076461792
    4. ',node' → logprob: -10.165240287780762
    5. '(node' → logprob: -10.415240287780762
    6. ')' → logprob: -10.540240287780762
    7. '):
' → logprob: -11.540240287780762
    8. ' ):' → logprob: -11.540240287780762
    9. '=None' → logprob: -11.665240287780762
    10. '=' → logprob: -12.040240287780762

Token 840: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003147280658595264
    2. ' if' → logprob: -8.250314712524414
    3. '```' → logprob: -10.750314712524414
    4. '	if' → logprob: -11.125314712524414
    5. ':' → logprob: -12.375314712524414
    6. 'if' → logprob: -12.500314712524414
    7. '   ' → logprob: -12.750314712524414
    8. '\t' → logprob: -13.375314712524414
    9. '[' → logprob: -13.875314712524414
    10. ' indentation' → logprob: -14.125314712524414

Token 841: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1393190175294876
    2. '   ' → logprob: -2.3893189430236816
    3. ' if' → logprob: -3.3893189430236816
    4. 'key' → logprob: -5.514318943023682
    5. ' key' → logprob: -7.764318943023682
    6. 'indent' → logprob: -9.01431941986084
    7. '	if' → logprob: -11.01431941986084
    8. '       ' → logprob: -11.63931941986084
    9. '    
' → logprob: -11.88931941986084
    10. ' ' → logprob: -12.38931941986084

Token 842: ' node' (ID: 4596)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0790899395942688
    2. 'key' → logprob: -2.579089879989624
    3. '   ' → logprob: -8.579090118408203
    4. ' if' → logprob: -11.954090118408203
    5. 'def' → logprob: -13.079090118408203
    6. ' key' → logprob: -13.079090118408203
    7. '#' → logprob: -14.454090118408203
    8. 'import' → logprob: -15.329090118408203
    9. 'from' → logprob: -15.329090118408203
    10. '       ' → logprob: -15.704090118408203

Token 843: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1823471784591675
    2. ':' → logprob: -1.9323471784591675
    3. ' =' → logprob: -1.9323471784591675
    4. '):' → logprob: -2.182347297668457
    5. '.type' → logprob: -2.307347297668457
    6. ',' → logprob: -3.307347297668457
    7. '   ' → logprob: -3.432347297668457
    8. ' is' → logprob: -3.682347297668457
    9. 'if' → logprob: -3.807347297668457
    10. 'type' → logprob: -3.932347297668457

Token 844: ' Tree' (ID: 14224)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.040904559195041656
    2. ' node' → logprob: -3.2909045219421387
    3. 'None' → logprob: -6.290904521942139
    4. '   ' → logprob: -7.165904521942139
    5. ' None' → logprob: -9.540904998779297
    6. '	node' → logprob: -10.040904998779297
    7. 'if' → logprob: -10.415904998779297
    8. 'Tree' → logprob: -10.540904998779297
    9. '(node' → logprob: -10.915904998779297
    10. ')' → logprob: -11.790904998779297

Token 845: 'Node' (ID: 2701)
  Prédit: 'Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.14271660149097443
    2. ')' → logprob: -3.017716646194458
    3. '.type' → logprob: -4.142716407775879
    4. '   ' → logprob: -4.267716407775879
    5. '_node' → logprob: -4.392716407775879
    6. 'type' → logprob: -4.642716407775879
    7. '.' → logprob: -4.767716407775879
    8. 'node' → logprob: -4.767716407775879
    9. 'Type' → logprob: -5.767716407775879
    10. '._' → logprob: -6.142716407775879

Token 846: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5716798901557922
    2. ':' → logprob: -1.4466798305511475
    3. ',' → logprob: -2.3216798305511475
    4. 'if' → logprob: -2.6966798305511475
    5. ' if' → logprob: -4.321680068969727
    6. '):' → logprob: -4.946680068969727
    7. ':
' → logprob: -5.821680068969727
    8. '):
' → logprob: -5.946680068969727
    9. '.' → logprob: -6.446680068969727
    10. ' =' → logprob: -6.821680068969727

Token 847: ' subsets' (ID: 165377)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.30422866344451904
    2. '   ' → logprob: -1.929228663444519
    3. 'key' → logprob: -2.9292287826538086
    4. 'memo' → logprob: -3.6792287826538086
    5. 'mask' → logprob: -4.554228782653809
    6. 'subset' → logprob: -4.554228782653809
    7. '):
' → logprob: -5.804228782653809
    8. '       ' → logprob: -6.054228782653809
    9. ' if' → logprob: -6.179228782653809
    10. 'ways' → logprob: -6.429228782653809

Token 848: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20535653829574585
    2. '   ' → logprob: -2.3303565979003906
    3. ':' → logprob: -3.0803565979003906
    4. '):' → logprob: -3.8303565979003906
    5. '):
' → logprob: -4.705356597900391
    6. 'if' → logprob: -4.955356597900391
    7. ' if' → logprob: -6.955356597900391
    8. 'def' → logprob: -7.080356597900391
    9. ')' → logprob: -7.205356597900391
    10. ':
' → logprob: -7.955356597900391

Token 849: ' list' (ID: 1562)
  Prédit: 'dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dict' → logprob: -0.08554426580667496
    2. 'list' → logprob: -2.9605443477630615
    3. '{' → logprob: -4.460544109344482
    4. 'set' → logprob: -4.960544109344482
    5. 'sub' → logprob: -5.335544109344482
    6. 'List' → logprob: -5.710544109344482
    7. ' dict' → logprob: -6.710544109344482
    8. 'int' → logprob: -7.460544109344482
    9. 'Dict' → logprob: -8.33554458618164
    10. 'fro' → logprob: -8.46054458618164

Token 850: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4002619981765747
    2. '[int' → logprob: -1.2752619981765747
    3. '   ' → logprob: -4.275261878967285
    4. '):' → logprob: -4.400261878967285
    5. '[node' → logprob: -5.025261878967285
    6. '[' → logprob: -5.150261878967285
    7. ')' → logprob: -5.275261878967285
    8. '):
' → logprob: -6.650261878967285
    9. ':' → logprob: -6.775261878967285
    10. '<|end|>' → logprob: -7.275261878967285

Token 851: ' sets' (ID: 11982)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01292266882956028
    2. 'set' → logprob: -4.387922763824463
    3. 'sets' → logprob: -8.262922286987305
    4. 'dict' → logprob: -9.262922286987305
    5. 'ints' → logprob: -10.637922286987305
    6. '[int' → logprob: -11.637922286987305
    7. 'fro' → logprob: -11.637922286987305
    8. '4' → logprob: -11.762922286987305
    9. 'list' → logprob: -12.512922286987305
    10. 'tuple' → logprob: -12.637922286987305

Token 852: ' bits' (ID: 18189)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24009397625923157
    2. '   ' → logprob: -1.6150939464569092
    3. '):
' → logprob: -5.240094184875488
    4. ')' → logprob: -5.740094184875488
    5. ',
' → logprob: -6.240094184875488
    6. '[int' → logprob: -6.240094184875488
    7. '
' → logprob: -7.115094184875488
    8. '{' → logprob: -8.365094184875488
    9. '[' → logprob: -8.490094184875488
    10. ':' → logprob: -9.115094184875488

Token 853: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.27235621213912964
    2. '   ' → logprob: -1.8973562717437744
    3. ':' → logprob: -3.0223562717437744
    4. '[' → logprob: -4.397356033325195
    5. ',
' → logprob: -5.272356033325195
    6. ':
' → logprob: -5.397356033325195
    7. '):' → logprob: -5.397356033325195
    8. ')' → logprob: -5.647356033325195
    9. '):
' → logprob: -6.147356033325195
    10. ' if' → logprob: -6.522356033325195

Token 854: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.09286075830459595
    2. '   ' → logprob: -3.092860698699951
    3. 'if' → logprob: -3.842860698699951
    4. 'key' → logprob: -4.467860698699951
    5. 'ways' → logprob: -5.717860698699951
    6. 'result' → logprob: -5.967860698699951
    7. ' memo' → logprob: -7.217860698699951
    8. '       ' → logprob: -7.342860698699951
    9. 'mask' → logprob: -7.342860698699951
    10. 'mem' → logprob: -7.967860698699951

Token 855: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5249781608581543
    2. ',' → logprob: -1.2749781608581543
    3. ' =' → logprob: -2.8999781608581543
    4. '   ' → logprob: -3.1499781608581543
    5. '[node' → logprob: -4.774978160858154
    6. ')' → logprob: -5.649978160858154
    7. ':' → logprob: -6.024978160858154
    8. '[(' → logprob: -6.149978160858154
    9. '.setdefault' → logprob: -6.149978160858154
    10. '[' → logprob: -6.274978160858154

Token 856: ' dict' (ID: 11878)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.01292608492076397
    2. 'dict' → logprob: -4.51292610168457
    3. '{' → logprob: -6.76292610168457
    4. '{})' → logprob: -8.76292610168457
    5. '{}
' → logprob: -8.88792610168457
    6. ' {}' → logprob: -9.01292610168457
    7. '   ' → logprob: -9.13792610168457
    8. '{},' → logprob: -9.38792610168457
    9. ' dict' → logprob: -10.13792610168457
    10. '(dict' → logprob: -11.38792610168457

Token 857: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6493750214576721
    2. 'if' → logprob: -1.2743749618530273
    3. '(node' → logprob: -3.0243749618530273
    4. ':' → logprob: -3.3993749618530273
    5. ' if' → logprob: -4.024374961853027
    6. ',' → logprob: -4.024374961853027
    7. '{' → logprob: -4.024374961853027
    8. '[(' → logprob: -4.649374961853027
    9. '[' → logprob: -5.024374961853027
    10. '(key' → logprob: -5.274374961853027

Token 858: 'node' (ID: 7005)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.5786142349243164
    2. 'node' → logprob: -0.8286142349243164
    3. ' (' → logprob: -6.703614234924316
    4. 'id' → logprob: -7.578614234924316
    5. ')' → logprob: -7.953614234924316
    6. ' node' → logprob: -7.953614234924316
    7. '[node' → logprob: -9.453614234924316
    8. 'key' → logprob: -9.703614234924316
    9. '   ' → logprob: -10.453614234924316
    10. '(' → logprob: -11.078614234924316

Token 859: '_id' (ID: 1537)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0029987392481416464
    2. '<|end|>' → logprob: -6.2529988288879395
    3. ')' → logprob: -7.7529988288879395
    4. ' ,' → logprob: -8.502998352050781
    5. ',node' → logprob: -8.877998352050781
    6. ',key' → logprob: -10.127998352050781
    7. '<|end|>' → logprob: -10.252998352050781
    8. ',None' → logprob: -10.627998352050781
    9. ',
' → logprob: -10.752998352050781
    10. '[' → logprob: -10.877998352050781

Token 860: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0035462589003145695
    2. ',node' → logprob: -5.753546237945557
    3. ')' → logprob: -8.878546714782715
    4. ',id' → logprob: -9.628546714782715
    5. '(node' → logprob: -9.878546714782715
    6. ' ,' → logprob: -10.128546714782715
    7. 'id' → logprob: -11.253546714782715
    8. '[node' → logprob: -11.628546714782715
    9. ',
' → logprob: -11.878546714782715
    10. '),' → logprob: -12.128546714782715

Token 861: ' set' (ID: 920)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.9877916574478149
    2. 'fro' → logprob: -1.612791657447815
    3. 'sub' → logprob: -2.2377915382385254
    4. ''' → logprob: -2.2377915382385254
    5. 'subset' → logprob: -2.4877915382385254
    6. '0' → logprob: -3.9877915382385254
    7. '(' → logprob: -4.112791538238525
    8. 's' → logprob: -4.237791538238525
    9. ')' → logprob: -4.362791538238525
    10. '15' → logprob: -4.362791538238525

Token 862: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04961565136909485
    2. ')' → logprob: -4.049615859985352
    3. '),' → logprob: -4.549615859985352
    4. '_mask' → logprob: -5.049615859985352
    5. ',node' → logprob: -5.049615859985352
    6. '_id' → logprob: -6.424615859985352
    7. '(node' → logprob: -6.549615859985352
    8. 'mask' → logprob: -6.924615859985352
    9. '[node' → logprob: -7.174615859985352
    10. 'id' → logprob: -7.299615859985352

Token 863: ' ->' (ID: 2747)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8593807220458984
    2. ',' → logprob: -1.4843807220458984
    3. ' =' → logprob: -2.2343807220458984
    4. '):' → logprob: -2.3593807220458984
    5. ')' → logprob: -2.8593807220458984
    6. ':' → logprob: -3.7343807220458984
    7. '=' → logprob: -4.609380722045898
    8. '[' → logprob: -4.609380722045898
    9. '):
' → logprob: -4.609380722045898
    10. '.setdefault' → logprob: -5.234380722045898

Token 864: ' nombre' (ID: 9733)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00031890018726699054
    2. 'count' → logprob: -9.25031852722168
    3. '[int' → logprob: -9.62531852722168
    4. '...' → logprob: -10.25031852722168
    5. 'dict' → logprob: -10.75031852722168
    6. 'None' → logprob: -10.75031852722168
    7. ' int' → logprob: -10.75031852722168
    8. '(int' → logprob: -11.50031852722168
    9. 'number' → logprob: -11.62531852722168
    10. '<int' → logprob: -11.75031852722168

Token 865: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4912185072898865
    2. '   ' → logprob: -1.3662185668945312
    3. '):' → logprob: -2.7412185668945312
    4. ':' → logprob: -3.8662185668945312
    5. '(node' → logprob: -4.116218566894531
    6. '_id' → logprob: -5.116218566894531
    7. ' =' → logprob: -5.616218566894531
    8. ')' → logprob: -5.616218566894531
    9. '):
' → logprob: -5.616218566894531
    10. '_node' → logprob: -6.616218566894531

Token 866: ' façons' (ID: 165958)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -6.0033853515051305e-05
    2. ' ways' → logprob: -10.625060081481934
    3. '1' → logprob: -11.000060081481934
    4. '_' → logprob: -11.000060081481934
    5. 'way' → logprob: -14.125060081481934
    6. '```' → logprob: -14.250060081481934
    7. ')' → logprob: -14.875060081481934
    8. '0' → logprob: -16.250059127807617
    9. 'WAYS' → logprob: -16.250059127807617
    10. ' façons' → logprob: -16.750059127807617

Token 867: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0902068093419075
    2. ':' → logprob: -2.7152068614959717
    3. '(' → logprob: -5.590206623077393
    4. 'if' → logprob: -5.715206623077393
    5. '):' → logprob: -5.840206623077393
    6. '():' → logprob: -5.840206623077393
    7. '(token' → logprob: -6.215206623077393
    8. ' if' → logprob: -6.840206623077393
    9. 'token' → logprob: -7.215206623077393
    10. '[' → logprob: -7.340206623077393

Token 868: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02195495180785656
    2. ':' → logprob: -4.0219550132751465
    3. '(' → logprob: -6.1469550132751465
    4. '):' → logprob: -7.5219550132751465
    5. ')' → logprob: -8.146954536437988
    6. ' if' → logprob: -8.896954536437988
    7. ',' → logprob: -9.021954536437988
    8. 'if' → logprob: -9.646954536437988
    9. '(token' → logprob: -9.771954536437988
    10. '(key' → logprob: -9.896954536437988

Token 869: ' #' (ID: 1069)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.09635866433382034
    2. 'if' → logprob: -3.0963587760925293
    3. '   ' → logprob: -3.3463587760925293
    4. 'node' → logprob: -5.096358776092529
    5. ' key' → logprob: -5.346358776092529
    6. ' if' → logprob: -8.096358299255371
    7. 'id' → logprob: -8.721358299255371
    8. 'def' → logprob: -10.596358299255371
    9. 'nid' → logprob: -11.346358299255371
    10. '	key' → logprob: -11.471358299255371

Token 870: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7032771706581116
    2. 'if' → logprob: -0.9532771706581116
    3. 'key' → logprob: -2.453277111053467
    4. ' if' → logprob: -3.703277111053467
    5. ' key' → logprob: -4.828277111053467
    6. 'node' → logprob: -7.953277111053467
    7. 'def' → logprob: -8.953277587890625
    8. 'id' → logprob: -9.203277587890625
    9. ')' → logprob: -9.578277587890625
    10. 'token' → logprob: -10.203277587890625

Token 871: ' attrib' (ID: 72186)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2601358890533447
    2. ' if' → logprob: -1.6351358890533447
    3. '   ' → logprob: -3.6351358890533447
    4. 'id' → logprob: -5.885135650634766
    5. 'key' → logprob: -6.260135650634766
    6. 'import' → logprob: -6.760135650634766
    7. 'def' → logprob: -7.510135650634766
    8. ' key' → logprob: -7.885135650634766
    9. ' id' → logprob: -8.260135650634766
    10. '_id' → logprob: -8.385135650634766

Token 872: 'ue' (ID: 466)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.2593887746334076
    2. 'ue' → logprob: -1.50938880443573
    3. 'ute' → logprob: -5.5093889236450195
    4. '   ' → logprob: -7.2593889236450195
    5. '=' → logprob: -7.3843889236450195
    6. 'ué' → logprob: -7.7593889236450195
    7. 'uire' → logprob: -8.00938892364502
    8. 'uer' → logprob: -8.38438892364502
    9. 'ues' → logprob: -8.50938892364502
    10. 'uez' → logprob: -8.63438892364502

Token 873: ' un' (ID: 537)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.4878370463848114
    2. 'node' → logprob: -1.3628370761871338
    3. '   ' → logprob: -3.487837076187134
    4. ' node' → logprob: -3.862837076187134
    5. '[node' → logprob: -3.862837076187134
    6. 'id' → logprob: -4.237836837768555
    7. ' =' → logprob: -4.487836837768555
    8. 'None' → logprob: -4.737836837768555
    9. '(None' → logprob: -5.737836837768555
    10. ' None' → logprob: -5.862836837768555

Token 874: ' id' (ID: 1211)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.449850857257843
    2. 'def' → logprob: -2.5748507976531982
    3. 'node' → logprob: -2.8248507976531982
    4. 'unique' → logprob: -2.8248507976531982
    5. ' if' → logprob: -2.9498507976531982
    6. 'id' → logprob: -3.1998507976531982
    7. ' unique' → logprob: -3.4498507976531982
    8. 'key' → logprob: -4.449851036071777
    9. '_id' → logprob: -4.824851036071777
    10. ' node' → logprob: -5.449851036071777

Token 875: ' unique' (ID: 5746)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22980202734470367
    2. '(node' → logprob: -2.104802131652832
    3. '=' → logprob: -3.104802131652832
    4. 'id' → logprob: -4.354802131652832
    5. '_' → logprob: -4.854802131652832
    6. '=node' → logprob: -5.354802131652832
    7. ':' → logprob: -5.854802131652832
    8. '[node' → logprob: -6.479802131652832
    9. '   ' → logprob: -6.729802131652832
    10. 'node' → logprob: -6.854802131652832

Token 876: ' à' (ID: 1221)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.3173661530017853
    2. ' =' → logprob: -1.817366123199463
    3. '=' → logprob: -2.942366123199463
    4. '_' → logprob: -4.692366123199463
    5. '(' → logprob: -4.942366123199463
    6. '=node' → logprob: -4.942366123199463
    7. ':' → logprob: -5.192366123199463
    8. 'for' → logprob: -5.192366123199463
    9. ',' → logprob: -5.442366123199463
    10. 'id' → logprob: -5.692366123199463

Token 877: ' chaque' (ID: 21194)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.00494590075686574
    2. 'id' → logprob: -5.504945755004883
    3. '(node' → logprob: -7.379945755004883
    4. ' node' → logprob: -8.379945755004883
    5. '(id' → logprob: -12.629945755004883
    6. ' id' → logprob: -12.879945755004883
    7. '
' → logprob: -13.379945755004883
    8. '(' → logprob: -13.629945755004883
    9. ' (' → logprob: -13.879945755004883
    10. '   ' → logprob: -14.004945755004883

Token 878: ' noe' (ID: 49921)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.2394968867301941
    2. ' node' → logprob: -1.6144969463348389
    3. 'id' → logprob: -4.98949670791626
    4. '(node' → logprob: -5.73949670791626
    5. ' id' → logprob: -6.48949670791626
    6. ' (' → logprob: -7.36449670791626
    7. 'token' → logprob: -7.48949670791626
    8. '   ' → logprob: -8.114497184753418
    9. '(' → logprob: -8.489497184753418
    10. 'n' → logprob: -8.864497184753418

Token 879: 'ud' (ID: 527)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4709625840187073
    2. 'de' → logprob: -1.3459625244140625
    3. 'd' → logprob: -2.8459625244140625
    4. 'w' → logprob: -4.2209625244140625
    5. '.' → logprob: -5.0959625244140625
    6. ':' → logprob: -5.0959625244140625
    7. '\' → logprob: -5.5959625244140625
    8. '   ' → logprob: -5.9709625244140625
    9. ' ' → logprob: -6.0959625244140625
    10. ')' → logprob: -6.2209625244140625

Token 880: ' afin' (ID: 22217)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.115199327468872
    2. ':' → logprob: -1.615199327468872
    3. 'def' → logprob: -2.115199327468872
    4. 'if' → logprob: -2.240199327468872
    5. ' =' → logprob: -2.490199327468872
    6. ' if' → logprob: -2.490199327468872
    7. '
' → logprob: -3.490199327468872
    8. 'import' → logprob: -4.615199089050293
    9. ',' → logprob: -5.365199089050293
    10. 'token' → logprob: -5.490199089050293

Token 881: ' d' (ID: 272)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.6253703236579895
    2. 'node' → logprob: -1.7503702640533447
    3. 'not' → logprob: -1.7503702640533447
    4. ' not' → logprob: -2.7503702640533447
    5. '(node' → logprob: -4.125370502471924
    6. ' node' → logprob: -4.250370502471924
    7. ' id' → logprob: -4.625370502471924
    8. '   ' → logprob: -4.875370502471924
    9. 'to' → logprob: -6.375370502471924
    10. ' to' → logprob: -7.125370502471924

Token 882: ''utiliser' (ID: 133355)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.3812791705131531
    2. ' id' → logprob: -2.756279230117798
    3. 'def' → logprob: -2.881279230117798
    4. '   ' → logprob: -2.881279230117798
    5. 'node' → logprob: -3.006279230117798
    6. '(node' → logprob: -3.381279230117798
    7. ' node' → logprob: -3.881279230117798
    8. '(id' → logprob: -4.631278991699219
    9. '<|end|>' → logprob: -5.256278991699219
    10. 'get' → logprob: -5.506278991699219

Token 883: ' memo' (ID: 46393)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.17602017521858215
    2. 'node' → logprob: -2.0510201454162598
    3. '(node' → logprob: -3.6760201454162598
    4. '(id' → logprob: -5.05102014541626
    5. '(' → logprob: -7.67602014541626
    6. ' id' → logprob: -8.301020622253418
    7. ' (' → logprob: -8.551020622253418
    8. ' node' → logprob: -9.426020622253418
    9. 'hash' → logprob: -10.801020622253418
    10. '   ' → logprob: -11.176020622253418

Token 884: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.36303237080574036
    2. '   ' → logprob: -1.363032341003418
    3. ' if' → logprob: -4.863032341003418
    4. ' :' → logprob: -4.863032341003418
    5. ':
' → logprob: -4.988032341003418
    6. 'if' → logprob: -5.113032341003418
    7. '.' → logprob: -5.113032341003418
    8. 'import' → logprob: -5.863032341003418
    9. 'def' → logprob: -5.988032341003418
    10. ',' → logprob: -6.113032341003418

Token 885: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1305154263973236
    2. ':' → logprob: -2.1305153369903564
    3. ' :' → logprob: -7.6305155754089355
    4. '[' → logprob: -7.7555155754089355
    5. ' if' → logprob: -7.8805155754089355
    6. ')' → logprob: -8.130515098571777
    7. '{' → logprob: -8.505515098571777
    8. '\t' → logprob: -8.505515098571777
    9. ',' → logprob: -8.630515098571777
    10. '):' → logprob: -8.755515098571777

Token 886: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05333613604307175
    2. ' if' → logprob: -3.3033361434936523
    3. '   ' → logprob: -4.303336143493652
    4. 'token' → logprob: -7.053336143493652
    5. 'id' → logprob: -8.303336143493652
    6. 'node' → logprob: -8.428336143493652
    7. '	if' → logprob: -8.803336143493652
    8. 'key' → logprob: -9.553336143493652
    9. 'stack' → logprob: -10.928336143493652
    10. '```' → logprob: -11.053336143493652

Token 887: ' Pour' (ID: 13931)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0158027745783329
    2. ' if' → logprob: -4.89080286026001
    3. '   ' → logprob: -5.01580286026001
    4. 'node' → logprob: -7.01580286026001
    5. 'id' → logprob: -8.515802383422852
    6. 'def' → logprob: -8.890802383422852
    7. 'token' → logprob: -9.140802383422852
    8. 'stack' → logprob: -9.765802383422852
    9. '```' → logprob: -10.515802383422852
    10. 'uid' → logprob: -11.015802383422852

Token 888: ' ce' (ID: 2357)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.05629183351993561
    2. 'id' → logprob: -3.0562918186187744
    3. 'leaf' → logprob: -5.9312920570373535
    4. ' node' → logprob: -6.0562920570373535
    5. 'count' → logprob: -6.8062920570373535
    6. 'not' → logprob: -7.0562920570373535
    7. 'assign' → logprob: -8.681291580200195
    8. 'memo' → logprob: -8.806291580200195
    9. ' id' → logprob: -9.056291580200195
    10. 'get' → logprob: -10.181291580200195

Token 889: ' faire' (ID: 8119)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.25688299536705017
    2. ' node' → logprob: -1.6318830251693726
    3. ' None' → logprob: -4.381883144378662
    4. 'id' → logprob: -5.006883144378662
    5. 'None' → logprob: -5.256883144378662
    6. 'not' → logprob: -6.631883144378662
    7. ' id' → logprob: -6.756883144378662
    8. 'n' → logprob: -6.756883144378662
    9. '   ' → logprob: -7.006883144378662
    10. 'if' → logprob: -7.881883144378662

Token 890: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7742390036582947
    2. ' if' → logprob: -1.6492390632629395
    3. '   ' → logprob: -1.7742390632629395
    4. 'if' → logprob: -2.3992390632629395
    5. ':
' → logprob: -3.8992390632629395
    6. ',' → logprob: -3.8992390632629395
    7. ' =' → logprob: -4.5242390632629395
    8. 'def' → logprob: -4.7742390632629395
    9. 'id' → logprob: -5.3992390632629395
    10. '):
' → logprob: -5.7742390632629395

Token 891: ' on' (ID: 402)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9005389213562012
    2. 'def' → logprob: -1.2755389213562012
    3. ' if' → logprob: -1.6505389213562012
    4. 'import' → logprob: -2.275538921356201
    5. 'pass' → logprob: -4.900538921356201
    6. '...' → logprob: -5.650538921356201
    7. 'stack' → logprob: -6.525538921356201
    8. 'from' → logprob: -6.775538921356201
    9. ' def' → logprob: -6.900538921356201
    10. 'node' → logprob: -7.025538921356201

Token 892: ' peut' (ID: 9216)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10368168354034424
    2. 'import' → logprob: -2.4786815643310547
    3. 'if' → logprob: -5.103681564331055
    4. 'count' → logprob: -6.228681564331055
    5. 'id' → logprob: -7.103681564331055
    6. 'assign' → logprob: -7.228681564331055
    7. 'needs' → logprob: -7.353681564331055
    8. 'class' → logprob: -7.478681564331055
    9. 'stack' → logprob: -7.978681564331055
    10. ' def' → logprob: -7.978681564331055

Token 893: ' définir' (ID: 131502)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6578503847122192
    2. 'count' → logprob: -1.7828503847122192
    3. 'set' → logprob: -2.2828502655029297
    4. 'assign' → logprob: -3.1578502655029297
    5. 'import' → logprob: -3.6578502655029297
    6. 'hash' → logprob: -3.6578502655029297
    7. 'id' → logprob: -3.7828502655029297
    8. 'use' → logprob: -4.15785026550293
    9. 'define' → logprob: -4.28285026550293
    10. 'attr' → logprob: -4.78285026550293

Token 894: ' une' (ID: 2463)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6533991694450378
    2. 'count' → logprob: -0.7783991694450378
    3. 'lambda' → logprob: -5.6533989906311035
    4. 'a' → logprob: -5.7783989906311035
    5. 'get' → logprob: -5.7783989906311035
    6. 'if' → logprob: -6.0283989906311035
    7. 'node' → logprob: -6.0283989906311035
    8. 'pass' → logprob: -6.6533989906311035
    9. 'set' → logprob: -6.6533989906311035
    10. 'attr' → logprob: -6.9033989906311035

Token 895: ' fonction' (ID: 17610)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0185855645686388
    2. 'counter' → logprob: -4.393585681915283
    3. 'count' → logprob: -6.143585681915283
    4. 'node' → logprob: -6.518585681915283
    5. 'global' → logprob: -7.143585681915283
    6. 'stack' → logprob: -7.643585681915283
    7. 'id' → logprob: -8.393585205078125
    8. '_counter' → logprob: -8.768585205078125
    9. 'import' → logprob: -8.893585205078125
    10. 'if' → logprob: -9.268585205078125

Token 896: ' qui' (ID: 2780)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008243747986853123
    2. '<|end|>' → logprob: -5.883243560791016
    3. 'import' → logprob: -6.508243560791016
    4. '
' → logprob: -7.383243560791016
    5. 'count' → logprob: -7.383243560791016
    6. 'node' → logprob: -7.633243560791016
    7. 'id' → logprob: -7.883243560791016
    8. 'counter' → logprob: -8.133243560791016
    9. 'from' → logprob: -8.508243560791016
    10. '_id' → logprob: -8.883243560791016

Token 897: ' gén' (ID: 15330)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3080405592918396
    2. 'assign' → logprob: -1.4330406188964844
    3. 'count' → logprob: -4.558040618896484
    4. 'id' → logprob: -5.308040618896484
    5. 'get' → logprob: -5.808040618896484
    6. 'import' → logprob: -5.933040618896484
    7. ' assigns' → logprob: -5.933040618896484
    8. 'attr' → logprob: -7.933040618896484
    9. 'attrib' → logprob: -7.933040618896484
    10. 'global' → logprob: -8.308040618896484

Token 898: 'ère' (ID: 4346)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5854510068893433
    2. 'er' → logprob: -0.8354510068893433
    3. 'node' → logprob: -5.210451126098633
    4. '_node' → logprob: -6.960451126098633
    5. 'érer' → logprob: -7.335451126098633
    6. '```' → logprob: -7.335451126098633
    7. ' node' → logprob: -7.710451126098633
    8. 'ère' → logprob: -8.210451126098633
    9. '(node' → logprob: -8.835451126098633
    10. 'enerate' → logprob: -8.960451126098633

Token 899: ' une' (ID: 2463)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6448206305503845
    2. 'node' → logprob: -1.7698206901550293
    3. 'id' → logprob: -1.8948206901550293
    4. '(node' → logprob: -3.5198206901550293
    5. 'lambda' → logprob: -3.6448206901550293
    6. 'count' → logprob: -3.8948206901550293
    7. 'unique' → logprob: -4.019820690155029
    8. 'ids' → logprob: -4.144820690155029
    9. 'next' → logprob: -4.269820690155029
    10. 'a' → logprob: -5.769820690155029

Token 900: ' id' (ID: 1211)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5138766169548035
    2. 'id' → logprob: -1.6388766765594482
    3. 'count' → logprob: -2.6388766765594482
    4. 'next' → logprob: -2.8888766765594482
    5. 'counter' → logprob: -3.3888766765594482
    6. 'unique' → logprob: -4.388876438140869
    7. 'node' → logprob: -4.638876438140869
    8. 'hash' → logprob: -4.888876438140869
    9. 'token' → logprob: -5.138876438140869
    10. 'attribute' → logprob: -6.513876438140869

Token 901: ' unique' (ID: 5746)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05440923944115639
    2. '(node' → logprob: -4.054409027099609
    3. ' =' → logprob: -4.679409027099609
    4. '=' → logprob: -5.179409027099609
    5. '<|end|>' → logprob: -5.304409027099609
    6. ':' → logprob: -5.679409027099609
    7. ')' → logprob: -5.929409027099609
    8. ' def' → logprob: -6.054409027099609
    9. '(' → logprob: -6.804409027099609
    10. '_counter' → logprob: -7.179409027099609

Token 902: ' par' (ID: 686)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13979749381542206
    2. ':' → logprob: -2.3897974491119385
    3. 'import' → logprob: -4.889797687530518
    4. ')' → logprob: -5.014797687530518
    5. '
' → logprob: -5.389797687530518
    6. ':
' → logprob: -5.764797687530518
    7. '(node' → logprob: -5.889797687530518
    8. ',' → logprob: -6.014797687530518
    9. '   ' → logprob: -6.264797687530518
    10. '):' → logprob: -6.514797687530518

Token 903: ' noe' (ID: 49921)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.03915656358003616
    2. 'id' → logprob: -3.664156675338745
    3. 'call' → logprob: -5.539156436920166
    4. ' node' → logprob: -5.664156436920166
    5. 'object' → logprob: -5.914156436920166
    6. 'def' → logprob: -6.289156436920166
    7. 'lambda' → logprob: -9.289156913757324
    8. 'int' → logprob: -9.414156913757324
    9. 'next' → logprob: -9.414156913757324
    10. '```' → logprob: -9.664156913757324

Token 904: 'ud' (ID: 527)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1008549928665161
    2. 'de' → logprob: -1.2258549928665161
    3. 'w' → logprob: -1.6008549928665161
    4. 'd' → logprob: -1.9758549928665161
    5. '```' → logprob: -4.350854873657227
    6. 'e' → logprob: -4.725854873657227
    7. 'ud' → logprob: -5.475854873657227
    8. 'u' → logprob: -6.350854873657227
    9. 'def' → logprob: -6.975854873657227
    10. ',' → logprob: -7.225854873657227

Token 905: ' basée' (ID: 153941)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06507460027933121
    2. '
' → logprob: -4.190074443817139
    3. '_id' → logprob: -4.690074443817139
    4. '   ' → logprob: -5.190074443817139
    5. 'id' → logprob: -5.565074443817139
    6. 'import' → logprob: -5.565074443817139
    7. 'if' → logprob: -5.815074443817139
    8. ':' → logprob: -5.940074443817139
    9. 'node' → logprob: -5.940074443817139
    10. ')' → logprob: -6.065074443817139

Token 906: ' sur' (ID: 1512)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.18689905107021332
    2. 'sur' → logprob: -2.311898946762085
    3. 'on' → logprob: -3.311898946762085
    4. 'import' → logprob: -4.061899185180664
    5. ' sur' → logprob: -4.561899185180664
    6. '   ' → logprob: -5.811899185180664
    7. 'def' → logprob: -6.186899185180664
    8. ' on' → logprob: -7.311899185180664
    9. ' id' → logprob: -7.561899185180664
    10. '(id' → logprob: -7.936899185180664

Token 907: ' l' (ID: 305)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'id' → logprob: -1.4855663721391466e-05
    2. ' id' → logprob: -11.750015258789062
    3. 'node' → logprob: -12.000015258789062
    4. 'object' → logprob: -14.125015258789062
    5. '(id' → logprob: -16.750015258789062
    6. 'the' → logprob: -18.000015258789062
    7. '   ' → logprob: -18.500015258789062
    8. 'obj' → logprob: -19.375015258789062
    9. '
' → logprob: -19.625015258789062
    10. 'l' → logprob: -19.875015258789062

Token 908: ''objet' (ID: 124566)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.06525050103664398
    2. ' id' → logprob: -2.8152503967285156
    3. 'node' → logprob: -6.065250396728516
    4. 'def' → logprob: -8.690250396728516
    5. '(id' → logprob: -9.190250396728516
    6. '   ' → logprob: -9.190250396728516
    7. 'f' → logprob: -9.315250396728516
    8. ' node' → logprob: -9.440250396728516
    9. ''id' → logprob: -9.440250396728516
    10. 'object' → logprob: -10.440250396728516

Token 909: ' id' (ID: 1211)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04745003208518028
    2. ':' → logprob: -4.047450065612793
    3. 'import' → logprob: -4.297450065612793
    4. '   ' → logprob: -4.922450065612793
    5. '):
' → logprob: -6.297450065612793
    6. ':
' → logprob: -6.547450065612793
    7. ' def' → logprob: -6.797450065612793
    8. '
' → logprob: -7.172450065612793
    9. '):' → logprob: -7.172450065612793
    10. '_id' → logprob: -8.297450065612793

Token 910: '()
' (ID: 1234)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.32504063844680786
    2. ':' → logprob: -1.700040578842163
    3. '   ' → logprob: -3.200040578842163
    4. ':
' → logprob: -3.950040578842163
    5. '):
' → logprob: -4.575040817260742
    6. '):' → logprob: -5.325040817260742
    7. '
' → logprob: -5.325040817260742
    8. 'import' → logprob: -5.325040817260742
    9. '(node' → logprob: -5.950040817260742
    10. ',' → logprob: -6.575040817260742

Token 911: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20993125438690186
    2. '   ' → logprob: -2.2099313735961914
    3. ':' → logprob: -2.5849313735961914
    4. 'if' → logprob: -7.209931373596191
    5. ' def' → logprob: -7.334931373596191
    6. ':
' → logprob: -7.584931373596191
    7. ' if' → logprob: -7.584931373596191
    8. '```' → logprob: -7.584931373596191
    9. 'import' → logprob: -7.834931373596191
    10. '):' → logprob: -8.084931373596191

Token 912: ' node' (ID: 4596)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03814224898815155
    2. ' if' → logprob: -4.288142204284668
    3. 'def' → logprob: -4.663142204284668
    4. 'if' → logprob: -4.913142204284668
    5. 'key' → logprob: -6.038142204284668
    6. ':' → logprob: -6.413142204284668
    7. 'node' (adapté à ' node') → logprob: -7.038142204284668
    8. ' key' → logprob: -7.288142204284668
    9. 'id' → logprob: -7.913142204284668
    10. ' node' → logprob: -8.788142204284668

Token 913: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.002483149990439415
    2. 'id' → logprob: -6.002483367919922
    3. '_key' → logprob: -12.127483367919922
    4. 'def' → logprob: -13.877483367919922
    5. 'Id' → logprob: -15.127483367919922
    6. '.id' → logprob: -15.502483367919922
    7. 'node' → logprob: -15.502483367919922
    8. '_node' → logprob: -16.002483367919922
    9. 'key' → logprob: -16.252483367919922
    10. 'import' → logprob: -16.377483367919922

Token 914: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06197518855333328
    2. ' =' → logprob: -2.8119752407073975
    3. '=node' → logprob: -12.186975479125977
    4. '=id' → logprob: -13.936975479125977
    5. '   ' → logprob: -14.186975479125977
    6. '(node' → logprob: -15.561975479125977
    7. ' ' → logprob: -15.811975479125977
    8. '=
' → logprob: -16.311975479125977
    9. ')' → logprob: -16.561975479125977
    10. ',' → logprob: -16.686975479125977

Token 915: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -6.704273118884885e-07
    2. '(id' → logprob: -14.500000953674316
    3. ' id' → logprob: -16.125
    4. '   ' → logprob: -21.5
    5. '"id' → logprob: -22.625
    6. '	id' → logprob: -22.875
    7. '$id' → logprob: -23.625
    8. '{id' → logprob: -23.625
    9. '[id' → logprob: -24.0
    10. ' ' → logprob: -24.0

Token 916: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -7.684157026233152e-05
    2. '(' → logprob: -10.125077247619629
    3. 'node' → logprob: -10.250077247619629
    4. '(
' → logprob: -14.250077247619629
    5. '[node' → logprob: -15.500077247619629
    6. ' (' → logprob: -15.750077247619629
    7. ',node' → logprob: -16.000076293945312
    8. '(token' → logprob: -16.875076293945312
    9. '=node' → logprob: -17.000076293945312
    10. ' node' → logprob: -17.000076293945312

Token 917: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007788925431668758
    2. ',' → logprob: -7.250778675079346
    3. ')
' → logprob: -10.750779151916504
    4. ' )' → logprob: -10.875779151916504
    5. '),' → logprob: -11.375779151916504
    6. '   ' → logprob: -11.500779151916504
    7. ',)' → logprob: -12.250779151916504
    8. ' ' → logprob: -14.250779151916504
    9. ',
' → logprob: -15.625779151916504
    10. '[' → logprob: -15.625779151916504

Token 918: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018339920789003372
    2. 'if' → logprob: -4.143340110778809
    3. ' if' → logprob: -6.143340110778809
    4. '    
' → logprob: -9.143340110778809
    5. 'token' → logprob: -11.518340110778809
    6. 'key' → logprob: -11.643340110778809
    7. '	if' → logprob: -11.768340110778809
    8. '```' → logprob: -12.143340110778809
    9. ')' → logprob: -12.518340110778809
    10. '
' → logprob: -12.893340110778809

Token 919: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.47566112875938416
    2. 'key' → logprob: -0.9756611585617065
    3. '   ' → logprob: -6.475661277770996
    4. ' if' → logprob: -10.475661277770996
    5. ' key' → logprob: -11.225661277770996
    6. '_key' → logprob: -14.850661277770996
    7. '	key' → logprob: -16.10066032409668
    8. '```' → logprob: -16.22566032409668
    9. 'token' → logprob: -16.85066032409668
    10. 'keys' → logprob: -16.85066032409668

Token 920: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01731071248650551
    2. 'key' → logprob: -4.267310619354248
    3. '   ' → logprob: -5.767310619354248
    4. ' if' → logprob: -11.267311096191406
    5. ' key' → logprob: -15.017311096191406
    6. '#' → logprob: -15.142311096191406
    7. '```' → logprob: -15.517311096191406
    8. 'keys' → logprob: -15.767311096191406
    9. 'memo' → logprob: -16.392311096191406
    10. 'If' → logprob: -16.642311096191406

Token 921: ' c' (ID: 274)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.024120749905705452
    2. 'node' → logprob: -4.024120807647705
    3. ' (' → logprob: -5.274120807647705
    4. ' node' → logprob: -7.149120807647705
    5. '(n' → logprob: -10.649120330810547
    6. '(' → logprob: -12.149120330810547
    7. '('' → logprob: -12.149120330810547
    8. '[node' → logprob: -12.774120330810547
    9. '   ' → logprob: -13.149120330810547
    10. ' ' → logprob: -13.149120330810547

Token 922: ''est' (ID: 6616)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.13467784225940704
    2. '_id' → logprob: -2.2596778869628906
    3. '(node' → logprob: -4.384677886962891
    4. '_node' → logprob: -5.384677886962891
    5. 'ode' → logprob: -6.509677886962891
    6. 'id' → logprob: -6.634677886962891
    7. ' node' → logprob: -7.509677886962891
    8. '=node' → logprob: -7.884677886962891
    9. '[node' → logprob: -8.00967788696289
    10. 'in' → logprob: -8.13467788696289

Token 923: ' une' (ID: 2463)
  Prédit: ''un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.10845854878425598
    2. ''une' → logprob: -2.3584585189819336
    3. ''' → logprob: -5.733458518981934
    4. 'a' → logprob: -5.983458518981934
    5. ''a' → logprob: -6.983458518981934
    6. ' a' → logprob: -7.483458518981934
    7. 'node' → logprob: -7.983458518981934
    8. 'leaf' → logprob: -8.608458518981934
    9. ' un' → logprob: -9.233458518981934
    10. 'un' → logprob: -9.733458518981934

Token 924: ' feuille' (ID: 129760)
  Prédit: 'leaf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'leaf' → logprob: -0.00014442270912695676
    2. ''' → logprob: -9.500144004821777
    3. ' leaf' → logprob: -9.625144004821777
    4. 'le' → logprob: -13.250144004821777
    5. '_leaf' → logprob: -14.375144004821777
    6. 'fe' → logprob: -14.875144004821777
    7. 'if' → logprob: -15.750144004821777
    8. 'lea' → logprob: -15.750144004821777
    9. 'Leaf' → logprob: -15.875144004821777
    10. 'node' → logprob: -17.000144958496094

Token 925: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.40154293179512024
    2. '   ' → logprob: -1.1515429019927979
    3. ':
' → logprob: -4.901543140411377
    4. 'if' → logprob: -6.026543140411377
    5. ',' → logprob: -6.401543140411377
    6. ' and' → logprob: -6.651543140411377
    7. ' if' → logprob: -6.651543140411377
    8. 'and' → logprob: -8.776542663574219
    9. '       ' → logprob: -8.901542663574219
    10. ' :' → logprob: -9.276542663574219

Token 926: ' le' (ID: 505)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0680181235074997
    2. '   ' → logprob: -3.8180181980133057
    3. 'return' → logprob: -4.193017959594727
    4. 'subset' → logprob: -4.443017959594727
    5. ' if' → logprob: -5.068017959594727
    6. '       ' → logprob: -5.568017959594727
    7. 'leaf' → logprob: -5.943017959594727
    8. 'key' → logprob: -7.443017959594727
    9. 's' → logprob: -7.568017959594727
    10. 'ways' → logprob: -7.568017959594727

Token 927: ' seul' (ID: 33041)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.014343547634780407
    2. ' if' → logprob: -4.514343738555908
    3. 'key' → logprob: -6.764343738555908
    4. 'for' → logprob: -6.764343738555908
    5. '   ' → logprob: -8.01434326171875
    6. ' key' → logprob: -8.26434326171875
    7. 'subset' → logprob: -8.38934326171875
    8. 'result' → logprob: -9.88934326171875
    9. 'def' → logprob: -10.51434326171875
    10. 'sub' → logprob: -10.88934326171875

Token 928: ' ensemble' (ID: 33081)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.174570083618164
    2. ' if' → logprob: -1.174570083618164
    3. ' token' → logprob: -2.049570083618164
    4. ' :' → logprob: -2.924570083618164
    5. ' return' → logprob: -3.174570083618164
    6. '   ' → logprob: -3.174570083618164
    7. ' ' → logprob: -3.299570083618164
    8. 'if' → logprob: -3.424570083618164
    9. 'token' → logprob: -4.174570083618164
    10. 'return' → logprob: -5.174570083618164

Token 929: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.3400304913520813
    2. ' possible' → logprob: -1.4650304317474365
    3. ' =' → logprob: -3.7150304317474365
    4. '=' → logprob: -4.340030670166016
    5. '_possible' → logprob: -4.465030670166016
    6. 'return' → logprob: -6.715030670166016
    7. '```' → logprob: -7.090030670166016
    8. '   ' → logprob: -7.090030670166016
    9. 'poss' → logprob: -7.340030670166016
    10. ' à' → logprob: -7.715030670166016

Token 930: ' est' (ID: 893)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.110650658607483
    2. '   ' → logprob: -1.610650658607483
    3. ' is' → logprob: -1.860650658607483
    4. ' =' → logprob: -2.2356505393981934
    5. 'return' → logprob: -2.4856505393981934
    6. ' est' → logprob: -2.6106505393981934
    7. '=' → logprob: -4.235650539398193
    8. ' if' → logprob: -4.235650539398193
    9. ' return' → logprob: -5.110650539398193
    10. 'is' → logprob: -5.735650539398193

Token 931: ' celui' (ID: 27857)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.6645405888557434
    2. 'node' → logprob: -1.0395405292510986
    3. '1' → logprob: -2.1645405292510986
    4. '(' → logprob: -4.789540767669678
    5. ' node' → logprob: -5.789540767669678
    6. ' subsets' → logprob: -5.914540767669678
    7. ' ' → logprob: -6.664540767669678
    8. '(node' → logprob: -8.03954029083252
    9. 'subset' → logprob: -8.03954029083252
    10. ' (' → logprob: -8.41454029083252

Token 932: ' donné' (ID: 52079)
  Prédit: '[node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[node' → logprob: -0.7094315886497498
    2. '(node' → logprob: -1.4594316482543945
    3. 'sub' → logprob: -1.7094316482543945
    4. '(sub' → logprob: -3.3344316482543945
    5. 'of' → logprob: -4.2094316482543945
    6. '<<' → logprob: -5.0844316482543945
    7. '[sub' → logprob: -5.0844316482543945
    8. '{' → logprob: -5.5844316482543945
    9. 'subset' → logprob: -5.5844316482543945
    10. 'node' → logprob: -5.5844316482543945

Token 933: ' par' (ID: 686)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8413164019584656
    2. 'return' → logprob: -1.9663164615631104
    3. '       ' → logprob: -2.0913164615631104
    4. ' by' → logprob: -2.4663164615631104
    5. 'if' → logprob: -2.5913164615631104
    6. ' if' → logprob: -3.7163164615631104
    7. '[node' → logprob: -3.7163164615631104
    8. ' return' → logprob: -4.091316223144531
    9. 'by' → logprob: -4.216316223144531
    10. ',' → logprob: -4.341316223144531

Token 934: ' subset' (ID: 58845)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.2835944592952728
    2. 'node' → logprob: -1.4085944890975952
    3. ' node' → logprob: -7.158594608306885
    4. ' subsets' → logprob: -7.658594608306885
    5. 'memo' → logprob: -7.908594608306885
    6. '   ' → logprob: -8.408594131469727
    7. 'set' → logprob: -8.533594131469727
    8. 'subset' → logprob: -9.033594131469727
    9. '1' → logprob: -10.158594131469727
    10. ' ' → logprob: -10.408594131469727

Token 935: '[node' (ID: 67268)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.596083402633667
    2. '   ' → logprob: -1.346083402633667
    3. ' if' → logprob: -1.971083402633667
    4. ':
' → logprob: -3.846083402633667
    5. ':' → logprob: -4.596083641052246
    6. '       ' → logprob: -5.096083641052246
    7. ',' → logprob: -5.596083641052246
    8. 's' → logprob: -6.096083641052246
    9. ' and' → logprob: -6.471083641052246
    10. '[node' → logprob: -6.846083641052246

Token 936: '.idx' (ID: 119077)
  Prédit: '.idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.idx' → logprob: -0.004499192815274
    2. ']' → logprob: -6.0044989585876465
    3. 'idx' → logprob: -6.7544989585876465
    4. '.id' → logprob: -8.129499435424805
    5. '_idx' → logprob: -8.254499435424805
    6. 's' → logprob: -9.504499435424805
    7. '   ' → logprob: -9.879499435424805
    8. '.index' → logprob: -10.504499435424805
    9. '_id' → logprob: -10.754499435424805
    10. 'node' → logprob: -10.879499435424805

Token 937: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004330422263592482
    2. '])' → logprob: -6.379330635070801
    3. ']:' → logprob: -6.504330635070801
    4. '],' → logprob: -7.004330635070801
    5. ' ]' → logprob: -10.1293306350708
    6. '].' → logprob: -10.3793306350708
    7. ')' → logprob: -10.7543306350708
    8. '   ' → logprob: -10.8793306350708
    9. ']
' → logprob: -11.1293306350708
    10. ']):' → logprob: -11.1293306350708

Token 938: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0062481192871928215
    2. '0' → logprob: -6.1312479972839355
    3. ']' → logprob: -6.1312479972839355
    4. ' ' → logprob: -6.3812479972839355
    5. '```' → logprob: -9.381248474121094
    6. '<|end|>' → logprob: -11.006248474121094
    7. '`' → logprob: -11.506248474121094
    8. ''s' → logprob: -11.631248474121094
    9. '])' → logprob: -11.756248474121094
    10. ')' → logprob: -11.881248474121094

Token 939: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002972591435536742
    2. '],' → logprob: -6.752972602844238
    3. '])' → logprob: -7.627972602844238
    4. ']
' → logprob: -7.627972602844238
    5. ' ]' → logprob: -8.002972602844238
    6. ']:' → logprob: -8.377972602844238
    7. '   ' → logprob: -9.377972602844238
    8. '].' → logprob: -10.002972602844238
    9. ')' → logprob: -10.627972602844238
    10. ']:
' → logprob: -10.627972602844238

Token 940: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010401401668787003
    2. ' if' → logprob: -5.635401248931885
    3. '       ' → logprob: -5.635401248931885
    4. ',' → logprob: -6.135401248931885
    5. ':' → logprob: -7.760401248931885
    6. 'if' → logprob: -8.135401725769043
    7. ' ,' → logprob: -9.635401725769043
    8. '    ' → logprob: -9.885401725769043
    9. '.' → logprob: -10.135401725769043
    10. '```' → logprob: -10.260401725769043

Token 941: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.31381022930145264
    2. '   ' → logprob: -1.5638102293014526
    3. ' if' → logprob: -2.813810348510742
    4. '       ' → logprob: -11.313810348510742
    5. '```' → logprob: -12.063810348510742
    6. '	if' → logprob: -12.313810348510742
    7. ' ' → logprob: -12.563810348510742
    8. '  ' → logprob: -13.938810348510742
    9. '   ' → logprob: -14.313810348510742
    10. 'token' → logprob: -14.438810348510742

Token 942: ' Car' (ID: 4004)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.39651814103126526
    2. '   ' → logprob: -1.1465181112289429
    3. ' if' → logprob: -4.646518230438232
    4. '	if' → logprob: -12.896517753601074
    5. '```' → logprob: -13.021517753601074
    6. ' ' → logprob: -14.771517753601074
    7. '       ' → logprob: -15.021517753601074
    8. '   ' → logprob: -15.646517753601074
    9. 'If' → logprob: -16.39651870727539
    10. '  ' → logprob: -17.02151870727539

Token 943: ' idx' (ID: 14016)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.0006525091012008488
    2. ' node' → logprob: -7.875652313232422
    3. 'leaf' → logprob: -9.750652313232422
    4. 'le' → logprob: -9.875652313232422
    5. 'sub' → logprob: -10.500652313232422
    6. '(node' → logprob: -11.000652313232422
    7. '   ' → logprob: -11.000652313232422
    8. 'the' → logprob: -11.125652313232422
    9. 'if' → logprob: -11.250652313232422
    10. 'subset' → logprob: -11.375652313232422

Token 944: ' est' (ID: 893)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.16625306010246277
    2. ' -' → logprob: -2.791253089904785
    3. ' ==' → logprob: -3.291253089904785
    4. ' !=' → logprob: -4.041253089904785
    5. '-' → logprob: -4.541253089904785
    6. '==' → logprob: -5.166253089904785
    7. 'is' → logprob: -5.291253089904785
    8. '   ' → logprob: -5.541253089904785
    9. ' >=' → logprob: -5.541253089904785
    10. '!=' → logprob: -6.291253089904785

Token 945: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09320040792226791
    2. ' ' → logprob: -3.343200445175171
    3. '0' → logprob: -4.218200206756592
    4. 'None' → logprob: -4.218200206756592
    5. ' None' → logprob: -4.593200206756592
    6. 'not' → logprob: -5.843200206756592
    7. 'num' → logprob: -6.093200206756592
    8. ' not' → logprob: -6.718200206756592
    9. ' une' → logprob: -6.968200206756592
    10. 'node' → logprob: -7.468200206756592

Token 946: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1521848440170288
    2. 'None' → logprob: -1.6521848440170288
    3. '0' → logprob: -1.7771848440170288
    4. 'not' → logprob: -1.9021848440170288
    5. 'node' → logprob: -2.1521849632263184
    6. ' not' → logprob: -3.5271849632263184
    7. ' None' → logprob: -4.652184963226318
    8. ' ' → logprob: -4.777184963226318
    9. ' node' → logprob: -5.027184963226318
    10. 'sub' → logprob: -6.152184963226318

Token 947: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.1863822489976883
    2. ' -' → logprob: -2.561382293701172
    3. 'based' → logprob: -2.561382293701172
    4. '-' → logprob: -4.186382293701172
    5. ' based' → logprob: -8.436382293701172
    6. '-index' → logprob: -9.311382293701172
    7. 'Based' → logprob: -9.936382293701172
    8. '_based' → logprob: -10.186382293701172
    9. '-base' → logprob: -11.061382293701172
    10. ')' → logprob: -11.061382293701172

Token 948: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03507880121469498
    2. ' if' → logprob: -3.535078763961792
    3. 'if' → logprob: -5.410079002380371
    4. ',' → logprob: -8.035079002380371
    5. ' and' → logprob: -8.035079002380371
    6. ':' → logprob: -9.160079002380371
    7. '       ' → logprob: -10.660079002380371
    8. '```' → logprob: -11.160079002380371
    9. ' ' → logprob: -11.660079002380371
    10. 'and' → logprob: -11.910079002380371

Token 949: ' l' (ID: 305)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.29365500807762146
    2. 'le' → logprob: -2.0436549186706543
    3. 'leaf' → logprob: -2.7936549186706543
    4. 'node' → logprob: -3.2936549186706543
    5. 'the' → logprob: -4.168654918670654
    6. 'code' → logprob: -5.918654918670654
    7. 'subset' → logprob: -6.668654918670654
    8. ' subsets' → logprob: -6.668654918670654
    9. 'les' → logprob: -7.043654918670654
    10. 'range' → logprob: -7.043654918670654

Token 950: ''' (ID: 6)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'code' → logprob: -1.1922197341918945
    2. 'sub' → logprob: -1.1922197341918945
    3. 'user' → logprob: -1.4422197341918945
    4. 'range' → logprob: -2.9422197341918945
    5. 'node' → logprob: -3.1922197341918945
    6. ' subsets' → logprob: -4.1922197341918945
    7. 'def' → logprob: -5.1922197341918945
    8. '_code' → logprob: -5.3172197341918945
    9. 'subset' → logprob: -5.5672197341918945
    10. '#' → logprob: -5.6922197341918945

Token 951: 'én' (ID: 3289)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.34770214557647705
    2. 'sub' → logprob: -1.597702145576477
    3. 'input' → logprob: -3.2227020263671875
    4. '#' → logprob: -4.2227020263671875
    5. 'user' → logprob: -4.7227020263671875
    6. 'range' → logprob: -5.3477020263671875
    7. 'leaf' → logprob: -5.5977020263671875
    8. 'le' → logprob: -5.7227020263671875
    9. 'subset' → logprob: -5.8477020263671875
    10. 'source' → logprob: -5.9727020263671875

Token 952: 'oncé' (ID: 59071)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6529631614685059
    2. 'umer' → logprob: -1.0279631614685059
    3. 'd' → logprob: -3.277963161468506
    4. 'um' → logprob: -4.152963161468506
    5. 'tree' → logprob: -4.277963161468506
    6. 'try' → logprob: -4.277963161468506
    7. 'code' → logprob: -4.402963161468506
    8. 'tre' → logprob: -4.777963161468506
    9. 'ume' → logprob: -5.902963161468506
    10. 'def' → logprob: -6.277963161468506

Token 953: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07618886232376099
    2. ' if' → logprob: -2.826188802719116
    3. 'if' → logprob: -4.326189041137695
    4. ',' → logprob: -7.201189041137695
    5. ':' → logprob: -9.826189041137695
    6. '```' → logprob: -10.576189041137695
    7. ' ' → logprob: -10.951189041137695
    8. '
' → logprob: -11.201189041137695
    9. ' ,' → logprob: -11.451189041137695
    10. '  ' → logprob: -11.701189041137695

Token 954: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01923302747309208
    2. ' if' → logprob: -4.019233226776123
    3. 'if' → logprob: -6.894233226776123
    4. ',' → logprob: -10.894232749938965
    5. ':' → logprob: -10.894232749938965
    6. ' ' → logprob: -11.894232749938965
    7. '	if' → logprob: -12.019232749938965
    8. '       ' → logprob: -12.019232749938965
    9. '    ' → logprob: -12.269232749938965
    10. '```' → logprob: -12.769232749938965

Token 955: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.12038829922676086
    2. '   ' → logprob: -2.8703882694244385
    3. ' if' → logprob: -2.8703882694244385
    4. '```' → logprob: -9.62038803100586
    5. '	if' → logprob: -13.74538803100586
    6. ' ' → logprob: -13.74538803100586
    7. '       ' → logprob: -14.24538803100586
    8. '  ' → logprob: -15.37038803100586
    9. '   ' → logprob: -15.74538803100586
    10. 'return' → logprob: -15.87038803100586

Token 956: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.0011703446507453918
    2. ' node' → logprob: -6.7511701583862305
    3. '   ' → logprob: -16.751171112060547
    4. '(node' → logprob: -17.751171112060547
    5. '	node' → logprob: -18.001171112060547
    6. ' ' → logprob: -18.501171112060547
    7. 'not' → logprob: -19.126171112060547
    8. '  ' → logprob: -20.126171112060547
    9. '[node' → logprob: -20.126171112060547
    10. '    ' → logprob: -20.876171112060547

Token 957: '.type' (ID: 9166)
  Prédit: '.type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.type' → logprob: -1.2664456789934775e-06
    2. '.' → logprob: -14.125000953674316
    3. 'type' → logprob: -15.625000953674316
    4. ' .' → logprob: -15.875000953674316
    5. '   ' → logprob: -17.000001907348633
    6. '.status' → logprob: -18.000001907348633
    7. ').' → logprob: -18.250001907348633
    8. '.tipo' → logprob: -18.250001907348633
    9. ' ' → logprob: -19.250001907348633
    10. '.is' → logprob: -19.375001907348633

Token 958: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06210504099726677
    2. '==' → logprob: -2.8121049404144287
    3. '=='' → logprob: -9.062105178833008
    4. ' =='' → logprob: -11.562105178833008
    5. '=' → logprob: -12.312105178833008
    6. '   ' → logprob: -13.562105178833008
    7. ' ' → logprob: -13.687105178833008
    8. '  ' → logprob: -14.187105178833008
    9. '=="' → logprob: -14.187105178833008
    10. '	' → logprob: -14.312105178833008

Token 959: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -2.4868770196917467e-05
    2. '"' → logprob: -10.750024795532227
    3. ' '' → logprob: -13.250024795532227
    4. ' ' → logprob: -14.625024795532227
    5. '   ' → logprob: -14.625024795532227
    6. '`' → logprob: -15.375024795532227
    7. '‘' → logprob: -16.375024795532227
    8. '('' → logprob: -16.625024795532227
    9. '
' → logprob: -16.875024795532227
    10. 'leaf' → logprob: -17.000024795532227

Token 960: 'leaf' (ID: 50921)
  Prédit: 'leaf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'leaf' → logprob: -0.0001093841710826382
    2. ''' → logprob: -9.125109672546387
    3. ' leaf' → logprob: -15.875109672546387
    4. 'le' → logprob: -15.875109672546387
    5. '')' → logprob: -17.12510871887207
    6. ''l' → logprob: -17.12510871887207
    7. '_leaf' → logprob: -17.12510871887207
    8. 'lea' → logprob: -17.62510871887207
    9. ''s' → logprob: -18.00010871887207
    10. 'Leaf' → logprob: -18.50010871887207

Token 961: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015270021744072437
    2. ':
' → logprob: -4.515270233154297
    3. '   ' → logprob: -6.390270233154297
    4. '):' → logprob: -6.765270233154297
    5. '       ' → logprob: -7.140270233154297
    6. ' and' → logprob: -8.265270233154297
    7. '):
' → logprob: -8.390270233154297
    8. '':' → logprob: -10.390270233154297
    9. ' :' → logprob: -10.390270233154297
    10. ':return' → logprob: -11.265270233154297

Token 962: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12334234267473221
    2. ' if' → logprob: -2.873342275619507
    3. '   ' → logprob: -2.998342275619507
    4. 'if' → logprob: -4.748342514038086
    5. 'return' → logprob: -7.873342514038086
    6. ' return' → logprob: -7.873342514038086
    7. ' for' → logprob: -9.123342514038086
    8. 'for' → logprob: -10.748342514038086
    9. '```' → logprob: -11.248342514038086
    10. ' s' → logprob: -11.498342514038086

Token 963: ' s' (ID: 265)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.026070939376950264
    2. 'return' → logprob: -4.651071071624756
    3. '   ' → logprob: -4.901071071624756
    4. 'subset' → logprob: -5.401071071624756
    5. '       ' → logprob: -6.276071071624756
    6. 'key' → logprob: -6.526071071624756
    7. ' if' → logprob: -8.401070594787598
    8. 'result' → logprob: -8.776070594787598
    9. 'leaf' → logprob: -9.026070594787598
    10. 'possible' → logprob: -9.526070594787598

Token 964: ' =' (ID: 314)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.6876869201660156
    2. ' =' → logprob: -0.8126869201660156
    3. '=' → logprob: -3.0626869201660156
    4. 'ets' → logprob: -5.437686920166016
    5. '_idx' → logprob: -7.437686920166016
    6. 'e' → logprob: -7.562686920166016
    7. '=set' → logprob: -8.562686920166016
    8. '_set' → logprob: -8.562686920166016
    9. ' ==' → logprob: -8.687686920166016
    10. '=node' → logprob: -8.812686920166016

Token 965: ' subsets' (ID: 165377)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.18431220948696136
    2. '1' → logprob: -1.8093122243881226
    3. ' subsets' → logprob: -5.809312343597412
    4. '(' → logprob: -6.809312343597412
    5. ' ' → logprob: -8.434311866760254
    6. 'subset' → logprob: -8.934311866760254
    7. 'sets' → logprob: -10.559311866760254
    8. ' sub' → logprob: -10.809311866760254
    9. 'subs' → logprob: -11.434311866760254
    10. 'set' → logprob: -11.684311866760254

Token 966: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -5.512236498361744e-07
    2. 'node' → logprob: -15.625000953674316
    3. '(node' → logprob: -16.125
    4. '[' → logprob: -16.25
    5. '   ' → logprob: -17.375
    6. ' [' → logprob: -18.375
    7. '[
' → logprob: -18.75
    8. '[(' → logprob: -19.0
    9. '```' → logprob: -19.75
    10. '[[' → logprob: -19.875

Token 967: '.idx' (ID: 119077)
  Prédit: '.idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.idx' → logprob: -1.6405310816480778e-05
    2. '.' → logprob: -11.875016212463379
    3. 'idx' → logprob: -12.125016212463379
    4. ' .' → logprob: -12.750016212463379
    5. '.id' → logprob: -14.625016212463379
    6. '.index' → logprob: -15.750016212463379
    7. '   ' → logprob: -16.500017166137695
    8. '_idx' → logprob: -16.500017166137695
    9. '	idx' → logprob: -16.750017166137695
    10. '[idx' → logprob: -17.375017166137695

Token 968: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6931883096694946
    2. ' -' → logprob: -0.6931883096694946
    3. ']' → logprob: -10.818188667297363
    4. '   ' → logprob: -11.443188667297363
    5. '[' → logprob: -12.443188667297363
    6. '1' → logprob: -12.818188667297363
    7. ' ' → logprob: -13.193188667297363
    8. ']-' → logprob: -14.193188667297363
    9. '  ' → logprob: -14.818188667297363
    10. '	' → logprob: -16.193187713623047

Token 969: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3306015716807451e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -15.75001335144043
    4. '```' → logprob: -17.62501335144043
    5. '<|end|>' → logprob: -18.00001335144043
    6. '۱' → logprob: -19.18751335144043
    7. '१' → logprob: -19.31251335144043
    8. '১' → logprob: -19.37501335144043
    9. '<|end|>' → logprob: -19.43751335144043
    10. 'to' → logprob: -19.43751335144043

Token 970: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1888679839321412e-05
    2. ' ' → logprob: -10.750021934509277
    3. '<|end|>' → logprob: -16.81252098083496
    4. '   ' → logprob: -17.37502098083496
    5. '`' → logprob: -17.43752098083496
    6. '```' → logprob: -17.62502098083496
    7. '0' → logprob: -17.81252098083496
    8. '۱' → logprob: -17.87502098083496
    9. 'to' → logprob: -17.87502098083496
    10. '১' → logprob: -18.31252098083496

Token 971: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0038389062974601984
    2. ']
' → logprob: -5.753839015960693
    3. ')' → logprob: -7.628839015960693
    4. ' ]' → logprob: -9.128838539123535
    5. '   ' → logprob: -10.003838539123535
    6. '       ' → logprob: -11.878838539123535
    7. ']
' → logprob: -12.253838539123535
    8. ')]' → logprob: -12.628838539123535
    9. ')
' → logprob: -13.003838539123535
    10. '']' → logprob: -14.003838539123535

Token 972: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008976469398476183
    2. '   ' → logprob: -7.3758978843688965
    3. '
' → logprob: -9.125897407531738
    4. ',' → logprob: -9.625897407531738
    5. '           ' → logprob: -10.750897407531738
    6. '	' → logprob: -11.625897407531738
    7. '<|end|>' → logprob: -11.625897407531738
    8. 'return' → logprob: -11.750897407531738
    9. ':' → logprob: -11.750897407531738
    10. ')' → logprob: -12.125897407531738

Token 973: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6632453203201294
    2. 'if' → logprob: -1.1632453203201294
    3. 'memo' → logprob: -2.03824520111084
    4. 'for' → logprob: -4.28824520111084
    5. 'res' → logprob: -4.66324520111084
    6. 'key' → logprob: -4.91324520111084
    7. 'ways' → logprob: -5.53824520111084
    8. '   ' → logprob: -6.03824520111084
    9. 'result' → logprob: -6.03824520111084
    10. 'results' → logprob: -7.03824520111084

Token 974: ' On' (ID: 2160)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.610069751739502
    2. 'memo' → logprob: -1.235069751739502
    3. 'if' → logprob: -2.235069751739502
    4. 'key' → logprob: -2.860069751739502
    5. '   ' → logprob: -7.235069751739502
    6. '       ' → logprob: -7.610069751739502
    7. 'res' → logprob: -9.235069274902344
    8. 'result' → logprob: -9.610069274902344
    9. 'm' → logprob: -10.235069274902344
    10. 'mem' → logprob: -10.485069274902344

Token 975: ' ren' (ID: 5427)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0018351107137277722
    2. ' return' → logprob: -7.126835346221924
    3. 'def' → logprob: -7.126835346221924
    4. 'eturn' → logprob: -9.376834869384766
    5. '   ' → logprob: -9.626834869384766
    6. 'memo' → logprob: -11.251834869384766
    7. 'key' → logprob: -11.376834869384766
    8. '#' → logprob: -11.876834869384766
    9. 'ret' → logprob: -12.376834869384766
    10. '	return' → logprob: -12.626834869384766

Token 976: 'voie' (ID: 70072)
  Prédit: 'voie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'voie' → logprob: -0.0009623158257454634
    2. 'voit' → logprob: -7.375962257385254
    3. 'voi' → logprob: -8.375962257385254
    4. 'vo' → logprob: -9.875962257385254
    5. 'return' → logprob: -10.750962257385254
    6. 'v' → logprob: -11.125962257385254
    7. 'voy' → logprob: -11.375962257385254
    8. 'ver' → logprob: -12.500962257385254
    9. '   ' → logprob: -14.375962257385254
    10. 'vre' → logprob: -15.000962257385254

Token 977: ' un' (ID: 537)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.030192876234650612
    2. '1' → logprob: -3.5301928520202637
    3. ' {' → logprob: -8.780193328857422
    4. 'int' → logprob: -9.280193328857422
    5. '{s' → logprob: -9.655193328857422
    6. '({' → logprob: -10.155193328857422
    7. '(' → logprob: -10.155193328857422
    8. '{}' → logprob: -10.280193328857422
    9. '[' → logprob: -11.780193328857422
    10. ' ' → logprob: -12.780193328857422

Token 978: ' dict' (ID: 11878)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.5141786336898804
    2. 'def' → logprob: -1.3891786336898804
    3. 'int' → logprob: -3.01417875289917
    4. '1' → logprob: -3.51417875289917
    5. ' {' → logprob: -3.51417875289917
    6. 'dict' → logprob: -4.51417875289917
    7. 'import' → logprob: -5.13917875289917
    8. '{
' → logprob: -6.01417875289917
    9. '   ' → logprob: -6.01417875289917
    10. '
' → logprob: -6.13917875289917

Token 979: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.00825048703700304
    2. ' {' → logprob: -5.258250713348389
    3. '({' → logprob: -6.383250713348389
    4. '       ' → logprob: -8.00825023651123
    5. '={' → logprob: -8.13325023651123
    6. '{return' → logprob: -8.38325023651123
    7. ' =' → logprob: -8.50825023651123
    8. '{s' → logprob: -8.75825023651123
    9. '   ' → logprob: -9.88325023651123
    10. '           ' → logprob: -11.00825023651123

Token 980: 'ensemble' (ID: 37301)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00033832306507974863
    2. '{s' → logprob: -8.125338554382324
    3. '{' → logprob: -10.875338554382324
    4. ' s' → logprob: -11.000338554382324
    5. '       ' → logprob: -13.000338554382324
    6. '   ' → logprob: -13.125338554382324
    7. '           ' → logprob: -14.625338554382324
    8. '     ' → logprob: -15.375338554382324
    9. '0' → logprob: -15.375338554382324
    10. ' ' → logprob: -15.500338554382324

Token 981: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029533158987760544
    2. ',' → logprob: -4.154533386230469
    3. ' :' → logprob: -4.529533386230469
    4. '       ' → logprob: -7.404533386230469
    5. '(s' → logprob: -7.529533386230469
    6. '{' → logprob: -8.029533386230469
    7. '   ' → logprob: -8.279533386230469
    8. '}' → logprob: -8.404533386230469
    9. '           ' → logprob: -8.779533386230469
    10. ' ,' → logprob: -9.279533386230469

Token 982: ' nombre' (ID: 9733)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006194456946104765
    2. ' ' → logprob: -5.131194591522217
    3. '   ' → logprob: -9.131194114685059
    4. '       ' → logprob: -10.256194114685059
    5. 'ways' → logprob: -10.381194114685059
    6. '{' → logprob: -10.756194114685059
    7. '     ' → logprob: -11.631194114685059
    8. 'int' → logprob: -11.631194114685059
    9. '0' → logprob: -11.881194114685059
    10. '  ' → logprob: -12.006194114685059

Token 983: '_de' (ID: 5047)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5448655486106873
    2. '           ' → logprob: -2.044865608215332
    3. ',' → logprob: -2.419865608215332
    4. '}' → logprob: -3.169865608215332
    5. '   ' → logprob: -3.169865608215332
    6. '       ' → logprob: -3.294865608215332
    7. ' de' → logprob: -3.794865608215332
    8. '```' → logprob: -4.419865608215332
    9. '_de' → logprob: -4.669865608215332
    10. 'de' → logprob: -4.669865608215332

Token 984: '_f' (ID: 1337)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5731610655784607
    2. 'fa' → logprob: -1.0731611251831055
    3. 'ways' → logprob: -2.5731611251831055
    4. ' ' → logprob: -4.8231611251831055
    5. ' façons' → logprob: -5.1981611251831055
    6. 'fois' → logprob: -6.3231611251831055
    7. '   ' → logprob: -6.9481611251831055
    8. '_' → logprob: -7.8231611251831055
    9. ' fa' → logprob: -8.448161125183105
    10. 'man' → logprob: -8.698161125183105

Token 985: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00031532408320344985
    2. 'acons' → logprob: -8.50031566619873
    3. 'ois' → logprob: -10.50031566619873
    4. 'ais' → logprob: -10.50031566619873
    5. 'à' → logprob: -10.75031566619873
    6. 'o' → logprob: -11.87531566619873
    7. 'ac' → logprob: -12.50031566619873
    8. 'çons' → logprob: -12.62531566619873
    9. 'as' → logprob: -12.62531566619873
    10. 'acon' → logprob: -12.87531566619873

Token 986: 'çons' (ID: 72302)
  Prédit: 'çons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'çons' → logprob: -0.0029347948729991913
    2. 'ç' → logprob: -6.75293493270874
    3. 'çon' → logprob: -7.37793493270874
    4. 'c' → logprob: -7.75293493270874
    5. 'cons' → logprob: -8.002934455871582
    6. 'ons' → logprob: -8.502934455871582
    7. 'ctions' → logprob: -10.002934455871582
    8. 'sons' → logprob: -10.502934455871582
    9. 'cs' → logprob: -11.252934455871582
    10. 'is' → logprob: -11.377934455871582

Token 987: '}
' (ID: 739)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006640886887907982
    2. '       ' → logprob: -6.131640911102295
    3. '{' → logprob: -6.256640911102295
    4. ' ,' → logprob: -6.381640911102295
    5. 'return' → logprob: -9.006640434265137
    6. '   ' → logprob: -9.006640434265137
    7. '           ' → logprob: -9.131640434265137
    8. ':' → logprob: -9.256640434265137
    9. ',
' → logprob: -9.881640434265137
    10. '}' → logprob: -10.006640434265137

Token 988: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005222851876169443
    2. '{' → logprob: -5.880222797393799
    3. '
' → logprob: -6.380222797393799
    4. '   ' → logprob: -8.255223274230957
    5. ' {' → logprob: -9.130223274230957
    6. 'return' → logprob: -9.630223274230957
    7. ',' → logprob: -10.130223274230957
    8. '	' → logprob: -10.255223274230957
    9. ':' → logprob: -10.255223274230957
    10. '           ' → logprob: -10.380223274230957

Token 989: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.008245640434324741
    2. '       ' → logprob: -5.008245468139648
    3. ' return' → logprob: -6.508245468139648
    4. '{return' → logprob: -10.883245468139648
    5. '{' → logprob: -11.133245468139648
    6. '   ' → logprob: -13.008245468139648
    7. '	return' → logprob: -13.883245468139648
    8. 'if' → logprob: -14.383245468139648
    9. '           ' → logprob: -14.758245468139648
    10. '{
' → logprob: -15.383245468139648

Token 990: ' Ici' (ID: 145754)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.008695880882441998
    2. ' return' → logprob: -5.00869607925415
    3. '       ' → logprob: -6.25869607925415
    4. '   ' → logprob: -9.883695602416992
    5. 'if' → logprob: -11.383695602416992
    6. '	return' → logprob: -13.633695602416992
    7. '           ' → logprob: -14.633695602416992
    8. ' if' → logprob: -14.883695602416992
    9. '{return' → logprob: -15.258695602416992
    10. ' ' → logprob: -16.508695602416992

Token 991: ',' (ID: 11)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.2899584770202637
    2. 'return' → logprob: -1.4149584770202637
    3. '{' → logprob: -1.5399584770202637
    4. ' {' → logprob: -2.0399584770202637
    5. '{return' → logprob: -2.5399584770202637
    6. '       ' → logprob: -2.9149584770202637
    7. '   ' → logprob: -5.789958477020264
    8. '           ' → logprob: -8.164958953857422
    9. ':return' → logprob: -8.289958953857422
    10. '	return' → logprob: -8.414958953857422

Token 992: ' ' (ID: 220)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.08396166563034058
    2. '{return' → logprob: -2.8339617252349854
    3. '{' → logprob: -3.8339617252349854
    4. 'if' → logprob: -9.833961486816406
    5. ' return' → logprob: -10.208961486816406
    6. '       ' → logprob: -10.708961486816406
    7. '   ' → logprob: -11.083961486816406
    8. ' {' → logprob: -13.833961486816406
    9. '           ' → logprob: -14.833961486816406
    10. '{s' → logprob: -15.333961486816406

Token 993: '1' (ID: 16)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.036475036293268204
    2. '{return' → logprob: -3.5364749431610107
    3. '{' → logprob: -5.03647518157959
    4. '       ' → logprob: -9.16147518157959
    5. ' return' → logprob: -9.66147518157959
    6. '{s' → logprob: -10.91147518157959
    7. '   ' → logprob: -11.16147518157959
    8. ' {' → logprob: -13.16147518157959
    9. '           ' → logprob: -13.16147518157959
    10. '	return' → logprob: -16.661474227905273

Token 994: ' façon' (ID: 33381)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1623804569244385
    2. '}' → logprob: -1.4123804569244385
    3. ',' → logprob: -1.7873804569244385
    4. 'return' → logprob: -2.2873804569244385
    5. '{' → logprob: -2.4123804569244385
    6. ' return' → logprob: -3.5373804569244385
    7. 'if' → logprob: -4.412380218505859
    8. '   ' → logprob: -4.912380218505859
    9. ' }' → logprob: -5.162380218505859
    10. ' {' → logprob: -5.162380218505859

Token 995: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016350703313946724
    2. 'return' → logprob: -4.391350746154785
    3. ' return' → logprob: -6.266350746154785
    4. '   ' → logprob: -6.891350746154785
    5. '{' → logprob: -8.016350746154785
    6. ' =' → logprob: -8.641350746154785
    7. '
' → logprob: -9.141350746154785
    8. ',' → logprob: -9.141350746154785
    9. ' {' → logprob: -9.891350746154785
    10. '{return' → logprob: -10.391350746154785

Token 996: ' le' (ID: 505)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03835370019078255
    2. ' s' → logprob: -3.288353681564331
    3. '   ' → logprob: -8.66335391998291
    4. ' ' → logprob: -10.16335391998291
    5. '{s' → logprob: -10.41335391998291
    6. '       ' → logprob: -10.91335391998291
    7. '    ' → logprob: -11.66335391998291
    8. '     ' → logprob: -11.91335391998291
    9. '(s' → logprob: -12.28835391998291
    10. '{' → logprob: -12.41335391998291

Token 997: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.023266561329364777
    2. ' s' → logprob: -3.773266553878784
    3. '{s' → logprob: -11.273266792297363
    4. ' ' → logprob: -13.273266792297363
    5. '{' → logprob: -13.523266792297363
    6. '   ' → logprob: -13.648266792297363
    7. '    ' → logprob: -14.023266792297363
    8. '       ' → logprob: -14.148266792297363
    9. '`s' → logprob: -14.398266792297363
    10. '```' → logprob: -14.648266792297363

Token 998: '-' (ID: 12)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.13378362357616425
    2. 's' → logprob: -3.1337835788726807
    3. 'ensemble' → logprob: -3.3837835788726807
    4. '_' → logprob: -4.38378381729126
    5. 'tree' → logprob: -4.50878381729126
    6. '_set' → logprob: -4.63378381729126
    7. '_tree' → logprob: -5.75878381729126
    8. '_s' → logprob: -6.00878381729126
    9. '   ' → logprob: -6.38378381729126
    10. 'ense' → logprob: -6.75878381729126

Token 999: 'ensemble' (ID: 37301)
  Prédit: 'ensemble'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ensemble' → logprob: -0.03660881891846657
    2. 's' → logprob: -3.536608934402466
    3. 'set' → logprob: -5.161608695983887
    4. 'ense' → logprob: -7.786608695983887
    5. 'subset' → logprob: -7.786608695983887
    6. 'tree' → logprob: -8.661608695983887
    7. ' ensemble' → logprob: -10.286608695983887
    8. ' s' → logprob: -11.161608695983887
    9. 'mask' → logprob: -11.286608695983887
    10. '   ' → logprob: -11.786608695983887

Token 1000: ' déf' (ID: 23956)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -1.202799916267395
    2. ' =' → logprob: -1.202799916267395
    3. ' {' → logprob: -1.827799916267395
    4. ',' → logprob: -2.8277997970581055
    5. '   ' → logprob: -3.2027997970581055
    6. 'return' → logprob: -3.4527997970581055
    7. '       ' → logprob: -3.7027997970581055
    8. '({' → logprob: -4.4527997970581055
    9. ' if' → logprob: -4.5777997970581055
    10. 's' → logprob: -4.5777997970581055

Token 1001: 'ini' (ID: 2363)
  Prédit: 'ini'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ini' → logprob: -0.4341298043727875
    2. 'init' → logprob: -1.0591298341751099
    3. 'inie' → logprob: -6.18412971496582
    4. 'in' → logprob: -6.30912971496582
    5. 'ault' → logprob: -8.05912971496582
    6. 'inite' → logprob: -8.30912971496582
    7. 'inis' → logprob: -8.55912971496582
    8. 'initi' → logprob: -8.80912971496582
    9. 'aut' → logprob: -8.93412971496582
    10. 'int' → logprob: -9.05912971496582

Token 1002: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03499259427189827
    2. '{' → logprob: -4.159992694854736
    3. '   ' → logprob: -4.659992694854736
    4. 'return' → logprob: -5.534992694854736
    5. ' {' → logprob: -6.034992694854736
    6. ' return' → logprob: -6.284992694854736
    7. '{return' → logprob: -7.159992694854736
    8. '           ' → logprob: -8.659992218017578
    9. '
' → logprob: -9.784992218017578
    10. ',' → logprob: -10.409992218017578

Token 1003: ' ' (ID: 220)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2568660080432892
    2. '1' → logprob: -2.756865978240967
    3. '       ' → logprob: -2.756865978240967
    4. ' return' → logprob: -3.131865978240967
    5. '{' → logprob: -3.381865978240967
    6. ' {' → logprob: -4.631865978240967
    7. '           ' → logprob: -5.506865978240967
    8. ' ' → logprob: -5.881865978240967
    9. '{return' → logprob: -5.881865978240967
    10. '   ' → logprob: -6.381865978240967

Token 1004: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8303923606872559
    2. 'return' → logprob: -0.8303923606872559
    3. '   ' → logprob: -2.580392360687256
    4. ' return' → logprob: -3.455392360687256
    5. '
' → logprob: -5.205392360687256
    6. ' ' → logprob: -5.330392360687256
    7. '{' → logprob: -5.705392360687256
    8. '       ' → logprob: -6.080392360687256
    9. '1' → logprob: -6.830392360687256
    10. ',' → logprob: -6.955392360687256

Token 1005: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6419593691825867
    2. 'pour' → logprob: -1.3919594287872314
    3. ' pour' → logprob: -2.1419594287872314
    4. ' for' → logprob: -2.5169594287872314
    5. '```' → logprob: -4.891959190368652
    6. ',' → logprob: -5.016959190368652
    7. ' ailleurs' → logprob: -6.016959190368652
    8. ' ways' → logprob: -6.016959190368652
    9. 'ways' → logprob: -6.391959190368652
    10. ' façons' → logprob: -6.766959190368652

Token 1006: ' les' (ID: 1341)
  Prédit: 'tout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tout' → logprob: -0.3590831458568573
    2. 't' → logprob: -1.6090831756591797
    3. 'les' → logprob: -2.4840831756591797
    4. 'all' → logprob: -4.85908317565918
    5. ' tous' → logprob: -4.98408317565918
    6. ' les' → logprob: -6.73408317565918
    7. 'le' → logprob: -6.85908317565918
    8. ' toutes' → logprob: -8.60908317565918
    9. '```' → logprob: -8.60908317565918
    10. 'd' → logprob: -8.85908317565918

Token 1007: ' autres' (ID: 18701)
  Prédit: 'aut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aut' → logprob: -0.0010924735106527805
    2. ' autres' → logprob: -7.001092433929443
    3. ''autres' → logprob: -9.251092910766602
    4. 'other' → logprob: -10.876092910766602
    5. 'ailleurs' → logprob: -10.876092910766602
    6. '```' → logprob: -11.376092910766602
    7. 'reste' → logprob: -11.751092910766602
    8. 't' → logprob: -12.001092910766602
    9. 'a' → logprob: -12.876092910766602
    10. '`' → logprob: -13.001092910766602

Token 1008: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9815207123756409
    2. '       ' → logprob: -1.106520652770996
    3. '
' → logprob: -1.231520652770996
    4. 'return' → logprob: -6.981520652770996
    5. '    
' → logprob: -8.356520652770996
    6. ',' → logprob: -8.481520652770996
    7. '\' → logprob: -8.606520652770996
    8. ' return' → logprob: -8.606520652770996
    9. '           ' → logprob: -9.356520652770996
    10. '
' → logprob: -9.356520652770996

Token 1009: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2820180356502533
    2. '       ' → logprob: -1.6570180654525757
    3. '
' → logprob: -3.532017946243286
    4. '{' → logprob: -5.032018184661865
    5. '\n' → logprob: -5.282018184661865
    6. 'return' → logprob: -5.532018184661865
    7. '\t' → logprob: -6.532018184661865
    8. '{
' → logprob: -6.532018184661865
    9. '\' → logprob: -6.907018184661865
    10. ':' → logprob: -7.032018184661865

Token 1010: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03199075907468796
    2. '       ' → logprob: -3.7819907665252686
    3. ' return' → logprob: -5.7819905281066895
    4. '   ' → logprob: -6.0319905281066895
    5. 'if' → logprob: -6.1569905281066895
    6. 'ways' → logprob: -7.2819905281066895
    7. 'result' → logprob: -8.906991004943848
    8. 'res' → logprob: -9.531991004943848
    9. ' ways' → logprob: -9.906991004943848
    10. ' if' → logprob: -10.031991004943848

Token 1011: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -9.372294698550832e-06
    2. '{s' → logprob: -12.000009536743164
    3. '{id' → logprob: -13.500009536743164
    4. ' {' → logprob: -14.125009536743164
    5. '{return' → logprob: -15.125009536743164
    6. '   ' → logprob: -15.375009536743164
    7. '{name' → logprob: -15.375009536743164
    8. '{i' → logprob: -15.750009536743164
    9. '{k' → logprob: -16.375009536743164
    10. '{sub' → logprob: -16.750009536743164

Token 1012: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -6.630610641877865e-06
    2. ' s' → logprob: -12.125006675720215
    3. '   ' → logprob: -14.625006675720215
    4. '       ' → logprob: -14.875006675720215
    5. '           ' → logprob: -16.0000057220459
    6. '0' → logprob: -16.1250057220459
    7. '`s' → logprob: -17.1250057220459
    8. '     ' → logprob: -17.7500057220459
    9. '{s' → logprob: -18.5000057220459
    10. ' ' → logprob: -18.7500057220459

Token 1013: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.2729995988775045e-06
    2. ' :' → logprob: -12.375006675720215
    3. '1' → logprob: -13.500006675720215
    4. '       ' → logprob: -15.250006675720215
    5. ':return' → logprob: -16.1250057220459
    6. '   ' → logprob: -16.5000057220459
    7. '0' → logprob: -17.1250057220459
    8. '        ' → logprob: -17.5000057220459
    9. '           ' → logprob: -18.2500057220459
    10. '    ' → logprob: -18.3750057220459

Token 1014: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '   ' → logprob: -18.75
    4. '       ' → logprob: -22.375
    5. '```' → logprob: -22.625
    6. '
' → logprob: -23.25
    7. '۱' → logprob: -23.25
    8. ' ' → logprob: -23.5
    9. '0' → logprob: -24.0
    10. '１' → logprob: -24.125

Token 1015: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. '   ' → logprob: -20.75
    4. '```' → logprob: -24.25
    5. '۱' → logprob: -24.5
    6. '       ' → logprob: -24.75
    7. '
' → logprob: -25.125
    8. '(' → logprob: -25.125
    9. '0' → logprob: -25.375
    10. '  ' → logprob: -25.375

Token 1016: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0017728772945702076
    2. ',' → logprob: -6.876772880554199
    3. '}
' → logprob: -7.626772880554199
    4. '   ' → logprob: -8.6267728805542
    5. '       ' → logprob: -10.1267728805542
    6. ' }' → logprob: -11.3767728805542
    7. ',
' → logprob: -11.5017728805542
    8. '}

' → logprob: -11.7517728805542
    9. '
' → logprob: -13.6267728805542
    10. ' ,' → logprob: -14.5017728805542

Token 1017: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0030875171069055796
    2. '```' → logprob: -6.503087520599365
    3. '
' → logprob: -7.503087520599365
    4. 'if' → logprob: -8.003087043762207
    5. '    
' → logprob: -8.378087043762207
    6. ')' → logprob: -8.878087043762207
    7. 'elif' → logprob: -9.253087043762207
    8. 'for' → logprob: -9.753087043762207
    9. 'else' → logprob: -10.253087043762207
    10. '<|end|>' → logprob: -11.128087043762207

Token 1018: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7847467064857483
    2. 'ways' → logprob: -1.5347466468811035
    3. 'memo' → logprob: -1.5347466468811035
    4. '#' → logprob: -3.5347466468811035
    5. 'result' → logprob: -3.6597466468811035
    6. 'if' → logprob: -3.7847466468811035
    7. 'count' → logprob: -4.6597466468811035
    8. 'res' → logprob: -4.9097466468811035
    9. '    
' → logprob: -5.4097466468811035
    10. 'else' (adapté à ' else') → logprob: -5.5347466468811035

Token 1019: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1869489997625351
    2. ':' → logprob: -1.9369490146636963
    3. ':
' → logprob: -4.311948776245117
    4. '       ' → logprob: -4.561948776245117
    5. '{' → logprob: -6.686948776245117
    6. ' :' → logprob: -8.061948776245117
    7. ',' → logprob: -8.186948776245117
    8. '    
' → logprob: -8.436948776245117
    9. '):
' → logprob: -9.436948776245117
    10. '
' → logprob: -9.561948776245117

Token 1020: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00042447797022759914
    2. 'memo' → logprob: -8.5004243850708
    3. 'result' → logprob: -8.7504243850708
    4. 'results' → logprob: -10.5004243850708
    5. 'res' → logprob: -11.6254243850708
    6. 'if' → logprob: -11.6254243850708
    7. '   ' → logprob: -11.7504243850708
    8. 'dp' → logprob: -11.8754243850708
    9. 'key' → logprob: -14.8754243850708
    10. '```' → logprob: -14.8754243850708

Token 1021: ' #' (ID: 1069)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.011243632063269615
    2. 'if' → logprob: -4.51124382019043
    3. '#' (adapté à ' #') → logprob: -9.13624382019043
    4. 'ways' → logprob: -10.51124382019043
    5. '   ' → logprob: -10.88624382019043
    6. 'memo' → logprob: -11.13624382019043
    7. 'l' → logprob: -11.38624382019043
    8. 'dp' → logprob: -12.26124382019043
    9. ' left' → logprob: -12.63624382019043
    10. 'L' → logprob: -13.63624382019043

Token 1022: ' Calcul' (ID: 57243)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.03749600425362587
    2. 'if' → logprob: -3.4124960899353027
    3. 'memo' → logprob: -5.912496089935303
    4. 'ways' → logprob: -7.537496089935303
    5. 'dp' → logprob: -8.162495613098145
    6. '#' → logprob: -9.287495613098145
    7. '   ' → logprob: -9.662495613098145
    8. 'cache' → logprob: -9.787495613098145
    9. 'l' → logprob: -10.412495613098145
    10. ' left' → logprob: -10.537495613098145

Token 1023: ' des' (ID: 731)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006536673288792372
    2. 'left' → logprob: -5.631536483764648
    3. '#' → logprob: -7.381536483764648
    4. '   ' → logprob: -7.631536483764648
    5. 'ways' → logprob: -8.131536483764648
    6. ' left' → logprob: -8.256536483764648
    7. '=' → logprob: -8.631536483764648
    8. ' ways' → logprob: -8.756536483764648
    9. 's' → logprob: -8.881536483764648
    10. 'node' → logprob: -9.006536483764648

Token 1024: ' distributions' (ID: 76421)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.012031680904328823
    2. 'ways' → logprob: -4.637031555175781
    3. 'if' → logprob: -6.512031555175781
    4. '#' → logprob: -7.637031555175781
    5. 'memo' → logprob: -10.012031555175781
    6. '   ' → logprob: -10.262031555175781
    7. 'l' → logprob: -10.387031555175781
    8. 'lef' → logprob: -10.512031555175781
    9. 'cache' → logprob: -10.887031555175781
    10. 'count' → logprob: -11.012031555175781

Token 1025: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2517390251159668
    2. 'left' → logprob: -1.7517390251159668
    3. ' left' → logprob: -3.126739025115967
    4. ':' → logprob: -7.126739025115967
    5. '(left' → logprob: -7.376739025115967
    6. '[left' → logprob: -7.501739025115967
    7. '=' → logprob: -7.626739025115967
    8. ' =' → logprob: -7.626739025115967
    9. ',' → logprob: -8.001739501953125
    10. ',left' → logprob: -8.251739501953125

Token 1026: ' les' (ID: 1341)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.01246738899499178
    2. ' node' → logprob: -4.762467384338379
    3. 'le' → logprob: -6.762467384338379
    4. 'la' → logprob: -7.012467384338379
    5. 'left' → logprob: -7.137467384338379
    6. '   ' → logprob: -8.137467384338379
    7. '       ' → logprob: -8.262467384338379
    8. 'l' → logprob: -8.887467384338379
    9. ' la' → logprob: -10.262467384338379
    10. ' le' → logprob: -10.387467384338379

Token 1027: ' sous' (ID: 14487)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.06774957478046417
    2. 'node' → logprob: -2.817749500274658
    3. 'g' → logprob: -5.442749500274658
    4. 'child' → logprob: -7.317749500274658
    5. 'no' → logprob: -8.817749977111816
    6. 'children' → logprob: -8.817749977111816
    7. ' left' → logprob: -9.067749977111816
    8. 'de' → logprob: -9.692749977111816
    9. '   ' → logprob: -10.317749977111816
    10. 'n' → logprob: -10.567749977111816

Token 1028: '-ar' (ID: 31325)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.058303676545619965
    2. 'node' → logprob: -3.1833035945892334
    3. '       ' → logprob: -5.3083038330078125
    4. 'tree' → logprob: -6.0583038330078125
    5. '   ' → logprob: -6.5583038330078125
    6. '_left' → logprob: -6.6833038330078125
    7. '.left' → logprob: -6.6833038330078125
    8. 'nodes' → logprob: -6.6833038330078125
    9. 'g' → logprob: -7.4333038330078125
    10. ' left' → logprob: -7.9333038330078125

Token 1029: 'bres' (ID: 88684)
  Prédit: 'bres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bres' → logprob: -0.04030544310808182
    2. 'bre' → logprob: -3.2903053760528564
    3. 'b' → logprob: -6.1653056144714355
    4. 'bo' → logprob: -10.290305137634277
    5. 'bes' → logprob: -11.165305137634277
    6. 'e' → logprob: -11.290305137634277
    7. 'bors' → logprob: -11.540305137634277
    8. 'cs' → logprob: -11.790305137634277
    9. 'c' → logprob: -11.915305137634277
    10. '```' → logprob: -11.915305137634277

Token 1030: ' gauche' (ID: 58367)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6597165465354919
    2. 'left' → logprob: -0.7847165465354919
    3. ' left' → logprob: -3.6597166061401367
    4. '   ' → logprob: -8.659716606140137
    5. '(left' → logprob: -8.784716606140137
    6. 'l' → logprob: -9.034716606140137
    7. '	left' → logprob: -9.284716606140137
    8. '[left' → logprob: -9.409716606140137
    9. ',left' → logprob: -9.534716606140137
    10. ',' → logprob: -9.784716606140137

Token 1031: ' et' (ID: 859)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021725529804825783
    2. 'left' → logprob: -4.396725654602051
    3. ',' → logprob: -5.521725654602051
    4. 'et' → logprob: -6.021725654602051
    5. ' and' → logprob: -6.896725654602051
    6. ' et' → logprob: -7.771725654602051
    7. '(left' → logprob: -8.14672565460205
    8. 'and' → logprob: -8.27172565460205
    9. ' left' → logprob: -8.64672565460205
    10. ',left' → logprob: -8.64672565460205

Token 1032: ' droit' (ID: 29964)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.07127753645181656
    2. 'dro' → logprob: -2.946277618408203
    3. 'd' → logprob: -4.446277618408203
    4. '       ' → logprob: -5.571277618408203
    5. ' right' → logprob: -8.446277618408203
    6. '   ' → logprob: -8.821277618408203
    7. ' droit' → logprob: -9.071277618408203
    8. ' droite' → logprob: -9.571277618408203
    9. '#' → logprob: -9.571277618408203
    10. 'dre' → logprob: -10.446277618408203

Token 1033: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15057317912578583
    2. 'left' → logprob: -2.025573253631592
    3. ' left' → logprob: -5.025573253631592
    4. 'ways' → logprob: -8.150572776794434
    5. 'l' → logprob: -8.400572776794434
    6. '   ' → logprob: -8.525572776794434
    7. '
' → logprob: -9.400572776794434
    8. '(left' → logprob: -9.400572776794434
    9. '	left' → logprob: -10.025572776794434
    10. '{' → logprob: -10.025572776794434

Token 1034: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001609481987543404
    2. 'left' → logprob: -7.0016093254089355
    3. '   ' → logprob: -7.6266093254089355
    4. '
' → logprob: -9.001609802246094
    5. '```' → logprob: -10.126609802246094
    6. ' left' → logprob: -10.501609802246094
    7. '	left' → logprob: -12.751609802246094
    8. '[left' → logprob: -12.751609802246094
    9. '{
' → logprob: -12.876609802246094
    10. '        
' → logprob: -13.126609802246094

Token 1035: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.001680059707723558
    2. '       ' → logprob: -7.25167989730835
    3. ' left' → logprob: -8.001680374145508
    4. 'l' → logprob: -8.376680374145508
    5. 'dp' → logprob: -8.501680374145508
    6. 'ways' → logprob: -9.751680374145508
    7. 'dict' → logprob: -9.876680374145508
    8. '   ' → logprob: -10.126680374145508
    9. 'lhs' → logprob: -11.751680374145508
    10. '	left' → logprob: -11.876680374145508

Token 1036: '_dist' (ID: 37968)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3616642355918884
    2. 'ways' → logprob: -2.861664295196533
    3. '_counts' → logprob: -2.986664295196533
    4. '_dict' → logprob: -3.111664295196533
    5. '_dist' → logprob: -3.236664295196533
    6. '_sets' → logprob: -3.736664295196533
    7. '_results' → logprob: -3.986664295196533
    8. '_dis' → logprob: -4.361664295196533
    9. '_dp' → logprob: -5.236664295196533
    10. 'sets' → logprob: -5.236664295196533

Token 1037: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42875292897224426
    2. ' =' → logprob: -1.0537528991699219
    3. ',' → logprob: -10.303752899169922
    4. '       ' → logprob: -11.928752899169922
    5. '=node' → logprob: -12.303752899169922
    6. '   ' → logprob: -12.678752899169922
    7. ' ' → logprob: -13.303752899169922
    8. ')' → logprob: -14.053752899169922
    9. '  ' → logprob: -15.303752899169922
    10. 's' → logprob: -15.678752899169922

Token 1038: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -2.7610454708337784e-05
    2. ' count' → logprob: -10.500027656555176
    3. '   ' → logprob: -16.75002670288086
    4. 'counter' → logprob: -20.25002670288086
    5. '(count' → logprob: -20.25002670288086
    6. ' ' → logprob: -20.50002670288086
    7. 'cache' → logprob: -20.75002670288086
    8. '	count' → logprob: -20.87502670288086
    9. 'counts' → logprob: -21.00002670288086
    10. '       ' → logprob: -22.12502670288086

Token 1039: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.008129963040119e-06
    2. '(node' → logprob: -12.625003814697266
    3. 'Ways' → logprob: -15.875003814697266
    4. 'ways' → logprob: -16.375003814697266
    5. '(' → logprob: -16.375003814697266
    6. '\' → logprob: -16.625003814697266
    7. '[node' → logprob: -16.875003814697266
    8. '(_' → logprob: -17.500003814697266
    9. '_
' → logprob: -17.500003814697266
    10. '```' → logprob: -18.500003814697266

Token 1040: 'ways' (ID: 2771)
  Prédit: 'ways'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.00073197390884161
    2. '_' → logprob: -7.250731945037842
    3. 'Ways' → logprob: -11.125732421875
    4. 'way' → logprob: -12.875732421875
    5. ' ways' → logprob: -13.375732421875
    6. 'WAYS' → logprob: -13.625732421875
    7. 'node' → logprob: -14.375732421875
    8. 'left' → logprob: -14.625732421875
    9. '(node' → logprob: -15.250732421875
    10. '```' → logprob: -16.500732421875

Token 1041: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -6.2729995988775045e-06
    2. '(' → logprob: -12.375006675720215
    3. '(
' → logprob: -14.000006675720215
    4. '       ' → logprob: -14.500006675720215
    5. 'node' → logprob: -15.000006675720215
    6. ' (' → logprob: -15.875006675720215
    7. ',node' → logprob: -16.7500057220459
    8. '   ' → logprob: -18.0000057220459
    9. '```' → logprob: -18.1250057220459
    10. ',' → logprob: -18.2500057220459

Token 1042: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -1.8312570318812504e-05
    2. '.' → logprob: -12.000018119812012
    3. '.right' → logprob: -12.000018119812012
    4. '.node' → logprob: -13.000018119812012
    5. ' .' → logprob: -13.125018119812012
    6. ').' → logprob: -13.875018119812012
    7. '.le' → logprob: -16.125019073486328
    8. ')' → logprob: -16.125019073486328
    9. '   ' → logprob: -16.250019073486328
    10. '.Left' → logprob: -16.500019073486328

Token 1043: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7372048862162046e-05
    2. ' ,' → logprob: -11.000027656555176
    3. ',node' → logprob: -12.250027656555176
    4. ')' → logprob: -12.375027656555176
    5. ',
' → logprob: -14.125027656555176
    6. ',m' → logprob: -15.375027656555176
    7. '       ' → logprob: -16.25002670288086
    8. ',n' → logprob: -16.37502670288086
    9. '),' → logprob: -17.12502670288086
    10. '(' → logprob: -17.12502670288086

Token 1044: ' subsets' (ID: 165377)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.004090985283255577
    2. ' subsets' → logprob: -5.504090785980225
    3. 'subset' → logprob: -11.879091262817383
    4. ' sub' → logprob: -12.629091262817383
    5. '       ' → logprob: -13.379091262817383
    6. '   ' → logprob: -15.004091262817383
    7. '           ' → logprob: -16.129091262817383
    8. '	sub' → logprob: -16.379091262817383
    9. 'sets' → logprob: -17.004091262817383
    10. '[sub' → logprob: -17.129091262817383

Token 1045: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015395533409900963
    2. ' ,' → logprob: -8.875153541564941
    3. ',m' → logprob: -11.750153541564941
    4. '       ' → logprob: -12.625153541564941
    5. '   ' → logprob: -13.375153541564941
    6. ')' → logprob: -15.000153541564941
    7. '  ' → logprob: -15.500153541564941
    8. ',left' → logprob: -15.500153541564941
    9. ',
' → logprob: -15.625153541564941
    10. '      ' → logprob: -15.750153541564941

Token 1046: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.0002964935847558081
    2. ' memo' → logprob: -8.125296592712402
    3. 'm' → logprob: -15.750296592712402
    4. ' ' → logprob: -16.250295639038086
    5. 'mem' → logprob: -16.375295639038086
    6. 'memory' → logprob: -16.875295639038086
    7. '   ' → logprob: -17.250295639038086
    8. 'mime' → logprob: -17.875295639038086
    9. '     ' → logprob: -18.000295639038086
    10. '```' → logprob: -18.625295639038086

Token 1047: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7250140905380249
    2. ')
' → logprob: -0.7250140905380249
    3. ',' → logprob: -3.4750142097473145
    4. '   ' → logprob: -8.100013732910156
    5. ')
' → logprob: -10.225013732910156
    6. ',)
' → logprob: -11.100013732910156
    7. ' ' → logprob: -11.350013732910156
    8. ' )
' → logprob: -11.475013732910156
    9. ',
' → logprob: -11.975013732910156
    10. ' ,' → logprob: -12.100013732910156

Token 1048: '       ' (ID: 309)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.45788463950157166
    2. '       ' → logprob: -1.582884669303894
    3. ' right' → logprob: -1.832884669303894
    4. '	right' → logprob: -7.207884788513184
    5. '
' → logprob: -7.332884788513184
    6. '```' → logprob: -7.957884788513184
    7. '   ' → logprob: -9.207884788513184
    8. '        
' → logprob: -10.207884788513184
    9. '	' → logprob: -10.332884788513184
    10. '.right' → logprob: -10.707884788513184

Token 1049: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.00032271104282699525
    2. 'if' → logprob: -8.125322341918945
    3. ' right' → logprob: -10.625322341918945
    4. '#' → logprob: -14.000322341918945
    5. '       ' → logprob: -14.500322341918945
    6. '	right' → logprob: -15.250322341918945
    7. 'Right' → logprob: -15.500322341918945
    8. ' if' → logprob: -15.750322341918945
    9. '   ' → logprob: -16.625322341918945
    10. '[right' → logprob: -16.875322341918945

Token 1050: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -8.08944896562025e-05
    2. 'dist' → logprob: -10.125081062316895
    3. '_distribution' → logprob: -12.125081062316895
    4. '_dis' → logprob: -12.375081062316895
    5. ')_' → logprob: -12.375081062316895
    6. '       ' → logprob: -12.500081062316895
    7. '_' → logprob: -12.750081062316895
    8. 'Dist' → logprob: -12.875081062316895
    9. ')' → logprob: -13.375081062316895
    10. '_disc' → logprob: -13.375081062316895

Token 1051: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3133191168308258
    2. '=' → logprob: -1.3133190870285034
    3. '   ' → logprob: -10.188319206237793
    4. ',' → logprob: -11.938319206237793
    5. '={}' → logprob: -12.688319206237793
    6. '       ' → logprob: -12.813319206237793
    7. ' ' → logprob: -13.063319206237793
    8. ')' → logprob: -13.563319206237793
    9. 'def' → logprob: -14.563319206237793
    10. 's' → logprob: -14.688319206237793

Token 1052: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.306760805164231e-05
    2. ' count' → logprob: -11.25001335144043
    3. '(count' → logprob: -19.50001335144043
    4. '   ' → logprob: -22.75001335144043
    5. '	count' → logprob: -23.12501335144043
    6. 'counts' → logprob: -23.37501335144043
    7. ' ' → logprob: -23.87501335144043
    8. 'Count' → logprob: -24.37501335144043
    9. '[count' → logprob: -24.75001335144043
    10. '$count' → logprob: -25.00001335144043

Token 1053: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0004487844998948276
    2. 'ways' → logprob: -8.000449180603027
    3. 'Ways' → logprob: -9.750449180603027
    4. '(node' → logprob: -10.000449180603027
    5. '[node' → logprob: -12.875449180603027
    6. 'node' → logprob: -13.000449180603027
    7. '\' → logprob: -14.250449180603027
    8. '...' → logprob: -14.625449180603027
    9. 'WAYS' → logprob: -14.625449180603027
    10. ' ways' → logprob: -14.750449180603027

Token 1054: 'ways' (ID: 2771)
  Prédit: 'ways'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -8.2994620242971e-06
    2. 'Ways' → logprob: -12.625008583068848
    3. 'memo' → logprob: -12.875008583068848
    4. 'way' → logprob: -14.000008583068848
    5. ' ways' → logprob: -14.125008583068848
    6. 'count' → logprob: -14.750008583068848
    7. 'WAYS' → logprob: -15.500008583068848
    8. '
' → logprob: -17.00000762939453
    9. 'node' → logprob: -17.00000762939453
    10. '#' → logprob: -17.12500762939453

Token 1055: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -5.512236498361744e-07
    2. 'node' → logprob: -15.500000953674316
    3. '(' → logprob: -16.25
    4. '[node' → logprob: -16.25
    5. ' (' → logprob: -17.625
    6. ',node' → logprob: -18.25
    7. '=node' → logprob: -18.5
    8. ')' → logprob: -18.875
    9. '(
' → logprob: -19.0
    10. '       ' → logprob: -19.875

Token 1056: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -2.339278580620885e-06
    2. '.' → logprob: -13.750001907348633
    3. 'right' → logprob: -14.375001907348633
    4. '.node' → logprob: -14.875001907348633
    5. '.left' → logprob: -15.125001907348633
    6. ' .' → logprob: -17.375001907348633
    7. 'node' → logprob: -18.250001907348633
    8. '.r' → logprob: -19.000001907348633
    9. '.Right' → logprob: -19.375001907348633
    10. ').' → logprob: -19.625001907348633

Token 1057: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010735770774772391
    2. ' ,' → logprob: -9.625107765197754
    3. ',node' → logprob: -10.125107765197754
    4. '   ' → logprob: -14.750107765197754
    5. ')' → logprob: -14.750107765197754
    6. '(node' → logprob: -15.250107765197754
    7. '       ' → logprob: -16.750106811523438
    8. ',
' → logprob: -17.125106811523438
    9. '[node' → logprob: -17.250106811523438
    10. '[' → logprob: -17.625106811523438

Token 1058: ' subsets' (ID: 165377)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.0007127894787117839
    2. ' subsets' → logprob: -7.250712871551514
    3. 'subset' → logprob: -13.000712394714355
    4. 'subs' → logprob: -16.000713348388672
    5. '       ' → logprob: -16.125713348388672
    6. '   ' → logprob: -16.375713348388672
    7. 'node' → logprob: -16.500713348388672
    8. ' sub' → logprob: -16.625713348388672
    9. '	sub' → logprob: -17.125713348388672
    10. 'substr' → logprob: -17.250713348388672

Token 1059: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011033025803044438
    2. ',m' → logprob: -6.876103401184082
    3. ' ,' → logprob: -9.626103401184082
    4. '       ' → logprob: -13.626103401184082
    5. '   ' → logprob: -13.751103401184082
    6. ')' → logprob: -14.126103401184082
    7. 'm' → logprob: -15.126103401184082
    8. ',node' → logprob: -15.376103401184082
    9. ',s' → logprob: -15.626103401184082
    10. ',
' → logprob: -15.626103401184082

Token 1060: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.012555323541164398
    2. 'sub' → logprob: -4.512555122375488
    3. ' memo' → logprob: -6.512555122375488
    4. ' subsets' → logprob: -10.887555122375488
    5. 'mem' → logprob: -13.512555122375488
    6. 'subset' → logprob: -14.762555122375488
    7. '       ' → logprob: -15.262555122375488
    8. '   ' → logprob: -15.262555122375488
    9. 'subs' → logprob: -15.262555122375488
    10. 'm' → logprob: -15.512555122375488

Token 1061: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21239005029201508
    2. '       ' → logprob: -1.8373900651931763
    3. '   ' → logprob: -3.7123899459838867
    4. '
' → logprob: -5.587389945983887
    5. ')
' → logprob: -5.587389945983887
    6. ',' → logprob: -8.837389945983887
    7. '        
' → logprob: -11.462389945983887
    8. '```' → logprob: -11.462389945983887
    9. '    
' → logprob: -11.962389945983887
    10. '),' → logprob: -12.212389945983887

Token 1062: '       ' (ID: 309)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2106739580631256
    2. '       ' → logprob: -1.8356739282608032
    3. 'res' → logprob: -4.460673809051514
    4. '   ' → logprob: -4.460673809051514
    5. 'ways' → logprob: -5.460673809051514
    6. 'dist' → logprob: -6.835673809051514
    7. 'results' → logprob: -7.335673809051514
    8. '        
' → logprob: -7.710673809051514
    9. 'memo' → logprob: -8.335674285888672
    10. ' result' → logprob: -9.460674285888672

Token 1063: ' #' (ID: 1069)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.27342119812965393
    2. 'result' → logprob: -1.7734211683273315
    3. 'res' → logprob: -3.023421287536621
    4. 'memo' → logprob: -4.523421287536621
    5. 'if' → logprob: -4.898421287536621
    6. '       ' → logprob: -6.273421287536621
    7. 'combined' → logprob: -8.523421287536621
    8. 'results' → logprob: -9.148421287536621
    9. 'ways' → logprob: -9.523421287536621
    10. '#' (adapté à ' #') → logprob: -9.523421287536621

Token 1064: ' Pour' (ID: 13931)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.015338827855885029
    2. 'if' → logprob: -5.015338897705078
    3. 'memo' → logprob: -5.140338897705078
    4. 'result' → logprob: -6.515338897705078
    5. 'res' → logprob: -6.890338897705078
    6. '       ' → logprob: -8.890338897705078
    7. 'cache' → logprob: -10.640338897705078
    8. '   ' → logprob: -10.765338897705078
    9. '#' → logprob: -10.890338897705078
    10. 'results' → logprob: -11.890338897705078

Token 1065: ' le' (ID: 505)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -1.0231027603149414
    2. 'res' → logprob: -1.7731027603149414
    3. 'result' → logprob: -1.8981027603149414
    4. 'subset' → logprob: -2.6481027603149414
    5. 's' → logprob: -2.8981027603149414
    6. '(key' → logprob: -3.1481027603149414
    7. 'node' → logprob: -3.5231027603149414
    8. '(s' → logprob: -3.8981027603149414
    9. 'memo' → logprob: -4.148102760314941
    10. '(' → logprob: -4.273102760314941

Token 1066: ' noe' (ID: 49921)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.8891971111297607
    2. 'node' → logprob: -1.6391971111297607
    3. '(node' → logprob: -1.8891971111297607
    4. '(key' → logprob: -2.3891971111297607
    5. 'subset' → logprob: -3.3891971111297607
    6. 'memo' → logprob: -4.26419734954834
    7. '(s' → logprob: -4.38919734954834
    8. 's' → logprob: -4.38919734954834
    9. 'op' → logprob: -4.51419734954834
    10. 'sub' → logprob: -4.63919734954834

Token 1067: 'ud' (ID: 527)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.624888002872467
    2. 'ud' → logprob: -1.2498879432678223
    3. '   ' → logprob: -2.7498879432678223
    4. '       ' → logprob: -2.9998879432678223
    5. 'de' → logprob: -3.2498879432678223
    6. 'd' → logprob: -5.624887943267822
    7. 'e' → logprob: -5.624887943267822
    8. '```' → logprob: -6.249887943267822
    9. '        ' → logprob: -6.374887943267822
    10. 'def' → logprob: -6.499887943267822

Token 1068: ' actuel' (ID: 113646)
  Prédit: '_id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.033439818769693375
    2. '   ' → logprob: -3.658439874649048
    3. '_key' → logprob: -6.158439636230469
    4. '       ' → logprob: -6.533439636230469
    5. 'if' → logprob: -6.783439636230469
    6. 'key' → logprob: -7.658439636230469
    7. 'id' → logprob: -7.658439636230469
    8. 'memo' → logprob: -7.908439636230469
    9. ',' → logprob: -8.283439636230469
    10. ':' → logprob: -8.783439636230469

Token 1069: ',' (ID: 11)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5499022603034973
    2. '       ' → logprob: -0.9249022603034973
    3. 'res' → logprob: -4.799902439117432
    4. 'key' → logprob: -5.549902439117432
    5. 'memo' → logprob: -5.799902439117432
    6. 'if' → logprob: -6.049902439117432
    7. 'results' → logprob: -6.299902439117432
    8. ' result' → logprob: -6.299902439117432
    9. '   ' → logprob: -6.549902439117432
    10. 'ways' → logprob: -7.174902439117432

Token 1070: ' on' (ID: 402)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8566789031028748
    2. 'res' → logprob: -1.3566789627075195
    3. 'key' → logprob: -1.3566789627075195
    4. 'if' → logprob: -3.1066789627075195
    5. 'dist' → logprob: -5.2316789627075195
    6. 'memo' → logprob: -5.3566789627075195
    7. '       ' → logprob: -5.6066789627075195
    8. 'combined' → logprob: -7.7316789627075195
    9. 'dp' → logprob: -7.8566789627075195
    10. 'total' → logprob: -8.10667896270752

Token 1071: ' veut' (ID: 41653)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.3948536515235901
    2. 'result' → logprob: -1.8948535919189453
    3. 'res' → logprob: -2.2698535919189453
    4. 'if' → logprob: -3.6448535919189453
    5. '       ' → logprob: -4.144853591918945
    6. 'memo' → logprob: -4.269853591918945
    7. '#' → logprob: -5.394853591918945
    8. 'results' → logprob: -5.769853591918945
    9. '   ' → logprob: -6.144853591918945
    10. 'ways' → logprob: -6.394853591918945

Token 1072: ' la' (ID: 557)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.15139958262443542
    2. 'res' → logprob: -2.276399612426758
    3. 'dist' → logprob: -4.401399612426758
    4. '       ' → logprob: -4.526399612426758
    5. 'results' → logprob: -5.526399612426758
    6. 'ways' → logprob: -5.651399612426758
    7. 'dp' → logprob: -6.026399612426758
    8. 'key' → logprob: -6.526399612426758
    9. 'ans' → logprob: -7.276399612426758
    10. 'total' → logprob: -7.526399612426758

Token 1073: ' distribution' (ID: 12545)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.20156311988830566
    2. 'result' → logprob: -2.0765631198883057
    3. 'res' → logprob: -3.0765631198883057
    4. 'memo' → logprob: -5.201562881469727
    5. 'if' → logprob: -6.201562881469727
    6. 'dist' → logprob: -6.826562881469727
    7. '       ' → logprob: -7.201562881469727
    8. 'combined' → logprob: -7.451562881469727
    9. 'results' → logprob: -8.076562881469727
    10. 'total' → logprob: -8.326562881469727

Token 1074: ' (' (ID: 350)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.10944987833499908
    2. '       ' → logprob: -2.484449863433838
    3. 'dist' → logprob: -4.234449863433838
    4. 'results' → logprob: -6.984449863433838
    5. 'res' → logprob: -7.109449863433838
    6. 'ways' → logprob: -7.234449863433838
    7. 'current' → logprob: -7.484449863433838
    8. 'distribution' → logprob: -7.484449863433838
    9. 'combined' → logprob: -7.859449863433838
    10. 'count' → logprob: -8.109450340270996

Token 1075: 'ensemble' (ID: 37301)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.40029796957969666
    2. 'result' → logprob: -1.400297999382019
    3. 'res' → logprob: -2.6502978801727295
    4. 'ways' → logprob: -4.900298118591309
    5. 'distribution' → logprob: -6.400298118591309
    6. 'dp' → logprob: -6.650298118591309
    7. 'counter' → logprob: -6.650298118591309
    8. 'current' → logprob: -8.650298118591309
    9. 'count' → logprob: -8.775298118591309
    10. 'curr' → logprob: -8.900298118591309

Token 1076: ' ->' (ID: 2747)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4261819124221802
    2. ')' → logprob: -2.1761817932128906
    3. '=' → logprob: -2.4261817932128906
    4. ',' → logprob: -2.5511817932128906
    5. '       ' → logprob: -3.4261817932128906
    6. '   ' → logprob: -4.051181793212891
    7. 'result' → logprob: -5.176181793212891
    8. '):
' → logprob: -6.676181793212891
    9. '),' → logprob: -6.801181793212891
    10. '_counts' → logprob: -7.176181793212891

Token 1077: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.3331087827682495
    2. 'int' → logprob: -2.083108901977539
    3. 'count' → logprob: -2.333108901977539
    4. 'ways' → logprob: -3.208108901977539
    5. 'number' → logprob: -4.958108901977539
    6. 'dict' → logprob: -5.333108901977539
    7. 'counts' → logprob: -6.208108901977539
    8. 'nb' → logprob: -6.583108901977539
    9. 'counter' → logprob: -6.833108901977539
    10. 'fa' → logprob: -6.833108901977539

Token 1078: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.028658950701355934
    2. '_de' → logprob: -5.278658866882324
    3. '```' → logprob: -5.403658866882324
    4. '       ' → logprob: -5.528658866882324
    5. '_of' → logprob: -5.528658866882324
    6. ')' → logprob: -5.528658866882324
    7. '_tokens' → logprob: -6.528658866882324
    8. ')_' → logprob: -6.653658866882324
    9. '   ' → logprob: -6.778658866882324
    10. '_)' → logprob: -7.528658866882324

Token 1079: ' façons' (ID: 165958)
  Prédit: 'fa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fa' → logprob: -0.03410688042640686
    2. ' façons' → logprob: -4.034106731414795
    3. 'ways' → logprob: -4.784106731414795
    4. '_' → logprob: -5.534106731414795
    5. '   ' → logprob: -6.659106731414795
    6. '```' → logprob: -7.034106731414795
    7. ' fa' → logprob: -8.034107208251953
    8. 'man' → logprob: -8.409107208251953
    9. '       ' → logprob: -8.659107208251953
    10. ' ' → logprob: -9.284107208251953

Token 1080: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27434104681015015
    2. '       ' → logprob: -2.024341106414795
    3. '   ' → logprob: -3.649341106414795
    4. ' )' → logprob: -4.149341106414795
    5. 'tokens' → logprob: -4.524341106414795
    6. '{' → logprob: -4.899341106414795
    7. ',' → logprob: -5.024341106414795
    8. ' de' → logprob: -5.024341106414795
    9. 'for' → logprob: -5.274341106414795
    10. ' for' → logprob: -5.399341106414795

Token 1081: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012104723136872053
    2. 'result' → logprob: -7.501210689544678
    3. '   ' → logprob: -8.50121021270752
    4. '```' → logprob: -8.50121021270752
    5. '        
' → logprob: -9.25121021270752
    6. ',' → logprob: -10.12621021270752
    7. 'tokens' → logprob: -11.25121021270752
    8. '	' → logprob: -11.25121021270752
    9. 'counts' → logprob: -11.25121021270752
    10. 'dist' → logprob: -11.75121021270752

Token 1082: ' dist' (ID: 3601)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.47093942761421204
    2. 'dist' (adapté à ' dist') → logprob: -1.2209393978118896
    3. 'res' → logprob: -3.4709393978118896
    4. '       ' → logprob: -3.4709393978118896
    5. 'dp' → logprob: -4.720939636230469
    6. 'ways' → logprob: -4.970939636230469
    7. 'distribution' → logprob: -6.595939636230469
    8. 'results' → logprob: -8.220939636230469
    9. 'counter' → logprob: -8.720939636230469
    10. 'counts' → logprob: -8.720939636230469

Token 1083: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0890827551484108
    2. '=' → logprob: -2.464082717895508
    3. '={}' → logprob: -9.089082717895508
    4. '   ' → logprob: -10.714082717895508
    5. '={' → logprob: -13.464082717895508
    6. '    ' → logprob: -13.589082717895508
    7. '{' → logprob: -14.089082717895508
    8. ' ' → logprob: -14.089082717895508
    9. '{}' → logprob: -14.214082717895508
    10. '       ' → logprob: -14.464082717895508

Token 1084: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -1.9266199160483666e-05
    2. 'dict' → logprob: -11.500019073486328
    3. 'default' → logprob: -11.750019073486328
    4. '{' → logprob: -14.500019073486328
    5. '{}
' → logprob: -14.625019073486328
    6. '{}

' → logprob: -15.625019073486328
    7. '{})' → logprob: -17.125019073486328
    8. '{}\' → logprob: -18.750019073486328
    9. '{}_' → logprob: -19.625019073486328
    10. '{},' → logprob: -19.625019073486328

Token 1085: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17055076360702515
    2. 'for' → logprob: -2.29555082321167
    3. ' for' → logprob: -3.67055082321167
    4. '	for' → logprob: -3.67055082321167
    5. '   ' → logprob: -5.54555082321167
    6. '	' → logprob: -7.79555082321167
    7. '```' → logprob: -8.545550346374512
    8. '\t' → logprob: -8.670550346374512
    9. 'tokens' → logprob: -9.045550346374512
    10. '	   ' → logprob: -9.545550346374512

Token 1086: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02817809209227562
    2. '       ' → logprob: -3.6531779766082764
    3. 'if' → logprob: -7.0281782150268555
    4. 'key' → logprob: -7.5281782150268555
    5. 'keys' → logprob: -8.153178215026855
    6. 'memo' → logprob: -9.653178215026855
    7. '#' (adapté à ' #') → logprob: -9.903178215026855
    8. ' for' → logprob: -11.028178215026855
    9. '   ' → logprob: -11.153178215026855
    10. '	for' → logprob: -11.653178215026855

Token 1087: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.030030131340026855
    2. '       ' → logprob: -4.405030250549316
    3. 'if' → logprob: -4.405030250549316
    4. 'key' → logprob: -6.030030250549316
    5. 'keys' → logprob: -6.405030250549316
    6. 'ops' → logprob: -7.405030250549316
    7. '   ' → logprob: -8.655030250549316
    8. '#' → logprob: -9.030030250549316
    9. 'memo' → logprob: -9.530030250549316
    10. 'possible' → logprob: -9.780030250549316

Token 1088: ' chaque' (ID: 21194)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.7621198296546936
    2. 'l' → logprob: -1.1371197700500488
    3. 'op' → logprob: -1.7621197700500488
    4. ' left' → logprob: -4.512119770050049
    5. 's' → logprob: -5.012119770050049
    6. ' op' → logprob: -5.137119770050049
    7. '(left' → logprob: -5.137119770050049
    8. ' l' → logprob: -5.512119770050049
    9. '(op' → logprob: -6.012119770050049
    10. '(l' → logprob: -6.762119770050049

Token 1089: ' couple' (ID: 7167)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3011869192123413
    2. 'left' → logprob: -1.8011869192123413
    3. ' left' → logprob: -3.801187038421631
    4. ' l' → logprob: -3.801187038421631
    5. 'ls' → logprob: -4.551187038421631
    6. 'op' → logprob: -4.676187038421631
    7. 's' → logprob: -4.801187038421631
    8. ' op' → logprob: -5.426187038421631
    9. '(left' → logprob: -5.426187038421631
    10. '(l' → logprob: -5.801187038421631

Token 1090: ' d' (ID: 272)
  Prédit: '(left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.054170090705156326
    2. 'left' → logprob: -3.4291701316833496
    3. ' (' → logprob: -4.30417013168335
    4. '(' → logprob: -5.80417013168335
    5. '(s' → logprob: -6.42917013168335
    6. ' left' → logprob: -7.80417013168335
    7. '       ' → logprob: -8.179169654846191
    8. '(
' → logprob: -8.429169654846191
    9. 'of' → logprob: -8.679169654846191
    10. '(l' → logprob: -8.804169654846191

Token 1091: ''' (ID: 6)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.494974285364151
    2. '(left' → logprob: -1.2449742555618286
    3. '(s' → logprob: -3.619974374771118
    4. 'sets' → logprob: -3.744974374771118
    5. 'keys' → logprob: -4.244974136352539
    6. 'key' → logprob: -4.744974136352539
    7. 's' → logprob: -5.244974136352539
    8. '(' → logprob: -5.494974136352539
    9. ' left' → logprob: -5.744974136352539
    10. ' (' → logprob: -5.994974136352539

Token 1092: 'ense' (ID: 1603)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.04318324849009514
    2. '(left' → logprob: -3.7931833267211914
    3. ' left' → logprob: -5.043183326721191
    4. 'sets' → logprob: -5.668183326721191
    5. 'keys' → logprob: -5.668183326721191
    6. 'l' → logprob: -6.168183326721191
    7. 's' → logprob: -6.293183326721191
    8. 'key' → logprob: -7.418183326721191
    9. 'dist' → logprob: -7.543183326721191
    10. 'set' → logprob: -8.293183326721191

Token 1093: 'mbles' (ID: 60383)
  Prédit: 'mbles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mbles' → logprob: -0.01594439148902893
    2. 'ts' → logprob: -4.640944480895996
    3. 't' → logprob: -5.765944480895996
    4. 'mble' → logprob: -6.265944480895996
    5. 'mb' → logprob: -6.890944480895996
    6. 'mbler' → logprob: -10.765944480895996
    7. 'nts' → logprob: -11.015944480895996
    8. 'm' → logprob: -11.140944480895996
    9. 'mbled' → logprob: -11.390944480895996
    10. 'sets' → logprob: -11.515944480895996

Token 1094: ' possibles' (ID: 97753)
  Prédit: '(left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.6694693565368652
    2. ' (' → logprob: -0.9194693565368652
    3. '(s' → logprob: -2.9194693565368652
    4. 'left' → logprob: -4.419469356536865
    5. ',' → logprob: -5.169469356536865
    6. '(l' → logprob: -5.419469356536865
    7. '       ' → logprob: -5.919469356536865
    8. '(' → logprob: -6.169469356536865
    9. ' left' → logprob: -6.419469356536865
    10. '_left' → logprob: -6.794469356536865

Token 1095: ' enc' (ID: 3219)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.605977177619934
    2. ',' → logprob: -1.730977177619934
    3. '(left' → logprob: -1.730977177619934
    4. 'for' → logprob: -2.1059770584106445
    5. '(s' → logprob: -2.2309770584106445
    6. 'left' → logprob: -2.6059770584106445
    7. '       ' → logprob: -3.1059770584106445
    8. 's' → logprob: -3.2309770584106445
    9. ' for' → logprob: -3.6059770584106445
    10. ' left' → logprob: -5.2309770584106445

Token 1096: 'od' (ID: 368)
  Prédit: 'ore'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ore' → logprob: -0.778680145740509
    2. 'od' → logprob: -2.4036800861358643
    3. 'ont' → logprob: -2.5286800861358643
    4. 'u' → logprob: -2.6536800861358643
    5. 'for' → logprob: -2.6536800861358643
    6. '   ' → logprob: -3.2786800861358643
    7. 'left' → logprob: -3.6536800861358643
    8. ' in' → logprob: -3.7786800861358643
    9. 'in' → logprob: -4.153680324554443
    10. 'l' → logprob: -4.278680324554443

Token 1097: 'és' (ID: 1756)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8174756169319153
    2. '   ' → logprob: -1.1924755573272705
    3. '       ' → logprob: -2.4424755573272705
    4. 'er' → logprob: -2.8174755573272705
    5. 'in' → logprob: -3.5674755573272705
    6. 'ré' → logprob: -4.19247579574585
    7. 'rés' → logprob: -4.81747579574585
    8. 're' → logprob: -5.19247579574585
    9. 'r' → logprob: -5.19247579574585
    10. ' for' → logprob: -5.31747579574585

Token 1098: ' dans' (ID: 2671)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.008191704750061
    2. 'left' → logprob: -1.633191704750061
    3. '(left' → logprob: -2.0081915855407715
    4. 'for' → logprob: -2.5081915855407715
    5. '(s' → logprob: -3.3831915855407715
    6. 'dans' → logprob: -3.6331915855407715
    7. ' (' → logprob: -3.8831915855407715
    8. 'g' → logprob: -4.1331915855407715
    9. 's' → logprob: -4.2581915855407715
    10. '1' → logprob: -4.3831915855407715

Token 1099: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0013022610219195485
    2. 'range' → logprob: -7.501302242279053
    3. ' left' → logprob: -7.501302242279053
    4. '[left' → logprob: -9.001302719116211
    5. 'list' → logprob: -10.376302719116211
    6. '(left' → logprob: -11.126302719116211
    7. '[' → logprob: -11.501302719116211
    8. ' range' → logprob: -13.001302719116211
    9. 'dist' → logprob: -13.001302719116211
    10. '   ' → logprob: -13.126302719116211

Token 1100: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.00019102399528492242
    2. 'dist' → logprob: -9.250190734863281
    3. '_' → logprob: -10.000190734863281
    4. '_set' → logprob: -12.375190734863281
    5. '_dis' → logprob: -12.500190734863281
    6. '`' → logprob: -12.875190734863281
    7. 's' → logprob: -12.875190734863281
    8. 'for' → logprob: -13.000190734863281
    9. '```' → logprob: -13.250190734863281
    10. ''_' → logprob: -13.250190734863281

Token 1101: ' et' (ID: 859)
  Prédit: '.keys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.keys' → logprob: -0.39123207330703735
    2. ':' → logprob: -2.0162320137023926
    3. ',' → logprob: -2.1412320137023926
    4. ':
' → logprob: -3.7662320137023926
    5. 'for' → logprob: -3.7662320137023926
    6. '       ' → logprob: -4.266232013702393
    7. ' for' → logprob: -5.141232013702393
    8. 'keys' → logprob: -5.891232013702393
    9. '.items' → logprob: -6.516232013702393
    10. '.' → logprob: -7.516232013702393

Token 1102: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.002190352650359273
    2. ' right' → logprob: -6.127190589904785
    3. 'for' → logprob: -13.002190589904785
    4. '   ' → logprob: -14.377190589904785
    5. '       ' → logprob: -14.752190589904785
    6. '	right' → logprob: -14.877190589904785
    7. '```' → logprob: -15.127190589904785
    8. '(right' → logprob: -15.377190589904785
    9. '
' → logprob: -15.502190589904785
    10. 'dist' → logprob: -15.502190589904785

Token 1103: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.0005194319528527558
    2. 'dist' → logprob: -7.750519275665283
    3. 'for' → logprob: -10.125519752502441
    4. '       ' → logprob: -11.625519752502441
    5. '   ' → logprob: -11.625519752502441
    6. 'right' → logprob: -12.000519752502441
    7. 'keys' → logprob: -12.375519752502441
    8. '_keys' → logprob: -12.625519752502441
    9. '```' → logprob: -13.375519752502441
    10. '_' → logprob: -13.375519752502441

Token 1104: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4535796344280243
    2. ':' → logprob: -1.3285796642303467
    3. 'for' → logprob: -3.0785796642303467
    4. ':
' → logprob: -3.5785796642303467
    5. ',' → logprob: -4.453579425811768
    6. ' for' → logprob: -4.578579425811768
    7. '   ' → logprob: -6.203579425811768
    8. '```' → logprob: -7.078579425811768
    9. '           ' → logprob: -7.578579425811768
    10. '.' → logprob: -8.578579902648926

Token 1105: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027713554445654154
    2. 'for' → logprob: -7.002771377563477
    3. ',' → logprob: -7.252771377563477
    4. '	' → logprob: -7.877771377563477
    5. ' for' → logprob: -8.502771377563477
    6. '           ' → logprob: -8.627771377563477
    7. '```' → logprob: -9.627771377563477
    8. '[' → logprob: -9.877771377563477
    9. '        
' → logprob: -9.877771377563477
    10. '   ' → logprob: -10.252771377563477

Token 1106: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.697655439376831
    2. '       ' → logprob: -0.822655439376831
    3. ' for' → logprob: -2.947655439376831
    4. '	' → logprob: -4.82265567779541
    5. '	for' → logprob: -6.57265567779541
    6. '   ' → logprob: -8.07265567779541
    7. '\t' → logprob: -8.82265567779541
    8. '	   ' → logprob: -9.07265567779541
    9. '           ' → logprob: -9.19765567779541
    10. ' ' → logprob: -9.57265567779541

Token 1107: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4088231325149536
    2. ' for' → logprob: -1.4088231325149536
    3. '       ' → logprob: -2.408823013305664
    4. '	for' → logprob: -7.658823013305664
    5. '   ' → logprob: -7.783823013305664
    6. '```' → logprob: -9.158823013305664
    7. '	' → logprob: -9.658823013305664
    8. ' ' → logprob: -9.783823013305664
    9. ' ' → logprob: -9.908823013305664
    10. '           ' → logprob: -11.283823013305664

Token 1108: ' calc' (ID: 25691)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007955804467201233
    2. ' for' → logprob: -5.382956027984619
    3. '       ' → logprob: -6.007956027984619
    4. '   ' → logprob: -7.382956027984619
    5. '	for' → logprob: -9.632955551147461
    6. 'in' → logprob: -9.757955551147461
    7. '```' → logprob: -10.882955551147461
    8. 'continue' → logprob: -11.257955551147461
    9. 'import' → logprob: -11.382955551147461
    10. 'keys' → logprob: -11.507955551147461

Token 1109: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.46253013610839844
    2. 'ite' → logprob: -1.8375301361083984
    3. 'for' → logprob: -2.7125301361083984
    4. 'ute' → logprob: -2.8375301361083984
    5. '       ' → logprob: -4.087530136108398
    6. 'iter' → logprob: -4.087530136108398
    7. '   ' → logprob: -4.962530136108398
    8. 'it' → logprob: -5.337530136108398
    9. 'ulate' → logprob: -5.337530136108398
    10. '#' → logprob: -5.587530136108398

Token 1110: ' le' (ID: 505)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2274617850780487
    2. ' for' → logprob: -1.602461814880371
    3. '       ' → logprob: -6.852461814880371
    4. '   ' → logprob: -9.102461814880371
    5. '```' → logprob: -9.227461814880371
    6. ' op' → logprob: -9.477461814880371
    7. 'keys' → logprob: -9.477461814880371
    8. '           ' → logprob: -9.602461814880371
    9. ' ' → logprob: -9.602461814880371
    10. 'left' → logprob: -9.727461814880371

Token 1111: ' résultat' (ID: 62556)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005624785553663969
    2. 'next' → logprob: -6.130624771118164
    3. ' for' → logprob: -6.380624771118164
    4. 'possible' → logprob: -7.005624771118164
    5. '```' → logprob: -9.130624771118164
    6. 'keys' → logprob: -9.255624771118164
    7. 'op' → logprob: -9.380624771118164
    8. ' next' → logprob: -9.630624771118164
    9. 'ops' → logprob: -10.005624771118164
    10. 'result' → logprob: -10.255624771118164

Token 1112: ' possible' (ID: 4149)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5432042479515076
    2. ' for' → logprob: -1.0432043075561523
    3. '       ' → logprob: -3.0432043075561523
    4. '```' → logprob: -4.668204307556152
    5. ',' → logprob: -5.918204307556152
    6. ' pour' → logprob: -6.668204307556152
    7. '           ' → logprob: -7.168204307556152
    8. '   ' → logprob: -7.543204307556152
    9. '.' → logprob: -7.668204307556152
    10. 'pour' → logprob: -7.793204307556152

Token 1113: ' avec' (ID: 3937)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.42223820090293884
    2. '       ' → logprob: -1.5472382307052612
    3. ' for' → logprob: -2.1722381114959717
    4. '           ' → logprob: -4.922238349914551
    5. '```' → logprob: -5.172238349914551
    6. '   ' → logprob: -7.047238349914551
    7. '               ' → logprob: -7.047238349914551
    8. ' pour' → logprob: -7.297238349914551
    9. ',' → logprob: -7.297238349914551
    10. 'pour' → logprob: -7.672238349914551

Token 1114: ' '' (ID: 461)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.39213764667510986
    2. 'op' → logprob: -2.1421375274658203
    3. ''op' → logprob: -2.7671375274658203
    4. ''' → logprob: -3.0171375274658203
    5. '['' → logprob: -3.1421375274658203
    6. 'for' → logprob: -3.8921375274658203
    7. ' op' → logprob: -4.26713752746582
    8. 'A' → logprob: -5.26713752746582
    9. ' '' → logprob: -5.89213752746582
    10. '   ' → logprob: -6.26713752746582

Token 1115: 'A' (ID: 32)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.3792095482349396
    2. ''A' → logprob: -1.7542095184326172
    3. ' op' → logprob: -3.004209518432617
    4. 'A' → logprob: -3.129209518432617
    5. ''op' → logprob: -3.629209518432617
    6. 'for' → logprob: -4.629209518432617
    7. ''' → logprob: -4.754209518432617
    8. ' '' → logprob: -7.254209518432617
    9. 'ops' → logprob: -7.504209518432617
    10. ' A' → logprob: -7.629209518432617

Token 1116: '','' (ID: 4074)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.20404955744743347
    2. ''' → logprob: -2.204049587249756
    3. ',' → logprob: -3.579049587249756
    4. '','' → logprob: -4.079049587249756
    5. '   ' → logprob: -5.329049587249756
    6. ''),' → logprob: -5.454049587249756
    7. 'X' → logprob: -5.704049587249756
    8. 'O' → logprob: -5.704049587249756
    9. ','' → logprob: -6.329049587249756
    10. '')' → logprob: -6.829049587249756

Token 1117: 'O' (ID: 46)
  Prédit: 'O'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'O' → logprob: -0.0011524823494255543
    2. ' O' → logprob: -7.376152515411377
    3. 'OX' → logprob: -9.001152038574219
    4. 'X' → logprob: -9.126152038574219
    5. ',O' → logprob: -9.501152038574219
    6. ' ' → logprob: -9.751152038574219
    7. ',' → logprob: -9.876152038574219
    8. ''O' → logprob: -9.876152038574219
    9. ' ,' → logprob: -10.876152038574219
    10. ''' → logprob: -11.626152038574219

Token 1118: '','' (ID: 4074)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.24048958718776703
    2. '','' → logprob: -1.7404896020889282
    3. ''' → logprob: -3.9904894828796387
    4. ',' → logprob: -4.740489482879639
    5. 'X' → logprob: -5.115489482879639
    6. ','' → logprob: -5.990489482879639
    7. '',
' → logprob: -7.240489482879639
    8. '   ' → logprob: -7.740489482879639
    9. ',X' → logprob: -8.240489959716797
    10. ' ,' → logprob: -8.240489959716797

Token 1119: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.00029947367147542536
    2. ''' → logprob: -8.125299453735352
    3. '`' → logprob: -13.375299453735352
    4. ' X' → logprob: -13.500299453735352
    5. ' ' → logprob: -15.125299453735352
    6. 'and' → logprob: -16.00029945373535
    7. '```' → logprob: -16.50029945373535
    8. '['' → logprob: -17.62529945373535
    9. '   ' → logprob: -17.62529945373535
    10. 'for' → logprob: -18.37529945373535

Token 1120: ''
' (ID: 2207)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6562599539756775
    2. '       ' → logprob: -1.4062600135803223
    3. ' for' → logprob: -1.7812600135803223
    4. ':
' → logprob: -4.031260013580322
    5. ':' → logprob: -4.281260013580322
    6. '   ' → logprob: -4.531260013580322
    7. ',' → logprob: -4.656260013580322
    8. ''' → logprob: -5.406260013580322
    9. '           ' → logprob: -5.781260013580322
    10. ',
' → logprob: -6.406260013580322

Token 1121: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029958980157971382
    2. ' for' → logprob: -4.279959201812744
    3. 'for' → logprob: -4.654959201812744
    4. ':' → logprob: -6.279959201812744
    5. ',' → logprob: -6.654959201812744
    6. '   ' → logprob: -7.279959201812744
    7. '        
' → logprob: -7.404959201812744
    8. '.' → logprob: -8.154958724975586
    9. '           ' → logprob: -8.404958724975586
    10. ' ' → logprob: -8.779958724975586

Token 1122: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9094610810279846
    2. ' for' → logprob: -1.1594610214233398
    3. '       ' → logprob: -1.2844610214233398
    4. '	for' → logprob: -6.28446102142334
    5. '        
' → logprob: -7.15946102142334
    6. '\t' → logprob: -7.28446102142334
    7. '	' → logprob: -7.40946102142334
    8. '   ' → logprob: -7.53446102142334
    9. ' ' → logprob: -7.65946102142334
    10. '```' → logprob: -8.28446102142334

Token 1123: ' puis' (ID: 18766)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07969886064529419
    2. '       ' → logprob: -2.5796988010406494
    3. ' for' → logprob: -7.2046990394592285
    4. '	for' → logprob: -10.32969856262207
    5. '   ' → logprob: -11.57969856262207
    6. '```' → logprob: -11.95469856262207
    7. 'keys' → logprob: -12.45469856262207
    8. '           ' → logprob: -12.57969856262207
    9. '	' → logprob: -12.82969856262207
    10. '               ' → logprob: -13.07969856262207

Token 1124: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.39289218187332153
    2. '       ' → logprob: -1.1428921222686768
    3. '           ' → logprob: -5.517892360687256
    4. ' for' → logprob: -6.392892360687256
    5. '               ' → logprob: -9.017891883850098
    6. '   ' → logprob: -9.517891883850098
    7. 'pour' → logprob: -9.767891883850098
    8. '                   ' → logprob: -11.017891883850098
    9. '```' → logprob: -11.892891883850098
    10. ' ' → logprob: -12.017891883850098

Token 1125: ' cum' (ID: 10023)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0020842391531914473
    2. ' for' → logprob: -6.377084255218506
    3. '   ' → logprob: -8.627083778381348
    4. '       ' → logprob: -8.752083778381348
    5. '	for' → logprob: -10.377083778381348
    6. 'continue' → logprob: -12.127083778381348
    7. 'update' → logprob: -13.752083778381348
    8. '           ' → logprob: -13.877083778381348
    9. '```' → logprob: -13.877083778381348
    10. ' ' → logprob: -14.002083778381348

Token 1126: 'ule' (ID: 1601)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.06861022114753723
    2. 'mul' → logprob: -3.818610191345215
    3. 'late' → logprob: -3.943610191345215
    4. 'le' → logprob: -4.193610191345215
    5. 'l' → logprob: -5.568610191345215
    6. '   ' → logprob: -6.318610191345215
    7. 'ule' → logprob: -7.193610191345215
    8. '       ' → logprob: -7.318610191345215
    9. '#' → logprob: -7.568610191345215
    10. 'ulate' → logprob: -7.818610191345215

Token 1127: ' le' (ID: 505)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.37244537472724915
    2. '       ' → logprob: -1.7474453449249268
    3. ' for' → logprob: -1.9974453449249268
    4. '           ' → logprob: -7.497445583343506
    5. '   ' → logprob: -8.997445106506348
    6. '               ' → logprob: -9.247445106506348
    7. '```' → logprob: -9.747445106506348
    8. ' (' → logprob: -9.872445106506348
    9. '(' → logprob: -10.247445106506348
    10. ' in' → logprob: -11.247445106506348

Token 1128: ' nombre' (ID: 9733)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04329615458846092
    2. ' for' → logprob: -3.1682960987091064
    3. '   ' → logprob: -8.918295860290527
    4. '       ' → logprob: -9.668295860290527
    5. ' ' → logprob: -10.918295860290527
    6. '```' → logprob: -11.168295860290527
    7. '
' → logprob: -11.543295860290527
    8. '           ' → logprob: -11.793295860290527
    9. 'import' → logprob: -11.918295860290527
    10. 'space' → logprob: -12.043295860290527

Token 1129: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7174675464630127
    2. 'for' → logprob: -0.7174675464630127
    3. ' for' → logprob: -4.467467308044434
    4. '   ' → logprob: -5.342467308044434
    5. '           ' → logprob: -6.342467308044434
    6. 'of' → logprob: -6.467467308044434
    7. ' of' → logprob: -7.342467308044434
    8. '	for' → logprob: -7.717467308044434
    9. '```' → logprob: -7.842467308044434
    10. '\t' → logprob: -7.967467308044434

Token 1130: ' façons' (ID: 165958)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.39543139934539795
    2. 'fa' → logprob: -1.145431399345398
    3. 'for' → logprob: -6.2704315185546875
    4. '   ' → logprob: -6.3954315185546875
    5. '#' → logprob: -6.7704315185546875
    6. '```' → logprob: -6.8954315185546875
    7. '       ' → logprob: -7.1454315185546875
    8. ' façons' → logprob: -7.5204315185546875
    9. 'fois' → logprob: -7.6454315185546875
    10. ' ways' → logprob: -8.770431518554688

Token 1131: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017381006851792336
    2. 'for' → logprob: -4.392381191253662
    3. ' for' → logprob: -5.392381191253662
    4. '	' → logprob: -9.017380714416504
    5. '   ' → logprob: -9.892380714416504
    6. '	for' → logprob: -10.517380714416504
    7. '           ' → logprob: -10.517380714416504
    8. '               ' → logprob: -10.892380714416504
    9. ' ' → logprob: -11.017380714416504
    10. ' ' → logprob: -11.767380714416504

Token 1132: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00885647814720869
    2. ' for' → logprob: -5.633856296539307
    3. 'for' → logprob: -6.258856296539307
    4. '        
' → logprob: -6.758856296539307
    5. '	' → logprob: -7.758856296539307
    6. '   ' → logprob: -8.008856773376465
    7. '           ' → logprob: -8.258856773376465
    8. ' 
' → logprob: -8.258856773376465
    9. '\t' → logprob: -8.633856773376465
    10. '               ' → logprob: -8.758856773376465

Token 1133: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.31383490562438965
    2. '       ' → logprob: -1.3138349056243896
    3. ' for' → logprob: -7.813835144042969
    4. '```' → logprob: -9.688835144042969
    5. 'keys' → logprob: -10.688835144042969
    6. '	for' → logprob: -10.813835144042969
    7. 'memo' → logprob: -10.813835144042969
    8. 'if' → logprob: -11.313835144042969
    9. '   ' → logprob: -11.563835144042969
    10. 'key' → logprob: -11.688835144042969

Token 1134: ' sl' (ID: 1925)
  Prédit: 'ls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ls' → logprob: -0.7627360224723816
    2. 'l' → logprob: -1.2627360820770264
    3. 's' → logprob: -2.2627360820770264
    4. 'left' → logprob: -2.3877360820770264
    5. '(s' → logprob: -4.012735843658447
    6. 'sl' → logprob: -4.137735843658447
    7. '(ls' → logprob: -4.637735843658447
    8. '(left' → logprob: -5.637735843658447
    9. '(l' → logprob: -5.887735843658447
    10. '(' → logprob: -6.387735843658447

Token 1135: ',' (ID: 11)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.7780594229698181
    2. 'eft' → logprob: -1.153059482574463
    3. '_' → logprob: -1.778059482574463
    4. ' in' → logprob: -4.278059482574463
    5. 'e' → logprob: -4.403059482574463
    6. '_e' → logprob: -4.653059482574463
    7. '_in' → logprob: -5.153059482574463
    8. '_l' → logprob: -5.403059482574463
    9. '_s' → logprob: -5.903059482574463
    10. '1' → logprob: -5.903059482574463

Token 1136: ' ways' (ID: 6984)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.4355540871620178
    2. 'cl' → logprob: -2.060554027557373
    3. 'cnt' → logprob: -2.560554027557373
    4. 'wl' → logprob: -2.810554027557373
    5. 'sr' → logprob: -2.935554027557373
    6. 'nr' → logprob: -3.935554027557373
    7. 'nl' → logprob: -4.810554027557373
    8. 'ways' → logprob: -6.185554027557373
    9. 'sc' → logprob: -6.810554027557373
    10. 'vl' → logprob: -7.185554027557373

Token 1137: '_l' (ID: 1478)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.48889434337615967
    2. 'in' → logprob: -0.9888943433761597
    3. ',' → logprob: -4.238894462585449
    4. ' ,' → logprob: -9.36389446258545
    5. ',in' → logprob: -9.86389446258545
    6. '   ' → logprob: -9.86389446258545
    7. '	in' → logprob: -10.61389446258545
    8. '_in' → logprob: -11.23889446258545
    9. ' ' → logprob: -11.61389446258545
    10. 's' → logprob: -11.73889446258545

Token 1138: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10399743169546127
    2. 'in' → logprob: -2.3539974689483643
    3. ',' → logprob: -5.603997230529785
    4. '   ' → logprob: -10.728997230529785
    5. '	in' → logprob: -11.103997230529785
    6. 'count' → logprob: -11.603997230529785
    7. ' ,' → logprob: -11.853997230529785
    8. '       ' → logprob: -12.103997230529785
    9. ',in' → logprob: -12.228997230529785
    10. '_in' → logprob: -12.353997230529785

Token 1139: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0486162044107914
    2. ' left' → logprob: -3.0486161708831787
    3. 'right' → logprob: -10.548616409301758
    4. ' right' → logprob: -13.798616409301758
    5. '[left' → logprob: -14.423616409301758
    6. 'dist' → logprob: -15.048616409301758
    7. '   ' → logprob: -15.423616409301758
    8. 'in' → logprob: -15.423616409301758
    9. '(left' → logprob: -15.673616409301758
    10. ' in' → logprob: -16.673616409301758

Token 1140: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.0004413975402712822
    2. 'dist' → logprob: -7.750441551208496
    3. ' in' → logprob: -13.125441551208496
    4. '_d' → logprob: -13.500441551208496
    5. '_DIST' → logprob: -14.000441551208496
    6. ',_' → logprob: -14.125441551208496
    7. '_distribution' → logprob: -14.250441551208496
    8. 'Dist' → logprob: -14.375441551208496
    9. '_' → logprob: -14.500441551208496
    10. '_keys' → logprob: -14.625441551208496

Token 1141: '.items' (ID: 19607)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7807770371437073
    2. '.items' → logprob: -0.7807770371437073
    3. ' in' → logprob: -2.6557769775390625
    4. 'items' → logprob: -5.1557769775390625
    5. '.iteritems' → logprob: -6.4057769775390625
    6. '       ' → logprob: -6.7807769775390625
    7. '.' → logprob: -6.9057769775390625
    8. ':' → logprob: -7.2807769775390625
    9. '   ' → logprob: -7.4057769775390625
    10. '.keys' → logprob: -7.5307769775390625

Token 1142: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.3139917552471161
    2. '():' → logprob: -1.3139917850494385
    3. '()' → logprob: -7.313991546630859
    4. '():
' → logprob: -10.56399154663086
    5. '(),' → logprob: -10.93899154663086
    6. '       ' → logprob: -11.81399154663086
    7. '():

' → logprob: -12.56399154663086
    8. 'for' → logprob: -12.81399154663086
    9. ':' → logprob: -13.06399154663086
    10. '(),
' → logprob: -13.93899154663086

Token 1143: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.015125728212296963
    2. '       ' → logprob: -5.140125751495361
    3. 'for' → logprob: -5.390125751495361
    4. '        ' → logprob: -6.140125751495361
    5. '```' → logprob: -6.765125751495361
    6. '           ' → logprob: -7.640125751495361
    7. '[' → logprob: -8.515125274658203
    8. ' ' → logprob: -9.015125274658203
    9. '<|end|>' → logprob: -9.015125274658203
    10. '   ' → logprob: -9.640125274658203

Token 1144: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.25217172503471375
    2. 'for' (adapté à ' for') → logprob: -1.5021717548370361
    3. '       ' → logprob: -9.127171516418457
    4. '           ' → logprob: -9.127171516418457
    5. '	for' → logprob: -11.002171516418457
    6. '               ' → logprob: -13.127171516418457
    7. '        ' → logprob: -13.377171516418457
    8. '   ' → logprob: -13.627171516418457
    9. '```' → logprob: -14.127171516418457
    10. ' ' → logprob: -14.502171516418457

Token 1145: ' sr' (ID: 29405)
  Prédit: 'sr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sr' → logprob: -2.2723104848410003e-05
    2. ' sr' → logprob: -10.750022888183594
    3. '(sr' → logprob: -14.000022888183594
    4. '_sr' → logprob: -16.000022888183594
    5. '   ' → logprob: -16.125022888183594
    6. '       ' → logprob: -16.250022888183594
    7. 'sl' → logprob: -17.875022888183594
    8. 'sm' → logprob: -18.625022888183594
    9. 'Sr' → logprob: -18.750022888183594
    10. '           ' → logprob: -19.500022888183594

Token 1146: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016313401283696294
    2. ' ,' → logprob: -8.875163078308105
    3. ',s' → logprob: -11.125163078308105
    4. 'in' → logprob: -12.625163078308105
    5. '           ' → logprob: -13.625163078308105
    6. '_,' → logprob: -13.875163078308105
    7. ' in' → logprob: -13.875163078308105
    8. 'ways' → logprob: -14.750163078308105
    9. ',w' → logprob: -14.750163078308105
    10. '               ' → logprob: -16.000164031982422

Token 1147: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.012510236352682114
    2. ' ways' → logprob: -4.387510299682617
    3. 'way' → logprob: -15.887510299682617
    4. 'Ways' → logprob: -16.137510299682617
    5. 'WAYS' → logprob: -16.387510299682617
    6. '```' → logprob: -17.012510299682617
    7. '...' → logprob: -17.262510299682617
    8. 'views' → logprob: -17.262510299682617
    9. 'w' → logprob: -17.887510299682617
    10. 'methods' → logprob: -17.887510299682617

Token 1148: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -2.6060808522743173e-05
    2. 'r' → logprob: -11.500025749206543
    3. '_s' → logprob: -11.500025749206543
    4. '_' → logprob: -12.125025749206543
    5. '_d' → logprob: -16.00002670288086
    6. '_x' → logprob: -16.62502670288086
    7. '_,' → logprob: -17.75002670288086
    8. '_p' → logprob: -17.75002670288086
    9. '_rhs' → logprob: -18.00002670288086
    10. ' in' → logprob: -18.12502670288086

Token 1149: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043058447539806366
    2. 'in' → logprob: -3.168058395385742
    3. '	in' → logprob: -10.543058395385742
    4. '           ' → logprob: -12.293058395385742
    5. ' ' → logprob: -12.418058395385742
    6. ',' → logprob: -12.668058395385742
    7. '   ' → logprob: -12.793058395385742
    8. '        ' → logprob: -13.043058395385742
    9. '```' → logprob: -13.043058395385742
    10. 'In' → logprob: -13.043058395385742

Token 1150: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.029753848910331726
    2. ' right' → logprob: -3.5297539234161377
    3. '[right' → logprob: -13.279753684997559
    4. '	right' → logprob: -15.029753684997559
    5. '(right' → logprob: -15.279753684997559
    6. 'left' → logprob: -15.404753684997559
    7. ' ' → logprob: -15.529753684997559
    8. '   ' → logprob: -15.779753684997559
    9. '_right' → logprob: -16.029754638671875
    10. '           ' → logprob: -16.279754638671875

Token 1151: '_dist' (ID: 37968)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.28404346108436584
    2. '_dist' → logprob: -1.4090434312820435
    3. 'dist' → logprob: -6.659043312072754
    4. '.items' → logprob: -6.909043312072754
    5. 'Dist' → logprob: -8.034043312072754
    6. '_items' → logprob: -8.909043312072754
    7. '```' → logprob: -9.909043312072754
    8. 'in' → logprob: -10.784043312072754
    9. ' items' → logprob: -11.034043312072754
    10. '   ' → logprob: -11.659043312072754

Token 1152: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.589870810508728
    2. 'items' → logprob: -0.839870810508728
    3. ' items' → logprob: -4.464870929718018
    4. ' in' → logprob: -7.589870929718018
    5. 'in' → logprob: -8.08987045288086
    6. '.' → logprob: -8.21487045288086
    7. ',' → logprob: -8.33987045288086
    8. '	items' → logprob: -8.46487045288086
    9. ')' → logprob: -8.83987045288086
    10. '_items' → logprob: -8.96487045288086

Token 1153: '():
' (ID: 8595)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09731954336166382
    2. ':
' → logprob: -2.4723196029663086
    3. '():
' → logprob: -5.972319602966309
    4. '               ' → logprob: -5.972319602966309
    5. '           ' → logprob: -6.472319602966309
    6. ',' → logprob: -7.972319602966309
    7. '):
' → logprob: -8.097319602966309
    8. '<|end|>' → logprob: -8.597319602966309
    9. '():' → logprob: -8.597319602966309
    10. '(' → logprob: -9.472319602966309

Token 1154: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0014557128306478262
    2. '```' → logprob: -7.626455783843994
    3. ' for' → logprob: -7.876455783843994
    4. '           ' → logprob: -8.251455307006836
    5. 'for' → logprob: -8.626455307006836
    6. '                   ' → logprob: -9.126455307006836
    7. '                       ' → logprob: -11.501455307006836
    8. 'tokens' → logprob: -12.626455307006836
    9. '              ' → logprob: -12.876455307006836
    10. '`' → logprob: -12.876455307006836

Token 1155: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5785786509513855
    2. 'for' (adapté à ' for') → logprob: -0.9535786509513855
    3. '                   ' → logprob: -3.2035787105560303
    4. '               ' → logprob: -4.328578472137451
    5. '           ' → logprob: -10.20357894897461
    6. '                       ' → logprob: -10.57857894897461
    7. '   ' → logprob: -11.07857894897461
    8. '```' → logprob: -11.07857894897461
    9. '                ' → logprob: -11.95357894897461
    10. '                               ' → logprob: -12.20357894897461

Token 1156: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -8.590104698669165e-05
    2. ' op' → logprob: -9.375085830688477
    3. 'c' → logprob: -14.625085830688477
    4. 'ch' → logprob: -15.875085830688477
    5. 'operator' → logprob: -16.125085830688477
    6. ''op' → logprob: -16.125085830688477
    7. '_op' → logprob: -16.250085830688477
    8. '	op' → logprob: -16.625085830688477
    9. 'opc' → logprob: -17.000085830688477
    10. 'opr' → logprob: -17.125085830688477

Token 1157: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1602545976638794
    2. 'in' → logprob: -1.9102545976638794
    3. ' ' → logprob: -10.66025447845459
    4. '  ' → logprob: -13.41025447845459
    5. '	in' → logprob: -13.41025447845459
    6. ',' → logprob: -13.78525447845459
    7. '_in' → logprob: -14.28525447845459
    8. 'In' → logprob: -14.78525447845459
    9. '<|end|>' → logprob: -15.28525447845459
    10. ''in' → logprob: -15.41025447845459

Token 1158: ' ['' (ID: 5140)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.7501049041748047
    2. ''A' → logprob: -0.7501049041748047
    3. ''' → logprob: -3.0001049041748047
    4. '"' → logprob: -6.000104904174805
    5. '"A' → logprob: -6.500104904174805
    6. ' ['' → logprob: -7.250104904174805
    7. '('' → logprob: -7.625104904174805
    8. ' '' → logprob: -8.125104904174805
    9. ''O' → logprob: -9.500104904174805
    10. '["' → logprob: -10.625104904174805

Token 1159: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0009275413467548788
    2. ''A' → logprob: -7.000927448272705
    3. 'AO' → logprob: -11.125927925109863
    4. '"A' → logprob: -14.625927925109863
    5. ''' → logprob: -14.750927925109863
    6. 'AX' → logprob: -15.875927925109863
    7. ' A' → logprob: -16.000926971435547
    8. '’A' → logprob: -17.500926971435547
    9. 'X' → logprob: -17.500926971435547
    10. 'ACO' → logprob: -17.750926971435547

Token 1160: '','' (ID: 4074)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.0382821261882782
    2. '','' → logprob: -3.2882821559906006
    3. 'O' → logprob: -9.16328239440918
    4. ''' → logprob: -9.53828239440918
    5. '',"' → logprob: -10.91328239440918
    6. '',
' → logprob: -11.16328239440918
    7. 'A' → logprob: -11.53828239440918
    8. ''O' → logprob: -11.91328239440918
    9. ' ',' → logprob: -12.28828239440918
    10. 'X' → logprob: -12.66328239440918

Token 1161: 'O' (ID: 46)
  Prédit: 'O'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'O' → logprob: -2.2200749754119897e-06
    2. 'X' → logprob: -13.375001907348633
    3. ''O' → logprob: -15.125001907348633
    4. ' O' → logprob: -16.125001907348633
    5. ',O' → logprob: -16.125001907348633
    6. 'I' → logprob: -16.875001907348633
    7. '','' → logprob: -17.250001907348633
    8. 'О' → logprob: -17.750001907348633
    9. '0' → logprob: -17.750001907348633
    10. '	O' → logprob: -17.875001907348633

Token 1162: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.0035546929575502872
    2. '',' → logprob: -5.753554821014404
    3. 'X' → logprob: -8.003554344177246
    4. ''' → logprob: -11.003554344177246
    5. '',
' → logprob: -11.628554344177246
    6. ','' → logprob: -12.253554344177246
    7. '',"' → logprob: -12.753554344177246
    8. '(','' → logprob: -12.753554344177246
    9. ' ','' → logprob: -12.878554344177246
    10. ',' → logprob: -13.253554344177246

Token 1163: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -2.5776860184123507e-06
    2. ''' → logprob: -12.87500286102295
    3. ' X' → logprob: -17.125001907348633
    4. '','' → logprob: -20.000001907348633
    5. '`' → logprob: -20.625001907348633
    6. '"' → logprob: -21.125001907348633
    7. '	X' → logprob: -21.250001907348633
    8. '
' → logprob: -21.375001907348633
    9. '['' → logprob: -21.625001907348633
    10. ',X' → logprob: -21.750001907348633

Token 1164: '']:
' (ID: 44766)
  Prédit: '']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']:
' → logprob: -0.142322838306427
    2. ']:
' → logprob: -2.1423227787017822
    3. '']:' → logprob: -4.517323017120361
    4. ']:' → logprob: -6.267323017120361
    5. '']' → logprob: -6.642323017120361
    6. ']' → logprob: -7.517323017120361
    7. '                   ' → logprob: -8.017322540283203
    8. '               ' → logprob: -9.392322540283203
    9. '):
' → logprob: -9.767322540283203
    10. ']:
' → logprob: -10.392322540283203

Token 1165: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0019791913218796253
    2. '               ' → logprob: -6.876979351043701
    3. '                       ' → logprob: -8.376978874206543
    4. '```' → logprob: -8.876978874206543
    5. '<|end|>' → logprob: -9.001978874206543
    6. '                  ' → logprob: -9.876978874206543
    7. '           ' → logprob: -10.001978874206543
    8. '                ' → logprob: -10.251978874206543
    9. 'token' → logprob: -10.376978874206543
    10. '                               ' → logprob: -10.376978874206543

Token 1166: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.02422872558236122
    2. 'result' → logprob: -3.774228811264038
    3. 'r' → logprob: -7.274228572845459
    4. ' res' → logprob: -8.649229049682617
    5. '                   ' → logprob: -9.774229049682617
    6. 'rs' → logprob: -10.774229049682617
    7. 'key' → logprob: -11.524229049682617
    8. 's' → logprob: -11.774229049682617
    9. 'new' → logprob: -12.649229049682617
    10. '                       ' → logprob: -12.774229049682617

Token 1167: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06304128468036652
    2. '=' → logprob: -2.8130412101745605
    3. '=set' → logprob: -7.6880412101745605
    4. 't' → logprob: -8.313041687011719
    5. 'ult' → logprob: -8.313041687011719
    6. '_set' → logprob: -9.563041687011719
    7. 'set' → logprob: -11.063041687011719
    8. 'et' → logprob: -11.688041687011719
    9. 's' → logprob: -12.063041687011719
    10. '```' → logprob: -12.563041687011719

Token 1168: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.00018863992590922862
    2. ' set' → logprob: -8.625188827514648
    3. 'sl' → logprob: -11.875188827514648
    4. 'op' → logprob: -14.875188827514648
    5. 'res' → logprob: -15.125188827514648
    6. '   ' → logprob: -15.125188827514648
    7. '               ' → logprob: -15.500188827514648
    8. '
' → logprob: -15.625188827514648
    9. 'sets' → logprob: -15.750188827514648
    10. '                   ' → logprob: -16.00018882751465

Token 1169: '_operations' (ID: 148404)
  Prédit: '_operations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_operations' → logprob: -0.0003115095605608076
    2. 'operations' → logprob: -8.125311851501465
    3. '_' → logprob: -11.875311851501465
    4. 'res' → logprob: -12.500311851501465
    5. '_res' → logprob: -13.750311851501465
    6. 'Operations' → logprob: -14.375311851501465
    7. '```' → logprob: -14.500311851501465
    8. '_operation' → logprob: -14.500311851501465
    9. '_results' → logprob: -15.000311851501465
    10. ' operations' → logprob: -15.250311851501465

Token 1170: '(op' (ID: 34275)
  Prédit: '(op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(op' → logprob: -2.165027217415627e-05
    2. 'op' → logprob: -11.000021934509277
    3. '(' → logprob: -12.625021934509277
    4. ' (' → logprob: -13.625021934509277
    5. ' op' → logprob: -15.000021934509277
    6. '(
' → logprob: -16.12502098083496
    7. '(operator' → logprob: -18.00002098083496
    8. '	op' → logprob: -18.62502098083496
    9. '```' → logprob: -18.75002098083496
    10. '(OP' → logprob: -19.62502098083496

Token 1171: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.375538163818419e-05
    2. ' ,' → logprob: -9.500083923339844
    3. ',s' → logprob: -12.375083923339844
    4. '                   ' → logprob: -13.625083923339844
    5. ',
' → logprob: -13.875083923339844
    6. '(sl' → logprob: -14.125083923339844
    7. ')' → logprob: -14.375083923339844
    8. ',res' → logprob: -14.875083923339844
    9. 'sl' → logprob: -15.375083923339844
    10. '           ' → logprob: -16.000083923339844

Token 1172: ' sl' (ID: 1925)
  Prédit: 'sl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sl' → logprob: -0.0001097417771234177
    2. ' sl' → logprob: -9.125109672546387
    3. '	sl' → logprob: -14.750109672546387
    4. '_sl' → logprob: -16.000110626220703
    5. '(sl' → logprob: -16.375110626220703
    6. '           ' → logprob: -17.000110626220703
    7. 'Sl' → logprob: -18.125110626220703
    8. '                   ' → logprob: -18.125110626220703
    9. '   ' → logprob: -18.875110626220703
    10. '.sl' → logprob: -19.125110626220703

Token 1173: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007119550718925893
    2. ',s' → logprob: -7.625711917877197
    3. ' ,' → logprob: -8.625712394714355
    4. ',res' → logprob: -10.125712394714355
    5. ',
' → logprob: -13.125712394714355
    6. ',r' → logprob: -13.750712394714355
    7. '                   ' → logprob: -15.125712394714355
    8. ',user' → logprob: -15.625712394714355
    9. ',p' → logprob: -16.00071144104004
    10. ',S' → logprob: -16.50071144104004

Token 1174: ' sr' (ID: 29405)
  Prédit: 'sr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sr' → logprob: -0.0002624086628202349
    2. ' sr' → logprob: -8.250262260437012
    3. '(sr' → logprob: -13.750262260437012
    4. '_sr' → logprob: -17.875263214111328
    5. 'SR' → logprob: -19.000263214111328
    6. 'Sr' → logprob: -20.000263214111328
    7. ' ' → logprob: -20.375263214111328
    8. 'srv' → logprob: -20.625263214111328
    9. '```' → logprob: -20.750263214111328
    10. 'src' → logprob: -20.875263214111328

Token 1175: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24684226512908936
    2. '                   ' → logprob: -1.7468422651290894
    3. ')
' → logprob: -3.121842384338379
    4. '):
' → logprob: -9.121842384338379
    5. '               ' → logprob: -9.621842384338379
    6. '                  ' → logprob: -10.371842384338379
    7. '                    
' → logprob: -10.871842384338379
    8. ')
' → logprob: -10.871842384338379
    9. ',' → logprob: -11.496842384338379
    10. '                       ' → logprob: -11.621842384338379

Token 1176: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004986116662621498
    2. ':' → logprob: -6.12998628616333
    3. '                       ' → logprob: -7.25498628616333
    4. '                    ' → logprob: -7.75498628616333
    5. '```' → logprob: -7.87998628616333
    6. ' :' → logprob: -8.004985809326172
    7. '               ' → logprob: -9.004985809326172
    8. '                  ' → logprob: -9.129985809326172
    9. '                    
' → logprob: -9.129985809326172
    10. '                           ' → logprob: -9.629985809326172

Token 1177: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.025392554700374603
    2. '                   ' → logprob: -3.900392532348633
    3. 'key' → logprob: -5.650392532348633
    4. 'count' → logprob: -7.150392532348633
    5. ' dist' → logprob: -7.900392532348633
    6. 'if' → logprob: -9.775392532348633
    7. '                       ' → logprob: -10.025392532348633
    8. ' key' → logprob: -10.400392532348633
    9. 'cnt' → logprob: -11.150392532348633
    10. 'ways' → logprob: -12.275392532348633

Token 1178: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6286106983898208e-05
    2. '.setdefault' → logprob: -11.250016212463379
    3. 'res' → logprob: -12.875016212463379
    4. ' [' → logprob: -14.625016212463379
    5. '=res' → logprob: -16.000017166137695
    6. '(res' → logprob: -16.750017166137695
    7. '_res' → logprob: -17.875017166137695
    8. ' res' → logprob: -18.125017166137695
    9. '```' → logprob: -18.375017166137695
    10. '[result' → logprob: -18.375017166137695

Token 1179: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.9361264946837764e-07
    2. ' res' → logprob: -16.625
    3. '
' → logprob: -20.875
    4. '                   ' → logprob: -21.0
    5. '(res' → logprob: -21.875
    6. '```' → logprob: -21.875
    7. 're' → logprob: -22.625
    8. '   ' → logprob: -23.625
    9. ' ' → logprob: -23.875
    10. '           ' → logprob: -24.125

Token 1180: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0035240522120147943
    2. ']=' → logprob: -5.753523826599121
    3. ']+=' → logprob: -8.003523826599121
    4. ' ]' → logprob: -11.878523826599121
    5. '=' → logprob: -12.503523826599121
    6. '                   ' → logprob: -14.503523826599121
    7. ']=(' → logprob: -15.128523826599121
    8. ']+' → logprob: -15.378523826599121
    9. '```' → logprob: -15.878523826599121
    10. '                    ' → logprob: -17.253524780273438

Token 1181: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.9027791495318525e-05
    2. ' =' → logprob: -10.875019073486328
    3. '+=' → logprob: -16.875019073486328
    4. 'dist' → logprob: -19.000019073486328
    5. ']=' → logprob: -19.500019073486328
    6. '＝' → logprob: -21.500019073486328
    7. '=

' → logprob: -21.500019073486328
    8. '=}' → logprob: -21.500019073486328
    9. ']' → logprob: -21.625019073486328
    10. '_=' → logprob: -22.000019073486328

Token 1182: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0011718906462192535
    2. ' dist' → logprob: -6.751172065734863
    3. '	dist' → logprob: -14.876172065734863
    4. '                   ' → logprob: -15.001172065734863
    5. '(dist' → logprob: -15.126172065734863
    6. '   ' → logprob: -15.126172065734863
    7. '               ' → logprob: -16.126171112060547
    8. '           ' → logprob: -16.251171112060547
    9. '       ' → logprob: -17.251171112060547
    10. '                       ' → logprob: -17.376171112060547

Token 1183: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -3.225939872208983e-05
    2. 'get' → logprob: -10.375032424926758
    3. '[' → logprob: -14.125032424926758
    4. '.' → logprob: -15.750032424926758
    5. 'dist' → logprob: -17.375032424926758
    6. ' .' → logprob: -17.750032424926758
    7. 'd' → logprob: -18.000032424926758
    8. '_get' → logprob: -18.625032424926758
    9. '.setdefault' → logprob: -19.000032424926758
    10. '.dist' → logprob: -19.125032424926758

Token 1184: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -3.011373155459296e-05
    2. 'res' → logprob: -10.500030517578125
    3. '(dist' → logprob: -13.625030517578125
    4. '(op' → logprob: -14.250030517578125
    5. 'dist' → logprob: -14.750030517578125
    6. ' res' → logprob: -16.125030517578125
    7. '(' → logprob: -16.375030517578125
    8. ',res' → logprob: -18.250030517578125
    9. '$res' → logprob: -18.375030517578125
    10. 'op' → logprob: -18.750030517578125

Token 1185: ',' (ID: 11)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0016763753956183791
    2. ',' → logprob: -6.876676559448242
    3. ',res' → logprob: -7.751676559448242
    4. 'res' → logprob: -8.501676559448242
    5. '[' → logprob: -12.501676559448242
    6. '(op' → logprob: -13.126676559448242
    7. '```' → logprob: -13.126676559448242
    8. ' res' → logprob: -14.001676559448242
    9. '(dist' → logprob: -14.501676559448242
    10. ')' → logprob: -14.876676559448242

Token 1186: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. ')' → logprob: -18.375
    4. '                   ' → logprob: -19.0
    5. '                       ' → logprob: -19.5
    6. '```' → logprob: -19.875
    7. '   ' → logprob: -20.25
    8. '۰' → logprob: -20.875
    9. '                           ' → logprob: -21.125
    10. '           ' → logprob: -21.75

Token 1187: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. ')' → logprob: -17.0
    4. '                   ' → logprob: -18.125
    5. '   ' → logprob: -18.625
    6. '                       ' → logprob: -19.375
    7. '           ' → logprob: -20.0
    8. '               ' → logprob: -20.25
    9. '۰' → logprob: -20.625
    10. '+' → logprob: -20.875

Token 1188: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005051710177212954
    2. ')+' → logprob: -5.630051612854004
    3. '+' → logprob: -6.630051612854004
    4. ' +' → logprob: -10.130051612854004
    5. ' )' → logprob: -10.505051612854004
    6. '+)' → logprob: -10.630051612854004
    7. '                   ' → logprob: -11.005051612854004
    8. '                    ' → logprob: -12.130051612854004
    9. ')+(' → logprob: -12.130051612854004
    10. ',' → logprob: -12.755051612854004

Token 1189: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5759427547454834
    2. ' +' → logprob: -0.8259427547454834
    3. '+=' → logprob: -13.700942993164062
    4. '```' → logprob: -14.325942993164062
    5. ' +=' → logprob: -14.700942993164062
    6. '+
' → logprob: -14.825942993164062
    7. '                    ' → logprob: -15.450942993164062
    8. ' ' → logprob: -15.950942993164062
    9. '                   ' → logprob: -16.075942993164062
    10. ' ' → logprob: -16.700942993164062

Token 1190: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.000954694114625454
    2. ' ways' → logprob: -7.000954627990723
    3. '                   ' → logprob: -10.750954627990723
    4. '                       ' → logprob: -11.875954627990723
    5. '   ' → logprob: -12.125954627990723
    6. '                           ' → logprob: -13.125954627990723
    7. '                               ' → logprob: -13.875954627990723
    8. '(' → logprob: -13.875954627990723
    9. '               ' → logprob: -14.000954627990723
    10. 'way' → logprob: -14.125954627990723

Token 1191: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -5.657694418914616e-05
    2. '```' → logprob: -10.375056266784668
    3. '[' → logprob: -11.500056266784668
    4. ' _' → logprob: -13.250056266784668
    5. '_s' → logprob: -13.250056266784668
    6. '[_' → logprob: -13.375056266784668
    7. '_' → logprob: -13.500056266784668
    8. '\' → logprob: -13.625056266784668
    9. ')' → logprob: -13.750056266784668
    10. '_r' → logprob: -13.875056266784668

Token 1192: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3869495093822479
    2. ' *' → logprob: -1.1369495391845703
    3. '                   ' → logprob: -9.88694953918457
    4. '               ' → logprob: -11.51194953918457
    5. 'ways' → logprob: -12.63694953918457
    6. '                       ' → logprob: -13.13694953918457
    7. '           ' → logprob: -13.13694953918457
    8. '`' → logprob: -13.51194953918457
    9. '[' → logprob: -13.76194953918457
    10. '                    ' → logprob: -13.76194953918457

Token 1193: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -1.5048530030981055e-06
    2. ' ways' → logprob: -13.500001907348633
    3. 'WAYS' → logprob: -19.125001907348633
    4. 'way' → logprob: -19.375001907348633
    5. 'views' → logprob: -21.875001907348633
    6. '   ' → logprob: -22.500001907348633
    7. '```' → logprob: -22.875001907348633
    8. 'aways' → logprob: -23.000001907348633
    9. 'waves' → logprob: -23.000001907348633
    10. 'Ways' → logprob: -23.000001907348633

Token 1194: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -1.5048530030981055e-06
    2. 'r' → logprob: -13.750001907348633
    3. '```' → logprob: -15.625001907348633
    4. '   ' → logprob: -17.125001907348633
    5. '._' → logprob: -17.750001907348633
    6. ' _' → logprob: -17.750001907348633
    7. '\' → logprob: -17.750001907348633
    8. '[_' → logprob: -18.000001907348633
    9. '[' → logprob: -18.250001907348633
    10. '_R' → logprob: -19.000001907348633

Token 1195: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0384864807128906
    2. '<|end|>' → logprob: -1.6634864807128906
    3. '
' → logprob: -1.7884864807128906
    4. '                   ' → logprob: -2.7884864807128906
    5. '                    
' → logprob: -3.1634864807128906
    6. '    
' → logprob: -3.4134864807128906
    7. '               ' → logprob: -3.6634864807128906
    8. '        
' → logprob: -3.6634864807128906
    9. '   ' → logprob: -4.163486480712891
    10. '           ' → logprob: -4.538486480712891

Token 1196: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34822192788124084
    2. '<|end|>' → logprob: -2.473222017288208
    3. '                   ' → logprob: -3.348222017288208
    4. '               ' → logprob: -3.848222017288208
    5. '   ' → logprob: -3.848222017288208
    6. '	return' → logprob: -3.973222017288208
    7. '    
' → logprob: -4.098221778869629
    8. '
' → logprob: -4.223221778869629
    9. ' return' → logprob: -4.598221778869629
    10. '        
' → logprob: -4.723221778869629

Token 1197: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06552207469940186
    2. '   ' → logprob: -2.8155221939086914
    3. 'return' (adapté à ' return') → logprob: -5.690522193908691
    4. 'memo' → logprob: -9.190522193908691
    5. ' return' → logprob: -9.815522193908691
    6. '
' → logprob: -12.065522193908691
    7. ' memo' → logprob: -12.315522193908691
    8. 'm' → logprob: -13.815522193908691
    9. '           ' → logprob: -14.315522193908691
    10. '        
' → logprob: -14.815522193908691

Token 1198: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -5.512236498361744e-07
    2. ' dist' → logprob: -14.500000953674316
    3. 'dict' → logprob: -21.875
    4. '{' → logprob: -23.125
    5. '(dist' → logprob: -23.125
    6. '   ' → logprob: -23.875
    7. '	dist' → logprob: -24.375
    8. '_dist' → logprob: -25.75
    9. 'Dist' → logprob: -26.125
    10. '.dist' → logprob: -26.25

Token 1199: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1200: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2912851870059967
    2. '<|end|>' → logprob: -1.5412851572036743
    3. '```' → logprob: -4.166285037994385
    4. 'def' → logprob: -4.291285037994385
    5. '<|end|>' → logprob: -5.291285037994385
    6. ')' → logprob: -6.916285037994385
    7. 'input' → logprob: -7.666285037994385
    8. 'result' → logprob: -7.916285037994385
    9. 'subset' → logprob: -8.291285514831543
    10. 'print' → logprob: -8.416285514831543

Token 1201: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.1584990918636322
    2. 'main' → logprob: -2.033499002456665
    3. ' solve' → logprob: -4.533499240875244
    4. 'solve' → logprob: -5.783499240875244
    5. 'count' → logprob: -7.158499240875244
    6. ' count' → logprob: -7.158499240875244
    7. ' compute' → logprob: -10.033498764038086
    8. 'compute' → logprob: -10.283498764038086
    9. 'parse' → logprob: -10.533498764038086
    10. 'def' → logprob: -10.533498764038086

Token 1202: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00016086915275081992
    2. '():
' → logprob: -8.750161170959473
    3. ' ():' → logprob: -13.000161170959473
    4. '()' → logprob: -16.875160217285156
    5. '():
' → logprob: -16.875160217285156
    6. '():

' → logprob: -18.000160217285156
    7. '(' → logprob: -20.250160217285156
    8. '(":' → logprob: -21.750160217285156
    9. '().' → logprob: -21.875160217285156
    10. '()>' → logprob: -21.875160217285156

Token 1203: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01740174926817417
    2. 'import' → logprob: -4.392401695251465
    3. ' import' → logprob: -5.892401695251465
    4. '```' → logprob: -6.392401695251465
    5. '	import' → logprob: -8.517401695251465
    6. 's' → logprob: -9.892401695251465
    7. 'input' → logprob: -10.142401695251465
    8. '   ' → logprob: -10.392401695251465
    9. 'n' → logprob: -10.517401695251465
    10. ' input' → logprob: -10.642401695251465

Token 1204: ' input' (ID: 3422)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4643350839614868
    2. 's' → logprob: -1.4643350839614868
    3. '   ' → logprob: -2.0893349647521973
    4. 'input' (adapté à ' input') → logprob: -4.964334964752197
    5. ' import' → logprob: -4.964334964752197
    6. ' s' → logprob: -6.464334964752197
    7. ' input' → logprob: -7.839334964752197
    8. 'line' → logprob: -8.214335441589355
    9. 'tree' → logprob: -9.839335441589355
    10. 'data' → logprob: -9.964335441589355

Token 1205: '_lines' (ID: 42980)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.31211504340171814
    2. '_str' → logprob: -1.5621150732040405
    3. '_data' → logprob: -3.312114953994751
    4. '_text' → logprob: -4.18711519241333
    5. '_string' → logprob: -5.56211519241333
    6. '_s' → logprob: -6.68711519241333
    7. '_tree' → logprob: -7.68711519241333
    8. '()' → logprob: -7.68711519241333
    9. '_lines' → logprob: -8.687114715576172
    10. 'str' → logprob: -8.937114715576172

Token 1206: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3221818804740906
    2. '()' → logprob: -1.4471819400787354
    3. ' =' → logprob: -3.3221819400787354
    4. '   ' → logprob: -5.947181701660156
    5. '=[]' → logprob: -7.197181701660156
    6. '()
' → logprob: -8.947181701660156
    7. '()[' → logprob: -9.072181701660156
    8. 'import' → logprob: -9.447181701660156
    9. '=[]
' → logprob: -9.697181701660156
    10. '_' → logprob: -9.947181701660156

Token 1207: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.006222528405487537
    2. ' sys' → logprob: -5.256222724914551
    3. '[' → logprob: -7.256222724914551
    4. '[]' → logprob: -8.38122272491455
    5. ' [' → logprob: -10.63122272491455
    6. '[]
' → logprob: -11.38122272491455
    7. '(sys' → logprob: -11.63122272491455
    8. '[s' → logprob: -13.00622272491455
    9. '[input' → logprob: -13.00622272491455
    10. '=sys' → logprob: -13.25622272491455

Token 1208: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0015594969736412168
    2. '.' → logprob: -7.001559734344482
    3. '.readline' → logprob: -7.626559734344482
    4. '().' → logprob: -9.501559257507324
    5. '.stdout' → logprob: -9.876559257507324
    6. '.argv' → logprob: -10.626559257507324
    7. 'stdin' → logprob: -12.626559257507324
    8. '(stdin' → logprob: -13.251559257507324
    9. '.next' → logprob: -13.376559257507324
    10. '.input' → logprob: -14.001559257507324

Token 1209: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.025883939117193222
    2. 'read' → logprob: -4.02588415145874
    3. '.readlines' → logprob: -5.27588415145874
    4. '().' → logprob: -6.40088415145874
    5. '.read' → logprob: -7.40088415145874
    6. '```' → logprob: -9.775883674621582
    7. '_read' → logprob: -9.900883674621582
    8. 'lines' → logprob: -10.025883674621582
    9. '.' → logprob: -10.150883674621582
    10. 'for' → logprob: -10.275883674621582

Token 1210: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.018153218552470207
    2. '()' → logprob: -4.018153190612793
    3. '()
' → logprob: -13.518153190612793
    4. '.split' → logprob: -14.143153190612793
    5. 'split' → logprob: -15.268153190612793
    6. '())' → logprob: -15.393153190612793
    7. '()\' → logprob: -15.768153190612793
    8. '(' → logprob: -15.893153190612793
    9. '()).' → logprob: -15.893153190612793
    10. '()

' → logprob: -16.51815414428711

Token 1211: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.02484523132443428
    2. 'split' → logprob: -3.7748451232910156
    3. 'read' → logprob: -6.524845123291016
    4. 'decode' → logprob: -9.024845123291016
    5. 'rstrip' → logprob: -11.399845123291016
    6. 'lines' → logprob: -15.649845123291016
    7. 'replace' → logprob: -16.399845123291016
    8. ' strip' → logprob: -17.149845123291016
    9. '(strip' → logprob: -18.399845123291016
    10. ' split' → logprob: -19.149845123291016

Token 1212: 'lines' (ID: 10105)
  Prédit: 'lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.17240047454833984
    2. '('\' → logprob: -2.42240047454834
    3. '()' → logprob: -2.67240047454834
    4. '()
' → logprob: -8.04740047454834
    5. '()\' → logprob: -8.42240047454834
    6. '("\' → logprob: -11.04740047454834
    7. '()[' → logprob: -12.54740047454834
    8. '('' → logprob: -13.79740047454834
    9. '(' → logprob: -14.17240047454834
    10. '())' → logprob: -14.29740047454834

Token 1213: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008720364421606064
    2. 'for' → logprob: -7.5008721351623535
    3. '    
' → logprob: -9.250871658325195
    4. '()' → logprob: -9.500871658325195
    5. '
' → logprob: -9.875871658325195
    6. '```' → logprob: -10.000871658325195
    7. ' for' → logprob: -10.375871658325195
    8. '(' → logprob: -12.125871658325195
    9. '()
' → logprob: -12.875871658325195
    10. ')' → logprob: -12.875871658325195

Token 1214: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020180940628051758
    2. 'for' → logprob: -7.127017974853516
    3. 'tree' → logprob: -7.127017974853516
    4. '```' → logprob: -9.377017974853516
    5. 's' → logprob: -9.627017974853516
    6. 'idx' → logprob: -10.002017974853516
    7. 'root' → logprob: -10.127017974853516
    8. ' for' → logprob: -10.252017974853516
    9. 'pos' → logprob: -10.377017974853516
    10. ' tree' → logprob: -10.752017974853516

Token 1215: ' idx' (ID: 14016)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46870309114456177
    2. 'sub' → logprob: -1.593703031539917
    3. 'tree' → logprob: -2.593703031539917
    4. 'for' → logprob: -2.968703031539917
    5. 'root' → logprob: -3.843703031539917
    6. 'parsed' → logprob: -4.843703269958496
    7. 'if' → logprob: -5.093703269958496
    8. 'n' → logprob: -5.718703269958496
    9. 's' → logprob: -6.593703269958496
    10. 'subset' → logprob: -6.593703269958496

Token 1216: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5766846537590027
    2. '=' → logprob: -0.8266846537590027
    3. '   ' → logprob: -7.576684474945068
    4. '_token' → logprob: -9.951684951782227
    5. 'token' → logprob: -10.326684951782227
    6. '_' → logprob: -10.576684951782227
    7. ' ' → logprob: -10.826684951782227
    8. '<|end|>' → logprob: -11.076684951782227
    9. '_tokens' → logprob: -11.076684951782227
    10. '0' → logprob: -11.451684951782227

Token 1217: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0802738870552275e-05
    2. ' ' → logprob: -11.50001049041748
    3. '1' → logprob: -14.25001049041748
    4. '=' → logprob: -18.875011444091797
    5. '   ' → logprob: -19.125011444091797
    6. 'int' → logprob: -19.375011444091797
    7. 'import' → logprob: -20.125011444091797
    8. '```' → logprob: -21.000011444091797
    9. '[' → logprob: -21.125011444091797
    10. '۰' → logprob: -21.562511444091797

Token 1218: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.990154047845863e-05
    2. '1' → logprob: -10.000049591064453
    3. ' ' → logprob: -12.375049591064453
    4. 'int' → logprob: -15.500049591064453
    5. '   ' → logprob: -17.750049591064453
    6. '```' → logprob: -19.375049591064453
    7. '2' → logprob: -19.562549591064453
    8. 'idx' → logprob: -19.625049591064453
    9. '=' → logprob: -19.812549591064453
    10. '  ' → logprob: -20.062549591064453

Token 1219: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04906601086258888
    2. 'n' → logprob: -3.4240660667419434
    3. 'while' → logprob: -4.299066066741943
    4. ' n' → logprob: -7.299066066741943
    5. ' while' → logprob: -7.549066066741943
    6. '```' → logprob: -7.924066066741943
    7. '
' → logprob: -9.549065589904785
    8. '    
' → logprob: -10.424065589904785
    9. 'num' → logprob: -11.049065589904785
    10. '	n' → logprob: -11.424065589904785

Token 1220: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01580781862139702
    2. 'while' → logprob: -4.765807628631592
    3. 'n' → logprob: -5.015807628631592
    4. '```' → logprob: -7.640807628631592
    5. ' while' → logprob: -10.51580810546875
    6. ' n' → logprob: -10.76580810546875
    7. 'for' → logprob: -13.01580810546875
    8. '	n' → logprob: -14.01580810546875
    9. 'num' → logprob: -14.01580810546875
    10. '
' → logprob: -14.01580810546875

Token 1221: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.022745225578546524
    2. 'n' → logprob: -4.272745132446289
    3. '   ' → logprob: -4.772745132446289
    4. ' while' → logprob: -9.647745132446289
    5. '```' → logprob: -11.272745132446289
    6. 'for' → logprob: -12.147745132446289
    7. 'N' → logprob: -13.147745132446289
    8. 't' → logprob: -13.522745132446289
    9. '	while' → logprob: -14.022745132446289
    10. ' n' → logprob: -14.397745132446289

Token 1222: ' True' (ID: 6432)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0003370118502061814
    2. ' idx' → logprob: -8.000336647033691
    3. '   ' → logprob: -13.500336647033691
    4. '(idx' → logprob: -16.750337600708008
    5. '	idx' → logprob: -16.750337600708008
    6. ' ' → logprob: -17.875337600708008
    7. '
' → logprob: -19.250337600708008
    8. '_idx' → logprob: -19.250337600708008
    9. '[idx' → logprob: -19.750337600708008
    10. 'index' → logprob: -20.375337600708008

Token 1223: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1264544427394867
    2. ':' → logprob: -2.3764543533325195
    3. '   ' → logprob: -4.2514543533325195
    4. ':
' → logprob: -5.1264543533325195
    5. '```' → logprob: -6.1264543533325195
    6. '<|end|>' → logprob: -6.8764543533325195
    7. 'if' → logprob: -8.00145435333252
    8. '<|end|>' → logprob: -8.12645435333252
    9. ',' → logprob: -8.25145435333252
    10. '[' → logprob: -8.37645435333252

Token 1224: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17258697748184204
    2. 'if' → logprob: -1.9225869178771973
    3. ' if' → logprob: -4.422586917877197
    4. '       ' → logprob: -8.547587394714355
    5. '	if' → logprob: -10.047587394714355
    6. 'try' → logprob: -10.672587394714355
    7. '```' → logprob: -10.797587394714355
    8. '   ' → logprob: -13.922587394714355
    9. 'If' → logprob: -15.172587394714355
    10. '``' → logprob: -15.172587394714355

Token 1225: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0015881775179877877
    2. ' if' → logprob: -7.001588344573975
    3. '   ' → logprob: -7.751588344573975
    4. 'try' → logprob: -9.126587867736816
    5. 'line' → logprob: -9.751587867736816
    6. '       ' → logprob: -9.751587867736816
    7. '```' → logprob: -10.876587867736816
    8. '	if' → logprob: -13.501587867736816
    9. ' line' → logprob: -14.001587867736816
    10. '	line' → logprob: -17.251588821411133

Token 1226: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -7.600714161526412e-05
    2. ' idx' → logprob: -9.750076293945312
    3. '   ' → logprob: -11.000076293945312
    4. ' ' → logprob: -14.750076293945312
    5. '	idx' → logprob: -15.000076293945312
    6. '_idx' → logprob: -16.375076293945312
    7. '  ' → logprob: -16.500076293945312
    8. '(idx' → logprob: -17.000076293945312
    9. '[idx' → logprob: -17.875076293945312
    10. '       ' → logprob: -18.250076293945312

Token 1227: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.031640876084566116
    2. ' >=' → logprob: -3.6566407680511475
    3. '==' → logprob: -5.781641006469727
    4. '<' → logprob: -6.406641006469727
    5. '<len' → logprob: -8.281641006469727
    6. ']>=' → logprob: -9.281641006469727
    7. '[' → logprob: -9.531641006469727
    8. ' ==' → logprob: -9.656641006469727
    9. ')>=' → logprob: -10.531641006469727
    10. '```' → logprob: -10.781641006469727

Token 1228: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -4.320199877838604e-07
    2. ' len' → logprob: -15.0
    3. '(len' → logprob: -18.75
    4. 'input' → logprob: -20.625
    5. '=len' → logprob: -20.625
    6. '	len' → logprob: -21.375
    7. '[len' → logprob: -21.75
    8. ',len' → logprob: -22.125
    9. '   ' → logprob: -22.125
    10. '       ' → logprob: -22.25

Token 1229: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0007102862582542002
    2. 'input' → logprob: -7.250710487365723
    3. ' input' → logprob: -15.500710487365723
    4. ' (' → logprob: -16.375709533691406
    5. '(' → logprob: -17.000709533691406
    6. ',input' → logprob: -17.875709533691406
    7. '=input' → logprob: -18.000709533691406
    8. '<input' → logprob: -19.125709533691406
    9. '(
' → logprob: -19.375709533691406
    10. '```' → logprob: -19.625709533691406

Token 1230: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.000491672137286514
    2. '_' → logprob: -7.875491619110107
    3. 's' → logprob: -10.250492095947266
    4. '_s' → logprob: -10.875492095947266
    5. ')' → logprob: -11.125492095947266
    6. '   ' → logprob: -11.875492095947266
    7. '_
' → logprob: -12.125492095947266
    8. '):
' → logprob: -12.375492095947266
    9. '```' → logprob: -12.625492095947266
    10. '_)' → logprob: -12.750492095947266

Token 1231: '):
' (ID: 1883)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.11109787970781326
    2. ':
' → logprob: -3.236097812652588
    3. '       ' → logprob: -3.611097812652588
    4. ' and' → logprob: -3.861097812652588
    5. ':' → logprob: -4.861097812652588
    6. ')' → logprob: -6.111097812652588
    7. 'or' → logprob: -6.236097812652588
    8. '):
' → logprob: -6.236097812652588
    9. '           ' → logprob: -6.361097812652588
    10. 'and' → logprob: -6.986097812652588

Token 1232: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0036282234359532595
    2. '       ' → logprob: -5.878628253936768
    3. 'break' → logprob: -7.753628253936768
    4. '		' → logprob: -9.37862777709961
    5. '	       ' → logprob: -9.37862777709961
    6. '```' → logprob: -9.62862777709961
    7. ' break' → logprob: -10.25362777709961
    8. '	   ' → logprob: -10.62862777709961
    9. 'return' → logprob: -11.12862777709961
    10. '   ' → logprob: -11.37862777709961

Token 1233: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.040127720683813095
    2. '           ' → logprob: -3.540127754211426
    3. 'return' → logprob: -4.665127754211426
    4. '       ' → logprob: -7.415127754211426
    5. ' break' → logprob: -9.165127754211426
    6. '```' → logprob: -9.165127754211426
    7. '	break' → logprob: -9.540127754211426
    8. '               ' → logprob: -11.665127754211426
    9. '_break' → logprob: -12.540127754211426
    10. '
' → logprob: -12.665127754211426

Token 1234: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002448893792461604
    2. '        
' → logprob: -9.000245094299316
    3. '
' → logprob: -9.750245094299316
    4. '```' → logprob: -10.125245094299316
    5. '   ' → logprob: -11.375245094299316
    6. '           ' → logprob: -12.875245094299316
    7. '	' → logprob: -13.000245094299316
    8. '    
' → logprob: -13.750245094299316
    9. '{
' → logprob: -14.000245094299316
    10. '	   ' → logprob: -14.125245094299316

Token 1235: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001908289035782218
    2. '```' → logprob: -6.751908302307129
    3. '        
' → logprob: -7.626908302307129
    4. '   ' → logprob: -9.126908302307129
    5. '
' → logprob: -10.626908302307129
    6. '           ' → logprob: -10.876908302307129
    7. '<|end|>' → logprob: -11.001908302307129
    8. '	' → logprob: -11.251908302307129
    9. '	   ' → logprob: -11.501908302307129
    10. '    
' → logprob: -11.626908302307129

Token 1236: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.017219554632902145
    2. '   ' → logprob: -4.517219543457031
    3. ' line' → logprob: -5.267219543457031
    4. '       ' → logprob: -7.017219543457031
    5. 's' → logprob: -9.517219543457031
    6. '	line' → logprob: -11.017219543457031
    7. 'ligne' → logprob: -12.892219543457031
    8. '```' → logprob: -13.142219543457031
    9. '_line' → logprob: -13.642219543457031
    10. 'l' → logprob: -14.267219543457031

Token 1237: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5764185190200806
    2. '=' → logprob: -0.8264185190200806
    3. '=line' → logprob: -7.701418399810791
    4. '   ' → logprob: -11.45141887664795
    5. '       ' → logprob: -11.82641887664795
    6. '[line' → logprob: -13.20141887664795
    7. ')' → logprob: -13.32641887664795
    8. '```' → logprob: -13.82641887664795
    9. ' ' → logprob: -14.45141887664795
    10. '=input' → logprob: -14.45141887664795

Token 1238: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00020354038861114532
    2. ' input' → logprob: -8.500203132629395
    3. '(input' → logprob: -18.12520408630371
    4. 'line' → logprob: -18.62520408630371
    5. '       ' → logprob: -19.12520408630371
    6. '   ' → logprob: -19.50020408630371
    7. ' ' → logprob: -20.87520408630371
    8. 'import' → logprob: -21.37520408630371
    9. '	input' → logprob: -21.37520408630371
    10. '=input' → logprob: -21.37520408630371

Token 1239: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.06417177617549896
    2. '[idx' → logprob: -2.81417179107666
    3. '```' → logprob: -7.56417179107666
    4. '_line' → logprob: -7.93917179107666
    5. ' =' → logprob: -8.43917179107666
    6. '[' → logprob: -8.56417179107666
    7. '[line' → logprob: -8.56417179107666
    8. '()' → logprob: -9.31417179107666
    9. '   ' → logprob: -9.31417179107666
    10. 's' → logprob: -9.68917179107666

Token 1240: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0001085497424355708
    2. '```' → logprob: -9.62510871887207
    3. '[' → logprob: -10.87510871887207
    4. '       ' → logprob: -11.75010871887207
    5. 'idx' → logprob: -12.00010871887207
    6. '   ' → logprob: -12.87510871887207
    7. ' =' → logprob: -13.50010871887207
    8. '[
' → logprob: -14.00010871887207
    9. '        
' → logprob: -14.25010871887207
    10. '[token' → logprob: -14.50010871887207

Token 1241: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.35335519909858704
    2. ']
' → logprob: -1.4783551692962646
    3. ']' → logprob: -2.8533551692962646
    4. '       ' → logprob: -4.728355407714844
    5. '           ' → logprob: -7.228355407714844
    6. '.strip' → logprob: -7.728355407714844
    7. ').' → logprob: -7.978355407714844
    8. ']:
' → logprob: -8.353355407714844
    9. ':].' → logprob: -8.728355407714844
    10. ')
' → logprob: -8.728355407714844

Token 1242: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.9361264946837764e-07
    2. 'rstrip' → logprob: -15.75
    3. ' strip' → logprob: -19.5
    4. '_strip' → logprob: -19.625
    5. '.strip' → logprob: -20.375
    6. '(strip' → logprob: -21.625
    7. 'split' → logprob: -22.875
    8. '-strip' → logprob: -23.25
    9. 'startswith' → logprob: -23.375
    10. 'skip' → logprob: -23.875

Token 1243: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10836891829967499
    2. 'if' → logprob: -2.8583688735961914
    3. '```' → logprob: -3.3583688735961914
    4. '<|end|>' → logprob: -5.983368873596191
    5. ' if' → logprob: -6.108368873596191
    6. '<|end|>' → logprob: -6.983368873596191
    7. ':' → logprob: -7.233368873596191
    8. '=' → logprob: -7.233368873596191
    9. '           ' → logprob: -7.358368873596191
    10. ' =' → logprob: -7.483368873596191

Token 1244: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5856193900108337
    2. '       ' → logprob: -0.8356193900108337
    3. ' if' → logprob: -5.2106194496154785
    4. '```' → logprob: -5.5856194496154785
    5. '   ' → logprob: -8.71061897277832
    6. '<|end|>' → logprob: -9.83561897277832
    7. '	if' → logprob: -10.21061897277832
    8. '{
' → logprob: -10.46061897277832
    9. '{' → logprob: -10.71061897277832
    10. 'token' → logprob: -10.83561897277832

Token 1245: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00021295747137628496
    2. '       ' → logprob: -8.500212669372559
    3. ' if' → logprob: -12.250212669372559
    4. 'idx' → logprob: -12.375212669372559
    5. '```' → logprob: -14.875212669372559
    6. '   ' → logprob: -16.625213623046875
    7. '           ' → logprob: -17.875213623046875
    8. '	if' → logprob: -18.625213623046875
    9. 'If' → logprob: -19.125213623046875
    10. '        
' → logprob: -19.375213623046875

Token 1246: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.06230689957737923
    2. 'not' → logprob: -2.8123068809509277
    3. ' not' → logprob: -8.312307357788086
    4. ' line' → logprob: -9.312307357788086
    5. 'len' → logprob: -12.687307357788086
    6. '   ' → logprob: -16.062307357788086
    7. '(line' → logprob: -16.562307357788086
    8. '#line' → logprob: -17.312307357788086
    9. '```' → logprob: -17.437307357788086
    10. '	line' → logprob: -18.187307357788086

Token 1247: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.005339655559509993
    2. ' ==' → logprob: -5.255339622497559
    3. '()==' → logprob: -9.630339622497559
    4. '==
' → logprob: -10.755339622497559
    5. '=' → logprob: -12.005339622497559
    6. '```' → logprob: -12.130339622497559
    7. '===' → logprob: -13.005339622497559
    8. '=='' → logprob: -13.505339622497559
    9. ']==' → logprob: -13.505339622497559
    10. ')==' → logprob: -14.005339622497559

Token 1248: ' '' (ID: 461)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.007853499613702297
    2. ''' → logprob: -5.5078535079956055
    3. '""' → logprob: -6.0078535079956055
    4. '"":' → logprob: -7.1328535079956055
    5. '"' → logprob: -7.6328535079956055
    6. ''ex' → logprob: -10.882853507995605
    7. ''end' → logprob: -13.007853507995605
    8. '''
' → logprob: -13.632853507995605
    9. ' '':
' → logprob: -13.757853507995605
    10. ''',' → logprob: -14.507853507995605

Token 1249: 'END' (ID: 7671)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '':' → logprob: -0.02280430868268013
    2. ''' → logprob: -4.522804260253906
    3. '''' → logprob: -4.897804260253906
    4. '':
' → logprob: -5.897804260253906
    5. '```' → logprob: -7.647804260253906
    6. ''''' → logprob: -8.022804260253906
    7. '"":' → logprob: -9.022804260253906
    8. '":' → logprob: -9.147804260253906
    9. '""' → logprob: -9.272804260253906
    10. '#' → logprob: -9.647804260253906

Token 1250: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.03787266090512276
    2. '':' → logprob: -3.412872552871704
    3. '       ' → logprob: -6.287872791290283
    4. ''' → logprob: -6.787872791290283
    5. ''):
' → logprob: -7.787872791290283
    6. '\n' → logprob: -8.287872314453125
    7. ':' → logprob: -8.412872314453125
    8. '':
' → logprob: -8.912872314453125
    9. ':
' → logprob: -9.912872314453125
    10. '():
' → logprob: -10.537872314453125

Token 1251: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009421924478374422
    2. ':' → logprob: -7.375942230224609
    3. '```' → logprob: -9.37594223022461
    4. '<|end|>' → logprob: -9.75094223022461
    5. '		' → logprob: -10.37594223022461
    6. '               ' → logprob: -10.50094223022461
    7. '	       ' → logprob: -10.50094223022461
    8. ':
' → logprob: -10.75094223022461
    9. '<|end|>' → logprob: -10.75094223022461
    10. '       ' → logprob: -11.62594223022461

Token 1252: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0626363605260849
    2. '           ' → logprob: -2.812636375427246
    3. 'return' → logprob: -7.937636375427246
    4. ' break' → logprob: -8.312636375427246
    5. '		' → logprob: -10.437636375427246
    6. '	break' → logprob: -10.562636375427246
    7. '       ' → logprob: -12.437636375427246
    8. '	       ' → logprob: -12.937636375427246
    9. '               ' → logprob: -13.312636375427246
    10. '```' → logprob: -13.812636375427246

Token 1253: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017243190086446702
    2. '
' → logprob: -9.00017261505127
    3. '        
' → logprob: -10.50017261505127
    4. '```' → logprob: -11.87517261505127
    5. '<|end|>' → logprob: -12.00017261505127
    6. '   ' → logprob: -12.62517261505127
    7. '           ' → logprob: -12.87517261505127
    8. '	' → logprob: -14.25017261505127
    9. '<|end|>' → logprob: -14.87517261505127
    10. '{
' → logprob: -15.50017261505127

Token 1254: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.3319124011322856e-05
    2. '```' → logprob: -11.125022888183594
    3. '   ' → logprob: -12.250022888183594
    4. '           ' → logprob: -13.625022888183594
    5. '        
' → logprob: -14.000022888183594
    6. '
' → logprob: -14.250022888183594
    7. '	' → logprob: -15.125022888183594
    8. '<|end|>' → logprob: -15.250022888183594
    9. '	   ' → logprob: -16.250022888183594
    10. '``' → logprob: -16.375022888183594

Token 1255: ' #' (ID: 1069)
  Prédit: 'parsed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parsed' → logprob: -0.3408557176589966
    2. '       ' → logprob: -1.4658557176589966
    3. 'tree' → logprob: -2.965855598449707
    4. 'pos' → logprob: -6.340855598449707
    5. 'sub' → logprob: -6.715855598449707
    6. 'idx' → logprob: -6.840855598449707
    7. 's' → logprob: -7.590855598449707
    8. '#' (adapté à ' #') → logprob: -7.590855598449707
    9. '   ' → logprob: -8.340855598449707
    10. 'n' → logprob: -8.465855598449707

Token 1256: ' Parse' (ID: 26701)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5292647480964661
    2. 'sub' → logprob: -1.6542646884918213
    3. 'num' → logprob: -2.0292646884918213
    4. 'subset' → logprob: -3.6542646884918213
    5. 'parsed' → logprob: -3.6542646884918213
    6. '#' → logprob: -4.6542649269104
    7. 'nb' → logprob: -5.0292649269104
    8. 'N' → logprob: -5.2792649269104
    9. '   ' → logprob: -5.5292649269104
    10. '       ' → logprob: -5.5292649269104

Token 1257: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.12856191396713257
    2. 'parsed' → logprob: -2.1285619735717773
    3. '_tree' → logprob: -7.128561973571777
    4. '       ' → logprob: -7.378561973571777
    5. '(parsed' → logprob: -9.878561973571777
    6. ' parsed' → logprob: -10.003561973571777
    7. '
' → logprob: -10.378561973571777
    8. '   ' → logprob: -10.503561973571777
    9. ' tree' → logprob: -10.503561973571777
    10. '(tree' → logprob: -12.503561973571777

Token 1258: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1286388486623764
    2. 'parsed' → logprob: -2.378638744354248
    3. 'tree' → logprob: -4.253638744354248
    4. ',' → logprob: -4.378638744354248
    5. '(parsed' → logprob: -7.503638744354248
    6. '(tree' → logprob: -8.628639221191406
    7. ' parsed' → logprob: -9.003639221191406
    8. 's' → logprob: -9.128639221191406
    9. 'parse' → logprob: -9.628639221191406
    10. '_,' → logprob: -9.753639221191406

Token 1259: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6634740829467773
    2. ',' → logprob: -0.9134740829467773
    3. 'tree' → logprob: -3.0384740829467773
    4. 'parsed' → logprob: -3.5384740829467773
    5. '_,' → logprob: -5.538474082946777
    6. '(tree' → logprob: -7.038474082946777
    7. '_tree' → logprob: -8.038474082946777
    8. '   ' → logprob: -8.538474082946777
    9. '(parsed' → logprob: -8.663474082946777
    10. ' parsed' → logprob: -8.663474082946777

Token 1260: ' parsed' (ID: 31111)
  Prédit: 'parsed'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parsed' (adapté à ' parsed') → logprob: -0.0111493319272995
    2. 'tree' → logprob: -4.5111494064331055
    3. '   ' → logprob: -9.886149406433105
    4. ' parsed' → logprob: -10.261149406433105
    5. 'root' → logprob: -12.386149406433105
    6. '(parsed' → logprob: -12.761149406433105
    7. 'pt' → logprob: -13.011149406433105
    8. 'ar' → logprob: -13.136149406433105
    9. 'parse' → logprob: -13.261149406433105
    10. 'par' → logprob: -13.886149406433105

Token 1261: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.0002353640884393826
    2. '_' → logprob: -9.625235557556152
    3. ',_' → logprob: -9.875235557556152
    4. '_t' → logprob: -9.875235557556152
    5. '_ar' → logprob: -10.500235557556152
    6. '_,' → logprob: -10.875235557556152
    7. ',' → logprob: -11.500235557556152
    8. '_TREE' → logprob: -13.250235557556152
    9. '=_' → logprob: -13.625235557556152
    10. 'tree' → logprob: -14.125235557556152

Token 1262: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012727351859211922
    2. '=' → logprob: -6.751272678375244
    3. ',s' → logprob: -9.626273155212402
    4. ' =' → logprob: -10.501273155212402
    5. ' ,' → logprob: -12.501273155212402
    6. ',line' → logprob: -13.251273155212402
    7. '=s' → logprob: -14.501273155212402
    8. ',result' → logprob: -14.876273155212402
    9. ',node' → logprob: -15.251273155212402
    10. '(s' → logprob: -15.501273155212402

Token 1263: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.024968720972537994
    2. ' pos' → logprob: -3.8999686241149902
    3. '0' → logprob: -5.52496862411499
    4. 'idx' → logprob: -8.274969100952148
    5. 'next' → logprob: -9.274969100952148
    6. 'end' → logprob: -10.524969100952148
    7. ' next' → logprob: -11.149969100952148
    8. 'new' → logprob: -11.649969100952148
    9. ' idx' → logprob: -11.899969100952148
    10. '_pos' → logprob: -12.024969100952148

Token 1264: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012548031285405159
    2. ' =' → logprob: -4.387547969818115
    3. ',' → logprob: -10.637548446655273
    4. '=parse' → logprob: -12.012548446655273
    5. '<|end|>' → logprob: -13.137548446655273
    6. '<|end|>' → logprob: -13.887548446655273
    7. '       ' → logprob: -14.012548446655273
    8. ')' → logprob: -14.262548446655273
    9. '   ' → logprob: -14.262548446655273
    10. '=line' → logprob: -14.387548446655273

Token 1265: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -9.088346359931165e-07
    2. ' parse' → logprob: -14.000000953674316
    3. '(parse' → logprob: -18.5
    4. '=parse' → logprob: -19.0
    5. '	parse' → logprob: -21.625
    6. '_parse' → logprob: -22.25
    7. 'parsed' → logprob: -22.75
    8. 'parser' → logprob: -23.5
    9. '.parse' → logprob: -24.25
    10. '   ' → logprob: -25.375

Token 1266: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -8.613945101387799e-05
    2. 'tree' → logprob: -9.375085830688477
    3. '_TREE' → logprob: -14.750085830688477
    4. 'Tree' → logprob: -15.000085830688477
    5. '<Tree' → logprob: -15.625085830688477
    6. '(tree' → logprob: -15.875085830688477
    7. '_line' → logprob: -16.750085830688477
    8. ' tree' → logprob: -17.250085830688477
    9. '-tree' → logprob: -17.750085830688477
    10. '_t' → logprob: -17.750085830688477

Token 1267: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -1.4378848391061183e-05
    2. '(' → logprob: -11.875014305114746
    3. '(input' → logprob: -12.750014305114746
    4. '       ' → logprob: -13.125014305114746
    5. '[line' → logprob: -14.250014305114746
    6. ',line' → logprob: -14.500014305114746
    7. '(
' → logprob: -15.000014305114746
    8. 'line' → logprob: -15.125014305114746
    9. '=line' → logprob: -15.125014305114746
    10. '(lines' → logprob: -15.250014305114746

Token 1268: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.043135177344083786
    2. ')' → logprob: -3.293135166168213
    3. '(line' → logprob: -6.043135166168213
    4. '       ' → logprob: -6.418135166168213
    5. ',line' → logprob: -7.168135166168213
    6. '(' → logprob: -9.668135643005371
    7. '<|end|>' → logprob: -9.918135643005371
    8. ' ,' → logprob: -9.918135643005371
    9. '[line' → logprob: -10.668135643005371
    10. '           ' → logprob: -11.043135643005371

Token 1269: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00033665422233752906
    2. '<|end|>' → logprob: -8.875336647033691
    3. '```' → logprob: -9.000336647033691
    4. 'if' → logprob: -10.875336647033691
    5. '        
' → logprob: -11.375336647033691
    6. '   ' → logprob: -11.375336647033691
    7. '
' → logprob: -11.625336647033691
    8. ',' → logprob: -12.125336647033691
    9. ')' → logprob: -13.000336647033691
    10. ' if' → logprob: -13.000336647033691

Token 1270: ' idx' (ID: 14016)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03618086129426956
    2. 'tree' → logprob: -3.4111809730529785
    3. 'idx' (adapté à ' idx') → logprob: -7.2861809730529785
    4. 'if' → logprob: -7.4111809730529785
    5. 'node' → logprob: -7.4111809730529785
    6. '   ' → logprob: -8.16118049621582
    7. 'root' → logprob: -8.28618049621582
    8. ' tree' → logprob: -10.41118049621582
    9. '```' → logprob: -10.66118049621582
    10. '        
' → logprob: -11.91118049621582

Token 1271: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0188481155782938
    2. ' +=' → logprob: -4.143847942352295
    3. '       ' → logprob: -5.893847942352295
    4. '=' → logprob: -10.643848419189453
    5. '```' → logprob: -11.768848419189453
    6. ']+=' → logprob: -12.143848419189453
    7. '   ' → logprob: -12.268848419189453
    8. '        ' → logprob: -12.393848419189453
    9. '+' → logprob: -12.768848419189453
    10. '           ' → logprob: -13.393848419189453

Token 1272: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -17.500003814697266
    4. '0' → logprob: -18.250003814697266
    5. '```' → logprob: -19.250003814697266
    6. '       ' → logprob: -20.125003814697266
    7. '
' → logprob: -20.875003814697266
    8. '+' → logprob: -21.875003814697266
    9. '           ' → logprob: -21.875003814697266
    10. '2' → logprob: -22.500003814697266

Token 1273: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '0' → logprob: -20.0
    4. '```' → logprob: -20.625
    5. '+' → logprob: -21.25
    6. '   ' → logprob: -21.375
    7. '
' → logprob: -21.625
    8. 'len' → logprob: -22.625
    9. '#' → logprob: -22.75
    10. '2' → logprob: -23.3125

Token 1274: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32118546962738037
    2. '   ' → logprob: -1.3211854696273804
    3. '
' → logprob: -6.32118558883667
    4. 'root' → logprob: -6.69618558883667
    5. 'tree' → logprob: -6.82118558883667
    6. 'sub' → logprob: -6.94618558883667
    7. '```' → logprob: -7.44618558883667
    8. '        
' → logprob: -7.57118558883667
    9. 'subset' → logprob: -7.94618558883667
    10. 'if' → logprob: -8.321185111999512

Token 1275: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7734528183937073
    2. 'tree' → logprob: -1.0234527587890625
    3. '   ' → logprob: -1.8984527587890625
    4. 'sub' → logprob: -3.7734527587890625
    5. 'root' → logprob: -5.3984527587890625
    6. 'node' → logprob: -7.3984527587890625
    7. ' tree' → logprob: -7.6484527587890625
    8. '```' → logprob: -8.023452758789062
    9. '	tree' → logprob: -8.898452758789062
    10. 'if' → logprob: -9.023452758789062

Token 1276: ' #' (ID: 1069)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.11647358536720276
    2. '       ' → logprob: -2.36647367477417
    3. 'if' → logprob: -5.24147367477417
    4. '#' (adapté à ' #') → logprob: -5.86647367477417
    5. 'line' → logprob: -5.99147367477417
    6. 'subset' → logprob: -6.24147367477417
    7. 'leaf' → logprob: -6.61647367477417
    8. 'n' → logprob: -7.24147367477417
    9. 'le' → logprob: -7.49147367477417
    10. '   ' → logprob: -7.86647367477417

Token 1277: ' Nombre' (ID: 70208)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.023928819224238396
    2. 'if' → logprob: -4.398928642272949
    3. '#' → logprob: -5.523928642272949
    4. 'line' → logprob: -6.148928642272949
    5. 'subset' → logprob: -6.398928642272949
    6. 'root' → logprob: -7.148928642272949
    7. 'le' → logprob: -7.398928642272949
    8. 'parsed' → logprob: -7.648928642272949
    9. '   ' → logprob: -8.02392864227295
    10. 'leaf' → logprob: -8.14892864227295

Token 1278: ' N' (ID: 478)
  Prédit: '_sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.5839307308197021
    2. '_' → logprob: -1.8339307308197021
    3. 'sub' → logprob: -2.333930730819702
    4. '       ' → logprob: -2.708930730819702
    5. 'de' → logprob: -3.208930730819702
    6. '_de' → logprob: -3.708930730819702
    7. '_of' → logprob: -3.958930730819702
    8. '   ' → logprob: -5.333930969238281
    9. 'def' → logprob: -5.333930969238281
    10. '_subset' → logprob: -5.833930969238281

Token 1279: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4857115149497986
    2. ' =' → logprob: -1.1107115745544434
    3. '       ' → logprob: -3.7357115745544434
    4. '_line' → logprob: -4.360711574554443
    5. '_sub' → logprob: -5.485711574554443
    6. '_tokens' → logprob: -6.110711574554443
    7. '=sub' → logprob: -6.235711574554443
    8. '=int' → logprob: -6.235711574554443
    9. '_le' → logprob: -6.735711574554443
    10. '=line' → logprob: -6.860711574554443

Token 1280: '       ' (ID: 309)
  Prédit: '_sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.5118952393531799
    2. '       ' → logprob: -1.6368951797485352
    3. ' =' → logprob: -2.511895179748535
    4. '=' → logprob: -3.511895179748535
    5. '_le' → logprob: -3.636895179748535
    6. 'sub' → logprob: -4.386895179748535
    7. '_tokens' → logprob: -4.511895179748535
    8. '_line' → logprob: -5.136895179748535
    9. '```' → logprob: -5.261895179748535
    10. '_s' → logprob: -5.261895179748535

Token 1281: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.02427118830382824
    2. 'n' → logprob: -3.774271249771118
    3. '       ' → logprob: -7.274271011352539
    4. 'if' → logprob: -8.399271011352539
    5. 'line' → logprob: -9.524271011352539
    6. 'num' → logprob: -11.024271011352539
    7. '   ' → logprob: -11.149271011352539
    8. ' N' → logprob: -13.649271011352539
    9. '```' → logprob: -14.274271011352539
    10. 'count' → logprob: -15.024271011352539

Token 1282: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09074149280786514
    2. ' =' → logprob: -2.4657413959503174
    3. '=line' → logprob: -6.7157416343688965
    4. '   ' → logprob: -8.840741157531738
    5. 'line' → logprob: -8.840741157531738
    6. '       ' → logprob: -8.840741157531738
    7. '_line' → logprob: -9.465741157531738
    8. ' line' → logprob: -10.090741157531738
    9. '=int' → logprob: -10.840741157531738
    10. ',' → logprob: -12.465741157531738

Token 1283: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.9361264946837764e-07
    2. ' int' → logprob: -15.75
    3. '   ' → logprob: -19.5
    4. '  ' → logprob: -20.75
    5. 'input' → logprob: -20.75
    6. 'len' → logprob: -21.0
    7. ' ' → logprob: -21.625
    8. '       ' → logprob: -22.125
    9. '(int' → logprob: -22.875
    10. '
' → logprob: -23.0

Token 1284: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.010922142304480076
    2. 'input' → logprob: -4.760921955108643
    3. '(line' → logprob: -6.135921955108643
    4. 'line' → logprob: -8.8859224319458
    5. '(' → logprob: -13.6359224319458
    6. ' input' → logprob: -14.3859224319458
    7. '<input' → logprob: -15.0109224319458
    8. '=input' → logprob: -15.5109224319458
    9. '```' → logprob: -15.8859224319458
    10. '(
' → logprob: -16.260921478271484

Token 1285: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.0012880940921604633
    2. '[idx' → logprob: -8.001288414001465
    3. '[' → logprob: -8.251288414001465
    4. 'lines' → logprob: -8.626288414001465
    5. '```' → logprob: -9.001288414001465
    6. 'Lines' → logprob: -9.126288414001465
    7. ')' → logprob: -9.876288414001465
    8. '_tokens' → logprob: -10.126288414001465
    9. '[
' → logprob: -10.626288414001465
    10. '[line' → logprob: -10.751288414001465

Token 1286: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -4.36574100604048e-06
    2. '(idx' → logprob: -12.875004768371582
    3. 'idx' → logprob: -13.375004768371582
    4. '   ' → logprob: -15.375004768371582
    5. ' idx' → logprob: -17.875003814697266
    6. '```' → logprob: -18.000003814697266
    7. '	idx' → logprob: -18.375003814697266
    8. ')[' → logprob: -18.625003814697266
    9. ')' → logprob: -19.000003814697266
    10. '[id' → logprob: -19.375003814697266

Token 1287: '].' (ID: 1651)
  Prédit: '])
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])
' → logprob: -0.10737812519073486
    2. '])' → logprob: -2.6073780059814453
    3. '[idx' → logprob: -3.9823780059814453
    4. '].' → logprob: -5.107378005981445
    5. ']' → logprob: -6.107378005981445
    6. ')
' → logprob: -7.982378005981445
    7. ']
' → logprob: -8.607378005981445
    8. ']);' → logprob: -8.857378005981445
    9. '])
' → logprob: -9.107378005981445
    10. ')' → logprob: -9.107378005981445

Token 1288: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: 0.0
    2. 'rstrip' → logprob: -17.75
    3. ' strip' → logprob: -17.75
    4. '_strip' → logprob: -20.5
    5. '.strip' → logprob: -20.625
    6. '(strip' → logprob: -20.75
    7. 'trim' → logprob: -20.875
    8. 'split' → logprob: -21.625
    9. 'replace' → logprob: -21.75
    10. '-strip' → logprob: -23.375

Token 1289: '())
' (ID: 4574)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5861832499504089
    2. ')' → logprob: -1.0861833095550537
    3. '())
' → logprob: -2.3361833095550537
    4. '())' → logprob: -4.711183071136475
    5. '       ' → logprob: -8.461183547973633
    6. ')
' → logprob: -10.461183547973633
    7. '()
' → logprob: -10.461183547973633
    8. '()' → logprob: -10.586183547973633
    9. ')`
' → logprob: -11.336183547973633
    10. '())
' → logprob: -11.586183547973633

Token 1290: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2605530321598053
    2. 'idx' → logprob: -1.760553002357483
    3. '   ' → logprob: -3.7605531215667725
    4. '```' → logprob: -3.7605531215667725
    5. '	idx' → logprob: -4.885552883148193
    6. ' idx' → logprob: -6.760552883148193
    7. '[idx' → logprob: -7.260552883148193
    8. '``' → logprob: -7.635552883148193
    9. '           ' → logprob: -8.510553359985352
    10. '<|end|>' → logprob: -8.635553359985352

Token 1291: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.005331113003194332
    2. '       ' → logprob: -5.380331039428711
    3. '```' → logprob: -7.880331039428711
    4. '	idx' → logprob: -8.505331039428711
    5. ' idx' → logprob: -9.380331039428711
    6. '   ' → logprob: -11.005331039428711
    7. '``' → logprob: -11.255331039428711
    8. '[idx' → logprob: -12.005331039428711
    9. '           ' → logprob: -12.630331039428711
    10. '_idx' → logprob: -13.005331039428711

Token 1292: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.048618365079164505
    2. ' +=' → logprob: -3.0486183166503906
    3. '+' → logprob: -10.92361831665039
    4. '   ' → logprob: -11.92361831665039
    5. ']+=' → logprob: -12.79861831665039
    6. '```' → logprob: -12.79861831665039
    7. '=' → logprob: -14.92361831665039
    8. '       ' → logprob: -15.67361831665039
    9. '++' → logprob: -16.29861831665039
    10. ')' → logprob: -16.79861831665039

Token 1293: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '   ' → logprob: -20.125
    4. '```' → logprob: -20.75
    5. '
' → logprob: -22.125
    6. '۱' → logprob: -24.5
    7. '１' → logprob: -24.625
    8. '       ' → logprob: -25.0
    9. '+' → logprob: -25.125
    10. '0' → logprob: -25.75

Token 1294: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '
' → logprob: -19.875
    4. '```' → logprob: -21.0
    5. '   ' → logprob: -21.875
    6. '１' → logprob: -23.5
    7. '+' → logprob: -23.875
    8. '#' → logprob: -25.0
    9. '``' → logprob: -25.0
    10. '۱' → logprob: -25.25

Token 1295: '
' (ID: 198)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.35025981068611145
    2. '       ' → logprob: -1.225259780883789
    3. 'subset' → logprob: -7.225259780883789
    4. '#' → logprob: -7.350259780883789
    5. ' subsets' → logprob: -8.975259780883789
    6. 'sets' → logprob: -8.975259780883789
    7. '```' → logprob: -9.225259780883789
    8. '   ' → logprob: -10.975259780883789
    9. '	sub' → logprob: -11.475259780883789
    10. 'subs' → logprob: -11.475259780883789

Token 1296: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22602102160453796
    2. 'sub' → logprob: -1.6010210514068604
    3. ' subsets' → logprob: -8.601020812988281
    4. 'subset' → logprob: -8.726020812988281
    5. '#' → logprob: -9.351020812988281
    6. '```' → logprob: -9.726020812988281
    7. '   ' → logprob: -9.976020812988281
    8. 'sets' → logprob: -10.476020812988281
    9. '	sub' → logprob: -11.101020812988281
    10. 'subs' → logprob: -11.976020812988281

Token 1297: ' subsets' (ID: 165377)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.01635950244963169
    2. '       ' → logprob: -4.266359329223633
    3. 'sets' → logprob: -6.891359329223633
    4. 'subset' → logprob: -7.141359329223633
    5. ' subsets' → logprob: -8.641359329223633
    6. '#' → logprob: -9.141359329223633
    7. '```' → logprob: -10.016359329223633
    8. 'subs' → logprob: -11.141359329223633
    9. '   ' → logprob: -11.641359329223633
    10. 'leaf' → logprob: -12.016359329223633

Token 1298: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47443947196006775
    2. '=' → logprob: -0.9744395017623901
    3. '   ' → logprob: -7.97443962097168
    4. '[' → logprob: -11.72443962097168
    5. '       ' → logprob: -12.34943962097168
    6. '    ' → logprob: -13.59943962097168
    7. '```' → logprob: -13.59943962097168
    8. '=[' → logprob: -14.84943962097168
    9. '=[]' → logprob: -14.97443962097168
    10. '	' → logprob: -14.97443962097168

Token 1299: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6866836547851562
    2. '[]
' → logprob: -1.1866836547851562
    3. '[' → logprob: -1.6866836547851562
    4. '[list' → logprob: -5.186683654785156
    5. '[int' → logprob: -7.686683654785156
    6. '[
' → logprob: -9.436683654785156
    7. '[]

' → logprob: -10.186683654785156
    8. '[List' → logprob: -10.311683654785156
    9. '[str' → logprob: -10.436683654785156
    10. ' []' → logprob: -10.811683654785156

Token 1300: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02084491029381752
    2. 'for' → logprob: -3.8958449363708496
    3. ' for' → logprob: -8.520844459533691
    4. '```' → logprob: -9.645844459533691
    5. '   ' → logprob: -10.520844459533691
    6. '	for' → logprob: -11.770844459533691
    7. '	' → logprob: -13.145844459533691
    8. 'while' → logprob: -14.145844459533691
    9. '           ' → logprob: -14.895844459533691
    10. '	   ' → logprob: -15.145844459533691

Token 1301: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00151081255171448
    2. '       ' → logprob: -6.5015106201171875
    3. ' for' → logprob: -11.751510620117188
    4. 'while' → logprob: -15.251510620117188
    5. '   ' → logprob: -16.001510620117188
    6. '```' → logprob: -16.251510620117188
    7. '	for' → logprob: -16.501510620117188
    8. '           ' → logprob: -19.376510620117188
    9. '
' → logprob: -20.001510620117188
    10. '``' → logprob: -20.501510620117188

Token 1302: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1603960394859314
    2. '_i' → logprob: -1.9103960990905762
    3. 'i' → logprob: -9.160395622253418
    4. '_in' → logprob: -10.535395622253418
    5. '_j' → logprob: -10.910395622253418
    6. '_subset' → logprob: -12.035395622253418
    7. '_sub' → logprob: -12.160395622253418
    8. ' _' → logprob: -12.785395622253418
    9. '_range' → logprob: -13.285395622253418
    10. '_n' → logprob: -14.035395622253418

Token 1303: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03174238279461861
    2. 'in' → logprob: -3.7817423343658447
    3. 'i' → logprob: -5.031742572784424
    4. ' in' → logprob: -6.656742572784424
    5. 'range' → logprob: -8.281742095947266
    6. '_i' → logprob: -8.406742095947266
    7. '_range' → logprob: -9.156742095947266
    8. '_in' → logprob: -10.031742095947266
    9. ' _' → logprob: -12.406742095947266
    10. ' range' → logprob: -12.531742095947266

Token 1304: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.15310683415737e-05
    2. ' range' → logprob: -10.750021934509277
    3. 'in' → logprob: -17.87502098083496
    4. '   ' → logprob: -18.87502098083496
    5. '
' → logprob: -19.12502098083496
    6. '	range' → logprob: -19.62502098083496
    7. '  ' → logprob: -20.62502098083496
    8. '_' → logprob: -20.87502098083496
    9. '0' → logprob: -21.87502098083496
    10. '_range' → logprob: -22.12502098083496

Token 1305: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0012592797866091132
    2. '(N' → logprob: -6.7512593269348145
    3. 'range' → logprob: -9.876258850097656
    4. ' N' → logprob: -10.626258850097656
    5. '   ' → logprob: -11.626258850097656
    6. ' range' → logprob: -12.876258850097656
    7. '       ' → logprob: -13.626258850097656
    8. '_N' → logprob: -15.126258850097656
    9. '0' → logprob: -16.376258850097656
    10. '	N' → logprob: -16.501258850097656

Token 1306: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.17039957642555237
    2. '():
' → logprob: -2.7953996658325195
    3. ':
' → logprob: -3.2953996658325195
    4. '       ' → logprob: -3.4203996658325195
    5. '           ' → logprob: -3.7953996658325195
    6. ':' → logprob: -6.7953996658325195
    7. '):' → logprob: -6.9203996658325195
    8. '   ' → logprob: -7.9203996658325195
    9. ',' → logprob: -9.29539966583252
    10. '=' → logprob: -9.42039966583252

Token 1307: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006256889086216688
    2. '```' → logprob: -5.631257057189941
    3. 'line' → logprob: -7.256257057189941
    4. ' line' → logprob: -7.381257057189941
    5. '	       ' → logprob: -8.131257057189941
    6. '       ' → logprob: -8.131257057189941
    7. '   ' → logprob: -8.506257057189941
    8. '	   ' → logprob: -9.006257057189941
    9. 'subset' → logprob: -9.381257057189941
    10. '		   ' → logprob: -9.381257057189941

Token 1308: ' bits' (ID: 18189)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.4573315680027008
    2. ' line' → logprob: -1.2073315382003784
    3. 'subset' → logprob: -3.332331657409668
    4. '           ' → logprob: -3.832331657409668
    5. ' subset' → logprob: -4.832331657409668
    6. 'sub' → logprob: -6.707331657409668
    7. 's' → logprob: -7.707331657409668
    8. 'set' → logprob: -8.332331657409668
    9. ' s' → logprob: -8.707331657409668
    10. '   ' → logprob: -9.332331657409668

Token 1309: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5813093781471252
    2. '=' → logprob: -0.8313093781471252
    3. ' |=' → logprob: -6.0813093185424805
    4. ' <<=' → logprob: -6.4563093185424805
    5. '_line' → logprob: -7.5813093185424805
    6. '|' → logprob: -8.33130931854248
    7. '           ' → logprob: -8.83130931854248
    8. '=line' → logprob: -9.20630931854248
    9. '=int' → logprob: -9.45630931854248
    10. '_tokens' → logprob: -9.83130931854248

Token 1310: ' list' (ID: 1562)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0001773192489054054
    2. '(int' → logprob: -8.875177383422852
    3. '0' → logprob: -10.875177383422852
    4. ' int' → logprob: -11.500177383422852
    5. '1' → logprob: -12.250177383422852
    6. '(' → logprob: -13.500177383422852
    7. '   ' → logprob: -13.750177383422852
    8. '[int' → logprob: -14.875177383422852
    9. 'input' → logprob: -15.750177383422852
    10. '
' → logprob: -15.875177383422852

Token 1311: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.08919550478458405
    2. 'map' → logprob: -2.464195489883423
    3. 'input' → logprob: -9.589195251464844
    4. '=' → logprob: -9.714195251464844
    5. '_map' → logprob: -10.089195251464844
    6. '(int' → logprob: -10.714195251464844
    7. '   ' → logprob: -10.839195251464844
    8. 'int' → logprob: -11.589195251464844
    9. '(' → logprob: -11.714195251464844
    10. '
' → logprob: -12.339195251464844

Token 1312: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.38688382506370544
    2. '(int' → logprob: -1.1368838548660278
    3. '(lambda' → logprob: -12.636883735656738
    4. '   ' → logprob: -12.886883735656738
    5. 'lambda' → logprob: -13.011883735656738
    6. 'str' → logprob: -13.011883735656738
    7. ' int' → logprob: -14.136883735656738
    8. '[int' → logprob: -14.636883735656738
    9. '(str' → logprob: -14.761883735656738
    10. '```' → logprob: -14.761883735656738

Token 1313: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.2090732753276825
    2. ',input' → logprob: -2.084073305130005
    3. '(sys' → logprob: -3.084073305130005
    4. ',' → logprob: -4.709073066711426
    5. 'input' → logprob: -4.834073066711426
    6. 'sys' → logprob: -7.584073066711426
    7. '(' → logprob: -7.959073066711426
    8. '(line' → logprob: -8.834073066711426
    9. '=input' → logprob: -9.334073066711426
    10. '=sys' → logprob: -9.834073066711426

Token 1314: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0004499765345826745
    2. 'sys' → logprob: -7.750450134277344
    3. ' input' → logprob: -10.875450134277344
    4. '_input' → logprob: -16.250450134277344
    5. '   ' → logprob: -16.500450134277344
    6. ' sys' → logprob: -17.000450134277344
    7. '(input' → logprob: -17.125450134277344
    8. '[input' → logprob: -18.000450134277344
    9. '
' → logprob: -18.250450134277344
    10. 'list' → logprob: -19.375450134277344

Token 1315: '_lines' (ID: 42980)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.02426491118967533
    2. '.readline' → logprob: -4.274264812469482
    3. '()[' → logprob: -5.649264812469482
    4. '()' → logprob: -5.899264812469482
    5. 'input' → logprob: -6.649264812469482
    6. '(input' → logprob: -7.649264812469482
    7. '=input' → logprob: -8.27426528930664
    8. '[input' → logprob: -8.39926528930664
    9. '=sys' → logprob: -8.52426528930664
    10. '())' → logprob: -8.89926528930664

Token 1316: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -2.8921695047756657e-05
    2. '(idx' → logprob: -11.250028610229492
    3. 'idx' → logprob: -11.250028610229492
    4. '           ' → logprob: -13.875028610229492
    5. '   ' → logprob: -14.000028610229492
    6. '       ' → logprob: -15.250028610229492
    7. '               ' → logprob: -15.375028610229492
    8. '                   ' → logprob: -15.625028610229492
    9. '[line' → logprob: -15.625028610229492
    10. ' [' → logprob: -16.250028610229492

Token 1317: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.8299539089202881
    2. '.split' → logprob: -1.204953908920288
    3. '.strip' → logprob: -1.454953908920288
    4. '[idx' → logprob: -4.329954147338867
    5. '.readline' → logprob: -4.829954147338867
    6. '])' → logprob: -5.704954147338867
    7. '().' → logprob: -6.079954147338867
    8. ']' → logprob: -6.329954147338867
    9. '][' → logprob: -7.329954147338867
    10. ' .' → logprob: -8.204954147338867

Token 1318: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.02975199744105339
    2. 'split' → logprob: -3.529752016067505
    3. '.strip' → logprob: -13.904751777648926
    4. ' strip' → logprob: -14.529751777648926
    5. 'rstrip' → logprob: -16.154752731323242
    6. '(strip' → logprob: -17.279752731323242
    7. 'read' → logprob: -17.654752731323242
    8. ' split' → logprob: -18.279752731323242
    9. '_strip' → logprob: -18.404752731323242
    10. 'replace' → logprob: -18.654752731323242

Token 1319: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.629921436891891e-05
    2. '()' → logprob: -11.12502670288086
    3. '()[' → logprob: -12.00002670288086
    4. '.split' → logprob: -12.62502670288086
    5. '()
' → logprob: -13.75002670288086
    6. '()))' → logprob: -15.00002670288086
    7. '())' → logprob: -15.62502670288086
    8. '().
' → logprob: -16.25002670288086
    9. '()))
' → logprob: -16.25002670288086
    10. '(' → logprob: -16.87502670288086

Token 1320: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.696889623621246e-06
    2. '().' → logprob: -13.50000286102295
    3. '.split' → logprob: -14.12500286102295
    4. ' split' → logprob: -14.75000286102295
    5. '(split' → logprob: -16.250001907348633
    6. 'rstrip' → logprob: -17.500001907348633
    7. 'replace' → logprob: -18.125001907348633
    8. 'strip' → logprob: -18.375001907348633
    9. '0' → logprob: -18.750001907348633
    10. 'spl' → logprob: -18.875001907348633

Token 1321: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.07154013961553574
    2. '()))
' → logprob: -2.696540117263794
    3. '()' → logprob: -6.571540355682373
    4. '('' → logprob: -9.321539878845215
    5. '))' → logprob: -9.571539878845215
    6. '()
' → logprob: -11.696539878845215
    7. '()))

' → logprob: -11.946539878845215
    8. '(','' → logprob: -12.321539878845215
    9. '()[' → logprob: -12.571539878845215
    10. '())))
' → logprob: -12.571539878845215

Token 1322: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06105690822005272
    2. '       ' → logprob: -3.4360568523406982
    3. '[' → logprob: -4.686057090759277
    4. '```' → logprob: -4.686057090759277
    5. '<|end|>' → logprob: -5.936057090759277
    6. '               ' → logprob: -6.311057090759277
    7. '[idx' → logprob: -6.936057090759277
    8. ',' → logprob: -7.561057090759277
    9. '<|end|>' → logprob: -7.936057090759277
    10. '            
' → logprob: -8.436057090759277

Token 1323: ' idx' (ID: 14016)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.109228253364563
    2. 'idx' (adapté à ' idx') → logprob: -1.484228253364563
    3. 'subset' → logprob: -1.859228253364563
    4. 'bits' → logprob: -2.4842281341552734
    5. '           ' → logprob: -2.4842281341552734
    6. 'sub' → logprob: -3.1092281341552734
    7. 'mask' → logprob: -3.2342281341552734
    8. ' subsets' → logprob: -4.234228134155273
    9. 's' → logprob: -4.734228134155273
    10. ' idx' → logprob: -5.359228134155273

Token 1324: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.05218619108200073
    2. ' +=' → logprob: -3.4271862506866455
    3. '           ' → logprob: -4.052186012268066
    4. '       ' → logprob: -7.802186012268066
    5. '```' → logprob: -8.552186012268066
    6. '               ' → logprob: -9.302186012268066
    7. '          ' → logprob: -10.052186012268066
    8. ']+=' → logprob: -10.052186012268066
    9. '   ' → logprob: -10.302186012268066
    10. '[idx' → logprob: -10.802186012268066

Token 1325: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.250001907348633
    3. '4' → logprob: -14.750001907348633
    4. '   ' → logprob: -15.750001907348633
    5. '```' → logprob: -18.375001907348633
    6. '3' → logprob: -18.750001907348633
    7. '           ' → logprob: -18.750001907348633
    8. '
' → logprob: -19.750001907348633
    9. '       ' → logprob: -20.000001907348633
    10. '=' → logprob: -20.125001907348633

Token 1326: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.375000953674316
    3. '4' → logprob: -15.875000953674316
    4. '3' → logprob: -16.250001907348633
    5. '0' → logprob: -16.875001907348633
    6. '```' → logprob: -17.125001907348633
    7. '１' → logprob: -17.375001907348633
    8. '2' → logprob: -17.812501907348633
    9. '
' → logprob: -17.937501907348633
    10. '=' → logprob: -18.375001907348633

Token 1327: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16397906839847565
    2. '           ' → logprob: -1.9139790534973145
    3. 'sub' → logprob: -6.5389790534973145
    4. '```' → logprob: -6.7889790534973145
    5. ' subsets' → logprob: -7.5389790534973145
    6. 'subset' → logprob: -8.038979530334473
    7. 'bits' → logprob: -8.913979530334473
    8. '   ' → logprob: -9.913979530334473
    9. '#' → logprob: -10.163979530334473
    10. '``' → logprob: -10.413979530334473

Token 1328: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04899857938289642
    2. '           ' → logprob: -3.4239985942840576
    3. '```' → logprob: -5.5489983558654785
    4. ' subsets' → logprob: -5.6739983558654785
    5. 'bits' → logprob: -5.9239983558654785
    6. 'subset' → logprob: -5.9239983558654785
    7. 'sub' → logprob: -6.5489983558654785
    8. ' bits' → logprob: -7.9239983558654785
    9. ' subset' → logprob: -8.048998832702637
    10. '   ' → logprob: -9.298998832702637

Token 1329: ' s' (ID: 265)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.1137397438287735
    2. 'mask' → logprob: -3.2387397289276123
    3. 'sub' → logprob: -3.9887397289276123
    4. 's' (adapté à ' s') → logprob: -4.113739967346191
    5. 'bits' → logprob: -4.113739967346191
    6. 'val' → logprob: -4.988739967346191
    7. 'bit' → logprob: -5.363739967346191
    8. ' subset' → logprob: -5.613739967346191
    9. 'value' → logprob: -7.863739967346191
    10. 'bm' → logprob: -7.863739967346191

Token 1330: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02362091839313507
    2. ' =' → logprob: -3.773620843887329
    3. '_bits' → logprob: -9.14862060546875
    4. 'et' → logprob: -9.52362060546875
    5. 'bits' → logprob: -9.52362060546875
    6. '=set' → logprob: -10.39862060546875
    7. 's' → logprob: -10.64862060546875
    8. 'set' → logprob: -11.02362060546875
    9. '_set' → logprob: -11.77362060546875
    10. '_bit' → logprob: -11.89862060546875

Token 1331: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.531813702778891e-05
    2. '(' → logprob: -9.50009536743164
    3. ' ' → logprob: -11.12509536743164
    4. 'sum' → logprob: -12.87509536743164
    5. '(sum' → logprob: -13.00009536743164
    6. ' (' → logprob: -15.12509536743164
    7. '(bits' → logprob: -15.25009536743164
    8. '((' → logprob: -16.12509536743164
    9. 'bits' → logprob: -17.00009536743164
    10. '(s' → logprob: -17.00009536743164

Token 1332: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006199848721735179
    2. '(' → logprob: -7.625619888305664
    3. 'sum' → logprob: -9.125619888305664
    4. '(sum' → logprob: -10.875619888305664
    5. ' ' → logprob: -13.125619888305664
    6. '(bits' → logprob: -14.000619888305664
    7. 'bits' → logprob: -14.250619888305664
    8. '((' → logprob: -15.000619888305664
    9. ' (' → logprob: -15.375619888305664
    10. '1' → logprob: -16.500619888305664

Token 1333: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1602783501148224
    2. 'for' → logprob: -2.0352783203125
    3. ' for' → logprob: -4.1602783203125
    4. '
' → logprob: -6.4102783203125
    5. '       ' → logprob: -9.6602783203125
    6. '                   ' → logprob: -9.7852783203125
    7. '               ' → logprob: -10.1602783203125
    8. '   ' → logprob: -10.5352783203125
    9. '```' → logprob: -13.0352783203125
    10. '                           ' → logprob: -13.1602783203125

Token 1334: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5588082671165466
    2. 'for' → logprob: -1.4338083267211914
    3. '           ' → logprob: -1.6838083267211914
    4. '<<' → logprob: -6.183808326721191
    5. '               ' → logprob: -7.183808326721191
    6. '
' → logprob: -7.933808326721191
    7. ' <<' → logprob: -8.308808326721191
    8. '```' → logprob: -9.058808326721191
    9. '1' → logprob: -9.433808326721191
    10. '                   ' → logprob: -9.558808326721191

Token 1335: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.16029195487499237
    2. ' for' → logprob: -1.9102919101715088
    3. '           ' → logprob: -9.66029167175293
    4. '
' → logprob: -13.66029167175293
    5. '               ' → logprob: -13.78529167175293
    6. '```' → logprob: -14.28529167175293
    7. '       ' → logprob: -14.78529167175293
    8. '   ' → logprob: -15.03529167175293
    9. '	for' → logprob: -15.41029167175293
    10. '                   ' → logprob: -15.66029167175293

Token 1336: ' i' (ID: 575)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04053544998168945
    2. 'bit' → logprob: -3.2905354499816895
    3. ' b' → logprob: -6.6655354499816895
    4. 'i' → logprob: -6.9155354499816895
    5. ' bit' → logprob: -8.540534973144531
    6. 'j' → logprob: -11.040534973144531
    7. ' i' → logprob: -11.790534973144531
    8. 'x' → logprob: -13.415534973144531
    9. 'v' → logprob: -13.665534973144531
    10. 'k' → logprob: -14.165534973144531

Token 1337: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043267276138067245
    2. 'in' → logprob: -3.168267250061035
    3. ',' → logprob: -8.793267250061035
    4. 'i' → logprob: -10.668267250061035
    5. ' i' → logprob: -11.043267250061035
    6. ' ,' → logprob: -11.043267250061035
    7. '=' → logprob: -11.293267250061035
    8. ' ' → logprob: -11.418267250061035
    9. '	in' → logprob: -12.043267250061035
    10. '```' → logprob: -12.168267250061035

Token 1338: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005317362025380135
    2. 'bit' → logprob: -5.255317211151123
    3. ' b' → logprob: -9.505317687988281
    4. 'v' → logprob: -12.130317687988281
    5. ' bit' → logprob: -12.505317687988281
    6. 'val' → logprob: -17.00531768798828
    7. '
' → logprob: -18.00531768798828
    8. 'x' → logprob: -19.13031768798828
    9. '	b' → logprob: -19.88031768798828
    10. ' v' → logprob: -19.88031768798828

Token 1339: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.7004994750022888
    2. ' in' → logprob: -0.7004994750022888
    3. 'n' → logprob: -4.950499534606934
    4. 'b' → logprob: -8.450499534606934
    5. 's' → logprob: -11.325499534606934
    6. 'i' → logprob: -12.450499534606934
    7. 't' → logprob: -12.575499534606934
    8. '```' → logprob: -12.575499534606934
    9. 'bit' → logprob: -12.825499534606934
    10. ' ' → logprob: -13.575499534606934

Token 1340: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.09211412817239761
    2. ' enumerate' → logprob: -2.842114210128784
    3. 'b' → logprob: -3.592114210128784
    4. 'range' → logprob: -6.342113971710205
    5. '```' → logprob: -8.342114448547363
    6. '(' → logprob: -9.217114448547363
    7. '
' → logprob: -11.217114448547363
    8. ' b' → logprob: -11.467114448547363
    9. ' range' → logprob: -12.217114448547363
    10. ' ' → logprob: -12.592114448547363

Token 1341: '(bits' (ID: 170698)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.00013500562636181712
    2. ' bits' → logprob: -9.00013542175293
    3. '(bits' → logprob: -12.00013542175293
    4. 'b' → logprob: -12.12513542175293
    5. 'bit' → logprob: -17.25013542175293
    6. '_bits' → logprob: -17.87513542175293
    7. '[' → logprob: -18.37513542175293
    8. '.bits' → logprob: -18.87513542175293
    9. '[b' → logprob: -19.50013542175293
    10. '   ' → logprob: -19.75013542175293

Token 1342: '):
' (ID: 1883)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3267607092857361
    2. ':' → logprob: -1.8267607688903809
    3. '               ' → logprob: -2.201760768890381
    4. '):
' → logprob: -5.576760768890381
    5. '           ' → logprob: -6.326760768890381
    6. '       ' → logprob: -7.826760768890381
    7. '[::-' → logprob: -8.326760292053223
    8. '():
' → logprob: -8.576760292053223
    9. 'if' → logprob: -9.201760292053223
    10. '                       ' → logprob: -9.326760292053223

Token 1343: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002246365649625659
    2. ' if' → logprob: -6.877246379852295
    3. 'if' → logprob: -7.127246379852295
    4. '                       ' → logprob: -9.002245903015137
    5. '```' → logprob: -9.752245903015137
    6. '           ' → logprob: -10.002245903015137
    7. '                   ' → logprob: -10.002245903015137
    8. ':' → logprob: -10.877245903015137
    9. '              ' → logprob: -10.877245903015137
    10. '   ' → logprob: -11.002245903015137

Token 1344: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10764587670564651
    2. ' if' → logprob: -2.4826459884643555
    3. 'if' (adapté à ' if') → logprob: -4.1076459884643555
    4. 's' → logprob: -7.1076459884643555
    5. ' s' → logprob: -7.2326459884643555
    6. '           ' → logprob: -8.357645988464355
    7. '                   ' → logprob: -8.607645988464355
    8. '   ' → logprob: -10.232645988464355
    9. '                ' → logprob: -10.982645988464355
    10. '```' → logprob: -11.232645988464355

Token 1345: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01416350994259119
    2. ' b' → logprob: -4.264163494110107
    3. '	b' → logprob: -16.764163970947266
    4. ' ' → logprob: -17.764163970947266
    5. '           ' → logprob: -17.889163970947266
    6. '   ' → logprob: -18.014163970947266
    7. ' ' → logprob: -18.014163970947266
    8. '       ' → logprob: -19.639163970947266
    9. '(b' → logprob: -19.639163970947266
    10. '               ' → logprob: -19.764163970947266

Token 1346: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.023653395473957062
    2. ' ==' → logprob: -4.523653507232666
    3. ':' → logprob: -5.273653507232666
    4. ':
' → logprob: -5.773653507232666
    5. '```' → logprob: -6.273653507232666
    6. '           ' → logprob: -6.523653507232666
    7. '1' → logprob: -7.773653507232666
    8. '<<' → logprob: -8.648653030395508
    9. '=' → logprob: -9.523653030395508
    10. ' <<=' → logprob: -9.773653030395508

Token 1347: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -17.125001907348633
    4. '           ' → logprob: -17.875001907348633
    5. '0' → logprob: -18.500001907348633
    6. '       ' → logprob: -19.500001907348633
    7. '
' → logprob: -19.500001907348633
    8. '=' → logprob: -19.500001907348633
    9. '               ' → logprob: -19.625001907348633
    10. '```' → logprob: -20.375001907348633

Token 1348: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. '0' → logprob: -16.75000762939453
    4. '
' → logprob: -17.25000762939453
    5. '   ' → logprob: -17.75000762939453
    6. '  ' → logprob: -19.87500762939453
    7. '```' → logprob: -20.06250762939453
    8. '=' → logprob: -20.37500762939453
    9. '

' → logprob: -20.50000762939453
    10. '           ' → logprob: -20.75000762939453

Token 1349: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.05075427517294884
    2. '                   ' → logprob: -3.1757543087005615
    3. ':' → logprob: -4.925754070281982
    4. '                       ' → logprob: -8.55075454711914
    5. '               ' → logprob: -8.92575454711914
    6. '           ' → logprob: -10.17575454711914
    7. '<<' → logprob: -10.30075454711914
    8. '):
' → logprob: -11.30075454711914
    9. '                  ' → logprob: -11.55075454711914
    10. '1' → logprob: -11.92575454711914

Token 1350: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.011527331545948982
    2. ':
' → logprob: -4.7615275382995605
    3. ':' → logprob: -6.5115275382995605
    4. '                       ' → logprob: -6.8865275382995605
    5. '               ' → logprob: -8.886527061462402
    6. '                           ' → logprob: -9.261527061462402
    7. ' s' → logprob: -10.386527061462402
    8. '                    ' → logprob: -10.511527061462402
    9. '                  ' → logprob: -10.636527061462402
    10. '                               ' → logprob: -11.011527061462402

Token 1351: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.06264980137348175
    2. ' s' → logprob: -2.812649726867676
    3. '                   ' → logprob: -7.562649726867676
    4. '                       ' → logprob: -9.187649726867676
    5. ' ' → logprob: -11.062649726867676
    6. '                    ' → logprob: -11.687649726867676
    7. '               ' → logprob: -11.812649726867676
    8. '                  ' → logprob: -12.187649726867676
    9. '   ' → logprob: -12.312649726867676
    10. '```' → logprob: -12.437649726867676

Token 1352: ' |=' (ID: 19917)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -7.386147626675665e-05
    2. ' |=' → logprob: -9.625073432922363
    3. '+=' → logprob: -11.875073432922363
    4. '=' → logprob: -14.750073432922363
    5. '   ' → logprob: -16.62507438659668
    6. '```' → logprob: -16.75007438659668
    7. '           ' → logprob: -16.87507438659668
    8. '|
' → logprob: -17.00007438659668
    9. '|=
' → logprob: -17.25007438659668
    10. 's' → logprob: -17.25007438659668

Token 1353: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5763106942176819
    2. '(' → logprob: -0.8263106942176819
    3. ' (' → logprob: -7.951310634613037
    4. ' ' → logprob: -10.951311111450195
    5. '   ' → logprob: -14.076311111450195
    6. '
' → logprob: -15.076311111450195
    7. '```' → logprob: -16.076311111450195
    8. '[' → logprob: -16.826311111450195
    9. '           ' → logprob: -17.451311111450195
    10. '(i' → logprob: -17.451311111450195

Token 1354: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020413640595506877
    2. '(' → logprob: -8.500204086303711
    3. ' ' → logprob: -15.000204086303711
    4. ' (' → logprob: -15.625204086303711
    5. '   ' → logprob: -17.25020408630371
    6. '
' → logprob: -19.50020408630371
    7. '           ' → logprob: -19.75020408630371
    8. '```' → logprob: -20.87520408630371
    9. '               ' → logprob: -21.62520408630371
    10. '       ' → logprob: -22.50020408630371

Token 1355: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.0017043406842276454
    2. ' <<' → logprob: -6.376704216003418
    3. '<<(' → logprob: -13.876704216003418
    4. '1' → logprob: -14.251704216003418
    5. '<<<' → logprob: -15.126704216003418
    6. '   ' → logprob: -16.126705169677734
    7. '<' → logprob: -16.501705169677734
    8. ')<<' → logprob: -16.626705169677734
    9. '>>' → logprob: -17.126705169677734
    10. '```' → logprob: -17.376705169677734

Token 1356: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0004144648555666208
    2. '(' → logprob: -7.8754143714904785
    3. '3' → logprob: -10.750414848327637
    4. '(i' → logprob: -11.750414848327637
    5. ' i' → logprob: -12.375414848327637
    6. ' (' → logprob: -14.250414848327637
    7. '
' → logprob: -16.87541389465332
    8. ')i' → logprob: -17.37541389465332
    9. '_i' → logprob: -17.50041389465332
    10. '   ' → logprob: -17.62541389465332

Token 1357: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003297440707683563
    2. ')
' → logprob: -8.875329971313477
    3. '       ' → logprob: -10.250329971313477
    4. '           ' → logprob: -10.250329971313477
    5. '                   ' → logprob: -10.375329971313477
    6. '<|end|>' → logprob: -10.625329971313477
    7. '               ' → logprob: -10.750329971313477
    8. '):
' → logprob: -11.625329971313477
    9. '0' → logprob: -11.750329971313477
    10. ')return' → logprob: -12.125329971313477

Token 1358: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06335306167602539
    2. '<|end|>' → logprob: -3.4383530616760254
    3. '           ' → logprob: -3.5633530616760254
    4. '```' → logprob: -8.563352584838867
    5. '<|end|>' → logprob: -8.688352584838867
    6. 'return' → logprob: -9.063352584838867
    7. '   ' → logprob: -9.188352584838867
    8. ')' → logprob: -9.563352584838867
    9. '#' → logprob: -10.063352584838867
    10. ' return' → logprob: -10.563352584838867

Token 1359: ' subsets' (ID: 165377)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.08281832933425903
    2. '       ' → logprob: -2.5828182697296143
    3. ' subsets' → logprob: -5.707818508148193
    4. ' sub' → logprob: -7.832818508148193
    5. '           ' → logprob: -9.457818031311035
    6. '   ' → logprob: -9.707818031311035
    7. '```' → logprob: -10.082818031311035
    8. '	sub' → logprob: -11.582818031311035
    9. '``' → logprob: -13.207818031311035
    10. '{sub' → logprob: -13.457818031311035

Token 1360: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.4868770196917467e-05
    2. '.' → logprob: -11.375024795532227
    3. '       ' → logprob: -11.750024795532227
    4. 'append' → logprob: -13.000024795532227
    5. '           ' → logprob: -14.000024795532227
    6. '.setdefault' → logprob: -14.375024795532227
    7. '.extend' → logprob: -14.500024795532227
    8. ' .' → logprob: -14.500024795532227
    9. '   ' → logprob: -15.875024795532227
    10. '.insert' → logprob: -16.125024795532227

Token 1361: '(s' (ID: 1858)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.002051766263321042
    2. '(s' → logprob: -6.252051830291748
    3. ' s' → logprob: -9.00205135345459
    4. '(' → logprob: -17.002052307128906
    5. ' (' → logprob: -18.127052307128906
    6. '(
' → logprob: -18.377052307128906
    7. '   ' → logprob: -19.002052307128906
    8. '
' → logprob: -19.627052307128906
    9. '`s' → logprob: -19.627052307128906
    10. '{s' → logprob: -19.752052307128906

Token 1362: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005083264317363501
    2. '<|end|>' → logprob: -5.380083084106445
    3. '       ' → logprob: -8.255083084106445
    4. ')return' → logprob: -9.255083084106445
    5. '<|end|>' → logprob: -9.880083084106445
    6. ')
' → logprob: -10.755083084106445
    7. '   ' → logprob: -12.005083084106445
    8. '")' → logprob: -12.380083084106445
    9. '')' → logprob: -12.380083084106445
    10. '```' → logprob: -12.505083084106445

Token 1363: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3058243691921234
    2. '   ' → logprob: -1.5558243989944458
    3. '```' → logprob: -3.3058242797851562
    4. '<|end|>' → logprob: -4.680824279785156
    5. ')' → logprob: -6.805824279785156
    6. 'Next' → logprob: -6.930824279785156
    7. '#' → logprob: -7.055824279785156
    8. 'def' → logprob: -7.430824279785156
    9. 'next' → logprob: -7.680824279785156
    10. 'continue' → logprob: -7.680824279785156

Token 1364: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45936495065689087
    2. 'root' → logprob: -1.084364891052246
    3. 'tree' → logprob: -3.709364891052246
    4. '   ' → logprob: -6.084364891052246
    5. 'dist' → logprob: -6.959364891052246
    6. '```' → logprob: -6.959364891052246
    7. '#' (adapté à ' #') → logprob: -7.709364891052246
    8. 'node' → logprob: -7.959364891052246
    9. 'result' → logprob: -8.209364891052246
    10. '
' → logprob: -9.209364891052246

Token 1365: ' Constru' (ID: 98396)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.016131380572915077
    2. 'tree' → logprob: -4.141131401062012
    3. '#' → logprob: -9.891131401062012
    4. 'node' → logprob: -10.766131401062012
    5. '   ' → logprob: -11.641131401062012
    6. '       ' → logprob: -11.766131401062012
    7. 'ar' → logprob: -12.266131401062012
    8. '```' → logprob: -13.516131401062012
    9. ' root' → logprob: -14.391131401062012
    10. '``' → logprob: -15.141131401062012

Token 1366: 'ire' (ID: 594)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.023335738107562065
    2. 'it' → logprob: -4.148335933685303
    3. '   ' → logprob: -6.398335933685303
    4. 't' → logprob: -6.648335933685303
    5. 'ire' → logprob: -7.023335933685303
    6. 'ction' → logprob: -7.273335933685303
    7. 'ite' → logprob: -8.023335456848145
    8. 'cture' → logprob: -8.148335456848145
    9. 'et' → logprob: -8.398335456848145
    10. '       ' → logprob: -8.398335456848145

Token 1367: ' arbre' (ID: 164180)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.014300311915576458
    2. 'tree' → logprob: -4.264300346374512
    3. ' root' → logprob: -9.264300346374512
    4. '```' → logprob: -11.139300346374512
    5. ' tree' → logprob: -11.264300346374512
    6. 'node' → logprob: -11.764300346374512
    7. 'the' → logprob: -12.764300346374512
    8. 'le' → logprob: -13.889300346374512
    9. '       ' → logprob: -13.889300346374512
    10. '``' → logprob: -14.514300346374512

Token 1368: ' d' (ID: 272)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.27046018838882446
    2. 'tree' → logprob: -1.7704601287841797
    3. '       ' → logprob: -2.8954601287841797
    4. ' tree' → logprob: -5.14546012878418
    5. ' root' → logprob: -5.52046012878418
    6. '   ' → logprob: -7.02046012878418
    7. 'node' → logprob: -7.64546012878418
    8. '```' → logprob: -9.14546012878418
    9. '
' → logprob: -10.14546012878418
    10. '	tree' → logprob: -10.64546012878418

Token 1369: ''' (ID: 6)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.19241967797279358
    2. ''ar' → logprob: -2.3174197673797607
    3. 'u' → logprob: -3.6924197673797607
    4. 'e' → logprob: -3.6924197673797607
    5. 'arb' → logprob: -5.817419528961182
    6. ''origine' → logprob: -6.067419528961182
    7. 'ans' → logprob: -6.192419528961182
    8. 'objet' → logprob: -6.317419528961182
    9. 'obj' → logprob: -6.567419528961182
    10. ''objet' → logprob: -6.567419528961182

Token 1370: 'obj' (ID: 4264)
  Prédit: 'expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expression' → logprob: -0.990803062915802
    2. 'ar' → logprob: -1.6158030033111572
    3. 'obj' → logprob: -1.7408030033111572
    4. 'expr' → logprob: -1.9908030033111572
    5. 'express' → logprob: -3.3658030033111572
    6. 'arb' → logprob: -3.9908030033111572
    7. 'objet' → logprob: -4.115803241729736
    8. ''abord' → logprob: -5.490803241729736
    9. 'ans' → logprob: -5.740803241729736
    10. 'e' → logprob: -5.740803241729736

Token 1371: 'ets' (ID: 1719)
  Prédit: 'jet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jet' → logprob: -0.31556805968284607
    2. 'et' → logprob: -1.3155680894851685
    3. 'ject' → logprob: -6.190567970275879
    4. 'ect' → logprob: -9.190567970275879
    5. 'j' → logprob: -9.815567970275879
    6. 'get' → logprob: -10.690567970275879
    7. 'ets' → logprob: -10.940567970275879
    8. 'jets' → logprob: -11.190567970275879
    9. 'let' → logprob: -11.440567970275879
    10. ' jet' → logprob: -11.940567970275879

Token 1372: '
' (ID: 198)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.12937431037425995
    2. 'tree' → logprob: -2.1293742656707764
    3. '       ' → logprob: -6.1293745040893555
    4. ' tree' → logprob: -9.004374504089355
    5. ' root' → logprob: -9.629374504089355
    6. 'node' → logprob: -10.004374504089355
    7. '   ' → logprob: -11.254374504089355
    8. '```' → logprob: -11.504374504089355
    9. '
' → logprob: -12.254374504089355
    10. '`' → logprob: -13.629374504089355

Token 1373: '       ' (ID: 309)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.2186928242444992
    2. 'root' → logprob: -1.7186927795410156
    3. 'node' → logprob: -4.218692779541016
    4. ' tree' → logprob: -6.718692779541016
    5. '       ' → logprob: -7.093692779541016
    6. '```' → logprob: -8.218692779541016
    7. ' root' → logprob: -10.593692779541016
    8. 'ar' → logprob: -10.843692779541016
    9. '   ' → logprob: -11.093692779541016
    10. '`' → logprob: -11.093692779541016

Token 1374: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' (adapté à ' root') → logprob: -0.004106065724045038
    2. 'tree' → logprob: -5.504106044769287
    3. ' root' → logprob: -10.754106521606445
    4. '   ' → logprob: -12.504106521606445
    5. ' tree' → logprob: -13.504106521606445
    6. '       ' → logprob: -14.254106521606445
    7. 'node' → logprob: -14.504106521606445
    8. '```' → logprob: -16.379106521606445
    9. ' ' → logprob: -18.129106521606445
    10. '`' → logprob: -18.879106521606445

Token 1375: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687992095947266
    2. '=' → logprob: -1.1368799209594727
    3. '=root' → logprob: -11.761879920959473
    4. '=
' → logprob: -15.261879920959473
    5. ',' → logprob: -15.636879920959473
    6. ' ' → logprob: -15.886879920959473
    7. ')' → logprob: -16.011878967285156
    8. ' =
' → logprob: -16.136878967285156
    9. '   ' → logprob: -16.136878967285156
    10. 'root' → logprob: -16.261878967285156

Token 1376: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.0009114635176956654
    2. ' build' → logprob: -7.000911235809326
    3. '(build' → logprob: -19.875911712646484
    4. '	build' → logprob: -20.000911712646484
    5. 'building' → logprob: -21.625911712646484
    6. '.build' → logprob: -22.375911712646484
    7. 'built' → logprob: -23.625911712646484
    8. ' ' → logprob: -23.625911712646484
    9. ' buil' → logprob: -24.000911712646484
    10. '   ' → logprob: -24.500911712646484

Token 1377: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.0001454955490771681
    2. 'tree' → logprob: -8.87514591217041
    3. '(node' → logprob: -13.37514591217041
    4. 'Tree' → logprob: -13.50014591217041
    5. '_node' → logprob: -14.12514591217041
    6. 'node' → logprob: -14.25014591217041
    7. '(root' → logprob: -15.12514591217041
    8. 'parsed' → logprob: -15.12514591217041
    9. 'root' → logprob: -15.50014591217041
    10. ' tree' → logprob: -15.87514591217041

Token 1378: '(parsed' (ID: 96597)
  Prédit: '(parsed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parsed' → logprob: -0.0019306590547785163
    2. 'parsed' → logprob: -6.2519307136535645
    3. '(parse' → logprob: -13.626930236816406
    4. ' parsed' → logprob: -15.251930236816406
    5. '(' → logprob: -15.501930236816406
    6. '(root' → logprob: -16.126930236816406
    7. '(par' → logprob: -16.626930236816406
    8. '((' → logprob: -16.751930236816406
    9. ' (' → logprob: -16.751930236816406
    10. 'parse' → logprob: -17.251930236816406

Token 1379: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.11500575393438339
    2. '(root' → logprob: -3.1150057315826416
    3. '(parsed' → logprob: -3.6150057315826416
    4. 'parsed' → logprob: -3.7400057315826416
    5. ')' → logprob: -5.240005970001221
    6. 'root' → logprob: -5.865005970001221
    7. 'tree' → logprob: -6.240005970001221
    8. '_root' → logprob: -6.865005970001221
    9. '('_' → logprob: -7.365005970001221
    10. '_' → logprob: -8.365005493164062

Token 1380: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027593454346060753
    2. '(root' → logprob: -4.402593612670898
    3. ')
' → logprob: -4.652593612670898
    4. '   ' → logprob: -5.652593612670898
    5. '       ' → logprob: -6.402593612670898
    6. '<|end|>' → logprob: -9.527593612670898
    7. ',' → logprob: -10.152593612670898
    8. ' )' → logprob: -10.402593612670898
    9. '(
' → logprob: -10.652593612670898
    10. '
' → logprob: -10.777593612670898

Token 1381: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08593016862869263
    2. '   ' → logprob: -2.585930109024048
    3. 'result' → logprob: -5.085930347442627
    4. '```' → logprob: -7.710930347442627
    5. '
' → logprob: -8.835929870605469
    6. 'results' → logprob: -9.710929870605469
    7. 'dist' → logprob: -9.960929870605469
    8. '        
' → logprob: -10.335929870605469
    9. 'memo' → logprob: -10.335929870605469
    10. 'ways' → logprob: -10.710929870605469

Token 1382: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6472896337509155
    2. '       ' → logprob: -1.2722896337509155
    3. 'result' → logprob: -2.147289752960205
    4. 'memo' → logprob: -3.397289752960205
    5. '   ' → logprob: -3.897289752960205
    6. 'res' → logprob: -4.647289752960205
    7. 'ways' → logprob: -4.772289752960205
    8. 'results' → logprob: -5.522289752960205
    9. 'distribution' → logprob: -6.772289752960205
    10. 'dp' → logprob: -7.022289752960205

Token 1383: ' Calcul' (ID: 57243)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.25236329436302185
    2. 'dist' → logprob: -1.7523633241653442
    3. 'result' → logprob: -3.7523632049560547
    4. 'res' → logprob: -3.7523632049560547
    5. 'ways' → logprob: -6.377363204956055
    6. 'dp' → logprob: -7.877363204956055
    7. 'mem' → logprob: -8.127363204956055
    8. 'results' → logprob: -9.252363204956055
    9. 'ans' → logprob: -9.252363204956055
    10. '   ' → logprob: -9.502363204956055

Token 1384: ' du' (ID: 1462)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6326748728752136
    2. '       ' → logprob: -0.8826748728752136
    3. 'ways' → logprob: -3.6326749324798584
    4. 'dist' → logprob: -4.007674694061279
    5. 'res' → logprob: -5.632674694061279
    6. 'results' → logprob: -5.757674694061279
    7. ' ways' → logprob: -6.257674694061279
    8. '_result' → logprob: -8.132675170898438
    9. '```' → logprob: -8.132675170898438
    10. '   ' → logprob: -8.382675170898438

Token 1385: ' nombre' (ID: 9733)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.08524952083826065
    2. 'result' → logprob: -2.585249423980713
    3. 'res' → logprob: -5.210249423980713
    4. 'ways' → logprob: -7.210249423980713
    5. 'results' → logprob: -9.960249900817871
    6. 'd' → logprob: -10.835249900817871
    7. 'counter' → logprob: -10.960249900817871
    8. 'distribution' → logprob: -11.085249900817871
    9. '```' → logprob: -11.460249900817871
    10. 'count' → logprob: -11.585249900817871

Token 1386: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029521003365516663
    2. 'de' → logprob: -4.4045209884643555
    3. 'ways' → logprob: -4.7795209884643555
    4. 'result' → logprob: -4.9045209884643555
    5. '   ' → logprob: -8.029520988464355
    6. 'of' → logprob: -8.654520988464355
    7. '#' → logprob: -8.904520988464355
    8. 'des' → logprob: -9.529520988464355
    9. '```' → logprob: -9.529520988464355
    10. ' de' → logprob: -9.654520988464355

Token 1387: ' façons' (ID: 165958)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.0011521248379722238
    2. 'fa' → logprob: -7.001152038574219
    3. '#' → logprob: -9.126152038574219
    4. 'print' → logprob: -10.376152038574219
    5. '```' → logprob: -10.501152038574219
    6. 'way' → logprob: -11.001152038574219
    7. 'man' → logprob: -11.376152038574219
    8. '_' → logprob: -11.501152038574219
    9. '   ' → logprob: -11.751152038574219
    10. 'fac' → logprob: -12.501152038574219

Token 1388: ' d' (ID: 272)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07577598094940186
    2. 'result' → logprob: -2.7007761001586914
    3. 'ways' → logprob: -5.950776100158691
    4. 'dist' → logprob: -6.450776100158691
    5. '   ' → logprob: -6.700776100158691
    6. 'results' → logprob: -8.325776100158691
    7. 'res' → logprob: -10.450776100158691
    8. ' result' → logprob: -10.450776100158691
    9. ' ways' → logprob: -10.450776100158691
    10. '```' → logprob: -10.950776100158691

Token 1389: ''obtenir' (ID: 191633)
  Prédit: ''obtenir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''obtenir' → logprob: -0.03444520756602287
    2. 'ob' → logprob: -3.534445285797119
    3. 'e' → logprob: -6.534445285797119
    4. ''é' → logprob: -6.659445285797119
    5. 'obt' → logprob: -7.034445285797119
    6. '’obtenir' → logprob: -7.659445285797119
    7. 'é' → logprob: -8.784444808959961
    8. ''avoir' → logprob: -8.909444808959961
    9. ''ob' → logprob: -9.159444808959961
    10. ' obtenir' → logprob: -9.159444808959961

Token 1390: ' l' (ID: 305)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.20956389605998993
    2. '{' → logprob: -1.8345638513565063
    3. 'root' → logprob: -3.959563970565796
    4. 'complete' → logprob: -5.709563732147217
    5. 'full' → logprob: -6.084563732147217
    6. 'le' → logprob: -7.209563732147217
    7. 'all' → logprob: -7.209563732147217
    8. '   ' → logprob: -7.459563732147217
    9. 'la' → logprob: -7.584563732147217
    10. '```' → logprob: -7.959563732147217

Token 1391: ''ensemble' (ID: 79341)
  Prédit: ''ensemble'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ensemble' → logprob: -0.0031143762171268463
    2. 'ensemble' → logprob: -6.003114223480225
    3. 'ense' → logprob: -8.878114700317383
    4. ''' → logprob: -8.878114700317383
    5. ''ar' → logprob: -9.253114700317383
    6. '’ensemble' → logprob: -9.878114700317383
    7. 'a' → logprob: -10.503114700317383
    8. ''{' → logprob: -10.753114700317383
    9. ''objet' → logprob: -10.753114700317383
    10. ''intégr' → logprob: -10.753114700317383

Token 1392: ' complet' (ID: 5127)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.3444940447807312
    2. '{' → logprob: -2.219494104385376
    3. 'd' → logprob: -2.469494104385376
    4. '       ' → logprob: -3.219494104385376
    5. 'final' → logprob: -3.594494104385376
    6. '   ' → logprob: -4.594493865966797
    7. 'complete' → logprob: -4.844493865966797
    8. 'compl' → logprob: -5.719493865966797
    9. 'root' → logprob: -6.094493865966797
    10. 'dist' → logprob: -6.719493865966797

Token 1393: ' {' (ID: 354)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7745116353034973
    2. 'result' → logprob: -0.7745116353034973
    3. 'dist' → logprob: -3.1495115756988525
    4. '   ' → logprob: -4.149511814117432
    5. 'ways' → logprob: -5.399511814117432
    6. 'final' → logprob: -5.774511814117432
    7. '(dist' → logprob: -6.024511814117432
    8. ' result' → logprob: -6.149511814117432
    9. '(result' → logprob: -6.649511814117432
    10. '(' → logprob: -6.899511814117432

Token 1394: 'a' (ID: 64)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018258459866046906
    2. '15' → logprob: -4.018258571624756
    3. 'root' → logprob: -9.643258094787598
    4. '(' → logprob: -10.393258094787598
    5. '{' → logprob: -11.893258094787598
    6. '```' → logprob: -13.018258094787598
    7. ' ' → logprob: -13.768258094787598
    8. '1' → logprob: -14.518258094787598
    9. '   ' → logprob: -14.643258094787598
    10. 's' → logprob: -14.893258094787598

Token 1395: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19478677213191986
    2. '1' → logprob: -2.069786787033081
    3. ',b' → logprob: -3.194786787033081
    4. 'b' → logprob: -4.819786548614502
    5. '{' → logprob: -7.194786548614502
    6. '0' → logprob: -7.694786548614502
    7. ' ,' → logprob: -8.94478702545166
    8. '=' → logprob: -9.06978702545166
    9. '|' → logprob: -9.06978702545166
    10. ',
' → logprob: -10.06978702545166

Token 1396: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.007614439819008112
    2. ',' → logprob: -5.007614612579346
    3. 'c' → logprob: -7.257614612579346
    4. '1' → logprob: -8.882614135742188
    5. ' ,' → logprob: -11.382614135742188
    6. '_,' → logprob: -12.007614135742188
    7. ',d' → logprob: -12.007614135742188
    8. '=' → logprob: -12.007614135742188
    9. '{' → logprob: -12.132614135742188
    10. '|' → logprob: -12.382614135742188

Token 1397: ',d' (ID: 26159)
  Prédit: ',d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.0004778592265211046
    2. 'd' → logprob: -8.00047779083252
    3. ',' → logprob: -8.87547779083252
    4. '{' → logprob: -14.12547779083252
    5. ' ,' → logprob: -14.75047779083252
    6. ',
' → logprob: -14.87547779083252
    7. '_,' → logprob: -15.00047779083252
    8. ','' → logprob: -15.62547779083252
    9. '',' → logprob: -15.62547779083252
    10. 'def' → logprob: -16.000478744506836

Token 1398: '},' (ID: 4180)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.28682154417037964
    2. '=' → logprob: -2.0368216037750244
    3. ' =' → logprob: -2.2868216037750244
    4. '}=' → logprob: -5.661821365356445
    5. ',' → logprob: -5.786821365356445
    6. '   ' → logprob: -6.286821365356445
    7. ' (' → logprob: -6.411821365356445
    8. ')' → logprob: -6.536821365356445
    9. '}
' → logprob: -6.536821365356445
    10. ' (=' → logprob: -6.786821365356445

Token 1399: ' soit' (ID: 17293)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.12788669764995575
    2. ' result' → logprob: -2.8778867721557617
    3. '       ' → logprob: -3.2528867721557617
    4. 'res' → logprob: -5.002886772155762
    5. 'target' → logprob: -5.127886772155762
    6. 'final' → logprob: -5.877886772155762
    7. '#' → logprob: -6.127886772155762
    8. ' res' → logprob: -6.252886772155762
    9. 'desired' → logprob: -6.627886772155762
    10. ' target' → logprob: -6.752886772155762

Token 1400: ' ' (ID: 220)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.7792527675628662
    2. '15' → logprob: -1.0292527675628662
    3. '(' → logprob: -2.154252767562866
    4. 'result' → logprob: -3.279252767562866
    5. '0' → logprob: -4.529253005981445
    6. ' dist' → logprob: -5.279253005981445
    7. '   ' → logprob: -5.779253005981445
    8. ' (' → logprob: -5.779253005981445
    9. 'res' → logprob: -6.154253005981445
    10. 'final' → logprob: -6.404253005981445

Token 1401: '0' (ID: 15)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.0040915776044130325
    2. '0' → logprob: -5.754091739654541
    3. 'dist' → logprob: -7.254091739654541
    4. '(' → logprob: -8.504091262817383
    5. '(dist' → logprob: -13.004091262817383
    6. '   ' → logprob: -14.879091262817383
    7. ' ' → logprob: -15.254091262817383
    8. '((' → logprob: -16.004091262817383
    9. '```' → logprob: -16.129091262817383
    10. 'result' → logprob: -16.254091262817383

Token 1402: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -3.128163257315464e-07
    2. 'xf' → logprob: -16.125
    3. 'x' → logprob: -16.5
    4. '
' → logprob: -16.75
    5. '111' → logprob: -18.25
    6. '15' → logprob: -18.625
    7. '0' → logprob: -19.0
    8. '   ' → logprob: -20.125
    9. 'xff' → logprob: -20.5
    10. ' ' → logprob: -21.25

Token 1403: '111' (ID: 8780)
  Prédit: '111'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '111' → logprob: 0.0
    2. ' ' → logprob: -19.375
    3. '0' → logprob: -19.625
    4. '15' → logprob: -19.75
    5. '   ' → logprob: -19.875
    6. '11' → logprob: -20.125
    7. '
' → logprob: -21.0
    8. '1' → logprob: -21.0
    9. '101' → logprob: -21.875
    10. '```' → logprob: -21.875

Token 1404: '1' (ID: 16)
  Prédit: '111'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '111' → logprob: -0.4766906499862671
    2. '1' → logprob: -0.9766906499862671
    3. '11' → logprob: -5.976690769195557
    4. '
' → logprob: -10.476690292358398
    5. '```' → logprob: -11.226690292358398
    6. '=' → logprob: -11.226690292358398
    7. '_' → logprob: -11.601690292358398
    8. '...' → logprob: -13.101690292358398
    9. '   ' → logprob: -13.476690292358398
    10. ' =' → logprob: -13.976690292358398

Token 1405: ' =' (ID: 314)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.28983452916145325
    2. '       ' → logprob: -1.4148344993591309
    3. 'dist' → logprob: -5.414834499359131
    4. 'results' → logprob: -6.789834499359131
    5. ' result' → logprob: -6.789834499359131
    6. '   ' → logprob: -7.664834499359131
    7. 'final' → logprob: -7.664834499359131
    8. 'res' → logprob: -8.289834976196289
    9. 'count' → logprob: -8.539834976196289
    10. '(result' → logprob: -8.914834976196289

Token 1406: ' ' (ID: 220)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -7.703443770878948e-06
    2. '0' → logprob: -12.000007629394531
    3. ' ' → logprob: -13.500007629394531
    4. '   ' → logprob: -16.12500762939453
    5. '(' → logprob: -18.00000762939453
    6. '31' → logprob: -18.12500762939453
    7. '           ' → logprob: -19.37500762939453
    8. '111' → logprob: -21.00000762939453
    9. '       ' → logprob: -21.62500762939453
    10. '```' → logprob: -21.62500762939453

Token 1407: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -1.306760805164231e-05
    2. '0' → logprob: -11.25001335144043
    3. ' ' → logprob: -18.25001335144043
    4. '```' → logprob: -19.00001335144043
    5. '111' → logprob: -20.00001335144043
    6. '(' → logprob: -20.62501335144043
    7. '31' → logprob: -20.87501335144043
    8. '`' → logprob: -23.12501335144043
    9. '   ' → logprob: -23.37501335144043
    10. '255' → logprob: -23.62501335144043

Token 1408: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16651658713817596
    2. 'result' → logprob: -1.9165165424346924
    3. '   ' → logprob: -5.6665167808532715
    4. '```' → logprob: -6.4165167808532715
    5. ' result' → logprob: -7.6665167808532715
    6. 'results' → logprob: -8.166516304016113
    7. '
' → logprob: -8.416516304016113
    8. 'res' → logprob: -9.541516304016113
    9. 'count' → logprob: -10.416516304016113
    10. 'dist' → logprob: -10.541516304016113

Token 1409: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6059410572052002
    2. 'result' → logprob: -0.8559410572052002
    3. '   ' → logprob: -3.9809410572052
    4. ' result' → logprob: -5.230940818786621
    5. 'res' → logprob: -5.855940818786621
    6. 'dist' → logprob: -6.605940818786621
    7. '
' → logprob: -7.730940818786621
    8. 'count' → logprob: -8.230940818786621
    9. '```' → logprob: -8.605940818786621
    10. 'results' → logprob: -8.605940818786621

Token 1410: ' dist' (ID: 3601)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.08760705590248108
    2. 'res' → logprob: -3.0876071453094482
    3. '       ' → logprob: -4.337606906890869
    4. 'dist' (adapté à ' dist') → logprob: -4.587606906890869
    5. '   ' → logprob: -4.712606906890869
    6. ' result' → logprob: -5.587606906890869
    7. ' res' → logprob: -7.087606906890869
    8. 'results' → logprob: -7.462606906890869
    9. 'ways' → logprob: -7.962606906890869
    10. '
' → logprob: -7.962606906890869

Token 1411: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4292857348918915
    2. ' =' → logprob: -1.0542857646942139
    3. '=root' → logprob: -8.304286003112793
    4. '[root' → logprob: -8.679286003112793
    5. '=node' → logprob: -9.679286003112793
    6. '[node' → logprob: -10.054286003112793
    7. '   ' → logprob: -10.804286003112793
    8. '[' → logprob: -10.929286003112793
    9. '=get' → logprob: -11.554286003112793
    10. '```' → logprob: -13.054286003112793

Token 1412: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -6.2729995988775045e-06
    2. ' count' → logprob: -12.000006675720215
    3. '   ' → logprob: -19.6250057220459
    4. '(count' → logprob: -21.3750057220459
    5. '	count' → logprob: -23.0000057220459
    6. 'counts' → logprob: -23.8750057220459
    7. 'counter' → logprob: -24.3750057220459
    8. '[count' → logprob: -24.5000057220459
    9. '=count' → logprob: -25.0000057220459
    10. '.count' → logprob: -25.1250057220459

Token 1413: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.451116051815916e-05
    2. 'ways' → logprob: -11.500024795532227
    3. 'dist' → logprob: -11.750024795532227
    4. '_dist' → logprob: -13.500024795532227
    5. '(root' → logprob: -13.750024795532227
    6. '(node' → logprob: -14.375024795532227
    7. '```' → logprob: -14.500024795532227
    8. '(dist' → logprob: -14.625024795532227
    9. '\' → logprob: -14.875024795532227
    10. 'root' → logprob: -14.875024795532227

Token 1414: 'ways' (ID: 2771)
  Prédit: 'ways'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.02682303451001644
    2. '_' → logprob: -3.651823043823242
    3. 'Ways' → logprob: -7.651823043823242
    4. 'WAYS' → logprob: -11.026823043823242
    5. ' ways' → logprob: -11.151823043823242
    6. 'way' → logprob: -12.276823043823242
    7. 'dist' → logprob: -12.776823043823242
    8. 'root' → logprob: -12.776823043823242
    9. 'node' → logprob: -13.651823043823242
    10. '```' → logprob: -13.651823043823242

Token 1415: '(root' (ID: 17410)
  Prédit: '(root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(root' → logprob: -1.1041145626222715e-05
    2. '(
' → logprob: -12.375011444091797
    3. 'root' → logprob: -12.625011444091797
    4. '(node' → logprob: -13.250011444091797
    5. '[root' → logprob: -14.500011444091797
    6. '(' → logprob: -14.625011444091797
    7. '=root' → logprob: -14.875011444091797
    8. '(ROOT' → logprob: -16.125011444091797
    9. ' (' → logprob: -17.250011444091797
    10. '   ' → logprob: -17.375011444091797

Token 1416: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.304016228066757e-05
    2. ',d' → logprob: -9.750082969665527
    3. '(dist' → logprob: -11.875082969665527
    4. ' ,' → logprob: -11.875082969665527
    5. ',
' → logprob: -12.625082969665527
    6. '       ' → logprob: -13.375082969665527
    7. '<|end|>' → logprob: -13.375082969665527
    8. ')' → logprob: -13.625082969665527
    9. 'dist' → logprob: -14.875082969665527
    10. ',None' → logprob: -15.125082969665527

Token 1417: ' subsets' (ID: 165377)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.0005538671393878758
    2. ' subsets' → logprob: -7.500554084777832
    3. ' sub' → logprob: -14.375554084777832
    4. 'subset' → logprob: -15.250554084777832
    5. '   ' → logprob: -16.250553131103516
    6. '       ' → logprob: -17.375553131103516
    7. 'sets' → logprob: -18.375553131103516
    8. 'subs' → logprob: -18.375553131103516
    9. '	sub' → logprob: -19.000553131103516
    10. 'substr' → logprob: -19.000553131103516

Token 1418: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.162282367469743e-05
    2. ',
' → logprob: -9.750091552734375
    3. ' ,' → logprob: -10.875091552734375
    4. ',d' → logprob: -12.625091552734375
    5. ',node' → logprob: -12.875091552734375
    6. ')' → logprob: -13.250091552734375
    7. '(root' → logprob: -14.125091552734375
    8. ',None' → logprob: -14.250091552734375
    9. ',{
' → logprob: -14.250091552734375
    10. '       ' → logprob: -14.500091552734375

Token 1419: ' {})
' (ID: 84106)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.0004722603189293295
    2. '{' → logprob: -8.375472068786621
    3. ' memo' → logprob: -8.625472068786621
    4. '15' → logprob: -10.375472068786621
    5. '{}' → logprob: -11.750472068786621
    6. '{})' → logprob: -12.250472068786621
    7. 'mem' → logprob: -12.250472068786621
    8. 'dist' → logprob: -12.500472068786621
    9. 'm' → logprob: -12.750472068786621
    10. '{
' → logprob: -13.875472068786621

Token 1420: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12881755828857422
    2. 'result' → logprob: -2.378817558288574
    3. '       ' → logprob: -4.503817558288574
    4. 'print' → logprob: -4.628817558288574
    5. '
' → logprob: -5.628817558288574
    6. '```' → logprob: -5.753817558288574
    7. 'target' → logprob: -8.253817558288574
    8. ' result' → logprob: -9.003817558288574
    9. 'return' → logprob: -9.878817558288574
    10. '``' → logprob: -10.003817558288574

Token 1421: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.044734612107276917
    2. '       ' → logprob: -3.5447347164154053
    3. 'result' → logprob: -4.294734477996826
    4. '
' → logprob: -7.669734477996826
    5. '```' → logprob: -7.919734477996826
    6. '   ' → logprob: -8.294734954833984
    7. ' print' → logprob: -9.419734954833984
    8. 'target' → logprob: -10.669734954833984
    9. 'res' → logprob: -11.169734954833984
    10. '        
' → logprob: -11.794734954833984

Token 1422: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.5759468674659729
    2. 'dist' → logprob: -0.8259468674659729
    3. ' dist' → logprob: -12.575946807861328
    4. '(' → logprob: -13.075946807861328
    5. '   ' → logprob: -14.450946807861328
    6. '_dist' → logprob: -14.575946807861328
    7. 'Dist' → logprob: -15.200946807861328
    8. '	dist' → logprob: -15.325946807861328
    9. '(sum' → logprob: -16.200946807861328
    10. 'sum' → logprob: -16.575946807861328

Token 1423: '.get' (ID: 775)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16393302381038666
    2. '.get' → logprob: -1.9139330387115479
    3. ')' → logprob: -6.163932800292969
    4. '   ' → logprob: -7.288932800292969
    5. '```' → logprob: -8.413932800292969
    6. '       ' → logprob: -8.663932800292969
    7. '[(' → logprob: -9.038932800292969
    8. '(' → logprob: -9.288932800292969
    9. '([' → logprob: -9.538932800292969
    10. ')
' → logprob: -10.163932800292969

Token 1424: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002476604888215661
    2. '15' → logprob: -6.002476692199707
    3. ')' → logprob: -15.002476692199707
    4. ' ' → logprob: -15.627476692199707
    5. '```' → logprob: -15.627476692199707
    6. ' (' → logprob: -15.752476692199707
    7. '[' → logprob: -16.50247573852539
    8. '0' → logprob: -17.12747573852539
    9. '(
' → logprob: -17.25247573852539
    10. '   ' → logprob: -18.25247573852539

Token 1425: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -1.8624639324116288e-06
    2. '0' → logprob: -13.250001907348633
    3. '(' → logprob: -16.750001907348633
    4. ' ' → logprob: -18.250001907348633
    5. '255' → logprob: -20.750001907348633
    6. '   ' → logprob: -20.750001907348633
    7. '31' → logprob: -21.250001907348633
    8. '           ' → logprob: -21.875001907348633
    9. ')' → logprob: -22.125001907348633
    10. '```' → logprob: -22.125001907348633

Token 1426: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.371605948312208e-05
    2. ')' → logprob: -10.125053405761719
    3. ' ,' → logprob: -11.375053405761719
    4. '))' → logprob: -14.125053405761719
    5. '(),' → logprob: -14.375053405761719
    6. '   ' → logprob: -15.625053405761719
    7. ',None' → logprob: -15.875053405761719
    8. '),' → logprob: -16.37505340576172
    9. '```' → logprob: -16.62505340576172
    10. '<|end|>' → logprob: -16.75005340576172

Token 1427: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -20.000001907348633
    4. ')' → logprob: -20.875001907348633
    5. '       ' → logprob: -22.250001907348633
    6. '
' → logprob: -22.875001907348633
    7. '     ' → logprob: -23.125001907348633
    8. '    ' → logprob: -23.125001907348633
    9. '```' → logprob: -23.125001907348633
    10. ' ' → logprob: -23.250001907348633

Token 1428: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '   ' → logprob: -21.75
    4. '```' → logprob: -22.375
    5. ')' → logprob: -22.625
    6. '       ' → logprob: -23.0
    7. '     ' → logprob: -23.125
    8. '    ' → logprob: -23.375
    9. '`' → logprob: -23.5
    10. '۰' → logprob: -23.75

Token 1429: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00248909555375576
    2. '))' → logprob: -6.00248908996582
    3. '())' → logprob: -11.62748908996582
    4. ')
' → logprob: -13.25248908996582
    5. '})' → logprob: -14.00248908996582
    6. ')}' → logprob: -14.62748908996582
    7. ')))' → logprob: -15.25248908996582
    8. '   ' → logprob: -15.25248908996582
    9. '()' → logprob: -15.62748908996582
    10. '`)' → logprob: -15.62748908996582

Token 1430: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1431: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.5759437084197998
    2. '__' → logprob: -0.8259437084197998
    3. '_name' → logprob: -13.575943946838379
    4. ' ' → logprob: -13.950943946838379
    5. '_' → logprob: -14.700943946838379
    6. '___' → logprob: -14.700943946838379
    7. 'Name' → logprob: -15.075943946838379
    8. 'name' → logprob: -15.075943946838379
    9. '```' → logprob: -15.075943946838379
    10. 'True' → logprob: -16.075942993164062

Token 1432: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.003595314221456647
    2. '==' → logprob: -6.003595352172852
    3. ' ==' → logprob: -7.253595352172852
    4. '```' → logprob: -8.503595352172852
    5. 'name' → logprob: -9.878595352172852
    6. 'if' → logprob: -10.253595352172852
    7. '__.__' → logprob: -10.378595352172852
    8. '__[' → logprob: -11.253595352172852
    9. '__":
' → logprob: -11.503595352172852
    10. '=="' → logprob: -11.628595352172852

Token 1433: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0001637300301808864
    2. '==' → logprob: -9.000164031982422
    3. ' ==' → logprob: -11.125164031982422
    4. '=='' → logprob: -11.500164031982422
    5. '=="' → logprob: -11.875164031982422
    6. '__.__' → logprob: -13.000164031982422
    7. '__('' → logprob: -13.000164031982422
    8. '____' → logprob: -13.750164031982422
    9. '___' → logprob: -13.875164031982422
    10. '__
' → logprob: -14.750164031982422

Token 1434: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.23799821734428406
    2. '__' → logprob: -1.7379982471466064
    3. ' ==' → logprob: -3.7379982471466064
    4. '=='' → logprob: -4.737998008728027
    5. '=="' → logprob: -5.862998008728027
    6. '==
' → logprob: -8.237998008728027
    7. '```' → logprob: -9.237998008728027
    8. '=' → logprob: -10.362998008728027
    9. '_' → logprob: -11.112998008728027
    10. '[' → logprob: -11.362998008728027

Token 1435: ' '__' (ID: 28278)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.008617646060883999
    2. '"' → logprob: -4.758617877960205
    3. '__' → logprob: -13.258617401123047
    4. ' '__' → logprob: -13.758617401123047
    5. ' "__' → logprob: -15.758617401123047
    6. ''name' → logprob: -16.633617401123047
    7. '('__' → logprob: -16.883617401123047
    8. '   ' → logprob: -17.383617401123047
    9. ''default' → logprob: -18.633617401123047
    10. ''user' → logprob: -18.758617401123047

Token 1436: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0007133854669518769
    2. '__' → logprob: -7.250713348388672
    3. 'name' → logprob: -13.250713348388672
    4. '_main' → logprob: -13.500713348388672
    5. ' main' → logprob: -15.125713348388672
    6. '__':
' → logprob: -17.875713348388672
    7. '___' → logprob: -18.000713348388672
    8. '	main' → logprob: -18.125713348388672
    9. ''' → logprob: -18.250713348388672
    10. '-main' → logprob: -18.625713348388672

Token 1437: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.3942280113697052
    2. '__' → logprob: -1.2692279815673828
    3. '__":
' → logprob: -3.769227981567383
    4. ':' → logprob: -4.644227981567383
    5. '():
' → logprob: -4.644227981567383
    6. '__:' → logprob: -7.519227981567383
    7. ':
' → logprob: -7.769227981567383
    8. '```' → logprob: -8.144227981567383
    9. '()' → logprob: -8.269227981567383
    10. '__()
' → logprob: -8.519227981567383

Token 1438: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.000961362209636718
    2. '   ' → logprob: -7.2509613037109375
    3. '	main' → logprob: -9.000961303710938
    4. ' main' → logprob: -9.125961303710938
    5. '(main' → logprob: -11.875961303710938
    6. '```' → logprob: -12.250961303710938
    7. 'run' → logprob: -13.000961303710938
    8. '__' → logprob: -13.750961303710938
    9. '_main' → logprob: -14.125961303710938
    10. 'print' → logprob: -14.250961303710938

Token 1439: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.3856492842023727e-06
    2. ' main' → logprob: -14.250000953674316
    3. '	main' → logprob: -14.375000953674316
    4. '   ' → logprob: -16.500001907348633
    5. '_main' → logprob: -18.625001907348633
    6. '(main' → logprob: -20.000001907348633
    7. '```' → logprob: -21.125001907348633
    8. 'import' → logprob: -21.250001907348633
    9. 'Main' → logprob: -22.250001907348633
    10. '.main' → logprob: -22.500001907348633

Token 1440: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1438
Tokens correctement prédits (1ère position, stricte): 432
Tokens correctement prédits (1ère position, avec adaptation): 481
Tokens correctement prédits (top 10): 1000
Précision stricte (1ère position): 30.04%
Précision adaptée (1ère position): 33.45%
Précision (top 10): 69.54%
================================================================================
