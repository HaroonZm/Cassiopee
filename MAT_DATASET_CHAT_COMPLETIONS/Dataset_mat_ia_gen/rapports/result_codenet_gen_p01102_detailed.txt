================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:07
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def split_program(s):
    """
    Sépare un programme en une liste d'éléments alternant entre :
    - chaînes hors des guillemets
    - chaînes littérales (entre guillemets)
    Exemple : 
    'read"B1input";solve;output;'
    -> ['read', 'B1input', ';solve;output;']
    
    L'indice pair dans la liste correspond à du code hors guillemets,
    l'indice impair correspond à une chaîne entre guillemets.
    """
    parts = []
    i = 0
    n = len(s)
    while i < n:
        if s[i] == '"':
            # début d'une chaîne littérale
            j = i + 1
            while j < n and s[j] != '"':
                j += 1
            # s[i+1:j] est la chaîne littérale
            parts.append(s[i+1:j])
            i = j + 1
        else:
            # code hors guillemets
            j = i
            while j < n and s[j] != '"':
                j += 1
            parts.append(s[i:j])
            i = j
    return parts

def judge_programs(s1, s2):
    """
    Compare deux programmes selon les règles énoncées :
    - IDENTICAL : s1 et s2 identiques (string exactement égales)
    - CLOSE : ils ne diffèrent que par une seule chaîne littérale
    - DIFFERENT sinon
    """
    if s1 == s2:
        return "IDENTICAL"
    
    # Séparation en parties de code et chaînes littérales
    parts1 = split_program(s1)
    parts2 = split_program(s2)
    
    # Si le découpage est différent, forcément DIFFERENT
    # Le découpage doit avoir même nombre d'éléments
    # et les zones hors guillemets (indices pairs) doivent être les mêmes
    if len(parts1) != len(parts2):
        return "DIFFERENT"
    for idx in range(0, len(parts1), 2):
        if parts1[idx] != parts2[idx]:
            return "DIFFERENT"
    
    # Compter combien de chaînes littérales diffèrent
    diff_count = 0
    for idx in range(1, len(parts1), 2):
        if parts1[idx] != parts2[idx]:
            diff_count += 1
            if diff_count > 1:
                return "DIFFERENT"
    if diff_count == 1:
        return "CLOSE"
    
    # Aucun littéral différent, mais les programmes ne sont pas égaux (car cas IDENTICAL géré)
    # Cela peut arriver si il y a zéro string literal (pas de double quotes)
    # et dans ce cas si pas égal, on renvoie DIFFERENT
    return "DIFFERENT"


def main():
    while True:
        s1 = input()
        if s1 == '.':
            break
        s2 = input()
        print(judge_programs(s1, s2))


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' split' (ID: 12648)
  → Token d'amorce (pas de prédiction)

Token 2: '_program' (ID: 58929)
  → Token d'amorce (pas de prédiction)

Token 3: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4880450665950775
    2. '_' → logprob: -0.9880450963973999
    3. '```' → logprob: -5.1130452156066895
    4. 'def' → logprob: -6.1130452156066895
    5. '(_' → logprob: -6.9880452156066895
    6. '_token' → logprob: -7.4880452156066895
    7. '[' → logprob: -7.4880452156066895
    8. '_context' → logprob: -8.113044738769531
    9. '(_:' → logprob: -8.238044738769531
    10. '_text' → logprob: -8.363044738769531

Token 4: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4300602078437805
    2. ')' → logprob: -1.0550601482391357
    3. ':' → logprob: -7.680060386657715
    4. ',' → logprob: -8.180060386657715
    5. '(' → logprob: -9.055060386657715
    6. '_' → logprob: -9.430060386657715
    7. '):
' → logprob: -9.680060386657715
    8. 'e' → logprob: -9.680060386657715
    9. '[' → logprob: -10.180060386657715
    10. ')_' → logprob: -10.430060386657715

Token 5: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.723983108997345
    2. ':' → logprob: -0.973983108997345
    3. '   ' → logprob: -2.0989830493927
    4. '``' → logprob: -5.098983287811279
    5. '\' → logprob: -6.098983287811279
    6. '\n' → logprob: -6.223983287811279
    7. ':\' → logprob: -7.223983287811279
    8. '():' → logprob: -7.598983287811279
    9. '    
' → logprob: -7.723983287811279
    10. ''''' → logprob: -8.223982810974121

Token 6: ' """
' (ID: 7037)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.31910714507102966
    2. '   ' → logprob: -2.1941070556640625
    3. '\n' → logprob: -2.8191070556640625
    4. '\' → logprob: -3.3191070556640625
    5. '"""' → logprob: -4.4441070556640625
    6. '``' → logprob: -4.8191070556640625
    7. '`' → logprob: -4.8191070556640625
    8. ''''' → logprob: -4.9441070556640625
    9. 'n' → logprob: -5.1941070556640625
    10. 'return' → logprob: -5.6941070556640625

Token 7: '   ' (ID: 271)
  Prédit: 'Spl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Spl' → logprob: -0.6507814526557922
    2. '"""' → logprob: -1.4007813930511475
    3. 'Split' → logprob: -1.6507813930511475
    4. '"""
' → logprob: -4.650781631469727
    5. ''''' → logprob: -4.775781631469727
    6. 'T' → logprob: -4.900781631469727
    7. 'S' → logprob: -5.900781631469727
    8. '   ' → logprob: -5.900781631469727
    9. 'Returns' → logprob: -6.525781631469727
    10. 'Return' → logprob: -7.150781631469727

Token 8: ' Sé' (ID: 53058)
  Prédit: 'Spl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Spl' → logprob: -0.20089587569236755
    2. 'Split' → logprob: -1.95089590549469
    3. '"""' → logprob: -3.3258957862854004
    4. '"""
' → logprob: -6.7008957862854
    5. 'T' → logprob: -7.4508957862854
    6. ''''' → logprob: -7.8258957862854
    7. 'spl' → logprob: -7.8258957862854
    8. 'S' → logprob: -8.325896263122559
    9. '   ' → logprob: -9.075896263122559
    10. 'Separ' → logprob: -9.450896263122559

Token 9: 'pare' (ID: 6900)
  Prédit: 'parer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parer' → logprob: -0.35991501808166504
    2. 'pare' → logprob: -1.359915018081665
    3. 'par' → logprob: -3.234915018081665
    4. 'paration' → logprob: -5.859914779663086
    5. 'para' → logprob: -6.359914779663086
    6. 'pa' → logprob: -7.109914779663086
    7. 'parate' → logprob: -8.734914779663086
    8. 'paren' → logprob: -9.234914779663086
    9. 'quence' → logprob: -9.359914779663086
    10. 'parent' → logprob: -9.609914779663086

Token 10: ' un' (ID: 537)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.32915157079696655
    2. '   ' → logprob: -2.0791516304016113
    3. ' les' → logprob: -2.5791516304016113
    4. 's' → logprob: -3.7041516304016113
    5. ' la' → logprob: -3.7041516304016113
    6. ' ' → logprob: -4.704151630401611
    7. '_' → logprob: -5.579151630401611
    8. ' string' → logprob: -5.704151630401611
    9. ' en' → logprob: -5.704151630401611
    10. 'le' → logprob: -6.204151630401611

Token 11: ' programme' (ID: 18190)
  Prédit: ' programme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' programme' → logprob: -0.9749371409416199
    2. 'programme' → logprob: -0.9749371409416199
    3. 'e' → logprob: -2.3499372005462646
    4. ' string' → logprob: -3.4749372005462646
    5. 'texte' → logprob: -3.7249372005462646
    6. ' program' → logprob: -4.2249369621276855
    7. ' code' → logprob: -4.2249369621276855
    8. ' ' → logprob: -4.3499369621276855
    9. 'program' → logprob: -4.4749369621276855
    10. 'string' → logprob: -4.8499369621276855

Token 12: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.5870036482810974
    2. ' ' → logprob: -0.8370036482810974
    3. 'en' → logprob: -4.712003707885742
    4. ' Python' → logprob: -6.962003707885742
    5. '   ' → logprob: -8.962003707885742
    6. '  ' → logprob: -8.962003707885742
    7. ' de' → logprob: -9.212003707885742
    8. ' """' → logprob: -9.337003707885742
    9. '```' → logprob: -9.462003707885742
    10. '\' → logprob: -10.087003707885742

Token 13: ' une' (ID: 2463)
  Prédit: ' tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tokens' → logprob: -1.6460150480270386
    2. ' lignes' → logprob: -1.6460150480270386
    3. 'tokens' → logprob: -1.7710150480270386
    4. '   ' → logprob: -1.8960150480270386
    5. '```' → logprob: -2.896015167236328
    6. ' blocs' → logprob: -3.646015167236328
    7. 'bl' → logprob: -3.896015167236328
    8. ' morceaux' → logprob: -4.021015167236328
    9. ' instructions' → logprob: -4.146015167236328
    10. ' ' → logprob: -4.396015167236328

Token 14: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.1358090043067932
    2. 'liste' → logprob: -2.7608089447021484
    3. ' chaîne' → logprob: -3.2608089447021484
    4. ' ou' → logprob: -5.135808944702148
    5. 'chaine' → logprob: -5.885808944702148
    6. 's' → logprob: -5.885808944702148
    7. 'list' → logprob: -6.260808944702148
    8. ' list' → logprob: -6.260808944702148
    9. '   ' → logprob: -6.635808944702148
    10. ' chaine' → logprob: -6.760808944702148

Token 15: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.32762256264686584
    2. ' des' → logprob: -1.4526225328445435
    3. 'de' → logprob: -3.827622652053833
    4. '```' → logprob: -4.952622413635254
    5. '   ' → logprob: -5.452622413635254
    6. ' ' → logprob: -5.827622413635254
    7. '\' → logprob: -6.452622413635254
    8. ' d' → logprob: -6.577622413635254
    9. '\n' → logprob: -6.952622413635254
    10. ' en' → logprob: -7.327622413635254

Token 16: ''' (ID: 6)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.23388710618019104
    2. 'e' → logprob: -1.9838870763778687
    3. 'es' → logprob: -3.858887195587158
    4. '   ' → logprob: -4.983887195587158
    5. 'in' → logprob: -4.983887195587158
    6. '’in' → logprob: -5.108887195587158
    7. 'instructions' → logprob: -5.358887195587158
    8. ''' → logprob: -5.858887195587158
    9. ''ex' → logprob: -5.858887195587158
    10. 'tokens' → logprob: -6.108887195587158

Token 17: 'élé' (ID: 15228)
  Prédit: 'instructions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'instructions' → logprob: -0.4314812421798706
    2. 'in' → logprob: -2.05648136138916
    3. ''in' → logprob: -2.05648136138916
    4. 'instr' → logprob: -3.68148136138916
    5. 'élé' → logprob: -4.05648136138916
    6. 'é' → logprob: -4.43148136138916
    7. 'l' → logprob: -4.80648136138916
    8. 'instruction' → logprob: -4.93148136138916
    9. '"in' → logprob: -5.18148136138916
    10. '\n' → logprob: -5.80648136138916

Token 18: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.0034469456877559423
    2. 'm' → logprob: -5.87844705581665
    3. 'ment' → logprob: -7.37844705581665
    4. 'nts' → logprob: -12.003446578979492
    5. '```' → logprob: -12.378446578979492
    6. 'me' → logprob: -12.753446578979492
    7. 'tokens' → logprob: -14.128446578979492
    8. 'men' → logprob: -14.503446578979492
    9. 'mentation' → logprob: -14.878446578979492
    10. 'n' → logprob: -15.253446578979492

Token 19: ' altern' (ID: 7310)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7093899250030518
    2. '```' → logprob: -1.3343899250030518
    3. '
' → logprob: -3.0843899250030518
    4. ',' → logprob: -3.3343899250030518
    5. '\n' → logprob: -3.4593899250030518
    6. '.' → logprob: -3.8343899250030518
    7. '"""
' → logprob: -4.084389686584473
    8. 's' → logprob: -4.209389686584473
    9. '.
' → logprob: -4.459389686584473
    10. ',
' → logprob: -5.084389686584473

Token 20: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.11699514091014862
    2. 'és' → logprob: -3.116995096206665
    3. 'es' → logprob: -3.616995096206665
    4. 'ativement' → logprob: -4.741995334625244
    5. '```' → logprob: -4.991995334625244
    6. 'é' → logprob: -5.241995334625244
    7. 'e' → logprob: -5.366995334625244
    8. 'at' → logprob: -5.366995334625244
    9. 'ance' → logprob: -5.866995334625244
    10. 's' → logprob: -6.866995334625244

Token 21: ' entre' (ID: 3853)
  Prédit: ' entre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.3724021911621094
    2. 'entre' → logprob: -1.3724021911621094
    3. 'ment' → logprob: -4.747402191162109
    4. 'ent' → logprob: -4.872402191162109
    5. ''entre' → logprob: -4.872402191162109
    6. '```' → logprob: -5.497402191162109
    7. ' between' → logprob: -5.747402191162109
    8. '   ' → logprob: -5.872402191162109
    9. ' par' → logprob: -5.997402191162109
    10. 'es' → logprob: -6.247402191162109

Token 22: ' :
' (ID: 10039)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.9685522317886353
    2. ' des' → logprob: -1.0935522317886353
    3. 'code' → logprob: -2.7185521125793457
    4. 'bl' → logprob: -3.3435521125793457
    5. 'texte' → logprob: -3.5935521125793457
    6. 'élé' → logprob: -3.8435521125793457
    7. 'm' → logprob: -3.9685521125793457
    8. ' code' → logprob: -4.343552112579346
    9. 'chaine' → logprob: -4.343552112579346
    10. 'les' → logprob: -4.718552112579346

Token 23: '   ' (ID: 271)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.6075546145439148
    2. '   ' → logprob: -2.1075546741485596
    3. 'des' → logprob: -2.3575546741485596
    4. ' chaînes' → logprob: -3.2325546741485596
    5. 'chaine' → logprob: -3.7325546741485596
    6. ' les' → logprob: -4.1075544357299805
    7. 'bl' → logprob: -4.2325544357299805
    8. 'texte' → logprob: -4.2325544357299805
    9. ' code' → logprob: -4.3575544357299805
    10. 'code' → logprob: -4.3575544357299805

Token 24: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4896322190761566
    2. ' des' → logprob: -1.489632248878479
    3. 'm' → logprob: -4.1146321296691895
    4. '"' → logprob: -4.2396321296691895
    5. 'des' → logprob: -4.3646321296691895
    6. '```' → logprob: -4.3646321296691895
    7. 'élé' → logprob: -4.4896321296691895
    8. ''' → logprob: -4.9896321296691895
    9. 'une' → logprob: -4.9896321296691895
    10. ' lignes' → logprob: -5.1146321296691895

Token 25: ' chaînes' (ID: 179904)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.076369285583496
    2. 'des' → logprob: -1.576369285583496
    3. 'l' → logprob: -2.326369285583496
    4. ''' → logprob: -2.951369285583496
    5. '"' → logprob: -3.076369285583496
    6. 'une' → logprob: -3.326369285583496
    7. 'les' → logprob: -3.701369285583496
    8. '```' → logprob: -3.826369285583496
    9. 'le' → logprob: -4.201369285583496
    10. '   ' → logprob: -4.451369285583496

Token 26: ' hors' (ID: 26087)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.006038292311131954
    2. 'de' → logprob: -5.256038188934326
    3. ' ' → logprob: -8.506038665771484
    4. ' d' → logprob: -9.381038665771484
    5. 's' → logprob: -9.756038665771484
    6. ' et' → logprob: -9.756038665771484
    7. 'es' → logprob: -9.881038665771484
    8. ''' → logprob: -10.131038665771484
    9. ' "' → logprob: -10.506038665771484
    10. ' '' → logprob: -10.631038665771484

Token 27: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.5399808883666992
    2. '"' → logprob: -1.7899808883666992
    3. '"""' → logprob: -2.039980888366699
    4. '   ' → logprob: -2.664980888366699
    5. ' gu' → logprob: -2.789980888366699
    6. 'des' → logprob: -3.289980888366699
    7. ' "' → logprob: -3.289980888366699
    8. ' """' → logprob: -3.414980888366699
    9. 'g' → logprob: -3.539980888366699
    10. '-' → logprob: -3.664980888366699

Token 28: ' gu' (ID: 1704)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5672305226325989
    2. '"""' → logprob: -1.442230463027954
    3. ' gu' → logprob: -2.942230463027954
    4. 'g' → logprob: -3.067230463027954
    5. 'bl' → logprob: -3.692230463027954
    6. ' """' → logprob: -4.692230701446533
    7. ' "' → logprob: -4.692230701446533
    8. 'quotes' → logprob: -4.817230701446533
    9. '```' → logprob: -5.067230701446533
    10. 'string' → logprob: -5.067230701446533

Token 29: 'ille' (ID: 3301)
  Prédit: 'ille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ille' → logprob: -0.30623379349708557
    2. 'a' → logprob: -1.5562337636947632
    3. 'illes' → logprob: -3.5562338829040527
    4. 'il' → logprob: -4.556233882904053
    5. '```' → logprob: -4.931233882904053
    6. 'i' → logprob: -6.181233882904053
    7. 'am' → logprob: -7.556233882904053
    8. '``' → logprob: -7.681233882904053
    9. 'aines' → logprob: -8.056233406066895
    10. 'ile' → logprob: -8.056233406066895

Token 30: 'mets' (ID: 153788)
  Prédit: 'mets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mets' → logprob: -0.0021553763654083014
    2. 'ts' → logprob: -6.502155303955078
    3. 'm' → logprob: -7.377155303955078
    4. 't' → logprob: -11.252155303955078
    5. 'met' → logprob: -12.002155303955078
    6. 'ments' → logprob: -12.752155303955078
    7. 'ets' → logprob: -13.127155303955078
    8. 'me' → logprob: -13.627155303955078
    9. '"' → logprob: -14.377155303955078
    10. 'rets' → logprob: -14.502155303955078

Token 31: '
' (ID: 198)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.2433602809906006
    2. '"""' → logprob: -1.2433602809906006
    3. ' et' → logprob: -2.1183602809906006
    4. ',' → logprob: -2.4933602809906006
    5. ''' → logprob: -2.7433602809906006
    6. ' "' → logprob: -3.1183602809906006
    7. ' """' → logprob: -3.3683602809906006
    8. ' (' → logprob: -3.9933602809906006
    9. 's' → logprob: -4.99336051940918
    10. ' ' → logprob: -4.99336051940918

Token 32: '   ' (ID: 271)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.37323370575904846
    2. ''' → logprob: -1.998233675956726
    3. ',' → logprob: -3.4982337951660156
    4. '```' → logprob: -3.7482337951660156
    5. '"' → logprob: -4.248233795166016
    6. 'e' → logprob: -4.248233795166016
    7. ' ,' → logprob: -4.498233795166016
    8. ' ```' → logprob: -4.623233795166016
    9. ' ' → logprob: -4.748233795166016
    10. 'es' → logprob: -4.873233795166016

Token 33: ' -' (ID: 533)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' et' → logprob: -1.2102715969085693
    2. ' "' → logprob: -1.5852715969085693
    3. ''' → logprob: -2.2102715969085693
    4. ' '' → logprob: -2.3352715969085693
    5. ' """' → logprob: -3.0852715969085693
    6. '"' → logprob: -3.0852715969085693
    7. ',' → logprob: -3.3352715969085693
    8. 'e' → logprob: -3.7102715969085693
    9. ' ' → logprob: -3.8352715969085693
    10. ' ,' → logprob: -3.9602715969085693

Token 34: ' chaînes' (ID: 179904)
  Prédit: ' chaînes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.4315364956855774
    2. 'élé' → logprob: -2.3065364360809326
    3. 'cha' → logprob: -2.5565364360809326
    4. ' ' → logprob: -3.9315364360809326
    5. 'chain' → logprob: -3.9315364360809326
    6. '   ' → logprob: -4.056536674499512
    7. 'bl' → logprob: -4.181536674499512
    8. ' gu' → logprob: -4.931536674499512
    9. ' parties' → logprob: -5.306536674499512
    10. 'g' → logprob: -5.306536674499512

Token 35: ' litt' (ID: 33019)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' "' → logprob: -1.3592772483825684
    2. '"' → logprob: -1.4842772483825684
    3. ' entre' → logprob: -1.6092772483825684
    4. '"""' → logprob: -2.4842772483825684
    5. ''' → logprob: -2.7342772483825684
    6. ' """' → logprob: -3.6092772483825684
    7. 'entre' → logprob: -3.6092772483825684
    8. ' '' → logprob: -3.7342772483825684
    9. 's' → logprob: -4.234277248382568
    10. ''''' → logprob: -4.234277248382568

Token 36: 'érales' (ID: 186658)
  Prédit: 'érales'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érales' → logprob: -0.004784561228007078
    2. 'éraux' → logprob: -5.87978458404541
    3. 'é' → logprob: -6.87978458404541
    4. 'éralement' → logprob: -8.00478458404541
    5. '"' → logprob: -8.37978458404541
    6. 'érale' → logprob: -9.12978458404541
    7. 'éra' → logprob: -9.50478458404541
    8. 'éral' → logprob: -9.75478458404541
    9. 'ér' → logprob: -10.12978458404541
    10. ''' → logprob: -10.25478458404541

Token 37: ' (' (ID: 350)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5489377975463867
    2. '"""' → logprob: -0.9239377975463867
    3. ' """' → logprob: -4.548937797546387
    4. '```' → logprob: -5.173937797546387
    5. ' "' → logprob: -5.673937797546387
    6. ')' → logprob: -6.423937797546387
    7. '   ' → logprob: -7.048937797546387
    8. '"""
' → logprob: -7.298937797546387
    9. ' """
' → logprob: -7.423937797546387
    10. 'e' → logprob: -8.298937797546387

Token 38: 'entre' (ID: 17935)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4081345796585083
    2. ''' → logprob: -1.5331345796585083
    3. ''"' → logprob: -2.5331344604492188
    4. '"""' → logprob: -3.7831344604492188
    5. '")' → logprob: -5.033134460449219
    6. '')' → logprob: -5.658134460449219
    7. ')' → logprob: -6.408134460449219
    8. ''''' → logprob: -6.908134460449219
    9. '"'' → logprob: -7.158134460449219
    10. 's' → logprob: -7.408134460449219

Token 39: ' gu' (ID: 1704)
  Prédit: ' gu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gu' → logprob: -0.49883830547332764
    2. '"' → logprob: -1.7488383054733276
    3. 'g' → logprob: -2.248838424682617
    4. '"""' → logprob: -2.873838424682617
    5. ''' → logprob: -4.123838424682617
    6. ''"' → logprob: -4.748838424682617
    7. ''g' → logprob: -5.248838424682617
    8. 'quotes' → logprob: -5.748838424682617
    9. '""' → logprob: -5.873838424682617
    10. '```' → logprob: -5.998838424682617

Token 40: 'ille' (ID: 3301)
  Prédit: 'ille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ille' → logprob: -0.4035284221172333
    2. 'illes' → logprob: -1.2785284519195557
    3. 'il' → logprob: -3.2785284519195557
    4. '"""' → logprob: -5.153528213500977
    5. 'ile' → logprob: -5.278528213500977
    6. 'illet' → logprob: -6.278528213500977
    7. 'ill' → logprob: -6.653528213500977
    8. '```' → logprob: -6.903528213500977
    9. ''''' → logprob: -8.653528213500977
    10. 'i' → logprob: -9.028528213500977

Token 41: 'mets' (ID: 153788)
  Prédit: 'mets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mets' → logprob: -0.003773127682507038
    2. 'm' → logprob: -5.753773212432861
    3. 'ts' → logprob: -7.878773212432861
    4. 'met' → logprob: -10.003772735595703
    5. 'ets' → logprob: -10.128772735595703
    6. '"""' → logprob: -10.378772735595703
    7. 't' → logprob: -11.003772735595703
    8. 'ments' → logprob: -11.003772735595703
    9. 'rets' → logprob: -11.003772735595703
    10. 'me' → logprob: -11.003772735595703

Token 42: ')
' (ID: 446)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.5957190990447998
    2. ')' → logprob: -0.8457190990447998
    3. '"' → logprob: -4.220719337463379
    4. '"""' → logprob: -5.595719337463379
    5. ')"' → logprob: -8.095719337463379
    6. ' ")' → logprob: -8.470719337463379
    7. 's' → logprob: -8.845719337463379
    8. '"""
' → logprob: -8.970719337463379
    9. '   ' → logprob: -9.220719337463379
    10. ')")' → logprob: -9.220719337463379

Token 43: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.7351809144020081
    2. '   ' → logprob: -1.4851808547973633
    3. '"' → logprob: -1.6101808547973633
    4. ')' → logprob: -2.8601808547973633
    5. '\n' → logprob: -4.110180854797363
    6. '```' → logprob: -5.235180854797363
    7. '"""
' → logprob: -5.360180854797363
    8. ''' → logprob: -6.360180854797363
    9. '`' → logprob: -6.610180854797363
    10. '""' → logprob: -6.735180854797363

Token 44: ' Exemple' (ID: 142783)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.7545252442359924
    2. '"' → logprob: -1.0045251846313477
    3. '   ' → logprob: -1.8795251846313477
    4. '"""
' → logprob: -5.379525184631348
    5. ')' → logprob: -5.879525184631348
    6. '\n' → logprob: -6.504525184631348
    7. '```' → logprob: -7.254525184631348
    8. '""' → logprob: -8.129525184631348
    9. '\' → logprob: -8.504525184631348
    10. '"\' → logprob: -8.754525184631348

Token 45: ' :' (ID: 712)
  Prédit: ' :'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.30398327112197876
    2. ':' → logprob: -2.178983211517334
    3. '   ' → logprob: -2.553983211517334
    4. ' ' → logprob: -3.803983211517334
    5. '```' → logprob: -4.178983211517334
    6. ' de' → logprob: -4.803983211517334
    7. '    ' → logprob: -5.428983211517334
    8. ')' → logprob: -5.553983211517334
    9. ' )' → logprob: -6.053983211517334
    10. ' d' → logprob: -6.553983211517334

Token 46: ' 
' (ID: 793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.904395341873169
    2. ''' → logprob: -1.904395341873169
    3. ' """' → logprob: -2.279395341873169
    4. '"""' → logprob: -2.279395341873169
    5. '"' → logprob: -2.904395341873169
    6. '    ' → logprob: -3.154395341873169
    7. '\n' → logprob: -3.654395341873169
    8. 's' → logprob: -4.02939510345459
    9. '```' → logprob: -4.27939510345459
    10. ' ```' → logprob: -4.40439510345459

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3618602752685547
    2. '"' → logprob: -1.8618602752685547
    3. '"""' → logprob: -2.9868602752685547
    4. ''' → logprob: -3.3618602752685547
    5. ' "' → logprob: -4.236860275268555
    6. '    ' → logprob: -4.361860275268555
    7. ' '' → logprob: -5.111860275268555
    8. ' """' → logprob: -5.236860275268555
    9. ''''' → logprob: -5.861860275268555
    10. 'def' → logprob: -5.861860275268555

Token 48: ' '' (ID: 461)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -1.3597036600112915
    2. '   ' → logprob: -1.4847036600112915
    3. '"' → logprob: -1.7347036600112915
    4. '"""
' → logprob: -2.609703540802002
    5. ''' (adapté à ' '') → logprob: -2.859703540802002
    6. 's' → logprob: -3.609703540802002
    7. ''''' → logprob: -4.109703540802002
    8. ' """' → logprob: -4.234703540802002
    9. ' """
' → logprob: -4.359703540802002
    10. ' "' → logprob: -4.484703540802002

Token 49: 'read' (ID: 1293)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.18370051681995392
    2. 'a' → logprob: -2.5587005615234375
    3. 'def' → logprob: -3.5587005615234375
    4. '"' → logprob: -3.5587005615234375
    5. 'x' → logprob: -5.3087005615234375
    6. 'prin' → logprob: -5.3087005615234375
    7. 'pr' → logprob: -5.6837005615234375
    8. ''' → logprob: -5.9337005615234375
    9. 'abc' → logprob: -6.0587005615234375
    10. 'p' → logprob: -6.0587005615234375

Token 50: '"B' (ID: 160056)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.3480716943740845
    2. '"' → logprob: -1.8480716943740845
    3. ' '' → logprob: -1.9730716943740845
    4. '_' → logprob: -2.348071575164795
    5. '('' → logprob: -2.348071575164795
    6. ' "' → logprob: -2.473071575164795
    7. '(' → logprob: -3.223071575164795
    8. 's' → logprob: -3.473071575164795
    9. '()' → logprob: -4.223071575164795
    10. '("' → logprob: -4.473071575164795

Token 51: '1' (ID: 16)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.11032546311616898
    2. '"'' → logprob: -2.985325574874878
    3. 'e' → logprob: -4.110325336456299
    4. ''' → logprob: -4.110325336456299
    5. 'y' → logprob: -5.610325336456299
    6. 'a' → logprob: -6.360325336456299
    7. ' "' → logprob: -6.485325336456299
    8. 'r' → logprob: -6.485325336456299
    9. ''"' → logprob: -6.485325336456299
    10. '")' → logprob: -6.860325336456299

Token 52: 'input' (ID: 2586)
  Prédit: '"''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"'' → logprob: -0.42044302821159363
    2. '"' → logprob: -1.295443058013916
    3. '"B' → logprob: -3.920443058013916
    4. ''' → logprob: -4.170443058013916
    5. '")' → logprob: -4.795443058013916
    6. ''"' → logprob: -5.795443058013916
    7. 'B' → logprob: -5.920443058013916
    8. ' "' → logprob: -6.045443058013916
    9. '",' → logprob: -6.295443058013916
    10. '1' → logprob: -6.420443058013916

Token 53: '";' (ID: 10924)
  Prédit: '"''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"'' → logprob: -0.26135751605033875
    2. '"' → logprob: -1.6363575458526611
    3. '")' → logprob: -4.136357307434082
    4. ''' → logprob: -5.886357307434082
    5. '"B' → logprob: -5.886357307434082
    6. 's' → logprob: -6.011357307434082
    7. ''"' → logprob: -6.636357307434082
    8. '()"' → logprob: -6.761357307434082
    9. '"',' → logprob: -7.011357307434082
    10. 'string' → logprob: -7.261357307434082

Token 54: 'solve' (ID: 117273)
  Prédit: '"''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"'' → logprob: -0.46284258365631104
    2. '"' → logprob: -1.587842583656311
    3. 'B' → logprob: -3.2128424644470215
    4. ''' → logprob: -3.2128424644470215
    5. '"B' → logprob: -3.2128424644470215
    6. ' "'' → logprob: -4.5878424644470215
    7. ''"' → logprob: -4.7128424644470215
    8. ' '' → logprob: -5.5878424644470215
    9. ' "' → logprob: -5.5878424644470215
    10. 'r' → logprob: -5.9628424644470215

Token 55: ';' (ID: 26)
  Prédit: '"''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"'' → logprob: -0.31192585825920105
    2. '"B' → logprob: -2.0619258880615234
    3. '"' → logprob: -2.1869258880615234
    4. '")' → logprob: -4.561925888061523
    5. '()"' → logprob: -4.811925888061523
    6. '";' → logprob: -6.186925888061523
    7. ''' → logprob: -6.436925888061523
    8. '()' → logprob: -6.561925888061523
    9. 'B' → logprob: -6.811925888061523
    10. '"""' → logprob: -7.561925888061523

Token 56: 'output' (ID: 6130)
  Prédit: '"B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"B' → logprob: -0.4947068989276886
    2. '"'' → logprob: -1.2447068691253662
    3. '"' → logprob: -2.869706869125366
    4. ''"' → logprob: -3.744706869125366
    5. ''' → logprob: -4.494707107543945
    6. 'B' → logprob: -5.119707107543945
    7. '"""' → logprob: -6.494707107543945
    8. '""' → logprob: -7.869707107543945
    9. '"A' → logprob: -8.119707107543945
    10. ' "' → logprob: -8.369707107543945

Token 57: ';' (ID: 26)
  Prédit: '"''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"'' → logprob: -0.1270056962966919
    2. '"' → logprob: -2.2520055770874023
    3. '"B' → logprob: -5.002005577087402
    4. ''' → logprob: -5.127005577087402
    5. ''"' → logprob: -7.252005577087402
    6. ' "'' → logprob: -8.252005577087402
    7. ' "' → logprob: -8.627005577087402
    8. 'B' → logprob: -9.502005577087402
    9. ' '' → logprob: -10.252005577087402
    10. '"',' → logprob: -10.877005577087402

Token 58: ''
' (ID: 2207)
  Prédit: '"''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"'' → logprob: -0.2014601230621338
    2. '"B' → logprob: -1.9514601230621338
    3. '"' → logprob: -3.451460123062134
    4. ''"' → logprob: -5.451459884643555
    5. 'B' → logprob: -6.201459884643555
    6. ''' → logprob: -6.201459884643555
    7. ' "'' → logprob: -9.076459884643555
    8. '"""' → logprob: -10.326459884643555
    9. '"',' → logprob: -10.326459884643555
    10. 'b' → logprob: -10.451459884643555

Token 59: '   ' (ID: 271)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5914608240127563
    2. ''' → logprob: -0.8414608240127563
    3. '   ' → logprob: -5.091460704803467
    4. ''"' → logprob: -5.716460704803467
    5. '"'' → logprob: -5.966460704803467
    6. '"""' → logprob: -6.341460704803467
    7. ''''' → logprob: -7.591460704803467
    8. ' '' → logprob: -8.091461181640625
    9. '')' → logprob: -8.591461181640625
    10. ''''
' → logprob: -8.966461181640625

Token 60: ' ->' (ID: 2747)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5076221823692322
    2. ''' → logprob: -1.382622241973877
    3. '"""' → logprob: -2.382622241973877
    4. ''"' → logprob: -3.257622241973877
    5. '"""
' → logprob: -5.882622241973877
    6. '   ' → logprob: -6.132622241973877
    7. ' "' → logprob: -6.257622241973877
    8. '"'' → logprob: -6.507622241973877
    9. ''''' → logprob: -6.632622241973877
    10. ')' → logprob: -6.882622241973877

Token 61: ' ['' (ID: 5140)
  Prédit: ' [''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ['' → logprob: -0.5309794545173645
    2. '['' → logprob: -1.5309793949127197
    3. '[' → logprob: -2.2809793949127197
    4. ' [' → logprob: -2.4059793949127197
    5. ' ["' → logprob: -6.655979633331299
    6. '["' → logprob: -7.030979633331299
    7. ''' → logprob: -7.530979633331299
    8. ' '' → logprob: -8.28097915649414
    9. ' '['' → logprob: -9.03097915649414
    10. ' [
' → logprob: -9.53097915649414

Token 62: 'read' (ID: 1293)
  Prédit: 'read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.0004234051739331335
    2. ''re' → logprob: -7.875423431396484
    3. 'r' → logprob: -10.750423431396484
    4. 're' → logprob: -11.500423431396484
    5. ''' → logprob: -11.750423431396484
    6. 'rea' → logprob: -13.250423431396484
    7. ''r' → logprob: -13.625423431396484
    8. '"' → logprob: -14.875423431396484
    9. ' read' → logprob: -14.875423431396484
    10. ''"' → logprob: -16.875423431396484

Token 63: '',' (ID: 787)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.017485031858086586
    2. ''' → logprob: -4.14248514175415
    3. '"B' → logprob: -6.89248514175415
    4. ''"' → logprob: -7.89248514175415
    5. '("' → logprob: -10.767484664916992
    6. ' "' → logprob: -11.892484664916992
    7. '(' → logprob: -12.392484664916992
    8. 'B' → logprob: -12.767484664916992
    9. '"""' → logprob: -12.767484664916992
    10. '<|end|>' → logprob: -12.892484664916992

Token 64: ' '' (ID: 461)
  Prédit: ''"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''"' → logprob: -0.02387913130223751
    2. '"B' → logprob: -4.023879051208496
    3. ''' → logprob: -5.398879051208496
    4. '"' → logprob: -6.773879051208496
    5. ' '"'' → logprob: -11.023879051208496
    6. ' "' → logprob: -11.148879051208496
    7. ' '"' → logprob: -11.148879051208496
    8. '"""' → logprob: -14.648879051208496
    9. ' ' → logprob: -14.773879051208496
    10. ' '' → logprob: -14.898879051208496

Token 65: 'B' (ID: 33)
  Prédit: '"B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"B' → logprob: -0.00866728276014328
    2. '"' → logprob: -4.758667469024658
    3. ''"' → logprob: -10.2586669921875
    4. 'B' → logprob: -11.6336669921875
    5. ''' → logprob: -11.8836669921875
    6. ' "' → logprob: -14.5086669921875
    7. '"D' → logprob: -14.6336669921875
    8. '"W' → logprob: -15.1336669921875
    9. '"""' → logprob: -16.0086669921875
    10. '\"' → logprob: -16.0086669921875

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '"' → logprob: -15.5
    3. '<|end|>' → logprob: -16.875
    4. ''' → logprob: -17.75
    5. ' ' → logprob: -18.5
    6. '"""' → logprob: -19.5
    7. '...' → logprob: -20.125
    8. '```' → logprob: -21.125
    9. '<|end|>' → logprob: -21.125
    10. '' → logprob: -21.375

Token 67: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0032764605712145567
    2. '"' → logprob: -5.753276348114014
    3. ' input' → logprob: -10.378276824951172
    4. ''' → logprob: -10.753276824951172
    5. 'in' → logprob: -11.253276824951172
    6. '1' → logprob: -12.003276824951172
    7. ''"' → logprob: -12.128276824951172
    8. '<input' → logprob: -12.128276824951172
    9. 'i' → logprob: -12.378276824951172
    10. 'inp' → logprob: -12.503276824951172

Token 68: '',' (ID: 787)
  Prédit: '"','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"',' → logprob: -0.12793463468551636
    2. '"' → logprob: -2.127934694290161
    3. '',' → logprob: -7.502934455871582
    4. '",' → logprob: -8.752934455871582
    5. ''' → logprob: -8.877934455871582
    6. '"]' → logprob: -9.627934455871582
    7. '']' → logprob: -10.502934455871582
    8. '"B' → logprob: -10.877934455871582
    9. ''",' → logprob: -11.377934455871582
    10. '"'' → logprob: -11.502934455871582

Token 69: ' ';' (ID: 64848)
  Prédit: '';'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '';' → logprob: -0.32852014899253845
    2. ''' → logprob: -1.7035201787948608
    3. ''"' → logprob: -2.4535200595855713
    4. ' ';' → logprob: -5.20352029800415
    5. ' '' → logprob: -6.07852029800415
    6. ''",' → logprob: -6.70352029800415
    7. '',' → logprob: -7.07852029800415
    8. ''s' → logprob: -7.32852029800415
    9. '";' → logprob: -7.45352029800415
    10. '"' → logprob: -8.078519821166992

Token 70: 'solve' (ID: 117273)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.24082592129707336
    2. ''s' → logprob: -2.365825891494751
    3. '',' → logprob: -2.615825891494751
    4. ''"' → logprob: -3.615825891494751
    5. ' '' → logprob: -4.86582612991333
    6. '"' → logprob: -6.11582612991333
    7. ''re' → logprob: -6.11582612991333
    8. '']' → logprob: -6.24082612991333
    9. ',' → logprob: -6.49082612991333
    10. '','' → logprob: -7.11582612991333

Token 71: ';' (ID: 26)
  Prédit: ';'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ';' → logprob: -0.012830996885895729
    2. '';' → logprob: -5.262831211090088
    3. ';'' → logprob: -5.637831211090088
    4. ';',' → logprob: -6.262831211090088
    5. '',' → logprob: -6.762831211090088
    6. ',' → logprob: -7.512831211090088
    7. '']' → logprob: -8.38783073425293
    8. '','' → logprob: -10.13783073425293
    9. ''' → logprob: -10.63783073425293
    10. ']' → logprob: -10.76283073425293

Token 72: 'output' (ID: 6130)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.16825594007968903
    2. '',' → logprob: -2.6682560443878174
    3. '']' → logprob: -3.0432560443878174
    4. '"' → logprob: -3.4182560443878174
    5. ''"' → logprob: -6.043255805969238
    6. '';' → logprob: -6.918255805969238
    7. '"]' → logprob: -7.293255805969238
    8. '','' → logprob: -8.543255805969238
    9. '",' → logprob: -8.918255805969238
    10. '"',' → logprob: -9.168255805969238

Token 73: ';' (ID: 26)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '']' → logprob: -0.18087351322174072
    2. ''' → logprob: -1.8058735132217407
    3. '',' → logprob: -7.555873394012451
    4. '"' → logprob: -8.05587387084961
    5. ']' → logprob: -9.18087387084961
    6. '"]' → logprob: -9.30587387084961
    7. '']
' → logprob: -10.80587387084961
    8. ' ']' → logprob: -10.93087387084961
    9. '\'' → logprob: -11.18087387084961
    10. '']

' → logprob: -11.43087387084961

Token 74: '']
' (ID: 9756)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.0402437224984169
    2. ''' → logprob: -3.290243625640869
    3. ']' → logprob: -6.415243625640869
    4. '"]' → logprob: -7.915243625640869
    5. ' ']' → logprob: -9.290244102478027
    6. '"' → logprob: -9.790244102478027
    7. '',' → logprob: -10.415244102478027
    8. ''s' → logprob: -12.665244102478027
    9. '']
' → logprob: -12.915244102478027
    10. ' '' → logprob: -12.915244102478027

Token 75: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12918931245803833
    2. '"""' → logprob: -2.2541892528533936
    3. '"' → logprob: -4.754189491271973
    4. ''' → logprob: -5.629189491271973
    5. '```' → logprob: -6.379189491271973
    6. '"""
' → logprob: -6.629189491271973
    7. ''''' → logprob: -8.129189491271973
    8. '`' → logprob: -8.379189491271973
    9. ' ' → logprob: -9.754189491271973
    10. '""' → logprob: -9.754189491271973

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6373255252838135
    2. '"""' → logprob: -0.7623255252838135
    3. ' """' → logprob: -6.012325286865234
    4. '"' → logprob: -7.387325286865234
    5. '```' → logprob: -7.887325286865234
    6. '"""
' → logprob: -8.012325286865234
    7. '""' → logprob: -8.387325286865234
    8. ''' → logprob: -8.512325286865234
    9. ''''' → logprob: -9.262325286865234
    10. ' """
' → logprob: -9.387325286865234

Token 77: ' L' (ID: 451)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27416178584098816
    2. 'tokens' → logprob: -2.0241618156433105
    3. ' tokens' → logprob: -2.8991618156433105
    4. '"""' → logprob: -4.2741618156433105
    5. 'result' → logprob: -4.7741618156433105
    6. '```' → logprob: -5.7741618156433105
    7. 'n' → logprob: -5.8991618156433105
    8. '"' → logprob: -5.8991618156433105
    9. 's' → logprob: -6.0241618156433105
    10. 'r' → logprob: -6.2741618156433105

Token 78: ''ind' (ID: 82245)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.40750378370285034
    2. 'e' → logprob: -1.1575038433074951
    3. ''' → logprob: -4.282503604888916
    4. 'es' → logprob: -6.032503604888916
    5. ''''' → logprob: -7.157503604888916
    6. 'u' → logprob: -7.657503604888916
    7. 'i' → logprob: -7.907503604888916
    8. ' '' → logprob: -8.032504081726074
    9. 's' → logprob: -8.157504081726074
    10. '   ' → logprob: -8.532504081726074

Token 79: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.2528685927391052
    2. 'é' → logprob: -2.12786865234375
    3. 'e' → logprob: -3.37786865234375
    4. 'i' → logprob: -4.12786865234375
    5. 'éf' → logprob: -4.25286865234375
    6. 'ice' → logprob: -4.50286865234375
    7. 'ent' → logprob: -4.87786865234375
    8. 'ices' → logprob: -5.00286865234375
    9. 'entation' → logprob: -5.12786865234375
    10. 'ic' → logprob: -5.87786865234375

Token 80: ' pair' (ID: 10610)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.41941389441490173
    2. 's' → logprob: -2.1694138050079346
    3. ' des' → logprob: -2.5444138050079346
    4. ' ' → logprob: -2.9194138050079346
    5. ' d' → logprob: -3.5444138050079346
    6. ' du' → logprob: -3.7944138050079346
    7. '_' → logprob: -4.419414043426514
    8. '   ' → logprob: -4.544414043426514
    9. ' est' → logprob: -5.669414043426514
    10. 'd' → logprob: -6.169414043426514

Token 81: ' dans' (ID: 2671)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12191199511289597
    2. ' des' → logprob: -2.3719120025634766
    3. ' ' → logprob: -4.496912002563477
    4. ' correspond' → logprob: -5.746912002563477
    5. ' s' → logprob: -6.121912002563477
    6. ' de' → logprob: -6.496912002563477
    7. ' est' → logprob: -6.871912002563477
    8. '0' → logprob: -6.996912002563477
    9. ' d' → logprob: -7.496912002563477
    10. 'e' → logprob: -7.746912002563477

Token 82: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.023069951683282852
    2. 'la' → logprob: -3.8980698585510254
    3. 's' → logprob: -6.523069858551025
    4. ' le' → logprob: -8.398070335388184
    5. ' l' → logprob: -8.523070335388184
    6. 'l' → logprob: -8.773070335388184
    7. 'le' → logprob: -9.148070335388184
    8. '`' → logprob: -9.273070335388184
    9. ' ' → logprob: -10.273070335388184
    10. '```' → logprob: -10.523070335388184

Token 83: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.5266380310058594
    2. ' liste' → logprob: -0.9016380310058594
    3. 'list' → logprob: -5.776638031005859
    4. ' list' → logprob: -8.27663803100586
    5. 'lis' → logprob: -9.77663803100586
    6. 's' → logprob: -10.65163803100586
    7. 'l' → logprob: -11.02663803100586
    8. 'Liste' → logprob: -11.02663803100586
    9. ' ' → logprob: -11.15163803100586
    10. 'fonction' → logprob: -12.27663803100586

Token 84: ' correspond' (ID: 11095)
  Prédit: ' correspond'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' correspond' → logprob: -0.5463842153549194
    2. ' des' → logprob: -1.5463842153549194
    3. ' est' → logprob: -2.421384334564209
    4. ' ' → logprob: -2.921384334564209
    5. 's' → logprob: -3.546384334564209
    6. '0' → logprob: -4.171384334564209
    7. 'cor' → logprob: -4.671384334564209
    8. 'est' → logprob: -5.671384334564209
    9. ' représente' → logprob: -6.046384334564209
    10. ' contient' → logprob: -6.171384334564209

Token 85: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.21242840588092804
    2. ' aux' → logprob: -1.8374284505844116
    3. ' au' → logprob: -3.712428331375122
    4. 's' → logprob: -5.837428569793701
    5. ' ' → logprob: -6.212428569793701
    6. 'à' → logprob: -7.087428569793701
    7. 'au' → logprob: -7.462428569793701
    8. ' a' → logprob: -7.587428569793701
    9. ''à' → logprob: -8.087428092956543
    10. 'aux' → logprob: -8.587428092956543

Token 86: ' du' (ID: 1462)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.9565758109092712
    2. ' des' → logprob: -1.456575870513916
    3. ' la' → logprob: -2.206575870513916
    4. 'une' → logprob: -2.331575870513916
    5. ' du' → logprob: -2.956575870513916
    6. ' un' → logprob: -3.206575870513916
    7. ' l' → logprob: -3.331575870513916
    8. 'des' → logprob: -4.206575870513916
    9. ' ' → logprob: -4.581575870513916
    10. 's' → logprob: -5.456575870513916

Token 87: ' code' (ID: 3490)
  Prédit: ' code'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.504620373249054
    2. ' texte' → logprob: -1.0046203136444092
    3. ' hors' → logprob: -4.379620552062988
    4. ' text' → logprob: -5.754620552062988
    5. 'texte' → logprob: -5.754620552062988
    6. 's' → logprob: -6.004620552062988
    7. ' ' → logprob: -6.129620552062988
    8. 'code' → logprob: -6.379620552062988
    9. ' s' → logprob: -7.379620552062988
    10. ' t' → logprob: -7.754620552062988

Token 88: ' hors' (ID: 26087)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.845914900302887
    2. '   ' → logprob: -1.8459148406982422
    3. ')' → logprob: -2.095914840698242
    4. ':' → logprob: -2.470914840698242
    5. ' ' → logprob: -3.470914840698242
    6. 's' → logprob: -3.720914840698242
    7. '.' → logprob: -3.720914840698242
    8. 'e' → logprob: -3.845914840698242
    9. ' ,' → logprob: -4.095914840698242
    10. ']' → logprob: -4.345914840698242

Token 89: ' gu' (ID: 1704)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.3162374198436737
    2. 'des' → logprob: -1.441237449645996
    3. 's' → logprob: -4.566237449645996
    4. 'g' → logprob: -4.691237449645996
    5. ' gu' → logprob: -5.191237449645996
    6. '"' → logprob: -6.066237449645996
    7. 'les' → logprob: -7.066237449645996
    8. ' ' → logprob: -7.316237449645996
    9. '<|end|>' → logprob: -7.628737449645996
    10. ' g' → logprob: -7.691237449645996

Token 90: 'ille' (ID: 3301)
  Prédit: 'ille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ille' → logprob: -0.07422824949026108
    2. 'il' → logprob: -2.699228286743164
    3. 'illet' → logprob: -6.574228286743164
    4. 'illes' → logprob: -7.324228286743164
    5. 'i' → logprob: -7.699228286743164
    6. 'ill' → logprob: -7.699228286743164
    7. '```' → logprob: -7.824228286743164
    8. 'ile' → logprob: -8.449228286743164
    9. '   ' → logprob: -9.074228286743164
    10. ' ille' → logprob: -9.824228286743164

Token 91: 'mets' (ID: 153788)
  Prédit: 'mets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mets' → logprob: -0.7595304846763611
    2. 'ts' → logprob: -0.8845304846763611
    3. 'r' → logprob: -2.759530544281006
    4. 't' → logprob: -3.759530544281006
    5. 'm' → logprob: -4.134530544281006
    6. '"' → logprob: -5.884530544281006
    7. 'rots' → logprob: -6.009530544281006
    8. 'rets' → logprob: -6.134530544281006
    9. 'ets' → logprob: -6.384530544281006
    10. 'ots' → logprob: -6.384530544281006

Token 92: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1782166212797165
    2. ':' → logprob: -2.3032166957855225
    3. '\n' → logprob: -3.9282166957855225
    4. ',' → logprob: -4.678216457366943
    5. '"' → logprob: -4.928216457366943
    6. ')' → logprob: -5.303216457366943
    7. '```' → logprob: -5.303216457366943
    8. ':
' → logprob: -5.803216457366943
    9. '    
' → logprob: -6.053216457366943
    10. ''' → logprob: -6.303216457366943

Token 93: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0424976572394371
    2. '    ' → logprob: -3.9174976348876953
    3. ' #' → logprob: -4.417497634887695
    4. ' ' → logprob: -5.667497634887695
    5. '#' → logprob: -6.667497634887695
    6. 's' → logprob: -7.042497634887695
    7. ' et' → logprob: -7.167497634887695
    8. '  ' → logprob: -7.542497634887695
    9. 'et' → logprob: -7.542497634887695
    10. 'e' → logprob: -7.792497634887695

Token 94: ' l' (ID: 305)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18866392970085144
    2. 'et' → logprob: -2.313663959503174
    3. '#' → logprob: -3.688663959503174
    4. ' #' → logprob: -4.813663959503174
    5. ' et' → logprob: -4.938663959503174
    6. '    ' → logprob: -5.188663959503174
    7. 'le' → logprob: -5.313663959503174
    8. ' ' → logprob: -5.688663959503174
    9. '  ' → logprob: -6.188663959503174
    10. 'c' → logprob: -6.188663959503174

Token 95: ''ind' (ID: 82245)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8133618235588074
    2. 'e' → logprob: -1.0633618831634521
    3. ''ind' → logprob: -1.8133618831634521
    4. 'i' → logprob: -4.313361644744873
    5. 'a' → logprob: -4.313361644744873
    6. 'u' → logprob: -5.063361644744873
    7. 'es' → logprob: -5.813361644744873
    8. ''i' → logprob: -6.188361644744873
    9. 'indice' → logprob: -6.188361644744873
    10. 'ind' → logprob: -7.188361644744873

Token 96: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.3301890194416046
    2. 'ice' → logprob: -1.4551889896392822
    3. 'i' → logprob: -3.2051889896392822
    4. 'e' → logprob: -5.080189228057861
    5. 'ic' → logprob: -7.955189228057861
    6. '   ' → logprob: -8.580188751220703
    7. ' ' → logprob: -8.830188751220703
    8. 'ices' → logprob: -9.080188751220703
    9. 'é' → logprob: -9.330188751220703
    10. 'í' → logprob: -10.830188751220703

Token 97: ' impair' (ID: 64113)
  Prédit: ' pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pair' → logprob: -0.28357112407684326
    2. ' impair' → logprob: -1.4085711240768433
    3. 'pair' → logprob: -6.408571243286133
    4. ' imp' → logprob: -7.533571243286133
    5. ' odd' → logprob: -9.283571243286133
    6. ' ' → logprob: -9.783571243286133
    7. 'imp' → logprob: -10.533571243286133
    8. ' impar' → logprob: -10.783571243286133
    9. ' space' → logprob: -11.408571243286133
    10. ' ' → logprob: -12.533571243286133

Token 98: ' correspond' (ID: 11095)
  Prédit: ' correspond'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' correspond' → logprob: -0.33923277258872986
    2. ' dans' → logprob: -1.3392328023910522
    3. ' ' → logprob: -4.089232921600342
    4. ' corresponds' → logprob: -5.589232921600342
    5. ' à' → logprob: -6.839232921600342
    6. ' correspondant' → logprob: -7.089232921600342
    7. ' des' → logprob: -7.214232921600342
    8. 'dans' → logprob: -7.339232921600342
    9. ' au' → logprob: -7.714232921600342
    10. ' corresponde' → logprob: -8.714232444763184

Token 99: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.10949689149856567
    2. 'à' → logprob: -2.359496831893921
    3. ' au' → logprob: -5.1094970703125
    4. 'au' → logprob: -6.2344970703125
    5. ''à' → logprob: -7.7344970703125
    6. ' aux' → logprob: -7.9844970703125
    7. ' ' → logprob: -8.4844970703125
    8. 'a' → logprob: -9.3594970703125
    9. 'aux' → logprob: -9.8594970703125
    10. '-à' → logprob: -10.8594970703125

Token 100: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.9108327627182007
    2. 'une' → logprob: -1.4108327627182007
    3. ' du' → logprob: -1.7858327627182007
    4. ' des' → logprob: -2.4108328819274902
    5. 'du' → logprob: -3.4108328819274902
    6. 'des' → logprob: -3.4108328819274902
    7. ' de' → logprob: -4.91083288192749
    8. ' la' → logprob: -5.16083288192749
    9. 'la' → logprob: -5.28583288192749
    10. ' ' → logprob: -5.66083288192749

Token 101: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.07901393622159958
    2. '"' → logprob: -3.3290138244628906
    3. 'chaine' → logprob: -4.579013824462891
    4. 's' → logprob: -4.829013824462891
    5. ' chaine' → logprob: -5.329013824462891
    6. ' ' → logprob: -5.329013824462891
    7. 'cha' → logprob: -5.954013824462891
    8. ' string' → logprob: -6.204013824462891
    9. 'c' → logprob: -6.329013824462891
    10. 'l' → logprob: -6.954013824462891

Token 102: ' entre' (ID: 3853)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.7225117683410645
    2. ':' → logprob: -1.2225117683410645
    3. '"""' → logprob: -1.9725117683410645
    4. ')' → logprob: -4.3475117683410645
    5. '   ' → logprob: -4.3475117683410645
    6. ' :' → logprob: -4.3475117683410645
    7. ',' → logprob: -4.5975117683410645
    8. '":' → logprob: -4.9725117683410645
    9. 's' → logprob: -5.2225117683410645
    10. ''' → logprob: -5.4725117683410645

Token 103: ' gu' (ID: 1704)
  Prédit: ' gu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gu' → logprob: -0.2848522365093231
    2. 'g' → logprob: -1.4098522663116455
    3. 'gu' → logprob: -6.409852027893066
    4. '"' → logprob: -6.659852027893066
    5. ' g' → logprob: -8.409852027893066
    6. '_g' → logprob: -8.909852027893066
    7. '"""' → logprob: -9.284852027893066
    8. '""' → logprob: -9.659852027893066
    9. ''"' → logprob: -10.159852027893066
    10. ''g' → logprob: -10.284852027893066

Token 104: 'ille' (ID: 3301)
  Prédit: 'ille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ille' → logprob: -0.12634414434432983
    2. 'il' → logprob: -2.8763442039489746
    3. 'i' → logprob: -3.3763442039489746
    4. 'illes' → logprob: -3.7513442039489746
    5. 'illet' → logprob: -6.001344203948975
    6. 'ill' → logprob: -6.626344203948975
    7. '```' → logprob: -8.626343727111816
    8. 'ile' → logprob: -8.876343727111816
    9. ' ille' → logprob: -9.501343727111816
    10. '_i' → logprob: -9.751343727111816

Token 105: 'mets' (ID: 153788)
  Prédit: 'mets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mets' → logprob: -0.10729771852493286
    2. 'rets' → logprob: -2.357297658920288
    3. 'ts' → logprob: -5.982297897338867
    4. 're' → logprob: -6.357297897338867
    5. 'ments' → logprob: -6.482297897338867
    6. 't' → logprob: -7.982297897338867
    7. 'r' → logprob: -8.482297897338867
    8. 'ets' → logprob: -8.732297897338867
    9. 'rots' → logprob: -8.732297897338867
    10. 'm' → logprob: -9.357297897338867

Token 106: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11224367469549179
    2. ':' → logprob: -3.11224365234375
    3. '\n' → logprob: -3.36224365234375
    4. ':
' → logprob: -4.98724365234375
    5. '"""' → logprob: -5.61224365234375
    6. ' :' → logprob: -5.73724365234375
    7. '"' → logprob: -5.86224365234375
    8. ')' → logprob: -5.98724365234375
    9. '```' → logprob: -6.36224365234375
    10. '):' → logprob: -6.36224365234375

Token 107: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.31440019607543945
    2. '   ' → logprob: -1.3144001960754395
    3. '"""
' → logprob: -7.3144001960754395
    4. '"' → logprob: -8.064399719238281
    5. '```' → logprob: -9.439399719238281
    6. ''''' → logprob: -10.564399719238281
    7. '""' → logprob: -10.689399719238281
    8. ' """' → logprob: -10.939399719238281
    9. '    ' → logprob: -12.314399719238281
    10. ')' → logprob: -13.689399719238281

Token 108: ' """
' (ID: 7037)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.266735702753067
    2. '   ' → logprob: -1.6417356729507446
    3. '"' → logprob: -3.391735792160034
    4. '"""
' (adapté à ' """
') → logprob: -5.891735553741455
    5. '```' → logprob: -6.266735553741455
    6. ''''' → logprob: -7.141735553741455
    7. '""' → logprob: -7.516735553741455
    8. ''' → logprob: -7.891735553741455
    9. ')' → logprob: -9.016736030578613
    10. '\n' → logprob: -9.391736030578613

Token 109: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5574085712432861
    2. ' tokens' → logprob: -2.057408571243286
    3. 'result' → logprob: -2.557408571243286
    4. ' result' → logprob: -2.682408571243286
    5. 'tokens' → logprob: -2.682408571243286
    6. ' code' → logprob: -3.807408571243286
    7. 'n' → logprob: -3.932408571243286
    8. ' res' → logprob: -4.682408332824707
    9. 'res' → logprob: -4.932408332824707
    10. 'code' → logprob: -5.432408332824707

Token 110: ' parts' (ID: 7881)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8129333257675171
    2. 'tokens' → logprob: -1.062933325767517
    3. 'code' → logprob: -2.9379334449768066
    4. '   ' → logprob: -3.3129334449768066
    5. ' result' → logprob: -3.6879334449768066
    6. 'res' → logprob: -3.8129334449768066
    7. ' tokens' → logprob: -3.9379334449768066
    8. 'parts' (adapté à ' parts') → logprob: -4.437933444976807
    9. 'indent' → logprob: -4.812933444976807
    10. 'elements' → logprob: -4.812933444976807

Token 111: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18054050207138062
    2. '=' → logprob: -1.8055405616760254
    3. '=[]' → logprob: -7.180540561676025
    4. 's' → logprob: -10.805540084838867
    5. '[]' → logprob: -11.805540084838867
    6. '=[]
' → logprob: -13.555540084838867
    7. ',' → logprob: -13.805540084838867
    8. 'es' → logprob: -14.180540084838867
    9. '   ' → logprob: -14.430540084838867
    10. '_' → logprob: -14.680540084838867

Token 112: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0015433111693710089
    2. '[]
' → logprob: -6.7515435218811035
    3. ' []' → logprob: -8.001543045043945
    4. '['' → logprob: -10.501543045043945
    5. '["' → logprob: -12.126543045043945
    6. '[' → logprob: -13.251543045043945
    7. ' []
' → logprob: -13.376543045043945
    8. '[]

' → logprob: -14.126543045043945
    9. '[]"' → logprob: -14.751543045043945
    10. '[]}' → logprob: -14.751543045043945

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2079781293869019
    2. ' current' → logprob: -1.2079781293869019
    3. ' pos' → logprob: -1.5829781293869019
    4. ' i' → logprob: -2.8329782485961914
    5. 'i' → logprob: -3.2079782485961914
    6. 'current' → logprob: -3.2079782485961914
    7. 'pos' → logprob: -3.9579782485961914
    8. ' token' → logprob: -4.457978248596191
    9. ' in' → logprob: -5.082978248596191
    10. 'token' → logprob: -5.457978248596191

Token 114: ' i' (ID: 575)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.6871684789657593
    2. 'in' → logprob: -0.9371684789657593
    3. 'i' (adapté à ' i') → logprob: -2.562168598175049
    4. 'pos' → logprob: -5.062168598175049
    5. ' current' → logprob: -5.062168598175049
    6. 'inside' → logprob: -5.812168598175049
    7. ' in' → logprob: -6.062168598175049
    8. 'start' → logprob: -6.437168598175049
    9. 'curr' → logprob: -6.562168598175049
    10. 'buffer' → logprob: -6.687168598175049

Token 115: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10070336610078812
    2. '=' → logprob: -2.350703477859497
    3. 'nd' → logprob: -8.600703239440918
    4. 'nt' → logprob: -8.850703239440918
    5. ' ' → logprob: -10.100703239440918
    6. ',' → logprob: -10.100703239440918
    7. 'n' → logprob: -10.475703239440918
    8. ' +=' → logprob: -10.850703239440918
    9. 's' → logprob: -11.725703239440918
    10. '<|end|>' → logprob: -12.350703239440918

Token 116: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003178071230649948
    2. ' ' → logprob: -5.753178119659424
    3. '<|end|>' → logprob: -15.003177642822266
    4. '   ' → logprob: -16.753177642822266
    5. '  ' → logprob: -17.503177642822266
    6. '۰' → logprob: -17.628177642822266
    7. '1' → logprob: -18.128177642822266
    8. 's' → logprob: -18.503177642822266
    9. '<|end|>' → logprob: -18.815677642822266
    10. '[' → logprob: -19.003177642822266

Token 117: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033558503491804004
    2. ' ' → logprob: -8.000335693359375
    3. 's' → logprob: -16.875335693359375
    4. '```' → logprob: -17.625335693359375
    5. '۰' → logprob: -18.000335693359375
    6. '1' → logprob: -18.000335693359375
    7. '[' → logprob: -18.312835693359375
    8. '   ' → logprob: -18.437835693359375
    9. '  ' → logprob: -19.250335693359375
    10. ')' → logprob: -19.437835693359375

Token 118: '
' (ID: 198)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.9722042083740234
    2. 'while' → logprob: -1.9722042083740234
    3. 'n' → logprob: -2.3472042083740234
    4. ',' → logprob: -2.4722042083740234
    5. '<|end|>' → logprob: -2.4722042083740234
    6. ' ' → logprob: -2.5972042083740234
    7. 's' → logprob: -3.7222042083740234
    8. ' 
' → logprob: -3.9722042083740234
    9. '
' → logprob: -4.097204208374023
    10. ' ,' → logprob: -4.222204208374023

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9205401539802551
    2. ' while' → logprob: -1.2955400943756104
    3. 'n' → logprob: -2.0455400943756104
    4. ' n' → logprob: -2.4205400943756104
    5. ' length' → logprob: -3.0455400943756104
    6. 'while' → logprob: -3.5455400943756104
    7. ',' → logprob: -4.6705403327941895
    8. ' s' → logprob: -4.9205403327941895
    9. 's' → logprob: -5.2955403327941895
    10. 'length' → logprob: -5.2955403327941895

Token 120: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.5168725848197937
    2. 'in' → logprob: -1.1418726444244385
    3. 'while' → logprob: -3.7668726444244385
    4. 'length' → logprob: -4.266872406005859
    5. ' in' → logprob: -4.391872406005859
    6. 'inside' → logprob: -4.891872406005859
    7. 'start' → logprob: -5.016872406005859
    8. '   ' → logprob: -5.266872406005859
    9. 'quote' → logprob: -5.516872406005859
    10. ' n' → logprob: -5.516872406005859

Token 121: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08002462983131409
    2. '=' → logprob: -2.5800247192382812
    3. ' ' → logprob: -7.330024719238281
    4. '  ' → logprob: -8.580024719238281
    5. '   ' → logprob: -9.455024719238281
    6. ',' → logprob: -9.580024719238281
    7. ')' → logprob: -10.455024719238281
    8. ' =
' → logprob: -11.330024719238281
    9. ' ==' → logprob: -11.580024719238281
    10. ' s' → logprob: -11.580024719238281

Token 122: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.011048289015889168
    2. 'len' → logprob: -4.511048316955566
    3. '(len' → logprob: -15.386048316955566
    4. '	len' → logprob: -15.886048316955566
    5. '=len' → logprob: -15.886048316955566
    6. '[len' → logprob: -18.13604736328125
    7. ' ' → logprob: -18.26104736328125
    8. ' s' → logprob: -19.01104736328125
    9. '<len' → logprob: -19.38604736328125
    10. ',len' → logprob: -19.38604736328125

Token 123: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0003851517685689032
    2. '(' → logprob: -7.875385284423828
    3. 's' → logprob: -12.250385284423828
    4. ')' → logprob: -15.750385284423828
    5. ' (' → logprob: -17.000385284423828
    6. '(
' → logprob: -18.000385284423828
    7. ' s' → logprob: -18.375385284423828
    8. '(n' → logprob: -18.625385284423828
    9. '(t' → logprob: -20.125385284423828
    10. '(code' → logprob: -20.250385284423828

Token 124: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.672236824873835e-05
    2. ' )' → logprob: -9.625076293945312
    3. '   ' → logprob: -12.250076293945312
    4. ')
' → logprob: -12.500076293945312
    5. ' ' → logprob: -14.000076293945312
    6. 's' → logprob: -14.875076293945312
    7. ')s' → logprob: -15.125076293945312
    8. ',' → logprob: -16.125076293945312
    9. 'def' → logprob: -16.500076293945312
    10. ')

' → logprob: -17.125076293945312

Token 125: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3730981349945068
    2. 'token' → logprob: -1.3730981349945068
    3. ' while' → logprob: -2.123098134994507
    4. ' token' → logprob: -2.623098134994507
    5. 'result' → logprob: -2.873098134994507
    6. 'while' → logprob: -2.873098134994507
    7. 'current' → logprob: -3.248098134994507
    8. ' result' → logprob: -3.248098134994507
    9. ' current' → logprob: -3.373098134994507
    10. 'tokens' → logprob: -3.373098134994507

Token 126: ' while' (ID: 2049)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.15852391719818115
    2. 'while' (adapté à ' while') → logprob: -2.2835240364074707
    3. 'current' → logprob: -4.158524036407471
    4. 'inside' → logprob: -4.158524036407471
    5. 'quote' → logprob: -5.283524036407471
    6. 'start' → logprob: -5.783524036407471
    7. '   ' → logprob: -6.658524036407471
    8. 'token' → logprob: -6.908524036407471
    9. 'result' → logprob: -7.533524036407471
    10. 'curr' → logprob: -7.658524036407471

Token 127: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.000205566844670102
    2. 'i' → logprob: -8.500205993652344
    3. ' ' → logprob: -13.250205993652344
    4. ' True' → logprob: -15.875205993652344
    5. '	i' → logprob: -16.625205993652344
    6. ' ' → logprob: -16.625205993652344
    7. '_i' → logprob: -17.875205993652344
    8. ' s' → logprob: -18.125205993652344
    9. '  ' → logprob: -18.250205993652344
    10. 'True' → logprob: -18.625205993652344

Token 128: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.01644452102482319
    2. '<' → logprob: -4.141444683074951
    3. ' <=' → logprob: -8.391444206237793
    4. ' ' → logprob: -9.891444206237793
    5. '<len' → logprob: -10.266444206237793
    6. '<=' → logprob: -10.641444206237793
    7. ' <
' → logprob: -10.641444206237793
    8. '   ' → logprob: -10.766444206237793
    9. '<n' → logprob: -11.641444206237793
    10. '[' → logprob: -12.891444206237793

Token 129: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5759398937225342
    2. ' n' → logprob: -0.8259398937225342
    3. '   ' → logprob: -15.950940132141113
    4. ' ' → logprob: -16.200939178466797
    5. '	n' → logprob: -16.200939178466797
    6. '_n' → logprob: -17.075939178466797
    7. 'len' → logprob: -17.075939178466797
    8. '  ' → logprob: -17.575939178466797
    9. ')n' → logprob: -18.200939178466797
    10. '```' → logprob: -19.200939178466797

Token 130: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008702386170625687
    2. ':
' → logprob: -4.758702278137207
    3. ' :' → logprob: -10.258702278137207
    4. ' and' → logprob: -10.758702278137207
    5. '   ' → logprob: -11.383702278137207
    6. ',' → logprob: -11.758702278137207
    7. ' :
' → logprob: -12.508702278137207
    8. 'and' → logprob: -13.383702278137207
    9. '=' → logprob: -13.383702278137207
    10. '):' → logprob: -13.633702278137207

Token 131: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07229748368263245
    2. ' if' → logprob: -3.5722975730895996
    3. '    ' → logprob: -4.0722975730896
    4. '   ' → logprob: -4.3222975730896
    5. 'if' → logprob: -5.5722975730896
    6. 'c' → logprob: -6.0722975730896
    7. ' c' → logprob: -6.5722975730896
    8. '        ' → logprob: -6.6972975730896
    9. ' ' → logprob: -7.4472975730896
    10. '  ' → logprob: -7.6972975730896

Token 132: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.051050879061222076
    2. ' if' → logprob: -3.176050901412964
    3. 'start' → logprob: -5.051050662994385
    4. 'c' → logprob: -7.426050662994385
    5. 'j' → logprob: -7.676050662994385
    6. '   ' → logprob: -8.426051139831543
    7. ' start' → logprob: -9.301051139831543
    8. 'quote' → logprob: -9.676051139831543
    9. '       ' → logprob: -10.176051139831543
    10. 'token' → logprob: -10.301051139831543

Token 133: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.12693534791469574
    2. 's' → logprob: -2.1269352436065674
    3. ' ' → logprob: -13.001935005187988
    4. '   ' → logprob: -13.126935005187988
    5. ' not' → logprob: -13.626935005187988
    6. '"s' → logprob: -14.126935005187988
    7. '	s' → logprob: -15.126935005187988
    8. '  ' → logprob: -15.126935005187988
    9. '"' → logprob: -16.001935958862305
    10. '_s' → logprob: -16.126935958862305

Token 134: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.842555426876061e-06
    2. '[' → logprob: -12.250004768371582
    3. ' [' → logprob: -17.0000057220459
    4. 'i' → logprob: -17.1250057220459
    5. '[j' → logprob: -17.3750057220459
    6. '.startswith' → logprob: -17.8750057220459
    7. '[I' → logprob: -18.0000057220459
    8. '[
' → logprob: -19.5000057220459
    9. '[int' → logprob: -19.7500057220459
    10. '   ' → logprob: -19.8750057220459

Token 135: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.14332495629787445
    2. '==' → logprob: -2.768324851989746
    3. ' !=' → logprob: -3.018324851989746
    4. '=='' → logprob: -4.393324851989746
    5. ' in' → logprob: -5.268324851989746
    6. '!=' → logprob: -6.268324851989746
    7. '=="' → logprob: -7.018324851989746
    8. ' not' → logprob: -7.268324851989746
    9. '!' → logprob: -8.768324851989746
    10. 'in' → logprob: -8.893324851989746

Token 136: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07988343387842178
    2. ' !=' → logprob: -3.204883337020874
    3. '==' → logprob: -3.704883337020874
    4. ' in' → logprob: -4.954883575439453
    5. ' not' → logprob: -6.579883575439453
    6. '!=' → logprob: -6.954883575439453
    7. '=="' → logprob: -7.079883575439453
    8. '=='' → logprob: -7.079883575439453
    9. ' ' → logprob: -8.704883575439453
    10. 'in' → logprob: -9.704883575439453

Token 137: ' '"' (ID: 15197)
  Prédit: ''"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''"' → logprob: -7.588793960167095e-05
    2. '"' → logprob: -9.500076293945312
    3. ' '"'' → logprob: -14.500076293945312
    4. ''' → logprob: -15.375076293945312
    5. ' '"' → logprob: -16.375076293945312
    6. '"""' → logprob: -16.500076293945312
    7. '\"' → logprob: -18.250076293945312
    8. '\""' → logprob: -19.250076293945312
    9. '('"' → logprob: -19.375076293945312
    10. '""""' → logprob: -19.875076293945312

Token 138: '':
' (ID: 7669)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1895463615655899
    2. '':
' → logprob: -2.1895463466644287
    3. '':' → logprob: -3.1895463466644287
    4. ':' → logprob: -4.814546585083008
    5. ''' → logprob: -4.939546585083008
    6. '":' → logprob: -5.939546585083008
    7. '":
' → logprob: -6.939546585083008
    8. ':
' → logprob: -7.814546585083008
    9. '"'' → logprob: -9.439546585083008
    10. '':
' → logprob: -9.564546585083008

Token 139: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.041148841381073
    2. '           ' → logprob: -3.2911489009857178
    3. 'i' → logprob: -7.291148662567139
    4. 'end' → logprob: -7.416148662567139
    5. '   ' → logprob: -8.041149139404297
    6. ' i' → logprob: -8.541149139404297
    7. 'start' → logprob: -8.791149139404297
    8. '        ' → logprob: -9.041149139404297
    9. '```' → logprob: -9.041149139404297
    10. '	       ' → logprob: -9.166149139404297

Token 140: ' #' (ID: 1069)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.8732914328575134
    2. 'j' → logprob: -1.3732914924621582
    3. 'end' → logprob: -1.3732914924621582
    4. '           ' → logprob: -2.998291492462158
    5. ' start' → logprob: -4.748291492462158
    6. ' j' → logprob: -4.748291492462158
    7. 'i' → logprob: -5.498291492462158
    8. ' end' → logprob: -5.998291492462158
    9. '       ' → logprob: -6.623291492462158
    10. '   ' → logprob: -7.623291492462158

Token 141: ' début' (ID: 29589)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.3127681314945221
    2. 'j' → logprob: -2.1877682209014893
    3. 'end' → logprob: -2.3127682209014893
    4. 'i' → logprob: -3.0627682209014893
    5. 'quote' → logprob: -5.43776798248291
    6. '   ' → logprob: -5.68776798248291
    7. ' start' → logprob: -6.93776798248291
    8. ' j' → logprob: -7.43776798248291
    9. '       ' → logprob: -7.68776798248291
    10. ' end' → logprob: -7.81276798248291

Token 142: ' d' (ID: 272)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2643362879753113
    2. '"' → logprob: -2.014336347579956
    3. 'token' → logprob: -3.764336347579956
    4. ' of' → logprob: -4.139336109161377
    5. ' =' → logprob: -4.264336109161377
    6. '_token' → logprob: -4.389336109161377
    7. '")' → logprob: -4.639336109161377
    8. '       ' → logprob: -5.514336109161377
    9. ' token' → logprob: -5.514336109161377
    10. ' de' → logprob: -6.014336109161377

Token 143: ''une' (ID: 13337)
  Prédit: ''une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''une' → logprob: -0.09430567920207977
    2. ''un' → logprob: -2.7193057537078857
    3. '"' → logprob: -4.344305515289307
    4. 'une' → logprob: -5.219305515289307
    5. ''"' → logprob: -6.469305515289307
    6. ' une' → logprob: -6.469305515289307
    7. ''' → logprob: -6.844305515289307
    8. 'a' → logprob: -7.594305515289307
    9. 'u' → logprob: -7.969305515289307
    10. '’une' → logprob: -8.219305992126465

Token 144: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.9281443953514099
    2. 'string' → logprob: -1.5531444549560547
    3. 'quoted' → logprob: -1.9281444549560547
    4. 'quote' → logprob: -2.6781444549560547
    5. ' chaîne' → logprob: -2.8031444549560547
    6. ' string' → logprob: -3.3031444549560547
    7. '"' → logprob: -3.8031444549560547
    8. 'g' → logprob: -4.053144454956055
    9. 'literal' → logprob: -4.053144454956055
    10. '   ' → logprob: -5.303144454956055

Token 145: ' litt' (ID: 33019)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0541359968483448
    2. 'i' → logprob: -3.929136037826538
    3. '       ' → logprob: -4.429135799407959
    4. '"' → logprob: -4.554135799407959
    5. ' i' → logprob: -6.179135799407959
    6. '")' → logprob: -6.304135799407959
    7. 'token' → logprob: -6.554135799407959
    8. '"""' → logprob: -7.054135799407959
    9. 'start' → logprob: -7.179135799407959
    10. '""' → logprob: -7.679135799407959

Token 146: 'érale' (ID: 98150)
  Prédit: 'érale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érale' → logprob: -0.0018487934721633792
    2. 'éral' → logprob: -6.5018486976623535
    3. 'rale' → logprob: -9.126849174499512
    4. 'érales' → logprob: -9.501849174499512
    5. 'éralement' → logprob: -9.751849174499512
    6. '"' → logprob: -10.376849174499512
    7. 'éraire' → logprob: -10.501849174499512
    8. 'éra' → logprob: -10.876849174499512
    9. 'éraux' → logprob: -11.626849174499512
    10. 'ral' → logprob: -12.376849174499512

Token 147: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3071766793727875
    2. '       ' → logprob: -1.5571767091751099
    3. 'i' → logprob: -3.8071765899658203
    4. '"' → logprob: -4.05717658996582
    5. ' i' → logprob: -5.68217658996582
    6. '   ' → logprob: -5.93217658996582
    7. 'token' → logprob: -6.55717658996582
    8. ',' → logprob: -7.05717658996582
    9. '")' → logprob: -7.18217658996582
    10. 'tokens' → logprob: -7.18217658996582

Token 148: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3979916572570801
    2. '       ' → logprob: -1.64799165725708
    3. 'i' → logprob: -2.39799165725708
    4. ' i' → logprob: -3.52299165725708
    5. '   ' → logprob: -5.64799165725708
    6. '"' → logprob: -6.27299165725708
    7. 'token' → logprob: -6.27299165725708
    8. '<|end|>' → logprob: -7.02299165725708
    9. '	       ' → logprob: -7.14799165725708
    10. '<|end|>' → logprob: -7.27299165725708

Token 149: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -1.0402401685714722
    2. 'start' → logprob: -1.2902401685714722
    3. 'i' → logprob: -1.7902401685714722
    4. 'end' → logprob: -2.0402402877807617
    5. '           ' → logprob: -2.9152402877807617
    6. '   ' → logprob: -4.540240287780762
    7. ' j' → logprob: -5.290240287780762
    8. ' i' → logprob: -6.790240287780762
    9. '       ' → logprob: -6.915240287780762
    10. 'quote' → logprob: -7.040240287780762

Token 150: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25343185663223267
    2. '=' → logprob: -1.503431797027588
    3. '=i' → logprob: -6.503431797027588
    4. '+=' → logprob: -14.128432273864746
    5. '   ' → logprob: -14.253432273864746
    6. 'i' → logprob: -14.378432273864746
    7. ' +=' → logprob: -14.378432273864746
    8. ' ' → logprob: -14.628432273864746
    9. '=j' → logprob: -15.628432273864746
    10. ' i' → logprob: -16.87843132019043

Token 151: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.018150413408875465
    2. ' i' → logprob: -4.018150329589844
    3. '   ' → logprob: -14.768150329589844
    4. '	i' → logprob: -16.268150329589844
    5. 's' → logprob: -16.893150329589844
    6. '(i' → logprob: -16.893150329589844
    7. 'I' → logprob: -17.018150329589844
    8. ' ' → logprob: -17.893150329589844
    9. ')i' → logprob: -18.393150329589844
    10. '```' → logprob: -18.393150329589844

Token 152: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07889000326395035
    2. ' +' → logprob: -2.578890085220337
    3. '+
' → logprob: -15.953889846801758
    4. ' +
' → logprob: -16.578889846801758
    5. ' plus' → logprob: -16.703889846801758
    6. '+j' → logprob: -17.453889846801758
    7. '+i' → logprob: -17.828889846801758
    8. ' ' → logprob: -18.328889846801758
    9. '1' → logprob: -18.703889846801758
    10. '＋' → logprob: -18.828889846801758

Token 153: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9266199160483666e-05
    2. ' ' → logprob: -10.875019073486328
    3. '2' → logprob: -16.250019073486328
    4. '```' → logprob: -16.625019073486328
    5. '   ' → logprob: -18.250019073486328
    6. '0' → logprob: -19.250019073486328
    7. '
' → logprob: -19.750019073486328
    8. '7' → logprob: -20.062519073486328
    9. '１' → logprob: -20.625019073486328
    10. '۱' → logprob: -20.687519073486328

Token 154: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '```' → logprob: -17.875001907348633
    4. '2' → logprob: -19.750001907348633
    5. '"""' → logprob: -20.000001907348633
    6. '"' → logprob: -20.250001907348633
    7. '
' → logprob: -20.250001907348633
    8. '   ' → logprob: -20.562501907348633
    9. '<|end|>' → logprob: -20.625001907348633
    10. '0' → logprob: -21.000001907348633

Token 155: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 156: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 157: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0032572117634117603
    2. ' while' → logprob: -5.7532572746276855
    3. '<|end|>' → logprob: -9.628256797790527
    4. '	while' → logprob: -11.753256797790527
    5. '<|end|>' → logprob: -13.378256797790527
    6. '           ' → logprob: -13.753256797790527
    7. 'While' → logprob: -14.003256797790527
    8. 'j' → logprob: -14.753256797790527
    9. '       ' → logprob: -14.753256797790527
    10. '">' → logprob: -15.253256797790527

Token 158: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.02324850670993328
    2. ' j' → logprob: -3.7732484340667725
    3. 's' → logprob: -13.398248672485352
    4. '   ' → logprob: -14.523248672485352
    5. ' s' → logprob: -14.648248672485352
    6. ' ' → logprob: -15.273248672485352
    7. '	j' → logprob: -15.273248672485352
    8. ' ' → logprob: -17.27324867248535
    9. '```' → logprob: -17.52324867248535
    10. '  ' → logprob: -17.64824867248535

Token 159: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5038222670555115
    2. '<' → logprob: -1.5038223266601562
    3. '<n' → logprob: -1.7538223266601562
    4. '<len' → logprob: -8.003822326660156
    5. 'n' → logprob: -10.628822326660156
    6. '<s' → logprob: -10.753822326660156
    7. '<N' → logprob: -12.628822326660156
    8. '<size' → logprob: -12.878822326660156
    9. '<char' → logprob: -13.378822326660156
    10. 's' → logprob: -14.003822326660156

Token 160: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10020667314529419
    2. ' n' → logprob: -2.3502066135406494
    3. 'len' → logprob: -17.60020637512207
    4. '	n' → logprob: -17.85020637512207
    5. ' ' → logprob: -18.10020637512207
    6. ')n' → logprob: -18.35020637512207
    7. ' len' → logprob: -18.47520637512207
    8. '
' → logprob: -19.35020637512207
    9. '_n' → logprob: -19.72520637512207
    10. '   ' → logprob: -20.10020637512207

Token 161: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.25192928314208984
    2. 'and' → logprob: -1.5019292831420898
    3. '   ' → logprob: -15.75192928314209
    4. ' ' → logprob: -17.501930236816406
    5. ' и' → logprob: -18.001930236816406
    6. '    ' → logprob: -18.376930236816406
    7. 'et' → logprob: -18.376930236816406
    8. '           ' → logprob: -19.001930236816406
    9. '       ' → logprob: -19.126930236816406
    10. '	and' → logprob: -19.126930236816406

Token 162: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.011058545671403408
    2. ' s' → logprob: -4.511058330535889
    3. '   ' → logprob: -12.011058807373047
    4. '(s' → logprob: -12.761058807373047
    5. ' (' → logprob: -14.011058807373047
    6. ' ' → logprob: -15.011058807373047
    7. '	s' → logprob: -16.011058807373047
    8. '```' → logprob: -16.261058807373047
    9. '       ' → logprob: -16.386058807373047
    10. '
' → logprob: -16.511058807373047

Token 163: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: 0.0
    2. '[i' → logprob: -19.125
    3. '[' → logprob: -19.5
    4. '"[' → logprob: -19.5
    5. '[js' → logprob: -20.375
    6. 'j' → logprob: -20.5
    7. '[q' → logprob: -21.0
    8. '```' → logprob: -21.625
    9. ' [' → logprob: -22.0
    10. '[n' → logprob: -22.375

Token 164: ']' (ID: 60)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.5778262615203857
    2. '!=' → logprob: -0.8278262615203857
    3. '!="' → logprob: -7.577826499938965
    4. '!='' → logprob: -7.702826499938965
    5. '!' → logprob: -8.202826499938965
    6. ']!=' → logprob: -8.327826499938965
    7. '   ' → logprob: -8.827826499938965
    8. ']' → logprob: -10.077826499938965
    9. '()!=' → logprob: -10.077826499938965
    10. ')!=' → logprob: -10.077826499938965

Token 165: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.3138069212436676
    2. ' !=' → logprob: -1.3138068914413452
    3. '!="' → logprob: -8.063806533813477
    4. '!' → logprob: -8.813806533813477
    5. '!='' → logprob: -9.563806533813477
    6. '()!=' → logprob: -13.188806533813477
    7. ')!=' → logprob: -13.313806533813477
    8. '```' → logprob: -13.313806533813477
    9. '!==' → logprob: -13.688806533813477
    10. ' not' → logprob: -13.688806533813477

Token 166: ' '"' (ID: 15197)
  Prédit: ''"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''"' → logprob: -0.003196965903043747
    2. '"' → logprob: -5.753197193145752
    3. ' '"' → logprob: -11.378196716308594
    4. '":' → logprob: -12.253196716308594
    5. '""' → logprob: -13.503196716308594
    6. '"'' → logprob: -14.503196716308594
    7. ''' → logprob: -14.628196716308594
    8. ' '"'' → logprob: -15.378196716308594
    9. '"":' → logprob: -15.628196716308594
    10. '"""' → logprob: -16.503196716308594

Token 167: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2232137769460678
    2. ':' → logprob: -2.0982136726379395
    3. '':
' → logprob: -3.7232136726379395
    4. '":' → logprob: -4.0982136726379395
    5. '":
' → logprob: -4.0982136726379395
    6. '':' → logprob: -4.7232136726379395
    7. '"' → logprob: -4.8482136726379395
    8. ' and' → logprob: -6.7232136726379395
    9. '           ' → logprob: -7.2232136726379395
    10. ''' → logprob: -7.8482136726379395

Token 168: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.250476211309433
    2. 'j' → logprob: -2.250476121902466
    3. '           ' → logprob: -2.250476121902466
    4. ' j' → logprob: -4.625476360321045
    5. '
' → logprob: -8.000475883483887
    6. '   ' → logprob: -8.500475883483887
    7. '       ' → logprob: -8.625475883483887
    8. '                   ' → logprob: -9.750475883483887
    9. '```' → logprob: -10.000475883483887
    10. ':
' → logprob: -10.750475883483887

Token 169: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.5759962201118469
    2. ' j' → logprob: -0.8259962201118469
    3. '               ' → logprob: -10.825996398925781
    4. '   ' → logprob: -11.325996398925781
    5. '	j' → logprob: -11.325996398925781
    6. '           ' → logprob: -12.200996398925781
    7. '                   ' → logprob: -12.825996398925781
    8. '       ' → logprob: -13.825996398925781
    9. '                ' → logprob: -13.950996398925781
    10. '    ' → logprob: -14.325996398925781

Token 170: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6115399599075317
    2. '+' → logprob: -1.3615399599075317
    3. ' +=' → logprob: -1.6115399599075317
    4. ' +' → logprob: -6.861539840698242
    5. '<|end|>' → logprob: -8.111539840698242
    6. '++' → logprob: -8.486539840698242
    7. '           ' → logprob: -10.986539840698242
    8. '=' → logprob: -11.111539840698242
    9. '<|end|>' → logprob: -11.736539840698242
    10. ')' → logprob: -12.111539840698242

Token 171: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -19.500036239624023
    4. '```' → logprob: -19.500036239624023
    5. '۱' → logprob: -21.500036239624023
    6. '１' → logprob: -22.250036239624023
    7. '  ' → logprob: -22.250036239624023
    8. '0' → logprob: -22.437536239624023
    9. '<|end|>' → logprob: -22.625036239624023
    10. '+' → logprob: -22.812536239624023

Token 172: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '```' → logprob: -20.250001907348633
    4. '   ' → logprob: -21.000001907348633
    5. '
' → logprob: -21.625001907348633
    6. '۱' → logprob: -22.000001907348633
    7. '0' → logprob: -22.312501907348633
    8. '１' → logprob: -22.687501907348633
    9. '  ' → logprob: -22.812501907348633
    10. '`' → logprob: -23.125001907348633

Token 173: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23196280002593994
    2. '
' → logprob: -1.60696280002594
    3. '"' → logprob: -5.23196268081665
    4. 'j' → logprob: -8.231963157653809
    5. '<|end|>' → logprob: -8.356963157653809
    6. '            
' → logprob: -9.231963157653809
    7. '       ' → logprob: -9.356963157653809
    8. ')' → logprob: -9.606963157653809
    9. '          ' → logprob: -10.356963157653809
    10. '"
' → logprob: -10.356963157653809

Token 174: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04618963226675987
    2. '
' → logprob: -3.296189546585083
    3. '       ' → logprob: -5.921189785003662
    4. ' if' → logprob: -6.546189785003662
    5. 'j' → logprob: -6.921189785003662
    6. '<|end|>' → logprob: -7.046189785003662
    7. 'if' → logprob: -7.546189785003662
    8. '            
' → logprob: -7.921189785003662
    9. '<|end|>' → logprob: -8.296189308166504
    10. '#' → logprob: -8.421189308166504

Token 175: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9030365943908691
    2. 'parts' → logprob: -1.4030365943908691
    3. ' parts' → logprob: -2.028036594390869
    4. ' if' → logprob: -2.278036594390869
    5. '           ' → logprob: -2.403036594390869
    6. '       ' → logprob: -4.028036594390869
    7. '   ' → logprob: -6.153036594390869
    8. 'j' → logprob: -6.403036594390869
    9. '"""' → logprob: -6.778036594390869
    10. '"' → logprob: -7.903036594390869

Token 176: ' s' (ID: 265)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.3700055778026581
    2. 'if' → logprob: -1.7450056076049805
    3. ' parts' → logprob: -2.1200056076049805
    4. '           ' → logprob: -4.8700056076049805
    5. ' if' → logprob: -5.1200056076049805
    6. 'j' → logprob: -8.24500560760498
    7. '   ' → logprob: -8.24500560760498
    8. 'part' → logprob: -8.62000560760498
    9. '       ' → logprob: -9.62000560760498
    10. 'token' → logprob: -10.49500560760498

Token 177: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.008063067682087421
    2. '[' → logprob: -4.883062839508057
    3. '[j' → logprob: -7.883062839508057
    4. 'i' → logprob: -10.133063316345215
    5. 'parts' → logprob: -10.758063316345215
    6. ' parts' → logprob: -12.383063316345215
    7. '_parts' → logprob: -12.508063316345215
    8. '   ' → logprob: -13.133063316345215
    9. '[I' → logprob: -13.258063316345215
    10. '[
' → logprob: -13.383063316345215

Token 178: '+' (ID: 10)
  Prédit: ':j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':j' → logprob: -0.024549119174480438
    2. '+' → logprob: -3.8995490074157715
    3. ':' → logprob: -5.6495490074157715
    4. ' :' → logprob: -8.27454948425293
    5. ']' → logprob: -9.02454948425293
    6. ' +' → logprob: -9.77454948425293
    7. 'j' → logprob: -11.02454948425293
    8. ',j' → logprob: -11.52454948425293
    9. '   ' → logprob: -11.77454948425293
    10. '+j' → logprob: -12.64954948425293

Token 179: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.500000953674316
    3. '```' → logprob: -16.5
    4. '
' → logprob: -16.75
    5. ':' → logprob: -17.875
    6. ']' → logprob: -17.875
    7. '   ' → logprob: -18.375
    8. '

' → logprob: -18.375
    9. 'i' → logprob: -18.375
    10. 'j' → logprob: -18.875

Token 180: ':j' (ID: 123557)
  Prédit: ':j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':j' → logprob: -0.00026205103495158255
    2. ':' → logprob: -8.250262260437012
    3. ' :' → logprob: -14.375262260437012
    4. ',j' → logprob: -15.625262260437012
    5. ',' → logprob: -18.750261306762695
    6. 'j' → logprob: -18.875261306762695
    7. ';j' → logprob: -19.250261306762695
    8. ':s' → logprob: -19.625261306762695
    9. ':J' → logprob: -19.750261306762695
    10. '	j' → logprob: -19.875261306762695

Token 181: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006388116744346917
    2. ')' → logprob: -8.625638961791992
    3. ']
' → logprob: -9.000638961791992
    4. '"]' → logprob: -9.000638961791992
    5. 'parts' → logprob: -9.750638961791992
    6. '           ' → logprob: -10.125638961791992
    7. ' ]' → logprob: -10.375638961791992
    8. '       ' → logprob: -10.625638961791992
    9. '   ' → logprob: -10.875638961791992
    10. '']' → logprob: -11.500638961791992

Token 182: ' est' (ID: 893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47552213072776794
    2. '           ' → logprob: -1.6005221605300903
    3. '<|end|>' → logprob: -2.600522041320801
    4. ',' → logprob: -3.350522041320801
    5. ' parts' → logprob: -4.100522041320801
    6. '),' → logprob: -4.975522041320801
    7. '<|end|>' → logprob: -5.100522041320801
    8. '       ' → logprob: -5.100522041320801
    9. '.append' → logprob: -5.225522041320801
    10. ']' → logprob: -5.350522041320801

Token 183: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.21091465651988983
    2. 'la' → logprob: -2.2109146118164062
    3. ' une' → logprob: -3.0859146118164062
    4. 's' → logprob: -3.9609146118164062
    5. 'une' → logprob: -4.710914611816406
    6. '"' → logprob: -6.210914611816406
    7. 'the' → logprob: -6.460914611816406
    8. 'le' → logprob: -7.210914611816406
    9. ' s' → logprob: -7.585914611816406
    10. 'l' → logprob: -7.960914611816406

Token 184: ' chaîne' (ID: 89288)
  Prédit: 'cha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cha' → logprob: -1.0552574396133423
    2. 'chaine' → logprob: -1.1802574396133423
    3. ' chaîne' → logprob: -1.1802574396133423
    4. 'part' → logprob: -3.9302573204040527
    5. 'string' → logprob: -4.430257320404053
    6. 'suite' → logprob: -7.180257320404053
    7. ' string' → logprob: -7.555257320404053
    8. 'conten' → logprob: -7.555257320404053
    9. 'substring' → logprob: -7.680257320404053
    10. 's' → logprob: -7.930257320404053

Token 185: ' litt' (ID: 33019)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03778623417019844
    2. '       ' → logprob: -3.7877862453460693
    3. '_literal' → logprob: -6.03778600692749
    4. ' literal' → logprob: -6.28778600692749
    5. 'literal' → logprob: -6.78778600692749
    6. 'token' → logprob: -6.78778600692749
    7. '   ' → logprob: -6.78778600692749
    8. '"' → logprob: -6.78778600692749
    9. '               ' → logprob: -7.28778600692749
    10. '<|end|>' → logprob: -7.53778600692749

Token 186: 'érale' (ID: 98150)
  Prédit: 'érale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érale' → logprob: -0.0006538204033859074
    2. 'rale' → logprob: -7.6256537437438965
    3. 'éral' → logprob: -9.125654220581055
    4. 'éralement' → logprob: -10.625654220581055
    5. 'érales' → logprob: -11.250654220581055
    6. 'ér' → logprob: -12.375654220581055
    7. 'é' → logprob: -12.500654220581055
    8. '"' → logprob: -13.125654220581055
    9. 'éraire' → logprob: -13.500654220581055
    10. 'éra' → logprob: -13.875654220581055

Token 187: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003932594787329435
    2. '       ' → logprob: -5.753932476043701
    3. ',' → logprob: -8.37893295288086
    4. ' parts' → logprob: -8.87893295288086
    5. '<|end|>' → logprob: -8.87893295288086
    6. 'parts' → logprob: -9.12893295288086
    7. '.' → logprob: -10.50393295288086
    8. ')' → logprob: -10.62893295288086
    9. '<|end|>' → logprob: -10.87893295288086
    10. '   ' → logprob: -11.50393295288086

Token 188: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008302362984977663
    2. ' parts' → logprob: -7.875830173492432
    3. 'parts' → logprob: -8.50083065032959
    4. '       ' → logprob: -8.62583065032959
    5. ',' → logprob: -11.00083065032959
    6. '   ' → logprob: -11.25083065032959
    7. 'tokens' → logprob: -11.75083065032959
    8. '
' → logprob: -11.87583065032959
    9. '<|end|>' → logprob: -12.37583065032959
    10. ')' → logprob: -12.50083065032959

Token 189: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' (adapté à ' parts') → logprob: -0.49689367413520813
    2. ' parts' → logprob: -1.1218936443328857
    3. '           ' → logprob: -2.7468936443328857
    4. '       ' → logprob: -6.621893882751465
    5. '   ' → logprob: -8.121893882751465
    6. 'tokens' → logprob: -10.121893882751465
    7. 'part' → logprob: -10.746893882751465
    8. '(parts' → logprob: -10.871893882751465
    9. '_parts' → logprob: -11.371893882751465
    10. 'if' → logprob: -11.621893882751465

Token 190: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0001830410328693688
    2. '.' → logprob: -8.62518310546875
    3. '.app' → logprob: -13.62518310546875
    4. '.extend' → logprob: -13.75018310546875
    5. '.ap' → logprob: -14.25018310546875
    6. '.Append' → logprob: -16.12518310546875
    7. '.push' → logprob: -16.37518310546875
    8. ' .' → logprob: -16.37518310546875
    9. 'append' → logprob: -16.62518310546875
    10. '.add' → logprob: -16.75018310546875

Token 191: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0007171963807195425
    2. '(' → logprob: -7.2507171630859375
    3. 's' → logprob: -11.875717163085938
    4. ' (' → logprob: -16.250717163085938
    5. '('' → logprob: -16.625717163085938
    6. '(
' → logprob: -16.625717163085938
    7. '((' → logprob: -17.375717163085938
    8. '("' → logprob: -18.875717163085938
    9. ' s' → logprob: -18.875717163085938
    10. '(S' → logprob: -19.250717163085938

Token 192: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.7159857786027715e-05
    2. 'i' → logprob: -10.250046730041504
    3. '[' → logprob: -11.375046730041504
    4. '[j' → logprob: -15.750046730041504
    5. '[
' → logprob: -16.37504768371582
    6. '[I' → logprob: -16.87504768371582
    7. '(i' → logprob: -17.00004768371582
    8. 's' → logprob: -17.37504768371582
    9. ' i' → logprob: -17.87504768371582
    10. ' [' → logprob: -18.12504768371582

Token 193: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.9795445849886164e-05
    2. ' +' → logprob: -9.875060081481934
    3. '+j' → logprob: -12.250060081481934
    4. '1' → logprob: -13.125060081481934
    5. ':j' → logprob: -13.750060081481934
    6. '+
' → logprob: -15.625060081481934
    7. '+"' → logprob: -17.250059127807617
    8. 'j' → logprob: -17.500059127807617
    9. ']+' → logprob: -17.625059127807617
    10. '+i' → logprob: -17.750059127807617

Token 194: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.500003814697266
    3. '```' → logprob: -16.562503814697266
    4. '   ' → logprob: -16.625003814697266
    5. '-' → logprob: -16.875003814697266
    6. '0' → logprob: -17.125003814697266
    7. '           ' → logprob: -17.750003814697266
    8. '2' → logprob: -17.937503814697266
    9. '+' → logprob: -17.937503814697266
    10. '１' → logprob: -18.500003814697266

Token 195: ':j' (ID: 123557)
  Prédit: ':j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':j' → logprob: -0.0008106979075819254
    2. ':' → logprob: -7.125810623168945
    3. ' :' → logprob: -12.125810623168945
    4. 'j' → logprob: -15.000810623168945
    5. ':]' → logprob: -15.000810623168945
    6. ':i' → logprob: -16.500810623168945
    7. ',j' → logprob: -17.000810623168945
    8. '[j' → logprob: -18.000810623168945
    9. '	j' → logprob: -18.125810623168945
    10. ' ' → logprob: -18.125810623168945

Token 196: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.006068033166229725
    2. '])
' → logprob: -5.131068229675293
    3. ']' → logprob: -9.756068229675293
    4. '"])' → logprob: -10.006068229675293
    5. ')' → logprob: -10.756068229675293
    6. '")' → logprob: -12.506068229675293
    7. '])

' → logprob: -12.631068229675293
    8. '])
' → logprob: -12.756068229675293
    9. ')
' → logprob: -13.006068229675293
    10. ''])' → logprob: -14.131068229675293

Token 197: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004663065075874329
    2. 'i' → logprob: -5.879662990570068
    3. '
' → logprob: -7.004662990570068
    4. '            
' → logprob: -7.754662990570068
    5. ' i' → logprob: -8.379663467407227
    6. '       ' → logprob: -9.254663467407227
    7. '<|end|>' → logprob: -9.879663467407227
    8. '<|end|>' → logprob: -10.629663467407227
    9. '   ' → logprob: -11.004663467407227
    10. '    
' → logprob: -11.129663467407227

Token 198: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.23657174408435822
    2. '           ' → logprob: -1.6115717887878418
    3. ' i' → logprob: -4.611571788787842
    4. '
' → logprob: -7.486571788787842
    5. '            
' → logprob: -7.861571788787842
    6. '	i' → logprob: -10.111571311950684
    7. '       ' → logprob: -10.361571311950684
    8. '   ' → logprob: -10.486571311950684
    9. '```' → logprob: -10.861571311950684
    10. 'j' → logprob: -11.111571311950684

Token 199: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01416350994259119
    2. ' =' → logprob: -4.264163494110107
    3. '=j' → logprob: -18.014163970947266
    4. '=
' → logprob: -19.139163970947266
    5. '＝' → logprob: -19.764163970947266
    6. '.=' → logprob: -19.889163970947266
    7. '=}' → logprob: -20.139163970947266
    8. '=

' → logprob: -20.264163970947266
    9. ' ' → logprob: -20.514163970947266
    10. 's' → logprob: -21.014163970947266

Token 200: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0019286326132714748
    2. ' j' → logprob: -6.251928806304932
    3. '	j' → logprob: -19.501928329467773
    4. '$j' → logprob: -20.626928329467773
    5. '   ' → logprob: -20.751928329467773
    6. '=j' → logprob: -22.251928329467773
    7. '[j' → logprob: -22.376928329467773
    8. '(j' → logprob: -23.001928329467773
    9. ' ' → logprob: -23.501928329467773
    10. ':j' → logprob: -23.876928329467773

Token 201: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20141403377056122
    2. ' +' → logprob: -1.7014139890670776
    3. '+i' → logprob: -14.701414108276367
    4. '+
' → logprob: -15.951414108276367
    5. '       ' → logprob: -16.451414108276367
    6. ' +
' → logprob: -17.076414108276367
    7. '           ' → logprob: -17.326414108276367
    8. '   ' → logprob: -17.451414108276367
    9. ' plus' → logprob: -17.826414108276367
    10. '＋' → logprob: -18.326414108276367

Token 202: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '```' → logprob: -19.5
    4. '0' → logprob: -20.375
    5. '   ' → logprob: -21.875
    6. '
' → logprob: -23.125
    7. '۱' → logprob: -23.375
    8. '１' → logprob: -24.375
    9. '...' → logprob: -24.5
    10. '#' → logprob: -24.5

Token 203: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '```' → logprob: -18.5
    4. '0' → logprob: -19.625
    5. '   ' → logprob: -22.375
    6. '۱' → logprob: -22.75
    7. '``' → logprob: -23.0
    8. '１' → logprob: -23.375
    9. '`' → logprob: -23.375
    10. '-' → logprob: -24.1875

Token 204: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016311772167682648
    2. 'else' → logprob: -4.2663116455078125
    3. 'elif' → logprob: -6.2663116455078125
    4. ' else' → logprob: -8.516311645507812
    5. ')' → logprob: -11.766311645507812
    6. ' elif' → logprob: -11.766311645507812
    7. 'continue' → logprob: -11.891311645507812
    8. '   ' → logprob: -12.266311645507812
    9. '           ' → logprob: -12.266311645507812
    10. '<|end|>' → logprob: -12.641311645507812

Token 205: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02453586645424366
    2. 'else' → logprob: -3.899535894393921
    3. 'elif' → logprob: -5.649535655975342
    4. ' else' → logprob: -7.774535655975342
    5. ' elif' → logprob: -10.8995361328125
    6. '   ' → logprob: -11.1495361328125
    7. '```' → logprob: -12.5245361328125
    8. '           ' → logprob: -12.7745361328125
    9. ')' → logprob: -13.2745361328125
    10. 'continue' → logprob: -13.3995361328125

Token 206: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.013614722527563572
    2. '       ' → logprob: -4.513614654541016
    3. ' else' → logprob: -6.013614654541016
    4. 'elif' → logprob: -9.138614654541016
    5. '   ' → logprob: -11.638614654541016
    6. '	else' → logprob: -13.263614654541016
    7. ' elif' → logprob: -16.013614654541016
    8. '```' → logprob: -16.888614654541016
    9. 'elses' → logprob: -17.013614654541016
    10. '_else' → logprob: -17.388614654541016

Token 207: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02556709758937359
    2. ':
' → logprob: -4.025567054748535
    3. '       ' → logprob: -5.025567054748535
    4. ' :' → logprob: -7.650567054748535
    5. '           ' → logprob: -8.650567054748535
    6. '   ' → logprob: -9.150567054748535
    7. ' :
' → logprob: -10.150567054748535
    8. ',' → logprob: -12.400567054748535
    9. '):
' → logprob: -12.775567054748535
    10. '=' → logprob: -12.775567054748535

Token 208: '           ' (ID: 352)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5754097700119019
    2. '       ' → logprob: -1.3254097700119019
    3. 'start' → logprob: -1.8254097700119019
    4. '           ' → logprob: -5.325409889221191
    5. ' j' → logprob: -5.950409889221191
    6. '   ' → logprob: -6.325409889221191
    7. ' start' → logprob: -6.950409889221191
    8. 'next' → logprob: -8.950409889221191
    9. '#' → logprob: -9.075409889221191
    10. 'k' → logprob: -10.075409889221191

Token 209: ' #' (ID: 1069)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.002212346764281392
    2. 'start' → logprob: -6.2522125244140625
    3. '           ' → logprob: -8.752212524414062
    4. ' j' → logprob: -9.002212524414062
    5. ' start' → logprob: -13.877212524414062
    6. '   ' → logprob: -14.377212524414062
    7. 'k' → logprob: -14.877212524414062
    8. '       ' → logprob: -15.502212524414062
    9. '#' (adapté à ' #') → logprob: -15.627212524414062
    10. '	j' → logprob: -16.377212524414062

Token 210: ' code' (ID: 3490)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0007425647345371544
    2. 'start' → logprob: -7.500742435455322
    3. ' j' → logprob: -8.62574291229248
    4. '   ' → logprob: -12.37574291229248
    5. ' start' → logprob: -12.87574291229248
    6. '#' → logprob: -13.12574291229248
    7. ' ' → logprob: -14.12574291229248
    8. '       ' → logprob: -15.62574291229248
    9. '	j' → logprob: -16.000741958618164
    10. '  ' → logprob: -16.250741958618164

Token 211: ' hors' (ID: 26087)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.6480980515480042
    2. '_start' → logprob: -0.7730980515480042
    3. '           ' → logprob: -5.398097991943359
    4. 'j' → logprob: -5.398097991943359
    5. '_end' → logprob: -6.648097991943359
    6. '   ' → logprob: -6.773097991943359
    7. ' start' → logprob: -6.773097991943359
    8. '       ' → logprob: -6.773097991943359
    9. 'end' → logprob: -7.398097991943359
    10. '_j' → logprob: -8.64809799194336

Token 212: ' gu' (ID: 1704)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.022598039358854294
    2. 'gu' → logprob: -4.6475982666015625
    3. 'des' → logprob: -5.0225982666015625
    4. ' gu' → logprob: -5.5225982666015625
    5. 'quotes' → logprob: -7.2725982666015625
    6. ' des' → logprob: -7.5225982666015625
    7. '"' → logprob: -7.7725982666015625
    8. 's' → logprob: -9.397598266601562
    9. 'de' → logprob: -9.397598266601562
    10. '_quotes' → logprob: -9.522598266601562

Token 213: 'ille' (ID: 3301)
  Prédit: 'ille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ille' → logprob: -0.8521150350570679
    2. 'ile' → logprob: -0.9771150350570679
    3. 'il' → logprob: -1.9771150350570679
    4. 'i' → logprob: -3.7271151542663574
    5. 'ettes' → logprob: -4.102115154266357
    6. 'ic' → logprob: -5.227115154266357
    7. 'ets' → logprob: -6.352115154266357
    8. '"' → logprob: -6.352115154266357
    9. 'illes' → logprob: -6.602115154266357
    10. 'iet' → logprob: -7.102115154266357

Token 214: 'mets' (ID: 153788)
  Prédit: 'mets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mets' → logprob: -0.0030372515320777893
    2. 'met' → logprob: -6.503037452697754
    3. 'ets' → logprob: -6.753037452697754
    4. 'ts' → logprob: -8.003037452697754
    5. 't' → logprob: -11.128037452697754
    6. 'lets' → logprob: -11.628037452697754
    7. 'm' → logprob: -12.628037452697754
    8. 'chets' → logprob: -13.753037452697754
    9. 'pets' → logprob: -14.128037452697754
    10. 'rets' → logprob: -14.128037452697754

Token 215: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05070476233959198
    2. 'j' → logprob: -3.3007047176361084
    3. 'start' → logprob: -5.4257049560546875
    4. ' j' → logprob: -5.6757049560546875
    5. '       ' → logprob: -5.9257049560546875
    6. ',' → logprob: -7.0507049560546875
    7. '   ' → logprob: -7.9257049560546875
    8. ' start' → logprob: -8.050704956054688
    9. '            
' → logprob: -8.550704956054688
    10. ',j' → logprob: -9.300704956054688

Token 216: '           ' (ID: 352)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.21676647663116455
    2. '           ' → logprob: -1.7167664766311646
    3. 'start' → logprob: -4.591766357421875
    4. ' j' → logprob: -5.591766357421875
    5. '   ' → logprob: -7.341766357421875
    6. '       ' → logprob: -7.466766357421875
    7. ' start' → logprob: -9.341766357421875
    8. '	j' → logprob: -11.216766357421875
    9. '          ' → logprob: -11.341766357421875
    10. '```' → logprob: -11.841766357421875

Token 217: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.00013047587708570063
    2. 'start' → logprob: -9.375130653381348
    3. ' j' → logprob: -10.000130653381348
    4. '	j' → logprob: -16.00012969970703
    5. '   ' → logprob: -16.75012969970703
    6. 'k' → logprob: -17.25012969970703
    7. ' start' → logprob: -17.87512969970703
    8. ' ' → logprob: -18.12512969970703
    9. 'next' → logprob: -19.50012969970703
    10. '
' → logprob: -19.50012969970703

Token 218: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0788913294672966
    2. '=' → logprob: -2.5788912773132324
    3. '=i' → logprob: -13.45389175415039
    4. '=j' → logprob: -16.57889175415039
    5. ' ' → logprob: -17.20389175415039
    6. ')' → logprob: -17.95389175415039
    7. '=s' → logprob: -18.07889175415039
    8. ' =
' → logprob: -18.20389175415039
    9. '=int' → logprob: -18.32889175415039
    10. '   ' → logprob: -18.57889175415039

Token 219: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004078401252627373
    2. ' i' → logprob: -5.504078388214111
    3. '	i' → logprob: -17.629077911376953
    4. '   ' → logprob: -17.754077911376953
    5. ' ' → logprob: -18.754077911376953
    6. 's' → logprob: -19.504077911376953
    7. ')i' → logprob: -21.254077911376953
    8. '<|end|>' → logprob: -21.379077911376953
    9. '0' → logprob: -21.504077911376953
    10. '_i' → logprob: -21.754077911376953

Token 220: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11571457237005234
    2. 'while' → logprob: -2.9907145500183105
    3. ' +' → logprob: -2.9907145500183105
    4. '
' → logprob: -5.3657145500183105
    5. ' while' → logprob: -5.6157145500183105
    6. '<|end|>' → logprob: -9.365715026855469
    7. ' ' → logprob: -9.490715026855469
    8. '           ' → logprob: -9.490715026855469
    9. '   ' → logprob: -10.115715026855469
    10. '+
' → logprob: -10.490715026855469

Token 221: '           ' (ID: 352)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.15604007244110107
    2. ' while' → logprob: -2.1560401916503906
    3. '           ' → logprob: -4.281040191650391
    4. '       ' → logprob: -4.406040191650391
    5. '	while' → logprob: -6.906040191650391
    6. '+' → logprob: -7.281040191650391
    7. '   ' → logprob: -8.15604019165039
    8. '
' → logprob: -8.28104019165039
    9. '<|end|>' → logprob: -8.53104019165039
    10. '<|end|>' → logprob: -10.03104019165039

Token 222: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.07893738150596619
    2. ' while' → logprob: -2.578937292098999
    3. '           ' → logprob: -10.078937530517578
    4. '	while' → logprob: -12.703937530517578
    5. 'j' → logprob: -13.703937530517578
    6. 'While' → logprob: -14.328937530517578
    7. ' j' → logprob: -15.078937530517578
    8. '       ' → logprob: -15.578937530517578
    9. '            ' → logprob: -15.703937530517578
    10. '
' → logprob: -15.953937530517578

Token 223: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3132627606391907
    2. ' j' → logprob: -1.313262701034546
    3. '   ' → logprob: -14.688262939453125
    4. '	j' → logprob: -14.688262939453125
    5. ' ' → logprob: -16.688262939453125
    6. '$j' → logprob: -17.188262939453125
    7. '(j' → logprob: -17.938262939453125
    8. '  ' → logprob: -18.188262939453125
    9. '    ' → logprob: -18.438262939453125
    10. ' ' → logprob: -18.813262939453125

Token 224: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.20173335075378418
    2. '<' → logprob: -1.7017333507537842
    3. '<n' → logprob: -8.076733589172363
    4. '<len' → logprob: -11.701733589172363
    5. '<s' → logprob: -15.326733589172363
    6. '<size' → logprob: -15.451733589172363
    7. '<m' → logprob: -15.701733589172363
    8. '<class' → logprob: -15.701733589172363
    9. '<N' → logprob: -15.951733589172363
    10. '<int' → logprob: -16.826732635498047

Token 225: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0485873706638813
    2. ' n' → logprob: -3.0485873222351074
    3. '	n' → logprob: -19.423587799072266
    4. 'len' → logprob: -20.423587799072266
    5. '
' → logprob: -20.673587799072266
    6. '_n' → logprob: -20.798587799072266
    7. ' ' → logprob: -21.298587799072266
    8. ' len' → logprob: -21.798587799072266
    9. ')n' → logprob: -21.798587799072266
    10. '   ' → logprob: -22.798587799072266

Token 226: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1269284337759018
    2. 'and' → logprob: -2.1269283294677734
    3. ' ' → logprob: -15.876928329467773
    4. '   ' → logprob: -16.001928329467773
    5. '           ' → logprob: -17.626928329467773
    6. '    ' → logprob: -17.751928329467773
    7. ' и' → logprob: -17.876928329467773
    8. '	and' → logprob: -18.001928329467773
    9. '  ' → logprob: -18.501928329467773
    10. 'not' → logprob: -18.626928329467773

Token 227: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12692968547344208
    2. ' s' → logprob: -2.126929759979248
    3. '   ' → logprob: -13.75192928314209
    4. '(s' → logprob: -15.00192928314209
    5. ' ' → logprob: -16.501930236816406
    6. '_s' → logprob: -16.751930236816406
    7. ' ' → logprob: -17.876930236816406
    8. 'not' → logprob: -18.001930236816406
    9. '<s' → logprob: -18.001930236816406
    10. '	s' → logprob: -18.126930236816406

Token 228: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.2664456789934775e-06
    2. '[i' → logprob: -13.625000953674316
    3. 'j' → logprob: -17.250001907348633
    4. '[' → logprob: -18.000001907348633
    5. '[
' → logprob: -18.750001907348633
    6. '```' → logprob: -19.125001907348633
    7. '[...]' → logprob: -20.375001907348633
    8. '
' → logprob: -20.375001907348633
    9. '   ' → logprob: -21.000001907348633
    10. '...' → logprob: -21.250001907348633

Token 229: ']' (ID: 60)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.09205891191959381
    2. '!=' → logprob: -2.4670588970184326
    3. ' not' → logprob: -5.842059135437012
    4. 'not' → logprob: -9.592059135437012
    5. '!='' → logprob: -9.717059135437012
    6. ']' → logprob: -10.342059135437012
    7. ']!=' → logprob: -10.967059135437012
    8. ')!=' → logprob: -11.467059135437012
    9. ')' → logprob: -11.717059135437012
    10. '!="' → logprob: -12.467059135437012

Token 230: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.16057728230953217
    2. '!=' → logprob: -1.9105772972106934
    3. ' not' → logprob: -8.160576820373535
    4. '!='' → logprob: -10.035576820373535
    5. '!="' → logprob: -11.410576820373535
    6. 'not' → logprob: -12.035576820373535
    7. '!' → logprob: -12.410576820373535
    8. '!==' → logprob: -14.285576820373535
    9. ' !' → logprob: -14.910576820373535
    10. '"' → logprob: -15.535576820373535

Token 231: ' '"' (ID: 15197)
  Prédit: ''"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''"' → logprob: -0.00523612555116415
    2. '"' → logprob: -5.2552361488342285
    3. ' '"'' → logprob: -14.00523567199707
    4. ' '"' → logprob: -14.13023567199707
    5. '""' → logprob: -14.88023567199707
    6. ''' → logprob: -15.25523567199707
    7. '"""' → logprob: -15.88023567199707
    8. '"'' → logprob: -17.25523567199707
    9. '""""' → logprob: -17.75523567199707
    10. '''' → logprob: -18.00523567199707

Token 232: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5889125466346741
    2. ' and' → logprob: -1.0889124870300293
    3. ':' → logprob: -2.5889124870300293
    4. 'and' → logprob: -3.7139124870300293
    5. 'j' → logprob: -5.463912487030029
    6. '   ' → logprob: -6.088912487030029
    7. '):
' → logprob: -7.088912487030029
    8. '           ' → logprob: -7.713912487030029
    9. '       ' → logprob: -8.213912963867188
    10. ')' → logprob: -8.588912963867188

Token 233: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4597916901111603
    2. 'j' → logprob: -1.334791660308838
    3. '           ' → logprob: -2.584791660308838
    4. ' j' → logprob: -4.209791660308838
    5. '   ' → logprob: -4.584791660308838
    6. ' and' → logprob: -5.584791660308838
    7. '	           ' → logprob: -8.334792137145996
    8. '	j' → logprob: -8.459792137145996
    9. '	       ' → logprob: -9.084792137145996
    10. 'and' → logprob: -9.209792137145996

Token 234: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -4.584861744660884e-05
    2. ' j' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.125045776367188
    4. '	j' → logprob: -15.875045776367188
    5. '           ' → logprob: -18.500045776367188
    6. ' ' → logprob: -19.250045776367188
    7. '
' → logprob: -19.875045776367188
    8. '       ' → logprob: -19.875045776367188
    9. '               ' → logprob: -19.875045776367188
    10. '  ' → logprob: -21.250045776367188

Token 235: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.474274218082428
    2. ' +=' → logprob: -0.974274218082428
    3. '+' → logprob: -8.724274635314941
    4. '=' → logprob: -11.349274635314941
    5. '               ' → logprob: -12.349274635314941
    6. '                ' → logprob: -12.349274635314941
    7. '            ' → logprob: -12.599274635314941
    8. '           ' → logprob: -12.849274635314941
    9. ')' → logprob: -13.224274635314941
    10. ']+=' → logprob: -13.474274635314941

Token 236: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06196824833750725
    2. ' ' → logprob: -2.8119683265686035
    3. ' ' → logprob: -16.061967849731445
    4. '```' → logprob: -16.061967849731445
    5. '   ' → logprob: -16.311967849731445
    6. '<|end|>' → logprob: -16.811967849731445
    7. '0' → logprob: -17.186967849731445
    8. '
' → logprob: -17.999467849731445
    9. '  ' → logprob: -18.311967849731445
    10. ')' → logprob: -18.374467849731445

Token 237: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -19.250036239624023
    4. '```' → logprob: -19.375036239624023
    5. '
' → logprob: -19.875036239624023
    6. '0' → logprob: -20.500036239624023
    7. '  ' → logprob: -21.625036239624023
    8. '１' → logprob: -22.000036239624023
    9. '۱' → logprob: -22.062536239624023
    10. ')' → logprob: -22.125036239624023

Token 238: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6516213417053223
    2. 'parts' → logprob: -1.5266213417053223
    3. '       ' → logprob: -1.7766213417053223
    4. ' parts' → logprob: -2.4016213417053223
    5. '
' → logprob: -6.901621341705322
    6. '   ' → logprob: -7.526621341705322
    7. '               ' → logprob: -9.901620864868164
    8. '          ' → logprob: -10.651620864868164
    9. '```' → logprob: -11.026620864868164
    10. 'if' → logprob: -11.151620864868164

Token 239: '           ' (ID: 352)
  Prédit: ' parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.9736850261688232
    2. 'parts' → logprob: -1.0986850261688232
    3. '           ' → logprob: -1.7236850261688232
    4. '       ' → logprob: -2.2236850261688232
    5. '   ' → logprob: -6.098685264587402
    6. '(parts' → logprob: -10.223685264587402
    7. '```' → logprob: -10.848685264587402
    8. 'part' → logprob: -11.473685264587402
    9. '               ' → logprob: -11.473685264587402
    10. 'if' → logprob: -11.723685264587402

Token 240: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' (adapté à ' parts') → logprob: -0.004951477516442537
    2. ' parts' → logprob: -5.379951477050781
    3. '           ' → logprob: -8.629951477050781
    4. 'if' → logprob: -8.879951477050781
    5. 'part' → logprob: -11.754951477050781
    6. ' if' → logprob: -13.629951477050781
    7. '   ' → logprob: -13.754951477050781
    8. 'code' → logprob: -14.129951477050781
    9. '(parts' → logprob: -14.129951477050781
    10. '_parts' → logprob: -14.629951477050781

Token 241: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00018077615823131055
    2. '.' → logprob: -9.375181198120117
    3. 'append' → logprob: -9.375181198120117
    4. '.app' → logprob: -12.250181198120117
    5. '.Append' → logprob: -12.375181198120117
    6. 'Append' → logprob: -13.625181198120117
    7. ' append' → logprob: -15.375181198120117
    8. '_append' → logprob: -15.375181198120117
    9. ' .' → logprob: -16.125181198120117
    10. '.extend' → logprob: -16.250181198120117

Token 242: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -4.7755875129951164e-05
    2. 's' → logprob: -10.00004768371582
    3. '(' → logprob: -13.00004768371582
    4. ' (' → logprob: -19.25004768371582
    5. '(
' → logprob: -19.50004768371582
    6. ' s' → logprob: -22.12504768371582
    7. '('' → logprob: -22.25004768371582
    8. '((' → logprob: -22.25004768371582
    9. '```' → logprob: -24.12504768371582
    10. '(S' → logprob: -24.25004768371582

Token 243: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -14.750000953674316
    3. 'i' → logprob: -16.75
    4. '[j' → logprob: -17.625
    5. '[s' → logprob: -17.75
    6. '[I' → logprob: -17.875
    7. '[:' → logprob: -18.375
    8. '```' → logprob: -18.75
    9. '[a' → logprob: -19.25
    10. 's' → logprob: -19.375

Token 244: ':j' (ID: 123557)
  Prédit: ':j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':j' → logprob: -3.643152740551159e-05
    2. 'j' → logprob: -10.375036239624023
    3. ':' → logprob: -12.500036239624023
    4. '	j' → logprob: -14.875036239624023
    5. '[j' → logprob: -15.000036239624023
    6. ',j' → logprob: -15.375036239624023
    7. ' j' → logprob: -15.625036239624023
    8. ';j' → logprob: -15.625036239624023
    9. '=j' → logprob: -16.375036239624023
    10. ' :' → logprob: -16.625036239624023

Token 245: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.062167104333639145
    2. '])' → logprob: -2.812167167663574
    3. ' )' → logprob: -9.062167167663574
    4. ']' → logprob: -9.812167167663574
    5. '))' → logprob: -11.187167167663574
    6. ')
' → logprob: -12.187167167663574
    7. ' ])' → logprob: -12.437167167663574
    8. ')]' → logprob: -12.812167167663574
    9. ''])' → logprob: -14.062167167663574
    10. ')])' → logprob: -14.687167167663574

Token 246: '           ' (ID: 352)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2568548619747162
    2. '   ' → logprob: -2.131854772567749
    3. ' i' → logprob: -2.256854772567749
    4. '       ' → logprob: -6.506855010986328
    5. '	i' → logprob: -6.756855010986328
    6. '           ' → logprob: -8.256855010986328
    7. '    
' → logprob: -9.381855010986328
    8. '    ' → logprob: -9.506855010986328
    9. '_i' → logprob: -10.006855010986328
    10. '  ' → logprob: -10.631855010986328

Token 247: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.006740119773894548
    2. ' i' → logprob: -5.006740093231201
    3. ' 
' → logprob: -11.25674057006836
    4. '
' → logprob: -11.75674057006836
    5. '   ' → logprob: -13.25674057006836
    6. '	i' → logprob: -13.63174057006836
    7. ' ' → logprob: -15.00674057006836
    8. '    
' → logprob: -15.38174057006836
    9. '_i' → logprob: -15.63174057006836
    10. '[i' → logprob: -16.13174057006836

Token 248: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019308974733576179
    2. ' =' → logprob: -6.2519307136535645
    3. '=j' → logprob: -13.001931190490723
    4. '=
' → logprob: -17.001930236816406
    5. '+=' → logprob: -19.126930236816406
    6. '＝' → logprob: -20.501930236816406
    7. '=}' → logprob: -20.501930236816406
    8. ' +=' → logprob: -20.876930236816406
    9. '=

' → logprob: -21.001930236816406
    10. ' =
' → logprob: -21.376930236816406

Token 249: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00861456897109747
    2. ' j' → logprob: -4.758614540100098
    3. '	j' → logprob: -18.758615493774414
    4. '   ' → logprob: -20.133615493774414
    5. '$j' → logprob: -20.133615493774414
    6. ' ' → logprob: -21.133615493774414
    7. '    ' → logprob: -21.758615493774414
    8. ' ' → logprob: -22.758615493774414
    9. '=j' → logprob: -23.008615493774414
    10. '```' → logprob: -23.008615493774414

Token 250: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4996850788593292
    2. '   ' → logprob: -1.1246850490570068
    3. 'return' → logprob: -3.249685049057007
    4. '<|end|>' → logprob: -3.999685049057007
    5. ' return' → logprob: -5.749685287475586
    6. '    
' → logprob: -5.999685287475586
    7. '	return' → logprob: -6.124685287475586
    8. '  
' → logprob: -6.874685287475586
    9. ' ' → logprob: -6.874685287475586
    10. ' 
' → logprob: -8.374685287475586

Token 251: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.060858163982629776
    2. 'return' → logprob: -3.0608582496643066
    3. '<|end|>' → logprob: -5.560858249664307
    4. '
' → logprob: -5.810858249664307
    5. '	return' → logprob: -5.810858249664307
    6. ' return' → logprob: -6.685858249664307
    7. '    
' → logprob: -7.935858249664307
    8. '```' → logprob: -8.185857772827148
    9. '[' → logprob: -8.935857772827148
    10. ' ' → logprob: -9.185857772827148

Token 252: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16033491492271423
    2. 'return' (adapté à ' return') → logprob: -1.9103349447250366
    3. ' return' → logprob: -9.160334587097168
    4. '	return' → logprob: -12.535334587097168
    5. ':return' → logprob: -14.160334587097168
    6. '```' → logprob: -14.410334587097168
    7. '       ' → logprob: -15.535334587097168
    8. '    
' → logprob: -15.535334587097168
    9. '@return' → logprob: -16.535335540771484
    10. ' ' → logprob: -16.785335540771484

Token 253: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.014163863845169544
    2. ' parts' → logprob: -4.264163970947266
    3. '(parts' → logprob: -15.264163970947266
    4. '_parts' → logprob: -18.139163970947266
    5. 'part' → logprob: -18.139163970947266
    6. ' ' → logprob: -18.264163970947266
    7. '```' → logprob: -18.639163970947266
    8. 'points' → logprob: -18.889163970947266
    9. 'pieces' → logprob: -18.889163970947266
    10. '[' → logprob: -18.889163970947266

Token 254: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 255: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0096532106399536
    2. '<|end|>' → logprob: -1.2596532106399536
    3. '
' → logprob: -2.259653091430664
    4. '[' → logprob: -2.384653091430664
    5. '```' → logprob: -2.884653091430664
    6. ' ' → logprob: -3.759653091430664
    7. '\n' → logprob: -4.009653091430664
    8. 'def' → logprob: -4.134653091430664
    9. '\' → logprob: -5.259653091430664
    10. '<|end|>' → logprob: -5.259653091430664

Token 256: ' judge' (ID: 23319)
  Prédit: ' split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' split' → logprob: -0.6911885738372803
    2. ' parse' → logprob: -1.0661885738372803
    3. 'split' → logprob: -3.6911885738372803
    4. ' process' → logprob: -3.9411885738372803
    5. ' tokenize' → logprob: -3.9411885738372803
    6. ' solve' → logprob: -4.316188812255859
    7. ' join' → logprob: -4.441188812255859
    8. ' test' → logprob: -4.441188812255859
    9. ' main' → logprob: -4.816188812255859
    10. ' extract' → logprob: -4.941188812255859

Token 257: '_program' (ID: 58929)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6261980533599854
    2. '_' → logprob: -1.0011980533599854
    3. '_program' → logprob: -3.3761980533599854
    4. '_code' → logprob: -3.8761980533599854
    5. 'def' → logprob: -4.376197814941406
    6. '(s' → logprob: -4.626197814941406
    7. '_split' → logprob: -6.501197814941406
    8. 's' → logprob: -6.626197814941406
    9. '_pro' → logprob: -6.751197814941406
    10. '_case' → logprob: -6.876197814941406

Token 258: 's' (ID: 82)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16112078726291656
    2. '(s' → logprob: -1.9111207723617554
    3. '(p' → logprob: -7.911120891571045
    4. ' (' → logprob: -8.536120414733887
    5. '_' → logprob: -9.411120414733887
    6. '(program' → logprob: -9.911120414733887
    7. 's' → logprob: -10.036120414733887
    8. '(pro' → logprob: -10.786120414733887
    9. '(a' → logprob: -11.161120414733887
    10. '(code' → logprob: -11.411120414733887

Token 259: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6408892869949341
    2. '(s' → logprob: -1.015889286994934
    3. '(p' → logprob: -3.0158891677856445
    4. '(program' → logprob: -3.3908891677856445
    5. '(pro' → logprob: -4.0158891677856445
    6. ' (' → logprob: -5.6408891677856445
    7. '(pl' → logprob: -6.7658891677856445
    8. '(strings' → logprob: -7.2658891677856445
    9. '(ps' → logprob: -7.6408891677856445
    10. '(ls' → logprob: -7.8908891677856445

Token 260: '1' (ID: 16)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22803610563278198
    2. '1' → logprob: -1.8530361652374268
    3. 's' → logprob: -3.4780361652374268
    4. ',' → logprob: -4.728035926818848
    5. ')' → logprob: -5.478035926818848
    6. '_list' → logprob: -6.603035926818848
    7. '):
' → logprob: -6.978035926818848
    8. ' ):' → logprob: -8.353035926818848
    9. 'a' → logprob: -8.978035926818848
    10. '_' → logprob: -9.228035926818848

Token 261: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011299749603495002
    2. ',s' → logprob: -6.876130104064941
    3. ' ,' → logprob: -9.376130104064941
    4. 's' → logprob: -11.501130104064941
    5. '):' → logprob: -13.876130104064941
    6. '_,' → logprob: -14.751130104064941
    7. '1' → logprob: -14.876130104064941
    8. ',p' → logprob: -15.251130104064941
    9. ',
' → logprob: -16.001129150390625
    10. ')' → logprob: -16.501129150390625

Token 262: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08894187211990356
    2. ' s' → logprob: -2.463941812515259
    3. '   ' → logprob: -13.46394157409668
    4. 'def' → logprob: -15.21394157409668
    5. ')' → logprob: -15.33894157409668
    6. ' ' → logprob: -15.83894157409668
    7. 't' → logprob: -16.65144157409668
    8. '    ' → logprob: -16.77644157409668
    9. '_s' → logprob: -17.21394157409668
    10. '  ' → logprob: -17.27644157409668

Token 263: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008783798664808273
    2. ',' → logprob: -5.13378381729126
    3. '1' → logprob: -5.88378381729126
    4. 's' → logprob: -9.883783340454102
    5. ' ,' → logprob: -12.758783340454102
    6. ' ' → logprob: -12.883783340454102
    7. ')' → logprob: -13.008783340454102
    8. ',s' → logprob: -13.008783340454102
    9. '₂' → logprob: -13.883783340454102
    10. '_' → logprob: -14.008783340454102

Token 264: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004583135014399886
    2. '):
' → logprob: -7.875458240509033
    3. ' ):' → logprob: -10.500458717346191
    4. ')' → logprob: -10.750458717346191
    5. ',' → logprob: -10.750458717346191
    6. '):
' → logprob: -12.500458717346191
    7. ':' → logprob: -12.875458717346191
    8. '):

' → logprob: -14.375458717346191
    9. 's' → logprob: -15.125458717346191
    10. '   ' → logprob: -15.500458717346191

Token 265: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.059769004583358765
    2. '
' → logprob: -3.6847689151763916
    3. ' parts' → logprob: -4.809769153594971
    4. 'def' → logprob: -5.434769153594971
    5. 'parts' → logprob: -5.559769153594971
    6. 's' → logprob: -5.684769153594971
    7. 'p' → logprob: -6.059769153594971
    8. '    
' → logprob: -6.434769153594971
    9. '#' → logprob: -6.559769153594971
    10. ' p' → logprob: -6.559769153594971

Token 266: ' """
' (ID: 7037)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.025485413148999214
    2. '   ' → logprob: -4.650485515594482
    3. 'parts' → logprob: -4.650485515594482
    4. 's' → logprob: -5.900485515594482
    5. 'a' → logprob: -7.400485515594482
    6. ' p' → logprob: -7.525485515594482
    7. 'code' → logprob: -7.650485515594482
    8. 'ps' → logprob: -7.900485515594482
    9. 'tokens' → logprob: -8.025485038757324
    10. 'l' → logprob: -8.650485038757324

Token 267: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6201185584068298
    2. 'p' → logprob: -1.9951186180114746
    3. 's' → logprob: -2.4951186180114746
    4. ' """
' → logprob: -2.8701186180114746
    5. ' parts' → logprob: -3.4951186180114746
    6. '"' → logprob: -3.6201186180114746
    7. ' p' → logprob: -3.7451186180114746
    8. '"""' → logprob: -3.7451186180114746
    9. '"""
' → logprob: -3.9951186180114746
    10. 'parts' → logprob: -3.9951186180114746

Token 268: ' Compare' (ID: 38200)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.55963134765625
    2. '#' → logprob: -1.68463134765625
    3. 'def' → logprob: -2.05963134765625
    4. 'if' → logprob: -2.18463134765625
    5. 'for' → logprob: -2.55963134765625
    6. ' #' → logprob: -2.80963134765625
    7. 'i' → logprob: -3.18463134765625
    8. ' if' → logprob: -3.30963134765625
    9. ' """
' → logprob: -3.43463134765625
    10. 'parts' → logprob: -3.80963134765625

Token 269: ' deux' (ID: 10301)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.3959013819694519
    2. 's' → logprob: -1.8959014415740967
    3. ' the' → logprob: -2.7709014415740967
    4. ' two' → logprob: -3.3959014415740967
    5. ' deux' → logprob: -4.145901203155518
    6. 'def' → logprob: -4.270901203155518
    7. ' parts' → logprob: -4.270901203155518
    8. ' ' → logprob: -4.895901203155518
    9. ' (' → logprob: -5.020901203155518
    10. 'the' → logprob: -5.520901203155518

Token 270: ' programmes' (ID: 40035)
  Prédit: ' programmes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' programmes' → logprob: -0.5602754950523376
    2. 'program' → logprob: -0.9352754950523376
    3. ' programs' → logprob: -3.9352755546569824
    4. ' listes' → logprob: -5.185275554656982
    5. ' chaînes' → logprob: -5.810275554656982
    6. ' progr' → logprob: -6.435275554656982
    7. 'def' → logprob: -6.685275554656982
    8. 'programme' → logprob: -7.060275554656982
    9. ' program' → logprob: -7.310275554656982
    10. 'list' → logprob: -7.685275554656982

Token 271: ' selon' (ID: 27571)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.111099362373352
    2. ' en' → logprob: -1.736099362373352
    3. '(' → logprob: -1.986099362373352
    4. '(s' → logprob: -2.2360992431640625
    5. 's' → logprob: -2.3610992431640625
    6. ' s' → logprob: -3.4860992431640625
    7. 'def' → logprob: -3.9860992431640625
    8. '_' → logprob: -4.6110992431640625
    9. ',' → logprob: -4.9860992431640625
    10. 'en' → logprob: -4.9860992431640625

Token 272: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.9253012537956238
    2. ' leurs' → logprob: -0.9253012537956238
    3. ' leur' → logprob: -2.3003013134002686
    4. ' la' → logprob: -2.9253013134002686
    5. ' le' → logprob: -3.3003013134002686
    6. 'les' → logprob: -5.5503010749816895
    7. 'leurs' → logprob: -5.8003010749816895
    8. 'le' → logprob: -6.3003010749816895
    9. 'leur' → logprob: -6.3003010749816895
    10. ' des' → logprob: -6.6753010749816895

Token 273: ' règles' (ID: 67042)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.1774733066558838
    2. 'part' → logprob: -3.052473306655884
    3. ' règles' → logprob: -3.302473306655884
    4. 'm' → logprob: -3.802473306655884
    5. 'parts' → logprob: -4.302473068237305
    6. 'élé' → logprob: -4.552473068237305
    7. ' critères' → logprob: -4.677473068237305
    8. 'crit' → logprob: -5.302473068237305
    9. 'rés' → logprob: -5.427473068237305
    10. 'instructions' → logprob: -5.927473068237305

Token 274: ' é' (ID: 1212)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6460140347480774
    2. ' suivantes' → logprob: -1.3960139751434326
    3. ' de' → logprob: -1.6460139751434326
    4. 'de' → logprob: -4.521014213562012
    5. 'def' → logprob: -4.771014213562012
    6. ' du' → logprob: -5.396014213562012
    7. ':' → logprob: -6.021014213562012
    8. '    
' → logprob: -6.396014213562012
    9. '    ' → logprob: -6.896014213562012
    10. ' des' → logprob: -7.271014213562012

Token 275: 'non' (ID: 11741)
  Prédit: 'gal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gal' → logprob: -0.2685677111148834
    2. 'dict' → logprob: -2.2685678005218506
    3. 'non' → logprob: -2.7685678005218506
    4. 'g' → logprob: -3.1435678005218506
    5. 'qu' → logprob: -4.7685675621032715
    6. 'qual' → logprob: -5.2685675621032715
    7. 'quiv' → logprob: -6.2685675621032715
    8. 'cr' → logprob: -7.0185675621032715
    9. 'd' → logprob: -7.0185675621032715
    10. 'c' → logprob: -7.5185675621032715

Token 276: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00048143533058464527
    2. 'érées' → logprob: -7.875481605529785
    3. 'cé' → logprob: -10.250481605529785
    4. 'cée' → logprob: -10.875481605529785
    5. '```' → logprob: -12.125481605529785
    6. '</' → logprob: -12.250481605529785
    7. 'nées' → logprob: -12.500481605529785
    8. 'cm' → logprob: -12.625481605529785
    9. 'um' → logprob: -12.750481605529785
    10. '"""
' → logprob: -12.875481605529785

Token 277: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.0014538055984303355
    2. 'es' → logprob: -7.376453876495361
    3. 'és' → logprob: -7.751453876495361
    4. 'érées' → logprob: -8.626453399658203
    5. 'é' → logprob: -8.876453399658203
    6. 'ée' → logprob: -10.001453399658203
    7. 'nées' → logprob: -12.126453399658203
    8. 'def' → logprob: -12.126453399658203
    9. 'er' → logprob: -12.251453399658203
    10. '"""
' → logprob: -12.251453399658203

Token 278: ' :
' (ID: 10039)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012896307744085789
    2. ':' → logprob: -5.262896537780762
    3. ',' → logprob: -5.512896537780762
    4. ' :' → logprob: -6.387896537780762
    5. '.' → logprob: -7.887896537780762
    6. '    ' → logprob: -8.137896537780762
    7. '(' → logprob: -8.387896537780762
    8. 'def' → logprob: -8.762896537780762
    9. ' dans' → logprob: -8.762896537780762
    10. ' à' → logprob: -9.387896537780762

Token 279: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030156446620821953
    2. '    
' → logprob: -4.53015661239624
    3. '    ' → logprob: -4.65515661239624
    4. ' 
' → logprob: -5.40515661239624
    5. ' def' → logprob: -6.90515661239624
    6. '
' → logprob: -7.03015661239624
    7. 'def' → logprob: -7.65515661239624
    8. '```' → logprob: -8.030156135559082
    9. '       ' → logprob: -8.155156135559082
    10. '     
' → logprob: -8.405156135559082

Token 280: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009137064218521118
    2. ' def' → logprob: -6.134137153625488
    3. ' parts' → logprob: -6.634137153625488
    4. ' s' → logprob: -6.759137153625488
    5. ' tokens' → logprob: -7.259137153625488
    6. ' n' → logprob: -7.384137153625488
    7. ' code' → logprob: -7.634137153625488
    8. '    ' → logprob: -7.759137153625488
    9. '    
' → logprob: -7.884137153625488
    10. ' #' → logprob: -8.384137153625488

Token 281: ' IDENT' (ID: 154406)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.557219922542572
    2. 'parts' → logprob: -0.932219922542572
    3. 's' → logprob: -4.182219982147217
    4. ' parts' → logprob: -4.307219982147217
    5. ' p' → logprob: -5.932219982147217
    6. ' s' → logprob: -7.932219982147217
    7. '#' → logprob: -7.932219982147217
    8. 'split' → logprob: -8.557219505310059
    9. 'def' → logprob: -8.557219505310059
    10. 'part' → logprob: -8.557219505310059

Token 282: 'ICAL' (ID: 29255)
  Prédit: 'IQUE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IQUE' → logprob: -0.6804647445678711
    2. '_' → logprob: -2.055464744567871
    3. 'ITY' → logprob: -2.180464744567871
    4. 'ical' → logprob: -2.930464744567871
    5. 'I' → logprob: -2.930464744567871
    6. 'ICAL' → logprob: -3.055464744567871
    7. 'ique' → logprob: -3.430464744567871
    8. 'IFI' → logprob: -4.805464744567871
    9. '   ' → logprob: -4.805464744567871
    10. 'IFIER' → logprob: -5.055464744567871

Token 283: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.45403343439102173
    2. '   ' → logprob: -2.079033374786377
    3. '_' → logprob: -2.579033374786377
    4. ' =' → logprob: -3.329033374786377
    5. ' ' → logprob: -4.079033374786377
    6. ' :' → logprob: -4.454033374786377
    7. 'def' → logprob: -4.579033374786377
    8. '_parts' → logprob: -4.579033374786377
    9. ' parts' → logprob: -4.704033374786377
    10. '  ' → logprob: -4.704033374786377

Token 284: ' s' (ID: 265)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.17203661799430847
    2. ' s' → logprob: -2.922036647796631
    3. 'if' → logprob: -2.922036647796631
    4. 's' → logprob: -3.672036647796631
    5. ' True' → logprob: -4.797036647796631
    6. ' si' → logprob: -5.422036647796631
    7. ' return' → logprob: -5.547036647796631
    8. 'True' → logprob: -6.047036647796631
    9. ' ' → logprob: -6.547036647796631
    10. '   ' → logprob: -7.422036647796631

Token 285: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000354769523255527
    2. '2' → logprob: -8.625354766845703
    3. '_' → logprob: -8.750354766845703
    4. '   ' → logprob: -12.000354766845703
    5. 'def' → logprob: -13.500354766845703
    6. 't' → logprob: -13.500354766845703
    7. 'tr' → logprob: -13.750354766845703
    8. '```' → logprob: -14.000354766845703
    9. 'tring' → logprob: -14.500354766845703
    10. ' _' → logprob: -14.875354766845703

Token 286: ' et' (ID: 859)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.023321880027651787
    2. '==' → logprob: -3.7733218669891357
    3. ' ' → logprob: -10.898322105407715
    4. ' is' → logprob: -11.523322105407715
    5. '[:]' → logprob: -11.648322105407715
    6. 'def' → logprob: -11.773322105407715
    7. '[]' → logprob: -12.148322105407715
    8. '   ' → logprob: -12.148322105407715
    9. ' =' → logprob: -12.523322105407715
    10. 's' → logprob: -12.523322105407715

Token 287: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.22542071342468262
    2. 's' → logprob: -1.6004207134246826
    3. '   ' → logprob: -11.975420951843262
    4. ' ' → logprob: -13.725420951843262
    5. '    ' → logprob: -15.225420951843262
    6. '  ' → logprob: -15.600420951843262
    7. ' ' → logprob: -16.475419998168945
    8. '```' → logprob: -16.725419998168945
    9. ',' → logprob: -17.725419998168945
    10. '	s' → logprob: -17.787919998168945

Token 288: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -15.25
    3. '1' → logprob: -17.625
    4. '```' → logprob: -17.875
    5. '   ' → logprob: -18.875
    6. ''' → logprob: -19.125
    7. '₂' → logprob: -19.5
    8. '`' → logprob: -19.5
    9. 'e' → logprob: -19.625
    10. ' ' → logprob: -20.75

Token 289: ' ident' (ID: 3951)
  Prédit: ' sont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.579191267490387
    2. ' are' → logprob: -0.954191267490387
    3. ' ==' → logprob: -4.329191207885742
    4. 's' → logprob: -4.329191207885742
    5. ' exactly' → logprob: -5.329191207885742
    6. ' is' → logprob: -5.579191207885742
    7. ' have' → logprob: -5.829191207885742
    8. ' =' → logprob: -5.829191207885742
    9. '   ' → logprob: -6.204191207885742
    10. ' ont' → logprob: -6.829191207885742

Token 290: 'iques' (ID: 11654)
  Prédit: 'iques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iques' → logprob: -0.15776695311069489
    2. 'ical' → logprob: -2.1577670574188232
    3. 'ique' → logprob: -3.5327670574188232
    4. 'ic' → logprob: -6.907766819000244
    5. 'icals' → logprob: -9.532767295837402
    6. '```' → logprob: -11.032767295837402
    7. 'iq' → logprob: -11.157767295837402
    8. '=' → logprob: -11.532767295837402
    9. 'aux' → logprob: -11.657767295837402
    10. 'ics' → logprob: -11.657767295837402

Token 291: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.470348984003067
    2. ' and' → logprob: -1.0953489542007446
    3. ' if' → logprob: -3.595349073410034
    4. ',' → logprob: -5.470348834991455
    5. '    ' → logprob: -5.720348834991455
    6. 'and' → logprob: -6.595348834991455
    7. ' ' → logprob: -6.720348834991455
    8. ' et' → logprob: -6.970348834991455
    9. '  ' → logprob: -7.220348834991455
    10. ' return' → logprob: -7.595348834991455

Token 292: 'string' (ID: 1655)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44369232654571533
    2. ' )' → logprob: -1.0686923265457153
    3. ' s' → logprob: -5.818692207336426
    4. '   ' → logprob: -5.818692207336426
    5. ' return' → logprob: -6.193692207336426
    6. 's' → logprob: -6.568692207336426
    7. ' and' → logprob: -6.943692207336426
    8. 'return' → logprob: -7.193692207336426
    9. ' None' → logprob: -7.318692207336426
    10. ' exactement' → logprob: -8.068692207336426

Token 293: ' exactement' (ID: 108701)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33420851826667786
    2. 's' → logprob: -1.5842084884643555
    3. ' )' → logprob: -3.4592084884643555
    4. '   ' → logprob: -3.5842084884643555
    5. ' s' → logprob: -4.7092084884643555
    6. ')s' → logprob: -5.9592084884643555
    7. ' ==' → logprob: -6.0842084884643555
    8. '"' → logprob: -6.9592084884643555
    9. ' ' → logprob: -7.5842084884643555
    10. '1' → logprob: -7.8342084884643555

Token 294: ' ég' (ID: 33150)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06773018836975098
    2. 's' → logprob: -4.442729949951172
    3. ' )' → logprob: -4.567729949951172
    4. 'equal' → logprob: -4.567729949951172
    5. ' equal' → logprob: -4.817729949951172
    6. 'e' → logprob: -5.317729949951172
    7. 'à' → logprob: -5.317729949951172
    8. 'ly' → logprob: -5.442729949951172
    9. ' ég' → logprob: -6.067729949951172
    10. ' à' → logprob: -6.567729949951172

Token 295: 'ales' (ID: 3459)
  Prédit: 'ale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.23313674330711365
    2. 'al' → logprob: -1.733136773109436
    3. 'ales' → logprob: -4.1081366539001465
    4. 'aux' → logprob: -4.3581366539001465
    5. 'a' → logprob: -6.8581366539001465
    6. '```' → logprob: -7.9831366539001465
    7. 'als' → logprob: -8.608137130737305
    8. '"' → logprob: -9.108137130737305
    9. '``' → logprob: -10.233137130737305
    10. '**' → logprob: -10.733137130737305

Token 296: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02662118896842003
    2. ' )' → logprob: -3.651621103286743
    3. ')
' → logprob: -9.401620864868164
    4. '")' → logprob: -9.526620864868164
    5. '   ' → logprob: -10.276620864868164
    6. '')' → logprob: -10.276620864868164
    7. 's' → logprob: -10.776620864868164
    8. ',' → logprob: -10.901620864868164
    9. ' )
' → logprob: -11.651620864868164
    10. ')s' → logprob: -12.151620864868164

Token 297: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013061909703537822
    2. '```' → logprob: -7.751306056976318
    3. ' if' → logprob: -8.251306533813477
    4. ',' → logprob: -8.251306533813477
    5. ')' → logprob: -8.626306533813477
    6. '.' → logprob: -10.501306533813477
    7. '    
' → logprob: -10.751306533813477
    8. 'if' → logprob: -10.876306533813477
    9. 'def' → logprob: -10.876306533813477
    10. '
' → logprob: -11.251306533813477

Token 298: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011018110439181328
    2. ')' → logprob: -5.3860182762146
    3. ' if' → logprob: -6.1360182762146
    4. ':' → logprob: -6.8860182762146
    5. 'if' → logprob: -6.8860182762146
    6. ' ' → logprob: -7.2610182762146
    7. '```' → logprob: -8.136017799377441
    8. '\n' → logprob: -8.636017799377441
    9. '  ' → logprob: -8.636017799377441
    10. '"""' → logprob: -8.886017799377441

Token 299: ' CLOSE' (ID: 138957)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.6349970698356628
    2. ' SPL' → logprob: -1.5099971294403076
    3. 'PART' → logprob: -3.5099971294403076
    4. 'E' → logprob: -3.5099971294403076
    5. ' WH' → logprob: -3.8849971294403076
    6. 'DI' → logprob: -4.1349968910217285
    7. ' if' → logprob: -4.5099968910217285
    8. ' E' → logprob: -4.7599968910217285
    9. 'WH' → logprob: -4.8849968910217285
    10. 'if' → logprob: -5.0099968910217285

Token 300: ' :' (ID: 712)
  Prédit: ' :'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.19176045060157776
    2. ':' → logprob: -2.066760540008545
    3. 'def' → logprob: -3.816760540008545
    4. '   ' → logprob: -4.566760540008545
    5. ' =' → logprob: -5.191760540008545
    6. '  ' → logprob: -5.441760540008545
    7. 'import' → logprob: -5.941760540008545
    8. '"""' → logprob: -7.316760540008545
    9. ' ' → logprob: -7.441760540008545
    10. ',' → logprob: -8.316760063171387

Token 301: ' ils' (ID: 15387)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9135642647743225
    2. 'len' → logprob: -1.6635642051696777
    3. 'True' → logprob: -2.0385642051696777
    4. 's' → logprob: -2.4135642051696777
    5. ' s' → logprob: -3.1635642051696777
    6. 'split' → logprob: -3.4135642051696777
    7. ' True' → logprob: -3.5385642051696777
    8. ' len' → logprob: -3.7885642051696777
    9. ' def' → logprob: -4.413564205169678
    10. '#' → logprob: -4.538564205169678

Token 302: ' ne' (ID: 453)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.2682458758354187
    2. 'diff' → logprob: -2.2682459354400635
    3. ' ont' → logprob: -3.1432459354400635
    4. 's' → logprob: -3.5182459354400635
    5. ' sont' → logprob: -4.268245697021484
    6. ' differ' → logprob: -4.393245697021484
    7. 'part' → logprob: -4.893245697021484
    8. ' diff' → logprob: -5.018245697021484
    9. ' have' → logprob: -6.268245697021484
    10. ' n' → logprob: -6.393245697021484

Token 303: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.06611811369657516
    2. 's' → logprob: -3.191118001937866
    3. 'd' → logprob: -4.191118240356445
    4. ' diff' → logprob: -5.441118240356445
    5. 'part' → logprob: -6.566118240356445
    6. ' sont' → logprob: -6.941118240356445
    7. 'ont' → logprob: -8.441118240356445
    8. ' differ' → logprob: -8.941118240356445
    9. ' part' → logprob: -8.941118240356445
    10. ' différent' → logprob: -9.441118240356445

Token 304: 'èrent' (ID: 55228)
  Prédit: 'èrent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'èrent' → logprob: -0.0007878291653469205
    2. 'érent' → logprob: -7.875787734985352
    3. 'rent' → logprob: -8.250787734985352
    4. 'er' → logprob: -9.875787734985352
    5. '`' → logprob: -10.125787734985352
    6. '```' → logprob: -10.875787734985352
    7. 'èr' → logprob: -11.000787734985352
    8. 'è' → logprob: -12.750787734985352
    9. '   ' → logprob: -12.875787734985352
    10. 'ront' → logprob: -13.250787734985352

Token 305: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.005447316449135542
    2. ' pas' → logprob: -6.0054473876953125
    3. 'pas' → logprob: -7.6304473876953125
    4. 'sur' → logprob: -7.6304473876953125
    5. 'que' → logprob: -7.8804473876953125
    6. ' en' → logprob: -8.005447387695312
    7. ' par' → logprob: -8.505447387695312
    8. 'd' → logprob: -8.505447387695312
    9. ' d' → logprob: -8.880447387695312
    10. ' by' → logprob: -9.005447387695312

Token 306: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.09334353357553482
    2. 'sur' → logprob: -3.218343496322632
    3. 'par' → logprob: -3.843343496322632
    4. ' d' → logprob: -4.343343734741211
    5. ' sur' → logprob: -4.593343734741211
    6. 'd' → logprob: -5.843343734741211
    7. ' pas' → logprob: -7.593343734741211
    8. ' ' → logprob: -7.843343734741211
    9. 's' → logprob: -8.343343734741211
    10. ' by' → logprob: -8.343343734741211

Token 307: ' une' (ID: 2463)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.3142513036727905
    2. ' un' → logprob: -2.68925142288208
    3. 'des' → logprob: -2.68925142288208
    4. 'un' → logprob: -3.56425142288208
    5. ' la' → logprob: -3.68925142288208
    6. ' une' → logprob: -3.68925142288208
    7. ' ' → logprob: -4.93925142288208
    8. 'les' → logprob: -5.06425142288208
    9. 'l' → logprob: -5.18925142288208
    10. 'leur' → logprob: -5.43925142288208

Token 308: ' seule' (ID: 41983)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.7290491461753845
    2. ' maj' → logprob: -2.4790492057800293
    3. 'min' → logprob: -2.8540492057800293
    4. 'lett' → logprob: -2.8540492057800293
    5. ' min' → logprob: -3.4790492057800293
    6. 'let' → logprob: -3.6040492057800293
    7. 'maj' → logprob: -3.7290492057800293
    8. 'esp' → logprob: -3.7290492057800293
    9. ' différence' → logprob: -3.7290492057800293
    10. 'c' → logprob: -3.8540492057800293

Token 309: ' chaîne' (ID: 89288)
  Prédit: 'lett'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lett' → logprob: -1.0950231552124023
    2. ' lettre' → logprob: -1.4700231552124023
    3. 'diff' → logprob: -1.4700231552124023
    4. 'occ' → logprob: -3.5950231552124023
    5. ' différence' → logprob: -3.9700231552124023
    6. ' espace' → logprob: -4.220023155212402
    7. ' ligne' → logprob: -4.470023155212402
    8. 'occur' → logprob: -4.595023155212402
    9. 'let' → logprob: -4.720023155212402
    10. 'space' → logprob: -4.845023155212402

Token 310: ' litt' (ID: 33019)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.008493423461914
    2. 'literal' → logprob: -2.008493423461914
    3. '_literal' → logprob: -2.258493423461914
    4. 'lit' → logprob: -2.258493423461914
    5. 'import' → logprob: -2.633493423461914
    6. 's' → logprob: -3.133493423461914
    7. '"' → logprob: -3.508493423461914
    8. '_l' → logprob: -3.883493423461914
    9. 'entre' → logprob: -4.258493423461914
    10. '"""' → logprob: -4.258493423461914

Token 311: 'érale' (ID: 98150)
  Prédit: 'érale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érale' → logprob: -7.994086627149954e-05
    2. 'érales' → logprob: -10.250080108642578
    3. 'rale' → logprob: -11.125080108642578
    4. 'éral' → logprob: -11.375080108642578
    5. 'éralement' → logprob: -11.625080108642578
    6. 'éraire' → logprob: -12.500080108642578
    7. 'é' → logprob: -13.250080108642578
    8. 'éra' → logprob: -13.500080108642578
    9. 'ér' → logprob: -14.125080108642578
    10. 'éraux' → logprob: -14.500080108642578

Token 312: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0358221530914307
    2. 'def' → logprob: -1.4108221530914307
    3. ',' → logprob: -1.6608221530914307
    4. '"' → logprob: -3.1608221530914307
    5. '   ' → logprob: -3.4108221530914307
    6. ' (' → logprob: -3.6608221530914307
    7. '(s' → logprob: -3.6608221530914307
    8. '"""
' → logprob: -3.6608221530914307
    9. ' s' → logprob: -4.410821914672852
    10. 'import' → logprob: -5.285821914672852

Token 313: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2864270210266113
    2. ',' → logprob: -1.5364270210266113
    3. ' (' → logprob: -1.7864270210266113
    4. ' entre' → logprob: -2.2864270210266113
    5. '"""
' → logprob: -2.7864270210266113
    6. ' ou' → logprob: -3.2864270210266113
    7. 'def' → logprob: -3.5364270210266113
    8. '"' → logprob: -3.7864270210266113
    9. '(s' → logprob: -4.411427021026611
    10. ' between' → logprob: -4.536427021026611

Token 314: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007171043660491705
    2. 'def' → logprob: -5.382171154022217
    3. ',' → logprob: -7.132171154022217
    4. '"""
' → logprob: -7.132171154022217
    5. '"""' → logprob: -8.257170677185059
    6. '
' → logprob: -8.757170677185059
    7. '  ' → logprob: -8.757170677185059
    8. ' def' → logprob: -9.757170677185059
    9. '#' → logprob: -10.007170677185059
    10. '```' → logprob: -10.257170677185059

Token 315: ' DIFFER' (ID: 188541)
  Prédit: 'PART'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'PART' → logprob: -0.8246103525161743
    2. 'SIM' → logprob: -1.4496103525161743
    3. 'DI' → logprob: -2.1996102333068848
    4. 'AL' → logprob: -3.0746102333068848
    5. 'APP' → logprob: -3.3246102333068848
    6. 'FU' → logprob: -4.074610233306885
    7. 'SUB' → logprob: -4.324610233306885
    8. 'NE' → logprob: -4.574610233306885
    9. 'S' → logprob: -4.699610233306885
    10. 'ONE' → logprob: -4.949610233306885

Token 316: 'ENT' (ID: 2829)
  Prédit: 'ENT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ENT' → logprob: -0.001051984610967338
    2. 'ent' → logprob: -7.626051902770996
    3. '```' → logprob: -8.251051902770996
    4. '   ' → logprob: -9.501051902770996
    5. 'NT' → logprob: -9.626051902770996
    6. ':' → logprob: -10.376051902770996
    7. ' ENT' → logprob: -10.501051902770996
    8. '_' → logprob: -11.251051902770996
    9. 'ANT' → logprob: -11.501051902770996
    10. 'E' → logprob: -11.501051902770996

Token 317: ' sinon' (ID: 52915)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1359051614999771
    2. ' :' → logprob: -2.1359052658081055
    3. '   ' → logprob: -5.0109052658081055
    4. '):' → logprob: -7.1359052658081055
    5. ' =' → logprob: -7.3859052658081055
    6. ':
' → logprob: -7.6359052658081055
    7. ' :
' → logprob: -9.010905265808105
    8. ' ' → logprob: -10.385905265808105
    9. 'def' → logprob: -10.510905265808105
    10. ')' → logprob: -10.510905265808105

Token 318: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0023064350243657827
    2. '
' → logprob: -6.7523064613342285
    3. '    
' → logprob: -7.0023064613342285
    4. ':' → logprob: -9.00230598449707
    5. ':
' → logprob: -10.25230598449707
    6. '```' → logprob: -11.00230598449707
    7. '):
' → logprob: -11.75230598449707
    8. '  
' → logprob: -12.00230598449707
    9. '   
' → logprob: -12.00230598449707
    10. '\n' → logprob: -12.12730598449707

Token 319: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00918195117264986
    2. '    
' → logprob: -5.134181976318359
    3. '
' → logprob: -6.009181976318359
    4. '   
' → logprob: -8.63418197631836
    5. ' 
' → logprob: -8.75918197631836
    6. '  
' → logprob: -8.88418197631836
    7. ':' → logprob: -9.00918197631836
    8. '```' → logprob: -9.50918197631836
    9. '\n' → logprob: -10.25918197631836
    10. ':
' → logprob: -10.50918197631836

Token 320: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006522706826217473
    2. '    
' → logprob: -8.000652313232422
    3. '
' → logprob: -8.125652313232422
    4. '```' → logprob: -11.875652313232422
    5. 'n' → logprob: -12.375652313232422
    6. 'tokens' → logprob: -12.875652313232422
    7. '\n' → logprob: -13.125652313232422
    8. '   
' → logprob: -13.375652313232422
    9. '  
' → logprob: -14.625652313232422
    10. '"' → logprob: -15.000652313232422

Token 321: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018364032730460167
    2. 'p' → logprob: -4.643363952636719
    3. ' p' → logprob: -5.768363952636719
    4. ' parts' → logprob: -5.893363952636719
    5. 'parts' → logprob: -6.018363952636719
    6. 's' → logprob: -9.018363952636719
    7. 'tokens' → logprob: -10.018363952636719
    8. ' s' → logprob: -10.518363952636719
    9. 'ps' → logprob: -10.643363952636719
    10. 'code' → logprob: -11.643363952636719

Token 322: ' if' (ID: 538)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2110515534877777
    2. 'parts' → logprob: -1.7110515832901
    3. 'ps' → logprob: -4.7110514640808105
    4. '   ' → logprob: -7.7110514640808105
    5. 'def' → logprob: -10.836051940917969
    6. 'code' → logprob: -10.961051940917969
    7. 'if' (adapté à ' if') → logprob: -11.086051940917969
    8. 'l' → logprob: -11.211051940917969
    9. 'lst' → logprob: -11.211051940917969
    10. 'part' → logprob: -11.461051940917969

Token 323: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.16022443771362305
    2. 's' → logprob: -1.910224437713623
    3. '   ' → logprob: -15.410224914550781
    4. ' ' → logprob: -18.16022491455078
    5. '_s' → logprob: -18.66022491455078
    6. ' ' → logprob: -19.03522491455078
    7. '(s' → logprob: -19.16022491455078
    8. '    ' → logprob: -19.53522491455078
    9. '	s' → logprob: -19.66022491455078
    10. '  ' → logprob: -20.03522491455078

Token 324: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. '_' → logprob: -12.000006675720215
    3. ' ' → logprob: -17.8750057220459
    4. '   ' → logprob: -17.8750057220459
    5. '```' → logprob: -18.5000057220459
    6. '１' → logprob: -20.1250057220459
    7. '`' → logprob: -20.3750057220459
    8. 's' → logprob: -20.5000057220459
    9. '' → logprob: -20.7500057220459
    10. '
' → logprob: -21.2500057220459

Token 325: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04858816787600517
    2. '==' → logprob: -3.048588275909424
    3. ' ' → logprob: -15.423587799072266
    4. '   ' → logprob: -15.923587799072266
    5. '===' → logprob: -16.048587799072266
    6. ' ' → logprob: -16.298587799072266
    7. '=' → logprob: -16.923587799072266
    8. ')==' → logprob: -17.548587799072266
    9. ' ===' → logprob: -17.673587799072266
    10. '==
' → logprob: -17.673587799072266

Token 326: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0019286326132714748
    2. ' s' → logprob: -6.251928806304932
    3. '_s' → logprob: -22.501928329467773
    4. ' ' → logprob: -23.751928329467773
    5. '(s' → logprob: -24.501928329467773
    6. '	s' → logprob: -24.501928329467773
    7. '   ' → logprob: -24.626928329467773
    8. '`s' → logprob: -25.251928329467773
    9. ''s' → logprob: -25.501928329467773
    10. '{s' → logprob: -25.626928329467773

Token 327: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005241344682872295
    2. 's' → logprob: -5.255241394042969
    3. '1' → logprob: -12.130241394042969
    4. ' s' → logprob: -13.005241394042969
    5. ' ' → logprob: -17.75524139404297
    6. '_s' → logprob: -18.38024139404297
    7. '   ' → logprob: -18.63024139404297
    8. '_' → logprob: -19.38024139404297
    9. '```' → logprob: -19.63024139404297
    10. ''s' → logprob: -20.00524139404297

Token 328: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3500095009803772
    2. ':
' → logprob: -1.2250094413757324
    3. ':return' → logprob: -7.350009441375732
    4. '   ' → logprob: -7.475009441375732
    5. '       ' → logprob: -8.10000991821289
    6. ' :
' → logprob: -10.97500991821289
    7. '):
' → logprob: -11.35000991821289
    8. ' :' → logprob: -11.35000991821289
    9. ' return' → logprob: -12.47500991821289
    10. 'return' → logprob: -13.60000991821289

Token 329: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00442537060007453
    2. ' return' → logprob: -6.129425525665283
    3. 'return' → logprob: -6.379425525665283
    4. '
' → logprob: -8.004425048828125
    5. ':' → logprob: -9.754425048828125
    6. ':
' → logprob: -9.754425048828125
    7. '   ' → logprob: -10.254425048828125
    8. ':return' → logprob: -11.004425048828125
    9. '	return' → logprob: -11.504425048828125
    10. '	' → logprob: -12.004425048828125

Token 330: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6075935959815979
    2. 'return' (adapté à ' return') → logprob: -1.4825935363769531
    3. ' return' → logprob: -1.4825935363769531
    4. '
' → logprob: -7.232593536376953
    5. '	return' → logprob: -8.232593536376953
    6. '   ' → logprob: -8.982593536376953
    7. ' 
' → logprob: -10.357593536376953
    8. ':return' → logprob: -10.607593536376953
    9. '        
' → logprob: -11.232593536376953
    10. '	' → logprob: -11.732593536376953

Token 331: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.023514145985245705
    2. ''' → logprob: -3.7735140323638916
    3. ' "' → logprob: -8.273513793945312
    4. ' '' → logprob: -11.523513793945312
    5. ''ident' → logprob: -13.273513793945312
    6. '   ' → logprob: -14.023513793945312
    7. ''"' → logprob: -14.773513793945312
    8. '"C' → logprob: -15.773513793945312
    9. ' ' → logprob: -16.023513793945312
    10. '"I' → logprob: -16.273513793945312

Token 332: 'IDENT' (ID: 38592)
  Prédit: 'IDENT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IDENT' → logprob: -4.842555426876061e-06
    2. '"' → logprob: -12.500004768371582
    3. ''' → logprob: -13.750004768371582
    4. ''ident' → logprob: -18.0000057220459
    5. '_IDENT' → logprob: -18.6250057220459
    6. ' IDENT' → logprob: -18.7500057220459
    7. '`' → logprob: -20.0000057220459
    8. 'Ident' → logprob: -20.2500057220459
    9. '   ' → logprob: -20.8750057220459
    10. 'ident' → logprob: -20.8750057220459

Token 333: 'ICAL' (ID: 29255)
  Prédit: 'ICAL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ICAL' → logprob: -2.8087270038668066e-05
    2. 'IC' → logprob: -10.875027656555176
    3. 'ical' → logprob: -12.625027656555176
    4. 'I' → logprob: -13.375027656555176
    5. 'AL' → logprob: -13.625027656555176
    6. 'IQUE' → logprob: -13.750027656555176
    7. '```' → logprob: -14.875027656555176
    8. '"' → logprob: -15.125027656555176
    9. 'CAL' → logprob: -15.125027656555176
    10. '   ' → logprob: -16.000028610229492

Token 334: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0003818140830844641
    2. '"
' → logprob: -7.875381946563721
    3. '"

' → logprob: -14.250381469726562
    4. '"
' → logprob: -14.625381469726562
    5. '"""' → logprob: -15.875381469726562
    6. '"\' → logprob: -16.250381469726562
    7. '"C' → logprob: -16.875381469726562
    8. '")' → logprob: -17.000381469726562
    9. 'def' → logprob: -17.250381469726562
    10. '"I' → logprob: -17.375381469726562

Token 335: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.467294305562973
    2. '    
' → logprob: -2.092294216156006
    3. '   ' → logprob: -2.342294216156006
    4. ' 
' → logprob: -2.467294216156006
    5. '  
' → logprob: -3.842294216156006
    6. '   
' → logprob: -4.342294216156006
    7. '\n' → logprob: -4.467294216156006
    8. ' parts' → logprob: -4.967294216156006
    9. 's' → logprob: -5.717294216156006
    10. 'parts' → logprob: -5.717294216156006

Token 336: '   ' (ID: 271)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5346400737762451
    2. 'parts' → logprob: -0.9096400737762451
    3. 'ps' → logprob: -4.784640312194824
    4. '   ' → logprob: -6.284640312194824
    5. 's' → logprob: -7.909640312194824
    6. 'split' → logprob: -8.284640312194824
    7. '    
' → logprob: -8.409640312194824
    8. 'sp' → logprob: -9.909640312194824
    9. 'l' → logprob: -9.909640312194824
    10. 'lst' → logprob: -10.034640312194824

Token 337: ' #' (ID: 1069)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.20791061222553253
    2. 'parts' → logprob: -1.7079106569290161
    3. 'ps' → logprob: -5.082910537719727
    4. 'split' → logprob: -9.832910537719727
    5. 'lst' → logprob: -9.832910537719727
    6. 'l' → logprob: -9.957910537719727
    7. 'sp' → logprob: -10.082910537719727
    8. 'list' → logprob: -10.707910537719727
    9. 'code' → logprob: -10.957910537719727
    10. 'a' → logprob: -11.457910537719727

Token 338: ' Sé' (ID: 53058)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5936861038208008
    2. 'parts' → logprob: -0.8436861038208008
    3. 'ps' → logprob: -4.093686103820801
    4. 'split' → logprob: -8.2186861038208
    5. 'sp' → logprob: -8.3436861038208
    6. 'code' → logprob: -8.8436861038208
    7. 'lst' → logprob: -9.8436861038208
    8. 'part' → logprob: -10.2186861038208
    9. 'seq' → logprob: -10.7186861038208
    10. 's' → logprob: -11.0936861038208

Token 339: 'paration' (ID: 27466)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.4221508204936981
    2. 'p' → logprob: -1.2971508502960205
    3. 's' → logprob: -3.7971508502960205
    4. 'e' → logprob: -4.172150611877441
    5. '   ' → logprob: -4.297150611877441
    6. 'g' → logprob: -5.297150611877441
    7. '#' → logprob: -5.797150611877441
    8. 'quences' → logprob: -6.172150611877441
    9. 'u' → logprob: -6.672150611877441
    10. ' parts' → logprob: -6.797150611877441

Token 340: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21483604609966278
    2. 's' → logprob: -2.0898361206054688
    3. 'p' → logprob: -3.3398361206054688
    4. ' s' → logprob: -3.9648361206054688
    5. 'parts' → logprob: -5.089836120605469
    6. ' parts' → logprob: -5.214836120605469
    7. ' p' → logprob: -6.089836120605469
    8. 'program' → logprob: -8.589836120605469
    9. '(parts' → logprob: -8.714836120605469
    10. '(p' → logprob: -8.964836120605469

Token 341: ' parties' (ID: 13531)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.01006239838898182
    2. 'tokens' → logprob: -5.510062217712402
    3. '   ' → logprob: -5.885062217712402
    4. 'p' → logprob: -6.385062217712402
    5. ' parts' → logprob: -7.760062217712402
    6. 'lists' → logprob: -8.260062217712402
    7. 'program' → logprob: -8.760062217712402
    8. '```' → logprob: -9.010062217712402
    9. 'elements' → logprob: -9.510062217712402
    10. 'pieces' → logprob: -9.510062217712402

Token 342: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07971075177192688
    2. 's' → logprob: -3.3297107219696045
    3. ' s' → logprob: -4.079710960388184
    4. 'p' → logprob: -4.329710960388184
    5. ' parts' → logprob: -5.454710960388184
    6. ' p' → logprob: -5.704710960388184
    7. 'parts' → logprob: -5.954710960388184
    8. '1' → logprob: -8.954710960388184
    9. ' =' → logprob: -9.454710960388184
    10. ' ' → logprob: -9.829710960388184

Token 343: ' code' (ID: 3490)
  Prédit: 'program'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'program' → logprob: -1.1385048627853394
    2. 'parts' → logprob: -1.2635048627853394
    3. 'code' → logprob: -1.7635048627853394
    4. 'part' → logprob: -2.138504981994629
    5. 'split' → logprob: -3.013504981994629
    6. 's' → logprob: -3.513504981994629
    7. 'codes' → logprob: -4.638504981994629
    8. 'strings' → logprob: -5.513504981994629
    9. 'chain' → logprob: -6.138504981994629
    10. 'programme' → logprob: -6.138504981994629

Token 344: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13300330936908722
    2. 's' → logprob: -2.7580032348632812
    3. ' s' → logprob: -3.1330032348632812
    4. '1' → logprob: -4.383003234863281
    5. ' and' → logprob: -6.008003234863281
    6. ' et' → logprob: -6.633003234863281
    7. 'et' → logprob: -8.633003234863281
    8. ' (' → logprob: -8.758003234863281
    9. ' =' → logprob: -8.758003234863281
    10. ' ' → logprob: -9.008003234863281

Token 345: ' chaînes' (ID: 179904)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7519720196723938
    2. 'parts' → logprob: -2.251971960067749
    3. ' chaînes' → logprob: -2.376971960067749
    4. 'part' → logprob: -2.626971960067749
    5. 'chain' → logprob: -3.001971960067749
    6. 'chaine' → logprob: -3.251971960067749
    7. 'literal' → logprob: -3.376971960067749
    8. ' parts' → logprob: -3.501971960067749
    9. 'strings' → logprob: -3.501971960067749
    10. 'string' → logprob: -3.501971960067749

Token 346: ' litt' (ID: 33019)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12906107306480408
    2. 's' → logprob: -2.254060983657837
    3. '   ' → logprob: -4.504061222076416
    4. ' s' → logprob: -5.879061222076416
    5. 'p' → logprob: -6.629061222076416
    6. '_' → logprob: -8.379060745239258
    7. '_s' → logprob: -8.379060745239258
    8. 'parts' → logprob: -9.504060745239258
    9. 'de' → logprob: -9.629060745239258
    10. ' ' → logprob: -9.629060745239258

Token 347: 'érales' (ID: 186658)
  Prédit: 'érales'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érales' → logprob: -0.0007413726998493075
    2. 'éral' → logprob: -8.500741004943848
    3. 'éraux' → logprob: -8.500741004943848
    4. 'érale' → logprob: -8.750741004943848
    5. 'érées' → logprob: -9.750741004943848
    6. 'r' → logprob: -9.875741004943848
    7. 'er' → logprob: -10.625741004943848
    8. 'éralement' → logprob: -10.750741004943848
    9. 'eral' → logprob: -11.250741004943848
    10. 'ral' → logprob: -13.375741004943848

Token 348: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0949578732252121
    2. 'p' → logprob: -2.9699578285217285
    3. 'parts' → logprob: -3.5949578285217285
    4. ' parts' → logprob: -4.8449578285217285
    5. ' p' → logprob: -5.9699578285217285
    6. 'ps' → logprob: -7.3449578285217285
    7. 's' → logprob: -7.4699578285217285
    8. 'part' → logprob: -10.219958305358887
    9. ' s' → logprob: -10.344958305358887
    10. '    
' → logprob: -10.469958305358887

Token 349: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3371880352497101
    2. 'p' → logprob: -1.4621880054473877
    3. ' p' → logprob: -3.8371880054473877
    4. 'parts' → logprob: -3.9621880054473877
    5. ' parts' → logprob: -4.337188243865967
    6. 's' → logprob: -8.087187767028809
    7. 'ps' → logprob: -8.087187767028809
    8. ' s' → logprob: -9.587187767028809
    9. 'a' → logprob: -10.212187767028809
    10. '    
' → logprob: -10.337187767028809

Token 350: ' parts' (ID: 7881)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.09350737184286118
    2. 'parts' (adapté à ' parts') → logprob: -2.4685072898864746
    3. 'ps' → logprob: -5.593507289886475
    4. '   ' → logprob: -8.093507766723633
    5. ' p' → logprob: -8.593507766723633
    6. 'code' → logprob: -8.843507766723633
    7. ' parts' → logprob: -9.218507766723633
    8. 'a' → logprob: -10.343507766723633
    9. 'part' → logprob: -10.718507766723633
    10. 'prog' → logprob: -11.343507766723633

Token 351: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20663997530937195
    2. '_s' → logprob: -2.2066400051116943
    3. '_' → logprob: -2.9566400051116943
    4. 's' → logprob: -3.7066400051116943
    5. ' s' → logprob: -10.331640243530273
    6. ' =' → logprob: -10.956640243530273
    7. '=' → logprob: -11.956640243530273
    8. ' _' → logprob: -13.456640243530273
    9. '```' → logprob: -13.706640243530273
    10. '
' → logprob: -13.831640243530273

Token 352: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868768811225891
    2. '=' → logprob: -1.1368768215179443
    3. ',' → logprob: -12.386877059936523
    4. '=s' → logprob: -13.386877059936523
    5. 's' → logprob: -16.761877059936523
    6. ' ' → logprob: -17.386877059936523
    7. ')' → logprob: -18.386877059936523
    8. '   ' → logprob: -19.136877059936523
    9. ' =
' → logprob: -19.136877059936523
    10. '＝' → logprob: -19.386877059936523

Token 353: ' split' (ID: 12648)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.5491004129871726e-05
    2. ' split' → logprob: -10.000045776367188
    3. '(split' → logprob: -20.750045776367188
    4. '   ' → logprob: -20.875045776367188
    5. 'spl' → logprob: -22.500045776367188
    6. 'strip' → logprob: -22.875045776367188
    7. '.split' → logprob: -23.625045776367188
    8. 'plit' → logprob: -23.875045776367188
    9. 'Split' → logprob: -25.125045776367188
    10. ' ' → logprob: -25.250045776367188

Token 354: '_program' (ID: 58929)
  Prédit: '_program'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_program' → logprob: -3.173704271830502e-06
    2. 'program' → logprob: -12.75000286102295
    3. '_' → logprob: -15.62500286102295
    4. '_PROGRAM' → logprob: -17.125003814697266
    5. '(program' → logprob: -18.875003814697266
    6. '_pro' → logprob: -18.875003814697266
    7. 's' → logprob: -19.000003814697266
    8. ' program' → logprob: -19.500003814697266
    9. 'Program' → logprob: -19.500003814697266
    10. '_prog' → logprob: -21.250003814697266

Token 355: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0002547832846175879
    2. 's' → logprob: -8.62525463104248
    3. '(' → logprob: -9.50025463104248
    4. '(
' → logprob: -15.37525463104248
    5. ')' → logprob: -16.250255584716797
    6. ' (' → logprob: -17.125255584716797
    7. ')(' → logprob: -18.375255584716797
    8. ' s' → logprob: -19.250255584716797
    9. ')s' → logprob: -19.250255584716797
    10. '(S' → logprob: -20.625255584716797

Token 356: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009423951618373394
    2. '(s' → logprob: -4.759423732757568
    3. 's' → logprob: -7.384423732757568
    4. '2' → logprob: -9.259424209594727
    5. '(' → logprob: -9.384424209594727
    6. ')' → logprob: -13.009424209594727
    7. 'r' → logprob: -13.384424209594727
    8. '```' → logprob: -13.634424209594727
    9. ')(' → logprob: -13.884424209594727
    10. '   ' → logprob: -14.259424209594727

Token 357: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2523832321166992
    2. ')
' → logprob: -1.5023832321166992
    3. ',' → logprob: -8.2523832321167
    4. '(s' → logprob: -9.2523832321167
    5. ')
' → logprob: -10.1273832321167
    6. 's' → logprob: -10.7523832321167
    7. '   ' → logprob: -10.8773832321167
    8. ')s' → logprob: -11.8773832321167
    9. '(' → logprob: -12.6273832321167
    10. ')

' → logprob: -13.0023832321167

Token 358: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4889690577983856
    2. ' parts' → logprob: -1.238969087600708
    3. 'parts' → logprob: -2.363969087600708
    4. '
' → logprob: -6.113968849182129
    5. '    
' → logprob: -7.488968849182129
    6. '(parts' → logprob: -8.863968849182129
    7. '  
' → logprob: -10.363968849182129
    8. '   
' → logprob: -10.863968849182129
    9. ' 
' → logprob: -11.488968849182129
    10. '  ' → logprob: -11.488968849182129

Token 359: ' parts' (ID: 7881)
  Prédit: ' parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.4740917682647705
    2. 'parts' (adapté à ' parts') → logprob: -0.9740917682647705
    3. '   ' → logprob: -11.224091529846191
    4. '(parts' → logprob: -14.599091529846191
    5. '.parts' → logprob: -15.349091529846191
    6. 'part' → logprob: -15.474091529846191
    7. 'Parts' → logprob: -16.224092483520508
    8. ' partes' → logprob: -16.474092483520508
    9. '_parts' → logprob: -16.724092483520508
    10. ' ' → logprob: -16.849092483520508

Token 360: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0087516784551553e-05
    2. '_' → logprob: -12.12501049041748
    3. '=' → logprob: -12.87501049041748
    4. ' =' → logprob: -13.50001049041748
    5. ' ' → logprob: -14.62501049041748
    6. '   ' → logprob: -15.87501049041748
    7. 's' → logprob: -17.500009536743164
    8. '1' → logprob: -17.625009536743164
    9. ',' → logprob: -17.875009536743164
    10. '```' → logprob: -18.125009536743164

Token 361: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07243034243583679
    2. '=' → logprob: -2.697430372238159
    3. '(s' → logprob: -6.07243013381958
    4. '=s' → logprob: -9.072430610656738
    5. '(' → logprob: -9.697430610656738
    6. ')' → logprob: -12.072430610656738
    7. 's' → logprob: -13.822430610656738
    8. ' (' → logprob: -14.197430610656738
    9. ',' → logprob: -14.822430610656738
    10. '(S' → logprob: -15.072430610656738

Token 362: ' split' (ID: 12648)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.011048054322600365
    2. ' split' → logprob: -4.511047840118408
    3. '(split' → logprob: -15.386048316955566
    4. '   ' → logprob: -18.01104736328125
    5. 'spl' → logprob: -19.13604736328125
    6. '.split' → logprob: -19.26104736328125
    7. ' ' → logprob: -19.76104736328125
    8. '_split' → logprob: -20.01104736328125
    9. 'plit' → logprob: -20.63604736328125
    10. 'strip' → logprob: -20.76104736328125

Token 363: '_program' (ID: 58929)
  Prédit: '_program'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_program' → logprob: -8.745069499127567e-05
    2. 'program' → logprob: -9.37508773803711
    3. '(s' → logprob: -13.75008773803711
    4. '(program' → logprob: -14.37508773803711
    5. 'rogram' → logprob: -14.50008773803711
    6. 's' → logprob: -15.25008773803711
    7. '_PROGRAM' → logprob: -16.75008773803711
    8. 'Program' → logprob: -17.37508773803711
    9. '_pro' → logprob: -17.37508773803711
    10. '-program' → logprob: -17.75008773803711

Token 364: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -9.372294698550832e-06
    2. ' (' → logprob: -11.750009536743164
    3. '(' → logprob: -13.750009536743164
    4. 's' → logprob: -14.875009536743164
    5. '(
' → logprob: -17.875009536743164
    6. ')' → logprob: -18.500009536743164
    7. ')(' → logprob: -20.250009536743164
    8. ' ' → logprob: -20.625009536743164
    9. '
' → logprob: -20.625009536743164
    10. ' s' → logprob: -21.000009536743164

Token 365: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.016424234956502914
    2. 's' → logprob: -4.141424179077148
    3. '_program' → logprob: -8.266424179077148
    4. 'program' → logprob: -9.266424179077148
    5. 'rogram' → logprob: -11.016424179077148
    6. '_' → logprob: -12.141424179077148
    7. '(s' → logprob: -12.266424179077148
    8. ' s' → logprob: -12.391424179077148
    9. ')' → logprob: -13.141424179077148
    10. 'p' → logprob: -13.891424179077148

Token 366: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2127087504486553e-05
    2. ')
' → logprob: -10.750021934509277
    3. ' )' → logprob: -15.000021934509277
    4. '   ' → logprob: -15.500021934509277
    5. '))' → logprob: -17.500022888183594
    6. ')`' → logprob: -17.500022888183594
    7. ')
' → logprob: -17.750022888183594
    8. 's' → logprob: -18.000022888183594
    9. ')

' → logprob: -18.250022888183594
    10. '),' → logprob: -18.500022888183594

Token 367: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4177432358264923
    2. '   ' → logprob: -1.16774320602417
    3. ' if' → logprob: -4.16774320602417
    4. 'if' → logprob: -4.54274320602417
    5. '    
' → logprob: -5.54274320602417
    6. ' 
' → logprob: -8.917743682861328
    7. '```' → logprob: -9.292743682861328
    8. '   
' → logprob: -9.917743682861328
    9. 'n' → logprob: -10.042743682861328
    10. '  
' → logprob: -11.042743682861328

Token 368: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.000981839606538415
    2. '   ' → logprob: -7.00098180770874
    3. ' if' → logprob: -9.750982284545898
    4. '#' → logprob: -11.750982284545898
    5. 'i' → logprob: -12.750982284545898
    6. '```' → logprob: -15.000982284545898
    7. '
' → logprob: -15.125982284545898
    8. 'm' → logprob: -15.125982284545898
    9. 'diff' → logprob: -15.625982284545898
    10. 'len' → logprob: -15.750982284545898

Token 369: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00020461321400944144
    2. '#' (adapté à ' #') → logprob: -8.500205039978027
    3. 'len' → logprob: -14.375205039978027
    4. ' if' → logprob: -15.875205039978027
    5. 'm' → logprob: -15.875205039978027
    6. 'dif' → logprob: -16.12520408630371
    7. 'diff' → logprob: -16.37520408630371
    8. 'n' → logprob: -17.12520408630371
    9. '```' → logprob: -18.00020408630371
    10. 'count' → logprob: -19.00020408630371

Token 370: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0005607772618532181
    2. '#' → logprob: -7.500560760498047
    3. 'len' → logprob: -12.125560760498047
    4. ' if' → logprob: -14.125560760498047
    5. 'n' → logprob: -14.125560760498047
    6. 'm' → logprob: -15.375560760498047
    7. 'from' → logprob: -15.750560760498047
    8. '   ' → logprob: -16.125560760498047
    9. 'min' → logprob: -16.125560760498047
    10. '```' → logprob: -16.500560760498047

Token 371: ' le' (ID: 505)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.006715967319905758
    2. ' len' → logprob: -5.006715774536133
    3. 'parts' → logprob: -14.256715774536133
    4. ' parts' → logprob: -17.131715774536133
    5. '(len' → logprob: -18.131715774536133
    6. '	len' → logprob: -19.256715774536133
    7. 'length' → logprob: -21.256715774536133
    8. '   ' → logprob: -21.756715774536133
    9. ' ' → logprob: -22.631715774536133
    10. '[len' → logprob: -22.756715774536133

Token 372: ' décou' (ID: 68302)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.7968066206085496e-05
    2. ' len' → logprob: -10.500027656555176
    3. 'parts' → logprob: -15.500027656555176
    4. '(len' → logprob: -16.375028610229492
    5. 'length' → logprob: -18.125028610229492
    6. 'le' → logprob: -19.000028610229492
    7. 'l' → logprob: -20.000028610229492
    8. '[len' → logprob: -20.625028610229492
    9. ' parts' → logprob: -20.750028610229492
    10. '
' → logprob: -21.000028610229492

Token 373: 'page' (ID: 5342)
  Prédit: 'page'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'page' → logprob: -1.4498052223643754e-05
    2. 'p' → logprob: -11.625014305114746
    3. 'pe' → logprob: -12.625014305114746
    4. 'Page' → logprob: -13.375014305114746
    5. 'pages' → logprob: -14.750014305114746
    6. ' page' → logprob: -16.000015258789062
    7. 'PAGE' → logprob: -16.000015258789062
    8. 'pag' → logprob: -17.375015258789062
    9. 'tage' → logprob: -17.500015258789062
    10. 'pl' → logprob: -18.000015258789062

Token 374: ' est' (ID: 893)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.004289353732019663
    2. '(len' → logprob: -6.629289150238037
    3. 'des' → logprob: -6.629289150238037
    4. 'de' → logprob: -7.254289150238037
    5. 'est' → logprob: -8.004289627075195
    6. '   ' → logprob: -8.754289627075195
    7. 'diff' → logprob: -9.129289627075195
    8. ' len' → logprob: -9.254289627075195
    9. 'length' → logprob: -10.504289627075195
    10. '[len' → logprob: -10.629289627075195

Token 375: ' différent' (ID: 114823)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.001852243090979755
    2. '   ' → logprob: -6.876852035522461
    3. ' len' → logprob: -7.751852035522461
    4. 'diff' → logprob: -8.751852035522461
    5. 'None' → logprob: -9.501852035522461
    6. 'different' → logprob: -9.501852035522461
    7. '(len' → logprob: -10.751852035522461
    8. '[len' → logprob: -10.876852035522461
    9. 'not' → logprob: -11.751852035522461
    10. ' différent' → logprob: -12.001852035522461

Token 376: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5338926911354065
    2. ' or' → logprob: -0.9088926911354065
    3. 'or' → logprob: -5.033892631530762
    4. ':' → logprob: -6.408892631530762
    5. 'len' → logprob: -7.033892631530762
    6. ' !=' → logprob: -8.033892631530762
    7. ' len' → logprob: -8.283892631530762
    8. ',' → logprob: -8.408892631530762
    9. '(len' → logprob: -9.158892631530762
    10. '!=' → logprob: -9.283892631530762

Token 377: ' forcément' (ID: 96692)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5904149413108826
    2. ' return' → logprob: -0.8404149413108826
    3. '   ' → logprob: -4.465415000915527
    4. ' if' → logprob: -6.340415000915527
    5. 'if' → logprob: -7.090415000915527
    6. '       ' → logprob: -8.340415000915527
    7. '    ' → logprob: -10.715415000915527
    8. '	return' → logprob: -11.840415000915527
    9. ':return' → logprob: -12.590415000915527
    10. '  ' → logprob: -13.840415000915527

Token 378: ' DIFFER' (ID: 188541)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.09819791465997696
    2. ' return' → logprob: -2.5981979370117188
    3. '   ' → logprob: -3.9731979370117188
    4. '       ' → logprob: -8.723197937011719
    5. '    ' → logprob: -9.848197937011719
    6. '  ' → logprob: -10.098197937011719
    7. ':return' → logprob: -11.348197937011719
    8. ' ' → logprob: -11.598197937011719
    9. '```' → logprob: -12.098197937011719
    10. ' retourner' → logprob: -12.598197937011719

Token 379: 'ENT' (ID: 2829)
  Prédit: 'ENT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ENT' → logprob: -0.07939411699771881
    2. 'ent' → logprob: -2.5793941020965576
    3. '   ' → logprob: -7.704394340515137
    4. '
' → logprob: -11.329394340515137
    5. 'E' → logprob: -11.704394340515137
    6. '```' → logprob: -12.079394340515137
    7. 'rent' → logprob: -12.704394340515137
    8. 'Ent' → logprob: -12.829394340515137
    9. '       ' → logprob: -13.204394340515137
    10. '(ent' → logprob: -13.329394340515137

Token 380: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001490716531407088
    2. ' if' → logprob: -9.50014877319336
    3. 'if' → logprob: -10.37514877319336
    4. '
' → logprob: -10.75014877319336
    5. '    
' → logprob: -10.87514877319336
    6. '  ' → logprob: -14.37514877319336
    7. '   
' → logprob: -15.00014877319336
    8. '    ' → logprob: -15.12514877319336
    9. '	if' → logprob: -15.25014877319336
    10. ',' → logprob: -15.25014877319336

Token 381: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.217951886355877e-05
    2. 'if' → logprob: -10.250061988830566
    3. ' if' → logprob: -10.625061988830566
    4. '    
' → logprob: -13.625061988830566
    5. '
' → logprob: -13.875061988830566
    6. '```' → logprob: -15.750061988830566
    7. '	if' → logprob: -17.125062942504883
    8. '  ' → logprob: -17.250062942504883
    9. '    ' → logprob: -17.375062942504883
    10. '       ' → logprob: -17.750062942504883

Token 382: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02723076194524765
    2. ' if' → logprob: -3.777230739593506
    3. '   ' → logprob: -5.527230739593506
    4. '```' → logprob: -15.152231216430664
    5. '	if' → logprob: -16.902231216430664
    6. 'If' → logprob: -18.027231216430664
    7. ' ' → logprob: -18.652231216430664
    8. '  ' → logprob: -19.652231216430664
    9. '    
' → logprob: -20.652231216430664
    10. '    ' → logprob: -21.152231216430664

Token 383: ' Le' (ID: 2018)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -4.906711546937004e-05
    2. ' if' → logprob: -10.500048637390137
    3. '   ' → logprob: -10.750048637390137
    4. 'If' → logprob: -20.250049591064453
    5. '```' → logprob: -20.375049591064453
    6. '
' → logprob: -21.250049591064453
    7. '	if' → logprob: -22.125049591064453
    8. '    
' → logprob: -22.625049591064453
    9. ' ' → logprob: -23.625049591064453
    10. 'i' → logprob: -23.875049591064453

Token 384: ' décou' (ID: 68302)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02129686437547207
    2. ' if' → logprob: -3.896296977996826
    3. 'len' → logprob: -7.271296977996826
    4. ' len' → logprob: -10.771296501159668
    5. 'e' → logprob: -11.146296501159668
    6. '   ' → logprob: -11.146296501159668
    7. 'f' → logprob: -12.771296501159668
    8. 'elif' → logprob: -13.271296501159668
    9. 'ifs' → logprob: -14.271296501159668
    10. 's' → logprob: -14.271296501159668

Token 385: 'page' (ID: 5342)
  Prédit: 'page'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'page' → logprob: -5.8126592193730175e-05
    2. 'p' → logprob: -10.5000581741333
    3. 'pag' → logprob: -10.8750581741333
    4. 'pages' → logprob: -12.3750581741333
    5. 'Page' → logprob: -13.3750581741333
    6. 'pe' → logprob: -13.6250581741333
    7. 'mage' → logprob: -13.7500581741333
    8. 'tage' → logprob: -14.0000581741333
    9. 'PAGE' → logprob: -14.2500581741333
    10. ' page' → logprob: -15.1250581741333

Token 386: ' doit' (ID: 21822)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3780067563056946
    2. 'len' → logprob: -2.00300669670105
    3. ' if' → logprob: -2.00300669670105
    4. ' len' → logprob: -4.753006935119629
    5. ' =' → logprob: -5.003006935119629
    6. 's' → logprob: -5.003006935119629
    7. '   ' → logprob: -5.753006935119629
    8. '1' → logprob: -5.753006935119629
    9. ' parts' → logprob: -5.753006935119629
    10. 'def' → logprob: -6.128006935119629

Token 387: ' avoir' (ID: 16595)
  Prédit: ' avoir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' avoir' → logprob: -0.6301875114440918
    2. 'avoir' → logprob: -1.8801875114440918
    3. ' have' → logprob: -2.130187511444092
    4. ' être' → logprob: -2.755187511444092
    5. 'have' → logprob: -2.755187511444092
    6. 'être' → logprob: -3.630187511444092
    7. ' be' → logprob: -4.505187511444092
    8. '=' → logprob: -4.880187511444092
    9. 'len' → logprob: -5.130187511444092
    10. ''avoir' → logprob: -5.630187511444092

Token 388: ' même' (ID: 9679)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0021540687885135412
    2. ' len' → logprob: -6.2521538734436035
    3. 'le' → logprob: -9.127154350280762
    4. 'the' → logprob: -9.752154350280762
    5. 'la' → logprob: -10.377154350280762
    6. '(len' → logprob: -11.627154350280762
    7. ' la' → logprob: -11.752154350280762
    8. ' le' → logprob: -12.377154350280762
    9. ' the' → logprob: -13.127154350280762
    10. '[len' → logprob: -13.502154350280762

Token 389: ' nombre' (ID: 9733)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.25298717617988586
    2. 'length' → logprob: -1.7529871463775635
    3. 'long' → logprob: -3.0029871463775635
    4. 'tail' → logprob: -7.877987384796143
    5. ' longueur' → logprob: -8.752986907958984
    6. 'leng' → logprob: -9.752986907958984
    7. 'l' → logprob: -11.377986907958984
    8. ' length' → logprob: -11.502986907958984
    9. 'lon' → logprob: -13.002986907958984
    10. 't' → logprob: -13.127986907958984

Token 390: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.41802749037742615
    2. 'de' → logprob: -1.2930275201797485
    3. '   ' → logprob: -3.793027400970459
    4. '(parts' → logprob: -4.043027400970459
    5. '(len' → logprob: -4.418027400970459
    6. '()' → logprob: -5.293027400970459
    7. 'len' → logprob: -5.668027400970459
    8. ' parts' → logprob: -6.668027400970459
    9. 'parts' → logprob: -6.918027400970459
    10. 'd' → logprob: -7.043027400970459

Token 391: ''' (ID: 6)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.024935470893979073
    2. ' éléments' → logprob: -4.024935245513916
    3. ''' → logprob: -5.524935245513916
    4. 'parts' → logprob: -6.524935245513916
    5. 'elements' → logprob: -7.399935245513916
    6. 'é' → logprob: -8.024935722351074
    7. ' parts' → logprob: -8.774935722351074
    8. 'elts' → logprob: -9.774935722351074
    9. 'part' → logprob: -10.149935722351074
    10. 'él' → logprob: -10.524935722351074

Token 392: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.0010808025253936648
    2. 'elements' → logprob: -7.8760809898376465
    3. 'parts' → logprob: -8.626080513000488
    4. 'part' → logprob: -8.751080513000488
    5. ' éléments' → logprob: -9.001080513000488
    6. ''' → logprob: -9.501080513000488
    7. 'é' → logprob: -9.501080513000488
    8. 'él' → logprob: -10.126080513000488
    9. 'elts' → logprob: -11.001080513000488
    10. '
' → logprob: -11.626080513000488

Token 393: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.00017672323156148195
    2. 'ment' → logprob: -9.000176429748535
    3. 'm' → logprob: -10.125176429748535
    4. 'nts' → logprob: -12.750176429748535
    5. 'ents' → logprob: -13.125176429748535
    6. 'parts' → logprob: -13.500176429748535
    7. 'éments' → logprob: -13.875176429748535
    8. 'ements' → logprob: -14.250176429748535
    9. '```' → logprob: -14.250176429748535
    10. 'ms' → logprob: -14.875176429748535

Token 394: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022989677265286446
    2. ' if' → logprob: -3.8979897499084473
    3. 'if' → logprob: -6.147989749908447
    4. ',' → logprob: -8.397989273071289
    5. '	if' → logprob: -10.647989273071289
    6. '       ' → logprob: -11.147989273071289
    7. '  ' → logprob: -11.147989273071289
    8. '    
' → logprob: -11.522989273071289
    9. '    ' → logprob: -12.272989273071289
    10. ' ' → logprob: -12.397989273071289

Token 395: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005423958413302898
    2. ' if' → logprob: -5.3804240226745605
    3. 'if' → logprob: -7.1304240226745605
    4. '```' → logprob: -13.130423545837402
    5. '    
' → logprob: -14.505423545837402
    6. '	if' → logprob: -15.505423545837402
    7. '    ' → logprob: -16.50542449951172
    8. '       ' → logprob: -16.63042449951172
    9. '
' → logprob: -17.00542449951172
    10. '  ' → logprob: -17.13042449951172

Token 396: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8114520907402039
    2. '   ' → logprob: -1.0614521503448486
    3. 'if' → logprob: -1.5614521503448486
    4. '```' → logprob: -13.31145191192627
    5. '	if' → logprob: -14.43645191192627
    6. ' ' → logprob: -14.81145191192627
    7. '    ' → logprob: -15.56145191192627
    8. 'If' → logprob: -15.68645191192627
    9. '    
' → logprob: -16.061452865600586
    10. '  ' → logprob: -16.811452865600586

Token 397: ' et' (ID: 859)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.008816413581371307
    2. ' if' → logprob: -4.758816242218018
    3. '   ' → logprob: -8.508816719055176
    4. '```' → logprob: -16.50881576538086
    5. '
' → logprob: -19.88381576538086
    6. '	if' → logprob: -20.00881576538086
    7. 'If' → logprob: -20.13381576538086
    8. ' ' → logprob: -20.63381576538086
    9. '    
' → logprob: -22.63381576538086
    10. '  ' → logprob: -22.63381576538086

Token 398: ' les' (ID: 1341)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00911497138440609
    2. ' len' → logprob: -4.759114742279053
    3. 'all' → logprob: -8.009115219116211
    4. ' all' → logprob: -9.009115219116211
    5. '(len' → logprob: -10.384115219116211
    6. '
' → logprob: -12.134115219116211
    7. 'for' → logprob: -12.134115219116211
    8. 'parts' → logprob: -13.259115219116211
    9. '[len' → logprob: -14.759115219116211
    10. 'if' → logprob: -14.884115219116211

Token 399: ' zones' (ID: 34102)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.12805242836475372
    2. 'all' → logprob: -2.3780524730682373
    3. '(len' → logprob: -4.128052234649658
    4. ' all' → logprob: -5.253052234649658
    5. 'for' → logprob: -6.003052234649658
    6. ' len' → logprob: -6.128052234649658
    7. 'parts' → logprob: -7.378052234649658
    8. '[len' → logprob: -8.378052711486816
    9. '#' → logprob: -8.628052711486816
    10. '(all' → logprob: -9.503052711486816

Token 400: ' hors' (ID: 26087)
  Prédit: ' hors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hors' → logprob: -0.41976308822631836
    2. 'hors' → logprob: -1.5447630882263184
    3. 'h' → logprob: -2.7947630882263184
    4. 'en' → logprob: -4.919763088226318
    5. 'even' → logprob: -5.044763088226318
    6. 'code' → logprob: -5.169763088226318
    7. 'pair' → logprob: -5.294763088226318
    8. 'de' → logprob: -5.544763088226318
    9. 'for' → logprob: -5.544763088226318
    10. '   ' → logprob: -5.669763088226318

Token 401: ' gu' (ID: 1704)
  Prédit: ' gu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gu' → logprob: -0.059158749878406525
    2. 'gu' → logprob: -3.5591588020324707
    3. 'g' → logprob: -4.059158802032471
    4. ' des' → logprob: -5.184158802032471
    5. '   ' → logprob: -6.809158802032471
    6. 'de' → logprob: -7.059158802032471
    7. ' quotes' → logprob: -7.059158802032471
    8. ' de' → logprob: -7.184158802032471
    9. ' code' → logprob: -7.559158802032471
    10. 'des' → logprob: -7.684158802032471

Token 402: 'ille' (ID: 3301)
  Prédit: 'uil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uil' → logprob: -0.10176041722297668
    2. 'u' → logprob: -2.3517603874206543
    3. 'il' → logprob: -6.976760387420654
    4. 'uille' → logprob: -8.101760864257812
    5. '"' → logprob: -8.976760864257812
    6. 'ille' → logprob: -10.351760864257812
    7. 'ile' → logprob: -10.351760864257812
    8. 'uel' → logprob: -11.101760864257812
    9. 'ui' → logprob: -11.226760864257812
    10. 'i' → logprob: -11.351760864257812

Token 403: 'mets' (ID: 153788)
  Prédit: 'mets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mets' → logprob: -0.0016425730427727103
    2. 'met' → logprob: -6.50164270401001
    3. 'ets' → logprob: -9.251642227172852
    4. 'ts' → logprob: -10.376642227172852
    5. 'chets' → logprob: -12.126642227172852
    6. 'u' → logprob: -13.001642227172852
    7. 'lets' → logprob: -13.251642227172852
    8. 'm' → logprob: -13.626642227172852
    9. 'quets' → logprob: -14.751642227172852
    10. 'pets' → logprob: -14.751642227172852

Token 404: ' (' (ID: 350)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.05973992496728897
    2. ' for' → logprob: -3.684739828109741
    3. 'if' → logprob: -3.809739828109741
    4. '   ' → logprob: -5.05974006652832
    5. 'for' → logprob: -5.93474006652832
    6. ' must' → logprob: -7.55974006652832
    7. ' ' → logprob: -8.68474006652832
    8. ' ==' → logprob: -8.68474006652832
    9. ' not' → logprob: -9.05974006652832
    10. ' have' → logprob: -9.05974006652832

Token 405: 'indices' (ID: 30992)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8776373863220215
    2. 'parts' → logprob: -1.7526373863220215
    3. ' parts' → logprob: -2.0026373863220215
    4. 'len' → logprob: -2.1276373863220215
    5. ' for' → logprob: -2.2526373863220215
    6. ' len' → logprob: -3.8776373863220215
    7. 'i' → logprob: -5.1276373863220215
    8. '[len' → logprob: -5.2526373863220215
    9. ' i' → logprob: -5.6276373863220215
    10. '   ' → logprob: -5.7526373863220215

Token 406: ' pairs' (ID: 24702)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.7434777021408081
    2. 'pair' → logprob: -1.743477702140808
    3. ' pairs' → logprob: -1.868477702140808
    4. ' pair' → logprob: -2.6184778213500977
    5. 'pairs' → logprob: -3.2434778213500977
    6. ' p' → logprob: -3.7434778213500977
    7. ' ' → logprob: -3.9934778213500977
    8. '[' → logprob: -4.368477821350098
    9. ' %' → logprob: -4.868477821350098
    10. 'p' → logprob: -5.368477821350098

Token 407: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011049943044781685
    2. ' )' → logprob: -5.261049747467041
    3. '   ' → logprob: -5.386049747467041
    4. ' doivent' → logprob: -8.0110502243042
    5. ' for' → logprob: -8.3860502243042
    6. 'for' → logprob: -8.3860502243042
    7. ' must' → logprob: -9.2610502243042
    8. ',' → logprob: -9.8860502243042
    9. 'must' → logprob: -10.2610502243042
    10. ' dans' → logprob: -10.7610502243042

Token 408: ' doivent' (ID: 44722)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.22514520585536957
    2. ' must' → logprob: -2.350145101547241
    3. ' if' → logprob: -3.600145101547241
    4. '   ' → logprob: -4.10014533996582
    5. ' have' → logprob: -4.22514533996582
    6. 'for' → logprob: -4.47514533996582
    7. ' ==' → logprob: -4.72514533996582
    8. ' are' → logprob: -4.97514533996582
    9. ' not' → logprob: -5.72514533996582
    10. ' !=' → logprob: -5.85014533996582

Token 409: ' être' (ID: 9104)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -1.1340733766555786
    2. 'have' → logprob: -1.5090733766555786
    3. '==' → logprob: -1.7590733766555786
    4. ' have' → logprob: -2.259073257446289
    5. ' être' → logprob: -3.259073257446289
    6. 'be' → logprob: -3.384073257446289
    7. 'être' → logprob: -3.509073257446289
    8. 'avoir' → logprob: -3.634073257446289
    9. ' avoir' → logprob: -4.509073257446289
    10. 'match' → logprob: -4.759073257446289

Token 410: ' les' (ID: 1341)
  Prédit: 'ident'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ident' → logprob: -0.35398319363594055
    2. 'equal' → logprob: -1.8539831638336182
    3. ' ident' → logprob: -2.353983163833618
    4. 'len' → logprob: -3.728983163833618
    5. '==' → logprob: -4.978983402252197
    6. ' identical' → logprob: -5.603983402252197
    7. ' ég' → logprob: -6.228983402252197
    8. ' equal' → logprob: -6.353983402252197
    9. 'égal' → logprob: -6.478983402252197
    10. '   ' → logprob: -6.728983402252197

Token 411: ' mêmes' (ID: 71634)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.37835434079170227
    2. 'same' → logprob: -1.3783543109893799
    3. ' mêmes' → logprob: -2.87835431098938
    4. ' same' → logprob: -5.503354549407959
    5. ' même' → logprob: -6.003354549407959
    6. ' m' → logprob: -9.2533540725708
    7. 'mem' → logprob: -10.0033540725708
    8. ' mesmos' → logprob: -10.8783540725708
    9. ' mesmas' → logprob: -11.1283540725708
    10. 's' → logprob: -11.5033540725708

Token 412: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033759113866835833
    2. '    
' → logprob: -6.128376007080078
    3. '
' → logprob: -6.753376007080078
    4. '   
' → logprob: -11.753376007080078
    5. ',' → logprob: -12.503376007080078
    6. ' if' → logprob: -13.128376007080078
    7. ' for' → logprob: -13.253376007080078
    8. '  
' → logprob: -13.378376007080078
    9. '    ' → logprob: -13.503376007080078
    10. '```' → logprob: -14.003376007080078

Token 413: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.27099974633893e-05
    2. 'if' → logprob: -11.750012397766113
    3. ' if' → logprob: -12.750012397766113
    4. '
' → logprob: -14.000012397766113
    5. '    
' → logprob: -14.500012397766113
    6. '```' → logprob: -15.000012397766113
    7. 'for' → logprob: -15.375012397766113
    8. ' for' → logprob: -18.00001335144043
    9. '    ' → logprob: -18.50001335144043
    10. '  ' → logprob: -18.62501335144043

Token 414: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34909048676490784
    2. 'if' (adapté à ' if') → logprob: -1.3490904569625854
    3. ' if' → logprob: -3.349090576171875
    4. 'for' → logprob: -9.599090576171875
    5. '
' → logprob: -12.349090576171875
    6. ' for' → logprob: -12.974090576171875
    7. '	if' → logprob: -13.474090576171875
    8. '    
' → logprob: -13.724090576171875
    9. '```' → logprob: -13.974090576171875
    10. '    ' → logprob: -16.349090576171875

Token 415: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00043126524542458355
    2. ' len' → logprob: -7.750431060791016
    3. '(len' → logprob: -14.750431060791016
    4. '   ' → logprob: -15.750431060791016
    5. '	len' → logprob: -20.875431060791016
    6. ' ' → logprob: -22.125431060791016
    7. '  ' → logprob: -22.375431060791016
    8. '    ' → logprob: -23.750431060791016
    9. '[len' → logprob: -24.125431060791016
    10. 'parts' → logprob: -24.500431060791016

Token 416: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -1.9361264946837764e-07
    2. 'parts' → logprob: -15.75
    3. ' parts' → logprob: -20.125
    4. 'Parts' → logprob: -23.625
    5. '(' → logprob: -23.75
    6. '_parts' → logprob: -24.125
    7. '(points' → logprob: -24.375
    8. ' (' → logprob: -24.875
    9. '(part' → logprob: -25.125
    10. '.parts' → logprob: -25.625

Token 417: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2258773297071457
    2. '(parts' → logprob: -1.600877285003662
    3. 'parts' → logprob: -8.10087776184082
    4. ')' → logprob: -9.35087776184082
    5. '(' → logprob: -10.47587776184082
    6. '(s' → logprob: -11.10087776184082
    7. ' parts' → logprob: -11.22587776184082
    8. '(p' → logprob: -12.35087776184082
    9. 's' → logprob: -12.35087776184082
    10. '```' → logprob: -13.35087776184082

Token 418: ')' (ID: 8)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.7652122378349304
    2. ')' → logprob: -1.0152122974395752
    3. '!=' → logprob: -1.7652122974395752
    4. ' )' → logprob: -7.265212059020996
    5. ')!=' → logprob: -7.515212059020996
    6. '()' → logprob: -11.515212059020996
    7. '()!=' → logprob: -11.515212059020996
    8. ']' → logprob: -11.640212059020996
    9. '   ' → logprob: -12.390212059020996
    10. '```' → logprob: -12.515212059020996

Token 419: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.07897913455963135
    2. ' !=' → logprob: -2.578979015350342
    3. '()!=' → logprob: -9.7039794921875
    4. ')!=' → logprob: -10.7039794921875
    5. ')' → logprob: -13.0789794921875
    6. '!==' → logprob: -13.4539794921875
    7. '```' → logprob: -13.9539794921875
    8. ']!=' → logprob: -14.9539794921875
    9. '<>' → logprob: -15.0789794921875
    10. '   ' → logprob: -15.2039794921875

Token 420: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.15310683415737e-05
    2. ' len' → logprob: -10.750021934509277
    3. '   ' → logprob: -17.50002098083496
    4. '(len' → logprob: -20.00002098083496
    5. '	len' → logprob: -20.25002098083496
    6. '[len' → logprob: -21.87502098083496
    7. '  ' → logprob: -22.75002098083496
    8. '       ' → logprob: -23.37502098083496
    9. '           ' → logprob: -23.87502098083496
    10. ',len' → logprob: -24.00002098083496

Token 421: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.005669237580150366
    2. 'parts' → logprob: -5.255669116973877
    3. ' parts' → logprob: -7.755669116973877
    4. ' (' → logprob: -11.880669593811035
    5. '_parts' → logprob: -17.00566864013672
    6. '.parts' → logprob: -17.75566864013672
    7. '(' → logprob: -18.00566864013672
    8. '   ' → logprob: -18.13066864013672
    9. ')' → logprob: -18.25566864013672
    10. 'Parts' → logprob: -18.50566864013672

Token 422: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03502550721168518
    2. '2' → logprob: -3.4100255966186523
    3. ')' → logprob: -7.410025596618652
    4. 'parts' → logprob: -7.910025596618652
    5. ' parts' → logprob: -8.535025596618652
    6. '(parts' → logprob: -8.785025596618652
    7. '_parts' → logprob: -11.160025596618652
    8. '   ' → logprob: -11.160025596618652
    9. ' ' → logprob: -11.410025596618652
    10. '```' → logprob: -11.535025596618652

Token 423: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5835934281349182
    2. ' or' → logprob: -0.8335934281349182
    3. '):' → logprob: -5.208593368530273
    4. 'or' → logprob: -6.333593368530273
    5. ' )' → logprob: -9.083593368530273
    6. '):
' → logprob: -9.083593368530273
    7. ':' → logprob: -9.583593368530273
    8. '   ' → logprob: -9.833593368530273
    9. '       ' → logprob: -11.333593368530273
    10. '	or' → logprob: -12.333593368530273

Token 424: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007624607533216476
    2. '
' → logprob: -7.625762462615967
    3. ' return' → logprob: -8.750761985778809
    4. 'return' → logprob: -9.375761985778809
    5. '   ' → logprob: -11.000761985778809
    6. ':
' → logprob: -12.625761985778809
    7. '\n' → logprob: -12.625761985778809
    8. ' or' → logprob: -13.000761985778809
    9. '```' → logprob: -13.375761985778809
    10. '	return' → logprob: -13.875761985778809

Token 425: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8133626580238342
    2. 'return' (adapté à ' return') → logprob: -0.8133626580238342
    3. ' return' → logprob: -2.1883625984191895
    4. '   ' → logprob: -6.9383625984191895
    5. '	return' → logprob: -8.938363075256348
    6. '
' → logprob: -10.063363075256348
    7. '```' → logprob: -11.938363075256348
    8. ' ' → logprob: -12.063363075256348
    9. ':return' → logprob: -12.313363075256348
    10. '           ' → logprob: -13.063363075256348

Token 426: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.16965676844120026
    2. ' "' → logprob: -1.919656753540039
    3. '"D' → logprob: -4.669656753540039
    4. '   ' → logprob: -11.919656753540039
    5. '"d' → logprob: -12.419656753540039
    6. ' DIFFER' → logprob: -14.044656753540039
    7. ''D' → logprob: -14.919656753540039
    8. ' ' → logprob: -15.294656753540039
    9. ''' → logprob: -15.669656753540039
    10. '	' → logprob: -16.16965675354004

Token 427: 'DI' (ID: 20764)
  Prédit: 'DI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DI' → logprob: -0.0025068165268749
    2. '"' → logprob: -6.002506732940674
    3. '"D' → logprob: -10.502507209777832
    4. ''D' → logprob: -12.627507209777832
    5. ' DI' → logprob: -16.252506256103516
    6. '   ' → logprob: -16.502506256103516
    7. '_DI' → logprob: -16.877506256103516
    8. ' DIFFER' → logprob: -17.127506256103516
    9. '"d' → logprob: -17.627506256103516
    10. '```' → logprob: -18.127506256103516

Token 428: 'FFER' (ID: 21805)
  Prédit: 'FFER'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'FFER' → logprob: -0.00021557629224844277
    2. 'F' → logprob: -8.750215530395508
    3. 'FF' → logprob: -9.875215530395508
    4. 'FFE' → logprob: -12.375215530395508
    5. '"' → logprob: -14.750215530395508
    6. 'FER' → logprob: -15.250215530395508
    7. 'I' → logprob: -16.125215530395508
    8. '   ' → logprob: -16.125215530395508
    9. '
' → logprob: -16.375215530395508
    10. 'R' → logprob: -16.625215530395508

Token 429: 'ENT' (ID: 2829)
  Prédit: 'ENT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ENT' → logprob: -1.2664456789934775e-06
    2. '
' → logprob: -14.125000953674316
    3. 'ER' → logprob: -16.000001907348633
    4. '"' → logprob: -16.750001907348633
    5. 'RE' → logprob: -17.000001907348633
    6. '   ' → logprob: -17.375001907348633
    7. '

' → logprob: -17.625001907348633
    8. 'ENTE' → logprob: -17.875001907348633
    9. ' ENT' → logprob: -18.125001907348633
    10. '...' → logprob: -18.125001907348633

Token 430: '"
' (ID: 1092)
  Prédit: '"
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"
' → logprob: -0.772814154624939
    2. '"' → logprob: -1.022814154624939
    3. '   ' → logprob: -2.0228142738342285
    4. '\n' → logprob: -3.6478142738342285
    5. '
' → logprob: -4.0228142738342285
    6. '    
' → logprob: -6.3978142738342285
    7. ')
' → logprob: -8.52281379699707
    8. '"

' → logprob: -8.52281379699707
    9. '  
' → logprob: -9.14781379699707
    10. ')' → logprob: -9.77281379699707

Token 431: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05164302885532379
    2. '    
' → logprob: -3.301643133163452
    3. ' 
' → logprob: -5.301642894744873
    4. '   ' → logprob: -5.301642894744873
    5. '   
' → logprob: -6.051642894744873
    6. '  
' → logprob: -6.926642894744873
    7. '

' → logprob: -10.426643371582031
    8. '     
' → logprob: -10.426643371582031
    9. '\n' → logprob: -10.551643371582031
    10. 'for' → logprob: -10.551643371582031

Token 432: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.19533288478851318
    2. ' for' → logprob: -2.1953330039978027
    3. '   ' → logprob: -3.1953330039978027
    4. '
' → logprob: -3.6953330039978027
    5. '    
' → logprob: -8.195332527160645
    6. ' 
' → logprob: -10.945332527160645
    7. '	for' → logprob: -11.070332527160645
    8. '```' → logprob: -12.570332527160645
    9. '   
' → logprob: -12.695332527160645
    10. 'if' → logprob: -12.695332527160645

Token 433: ' idx' (ID: 14016)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.53550124168396
    2. 'idx' → logprob: -1.53550124168396
    3. ' idx' → logprob: -2.03550124168396
    4. 'i' → logprob: -2.78550124168396
    5. ' k' → logprob: -5.285501480102539
    6. ' i' → logprob: -6.785501480102539
    7. 'index' → logprob: -7.285501480102539
    8. ' index' → logprob: -9.410501480102539
    9. 'x' → logprob: -14.285501480102539
    10. '   ' → logprob: -15.535501480102539

Token 434: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01418301835656166
    2. 'in' → logprob: -4.264183044433594
    3. ' ' → logprob: -11.764183044433594
    4. ',' → logprob: -12.264183044433594
    5. '	in' → logprob: -12.514183044433594
    6. '   ' → logprob: -13.764183044433594
    7. ' i' → logprob: -14.264183044433594
    8. '_in' → logprob: -14.514183044433594
    9. 'i' → logprob: -15.014183044433594
    10. '```' → logprob: -15.264183044433594

Token 435: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0012297539506107569
    2. ' range' → logprob: -6.751229763031006
    3. '[' → logprob: -9.751229286193848
    4. '(range' → logprob: -14.376229286193848
    5. 'filter' → logprob: -14.626229286193848
    6. ' [' → logprob: -15.876229286193848
    7. '[i' → logprob: -16.376230239868164
    8. '	range' → logprob: -17.126230239868164
    9. 'i' → logprob: -18.626230239868164
    10. 'r' → logprob: -19.251230239868164

Token 436: '(' (ID: 7)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004528374411165714
    2. '(' → logprob: -7.750452995300293
    3. 'len' → logprob: -11.000452995300293
    4. ' ' → logprob: -12.625452995300293
    5. '(len' → logprob: -13.625452995300293
    6. '   ' → logprob: -14.000452995300293
    7. ' len' → logprob: -16.750452041625977
    8. '1' → logprob: -17.875452041625977
    9. '    ' → logprob: -18.375452041625977
    10. '[' → logprob: -18.625452041625977

Token 437: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1002885028719902
    2. 'len' → logprob: -2.3502883911132812
    3. ' len' → logprob: -9.600288391113281
    4. ' ' → logprob: -11.350288391113281
    5. '(len' → logprob: -13.975288391113281
    6. '   ' → logprob: -14.100288391113281
    7. '1' → logprob: -15.350288391113281
    8. '	len' → logprob: -15.725288391113281
    9. ',len' → logprob: -16.22528839111328
    10. '2' → logprob: -16.22528839111328

Token 438: ',' (ID: 11)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.7613053321838379
    2. ',' → logprob: -1.011305332183838
    3. ',len' → logprob: -2.261305332183838
    4. '0' → logprob: -3.386305332183838
    5. '(len' → logprob: -3.761305332183838
    6. ' len' → logprob: -4.886305332183838
    7. '(' → logprob: -9.01130485534668
    8. ' ,' → logprob: -9.26130485534668
    9. '   ' → logprob: -9.51130485534668
    10. ' ' → logprob: -10.26130485534668

Token 439: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -6.392202976712724e-06
    2. ' len' → logprob: -12.000006675720215
    3. '   ' → logprob: -16.0000057220459
    4. '(len' → logprob: -19.8750057220459
    5. '	len' → logprob: -19.8750057220459
    6. ',len' → logprob: -20.8750057220459
    7. '       ' → logprob: -22.1250057220459
    8. '  ' → logprob: -22.2500057220459
    9. ' ' → logprob: -22.7500057220459
    10. '    ' → logprob: -22.8750057220459

Token 440: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -6.670925358776003e-05
    2. 'parts' → logprob: -9.625066757202148
    3. ' parts' → logprob: -14.375066757202148
    4. '(' → logprob: -18.25006675720215
    5. ' (' → logprob: -18.62506675720215
    6. 'Parts' → logprob: -19.25006675720215
    7. '_parts' → logprob: -19.37506675720215
    8. '.parts' → logprob: -19.50006675720215
    9. 's' → logprob: -20.12506675720215
    10. '(points' → logprob: -20.37506675720215

Token 441: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017763269133865833
    2. '(parts' → logprob: -6.501776218414307
    3. 'parts' → logprob: -8.876776695251465
    4. ')' → logprob: -10.001776695251465
    5. '(' → logprob: -10.876776695251465
    6. ' parts' → logprob: -11.001776695251465
    7. '),' → logprob: -11.001776695251465
    8. ',' → logprob: -11.001776695251465
    9. '2' → logprob: -12.126776695251465
    10. '[' → logprob: -13.001776695251465

Token 442: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005812693270854652
    2. ' ,' → logprob: -7.50058126449585
    3. '),' → logprob: -10.500581741333008
    4. '   ' → logprob: -14.625581741333008
    5. '(),' → logprob: -16.250581741333008
    6. ' ' → logprob: -16.750581741333008
    7. ' ),' → logprob: -17.625581741333008
    8. '```' → logprob: -17.750581741333008
    9. '，' → logprob: -17.875581741333008
    10. ',),' → logprob: -18.000581741333008

Token 443: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.375004768371582
    3. '1' → logprob: -15.375004768371582
    4. '   ' → logprob: -17.125003814697266
    5. '
' → logprob: -18.500003814697266
    6. ')' → logprob: -19.750003814697266
    7. '```' → logprob: -19.750003814697266
    8. '

' → logprob: -20.875003814697266
    9. '  ' → logprob: -21.375003814697266
    10. '۲' → logprob: -22.125003814697266

Token 444: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.750001907348633
    3. '1' → logprob: -14.750001907348633
    4. '   ' → logprob: -18.750001907348633
    5. ')' → logprob: -20.375001907348633
    6. '```' → logprob: -21.625001907348633
    7. '
' → logprob: -22.500001907348633
    8. '  ' → logprob: -22.500001907348633
    9. '۲' → logprob: -22.750001907348633
    10. '２' → logprob: -23.500001907348633

Token 445: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1003248542547226
    2. '):' → logprob: -2.350324869155884
    3. ':' → logprob: -9.850324630737305
    4. ')' → logprob: -10.725324630737305
    5. '):
' → logprob: -10.975324630737305
    6. '   ' → logprob: -10.975324630737305
    7. ':
' → logprob: -12.100324630737305
    8. ',' → logprob: -13.475324630737305
    9. '):

' → logprob: -14.225324630737305
    10. ' ):
' → logprob: -14.225324630737305

Token 446: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006883674650453031
    2. ' if' → logprob: -7.375688552856445
    3. 'if' → logprob: -10.000688552856445
    4. '   ' → logprob: -11.375688552856445
    5. '           ' → logprob: -14.375688552856445
    6. '      ' → logprob: -14.375688552856445
    7. '<|end|>' → logprob: -14.375688552856445
    8. ' ' → logprob: -14.500688552856445
    9. '     ' → logprob: -14.500688552856445
    10. ':' → logprob: -14.500688552856445

Token 447: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5708258152008057
    2. ' if' → logprob: -0.9458258152008057
    3. 'if' (adapté à ' if') → logprob: -3.0708258152008057
    4. '   ' → logprob: -8.945825576782227
    5. '	if' → logprob: -10.445825576782227
    6. ' ' → logprob: -11.195825576782227
    7. '           ' → logprob: -11.820825576782227
    8. '    ' → logprob: -12.445825576782227
    9. ',' → logprob: -12.695825576782227
    10. 'If' → logprob: -13.070825576782227

Token 448: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.048589076846838
    2. ' parts' → logprob: -3.048588991165161
    3. '(parts' → logprob: -13.798588752746582
    4. '   ' → logprob: -14.548588752746582
    5. '.parts' → logprob: -17.1735897064209
    6. '       ' → logprob: -17.4235897064209
    7. 'Parts' → logprob: -17.4235897064209
    8. 'part' → logprob: -17.6735897064209
    9. '           ' → logprob: -17.9235897064209
    10. '_parts' → logprob: -17.9235897064209

Token 449: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005023968406021595
    2. '[idx' → logprob: -7.625502586364746
    3. '[' → logprob: -12.000502586364746
    4. 'idx' → logprob: -13.125502586364746
    5. '```' → logprob: -13.375502586364746
    6. '   ' → logprob: -14.250502586364746
    7. 'parts' → logprob: -14.500502586364746
    8. '(idx' → logprob: -15.250502586364746
    9. ']' → logprob: -15.375502586364746
    10. '[int' → logprob: -15.438002586364746

Token 450: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.3856492842023727e-06
    2. '[' → logprob: -13.750000953674316
    3. ' [' → logprob: -15.750000953674316
    4. '```' → logprob: -16.875001907348633
    5. '[id' → logprob: -17.125001907348633
    6. 'idx' → logprob: -18.000001907348633
    7. '[int' → logprob: -19.500001907348633
    8. '[param' → logprob: -20.000001907348633
    9. '[token' → logprob: -20.000001907348633
    10. ' idx' → logprob: -20.000001907348633

Token 451: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.38781988620758057
    2. ' !=' → logprob: -1.1378198862075806
    3. ']!=' → logprob: -7.387819766998291
    4. ')!=' → logprob: -8.26282024383545
    5. ']' → logprob: -10.51282024383545
    6. '()!=' → logprob: -10.88782024383545
    7. ')' → logprob: -11.26282024383545
    8. '!==' → logprob: -11.51282024383545
    9. '<>' → logprob: -14.51282024383545
    10. ' ]' → logprob: -14.76282024383545

Token 452: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.06198505312204361
    2. ' !=' → logprob: -2.8119850158691406
    3. ')!=' → logprob: -11.93698501586914
    4. '!==' → logprob: -12.31198501586914
    5. '()!=' → logprob: -12.68698501586914
    6. ']!=' → logprob: -13.31198501586914
    7. '.strip' → logprob: -13.81198501586914
    8. '<>' → logprob: -15.56198501586914
    9. '```' → logprob: -16.43698501586914
    10. '!='' → logprob: -16.43698501586914

Token 453: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.20141372084617615
    2. ' parts' → logprob: -1.7014137506484985
    3. '(parts' → logprob: -14.826414108276367
    4. '_parts' → logprob: -17.951414108276367
    5. '.parts' → logprob: -18.576414108276367
    6. 'Parts' → logprob: -18.826414108276367
    7. '   ' → logprob: -18.951414108276367
    8. ' partes' → logprob: -19.076414108276367
    9. ' ' → logprob: -19.201414108276367
    10. 'part' → logprob: -19.326414108276367

Token 454: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0022073546424508095
    2. '[idx' → logprob: -6.127207279205322
    3. 'idx' → logprob: -11.12720775604248
    4. '1' → logprob: -13.12720775604248
    5. 's' → logprob: -13.37720775604248
    6. '```' → logprob: -13.75220775604248
    7. '[' → logprob: -14.00220775604248
    8. '(idx' → logprob: -14.12720775604248
    9. '_' → logprob: -15.62720775604248
    10. '   ' → logprob: -15.75220775604248

Token 455: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.2664456789934775e-06
    2. 'idx' → logprob: -13.750000953674316
    3. ' idx' → logprob: -17.125001907348633
    4. '[' → logprob: -17.625001907348633
    5. '   ' → logprob: -18.250001907348633
    6. '(idx' → logprob: -18.375001907348633
    7. '	idx' → logprob: -18.500001907348633
    8. '```' → logprob: -18.875001907348633
    9. '[
' → logprob: -20.125001907348633
    10. '       ' → logprob: -20.375001907348633

Token 456: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6028308868408203
    2. '       ' → logprob: -1.9778308868408203
    3. ']:' → logprob: -2.1028308868408203
    4. '):' → logprob: -2.4778308868408203
    5. '):
' → logprob: -3.2278308868408203
    6. ':
' → logprob: -3.3528308868408203
    7. ']:
' → logprob: -4.10283088684082
    8. ':return' → logprob: -4.85283088684082
    9. '   ' → logprob: -5.97783088684082
    10. ']' → logprob: -6.22783088684082

Token 457: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010691223666071892
    2. '       ' → logprob: -5.260691165924072
    3. 'return' → logprob: -5.260691165924072
    4. ' return' → logprob: -8.38569164276123
    5. '   ' → logprob: -11.51069164276123
    6. '
' → logprob: -11.88569164276123
    7. '               ' → logprob: -12.63569164276123
    8. '```' → logprob: -13.51069164276123
    9. '          ' → logprob: -14.76069164276123
    10. '	return' → logprob: -15.38569164276123

Token 458: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4224691092967987
    2. 'return' (adapté à ' return') → logprob: -1.172469139099121
    3. ' return' → logprob: -3.672469139099121
    4. '           ' → logprob: -4.672469139099121
    5. '   ' → logprob: -8.672469139099121
    6. '               ' → logprob: -10.797469139099121
    7. '	return' → logprob: -11.172469139099121
    8. '```' → logprob: -13.172469139099121
    9. ' ' → logprob: -14.797469139099121
    10. '
' → logprob: -14.922469139099121

Token 459: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0024827925954014063
    2. ' "' → logprob: -6.002482891082764
    3. '"D' → logprob: -11.877482414245605
    4. ''' → logprob: -16.127483367919922
    5. '   ' → logprob: -17.002483367919922
    6. ''D' → logprob: -18.127483367919922
    7. '"I' → logprob: -18.252483367919922
    8. ' ' → logprob: -18.377483367919922
    9. ' ' → logprob: -19.502483367919922
    10. '("' → logprob: -20.002483367919922

Token 460: 'DI' (ID: 20764)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.000559108448214829
    2. 'DI' → logprob: -7.500559329986572
    3. ''' → logprob: -13.000558853149414
    4. '"D' → logprob: -13.250558853149414
    5. 'return' → logprob: -13.375558853149414
    6. ''D' → logprob: -15.125558853149414
    7. '   ' → logprob: -15.875558853149414
    8. '       ' → logprob: -16.375558853149414
    9. '           ' → logprob: -17.750558853149414
    10. '_DI' → logprob: -18.125558853149414

Token 461: 'FFER' (ID: 21805)
  Prédit: 'FFER'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'FFER' → logprob: -0.0003317705122753978
    2. 'FER' → logprob: -8.25033187866211
    3. 'FF' → logprob: -9.75033187866211
    4. 'F' → logprob: -11.62533187866211
    5. '"' → logprob: -13.62533187866211
    6. 'FERENCE' → logprob: -14.50033187866211
    7. 'DI' → logprob: -15.50033187866211
    8. 'ifferent' → logprob: -15.75033187866211
    9. 'ffer' → logprob: -15.87533187866211
    10. '   ' → logprob: -16.00033187866211

Token 462: 'ENT' (ID: 2829)
  Prédit: 'ENT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ENT' → logprob: -0.006741777528077364
    2. 'RE' → logprob: -5.006742000579834
    3. 'NT' → logprob: -11.256741523742676
    4. 'R' → logprob: -12.506741523742676
    5. 'CENT' → logprob: -12.756741523742676
    6. 'D' → logprob: -13.256741523742676
    7. 'ER' → logprob: -13.631741523742676
    8. 'G' → logprob: -14.006741523742676
    9. 'RED' → logprob: -14.381741523742676
    10. '
' → logprob: -14.881741523742676

Token 463: '"
' (ID: 1092)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30527329444885254
    2. '<|end|>' → logprob: -1.4302732944488525
    3. ')' → logprob: -4.180273056030273
    4. '<|end|>' → logprob: -5.430273056030273
    5. '       ' → logprob: -6.805273056030273
    6. '    
' → logprob: -7.180273056030273
    7. '")' → logprob: -7.305273056030273
    8. '
' → logprob: -7.430273056030273
    9. '"' → logprob: -7.805273056030273
    10. '```' → logprob: -7.930273056030273

Token 464: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0034891199320554733
    2. 'diff' → logprob: -6.503489017486572
    3. '    
' → logprob: -7.253489017486572
    4. 'count' → logprob: -8.00348949432373
    5. 'dif' → logprob: -8.00348949432373
    6. '```' → logprob: -8.50348949432373
    7. '
' → logprob: -9.00348949432373
    8. 'for' → logprob: -9.37848949432373
    9. ' for' → logprob: -9.87848949432373
    10. ' count' → logprob: -10.62848949432373

Token 465: '   ' (ID: 271)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.1809651255607605
    2. 'count' → logprob: -2.8059651851654053
    3. 'dif' → logprob: -2.8059651851654053
    4. 'literal' → logprob: -3.6809651851654053
    5. 'lit' → logprob: -5.055964946746826
    6. '#' → logprob: -5.805964946746826
    7. '   ' → logprob: -5.805964946746826
    8. 'num' → logprob: -6.180964946746826
    9. 'different' → logprob: -6.555964946746826
    10. 'cnt' → logprob: -6.805964946746826

Token 466: ' #' (ID: 1069)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.5590949058532715
    2. 'dif' → logprob: -1.8090949058532715
    3. 'count' → logprob: -2.1840949058532715
    4. 'lit' → logprob: -2.5590949058532715
    5. 'literal' → logprob: -2.8090949058532715
    6. 'l' → logprob: -5.5590949058532715
    7. '#' (adapté à ' #') → logprob: -5.8090949058532715
    8. 'liter' → logprob: -6.1840949058532715
    9. 'difference' → logprob: -6.4340949058532715
    10. 'num' → logprob: -6.8090949058532715

Token 467: ' Comp' (ID: 5211)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.33427006006240845
    2. 'count' → logprob: -2.2092700004577637
    3. 'dif' → logprob: -2.4592700004577637
    4. '#' → logprob: -2.9592700004577637
    5. 'literal' → logprob: -3.8342700004577637
    6. 'lit' → logprob: -4.584270000457764
    7. 'l' → logprob: -6.459270000457764
    8. 'num' → logprob: -7.209270000457764
    9. 'liter' → logprob: -7.209270000457764
    10. 'cnt' → logprob: -7.334270000457764

Token 468: 'ter' (ID: 399)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -1.4061031341552734
    2. 'te' → logprob: -1.5311031341552734
    3. 'are' → logprob: -1.7811031341552734
    4. 'dif' → logprob: -1.7811031341552734
    5. 't' → logprob: -2.0311031341552734
    6. 'diff' → logprob: -3.5311031341552734
    7. '   ' → logprob: -4.281103134155273
    8. 'teur' → logprob: -4.906103134155273
    9. 'count' → logprob: -6.156103134155273
    10. 'difference' → logprob: -6.281103134155273

Token 469: ' combien' (ID: 106648)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.2529037892818451
    2. 'dif' → logprob: -1.5029038190841675
    3. 'difference' → logprob: -7.502903938293457
    4. '   ' → logprob: -8.502903938293457
    5. 'count' → logprob: -9.627903938293457
    6. ' diff' → logprob: -10.127903938293457
    7. 'different' → logprob: -10.252903938293457
    8. ' differences' → logprob: -10.502903938293457
    9. 'd' → logprob: -10.877903938293457
    10. '	diff' → logprob: -12.002903938293457

Token 470: ' de' (ID: 334)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.12644487619400024
    2. 'de' → logprob: -3.5014448165893555
    3. 'dif' → logprob: -3.7514448165893555
    4. 'd' → logprob: -3.7514448165893555
    5. '   ' → logprob: -4.3764448165893555
    6. '_diff' → logprob: -4.8764448165893555
    7. ' de' → logprob: -4.8764448165893555
    8. '=' → logprob: -5.1264448165893555
    9. ' =' → logprob: -6.1264448165893555
    10. ' of' → logprob: -6.3764448165893555

Token 471: ' chaînes' (ID: 179904)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.49442192912101746
    2. 'diff' → logprob: -2.36942195892334
    3. 'dif' → logprob: -2.49442195892334
    4. 'parts' → logprob: -2.86942195892334
    5. 'odd' → logprob: -2.86942195892334
    6. 'part' → logprob: -3.86942195892334
    7. 'i' → logprob: -3.99442195892334
    8. 'imp' → logprob: -4.11942195892334
    9. 'im' → logprob: -4.24442195892334
    10. ' parts' → logprob: -5.24442195892334

Token 472: ' litt' (ID: 33019)
  Prédit: '_diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_diff' → logprob: -1.0100314617156982
    2. '_l' → logprob: -1.5100314617156982
    3. 'diff' → logprob: -1.8850314617156982
    4. 'l' → logprob: -2.1350314617156982
    5. '_d' → logprob: -3.5100314617156982
    6. '_literal' → logprob: -3.5100314617156982
    7. '_literals' → logprob: -3.8850314617156982
    8. 'liter' → logprob: -4.260031700134277
    9. 'lit' → logprob: -4.260031700134277
    10. '_' → logprob: -4.260031700134277

Token 473: 'érales' (ID: 186658)
  Prédit: 'érales'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érales' → logprob: -0.0003297440707683563
    2. 'éral' → logprob: -8.625329971313477
    3. 'érale' → logprob: -9.375329971313477
    4. 'éraux' → logprob: -10.500329971313477
    5. 'éra' → logprob: -11.250329971313477
    6. 'ér' → logprob: -11.500329971313477
    7. 'éralement' → logprob: -12.125329971313477
    8. 'r' → logprob: -12.125329971313477
    9. 'er' → logprob: -12.875329971313477
    10. 'é' → logprob: -14.875329971313477

Token 474: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.012278759852051735
    2. 'd' → logprob: -5.1372785568237305
    3. 'dif' → logprob: -6.0122785568237305
    4. 'different' → logprob: -6.0122785568237305
    5. '   ' → logprob: -7.7622785568237305
    6. '_diff' → logprob: -8.01227855682373
    7. ' diff' → logprob: -8.38727855682373
    8. ' différentes' → logprob: -8.51227855682373
    9. ' different' → logprob: -9.88727855682373
    10. '=' → logprob: -10.26227855682373

Token 475: 'èrent' (ID: 55228)
  Prédit: 'èrent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'èrent' → logprob: -0.000810936326161027
    2. 'érent' → logprob: -7.7508111000061035
    3. 'ères' → logprob: -9.375810623168945
    4. 'er' → logprob: -9.750810623168945
    5. 'rent' → logprob: -9.875810623168945
    6. '`' → logprob: -10.250810623168945
    7. 'ér' → logprob: -10.375810623168945
    8. 'ère' → logprob: -10.625810623168945
    9. 'èr' → logprob: -10.875810623168945
    10. 'érents' → logprob: -11.125810623168945

Token 476: '
' (ID: 198)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.2873201370239258
    2. '   ' → logprob: -1.5373201370239258
    3. 'count' → logprob: -3.537320137023926
    4. 'dif' → logprob: -5.287320137023926
    5. 'different' → logprob: -7.912320137023926
    6. 'd' → logprob: -8.912320137023926
    7. 'difference' → logprob: -10.037320137023926
    8. 'cnt' → logprob: -10.662320137023926
    9. 'm' → logprob: -11.162320137023926
    10. '=' → logprob: -11.162320137023926

Token 477: '   ' (ID: 271)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.18617849051952362
    2. '   ' → logprob: -2.18617844581604
    3. 'count' → logprob: -2.93617844581604
    4. 'dif' → logprob: -5.686178684234619
    5. 'different' → logprob: -7.311178684234619
    6. 'd' → logprob: -8.311178207397461
    7. 'difference' → logprob: -9.561178207397461
    8. 'cnt' → logprob: -10.186178207397461
    9. ' diff' → logprob: -10.936178207397461
    10. 'num' → logprob: -11.311178207397461

Token 478: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' (adapté à ' diff') → logprob: -0.08389119058847427
    2. 'count' → logprob: -2.5838911533355713
    3. 'dif' → logprob: -5.33389139175415
    4. 'difference' → logprob: -9.708890914916992
    5. 'cnt' → logprob: -9.833890914916992
    6. 'different' → logprob: -10.458890914916992
    7. 'd' → logprob: -12.083890914916992
    8. ' diff' → logprob: -12.208890914916992
    9. '   ' → logprob: -12.333890914916992
    10. 'nb' → logprob: -13.083890914916992

Token 479: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.006176563911139965
    2. 's' → logprob: -6.006176471710205
    3. 'er' → logprob: -6.506176471710205
    4. ' =' → logprob: -6.506176471710205
    5. 'count' → logprob: -8.006176948547363
    6. '_cnt' → logprob: -8.381176948547363
    7. '=' → logprob: -9.756176948547363
    8. '_counts' → logprob: -10.506176948547363
    9. 'ers' → logprob: -11.131176948547363
    10. ' count' → logprob: -11.506176948547363

Token 480: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804149478673935
    2. '=' → logprob: -3.288041591644287
    3. ' ' → logprob: -17.663042068481445
    4. ' +=' → logprob: -18.913042068481445
    5. ' ' → logprob: -20.163042068481445
    6. ',' → logprob: -20.163042068481445
    7. 's' → logprob: -20.413042068481445
    8. '   ' → logprob: -20.413042068481445
    9. ')' → logprob: -20.788042068481445
    10. '＝' → logprob: -21.288042068481445

Token 481: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020771251001860946
    2. ' ' → logprob: -8.625207901000977
    3. 'sum' → logprob: -10.500207901000977
    4. ' sum' → logprob: -14.250207901000977
    5. '   ' → logprob: -17.250207901000977
    6. 'len' → logprob: -18.812707901000977
    7. '1' → logprob: -18.812707901000977
    8. '```' → logprob: -19.500207901000977
    9. '2' → logprob: -19.562707901000977
    10. '  ' → logprob: -19.687707901000977

Token 482: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012403888104017824
    2. 'sum' → logprob: -9.000123977661133
    3. ' ' → logprob: -14.500123977661133
    4. ' sum' → logprob: -17.125123977661133
    5. 'len' → logprob: -18.875123977661133
    6. '   ' → logprob: -20.187623977661133
    7. '1' → logprob: -20.187623977661133
    8. '(sum' → logprob: -20.187623977661133
    9. '```' → logprob: -20.625123977661133
    10. 'abs' → logprob: -20.937623977661133

Token 483: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2605331838130951
    2. '   ' → logprob: -1.5105332136154175
    3. ' for' → logprob: -4.760533332824707
    4. '
' → logprob: -13.010533332824707
    5. 'i' → logprob: -13.385533332824707
    6. '	for' → logprob: -13.635533332824707
    7. '  ' → logprob: -14.385533332824707
    8. ' ' → logprob: -15.760533332824707
    9. '    
' → logprob: -15.885533332824707
    10. 'idx' → logprob: -16.01053237915039

Token 484: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13936080038547516
    2. ' for' → logprob: -2.3893609046936035
    3. 'for' → logprob: -3.2643609046936035
    4. '
' → logprob: -8.889360427856445
    5. '<|end|>' → logprob: -11.139360427856445
    6. '	for' → logprob: -11.764360427856445
    7. '    
' → logprob: -12.014360427856445
    8. ' ' → logprob: -13.264360427856445
    9. '    ' → logprob: -13.264360427856445
    10. '  ' → logprob: -13.264360427856445

Token 485: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -7.896309739408025e-07
    2. ' for' → logprob: -14.750000953674316
    3. '   ' → logprob: -15.000000953674316
    4. 'odd' → logprob: -18.875
    5. '```' → logprob: -19.0
    6. 'i' → logprob: -19.125
    7. 'idx' → logprob: -19.875
    8. 'max' → logprob: -20.0
    9. '	for' → logprob: -20.0
    10. 'm' → logprob: -20.875

Token 486: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.006125379353761673
    2. ' idx' → logprob: -5.381125450134277
    3. 'i' → logprob: -6.506125450134277
    4. ' i' → logprob: -11.756125450134277
    5. 'index' → logprob: -14.506125450134277
    6. '	idx' → logprob: -14.506125450134277
    7. 'odd' → logprob: -15.131125450134277
    8. '   ' → logprob: -15.756125450134277
    9. 'k' → logprob: -15.881125450134277
    10. 'j' → logprob: -16.38112449645996

Token 487: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.38689979910850525
    2. 'in' → logprob: -1.1368998289108276
    3. '   ' → logprob: -11.386899948120117
    4. 'i' → logprob: -12.511899948120117
    5. ' ' → logprob: -12.636899948120117
    6. '	in' → logprob: -12.886899948120117
    7. 'range' → logprob: -13.136899948120117
    8. 'idx' → logprob: -13.261899948120117
    9. '```' → logprob: -14.011899948120117
    10. '
' → logprob: -14.136899948120117

Token 488: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0024756586644798517
    2. ' range' → logprob: -6.002475738525391
    3. '(range' → logprob: -17.62747573852539
    4. '	range' → logprob: -18.37747573852539
    5. ' ' → logprob: -18.50247573852539
    6. '1' → logprob: -19.25247573852539
    7. '[' → logprob: -20.25247573852539
    8. '   ' → logprob: -21.50247573852539
    9. '  ' → logprob: -22.37747573852539
    10. '_range' → logprob: -22.50247573852539

Token 489: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03816979005932808
    2. '1' → logprob: -3.2881698608398438
    3. ' (' → logprob: -9.163169860839844
    4. '   ' → logprob: -11.038169860839844
    5. ' ' → logprob: -12.038169860839844
    6. ',' → logprob: -14.413169860839844
    7. '(
' → logprob: -15.413169860839844
    8. 'def' → logprob: -16.038169860839844
    9. '=' → logprob: -16.163169860839844
    10. '(idx' → logprob: -16.538169860839844

Token 490: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.875
    3. '   ' → logprob: -17.625
    4. 'range' → logprob: -18.125
    5. '```' → logprob: -18.625
    6. 'def' → logprob: -18.75
    7. 'for' → logprob: -19.5
    8. '(' → logprob: -19.75
    9. 'len' → logprob: -20.0625
    10. 'idx' → logprob: -20.6875

Token 491: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01823083683848381
    2. ',len' → logprob: -4.01823091506958
    3. ' ,' → logprob: -10.268230438232422
    4. 'len' → logprob: -10.643230438232422
    5. '(len' → logprob: -11.018230438232422
    6. ',length' → logprob: -13.018230438232422
    7. ' len' → logprob: -13.643230438232422
    8. '=len' → logprob: -14.143230438232422
    9. '<len' → logprob: -14.268230438232422
    10. '   ' → logprob: -15.018230438232422

Token 492: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.004079708829522133
    2. ' len' → logprob: -5.504079818725586
    3. '   ' → logprob: -13.629079818725586
    4. '(len' → logprob: -17.004079818725586
    5. '	len' → logprob: -17.004079818725586
    6. ',len' → logprob: -17.254079818725586
    7. '  ' → logprob: -18.879079818725586
    8. '    ' → logprob: -20.004079818725586
    9. ' ' → logprob: -20.504079818725586
    10. '[len' → logprob: -20.754079818725586

Token 493: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.00018768629524856806
    2. 'parts' → logprob: -8.625187873840332
    3. '(' → logprob: -12.625187873840332
    4. ' parts' → logprob: -12.750187873840332
    5. '(len' → logprob: -13.375187873840332
    6. '_parts' → logprob: -16.875186920166016
    7. 'Parts' → logprob: -17.000186920166016
    8. ',' → logprob: -17.125186920166016
    9. ' (' → logprob: -17.500186920166016
    10. '   ' → logprob: -17.500186920166016

Token 494: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5911495089530945
    2. '(parts' → logprob: -0.8411495089530945
    3. 'parts' → logprob: -4.59114933013916
    4. ' parts' → logprob: -5.84114933013916
    5. ',' → logprob: -7.46614933013916
    6. '(' → logprob: -7.59114933013916
    7. ')' → logprob: -8.34114933013916
    8. '2' → logprob: -8.59114933013916
    9. '   ' → logprob: -8.59114933013916
    10. '),' → logprob: -9.09114933013916

Token 495: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012678056373260915
    2. ' ,' → logprob: -9.000126838684082
    3. '   ' → logprob: -13.375126838684082
    4. ',len' → logprob: -13.375126838684082
    5. '),' → logprob: -17.125125885009766
    6. '_,' → logprob: -17.250125885009766
    7. '‌,' → logprob: -17.500125885009766
    8. ',length' → logprob: -17.500125885009766
    9. ',
' → logprob: -18.125125885009766
    10. 'len' → logprob: -18.125125885009766

Token 496: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007101670489646494
    2. ' ' → logprob: -7.2507100105285645
    3. '   ' → logprob: -15.625710487365723
    4. '```' → logprob: -18.375709533691406
    5. '  ' → logprob: -19.000709533691406
    6. ')' → logprob: -20.125709533691406
    7. '
' → logprob: -21.063209533691406
    8. '    ' → logprob: -21.063209533691406
    9. '۲' → logprob: -21.188209533691406
    10. '1' → logprob: -21.375709533691406

Token 497: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '   ' → logprob: -17.500001907348633
    4. '```' → logprob: -19.375001907348633
    5. '
' → logprob: -19.875001907348633
    6. '1' → logprob: -20.500001907348633
    7. '۲' → logprob: -21.000001907348633
    8. ')' → logprob: -21.125001907348633
    9. '  ' → logprob: -21.375001907348633
    10. '２' → logprob: -21.375001907348633

Token 498: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.002590992720797658
    2. '):' → logprob: -6.502591133117676
    3. '   ' → logprob: -7.252591133117676
    4. ':
' → logprob: -8.377591133117676
    5. ':' → logprob: -9.252591133117676
    6. ',' → logprob: -10.377591133117676
    7. '       ' → logprob: -11.377591133117676
    8. '):
' → logprob: -11.627591133117676
    9. '():
' → logprob: -14.502591133117676
    10. '):

' → logprob: -14.502591133117676

Token 499: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019592661410570145
    2. ' if' → logprob: -4.144592761993408
    3. 'if' → logprob: -5.644592761993408
    4. '   ' → logprob: -11.39459228515625
    5. '      ' → logprob: -13.64459228515625
    6. '     ' → logprob: -14.51959228515625
    7. '    ' → logprob: -14.64459228515625
    8. '           ' → logprob: -14.64459228515625
    9. '<|end|>' → logprob: -14.89459228515625
    10. 'If' → logprob: -15.01959228515625

Token 500: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.014870436862111092
    2. '       ' → logprob: -4.264870643615723
    3. ' if' → logprob: -7.264870643615723
    4. '   ' → logprob: -11.889870643615723
    5. '```' → logprob: -15.889870643615723
    6. '	if' → logprob: -16.889869689941406
    7. '           ' → logprob: -17.014869689941406
    8. 'If' → logprob: -17.764869689941406
    9. ' ' → logprob: -18.264869689941406
    10. '     ' → logprob: -18.514869689941406

Token 501: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.3133196532726288
    2. ' parts' → logprob: -1.3133196830749512
    3. '       ' → logprob: -10.563319206237793
    4. '   ' → logprob: -11.063319206237793
    5. '(parts' → logprob: -11.313319206237793
    6. '           ' → logprob: -13.063319206237793
    7. '_parts' → logprob: -14.938319206237793
    8. ' ' → logprob: -15.063319206237793
    9. 'diff' → logprob: -15.188319206237793
    10. 'Parts' → logprob: -15.438319206237793

Token 502: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00019603055261541158
    2. '[idx' → logprob: -8.62519645690918
    3. '_parts' → logprob: -11.87519645690918
    4. '[' → logprob: -13.00019645690918
    5. '```' → logprob: -13.50019645690918
    6. 'idx' → logprob: -13.50019645690918
    7. 's' → logprob: -14.00019645690918
    8. 'parts' → logprob: -14.00019645690918
    9. '2' → logprob: -14.62519645690918
    10. 'es' → logprob: -14.87519645690918

Token 503: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.9623810658231378e-05
    2. 'idx' → logprob: -10.875020027160645
    3. '```' → logprob: -14.875020027160645
    4. ' idx' → logprob: -16.000019073486328
    5. '[' → logprob: -16.750019073486328
    6. '	idx' → logprob: -17.125019073486328
    7. '(idx' → logprob: -18.625019073486328
    8. '!=' → logprob: -18.625019073486328
    9. '   ' → logprob: -18.875019073486328
    10. ' [' → logprob: -19.000019073486328

Token 504: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.7433376312255859
    2. ' !=' → logprob: -0.8683376312255859
    3. ']' → logprob: -2.493337631225586
    4. ']!=' → logprob: -3.868337631225586
    5. '[idx' → logprob: -7.493337631225586
    6. ' ]' → logprob: -7.493337631225586
    7. ')!=' → logprob: -9.618337631225586
    8. '']' → logprob: -9.993337631225586
    9. ' idx' → logprob: -11.368337631225586
    10. '    ' → logprob: -11.493337631225586

Token 505: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.011057252995669842
    2. ' !=' → logprob: -4.511057376861572
    3. ')!=' → logprob: -12.636056900024414
    4. '!==' → logprob: -12.761056900024414
    5. ']!=' → logprob: -13.136056900024414
    6. '()!=' → logprob: -13.886056900024414
    7. '```' → logprob: -16.011056900024414
    8. '==' → logprob: -16.511056900024414
    9. '=' → logprob: -16.761056900024414
    10. ')' → logprob: -17.136056900024414

Token 506: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.06994743645191193
    2. ' parts' → logprob: -2.6949474811553955
    3. '   ' → logprob: -12.319947242736816
    4. '(parts' → logprob: -12.444947242736816
    5. '       ' → logprob: -13.944947242736816
    6. 's' → logprob: -14.569947242736816
    7. ' ' → logprob: -15.069947242736816
    8. '           ' → logprob: -15.444947242736816
    9. '.parts' → logprob: -15.944947242736816
    10. '  ' → logprob: -16.194948196411133

Token 507: '2' (ID: 17)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.17399445176124573
    2. '2' → logprob: -1.9239944219589233
    3. 'idx' → logprob: -4.298994541168213
    4. '(idx' → logprob: -10.548994064331055
    5. '```' → logprob: -10.798994064331055
    6. '[' → logprob: -11.048994064331055
    7. '   ' → logprob: -11.423994064331055
    8. ' idx' → logprob: -11.423994064331055
    9. '	idx' → logprob: -12.798994064331055
    10. '_idx' → logprob: -12.798994064331055

Token 508: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -2.696889623621246e-06
    2. 'idx' → logprob: -12.87500286102295
    3. ' idx' → logprob: -16.500001907348633
    4. '[' → logprob: -16.625001907348633
    5. '(idx' → logprob: -17.250001907348633
    6. '   ' → logprob: -17.875001907348633
    7. '	idx' → logprob: -17.875001907348633
    8. '```' → logprob: -18.625001907348633
    9. '       ' → logprob: -18.750001907348633
    10. '[
' → logprob: -19.625001907348633

Token 509: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.027594616636633873
    2. ']:' → logprob: -3.652594566345215
    3. '       ' → logprob: -7.652594566345215
    4. ']' → logprob: -8.402594566345215
    5. '):
' → logprob: -8.527594566345215
    6. ']:
' → logprob: -9.152594566345215
    7. ']:

' → logprob: -9.777594566345215
    8. '"]:
' → logprob: -10.152594566345215
    9. ':' → logprob: -10.277594566345215
    10. '           ' → logprob: -10.402594566345215

Token 510: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007121680304408073
    2. 'diff' → logprob: -5.132121562957764
    3. '       ' → logprob: -7.882121562957764
    4. ' diff' → logprob: -8.007122039794922
    5. ':
' → logprob: -8.132122039794922
    6. '	diff' → logprob: -9.632122039794922
    7. ':' → logprob: -10.507122039794922
    8. '(diff' → logprob: -10.757122039794922
    9. '+' → logprob: -11.257122039794922
    10. '               ' → logprob: -11.382122039794922

Token 511: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' (adapté à ' diff') → logprob: -0.09285955876111984
    2. ' diff' → logprob: -2.5928595066070557
    3. '           ' → logprob: -4.342859745025635
    4. '       ' → logprob: -7.342859745025635
    5. '	diff' → logprob: -8.842859268188477
    6. '               ' → logprob: -9.467859268188477
    7. '   ' → logprob: -13.467859268188477
    8. '(diff' → logprob: -13.967859268188477
    9. '```' → logprob: -14.092859268188477
    10. '.diff' → logprob: -14.467859268188477

Token 512: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -3.128163257315464e-07
    2. 'count' → logprob: -16.625
    3. '_COUNT' → logprob: -18.125
    4. '_counter' → logprob: -18.125
    5. '_code' → logprob: -18.375
    6. 's' → logprob: -18.5
    7. '_' → logprob: -18.625
    8. '\' → logprob: -18.625
    9. 'er' → logprob: -18.875
    10. ' _' → logprob: -19.0

Token 513: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.20142912864685059
    2. ' +=' → logprob: -1.7014291286468506
    3. '=' → logprob: -11.20142936706543
    4. '           ' → logprob: -13.70142936706543
    5. '       ' → logprob: -14.45142936706543
    6. '        ' → logprob: -15.70142936706543
    7. '            ' → logprob: -16.20142936706543
    8. ' =' → logprob: -16.20142936706543
    9. ']+=' → logprob: -16.45142936706543
    10. '   ' → logprob: -17.20142936706543

Token 514: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '```' → logprob: -20.500017166137695
    4. '   ' → logprob: -21.625017166137695
    5. '۱' → logprob: -21.812517166137695
    6. '１' → logprob: -22.125017166137695
    7. '0' → logprob: -22.312517166137695
    8. '<|end|>' → logprob: -22.687517166137695
    9. '2' → logprob: -23.312517166137695
    10. '`' → logprob: -23.562517166137695

Token 515: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '```' → logprob: -19.625
    4. '   ' → logprob: -21.0625
    5. '2' → logprob: -21.5
    6. '۱' → logprob: -21.625
    7. '１' → logprob: -21.875
    8. '`' → logprob: -22.3125
    9. '>' → logprob: -22.5
    10. '0' → logprob: -22.8125

Token 516: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5555408000946045
    2. '   ' → logprob: -1.4305408000946045
    3. '       ' → logprob: -2.4305408000946045
    4. '<|end|>' → logprob: -2.8055408000946045
    5. '
' → logprob: -3.3055408000946045
    6. '<|end|>' → logprob: -7.805541038513184
    7. '    ' → logprob: -8.180541038513184
    8. '               ' → logprob: -8.305541038513184
    9. ' ' → logprob: -8.430541038513184
    10. '    
' → logprob: -8.930541038513184

Token 517: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2790643274784088
    2. '       ' → logprob: -1.9040642976760864
    3. '   ' → logprob: -2.404064416885376
    4. '<|end|>' → logprob: -6.654064178466797
    5. '    ' → logprob: -6.904064178466797
    6. '
' → logprob: -7.029064178466797
    7. '     ' → logprob: -8.779064178466797
    8. ' ' → logprob: -8.779064178466797
    9. '               ' → logprob: -9.279064178466797
    10. '    
' → logprob: -9.654064178466797

Token 518: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7193654775619507
    2. 'if' (adapté à ' if') → logprob: -0.7193654775619507
    3. ' if' → logprob: -3.7193655967712402
    4. '       ' → logprob: -6.46936559677124
    5. '   ' → logprob: -9.594365119934082
    6. '               ' → logprob: -12.719365119934082
    7. ' ' → logprob: -13.094365119934082
    8. '```' → logprob: -13.094365119934082
    9. '		' → logprob: -13.844365119934082
    10. '          ' → logprob: -14.719365119934082

Token 519: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.47407740354537964
    2. ' diff' → logprob: -0.9740774035453796
    3. '	diff' → logprob: -14.974077224731445
    4. '   ' → logprob: -17.349077224731445
    5. '           ' → logprob: -18.224077224731445
    6. '       ' → logprob: -19.474077224731445
    7. '(diff' → logprob: -19.474077224731445
    8. '    ' → logprob: -20.099077224731445
    9. '        ' → logprob: -21.724077224731445
    10. '  ' → logprob: -22.099077224731445

Token 520: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00207460206001997
    2. '_diff' → logprob: -6.502074718475342
    3. 'diff' → logprob: -7.502074718475342
    4. ' diff' → logprob: -11.002074241638184
    5. 'count' → logprob: -13.377074241638184
    6. '_idx' → logprob: -14.502074241638184
    7. '_COUNT' → logprob: -14.752074241638184
    8. '_' → logprob: -15.752074241638184
    9. '_cnt' → logprob: -15.752074241638184
    10. '_cost' → logprob: -15.877074241638184

Token 521: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.10021379590034485
    2. ' >' → logprob: -2.3502137660980225
    3. '()>' → logprob: -12.600214004516602
    4. '   ' → logprob: -13.600214004516602
    5. '1' → logprob: -14.600214004516602
    6. ' ' → logprob: -14.850214004516602
    7. ' ' → logprob: -15.100214004516602
    8. '2' → logprob: -15.225214004516602
    9. '">' → logprob: -15.725214004516602
    10. '>
' → logprob: -15.850214004516602

Token 522: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -18.250001907348633
    4. '0' → logprob: -19.000001907348633
    5. '```' → logprob: -19.875001907348633
    6. '2' → logprob: -21.375001907348633
    7. '  ' → logprob: -21.375001907348633
    8. '۱' → logprob: -22.125001907348633
    9. '01' → logprob: -22.437501907348633
    10. '１' → logprob: -22.750001907348633

Token 523: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.625
    3. '0' → logprob: -20.25
    4. '```' → logprob: -22.0
    5. '   ' → logprob: -23.75
    6. '2' → logprob: -23.875
    7. '۱' → logprob: -24.25
    8. '１' → logprob: -24.6875
    9. '
' → logprob: -25.375
    10. '3' → logprob: -25.4375

Token 524: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.057036954909563065
    2. ':' → logprob: -3.557036876678467
    3. ':
' → logprob: -4.307036876678467
    4. '           ' → logprob: -4.557036876678467
    5. ':return' → logprob: -6.057036876678467
    6. '       ' → logprob: -7.807036876678467
    7. ' return' → logprob: -9.682037353515625
    8. 'return' → logprob: -10.182037353515625
    9. '):
' → logprob: -10.682037353515625
    10. '                   ' → logprob: -11.057037353515625

Token 525: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01930542103946209
    2. '           ' → logprob: -4.019305229187012
    3. ' return' → logprob: -7.519305229187012
    4. 'return' → logprob: -7.519305229187012
    5. '       ' → logprob: -9.644305229187012
    6. '   ' → logprob: -13.394305229187012
    7. '                   ' → logprob: -13.769305229187012
    8. '```' → logprob: -13.769305229187012
    9. '              ' → logprob: -14.269305229187012
    10. '             ' → logprob: -15.144305229187012

Token 526: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.005278345663100481
    2. '               ' → logprob: -5.75527811050415
    3. ' return' → logprob: -6.25527811050415
    4. '           ' → logprob: -9.005278587341309
    5. '                   ' → logprob: -10.755278587341309
    6. '   ' → logprob: -11.005278587341309
    7. '       ' → logprob: -11.130278587341309
    8. 'break' → logprob: -13.255278587341309
    9. '	return' → logprob: -14.255278587341309
    10. ' ' → logprob: -16.255277633666992

Token 527: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.011093211360275745
    2. ' "' → logprob: -4.5110931396484375
    3. '"D' → logprob: -10.011093139648438
    4. '   ' → logprob: -15.011093139648438
    5. ''' → logprob: -16.386093139648438
    6. '"I' → logprob: -17.136093139648438
    7. ' ' → logprob: -17.511093139648438
    8. '("' → logprob: -17.636093139648438
    9. '       ' → logprob: -17.761093139648438
    10. '
' → logprob: -18.136093139648438

Token 528: 'DI' (ID: 20764)
  Prédit: 'DI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DI' → logprob: -0.20152239501476288
    2. '"' → logprob: -1.7015223503112793
    3. '"D' → logprob: -9.201522827148438
    4. ''D' → logprob: -11.951522827148438
    5. ' DI' → logprob: -13.826522827148438
    6. ''' → logprob: -14.201522827148438
    7. '_DI' → logprob: -16.576522827148438
    8. ' "' → logprob: -17.326522827148438
    9. '   ' → logprob: -18.076522827148438
    10. '"d' → logprob: -18.201522827148438

Token 529: 'FFER' (ID: 21805)
  Prédit: 'FFER'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'FFER' → logprob: -0.0009887460619211197
    2. 'FF' → logprob: -7.000988960266113
    3. 'F' → logprob: -9.750988960266113
    4. 'FER' → logprob: -11.375988960266113
    5. 'FFE' → logprob: -12.000988960266113
    6. 'FFF' → logprob: -14.500988960266113
    7. 'ffer' → logprob: -14.750988960266113
    8. 'FFFFFF' → logprob: -16.250988006591797
    9. 'FFT' → logprob: -16.625988006591797
    10. 'FFFF' → logprob: -16.625988006591797

Token 530: 'ENT' (ID: 2829)
  Prédit: 'RE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RE' → logprob: -0.2992558181285858
    2. 'ER' → logprob: -2.049255847930908
    3. 'FER' → logprob: -2.049255847930908
    4. 'ENT' → logprob: -7.424255847930908
    5. 'F' → logprob: -8.42425537109375
    6. 'R' → logprob: -9.17425537109375
    7. 'FFER' → logprob: -10.67425537109375
    8. 'ARENT' → logprob: -11.92425537109375
    9. 'REN' → logprob: -12.92425537109375
    10. '"' → logprob: -13.04925537109375

Token 531: '"
' (ID: 1092)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00029482474201358855
    2. 'return' → logprob: -9.50029468536377
    3. '       ' → logprob: -9.62529468536377
    4. '<|end|>' → logprob: -10.00029468536377
    5. '    
' → logprob: -10.50029468536377
    6. ')' → logprob: -10.50029468536377
    7. '<|end|>' → logprob: -11.00029468536377
    8. '}' → logprob: -11.12529468536377
    9. ' return' → logprob: -12.00029468536377
    10. '```' → logprob: -12.62529468536377

Token 532: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00014358828775584698
    2. 'return' → logprob: -9.375144004821777
    3. ' return' → logprob: -9.875144004821777
    4. '    
' → logprob: -12.750144004821777
    5. '	return' → logprob: -13.250144004821777
    6. '       ' → logprob: -13.250144004821777
    7. '```' → logprob: -14.875144004821777
    8. '
' → logprob: -15.625144004821777
    9. '  ' → logprob: -17.00014305114746
    10. '    ' → logprob: -17.50014305114746

Token 533: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4985741376876831
    2. '   ' → logprob: -0.9985741376876831
    3. ' if' → logprob: -3.8735742568969727
    4. 'return' → logprob: -5.748574256896973
    5. ' return' → logprob: -8.623574256896973
    6. '```' → logprob: -10.123574256896973
    7. '    
' → logprob: -12.498574256896973
    8. '	if' → logprob: -12.873574256896973
    9. '
' → logprob: -14.373574256896973
    10. '	return' → logprob: -14.998574256896973

Token 534: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.10020947456359863
    2. 'diff' → logprob: -2.3502094745635986
    3. '	diff' → logprob: -12.97520923614502
    4. '   ' → logprob: -14.85020923614502
    5. '(diff' → logprob: -16.100210189819336
    6. '    ' → logprob: -16.600210189819336
    7. '_diff' → logprob: -18.225210189819336
    8. ' ' → logprob: -19.475210189819336
    9. ' dif' → logprob: -19.600210189819336
    10. ' ' → logprob: -20.225210189819336

Token 535: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -4.320199877838604e-07
    2. 'count' → logprob: -16.0
    3. 'diff' → logprob: -16.125
    4. '_diff' → logprob: -16.25
    5. '==' → logprob: -17.25
    6. '_COUNT' → logprob: -18.25
    7. '_' → logprob: -18.75
    8. ' count' → logprob: -20.0
    9. ' ==' → logprob: -21.0
    10. 'Count' → logprob: -21.0

Token 536: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2015860229730606
    2. '==' → logprob: -1.7015860080718994
    3. ' <=' → logprob: -8.82658576965332
    4. '<=' → logprob: -10.95158576965332
    5. '0' → logprob: -11.95158576965332
    6. '1' → logprob: -14.45158576965332
    7. ')==' → logprob: -15.20158576965332
    8. '==
' → logprob: -15.20158576965332
    9. '===' → logprob: -15.45158576965332
    10. '=' → logprob: -15.57658576965332

Token 537: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07029163092374802
    2. '0' → logprob: -2.695291519165039
    3. ' ' → logprob: -7.945291519165039
    4. '   ' → logprob: -14.070291519165039
    5. '```' → logprob: -17.32029151916504
    6. '	' → logprob: -17.44529151916504
    7. '  ' → logprob: -17.50779151916504
    8. '=' → logprob: -18.07029151916504
    9. '    ' → logprob: -18.07029151916504
    10. '01' → logprob: -18.19529151916504

Token 538: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5759827494621277
    2. '0' → logprob: -0.8259827494621277
    3. ' ' → logprob: -10.075983047485352
    4. '   ' → logprob: -13.950983047485352
    5. '=' → logprob: -16.57598304748535
    6. '	' → logprob: -17.07598304748535
    7. '```' → logprob: -17.13848304748535
    8. '  ' → logprob: -17.45098304748535
    9. '...' → logprob: -18.07598304748535
    10. '==' → logprob: -18.13848304748535

Token 539: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.47767236828804016
    2. ':' → logprob: -1.6026723384857178
    3. '       ' → logprob: -1.7276723384857178
    4. '   ' → logprob: -7.977672576904297
    5. ':return' → logprob: -8.102672576904297
    6. 'return' → logprob: -10.602672576904297
    7. ' return' → logprob: -11.102672576904297
    8. '):
' → logprob: -11.227672576904297
    9. ':
' → logprob: -11.852672576904297
    10. '	' → logprob: -13.102672576904297

Token 540: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001256303396075964
    2. 'return' → logprob: -6.751256465911865
    3. ' return' → logprob: -9.501255989074707
    4. '   ' → logprob: -11.501255989074707
    5. '	return' → logprob: -13.876255989074707
    6. '           ' → logprob: -16.126256942749023
    7. '	' → logprob: -16.626256942749023
    8. '	   ' → logprob: -17.251256942749023
    9. ':return' → logprob: -17.501256942749023
    10. '     ' → logprob: -17.876256942749023

Token 541: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03322086110711098
    2. '       ' → logprob: -4.0332207679748535
    3. ' return' → logprob: -4.2832207679748535
    4. '   ' → logprob: -6.7832207679748535
    5. '	return' → logprob: -10.533221244812012
    6. ' ' → logprob: -14.908221244812012
    7. '  ' → logprob: -16.408220291137695
    8. '           ' → logprob: -17.158220291137695
    9. '     ' → logprob: -17.283220291137695
    10. ':return' → logprob: -17.283220291137695

Token 542: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6041315793991089
    2. ' "' → logprob: -1.1041315793991089
    3. '"C' → logprob: -2.1041316986083984
    4. '("' → logprob: -14.979131698608398
    5. ''' → logprob: -15.104131698608398
    6. ' ' → logprob: -15.229131698608398
    7. 'C' → logprob: -16.7291316986084
    8. ' ' → logprob: -18.2291316986084
    9. ' CLOSE' → logprob: -18.3541316986084
    10. ' '' → logprob: -18.6041316986084

Token 543: 'C' (ID: 34)
  Prédit: '"C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"C' → logprob: -0.02979862689971924
    2. 'C' → logprob: -3.5297985076904297
    3. ''C' → logprob: -10.40479850769043
    4. ' CLOSE' → logprob: -11.65479850769043
    5. '\"' → logprob: -12.65479850769043
    6. '"' → logprob: -13.40479850769043
    7. 'close' → logprob: -13.90479850769043
    8. '""' → logprob: -14.15479850769043
    9. 'Close' → logprob: -14.40479850769043
    10. '"""' → logprob: -14.52979850769043

Token 544: 'LOSE' (ID: 38631)
  Prédit: 'LOSE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LOSE' → logprob: -0.0015666383551433682
    2. 'L' → logprob: -6.501566410064697
    3. 'C' → logprob: -10.376566886901855
    4. 'LO' → logprob: -10.501566886901855
    5. 'LOSED' → logprob: -13.001566886901855
    6. 'O' → logprob: -13.626566886901855
    7. '```' → logprob: -14.126566886901855
    8. ' CLOSE' → logprob: -14.876566886901855
    9. 'OSE' → logprob: -15.001566886901855
    10. '"' → logprob: -15.876566886901855

Token 545: '"
' (ID: 1092)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16043969988822937
    2. '"' → logprob: -1.9104397296905518
    3. '"
' → logprob: -9.285439491271973
    4. '<|end|>' → logprob: -9.660439491271973
    5. 'return' → logprob: -11.035439491271973
    6. '
' → logprob: -11.660439491271973
    7. '\n' → logprob: -12.410439491271973
    8. 'else' → logprob: -12.410439491271973
    9. '```' → logprob: -12.410439491271973
    10. '<|end|>' → logprob: -12.660439491271973

Token 546: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005097838002257049
    2. 'return' → logprob: -7.750509738922119
    3. ' return' → logprob: -9.500510215759277
    4. '    
' → logprob: -12.750510215759277
    5. '```' → logprob: -14.250510215759277
    6. 'else' → logprob: -15.125510215759277
    7. '
' → logprob: -15.125510215759277
    8. '	return' → logprob: -15.625510215759277
    9. '       ' → logprob: -16.62550926208496
    10. ' else' → logprob: -16.87550926208496

Token 547: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23312495648860931
    2. 'return' → logprob: -1.7331249713897705
    3. ' return' → logprob: -3.4831249713897705
    4. '"' → logprob: -7.608124732971191
    5. '	return' → logprob: -12.358124732971191
    6. ' ' → logprob: -14.608124732971191
    7. '    ' → logprob: -14.983124732971191
    8. '       ' → logprob: -15.483124732971191
    9. 'else' → logprob: -15.483124732971191
    10. '```' → logprob: -15.483124732971191

Token 548: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -7.505351095460355e-05
    2. ' return' → logprob: -9.750075340270996
    3. '   ' → logprob: -11.000075340270996
    4. '	return' → logprob: -17.00007438659668
    5. 'else' → logprob: -19.00007438659668
    6. '```' → logprob: -19.62507438659668
    7. 'eturn' → logprob: -22.62507438659668
    8. '{return' → logprob: -22.75007438659668
    9. '       ' → logprob: -23.00007438659668
    10. '  ' → logprob: -23.37507438659668

Token 549: ' Aucun' (ID: 199365)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0009469495271332562
    2. '   ' → logprob: -7.000946998596191
    3. ' return' → logprob: -10.250946998596191
    4. '	return' → logprob: -16.500946044921875
    5. '  ' → logprob: -18.875946044921875
    6. '```' → logprob: -20.250946044921875
    7. '{return' → logprob: -20.750946044921875
    8. ' ' → logprob: -21.250946044921875
    9. '       ' → logprob: -21.750946044921875
    10. 'eturn' → logprob: -22.000946044921875

Token 550: ' litt' (ID: 33019)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.8495408296585083
    2. 'return' → logprob: -1.0995408296585083
    3. ' return' → logprob: -2.2245407104492188
    4. 'difference' → logprob: -2.2245407104492188
    5. ' difference' → logprob: -4.224540710449219
    6. '   ' → logprob: -5.224540710449219
    7. ' diff' → logprob: -6.974540710449219
    8. 'dif' → logprob: -7.849540710449219
    9. 'token' → logprob: -7.849540710449219
    10. 'different' → logprob: -8.349540710449219

Token 551: 'éral' (ID: 59829)
  Prédit: 'éral'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éral' → logprob: -0.04648132994771004
    2. 'érale' → logprob: -3.5464813709259033
    3. 'eral' → logprob: -4.171481132507324
    4. 'éralement' → logprob: -7.296481132507324
    5. 'er' → logprob: -8.671481132507324
    6. 'éraux' → logprob: -9.546481132507324
    7. '"' → logprob: -9.921481132507324
    8. 'éra' → logprob: -10.046481132507324
    9. 'érales' → logprob: -10.296481132507324
    10. '   ' → logprob: -10.546481132507324

Token 552: ' différent' (ID: 114823)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7926388382911682
    2. '   ' → logprob: -0.9176388382911682
    3. ' return' → logprob: -1.9176387786865234
    4. '    ' → logprob: -7.917638778686523
    5. '	return' → logprob: -8.667638778686523
    6. ':return' → logprob: -8.792638778686523
    7. '{return' → logprob: -9.792638778686523
    8. '  ' → logprob: -9.792638778686523
    9. 'diff' → logprob: -10.917638778686523
    10. '       ' → logprob: -11.042638778686523

Token 553: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009673224412836134
    2. 'return' → logprob: -7.125967502593994
    3. ' return' → logprob: -8.750967025756836
    4. '    
' → logprob: -13.000967025756836
    5. '	return' → logprob: -13.500967025756836
    6. '       ' → logprob: -15.000967025756836
    7. '<|end|>' → logprob: -15.875967025756836
    8. '    ' → logprob: -16.125967025756836
    9. '
' → logprob: -16.125967025756836
    10. ',' → logprob: -16.250967025756836

Token 554: ' mais' (ID: 2899)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6035468578338623
    2. 'return' → logprob: -0.8535468578338623
    3. ' return' → logprob: -3.6035468578338623
    4. '	return' → logprob: -12.853547096252441
    5. '       ' → logprob: -16.478546142578125
    6. ':return' → logprob: -17.478546142578125
    7. '{return' → logprob: -17.853546142578125
    8. '    
' → logprob: -17.978546142578125
    9. '  ' → logprob: -17.978546142578125
    10. ' ' → logprob: -18.228546142578125

Token 555: ' les' (ID: 1341)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9917018413543701
    2. 'les' → logprob: -1.7417018413543701
    3. 'pas' → logprob: -1.9917018413543701
    4. 'diff' → logprob: -2.24170184135437
    5. ' pas' → logprob: -3.36670184135437
    6. 'return' → logprob: -3.49170184135437
    7. 'une' → logprob: -3.86670184135437
    8. 'len' → logprob: -3.99170184135437
    9. 'not' → logprob: -3.99170184135437
    10. 'la' → logprob: -4.116702079772949

Token 556: ' programmes' (ID: 40035)
  Prédit: 'program'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'program' → logprob: -0.2136167287826538
    2. 's' → logprob: -2.2136168479919434
    3. 'strings' → logprob: -3.5886168479919434
    4. 'de' → logprob: -3.9636168479919434
    5. '#' → logprob: -5.088616847991943
    6. 'parts' → logprob: -5.463616847991943
    7. 'len' → logprob: -5.588616847991943
    8. ' chaînes' → logprob: -5.588616847991943
    9. ' programmes' → logprob: -5.713616847991943
    10. 'codes' → logprob: -5.963616847991943

Token 557: ' ne' (ID: 453)
  Prédit: ' ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ne' → logprob: -0.3899202048778534
    2. 'diff' → logprob: -2.264920234680176
    3. ' sont' → logprob: -2.389920234680176
    4. 'ne' → logprob: -2.389920234680176
    5. 's' → logprob: -3.889920234680176
    6. ' diff' → logprob: -4.639920234680176
    7. ' differ' → logprob: -6.639920234680176
    8. ' are' → logprob: -6.639920234680176
    9. 'ont' → logprob: -6.889920234680176
    10. ' !=' → logprob: -7.389920234680176

Token 558: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00010032468708232045
    2. 'pas' → logprob: -10.500100135803223
    3. 'ont' → logprob: -10.625100135803223
    4. ' sont' → logprob: -10.750100135803223
    5. 'diff' → logprob: -10.875100135803223
    6. 'ser' → logprob: -13.125100135803223
    7. 'éta' → logprob: -13.500100135803223
    8. '```' → logprob: -14.250100135803223
    9. 'sembl' → logprob: -14.875100135803223
    10. 'son' → logprob: -14.875100135803223

Token 559: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -7.624555291840807e-05
    2. ' pas' → logprob: -9.500076293945312
    3. 'not' → logprob: -14.250076293945312
    4. '```' → logprob: -15.750076293945312
    5. 'return' → logprob: -16.000076293945312
    6. 'p' → logprob: -16.375076293945312
    7. 'plus' → logprob: -16.500076293945312
    8. '   ' → logprob: -16.750076293945312
    9. 'pass' → logprob: -17.750076293945312
    10. 'pa' → logprob: -17.875076293945312

Token 560: ' ég' (ID: 33150)
  Prédit: 'ident'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ident' → logprob: -0.0089926952496171
    2. 'exact' → logprob: -5.508992671966553
    3. 'strict' → logprob: -6.133992671966553
    4. ' ident' → logprob: -6.133992671966553
    5. 'ég' → logprob: -8.258993148803711
    6. 'ent' → logprob: -9.258993148803711
    7. '```' → logprob: -9.883993148803711
    8. 'égal' → logprob: -10.008993148803711
    9. 'indent' → logprob: -10.383993148803711
    10. '"""' → logprob: -10.633993148803711

Token 561: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -1.7954958821064793e-05
    2. 'als' → logprob: -11.125018119812012
    3. 'al' → logprob: -13.500018119812012
    4. 'ales' → logprob: -13.750018119812012
    5. '```' → logprob: -15.250018119812012
    6. '   ' → logprob: -15.375018119812012
    7. '
' → logprob: -16.125017166137695
    8. 'ale' → logprob: -16.750017166137695
    9. 'a' → logprob: -18.000017166137695
    10. 'Aux' → logprob: -18.250017166137695

Token 562: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17002733051776886
    2. ' return' → logprob: -2.170027256011963
    3. 'return' → logprob: -3.170027256011963
    4. '	return' → logprob: -9.420027732849121
    5. '    
' → logprob: -10.295027732849121
    6. '
' → logprob: -10.795027732849121
    7. '```' → logprob: -11.545027732849121
    8. ':return' → logprob: -11.545027732849121
    9. '       ' → logprob: -11.670027732849121
    10. '  ' → logprob: -12.170027732849121

Token 563: 'car' (ID: 6830)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.17834259569644928
    2. 'return' → logprob: -2.553342580795288
    3. '   ' → logprob: -2.678342580795288
    4. ')' → logprob: -5.053342819213867
    5. ' )
' → logprob: -5.803342819213867
    6. ' )' → logprob: -6.053342819213867
    7. ')
' → logprob: -6.178342819213867
    8. ' 
' → logprob: -6.928342819213867
    9. '    
' → logprob: -6.928342819213867
    10. '
' → logprob: -7.678342819213867

Token 564: ' cas' (ID: 2108)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5769084692001343
    2. 'len' → logprob: -1.5769084692001343
    3. ' s' → logprob: -2.951908588409424
    4. '#' → logprob: -3.076908588409424
    5. 'diff' → logprob: -3.451908588409424
    6. ' parts' → logprob: -4.451908588409424
    7. 'return' → logprob: -4.576908588409424
    8. '   ' → logprob: -4.701908588409424
    9. ' len' → logprob: -4.951908588409424
    10. 'False' → logprob: -5.201908588409424

Token 565: ' IDENT' (ID: 154406)
  Prédit: ' where'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' where' → logprob: -0.44555461406707764
    2. ' où' → logprob: -1.9455546140670776
    3. '   ' → logprob: -2.695554733276367
    4. 'où' → logprob: -2.820554733276367
    5. 's' → logprob: -3.945554733276367
    6. 'where' → logprob: -4.195554733276367
    7. ' s' → logprob: -4.320554733276367
    8. ' not' → logprob: -4.570554733276367
    9. 'diff' → logprob: -4.945554733276367
    10. 'not' → logprob: -5.570554733276367

Token 566: 'ICAL' (ID: 29255)
  Prédit: 'ICAL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ICAL' → logprob: -0.0007563813705928624
    2. 'IQUE' → logprob: -7.62575626373291
    3. 'ical' → logprob: -8.50075626373291
    4. 'AL' → logprob: -9.87575626373291
    5. 'I' → logprob: -12.87575626373291
    6. '```' → logprob: -12.87575626373291
    7. '
' → logprob: -13.25075626373291
    8. 'IC' → logprob: -13.62575626373291
    9. 'CAL' → logprob: -14.00075626373291
    10. '   ' → logprob: -14.00075626373291

Token 567: ' g' (ID: 329)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8353801965713501
    2. ' return' → logprob: -1.83538019657135
    3. ' not' → logprob: -1.96038019657135
    4. ' was' → logprob: -2.5853800773620605
    5. ')' → logprob: -2.8353800773620605
    6. ' n' → logprob: -3.0853800773620605
    7. 'return' → logprob: -3.8353800773620605
    8. ')
' → logprob: -4.7103800773620605
    9. ' is' → logprob: -4.9603800773620605
    10. ' est' → logprob: -5.0853800773620605

Token 568: 'éré' (ID: 33338)
  Prédit: 'ard'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ard' → logprob: -1.6161186695098877
    2. 'elif' → logprob: -1.7411186695098877
    3. 'én' → logprob: -1.8661186695098877
    4. 'enerated' → logprob: -1.8661186695098877
    5. 'éré' → logprob: -2.6161186695098877
    6. 'eneral' → logprob: -2.9911186695098877
    7. 'u' → logprob: -3.2411186695098877
    8. 'iven' → logprob: -3.3661186695098877
    9. 'en' → logprob: -3.8661186695098877
    10. 'lobal' → logprob: -4.116118431091309

Token 569: ')
' (ID: 446)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.37050366401672363
    2. 'plus' → logprob: -1.3705036640167236
    3. 'avant' → logprob: -4.2455034255981445
    4. '   ' → logprob: -4.8705034255981445
    5. ' au' → logprob: -4.9955034255981445
    6. ' juste' → logprob: -5.2455034255981445
    7. 'preced' → logprob: -5.4955034255981445
    8. 'else' → logprob: -6.1205034255981445
    9. 'en' → logprob: -6.1205034255981445
    10. ' précéd' → logprob: -6.3705034255981445

Token 570: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.542423165636137e-05
    2. 'return' → logprob: -9.500085830688477
    3. ' return' → logprob: -11.500085830688477
    4. '	return' → logprob: -15.375085830688477
    5. '       ' → logprob: -15.875085830688477
    6. '```' → logprob: -17.125085830688477
    7. '    ' → logprob: -17.750085830688477
    8. '   ' → logprob: -19.000085830688477
    9. '  ' → logprob: -20.250085830688477
    10. '    
' → logprob: -21.375085830688477

Token 571: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03892074152827263
    2. ' return' → logprob: -3.2889206409454346
    3. '   ' → logprob: -7.038920879364014
    4. '	return' → logprob: -13.913920402526855
    5. '```' → logprob: -14.163920402526855
    6. ':return' → logprob: -16.163921356201172
    7. '
' → logprob: -17.163921356201172
    8. '{return' → logprob: -17.788921356201172
    9. '    
' → logprob: -18.038921356201172
    10. 'eturn' → logprob: -18.163921356201172

Token 572: ' Cela' (ID: 44403)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00011164903844473884
    2. ' return' → logprob: -9.62511157989502
    3. '   ' → logprob: -10.00011157989502
    4. '	return' → logprob: -16.250112533569336
    5. '#' → logprob: -18.375112533569336
    6. '  ' → logprob: -19.125112533569336
    7. 'if' → logprob: -19.875112533569336
    8. '```' → logprob: -19.875112533569336
    9. '
' → logprob: -20.375112533569336
    10. ' ' → logprob: -20.375112533569336

Token 573: ' peut' (ID: 9216)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.030566381290555
    2. '   ' → logprob: -4.030566215515137
    3. ' return' → logprob: -4.405566215515137
    4. '#' → logprob: -9.155566215515137
    5. '```' → logprob: -11.530566215515137
    6. '       ' → logprob: -12.155566215515137
    7. '	return' → logprob: -12.655566215515137
    8. ' #' → logprob: -13.155566215515137
    9. '    
' → logprob: -13.780566215515137
    10. ':return' → logprob: -13.905566215515137

Token 574: ' arriver' (ID: 78302)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.13856829702854156
    2. 'être' → logprob: -2.51356840133667
    3. 'venir' → logprob: -3.38856840133667
    4. 'se' → logprob: -4.88856840133667
    5. ' arriver' → logprob: -5.76356840133667
    6. '   ' → logprob: -6.51356840133667
    7. '#' → logprob: -7.88856840133667
    8. 'sur' → logprob: -8.138567924499512
    9. '```' → logprob: -8.513567924499512
    10. 'avoir' → logprob: -8.513567924499512

Token 575: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011717386543750763
    2. 'return' → logprob: -5.011717319488525
    3. ' if' → logprob: -5.761717319488525
    4. ' return' → logprob: -7.386717319488525
    5. 'if' → logprob: -8.261717796325684
    6. '    
' → logprob: -8.386717796325684
    7. ' parce' → logprob: -8.761717796325684
    8. ',' → logprob: -9.386717796325684
    9. '       ' → logprob: -9.761717796325684
    10. ' in' → logprob: -10.136717796325684

Token 576: ' il' (ID: 1793)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.4196147918701172
    2. ' len' → logprob: -1.6696147918701172
    3. ' s' → logprob: -1.7946147918701172
    4. 's' → logprob: -2.169614791870117
    5. ' parts' → logprob: -2.294614791870117
    6. '"' → logprob: -3.044614791870117
    7. '#' → logprob: -3.294614791870117
    8. 'parts' → logprob: -4.294614791870117
    9. '""' → logprob: -4.669614791870117
    10. '"\' → logprob: -4.794614791870117

Token 577: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.08141262829303741
    2. 'y' → logprob: -2.5814125537872314
    3. 's' → logprob: -6.4564127922058105
    4. ''y' → logprob: -7.3314127922058105
    5. 'n' → logprob: -9.331412315368652
    6. ''s' → logprob: -9.706412315368652
    7. ' n' → logprob: -9.706412315368652
    8. ' s' → logprob: -9.956412315368652
    9. ' parts' → logprob: -12.331412315368652
    10. ' a' → logprob: -12.456412315368652

Token 578: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.13838522136211395
    2. ' a' → logprob: -2.13838529586792
    3. ''a' → logprob: -4.51338529586792
    4. 'avait' → logprob: -9.138384819030762
    5. 'have' → logprob: -9.638384819030762
    6. 'has' → logprob: -10.513384819030762
    7. ''s' → logprob: -10.763384819030762
    8. ' have' → logprob: -10.888384819030762
    9. '```' → logprob: -10.888384819030762
    10. '#' → logprob: -11.013384819030762

Token 579: ' zéro' (ID: 182040)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.5612576007843018
    2. 'des' → logprob: -0.9362576007843018
    3. 'une' → logprob: -3.9362576007843018
    4. 'un' → logprob: -5.186257362365723
    5. ' deux' → logprob: -6.436257362365723
    6. ' une' → logprob: -6.436257362365723
    7. ' plusieurs' → logprob: -6.436257362365723
    8. ' un' → logprob: -6.561257362365723
    9. 'de' → logprob: -6.811257362365723
    10. '"""' → logprob: -7.311257362365723

Token 580: ' string' (ID: 1621)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.2036830186843872
    2. 'tokens' → logprob: -2.7036828994750977
    3. ' tokens' → logprob: -3.5786828994750977
    4. 'token' → logprob: -4.328682899475098
    5. ' #' → logprob: -4.953682899475098
    6. ' token' → logprob: -5.203682899475098
    7. ' diff' → logprob: -5.203682899475098
    8. ' parts' → logprob: -5.328682899475098
    9. ' or' → logprob: -5.328682899475098
    10. 'chains' → logprob: -5.453682899475098

Token 581: ' literal' (ID: 41271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2818146049976349
    2. ' return' → logprob: -1.5318145751953125
    3. '   ' → logprob: -3.6568145751953125
    4. '"' → logprob: -6.7818145751953125
    5. 'eturn' → logprob: -6.7818145751953125
    6. 's' → logprob: -7.0318145751953125
    7. 'def' → logprob: -9.781814575195312
    8. ' parts' → logprob: -9.906814575195312
    9. '"""' → logprob: -10.281814575195312
    10. ':return' → logprob: -10.281814575195312

Token 582: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47826945781707764
    2. 'return' → logprob: -0.9782694578170776
    3. ' return' → logprob: -5.478269577026367
    4. '	return' → logprob: -12.228269577026367
    5. '    
' → logprob: -14.103269577026367
    6. '       ' → logprob: -14.853269577026367
    7. '
' → logprob: -15.103269577026367
    8. '  ' → logprob: -15.353269577026367
    9. '    ' → logprob: -15.478269577026367
    10. '```' → logprob: -15.478269577026367

Token 583: 'pas' (ID: 21122)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3804568350315094
    2. ')' → logprob: -1.755456805229187
    3. ' return' → logprob: -2.8804569244384766
    4. '   ' → logprob: -3.6304569244384766
    5. ')
' → logprob: -3.8804569244384766
    6. ' or' → logprob: -4.005456924438477
    7. ' ou' → logprob: -5.130456924438477
    8. '#' → logprob: -5.380456924438477
    9. '")' → logprob: -5.630456924438477
    10. '),' → logprob: -6.130456924438477

Token 584: ' de' (ID: 334)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7350695729255676
    2. ' de' → logprob: -1.4850695133209229
    3. '"' → logprob: -2.110069513320923
    4. 'de' → logprob: -2.235069513320923
    5. 'def' → logprob: -4.360069751739502
    6. 'd' → logprob: -4.485069751739502
    7. ' d' → logprob: -4.610069751739502
    8. '"""' → logprob: -4.735069751739502
    9. '")' → logprob: -5.735069751739502
    10. ')' → logprob: -5.860069751739502

Token 585: ' double' (ID: 3503)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.15732121467590332
    2. '")' → logprob: -2.1573212146759033
    3. '";' → logprob: -4.157320976257324
    4. ''"' → logprob: -4.657320976257324
    5. '"""' → logprob: -6.532320976257324
    6. ';' → logprob: -6.657320976257324
    7. 'g' → logprob: -7.532320976257324
    8. ')' → logprob: -8.032320976257324
    9. ';"' → logprob: -8.282320976257324
    10. 'e' → logprob: -8.782320976257324

Token 586: ' quotes' (ID: 22661)
  Prédit: 'quotes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quotes' → logprob: -0.10087710618972778
    2. 'quote' → logprob: -2.350877046585083
    3. 'g' → logprob: -8.600876808166504
    4. ' quotes' → logprob: -8.850876808166504
    5. 'quoted' → logprob: -8.975876808166504
    6. 'quot' → logprob: -9.350876808166504
    7. '_quotes' → logprob: -10.225876808166504
    8. '"' → logprob: -10.350876808166504
    9. '")' → logprob: -10.725876808166504
    10. '_quote' → logprob: -11.475876808166504

Token 587: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07363086193799973
    2. ')
' → logprob: -3.0736308097839355
    3. '   ' → logprob: -4.0736308097839355
    4. ' )' → logprob: -6.0736308097839355
    5. ' or' → logprob: -6.8236308097839355
    6. ' return' → logprob: -6.8236308097839355
    7. '),' → logprob: -6.8236308097839355
    8. '")' → logprob: -7.3236308097839355
    9. ',' → logprob: -7.5736308097839355
    10. ' )
' → logprob: -8.073631286621094

Token 588: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018350696191191673
    2. 'return' → logprob: -4.018350601196289
    3. ' return' → logprob: -8.518350601196289
    4. '	return' → logprob: -14.018350601196289
    5. '       ' → logprob: -16.51835060119629
    6. '    
' → logprob: -17.64335060119629
    7. '    ' → logprob: -17.64335060119629
    8. '  ' → logprob: -17.76835060119629
    9. '```' → logprob: -18.26835060119629
    10. '
' → logprob: -18.76835060119629

Token 589: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5046065449714661
    2. 'return' → logprob: -1.0046064853668213
    3. ' return' → logprob: -3.5046064853668213
    4. '
' → logprob: -12.504606246948242
    5. '	return' → logprob: -12.629606246948242
    6. '    
' → logprob: -14.129606246948242
    7. '```' → logprob: -14.379606246948242
    8. '    ' → logprob: -14.504606246948242
    9. '       ' → logprob: -15.004606246948242
    10. '  ' → logprob: -15.754606246948242

Token 590: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2527327835559845
    2. 'return' → logprob: -1.502732753753662
    3. ' return' → logprob: -7.127732753753662
    4. '	return' → logprob: -14.87773323059082
    5. '  ' → logprob: -15.87773323059082
    6. '       ' → logprob: -16.00273323059082
    7. '    ' → logprob: -16.75273323059082
    8. '```' → logprob: -16.87773323059082
    9. '    
' → logprob: -17.12773323059082
    10. ' ' → logprob: -17.25273323059082

Token 591: ' dans' (ID: 2671)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.409982830286026
    2. ' return' → logprob: -1.7849828004837036
    3. '   ' → logprob: -1.9099828004837036
    4. ' s' → logprob: -4.409982681274414
    5. 's' → logprob: -5.659982681274414
    6. ' parts' → logprob: -6.034982681274414
    7. 'parts' → logprob: -7.284982681274414
    8. 'len' → logprob: -7.909982681274414
    9. '    ' → logprob: -8.284982681274414
    10. '"' → logprob: -8.409982681274414

Token 592: ' ce' (ID: 2357)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.533168613910675
    2. 'that' → logprob: -1.4081685543060303
    3. ' ce' → logprob: -2.9081685543060303
    4. 'this' → logprob: -3.0331685543060303
    5. 'return' → logprob: -3.5331685543060303
    6. 'len' → logprob: -4.783168792724609
    7. 's' → logprob: -5.033168792724609
    8. '"s' → logprob: -5.033168792724609
    9. 'ce' → logprob: -5.408168792724609
    10. '"C' → logprob: -5.783168792724609

Token 593: ' cas' (ID: 2108)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7918338179588318
    2. 'cas' → logprob: -0.7918338179588318
    3. 'case' → logprob: -2.9168338775634766
    4. ' cas' → logprob: -3.4168338775634766
    5. 'else' → logprob: -5.416833877563477
    6. 'def' → logprob: -7.166833877563477
    7. '```' → logprob: -7.291833877563477
    8. ' return' → logprob: -7.666833877563477
    9. 'code' → logprob: -7.791833877563477
    10. 'elif' → logprob: -8.791833877563477

Token 594: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1083921268582344
    2. 'return' → logprob: -2.8583922386169434
    3. ' return' → logprob: -3.1083922386169434
    4. '       ' → logprob: -7.733392238616943
    5. '	return' → logprob: -8.983391761779785
    6. '    ' → logprob: -9.233391761779785
    7. ':return' → logprob: -11.108391761779785
    8. ':' → logprob: -12.233391761779785
    9. '  ' → logprob: -12.483391761779785
    10. ' ' → logprob: -13.733391761779785

Token 595: ' pas' (ID: 2173)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.9120237231254578
    2. 's' → logprob: -1.1620237827301025
    3. 'parts' → logprob: -2.1620237827301025
    4. ' parts' → logprob: -2.9120237827301025
    5. ' s' → logprob: -3.0370237827301025
    6. ' len' → logprob: -3.2870237827301025
    7. 'diff' → logprob: -3.9120237827301025
    8. '"' → logprob: -5.287023544311523
    9. 'not' → logprob: -6.287023544311523
    10. ' diff' → logprob: -7.162023544311523

Token 596: ' égal' (ID: 15059)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.14948005974292755
    2. 's' → logprob: -2.274480104446411
    3. '(s' → logprob: -4.274479866027832
    4. ' (' → logprob: -4.524479866027832
    5. ' parts' → logprob: -5.024479866027832
    6. '(' → logprob: -6.024479866027832
    7. '(parts' → logprob: -7.649479866027832
    8. 'e' → logprob: -7.899479866027832
    9. 'diff' → logprob: -8.274479866027832
    10. '"' → logprob: -8.274479866027832

Token 597: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1158360242843628
    2. 'return' → logprob: -1.4908360242843628
    3. ':
' → logprob: -1.8658360242843628
    4. ':return' → logprob: -2.3658361434936523
    5. ' return' → logprob: -2.6158361434936523
    6. ':' → logprob: -2.8658361434936523
    7. ',' → logprob: -2.8658361434936523
    8. '       ' → logprob: -4.865836143493652
    9. 'eturn' → logprob: -6.865836143493652
    10. ' :
' → logprob: -7.365836143493652

Token 598: ' on' (ID: 402)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.028676986694336
    2. 'return' → logprob: -1.028676986694336
    3. '   ' → logprob: -1.278676986694336
    4. '       ' → logprob: -5.028676986694336
    5. '	return' → logprob: -9.778676986694336
    6. '    ' → logprob: -10.653676986694336
    7. '           ' → logprob: -12.653676986694336
    8. ' ' → logprob: -13.528676986694336
    9. '  ' → logprob: -13.653676986694336
    10. ':return' → logprob: -13.903676986694336

Token 599: ' ren' (ID: 5427)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.018639851361513138
    2. ' return' → logprob: -4.018640041351318
    3. '   ' → logprob: -7.893640041351318
    4. 'eturn' → logprob: -9.76863956451416
    5. 'ret' → logprob: -10.64363956451416
    6. '       ' → logprob: -11.14363956451416
    7. ' retourne' → logprob: -11.51863956451416
    8. '	return' → logprob: -13.01863956451416
    9. '```' → logprob: -13.39363956451416
    10. 'returns' → logprob: -13.39363956451416

Token 600: 'voie' (ID: 70072)
  Prédit: 'voie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'voie' → logprob: -0.008314794860780239
    2. 'v' → logprob: -5.633314609527588
    3. 'return' → logprob: -5.633314609527588
    4. 'voy' → logprob: -7.258314609527588
    5. 'voi' → logprob: -8.758315086364746
    6. 'vo' → logprob: -9.633315086364746
    7. '   ' → logprob: -10.133315086364746
    8. 'd' → logprob: -10.258315086364746
    9. 'ver' → logprob: -10.258315086364746
    10. 'voit' → logprob: -10.258315086364746

Token 601: ' DIFFER' (ID: 188541)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0008246336947195232
    2. '"D' → logprob: -7.875824451446533
    3. '   ' → logprob: -8.000824928283691
    4. ' "' → logprob: -9.250824928283691
    5. 'DI' → logprob: -11.625824928283691
    6. ''' → logprob: -13.250824928283691
    7. ''D' → logprob: -13.875824928283691
    8. '       ' → logprob: -14.250824928283691
    9. '("' → logprob: -15.125824928283691
    10. ' DI' → logprob: -15.750824928283691

Token 602: 'ENT' (ID: 2829)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005910403560847044
    2. 'return' → logprob: -7.500591278076172
    3. ' return' → logprob: -10.375591278076172
    4. '    
' → logprob: -12.750591278076172
    5. '
' → logprob: -13.250591278076172
    6. '       ' → logprob: -13.875591278076172
    7. '```' → logprob: -14.250591278076172
    8. '	return' → logprob: -14.875591278076172
    9. '<|end|>' → logprob: -16.375591278076172
    10. '    ' → logprob: -16.750591278076172

Token 603: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028010793030261993
    2. 'return' → logprob: -6.002800941467285
    3. ' return' → logprob: -8.127800941467285
    4. '    
' → logprob: -10.752800941467285
    5. '
' → logprob: -11.877800941467285
    6. '```' → logprob: -14.002800941467285
    7. '	return' → logprob: -14.752800941467285
    8. '       ' → logprob: -14.877800941467285
    9. '        
' → logprob: -16.2528018951416
    10. '  
' → logprob: -16.7528018951416

Token 604: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006728514563292265
    2. 'return' → logprob: -5.006728649139404
    3. ' return' → logprob: -11.756728172302246
    4. '```' → logprob: -12.131728172302246
    5. '	return' → logprob: -16.756729125976562
    6. '       ' → logprob: -17.756729125976562
    7. '    
' → logprob: -18.006729125976562
    8. '
' → logprob: -18.756729125976562
    9. '``' → logprob: -19.131729125976562
    10. '{return' → logprob: -20.256729125976562

Token 605: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2026485949754715
    2. 'return' (adapté à ' return') → logprob: -1.702648639678955
    3. ' return' → logprob: -6.702648639678955
    4. '```' → logprob: -11.952648162841797
    5. '	return' → logprob: -15.452648162841797
    6. '
' → logprob: -16.202648162841797
    7. '    
' → logprob: -16.452648162841797
    8. '       ' → logprob: -16.577648162841797
    9. '``' → logprob: -18.327648162841797
    10. '  ' → logprob: -18.702648162841797

Token 606: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10023244470357895
    2. ' "' → logprob: -2.3502323627471924
    3. '"D' → logprob: -10.600232124328613
    4. '   ' → logprob: -13.975232124328613
    5. ''' → logprob: -17.10023307800293
    6. '("' → logprob: -17.97523307800293
    7. ' ' → logprob: -18.72523307800293
    8. ' ' → logprob: -18.85023307800293
    9. ' '' → logprob: -18.97523307800293
    10. ''D' → logprob: -18.97523307800293

Token 607: 'DI' (ID: 20764)
  Prédit: 'DI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DI' → logprob: -1.9361264946837764e-07
    2. '"' → logprob: -16.0
    3. ' DI' → logprob: -20.0
    4. 'D' → logprob: -21.875
    5. ''D' → logprob: -22.125
    6. '"D' → logprob: -22.125
    7. '_DI' → logprob: -22.375
    8. 'DE' → logprob: -23.875
    9. 'DR' → logprob: -24.375
    10. 'DO' → logprob: -24.625

Token 608: 'FFER' (ID: 21805)
  Prédit: 'FFER'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'FFER' → logprob: -0.00013512482109945267
    2. 'FER' → logprob: -9.00013542175293
    3. 'FF' → logprob: -12.00013542175293
    4. 'F' → logprob: -12.62513542175293
    5. 'DI' → logprob: -13.62513542175293
    6. '"' → logprob: -15.00013542175293
    7. 'ffer' → logprob: -15.37513542175293
    8. 'FFE' → logprob: -16.50013542175293
    9. 'ER' → logprob: -16.75013542175293
    10. '   ' → logprob: -16.75013542175293

Token 609: 'ENT' (ID: 2829)
  Prédit: 'ENT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ENT' → logprob: -0.0005606581107713282
    2. 'RE' → logprob: -7.500560760498047
    3. 'NT' → logprob: -12.000560760498047
    4. 'ER' → logprob: -14.125560760498047
    5. 'R' → logprob: -15.000560760498047
    6. 'ent' → logprob: -15.500560760498047
    7. 'T' → logprob: -16.625560760498047
    8. 'ANT' → logprob: -16.875560760498047
    9. 'CENT' → logprob: -17.625560760498047
    10. '"' → logprob: -17.750560760498047

Token 610: '"


' (ID: 36470)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 611: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 612: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.21915119886398315
    2. ' test' → logprob: -1.719151258468628
    3. ' example' → logprob: -5.094151020050049
    4. ' compare' → logprob: -5.719151020050049
    5. 'main' → logprob: -5.719151020050049
    6. ' check' → logprob: -6.219151020050049
    7. ' solve' → logprob: -7.844151020050049
    8. ' validate' → logprob: -7.844151020050049
    9. ' judge' → logprob: -7.969151020050049
    10. ' run' → logprob: -8.344151496887207

Token 613: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -9.925185440806672e-05
    2. '():
' → logprob: -9.750099182128906
    3. ' ():' → logprob: -10.750099182128906
    4. '()' → logprob: -11.500099182128906
    5. '(' → logprob: -12.500099182128906
    6. '()>' → logprob: -12.750099182128906
    7. '():
' → logprob: -14.250099182128906
    8. '_' → logprob: -14.500099182128906
    9. '()">' → logprob: -14.875099182128906
    10. '():

' → logprob: -15.375099182128906

Token 614: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020096488296985626
    2. 'import' → logprob: -7.252009868621826
    3. ' s' → logprob: -7.377009868621826
    4. ' import' → logprob: -7.752009868621826
    5. 'n' → logprob: -9.002009391784668
    6. 's' → logprob: -10.127009391784668
    7. '```' → logprob: -10.377009391784668
    8. ' n' → logprob: -10.502009391784668
    9. ' input' → logprob: -12.502009391784668
    10. ' code' → logprob: -12.877009391784668

Token 615: ' while' (ID: 2049)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.2784579396247864
    2. 's' → logprob: -1.7784578800201416
    3. 't' → logprob: -3.0284578800201416
    4. 'n' → logprob: -4.403458118438721
    5. '   ' → logprob: -4.778458118438721
    6. ' import' → logprob: -5.778458118438721
    7. 'tests' → logprob: -7.778458118438721
    8. ' s' → logprob: -8.028457641601562
    9. 'test' → logprob: -8.028457641601562
    10. 'T' → logprob: -8.403457641601562

Token 616: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.38687896728515625
    2. ' True' → logprob: -1.1368789672851562
    3. '(True' → logprob: -11.761878967285156
    4. '1' → logprob: -16.386878967285156
    5. '=True' → logprob: -16.886878967285156
    6. 'true' → logprob: -18.136878967285156
    7. 'TRUE' → logprob: -20.136878967285156
    8. ' ' → logprob: -21.011878967285156
    9. '   ' → logprob: -21.636878967285156
    10. '.True' → logprob: -21.636878967285156

Token 617: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21676792204380035
    2. '():' → logprob: -2.0917680263519287
    3. '   ' → logprob: -3.5917680263519287
    4. ':
' → logprob: -3.7167680263519287
    5. '():
' → logprob: -4.59176778793335
    6. ' :' → logprob: -5.59176778793335
    7. '       ' → logprob: -5.84176778793335
    8. '(' → logprob: -6.84176778793335
    9. ',' → logprob: -7.84176778793335
    10. '.' → logprob: -8.966768264770508

Token 618: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07017472386360168
    2. '       ' → logprob: -2.6951746940612793
    3. 'try' → logprob: -8.695175170898438
    4. 'line' → logprob: -10.195175170898438
    5. ' line' → logprob: -11.320175170898438
    6. 's' → logprob: -11.445175170898438
    7. '```' → logprob: -12.445175170898438
    8. '	line' → logprob: -13.070175170898438
    9. ' try' → logprob: -13.820175170898438
    10. '	try' → logprob: -14.695175170898438

Token 619: ' s' (ID: 265)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.19145818054676056
    2. 's' (adapté à ' s') → logprob: -2.191458225250244
    3. 'line' → logprob: -2.816458225250244
    4. 'l' → logprob: -6.566458225250244
    5. ' try' → logprob: -7.691458225250244
    6. '   ' → logprob: -8.441457748413086
    7. 'ligne' → logprob: -8.691457748413086
    8. ' line' → logprob: -9.316457748413086
    9. 'a' → logprob: -9.316457748413086
    10. '```' → logprob: -9.941457748413086

Token 620: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5538476705551147
    2. ' =' → logprob: -0.9288476705551147
    3. '=' → logprob: -3.5538477897644043
    4. '=input' → logprob: -6.428847789764404
    5. '   ' → logprob: -12.053847312927246
    6. 'try' → logprob: -12.178847312927246
    7. '_input' → logprob: -13.178847312927246
    8. '_' → logprob: -13.553847312927246
    9. '=None' → logprob: -13.553847312927246
    10. '=line' → logprob: -13.678847312927246

Token 621: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269443929195404
    2. ' =' → logprob: -2.1269443035125732
    3. '=input' → logprob: -11.126944541931152
    4. '   ' → logprob: -13.876944541931152
    5. 'input' → logprob: -14.626944541931152
    6. ',' → logprob: -15.376944541931152
    7. '=
' → logprob: -17.501943588256836
    8. '=

' → logprob: -18.001943588256836
    9. 's' → logprob: -18.126943588256836
    10. '=line' → logprob: -18.376943588256836

Token 622: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0001234428636962548
    2. ' input' → logprob: -9.000123023986816
    3. '(input' → logprob: -17.625123977661133
    4. '=input' → logprob: -19.875123977661133
    5. '	input' → logprob: -20.250123977661133
    6. '<input' → logprob: -21.375123977661133
    7. '   ' → logprob: -23.375123977661133
    8. '.input' → logprob: -24.000123977661133
    9. ',input' → logprob: -24.125123977661133
    10. '```' → logprob: -24.500123977661133

Token 623: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0001317871210630983
    2. '().' → logprob: -9.250131607055664
    3. '()
' → logprob: -10.500131607055664
    4. '(' → logprob: -13.250131607055664
    5. '("")' → logprob: -13.250131607055664
    6. '()

' → logprob: -13.750131607055664
    7. '()>' → logprob: -13.875131607055664
    8. '())' → logprob: -14.000131607055664
    9. '("' → logprob: -14.750131607055664
    10. '();' → logprob: -14.875131607055664

Token 624: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002898428589105606
    2. ' if' → logprob: -6.627898216247559
    3. 's' → logprob: -7.127898216247559
    4. '<|end|>' → logprob: -7.627898216247559
    5. ' ' → logprob: -9.252898216247559
    6. 'if' → logprob: -9.877898216247559
    7. '   ' → logprob: -10.127898216247559
    8. ' s' → logprob: -10.377898216247559
    9. '        
' → logprob: -11.377898216247559
    10. '<|end|>' → logprob: -11.502898216247559

Token 625: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.05319000035524368
    2. 's' → logprob: -3.553189992904663
    3. ' if' → logprob: -3.803189992904663
    4. '       ' → logprob: -7.053190231323242
    5. ' s' → logprob: -12.928190231323242
    6. 'If' → logprob: -15.428190231323242
    7. '	if' → logprob: -16.553190231323242
    8. ';if' → logprob: -17.928190231323242
    9. '        
' → logprob: -18.303190231323242
    10. '   ' → logprob: -18.803190231323242

Token 626: ' s' (ID: 265)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.7974177002906799
    2. 's' → logprob: -1.2974176406860352
    3. ' s' → logprob: -1.2974176406860352
    4. 'not' → logprob: -5.797417640686035
    5. '	s' → logprob: -14.797417640686035
    6. ' ' → logprob: -15.672417640686035
    7. '   ' → logprob: -16.17241859436035
    8. '	not' → logprob: -16.42241859436035
    9. ' ' → logprob: -16.92241859436035
    10. '```' → logprob: -17.17241859436035

Token 627: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '```' → logprob: -18.125
    3. '１' → logprob: -19.75
    4. '==' → logprob: -19.875
    5. '.strip' → logprob: -19.875
    6. ' ==' → logprob: -20.5625
    7. '``' → logprob: -21.0625
    8. 's' → logprob: -21.1875
    9. '=' → logprob: -21.4375
    10. '১' → logprob: -21.5

Token 628: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10057811439037323
    2. ' ==' → logprob: -2.3505780696868896
    3. '.strip' → logprob: -7.975578308105469
    4. '=' → logprob: -10.975578308105469
    5. '=="' → logprob: -11.975578308105469
    6. '===' → logprob: -13.975578308105469
    7. '()==' → logprob: -14.100578308105469
    8. '==-' → logprob: -14.100578308105469
    9. 'strip' → logprob: -14.350578308105469
    10. '=='' → logprob: -15.100578308105469

Token 629: ' '.' (ID: 12662)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.16904902458190918
    2. '""' → logprob: -2.169049024581909
    3. ''' → logprob: -3.919049024581909
    4. '"#' → logprob: -4.294049263000488
    5. '''' → logprob: -5.419049263000488
    6. ''#' → logprob: -6.544049263000488
    7. '"":' → logprob: -7.794049263000488
    8. ''end' → logprob: -8.419049263000488
    9. ''ex' → logprob: -8.794049263000488
    10. ''t' → logprob: -8.919049263000488

Token 630: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.7767159938812256
    2. '':
' → logprob: -1.2767159938812256
    3. ''' → logprob: -2.1517159938812256
    4. '.' → logprob: -3.1517159938812256
    5. '"' → logprob: -3.6517159938812256
    6. ''\' → logprob: -4.026716232299805
    7. '\n' → logprob: -4.151716232299805
    8. '":' → logprob: -4.651716232299805
    9. '\' → logprob: -5.151716232299805
    10. 'exit' → logprob: -5.651716232299805

Token 631: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014184189029037952
    2. '           ' → logprob: -4.26418399810791
    3. '   ' → logprob: -11.13918399810791
    4. 'break' → logprob: -13.13918399810791
    5. ' break' → logprob: -13.38918399810791
    6. '     ' → logprob: -14.01418399810791
    7. '	   ' → logprob: -14.26418399810791
    8. '	break' → logprob: -14.76418399810791
    9. '		' → logprob: -15.38918399810791
    10. '      ' → logprob: -16.014184951782227

Token 632: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.19309164583683014
    2. '       ' → logprob: -1.943091630935669
    3. ' break' → logprob: -3.443091630935669
    4. 'return' → logprob: -8.81809139251709
    5. '	break' → logprob: -8.94309139251709
    6. '           ' → logprob: -9.44309139251709
    7. '   ' → logprob: -11.94309139251709
    8. '               ' → logprob: -13.81809139251709
    9. ' return' → logprob: -14.06809139251709
    10. '_break' → logprob: -14.19309139251709

Token 633: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017350474081467837
    2. 's' → logprob: -9.000173568725586
    3. '   ' → logprob: -10.250173568725586
    4. ' s' → logprob: -11.375173568725586
    5. '           ' → logprob: -13.750173568725586
    6. '```' → logprob: -14.375173568725586
    7. '<|end|>' → logprob: -14.500173568725586
    8. '	' → logprob: -14.750173568725586
    9. ' ' → logprob: -15.375173568725586
    10. '	   ' → logprob: -16.500173568725586

Token 634: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003749486757442355
    2. 's' → logprob: -5.753749370574951
    3. '   ' → logprob: -7.628749370574951
    4. ' s' → logprob: -9.62874984741211
    5. '<|end|>' → logprob: -11.50374984741211
    6. ' ' → logprob: -12.75374984741211
    7. '	s' → logprob: -13.62874984741211
    8. '	' → logprob: -13.87874984741211
    9. '```' → logprob: -13.87874984741211
    10. '           ' → logprob: -14.00374984741211

Token 635: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.09005790948867798
    2. '       ' → logprob: -2.465057849884033
    3. ' s' → logprob: -6.840057849884033
    4. '   ' → logprob: -10.715058326721191
    5. '	s' → logprob: -11.465058326721191
    6. '<|end|>' → logprob: -12.215058326721191
    7. '	' → logprob: -12.590058326721191
    8. '	   ' → logprob: -13.340058326721191
    9. ' ' → logprob: -13.465058326721191
    10. '	       ' → logprob: -13.840058326721191

Token 636: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '1' → logprob: -21.875
    3. '۲' → logprob: -22.75
    4. '₂' → logprob: -23.125
    5. '```' → logprob: -23.25
    6. '２' → logprob: -23.5
    7. '=' → logprob: -23.625
    8. 'tring' → logprob: -23.875
    9. ' =' → logprob: -24.375
    10. 'tr' → logprob: -24.625

Token 637: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014133334159851
    2. '=' → logprob: -1.7014133930206299
    3. '=input' → logprob: -16.326414108276367
    4. '＝' → logprob: -19.826414108276367
    5. ' ' → logprob: -19.951414108276367
    6. ' ' → logprob: -20.576414108276367
    7. '   ' → logprob: -20.826414108276367
    8. ')' → logprob: -20.826414108276367
    9. '=s' → logprob: -21.076414108276367
    10. 's' → logprob: -21.076414108276367

Token 638: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5759397745132446
    2. 'input' → logprob: -0.8259397745132446
    3. '=input' → logprob: -15.325940132141113
    4. '(input' → logprob: -17.700939178466797
    5. '	input' → logprob: -17.950939178466797
    6. '<input' → logprob: -18.700939178466797
    7. ',input' → logprob: -19.325939178466797
    8. '_input' → logprob: -19.950939178466797
    9. '.input' → logprob: -20.325939178466797
    10. 'Input' → logprob: -20.700939178466797

Token 639: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.319370302458992e-06
    2. '()
' → logprob: -12.375005722045898
    3. '())' → logprob: -14.625005722045898
    4. ' ()' → logprob: -16.1250057220459
    5. '().' → logprob: -16.3750057220459
    6. '()

' → logprob: -16.7500057220459
    7. '()>' → logprob: -17.0000057220459
    8. '()]' → logprob: -17.1250057220459
    9. '(' → logprob: -17.2500057220459
    10. '()`' → logprob: -17.3750057220459

Token 640: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04706548526883125
    2. '   ' → logprob: -3.172065496444702
    3. 'result' → logprob: -5.922065258026123
    4. ' result' → logprob: -7.047065258026123
    5. 'print' → logprob: -8.172065734863281
    6. '<|end|>' → logprob: -8.797065734863281
    7. ' print' → logprob: -10.297065734863281
    8. '        
' → logprob: -11.297065734863281
    9. '```' → logprob: -11.672065734863281
    10. '	result' → logprob: -12.297065734863281

Token 641: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.38718628883361816
    2. 'result' → logprob: -1.1371862888336182
    3. ' result' → logprob: -8.637186050415039
    4. ' print' → logprob: -9.012186050415039
    5. 'res' → logprob: -11.387186050415039
    6. '       ' → logprob: -12.637186050415039
    7. 'answer' → logprob: -14.637186050415039
    8. '```' → logprob: -14.887186050415039
    9. 'status' → logprob: -15.262186050415039
    10. '   ' → logprob: -15.887186050415039

Token 642: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.0002613358374219388
    2. '(' → logprob: -8.250261306762695
    3. '()' → logprob: -18.500261306762695
    4. '("' → logprob: -18.500261306762695
    5. '(J' → logprob: -18.625261306762695
    6. '(
' → logprob: -19.375261306762695
    7. '(s' → logprob: -20.125261306762695
    8. '(f' → logprob: -20.250261306762695
    9. '((' → logprob: -20.375261306762695
    10. ' (' → logprob: -20.500261306762695

Token 643: 'udge' (ID: 35933)
  Prédit: 'udge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'udge' → logprob: -5.2166411478538066e-05
    2. 'judge' → logprob: -9.875052452087402
    3. 'ud' → logprob: -14.875052452087402
    4. 'u' → logprob: -16.250051498413086
    5. 'udget' → logprob: -16.625051498413086
    6. 'uge' → logprob: -16.750051498413086
    7. 'adge' → logprob: -17.125051498413086
    8. 'UDGE' → logprob: -17.750051498413086
    9. 'odge' → logprob: -18.500051498413086
    10. ' judge' → logprob: -18.875051498413086

Token 644: '_program' (ID: 58929)
  Prédit: '_program'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_program' → logprob: -3.8889261304575484e-06
    2. '_' → logprob: -12.875003814697266
    3. 'program' → logprob: -15.250003814697266
    4. ')_' → logprob: -15.375003814697266
    5. '_PROGRAM' → logprob: -15.625003814697266
    6. '"_' → logprob: -15.750003814697266
    7. 's' → logprob: -15.750003814697266
    8. '(program' → logprob: -15.875003814697266
    9. '```' → logprob: -16.500003814697266
    10. '(s' → logprob: -16.750003814697266

Token 645: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.011075885966420174
    2. '_program' → logprob: -4.511075973510742
    3. 'program' → logprob: -10.636075973510742
    4. 'ms' → logprob: -13.011075973510742
    5. ' programs' → logprob: -14.761075973510742
    6. '(s' → logprob: -15.136075973510742
    7. 'rogram' → logprob: -15.136075973510742
    8. '(program' → logprob: -15.511075973510742
    9. 'ams' → logprob: -15.636075973510742
    10. ' s' → logprob: -16.261075973510742

Token 646: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -4.751746746478602e-05
    2. '(' → logprob: -10.00004768371582
    3. ' (' → logprob: -13.25004768371582
    4. ')' → logprob: -15.62504768371582
    5. 's' → logprob: -16.12504768371582
    6. ')(' → logprob: -16.87504768371582
    7. '(
' → logprob: -17.25004768371582
    8. '(f' → logprob: -18.12504768371582
    9. ')s' → logprob: -19.12504768371582
    10. '((' → logprob: -20.00004768371582

Token 647: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. 's' → logprob: -14.500000953674316
    3. '2' → logprob: -15.625000953674316
    4. '(s' → logprob: -16.125
    5. 'r' → logprob: -18.0
    6. '```' → logprob: -18.625
    7. '_' → logprob: -19.375
    8. 'tring' → logprob: -19.5
    9. 'tr' → logprob: -19.5
    10. ')' → logprob: -20.125

Token 648: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009196776081807911
    2. ',s' → logprob: -7.000919818878174
    3. ' ,' → logprob: -12.000919342041016
    4. 's' → logprob: -13.125919342041016
    5. ',
' → logprob: -18.000919342041016
    6. '   ' → logprob: -18.875919342041016
    7. ',p' → logprob: -19.625919342041016
    8. ' s' → logprob: -20.000919342041016
    9. '_,' → logprob: -20.000919342041016
    10. '(' → logprob: -20.000919342041016

Token 649: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2519293427467346
    2. ' s' → logprob: -1.5019292831420898
    3. '   ' → logprob: -16.251930236816406
    4. '       ' → logprob: -16.626930236816406
    5. '    ' → logprob: -17.001930236816406
    6. ' ' → logprob: -17.751930236816406
    7. ')' → logprob: -18.126930236816406
    8. '(s' → logprob: -18.251930236816406
    9. '        ' → logprob: -18.376930236816406
    10. '     ' → logprob: -18.501930236816406

Token 650: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. 's' → logprob: -19.625
    3. '```' → logprob: -20.375
    4. '_' → logprob: -21.0
    5. '1' → logprob: -21.625
    6. '
' → logprob: -22.0
    7. '₂' → logprob: -22.125
    8. '２' → logprob: -22.875
    9. ' ' → logprob: -22.875
    10. '۲' → logprob: -23.125

Token 651: '))


' (ID: 49252)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.16023580729961395
    2. ')' → logprob: -1.9102357625961304
    3. '())' → logprob: -11.660235404968262
    4. '()))' → logprob: -13.160235404968262
    5. ')))' → logprob: -14.410235404968262
    6. '()' → logprob: -15.660235404968262
    7. '))
' → logprob: -16.160236358642578
    8. ' ))' → logprob: -16.660236358642578
    9. ')")' → logprob: -17.035236358642578
    10. '})' → logprob: -17.410236358642578

Token 652: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.19915561378002167
    2. '```' → logprob: -1.824155569076538
    3. '<|end|>' → logprob: -4.574155807495117
    4. '#' → logprob: -4.949155807495117
    5. '[' → logprob: -7.699155807495117
    6. '...' → logprob: -7.824155807495117
    7. ' if' → logprob: -7.824155807495117
    8. '[]' → logprob: -9.074155807495117
    9. '{}' → logprob: -9.699155807495117
    10. '\' → logprob: -9.824155807495117

Token 653: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.062155112624168396
    2. '__' → logprob: -2.81215500831604
    3. '_name' → logprob: -9.312154769897461
    4. 'name' → logprob: -9.687154769897461
    5. ' ' → logprob: -11.062154769897461
    6. ' True' → logprob: -12.437154769897461
    7. 'True' → logprob: -12.812154769897461
    8. '_' → logprob: -12.937154769897461
    9. ' ' → logprob: -13.062154769897461
    10. ' name' → logprob: -13.062154769897461

Token 654: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.17431016266345978
    2. ' ==' → logprob: -1.9243102073669434
    3. '==' → logprob: -4.549310207366943
    4. ' __' → logprob: -6.174310207366943
    5. '=="' → logprob: -7.424310207366943
    6. 'name' → logprob: -7.674310207366943
    7. '__.' → logprob: -9.674309730529785
    8. '__.__' → logprob: -10.049309730529785
    9. '.__' → logprob: -10.049309730529785
    10. '=='' → logprob: -10.549309730529785

Token 655: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.36574100604048e-06
    2. '__.__' → logprob: -13.250004768371582
    3. '==' → logprob: -14.000004768371582
    4. '___' → logprob: -14.125004768371582
    5. '____' → logprob: -15.000004768371582
    6. '=="' → logprob: -15.500004768371582
    7. '__["' → logprob: -16.250003814697266
    8. ' ==' → logprob: -16.250003814697266
    9. '_' → logprob: -16.500003814697266
    10. '```' → logprob: -17.125003814697266

Token 656: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.016039295122027397
    2. '==' → logprob: -4.2660393714904785
    3. '=="' → logprob: -6.8910393714904785
    4. ' ==' → logprob: -7.1410393714904785
    5. '=='' → logprob: -10.14103889465332
    6. '___' → logprob: -10.89103889465332
    7. '_' → logprob: -13.26603889465332
    8. '===' → logprob: -13.64103889465332
    9. '__.__' → logprob: -13.64103889465332
    10. '____' → logprob: -14.39103889465332

Token 657: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.048606324940919876
    2. ''' → logprob: -3.0486063957214355
    3. ' "__' → logprob: -11.423605918884277
    4. '__' → logprob: -11.798605918884277
    5. ' '__' → logprob: -14.548605918884277
    6. ''"' → logprob: -18.048606872558594
    7. '"name' → logprob: -18.423606872558594
    8. '("__' → logprob: -18.423606872558594
    9. '"user' → logprob: -18.673606872558594
    10. '('__' → logprob: -19.548606872558594

Token 658: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.04863744229078293
    2. '__' → logprob: -3.0486373901367188
    3. '"' → logprob: -10.548637390136719
    4. 'name' → logprob: -10.923637390136719
    5. ''' → logprob: -12.548637390136719
    6. '_main' → logprob: -14.048637390136719
    7. 'built' → logprob: -14.298637390136719
    8. '___' → logprob: -15.173637390136719
    9. ' main' → logprob: -15.298637390136719
    10. '____' → logprob: -16.42363739013672

Token 659: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.10115370899438858
    2. '__' → logprob: -2.351153612136841
    3. '__':
' → logprob: -6.97615385055542
    4. '__["' → logprob: -11.976153373718262
    5. '__.__' → logprob: -12.601153373718262
    6. '__.' → logprob: -13.601153373718262
    7. '__
' → logprob: -14.726153373718262
    8. '__("' → logprob: -14.851153373718262
    9. '__",' → logprob: -14.976153373718262
    10. '__:' → logprob: -15.601153373718262

Token 660: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.03340131416916847
    2. ' main' → logprob: -3.9084012508392334
    3. '   ' → logprob: -4.5334014892578125
    4. '__' → logprob: -6.7834014892578125
    5. '	main' → logprob: -7.0334014892578125
    6. '_main' → logprob: -11.783401489257812
    7. '"' → logprob: -13.158401489257812
    8. '    
' → logprob: -13.533401489257812
    9. '(main' → logprob: -13.658401489257812
    10. '	' → logprob: -13.658401489257812

Token 661: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.25
    3. '	main' → logprob: -22.5
    4. 'import' → logprob: -24.625
    5. '   ' → logprob: -25.5
    6. '.main' → logprob: -27.125
    7. '(main' → logprob: -27.25
    8. '_main' → logprob: -27.875
    9. '```' → logprob: -30.0
    10. 'Main' → logprob: -30.25

Token 662: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 660
Tokens correctement prédits (1ère position, stricte): 245
Tokens correctement prédits (1ère position, avec adaptation): 271
Tokens correctement prédits (top 10): 491
Précision stricte (1ère position): 37.12%
Précision adaptée (1ère position): 41.06%
Précision (top 10): 74.39%
================================================================================
