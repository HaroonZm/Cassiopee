================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:15
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N,K,T,U,V,L = map(int, input().split())
D = [int(input()) for _ in range(N)]

time = 0.0
pos = 0
carrots = 0
speed = U
boost_end = 0.0

for i in range(N):
    dist = D[i] - pos
    # If boost is active, check if it lasts until reaching this carrot
    remaining_boost = max(0.0, boost_end - time)
    # Calculate distance can be covered at boosted speed in remaining boost time
    boosted_dist = remaining_boost * V
    if dist <= boosted_dist:
        # All distance to carrot covered at boosted speed
        time += dist / V
        pos = D[i]
    else:
        # Use boost for distance, then normal speed for the rest
        time += remaining_boost
        dist -= boosted_dist
        time += dist / U
        pos = D[i]
    # Decide whether to eat carrot or keep it
    # Simple approach: if we can still eat carrots to get boost, eat
    # We can hold up to K carrots; if holding less than K, keep it
    # But always eat if no boost active
    if boost_end <= time:
        # No boost active, eat carrot
        boost_end = time + T
        speed = V
    else:
        # Have boost active
        if carrots < K:
            carrots += 1 # keep carrot
        else:
            # must eat to get new boost
            boost_end = time + T
    # For simplicity, we do not use stored carrots in this beginner approach

# After last carrot, go to goal
dist = L - pos
remaining_boost = max(0.0, boost_end - time)
boosted_dist = remaining_boost * V
if dist <= boosted_dist:
    time += dist / V
else:
    time += remaining_boost
    dist -= boosted_dist
    time += dist / U

print(time)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ',K' (ID: 107147)
  → Token d'amorce (pas de prédiction)

Token 2: ',T' (ID: 44428)
  → Token d'amorce (pas de prédiction)

Token 3: ',U' (ID: 137799)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 4: ',V' (ID: 81155)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.010233028791844845
    2. ' =' → logprob: -4.885232925415039
    3. ',' → logprob: -6.135232925415039
    4. ')' → logprob: -8.635232925415039
    5. '[' → logprob: -9.010232925415039
    6. ';' → logprob: -10.135232925415039
    7. ' ' → logprob: -10.635232925415039
    8. '.' → logprob: -11.010232925415039
    9. '_' → logprob: -11.135232925415039
    10. '+' → logprob: -11.260232925415039

Token 5: ',L' (ID: 68006)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001221178681589663
    2. ',' → logprob: -7.751221179962158
    3. ' =' → logprob: -7.751221179962158
    4. ')' → logprob: -9.001220703125
    5. ';' → logprob: -9.751220703125
    6. '[' → logprob: -9.751220703125
    7. '+' → logprob: -10.001220703125
    8. '(' → logprob: -10.501220703125
    9. '*' → logprob: -11.376220703125
    10. '_' → logprob: -11.751220703125

Token 6: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0028395876288414
    2. ' =' → logprob: -6.1278395652771
    3. ',' → logprob: -7.5028395652771
    4. ';' → logprob: -10.252840042114258
    5. ')' → logprob: -10.502840042114258
    6. '[' → logprob: -11.627840042114258
    7. '#' → logprob: -12.377840042114258
    8. '```' → logprob: -12.502840042114258
    9. '.' → logprob: -12.627840042114258
    10. '(' → logprob: -12.877840042114258

Token 7: ' map' (ID: 4014)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5351411700248718
    2. 'map' → logprob: -1.9101412296295166
    3. ' ' → logprob: -2.0351412296295166
    4. ' map' → logprob: -2.5351412296295166
    5. 'input' → logprob: -3.9101412296295166
    6. ' [' → logprob: -4.9101409912109375
    7. ' input' → logprob: -5.1601409912109375
    8. '10' → logprob: -5.2851409912109375
    9. '1' → logprob: -5.6601409912109375
    10. '5' → logprob: -5.7851409912109375

Token 8: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11297575384378433
    2. '<|end|>' → logprob: -2.487975835800171
    3. '(lambda' → logprob: -3.987975835800171
    4. '(int' → logprob: -5.987975597381592
    5. '```' → logprob: -7.237975597381592
    6. '<|end|>' → logprob: -7.362975597381592
    7. ')' → logprob: -8.23797607421875
    8. '(user' → logprob: -8.36297607421875
    9. '(token' → logprob: -9.61297607421875
    10. '(str' → logprob: -9.61297607421875

Token 9: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.45762962102890015
    2. '(' → logprob: -1.207629680633545
    3. ')' → logprob: -2.832629680633545
    4. '(int' → logprob: -5.457629680633545
    5. '(user' → logprob: -6.707629680633545
    6. '(str' → logprob: -6.832629680633545
    7. '(data' → logprob: -7.832629680633545
    8. '(raw' → logprob: -7.832629680633545
    9. '<|end|>' → logprob: -8.082629203796387
    10. '(eval' → logprob: -8.332629203796387

Token 10: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.011081299744546413
    2. ' input' → logprob: -4.511081218719482
    3. '(input' → logprob: -10.38608169555664
    4. ')' → logprob: -13.26108169555664
    5. ',input' → logprob: -15.26108169555664
    6. '<input' → logprob: -15.63608169555664
    7. '=input' → logprob: -15.63608169555664
    8. 'raw' → logprob: -15.88608169555664
    9. '	input' → logprob: -16.88608169555664
    10. '[input' → logprob: -17.01108169555664

Token 11: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4587818682193756
    2. '()' → logprob: -1.0837818384170532
    3. '().' → logprob: -3.7087819576263428
    4. ')' → logprob: -6.333781719207764
    5. '());' → logprob: -6.708781719207764
    6. '();)' → logprob: -7.708781719207764
    7. '()>' → logprob: -8.083782196044922
    8. '(' → logprob: -8.583782196044922
    9. '()))' → logprob: -9.083782196044922
    10. '();' → logprob: -9.083782196044922

Token 12: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0008508439059369266
    2. 'strip' → logprob: -7.125850677490234
    3. 'read' → logprob: -10.625850677490234
    4. 'rstrip' → logprob: -11.500850677490234
    5. ')' → logprob: -11.875850677490234
    6. ' split' → logprob: -12.875850677490234
    7. 'spl' → logprob: -14.000850677490234
    8. '(split' → logprob: -14.375850677490234
    9. 'startswith' → logprob: -15.250850677490234
    10. 'decode' → logprob: -15.500850677490234

Token 13: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00378404650837183
    2. '())' → logprob: -6.0037841796875
    3. '))' → logprob: -7.3787841796875
    4. '(' → logprob: -7.8787841796875
    5. '()' → logprob: -8.8787841796875
    6. '`)' → logprob: -9.3787841796875
    7. '```' → logprob: -11.2537841796875
    8. ')`' → logprob: -11.3787841796875
    9. '<|end|>' → logprob: -11.8787841796875
    10. '`' → logprob: -12.2537841796875

Token 14: 'D' (ID: 35)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.20510759949684143
    2. '\n' → logprob: -2.5801076889038086
    3. '
' → logprob: -3.4551076889038086
    4. '\' → logprob: -4.455107688903809
    5. ',' → logprob: -4.830107688903809
    6. '*' → logprob: -4.955107688903809
    7. '```' → logprob: -4.955107688903809
    8. '+' → logprob: -5.080107688903809
    9. '.' → logprob: -5.205107688903809
    10. 'a' → logprob: -5.705107688903809

Token 15: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2618091106414795
    2. '[' → logprob: -1.3868091106414795
    3. ' =' → logprob: -1.6368091106414795
    4. '.' → logprob: -2.1368091106414795
    5. '[i' → logprob: -3.3868091106414795
    6. ',' → logprob: -3.8868091106414795
    7. 'E' → logprob: -4.011809349060059
    8. '_' → logprob: -4.136809349060059
    9. '[:]' → logprob: -4.136809349060059
    10. '-' → logprob: -5.261809349060059

Token 16: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.45361417531967163
    2. '[int' → logprob: -1.9536142349243164
    3. '[]' → logprob: -2.8286142349243164
    4. '[' → logprob: -2.8286142349243164
    5. ' []' → logprob: -3.2036142349243164
    6. ' list' → logprob: -4.578614234924316
    7. '[K' → logprob: -4.578614234924316
    8. '[N' → logprob: -4.828614234924316
    9. '[T' → logprob: -5.078614234924316
    10. '0' → logprob: -5.703614234924316

Token 17: 'int' (ID: 491)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10490471124649048
    2. 'int' → logprob: -2.3549046516418457
    3. ']' → logprob: -5.604904651641846
    4. ']int' → logprob: -7.729904651641846
    5. '(int' → logprob: -8.479905128479004
    6. ' int' → logprob: -9.729905128479004
    7. '[int' → logprob: -9.729905128479004
    8. ')' → logprob: -9.729905128479004
    9. ' ]' → logprob: -9.854905128479004
    10. ' ' → logprob: -10.229905128479004

Token 18: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.6219483017921448
    2. '(' → logprob: -0.8719483017921448
    3. '(x' → logprob: -3.1219482421875
    4. '(i' → logprob: -8.2469482421875
    5. ']' → logprob: -8.7469482421875
    6. '()' → logprob: -8.7469482421875
    7. '()]' → logprob: -8.9969482421875
    8. '(a' → logprob: -10.4969482421875
    9. '(s' → logprob: -10.7469482421875
    10. '(
' → logprob: -10.8719482421875

Token 19: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0004703530576080084
    2. '()' → logprob: -8.375470161437988
    3. '()]' → logprob: -8.500470161437988
    4. ')' → logprob: -10.750470161437988
    5. '()))' → logprob: -12.500470161437988
    6. '()),' → logprob: -12.500470161437988
    7. ' ())' → logprob: -13.375470161437988
    8. ')]' → logprob: -13.500470161437988
    9. '())
' → logprob: -13.625470161437988
    10. '();)' → logprob: -14.125470161437988

Token 20: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14746832847595215
    2. '()' → logprob: -2.272468328475952
    3. '())' → logprob: -3.397468328475952
    4. '()]' → logprob: -8.147468566894531
    5. ')]' → logprob: -8.397468566894531
    6. ']' → logprob: -10.522468566894531
    7. ')])' → logprob: -11.647468566894531
    8. ' )' → logprob: -11.772468566894531
    9. '])' → logprob: -11.897468566894531
    10. 'for' → logprob: -12.272468566894531

Token 21: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0016212647315114737
    2. ' _' → logprob: -7.001621246337891
    3. '_' → logprob: -7.626621246337891
    4. ' ' → logprob: -9.62662124633789
    5. '_range' → logprob: -10.12662124633789
    6. ' i' → logprob: -10.12662124633789
    7. 'range' → logprob: -10.37662124633789
    8. '(range' → logprob: -10.87662124633789
    9. ' in' → logprob: -11.00162124633789
    10. '	range' → logprob: -12.25162124633789

Token 22: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.32003507018089294
    2. 'range' → logprob: -1.3200350999832153
    3. '(range' → logprob: -5.945034980773926
    4. ' in' → logprob: -6.070034980773926
    5. 'in' → logprob: -7.445034980773926
    6. 'ange' → logprob: -7.695034980773926
    7. '_range' → logprob: -8.195034980773926
    8. '_' → logprob: -8.195034980773926
    9. '	range' → logprob: -8.570034980773926
    10. '(' → logprob: -11.195034980773926

Token 23: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03804263845086098
    2. ' range' → logprob: -3.2880425453186035
    3. '	range' → logprob: -14.288043022155762
    4. '(range' → logprob: -15.288043022155762
    5. ' ' → logprob: -16.538042068481445
    6. '   ' → logprob: -16.663042068481445
    7. '  ' → logprob: -17.288042068481445
    8. 'rang' → logprob: -18.163042068481445
    9. '```' → logprob: -18.288042068481445
    10. 'r' → logprob: -18.413042068481445

Token 24: '(N' (ID: 10564)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.03975946828722954
    2. '(N' → logprob: -3.414759397506714
    3. '(' → logprob: -5.539759635925293
    4. '(T' → logprob: -6.164759635925293
    5. '(L' → logprob: -10.664759635925293
    6. '(M' → logprob: -10.664759635925293
    7. '(n' → logprob: -12.789759635925293
    8. '(D' → logprob: -13.039759635925293
    9. 'K' → logprob: -13.414759635925293
    10. '(k' → logprob: -13.539759635925293

Token 25: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00034476007567718625
    2. ')' → logprob: -8.125345230102539
    3. ']' → logprob: -10.000345230102539
    4. ')])' → logprob: -13.750345230102539
    5. ' )' → logprob: -14.250345230102539
    6. '')]' → logprob: -14.625345230102539
    7. '])]' → logprob: -14.875345230102539
    8. '))' → logprob: -15.000345230102539
    9. ')]
' → logprob: -16.25034523010254
    10. ')],' → logprob: -16.25034523010254

Token 26: 'time' (ID: 4580)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.2734471559524536
    2. 's' → logprob: -1.6484471559524536
    3. 'for' → logprob: -2.148447036743164
    4. 'result' → logprob: -2.898447036743164
    5. 'M' → logprob: -3.023447036743164
    6. 'dp' → logprob: -3.148447036743164
    7. 'count' → logprob: -3.398447036743164
    8. 'S' → logprob: -3.523447036743164
    9. 't' → logprob: -3.773447036743164
    10. 'D' → logprob: -3.898447036743164

Token 27: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5347978472709656
    2. ' =' → logprob: -1.6597979068756104
    3. 's' → logprob: -1.7847979068756104
    4. '=' → logprob: -3.0347979068756104
    5. '_to' → logprob: -6.159797668457031
    6. '_taken' → logprob: -6.159797668457031
    7. '_needed' → logprob: -7.284797668457031
    8. '_limit' → logprob: -7.409797668457031
    9. '_required' → logprob: -7.659797668457031
    10. '_remaining' → logprob: -8.159797668457031

Token 28: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.35538044571876526
    2. ' ' → logprob: -1.2303804159164429
    3. ' [' → logprob: -6.480380535125732
    4. '[' → logprob: -7.230380535125732
    5. ' max' → logprob: -7.480380535125732
    6. ' V' → logprob: -7.480380535125732
    7. ' T' → logprob: -7.605380535125732
    8. 'V' → logprob: -7.855380535125732
    9. 'T' → logprob: -7.980380535125732
    10. 'D' → logprob: -8.105380058288574

Token 29: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003985316026955843
    2. 'T' → logprob: -5.878985404968262
    3. 'D' → logprob: -7.628985404968262
    4. 'K' → logprob: -8.628985404968262
    5. 'sum' → logprob: -9.003985404968262
    6. '[' → logprob: -9.128985404968262
    7. 'V' → logprob: -9.378985404968262
    8. 'min' → logprob: -10.128985404968262
    9. 'max' → logprob: -10.253985404968262
    10. '[]' → logprob: -10.503985404968262

Token 30: '.' (ID: 13)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.43500247597694397
    2. ' for' → logprob: -1.6850024461746216
    3. '<|end|>' → logprob: -2.060002565383911
    4. '
' → logprob: -4.310002326965332
    5. ' ' → logprob: -4.560002326965332
    6. ' 
' → logprob: -4.810002326965332
    7. '<|end|>' → logprob: -6.435002326965332
    8. '' → logprob: -6.810002326965332
    9. '\n' → logprob: -6.935002326965332
    10. ',' → logprob: -6.935002326965332

Token 31: '0' (ID: 15)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.5294767618179321
    2. '5' → logprob: -1.2794767618179321
    3. '0' → logprob: -3.1544766426086426
    4. 'count' → logprob: -3.2794766426086426
    5. 'split' → logprob: -4.529476642608643
    6. 'append' → logprob: -5.279476642608643
    7. 'start' → logprob: -5.779476642608643
    8. '1' → logprob: -6.029476642608643
    9. 'for' → logprob: -6.279476642608643
    10. 'py' → logprob: -6.279476642608643

Token 32: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 33: 'pos' (ID: 1103)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003129471093416214
    2. ' for' → logprob: -6.128129482269287
    3. 'f' → logprob: -8.503129005432129
    4. 'max' → logprob: -8.503129005432129
    5. 'while' → logprob: -9.003129005432129
    6. 'i' → logprob: -9.128129005432129
    7. 't' → logprob: -9.753129005432129
    8. 'd' → logprob: -10.253129005432129
    9. 'current' → logprob: -10.253129005432129
    10. '
' → logprob: -10.378129005432129

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08951568603515625
    2. '=' → logprob: -2.4645156860351562
    3. ' ' → logprob: -7.589515686035156
    4. ',' → logprob: -10.214515686035156
    5. 'ition' → logprob: -11.839515686035156
    6. ')' → logprob: -12.589515686035156
    7. '.' → logprob: -12.714515686035156
    8. 'i' → logprob: -12.964515686035156
    9. 's' → logprob: -13.214515686035156
    10. ' ,' → logprob: -13.339515686035156

Token 35: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002834707498550415
    2. ' ' → logprob: -5.877834796905518
    3. '-' → logprob: -11.25283432006836
    4. '1' → logprob: -11.37783432006836
    5. ' -' → logprob: -13.62783432006836
    6. 'float' → logprob: -14.44033432006836
    7. '=' → logprob: -14.94033432006836
    8. '.' → logprob: -15.12783432006836
    9. 'V' → logprob: -15.12783432006836
    10. 'x' → logprob: -15.44033432006836

Token 36: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00022725824965164065
    2. ' ' → logprob: -9.000226974487305
    3. '1' → logprob: -10.125226974487305
    4. '-' → logprob: -10.125226974487305
    5. 'float' → logprob: -12.250226974487305
    6. '(' → logprob: -12.625226974487305
    7. 'L' → logprob: -13.250226974487305
    8. '.' → logprob: -13.250226974487305
    9. 'K' → logprob: -13.500226974487305
    10. 'V' → logprob: -13.625226974487305

Token 37: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3370295763015747
    2. ' for' → logprob: -1.7120295763015747
    3. '<|end|>' → logprob: -2.837029457092285
    4. '
' → logprob: -3.962029457092285
    5. 'while' → logprob: -4.962029457092285
    6. '\n' → logprob: -5.212029457092285
    7. '```' → logprob: -5.587029457092285
    8. ' while' → logprob: -5.712029457092285
    9. ',' → logprob: -6.212029457092285
    10. '<|end|>' → logprob: -6.962029457092285

Token 38: 'car' (ID: 6830)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012332814745604992
    2. ' for' → logprob: -4.762332916259766
    3. 'while' → logprob: -6.512332916259766
    4. 'i' → logprob: -7.387332916259766
    5. '\n' → logprob: -7.887332916259766
    6. '```' → logprob: -8.387332916259766
    7. '+' → logprob: -8.762332916259766
    8. '
' → logprob: -9.012332916259766
    9. 'if' → logprob: -9.262332916259766
    10. 'f' → logprob: -9.512332916259766

Token 39: 'rots' (ID: 175556)
  Prédit: '_speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_speed' → logprob: -0.43985694646835327
    2. 's' → logprob: -1.689857006072998
    3. '_pos' → logprob: -2.939857006072998
    4. '_s' → logprob: -3.439857006072998
    5. '_time' → logprob: -3.814857006072998
    6. '_' → logprob: -3.939857006072998
    7. 'pos' → logprob: -4.314857006072998
    8. 'speed' → logprob: -4.939857006072998
    9. ' =' → logprob: -5.064857006072998
    10. '_direction' → logprob: -5.814857006072998

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12981359660625458
    2. '=' → logprob: -2.2548136711120605
    3. '_' → logprob: -5.0048136711120605
    4. '_e' → logprob: -5.6298136711120605
    5. ' ' → logprob: -6.0048136711120605
    6. '_col' → logprob: -6.6298136711120605
    7. '[' → logprob: -7.1298136711120605
    8. ' +=' → logprob: -7.3798136711120605
    9. ',' → logprob: -8.629813194274902
    10. '_taken' → logprob: -8.754813194274902

Token 41: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06197172403335571
    2. ' ' → logprob: -2.811971664428711
    3. '[]' → logprob: -14.061971664428711
    4. '[' → logprob: -14.561971664428711
    5. ' []' → logprob: -14.999471664428711
    6. '10' → logprob: -14.999471664428711
    7. '000' → logprob: -15.186971664428711
    8. ' K' → logprob: -15.561971664428711
    9. '```' → logprob: -15.936971664428711
    10. ' ' → logprob: -15.936971664428711

Token 42: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.146429223008454e-05
    2. ' ' → logprob: -10.00006103515625
    3. '[]' → logprob: -11.37506103515625
    4. 'K' → logprob: -12.87506103515625
    5. '[' → logprob: -14.75006103515625
    6. 'L' → logprob: -14.87506103515625
    7. 'U' → logprob: -15.62506103515625
    8. '-' → logprob: -15.62506103515625
    9. 'V' → logprob: -15.75006103515625
    10. 'T' → logprob: -15.87506103515625

Token 43: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 44: 'speed' (ID: 42880)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09013023227453232
    2. ' for' → logprob: -3.34013032913208
    3. 'while' → logprob: -3.59013032913208
    4. '\n' → logprob: -4.96513032913208
    5. ' while' → logprob: -5.59013032913208
    6. '```' → logprob: -5.96513032913208
    7. ':' → logprob: -6.09013032913208
    8. '_' → logprob: -6.21513032913208
    9. '\' → logprob: -6.71513032913208
    10. 'i' → logprob: -7.59013032913208

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16024799644947052
    2. '=' → logprob: -1.910248041152954
    3. 's' → logprob: -11.660247802734375
    4. ',' → logprob: -12.285247802734375
    5. ' +=' → logprob: -12.535247802734375
    6. '[' → logprob: -13.410247802734375
    7. '_' → logprob: -13.910247802734375
    8. ' ' → logprob: -14.035247802734375
    9. ')' → logprob: -14.410247802734375
    10. '.' → logprob: -14.910247802734375

Token 46: ' U' (ID: 601)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.077399730682373
    2. 'K' → logprob: -1.202399730682373
    3. 'V' → logprob: -1.452399730682373
    4. 'U' → logprob: -2.577399730682373
    5. 'T' → logprob: -4.077399730682373
    6. '1' → logprob: -4.202399730682373
    7. ' V' → logprob: -5.327399730682373
    8. ' K' → logprob: -5.327399730682373
    9. ' ' → logprob: -5.702399730682373
    10. ' U' → logprob: -6.077399730682373

Token 47: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1884291172027588
    2. '+' → logprob: -1.6884291172027588
    3. '<|end|>' → logprob: -1.8134291172027588
    4. '*' → logprob: -2.813429117202759
    5. 'while' → logprob: -2.813429117202759
    6. '\n' → logprob: -2.938429117202759
    7. '
' → logprob: -3.688429117202759
    8. ' for' → logprob: -3.813429117202759
    9. '#' → logprob: -3.813429117202759
    10. '<|end|>' → logprob: -4.06342887878418

Token 48: 'boost' (ID: 31440)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3829422891139984
    2. '+' → logprob: -1.3829423189163208
    3. '\n' → logprob: -3.7579421997070312
    4. 'while' → logprob: -3.7579421997070312
    5. '*' → logprob: -5.382942199707031
    6. ' for' → logprob: -5.507942199707031
    7. '-' → logprob: -6.257942199707031
    8. '\' → logprob: -6.507942199707031
    9. '<|end|>' → logprob: -6.507942199707031
    10. ':' → logprob: -6.632942199707031

Token 49: '_end' (ID: 13707)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28118419647216797
    2. '=' → logprob: -2.156184196472168
    3. 'ed' → logprob: -2.156184196472168
    4. 's' → logprob: -5.656184196472168
    5. '_time' → logprob: -5.656184196472168
    6. '_used' → logprob: -6.031184196472168
    7. '_' → logprob: -6.531184196472168
    8. '_available' → logprob: -6.906184196472168
    9. 'ing' → logprob: -8.031184196472168
    10. '_remaining' → logprob: -8.906184196472168

Token 50: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05042142793536186
    2. ' =' → logprob: -3.3004214763641357
    3. '_time' → logprob: -4.550421237945557
    4. '_' → logprob: -7.050421237945557
    5. 'ing' → logprob: -7.425421237945557
    6. 'ed' → logprob: -9.050421714782715
    7. 'time' → logprob: -9.300421714782715
    8. '=time' → logprob: -10.800421714782715
    9. 'Time' → logprob: -11.300421714782715
    10. '=end' → logprob: -11.800421714782715

Token 51: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18087778985500336
    2. ' ' → logprob: -1.8058778047561646
    3. ' -' → logprob: -7.430877685546875
    4. '-' → logprob: -7.555877685546875
    5. 'time' → logprob: -12.055877685546875
    6. ' time' → logprob: -12.555877685546875
    7. '<|end|>' → logprob: -12.555877685546875
    8. ' ' → logprob: -13.305877685546875
    9. '  ' → logprob: -15.243377685546875
    10. '+' → logprob: -15.493377685546875

Token 52: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018216904252767563
    2. '-' → logprob: -4.018217086791992
    3. ' ' → logprob: -10.643217086791992
    4. 'time' → logprob: -10.643217086791992
    5. ' -' → logprob: -11.268217086791992
    6. '-time' → logprob: -12.768217086791992
    7. '[-' → logprob: -14.830717086791992
    8. 'T' → logprob: -15.143217086791992
    9. '[' → logprob: -15.330717086791992
    10. '(' → logprob: -15.455717086791992

Token 53: '.' (ID: 13)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 54: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3782830137643032e-05
    2. '5' → logprob: -11.87501335144043
    3. ' ' → logprob: -12.37501335144043
    4. '```' → logprob: -14.12501335144043
    5. '1' → logprob: -14.50001335144043
    6. '6' → logprob: -15.62501335144043
    7. '00' → logprob: -15.87501335144043
    8. '
' → logprob: -16.12501335144043
    9. 'f' → logprob: -16.37501335144043
    10. '9' → logprob: -16.50001335144043

Token 55: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5288260579109192
    2. '
' → logprob: -1.1538259983062744
    3. ' for' → logprob: -2.6538259983062744
    4. '\n' → logprob: -4.0288262367248535
    5. '<|end|>' → logprob: -6.0288262367248535
    6. 'while' → logprob: -6.4038262367248535
    7. ' 
' → logprob: -6.7788262367248535
    8. ' while' → logprob: -7.5288262367248535
    9. '\' → logprob: -7.5288262367248535
    10. '' → logprob: -8.403825759887695

Token 56: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00014096579980105162
    2. 'while' → logprob: -9.375141143798828
    3. ' for' → logprob: -10.375141143798828
    4. '
' → logprob: -10.750141143798828
    5. '\n' → logprob: -13.250141143798828
    6. '```' → logprob: -13.875141143798828
    7. ':' → logprob: -15.625141143798828
    8. '\' → logprob: -15.625141143798828
    9. 'i' → logprob: -17.000141143798828
    10. '	for' → logprob: -17.000141143798828

Token 57: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.014397254213690758
    2. ' ' → logprob: -4.889397144317627
    3. ' _' → logprob: -5.139397144317627
    4. '_' → logprob: -7.889397144317627
    5. 'i' → logprob: -8.139397621154785
    6. ' t' → logprob: -9.264397621154785
    7. ' d' → logprob: -9.639397621154785
    8. ' x' → logprob: -11.139397621154785
    9. '_i' → logprob: -11.889397621154785
    10. ' in' → logprob: -12.389397621154785

Token 58: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04883114621043205
    2. 'in' → logprob: -3.1738312244415283
    3. ' ' → logprob: -5.173830986022949
    4. '<|end|>' → logprob: -9.92383098602295
    5. '  ' → logprob: -10.04883098602295
    6. '	in' → logprob: -11.42383098602295
    7. ')' → logprob: -11.92383098602295
    8. ',' → logprob: -12.04883098602295
    9. ' i' → logprob: -12.42383098602295
    10. 'range' → logprob: -12.42383098602295

Token 59: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0002779014757834375
    2. 'range' → logprob: -8.250277519226074
    3. ' ' → logprob: -11.875277519226074
    4. ' xrange' → logprob: -12.000277519226074
    5. '	range' → logprob: -13.375277519226074
    6. '(range' → logprob: -13.625277519226074
    7. ')' → logprob: -15.000277519226074
    8. ' in' → logprob: -16.12527847290039
    9. ' ran' → logprob: -16.50027847290039
    10. '  ' → logprob: -16.75027847290039

Token 60: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.4744681119918823
    2. '(' → logprob: -0.9744681119918823
    3. ' (' → logprob: -8.224468231201172
    4. '(i' → logprob: -9.724468231201172
    5. '(n' → logprob: -10.349468231201172
    6. '(len' → logprob: -10.724468231201172
    7. '(K' → logprob: -13.349468231201172
    8. '(
' → logprob: -13.599468231201172
    9. '((' → logprob: -13.974468231201172
    10. ' N' → logprob: -13.974468231201172

Token 61: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0015710416482761502
    2. ')' → logprob: -7.626571178436279
    3. ' ):' → logprob: -7.626571178436279
    4. '-' → logprob: -8.251570701599121
    5. '+' → logprob: -8.626570701599121
    6. ':' → logprob: -9.501570701599121
    7. '):
' → logprob: -9.626570701599121
    8. ' -' → logprob: -11.751570701599121
    9. ',' → logprob: -13.376570701599121
    10. ' )' → logprob: -13.751570701599121

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06610450148582458
    2. ' if' → logprob: -3.3161044120788574
    3. 'distance' → logprob: -5.191104412078857
    4. ':' → logprob: -5.566104412078857
    5. ' distance' → logprob: -5.816104412078857
    6. ' while' → logprob: -5.816104412078857
    7. '    
' → logprob: -6.066104412078857
    8. ' dist' → logprob: -6.566104412078857
    9. '    ' → logprob: -6.691104412078857
    10. '```' → logprob: -6.691104412078857

Token 63: ' dist' (ID: 3601)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.4230237007141113
    2. 'dist' (adapté à ' dist') → logprob: -1.4230237007141113
    3. 'distance' → logprob: -1.4230237007141113
    4. 'if' → logprob: -1.9230237007141113
    5. '   ' → logprob: -2.9230237007141113
    6. 'd' → logprob: -3.4230237007141113
    7. ' dist' → logprob: -4.548023700714111
    8. ' distance' → logprob: -4.548023700714111
    9. 'while' → logprob: -4.923023700714111
    10. ' while' → logprob: -5.423023700714111

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07892569899559021
    2. '=' → logprob: -2.578925609588623
    3. ' ' → logprob: -12.078926086425781
    4. '=int' → logprob: -12.078926086425781
    5. ',' → logprob: -12.328926086425781
    6. '_' → logprob: -12.578926086425781
    7. ' +=' → logprob: -13.078926086425781
    8. ')' → logprob: -13.078926086425781
    9. '   ' → logprob: -13.203926086425781
    10. '=D' → logprob: -13.766426086425781

Token 65: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.34946727752685547
    2. ' D' → logprob: -1.2244672775268555
    3. '   ' → logprob: -7.3494672775268555
    4. 'L' → logprob: -8.599467277526855
    5. ' L' → logprob: -9.099467277526855
    6. ' ' → logprob: -10.099467277526855
    7. 'V' → logprob: -12.099467277526855
    8. '  ' → logprob: -12.349467277526855
    9. '(D' → logprob: -12.599467277526855
    10. '	D' → logprob: -12.599467277526855

Token 66: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.304016228066757e-05
    2. '[' → logprob: -9.500082969665527
    3. '[I' → logprob: -12.500082969665527
    4. ' [' → logprob: -13.250082969665527
    5. 'i' → logprob: -14.000082969665527
    6. '```' → logprob: -14.750082969665527
    7. '[N' → logprob: -15.250082969665527
    8. '[s' → logprob: -15.500082969665527
    9. '\[' → logprob: -15.875082969665527
    10. '[
' → logprob: -16.250083923339844

Token 67: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12707017362117767
    2. '-' → logprob: -2.252070188522339
    3. ']' → logprob: -4.87706995010376
    4. ')' → logprob: -5.12706995010376
    5. '-pos' → logprob: -9.002070426940918
    6. ']-' → logprob: -9.127070426940918
    7. '   ' → logprob: -9.377070426940918
    8. '[' → logprob: -9.502070426940918
    9. ' ' → logprob: -9.877070426940918
    10. ' ' → logprob: -10.377070426940918

Token 68: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.8602461814880371
    2. ' if' → logprob: -1.610246181488037
    3. '   ' → logprob: -1.985246181488037
    4. '-' → logprob: -2.110246181488037
    5. 'if' → logprob: -3.110246181488037
    6. '+' → logprob: -3.110246181488037
    7. ' +' → logprob: -5.110246181488037
    8. '
' → logprob: -5.235246181488037
    9. ' ' → logprob: -5.610246181488037
    10. ' /' → logprob: -6.110246181488037

Token 69: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.22542338073253632
    2. ' pos' → logprob: -1.6004233360290527
    3. '	pos' → logprob: -11.975423812866211
    4. ' ' → logprob: -13.725423812866211
    5. '   ' → logprob: -13.850423812866211
    6. '(pos' → logprob: -14.225423812866211
    7. '0' → logprob: -14.475423812866211
    8. '_pos' → logprob: -14.975423812866211
    9. '[pos' → logprob: -15.975423812866211
    10. '  ' → logprob: -16.03792381286621

Token 70: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1549571752548218
    2. '<|end|>' → logprob: -1.1549571752548218
    3. '   ' → logprob: -1.5299571752548218
    4. '```' → logprob: -3.2799572944641113
    5. '    
' → logprob: -3.5299572944641113
    6. '<|end|>' → logprob: -3.7799572944641113
    7. ' if' → logprob: -4.029957294464111
    8. 'newline' → logprob: -4.779957294464111
    9. '\n' → logprob: -4.904957294464111
    10. ' 
' → logprob: -4.904957294464111

Token 71: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8266947865486145
    2. '
' → logprob: -1.5766947269439697
    3. '<|end|>' → logprob: -2.0766947269439697
    4. 'if' → logprob: -2.3266947269439697
    5. '\n' → logprob: -3.3266947269439697
    6. '   ' → logprob: -3.7016947269439697
    7. '```' → logprob: -3.9516947269439697
    8. '<|end|>' → logprob: -4.451694965362549
    9. 'time' → logprob: -4.576694965362549
    10. ' 
' → logprob: -4.701694965362549

Token 72: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3611396253108978
    2. ' time' → logprob: -1.9861396551132202
    3. 'if' → logprob: -2.1111395359039307
    4. 'time' → logprob: -3.2361395359039307
    5. '   ' → logprob: -5.98613977432251
    6. ' while' → logprob: -6.86113977432251
    7. '```' → logprob: -8.361139297485352
    8. 't' → logprob: -8.861139297485352
    9. ' travel' → logprob: -8.986139297485352
    10. ' available' → logprob: -8.986139297485352

Token 73: ' If' (ID: 1843)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2977692484855652
    2. ' time' → logprob: -2.04776930809021
    3. 'if' → logprob: -2.79776930809021
    4. 'time' → logprob: -3.54776930809021
    5. ' while' → logprob: -3.92276930809021
    6. ' t' → logprob: -5.172769069671631
    7. ' needed' → logprob: -5.922769069671631
    8. 't' → logprob: -6.422769069671631
    9. 'while' → logprob: -6.672769069671631
    10. ' current' → logprob: -7.047769069671631

Token 74: ' boost' (ID: 12110)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 75: ' is' (ID: 382)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.38449200987815857
    2. ' is' → logprob: -1.259492039680481
    3. 'and' → logprob: -4.134491920471191
    4. 'is' → logprob: -5.134491920471191
    5. '_end' → logprob: -5.634491920471191
    6. 'time' → logprob: -6.134491920471191
    7. '>' → logprob: -6.134491920471191
    8. ' time' → logprob: -6.134491920471191
    9. '_time' → logprob: -6.634491920471191
    10. ' >' → logprob: -7.134491920471191

Token 76: ' active' (ID: 6725)
  Prédit: 'active'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'active' → logprob: -0.2910872995853424
    2. ' active' → logprob: -1.41608726978302
    3. 'ongo' → logprob: -6.1660871505737305
    4. 'still' → logprob: -6.2910871505737305
    5. 'on' → logprob: -7.2910871505737305
    6. ' ongoing' → logprob: -7.2910871505737305
    7. 'not' → logprob: -7.4160871505737305
    8. 'currently' → logprob: -7.4160871505737305
    9. ' still' → logprob: -7.5410871505737305
    10. ' not' → logprob: -7.6660871505737305

Token 77: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.05314522981643677
    2. ',' → logprob: -4.178145408630371
    3. ':' → logprob: -4.178145408630371
    4. 'and' → logprob: -4.178145408630371
    5. '   ' → logprob: -6.178145408630371
    6. '<|end|>' → logprob: -6.428145408630371
    7. ' if' → logprob: -7.053145408630371
    8. ' or' → logprob: -7.428145408630371
    9. ' ,' → logprob: -8.803145408630371
    10. '    ' → logprob: -8.803145408630371

Token 78: ' check' (ID: 2371)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5579269528388977
    2. ' time' → logprob: -1.682926893234253
    3. 'time' → logprob: -1.932926893234253
    4. 'if' → logprob: -2.432926893234253
    5. '   ' → logprob: -6.057927131652832
    6. 'speed' → logprob: -6.557927131652832
    7. ' speed' → logprob: -6.807927131652832
    8. ' while' → logprob: -7.682927131652832
    9. ' available' → logprob: -7.682927131652832
    10. ' current' → logprob: -7.682927131652832

Token 79: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.005924885626882315
    2. 'if' → logprob: -5.380924701690674
    3. ' time' → logprob: -7.380924701690674
    4. ' and' → logprob: -8.255925178527832
    5. ' whether' → logprob: -9.005925178527832
    6. ' for' → logprob: -9.380925178527832
    7. '   ' → logprob: -9.755925178527832
    8. ' the' → logprob: -10.255925178527832
    9. ' how' → logprob: -10.255925178527832
    10. 'time' → logprob: -10.380925178527832

Token 80: ' it' (ID: 480)
  Prédit: ' time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.7726682424545288
    2. ' boost' → logprob: -0.8976682424545288
    3. 'boost' → logprob: -2.5226683616638184
    4. 'time' → logprob: -3.0226683616638184
    5. ' T' → logprob: -7.272668361663818
    6. 't' → logprob: -8.39766788482666
    7. 'T' → logprob: -8.39766788482666
    8. ' t' → logprob: -8.52266788482666
    9. ' i' → logprob: -8.77266788482666
    10. ' current' → logprob: -9.77266788482666

Token 81: ' lasts' (ID: 56857)
  Prédit: ' continues'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continues' → logprob: -1.2352231740951538
    2. 's' → logprob: -1.6102231740951538
    3. '>' → logprob: -2.2352232933044434
    4. ' ends' → logprob: -2.4852232933044434
    5. ' can' → logprob: -2.8602232933044434
    6. ' will' → logprob: -3.1102232933044434
    7. ''s' → logprob: -3.3602232933044434
    8. ' is' → logprob: -3.6102232933044434
    9. ' lasts' → logprob: -3.9852232933044434
    10. 'contin' → logprob: -4.110223293304443

Token 82: ' until' (ID: 4609)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.35428404808044434
    2. ' until' → logprob: -2.2292840480804443
    3. ' beyond' → logprob: -3.2292840480804443
    4. 'and' → logprob: -3.7292840480804443
    5. ' for' → logprob: -3.8542840480804443
    6. ' past' → logprob: -4.104284286499023
    7. ' ' → logprob: -4.604284286499023
    8. 'time' → logprob: -4.979284286499023
    9. ' till' → logprob: -4.979284286499023
    10. 'until' → logprob: -4.979284286499023

Token 83: ' reaching' (ID: 29787)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.2845715582370758
    2. 'the' → logprob: -1.9095715284347534
    3. ' D' → logprob: -4.284571647644043
    4. 'D' → logprob: -4.284571647644043
    5. '   ' → logprob: -4.534571647644043
    6. 'boost' → logprob: -4.534571647644043
    7. 'end' → logprob: -4.784571647644043
    8. 'pos' → logprob: -4.909571647644043
    9. ' i' → logprob: -4.909571647644043
    10. 'i' → logprob: -5.034571647644043

Token 84: ' this' (ID: 495)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6739010214805603
    2. 'the' → logprob: -0.7989010214805603
    3. 'D' → logprob: -3.673901081085205
    4. ' D' → logprob: -4.798901081085205
    5. 'dist' → logprob: -5.798901081085205
    6. '   ' → logprob: -6.548901081085205
    7. ' dist' → logprob: -7.548901081085205
    8. ' next' → logprob: -8.048900604248047
    9. 'next' → logprob: -8.548900604248047
    10. ' this' → logprob: -8.673900604248047

Token 85: ' carrot' (ID: 121234)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.5615278482437134
    2. ' point' → logprob: -1.6865278482437134
    3. 'distance' → logprob: -2.186527729034424
    4. 'dist' → logprob: -3.686527729034424
    5. 'position' → logprob: -3.811527729034424
    6. 'destination' → logprob: -4.186527729034424
    7. ' position' → logprob: -4.561527729034424
    8. 'D' → logprob: -4.561527729034424
    9. ' distance' → logprob: -4.561527729034424
    10. '   ' → logprob: -5.061527729034424

Token 86: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 87: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2531355619430542
    2. ' if' → logprob: -2.6281356811523438
    3. '```' → logprob: -3.0031356811523438
    4. 'if' → logprob: -3.2531356811523438
    5. '<|end|>' → logprob: -3.3781356811523438
    6. ' ' → logprob: -4.878135681152344
    7. '
' → logprob: -5.128135681152344
    8. ',' → logprob: -5.753135681152344
    9. '<|end|>' → logprob: -6.378135681152344
    10. '\n' → logprob: -6.628135681152344

Token 88: ' remaining' (ID: 15448)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3259679973125458
    2. ' if' → logprob: -1.4509680271148682
    3. 'if' → logprob: -3.450968027114868
    4. '<|end|>' → logprob: -6.075967788696289
    5. '    ' → logprob: -6.200967788696289
    6. ' ' → logprob: -6.200967788696289
    7. '
' → logprob: -6.450967788696289
    8. '```' → logprob: -6.700967788696289
    9. 'If' → logprob: -7.575967788696289
    10. '    
' → logprob: -7.700967788696289

Token 89: '_bo' (ID: 104368)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.13508930802345276
    2. '_bo' → logprob: -2.38508939743042
    3. '_' → logprob: -3.63508939743042
    4. '>' → logprob: -5.51008939743042
    5. ' >' → logprob: -6.26008939743042
    6. '_t' → logprob: -7.26008939743042
    7. ' =' → logprob: -7.63508939743042
    8. '_distance' → logprob: -8.635088920593262
    9. '=' → logprob: -8.760088920593262
    10. 'time' → logprob: -9.635088920593262

Token 90: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.00022320532298181206
    2. 'st' → logprob: -8.750223159790039
    3. ' ost' → logprob: -11.375223159790039
    4. 'o' → logprob: -11.750223159790039
    5. 'ост' → logprob: -12.125223159790039
    6. '   ' → logprob: -12.125223159790039
    7. '```' → logprob: -12.750223159790039
    8. 'os' → logprob: -12.937723159790039
    9. 'ust' → logprob: -13.062723159790039
    10. '\' → logprob: -13.437723159790039

Token 91: ' =' (ID: 314)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 92: ' max' (ID: 2999)
  Prédit: 'boost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'boost' → logprob: -0.5873820781707764
    2. ' boost' → logprob: -1.5873820781707764
    3. ' max' → logprob: -1.7123820781707764
    4. 'max' → logprob: -2.8373820781707764
    5. '(boost' → logprob: -8.462382316589355
    6. '0' → logprob: -9.087382316589355
    7. ' min' → logprob: -9.087382316589355
    8. 'min' → logprob: -9.837382316589355
    9. ' ' → logprob: -10.087382316589355
    10. '	boost' → logprob: -10.274882316589355

Token 93: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20141586661338806
    2. '(boost' → logprob: -1.7014158964157104
    3. 'boost' → logprob: -13.826416015625
    4. '(speed' → logprob: -14.701416015625
    5. '0' → logprob: -14.951416015625
    6. '((' → logprob: -15.201416015625
    7. '(

' → logprob: -15.951416015625
    8. '(time' → logprob: -16.701416015625
    9. '	boost' → logprob: -16.701416015625
    10. '```' → logprob: -16.951416015625

Token 94: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4340968430042267
    2. 'boost' → logprob: -1.3090968132019043
    3. '(boost' → logprob: -2.8090968132019043
    4. '(' → logprob: -4.059096813201904
    5. ' ' → logprob: -6.184096813201904
    6. ' boost' → logprob: -6.309096813201904
    7. ')' → logprob: -7.684096813201904
    8. '<boost' → logprob: -10.059097290039062
    9. '	boost' → logprob: -10.184097290039062
    10. ' (' → logprob: -10.309097290039062

Token 95: '.' (ID: 13)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007108822464942932
    2. ' ,' → logprob: -7.500710964202881
    3. '(boost' → logprob: -9.750710487365723
    4. ',
' → logprob: -10.250710487365723
    5. ')' → logprob: -10.875710487365723
    6. 'boost' → logprob: -10.875710487365723
    7. '.' → logprob: -12.000710487365723
    8. '0' → logprob: -12.125710487365723
    9. '```' → logprob: -12.875710487365723
    10. ',b' → logprob: -13.250710487365723

Token 96: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6929091811180115
    2. 'boost' → logprob: -0.9429091811180115
    3. '1' → logprob: -2.8179092407226562
    4. '6' → logprob: -3.4429092407226562
    5. '9' → logprob: -4.692909240722656
    6. ' boost' → logprob: -5.692909240722656
    7. '5' → logprob: -6.442909240722656
    8. '2' → logprob: -6.942909240722656
    9. '3' → logprob: -7.067909240722656
    10. '4' → logprob: -7.192909240722656

Token 97: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006966609042137861
    2. ' ,' → logprob: -5.006966590881348
    3. 'boost' → logprob: -9.131966590881348
    4. ')' → logprob: -9.756966590881348
    5. ',min' → logprob: -10.631966590881348
    6. '(boost' → logprob: -10.881966590881348
    7. ',
' → logprob: -11.506966590881348
    8. ',time' → logprob: -12.256966590881348
    9. ',b' → logprob: -12.506966590881348
    10. ' boost' → logprob: -12.631966590881348

Token 98: ' boost' (ID: 12110)
  Prédit: 'boost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'boost' → logprob: -0.10095566511154175
    2. ' boost' → logprob: -2.3509557247161865
    3. '(boost' → logprob: -7.350955486297607
    4. '<boost' → logprob: -10.350955963134766
    5. '	boost' → logprob: -10.725955963134766
    6. ')' → logprob: -11.225955963134766
    7. ' ' → logprob: -11.350955963134766
    8. '   ' → logprob: -12.850955963134766
    9. '  ' → logprob: -13.100955963134766
    10. 'time' → logprob: -13.163455963134766

Token 99: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -1.1472419600977446e-06
    2. '_' → logprob: -14.750000953674316
    3. 'end' → logprob: -15.125000953674316
    4. '_e' → logprob: -16.000001907348633
    5. ' _' → logprob: -16.625001907348633
    6. '_en' → logprob: -16.625001907348633
    7. '_time' → logprob: -18.125001907348633
    8. '_END' → logprob: -18.500001907348633
    9. '_start' → logprob: -18.500001907348633
    10. 'End' → logprob: -18.750001907348633

Token 100: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.023579351603984833
    2. '-' → logprob: -3.7735793590545654
    3. ')' → logprob: -8.398579597473145
    4. ' ' → logprob: -10.023579597473145
    5. '-time' → logprob: -10.023579597473145
    6. ' )' → logprob: -11.648579597473145
    7. '  ' → logprob: -13.148579597473145
    8. '-length' → logprob: -13.648579597473145
    9. '-t' → logprob: -13.898579597473145
    10. '   ' → logprob: -13.898579597473145

Token 101: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.09177019447088242
    2. ' time' → logprob: -2.4667701721191406
    3. '(time' → logprob: -5.966770172119141
    4. ' (' → logprob: -8.59177017211914
    5. 't' → logprob: -11.59177017211914
    6. ' ' → logprob: -11.71677017211914
    7. '   ' → logprob: -11.71677017211914
    8. 'pos' → logprob: -11.96677017211914
    9. '"time' → logprob: -11.96677017211914
    10. ')' → logprob: -11.96677017211914

Token 102: ')
' (ID: 446)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.551699161529541
    2. ' if' → logprob: -0.926699161529541
    3. ' time' → logprob: -4.426699161529541
    4. 'if' → logprob: -5.051699161529541
    5. 'time' → logprob: -5.676699161529541
    6. '    
' → logprob: -6.051699161529541
    7. '
' → logprob: -6.426699161529541
    8. ' 
' → logprob: -8.301698684692383
    9. ' step' → logprob: -8.301698684692383
    10. ' while' → logprob: -8.551698684692383

Token 104: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7333598732948303
    2. ' time' → logprob: -1.2333598136901855
    3. '   ' → logprob: -1.7333598136901855
    4. 'time' → logprob: -3.7333598136901855
    5. 'if' → logprob: -5.1083598136901855
    6. ' speed' → logprob: -5.2333598136901855
    7. '
' → logprob: -5.4833598136901855
    8. '    
' → logprob: -5.9833598136901855
    9. ' 
' → logprob: -6.2333598136901855
    10. ' t' → logprob: -7.2333598136901855

Token 105: ' Calculate' (ID: 38942)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.3077675104141235
    2. ' if' → logprob: -1.5577675104141235
    3. 'time' → logprob: -1.8077675104141235
    4. ' travel' → logprob: -2.307767391204834
    5. ' time' → logprob: -2.557767391204834
    6. 'travel' → logprob: -2.557767391204834
    7. 'distance' → logprob: -4.182767391204834
    8. 'effective' → logprob: -4.307767391204834
    9. ' effective' → logprob: -4.682767391204834
    10. 'If' → logprob: -5.307767391204834

Token 106: ' distance' (ID: 9324)
  Prédit: ' travel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' travel' → logprob: -0.8730241060256958
    2. ' time' → logprob: -1.3730241060256958
    3. 'time' → logprob: -1.7480241060256958
    4. 'travel' → logprob: -1.9980241060256958
    5. 'distance' → logprob: -5.623023986816406
    6. 't' → logprob: -5.998023986816406
    7. ' if' → logprob: -6.248023986816406
    8. '   ' → logprob: -6.498023986816406
    9. 'if' → logprob: -6.873023986816406
    10. ' distance' → logprob: -6.998023986816406

Token 107: ' can' (ID: 665)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2439360618591309
    2. '_possible' → logprob: -1.4939360618591309
    3. '_can' → logprob: -1.6189360618591309
    4. '_to' → logprob: -1.9939360618591309
    5. '_that' → logprob: -2.118936061859131
    6. '_remaining' → logprob: -4.368936061859131
    7. '_left' → logprob: -5.868936061859131
    8. '_with' → logprob: -5.993936061859131
    9. 'that' → logprob: -6.243936061859131
    10. ' =' → logprob: -6.243936061859131

Token 108: ' be' (ID: 413)
  Prédit: '_cover'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cover' → logprob: -0.19779419898986816
    2. '_' → logprob: -2.072794198989868
    3. ' cover' → logprob: -4.447793960571289
    4. 'cover' → logprob: -4.572793960571289
    5. ' be' → logprob: -5.197793960571289
    6. 'covered' → logprob: -5.322793960571289
    7. 'travel' → logprob: -5.322793960571289
    8. ' ' → logprob: -5.572793960571289
    9. ' travel' → logprob: -5.947793960571289
    10. '_be' → logprob: -6.197793960571289

Token 109: ' covered' (ID: 13083)
  Prédit: ' covered'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' covered' → logprob: -0.7173013687133789
    2. 'covered' → logprob: -1.342301368713379
    3. ' traveled' → logprob: -1.592301368713379
    4. 'tr' → logprob: -3.842301368713379
    5. ' travelled' → logprob: -4.217301368713379
    6. 'travel' → logprob: -5.217301368713379
    7. ' travers' → logprob: -7.092301368713379
    8. 'cover' → logprob: -7.592301368713379
    9. ' cover' → logprob: -7.592301368713379
    10. 'trav' → logprob: -7.967301368713379

Token 110: ' at' (ID: 540)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.9236325025558472
    2. 'with' → logprob: -1.5486325025558472
    3. ' in' → logprob: -1.7986325025558472
    4. ' with' → logprob: -2.1736326217651367
    5. ' during' → logprob: -3.6736326217651367
    6. 'during' → logprob: -3.6736326217651367
    7. 'while' → logprob: -3.9236326217651367
    8. ' while' → logprob: -4.923632621765137
    9. ' at' → logprob: -5.298632621765137
    10. 'at' → logprob: -5.298632621765137

Token 111: ' boosted' (ID: 111352)
  Prédit: ' speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' speed' → logprob: -0.12480633705854416
    2. 'speed' → logprob: -2.6248064041137695
    3. ' current' → logprob: -3.2498064041137695
    4. ' boost' → logprob: -6.2498064041137695
    5. ' the' → logprob: -6.4998064041137695
    6. 'current' → logprob: -6.9998064041137695
    7. 'boost' → logprob: -7.8748064041137695
    8. ' ' → logprob: -8.12480640411377
    9. ' remaining' → logprob: -8.24980640411377
    10. ' a' → logprob: -9.12480640411377

Token 112: ' speed' (ID: 7733)
  Prédit: ' speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' speed' → logprob: -0.2023567259311676
    2. 'speed' → logprob: -1.7023566961288452
    3. '_speed' → logprob: -7.952356815338135
    4. ' speeds' → logprob: -7.952356815338135
    5. ' velocity' → logprob: -9.327356338500977
    6. ' ' → logprob: -10.577356338500977
    7. '	speed' → logprob: -10.952356338500977
    8. ' rate' → logprob: -11.202356338500977
    9. '(speed' → logprob: -11.202356338500977
    10. 's' → logprob: -11.202356338500977

Token 113: ' in' (ID: 306)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0233315229415894
    2. '   ' → logprob: -1.3983315229415894
    3. ')' → logprob: -2.523331642150879
    4. 'if' → logprob: -2.898331642150879
    5. 'distance' → logprob: -3.273331642150879
    6. ' at' → logprob: -3.398331642150879
    7. 'speed' → logprob: -3.648331642150879
    8. ' =' → logprob: -4.398331642150879
    9. ' ' → logprob: -4.398331642150879
    10. '*' → logprob: -4.523331642150879

Token 114: ' remaining' (ID: 15448)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.6117228865623474
    2. ' remaining' → logprob: -0.8617228865623474
    3. ' this' → logprob: -3.736722946166992
    4. ' the' → logprob: -5.236722946166992
    5. 'this' → logprob: -6.236722946166992
    6. ' that' → logprob: -6.236722946166992
    7. 'the' → logprob: -7.486722946166992
    8. '_remaining' → logprob: -7.736722946166992
    9. 'boost' → logprob: -8.236722946166992
    10. 'that' → logprob: -8.611722946166992

Token 115: ' boost' (ID: 12110)
  Prédit: '_bo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bo' → logprob: -0.3811819553375244
    2. 'boost' → logprob: -1.2561819553375244
    3. 'time' → logprob: -4.506181716918945
    4. ' boost' → logprob: -5.381181716918945
    5. ' time' → logprob: -5.506181716918945
    6. '_time' → logprob: -5.881181716918945
    7. '_' → logprob: -5.881181716918945
    8. '_speed' → logprob: -5.881181716918945
    9. 'speed' → logprob: -6.506181716918945
    10. 'distance' → logprob: -7.006181716918945

Token 116: ' time' (ID: 1058)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.91867595911026
    2. '_distance' → logprob: -2.0436758995056152
    3. '=' → logprob: -2.1686758995056152
    4. '_speed' → logprob: -2.4186758995056152
    5. '_dist' → logprob: -2.5436758995056152
    6. '_time' → logprob: -3.1686758995056152
    7. 'dist' → logprob: -3.1686758995056152
    8. '*' → logprob: -3.2936758995056152
    9. ' *' → logprob: -3.7936758995056152
    10. '   ' → logprob: -4.418675899505615

Token 117: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03254985809326172
    2. ')' → logprob: -4.657549858093262
    3. ',' → logprob: -5.407549858093262
    4. 'dist' → logprob: -5.907549858093262
    5. 'distance' → logprob: -6.032549858093262
    6. '    
' → logprob: -6.032549858093262
    7. ' dist' → logprob: -7.157549858093262
    8. ' 
' → logprob: -7.157549858093262
    9. '    ' → logprob: -7.282549858093262
    10. ' if' → logprob: -7.282549858093262

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0375259593129158
    2. ')' → logprob: -4.9125261306762695
    3. ' dist' → logprob: -5.1625261306762695
    4. ' ' → logprob: -5.2875261306762695
    5. 'dist' → logprob: -5.5375261306762695
    6. ' if' → logprob: -6.0375261306762695
    7. '    ' → logprob: -6.1625261306762695
    8. '  ' → logprob: -6.1625261306762695
    9. ',' → logprob: -6.6625261306762695
    10. '    
' → logprob: -7.0375261306762695

Token 119: ' boosted' (ID: 111352)
  Prédit: 'boost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'boost' → logprob: -1.101139783859253
    2. ' dist' → logprob: -1.601139783859253
    3. 'dist' → logprob: -1.726139783859253
    4. 'distance' → logprob: -2.476139783859253
    5. ' distance' → logprob: -2.476139783859253
    6. ' boost' → logprob: -2.976139783859253
    7. ' max' → logprob: -4.476140022277832
    8. '   ' → logprob: -4.476140022277832
    9. ' speed' → logprob: -4.726140022277832
    10. ' remaining' → logprob: -5.226140022277832

Token 120: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.25276583433151245
    2. '_distance' → logprob: -1.5027658939361572
    3. 'dist' → logprob: -7.502765655517578
    4. '_time' → logprob: -8.877765655517578
    5. '_speed' → logprob: -9.377765655517578
    6. '_dis' → logprob: -11.002765655517578
    7. 'distance' → logprob: -11.377765655517578
    8. '_' → logprob: -11.627765655517578
    9. '=' → logprob: -11.752765655517578
    10. 'Dist' → logprob: -11.877765655517578

Token 121: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12694312632083893
    2. '=' → logprob: -2.1269431114196777
    3. '_' → logprob: -11.751943588256836
    4. ' ' → logprob: -13.001943588256836
    5. ',' → logprob: -13.376943588256836
    6. '_time' → logprob: -13.876943588256836
    7. ' ' → logprob: -14.751943588256836
    8. '＝' → logprob: -15.251943588256836
    9. '  ' → logprob: -15.876943588256836
    10. ')' → logprob: -15.876943588256836

Token 122: ' remaining' (ID: 15448)
  Prédit: ' speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' speed' → logprob: -0.15084899961948395
    2. 'speed' → logprob: -2.2758491039276123
    3. ' remaining' → logprob: -3.4008491039276123
    4. 'remaining' → logprob: -5.900848865509033
    5. ' min' → logprob: -7.650848865509033
    6. 'boost' → logprob: -8.650849342346191
    7. ' boost' → logprob: -9.025849342346191
    8. '   ' → logprob: -9.025849342346191
    9. '(speed' → logprob: -9.900849342346191
    10. '	speed' → logprob: -10.150849342346191

Token 123: '_bo' (ID: 104368)
  Prédit: '_bo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bo' → logprob: -0.00036037206882610917
    2. '_dist' → logprob: -8.375360488891602
    3. 'boost' → logprob: -9.875360488891602
    4. '_speed' → logprob: -10.000360488891602
    5. '_time' → logprob: -11.125360488891602
    6. ' _' → logprob: -12.250360488891602
    7. '_' → logprob: -12.625360488891602
    8. '_distance' → logprob: -12.750360488891602
    9. '_b' → logprob: -13.000360488891602
    10. '*' → logprob: -13.750360488891602

Token 124: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.017883826047182083
    2. 'st' → logprob: -4.267883777618408
    3. 'o' → logprob: -5.892883777618408
    4. 'ust' → logprob: -7.642883777618408
    5. 'ist' → logprob: -8.892884254455566
    6. '_dist' → logprob: -9.142884254455566
    7. '_' → logprob: -10.142884254455566
    8. '   ' → logprob: -11.142884254455566
    9. 'rst' → logprob: -11.267884254455566
    10. 'os' → logprob: -11.392884254455566

Token 125: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3132711350917816
    2. '*' → logprob: -1.313271164894104
    3. '=' → logprob: -12.563271522521973
    4. '*s' → logprob: -13.438271522521973
    5. 'speed' → logprob: -13.938271522521973
    6. ' ' → logprob: -14.063271522521973
    7. ' ' → logprob: -14.563271522521973
    8. '*time' → logprob: -14.813271522521973
    9. '*object' → logprob: -15.063271522521973
    10. ')' → logprob: -15.188271522521973

Token 126: ' V' (ID: 631)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.005519515369087458
    2. ' speed' → logprob: -5.255519390106201
    3. 'V' → logprob: -8.50551986694336
    4. '(speed' → logprob: -9.63051986694336
    5. ' V' → logprob: -12.38051986694336
    6. '	speed' → logprob: -12.63051986694336
    7. 'U' → logprob: -13.00551986694336
    8. '   ' → logprob: -13.25551986694336
    9. 'velocity' → logprob: -13.75551986694336
    10. '
' → logprob: -14.00551986694336

Token 127: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4799352288246155
    2. ' if' → logprob: -1.1049351692199707
    3. '
' → logprob: -3.3549351692199707
    4. 'if' → logprob: -4.854935169219971
    5. '+' → logprob: -6.104935169219971
    6. '    
' → logprob: -6.729935169219971
    7. ' +' → logprob: -6.729935169219971
    8. ',' → logprob: -6.979935169219971
    9. ' 
' → logprob: -7.729935169219971
    10. '  ' → logprob: -8.479935646057129

Token 128: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6855544447898865
    2. ' if' → logprob: -0.8105544447898865
    3. 'if' → logprob: -3.1855545043945312
    4. '    
' → logprob: -5.935554504394531
    5. ' 
' → logprob: -6.185554504394531
    6. '
' → logprob: -6.185554504394531
    7. ',' → logprob: -7.310554504394531
    8. ')' → logprob: -7.935554504394531
    9. ' rest' → logprob: -7.935554504394531
    10. 'rest' → logprob: -7.935554504394531

Token 129: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.250008761882782
    2. ' if' → logprob: -1.6250088214874268
    3. 'if' (adapté à ' if') → logprob: -4.250008583068848
    4. '
' → logprob: -5.375008583068848
    5. ' 
' → logprob: -5.750008583068848
    6. '    
' → logprob: -6.500008583068848
    7. '\n' → logprob: -8.875008583068848
    8. 'If' → logprob: -9.000008583068848
    9. '  
' → logprob: -9.125008583068848
    10. ' ' → logprob: -9.375008583068848

Token 130: ' dist' (ID: 3601)
  Prédit: ' boosted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' boosted' → logprob: -0.228153795003891
    2. ' dist' → logprob: -1.7281538248062134
    3. 'dist' → logprob: -3.853153705596924
    4. 'boost' → logprob: -5.353153705596924
    5. ' boost' → logprob: -8.228154182434082
    6. ' distilled' → logprob: -9.728154182434082
    7. ' remaining' → logprob: -10.478154182434082
    8. ' ' → logprob: -10.978154182434082
    9. '	dist' → logprob: -11.228154182434082
    10. '(boost' → logprob: -11.353154182434082

Token 131: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.15773069858551025
    2. '<=' → logprob: -2.0327305793762207
    3. ' >' → logprob: -4.407730579376221
    4. '>' → logprob: -5.907730579376221
    5. ' <' → logprob: -11.282731056213379
    6. '<' → logprob: -11.532731056213379
    7. '=' → logprob: -12.532731056213379
    8. ')<=' → logprob: -12.657731056213379
    9. ')' → logprob: -12.907731056213379
    10. ' ' → logprob: -13.282731056213379

Token 132: ' boosted' (ID: 111352)
  Prédit: 'boost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'boost' → logprob: -0.5765774250030518
    2. ' boosted' → logprob: -0.8265774250030518
    3. ' boost' → logprob: -7.826577186584473
    4. '(boost' → logprob: -9.326577186584473
    5. ' ' → logprob: -9.826577186584473
    6. '	boost' → logprob: -10.326577186584473
    7. '   ' → logprob: -11.451577186584473
    8. 'bo' → logprob: -11.701577186584473
    9. '_bo' → logprob: -12.076577186584473
    10. ' ' → logprob: -12.076577186584473

Token 133: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -4.127333340875339e-06
    2. '_' → logprob: -12.750003814697266
    3. 'dist' → logprob: -13.750003814697266
    4. ' _' → logprob: -16.375003814697266
    5. '_d' → logprob: -17.875003814697266
    6. '_DIST' → logprob: -17.875003814697266
    7. '_
' → logprob: -18.625003814697266
    8. 'Dist' → logprob: -18.625003814697266
    9. '	dist' → logprob: -18.875003814697266
    10. 'ist' → logprob: -18.875003814697266

Token 134: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.160596564412117
    2. ':
' → logprob: -1.9105966091156006
    3. '   ' → logprob: -8.78559684753418
    4. ',' → logprob: -9.91059684753418
    5. ' :' → logprob: -9.91059684753418
    6. ' :
' → logprob: -9.91059684753418
    7. ' and' → logprob: -10.66059684753418
    8. '):
' → logprob: -11.28559684753418
    9. '       ' → logprob: -11.41059684753418
    10. '):' → logprob: -11.78559684753418

Token 135: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03674304485321045
    2. ':' → logprob: -4.7867431640625
    3. '   ' → logprob: -4.7867431640625
    4. '
' → logprob: -5.1617431640625
    5. ' time' → logprob: -5.1617431640625
    6. ':
' → logprob: -6.2867431640625
    7. '        
' → logprob: -6.6617431640625
    8. 'time' → logprob: -6.7867431640625
    9. ',' → logprob: -7.6617431640625
    10. '):' → logprob: -7.7867431640625

Token 136: ' #' (ID: 1069)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.4902661442756653
    2. ' time' → logprob: -1.3652660846710205
    3. '   ' → logprob: -2.3652660846710205
    4. '
' → logprob: -3.6152660846710205
    5. '       ' → logprob: -4.6152663230896
    6. '#' (adapté à ' #') → logprob: -8.615265846252441
    7. '        
' → logprob: -8.740265846252441
    8. '    
' → logprob: -9.240265846252441
    9. 'speed' → logprob: -9.240265846252441
    10. 'car' → logprob: -9.365265846252441

Token 137: ' All' (ID: 2545)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.060359127819538116
    2. ' time' → logprob: -2.935359239578247
    3. '#' → logprob: -5.435359001159668
    4. '   ' → logprob: -8.060359001159668
    5. 'car' → logprob: -8.560359001159668
    6. ' #' → logprob: -8.560359001159668
    7. 'boost' → logprob: -9.310359001159668
    8. 'speed' → logprob: -9.435359001159668
    9. 'distance' → logprob: -10.060359001159668
    10. 'pos' → logprob: -10.310359001159668

Token 138: ' distance' (ID: 9324)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -1.3152145147323608
    2. 'dist' → logprob: -1.9402145147323608
    3. 'car' → logprob: -2.1902146339416504
    4. 'distance' → logprob: -2.3152146339416504
    5. 'time' → logprob: -2.8152146339416504
    6. 'at' → logprob: -2.9402146339416504
    7. ' of' → logprob: -3.0652146339416504
    8. ' the' → logprob: -3.5652146339416504
    9. ' distance' → logprob: -3.6902146339416504
    10. ' in' → logprob: -3.8152146339416504

Token 139: ' to' (ID: 316)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.13422568142414093
    2. 'can' → logprob: -2.384225606918335
    3. ' at' → logprob: -4.134225845336914
    4. ' covered' → logprob: -5.134225845336914
    5. ' is' → logprob: -5.884225845336914
    6. 'covered' → logprob: -6.009225845336914
    7. ' will' → logprob: -6.134225845336914
    8. 'at' → logprob: -6.884225845336914
    9. '_can' → logprob: -7.134225845336914
    10. ' traveled' → logprob: -7.259225845336914

Token 140: ' carrot' (ID: 121234)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.8721518516540527
    2. 'the' → logprob: -1.4971518516540527
    3. ' the' → logprob: -1.8721518516540527
    4. ' carrot' → logprob: -2.7471518516540527
    5. ' reach' → logprob: -3.1221518516540527
    6. 'reach' → logprob: -3.6221518516540527
    7. ' carrots' → logprob: -3.8721518516540527
    8. ' this' → logprob: -4.372151851654053
    9. 'this' → logprob: -4.622151851654053
    10. ' next' → logprob: -5.122151851654053

Token 141: ' covered' (ID: 13083)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.727268397808075
    2. ' at' → logprob: -0.977268397808075
    3. 'can' → logprob: -3.1022684574127197
    4. ' is' → logprob: -3.6022684574127197
    5. ' will' → logprob: -3.8522684574127197
    6. 'at' → logprob: -4.477268218994141
    7. ' =' → logprob: -4.852268218994141
    8. ' covered' → logprob: -5.102268218994141
    9. 'is' → logprob: -5.477268218994141
    10. '=' → logprob: -5.602268218994141

Token 142: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.35240310430526733
    2. 'at' → logprob: -1.227403163909912
    3. '   ' → logprob: -6.227403163909912
    4. 'with' → logprob: -7.977403163909912
    5. '*' → logprob: -8.477402687072754
    6. 'in' → logprob: -8.477402687072754
    7. 'while' → logprob: -8.727402687072754
    8. ' in' → logprob: -8.727402687072754
    9. ' with' → logprob: -8.977402687072754
    10. '       ' → logprob: -8.977402687072754

Token 143: ' boosted' (ID: 111352)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.6019895672798157
    2. ' V' → logprob: -1.601989507675171
    3. ' boosted' → logprob: -1.976989507675171
    4. 'boost' → logprob: -2.226989507675171
    5. 'speed' → logprob: -6.35198974609375
    6. ' boost' → logprob: -6.47698974609375
    7. ' speed' → logprob: -8.10198974609375
    8. '```' → logprob: -8.72698974609375
    9. ' the' → logprob: -9.28948974609375
    10. 'v' → logprob: -9.91448974609375

Token 144: ' speed' (ID: 7733)
  Prédit: ' speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' speed' → logprob: -0.47448402643203735
    2. 'speed' → logprob: -0.9744840264320374
    3. '_speed' → logprob: -8.09948444366455
    4. ' speeds' → logprob: -10.47448444366455
    5. '	speed' → logprob: -10.97448444366455
    6. ' velocity' → logprob: -11.09948444366455
    7. ' ' → logprob: -12.22448444366455
    8. 's' → logprob: -12.34948444366455
    9. 'spe' → logprob: -12.34948444366455
    10. 'velocity' → logprob: -12.72448444366455

Token 145: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4029066264629364
    2. '
' → logprob: -1.7779066562652588
    3. ',' → logprob: -2.402906656265259
    4. '        
' → logprob: -4.02790641784668
    5. '           ' → logprob: -4.15290641784668
    6. '   ' → logprob: -4.52790641784668
    7. ',
' → logprob: -5.27790641784668
    8. 'time' → logprob: -5.40290641784668
    9. '    
' → logprob: -6.02790641784668
    10. ')' → logprob: -6.15290641784668

Token 146: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6431517601013184
    2. '   ' → logprob: -1.0181517601013184
    3. ',' → logprob: -2.7681517601013184
    4. '           ' → logprob: -4.018151760101318
    5. ')' → logprob: -5.143151760101318
    6. 'time' → logprob: -5.268151760101318
    7. '
' → logprob: -5.768151760101318
    8. ' time' → logprob: -5.768151760101318
    9. ',
' → logprob: -6.143151760101318
    10. ' ,' → logprob: -6.268151760101318

Token 147: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' (adapté à ' time') → logprob: -0.0021452659275382757
    2. ' time' → logprob: -7.002145290374756
    3. '   ' → logprob: -7.127145290374756
    4. '       ' → logprob: -8.502144813537598
    5. 't' → logprob: -9.377144813537598
    6. '
' → logprob: -9.877144813537598
    7. '```' → logprob: -11.377144813537598
    8. 'duration' → logprob: -11.502144813537598
    9. '_time' → logprob: -11.502144813537598
    10. '        
' → logprob: -11.752144813537598

Token 148: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.03379380330443382
    2. '+=' → logprob: -3.4087936878204346
    3. '+' → logprob: -9.783793449401855
    4. '   ' → logprob: -10.158793449401855
    5. '    ' → logprob: -11.533793449401855
    6. '	' → logprob: -11.658793449401855
    7. ' +' → logprob: -11.908793449401855
    8. '=' → logprob: -12.283793449401855
    9. ' ' → logprob: -12.408793449401855
    10. ' =' → logprob: -12.533793449401855

Token 149: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.20145992934703827
    2. 'dist' → logprob: -1.7014598846435547
    3. '(dist' → logprob: -10.951459884643555
    4. '	dist' → logprob: -11.076459884643555
    5. ' ' → logprob: -12.326459884643555
    6. '   ' → logprob: -12.576459884643555
    7. ' (' → logprob: -13.076459884643555
    8. '_dist' → logprob: -13.701459884643555
    9. 'd' → logprob: -14.576459884643555
    10. '
' → logprob: -14.701459884643555

Token 150: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.5760299563407898
    2. '/' → logprob: -0.8260299563407898
    3. '/V' → logprob: -9.576029777526855
    4. '/
' → logprob: -12.451029777526855
    5. ' /
' → logprob: -12.576029777526855
    6. '   ' → logprob: -12.701029777526855
    7. '/v' → logprob: -12.826029777526855
    8. ' ' → logprob: -13.076029777526855
    9. ' ' → logprob: -14.076029777526855
    10. '```' → logprob: -14.201029777526855

Token 151: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.0001234428636962548
    2. ' V' → logprob: -9.000123023986816
    3. '	V' → logprob: -17.625123977661133
    4. '<|end|>' → logprob: -18.250123977661133
    5. ')V' → logprob: -18.500123977661133
    6. '(V' → logprob: -19.500123977661133
    7. '   ' → logprob: -19.750123977661133
    8. '```' → logprob: -19.875123977661133
    9. '[V' → logprob: -20.125123977661133
    10. '
' → logprob: -20.250123977661133

Token 152: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.42765527963638306
    2. '   ' → logprob: -1.3026552200317383
    3. '    
' → logprob: -4.052655220031738
    4. 'else' → logprob: -4.427655220031738
    5. '\n' → logprob: -4.677655220031738
    6. ' else' → logprob: -4.677655220031738
    7. '<|end|>' → logprob: -5.177655220031738
    8. ' 
' → logprob: -5.302655220031738
    9. '  
' → logprob: -5.677655220031738
    10. 'pos' → logprob: -5.677655220031738

Token 153: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08415061980485916
    2. 'else' → logprob: -3.209150552749634
    3. ' else' → logprob: -3.334150552749634
    4. '    
' → logprob: -5.959150791168213
    5. '```' → logprob: -7.459150791168213
    6. '
' → logprob: -7.709150791168213
    7. '       ' → logprob: -7.834150791168213
    8. '\n' → logprob: -8.959150314331055
    9. 'elif' → logprob: -9.209150314331055
    10. ',' → logprob: -9.459150314331055

Token 154: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.1592232882976532
    2. 'car' → logprob: -2.4092233180999756
    3. ' pos' → logprob: -3.2842233180999756
    4. 'speed' → logprob: -4.4092230796813965
    5. 'boost' → logprob: -5.7842230796813965
    6. '   ' → logprob: -5.9092230796813965
    7. ' speed' → logprob: -6.9092230796813965
    8. ' car' → logprob: -8.034223556518555
    9. 'position' → logprob: -9.034223556518555
    10. '       ' → logprob: -9.409223556518555

Token 155: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1625310331583023
    2. '=' → logprob: -1.9125310182571411
    3. ' +=' → logprob: -6.162530899047852
    4. '+=' → logprob: -8.537530899047852
    5. '<|end|>' → logprob: -14.412530899047852
    6. '+' → logprob: -15.537530899047852
    7. '.=' → logprob: -16.03753089904785
    8. ')' → logprob: -16.28753089904785
    9. ' =)' → logprob: -16.66253089904785
    10. '＝' → logprob: -16.66253089904785

Token 156: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.00318294414319098
    2. ' D' → logprob: -5.753182888031006
    3. '   ' → logprob: -12.253183364868164
    4. '	D' → logprob: -15.253183364868164
    5. '       ' → logprob: -16.878183364868164
    6. ' ' → logprob: -17.003183364868164
    7. 'Д' → logprob: -17.378183364868164
    8. '_D' → logprob: -17.378183364868164
    9. '           ' → logprob: -17.753183364868164
    10. '  ' → logprob: -18.003183364868164

Token 157: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.054500666621607e-06
    2. 'i' → logprob: -12.87500286102295
    3. '[' → logprob: -15.50000286102295
    4. '```' → logprob: -15.87500286102295
    5. '[I' → logprob: -15.87500286102295
    6. '[
' → logprob: -18.000003814697266
    7. ' [' → logprob: -18.250003814697266
    8. '(i' → logprob: -18.750003814697266
    9. '{i' → logprob: -18.750003814697266
    10. '[D' → logprob: -18.875003814697266

Token 158: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00016146517009474337
    2. ']
' → logprob: -8.875161170959473
    3. ' ]' → logprob: -11.875161170959473
    4. ']+' → logprob: -11.875161170959473
    5. ')' → logprob: -12.500161170959473
    6. ']

' → logprob: -14.125161170959473
    7. '[i' → logprob: -14.125161170959473
    8. 'i' → logprob: -14.375161170959473
    9. ')]' → logprob: -14.875161170959473
    10. '   ' → logprob: -15.250161170959473

Token 159: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03307625278830528
    2. 'else' → logprob: -3.783076286315918
    3. ' else' → logprob: -5.408076286315918
    4. '```' → logprob: -5.908076286315918
    5. '    
' → logprob: -6.908076286315918
    6. '
' → logprob: -7.033076286315918
    7. 'elif' → logprob: -7.908076286315918
    8. '       ' → logprob: -10.033076286315918
    9. '  
' → logprob: -10.033076286315918
    10. '<|end|>' → logprob: -10.283076286315918

Token 160: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.8148020505905151
    2. 'else' (adapté à ' else') → logprob: -0.8148020505905151
    3. '   ' → logprob: -2.1898021697998047
    4. 'elif' → logprob: -6.564802169799805
    5. ' elif' → logprob: -7.189802169799805
    6. '```' → logprob: -8.064802169799805
    7. '
' → logprob: -10.439802169799805
    8. '    
' → logprob: -10.564802169799805
    9. '	else' → logprob: -10.689802169799805
    10. ' ' → logprob: -11.189802169799805

Token 161: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6422701478004456
    2. ':' → logprob: -0.7672701478004456
    3. '       ' → logprob: -5.017270088195801
    4. '   ' → logprob: -6.142270088195801
    5. ',' → logprob: -8.1422700881958
    6. '```' → logprob: -9.0172700881958
    7. '):
' → logprob: -9.2672700881958
    8. '
' → logprob: -9.7672700881958
    9. '    ' → logprob: -9.7672700881958
    10. ' :
' → logprob: -10.1422700881958

Token 162: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16365927457809448
    2. ' time' → logprob: -2.2886593341827393
    3. 'time' → logprob: -3.4136593341827393
    4. '   ' → logprob: -4.16365909576416
    5. '```' → logprob: -7.91365909576416
    6. '
' → logprob: -8.03865909576416
    7. '    ' → logprob: -9.41365909576416
    8. ' if' → logprob: -9.78865909576416
    9. '     ' → logprob: -9.78865909576416
    10. 'if' → logprob: -10.41365909576416

Token 163: ' #' (ID: 1069)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.10461024940013885
    2. ' time' → logprob: -2.8546102046966553
    3. 'if' → logprob: -3.8546102046966553
    4. '   ' → logprob: -4.354610443115234
    5. ' if' → logprob: -5.604610443115234
    6. '       ' → logprob: -5.729610443115234
    7. '#' (adapté à ' #') → logprob: -7.479610443115234
    8. 'dist' → logprob: -9.979610443115234
    9. ' #' → logprob: -10.479610443115234
    10. ' ' → logprob: -10.729610443115234

Token 164: ' Use' (ID: 7649)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.27754831314086914
    2. ' time' → logprob: -1.5275483131408691
    3. 'if' → logprob: -4.152548313140869
    4. ' if' → logprob: -5.277548313140869
    5. '#' → logprob: -6.527548313140869
    6. '       ' → logprob: -6.777548313140869
    7. '   ' → logprob: -7.277548313140869
    8. 'If' → logprob: -7.777548313140869
    9. ' #' → logprob: -8.902547836303711
    10. 'remaining' → logprob: -9.027547836303711

Token 165: ' boost' (ID: 12110)
  Prédit: ' remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remaining' → logprob: -0.5680814981460571
    2. 'remaining' → logprob: -1.3180814981460571
    3. 'boost' → logprob: -2.6930813789367676
    4. 'up' → logprob: -2.9430813789367676
    5. ' up' → logprob: -3.8180813789367676
    6. ' boosted' → logprob: -4.068081378936768
    7. ' boost' → logprob: -5.568081378936768
    8. ' the' → logprob: -7.318081378936768
    9. ' time' → logprob: -7.943081378936768
    10. ' all' → logprob: -8.318081855773926

Token 166: ' for' (ID: 395)
  Prédit: ' time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.42572838068008423
    2. 'time' → logprob: -1.3007283210754395
    3. ' up' → logprob: -3.3007283210754395
    4. 'up' → logprob: -4.9257283210754395
    5. ' for' → logprob: -5.0507283210754395
    6. ' remaining' → logprob: -5.0507283210754395
    7. '   ' → logprob: -5.3007283210754395
    8. '       ' → logprob: -5.8007283210754395
    9. '_time' → logprob: -5.8007283210754395
    10. 'remaining' → logprob: -6.8007283210754395

Token 167: ' distance' (ID: 9324)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.02024427056312561
    2. ' remaining' → logprob: -4.520244121551514
    3. 'boost' → logprob: -4.770244121551514
    4. '   ' → logprob: -8.270244598388672
    5. ' boosted' → logprob: -8.270244598388672
    6. ' the' → logprob: -10.145244598388672
    7. 'the' → logprob: -10.270244598388672
    8. 'duration' → logprob: -11.395244598388672
    9. ' boost' → logprob: -11.395244598388672
    10. 'time' → logprob: -11.645244598388672

Token 168: ',' (ID: 11)
  Prédit: 'boost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'boost' → logprob: -0.008690441958606243
    2. ' boosted' → logprob: -5.008690357208252
    3. '=' → logprob: -6.508690357208252
    4. '   ' → logprob: -8.25869083404541
    5. ' =' → logprob: -9.63369083404541
    6. ' boost' → logprob: -10.38369083404541
    7. '       ' → logprob: -10.75869083404541
    8. '(boost' → logprob: -10.88369083404541
    9. '+=' → logprob: -11.50869083404541
    10. 'remaining' → logprob: -11.50869083404541

Token 169: ' then' (ID: 1815)
  Prédit: ' then'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' then' → logprob: -0.6843661665916443
    2. 'time' → logprob: -1.559366226196289
    3. ' time' → logprob: -1.809366226196289
    4. 'then' → logprob: -2.184366226196289
    5. '       ' → logprob: -5.059366226196289
    6. 'and' → logprob: -7.434366226196289
    7. '   ' → logprob: -7.434366226196289
    8. ' and' → logprob: -7.559366226196289
    9. ' rest' → logprob: -9.184366226196289
    10. 'dist' → logprob: -9.434366226196289

Token 170: ' normal' (ID: 6078)
  Prédit: ' normal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' normal' → logprob: -0.7556496262550354
    2. 'normal' → logprob: -1.3806495666503906
    3. ' travel' → logprob: -3.2556495666503906
    4. 'travel' → logprob: -3.2556495666503906
    5. ' use' → logprob: -3.5056495666503906
    6. ' (' → logprob: -3.6306495666503906
    7. 'regular' → logprob: -4.130649566650391
    8. ' continue' → logprob: -4.255649566650391
    9. ' walk' → logprob: -4.255649566650391
    10. ' regular' → logprob: -4.380649566650391

Token 171: ' speed' (ID: 7733)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.02785167656838894
    2. ' speed' → logprob: -3.6528515815734863
    3. '(speed' → logprob: -7.152851581573486
    4. '_speed' → logprob: -7.902851581573486
    5. ' U' → logprob: -9.277852058410645
    6. '(U' → logprob: -9.527852058410645
    7. ' (' → logprob: -10.027852058410645
    8. 'time' → logprob: -10.027852058410645
    9. '   ' → logprob: -10.777852058410645
    10. 'U' → logprob: -10.902852058410645

Token 172: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38877764344215393
    2. 'for' → logprob: -1.5137776136398315
    3. ' time' → logprob: -3.013777732849121
    4. 'time' → logprob: -3.388777732849121
    5. ' +=' → logprob: -4.263777732849121
    6. '   ' → logprob: -6.263777732849121
    7. ' +' → logprob: -7.638777732849121
    8. ' (' → logprob: -7.638777732849121
    9. '+=' → logprob: -7.763777732849121
    10. '       ' → logprob: -8.263777732849121

Token 173: ' the' (ID: 290)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6694126725196838
    2. 'the' → logprob: -1.669412612915039
    3. 'rest' → logprob: -2.294412612915039
    4. ' the' → logprob: -2.669412612915039
    5. 'remaining' → logprob: -3.294412612915039
    6. ' dist' → logprob: -3.419412612915039
    7. '(dist' → logprob: -3.419412612915039
    8. ' rest' → logprob: -4.419412612915039
    9. ' remaining' → logprob: -4.544412612915039
    10. '(rest' → logprob: -5.669412612915039

Token 174: ' rest' (ID: 2867)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.43462151288986206
    2. 'rest' → logprob: -1.4346215724945068
    3. ' rest' → logprob: -2.559621572494507
    4. ' dist' → logprob: -3.934621572494507
    5. 'remaining' → logprob: -4.559621334075928
    6. ' remaining' → logprob: -5.184621334075928
    7. '(dist' → logprob: -7.309621334075928
    8. ' remainder' → logprob: -8.059621810913086
    9. 'diff' → logprob: -8.934621810913086
    10. '(rest' → logprob: -10.059621810913086

Token 175: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12828156352043152
    2. ' time' → logprob: -2.628281593322754
    3. 'time' → logprob: -3.128281593322754
    4. '   ' → logprob: -5.753281593322754
    5. '
' → logprob: -8.003281593322754
    6. ',' → logprob: -8.378281593322754
    7. 'distance' → logprob: -8.753281593322754
    8. '           ' → logprob: -8.878281593322754
    9. 'dist' → logprob: -9.253281593322754
    10. ' distance' → logprob: -9.378281593322754

Token 176: '       ' (ID: 309)
  Prédit: ' time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.565733790397644
    2. 'time' → logprob: -1.190733790397644
    3. '   ' → logprob: -2.5657339096069336
    4. '```' → logprob: -3.1907339096069336
    5. '``' → logprob: -5.690733909606934
    6. '
' → logprob: -5.690733909606934
    7. '       ' → logprob: -5.940733909606934
    8. '	time' → logprob: -9.565733909606934
    9. '    
' → logprob: -9.815733909606934
    10. 'rest' → logprob: -10.065733909606934

Token 177: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' (adapté à ' time') → logprob: -0.20333190262317657
    2. ' time' → logprob: -1.7033319473266602
    3. '   ' → logprob: -7.20333194732666
    4. 'boost' → logprob: -8.45333194732666
    5. 'dist' → logprob: -8.82833194732666
    6. 'remaining' → logprob: -8.82833194732666
    7. '       ' → logprob: -9.07833194732666
    8. ' if' → logprob: -9.07833194732666
    9. 'if' → logprob: -9.20333194732666
    10. ' remaining' → logprob: -9.70333194732666

Token 178: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.06995511054992676
    2. '+=' → logprob: -2.6949551105499268
    3. '+=(' → logprob: -11.819954872131348
    4. '+' → logprob: -12.569954872131348
    5. '	' → logprob: -12.944954872131348
    6. '=' → logprob: -13.444954872131348
    7. ']+=' → logprob: -13.944954872131348
    8. ' +' → logprob: -14.194954872131348
    9. '   ' → logprob: -14.319954872131348
    10. ' ' → logprob: -14.319954872131348

Token 179: ' remaining' (ID: 15448)
  Prédit: 'boost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'boost' → logprob: -0.12774257361888885
    2. 'remaining' → logprob: -2.6277425289154053
    3. ' boosted' → logprob: -3.2527425289154053
    4. ' remaining' → logprob: -4.877742767333984
    5. '(boost' → logprob: -7.127742767333984
    6. ' boost' → logprob: -8.002742767333984
    7. '   ' → logprob: -9.377742767333984
    8. '(' → logprob: -9.877742767333984
    9. ' ' → logprob: -10.252742767333984
    10. ' (' → logprob: -10.627742767333984

Token 180: '_bo' (ID: 104368)
  Prédit: '_bo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bo' → logprob: -3.392824874026701e-05
    2. 'boost' → logprob: -10.37503433227539
    3. '_' → logprob: -13.50003433227539
    4. ' _' → logprob: -14.25003433227539
    5. '_dist' → logprob: -15.75003433227539
    6. '_boot' → logprob: -16.50003433227539
    7. '(boost' → logprob: -16.75003433227539
    8. ' boost' → logprob: -16.87503433227539
    9. '_
' → logprob: -17.25003433227539
    10. '	boost' → logprob: -17.25003433227539

Token 181: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.001798350247554481
    2. 'st' → logprob: -7.501798152923584
    3. '_' → logprob: -8.126798629760742
    4. 'o' → logprob: -8.376798629760742
    5. 'ust' → logprob: -8.751798629760742
    6. 'boost' → logprob: -9.251798629760742
    7. 'rost' → logprob: -10.001798629760742
    8. '_rest' → logprob: -10.001798629760742
    9. 'ост' → logprob: -10.251798629760742
    10. '   ' → logprob: -10.876798629760742

Token 182: '
' (ID: 198)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.11830336600542068
    2. '+' → logprob: -2.3683032989501953
    3. '*' → logprob: -4.493303298950195
    4. ' *' → logprob: -5.493303298950195
    5. ' /' → logprob: -6.368303298950195
    6. '/' → logprob: -7.368303298950195
    7. ' ' → logprob: -8.993303298950195
    8. '   ' → logprob: -10.493303298950195
    9. ' (' → logprob: -10.618303298950195
    10. '*(' → logprob: -11.118303298950195

Token 183: '       ' (ID: 309)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.7700032591819763
    2. 'dist' → logprob: -1.145003318786621
    3. '   ' → logprob: -1.645003318786621
    4. '+' → logprob: -4.395003318786621
    5. ' +' → logprob: -5.020003318786621
    6. '       ' → logprob: -6.145003318786621
    7. ' time' → logprob: -6.270003318786621
    8. '	dist' → logprob: -6.895003318786621
    9. 'time' → logprob: -7.645003318786621
    10. '    ' → logprob: -7.770003318786621

Token 184: ' dist' (ID: 3601)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.22030392289161682
    2. 'dist' (adapté à ' dist') → logprob: -1.8453038930892944
    3. ' time' → logprob: -3.345304012298584
    4. ' dist' → logprob: -5.720304012298584
    5. '   ' → logprob: -7.845304012298584
    6. 'distance' → logprob: -8.845303535461426
    7. '       ' → logprob: -8.970303535461426
    8. 'pos' → logprob: -9.470303535461426
    9. ' (' → logprob: -9.470303535461426
    10. '(time' → logprob: -9.720303535461426

Token 185: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.6245229244232178
    2. '-=' → logprob: -0.8745229244232178
    3. '_remaining' → logprob: -3.6245229244232178
    4. '-' → logprob: -4.624523162841797
    5. '=' → logprob: -4.624523162841797
    6. '_rest' → logprob: -7.624523162841797
    7. '   ' → logprob: -9.124523162841797
    8. 'remaining' → logprob: -9.124523162841797
    9. ' =' → logprob: -9.499523162841797
    10. ' -' → logprob: -9.624523162841797

Token 186: ' boosted' (ID: 111352)
  Prédit: 'boost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'boost' → logprob: -0.043359048664569855
    2. ' boosted' → logprob: -3.1683590412139893
    3. 'remaining' → logprob: -8.66835880279541
    4. ' boost' → logprob: -9.79335880279541
    5. '(boost' → logprob: -9.91835880279541
    6. '   ' → logprob: -10.41835880279541
    7. ' remaining' → logprob: -10.79335880279541
    8. '```' → logprob: -11.54335880279541
    9. '	boost' → logprob: -12.04335880279541
    10. '<boost' → logprob: -12.79335880279541

Token 187: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.015820490196347237
    2. 'boost' → logprob: -4.265820503234863
    3. '_bo' → logprob: -7.015820503234863
    4. 'dist' → logprob: -7.890820503234863
    5. 'ist' → logprob: -8.015820503234863
    6. 'ost' → logprob: -10.890820503234863
    7. 'Dist' → logprob: -11.140820503234863
    8. 'Boost' → logprob: -12.765820503234863
    9. 'ust' → logprob: -13.015820503234863
    10. 't' → logprob: -13.265820503234863

Token 188: '
' (ID: 198)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.3671989142894745
    2. '
' → logprob: -1.9921989440917969
    3. ' time' → logprob: -2.492198944091797
    4. '   ' → logprob: -2.492198944091797
    5. '       ' → logprob: -5.867198944091797
    6. '    
' → logprob: -6.992198944091797
    7. '        
' → logprob: -7.992198944091797
    8. '+' → logprob: -8.367198944091797
    9. '    ' → logprob: -8.867198944091797
    10. '*time' → logprob: -8.867198944091797

Token 189: '       ' (ID: 309)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.22294098138809204
    2. ' time' → logprob: -1.7229409217834473
    3. '   ' → logprob: -4.347940921783447
    4. '```' → logprob: -5.347940921783447
    5. '       ' → logprob: -6.222940921783447
    6. '
' → logprob: -7.097940921783447
    7. '+' → logprob: -8.097941398620605
    8. '``' → logprob: -8.472941398620605
    9. '    
' → logprob: -9.847941398620605
    10. '        
' → logprob: -9.847941398620605

Token 190: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' (adapté à ' time') → logprob: -0.005594444926828146
    2. ' time' → logprob: -5.255594253540039
    3. '   ' → logprob: -8.005594253540039
    4. 'pos' → logprob: -11.005594253540039
    5. 'if' → logprob: -12.755594253540039
    6. '
' → logprob: -12.755594253540039
    7. 'speed' → logprob: -14.005594253540039
    8. ' pos' → logprob: -14.255594253540039
    9. '```' → logprob: -14.505594253540039
    10. '       ' → logprob: -14.630594253540039

Token 191: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.47409942746162415
    2. '+=' → logprob: -0.9740993976593018
    3. '+' → logprob: -11.224099159240723
    4. ' +' → logprob: -12.849099159240723
    5. '+=(' → logprob: -13.224099159240723
    6. ']+=' → logprob: -13.849099159240723
    7. '   ' → logprob: -13.974099159240723
    8. '+='' → logprob: -13.974099159240723
    9. '+="' → logprob: -14.599099159240723
    10. ' ' → logprob: -14.599099159240723

Token 192: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.3868883550167084
    2. 'dist' → logprob: -1.1368883848190308
    3. '(dist' → logprob: -11.88688850402832
    4. '   ' → logprob: -12.26188850402832
    5. '	dist' → logprob: -12.51188850402832
    6. '_dist' → logprob: -14.13688850402832
    7. '.dist' → logprob: -14.51188850402832
    8. ' ' → logprob: -15.01188850402832
    9. 'd' → logprob: -15.76188850402832
    10. '```' → logprob: -16.51188850402832

Token 193: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.4740939140319824
    2. '/' → logprob: -0.9740939140319824
    3. '/s' → logprob: -12.59909439086914
    4. '```' → logprob: -12.59909439086914
    5. ' ' → logprob: -12.72409439086914
    6. ' ' → logprob: -12.84909439086914
    7. ''' → logprob: -14.09909439086914
    8. '1' → logprob: -14.59909439086914
    9. '"' → logprob: -14.59909439086914
    10. '`' → logprob: -14.97409439086914

Token 194: ' U' (ID: 601)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.08484867215156555
    2. 'U' → logprob: -2.584848642349243
    3. ' speed' → logprob: -5.209848880767822
    4. ' U' → logprob: -7.834848880767822
    5. '	speed' → logprob: -10.709848403930664
    6. 'S' → logprob: -11.084848403930664
    7. '   ' → logprob: -11.209848403930664
    8. '(speed' → logprob: -11.584848403930664
    9. '.speed' → logprob: -12.834848403930664
    10. '```' → logprob: -13.084848403930664

Token 195: '
' (ID: 198)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.533710777759552
    2. '   ' → logprob: -0.908710777759552
    3. '
' → logprob: -5.283710956573486
    4. ' pos' → logprob: -5.908710956573486
    5. '```' → logprob: -6.783710956573486
    6. 'car' → logprob: -7.283710956573486
    7. '    
' → logprob: -8.283710479736328
    8. '       ' → logprob: -9.283710479736328
    9. 'Pos' → logprob: -9.908710479736328
    10. 'Car' → logprob: -9.908710479736328

Token 196: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18720506131649017
    2. 'pos' → logprob: -1.8122050762176514
    3. ' pos' → logprob: -5.437204837799072
    4. '```' → logprob: -6.312204837799072
    5. 'car' → logprob: -7.562204837799072
    6. '
' → logprob: -8.31220531463623
    7. '       ' → logprob: -8.81220531463623
    8. '    
' → logprob: -9.68720531463623
    9. '	pos' → logprob: -10.31220531463623
    10. '+' → logprob: -10.43720531463623

Token 197: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -1.8789383830153383e-05
    2. ' pos' → logprob: -11.375019073486328
    3. '   ' → logprob: -11.875019073486328
    4. '       ' → logprob: -15.625019073486328
    5. '```' → logprob: -16.875019073486328
    6. 'car' → logprob: -17.375019073486328
    7. '
' → logprob: -17.500019073486328
    8. 'position' → logprob: -17.750019073486328
    9. '	pos' → logprob: -18.500019073486328
    10. '           ' → logprob: -18.875019073486328

Token 198: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20295168459415436
    2. ' =' → logprob: -1.7029516696929932
    3. ' +=' → logprob: -6.952951908111572
    4. '+=' → logprob: -7.452951908111572
    5. '.=' → logprob: -13.952951431274414
    6. '＝' → logprob: -15.202951431274414
    7. ')' → logprob: -16.577951431274414
    8. ' .=' → logprob: -16.827951431274414
    9. '<|end|>' → logprob: -17.077951431274414
    10. '=}' → logprob: -17.327951431274414

Token 199: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.00015872348740231246
    2. ' D' → logprob: -8.750158309936523
    3. '   ' → logprob: -15.625158309936523
    4. '	D' → logprob: -18.125158309936523
    5. '  ' → logprob: -19.125158309936523
    6. ' ' → logprob: -19.375158309936523
    7. 'Д' → logprob: -19.750158309936523
    8. '```' → logprob: -20.000158309936523
    9. 'Ｄ' → logprob: -20.250158309936523
    10. '`' → logprob: -20.375158309936523

Token 200: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. 'i' → logprob: -16.75
    3. '[' → logprob: -17.25
    4. '[I' → logprob: -17.25
    5. '```' → logprob: -17.75
    6. ' [' → logprob: -19.125
    7. '\[' → logprob: -19.25
    8. '[user' → logprob: -19.75
    9. '(i' → logprob: -20.25
    10. '`' → logprob: -20.25

Token 201: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.39247941970825195
    2. ')' → logprob: -1.142479419708252
    3. '<|end|>' → logprob: -5.642479419708252
    4. '}' → logprob: -7.017479419708252
    5. '+' → logprob: -7.642479419708252
    6. '   ' → logprob: -8.892478942871094
    7. '```' → logprob: -9.017478942871094
    8. '#' → logprob: -9.267478942871094
    9. '<|end|>' → logprob: -9.267478942871094
    10. ')]' → logprob: -10.142478942871094

Token 202: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4553695619106293
    2. 'car' → logprob: -1.2053695917129517
    3. '   ' → logprob: -3.330369472503662
    4. ' if' → logprob: -4.080369472503662
    5. '```' → logprob: -4.705369472503662
    6. '+' → logprob: -6.330369472503662
    7. '    
' → logprob: -7.455369472503662
    8. '
' → logprob: -7.830369472503662
    9. '#' → logprob: -7.830369472503662
    10. '``' → logprob: -8.20536994934082

Token 203: ' #' (ID: 1069)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.16185545921325684
    2. 'if' → logprob: -1.9118554592132568
    3. '#' (adapté à ' #') → logprob: -7.036855697631836
    4. 'boost' → logprob: -7.661855697631836
    5. '   ' → logprob: -8.786855697631836
    6. 'time' → logprob: -10.036855697631836
    7. '    
' → logprob: -10.661855697631836
    8. '```' → logprob: -11.286855697631836
    9. ' if' → logprob: -11.911855697631836
    10. '
' → logprob: -12.161855697631836

Token 204: ' Decide' (ID: 145367)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.09498519450426102
    2. 'if' → logprob: -2.719985246658325
    3. ' if' → logprob: -4.219985008239746
    4. ' carrots' → logprob: -4.969985008239746
    5. '   ' → logprob: -6.344985008239746
    6. 'If' → logprob: -7.969985008239746
    7. ' car' → logprob: -8.469985008239746
    8. 'time' → logprob: -8.969985008239746
    9. 'boost' → logprob: -8.969985008239746
    10. '#' → logprob: -9.157485008239746

Token 205: ' whether' (ID: 5588)
  Prédit: ' whether'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' whether' → logprob: -0.2581635117530823
    2. ' if' → logprob: -1.5081634521484375
    3. 'whether' → logprob: -5.7581634521484375
    4. '   ' → logprob: -6.5081634521484375
    5. 'if' → logprob: -6.7581634521484375
    6. ' to' → logprob: -8.383163452148438
    7. '    ' → logprob: -8.883163452148438
    8. ' when' → logprob: -11.633163452148438
    9. '	if' → logprob: -12.258163452148438
    10. '
' → logprob: -12.383163452148438

Token 206: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.17421461641788483
    2. ' if' → logprob: -2.2992146015167236
    3. 'to' → logprob: -3.0492146015167236
    4. 'if' → logprob: -4.799214839935303
    5. '   ' → logprob: -5.674214839935303
    6. ' whether' → logprob: -8.799214363098145
    7. '#' → logprob: -9.924214363098145
    8. ' use' → logprob: -10.424214363098145
    9. ' take' → logprob: -10.424214363098145
    10. 'car' → logprob: -10.549214363098145

Token 207: ' eat' (ID: 11237)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'use' → logprob: -1.3626618385314941
    2. 'collect' → logprob: -1.3626618385314941
    3. 'pick' → logprob: -1.7376618385314941
    4. 'eat' → logprob: -2.237661838531494
    5. 'consume' → logprob: -2.487661838531494
    6. 'activate' → logprob: -3.612661838531494
    7. 'take' → logprob: -3.737661838531494
    8. 'car' → logprob: -3.737661838531494
    9. 'try' → logprob: -4.362661838531494
    10. 'buy' → logprob: -4.612661838531494

Token 208: ' carrot' (ID: 121234)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.2054162174463272
    2. 'the' → logprob: -1.705416202545166
    3. 'car' → logprob: -6.205416202545166
    4. ' or' → logprob: -6.955416202545166
    5. ' this' → logprob: -8.205416679382324
    6. ' carrot' → logprob: -8.830416679382324
    7. ' carrots' → logprob: -8.955416679382324
    8. '   ' → logprob: -9.080416679382324
    9. 'or' → logprob: -9.205416679382324
    10. ' ' → logprob: -9.205416679382324

Token 209: ' or' (ID: 503)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40993648767471313
    2. ' if' → logprob: -1.2849364280700684
    3. 'if' → logprob: -2.9099364280700684
    4. ' and' → logprob: -5.784936428070068
    5. ',' → logprob: -7.034936428070068
    6. 'and' → logprob: -8.159936904907227
    7. ' or' → logprob: -8.784936904907227
    8. '
' → logprob: -8.909936904907227
    9. '  ' → logprob: -9.159936904907227
    10. '    ' → logprob: -9.534936904907227

Token 210: ' keep' (ID: 3357)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.2009114027023315
    2. 'not' → logprob: -1.3259114027023315
    3. 'activate' → logprob: -1.8259114027023315
    4. 'use' → logprob: -2.075911521911621
    5. 'boost' → logprob: -2.700911521911621
    6. ' use' → logprob: -3.700911521911621
    7. ' activate' → logprob: -4.075911521911621
    8. 'skip' → logprob: -4.575911521911621
    9. 'continue' → logprob: -5.075911521911621
    10. ' continue' → logprob: -5.700911521911621

Token 211: ' it' (ID: 480)
  Prédit: 'boost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'boost' → logprob: -0.5158794522285461
    2. 'going' → logprob: -1.3908793926239014
    3. 'running' → logprob: -2.6408793926239014
    4. ' going' → logprob: -3.6408793926239014
    5. 'moving' → logprob: -4.2658796310424805
    6. 'e' → logprob: -4.3908796310424805
    7. ' running' → logprob: -4.7658796310424805
    8. ' moving' → logprob: -5.6408796310424805
    9. ' boosting' → logprob: -5.8908796310424805
    10. 'trying' → logprob: -6.2658796310424805

Token 212: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3368217349052429
    2. ' if' → logprob: -1.3368217945098877
    3. 'if' → logprob: -3.9618217945098877
    4. ',' → logprob: -6.836821556091309
    5. '```' → logprob: -7.336821556091309
    6. '
' → logprob: -7.586821556091309
    7. ' and' → logprob: -8.086821556091309
    8. '    
' → logprob: -8.211821556091309
    9. ':' → logprob: -8.461821556091309
    10. ' carrots' → logprob: -9.086821556091309

Token 213: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8148477673530579
    2. ' if' → logprob: -0.8148477673530579
    3. 'if' → logprob: -2.189847707748413
    4. 'eat' → logprob: -6.189847946166992
    5. ' eat' → logprob: -8.689847946166992
    6. '
' → logprob: -9.314847946166992
    7. '```' → logprob: -9.814847946166992
    8. 'car' → logprob: -10.189847946166992
    9. ' ' → logprob: -10.564847946166992
    10. '    
' → logprob: -10.564847946166992

Token 214: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.08473542332649231
    2. 'if' → logprob: -2.58473539352417
    3. '   ' → logprob: -6.08473539352417
    4. 'eat' → logprob: -6.20973539352417
    5. ' eat' → logprob: -6.58473539352417
    6. '```' → logprob: -10.584735870361328
    7. 'car' → logprob: -10.709735870361328
    8. '
' → logprob: -11.084735870361328
    9. ' carrot' → logprob: -11.084735870361328
    10. ' car' → logprob: -11.209735870361328

Token 215: ' Simple' (ID: 12295)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3768535852432251
    2. 'if' → logprob: -1.251853585243225
    3. 'eat' → logprob: -4.0018534660339355
    4. '   ' → logprob: -5.0018534660339355
    5. ' eat' → logprob: -6.0018534660339355
    6. '```' → logprob: -8.376853942871094
    7. 'car' → logprob: -9.376853942871094
    8. 'e' → logprob: -9.876853942871094
    9. '
' → logprob: -10.751853942871094
    10. 'If' → logprob: -11.251853942871094

Token 216: ' approach' (ID: 7139)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6938135623931885
    2. ' if' → logprob: -0.6938135623931885
    3. '   ' → logprob: -7.693813323974609
    4. '```' → logprob: -10.56881332397461
    5. '_if' → logprob: -10.94381332397461
    6. '_choice' → logprob: -11.06881332397461
    7. ' decision' → logprob: -11.06881332397461
    8. '    ' → logprob: -11.19381332397461
    9. ' logic' → logprob: -11.44381332397461
    10. ' check' → logprob: -11.44381332397461

Token 217: ':' (ID: 25)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.028265945613384247
    2. 'if' → logprob: -3.778265953063965
    3. '   ' → logprob: -5.778265953063965
    4. ':' → logprob: -7.528265953063965
    5. 'car' → logprob: -7.528265953063965
    6. ' carrots' → logprob: -7.653265953063965
    7. ' is' → logprob: -9.028265953063965
    8. ' car' → logprob: -9.653265953063965
    9. ' for' → logprob: -10.778265953063965
    10. '
' → logprob: -10.903265953063965

Token 218: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7719878554344177
    2. ' if' → logprob: -0.8969878554344177
    3. 'car' → logprob: -2.3969879150390625
    4. ' eat' → logprob: -4.3969879150390625
    5. ' carrots' → logprob: -4.3969879150390625
    6. 'eat' → logprob: -4.3969879150390625
    7. ' car' → logprob: -7.6469879150390625
    8. '```' → logprob: -7.8969879150390625
    9. 'time' → logprob: -8.271987915039062
    10. '
' → logprob: -8.521987915039062

Token 219: ' we' (ID: 581)
  Prédit: ' carrots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' carrots' → logprob: -0.5695742964744568
    2. 'car' → logprob: -1.9445743560791016
    3. 'K' → logprob: -2.5695743560791016
    4. ' K' → logprob: -2.6945743560791016
    5. ' time' → logprob: -3.0695743560791016
    6. 'time' → logprob: -3.3195743560791016
    7. 'i' → logprob: -3.9445743560791016
    8. ' i' → logprob: -4.444574356079102
    9. 'pos' → logprob: -4.694574356079102
    10. ' speed' → logprob: -5.694574356079102

Token 220: ' can' (ID: 665)
  Prédit: ' have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' have' → logprob: -1.2496458292007446
    2. 'eat' → logprob: -1.3746458292007446
    3. 'have' → logprob: -1.4996458292007446
    4. ' can' → logprob: -2.124645709991455
    5. ' eat' → logprob: -3.249645709991455
    6. 'car' → logprob: -3.249645709991455
    7. 'can' → logprob: -3.749645709991455
    8. ' think' → logprob: -5.499645709991455
    9. ' decide' → logprob: -6.499645709991455
    10. ' are' → logprob: -6.499645709991455

Token 221: ' still' (ID: 2928)
  Prédit: 'eat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eat' → logprob: -0.460285484790802
    2. ' eat' → logprob: -1.0852854251861572
    3. ' gain' → logprob: -4.585285663604736
    4. ' get' → logprob: -5.460285663604736
    5. ' use' → logprob: -5.835285663604736
    6. ' reach' → logprob: -5.960285663604736
    7. 'gain' → logprob: -6.210285663604736
    8. 'save' → logprob: -6.335285663604736
    9. 'get' → logprob: -6.460285663604736
    10. ' save' → logprob: -6.960285663604736

Token 222: ' eat' (ID: 11237)
  Prédit: 'eat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eat' → logprob: -0.9090358018875122
    2. 'use' → logprob: -1.4090358018875122
    3. 'activate' → logprob: -1.9090358018875122
    4. 'boost' → logprob: -2.7840356826782227
    5. ' use' → logprob: -3.0340356826782227
    6. 'get' → logprob: -3.2840356826782227
    7. ' eat' → logprob: -4.284035682678223
    8. ' get' → logprob: -5.034035682678223
    9. ' activate' → logprob: -5.409035682678223
    10. 'consume' → logprob: -5.534035682678223

Token 223: ' carrots' (ID: 91266)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.734753429889679
    2. 'car' → logprob: -1.4847533702850342
    3. ' the' → logprob: -1.8597533702850342
    4. 'it' → logprob: -3.484753370285034
    5. ' K' → logprob: -3.734753370285034
    6. 'more' → logprob: -3.734753370285034
    7. ' more' → logprob: -4.109753608703613
    8. 'K' → logprob: -4.234753608703613
    9. ' it' → logprob: -4.234753608703613
    10. 'a' → logprob: -5.859753608703613

Token 224: ' to' (ID: 316)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.6214233040809631
    2. ' and' → logprob: -0.8714233040809631
    3. ',' → logprob: -3.7464232444763184
    4. '<' → logprob: -4.621423244476318
    5. ' <' → logprob: -5.121423244476318
    6. '<K' → logprob: -5.996423244476318
    7. ' ' → logprob: -7.746423244476318
    8. '<N' → logprob: -7.871423244476318
    9. ' ,' → logprob: -8.496423721313477
    10. '   ' → logprob: -8.621423721313477

Token 225: ' get' (ID: 717)
  Prédit: 'increase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'increase' → logprob: -0.6283305287361145
    2. 'reach' → logprob: -2.0033304691314697
    3. 'eat' → logprob: -2.7533304691314697
    4. ' increase' → logprob: -3.0033304691314697
    5. ' reach' → logprob: -3.1283304691314697
    6. 'use' → logprob: -3.3783304691314697
    7. 'fill' → logprob: -3.5033304691314697
    8. 'get' → logprob: -3.8783304691314697
    9. 'boost' → logprob: -4.128330707550049
    10. 'gain' → logprob: -4.753330707550049

Token 226: ' boost' (ID: 12110)
  Prédit: 'boost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'boost' → logprob: -0.5831959843635559
    2. 'a' → logprob: -1.8331959247589111
    3. 'the' → logprob: -2.708195924758911
    4. ' a' → logprob: -2.833195924758911
    5. 'T' → logprob: -3.708195924758911
    6. 'time' → logprob: -3.833195924758911
    7. ' the' → logprob: -4.20819616317749
    8. 'more' → logprob: -4.20819616317749
    9. 'K' → logprob: -4.20819616317749
    10. 'L' → logprob: -4.45819616317749

Token 227: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.19267700612545013
    2. ',' → logprob: -2.6926770210266113
    3. 'and' → logprob: -3.0676770210266113
    4. ' if' → logprob: -3.1926770210266113
    5. 'if' → logprob: -4.942677021026611
    6. '   ' → logprob: -5.192677021026611
    7. ':' → logprob: -6.317677021026611
    8. ' at' → logprob: -6.442677021026611
    9. ' (' → logprob: -6.817677021026611
    10. ' ,' → logprob: -7.067677021026611

Token 228: ' eat' (ID: 11237)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7369843125343323
    2. 'if' → logprob: -1.2369842529296875
    3. ' carrots' → logprob: -1.8619842529296875
    4. 'car' → logprob: -2.6119842529296875
    5. '   ' → logprob: -6.9869842529296875
    6. 'boost' → logprob: -8.111984252929688
    7. 'time' → logprob: -8.361984252929688
    8. ' time' → logprob: -8.361984252929688
    9. ' boost' → logprob: -9.361984252929688
    10. '#' → logprob: -9.549484252929688

Token 229: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.2747588157653809
    2. ' if' → logprob: -1.2747588157653809
    3. ' the' → logprob: -2.024758815765381
    4. 'car' → logprob: -2.649758815765381
    5. 'the' → logprob: -2.649758815765381
    6. 'it' → logprob: -3.024758815765381
    7. ' it' → logprob: -3.274758815765381
    8. '   ' → logprob: -3.649758815765381
    9. ' carrots' → logprob: -4.024758815765381
    10. ' ' → logprob: -4.274758815765381

Token 230: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2903806269168854
    2. 'if' → logprob: -1.665380597114563
    3. ' carrots' → logprob: -3.4153807163238525
    4. '   ' → logprob: -3.7903807163238525
    5. 'car' → logprob: -5.415380477905273
    6. ' ' → logprob: -7.165380477905273
    7. '    ' → logprob: -7.540380477905273
    8. '(' → logprob: -8.290380477905273
    9. '(car' → logprob: -9.165380477905273
    10. '_car' → logprob: -9.415380477905273

Token 231: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06328088790178299
    2. 'if' → logprob: -2.8132808208465576
    3. '   ' → logprob: -7.313281059265137
    4. ' carrots' → logprob: -8.063281059265137
    5. 'car' → logprob: -8.188281059265137
    6. ' ' → logprob: -11.813281059265137
    7. ' 
' → logprob: -12.313281059265137
    8. ' car' → logprob: -12.438281059265137
    9. '    ' → logprob: -12.688281059265137
    10. '+' → logprob: -13.063281059265137

Token 232: ' We' (ID: 1416)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6331294178962708
    2. 'if' → logprob: -0.7581294178962708
    3. '   ' → logprob: -7.883129596710205
    4. 'car' → logprob: -9.258129119873047
    5. ' carrots' → logprob: -10.758129119873047
    6. '```' → logprob: -11.508129119873047
    7. 'If' → logprob: -12.133129119873047
    8. ' ' → logprob: -12.758129119873047
    9. '
' → logprob: -13.508129119873047
    10. ' car' → logprob: -13.633129119873047

Token 233: ' can' (ID: 665)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2604047656059265
    2. ' if' → logprob: -2.5104048252105713
    3. 'car' → logprob: -2.6354048252105713
    4. ' can' → logprob: -3.2604048252105713
    5. 'can' → logprob: -4.010404586791992
    6. '   ' → logprob: -5.635404586791992
    7. ' need' → logprob: -5.885404586791992
    8. ' should' → logprob: -5.885404586791992
    9. ' ' → logprob: -6.635404586791992
    10. '=' → logprob: -7.010404586791992

Token 234: ' hold' (ID: 5060)
  Prédit: 'eat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eat' → logprob: -0.14145983755588531
    2. ' eat' → logprob: -2.1414599418640137
    3. 'if' → logprob: -5.266459941864014
    4. 'car' → logprob: -5.766459941864014
    5. ' if' → logprob: -6.016459941864014
    6. 'e' → logprob: -7.141459941864014
    7. 'try' → logprob: -7.516459941864014
    8. 'have' → logprob: -7.641459941864014
    9. ' try' → logprob: -7.766459941864014
    10. ' have' → logprob: -7.766459941864014

Token 235: ' up' (ID: 869)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.49592238664627075
    2. ' at' → logprob: -2.370922327041626
    3. ' more' → logprob: -2.620922327041626
    4. ' carrots' → logprob: -2.620922327041626
    5. 'at' → logprob: -3.495922327041626
    6. 'more' → logprob: -3.870922327041626
    7. ' up' → logprob: -3.995922327041626
    8. ' K' → logprob: -4.745922565460205
    9. 'K' → logprob: -4.870922565460205
    10. ' if' → logprob: -5.495922565460205

Token 236: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.5304111838340759
    2. 'car' → logprob: -1.6554112434387207
    3. ' carrots' → logprob: -2.1554112434387207
    4. ' to' → logprob: -3.1554112434387207
    5. 'at' → logprob: -4.155411243438721
    6. 'ing' → logprob: -5.030411243438721
    7. 'L' → logprob: -5.155411243438721
    8. 'if' → logprob: -5.155411243438721
    9. 'for' → logprob: -5.655411243438721
    10. '_car' → logprob: -5.905411243438721

Token 237: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.3135882019996643
    2. 'L' → logprob: -1.3135881423950195
    3. 'T' → logprob: -8.93858814239502
    4. '5' → logprob: -10.06358814239502
    5. '3' → logprob: -10.43858814239502
    6. ' K' → logprob: -10.68858814239502
    7. '10' → logprob: -11.06358814239502
    8. '2' → logprob: -11.18858814239502
    9. 'car' → logprob: -11.18858814239502
    10. ' L' → logprob: -11.68858814239502

Token 238: ' carrots' (ID: 91266)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45043516159057617
    2. ' if' → logprob: -1.0754351615905762
    3. 'if' → logprob: -4.075435161590576
    4. '    
' → logprob: -6.700435161590576
    5. ' 
' → logprob: -7.075435161590576
    6. '
' → logprob: -7.450435161590576
    7. '	if' → logprob: -7.700435161590576
    8. '    ' → logprob: -7.825435161590576
    9. ' ' → logprob: -9.200435638427734
    10. '   
' → logprob: -9.200435638427734

Token 239: ';' (ID: 26)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04627261683344841
    2. ' if' → logprob: -3.1712725162506104
    3. 'if' → logprob: -5.9212727546691895
    4. '    
' → logprob: -8.421272277832031
    5. '
' → logprob: -9.296272277832031
    6. '	if' → logprob: -9.671272277832031
    7. ' 
' → logprob: -9.921272277832031
    8. '    ' → logprob: -10.171272277832031
    9. '```' → logprob: -11.046272277832031
    10. 'If' → logprob: -11.296272277832031

Token 240: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3485223352909088
    2. 'if' → logprob: -1.2235223054885864
    3. '   ' → logprob: -9.973522186279297
    4. 'car' → logprob: -11.848522186279297
    5. ' 
' → logprob: -12.223522186279297
    6. '	if' → logprob: -12.598522186279297
    7. '```' → logprob: -12.598522186279297
    8. 'If' → logprob: -12.723522186279297
    9. '
' → logprob: -13.473522186279297
    10. ' carrots' → logprob: -13.598522186279297

Token 241: ' holding' (ID: 16450)
  Prédit: ' carrots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' carrots' → logprob: -0.03367416933178902
    2. 'car' → logprob: -3.4086742401123047
    3. 'len' → logprob: -10.908674240112305
    4. ' len' → logprob: -12.533674240112305
    5. ' carrot' → logprob: -13.533674240112305
    6. 'c' → logprob: -13.533674240112305
    7. ' carot' → logprob: -13.783674240112305
    8. ' ' → logprob: -14.908674240112305
    9. 'i' → logprob: -15.283674240112305
    10. 'Car' → logprob: -15.283674240112305

Token 242: ' less' (ID: 3760)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.3459791839122772
    2. ' carrots' → logprob: -1.3459792137145996
    3. ' <' → logprob: -3.9709792137145996
    4. '<' → logprob: -4.8459792137146
    5. 'len' → logprob: -6.4709792137146
    6. ' len' → logprob: -6.7209792137146
    7. '<len' → logprob: -6.7209792137146
    8. ' ' → logprob: -7.4709792137146
    9. '<K' → logprob: -7.9709792137146
    10. '<c' → logprob: -9.220978736877441

Token 243: ' than' (ID: 1572)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.03218367323279381
    2. '<' → logprob: -4.282183647155762
    3. ' ' → logprob: -5.032183647155762
    4. 'car' → logprob: -5.657183647155762
    5. '<K' → logprob: -5.657183647155762
    6. ' K' → logprob: -5.907183647155762
    7. ' than' → logprob: -7.532183647155762
    8. '<Car' → logprob: -8.157183647155762
    9. 'than' → logprob: -9.407183647155762
    10. '_car' → logprob: -9.532183647155762

Token 244: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.01105159055441618
    2. ' K' → logprob: -4.511051654815674
    3. '=' → logprob: -13.136051177978516
    4. 'k' → logprob: -14.011051177978516
    5. ' ' → logprob: -15.136051177978516
    6. '>K' → logprob: -15.636051177978516
    7. '1' → logprob: -16.261051177978516
    8. 'car' → logprob: -16.636051177978516
    9. '	K' → logprob: -16.636051177978516
    10. '```' → logprob: -16.761051177978516

Token 245: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1465902030467987
    2. ' and' → logprob: -2.771590232849121
    3. 'and' → logprob: -3.521590232849121
    4. ',' → logprob: -3.646590232849121
    5. 'car' → logprob: -4.896590232849121
    6. '>' → logprob: -5.146590232849121
    7. ':
' → logprob: -6.646590232849121
    8. ' >' → logprob: -7.021590232849121
    9. '>:' → logprob: -7.396590232849121
    10. ' :' → logprob: -7.896590232849121

Token 246: ' keep' (ID: 3357)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.282520592212677
    2. ' carrots' → logprob: -1.4075205326080322
    3. 'if' → logprob: -7.282520771026611
    4. ' if' → logprob: -7.907520771026611
    5. ' carrot' → logprob: -9.407520294189453
    6. '   ' → logprob: -9.532520294189453
    7. 'eat' → logprob: -10.532520294189453
    8. ' carot' → logprob: -11.032520294189453
    9. '```' → logprob: -11.282520294189453
    10. 'print' → logprob: -11.407520294189453

Token 247: ' it' (ID: 480)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.15783096849918365
    2. 'e' → logprob: -2.1578309535980225
    3. ' eating' → logprob: -3.5328309535980225
    4. '+=' → logprob: -8.532831192016602
    5. ' +=' → logprob: -9.032831192016602
    6. 'c' → logprob: -9.407831192016602
    7. 'and' → logprob: -9.657831192016602
    8. ' e' → logprob: -9.782831192016602
    9. ' and' → logprob: -9.907831192016602
    10. ' collecting' → logprob: -10.032831192016602

Token 248: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2775656580924988
    2. ' if' → logprob: -1.5275657176971436
    3. 'if' → logprob: -3.7775657176971436
    4. ' and' → logprob: -7.0275654792785645
    5. 'and' → logprob: -7.9025654792785645
    6. ',' → logprob: -8.277565956115723
    7. '
' → logprob: -8.277565956115723
    8. '       ' → logprob: -9.527565956115723
    9. '    
' → logprob: -9.652565956115723
    10. '	if' → logprob: -9.777565956115723

Token 249: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3292196989059448
    2. ' if' → logprob: -1.4542196989059448
    3. 'if' → logprob: -3.0792198181152344
    4. '
' → logprob: -8.579219818115234
    5. '    
' → logprob: -8.704219818115234
    6. 'car' → logprob: -8.704219818115234
    7. ',' → logprob: -9.829219818115234
    8. ' 
' → logprob: -10.204219818115234
    9. '	if' → logprob: -10.454219818115234
    10. ' and' → logprob: -10.579219818115234

Token 250: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.34929537773132324
    2. 'if' → logprob: -1.4742953777313232
    3. '   ' → logprob: -2.7242953777313232
    4. 'car' → logprob: -8.599295616149902
    5. ' carrots' → logprob: -10.224295616149902
    6. '	if' → logprob: -11.474295616149902
    7. ' ' → logprob: -11.849295616149902
    8. '
' → logprob: -11.849295616149902
    9. ' 
' → logprob: -12.099295616149902
    10. '```' → logprob: -12.224295616149902

Token 251: ' But' (ID: 3072)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.546299159526825
    2. ' if' → logprob: -1.0462992191314697
    3. '   ' → logprob: -2.6712992191314697
    4. 'car' → logprob: -7.671298980712891
    5. ' carrots' → logprob: -11.67129898071289
    6. 'If' → logprob: -12.04629898071289
    7. '```' → logprob: -12.17129898071289
    8. '
' → logprob: -12.29629898071289
    9. ' ' → logprob: -12.42129898071289
    10. ' car' → logprob: -12.79629898071289

Token 252: ' always' (ID: 3324)
  Prédit: ' carrots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' carrots' → logprob: -0.2854558825492859
    2. 'car' → logprob: -1.4104559421539307
    3. 'if' → logprob: -6.660455703735352
    4. ' if' → logprob: -7.035455703735352
    5. ' carrot' → logprob: -8.035455703735352
    6. '(car' → logprob: -8.160455703735352
    7. ' not' → logprob: -8.410455703735352
    8. ' K' → logprob: -8.660455703735352
    9. ' time' → logprob: -8.660455703735352
    10. 'time' → logprob: -8.785455703735352

Token 253: ' eat' (ID: 11237)
  Prédit: ' eat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' eat' → logprob: -0.47482502460479736
    2. 'eat' → logprob: -0.9748250246047974
    3. ' if' → logprob: -8.099824905395508
    4. 'if' → logprob: -8.224824905395508
    5. ' try' → logprob: -9.724824905395508
    6. 'car' → logprob: -10.974824905395508
    7. ' time' → logprob: -11.099824905395508
    8. 'e' → logprob: -11.099824905395508
    9. 'try' → logprob: -11.224824905395508
    10. 'time' → logprob: -11.349824905395508

Token 254: ' if' (ID: 538)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.5627252459526062
    2. ' carrots' → logprob: -1.312725305557251
    3. '_car' → logprob: -2.937725305557251
    4. '   ' → logprob: -3.437725305557251
    5. '_' → logprob: -4.187725067138672
    6. '()' → logprob: -4.562725067138672
    7. ' if' → logprob: -4.937725067138672
    8. 'time' → logprob: -5.187725067138672
    9. ' ' → logprob: -5.312725067138672
    10. '    ' → logprob: -5.562725067138672

Token 255: ' no' (ID: 860)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.24358344078063965
    2. ' carrots' → logprob: -1.6185834407806396
    3. 'time' → logprob: -4.993583679199219
    4. ' time' → logprob: -5.868583679199219
    5. 'boost' → logprob: -5.868583679199219
    6. 'pos' → logprob: -6.368583679199219
    7. 'len' → logprob: -6.993583679199219
    8. 'K' → logprob: -7.243583679199219
    9. ' boost' → logprob: -7.993583679199219
    10. ' len' → logprob: -7.993583679199219

Token 256: ' boost' (ID: 12110)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.10812702775001526
    2. ' carrots' → logprob: -2.3581271171569824
    3. 'boost' → logprob: -5.233127117156982
    4. ' boost' → logprob: -6.608127117156982
    5. 'time' → logprob: -8.108126640319824
    6. '_car' → logprob: -8.983126640319824
    7. 'K' → logprob: -9.358126640319824
    8. ' car' → logprob: -9.483126640319824
    9. ' time' → logprob: -9.483126640319824
    10. ' carrot' → logprob: -9.608126640319824

Token 257: ' active' (ID: 6725)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024729516357183456
    2. ' if' → logprob: -3.7747294902801514
    3. 'if' → logprob: -7.1497297286987305
    4. '    
' → logprob: -8.52472972869873
    5. '
' → logprob: -8.64972972869873
    6. '	if' → logprob: -9.77472972869873
    7. '<|end|>' → logprob: -9.77472972869873
    8. ' 
' → logprob: -10.02472972869873
    9. '\n' → logprob: -10.39972972869873
    10. '  
' → logprob: -10.52472972869873

Token 258: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14383776485919952
    2. ' if' → logprob: -2.2688376903533936
    3. 'if' → logprob: -4.143837928771973
    4. '
' → logprob: -4.393837928771973
    5. ' 
' → logprob: -7.018837928771973
    6. '    
' → logprob: -7.143837928771973
    7. '  
' → logprob: -8.518837928771973
    8. '```' → logprob: -9.018837928771973
    9. '   
' → logprob: -9.143837928771973
    10. '\n' → logprob: -9.893837928771973

Token 259: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5954580903053284
    2. ' if' → logprob: -0.8454580903053284
    3. 'if' → logprob: -3.9704580307006836
    4. '    
' → logprob: -8.970458030700684
    5. '	if' → logprob: -9.595458030700684
    6. ' 
' → logprob: -9.595458030700684
    7. '  
' → logprob: -10.220458030700684
    8. '<|end|>' → logprob: -10.470458030700684
    9. '
' → logprob: -10.845458030700684
    10. ' ' → logprob: -11.095458030700684

Token 260: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6942618489265442
    2. ' if' → logprob: -0.8192618489265442
    3. 'if' (adapté à ' if') → logprob: -2.8192617893218994
    4. ' 
' → logprob: -9.94426155090332
    5. '	if' → logprob: -10.56926155090332
    6. '    
' → logprob: -10.56926155090332
    7. '```' → logprob: -11.19426155090332
    8. '
' → logprob: -11.69426155090332
    9. '    ' → logprob: -12.06926155090332
    10. ' ' → logprob: -12.19426155090332

Token 261: ' boost' (ID: 12110)
  Prédit: 'boost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'boost' → logprob: -0.3748485743999481
    2. ' boost' → logprob: -2.1248486042022705
    3. '(boost' → logprob: -2.6248486042022705
    4. 'speed' → logprob: -2.8748486042022705
    5. ' speed' → logprob: -3.3748486042022705
    6. '(speed' → logprob: -4.624848365783691
    7. 'car' → logprob: -4.874848365783691
    8. ' carrots' → logprob: -5.749848365783691
    9. ' (' → logprob: -5.874848365783691
    10. '(not' → logprob: -6.249848365783691

Token 262: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.0009367127786390483
    2. '_active' → logprob: -7.000936508178711
    3. '==' → logprob: -11.000936508178711
    4. '_' → logprob: -12.125936508178711
    5. ' _' → logprob: -14.125936508178711
    6. ' ==' → logprob: -14.625936508178711
    7. '_act' → logprob: -15.125936508178711
    8. '<=' → logprob: -15.375936508178711
    9. '>' → logprob: -15.875936508178711
    10. '_current' → logprob: -15.875936508178711

Token 263: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.018229898065328598
    2. ' <=' → logprob: -4.018229961395264
    3. '==' → logprob: -9.768229484558105
    4. '<' → logprob: -10.768229484558105
    5. ' ' → logprob: -14.518229484558105
    6. ' <' → logprob: -14.893229484558105
    7. ' ==' → logprob: -15.393229484558105
    8. ' ' → logprob: -15.643229484558105
    9. '≤' → logprob: -15.893229484558105
    10. '=' → logprob: -16.143230438232422

Token 264: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.014164448715746403
    2. ' time' → logprob: -4.264164447784424
    3. '   ' → logprob: -15.139164924621582
    4. ' ' → logprob: -15.514164924621582
    5. '0' → logprob: -15.639164924621582
    6. '	time' → logprob: -16.014163970947266
    7. '  ' → logprob: -16.639163970947266
    8. '    ' → logprob: -17.639163970947266
    9. '=time' → logprob: -17.639163970947266
    10. '(time' → logprob: -17.639163970947266

Token 265: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.16963785886764526
    2. ':' → logprob: -2.41963791847229
    3. ' and' → logprob: -2.79463791847229
    4. 'and' → logprob: -6.044637680053711
    5. 'or' → logprob: -6.294637680053711
    6. ' :' → logprob: -6.669637680053711
    7. ':
' → logprob: -8.169637680053711
    8. '   ' → logprob: -9.294637680053711
    9. ' ' → logprob: -10.544637680053711
    10. '	or' → logprob: -11.294637680053711

Token 266: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5442139506340027
    2. ' if' → logprob: -1.1692140102386475
    3. ' and' → logprob: -2.4192140102386475
    4. '       ' → logprob: -4.169213771820068
    5. 'if' → logprob: -6.419213771820068
    6. ':' → logprob: -6.794213771820068
    7. 'and' → logprob: -7.169213771820068
    8. ' carrots' → logprob: -8.294214248657227
    9. ' or' → logprob: -8.794214248657227
    10. ':
' → logprob: -8.919214248657227

Token 267: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9570985436439514
    2. ' if' → logprob: -0.9570985436439514
    3. '   ' → logprob: -1.8320984840393066
    4. 'car' → logprob: -2.8320984840393066
    5. ' carrots' → logprob: -4.832098484039307
    6. ' boost' → logprob: -6.707098484039307
    7. 'boost' → logprob: -6.707098484039307
    8. '       ' → logprob: -7.207098484039307
    9. ' ' → logprob: -8.082098960876465
    10. ' car' → logprob: -8.457098960876465

Token 268: ' No' (ID: 3004)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.3340577185153961
    2. 'if' → logprob: -1.5840576887130737
    3. ' if' → logprob: -3.8340578079223633
    4. 'boost' → logprob: -3.8340578079223633
    5. '   ' → logprob: -4.584057807922363
    6. '#' → logprob: -5.209057807922363
    7. ' carrots' → logprob: -5.209057807922363
    8. 'eat' → logprob: -5.209057807922363
    9. ' boost' → logprob: -6.084057807922363
    10. '       ' → logprob: -6.334057807922363

Token 269: ' boost' (ID: 12110)
  Prédit: 'boost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'boost' → logprob: -0.6603281497955322
    2. ' boost' → logprob: -0.7853281497955322
    3. ' active' → logprob: -3.7853281497955322
    4. 'active' → logprob: -5.410327911376953
    5. ' ' → logprob: -10.285327911376953
    6. 'time' → logprob: -10.785327911376953
    7. '(boost' → logprob: -10.785327911376953
    8. '	boost' → logprob: -10.785327911376953
    9. '   ' → logprob: -11.160327911376953
    10. ' time' → logprob: -11.910327911376953

Token 270: ' active' (ID: 6725)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36343228816986084
    2. '       ' → logprob: -1.6134322881698608
    3. ' active' → logprob: -2.8634324073791504
    4. 'active' → logprob: -3.9884324073791504
    5. ' or' → logprob: -5.36343240737915
    6. ' time' → logprob: -5.61343240737915
    7. '           ' → logprob: -5.73843240737915
    8. '
' → logprob: -5.98843240737915
    9. ',' → logprob: -5.98843240737915
    10. 'time' → logprob: -6.36343240737915

Token 271: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.9446949362754822
    2. '       ' → logprob: -1.194694995880127
    3. ' or' → logprob: -1.694694995880127
    4. '   ' → logprob: -2.569694995880127
    5. ',' → logprob: -4.069694995880127
    6. ':' → logprob: -4.569694995880127
    7. '           ' → logprob: -4.569694995880127
    8. ':
' → logprob: -5.319694995880127
    9. 'and' → logprob: -6.444694995880127
    10. ' if' → logprob: -6.944694995880127

Token 272: ' eat' (ID: 11237)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.2754553556442261
    2. 'if' → logprob: -2.6504554748535156
    3. ' carrots' → logprob: -2.7754554748535156
    4. '   ' → logprob: -3.0254554748535156
    5. ' if' → logprob: -3.7754554748535156
    6. 'boost' → logprob: -4.025455474853516
    7. '       ' → logprob: -5.025455474853516
    8. ' boost' → logprob: -5.400455474853516
    9. 'eat' → logprob: -5.900455474853516
    10. '#' → logprob: -6.900455474853516

Token 273: ' carrot' (ID: 121234)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.40911865234375
    2. '   ' → logprob: -1.28411865234375
    3. ' carrots' → logprob: -3.28411865234375
    4. '       ' → logprob: -4.15911865234375
    5. ' car' → logprob: -6.28411865234375
    6. ' ' → logprob: -7.15911865234375
    7. ' carrot' → logprob: -7.40911865234375
    8. '
' → logprob: -7.78411865234375
    9. '    ' → logprob: -7.90911865234375
    10. '    
' → logprob: -8.03411865234375

Token 274: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004976866766810417
    2. '
' → logprob: -5.879976749420166
    3. '   ' → logprob: -6.879976749420166
    4. '           ' → logprob: -8.004977226257324
    5. ',' → logprob: -8.129977226257324
    6. '        
' → logprob: -8.379977226257324
    7. 'car' → logprob: -9.879977226257324
    8. ' =' → logprob: -10.629977226257324
    9. '        ' → logprob: -10.629977226257324
    10. '  
' → logprob: -11.004977226257324

Token 275: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014405947178602219
    2. '   ' → logprob: -5.139405727386475
    3. '        
' → logprob: -5.639405727386475
    4. 'car' → logprob: -6.889405727386475
    5. '
' → logprob: -7.139405727386475
    6. ',' → logprob: -7.514405727386475
    7. '           ' → logprob: -7.514405727386475
    8. 'boost' → logprob: -7.764405727386475
    9. '    
' → logprob: -8.014406204223633
    10. '  
' → logprob: -8.389406204223633

Token 276: ' boost' (ID: 12110)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.11554273962974548
    2. 'boost' (adapté à ' boost') → logprob: -2.3655426502227783
    3. 'time' → logprob: -4.740542888641357
    4. '   ' → logprob: -5.990542888641357
    5. ' boost' → logprob: -6.490542888641357
    6. ' carrots' → logprob: -6.490542888641357
    7. ' time' → logprob: -7.990542888641357
    8. '       ' → logprob: -8.4905424118042
    9. ' car' → logprob: -10.1155424118042
    10. '    ' → logprob: -10.1155424118042

Token 277: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -1.2664456789934775e-06
    2. '_' → logprob: -14.125000953674316
    3. 'end' → logprob: -15.375000953674316
    4. '_start' → logprob: -15.875000953674316
    5. '_time' → logprob: -17.125001907348633
    6. '_duration' → logprob: -17.625001907348633
    7. '_active' → logprob: -17.750001907348633
    8. 'End' → logprob: -18.375001907348633
    9. '   ' → logprob: -18.375001907348633
    10. '\' → logprob: -18.375001907348633

Token 278: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07888989895582199
    2. ' =' → logprob: -2.578889846801758
    3. '＝' → logprob: -16.578889846801758
    4. '=time' → logprob: -17.328889846801758
    5. '>' → logprob: -17.453889846801758
    6. ' ' → logprob: -18.828889846801758
    7. '+=' → logprob: -19.203889846801758
    8. 'time' → logprob: -19.703889846801758
    9. ',' → logprob: -19.953889846801758
    10. ')' → logprob: -20.328889846801758

Token 279: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.006722471676766872
    2. ' time' → logprob: -5.006722450256348
    3. '   ' → logprob: -11.881722450256348
    4. 'max' → logprob: -17.256723403930664
    5. '	time' → logprob: -17.256723403930664
    6. ' ' → logprob: -17.881723403930664
    7. '(time' → logprob: -18.756723403930664
    8. '  ' → logprob: -18.881723403930664
    9. '=time' → logprob: -19.131723403930664
    10. '"time' → logprob: -19.256723403930664

Token 280: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31327494978904724
    2. ' +' → logprob: -1.3132749795913696
    3. ' plus' → logprob: -12.063275337219238
    4. ' ' → logprob: -13.063275337219238
    5. '   ' → logprob: -13.563275337219238
    6. 'plus' → logprob: -13.563275337219238
    7. ' ' → logprob: -14.813275337219238
    8. 'time' → logprob: -14.938275337219238
    9. '＋' → logprob: -15.188275337219238
    10. '+
' → logprob: -15.188275337219238

Token 281: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.0001848254178185016
    2. ' T' → logprob: -8.750185012817383
    3. 'L' → logprob: -10.625185012817383
    4. ' ' → logprob: -14.500185012817383
    5. '   ' → logprob: -14.500185012817383
    6. 'K' → logprob: -14.500185012817383
    7. '	T' → logprob: -15.750185012817383
    8. '  ' → logprob: -16.250185012817383
    9. '1' → logprob: -16.625185012817383
    10. 't' → logprob: -17.000185012817383

Token 282: '
' (ID: 198)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.8908981084823608
    2. '
' → logprob: -1.2658981084823608
    3. '       ' → logprob: -1.3908981084823608
    4. '   ' → logprob: -3.2658982276916504
    5. 'time' → logprob: -4.51589822769165
    6. ',' → logprob: -6.26589822769165
    7. '<|end|>' → logprob: -6.26589822769165
    8. '+' → logprob: -7.51589822769165
    9. ')
' → logprob: -7.51589822769165
    10. ' car' → logprob: -7.51589822769165

Token 283: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014439666643738747
    2. '   ' → logprob: -4.889439582824707
    3. 'car' → logprob: -5.014439582824707
    4. ' carrots' → logprob: -10.139439582824707
    5. 'else' → logprob: -10.764439582824707
    6. '	car' → logprob: -11.139439582824707
    7. '+' → logprob: -11.264439582824707
    8. '           ' → logprob: -11.264439582824707
    9. ' else' → logprob: -11.889439582824707
    10. ' ' → logprob: -12.014439582824707

Token 284: ' speed' (ID: 7733)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.005609611514955759
    2. ' carrots' → logprob: -5.630609512329102
    3. '   ' → logprob: -7.005609512329102
    4. 'boost' → logprob: -7.130609512329102
    5. 'time' → logprob: -8.630609512329102
    6. '       ' → logprob: -10.380609512329102
    7. 'speed' (adapté à ' speed') → logprob: -11.255609512329102
    8. ' ' → logprob: -11.505609512329102
    9. '```' → logprob: -11.505609512329102
    10. ' car' → logprob: -12.005609512329102

Token 285: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269282102584839
    2. ' =' → logprob: -2.1269283294677734
    3. '＝' → logprob: -16.626928329467773
    4. ',' → logprob: -16.751928329467773
    5. ')' → logprob: -17.126928329467773
    6. ' ' → logprob: -18.126928329467773
    7. '=}' → logprob: -18.251928329467773
    8. '_=' → logprob: -18.501928329467773
    9. ' *=' → logprob: -18.501928329467773
    10. '=s' → logprob: -18.876928329467773

Token 286: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -1.318681188422488e-05
    2. ' V' → logprob: -11.25001335144043
    3. '	V' → logprob: -16.75001335144043
    4. '   ' → logprob: -18.12501335144043
    5. '```' → logprob: -19.12501335144043
    6. 'U' → logprob: -19.37501335144043
    7. 'v' → logprob: -19.75001335144043
    8. '=' → logprob: -20.00001335144043
    9. '`' → logprob: -20.12501335144043
    10. ')V' → logprob: -20.25001335144043

Token 287: '
' (ID: 198)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.5462504029273987
    2. '   ' → logprob: -0.9212504029273987
    3. '       ' → logprob: -4.046250343322754
    4. '
' → logprob: -6.421250343322754
    5. ' carrots' → logprob: -6.546250343322754
    6. '	car' → logprob: -7.421250343322754
    7. ' car' → logprob: -8.046250343322754
    8. '+' → logprob: -8.421250343322754
    9. ',' → logprob: -8.796250343322754
    10. '_car' → logprob: -9.171250343322754

Token 288: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29864785075187683
    2. 'car' → logprob: -2.048647880554199
    3. '       ' → logprob: -2.173647880554199
    4. 'else' → logprob: -4.423647880554199
    5. ' else' → logprob: -6.673647880554199
    6. '```' → logprob: -6.798647880554199
    7. '+' → logprob: -8.0486478805542
    8. ' ' → logprob: -8.6736478805542
    9. ' carrots' → logprob: -9.4236478805542
    10. 'elif' → logprob: -9.5486478805542

Token 289: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.4143439829349518
    2. '   ' → logprob: -1.4143439531326294
    3. ' else' → logprob: -2.414344072341919
    4. 'car' → logprob: -5.78934383392334
    5. 'elif' → logprob: -5.91434383392334
    6. ' elif' → logprob: -8.16434383392334
    7. '	else' → logprob: -8.91434383392334
    8. '       ' → logprob: -9.03934383392334
    9. '+' → logprob: -9.41434383392334
    10. '```' → logprob: -9.41434383392334

Token 290: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31394097208976746
    2. '       ' → logprob: -1.6889410018920898
    3. ':
' → logprob: -2.68894100189209
    4. '   ' → logprob: -4.18894100189209
    5. ',' → logprob: -7.31394100189209
    6. ' and' → logprob: -8.06394100189209
    7. '        
' → logprob: -9.18894100189209
    8. '[' → logprob: -9.31394100189209
    9. ' if' → logprob: -10.06394100189209
    10. '<|end|>' → logprob: -10.18894100189209

Token 291: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12715992331504822
    2. 'car' → logprob: -3.002159833908081
    3. 'if' → logprob: -3.252159833908081
    4. ' if' → logprob: -3.502159833908081
    5. '       ' → logprob: -7.62716007232666
    6. '#' → logprob: -9.00216007232666
    7. '```' → logprob: -9.37716007232666
    8. ' car' → logprob: -9.75216007232666
    9. ' carrots' → logprob: -10.37716007232666
    10. '    ' → logprob: -11.00216007232666

Token 292: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.46670451760292053
    2. 'car' → logprob: -1.3417044878005981
    3. '   ' → logprob: -2.3417046070098877
    4. ' if' → logprob: -4.216704368591309
    5. '#' (adapté à ' #') → logprob: -8.341704368591309
    6. 'pass' → logprob: -9.716704368591309
    7. ' ' → logprob: -9.966704368591309
    8. ' car' → logprob: -9.966704368591309
    9. 'boost' → logprob: -9.966704368591309
    10. ' carrots' → logprob: -10.091704368591309

Token 293: ' Have' (ID: 14465)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4484066963195801
    2. 'car' → logprob: -1.07340669631958
    3. '   ' → logprob: -4.82340669631958
    4. ' if' → logprob: -5.19840669631958
    5. 'If' → logprob: -6.07340669631958
    6. '#' → logprob: -6.07340669631958
    7. 'pass' → logprob: -7.57340669631958
    8. 'keep' → logprob: -8.448406219482422
    9. 'boost' → logprob: -8.698406219482422
    10. 'hold' → logprob: -9.073406219482422

Token 294: ' boost' (ID: 12110)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.04388057813048363
    2. ' carrots' → logprob: -3.4188804626464844
    3. 'boost' → logprob: -5.668880462646484
    4. 'space' → logprob: -6.418880462646484
    5. ' not' → logprob: -7.043880462646484
    6. 'not' → logprob: -7.418880462646484
    7. ' a' → logprob: -7.543880462646484
    8. 'K' → logprob: -7.793880462646484
    9. ' K' → logprob: -7.918880462646484
    10. 'a' → logprob: -7.918880462646484

Token 295: ' active' (ID: 6725)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.6517088413238525
    2. ' if' → logprob: -1.6517088413238525
    3. 'if' → logprob: -1.6517088413238525
    4. 'car' → logprob: -1.9017088413238525
    5. '_end' → logprob: -2.0267088413238525
    6. '=' → logprob: -3.0267088413238525
    7. ' and' → logprob: -3.2767088413238525
    8. 'and' → logprob: -3.6517088413238525
    9. ' =' → logprob: -5.776708602905273
    10. '       ' → logprob: -5.901708602905273

Token 296: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4347817897796631
    2. ' if' → logprob: -2.184781789779663
    3. ',' → logprob: -2.434781789779663
    4. ' and' → logprob: -2.809781789779663
    5. 'if' → logprob: -3.434781789779663
    6. 'car' → logprob: -3.559781789779663
    7. 'and' → logprob: -3.809781789779663
    8. '       ' → logprob: -5.309782028198242
    9. '    
' → logprob: -7.059782028198242
    10. '
' → logprob: -7.184782028198242

Token 297: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4824243485927582
    2. 'car' → logprob: -1.2324243783950806
    3. ' if' → logprob: -2.857424259185791
    4. 'if' → logprob: -3.482424259185791
    5. ' carrots' → logprob: -6.607424259185791
    6. '       ' → logprob: -7.482424259185791
    7. ' car' → logprob: -7.857424259185791
    8. '```' → logprob: -8.85742473602295
    9. '	car' → logprob: -9.48242473602295
    10. '    
' → logprob: -9.85742473602295

Token 298: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1845507174730301
    2. 'car' → logprob: -1.9345507621765137
    3. ' if' → logprob: -4.184550762176514
    4. '   ' → logprob: -4.809550762176514
    5. '#' → logprob: -8.309550285339355
    6. 'pass' → logprob: -9.309550285339355
    7. ' carrots' → logprob: -9.684550285339355
    8. 'boost' → logprob: -9.809550285339355
    9. '       ' → logprob: -10.184550285339355
    10. '
' → logprob: -10.184550285339355

Token 299: ' carrots' (ID: 91266)
  Prédit: ' carrots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' carrots' → logprob: -0.576799750328064
    2. 'car' → logprob: -0.826799750328064
    3. 'len' → logprob: -7.7017998695373535
    4. 'boost' → logprob: -8.076799392700195
    5. ' len' → logprob: -10.076799392700195
    6. 'c' → logprob: -11.326799392700195
    7. ' carrot' → logprob: -12.076799392700195
    8. ' carot' → logprob: -12.326799392700195
    9. 'kar' → logprob: -12.576799392700195
    10. ' boost' → logprob: -12.701799392700195

Token 300: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0010530536528676748
    2. '<' → logprob: -7.0010528564453125
    3. ' ==' → logprob: -9.126052856445312
    4. ' +' → logprob: -11.751052856445312
    5. ' ' → logprob: -11.876052856445312
    6. '+' → logprob: -12.001052856445312
    7. ' <
' → logprob: -12.501052856445312
    8. ' >' → logprob: -13.376052856445312
    9. '==' → logprob: -13.501052856445312
    10. ')' → logprob: -13.626052856445312

Token 301: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.014163747429847717
    2. ' K' → logprob: -4.264163970947266
    3. ' ' → logprob: -15.889163970947266
    4. '	K' → logprob: -16.264163970947266
    5. '
' → logprob: -17.264163970947266
    6. '   ' → logprob: -17.389163970947266
    7. '1' → logprob: -17.639163970947266
    8. '  ' → logprob: -18.014163970947266
    9. 'k' → logprob: -18.264163970947266
    10. '0' → logprob: -18.514163970947266

Token 302: ':
' (ID: 734)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.66816645860672
    2. ':' → logprob: -1.2931663990020752
    3. ' +' → logprob: -2.043166399002075
    4. ':
' → logprob: -2.543166399002075
    5. '   ' → logprob: -6.043166637420654
    6. ' and' → logprob: -6.918166637420654
    7. ' +=' → logprob: -7.543166637420654
    8. '+:' → logprob: -8.793166160583496
    9. '       ' → logprob: -8.918166160583496
    10. '+=' → logprob: -9.293166160583496

Token 303: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5077052712440491
    2. ' carrots' → logprob: -1.1327052116394043
    3. 'car' → logprob: -2.6327052116394043
    4. '   ' → logprob: -5.882705211639404
    5. '        
' → logprob: -7.507705211639404
    6. '```' → logprob: -9.007705688476562
    7. '+' → logprob: -9.007705688476562
    8. '	car' → logprob: -9.507705688476562
    9. '(car' → logprob: -10.132705688476562
    10. '
' → logprob: -10.257705688476562

Token 304: ' carrots' (ID: 91266)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.10437443852424622
    2. ' carrots' → logprob: -2.354374408721924
    3. '   ' → logprob: -5.854374408721924
    4. '       ' → logprob: -6.729374408721924
    5. '           ' → logprob: -10.354374885559082
    6. '```' → logprob: -10.479374885559082
    7. 'cars' → logprob: -12.479374885559082
    8. '	car' → logprob: -12.479374885559082
    9. '	c' → logprob: -12.729374885559082
    10. ' ' → logprob: -12.979374885559082

Token 305: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3868784010410309
    2. '+=' → logprob: -1.1368783712387085
    3. '+' → logprob: -12.26187801361084
    4. '=' → logprob: -13.13687801361084
    5. ']+=' → logprob: -15.01187801361084
    6. '   ' → logprob: -15.63687801361084
    7. ' +' → logprob: -16.636878967285156
    8. '+="' → logprob: -16.886878967285156
    9. '+='' → logprob: -17.011878967285156
    10. ' =' → logprob: -17.261878967285156

Token 306: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011048054322600365
    2. ' ' → logprob: -4.511047840118408
    3. ' ' → logprob: -16.13604736328125
    4. '0' → logprob: -16.82354736328125
    5. '   ' → logprob: -17.88604736328125
    6. '+' → logprob: -18.19854736328125
    7. '１' → logprob: -18.69854736328125
    8. '2' → logprob: -18.82354736328125
    9. 'car' → logprob: -19.13604736328125
    10. '  ' → logprob: -19.32354736328125

Token 307: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '0' → logprob: -19.750003814697266
    4. '+' → logprob: -20.000003814697266
    5. '<|end|>' → logprob: -20.250003814697266
    6. '```' → logprob: -20.562503814697266
    7. '   ' → logprob: -20.687503814697266
    8. '１' → logprob: -20.812503814697266
    9. '۱' → logprob: -21.062503814697266
    10. 'car' → logprob: -21.312503814697266

Token 308: ' #' (ID: 1069)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.643822193145752
    2. '       ' → logprob: -1.893822193145752
    3. 'else' → logprob: -2.018822193145752
    4. '
' → logprob: -2.143822193145752
    5. '   ' → logprob: -3.393822193145752
    6. '<|end|>' → logprob: -3.768822193145752
    7. ' 
' → logprob: -5.018822193145752
    8. '  
' → logprob: -5.393822193145752
    9. '    
' → logprob: -6.018822193145752
    10. '        
' → logprob: -7.268822193145752

Token 309: ' keep' (ID: 3357)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.7103660106658936
    2. 'else' → logprob: -1.2103660106658936
    3. '       ' → logprob: -2.5853660106658936
    4. ' continue' → logprob: -3.3353660106658936
    5. '#' → logprob: -3.5853660106658936
    6. 'continue' → logprob: -3.5853660106658936
    7. ' #' → logprob: -4.585366249084473
    8. '<|end|>' → logprob: -4.960366249084473
    9. ' pass' → logprob: -5.835366249084473
    10. '           ' → logprob: -5.835366249084473

Token 310: ' carrot' (ID: 121234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 311: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.45509201288223267
    2. '<|end|>' → logprob: -1.205091953277588
    3. '   ' → logprob: -3.580091953277588
    4. ' else' → logprob: -3.830091953277588
    5. 'else' → logprob: -5.330091953277588
    6. '    
' → logprob: -5.580091953277588
    7. '<|end|>' → logprob: -5.580091953277588
    8. '       ' → logprob: -6.455091953277588
    9. '  
' → logprob: -6.830091953277588
    10. ' 
' → logprob: -7.580091953277588

Token 312: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5199226140975952
    2. '       ' → logprob: -1.7699226140975952
    3. ' else' → logprob: -2.1449227333068848
    4. '   ' → logprob: -2.1449227333068848
    5. '<|end|>' → logprob: -7.894922733306885
    6. '```' → logprob: -8.269922256469727
    7. 'elif' → logprob: -9.269922256469727
    8. ')' → logprob: -10.144922256469727
    9. '           ' → logprob: -10.519922256469727
    10. '
' → logprob: -10.644922256469727

Token 313: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.36486002802848816
    2. ' else' → logprob: -1.6148600578308105
    3. '   ' → logprob: -2.2398600578308105
    4. '       ' → logprob: -8.239859580993652
    5. 'elif' → logprob: -11.239859580993652
    6. '```' → logprob: -11.489859580993652
    7. '	else' → logprob: -11.864859580993652
    8. ' elif' → logprob: -12.489859580993652
    9. '<|end|>' → logprob: -12.739859580993652
    10. '           ' → logprob: -13.364859580993652

Token 314: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.055871546268463135
    2. ':' → logprob: -3.1808714866638184
    3. '       ' → logprob: -4.430871486663818
    4. '   ' → logprob: -7.680871486663818
    5. '           ' → logprob: -8.180871963500977
    6. '{
' → logprob: -9.930871963500977
    7. '):
' → logprob: -10.805871963500977
    8. ':

' → logprob: -11.305871963500977
    9. '
' → logprob: -11.430871963500977
    10. '```' → logprob: -11.680871963500977

Token 315: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35708993673324585
    2. 'car' → logprob: -1.6070899963378906
    3. ' carrots' → logprob: -3.1070899963378906
    4. 'boost' → logprob: -3.4820899963378906
    5. ' boost' → logprob: -5.107089996337891
    6. '   ' → logprob: -5.357089996337891
    7. '#' → logprob: -5.857089996337891
    8. '           ' → logprob: -5.857089996337891
    9. 'eat' → logprob: -6.482089996337891
    10. '        ' → logprob: -7.107089996337891

Token 316: ' #' (ID: 1069)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.0593242384493351
    2. 'boost' → logprob: -4.059324264526367
    3. '#' (adapté à ' #') → logprob: -4.184324264526367
    4. 'pass' → logprob: -4.309324264526367
    5. ' carrots' → logprob: -4.809324264526367
    6. ' pass' → logprob: -7.309324264526367
    7. '   ' → logprob: -7.309324264526367
    8. 'eat' → logprob: -7.559324264526367
    9. ' boost' → logprob: -7.809324264526367
    10. 'cars' → logprob: -8.059324264526367

Token 317: ' must' (ID: 2804)
  Prédit: 'eat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eat' → logprob: -0.3080537021160126
    2. 'car' → logprob: -1.808053731918335
    3. ' eat' → logprob: -2.558053731918335
    4. ' carrots' → logprob: -4.433053493499756
    5. '#' → logprob: -5.308053493499756
    6. '   ' → logprob: -6.058053493499756
    7. '       ' → logprob: -6.933053493499756
    8. 'boost' → logprob: -7.058053493499756
    9. '           ' → logprob: -7.308053493499756
    10. 'e' → logprob: -7.933053493499756

Token 318: ' eat' (ID: 11237)
  Prédit: 'eat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eat' → logprob: -0.026340708136558533
    2. ' eat' → logprob: -3.6513407230377197
    3. 'boost' → logprob: -11.40134048461914
    4. '   ' → logprob: -11.52634048461914
    5. 'e' → logprob: -12.27634048461914
    6. 'car' → logprob: -12.65134048461914
    7. '#' → logprob: -12.77634048461914
    8. '```' → logprob: -13.40134048461914
    9. '       ' → logprob: -13.52634048461914
    10. '           ' → logprob: -13.90134048461914

Token 319: ' to' (ID: 316)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.4895230531692505
    2. 'boost' → logprob: -1.7395230531692505
    3. ' boost' → logprob: -2.614522933959961
    4. '           ' → logprob: -2.864522933959961
    5. '   ' → logprob: -3.364522933959961
    6. '       ' → logprob: -3.864522933959961
    7. ' carrots' → logprob: -4.489522933959961
    8. ' carrot' → logprob: -4.864522933959961
    9. ' car' → logprob: -5.739522933959961
    10. '        ' → logprob: -7.614522933959961

Token 320: ' get' (ID: 717)
  Prédit: 'activate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'activate' → logprob: -0.8272753357887268
    2. 'maint' → logprob: -1.577275276184082
    3. 'reset' → logprob: -2.452275276184082
    4. 'refresh' → logprob: -2.577275276184082
    5. 'extend' → logprob: -3.202275276184082
    6. 'start' → logprob: -3.202275276184082
    7. 'boost' → logprob: -3.702275276184082
    8. ' maintain' → logprob: -3.827275276184082
    9. ' activate' → logprob: -4.452275276184082
    10. 'keep' → logprob: -4.827275276184082

Token 321: ' new' (ID: 620)
  Prédit: 'boost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'boost' → logprob: -0.014654668048024178
    2. ' boost' → logprob: -4.389654636383057
    3. 'a' → logprob: -7.389654636383057
    4. 'new' → logprob: -7.389654636383057
    5. 'the' → logprob: -7.639654636383057
    6. ' new' → logprob: -9.014655113220215
    7. ' the' → logprob: -9.514655113220215
    8. ' a' → logprob: -9.889655113220215
    9. '```' → logprob: -10.014655113220215
    10. 'another' → logprob: -10.264655113220215

Token 322: ' boost' (ID: 12110)
  Prédit: 'boost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'boost' → logprob: -0.5233896970748901
    2. ' boost' → logprob: -0.8983896970748901
    3. '```' → logprob: -9.27338981628418
    4. '(boost' → logprob: -9.64838981628418
    5. '	boost' → logprob: -10.02338981628418
    6. '_bo' → logprob: -10.39838981628418
    7. '   ' → logprob: -12.02338981628418
    8. ' ' → logprob: -12.02338981628418
    9. '<boost' → logprob: -12.27338981628418
    10. 'time' → logprob: -12.77338981628418

Token 323: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9602118730545044
    2. '
' → logprob: -1.7102118730545044
    3. ' boost' → logprob: -1.9602118730545044
    4. 'boost' → logprob: -2.085211753845215
    5. ' time' → logprob: -2.335211753845215
    6. '       ' → logprob: -3.960211753845215
    7. 'time' → logprob: -4.085211753845215
    8. '   ' → logprob: -4.960211753845215
    9. '```' → logprob: -5.085211753845215
    10. '               ' → logprob: -5.085211753845215

Token 324: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4980151057243347
    2. ' boost' → logprob: -1.2480151653289795
    3. 'boost' → logprob: -2.4980151653289795
    4. '
' → logprob: -4.6230149269104
    5. '       ' → logprob: -4.8730149269104
    6. '               ' → logprob: -6.4980149269104
    7. '```' → logprob: -7.1230149269104
    8. '   ' → logprob: -7.3730149269104
    9. ' time' → logprob: -7.3730149269104
    10. '	boost' → logprob: -7.9980149269104

Token 325: ' boost' (ID: 12110)
  Prédit: 'boost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'boost' (adapté à ' boost') → logprob: -0.21222354471683502
    2. 'car' → logprob: -1.8372235298156738
    3. ' boost' → logprob: -3.837223529815674
    4. ' carrots' → logprob: -5.337223529815674
    5. '   ' → logprob: -5.712223529815674
    6. 'time' → logprob: -7.462223529815674
    7. '       ' → logprob: -7.587223529815674
    8. '           ' → logprob: -9.149724006652832
    9. '	boost' → logprob: -9.149724006652832
    10. 'cars' → logprob: -9.212224006652832

Token 326: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -8.061054359131958e-06
    2. 'end' → logprob: -12.375007629394531
    3. '_' → logprob: -13.125007629394531
    4. 'End' → logprob: -14.250007629394531
    5. '_time' → logprob: -15.250007629394531
    6. '_END' → logprob: -16.00000762939453
    7. '=' → logprob: -16.00000762939453
    8. '\' → logprob: -16.37500762939453
    9. '=end' → logprob: -16.62500762939453
    10. '_e' → logprob: -17.50000762939453

Token 327: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759615302085876
    2. '=' → logprob: -0.8259615302085876
    3. ' +=' → logprob: -10.825961112976074
    4. '+=' → logprob: -13.325961112976074
    5. ' ' → logprob: -15.075961112976074
    6. ')' → logprob: -16.20096206665039
    7. '+' → logprob: -16.57596206665039
    8. '＝' → logprob: -16.82596206665039
    9. ' +' → logprob: -17.20096206665039
    10. '>' → logprob: -17.45096206665039

Token 328: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.20141343772411346
    2. ' time' → logprob: -1.7014133930206299
    3. '   ' → logprob: -16.701414108276367
    4. '	time' → logprob: -17.076414108276367
    5. '(time' → logprob: -18.076414108276367
    6. ' ' → logprob: -18.451414108276367
    7. '0' → logprob: -18.701414108276367
    8. 'max' → logprob: -19.201414108276367
    9. '"time' → logprob: -19.201414108276367
    10. 'Time' → logprob: -19.201414108276367

Token 329: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.03808968514204025
    2. '+' → logprob: -3.2880897521972656
    3. ' ' → logprob: -10.788089752197266
    4. '<|end|>' → logprob: -10.788089752197266
    5. ' ' → logprob: -12.788089752197266
    6. ' +=' → logprob: -13.788089752197266
    7. ' plus' → logprob: -14.163089752197266
    8. '```' → logprob: -14.413089752197266
    9. ' +
' → logprob: -14.788089752197266
    10. ')' → logprob: -15.038089752197266

Token 330: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.018150178715586662
    2. ' T' → logprob: -4.018150329589844
    3. ' ' → logprob: -15.768150329589844
    4. '   ' → logprob: -16.268150329589844
    5. '	T' → logprob: -16.768150329589844
    6. ' ' → logprob: -18.018150329589844
    7. '  ' → logprob: -18.393150329589844
    8. '*T' → logprob: -19.268150329589844
    9. '```' → logprob: -19.518150329589844
    10. '_T' → logprob: -20.143150329589844

Token 331: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.33702123165130615
    2. '       ' → logprob: -1.9620212316513062
    3. '
' → logprob: -2.5870213508605957
    4. '   ' → logprob: -4.087021350860596
    5. ' +' → logprob: -4.212021350860596
    6. '+' → logprob: -4.587021350860596
    7. '               ' → logprob: -4.587021350860596
    8. ' 
' → logprob: -5.462021350860596
    9. '                   ' → logprob: -6.337021350860596
    10. '+
' → logprob: -6.337021350860596

Token 332: '   ' (ID: 271)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.042335864156484604
    2. '       ' → logprob: -4.1673359870910645
    3. '   ' → logprob: -4.9173359870910645
    4. '
' → logprob: -5.1673359870910645
    5. '```' → logprob: -5.7923359870910645
    6. '            
' → logprob: -6.0423359870910645
    7. '<|end|>' → logprob: -6.6673359870910645
    8. '+' → logprob: -6.9173359870910645
    9. 'car' → logprob: -7.2923359870910645
    10. '  
' → logprob: -7.5423359870910645

Token 333: ' #' (ID: 1069)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.10768654942512512
    2. '   ' → logprob: -3.1076865196228027
    3. ' carrots' → logprob: -3.7326865196228027
    4. '+' → logprob: -3.8576865196228027
    5. '       ' → logprob: -5.857686519622803
    6. '<|end|>' → logprob: -6.357686519622803
    7. '    ' → logprob: -6.982686519622803
    8. '```' → logprob: -6.982686519622803
    9. '++' → logprob: -7.107686519622803
    10. ' car' → logprob: -7.232686519622803

Token 334: ' For' (ID: 2214)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.03984733298420906
    2. ' carrots' → logprob: -3.2898473739624023
    3. '   ' → logprob: -7.664847373962402
    4. 'if' → logprob: -8.039847373962402
    5. ' if' → logprob: -8.164847373962402
    6. ' car' → logprob: -8.914847373962402
    7. '```' → logprob: -8.914847373962402
    8. '       ' → logprob: -9.164847373962402
    9. 'care' → logprob: -9.664847373962402
    10. 'cars' → logprob: -10.414847373962402

Token 335: ' simplicity' (ID: 57516)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.2461087703704834
    2. 'car' → logprob: -1.3711087703704834
    3. ' carrots' → logprob: -1.4961087703704834
    4. ' ' → logprob: -2.4961087703704834
    5. 'i' → logprob: -2.6211087703704834
    6. '_' → logprob: -3.4961087703704834
    7. ' _' → logprob: -3.8711087703704834
    8. 'c' → logprob: -5.6211090087890625
    9. ')' → logprob: -5.7461090087890625
    10. '  ' → logprob: -5.7461090087890625

Token 336: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10225698351860046
    2. 'car' → logprob: -2.477257013320923
    3. ' carrots' → logprob: -5.102256774902344
    4. '<|end|>' → logprob: -5.477256774902344
    5. '       ' → logprob: -6.602256774902344
    6. ',' → logprob: -7.477256774902344
    7. '```' → logprob: -8.852256774902344
    8. '_car' → logprob: -9.102256774902344
    9. ' car' → logprob: -9.102256774902344
    10. '    ' → logprob: -9.477256774902344

Token 337: ' we' (ID: 581)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.18462255597114563
    2. ' carrots' → logprob: -1.8096225261688232
    3. '   ' → logprob: -5.934622764587402
    4. 'if' → logprob: -8.309622764587402
    5. ' if' → logprob: -8.434622764587402
    6. 'speed' → logprob: -8.559622764587402
    7. ' speed' → logprob: -8.684622764587402
    8. ' car' → logprob: -8.684622764587402
    9. '#' → logprob: -8.809622764587402
    10. '       ' → logprob: -9.184622764587402

Token 338: ' do' (ID: 621)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4899580776691437
    2. 'continue' → logprob: -1.8649580478668213
    3. ' continue' → logprob: -2.1149580478668213
    4. '```' → logprob: -3.3649580478668213
    5. '=' → logprob: -3.7399580478668213
    6. 'break' → logprob: -4.6149582862854
    7. '#' → logprob: -4.6149582862854
    8. ' can' → logprob: -5.1149582862854
    9. '    ' → logprob: -5.7399582862854
    10. '       ' → logprob: -6.1149582862854

Token 339: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.2878246307373047
    2. 'continue' → logprob: -2.1628246307373047
    3. ' not' → logprob: -2.5378246307373047
    4. 'n't' → logprob: -3.9128246307373047
    5. 'nt' → logprob: -4.912824630737305
    6. 'break' → logprob: -5.287824630737305
    7. 'car' → logprob: -5.412824630737305
    8. ' continue' → logprob: -5.787824630737305
    9. 'f' → logprob: -6.037824630737305
    10. 'crease' → logprob: -6.287824630737305

Token 340: ' use' (ID: 1199)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.5559841990470886
    2. 'increment' → logprob: -1.6809842586517334
    3. 'track' → logprob: -2.1809842586517334
    4. 'increase' → logprob: -3.0559842586517334
    5. 'print' → logprob: -4.180984020233154
    6. ' track' → logprob: -4.430984020233154
    7. 'count' → logprob: -4.430984020233154
    8. ' update' → logprob: -4.680984020233154
    9. 'implement' → logprob: -5.180984020233154
    10. 'reset' → logprob: -5.180984020233154

Token 341: ' stored' (ID: 16240)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.024774296209216118
    2. 'speed' → logprob: -4.399774074554443
    3. 'the' → logprob: -5.149774074554443
    4. ' carrots' → logprob: -5.274774074554443
    5. ' the' → logprob: -7.899774074554443
    6. ' speed' → logprob: -8.649774551391602
    7. '```' → logprob: -8.649774551391602
    8. 'break' → logprob: -9.899774551391602
    9. 'peed' → logprob: -9.899774551391602
    10. 'a' → logprob: -9.899774551391602

Token 342: ' carrots' (ID: 91266)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.06639613211154938
    2. '_car' → logprob: -2.8163962364196777
    3. ' carrots' → logprob: -5.941396236419678
    4. '_c' → logprob: -7.066396236419678
    5. '_' → logprob: -7.691396236419678
    6. '   ' → logprob: -9.44139575958252
    7. ' ' → logprob: -9.44139575958252
    8. '\n' → logprob: -9.81639575958252
    9. '	car' → logprob: -9.81639575958252
    10. ' car' → logprob: -10.44139575958252

Token 343: ' in' (ID: 306)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 344: ' this' (ID: 495)
  Prédit: 'this'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'this' → logprob: -0.04199346899986267
    2. 'the' → logprob: -3.9169933795928955
    3. 'code' → logprob: -4.291993618011475
    4. ' this' → logprob: -5.291993618011475
    5. 'future' → logprob: -7.041993618011475
    6. ' code' → logprob: -7.541993618011475
    7. 'boost' → logprob: -7.916993618011475
    8. 'any' → logprob: -8.166993141174316
    9. 'time' → logprob: -8.416993141174316
    10. ' the' → logprob: -9.291993141174316

Token 345: ' beginner' (ID: 57062)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 346: ' approach' (ID: 7139)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.03990232199430466
    2. '_code' → logprob: -4.289902210235596
    3. 'code' → logprob: -5.164902210235596
    4. '_' → logprob: -5.289902210235596
    5. '<|end|>' → logprob: -5.664902210235596
    6. 'car' → logprob: -6.414902210235596
    7. '.' → logprob: -6.414902210235596
    8. ' ' → logprob: -6.789902210235596
    9. '```' → logprob: -7.039902210235596
    10. '#' → logprob: -7.164902210235596

Token 347: '

' (ID: 279)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.4559597074985504
    2. '<|end|>' → logprob: -1.455959677696228
    3. ' carrots' → logprob: -3.0809597969055176
    4. '+' → logprob: -3.7059597969055176
    5. '   ' → logprob: -4.080959796905518
    6. ' 
' → logprob: -4.580959796905518
    7. '  
' → logprob: -5.205959796905518
    8. '
' → logprob: -5.580959796905518
    9. '```' → logprob: -5.705959796905518
    10. ' ' → logprob: -5.830959796905518

Token 348: '#' (ID: 2)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.32688382267951965
    2. '+' → logprob: -1.9518837928771973
    3. '<|end|>' → logprob: -2.8268837928771973
    4. '\n' → logprob: -3.4518837928771973
    5. ' carrots' → logprob: -4.076883792877197
    6. '```' → logprob: -5.201883792877197
    7. '\' → logprob: -5.451883792877197
    8. '++' → logprob: -5.701883792877197
    9. '  
' → logprob: -6.201883792877197
    10. '
' → logprob: -6.451883792877197

Token 349: ' After' (ID: 6311)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 350: ' last' (ID: 2174)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.24330729246139526
    2. 'the' → logprob: -1.61830735206604
    3. ' the' → logprob: -4.368307113647461
    4. 'all' → logprob: -6.243307113647461
    5. 'for' → logprob: -6.868307113647461
    6. '#' → logprob: -7.493307113647461
    7. ' print' → logprob: -7.868307113647461
    8. 'time' → logprob: -7.993307113647461
    9. ' completing' → logprob: -8.993307113647461
    10. 'car' → logprob: -9.243307113647461

Token 351: ' carrot' (ID: 121234)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.8569974303245544
    2. 'car' → logprob: -0.8569974303245544
    3. 'print' → logprob: -2.106997489929199
    4. 'position' → logprob: -4.731997489929199
    5. 'distance' → logprob: -5.356997489929199
    6. 'point' → logprob: -5.981997489929199
    7. ' line' → logprob: -6.106997489929199
    8. '_car' → logprob: -6.356997489929199
    9. 'output' → logprob: -6.481997489929199
    10. 'time' → logprob: -6.606997489929199

Token 352: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001316785579547286
    2. 'time' → logprob: -6.751316547393799
    3. ',' → logprob: -9.876317024230957
    4. ' print' → logprob: -10.751317024230957
    5. '#' → logprob: -11.001317024230957
    6. '#print' → logprob: -11.251317024230957
    7. 'if' → logprob: -11.501317024230957
    8. '+' → logprob: -12.501317024230957
    9. 'distance' → logprob: -12.501317024230957
    10. 'total' → logprob: -12.751317024230957

Token 353: ' go' (ID: 810)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006345203728415072
    2. 'time' → logprob: -8.00063419342041
    3. 'pass' → logprob: -8.25063419342041
    4. 'if' → logprob: -11.00063419342041
    5. '#' → logprob: -11.75063419342041
    6. ' print' → logprob: -11.87563419342041
    7. '#print' → logprob: -12.87563419342041
    8. 'total' → logprob: -13.75063419342041
    9. '   ' → logprob: -14.37563419342041
    10. '```' → logprob: -15.00063419342041

Token 354: ' to' (ID: 316)
  Prédit: 'back'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'back' → logprob: -0.17842736840248108
    2. 'home' → logprob: -1.9284273386001587
    3. ' back' → logprob: -4.678427219390869
    4. 'to' → logprob: -5.053427219390869
    5. ' home' → logprob: -6.928427219390869
    6. 'time' → logprob: -7.428427219390869
    7. 'L' → logprob: -7.928427219390869
    8. 'on' → logprob: -9.428427696228027
    9. 'pos' → logprob: -9.553427696228027
    10. 'final' → logprob: -9.553427696228027

Token 355: ' goal' (ID: 8583)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0019819256849586964
    2. '100' → logprob: -6.376981735229492
    3. 'N' → logprob: -9.251981735229492
    4. 'D' → logprob: -10.251981735229492
    5. ' L' → logprob: -10.251981735229492
    6. '0' → logprob: -10.626981735229492
    7. 'position' → logprob: -10.751981735229492
    8. '10' → logprob: -11.626981735229492
    9. 'the' → logprob: -11.751981735229492
    10. '101' → logprob: -11.751981735229492

Token 356: '
' (ID: 198)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.3453125059604645
    2. 'time' → logprob: -1.595312476158142
    3. 'goal' → logprob: -2.7203125953674316
    4. 'D' → logprob: -4.595312595367432
    5. 'G' → logprob: -5.470312595367432
    6. 'distance' → logprob: -5.720312595367432
    7. 'L' → logprob: -5.845312595367432
    8. 'final' → logprob: -6.720312595367432
    9. ' dist' → logprob: -8.220312118530273
    10. 'X' → logprob: -8.970312118530273

Token 357: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.03538273647427559
    2. 'goal' → logprob: -3.7853827476501465
    3. 'time' → logprob: -5.4103827476501465
    4. 'D' → logprob: -5.7853827476501465
    5. 'distance' → logprob: -6.0353827476501465
    6. 'final' → logprob: -6.2853827476501465
    7. 'G' → logprob: -9.035382270812988
    8. 'L' → logprob: -10.535382270812988
    9. 'if' → logprob: -10.910382270812988
    10. ' dist' → logprob: -10.910382270812988

Token 358: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1427597850561142
    2. ' =' → logprob: -2.0177597999572754
    3. '_goal' → logprob: -10.392759323120117
    4. 'goal' → logprob: -11.392759323120117
    5. 'final' → logprob: -11.892759323120117
    6. '_to' → logprob: -12.267759323120117
    7. ' ' → logprob: -12.767759323120117
    8. '=end' → logprob: -12.767759323120117
    9. '_go' → logprob: -12.892759323120117
    10. '=L' → logprob: -13.267759323120117

Token 359: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.00029744720086455345
    2. ' L' → logprob: -8.125297546386719
    3. ' ' → logprob: -13.875297546386719
    4. '	L' → logprob: -15.875297546386719
    5. '  ' → logprob: -16.00029754638672
    6. '   ' → logprob: -16.50029754638672
    7. '(L' → logprob: -17.25029754638672
    8. 'D' → logprob: -17.50029754638672
    9. 'int' → logprob: -17.87529754638672
    10. 'K' → logprob: -17.87529754638672

Token 360: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20141461491584778
    2. ' -' → logprob: -1.7014145851135254
    3. '-pos' → logprob: -13.701415061950684
    4. ' ' → logprob: -16.701414108276367
    5. 'pos' → logprob: -16.951414108276367
    6. '−' → logprob: -17.076414108276367
    7. ' ' → logprob: -17.326414108276367
    8. '-position' → logprob: -17.451414108276367
    9. '   ' → logprob: -18.326414108276367
    10. '```' → logprob: -18.326414108276367

Token 361: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -2.935296834039036e-06
    2. 'D' → logprob: -13.12500286102295
    3. ' pos' → logprob: -14.00000286102295
    4. '	pos' → logprob: -20.625003814697266
    5. '(pos' → logprob: -20.750003814697266
    6. '   ' → logprob: -21.000003814697266
    7. 'position' → logprob: -21.750003814697266
    8. ' D' → logprob: -21.750003814697266
    9. 'Pos' → logprob: -21.875003814697266
    10. '[pos' → logprob: -22.000003814697266

Token 362: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1036791056394577
    2. 'time' → logprob: -2.3536791801452637
    3. 'remaining' → logprob: -6.103679180145264
    4. ' if' → logprob: -7.353679180145264
    5. '
' → logprob: -8.603678703308105
    6. '```' → logprob: -8.728678703308105
    7. '   ' → logprob: -9.228678703308105
    8. '+' → logprob: -10.103678703308105
    9. ' time' → logprob: -10.728678703308105
    10. '``' → logprob: -11.228678703308105

Token 363: 'remaining' (ID: 83570)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11324700713157654
    2. 'remaining' → logprob: -2.4882469177246094
    3. 'time' → logprob: -3.7382469177246094
    4. ' if' → logprob: -9.61324691772461
    5. '```' → logprob: -9.61324691772461
    6. '#' → logprob: -10.86324691772461
    7. 'boost' → logprob: -10.98824691772461
    8. '   ' → logprob: -11.23824691772461
    9. ' remaining' → logprob: -11.48824691772461
    10. 'If' → logprob: -11.73824691772461

Token 364: '_bo' (ID: 104368)
  Prédit: '_bo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bo' → logprob: -7.350386295001954e-05
    2. 'boost' → logprob: -10.000073432922363
    3. '_' → logprob: -10.875073432922363
    4. '_time' → logprob: -11.750073432922363
    5. '_dist' → logprob: -15.375073432922363
    6. '_distance' → logprob: -16.00007438659668
    7. 'time' → logprob: -16.00007438659668
    8. '_BO' → logprob: -16.25007438659668
    9. 'Boost' → logprob: -16.37507438659668
    10. '_speed' → logprob: -16.37507438659668

Token 365: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -3.9888433093437925e-05
    2. 'st' → logprob: -10.375040054321289
    3. 'ост' → logprob: -12.750040054321289
    4. 'o' → logprob: -13.500040054321289
    5. 'ast' → logprob: -14.250040054321289
    6. 'ust' → logprob: -14.625040054321289
    7. ' ost' → logprob: -14.750040054321289
    8. '=' → logprob: -15.000040054321289
    9. '...' → logprob: -15.250040054321289
    10. '```' → logprob: -15.625040054321289

Token 366: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192973017692566
    2. ' =' → logprob: -1.501929759979248
    3. '   ' → logprob: -15.62692928314209
    4. '_' → logprob: -16.126930236816406
    5. ' ' → logprob: -16.501930236816406
    6. '>' → logprob: -16.626930236816406
    7. ',' → logprob: -17.751930236816406
    8. '```' → logprob: -17.876930236816406
    9. '_time' → logprob: -18.251930236816406
    10. '_=' → logprob: -18.626930236816406

Token 367: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.004078401252627373
    2. ' max' → logprob: -5.504078388214111
    3. '0' → logprob: -16.754077911376953
    4. '(max' → logprob: -19.379077911376953
    5. 'min' → logprob: -19.629077911376953
    6. ' ' → logprob: -19.879077911376953
    7. '	max' → logprob: -20.129077911376953
    8. 'boost' → logprob: -20.254077911376953
    9. ' ' → logprob: -21.004077911376953
    10. '[max' → logprob: -21.129077911376953

Token 368: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0017031522002071142
    2. '0' → logprob: -6.376703262329102
    3. '(boost' → logprob: -14.751703262329102
    4. 'boost' → logprob: -15.501703262329102
    5. ' (' → logprob: -15.751703262329102
    6. '(
' → logprob: -15.876703262329102
    7. 'remaining' → logprob: -16.7517032623291
    8. ' ' → logprob: -17.3767032623291
    9. '```' → logprob: -17.8767032623291
    10. '{' → logprob: -18.2517032623291

Token 369: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002871993638109416
    2. '(' → logprob: -8.250287055969238
    3. 'boost' → logprob: -10.750287055969238
    4. '(boost' → logprob: -13.000287055969238
    5. ' ' → logprob: -13.250287055969238
    6. '```' → logprob: -15.750287055969238
    7. ')' → logprob: -16.500288009643555
    8. '

' → logprob: -17.875288009643555
    9. '
' → logprob: -18.000288009643555
    10. '[' → logprob: -18.187788009643555

Token 370: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.008817004971206188
    2. '0' → logprob: -5.008817195892334
    3. ',' → logprob: -6.258817195892334
    4. '(' → logprob: -9.008816719055176
    5. '```' → logprob: -10.883816719055176
    6. ')' → logprob: -11.383816719055176
    7. ' .' → logprob: -11.758816719055176
    8. ' ' → logprob: -12.633816719055176
    9. ' ,' → logprob: -12.883816719055176
    10. '-' → logprob: -12.883816719055176

Token 371: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020699729793705046
    2. 'boost' → logprob: -9.37520694732666
    3. ',' → logprob: -9.87520694732666
    4. 'float' → logprob: -10.12520694732666
    5. '.' → logprob: -11.37520694732666
    6. ' ' → logprob: -11.62520694732666
    7. ')' → logprob: -12.87520694732666
    8. '```' → logprob: -13.50020694732666
    9. 'time' → logprob: -14.37520694732666
    10. '(' → logprob: -14.62520694732666

Token 372: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3782830137643032e-05
    2. ' ,' → logprob: -12.00001335144043
    3. 'boost' → logprob: -12.25001335144043
    4. '(boost' → logprob: -13.50001335144043
    5. ',
' → logprob: -14.50001335144043
    6. ')' → logprob: -15.25001335144043
    7. ',b' → logprob: -15.25001335144043
    8. '(' → logprob: -15.62501335144043
    9. '(),' → logprob: -17.12501335144043
    10. ' boost' → logprob: -17.12501335144043

Token 373: ' boost' (ID: 12110)
  Prédit: 'boost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'boost' → logprob: -0.007613136898726225
    2. ' boost' → logprob: -4.882613182067871
    3. '(boost' → logprob: -12.132613182067871
    4. '	boost' → logprob: -14.882613182067871
    5. '   ' → logprob: -15.257613182067871
    6. 'bo' → logprob: -15.382613182067871
    7. '<boost' → logprob: -15.632613182067871
    8. ' ' → logprob: -16.007612228393555
    9. 'boot' → logprob: -16.507612228393555
    10. 'b' → logprob: -16.882612228393555

Token 374: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.001200827769935131
    2. 'boost' → logprob: -6.8762006759643555
    3. 'end' → logprob: -8.751200675964355
    4. 'End' → logprob: -12.626200675964355
    5. '_' → logprob: -13.126200675964355
    6. 'e' → logprob: -14.376200675964355
    7. '```' → logprob: -14.376200675964355
    8. '-' → logprob: -14.501200675964355
    9. 'ost' → logprob: -14.876200675964355
    10. '_out' → logprob: -15.126200675964355

Token 375: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.038042064756155014
    2. '-' → logprob: -3.2880420684814453
    3. ' ' → logprob: -15.163042068481445
    4. '-time' → logprob: -15.538042068481445
    5. ' ' → logprob: -16.413042068481445
    6. '-code' → logprob: -18.538042068481445
    7. '−' → logprob: -18.663042068481445
    8. ')' → logprob: -19.163042068481445
    9. '```' → logprob: -19.413042068481445
    10. '-length' → logprob: -19.538042068481445

Token 376: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.011048170737922192
    2. ' time' → logprob: -4.511048316955566
    3. '"time' → logprob: -16.38604736328125
    4. '	time' → logprob: -16.88604736328125
    5. 't' → logprob: -17.63604736328125
    6. ')' → logprob: -17.63604736328125
    7. '_time' → logprob: -18.13604736328125
    8. '=time' → logprob: -18.13604736328125
    9. '(time' → logprob: -18.26104736328125
    10. '   ' → logprob: -18.26104736328125

Token 377: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20148077607154846
    2. ')
' → logprob: -1.701480746269226
    3. ')
' → logprob: -9.701480865478516
    4. '   ' → logprob: -12.701480865478516
    5. ')

' → logprob: -13.326480865478516
    6. 'time' → logprob: -14.701480865478516
    7. ' )
' → logprob: -15.201480865478516
    8. 'if' → logprob: -15.326480865478516
    9. ' )' → logprob: -15.451480865478516
    10. '#' → logprob: -15.951480865478516

Token 378: 'boost' (ID: 31440)
  Prédit: 'boost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'boost' → logprob: -0.1636328548192978
    2. 'if' → logprob: -1.913632869720459
    3. '#' → logprob: -6.163632869720459
    4. '   ' → logprob: -7.413632869720459
    5. ' if' → logprob: -8.6636323928833
    6. 'bo' → logprob: -8.7886323928833
    7. '```' → logprob: -8.7886323928833
    8. ' boosted' → logprob: -9.6636323928833
    9. 'car' → logprob: -11.0386323928833
    10. 'Boost' → logprob: -11.4136323928833

Token 379: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.015207440592348576
    2. '_dist' → logprob: -4.515207290649414
    3. '_end' → logprob: -5.515207290649414
    4. '_ed' → logprob: -10.640207290649414
    5. '_remaining' → logprob: -10.765207290649414
    6. 'ED' → logprob: -11.015207290649414
    7. 'd' → logprob: -11.390207290649414
    8. '_distance' → logprob: -11.390207290649414
    9. 'dist' → logprob: -11.640207290649414
    10. '_' → logprob: -12.015207290649414

Token 380: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -9.221884101862088e-05
    2. 'dist' → logprob: -9.375092506408691
    3. '_distance' → logprob: -12.375092506408691
    4. '_d' → logprob: -14.000092506408691
    5. 'Dist' → logprob: -14.375092506408691
    6. 'ed' → logprob: -14.750092506408691
    7. '_' → logprob: -15.375092506408691
    8. '_time' → logprob: -15.750092506408691
    9. '	dist' → logprob: -16.250091552734375
    10. 'd' → logprob: -16.375091552734375

Token 381: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3289412260055542
    2. ' =' → logprob: -1.4539412260055542
    3. ' *' → logprob: -3.4539413452148438
    4. '*' → logprob: -4.203941345214844
    5. '*=' → logprob: -10.078941345214844
    6. ')' → logprob: -10.953941345214844
    7. '>' → logprob: -11.078941345214844
    8. ' *=' → logprob: -11.828941345214844
    9. '<|end|>' → logprob: -11.828941345214844
    10. '#' → logprob: -12.328941345214844

Token 382: ' remaining' (ID: 15448)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.01815076172351837
    2. ' remaining' → logprob: -4.018150806427002
    3. '   ' → logprob: -14.268150329589844
    4. ' ' → logprob: -17.143150329589844
    5. 'rem' → logprob: -17.518150329589844
    6. 'remain' → logprob: -17.518150329589844
    7. '_remaining' → logprob: -17.768150329589844
    8. 'boost' → logprob: -17.893150329589844
    9. '.remaining' → logprob: -17.893150329589844
    10. 'Remaining' → logprob: -18.268150329589844

Token 383: '_bo' (ID: 104368)
  Prédit: '_bo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bo' → logprob: -0.023249439895153046
    2. 'boost' → logprob: -3.773249387741089
    3. '_dist' → logprob: -13.023249626159668
    4. 'Boost' → logprob: -13.773249626159668
    5. '	boost' → logprob: -15.273249626159668
    6. '_boot' → logprob: -16.02324867248535
    7. '(boost' → logprob: -16.39824867248535
    8. 'dist' → logprob: -16.52324867248535
    9. 'ost' → logprob: -17.02324867248535
    10. ' boost' → logprob: -17.14824867248535

Token 384: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.0023569755721837282
    2. 'ust' → logprob: -7.127357006072998
    3. 'st' → logprob: -7.377357006072998
    4. 'remaining' → logprob: -7.752357006072998
    5. 'o' → logprob: -8.50235652923584
    6. '_remaining' → logprob: -9.75235652923584
    7. 'rost' → logprob: -9.87735652923584
    8. 'oot' → logprob: -10.37735652923584
    9. 'rest' → logprob: -10.62735652923584
    10. 'ot' → logprob: -11.00235652923584

Token 385: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6931503415107727
    2. ' *' → logprob: -0.6931503415107727
    3. ' ' → logprob: -13.068150520324707
    4. ' ' → logprob: -14.443150520324707
    5. '```' → logprob: -15.568150520324707
    6. '=' → logprob: -16.94314956665039
    7. '#' → logprob: -17.56814956665039
    8. ')' → logprob: -17.81814956665039
    9. '`' → logprob: -17.81814956665039
    10. '*object' → logprob: -17.94314956665039

Token 386: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -4.56102097814437e-05
    2. ' V' → logprob: -10.000045776367188
    3. '   ' → logprob: -17.125045776367188
    4. 'speed' → logprob: -17.125045776367188
    5. '	V' → logprob: -17.875045776367188
    6. '
' → logprob: -18.625045776367188
    7. '```' → logprob: -18.625045776367188
    8. 'v' → logprob: -19.875045776367188
    9. ' ' → logprob: -20.000045776367188
    10. '[V' → logprob: -20.625045776367188

Token 387: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0013327404158189893
    2. ' if' → logprob: -6.626332759857178
    3. 'time' → logprob: -12.87633228302002
    4. '```' → logprob: -13.62633228302002
    5. 'If' → logprob: -13.75133228302002
    6. '   ' → logprob: -14.00133228302002
    7. '<|end|>' → logprob: -15.37633228302002
    8. '+' → logprob: -15.75133228302002
    9. 'dist' → logprob: -15.87633228302002
    10. '=' → logprob: -16.251333236694336

Token 388: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -6.861651490908116e-05
    2. ' if' → logprob: -9.625068664550781
    3. 'If' → logprob: -13.625068664550781
    4. '```' → logprob: -14.500068664550781
    5. ';if' → logprob: -15.000068664550781
    6. '<|end|>' → logprob: -15.875068664550781
    7. 'time' → logprob: -16.62506866455078
    8. '   ' → logprob: -16.62506866455078
    9. 'distance' → logprob: -17.75006866455078
    10. 'ifs' → logprob: -18.00006866455078

Token 389: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.1002078503370285
    2. ' dist' → logprob: -2.350207805633545
    3. '	dist' → logprob: -14.100208282470703
    4. '(dist' → logprob: -14.975208282470703
    5. 'Dist' → logprob: -16.975208282470703
    6. '_dist' → logprob: -16.975208282470703
    7. '   ' → logprob: -17.100208282470703
    8. '.dist' → logprob: -17.100208282470703
    9. 'boost' → logprob: -17.100208282470703
    10. 'd' → logprob: -18.725208282470703

Token 390: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.10020839422941208
    2. '<=' → logprob: -2.350208282470703
    3. '>' → logprob: -14.350208282470703
    4. ' >' → logprob: -14.600208282470703
    5. ' >=' → logprob: -15.100208282470703
    6. '>=' → logprob: -15.725208282470703
    7. ' <' → logprob: -16.475208282470703
    8. ')<=' → logprob: -17.100208282470703
    9. '<' → logprob: -17.225208282470703
    10. ' ' → logprob: -17.350208282470703

Token 391: ' boosted' (ID: 111352)
  Prédit: 'boost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'boost' → logprob: -0.009763998910784721
    2. ' boosted' → logprob: -4.634764194488525
    3. ' boost' → logprob: -13.259763717651367
    4. '(boost' → logprob: -13.259763717651367
    5. 'bo' → logprob: -13.384763717651367
    6. '	boost' → logprob: -14.134763717651367
    7. '```' → logprob: -15.134763717651367
    8. '<boost' → logprob: -15.134763717651367
    9. '   ' → logprob: -15.259763717651367
    10. ' ' → logprob: -15.259763717651367

Token 392: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.002958565717563033
    2. 'ist' → logprob: -6.00295877456665
    3. 'boost' → logprob: -7.75295877456665
    4. 'dist' → logprob: -10.002958297729492
    5. '_bo' → logprob: -12.502958297729492
    6. 'isted' → logprob: -12.877958297729492
    7. 'ists' → logprob: -15.252958297729492
    8. '_DIST' → logprob: -15.752958297729492
    9. 'ed' → logprob: -15.877958297729492
    10. '	dist' → logprob: -15.877958297729492

Token 393: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5761763453483582
    2. ':' → logprob: -0.8261763453483582
    3. '   ' → logprob: -8.451176643371582
    4. ':
' → logprob: -11.951176643371582
    5. '):
' → logprob: -12.076176643371582
    6. ':

' → logprob: -13.326176643371582
    7. '{
' → logprob: -13.326176643371582
    8. ' and' → logprob: -13.576176643371582
    9. '):' → logprob: -13.576176643371582
    10. ':\' → logprob: -13.826176643371582

Token 394: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05051187053322792
    2. 'time' → logprob: -3.1755118370056152
    3. ' time' → logprob: -5.175511837005615
    4. '       ' → logprob: -6.550511837005615
    5. '
' → logprob: -8.175512313842773
    6. '	time' → logprob: -10.050512313842773
    7. '{
' → logprob: -10.425512313842773
    8. '```' → logprob: -10.675512313842773
    9. '"time' → logprob: -12.050512313842773
    10. '    
' → logprob: -12.300512313842773

Token 395: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' (adapté à ' time') → logprob: -0.044766075909137726
    2. '   ' → logprob: -3.5447661876678467
    3. ' time' → logprob: -4.544765949249268
    4. '
' → logprob: -5.669765949249268
    5. '       ' → logprob: -7.919765949249268
    6. '\n' → logprob: -8.419766426086426
    7. '\' → logprob: -9.669766426086426
    8. '	time' → logprob: -9.794766426086426
    9. '"time' → logprob: -10.294766426086426
    10. '```' → logprob: -11.169766426086426

Token 396: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3132992684841156
    2. ' +=' → logprob: -1.313299298286438
    3. '+' → logprob: -10.313299179077148
    4. '=' → logprob: -13.188299179077148
    5. '+="' → logprob: -14.438299179077148
    6. '+=(' → logprob: -14.438299179077148
    7. ']+=' → logprob: -14.813299179077148
    8. '+='' → logprob: -15.063299179077148
    9. ' +' → logprob: -15.438299179077148
    10. '```' → logprob: -15.438299179077148

Token 397: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00861468818038702
    2. ' dist' → logprob: -4.758614540100098
    3. '	dist' → logprob: -16.633615493774414
    4. '(dist' → logprob: -18.133615493774414
    5. '   ' → logprob: -18.633615493774414
    6. '_dist' → logprob: -19.758615493774414
    7. '.dist' → logprob: -20.758615493774414
    8. ' ' → logprob: -22.383615493774414
    9. 'Dist' → logprob: -22.883615493774414
    10. '```' → logprob: -22.883615493774414

Token 398: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.4740898311138153
    2. ' /' → logprob: -0.9740898609161377
    3. '/V' → logprob: -11.349089622497559
    4. ' ' → logprob: -14.224089622497559
    5. ' ' → logprob: -15.724089622497559
    6. '   ' → logprob: -16.724090576171875
    7. '/
' → logprob: -17.599090576171875
    8. ' /
' → logprob: -18.036590576171875
    9. '/v' → logprob: -18.099090576171875
    10. '*' → logprob: -18.099090576171875

Token 399: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -8.494741632603109e-05
    2. ' V' → logprob: -9.37508487701416
    3. '   ' → logprob: -19.000085830688477
    4. '	V' → logprob: -19.125085830688477
    5. '```' → logprob: -19.750085830688477
    6. ' ' → logprob: -20.000085830688477
    7. ')V' → logprob: -21.375085830688477
    8. '_V' → logprob: -21.500085830688477
    9. ' ' → logprob: -21.625085830688477
    10. '`' → logprob: -22.125085830688477

Token 400: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.017758404836058617
    2. ' else' → logprob: -4.142758369445801
    3. '   ' → logprob: -7.142758369445801
    4. '```' → logprob: -7.892758369445801
    5. '
' → logprob: -8.2677583694458
    6. 'elif' → logprob: -9.7677583694458
    7. '    
' → logprob: -10.0177583694458
    8. '<|end|>' → logprob: -10.1427583694458
    9. '\n' → logprob: -10.3927583694458
    10. ')' → logprob: -10.5177583694458

Token 401: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.002191660227254033
    2. ' else' → logprob: -6.127191543579102
    3. '   ' → logprob: -12.377191543579102
    4. '```' → logprob: -13.252191543579102
    5. 'elif' → logprob: -14.877191543579102
    6. '	else' → logprob: -16.0021915435791
    7. '}else' → logprob: -16.6271915435791
    8. '{
' → logprob: -17.3771915435791
    9. '_else' → logprob: -17.8771915435791
    10. ')' → logprob: -18.5021915435791

Token 402: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045229434967041016
    2. ':' → logprob: -4.045229434967041
    3. ' time' → logprob: -4.045229434967041
    4. 'time' → logprob: -5.545229434967041
    5. ':
' → logprob: -5.545229434967041
    6. '    ' → logprob: -6.920229434967041
    7. '
' → logprob: -8.920228958129883
    8. '  ' → logprob: -9.670228958129883
    9. '```' → logprob: -10.295228958129883
    10. ' ' → logprob: -10.670228958129883

Token 403: '   ' (ID: 271)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.10629396140575409
    2. '   ' → logprob: -2.3562939167022705
    3. ' time' → logprob: -5.10629415512085
    4. '
' → logprob: -12.981293678283691
    5. '	time' → logprob: -13.106293678283691
    6. '  ' → logprob: -13.606293678283691
    7. ' ' → logprob: -14.106293678283691
    8. 'remaining' → logprob: -14.106293678283691
    9. '    ' → logprob: -14.231293678283691
    10. '       ' → logprob: -14.606293678283691

Token 404: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' (adapté à ' time') → logprob: -0.0021597796585410833
    2. '   ' → logprob: -6.377159595489502
    3. ' time' → logprob: -7.752159595489502
    4. 'remaining' → logprob: -10.75216007232666
    5. 'if' → logprob: -13.37716007232666
    6. '```' → logprob: -13.75216007232666
    7. '	time' → logprob: -14.37716007232666
    8. 'boost' → logprob: -14.75216007232666
    9. '
' → logprob: -14.75216007232666
    10. 'times' → logprob: -14.87716007232666

Token 405: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0788949653506279
    2. ' +=' → logprob: -2.578894853591919
    3. '+' → logprob: -12.32889461517334
    4. '=' → logprob: -15.32889461517334
    5. ']+=' → logprob: -15.32889461517334
    6. '+=(' → logprob: -15.45389461517334
    7. '[' → logprob: -16.453895568847656
    8. 'plus' → logprob: -17.828895568847656
    9. '-=' → logprob: -17.953895568847656
    10. '+='' → logprob: -18.078895568847656

Token 406: ' remaining' (ID: 15448)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.03624409809708595
    2. '(' → logprob: -3.5362441539764404
    3. 'dist' → logprob: -6.036243915557861
    4. 'boost' → logprob: -6.161243915557861
    5. '(boost' → logprob: -7.286243915557861
    6. '(dist' → logprob: -7.536243915557861
    7. ' remaining' → logprob: -7.536243915557861
    8. '((' → logprob: -9.91124439239502
    9. ' (' → logprob: -10.03624439239502
    10. 'time' → logprob: -10.78624439239502

Token 407: '_bo' (ID: 104368)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.23378105461597443
    2. '_bo' → logprob: -1.983781099319458
    3. 'boost' → logprob: -3.233781099319458
    4. 'dist' → logprob: -3.483781099319458
    5. '/' → logprob: -8.358780860900879
    6. '/U' → logprob: -9.108780860900879
    7. ' dist' → logprob: -9.483780860900879
    8. '/dist' → logprob: -9.608780860900879
    9. '/K' → logprob: -9.608780860900879
    10. ' /' → logprob: -10.108780860900879

Token 408: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.02194049395620823
    2. 'st' → logprob: -4.1469407081604
    3. '_dist' → logprob: -5.6469407081604
    4. 'dist' → logprob: -7.0219407081604
    5. 'boost' → logprob: -7.3969407081604
    6. 'o' → logprob: -8.771940231323242
    7. 'ast' → logprob: -8.896940231323242
    8. 'rest' → logprob: -9.021940231323242
    9. 'ist' → logprob: -9.396940231323242
    10. 'ust' → logprob: -9.771940231323242

Token 409: '
' (ID: 198)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.24239474534988403
    2. '+' → logprob: -1.6173946857452393
    3. '   ' → logprob: -4.867394924163818
    4. ' dist' → logprob: -5.742394924163818
    5. 'dist' → logprob: -5.742394924163818
    6. '    ' → logprob: -6.117394924163818
    7. ' ' → logprob: -8.86739444732666
    8. ' time' → logprob: -9.61739444732666
    9. '```' → logprob: -9.86739444732666
    10. '
' → logprob: -10.36739444732666

Token 410: '   ' (ID: 271)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.6649811863899231
    2. 'dist' → logprob: -1.0399811267852783
    3. '+' → logprob: -2.6649811267852783
    4. ' time' → logprob: -3.9149811267852783
    5. 'time' → logprob: -4.039981365203857
    6. ' +' → logprob: -4.289981365203857
    7. '   ' → logprob: -5.164981365203857
    8. '    ' → logprob: -5.539981365203857
    9. '```' → logprob: -7.414981365203857
    10. ' ' → logprob: -7.664981365203857

Token 411: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.0002346488763578236
    2. ' dist' → logprob: -8.375234603881836
    3. '   ' → logprob: -12.875234603881836
    4. '(dist' → logprob: -14.250234603881836
    5. 'time' → logprob: -14.500234603881836
    6. '_dist' → logprob: -16.125234603881836
    7. '	dist' → logprob: -16.250234603881836
    8. 'distance' → logprob: -16.750234603881836
    9. 'speed' → logprob: -17.000234603881836
    10. 'Dist' → logprob: -17.750234603881836

Token 412: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.02999970316886902
    2. ' -=' → logprob: -3.5299997329711914
    3. '-' → logprob: -8.654999732971191
    4. '=' → logprob: -10.029999732971191
    5. '   ' → logprob: -10.779999732971191
    6. '```' → logprob: -11.904999732971191
    7. '  ' → logprob: -13.529999732971191
    8. ' ' → logprob: -14.779999732971191
    9. '+=' → logprob: -14.904999732971191
    10. '>' → logprob: -14.904999732971191

Token 413: ' boosted' (ID: 111352)
  Prédit: 'boost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'boost' → logprob: -0.7003394961357117
    2. 'remaining' → logprob: -1.0753395557403564
    3. 'dist' → logprob: -2.7003395557403564
    4. 'V' → logprob: -3.2003395557403564
    5. '(V' → logprob: -3.8253395557403564
    6. '(U' → logprob: -4.200339317321777
    7. '(boost' → logprob: -5.075339317321777
    8. '   ' → logprob: -5.825339317321777
    9. 'U' → logprob: -6.075339317321777
    10. ' remaining' → logprob: -6.075339317321777

Token 414: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.034001000225543976
    2. 'boost' → logprob: -3.409001111984253
    3. 'dist' → logprob: -8.659001350402832
    4. '_bo' → logprob: -8.784001350402832
    5. 'ist' → logprob: -10.909001350402832
    6. 'Boost' → logprob: -12.534001350402832
    7. '	boost' → logprob: -13.534001350402832
    8. 'Dist' → logprob: -13.784001350402832
    9. ' boosted' → logprob: -13.909001350402832
    10. 'ed' → logprob: -14.409001350402832

Token 415: '
' (ID: 198)
  Prédit: ' time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.21319271624088287
    2. 'time' → logprob: -1.9631927013397217
    3. ' /' → logprob: -3.2131927013397217
    4. '/' → logprob: -4.588192939758301
    5. ' U' → logprob: -7.963192939758301
    6. '   ' → logprob: -8.0881929397583
    7. ' dist' → logprob: -8.8381929397583
    8. '/U' → logprob: -9.5881929397583
    9. 'dist' → logprob: -9.9631929397583
    10. '    ' → logprob: -10.2131929397583

Token 416: '   ' (ID: 271)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.3871273100376129
    2. ' time' → logprob: -1.1371272802352905
    3. ' /' → logprob: -9.387126922607422
    4. '/' → logprob: -10.012126922607422
    5. '   ' → logprob: -10.137126922607422
    6. '*time' → logprob: -11.012126922607422
    7. ' ' → logprob: -11.262126922607422
    8. '+' → logprob: -11.512126922607422
    9. '	time' → logprob: -11.512126922607422
    10. '```' → logprob: -12.262126922607422

Token 417: ' time' (ID: 1058)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00024763107649050653
    2. ' dist' → logprob: -8.750247955322266
    3. 'time' (adapté à ' time') → logprob: -9.375247955322266
    4. '   ' → logprob: -12.500247955322266
    5. '	dist' → logprob: -15.750247955322266
    6. ' time' → logprob: -16.375247955322266
    7. '```' → logprob: -16.750247955322266
    8. '_dist' → logprob: -16.750247955322266
    9. '.dist' → logprob: -17.375247955322266
    10. '(dist' → logprob: -17.500247955322266

Token 418: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1269427090883255
    2. ' +=' → logprob: -2.1269426345825195
    3. '/=' → logprob: -11.87694263458252
    4. '+' → logprob: -13.37694263458252
    5. '+=(' → logprob: -13.37694263458252
    6. ']+=' → logprob: -13.62694263458252
    7. ' /=' → logprob: -13.75194263458252
    8. '   ' → logprob: -14.25194263458252
    9. '=' → logprob: -14.75194263458252
    10. '+='' → logprob: -15.25194263458252

Token 419: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.023246755823493004
    2. ' dist' → logprob: -3.7732467651367188
    3. '	dist' → logprob: -14.398246765136719
    4. '(dist' → logprob: -14.898246765136719
    5. '.dist' → logprob: -15.648246765136719
    6. '_dist' → logprob: -15.898246765136719
    7. ' ' → logprob: -18.52324676513672
    8. 'd' → logprob: -18.64824676513672
    9. '   ' → logprob: -18.77324676513672
    10. 'Dist' → logprob: -19.27324676513672

Token 420: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.28116080164909363
    2. ' /' → logprob: -1.406160831451416
    3. ' ' → logprob: -13.406160354614258
    4. '```' → logprob: -13.531160354614258
    5. '"' → logprob: -13.781160354614258
    6. ' ' → logprob: -13.906160354614258
    7. '   ' → logprob: -14.156160354614258
    8. '`' → logprob: -14.531160354614258
    9. '/U' → logprob: -14.656160354614258
    10. ' /
' → logprob: -14.781160354614258

Token 421: ' U' (ID: 601)
  Prédit: 'U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.0005558936391025782
    2. ' U' → logprob: -7.500555992126465
    3. '	U' → logprob: -13.250555992126465
    4. '   ' → logprob: -15.000555992126465
    5. '_U' → logprob: -15.875555992126465
    6. ' ' → logprob: -15.875555992126465
    7. '<U' → logprob: -16.12555503845215
    8. '<|end|>' → logprob: -16.25055503845215
    9. '```' → logprob: -16.50055503845215
    10. 'speed' → logprob: -16.75055503845215

Token 422: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0008516783127561212
    2. '
' → logprob: -7.375851631164551
    3. ' print' → logprob: -9.12585163116455
    4. '<|end|>' → logprob: -9.75085163116455
    5. '
' → logprob: -10.37585163116455
    6. '```' → logprob: -12.37585163116455
    7. '#' → logprob: -12.62585163116455
    8. ' 
' → logprob: -12.62585163116455
    9. '#print' → logprob: -12.87585163116455
    10. '    
' → logprob: -12.87585163116455

Token 423: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.000610690622124821
    2. 'car' → logprob: -8.1256103515625
    3. ' print' → logprob: -9.0006103515625
    4. '```' → logprob: -9.3756103515625
    5. '<|end|>' → logprob: -9.6256103515625
    6. '+' → logprob: -11.3756103515625
    7. '\' → logprob: -11.5006103515625
    8. '\n' → logprob: -12.0006103515625
    9. '#' → logprob: -12.8756103515625
    10. 'return' → logprob: -13.3756103515625

Token 424: '(time' (ID: 19192)
  Prédit: '(time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(time' → logprob: -0.0622716099023819
    2. '(' → logprob: -2.8122715950012207
    3. '(round' → logprob: -8.312272071838379
    4. '(int' → logprob: -10.437272071838379
    5. '()' → logprob: -11.812272071838379
    6. '(f' → logprob: -11.937272071838379
    7. '("("' → logprob: -12.562272071838379
    8. ' (' → logprob: -13.187272071838379
    9. '((' → logprob: -13.187272071838379
    10. '('' → logprob: -13.312272071838379

Token 425: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. '())' → logprob: -14.250001907348633
    3. '()' → logprob: -14.500001907348633
    4. ' )' → logprob: -15.000001907348633
    5. ')`' → logprob: -15.000001907348633
    6. '(' → logprob: -15.750001907348633
    7. '))' → logprob: -16.250001907348633
    8. ')}' → logprob: -18.125001907348633
    9. '`)' → logprob: -18.375001907348633
    10. ')
' → logprob: -18.375001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 423
Tokens correctement prédits (1ère position, stricte): 117
Tokens correctement prédits (1ère position, avec adaptation): 129
Tokens correctement prédits (top 10): 312
Précision stricte (1ère position): 27.66%
Précision adaptée (1ère position): 30.50%
Précision (top 10): 73.76%
================================================================================
