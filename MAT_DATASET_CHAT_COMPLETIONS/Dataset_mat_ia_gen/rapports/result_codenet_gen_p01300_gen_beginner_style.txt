================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def is_multiple_of_11(s):
    # Check if the string s represents a multiple of 11
    n = int(s)
    return n % 11 == 0

while True:
    number = input()
    if number == '0':
        break
    count = 0
    length = len(number)
    for start in range(length):
        if number[start] == '0':
            continue
        for end in range(start + 1, length + 1):
            substring = number[start:end]
            if is_multiple_of_11(substring):
                count += 1
    print(count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' is' (ID: 382)
  → Token d'amorce (pas de prédiction)

Token 2: '_multiple' (ID: 111487)
  → Token d'amorce (pas de prédiction)

Token 3: '_of' (ID: 8023)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.43852317333221436
    2. '_' → logprob: -1.0635231733322144
    3. '```' → logprob: -5.688523292541504
    4. '(_' → logprob: -6.563523292541504
    5. '_of' → logprob: -6.688523292541504
    6. '(_)' → logprob: -6.813523292541504
    7. 's' → logprob: -7.438523292541504
    8. 'def' → logprob: -8.063523292541504
    9. '(a' → logprob: -8.563523292541504
    10. 'of' → logprob: -8.563523292541504

Token 4: '_' (ID: 62)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.044489841908216476
    2. '_' → logprob: -3.169489860534668
    3. '```' → logprob: -7.419489860534668
    4. ' (' → logprob: -7.794489860534668
    5. '(_' → logprob: -9.169489860534668
    6. ''' → logprob: -9.919489860534668
    7. '(_)' → logprob: -10.044489860534668
    8. 'def' → logprob: -10.419489860534668
    9. '(a' → logprob: -10.919489860534668
    10. 's' → logprob: -10.919489860534668

Token 5: '11' (ID: 994)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.8635531663894653
    2. 'n' → logprob: -0.9885531663894653
    3. '(n' → logprob: -2.238553047180176
    4. '(number' → logprob: -2.738553047180176
    5. 'num' → logprob: -4.363553047180176
    6. '7' → logprob: -5.113553047180176
    7. '10' → logprob: -5.113553047180176
    8. '3' → logprob: -6.113553047180176
    9. '_number' → logprob: -6.613553047180176
    10. '5' → logprob: -6.988553047180176

Token 6: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005887754959985614
    2. '_' → logprob: -8.375588417053223
    3. '(_:' → logprob: -9.125588417053223
    4. '(:' → logprob: -9.375588417053223
    5. '():' → logprob: -9.875588417053223
    6. '(_' → logprob: -10.250588417053223
    7. '```' → logprob: -11.000588417053223
    8. ':' → logprob: -11.125588417053223
    9. ' (' → logprob: -11.875588417053223
    10. '(x' → logprob: -12.000588417053223

Token 7: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16101129353046417
    2. ')' → logprob: -1.9110113382339478
    3. ':' → logprob: -7.286011219024658
    4. 's' → logprob: -10.161011695861816
    5. '(' → logprob: -11.661011695861816
    6. '[' → logprob: -11.661011695861816
    7. '_' → logprob: -11.911011695861816
    8. ''):' → logprob: -12.286011695861816
    9. '):
' → logprob: -12.661011695861816
    10. ')s' → logprob: -12.661011695861816

Token 8: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5270530581474304
    2. ':' → logprob: -0.9020530581474304
    3. '(' → logprob: -6.152052879333496
    4. '():' → logprob: -6.902052879333496
    5. '```' → logprob: -8.652052879333496
    6. ':
' → logprob: -9.027052879333496
    7. '(:' → logprob: -10.027052879333496
    8. ' :' → logprob: -10.027052879333496
    9. '    
' → logprob: -10.152052879333496
    10. ':return' → logprob: -10.152052879333496

Token 9: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0207100510597229
    2. ' return' → logprob: -5.020709991455078
    3. ' ' → logprob: -5.270709991455078
    4. 'return' → logprob: -5.895709991455078
    5. '    ' → logprob: -6.520709991455078
    6. '```' → logprob: -6.520709991455078
    7. ' for' → logprob: -7.395709991455078
    8. ' if' → logprob: -7.395709991455078
    9. 'n' → logprob: -8.395709991455078
    10. '  ' → logprob: -8.520709991455078

Token 10: ' Check' (ID: 6208)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5542508363723755
    2. ' return' → logprob: -1.1792508363723755
    3. ' n' → logprob: -3.554250717163086
    4. ' count' → logprob: -3.804250717163086
    5. 'return' → logprob: -4.054250717163086
    6. ' for' → logprob: -4.179250717163086
    7. ' if' → logprob: -4.679250717163086
    8. ' ' → logprob: -4.929250717163086
    9. 'count' → logprob: -5.179250717163086
    10. ' sum' → logprob: -5.804250717163086

Token 11: ' if' (ID: 538)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15552949905395508
    2. ' (' → logprob: -2.780529499053955
    3. ' ' → logprob: -3.405529499053955
    4. '(s' → logprob: -3.780529499053955
    5. 's' → logprob: -4.030529499053955
    6. ' if' → logprob: -5.530529499053955
    7. '_' → logprob: -6.030529499053955
    8. ' s' → logprob: -7.405529499053955
    9. ' return' → logprob: -8.530529022216797
    10. '(space' → logprob: -8.905529022216797

Token 12: ' the' (ID: 290)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.4347918629646301
    2. ' the' → logprob: -1.5597918033599854
    3. ' all' → logprob: -2.5597918033599854
    4. ' ' → logprob: -3.9347918033599854
    5. ' len' → logprob: -3.9347918033599854
    6. 's' → logprob: -4.4347920417785645
    7. ' a' → logprob: -4.6847920417785645
    8. ' n' → logprob: -6.6847920417785645
    9. 'the' → logprob: -7.1847920417785645
    10. ' int' → logprob: -7.3097920417785645

Token 13: ' string' (ID: 1621)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0284806489944458
    2. 's' → logprob: -2.1534805297851562
    3. ' s' → logprob: -2.2784805297851562
    4. ' number' → logprob: -2.4034805297851562
    5. ' n' → logprob: -2.7784805297851562
    6. ' first' → logprob: -2.7784805297851562
    7. ' len' → logprob: -2.9034805297851562
    8. ' length' → logprob: -3.2784805297851562
    9. 'len' → logprob: -3.6534805297851562
    10. ' string' → logprob: -3.7784805297851562

Token 14: ' s' (ID: 265)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8128347396850586
    2. ' is' → logprob: -0.8128347396850586
    3. ''' → logprob: -2.6878347396850586
    4. '[' → logprob: -4.562834739685059
    5. '"' → logprob: -5.187834739685059
    6. 's' → logprob: -5.312834739685059
    7. ' )' → logprob: -5.937834739685059
    8. ' s' → logprob: -6.062834739685059
    9. ''s' → logprob: -6.187834739685059
    10. '   ' → logprob: -6.312834739685059

Token 15: ' represents' (ID: 18627)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7923729419708252
    2. ' is' → logprob: -1.5423729419708252
    3. '   ' → logprob: -1.6673729419708252
    4. ' :' → logprob: -3.417372941970825
    5. '[' → logprob: -3.667372941970825
    6. ''' → logprob: -4.542372703552246
    7. '  ' → logprob: -4.667372703552246
    8. ' ,' → logprob: -4.917372703552246
    9. '```' → logprob: -5.042372703552246
    10. ':' → logprob: -5.167372703552246

Token 16: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.06575126945972443
    2. ' an' → logprob: -2.815751314163208
    3. ' ' → logprob: -5.690751075744629
    4. ' the' → logprob: -8.315751075744629
    5. 'a' → logprob: -9.440751075744629
    6. ''' → logprob: -11.190751075744629
    7. 'an' → logprob: -11.440751075744629
    8. ' divisible' → logprob: -11.565751075744629
    9. '  ' → logprob: -11.940751075744629
    10. ')' → logprob: -12.190751075744629

Token 17: ' multiple' (ID: 7598)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09143929928541183
    2. ' multiple' → logprob: -2.8414392471313477
    3. ' number' → logprob: -3.5914392471313477
    4. ' n' → logprob: -7.216439247131348
    5. 'n' → logprob: -8.466439247131348
    6. 'multiple' → logprob: -8.841439247131348
    7. ' valid' → logprob: -9.341439247131348
    8. ' space' → logprob: -9.466439247131348
    9. ' digit' → logprob: -9.716439247131348
    10. 'number' → logprob: -10.216439247131348

Token 18: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.042581167072057724
    2. ' of' → logprob: -3.292581081390381
    3. '_of' → logprob: -6.667581081390381
    4. ' _' → logprob: -6.792581081390381
    5. 'of' → logprob: -7.417581081390381
    6. ' ' → logprob: -7.667581081390381
    7. '   ' → logprob: -7.917581081390381
    8. '_o' → logprob: -8.417581558227539
    9. 'o' → logprob: -8.667581558227539
    10. ' o' → logprob: -9.292581558227539

Token 19: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05192160978913307
    2. '11' → logprob: -3.3019216060638428
    3. ''' → logprob: -4.426921844482422
    4. '1' → logprob: -6.926921844482422
    5. ' '' → logprob: -7.676921844482422
    6. '"' → logprob: -8.301921844482422
    7. '_' → logprob: -9.801921844482422
    8. '`' → logprob: -11.051921844482422
    9. ' a' → logprob: -11.176921844482422
    10. ''s' → logprob: -11.426921844482422

Token 20: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.22566711902618408
    2. ''' → logprob: -2.3506669998168945
    3. '1' → logprob: -2.4756669998168945
    4. '"' → logprob: -3.9756669998168945
    5. ' ' → logprob: -5.6006669998168945
    6. '`' → logprob: -9.725666999816895
    7. ' '' → logprob: -10.475666999816895
    8. ''s' → logprob: -11.100666999816895
    9. '```' → logprob: -11.350666999816895
    10. '   ' → logprob: -12.475666999816895

Token 21: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029805799946188927
    2. ':' → logprob: -4.154805660247803
    3. '```' → logprob: -4.654805660247803
    4. '    ' → logprob: -7.154805660247803
    5. '\n' → logprob: -7.279805660247803
    6. '\' → logprob: -7.779805660247803
    7. '
' → logprob: -7.779805660247803
    8. '``' → logprob: -7.904805660247803
    9. '    
' → logprob: -8.154806137084961
    10. ':
' → logprob: -8.779806137084961

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026124486699700356
    2. ':' → logprob: -3.7761244773864746
    3. '```' → logprob: -6.526124477386475
    4. ' :' → logprob: -7.651124477386475
    5. ''' → logprob: -8.526124954223633
    6. ' ' → logprob: -8.776124954223633
    7. '    ' → logprob: -9.026124954223633
    8. '_' → logprob: -9.901124954223633
    9. ':
' → logprob: -10.026124954223633
    10. '(' → logprob: -10.276124954223633

Token 23: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05536942183971405
    2. ' ' → logprob: -3.1803693771362305
    3. '    ' → logprob: -5.3053693771362305
    4. 'n' (adapté à ' n') → logprob: -6.1803693771362305
    5. ' n' → logprob: -6.4303693771362305
    6. '```' → logprob: -7.4303693771362305
    7. '  ' → logprob: -8.05536937713623
    8. '     
' → logprob: -8.18036937713623
    9. ' 
' → logprob: -8.30536937713623
    10. ' ```' → logprob: -8.55536937713623

Token 24: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6193376779556274
    2. ' =' → logprob: -1.4943376779556274
    3. '=' → logprob: -1.8693376779556274
    4. 'u' → logprob: -3.494337558746338
    5. '   ' → logprob: -4.244337558746338
    6. ' ==' → logprob: -4.369337558746338
    7. 'um' → logprob: -5.369337558746338
    8. '  ' → logprob: -5.619337558746338
    9. ' )' → logprob: -5.744337558746338
    10. ')' → logprob: -5.869337558746338

Token 25: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0355030819773674
    2. 'int' → logprob: -3.5355031490325928
    3. ' len' → logprob: -5.285502910614014
    4. 'len' → logprob: -7.910502910614014
    5. '0' → logprob: -8.660503387451172
    6. ' sum' → logprob: -9.660503387451172
    7. ' ' → logprob: -10.160503387451172
    8. ' s' → logprob: -11.285503387451172
    9. 'sum' → logprob: -11.785503387451172
    10. 's' → logprob: -13.285503387451172

Token 26: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.3880608379840851
    2. '(' → logprob: -1.1380608081817627
    3. 's' → logprob: -7.263061046600342
    4. '(n' → logprob: -7.638061046600342
    5. '('' → logprob: -13.388060569763184
    6. ')' → logprob: -14.138060569763184
    7. '(ss' → logprob: -14.638060569763184
    8. ' (' → logprob: -14.638060569763184
    9. '<|end|>' → logprob: -14.638060569763184
    10. '(`' → logprob: -14.888060569763184

Token 27: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023643692838959396
    2. '))' → logprob: -8.500236511230469
    3. ' )' → logprob: -11.500236511230469
    4. '[' → logprob: -11.875236511230469
    5. ')n' → logprob: -12.125236511230469
    6. ')))' → logprob: -12.250236511230469
    7. '[n' → logprob: -14.000236511230469
    8. ')
' → logprob: -14.250236511230469
    9. ')`' → logprob: -14.250236511230469
    10. '   ' → logprob: -14.750236511230469

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14965087175369263
    2. ':' → logprob: -2.149650812149048
    3. ' ' → logprob: -5.149651050567627
    4. 'return' → logprob: -5.524651050567627
    5. ' return' → logprob: -5.524651050567627
    6. '
' → logprob: -6.024651050567627
    7. ':return' → logprob: -6.649651050567627
    8. ':
' → logprob: -7.274651050567627
    9. '  ' → logprob: -7.399651050567627
    10. '    ' → logprob: -7.649651050567627

Token 29: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.721950888633728
    2. 'return' (adapté à ' return') → logprob: -1.471950888633728
    3. ' return' → logprob: -1.596950888633728
    4. ' ' → logprob: -2.9719510078430176
    5. ' if' → logprob: -4.346951007843018
    6. 'if' → logprob: -4.971951007843018
    7. ' remainder' → logprob: -6.346951007843018
    8. '  ' → logprob: -6.596951007843018
    9. '
' → logprob: -6.721951007843018
    10. '    ' → logprob: -6.971951007843018

Token 30: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.007290342822670937
    2. 'n' → logprob: -5.257290363311768
    3. ' (' → logprob: -6.257290363311768
    4. ' ' → logprob: -9.88228988647461
    5. ' abs' → logprob: -10.13228988647461
    6. '(n' → logprob: -10.38228988647461
    7. '(' → logprob: -11.63228988647461
    8. 'abs' → logprob: -12.50728988647461
    9. ' ' → logprob: -12.88228988647461
    10. '(abs' → logprob: -14.50728988647461

Token 31: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.0054381852969527245
    2. '%' → logprob: -5.255438327789307
    3. ' ' → logprob: -8.505437850952148
    4. ' ' → logprob: -13.880437850952148
    5. ' %
' → logprob: -15.630437850952148
    6. '  ' → logprob: -15.755437850952148
    7. '<|end|>' → logprob: -16.13043785095215
    8. ' %#' → logprob: -16.50543785095215
    9. '```' → logprob: -16.75543785095215
    10. '   ' → logprob: -16.75543785095215

Token 32: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0031797364354133606
    2. '11' → logprob: -5.753179550170898
    3. ' ' → logprob: -14.128179550170898
    4. 'space' → logprob: -14.503179550170898
    5. '`' → logprob: -15.378179550170898
    6. '1' → logprob: -15.753179550170898
    7. ''' → logprob: -16.2531795501709
    8. ' space' → logprob: -16.7531795501709
    9. '_' → logprob: -17.1281795501709
    10. '32' → logprob: -17.2531795501709

Token 33: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -6.704273118884885e-07
    2. '1' → logprob: -14.875000953674316
    3. ' ' → logprob: -15.500000953674316
    4. '`' → logprob: -18.25
    5. '```' → logprob: -18.25
    6. '111' → logprob: -18.875
    7. '１１' → logprob: -19.5
    8. '११' → logprob: -19.875
    9. '``' → logprob: -20.25
    10. '১১' → logprob: -21.0

Token 34: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.007981469854712486
    2. '==' → logprob: -4.882981300354004
    3. '=' → logprob: -8.632981300354004
    4. ' ' → logprob: -9.007981300354004
    5. ' =' → logprob: -9.632981300354004
    6. '0' → logprob: -13.132981300354004
    7. ')' → logprob: -13.757981300354004
    8. ' !=' → logprob: -13.757981300354004
    9. ' ' → logprob: -14.257981300354004
    10. ' ===' → logprob: -14.507981300354004

Token 35: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1602243334054947
    2. ' ' → logprob: -1.9102243185043335
    3. ' ' → logprob: -15.410223960876465
    4. '```' → logprob: -17.78522491455078
    5. '   ' → logprob: -19.41022491455078
    6. '  ' → logprob: -20.22272491455078
    7. ' ' → logprob: -20.34772491455078
    8. '1' → logprob: -20.66022491455078
    9. '۰' → logprob: -20.84772491455078
    10. '	' → logprob: -21.41022491455078

Token 36: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '```' → logprob: -18.875
    4. '۰' → logprob: -20.5625
    5. ' ' → logprob: -21.1875
    6. ' ' → logprob: -21.25
    7. '   ' → logprob: -21.5625
    8. '  ' → logprob: -21.875
    9. '٠' → logprob: -21.875
    10. '1' → logprob: -22.0625

Token 37: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33084601163864136
    2. '<|end|>' → logprob: -2.080846071243286
    3. ')' → logprob: -3.080846071243286
    4. '\n' → logprob: -3.455846071243286
    5. '```' → logprob: -3.955846071243286
    6. '(' → logprob: -4.080845832824707
    7. '#' → logprob: -4.330845832824707
    8. '' → logprob: -5.205845832824707
    9. 'newline' → logprob: -5.330845832824707
    10. '

' → logprob: -5.330845832824707

Token 38: 'while' (ID: 7032)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4539574384689331
    2. '```' → logprob: -2.0789575576782227
    3. '<|end|>' → logprob: -2.7039575576782227
    4. '#' → logprob: -3.4539575576782227
    5. '\n' → logprob: -3.5789575576782227
    6. ')' → logprob: -3.5789575576782227
    7. '\' → logprob: -3.9539575576782227
    8. '(' → logprob: -4.078957557678223
    9. ''' → logprob: -4.328957557678223
    10. '

' → logprob: -5.078957557678223

Token 39: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.04309944435954094
    2. ' ' → logprob: -3.1680994033813477
    3. 'True' → logprob: -9.543099403381348
    4. ' not' → logprob: -11.418099403381348
    5. '  ' → logprob: -11.543099403381348
    6. ' ' → logprob: -12.168099403381348
    7. ' space' → logprob: -13.918099403381348
    8. '_' → logprob: -15.168099403381348
    9. ' ‌' → logprob: -15.168099403381348
    10. ' n' → logprob: -15.293099403381348

Token 40: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07932033389806747
    2. ' :' → logprob: -2.5793204307556152
    3. '():' → logprob: -7.954320430755615
    4. ' :
' → logprob: -10.829319953918457
    5. '):' → logprob: -10.954319953918457
    6. ' ):' → logprob: -11.329319953918457
    7. '   ' → logprob: -11.954319953918457
    8. ':
' → logprob: -12.204319953918457
    9. ':**' → logprob: -12.954319953918457
    10. '(:' → logprob: -13.079319953918457

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08046899735927582
    2. ' ' → logprob: -3.2054688930511475
    3. '    ' → logprob: -3.9554688930511475
    4. ' input' → logprob: -4.955469131469727
    5. '    
' → logprob: -5.830469131469727
    6. ' 
' → logprob: -6.455469131469727
    7. '  ' → logprob: -6.705469131469727
    8. ' )' → logprob: -6.955469131469727
    9. 'input' → logprob: -7.205469131469727
    10. ' readline' → logprob: -7.205469131469727

Token 42: ' number' (ID: 2086)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1891779899597168
    2. ' s' → logprob: -2.439177989959717
    3. 's' → logprob: -3.189177989959717
    4. ' user' → logprob: -3.939177989959717
    5. ' inp' → logprob: -4.814177989959717
    6. ' try' → logprob: -5.189177989959717
    7. 'user' → logprob: -5.939177989959717
    8. ' input' → logprob: -6.064177989959717
    9. 'inp' → logprob: -6.939177989959717
    10. '    
' → logprob: -7.064177989959717

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03175635635852814
    2. '_' → logprob: -3.6567564010620117
    3. '=' → logprob: -5.281756401062012
    4. 's' → logprob: -8.531756401062012
    5. '_input' → logprob: -8.906756401062012
    6. ' ' → logprob: -11.406756401062012
    7. '_=' → logprob: -13.031756401062012
    8. '_space' → logprob: -13.281756401062012
    9. 'space' → logprob: -13.656756401062012
    10. '=input' → logprob: -13.781756401062012

Token 44: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.012511413544416428
    2. 'input' → logprob: -4.387511253356934
    3. '=input' → logprob: -13.637511253356934
    4. '(input' → logprob: -15.387511253356934
    5. ' ' → logprob: -15.887511253356934
    6. '	input' → logprob: -16.51251220703125
    7. '<input' → logprob: -17.01251220703125
    8. '_input' → logprob: -17.38751220703125
    9. ' inp' → logprob: -18.01251220703125
    10. ' ' → logprob: -18.01251220703125

Token 45: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008218089118599892
    2. '('' → logprob: -5.133218288421631
    3. '("("' → logprob: -6.133218288421631
    4. '("' → logprob: -9.758217811584473
    5. '()' → logprob: -10.383217811584473
    6. '("(' → logprob: -11.508217811584473
    7. '(`' → logprob: -12.258217811584473
    8. '("")' → logprob: -12.508217811584473
    9. '(">' → logprob: -12.758217811584473
    10. '('(' → logprob: -12.883217811584473

Token 46: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.793262243270874
    2. ' if' → logprob: -1.418262243270874
    3. '<|end|>' → logprob: -2.543262243270874
    4. ' 
' → logprob: -2.793262243270874
    5. '   ' → logprob: -3.293262243270874
    6. 'if' → logprob: -3.543262243270874
    7. '  
' → logprob: -3.793262243270874
    8. '    
' → logprob: -4.043262481689453
    9. ')' → logprob: -4.168262481689453
    10. '<|end|>' → logprob: -4.668262481689453

Token 47: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.052402619272470474
    2. ' ' → logprob: -3.1774027347564697
    3. 'if' (adapté à ' if') → logprob: -5.302402496337891
    4. '   ' → logprob: -5.677402496337891
    5. '    ' → logprob: -7.802402496337891
    6. '<|end|>' → logprob: -8.30240249633789
    7. '  ' → logprob: -10.05240249633789
    8. '```' → logprob: -10.30240249633789
    9. ' 
' → logprob: -10.92740249633789
    10. ' )' → logprob: -10.92740249633789

Token 48: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.34007588028907776
    2. ' not' → logprob: -1.3400758504867554
    3. 'number' → logprob: -4.215075969696045
    4. ' ' → logprob: -4.465075969696045
    5. 'not' → logprob: -8.715075492858887
    6. ' ' → logprob: -11.590075492858887
    7. '	number' → logprob: -11.965075492858887
    8. '  ' → logprob: -13.590075492858887
    9. '	not' → logprob: -15.465075492858887
    10. '[number' → logprob: -15.465075492858887

Token 49: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.007743862923234701
    2. '.' → logprob: -5.632743835449219
    3. '==' → logprob: -5.757743835449219
    4. ' .' → logprob: -7.382743835449219
    5. '.strip' → logprob: -8.507743835449219
    6. ' ' → logprob: -9.132743835449219
    7. '.startswith' → logprob: -10.882743835449219
    8. ' =' → logprob: -12.132743835449219
    9. '.lower' → logprob: -12.257743835449219
    10. '.is' → logprob: -12.632743835449219

Token 50: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.32602599263191223
    2. ''' → logprob: -1.5760259628295898
    3. '""' → logprob: -2.82602596282959
    4. '''' → logprob: -4.45102596282959
    5. ' "' → logprob: -8.32602596282959
    6. ' '' → logprob: -9.20102596282959
    7. ' ""' → logprob: -9.32602596282959
    8. ' ''' → logprob: -10.57602596282959
    9. ' ' → logprob: -11.32602596282959
    10. '"":' → logprob: -12.32602596282959

Token 51: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.23589111864566803
    2. 'q' → logprob: -1.8608911037445068
    3. 'exit' → logprob: -3.360891103744507
    4. 'quit' → logprob: -5.110891342163086
    5. '')' → logprob: -5.360891342163086
    6. '':' → logprob: -5.735891342163086
    7. '"' → logprob: -6.985891342163086
    8. ''ex' → logprob: -6.985891342163086
    9. ''):' → logprob: -6.985891342163086
    10. ''q' → logprob: -6.985891342163086

Token 52: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.013831314630806446
    2. ''' → logprob: -4.51383113861084
    3. '':
' → logprob: -6.13883113861084
    4. ':' → logprob: -7.63883113861084
    5. '':
' → logprob: -9.63883113861084
    6. ' ':' → logprob: -10.63883113861084
    7. '\n' → logprob: -10.76383113861084
    8. ' '' → logprob: -11.88883113861084
    9. '":' → logprob: -12.26383113861084
    10. '':

' → logprob: -12.51383113861084

Token 53: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014382798224687576
    2. '   ' → logprob: -4.264382839202881
    3. ' break' → logprob: -8.889382362365723
    4. '    ' → logprob: -10.764382362365723
    5. '     ' → logprob: -11.014382362365723
    6. '      ' → logprob: -11.514382362365723
    7. '	break' → logprob: -11.889382362365723
    8. ' ' → logprob: -12.514382362365723
    9. '  ' → logprob: -12.639382362365723
    10. 'break' → logprob: -12.764382362365723

Token 54: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4638786017894745
    2. ' break' → logprob: -1.0888786315917969
    3. '   ' → logprob: -3.713878631591797
    4. 'break' (adapté à ' break') → logprob: -4.713878631591797
    5. '	break' → logprob: -6.838878631591797
    6. '
' → logprob: -10.463878631591797
    7. '        
' → logprob: -10.713878631591797
    8. '    
' → logprob: -11.088878631591797
    9. '```' → logprob: -11.088878631591797
    10. '\n' → logprob: -11.588878631591797

Token 55: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017124881967902184
    2. '    
' → logprob: -4.267124652862549
    3. '
' → logprob: -5.892124652862549
    4. '  
' → logprob: -9.767125129699707
    5. 'print' → logprob: -9.892125129699707
    6. '   
' → logprob: -10.017125129699707
    7. '<|end|>' → logprob: -11.392125129699707
    8. '```' → logprob: -11.517125129699707
    9. ' 
' → logprob: -12.267125129699707
    10. '        
' → logprob: -12.892125129699707

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005587508203461766
    2. '    
' → logprob: -7.750558853149414
    3. '
' → logprob: -9.625558853149414
    4. 'print' → logprob: -9.875558853149414
    5. '```' → logprob: -12.500558853149414
    6. '  
' → logprob: -13.250558853149414
    7. '   
' → logprob: -13.500558853149414
    8. ' print' → logprob: -13.875558853149414
    9. ' if' → logprob: -14.250558853149414
    10. 'if' → logprob: -14.375558853149414

Token 57: ' count' (ID: 3605)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4078638255596161
    2. ' print' → logprob: -1.5328638553619385
    3. ' if' → logprob: -2.5328638553619385
    4. 'print' → logprob: -3.2828638553619385
    5. 'if' → logprob: -6.407863616943359
    6. '    ' → logprob: -8.53286361694336
    7. '    
' → logprob: -9.40786361694336
    8. '```' → logprob: -9.65786361694336
    9. ' 
' → logprob: -10.15786361694336
    10. '     
' → logprob: -12.15786361694336

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.41703543066978455
    2. '_' → logprob: -1.292035460472107
    3. '=' → logprob: -3.0420353412628174
    4. '(' → logprob: -4.5420355796813965
    5. ' ' → logprob: -5.7920355796813965
    6. 'ed' → logprob: -6.6670355796813965
    7. 's' → logprob: -7.2920355796813965
    8. 'er' → logprob: -7.5420355796813965
    9. '    ' → logprob: -8.167035102844238
    10. ' +=' → logprob: -8.542035102844238

Token 59: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.79590904712677
    2. ' sum' → logprob: -1.54590904712677
    3. ' ' → logprob: -1.79590904712677
    4. 'sum' → logprob: -2.5459089279174805
    5. ' number' → logprob: -3.2959089279174805
    6. ' s' → logprob: -3.7959089279174805
    7. 's' → logprob: -3.9209089279174805
    8. 'number' → logprob: -5.0459089279174805
    9. '(sum' → logprob: -5.9209089279174805
    10. '1' → logprob: -7.4209089279174805

Token 60: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7220602035522461
    2. 'sum' → logprob: -0.7220602035522461
    3. 'number' → logprob: -4.347060203552246
    4. 'len' → logprob: -4.722060203552246
    5. 's' → logprob: -5.847060203552246
    6. ' sum' → logprob: -6.847060203552246
    7. 'str' → logprob: -6.847060203552246
    8. ' ' → logprob: -7.722060203552246
    9. 'is' → logprob: -8.097060203552246
    10. 'int' → logprob: -8.222060203552246

Token 61: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9755135178565979
    2. '<|end|>' → logprob: -0.9755135178565979
    3. '   ' → logprob: -1.6005134582519531
    4. '    ' → logprob: -3.475513458251953
    5. '<|end|>' → logprob: -5.225513458251953
    6. ' 
' → logprob: -6.225513458251953
    7. '    
' → logprob: -6.350513458251953
    8. '  ' → logprob: -6.725513458251953
    9. '
' → logprob: -7.100513458251953
    10. ')' → logprob: -7.600513458251953

Token 62: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.41477349400520325
    2. ' 
' → logprob: -2.539773464202881
    3. '   ' → logprob: -2.789773464202881
    4. '
' → logprob: -2.789773464202881
    5. '<|end|>' → logprob: -2.914773464202881
    6. '    ' → logprob: -3.164773464202881
    7. ' for' → logprob: -4.289773464202881
    8. '    
' → logprob: -4.664773464202881
    9. '<|end|>' → logprob: -5.914773464202881
    10. '     
' → logprob: -6.039773464202881

Token 63: ' length' (ID: 5517)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.034947119653224945
    2. ' for' → logprob: -3.534947156906128
    3. '   ' → logprob: -5.409946918487549
    4. 'i' → logprob: -8.534947395324707
    5. '    ' → logprob: -8.659947395324707
    6. ' ' → logprob: -9.659947395324707
    7. 's' → logprob: -9.784947395324707
    8. 'length' (adapté à ' length') → logprob: -10.034947395324707
    9. 'n' → logprob: -10.159947395324707
    10. '  ' → logprob: -10.534947395324707

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5034456253051758
    2. '=' → logprob: -2.003445625305176
    3. '[' → logprob: -2.503445625305176
    4. '   ' → logprob: -2.753445625305176
    5. '<|end|>' → logprob: -3.253445625305176
    6. ' ' → logprob: -3.878445625305176
    7. '(' → logprob: -4.253445625305176
    8. '    ' → logprob: -4.378445625305176
    9. ')' → logprob: -5.003445625305176
    10. ' +=' → logprob: -5.378445625305176

Token 65: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.008631468750536442
    2. 'len' → logprob: -4.758631706237793
    3. '(len' → logprob: -11.508631706237793
    4. ' ' → logprob: -13.008631706237793
    5. '=len' → logprob: -13.633631706237793
    6. '[len' → logprob: -14.008631706237793
    7. '	len' → logprob: -14.258631706237793
    8. ' int' → logprob: -14.758631706237793
    9. ' ' → logprob: -14.758631706237793
    10. ',len' → logprob: -15.008631706237793

Token 66: '(number' (ID: 32955)
  Prédit: '(number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.00016516048344783485
    2. '(' → logprob: -8.750164985656738
    3. '(s' → logprob: -12.625164985656738
    4. 'number' → logprob: -13.250164985656738
    5. '(count' → logprob: -14.125164985656738
    6. '(n' → logprob: -14.375164985656738
    7. '(numbers' → logprob: -16.250165939331055
    8. ' (' → logprob: -16.375165939331055
    9. '(num' → logprob: -17.250165939331055
    10. '(numero' → logprob: -17.625165939331055

Token 67: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001141049899160862
    2. ' )' → logprob: -7.50114107131958
    3. '   ' → logprob: -7.50114107131958
    4. ')
' → logprob: -11.001140594482422
    5. ' ' → logprob: -11.376140594482422
    6. '#' → logprob: -13.501140594482422
    7. '-' → logprob: -13.751140594482422
    8. '    ' → logprob: -14.001140594482422
    9. '  ' → logprob: -14.126140594482422
    10. '[' → logprob: -14.751140594482422

Token 68: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06592482328414917
    2. '    
' → logprob: -3.440924882888794
    3. '<|end|>' → logprob: -4.315924644470215
    4. '
' → logprob: -4.690924644470215
    5. ' 
' → logprob: -5.940924644470215
    6. '    ' → logprob: -6.065924644470215
    7. ' ' → logprob: -6.440924644470215
    8. ' for' → logprob: -6.940924644470215
    9. '  
' → logprob: -8.190924644470215
    10. '   
' → logprob: -8.315924644470215

Token 69: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8425740003585815
    2. 'for' (adapté à ' for') → logprob: -0.9675740003585815
    3. ' for' → logprob: -1.9675740003585815
    4. 'i' → logprob: -3.592574119567871
    5. ' ' → logprob: -4.717574119567871
    6. '    ' → logprob: -5.467574119567871
    7. ' i' → logprob: -5.592574119567871
    8. '  ' → logprob: -6.467574119567871
    9. ')' → logprob: -6.592574119567871
    10. '    
' → logprob: -7.467574119567871

Token 70: ' start' (ID: 1604)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.010085639543831348
    2. ' range' → logprob: -4.885085582733154
    3. ' ' → logprob: -6.260085582733154
    4. ' _' → logprob: -8.010086059570312
    5. 'i' → logprob: -8.635086059570312
    6. 'range' → logprob: -11.010086059570312
    7. '_' → logprob: -11.635086059570312
    8. '<|end|>' → logprob: -12.010086059570312
    9. '  ' → logprob: -12.260086059570312
    10. ' index' → logprob: -12.635086059570312

Token 71: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.024339724332094193
    2. 'in' → logprob: -3.7743396759033203
    3. ' ' → logprob: -6.89933967590332
    4. ' i' → logprob: -11.02433967590332
    5. '  ' → logprob: -11.64933967590332
    6. '	in' → logprob: -11.64933967590332
    7. '=' → logprob: -11.77433967590332
    8. '_' → logprob: -12.02433967590332
    9. '```' → logprob: -12.39933967590332
    10. ')' → logprob: -12.77433967590332

Token 72: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0015034328680485487
    2. 'range' → logprob: -6.5015034675598145
    3. ' xrange' → logprob: -14.626502990722656
    4. '	range' → logprob: -14.876502990722656
    5. ' ' → logprob: -15.626502990722656
    6. '(range' → logprob: -16.626502990722656
    7. '<|end|>' → logprob: -17.751502990722656
    8. ' ran' → logprob: -18.001502990722656
    9. ' ra' → logprob: -18.001502990722656
    10. ' rango' → logprob: -18.001502990722656

Token 73: '(length' (ID: 47037)
  Prédit: '(length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -0.009788316674530506
    2. '(' → logprob: -4.759788513183594
    3. '(len' → logprob: -6.759788513183594
    4. '(l' → logprob: -11.384788513183594
    5. '[length' → logprob: -14.259788513183594
    6. ',length' → logprob: -14.259788513183594
    7. '(
' → logprob: -14.759788513183594
    8. 'length' → logprob: -16.009788513183594
    9. '(depth' → logprob: -16.634788513183594
    10. ':length' → logprob: -16.884788513183594

Token 74: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004777922760695219
    2. '):
' → logprob: -6.129777908325195
    3. ' ):' → logprob: -6.879777908325195
    4. '+' → logprob: -7.129777908325195
    5. ',' → logprob: -7.629777908325195
    6. '   ' → logprob: -9.254777908325195
    7. ')' → logprob: -9.379777908325195
    8. ':' → logprob: -10.004777908325195
    9. ' +' → logprob: -11.004777908325195
    10. ' ' → logprob: -12.004777908325195

Token 75: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0028256177902222
    2. '    ' → logprob: -1.1278256177902222
    3. ':' → logprob: -2.0028257369995117
    4. ' ' → logprob: -2.5028257369995117
    5. ' :' → logprob: -3.5028257369995117
    6. '   ' → logprob: -3.5028257369995117
    7. '<|end|>' → logprob: -3.7528257369995117
    8. '        ' → logprob: -6.127825736999512
    9. '     ' → logprob: -6.877825736999512
    10. ',' → logprob: -7.127825736999512

Token 76: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07583487778902054
    2. 'for' → logprob: -3.2008349895477295
    3. '   ' → logprob: -3.5758349895477295
    4. '    ' → logprob: -5.57583475112915
    5. ' ' → logprob: -8.700835227966309
    6. '       ' → logprob: -9.200835227966309
    7. ' if' → logprob: -9.450835227966309
    8. '  ' → logprob: -10.450835227966309
    9. 'count' → logprob: -10.575835227966309
    10. ')' → logprob: -10.825835227966309

Token 77: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.6625840663909912
    2. ' (' → logprob: -1.2875840663909912
    3. ' start' → logprob: -2.662584066390991
    4. ' int' → logprob: -2.787584066390991
    5. ' s' → logprob: -3.537584066390991
    6. ' count' → logprob: -4.41258430480957
    7. ' ' → logprob: -4.66258430480957
    8. ' is' → logprob: -5.16258430480957
    9. 'number' → logprob: -5.41258430480957
    10. ' length' → logprob: -5.78758430480957

Token 78: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.03857383131980896
    2. '[' → logprob: -3.663573741912842
    3. '.startswith' → logprob: -4.538573741912842
    4. '==' → logprob: -7.038573741912842
    5. ' ==' → logprob: -8.53857421875
    6. '[int' → logprob: -10.03857421875
    7. '   ' → logprob: -10.03857421875
    8. ' in' → logprob: -10.16357421875
    9. '<|end|>' → logprob: -10.16357421875
    10. ' ' → logprob: -10.78857421875

Token 79: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.15080687403678894
    2. ']==' → logprob: -3.1508069038391113
    3. ':].' → logprob: -3.5258069038391113
    4. ':]' → logprob: -3.7758069038391113
    5. ':' → logprob: -4.025806903839111
    6. ' ]' → logprob: -4.400806903839111
    7. ']+' → logprob: -5.650806903839111
    8. ' :]' → logprob: -5.900806903839111
    9. ']:' → logprob: -6.025806903839111
    10. ' :' → logprob: -6.025806903839111

Token 80: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7028652429580688
    2. ' ==' → logprob: -0.9528652429580688
    3. ' in' → logprob: -2.9528651237487793
    4. ':' → logprob: -3.9528651237487793
    5. 'isdigit' → logprob: -4.327865123748779
    6. ' ' → logprob: -4.952865123748779
    7. '=' → logprob: -5.202865123748779
    8. ' :' → logprob: -5.202865123748779
    9. ' !=' → logprob: -6.077865123748779
    10. '=='' → logprob: -6.202865123748779

Token 81: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04942527785897255
    2. ' '' → logprob: -3.0494253635406494
    3. '"' → logprob: -8.29942512512207
    4. ' ' → logprob: -8.42442512512207
    5. 'number' → logprob: -9.42442512512207
    6. ''-' → logprob: -9.67442512512207
    7. '1' → logprob: -9.67442512512207
    8. ''s' → logprob: -10.04942512512207
    9. ' number' → logprob: -10.42442512512207
    10. ' '-'' → logprob: -11.17442512512207

Token 82: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0852356106042862
    2. '0' → logprob: -2.835235595703125
    3. '7' → logprob: -5.210235595703125
    4. '-' → logprob: -5.585235595703125
    5. '8' → logprob: -5.960235595703125
    6. ''' → logprob: -5.960235595703125
    7. '4' → logprob: -6.085235595703125
    8. '5' → logprob: -6.210235595703125
    9. '9' → logprob: -6.335235595703125
    10. '3' → logprob: -7.085235595703125

Token 83: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2068081647157669
    2. '       ' → logprob: -2.081808090209961
    3. '':' → logprob: -3.456808090209961
    4. ':
' → logprob: -3.956808090209961
    5. ' :' → logprob: -5.081808090209961
    6. '           ' → logprob: -6.706808090209961
    7. '':
' → logprob: -7.081808090209961
    8. '   ' → logprob: -7.206808090209961
    9. ''' → logprob: -7.206808090209961
    10. ' :
' → logprob: -7.831808090209961

Token 84: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00487745413556695
    2. ' continue' → logprob: -6.12987756729126
    3. '           ' → logprob: -6.50487756729126
    4. ':' → logprob: -7.62987756729126
    5. '	continue' → logprob: -8.879877090454102
    6. '	       ' → logprob: -9.129877090454102
    7. '	' → logprob: -9.129877090454102
    8. '	   ' → logprob: -9.879877090454102
    9. 'continue' → logprob: -9.879877090454102
    10. '   ' → logprob: -10.004877090454102

Token 85: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08872917294502258
    2. ' continue' → logprob: -2.7137291431427
    3. '	continue' → logprob: -5.338729381561279
    4. 'continue' (adapté à ' continue') → logprob: -5.463729381561279
    5. '	       ' → logprob: -6.088729381561279
    6. ' ' → logprob: -6.088729381561279
    7. '           ' → logprob: -6.213729381561279
    8. '               ' → logprob: -7.088729381561279
    9. '	' → logprob: -7.588729381561279
    10. ' 	' → logprob: -8.463728904724121

Token 86: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.056341301649808884
    2. '       ' → logprob: -4.306341171264648
    3. '<|end|>' → logprob: -4.306341171264648
    4. '        
' → logprob: -4.806341171264648
    5. ' 
' → logprob: -4.806341171264648
    6. '  
' → logprob: -4.806341171264648
    7. '    
' → logprob: -6.306341171264648
    8. '   
' → logprob: -7.556341171264648
    9. '<|end|>' → logprob: -8.931341171264648
    10. '
' → logprob: -8.931341171264648

Token 87: '       ' (ID: 309)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.9979867935180664
    2. '       ' → logprob: -1.7479867935180664
    3. '
' → logprob: -2.1229867935180664
    4. '        
' → logprob: -2.2479867935180664
    5. '    
' → logprob: -2.8729867935180664
    6. '<|end|>' → logprob: -2.9979867935180664
    7. ' ' → logprob: -3.4979867935180664
    8. '    ' → logprob: -3.6229867935180664
    9. '  
' → logprob: -3.7479867935180664
    10. '     
' → logprob: -3.8729867935180664

Token 88: ' for' (ID: 395)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.574629545211792
    2. '    ' → logprob: -1.699629545211792
    3. ' for' → logprob: -1.699629545211792
    4. 'for' (adapté à ' for') → logprob: -1.699629545211792
    5. '   ' → logprob: -2.324629545211792
    6. ' 
' → logprob: -2.949629545211792
    7. '+' → logprob: -3.699629545211792
    8. '       ' → logprob: -3.949629545211792
    9. '<|end|>' → logprob: -4.199629783630371
    10. '
' → logprob: -4.449629783630371

Token 89: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.4740944504737854
    2. 'end' → logprob: -0.9740944504737854
    3. ' ' → logprob: -11.97409439086914
    4. 'length' → logprob: -12.59909439086914
    5. '   ' → logprob: -12.72409439086914
    6. ' length' → logprob: -13.34909439086914
    7. '	end' → logprob: -13.34909439086914
    8. '>end' → logprob: -14.84909439086914
    9. '```' → logprob: -15.22409439086914
    10. '[end' → logprob: -15.72409439086914

Token 90: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008626513183116913
    2. 'in' → logprob: -4.758626461029053
    3. ' ' → logprob: -11.883626937866211
    4. '	in' → logprob: -13.133626937866211
    5. 'In' → logprob: -14.008626937866211
    6. '+' → logprob: -14.883626937866211
    7. '    ' → logprob: -15.133626937866211
    8. 'range' → logprob: -15.133626937866211
    9. '<|end|>' → logprob: -15.258626937866211
    10. '   ' → logprob: -16.00862693786621

Token 91: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3868727385997772
    2. 'range' → logprob: -1.1368727684020996
    3. '(range' → logprob: -14.136872291564941
    4. '	range' → logprob: -14.761872291564941
    5. ' ' → logprob: -15.136872291564941
    6. '   ' → logprob: -15.261872291564941
    7. '  ' → logprob: -16.886873245239258
    8. '    ' → logprob: -18.136873245239258
    9. ' xrange' → logprob: -18.136873245239258
    10. 'r' → logprob: -19.011873245239258

Token 92: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.05070124939084053
    2. 'start' → logprob: -3.300701141357422
    3. ' start' → logprob: -4.425701141357422
    4. '[start' → logprob: -8.050701141357422
    5. ' (' → logprob: -8.800701141357422
    6. '(' → logprob: -9.800701141357422
    7. ',start' → logprob: -10.300701141357422
    8. '=start' → logprob: -10.675701141357422
    9. '(length' → logprob: -11.800701141357422
    10. ':start' → logprob: -12.300701141357422

Token 93: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1771629899740219
    2. ',' → logprob: -1.927163004875183
    3. ' +' → logprob: -4.552163124084473
    4. ',length' → logprob: -5.552163124084473
    5. ' ,' → logprob: -6.552163124084473
    6. '+,' → logprob: -7.927163124084473
    7. '   ' → logprob: -8.052163124084473
    8. ',len' → logprob: -8.552163124084473
    9. '    ' → logprob: -11.302163124084473
    10. ',end' → logprob: -11.677163124084473

Token 94: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004891689168289304
    2. ' ' → logprob: -7.625489234924316
    3. '   ' → logprob: -14.500489234924316
    4. '2' → logprob: -15.250489234924316
    5. '<|end|>' → logprob: -16.37548828125
    6. '  ' → logprob: -16.75048828125
    7. '0' → logprob: -16.81298828125
    8. '```' → logprob: -17.31298828125
    9. '    ' → logprob: -17.75048828125
    10. 'len' → logprob: -18.37548828125

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001295222609769553
    2. ' ' → logprob: -9.000129699707031
    3. '2' → logprob: -12.625129699707031
    4. '   ' → logprob: -13.250129699707031
    5. '  ' → logprob: -15.562629699707031
    6. '3' → logprob: -16.00012969970703
    7. '    ' → logprob: -16.62512969970703
    8. '0' → logprob: -16.87512969970703
    9. '```' → logprob: -16.93762969970703
    10. 'len' → logprob: -17.43762969970703

Token 96: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021532803773880005
    2. ',length' → logprob: -3.8965327739715576
    3. ' ,' → logprob: -7.271533012390137
    4. ',len' → logprob: -8.146533012390137
    5. ',size' → logprob: -13.646533012390137
    6. '<|end|>' → logprob: -14.146533012390137
    7. ',n' → logprob: -14.396533012390137
    8. '   ' → logprob: -14.896533012390137
    9. ',to' → logprob: -15.146533012390137
    10. ',l' → logprob: -15.146533012390137

Token 97: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.47407954931259155
    2. ' length' → logprob: -0.9740795493125916
    3. 'len' → logprob: -13.474079132080078
    4. '(length' → logprob: -14.974079132080078
    5. ',length' → logprob: -15.599079132080078
    6. '	length' → logprob: -15.849079132080078
    7. 'ength' → logprob: -16.099079132080078
    8. ' len' → logprob: -16.224079132080078
    9. '[length' → logprob: -16.224079132080078
    10. ' lenght' → logprob: -16.724079132080078

Token 98: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5759443640708923
    2. '+' → logprob: -0.8259443640708923
    3. '   ' → logprob: -12.450943946838379
    4. ' ' → logprob: -14.075943946838379
    5. '    ' → logprob: -15.700943946838379
    6. '  ' → logprob: -16.700944900512695
    7. ')' → logprob: -17.825944900512695
    8. ' +
' → logprob: -18.075944900512695
    9. '+i' → logprob: -18.450944900512695
    10. ')+' → logprob: -18.700944900512695

Token 99: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028108209371566772
    2. ' ' → logprob: -5.877810955047607
    3. '   ' → logprob: -12.87781047821045
    4. '```' → logprob: -13.00281047821045
    5. ')' → logprob: -14.87781047821045
    6. '  ' → logprob: -15.87781047821045
    7. '``' → logprob: -16.065311431884766
    8. '):
' → logprob: -16.815311431884766
    9. '    ' → logprob: -16.815311431884766
    10. '۱' → logprob: -17.377811431884766

Token 100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.908022285439074e-05
    2. ' ' → logprob: -9.750059127807617
    3. '   ' → logprob: -15.125059127807617
    4. '0' → logprob: -15.250059127807617
    5. '```' → logprob: -16.500059127807617
    6. ')' → logprob: -16.562559127807617
    7. '  ' → logprob: -17.437559127807617
    8. '2' → logprob: -18.125059127807617
    9. '``' → logprob: -18.125059127807617
    10. '１' → logprob: -18.187559127807617

Token 101: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013057165779173374
    2. ':' → logprob: -4.513057231903076
    3. '):
' → logprob: -6.263057231903076
    4. '       ' → logprob: -9.638056755065918
    5. '   ' → logprob: -11.888056755065918
    6. '           ' → logprob: -12.013056755065918
    7. '):
' → logprob: -12.138056755065918
    8. ')' → logprob: -12.263056755065918
    9. ' ):' → logprob: -12.263056755065918
    10. '):

' → logprob: -13.013056755065918

Token 102: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2715141475200653
    2. '           ' → logprob: -2.2715141773223877
    3. '<|end|>' → logprob: -2.2715141773223877
    4. ':' → logprob: -3.8965141773223877
    5. '<|end|>' → logprob: -5.021513938903809
    6. '        ' → logprob: -6.396513938903809
    7. '        
' → logprob: -7.521513938903809
    8. '   ' → logprob: -7.646513938903809
    9. ' ' → logprob: -8.146513938903809
    10. '	       ' → logprob: -8.521513938903809

Token 103: ' substring' (ID: 89494)
  Prédit: ' substring'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' substring' → logprob: -0.610402524471283
    2. ' ' → logprob: -1.8604025840759277
    3. '       ' → logprob: -2.1104025840759277
    4. '               ' → logprob: -2.2354025840759277
    5. ' substr' → logprob: -3.9854025840759277
    6. ' if' → logprob: -4.235402584075928
    7. ' s' → logprob: -4.610402584075928
    8. 'substring' (adapté à ' substring') → logprob: -5.110402584075928
    9. '<|end|>' → logprob: -5.235402584075928
    10. '           ' → logprob: -5.735402584075928

Token 104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001511408481746912
    2. '=' → logprob: -6.501511573791504
    3. ' ' → logprob: -12.376511573791504
    4. 's' → logprob: -12.751511573791504
    5. '    ' → logprob: -14.626511573791504
    6. '   ' → logprob: -14.876511573791504
    7. '        ' → logprob: -15.001511573791504
    8. '           ' → logprob: -15.001511573791504
    9. ')' → logprob: -16.126510620117188
    10. '       ' → logprob: -16.251510620117188

Token 105: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.06201496347784996
    2. 'number' → logprob: -2.8120150566101074
    3. ' int' → logprob: -10.68701457977295
    4. 'int' → logprob: -11.18701457977295
    5. ' ' → logprob: -11.81201457977295
    6. ' s' → logprob: -13.56201457977295
    7. 's' → logprob: -14.06201457977295
    8. '	number' → logprob: -14.06201457977295
    9. '  ' → logprob: -16.062015533447266
    10. '_number' → logprob: -16.937015533447266

Token 106: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.00029959288076497614
    2. '[' → logprob: -8.125299453735352
    3. '[s' → logprob: -13.625299453735352
    4. ' [' → logprob: -13.875299453735352
    5. '[int' → logprob: -14.125299453735352
    6. '[
' → logprob: -15.125299453735352
    7. '```' → logprob: -16.75029945373535
    8. 'start' → logprob: -17.00029945373535
    9. '   ' → logprob: -17.12529945373535
    10. '[state' → logprob: -17.25029945373535

Token 107: ':end' (ID: 63990)
  Prédit: ':end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':end' → logprob: -1.723973582556937e-05
    2. ':' → logprob: -11.625017166137695
    3. ' :' → logprob: -11.875017166137695
    4. '[end' → logprob: -13.625017166137695
    5. '@end' → logprob: -16.625017166137695
    6. ' ' → logprob: -17.625017166137695
    7. 'end' → logprob: -17.625017166137695
    8. ',end' → logprob: -17.625017166137695
    9. '	end' → logprob: -17.750017166137695
    10. '   ' → logprob: -18.250017166137695

Token 108: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6976985931396484
    2. ']
' → logprob: -0.6976985931396484
    3. '           ' → logprob: -5.822698593139648
    4. ']
' → logprob: -7.322698593139648
    5. ')' → logprob: -7.697698593139648
    6. ')
' → logprob: -7.822698593139648
    7. ']

' → logprob: -10.822698593139648
    8. '])' → logprob: -11.197698593139648
    9. '       ' → logprob: -11.572698593139648
    10. '])
' → logprob: -11.822698593139648

Token 109: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026940476149320602
    2. '
' → logprob: -3.9019405841827393
    3. '            
' → logprob: -5.90194034576416
    4. '<|end|>' → logprob: -6.40194034576416
    5. ' 
' → logprob: -6.65194034576416
    6. '            ' → logprob: -8.40194034576416
    7. ' ' → logprob: -8.65194034576416
    8. '  
' → logprob: -9.40194034576416
    9. '<|end|>' → logprob: -9.77694034576416
    10. ' if' → logprob: -10.02694034576416

Token 110: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.301404744386673
    2. ' if' → logprob: -1.4264047145843506
    3. 'if' (adapté à ' if') → logprob: -3.9264047145843506
    4. '            
' → logprob: -8.92640495300293
    5. '   ' → logprob: -9.67640495300293
    6. ' 
' → logprob: -10.05140495300293
    7. '
' → logprob: -10.55140495300293
    8. '<|end|>' → logprob: -11.05140495300293
    9. '       ' → logprob: -11.42640495300293
    10. ' ' → logprob: -11.42640495300293

Token 111: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -8.578184497309849e-05
    2. 'is' → logprob: -9.375085830688477
    3. ' ' → logprob: -14.500085830688477
    4. ' not' → logprob: -15.625085830688477
    5. ' len' → logprob: -16.250085830688477
    6. ' ' → logprob: -17.250085830688477
    7. '	is' → logprob: -17.625085830688477
    8. 'len' → logprob: -18.125085830688477
    9. 's' → logprob: -18.562585830688477
    10. 'not' → logprob: -19.062585830688477

Token 112: '_multiple' (ID: 111487)
  Prédit: '_multiple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_multiple' → logprob: -0.00015860427811276168
    2. '_' → logprob: -9.000158309936523
    3. '_m' → logprob: -11.125158309936523
    4. '_mul' → logprob: -11.750158309936523
    5. '_multi' → logprob: -12.125158309936523
    6. '_mult' → logprob: -12.500158309936523
    7. 'multiple' → logprob: -13.250158309936523
    8. ' _' → logprob: -14.000158309936523
    9. '_multiplier' → logprob: -15.500158309936523
    10. ' multiple' → logprob: -15.875158309936523

Token 113: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -1.1472419600977446e-06
    2. '_' → logprob: -14.750000953674316
    3. '_or' → logprob: -15.250000953674316
    4. ' _' → logprob: -16.000001907348633
    5. 'of' → logprob: -16.250001907348633
    6. ' of' → logprob: -16.500001907348633
    7. '_to' → logprob: -17.375001907348633
    8. '```' → logprob: -17.375001907348633
    9. '_for' → logprob: -17.500001907348633
    10. '_o' → logprob: -17.500001907348633

Token 114: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.000736846646759659
    2. '11' → logprob: -7.250736713409424
    3. '(' → logprob: -10.875737190246582
    4. '_of' → logprob: -12.625737190246582
    5. '('_' → logprob: -14.250737190246582
    6. ' _' → logprob: -14.500737190246582
    7. ' ' → logprob: -14.625737190246582
    8. 's' → logprob: -14.750737190246582
    9. '(_' → logprob: -15.125737190246582
    10. '-' → logprob: -15.500737190246582

Token 115: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.0001875671005109325
    2. '1' → logprob: -9.875187873840332
    3. ''' → logprob: -10.375187873840332
    4. ' ' → logprob: -10.625187873840332
    5. 'substring' → logprob: -10.625187873840332
    6. '_' → logprob: -11.125187873840332
    7. '"' → logprob: -11.250187873840332
    8. '`' → logprob: -11.875187873840332
    9. '(' → logprob: -12.750187873840332
    10. 's' → logprob: -12.937687873840332

Token 116: '(sub' (ID: 19764)
  Prédit: '(sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sub' → logprob: -0.0008700100006535649
    2. '(substr' → logprob: -7.375870227813721
    3. '(' → logprob: -8.500869750976562
    4. ' (' → logprob: -10.500869750976562
    5. '(s' → logprob: -12.250869750976562
    6. 'substring' → logprob: -12.250869750976562
    7. '("("' → logprob: -14.000869750976562
    8. ' substring' → logprob: -14.125869750976562
    9. ')' → logprob: -15.250869750976562
    10. '('' → logprob: -15.375869750976562

Token 117: 'string' (ID: 1655)
  Prédit: 'string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'string' → logprob: -0.001178439473733306
    2. 'tring' → logprob: -6.75117826461792
    3. 'ring' → logprob: -11.751178741455078
    4. 'str' → logprob: -16.001178741455078
    5. ' string' → logprob: -16.126178741455078
    6. '```' → logprob: -16.876178741455078
    7. 'String' → logprob: -17.626178741455078
    8. '   ' → logprob: -17.876178741455078
    9. 'ing' → logprob: -18.376178741455078
    10. 'substring' → logprob: -18.751178741455078

Token 118: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3163051903247833
    2. '):
' → logprob: -1.316305160522461
    3. ')' → logprob: -5.941305160522461
    4. '):
' → logprob: -8.691305160522461
    5. ':' → logprob: -8.816305160522461
    6. '           ' → logprob: -10.191305160522461
    7. '       ' → logprob: -11.191305160522461
    8. '):

' → logprob: -11.566305160522461
    9. ' ):' → logprob: -11.941305160522461
    10. '               ' → logprob: -12.441305160522461

Token 119: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002124806633219123
    2. ':' → logprob: -9.625212669372559
    3. ':
' → logprob: -10.125212669372559
    4. '                
' → logprob: -10.375212669372559
    5. '):
' → logprob: -10.625212669372559
    6. '                   ' → logprob: -11.375212669372559
    7. '<|end|>' → logprob: -11.875212669372559
    8. '              ' → logprob: -12.250212669372559
    9. '           ' → logprob: -12.500212669372559
    10. ')' → logprob: -12.625212669372559

Token 120: ' count' (ID: 3605)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0865509957075119
    2. '                   ' → logprob: -2.5865509510040283
    3. ' count' → logprob: -5.586551189422607
    4. '                       ' → logprob: -5.961551189422607
    5. 'count' (adapté à ' count') → logprob: -7.461551189422607
    6. '           ' → logprob: -8.71155071258545
    7. '                ' → logprob: -9.21155071258545
    8. '                
' → logprob: -9.33655071258545
    9. '                    
' → logprob: -9.33655071258545
    10. '```' → logprob: -9.83655071258545

Token 121: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.007668267469853163
    2. '+=' → logprob: -4.882668495178223
    3. '+' → logprob: -9.882668495178223
    4. '   ' → logprob: -13.007668495178223
    5. ' +' → logprob: -13.257668495178223
    6. ' ' → logprob: -13.507668495178223
    7. '    ' → logprob: -13.632668495178223
    8. ']+=' → logprob: -13.632668495178223
    9. '<|end|>' → logprob: -14.132668495178223
    10. ' =' → logprob: -14.382668495178223

Token 122: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08893957734107971
    2. ' ' → logprob: -2.463939666748047
    3. ' ' → logprob: -17.026439666748047
    4. '<|end|>' → logprob: -17.338939666748047
    5. '```' → logprob: -17.401439666748047
    6. '۱' → logprob: -18.463939666748047
    7. '１' → logprob: -18.713939666748047
    8. '  ' → logprob: -19.151439666748047
    9. '   ' → logprob: -19.588939666748047
    10. 's' → logprob: -19.713939666748047

Token 123: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.165027217415627e-05
    2. ' ' → logprob: -10.750021934509277
    3. 'len' → logprob: -16.25002098083496
    4. 'substring' → logprob: -18.31252098083496
    5. '   ' → logprob: -18.62502098083496
    6. '```' → logprob: -19.12502098083496
    7. 'int' → logprob: -19.31252098083496
    8. 'end' → logprob: -19.31252098083496
    9. '           ' → logprob: -19.37502098083496
    10. 'length' → logprob: -19.37502098083496

Token 124: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46581414341926575
    2. '
' → logprob: -1.0908141136169434
    3. 'print' → logprob: -3.3408141136169434
    4. '    
' → logprob: -7.215814113616943
    5. ' print' → logprob: -8.715814590454102
    6. '	print' → logprob: -10.465814590454102
    7. '<|end|>' → logprob: -10.715814590454102
    8. '
' → logprob: -10.965814590454102
    9. '  
' → logprob: -11.340814590454102
    10. '       ' → logprob: -11.715814590454102

Token 125: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16225558519363403
    2. 'print' → logprob: -1.9122555255889893
    3. ' print' → logprob: -6.912255764007568
    4. '
' → logprob: -6.912255764007568
    5. '    
' → logprob: -10.66225528717041
    6. '       ' → logprob: -12.78725528717041
    7. '```' → logprob: -12.91225528717041
    8. '	print' → logprob: -13.03725528717041
    9. '<|end|>' → logprob: -13.16225528717041
    10. '  
' → logprob: -13.91225528717041

Token 126: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00010783452307805419
    2. ' print' → logprob: -9.625107765197754
    3. '   ' → logprob: -10.125107765197754
    4. '
' → logprob: -13.375107765197754
    5. '    
' → logprob: -16.37510871887207
    6. '```' → logprob: -16.87510871887207
    7. '	print' → logprob: -18.37510871887207
    8. ' ' → logprob: -18.50010871887207
    9. '

' → logprob: -18.62510871887207
    10. '#print' → logprob: -18.75010871887207

Token 127: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.005235190503299236
    2. '(' → logprob: -5.255235195159912
    3. '(f' → logprob: -14.130234718322754
    4. ' (' → logprob: -14.630234718322754
    5. '(cnt' → logprob: -15.630234718322754
    6. '(c' → logprob: -16.88023567199707
    7. 'count' → logprob: -17.00523567199707
    8. '('' → logprob: -17.38023567199707
    9. '()' → logprob: -17.50523567199707
    10. '(
' → logprob: -18.25523567199707

Token 128: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ')`' → logprob: -16.25
    3. ' )' → logprob: -16.625
    4. ')
' → logprob: -17.625
    5. '))' → logprob: -18.875
    6. '())' → logprob: -19.75
    7. '`)' → logprob: -19.875
    8. '()' → logprob: -20.125
    9. '')' → logprob: -21.0
    10. ')}' → logprob: -21.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 126
Tokens correctement prédits (1ère position, stricte): 64
Tokens correctement prédits (1ère position, avec adaptation): 65
Tokens correctement prédits (top 10): 115
Précision stricte (1ère position): 50.79%
Précision adaptée (1ère position): 51.59%
Précision (top 10): 91.27%
================================================================================
