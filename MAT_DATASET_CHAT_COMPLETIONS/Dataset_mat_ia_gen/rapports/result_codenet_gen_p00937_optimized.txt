================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:43
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import deque
def main():
    n,m,a,b,c=map(int,input().split())
    edges=[[] for _ in range(n)]
    for _ in range(m):
        u,v=map(int,input().split())
        edges[u-1].append(v-1)
    steps=[a,b,c]

    # Precompute adjacency matrices for step counts a,b,c
    # Using matrix exponentiation by BFS for each step count
    def reachable_nodes(start, step):
        visited = [False]*n
        q = deque()
        q.append((start,0))
        visited_nodes = set()
        while q:
            u,d = q.popleft()
            if d==step:
                visited_nodes.add(u)
            elif d<step:
                for w in edges[u]:
                    q.append((w,d+1))
        return visited_nodes

    # For each node and each step count, precompute reachable nodes
    next_pos = [{} for _ in range(n)]  # next_pos[u][step] = set of reachable nodes from u in exactly step steps
    for u in range(n):
        for s in steps:
            next_pos[u][s] = reachable_nodes(u,s)
            # If no reachable nodes in exact s steps, empty set

    INF = 10**9
    # dp[turn][position]: minimal turns to reach goal from position after turn turns
    # However we want minimal turns to finish no matter what sequence of numbers brother choose
    # We use a value function V: minimal turns needed from node to reach goal no matter what choice of step in {a,b,c}
    # At each turn, brother chooses in {a,b,c}, we must be able to pick a move accordingly
    # So: V[u] = 0 if u == goal (n-1)
    # else V[u] = 1 + max over s in steps of min over v in next_pos[u][s] of V[v]
    # If for some s, next_pos[u][s] is empty -> we lose (IMPOSSIBLE)
    # Value iteration to find least fixed point

    V = [INF]*n
    V[n-1] = 0
    changed = True
    for _ in range(n*10):
        changed=False
        for u in range(n):
            if u==n-1:
                continue
            vals = []
            impossible = False
            for s in steps:
                reach = next_pos[u][s]
                if not reach:
                    impossible=True
                    break
                vals.append(min(V[v] for v in reach))
            if impossible:
                continue
            newV = 1+max(vals)
            if newV < V[u]:
                V[u]=newV
                changed=True
        if not changed:
            break

    print("IMPOSSIBLE" if V[0]==INF else V[0])
main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' deque' (ID: 90347)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.6150609850883484
    2. 'deque' → logprob: -1.2400610446929932
    3. 'default' → logprob: -2.240061044692993
    4. ' defaultdict' → logprob: -3.490061044692993
    5. 'Counter' → logprob: -4.240060806274414
    6. ' abc' → logprob: -4.615060806274414
    7. 'named' → logprob: -5.490060806274414
    8. ' deque' → logprob: -6.240060806274414
    9. ' Counter' → logprob: -7.115060806274414
    10. '```' → logprob: -7.240060806274414

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011402759701013565
    2. '\' → logprob: -5.636402606964111
    3. '\(' → logprob: -6.011402606964111
    4. '\n' → logprob: -6.636402606964111
    5. '.' → logprob: -7.136402606964111
    6. '```' → logprob: -7.386402606964111
    7. '[' → logprob: -7.886402606964111
    8. 'newline' → logprob: -7.886402606964111
    9. ' (' → logprob: -8.01140308380127
    10. '(
' → logprob: -8.13640308380127

Token 5: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6004850268363953
    2. '(' → logprob: -1.72548508644104
    3. 'a' → logprob: -2.72548508644104
    4. '
' → logprob: -3.10048508644104
    5. '\' → logprob: -3.22548508644104
    6. '\n' → logprob: -3.72548508644104
    7. '`' → logprob: -4.100484848022461
    8. '' → logprob: -4.600484848022461
    9. 'newline' → logprob: -4.725484848022461
    10. ' ' → logprob: -4.725484848022461

Token 6: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04232100397348404
    2. ' bfs' → logprob: -3.542320966720581
    3. ' deque' → logprob: -5.66732120513916
    4. ' ```' → logprob: -7.04232120513916
    5. ' queue' → logprob: -7.16732120513916
    6. ' my' → logprob: -7.29232120513916
    7. ' ' → logprob: -7.54232120513916
    8. ' breadth' → logprob: -7.66732120513916
    9. ' BFS' → logprob: -7.66732120513916
    10. ' create' → logprob: -7.79232120513916

Token 7: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0029179230332374573
    2. '(:' → logprob: -6.752917766571045
    3. ':' → logprob: -7.127917766571045
    4. '():' → logprob: -7.252917766571045
    5. ' (' → logprob: -9.752918243408203
    6. '```' → logprob: -9.752918243408203
    7. '(
' → logprob: -9.877918243408203
    8. '((' → logprob: -12.002918243408203
    9. '(`' → logprob: -12.127918243408203
    10. '(":' → logprob: -12.377918243408203

Token 8: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15980176627635956
    2. '(' → logprob: -2.159801721572876
    3. '```' → logprob: -4.159801959991455
    4. '[' → logprob: -5.159801959991455
    5. '    
' → logprob: -6.284801959991455
    6. '\' → logprob: -6.659801959991455
    7. '    ' → logprob: -6.659801959991455
    8. ':' → logprob: -6.784801959991455
    9. ' ' → logprob: -7.034801959991455
    10. '(
' → logprob: -7.659801959991455

Token 9: ' n' (ID: 297)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.4496686458587646
    2. '   ' → logprob: -1.8246686458587646
    3. 'q' → logprob: -2.0746686458587646
    4. 'n' (adapté à ' n') → logprob: -2.5746686458587646
    5. 'de' → logprob: -2.6996686458587646
    6. 'deque' → logprob: -2.6996686458587646
    7. 'queue' → logprob: -2.8246686458587646
    8. ' queue' → logprob: -3.0746686458587646
    9. ' ' → logprob: -3.8246686458587646
    10. 'a' → logprob: -3.9496686458587646

Token 10: ',m' (ID: 26648)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2086646556854248
    2. ' ' → logprob: -2.458664655685425
    3. '=' → logprob: -2.708664655685425
    4. '  ' → logprob: -4.083664894104004
    5. ',' → logprob: -5.333664894104004
    6. '_' → logprob: -5.458664894104004
    7. ')' → logprob: -5.833664894104004
    8. ' ,' → logprob: -6.458664894104004
    9. '   ' → logprob: -6.458664894104004
    10. ' )' → logprob: -7.083664894104004

Token 11: ',a' (ID: 26776)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31979769468307495
    2. ' =' → logprob: -1.3197977542877197
    3. ',' → logprob: -5.069797515869141
    4. ' ,' → logprob: -9.19479751586914
    5. ' ' → logprob: -9.56979751586914
    6. ')' → logprob: -10.56979751586914
    7. ' =
' → logprob: -12.06979751586914
    8. '   ' → logprob: -12.31979751586914
    9. '  ' → logprob: -12.56979751586914
    10. ')=' → logprob: -12.81979751586914

Token 12: ',b' (ID: 17568)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35100266337394714
    2. '=' → logprob: -1.2260026931762695
    3. ',' → logprob: -6.1010026931762695
    4. ',b' → logprob: -8.35100269317627
    5. ' =
' → logprob: -10.97600269317627
    6. ')' → logprob: -11.10100269317627
    7. ' ' → logprob: -11.22600269317627
    8. '=int' → logprob: -11.97600269317627
    9. ' ,' → logprob: -12.72600269317627
    10. '.' → logprob: -12.85100269317627

Token 13: ',c' (ID: 22261)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4292140007019043
    2. ' =' → logprob: -1.0542140007019043
    3. ',' → logprob: -7.679214000701904
    4. ':' → logprob: -10.679214477539062
    5. ' ' → logprob: -11.179214477539062
    6. '   ' → logprob: -12.429214477539062
    7. ' ,' → logprob: -13.054214477539062
    8. '  ' → logprob: -13.429214477539062
    9. ' :' → logprob: -13.929214477539062
    10. ' =
' → logprob: -14.179214477539062

Token 14: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39093947410583496
    2. ' =' → logprob: -1.140939474105835
    3. ',' → logprob: -5.515939712524414
    4. ')' → logprob: -10.890939712524414
    5. ';' → logprob: -12.640939712524414
    6. ' ,' → logprob: -12.890939712524414
    7. '  ' → logprob: -13.515939712524414
    8. ' ' → logprob: -13.765939712524414
    9. ')=' → logprob: -13.890939712524414
    10. '[' → logprob: -14.140939712524414

Token 15: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.6963154673576355
    2. ' map' → logprob: -0.8213154673576355
    3. '0' → logprob: -3.0713155269622803
    4. 'input' → logprob: -4.696315288543701
    5. ' ' → logprob: -5.696315288543701
    6. ' input' → logprob: -6.196315288543701
    7. 'list' → logprob: -8.19631576538086
    8. ' list' → logprob: -8.57131576538086
    9. 'int' → logprob: -9.07131576538086
    10. '1' → logprob: -9.94631576538086

Token 16: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.034772589802742004
    2. '<|end|>' → logprob: -4.0347723960876465
    3. '(lambda' → logprob: -5.0347723960876465
    4. ''' → logprob: -5.7847723960876465
    5. '```' → logprob: -6.4097723960876465
    6. '('' → logprob: -6.4097723960876465
    7. '(int' → logprob: -6.9097723960876465
    8. '<|end|>' → logprob: -8.034772872924805
    9. ' (' → logprob: -8.284772872924805
    10. '"' → logprob: -8.659772872924805

Token 17: ',input' (ID: 123014)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07535375654697418
    2. '<|end|>' → logprob: -3.3253538608551025
    3. ',' → logprob: -3.9503538608551025
    4. '(input' → logprob: -4.950353622436523
    5. '(' → logprob: -5.450353622436523
    6. '<|end|>' → logprob: -6.450353622436523
    7. '),' → logprob: -6.700353622436523
    8. ')(' → logprob: -7.200353622436523
    9. ',input' → logprob: -7.575353622436523
    10. 'input' → logprob: -8.325353622436523

Token 18: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.08747927099466324
    2. '())' → logprob: -2.58747935295105
    3. ')' → logprob: -5.087479114532471
    4. '()' → logprob: -6.087479114532471
    5. '());' → logprob: -10.462479591369629
    6. '()>' → logprob: -11.462479591369629
    7. '()),' → logprob: -11.587479591369629
    8. '();)' → logprob: -11.587479591369629
    9. '<|end|>' → logprob: -11.837479591369629
    10. '(' → logprob: -11.837479591369629

Token 19: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.8193366486229934e-05
    2. 'strip' → logprob: -11.000018119812012
    3. 'rstrip' → logprob: -14.125018119812012
    4. ' split' → logprob: -14.250018119812012
    5. '(split' → logprob: -17.000019073486328
    6. ')' → logprob: -17.750019073486328
    7. 'spl' → logprob: -18.750019073486328
    8. 's' → logprob: -19.125019073486328
    9. '_split' → logprob: -19.250019073486328
    10. '.split' → logprob: -19.875019073486328

Token 20: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001727656926959753
    2. '))' → logprob: -6.37672758102417
    3. ')))' → logprob: -11.626728057861328
    4. '())' → logprob: -12.251728057861328
    5. ')`' → logprob: -12.751728057861328
    6. '()' → logprob: -12.876728057861328
    7. '),' → logprob: -13.001728057861328
    8. '(' → logprob: -13.876728057861328
    9. '`)' → logprob: -14.251728057861328
    10. ' )' → logprob: -14.251728057861328

Token 21: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8632544875144958
    2. '   ' → logprob: -1.9882545471191406
    3. '\' → logprob: -2.1132545471191406
    4. 'd' → logprob: -2.2382545471191406
    5. '\n' → logprob: -2.4882545471191406
    6. '    
' → logprob: -3.1132545471191406
    7. '[' → logprob: -4.488254547119141
    8. '  
' → logprob: -4.738254547119141
    9. '   
' → logprob: -4.863254547119141
    10. '```' → logprob: -4.863254547119141

Token 22: ' edges' (ID: 22569)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.5992909669876099
    2. '\n' → logprob: -2.0992908477783203
    3. ' d' → logprob: -2.5992908477783203
    4. '`' → logprob: -2.5992908477783203
    5. ' 
' → logprob: -2.7242908477783203
    6. 's' → logprob: -3.0992908477783203
    7. ' \' → logprob: -3.2242908477783203
    8. '   ' → logprob: -3.2242908477783203
    9. '\' → logprob: -3.3492908477783203
    10. ')' → logprob: -3.5992908477783203

Token 23: '=[' (ID: 13370)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018272733315825462
    2. '=' → logprob: -4.018272876739502
    3. '=[]' → logprob: -9.268272399902344
    4. '<|end|>' → logprob: -11.768272399902344
    5. ')' → logprob: -12.143272399902344
    6. ' =[' → logprob: -12.643272399902344
    7. '[' → logprob: -13.268272399902344
    8. '={}' → logprob: -13.268272399902344
    9. ' ' → logprob: -13.518272399902344
    10. '.' → logprob: -13.643272399902344

Token 24: '[]' (ID: 1951)
  Prédit: '[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.002150142565369606
    2. '()]' → logprob: -7.252150058746338
    3. '()' → logprob: -7.502150058746338
    4. ' []' → logprob: -8.127150535583496
    5. 'list' → logprob: -8.627150535583496
    6. ']' → logprob: -8.627150535583496
    7. 'deque' → logprob: -9.127150535583496
    8. 'tuple' → logprob: -9.877150535583496
    9. '   ' → logprob: -10.752150535583496
    10. '(' → logprob: -10.877150535583496

Token 25: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7522011399269104
    2. '()' → logprob: -1.0022010803222656
    3. ']' → logprob: -2.7522010803222656
    4. 'for' → logprob: -2.7522010803222656
    5. '(' → logprob: -3.8772010803222656
    6. ')' → logprob: -4.752201080322266
    7. '()]' → logprob: -6.127201080322266
    8. '(n' → logprob: -6.877201080322266
    9. '   ' → logprob: -8.002201080322266
    10. ',' → logprob: -8.252201080322266

Token 26: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00576702319085598
    2. ' _' → logprob: -5.755766868591309
    3. ' range' → logprob: -6.505766868591309
    4. '(' → logprob: -8.005766868591309
    5. 'range' → logprob: -8.380766868591309
    6. '_range' → logprob: -8.630766868591309
    7. '(range' → logprob: -9.255766868591309
    8. ' in' → logprob: -9.380766868591309
    9. ' ' → logprob: -9.505766868591309
    10. '_i' → logprob: -10.005766868591309

Token 27: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0060051134787499905
    2. 'in' → logprob: -5.13100528717041
    3. 'range' → logprob: -9.88100528717041
    4. 'n' → logprob: -11.75600528717041
    5. ' ' → logprob: -12.00600528717041
    6. '(' → logprob: -12.25600528717041
    7. '(n' → logprob: -13.00600528717041
    8. ' range' → logprob: -14.25600528717041
    9. 'i' → logprob: -14.63100528717041
    10. '0' → logprob: -14.88100528717041

Token 28: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.47408682107925415
    2. ' range' → logprob: -0.9740868210792542
    3. '(range' → logprob: -11.59908676147461
    4. '(n' → logprob: -15.59908676147461
    5. 'n' → logprob: -15.84908676147461
    6. '	range' → logprob: -16.09908676147461
    7. ' ' → logprob: -16.97408676147461
    8. '   ' → logprob: -17.34908676147461
    9. '_range' → logprob: -17.47408676147461
    10. 'in' → logprob: -18.59908676147461

Token 29: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.374227425316349e-05
    2. 'n' → logprob: -9.750073432922363
    3. '(' → logprob: -11.125073432922363
    4. ' n' → logprob: -15.125073432922363
    5. ' (' → logprob: -15.750073432922363
    6. '(m' → logprob: -16.87507438659668
    7. ')n' → logprob: -17.37507438659668
    8. '	n' → logprob: -19.00007438659668
    9. ',n' → logprob: -19.12507438659668
    10. ')' → logprob: -19.37507438659668

Token 30: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -5.438573680294212e-06
    2. ')' → logprob: -12.750005722045898
    3. ')]
' → logprob: -13.875005722045898
    4. ']' → logprob: -14.125005722045898
    5. ' )' → logprob: -14.625005722045898
    6. ')])' → logprob: -16.2500057220459
    7. '+' → logprob: -16.5000057220459
    8. ')]
' → logprob: -17.1250057220459
    9. '')]' → logprob: -17.2500057220459
    10. '])' → logprob: -17.6250057220459

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17343103885650635
    2. '<|end|>' → logprob: -2.173430919647217
    3. '
' → logprob: -4.048430919647217
    4. '    
' → logprob: -4.548430919647217
    5. '\n' → logprob: -5.423430919647217
    6. '  
' → logprob: -5.798430919647217
    7. '\' → logprob: -6.173430919647217
    8. ' 
' → logprob: -6.423430919647217
    9. 'for' → logprob: -6.548430919647217
    10. ' for' → logprob: -6.798430919647217

Token 32: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0006851525395177305
    2. ' for' → logprob: -7.750685214996338
    3. 'n' → logprob: -8.75068473815918
    4. 'm' → logprob: -9.75068473815918
    5. '   ' → logprob: -10.50068473815918
    6. 'range' → logprob: -12.37568473815918
    7. 'int' → logprob: -13.75068473815918
    8. '```' → logprob: -13.87568473815918
    9. '0' → logprob: -14.87568473815918
    10. '	for' → logprob: -14.87568473815918

Token 33: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.03175912797451019
    2. ' i' → logprob: -4.156759262084961
    3. '_' → logprob: -4.906759262084961
    4. ' ' → logprob: -5.031759262084961
    5. ' range' → logprob: -6.406759262084961
    6. ' in' → logprob: -11.656759262084961
    7. 'range' → logprob: -12.406759262084961
    8. ' ‌' → logprob: -12.531759262084961
    9. ' ▁' → logprob: -12.906759262084961
    10. '_range' → logprob: -13.281759262084961

Token 34: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12711624801158905
    2. 'in' → logprob: -2.1271162033081055
    3. ' ' → logprob: -9.252116203308105
    4. 'range' → logprob: -10.252116203308105
    5. 'n' → logprob: -11.002116203308105
    6. 'import' → logprob: -11.752116203308105
    7. 's' → logprob: -12.002116203308105
    8. 'input' → logprob: -12.377116203308105
    9. 'i' → logprob: -12.502116203308105
    10. '  ' → logprob: -12.752116203308105

Token 35: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.624555291840807e-05
    2. ' range' → logprob: -9.500076293945312
    3. 'ange' → logprob: -14.250076293945312
    4. '(range' → logprob: -14.625076293945312
    5. 'input' → logprob: -16.500076293945312
    6. '```' → logprob: -16.750076293945312
    7. '[' → logprob: -17.000076293945312
    8. ' ' → logprob: -17.250076293945312
    9. '	range' → logprob: -17.250076293945312
    10. '   ' → logprob: -17.750076293945312

Token 36: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.008874666877090931
    2. '(' → logprob: -5.383874893188477
    3. '(n' → logprob: -5.508874893188477
    4. ' (' → logprob: -8.633874893188477
    5. '(int' → logprob: -12.258874893188477
    6. ' m' → logprob: -12.258874893188477
    7. 'm' → logprob: -12.383874893188477
    8. '(a' → logprob: -14.383874893188477
    9. '(M' → logprob: -14.633874893188477
    10. '(s' → logprob: -14.758874893188477

Token 37: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10316712409257889
    2. ')' → logprob: -2.3531670570373535
    3. ' ):' → logprob: -6.1031670570373535
    4. ' )' → logprob: -7.9781670570373535
    5. ')]' → logprob: -8.728167533874512
    6. '):
' → logprob: -9.353167533874512
    7. ',' → logprob: -9.853167533874512
    8. ':' → logprob: -10.603167533874512
    9. '   ' → logprob: -11.603167533874512
    10. ' ' → logprob: -11.853167533874512

Token 38: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09459952265024185
    2. ' readline' → logprob: -3.844599485397339
    3. '<|end|>' → logprob: -4.094599723815918
    4. ' input' → logprob: -4.469599723815918
    5. ' edges' → logprob: -4.719599723815918
    6. '       ' → logprob: -5.094599723815918
    7. ' ' → logprob: -5.469599723815918
    8. ' 
' → logprob: -5.469599723815918
    9. '```' → logprob: -5.469599723815918
    10. '    ' → logprob: -5.844599723815918

Token 39: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.14465579390525818
    2. ' u' → logprob: -2.019655704498291
    3. 'x' → logprob: -6.894655704498291
    4. '   ' → logprob: -7.144655704498291
    5. '```' → logprob: -9.76965618133545
    6. ' x' → logprob: -10.01965618133545
    7. 'v' → logprob: -11.26965618133545
    8. ' ' → logprob: -11.39465618133545
    9. '	u' → logprob: -11.89465618133545
    10. 's' → logprob: -12.26965618133545

Token 40: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.5769322514533997
    2. ',' → logprob: -0.8269322514533997
    3. ' ,' → logprob: -7.201932430267334
    4. ',b' → logprob: -9.451931953430176
    5. ',j' → logprob: -9.951931953430176
    6. ',input' → logprob: -11.076931953430176
    7. ',d' → logprob: -11.326931953430176
    8. ',s' → logprob: -11.451931953430176
    9. ',m' → logprob: -11.451931953430176
    10. ',c' → logprob: -11.451931953430176

Token 41: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.047199226915836334
    2. ' =' → logprob: -3.797199249267578
    3. '=input' → logprob: -4.297199249267578
    4. ',' → logprob: -4.922199249267578
    5. ',v' → logprob: -6.797199249267578
    6. ',input' → logprob: -7.297199249267578
    7. '=int' → logprob: -8.172199249267578
    8. ',u' → logprob: -8.297199249267578
    9. ',w' → logprob: -8.797199249267578
    10. ')=' → logprob: -10.172199249267578

Token 42: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.026309354230761528
    2. ' map' → logprob: -3.6513092517852783
    3. ' ' → logprob: -12.4013090133667
    4. '	map' → logprob: -13.0263090133667
    5. '   ' → logprob: -14.1513090133667
    6. 'list' → logprob: -14.5263090133667
    7. '(map' → logprob: -14.9013090133667
    8. '  ' → logprob: -15.0263090133667
    9. 'input' → logprob: -15.2763090133667
    10. ',map' → logprob: -15.2763090133667

Token 43: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0005189551156945527
    2. '(' → logprob: -7.625518798828125
    3. '<int' → logprob: -11.250518798828125
    4. '<|end|>' → logprob: -12.000518798828125
    5. '(lambda' → logprob: -12.875518798828125
    6. '[int' → logprob: -13.000518798828125
    7. ' (' → logprob: -13.000518798828125
    8. '=int' → logprob: -13.750518798828125
    9. '(
' → logprob: -13.875518798828125
    10. ',int' → logprob: -14.375518798828125

Token 44: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.042881689965724945
    2. ',' → logprob: -3.417881727218628
    3. '(),' → logprob: -5.417881488800049
    4. '(input' → logprob: -5.792881488800049
    5. '().' → logprob: -7.667881488800049
    6. ',int' → logprob: -8.042881965637207
    7. '()' → logprob: -8.417881965637207
    8. '(' → logprob: -8.917881965637207
    9. 'input' → logprob: -9.167881965637207
    10. '=input' → logprob: -9.292881965637207

Token 45: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.41866585687967e-06
    2. '()' → logprob: -12.000008583068848
    3. ' ().' → logprob: -13.750008583068848
    4. '(' → logprob: -14.250008583068848
    5. '.' → logprob: -15.750008583068848
    6. '.split' → logprob: -16.62500762939453
    7. '.readline' → logprob: -16.87500762939453
    8. ')' → logprob: -17.50000762939453
    9. '().__' → logprob: -17.75000762939453
    10. '   ' → logprob: -17.75000762939453

Token 46: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. ' split' → logprob: -15.875
    3. 'spl' → logprob: -17.375
    4. 'strip' → logprob: -18.25
    5. '.split' → logprob: -18.5
    6. '(split' → logprob: -18.625
    7. '().' → logprob: -19.25
    8. 'plit' → logprob: -20.25
    9. '```' → logprob: -20.25
    10. 'rstrip' → logprob: -20.5

Token 47: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.097434401512146
    2. ')' → logprob: -2.4724345207214355
    3. '())
' → logprob: -5.2224345207214355
    4. '()' → logprob: -5.8474345207214355
    5. ')
' → logprob: -9.222434043884277
    6. '())
' → logprob: -11.097434043884277
    7. '());' → logprob: -11.347434043884277
    8. '()
' → logprob: -11.847434043884277
    9. '))' → logprob: -12.222434043884277
    10. '();)' → logprob: -12.222434043884277

Token 48: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012897370383143425
    2. '<|end|>' → logprob: -4.512897491455078
    3. '   ' → logprob: -7.012897491455078
    4. ',' → logprob: -7.762897491455078
    5. '<|end|>' → logprob: -8.887897491455078
    6. ')' → logprob: -9.012897491455078
    7. '        
' → logprob: -9.387897491455078
    8. ' edges' → logprob: -10.012897491455078
    9. '```' → logprob: -10.512897491455078
    10. '[' → logprob: -11.137897491455078

Token 49: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.03310658782720566
    2. 'edges' (adapté à ' edges') → logprob: -3.533106565475464
    3. '       ' → logprob: -5.908106803894043
    4. '   ' → logprob: -7.658106803894043
    5. '(edges' → logprob: -10.158106803894043
    6. '```' → logprob: -10.408106803894043
    7. '.edges' → logprob: -10.533106803894043
    8. '        ' → logprob: -11.283106803894043
    9. '    ' → logprob: -11.783106803894043
    10. ' u' → logprob: -11.908106803894043

Token 50: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -6.749814019713085e-06
    2. '[' → logprob: -12.125006675720215
    3. '[v' → logprob: -14.000006675720215
    4. '   ' → logprob: -15.250006675720215
    5. ' [' → logprob: -17.00000762939453
    6. '```' → logprob: -17.37500762939453
    7. '[a' → logprob: -17.62500762939453
    8. 'u' → logprob: -18.12500762939453
    9. '\[' → logprob: -18.62500762939453
    10. '[int' → logprob: -18.75000762939453

Token 51: '-' (ID: 12)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0009137284359894693
    2. '-' → logprob: -7.250913619995117
    3. ']' → logprob: -9.250913619995117
    4. '[' → logprob: -10.375913619995117
    5. '[u' → logprob: -10.625913619995117
    6. ' ].' → logprob: -10.750913619995117
    7. '   ' → logprob: -11.750913619995117
    8. ' -' → logprob: -11.875913619995117
    9. '.' → logprob: -12.000913619995117
    10. '.append' → logprob: -13.000913619995117

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029685118352063
    2. ' ' → logprob: -8.125296592712402
    3. '2' → logprob: -15.000296592712402
    4. '<|end|>' → logprob: -16.50029754638672
    5. '```' → logprob: -16.50029754638672
    6. ')' → logprob: -16.81279754638672
    7. 'to' → logprob: -17.00029754638672
    8. '１' → logprob: -17.06279754638672
    9. ']' → logprob: -17.06279754638672
    10. '`' → logprob: -17.37529754638672

Token 53: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -9.662937372922897e-05
    2. '.append' → logprob: -10.250096321105957
    3. ']' → logprob: -10.500096321105957
    4. ' ].' → logprob: -10.750096321105957
    5. ').' → logprob: -12.125096321105957
    6. '.' → logprob: -12.250096321105957
    7. '   ' → logprob: -13.500096321105957
    8. ']].' → logprob: -16.000097274780273
    9. ')].' → logprob: -16.250097274780273
    10. '       ' → logprob: -16.625097274780273

Token 54: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.320199877838604e-07
    2. 'appen' → logprob: -15.625
    3. ' append' → logprob: -16.125
    4. '.append' → logprob: -17.125
    5. 'app' → logprob: -18.5
    6. 'add' → logprob: -18.875
    7. '	append' → logprob: -20.125
    8. 'push' → logprob: -21.0
    9. 'appe' → logprob: -21.375
    10. 'Append' → logprob: -22.375

Token 55: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.011079414747655392
    2. '((' → logprob: -4.51107931137085
    3. '(' → logprob: -10.761079788208008
    4. 'v' → logprob: -11.511079788208008
    5. ' (' → logprob: -15.886079788208008
    6. '(
' → logprob: -17.011079788208008
    7. '[v' → logprob: -17.386079788208008
    8. '([' → logprob: -17.386079788208008
    9. ')v' → logprob: -17.511079788208008
    10. ' v' → logprob: -17.636079788208008

Token 56: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0021855919621884823
    2. ' -' → logprob: -6.127185821533203
    3. ')' → logprob: -15.252185821533203
    4. ')-' → logprob: -16.002185821533203
    5. '-)' → logprob: -16.627185821533203
    6. '()-' → logprob: -17.127185821533203
    7. '[' → logprob: -17.252185821533203
    8. '1' → logprob: -17.502185821533203
    9. '   ' → logprob: -18.377185821533203
    10. ' ' → logprob: -18.502185821533203

Token 57: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2352385965641588e-05
    2. ' ' → logprob: -11.500012397766113
    3. '2' → logprob: -13.750012397766113
    4. ')' → logprob: -14.750012397766113
    5. '<|end|>' → logprob: -15.000012397766113
    6. '```' → logprob: -16.187511444091797
    7. '<|end|>' → logprob: -16.437511444091797
    8. '   ' → logprob: -16.625011444091797
    9. '１' → logprob: -17.312511444091797
    10. '`' → logprob: -17.812511444091797

Token 58: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016092435689643025
    2. ')
' → logprob: -6.5016093254089355
    3. ' )' → logprob: -9.751608848571777
    4. '       ' → logprob: -10.126608848571777
    5. '   ' → logprob: -12.876608848571777
    6. ')
' → logprob: -13.876608848571777
    7. '),' → logprob: -14.126608848571777
    8. ' )
' → logprob: -14.126608848571777
    9. '<|end|>' → logprob: -14.251608848571777
    10. ')#' → logprob: -14.376608848571777

Token 59: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010603178525343537
    2. '   ' → logprob: -8.001060485839844
    3. ' edges' → logprob: -8.126060485839844
    4. 'edges' → logprob: -8.251060485839844
    5. '<|end|>' → logprob: -9.001060485839844
    6. '```' → logprob: -11.501060485839844
    7. '<|end|>' → logprob: -11.501060485839844
    8. ',' → logprob: -12.126060485839844
    9. '(edges' → logprob: -12.626060485839844
    10. ' and' → logprob: -13.001060485839844

Token 60: ' steps' (ID: 10331)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: '=[' (ID: 13370)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2450684756040573
    2. '=' → logprob: -1.6200684309005737
    3. '=[' → logprob: -4.495068550109863
    4. '=[]' → logprob: -5.495068550109863
    5. '[' → logprob: -5.745068550109863
    6. 's' → logprob: -8.745068550109863
    7. '[]' → logprob: -8.995068550109863
    8. ' =[' → logprob: -9.245068550109863
    9. '=[[' → logprob: -9.495068550109863
    10. '=[
' → logprob: -9.745068550109863

Token 62: 'a' (ID: 64)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05126087740063667
    2. 'float' → logprob: -4.051260948181152
    3. '-inf' → logprob: -4.176260948181152
    4. ' -' → logprob: -4.801260948181152
    5. '0' → logprob: -5.301260948181152
    6. ' float' → logprob: -6.926260948181152
    7. '[-' → logprob: -7.051260948181152
    8. '10' → logprob: -7.551260948181152
    9. '-n' → logprob: -7.676260948181152
    10. ' ' → logprob: -8.801260948181152

Token 63: ',b' (ID: 17568)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.007477783132344484
    2. ' -' → logprob: -5.007477760314941
    3. ']' → logprob: -7.757477760314941
    4. ',' → logprob: -8.882477760314941
    5. ',b' → logprob: -9.007477760314941
    6. '+' → logprob: -11.632477760314941
    7. ']-' → logprob: -11.632477760314941
    8. ',-' → logprob: -11.882477760314941
    9. ' ]' → logprob: -11.882477760314941
    10. ')]' → logprob: -12.257477760314941

Token 64: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.03966839239001274
    2. ',' → logprob: -3.414668321609497
    3. ']' → logprob: -5.539668560028076
    4. '-' → logprob: -7.164668560028076
    5. ' ,' → logprob: -7.664668560028076
    6. '],' → logprob: -8.289668083190918
    7. '   ' → logprob: -9.164668083190918
    8. 'c' → logprob: -9.414668083190918
    9. ')]' → logprob: -9.789668083190918
    10. ')' → logprob: -9.789668083190918

Token 65: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002154187997803092
    2. ' ]' → logprob: -6.627154350280762
    3. ',' → logprob: -8.002154350280762
    4. ')]' → logprob: -8.502154350280762
    5. '-' → logprob: -9.377154350280762
    6. ']
' → logprob: -10.127154350280762
    7. '])' → logprob: -10.502154350280762
    8. ')' → logprob: -10.627154350280762
    9. '`]' → logprob: -11.127154350280762
    10. '],' → logprob: -11.377154350280762

Token 66: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21083925664424896
    2. '<|end|>' → logprob: -1.7108392715454102
    3. '   ' → logprob: -5.71083927154541
    4. '[' → logprob: -6.21083927154541
    5. '<|end|>' → logprob: -6.83583927154541
    6. ')' → logprob: -7.21083927154541
    7. '  
' → logprob: -7.71083927154541
    8. ' 
' → logprob: -8.46083927154541
    9. ' ' → logprob: -8.46083927154541
    10. '```' → logprob: -8.71083927154541

Token 67: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.13950586318969727
    2. '   ' → logprob: -3.3895058631896973
    3. 'distance' → logprob: -4.014505863189697
    4. 'queue' → logprob: -4.139505863189697
    5. 'def' → logprob: -4.264505863189697
    6. 'for' → logprob: -4.389505863189697
    7. 'visited' → logprob: -4.764505863189697
    8. 'dp' → logprob: -5.014505863189697
    9. ' for' → logprob: -5.889505863189697
    10. 'd' → logprob: -5.889505863189697

Token 68: ' Pre' (ID: 4659)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0812935829162598
    2. 'for' → logprob: -1.4562935829162598
    3. ' ' → logprob: -1.9562935829162598
    4. 'd' → logprob: -2.7062935829162598
    5. 'dist' → logprob: -3.4562935829162598
    6. ' d' → logprob: -3.5812935829162598
    7. ' #' → logprob: -3.7062935829162598
    8. '#' → logprob: -4.20629358291626
    9. 'def' → logprob: -4.45629358291626
    10. ' dist' → logprob: -4.70629358291626

Token 69: 'compute' (ID: 54521)
  Prédit: 'fix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.8233643770217896
    2. 'compute' → logprob: -1.4483643770217896
    3. 'vious' → logprob: -2.1983642578125
    4. 'sum' → logprob: -2.3233642578125
    5. 'dict' → logprob: -3.5733642578125
    6. 'processing' → logprob: -4.1983642578125
    7. 'comput' → logprob: -4.1983642578125
    8. 'd' → logprob: -4.3233642578125
    9. 'v' → logprob: -4.4483642578125
    10. 'viously' → logprob: -5.1983642578125

Token 70: ' adjacency' (ID: 177015)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.2743868827819824
    2. ' distances' → logprob: -1.7743868827819824
    3. ' dist' → logprob: -3.3993868827819824
    4. 'distance' → logprob: -3.7743868827819824
    5. '_dist' → logprob: -5.524386882781982
    6. '<|end|>' → logprob: -5.649386882781982
    7. ' the' → logprob: -7.024386882781982
    8. ' distance' → logprob: -7.149386882781982
    9. 'steps' → logprob: -7.774386882781982
    10. 'd' → logprob: -7.774386882781982

Token 71: ' matrices' (ID: 75935)
  Prédit: ' lists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lists' → logprob: -0.5891034603118896
    2. '_list' → logprob: -1.9641034603118896
    3. ' matrix' → logprob: -2.8391034603118896
    4. '_matrix' → logprob: -3.0891034603118896
    5. 'list' → logprob: -3.4641034603118896
    6. '_lists' → logprob: -3.4641034603118896
    7. '<|end|>' → logprob: -3.5891034603118896
    8. 'matrix' → logprob: -3.5891034603118896
    9. 's' → logprob: -3.7141034603118896
    10. ' matrices' → logprob: -4.089103698730469

Token 72: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 73: ' step' (ID: 5983)
  Prédit: ' each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.28805452585220337
    2. 'each' → logprob: -2.0380544662475586
    3. ' steps' → logprob: -3.2880544662475586
    4. ' all' → logprob: -3.4130544662475586
    5. ' ' → logprob: -4.538054466247559
    6. ' k' → logprob: -4.788054466247559
    7. ' the' → logprob: -5.413054466247559
    8. 'steps' → logprob: -5.538054466247559
    9. ' BFS' → logprob: -5.538054466247559
    10. ' range' → logprob: -5.913054466247559

Token 74: ' counts' (ID: 28991)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.021044880151748657
    2. 'sizes' → logprob: -4.521044731140137
    3. ' s' → logprob: -6.021044731140137
    4. '_sizes' → logprob: -6.646044731140137
    5. ' ' → logprob: -7.146044731140137
    6. 'es' → logprob: -7.271044731140137
    7. '<|end|>' → logprob: -7.396044731140137
    8. '   ' → logprob: -7.771044731140137
    9. 'steps' → logprob: -8.021044731140137
    10. '_lengths' → logprob: -8.146044731140137

Token 75: ' a' (ID: 261)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 76: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7855512499809265
    2. '<|end|>' → logprob: -1.2855513095855713
    3. '+' → logprob: -2.2855513095855713
    4. ' ' → logprob: -2.9105513095855713
    5. ' and' → logprob: -3.4105513095855713
    6. ' ,' → logprob: -3.7855513095855713
    7. ']' → logprob: -4.535551071166992
    8. '<|end|>' → logprob: -4.910551071166992
    9. ' for' → logprob: -5.410551071166992
    10. '   ' → logprob: -5.410551071166992

Token 77: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9289255738258362
    2. '<|end|>' → logprob: -1.5539255142211914
    3. '   ' → logprob: -2.0539255142211914
    4. ' and' → logprob: -2.9289255142211914
    5. '.' → logprob: -3.3039255142211914
    6. ':' → logprob: -3.4289255142211914
    7. ' ,' → logprob: -3.4289255142211914
    8. ' for' → logprob: -4.428925514221191
    9. ')' → logprob: -4.553925514221191
    10. ' ' → logprob: -4.678925514221191

Token 78: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5676662921905518
    2. '<|end|>' → logprob: -0.9426662921905518
    3. '```' → logprob: -4.567666053771973
    4. ',' → logprob: -5.192666053771973
    5. '<|end|>' → logprob: -5.192666053771973
    6. ':' → logprob: -5.317666053771973
    7. '.' → logprob: -5.442666053771973
    8. '\' → logprob: -6.692666053771973
    9. '   ' → logprob: -6.942666053771973
    10. ' ' → logprob: -6.942666053771973

Token 79: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06279848515987396
    2. '<|end|>' → logprob: -3.562798500061035
    3. '```' → logprob: -4.437798500061035
    4. ',' → logprob: -5.812798500061035
    5. '   ' → logprob: -6.187798500061035
    6. '\n' → logprob: -6.187798500061035
    7. 'import' → logprob: -6.687798500061035
    8. '.' → logprob: -6.812798500061035
    9. ':' → logprob: -6.937798500061035
    10. '#' → logprob: -7.062798500061035

Token 80: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3323653042316437
    2. ' matrices' → logprob: -2.9573652744293213
    3. 'adj' → logprob: -3.2073652744293213
    4. 'def' → logprob: -3.2073652744293213
    5. 'dp' → logprob: -3.5823652744293213
    6. ' adjacency' → logprob: -4.2073655128479
    7. ' adj' → logprob: -4.3323655128479
    8. '```' → logprob: -4.5823655128479
    9. ' for' → logprob: -4.8323655128479
    10. 'dist' → logprob: -4.8323655128479

Token 81: ' Using' (ID: 17511)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5561588406562805
    2. ' for' → logprob: -2.1811587810516357
    3. 'from' → logprob: -3.3061587810516357
    4. '#' → logprob: -3.6811587810516357
    5. 'dp' → logprob: -3.8061587810516357
    6. 'dist' → logprob: -3.9311587810516357
    7. 'for' → logprob: -3.9311587810516357
    8. ' from' → logprob: -4.181159019470215
    9. ' #' → logprob: -4.181159019470215
    10. ' matrices' → logprob: -4.181159019470215

Token 82: ' matrix' (ID: 12248)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.9356661438941956
    2. 'pow' → logprob: -1.5606660842895508
    3. '[' → logprob: -2.810666084289551
    4. 'def' → logprob: -2.935666084289551
    5. 'adj' → logprob: -3.060666084289551
    6. 'numpy' → logprob: -3.685666084289551
    7. ' deque' → logprob: -3.810666084289551
    8. 'edges' → logprob: -3.810666084289551
    9. ' adjacency' → logprob: -3.810666084289551
    10. '[]' → logprob: -3.935666084289551

Token 83: ' exponent' (ID: 51159)
  Prédit: ' multiplication'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' multiplication' → logprob: -0.10392684489488602
    2. ' exponent' → logprob: -3.10392689704895
    3. '<|end|>' → logprob: -3.97892689704895
    4. 'multip' → logprob: -4.353926658630371
    5. '[' → logprob: -5.353926658630371
    6. ' power' → logprob: -5.603926658630371
    7. 'pow' → logprob: -5.853926658630371
    8. '[]' → logprob: -5.978926658630371
    9. ' multip' → logprob: -6.603926658630371
    10. '_power' → logprob: -6.978926658630371

Token 84: 'iation' (ID: 23408)
  Prédit: 'ation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.25312426686286926
    2. 'iation' → logprob: -1.5031242370605469
    3. 'a' → logprob: -7.878124237060547
    4. 'entation' → logprob: -8.003124237060547
    5. 'ations' → logprob: -8.753124237060547
    6. 'enti' → logprob: -9.378124237060547
    7. 't' → logprob: -10.003124237060547
    8. '```' → logprob: -10.128124237060547
    9. 'ion' → logprob: -10.503124237060547
    10. 'ent' → logprob: -11.003124237060547

Token 85: ' by' (ID: 656)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 86: ' BFS' (ID: 190016)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -1.2698769569396973
    2. ' ' → logprob: -1.6448769569396973
    3. 'multip' → logprob: -2.5198769569396973
    4. '1' → logprob: -2.6448769569396973
    5. ' BFS' → logprob: -2.8948769569396973
    6. 'deque' → logprob: -3.2698769569396973
    7. 'powers' → logprob: -3.6448769569396973
    8. 's' → logprob: -3.8948769569396973
    9. 'steps' → logprob: -3.8948769569396973
    10. '2' → logprob: -4.019876956939697

Token 87: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 88: ' each' (ID: 2454)
  Prédit: ' each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.21593372523784637
    2. ' adjacency' → logprob: -2.3409337997436523
    3. 'each' → logprob: -2.4659337997436523
    4. ' the' → logprob: -6.340933799743652
    5. ' all' → logprob: -6.465933799743652
    6. ' step' → logprob: -6.840933799743652
    7. ' multiplication' → logprob: -6.965933799743652
    8. ' steps' → logprob: -6.965933799743652
    9. 'multip' → logprob: -7.340933799743652
    10. ' ' → logprob: -7.465933799743652

Token 89: ' step' (ID: 5983)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19488555192947388
    2. '<|end|>' → logprob: -2.319885492324829
    3. ' 
' → logprob: -4.694885730743408
    4. ')' → logprob: -4.819885730743408
    5. ',' → logprob: -5.069885730743408
    6. ' ' → logprob: -5.194885730743408
    7. '<|end|>' → logprob: -5.194885730743408
    8. ':' → logprob: -5.319885730743408
    9. '

' → logprob: -5.569885730743408
    10. '_' → logprob: -5.569885730743408

Token 90: ' count' (ID: 3605)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39502352476119995
    2. '<|end|>' → logprob: -1.3950235843658447
    3. '   ' → logprob: -4.145023345947266
    4. '<|end|>' → logprob: -4.520023345947266
    5. ' ' → logprob: -4.645023345947266
    6. '_' → logprob: -4.770023345947266
    7. ')' → logprob: -4.895023345947266
    8. ',' → logprob: -5.895023345947266
    9. ' 
' → logprob: -6.020023345947266
    10. ']' → logprob: -6.020023345947266

Token 91: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9304426312446594
    2. '<|end|>' → logprob: -0.9304426312446594
    3. '   ' → logprob: -1.9304425716400146
    4. ' ' → logprob: -4.680442810058594
    5. '<|end|>' → logprob: -4.680442810058594
    6. ')' → logprob: -4.680442810058594
    7. '    
' → logprob: -4.930442810058594
    8. '    ' → logprob: -5.055442810058594
    9. ' 
' → logprob: -5.305442810058594
    10. ',' → logprob: -5.680442810058594

Token 92: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6121766567230225
    2. '   ' → logprob: -1.4871766567230225
    3. '<|end|>' → logprob: -1.6121766567230225
    4. '    
' → logprob: -4.987176895141602
    5. '<|end|>' → logprob: -5.237176895141602
    6. ')' → logprob: -5.362176895141602
    7. ',' → logprob: -5.987176895141602
    8. '    ' → logprob: -6.487176895141602
    9. ' ' → logprob: -6.612176895141602
    10. '[' → logprob: -6.737176895141602

Token 93: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.449739545583725
    2. '   ' → logprob: -1.3247395753860474
    3. ' 
' → logprob: -3.449739456176758
    4. '    
' → logprob: -4.074739456176758
    5. 'def' (adapté à ' def') → logprob: -4.449739456176758
    6. ' ' → logprob: -5.324739456176758
    7. '  
' → logprob: -5.449739456176758
    8. '```' → logprob: -5.699739456176758
    9. '<|end|>' → logprob: -6.324739456176758
    10. '   
' → logprob: -6.324739456176758

Token 94: ' reachable' (ID: 143580)
  Prédit: ' bfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bfs' → logprob: -0.4131592810153961
    2. 'b' → logprob: -1.1631592512130737
    3. ' multiply' → logprob: -4.163159370422363
    4. 'multiply' → logprob: -5.788159370422363
    5. ' matrix' → logprob: -5.913159370422363
    6. 'matrix' → logprob: -6.788159370422363
    7. 'adj' → logprob: -6.913159370422363
    8. ' mat' → logprob: -7.538159370422363
    9. ' mul' → logprob: -8.288159370422363
    10. ' adjacency' → logprob: -8.288159370422363

Token 95: '_nodes' (ID: 34593)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.93131023645401
    2. '(u' → logprob: -1.6813101768493652
    3. '(' → logprob: -1.8063101768493652
    4. '(s' → logprob: -2.4313101768493652
    5. '(node' → logprob: -3.1813101768493652
    6. '(n' → logprob: -3.5563101768493652
    7. '(step' → logprob: -3.5563101768493652
    8. '(start' → logprob: -4.181310176849365
    9. ' (' → logprob: -4.431310176849365
    10. '(nodes' → logprob: -4.681310176849365

Token 96: '(start' (ID: 20008)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7715649008750916
    2. '(step' → logprob: -1.0215649604797363
    3. '(k' → logprob: -2.1465649604797363
    4. ' (' → logprob: -3.3965649604797363
    5. '(s' → logprob: -4.521564960479736
    6. '(start' → logprob: -5.271564960479736
    7. '(size' → logprob: -6.396564960479736
    8. '(distance' → logprob: -6.521564960479736
    9. '(node' → logprob: -6.646564960479736
    10. '(length' → logprob: -6.896564960479736

Token 97: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.127984881401062
    2. '):' → logprob: -2.1279850006103516
    3. ' ,' → logprob: -8.127985000610352
    4. ',start' → logprob: -8.502985000610352
    5. ',n' → logprob: -9.127985000610352
    6. ')' → logprob: -9.377985000610352
    7. ' ):' → logprob: -9.627985000610352
    8. '):
' → logprob: -9.627985000610352
    9. '   ' → logprob: -9.877985000610352
    10. ',int' → logprob: -10.252985000610352

Token 98: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.4975851774215698
    2. 'steps' → logprob: -1.1225851774215698
    3. ' step' → logprob: -3.1225852966308594
    4. ' steps' → logprob: -4.122585296630859
    5. '   ' → logprob: -6.247585296630859
    6. 'k' → logprob: -6.372585296630859
    7. 'length' → logprob: -7.622585296630859
    8. ' k' → logprob: -7.747585296630859
    9. 'dist' → logprob: -7.872585296630859
    10. 'distance' → logprob: -7.997585296630859

Token 99: '):
' (ID: 1883)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12980417907238007
    2. '):' → logprob: -2.1298041343688965
    3. '):
' → logprob: -5.8798041343688965
    4. '):
' → logprob: -10.629804611206055
    5. ' ):' → logprob: -10.754804611206055
    6. ')' → logprob: -11.254804611206055
    7. '):

' → logprob: -11.629804611206055
    8. ' s' → logprob: -13.629804611206055
    9. '   ' → logprob: -13.629804611206055
    10. '_count' → logprob: -13.754804611206055

Token 100: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 101: ' visited' (ID: 18416)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5211230516433716
    2. ' visited' → logprob: -1.1461230516433716
    3. 'visited' (adapté à ' visited') → logprob: -3.771122932434082
    4. '       ' → logprob: -3.896122932434082
    5. ' queue' → logprob: -4.146122932434082
    6. ' q' → logprob: -4.771122932434082
    7. ' dist' → logprob: -5.521122932434082
    8. '
' → logprob: -5.646122932434082
    9. ' dq' → logprob: -6.021122932434082
    10. '```' → logprob: -6.646122932434082

Token 102: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3882341980934143
    2. '=' → logprob: -1.1382341384887695
    3. '=set' → logprob: -6.6382341384887695
    4. '=[' → logprob: -10.38823413848877
    5. ' ' → logprob: -12.13823413848877
    6. ',' → logprob: -12.63823413848877
    7. ' =[' → logprob: -12.88823413848877
    8. '={' → logprob: -12.88823413848877
    9. '[' → logprob: -13.13823413848877
    10. ' ={' → logprob: -13.76323413848877

Token 103: ' [' (ID: 723)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.5087709426879883
    2. 'set' → logprob: -1.0087709426879883
    3. ' set' → logprob: -3.8837709426879883
    4. 'deque' → logprob: -4.758770942687988
    5. ' {' → logprob: -5.508770942687988
    6. '[' → logprob: -7.258770942687988
    7. ' deque' → logprob: -9.258770942687988
    8. ' [' → logprob: -9.758770942687988
    9. '   ' → logprob: -11.383770942687988
    10. ' ' → logprob: -11.883770942687988

Token 104: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00020461321400944144
    2. ' False' → logprob: -8.500205039978027
    3. '0' → logprob: -14.125205039978027
    4. '   ' → logprob: -15.500205039978027
    5. '(False' → logprob: -16.12520408630371
    6. '-' → logprob: -17.62520408630371
    7. 'True' → logprob: -18.00020408630371
    8. '
' → logprob: -19.00020408630371
    9. '.False' → logprob: -20.12520408630371
    10. '    ' → logprob: -20.25020408630371

Token 105: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006275251507759094
    2. ' for' → logprob: -5.881275177001953
    3. ' ]' → logprob: -6.006275177001953
    4. '       ' → logprob: -7.756275177001953
    5. '   ' → logprob: -8.131275177001953
    6. ']*' → logprob: -9.506275177001953
    7. 'for' → logprob: -9.631275177001953
    8. ']
' → logprob: -10.006275177001953
    9. '[' → logprob: -10.381275177001953
    10. '[:]' → logprob: -11.131275177001953

Token 106: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004021168686449528
    2. 'len' → logprob: -5.629021167755127
    3. '(len' → logprob: -8.379021644592285
    4. '(n' → logprob: -8.879021644592285
    5. ' n' → logprob: -10.129021644592285
    6. '   ' → logprob: -12.504021644592285
    7. '(' → logprob: -12.629021644592285
    8. ' len' → logprob: -12.879021644592285
    9. ' (' → logprob: -14.004021644592285
    10. '_n' → logprob: -15.379021644592285

Token 107: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.024142378941178322
    2. '<|end|>' → logprob: -4.399142265319824
    3. '   ' → logprob: -5.274142265319824
    4. ')' → logprob: -6.024142265319824
    5. 'visited' → logprob: -6.649142265319824
    6. '    
' → logprob: -7.524142265319824
    7. ' 
' → logprob: -7.524142265319824
    8. '
' → logprob: -8.149142265319824
    9. ')
' → logprob: -8.399142265319824
    10. '<|end|>' → logprob: -8.524142265319824

Token 108: '       ' (ID: 309)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.7855208516120911
    2. '<|end|>' → logprob: -1.6605207920074463
    3. ' queue' → logprob: -1.7855207920074463
    4. '   ' → logprob: -2.5355207920074463
    5. '
' → logprob: -3.2855207920074463
    6. '       ' → logprob: -3.4105207920074463
    7. '	queue' → logprob: -3.9105207920074463
    8. 'deque' → logprob: -4.785521030426025
    9. '```' → logprob: -6.535521030426025
    10. ' que' → logprob: -6.660521030426025

Token 109: ' q' (ID: 2335)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.04299600049853325
    2. 'visited' → logprob: -3.5429959297180176
    3. 'q' (adapté à ' q') → logprob: -5.167995929718018
    4. ' queue' → logprob: -5.917995929718018
    5. 'deque' → logprob: -5.917995929718018
    6. 'current' → logprob: -6.792995929718018
    7. 'que' → logprob: -8.167996406555176
    8. '   ' → logprob: -8.417996406555176
    9. 'dq' → logprob: -8.417996406555176
    10. '	queue' → logprob: -10.542996406555176

Token 110: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22799615561962128
    2. '=' → logprob: -1.6029961109161377
    3. 'ue' → logprob: -6.227996349334717
    4. '=[]' → logprob: -8.727995872497559
    5. '=u' → logprob: -9.477995872497559
    6. 'u' → logprob: -9.852995872497559
    7. '.append' → logprob: -9.977995872497559
    8. '=int' → logprob: -10.102995872497559
    9. '   ' → logprob: -10.352995872497559
    10. '=create' → logprob: -10.352995872497559

Token 111: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.023245826363563538
    2. ' deque' → logprob: -3.7732458114624023
    3. 'Deque' → logprob: -15.648245811462402
    4. 'de' → logprob: -16.64824676513672
    5. '   ' → logprob: -16.77324676513672
    6. '[(' → logprob: -18.89824676513672
    7. 'collections' → logprob: -18.89824676513672
    8. ' ' → logprob: -19.14824676513672
    9. '	de' → logprob: -19.14824676513672
    10. '(de' → logprob: -19.27324676513672

Token 112: '()
' (ID: 1234)
  Prédit: '([('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([(' → logprob: -0.14810165762901306
    2. '([' → logprob: -2.523101568222046
    3. '()' → logprob: -2.898101568222046
    4. '[(' → logprob: -6.773101806640625
    5. '()
' → logprob: -6.898101806640625
    6. '([
' → logprob: -9.148101806640625
    7. '([{' → logprob: -11.398101806640625
    8. '(' → logprob: -11.648101806640625
    9. '()

' → logprob: -12.023101806640625
    10. '[' → logprob: -12.148101806640625

Token 113: '       ' (ID: 309)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.35424569249153137
    2. ' q' → logprob: -1.604245662689209
    3. '       ' → logprob: -3.479245662689209
    4. '(q' → logprob: -3.854245662689209
    5. '   ' → logprob: -4.229245662689209
    6. ' (' → logprob: -4.479245662689209
    7. '
' → logprob: -5.479245662689209
    8. '<|end|>' → logprob: -5.729245662689209
    9. '[q' → logprob: -6.229245662689209
    10. ' 
' → logprob: -6.604245662689209

Token 114: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.014607790857553482
    2. ' q' → logprob: -4.264607906341553
    3. '   ' → logprob: -8.264607429504395
    4. '       ' → logprob: -9.264607429504395
    5. '(q' → logprob: -10.014607429504395
    6. 'start' → logprob: -11.264607429504395
    7. ' (' → logprob: -11.264607429504395
    8. '
' → logprob: -12.014607429504395
    9. '	q' → logprob: -12.514607429504395
    10. '(start' → logprob: -12.639607429504395

Token 115: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00020509003661572933
    2. '.' → logprob: -8.750205039978027
    3. 'append' → logprob: -10.250205039978027
    4. '.extend' → logprob: -12.000205039978027
    5. '   ' → logprob: -13.250205039978027
    6. '.enqueue' → logprob: -14.000205039978027
    7. ' .' → logprob: -14.250205039978027
    8. '_append' → logprob: -14.375205039978027
    9. ').' → logprob: -14.625205039978027
    10. '].' → logprob: -15.500205039978027

Token 116: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.47544920444488525
    2. '(start' → logprob: -0.9754492044448853
    3. '(' → logprob: -6.600449085235596
    4. ' (' → logprob: -12.225449562072754
    5. '([' → logprob: -13.350449562072754
    6. '(s' → logprob: -14.350449562072754
    7. '(end' → logprob: -14.350449562072754
    8. 'start' → logprob: -14.475449562072754
    9. '(Start' → logprob: -14.850449562072754
    10. '(
' → logprob: -15.100449562072754

Token 117: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -2.1054253011243418e-05
    2. ' start' → logprob: -10.875020980834961
    3. ')' → logprob: -14.125020980834961
    4. '(start' → logprob: -14.375020980834961
    5. '[start' → logprob: -14.875020980834961
    6. '0' → logprob: -15.875020980834961
    7. ',start' → logprob: -16.87502098083496
    8. '=start' → logprob: -17.25002098083496
    9. ':start' → logprob: -17.87502098083496
    10. '	start' → logprob: -18.00002098083496

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.069664333248511e-05
    2. ' ,' → logprob: -10.875020980834961
    3. ',
' → logprob: -14.750020980834961
    4. '‌,' → logprob: -15.625020980834961
    5. ',q' → logprob: -15.750020980834961
    6. ',n' → logprob: -16.12502098083496
    7. ',

' → logprob: -16.25002098083496
    8. ',int' → logprob: -16.25002098083496
    9. '<|end|>' → logprob: -16.50002098083496
    10. ',length' → logprob: -16.75002098083496

Token 119: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005260441452264786
    2. ' ' → logprob: -5.255260467529297
    3. 'step' → logprob: -10.755260467529297
    4. ' step' → logprob: -12.255260467529297
    5. '   ' → logprob: -15.380260467529297
    6. ')' → logprob: -15.505260467529297
    7. '1' → logprob: -17.130260467529297
    8. '  ' → logprob: -17.255260467529297
    9. 'steps' → logprob: -17.380260467529297
    10. '    ' → logprob: -17.630260467529297

Token 120: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0017569332849234343
    2. ')' → logprob: -6.7517571449279785
    3. '))
' → logprob: -7.5017571449279785
    4. ' ))' → logprob: -10.50175666809082
    5. ')))' → logprob: -12.37675666809082
    6. ' )' → logprob: -14.50175666809082
    7. '),' → logprob: -14.62675666809082
    8. '))

' → logprob: -14.62675666809082
    9. ')
' → logprob: -14.62675666809082
    10. '))
' → logprob: -15.37675666809082

Token 121: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15223991870880127
    2. ')' → logprob: -2.2772397994995117
    3. '<|end|>' → logprob: -3.5272397994995117
    4. '   ' → logprob: -5.527239799499512
    5. ' )' → logprob: -5.902239799499512
    6. ' ' → logprob: -7.527239799499512
    7. '    ' → logprob: -7.527239799499512
    8. ' 
' → logprob: -7.902239799499512
    9. '<|end|>' → logprob: -8.152239799499512
    10. ',' → logprob: -9.277239799499512

Token 122: ' visited' (ID: 18416)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.13069379329681396
    2. 'while' → logprob: -2.5056939125061035
    3. '       ' → logprob: -3.7556939125061035
    4. '   ' → logprob: -4.6306939125061035
    5. 'visited' (adapté à ' visited') → logprob: -5.2556939125061035
    6. ' visited' → logprob: -6.2556939125061035
    7. '	while' → logprob: -8.005693435668945
    8. '    ' → logprob: -9.505693435668945
    9. '
' → logprob: -9.630693435668945
    10. ')' → logprob: -9.755693435668945

Token 123: '_nodes' (ID: 34593)
  Prédit: '[start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.003620265983045101
    2. '[' → logprob: -5.628620147705078
    3. '[end' → logprob: -11.878620147705078
    4. '[q' → logprob: -13.128620147705078
    5. 'start' → logprob: -13.253620147705078
    6. '[a' → logprob: -13.378620147705078
    7. ' [' → logprob: -13.878620147705078
    8. '[
' → logprob: -13.878620147705078
    9. '[int' → logprob: -14.128620147705078
    10. ']' → logprob: -14.128620147705078

Token 124: ' =' (ID: 314)
  Prédit: '[start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.08633735030889511
    2. ' =' → logprob: -3.2113373279571533
    3. '[' → logprob: -4.086337566375732
    4. '=' → logprob: -4.461337566375732
    5. ']' → logprob: -5.711337566375732
    6. '<|end|>' → logprob: -5.711337566375732
    7. ')' → logprob: -5.836337566375732
    8. '=True' → logprob: -6.711337566375732
    9. '=[' → logprob: -7.836337566375732
    10. ']=' → logprob: -7.836337566375732

Token 125: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.10503297299146652
    2. '{' → logprob: -2.3550329208374023
    3. ' set' → logprob: -5.605032920837402
    4. '[]' → logprob: -6.980032920837402
    5. '[' → logprob: -9.230032920837402
    6. ' {' → logprob: -9.355032920837402
    7. '[]
' → logprob: -12.355032920837402
    8. '{}' → logprob: -12.730032920837402
    9. '(set' → logprob: -13.105032920837402
    10. ' [' → logprob: -13.355032920837402

Token 126: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04011799022555351
    2. '()
' → logprob: -3.6651179790496826
    3. '())' → logprob: -4.415118217468262
    4. ')' → logprob: -7.040118217468262
    5. '())
' → logprob: -8.540118217468262
    6. '()

' → logprob: -8.540118217468262
    7. '(' → logprob: -9.165118217468262
    8. '([' → logprob: -9.665118217468262
    9. '([(' → logprob: -10.040118217468262
    10. '()\' → logprob: -10.540118217468262

Token 127: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24572797119617462
    2. ')' → logprob: -1.8707280158996582
    3. '<|end|>' → logprob: -2.870728015899658
    4. ' )' → logprob: -5.870728015899658
    5. '   ' → logprob: -6.620728015899658
    6. ',' → logprob: -7.120728015899658
    7. ' ' → logprob: -7.370728015899658
    8. '<|end|>' → logprob: -7.745728015899658
    9. '        ' → logprob: -8.3707275390625
    10. '        
' → logprob: -9.1207275390625

Token 128: ' while' (ID: 2049)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6580661535263062
    2. '       ' → logprob: -1.1580661535263062
    3. ' while' → logprob: -2.5330662727355957
    4. ' )' → logprob: -2.6580662727355957
    5. 'while' (adapté à ' while') → logprob: -4.783066272735596
    6. '   ' → logprob: -5.408066272735596
    7. '        ' → logprob: -6.658066272735596
    8. 'visited' → logprob: -6.908066272735596
    9. ' visited' → logprob: -7.033066272735596
    10. '    ' → logprob: -7.408066272735596

Token 129: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.10033844411373138
    2. 'q' → logprob: -2.3503384590148926
    3. '   ' → logprob: -9.725337982177734
    4. ' not' → logprob: -10.975337982177734
    5. '(q' → logprob: -11.100337982177734
    6. '	q' → logprob: -11.225337982177734
    7. '    ' → logprob: -11.975337982177734
    8. ' ' → logprob: -12.225337982177734
    9. 'True' → logprob: -12.600337982177734
    10. ' True' → logprob: -12.600337982177734

Token 130: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.12992697954177856
    2. ':' → logprob: -2.504926919937134
    3. 'and' → logprob: -4.004927158355713
    4. '   ' → logprob: -4.754927158355713
    5. '[' → logprob: -5.254927158355713
    6. ' and' → logprob: -6.004927158355713
    7. '):
' → logprob: -6.254927158355713
    8. '       ' → logprob: -7.254927158355713
    9. '```' → logprob: -7.379927158355713
    10. ' ' → logprob: -7.754927158355713

Token 131: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01099629607051611
    2. ',' → logprob: -4.760996341705322
    3. ' ,' → logprob: -7.135996341705322
    4. ' x' → logprob: -8.510995864868164
    5. ',u' → logprob: -8.635995864868164
    6. ' u' → logprob: -8.885995864868164
    7. 'u' → logprob: -8.885995864868164
    8. ')' → logprob: -9.010995864868164
    9. '(u' → logprob: -9.260995864868164
    10. 'x' → logprob: -9.385995864868164

Token 132: ' u' (ID: 337)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.07076799124479294
    2. 'u' (adapté à ' u') → logprob: -3.070767879486084
    3. 'curr' → logprob: -4.820767879486084
    4. 'cur' → logprob: -5.320767879486084
    5. 'current' → logprob: -5.570767879486084
    6. ' node' → logprob: -5.570767879486084
    7. 'pos' → logprob: -7.195767879486084
    8. ' u' → logprob: -8.570768356323242
    9. 'x' → logprob: -9.195768356323242
    10. '(node' → logprob: -9.320768356323242

Token 133: ',d' (ID: 26159)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.031412750482559204
    2. ',u' → logprob: -3.6564128398895264
    3. ' ,' → logprob: -6.906412601470947
    4. ',k' → logprob: -7.281412601470947
    5. ',q' → logprob: -7.531412601470947
    6. '           ' → logprob: -7.656412601470947
    7. ',n' → logprob: -8.031413078308105
    8. ',v' → logprob: -8.031413078308105
    9. ',w' → logprob: -8.281413078308105
    10. ',int' → logprob: -8.656413078308105

Token 134: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38581326603889465
    2. '+' → logprob: -1.8858132362365723
    3. '=' → logprob: -2.3858132362365723
    4. ' +' → logprob: -3.8858132362365723
    5. ' )' → logprob: -3.8858132362365723
    6. ' =' → logprob: -4.885813236236572
    7. ',' → logprob: -4.885813236236572
    8. '+=' → logprob: -5.510813236236572
    9. ' +=' → logprob: -5.635813236236572
    10. ')==' → logprob: -6.010813236236572

Token 135: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.3868861794471741
    2. ' q' → logprob: -1.1368861198425293
    3. '	q' → logprob: -12.011886596679688
    4. '   ' → logprob: -13.511886596679688
    5. '       ' → logprob: -13.761886596679688
    6. '    ' → logprob: -13.886886596679688
    7. '*q' → logprob: -14.011886596679688
    8. '        ' → logprob: -14.261886596679688
    9. '0' → logprob: -14.386886596679688
    10. ' ' → logprob: -14.386886596679688

Token 136: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.37045660614967346
    2. '.pop' → logprob: -1.745456576347351
    3. '           ' → logprob: -2.9954566955566406
    4. '=' → logprob: -3.1204566955566406
    5. '       ' → logprob: -4.870456695556641
    6. 'opleft' → logprob: -4.870456695556641
    7. '[' → logprob: -5.245456695556641
    8. 'p' → logprob: -5.495456695556641
    9. '.append' → logprob: -6.120456695556641
    10. ' p' → logprob: -6.495456695556641

Token 137: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.0011737978784367442
    2. 'op' → logprob: -6.751173973083496
    3. 'opup' → logprob: -13.626173973083496
    4. '   ' → logprob: -13.751173973083496
    5. '```' → logprob: -14.751173973083496
    6. '(op' → logprob: -15.376173973083496
    7. 'оп' → logprob: -15.876173973083496
    8. 'opl' → logprob: -16.00117301940918
    9. 'opped' → logprob: -16.37617301940918
    10. '
' → logprob: -16.37617301940918

Token 138: '()
' (ID: 1234)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.12766943871974945
    2. ')' → logprob: -2.127669334411621
    3. '           ' → logprob: -8.002669334411621
    4. '       ' → logprob: -8.252669334411621
    5. ')
' → logprob: -10.002669334411621
    6. '()
' → logprob: -10.127669334411621
    7. '()' → logprob: -11.002669334411621
    8. '())
' → logprob: -11.127669334411621
    9. ' )
' → logprob: -11.627669334411621
    10. '               ' → logprob: -12.127669334411621

Token 139: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010580566013231874
    2. '<|end|>' → logprob: -7.501058101654053
    3. '       ' → logprob: -8.001057624816895
    4. '            
' → logprob: -10.376057624816895
    5. '
' → logprob: -10.751057624816895
    6. ',' → logprob: -10.876057624816895
    7. '   ' → logprob: -11.001057624816895
    8. ' if' → logprob: -11.126057624816895
    9. '<|end|>' → logprob: -11.126057624816895
    10. '```' → logprob: -11.376057624816895

Token 140: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.765826940536499
    2. '           ' → logprob: -1.015826940536499
    3. ' if' → logprob: -1.765826940536499
    4. 'for' → logprob: -7.140827178955078
    5. '   ' → logprob: -7.265827178955078
    6. ' for' → logprob: -8.765827178955078
    7. 'visited' → logprob: -9.265827178955078
    8. '               ' → logprob: -10.140827178955078
    9. '       ' → logprob: -10.390827178955078
    10. '
' → logprob: -10.515827178955078

Token 141: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.2519298195838928
    2. 'd' → logprob: -1.501929759979248
    3. '   ' → logprob: -15.001930236816406
    4. '	d' → logprob: -15.626930236816406
    5. ' ' → logprob: -15.876930236816406
    6. ')d' → logprob: -17.126930236816406
    7. '(d' → logprob: -17.501930236816406
    8. '    ' → logprob: -17.626930236816406
    9. ' ' → logprob: -17.751930236816406
    10. ' д' → logprob: -18.001930236816406

Token 142: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.627561628818512
    2. ' ==' → logprob: -1.3775615692138672
    3. '<=' → logprob: -2.002561569213867
    4. ' <=' → logprob: -2.627561569213867
    5. '>=' → logprob: -5.877561569213867
    6. ' >=' → logprob: -6.377561569213867
    7. '>' → logprob: -6.752561569213867
    8. ' >' → logprob: -7.252561569213867
    9. '=' → logprob: -8.627561569213867
    10. '+' → logprob: -10.252561569213867

Token 143: 'step' (ID: 17509)
  Prédit: 'step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -9.627176768844947e-05
    2. ' step' → logprob: -9.250096321105957
    3. 'steps' → logprob: -16.87509536743164
    4. '   ' → logprob: -17.87509536743164
    5. '	step' → logprob: -18.00009536743164
    6. '0' → logprob: -18.12509536743164
    7. '(step' → logprob: -19.25009536743164
    8. '
' → logprob: -20.00009536743164
    9. ' ' → logprob: -20.12509536743164
    10. ')' → logprob: -22.00009536743164

Token 144: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28438401222229004
    2. ':
' → logprob: -1.40938401222229
    3. '):' → logprob: -6.409383773803711
    4. '):
' → logprob: -6.909383773803711
    5. ')' → logprob: -8.409383773803711
    6. '       ' → logprob: -9.284383773803711
    7. '           ' → logprob: -9.284383773803711
    8. ' or' → logprob: -9.534383773803711
    9. ':return' → logprob: -9.534383773803711
    10. '   ' → logprob: -11.659383773803711

Token 145: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0761113166809082
    2. '           ' → logprob: -2.951111316680908
    3. ':
' → logprob: -4.576111316680908
    4. ':' → logprob: -5.576111316680908
    5. ' continue' → logprob: -5.951111316680908
    6. 'continue' → logprob: -6.451111316680908
    7. '
' → logprob: -6.576111316680908
    8. ',' → logprob: -7.826111316680908
    9. '       ' → logprob: -7.951111316680908
    10. ' visited' → logprob: -9.20111083984375

Token 146: ' visited' (ID: 18416)
  Prédit: ' visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.4240133464336395
    2. 'visited' (adapté à ' visited') → logprob: -1.174013376235962
    3. '           ' → logprob: -3.799013376235962
    4. '               ' → logprob: -4.424013137817383
    5. ' continue' → logprob: -6.924013137817383
    6. '
' → logprob: -7.424013137817383
    7. 'continue' → logprob: -7.924013137817383
    8. '                   ' → logprob: -9.924013137817383
    9. '   ' → logprob: -10.174013137817383
    10. '       ' → logprob: -10.674013137817383

Token 147: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -1.1041145626222715e-05
    2. '
' → logprob: -12.000011444091797
    3. 'nodes' → logprob: -12.500011444091797
    4. '_tokens' → logprob: -15.250011444091797
    5. '   ' → logprob: -15.750011444091797
    6. '

' → logprob: -16.250011444091797
    7. '_
' → logprob: -16.375011444091797
    8. ' nodes' → logprob: -16.875011444091797
    9. '_' → logprob: -17.000011444091797
    10. 'Nodes' → logprob: -17.125011444091797

Token 148: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0009296870557591319
    2. '.' → logprob: -7.000929832458496
    3. '           ' → logprob: -11.625929832458496
    4. '.update' → logprob: -12.250929832458496
    5. ' .' → logprob: -12.500929832458496
    6. '       ' → logprob: -15.500929832458496
    7. '               ' → logprob: -15.625929832458496
    8. '.append' → logprob: -16.25092887878418
    9. 'add' → logprob: -16.37592887878418
    10. '   ' → logprob: -16.75092887878418

Token 149: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.25
    3. 'u' → logprob: -15.625
    4. '(q' → logprob: -19.625
    5. '((' → logprob: -19.875
    6. ' u' → logprob: -20.0
    7. '(
' → logprob: -20.0
    8. '(v' → logprob: -20.375
    9. '[u' → logprob: -20.75
    10. ' (' → logprob: -20.875

Token 150: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.179901584982872
    2. ')
' → logprob: -1.8049015998840332
    3. '           ' → logprob: -9.929901123046875
    4. ' )' → logprob: -10.304901123046875
    5. ' )
' → logprob: -10.429901123046875
    6. ')return' → logprob: -11.554901123046875
    7. '               ' → logprob: -11.679901123046875
    8. ')
' → logprob: -11.679901123046875
    9. '       ' → logprob: -12.054901123046875
    10. ')

' → logprob: -13.054901123046875

Token 151: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20271927118301392
    2. '               ' → logprob: -1.7027192115783691
    3. '       ' → logprob: -7.077719211578369
    4. '
' → logprob: -9.327719688415527
    5. '<|end|>' → logprob: -9.577719688415527
    6. '                   ' → logprob: -10.077719688415527
    7. ' else' → logprob: -10.077719688415527
    8. 'elif' → logprob: -10.202719688415527
    9. ' continue' → logprob: -10.327719688415527
    10. 'continue' → logprob: -10.327719688415527

Token 152: ' elif' (ID: 9497)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0285208560526371
    2. '       ' → logprob: -4.4035210609436035
    3. 'elif' (adapté à ' elif') → logprob: -5.7785210609436035
    4. '   ' → logprob: -5.9035210609436035
    5. 'else' → logprob: -6.0285210609436035
    6. 'if' → logprob: -6.1535210609436035
    7. ' elif' → logprob: -6.4035210609436035
    8. ' if' → logprob: -6.5285210609436035
    9. ' for' → logprob: -6.7785210609436035
    10. ' else' → logprob: -7.5285210609436035

Token 153: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.14481733739376068
    2. 'd' → logprob: -2.019817352294922
    3. ' True' → logprob: -6.519817352294922
    4. 'True' → logprob: -7.894817352294922
    5. ' ' → logprob: -8.894817352294922
    6. '   ' → logprob: -10.269817352294922
    7. ' u' → logprob: -10.394817352294922
    8. '  ' → logprob: -11.394817352294922
    9. ' not' → logprob: -11.519817352294922
    10. '    ' → logprob: -11.644817352294922

Token 154: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.27816230058670044
    2. ' <' → logprob: -1.7781622409820557
    3. '+' → logprob: -2.6531622409820557
    4. ' +' → logprob: -5.903162479400635
    5. '<n' → logprob: -7.778162479400635
    6. '<len' → logprob: -9.403162002563477
    7. '<num' → logprob: -10.403162002563477
    8. '<data' → logprob: -10.403162002563477
    9. '<size' → logprob: -10.778162002563477
    10. '<int' → logprob: -10.778162002563477

Token 155: 'step' (ID: 17509)
  Prédit: 'step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.07889000326395035
    2. ' step' → logprob: -2.578890085220337
    3. '	step' → logprob: -16.203889846801758
    4. '(step' → logprob: -17.078889846801758
    5. '           ' → logprob: -18.703889846801758
    6. '
' → logprob: -18.828889846801758
    7. '   ' → logprob: -18.828889846801758
    8. '=' → logprob: -18.828889846801758
    9. ' ' → logprob: -18.828889846801758
    10. '```' → logprob: -19.703889846801758

Token 156: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.06735792756080627
    2. ':' → logprob: -2.8173580169677734
    3. ' and' → logprob: -5.817358016967773
    4. '):
' → logprob: -6.817358016967773
    5. '       ' → logprob: -7.067358016967773
    6. '           ' → logprob: -8.192358016967773
    7. 'and' → logprob: -9.692358016967773
    8. ' :
' → logprob: -10.567358016967773
    9. '               ' → logprob: -10.692358016967773
    10. ' for' → logprob: -10.817358016967773

Token 157: '               ' (ID: 506)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.41707906126976013
    2. 'for' → logprob: -1.1670790910720825
    3. '       ' → logprob: -3.792078971862793
    4. '               ' → logprob: -5.292078971862793
    5. '           ' → logprob: -6.792078971862793
    6. '   ' → logprob: -7.292078971862793
    7. '	for' → logprob: -8.042078971862793
    8. '	       ' → logprob: -11.167078971862793
    9. ' ' → logprob: -11.542078971862793
    10. ' ' → logprob: -11.917078971862793

Token 158: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.47411108016967773
    2. ' for' → logprob: -0.9741110801696777
    3. '               ' → logprob: -11.099111557006836
    4. '	for' → logprob: -11.849111557006836
    5. '       ' → logprob: -12.224111557006836
    6. '                   ' → logprob: -12.974111557006836
    7. '   ' → logprob: -13.099111557006836
    8. '           ' → logprob: -13.224111557006836
    9. '
' → logprob: -14.349111557006836
    10. ' ' → logprob: -15.849111557006836

Token 159: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.015807583928108215
    2. ' w' → logprob: -4.265807628631592
    3. ' nxt' → logprob: -6.890807628631592
    4. 'nx' → logprob: -7.640807628631592
    5. 'v' → logprob: -9.265807151794434
    6. 'nv' → logprob: -10.765807151794434
    7. 'next' → logprob: -11.390807151794434
    8. 'x' → logprob: -12.390807151794434
    9. ' nei' → logprob: -13.015807151794434
    10. 'wv' → logprob: -13.015807151794434

Token 160: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03804860636591911
    2. 'in' → logprob: -3.288048505783081
    3. ' ' → logprob: -12.53804874420166
    4. '	in' → logprob: -13.91304874420166
    5. 'edges' → logprob: -14.03804874420166
    6. '   ' → logprob: -14.28804874420166
    7. '  ' → logprob: -15.28804874420166
    8. ')' → logprob: -15.91304874420166
    9. '
' → logprob: -15.91304874420166
    10. 'In' → logprob: -16.038047790527344

Token 161: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.17974799871444702
    2. ' edges' → logprob: -1.8047480583190918
    3. '(edges' → logprob: -13.429747581481934
    4. '.edges' → logprob: -14.304747581481934
    5. '   ' → logprob: -14.804747581481934
    6. ' ' → logprob: -15.304747581481934
    7. '_edges' → logprob: -15.554747581481934
    8. 'edge' → logprob: -15.804747581481934
    9. '
' → logprob: -16.55474853515625
    10. 'Edges' → logprob: -16.92974853515625

Token 162: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -5.796184723294573e-06
    2. 'u' → logprob: -12.125005722045898
    3. '[' → logprob: -15.375005722045898
    4. ' [' → logprob: -16.7500057220459
    5. '
' → logprob: -17.7500057220459
    6. '   ' → logprob: -17.8750057220459
    7. '[
' → logprob: -18.2500057220459
    8. '[w' → logprob: -18.3750057220459
    9. '	u' → logprob: -18.6250057220459
    10. '<u' → logprob: -18.8750057220459

Token 163: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.203850656747818
    2. ']:
' → logprob: -1.7038506269454956
    3. ']' → logprob: -6.203850746154785
    4. ']:
' → logprob: -8.828850746154785
    5. '       ' → logprob: -10.078850746154785
    6. ':' → logprob: -10.328850746154785
    7. '           ' → logprob: -10.328850746154785
    8. ']:

' → logprob: -10.453850746154785
    9. '):' → logprob: -10.703850746154785
    10. '):
' → logprob: -10.953850746154785

Token 164: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0036631335970014334
    2. ' q' → logprob: -5.878663063049316
    3. 'q' → logprob: -7.253663063049316
    4. '                       ' → logprob: -9.378663063049316
    5. '               ' → logprob: -11.503663063049316
    6. ',q' → logprob: -11.503663063049316
    7. ',' → logprob: -11.878663063049316
    8. '           ' → logprob: -12.128663063049316
    9. '                    
' → logprob: -12.253663063049316
    10. '		           ' → logprob: -12.378663063049316

Token 165: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.4803673028945923
    2. ' if' → logprob: -1.7303673028945923
    3. ' q' → logprob: -1.8553673028945923
    4. 'if' → logprob: -3.1053671836853027
    5. '                       ' → logprob: -5.980367183685303
    6. '                   ' → logprob: -7.730367183685303
    7. '   ' → logprob: -11.230367660522461
    8. '       ' → logprob: -11.605367660522461
    9. '	q' → logprob: -11.605367660522461
    10. '
' → logprob: -12.230367660522461

Token 166: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00016671013145241886
    2. '.' → logprob: -8.750166893005371
    3. 'append' → logprob: -12.125166893005371
    4. ' .' → logprob: -14.000166893005371
    5. ').' → logprob: -14.625166893005371
    6. '.enqueue' → logprob: -15.125166893005371
    7. '().' → logprob: -15.250166893005371
    8. '.app' → logprob: -15.500166893005371
    9. '.extend' → logprob: -15.625166893005371
    10. 'app' → logprob: -15.750166893005371

Token 167: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.7074083089828491
    2. '(w' → logprob: -1.2074083089828491
    3. '(' → logprob: -1.5824083089828491
    4. ' (' → logprob: -5.957408428192139
    5. '(
' → logprob: -10.33240795135498
    6. ' ' → logprob: -12.33240795135498
    7. '   ' → logprob: -12.95740795135498
    8. '(u' → logprob: -14.58240795135498
    9. ' ((' → logprob: -14.95740795135498
    10. '  ' → logprob: -15.45740795135498

Token 168: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.9027791495318525e-05
    2. ' w' → logprob: -10.875019073486328
    3. '(w' → logprob: -16.750019073486328
    4. '   ' → logprob: -17.625019073486328
    5. '	w' → logprob: -18.875019073486328
    6. ')' → logprob: -20.125019073486328
    7. ',w' → logprob: -21.000019073486328
    8. '[w' → logprob: -21.125019073486328
    9. '                   ' → logprob: -21.625019073486328
    10. '
' → logprob: -21.875019073486328

Token 169: ',d' (ID: 26159)
  Prédit: ',d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.1017560064792633
    2. ',' → logprob: -2.3517560958862305
    3. ' ,' → logprob: -6.4767560958862305
    4. '   ' → logprob: -12.47675609588623
    5. ',
' → logprob: -13.85175609588623
    6. 'd' → logprob: -14.47675609588623
    7. ',n' → logprob: -14.72675609588623
    8. '`,' → logprob: -14.97675609588623
    9. ' d' → logprob: -15.10175609588623
    10. '	' → logprob: -15.35175609588623

Token 170: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.623244553338736e-05
    2. ' +' → logprob: -9.625065803527832
    3. '＋' → logprob: -16.75006675720215
    4. '+
' → logprob: -16.87506675720215
    5. ')+' → logprob: -17.00006675720215
    6. '1' → logprob: -17.87506675720215
    7. '+)' → logprob: -18.00006675720215
    8. '```' → logprob: -19.87506675720215
    9. '+xml' → logprob: -20.00006675720215
    10. '()+' → logprob: -20.00006675720215

Token 171: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.635164754698053e-05
    2. ' ' → logprob: -9.625066757202148
    3. ')' → logprob: -16.25006675720215
    4. '   ' → logprob: -16.62506675720215
    5. '```' → logprob: -17.50006675720215
    6. '))' → logprob: -18.00006675720215
    7. '  ' → logprob: -18.37506675720215
    8. '+' → logprob: -18.75006675720215
    9. ' )' → logprob: -18.87506675720215
    10. '
' → logprob: -19.62506675720215

Token 172: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.001529620960354805
    2. '))
' → logprob: -6.876529693603516
    3. ' ))' → logprob: -8.001529693603516
    4. ')' → logprob: -8.876529693603516
    5. '                   ' → logprob: -11.251529693603516
    6. ')))' → logprob: -13.251529693603516
    7. '               ' → logprob: -13.501529693603516
    8. ' ))
' → logprob: -13.626529693603516
    9. '),' → logprob: -14.001529693603516
    10. '           ' → logprob: -14.251529693603516

Token 173: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6772398352622986
    2. ')' → logprob: -1.1772398948669434
    3. '                   ' → logprob: -2.4272398948669434
    4. 'visited' → logprob: -3.0522398948669434
    5. '   ' → logprob: -4.552239894866943
    6. '<|end|>' → logprob: -4.677239894866943
    7. '           ' → logprob: -4.927239894866943
    8. ' visited' → logprob: -5.052239894866943
    9. ',' → logprob: -5.552239894866943
    10. '
' → logprob: -5.677239894866943

Token 174: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15916837751865387
    2. '           ' → logprob: -2.7841684818267822
    3. ' visited' → logprob: -3.6591684818267822
    4. '                   ' → logprob: -3.7841684818267822
    5. '               ' → logprob: -4.284168243408203
    6. 'visited' → logprob: -4.784168243408203
    7. '   ' → logprob: -5.284168243408203
    8. ' return' → logprob: -5.659168243408203
    9. '<|end|>' → logprob: -5.784168243408203
    10. ' ' → logprob: -7.409168243408203

Token 175: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0024988483637571335
    2. ' visited' → logprob: -6.002498626708984
    3. 'list' → logprob: -11.502498626708984
    4. '   ' → logprob: -12.002498626708984
    5. '{' → logprob: -12.877498626708984
    6. ' ' → logprob: -13.377498626708984
    7. 'sorted' → logprob: -13.502498626708984
    8. ' list' → logprob: -14.377498626708984
    9. '  ' → logprob: -15.752498626708984
    10. 'set' → logprob: -16.127498626708984

Token 176: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -4.167648876318708e-05
    2. 'nodes' → logprob: -11.250041961669922
    3. 'visited' → logprob: -11.750041961669922
    4. '_' → logprob: -11.875041961669922
    5. 'd' → logprob: -13.125041961669922
    6. ' _' → logprob: -13.375041961669922
    7. 'Nodes' → logprob: -13.500041961669922
    8. '[' → logprob: -13.750041961669922
    9. '
' → logprob: -13.875041961669922
    10. '_n' → logprob: -14.125041961669922

Token 177: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 178: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 179: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31160804629325867
    2. '<|end|>' → logprob: -1.436608076095581
    3. '       ' → logprob: -4.561607837677002
    4. 'visited' → logprob: -4.811607837677002
    5. '    ' → logprob: -5.936607837677002
    6. ')' → logprob: -5.936607837677002
    7. ' visited' → logprob: -6.936607837677002
    8. '#' (adapté à ' #') → logprob: -7.061607837677002
    9. '<|end|>' → logprob: -7.061607837677002
    10. ' ' → logprob: -7.436607837677002

Token 180: ' For' (ID: 2214)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.2087037563323975
    2. 'reachable' → logprob: -1.7087037563323975
    3. 'dp' → logprob: -2.4587037563323975
    4. '   ' → logprob: -2.4587037563323975
    5. 'visited' → logprob: -2.8337037563323975
    6. ' result' → logprob: -3.2087037563323975
    7. 'res' → logprob: -3.2087037563323975
    8. ' res' → logprob: -3.7087037563323975
    9. 'results' → logprob: -3.7087037563323975
    10. 'possible' → logprob: -3.9587037563323975

Token 181: ' each' (ID: 2454)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.8235253691673279
    2. 'step' → logprob: -1.3235254287719727
    3. 'i' → logprob: -2.3235254287719727
    4. ' s' → logprob: -2.6985254287719727
    5. ' i' → logprob: -2.6985254287719727
    6. 's' → logprob: -3.5735254287719727
    7. ' x' → logprob: -5.448525428771973
    8. ' d' → logprob: -5.573525428771973
    9. ' start' → logprob: -5.573525428771973
    10. 'x' → logprob: -5.698525428771973

Token 182: ' node' (ID: 4596)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.17200781404972076
    2. 'step' → logprob: -2.2970077991485596
    3. ' node' → logprob: -3.9220077991485596
    4. ' s' → logprob: -3.9220077991485596
    5. ' i' → logprob: -5.672008037567139
    6. 's' → logprob: -5.672008037567139
    7. 'u' → logprob: -6.422008037567139
    8. 'i' → logprob: -6.422008037567139
    9. ' start' → logprob: -6.672008037567139
    10. ' u' → logprob: -6.672008037567139

Token 183: ' and' (ID: 326)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08905365318059921
    2. ',' → logprob: -2.8390536308288574
    3. '   ' → logprob: -4.214053630828857
    4. ':' → logprob: -4.839053630828857
    5. 'in' → logprob: -5.964053630828857
    6. ' i' → logprob: -8.339054107666016
    7. ',n' → logprob: -8.464054107666016
    8. ' ,' → logprob: -8.589054107666016
    9. ' for' → logprob: -8.589054107666016
    10. ':
' → logprob: -8.839054107666016

Token 184: ' each' (ID: 2454)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.09677666425704956
    2. 'step' → logprob: -2.4717767238616943
    3. ' each' → logprob: -5.846776485443115
    4. ' for' → logprob: -5.971776485443115
    5. 'for' → logprob: -7.346776485443115
    6. '   ' → logprob: -7.471776485443115
    7. 'each' → logprob: -8.346776962280273
    8. ' steps' → logprob: -8.471776962280273
    9. ' s' → logprob: -8.721776962280273
    10. ' distance' → logprob: -9.096776962280273

Token 185: ' step' (ID: 5983)
  Prédit: ' step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.07381533831357956
    2. 'step' → logprob: -2.69881534576416
    3. ' steps' → logprob: -6.57381534576416
    4. ' s' → logprob: -6.69881534576416
    5. 'steps' → logprob: -8.07381534576416
    6. 's' → logprob: -8.57381534576416
    7. ' of' → logprob: -9.19881534576416
    8. ' range' → logprob: -9.82381534576416
    9. '   ' → logprob: -9.82381534576416
    10. ' ' → logprob: -9.94881534576416

Token 186: ' count' (ID: 3605)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38123512268066406
    2. ':' → logprob: -1.506235122680664
    3. '   ' → logprob: -2.631235122680664
    4. ' in' → logprob: -4.006235122680664
    5. ' ,' → logprob: -6.006235122680664
    6. 'in' → logprob: -6.881235122680664
    7. ':
' → logprob: -8.381235122680664
    8. '    ' → logprob: -8.881235122680664
    9. ',n' → logprob: -9.006235122680664
    10. ' :' → logprob: -9.131235122680664

Token 187: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.769960880279541
    2. ',' → logprob: -1.019960880279541
    3. ':' → logprob: -1.769960880279541
    4. ' ,' → logprob: -6.144960880279541
    5. ' for' → logprob: -6.769960880279541
    6. ':
' → logprob: -7.019960880279541
    7. ',
' → logprob: -7.894960880279541
    8. '
' → logprob: -8.269960403442383
    9. 'for' → logprob: -8.519960403442383
    10. '    
' → logprob: -8.519960403442383

Token 188: ' pre' (ID: 876)
  Prédit: 'reachable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reachable' → logprob: -1.087460994720459
    2. ' reachable' → logprob: -1.212460994720459
    3. ' for' → logprob: -1.837460994720459
    4. '   ' → logprob: -2.087460994720459
    5. 'for' → logprob: -4.087460994720459
    6. ' results' → logprob: -4.337460994720459
    7. ' result' → logprob: -4.587460994720459
    8. ' next' → logprob: -4.962460994720459
    9. 'result' → logprob: -5.712460994720459
    10. ' visited' → logprob: -5.837460994720459

Token 189: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.0003314129135105759
    2. ' compute' → logprob: -8.62533187866211
    3. 'computed' → logprob: -9.75033187866211
    4. '   ' → logprob: -10.25033187866211
    5. '[' → logprob: -11.50033187866211
    6. 'pare' → logprob: -11.75033187866211
    7. 'visited' → logprob: -12.12533187866211
    8. 'calculate' → logprob: -12.50033187866211
    9. '-com' → logprob: -12.75033187866211
    10. '       ' → logprob: -12.87533187866211

Token 190: ' reachable' (ID: 143580)
  Prédit: ' reachable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reachable' → logprob: -0.5111722350120544
    2. 'reachable' → logprob: -1.2611722946166992
    3. ' reach' → logprob: -2.511172294616699
    4. '   ' → logprob: -4.011172294616699
    5. 'reach' → logprob: -5.261172294616699
    6. ' can' → logprob: -6.011172294616699
    7. ' the' → logprob: -6.386172294616699
    8. ' for' → logprob: -6.511172294616699
    9. ' dp' → logprob: -7.011172294616699
    10. ' distances' → logprob: -7.511172294616699

Token 191: ' nodes' (ID: 15749)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.02002883516252041
    2. ' nodes' → logprob: -5.145029067993164
    3. 'nodes' → logprob: -5.520029067993164
    4. ' =' → logprob: -6.145029067993164
    5. ' sets' → logprob: -6.145029067993164
    6. '=' → logprob: -6.520029067993164
    7. '_sets' → logprob: -6.520029067993164
    8. '   ' → logprob: -6.770029067993164
    9. 's' → logprob: -7.770029067993164
    10. ' ' → logprob: -7.770029067993164

Token 192: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03902748227119446
    2. 'reachable' → logprob: -3.914027452468872
    3. '
' → logprob: -5.164027690887451
    4. ' reachable' → logprob: -5.414027690887451
    5. '    
' → logprob: -6.039027690887451
    6. 'dp' → logprob: -6.539027690887451
    7. ' dp' → logprob: -6.789027690887451
    8. ' results' → logprob: -7.289027690887451
    9. 'results' → logprob: -7.789027690887451
    10. ' for' → logprob: -8.039027214050293

Token 193: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06869770586490631
    2. 'reachable' → logprob: -3.693697690963745
    3. ' reachable' → logprob: -3.818697690963745
    4. '
' → logprob: -4.193697929382324
    5. '    
' → logprob: -5.818697929382324
    6. '  
' → logprob: -8.693697929382324
    7. ' for' → logprob: -8.693697929382324
    8. ',' → logprob: -8.943697929382324
    9. ' reach' → logprob: -9.068697929382324
    10. 'visited' → logprob: -9.568697929382324

Token 194: ' next' (ID: 2613)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.9500386118888855
    2. '   ' → logprob: -1.5750386714935303
    3. ' reachable' → logprob: -1.9500386714935303
    4. 'dp' → logprob: -2.4500386714935303
    5. 'reachable' → logprob: -2.5750386714935303
    6. ' reach' → logprob: -2.5750386714935303
    7. ' dist' → logprob: -4.825038433074951
    8. 'reach' → logprob: -5.325038433074951
    9. ' r' → logprob: -6.325038433074951
    10. ' can' → logprob: -6.950038433074951

Token 195: '_pos' (ID: 14692)
  Prédit: 'reachable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reachable' → logprob: -0.9042819738388062
    2. ' reachable' → logprob: -1.4042819738388062
    3. '   ' → logprob: -1.5292819738388062
    4. ' reach' → logprob: -2.6542820930480957
    5. 'reach' → logprob: -3.7792820930480957
    6. ' =' → logprob: -4.154282093048096
    7. 'dp' → logprob: -4.904282093048096
    8. ' dp' → logprob: -4.904282093048096
    9. '=' → logprob: -6.529282093048096
    10. ' nodes' → logprob: -6.529282093048096

Token 196: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4751092791557312
    2. '=' → logprob: -0.9751092791557312
    3. '=[' → logprob: -7.225109100341797
    4. '=[[' → logprob: -8.600109100341797
    5. '=[]' → logprob: -9.975109100341797
    6. 's' → logprob: -10.850109100341797
    7. '[' → logprob: -11.225109100341797
    8. ' =[' → logprob: -11.225109100341797
    9. '   ' → logprob: -11.350109100341797
    10. '={}' → logprob: -11.850109100341797

Token 197: ' [{}' (ID: 170238)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.09067649394273758
    2. '[' → logprob: -2.8406765460968018
    3. ' [[[' → logprob: -4.090676307678223
    4. ' [[' → logprob: -4.840676307678223
    5. ' [' → logprob: -5.715676307678223
    6. '[{' → logprob: -8.215676307678223
    7. ' [{}' → logprob: -9.715676307678223
    8. '[]' → logprob: -11.215676307678223
    9. ' [[]' → logprob: -11.465676307678223
    10. '   ' → logprob: -11.465676307678223

Token 198: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16181084513664246
    2. 'for' → logprob: -1.9118108749389648
    3. '   ' → logprob: -7.411810874938965
    4. ']' → logprob: -7.661810874938965
    5. ')' → logprob: -7.786810874938965
    6. ' ' → logprob: -10.411810874938965
    7. '       ' → logprob: -10.911810874938965
    8. '    ' → logprob: -11.161810874938965
    9. '  ' → logprob: -11.786810874938965
    10. '	for' → logprob: -12.411810874938965

Token 199: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03834600746631622
    2. ' _' → logprob: -3.2883460521698
    3. ' range' → logprob: -8.413346290588379
    4. '_range' → logprob: -9.913346290588379
    5. 'range' → logprob: -11.413346290588379
    6. '_step' → logprob: -11.538346290588379
    7. '_i' → logprob: -12.663346290588379
    8. '_node' → logprob: -12.788346290588379
    9. '_s' → logprob: -13.663346290588379
    10. '_=' → logprob: -14.288346290588379

Token 200: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.38690876960754395
    2. ' range' → logprob: -1.136908769607544
    3. 'in' → logprob: -10.886908531188965
    4. ' in' → logprob: -11.636908531188965
    5. '_' → logprob: -12.511908531188965
    6. '_range' → logprob: -12.511908531188965
    7. ' ' → logprob: -14.011908531188965
    8. 'step' → logprob: -14.386908531188965
    9. '(range' → logprob: -14.386908531188965
    10. '   ' → logprob: -15.511908531188965

Token 201: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07889188081026077
    2. ' range' → logprob: -2.5788919925689697
    3. 'steps' → logprob: -13.45389175415039
    4. '(range' → logprob: -14.95389175415039
    5. ' ' → logprob: -16.32889175415039
    6. '   ' → logprob: -16.95389175415039
    7. '_range' → logprob: -17.32889175415039
    8. 'step' → logprob: -17.57889175415039
    9. '	range' → logprob: -17.57889175415039
    10. ' steps' → logprob: -17.82889175415039

Token 202: '(n' (ID: 2406)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.3679918050765991
    2. 'n' → logprob: -2.1179919242858887
    3. '(' → logprob: -2.2429919242858887
    4. '(n' → logprob: -3.1179919242858887
    5. '4' → logprob: -3.8679919242858887
    6. 'len' → logprob: -4.492991924285889
    7. 'steps' → logprob: -5.867991924285889
    8. '(len' → logprob: -6.367991924285889
    9. 'step' → logprob: -8.49299144744873
    10. ' ' → logprob: -9.24299144744873

Token 203: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00013214473437983543
    2. ')]
' → logprob: -9.25013256072998
    3. ' )' → logprob: -10.75013256072998
    4. ']' → logprob: -12.00013256072998
    5. ')]

' → logprob: -12.87513256072998
    6. ')' → logprob: -13.37513256072998
    7. '])]' → logprob: -14.00013256072998
    8. ')]
' → logprob: -14.12513256072998
    9. '])' → logprob: -14.25013256072998
    10. ' ]' → logprob: -14.25013256072998

Token 204: ' ' (ID: 220)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.817915678024292
    2. '   ' → logprob: -1.192915678024292
    3. '<|end|>' → logprob: -2.067915678024292
    4. '
' → logprob: -2.442915678024292
    5. 'for' → logprob: -3.317915678024292
    6. '<|end|>' → logprob: -6.317915916442871
    7. '    
' → logprob: -6.942915916442871
    8. ' ' → logprob: -7.067915916442871
    9. '  
' → logprob: -7.192915916442871
    10. ',' → logprob: -8.442915916442871

Token 205: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2650986313819885
    2. '
' → logprob: -2.1400985717773438
    3. ' for' → logprob: -2.6400985717773438
    4. 'for' → logprob: -3.3900985717773438
    5. '    
' → logprob: -5.265098571777344
    6. '<|end|>' → logprob: -5.890098571777344
    7. '[' → logprob: -7.140098571777344
    8. '  
' → logprob: -8.390098571777344
    9. ' 
' → logprob: -8.515098571777344
    10. ',' → logprob: -8.640098571777344

Token 206: ' next' (ID: 2613)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7434567809104919
    2. 'for' → logprob: -0.7434567809104919
    3. ' range' → logprob: -4.118456840515137
    4. 'range' → logprob: -4.243456840515137
    5. ']' → logprob: -4.493456840515137
    6. '
' → logprob: -6.368456840515137
    7. ' ' → logprob: -6.618456840515137
    8. '{}' → logprob: -6.868456840515137
    9. ' ]' → logprob: -7.368456840515137
    10. '{' → logprob: -7.743456840515137

Token 207: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.013689866289496422
    2. ']' → logprob: -5.763689994812012
    3. 'pos' → logprob: -5.888689994812012
    4. ' for' → logprob: -6.263689994812012
    5. 'for' → logprob: -6.638689994812012
    6. '_positions' → logprob: -6.888689994812012
    7. '=' → logprob: -7.013689994812012
    8. ' =' → logprob: -7.888689994812012
    9. ')' → logprob: -8.138689994812012
    10. '_' → logprob: -8.388689994812012

Token 208: '[u' (ID: 48750)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3377855122089386
    2. '[' → logprob: -1.8377854824066162
    3. ' =' → logprob: -2.962785482406616
    4. '<|end|>' → logprob: -3.837785482406616
    5. ' for' → logprob: -3.962785482406616
    6. 'for' → logprob: -4.587785720825195
    7. '=' → logprob: -4.712785720825195
    8. '=[' → logprob: -5.712785720825195
    9. '][' → logprob: -6.462785720825195
    10. ' ]' → logprob: -6.587785720825195

Token 209: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005182285793125629
    2. ']={' → logprob: -6.380182266235352
    3. ' ]' → logprob: -6.505182266235352
    4. ')]' → logprob: -7.505182266235352
    5. '])' → logprob: -7.755182266235352
    6. '][' → logprob: -7.880182266235352
    7. ']=' → logprob: -7.880182266235352
    8. '])]' → logprob: -9.380182266235352
    9. ']:' → logprob: -9.880182266235352
    10. ']}' → logprob: -10.505182266235352

Token 210: 'step' (ID: 17509)
  Prédit: 'step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.03477995842695236
    2. 's' → logprob: -3.7847800254821777
    3. 'k' → logprob: -4.534780025482178
    4. 'steps' → logprob: -8.53477954864502
    5. ' step' → logprob: -8.90977954864502
    6. 'key' → logprob: -9.15977954864502
    7. ')' → logprob: -9.65977954864502
    8. 'st' → logprob: -9.78477954864502
    9. ']' → logprob: -9.90977954864502
    10. 'd' → logprob: -10.78477954864502

Token 211: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06502265483140945
    2. ']=' → logprob: -2.8150227069854736
    3. ' ]' → logprob: -6.4400224685668945
    4. ']={' → logprob: -6.6900224685668945
    5. ']:' → logprob: -9.190022468566895
    6. '][' → logprob: -9.690022468566895
    7. ']=(' → logprob: -11.440022468566895
    8. ']==' → logprob: -11.690022468566895
    9. '=' → logprob: -12.065022468566895
    10. '[' → logprob: -12.565022468566895

Token 212: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12485946714878082
    2. '=' → logprob: -2.374859571456909
    3. '={}' → logprob: -4.12485933303833
    4. '<|end|>' → logprob: -6.24985933303833
    5. '={' → logprob: -6.49985933303833
    6. ']' → logprob: -6.99985933303833
    7. '.setdefault' → logprob: -7.24985933303833
    8. ' ={' → logprob: -7.24985933303833
    9. '=[]' → logprob: -7.74985933303833
    10. '[' → logprob: -7.74985933303833

Token 213: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.11908148229122162
    2. ' set' → logprob: -2.869081497192383
    3. 'reachable' → logprob: -3.369081497192383
    4. ' reachable' → logprob: -5.119081497192383
    5. '{}' → logprob: -5.244081497192383
    6. 'visited' → logprob: -5.494081497192383
    7. '[]' → logprob: -5.619081497192383
    8. ' []' → logprob: -7.244081497192383
    9. '{' → logprob: -7.494081497192383
    10. ' visited' → logprob: -8.119081497192383

Token 214: ' of' (ID: 328)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.023011814802885056
    2. '()]' → logprob: -4.523011684417725
    3. '(' → logprob: -4.648011684417725
    4. '(step' → logprob: -6.898011684417725
    5. ']' → logprob: -8.273012161254883
    6. '())' → logprob: -8.398012161254883
    7. '()
' → logprob: -8.523012161254883
    8. ' of' → logprob: -9.398012161254883
    9. '():' → logprob: -9.773012161254883
    10. '([' → logprob: -9.898012161254883

Token 215: ' reachable' (ID: 143580)
  Prédit: 'reachable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reachable' → logprob: -0.6160169839859009
    2. 'nodes' → logprob: -0.8660169839859009
    3. ' nodes' → logprob: -3.8660168647766113
    4. ' reachable' → logprob: -4.991016864776611
    5. 'neighbors' → logprob: -5.116016864776611
    6. 'v' → logprob: -6.616016864776611
    7. 'w' → logprob: -6.741016864776611
    8. 'steps' → logprob: -7.366016864776611
    9. 'edges' → logprob: -7.491016864776611
    10. 'next' → logprob: -7.741016864776611

Token 216: ' nodes' (ID: 15749)
  Prédit: ' nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -0.4949020445346832
    2. 'nodes' → logprob: -0.9949020147323608
    3. '()' → logprob: -4.86990213394165
    4. '_nodes' → logprob: -4.86990213394165
    5. '(nodes' → logprob: -5.86990213394165
    6. '(u' → logprob: -8.244901657104492
    7. 'vertices' → logprob: -8.494901657104492
    8. '(v' → logprob: -8.619901657104492
    9. 'v' → logprob: -8.744901657104492
    10. 'positions' → logprob: -8.744901657104492

Token 217: ' from' (ID: 591)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 218: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.16778945922851562
    2. ' u' → logprob: -2.1677894592285156
    3. 'step' → logprob: -4.292789459228516
    4. ' step' → logprob: -4.917789459228516
    5. 'range' → logprob: -5.417789459228516
    6. ')' → logprob: -6.042789459228516
    7. 'edges' → logprob: -6.167789459228516
    8. 'steps' → logprob: -6.167789459228516
    9. ' edges' → logprob: -6.167789459228516
    10. ']' → logprob: -6.792789459228516

Token 219: ' in' (ID: 306)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8764525651931763
    2. ']' → logprob: -1.0014525651931763
    3. '][' → logprob: -2.0014524459838867
    4. '   ' → logprob: -3.5014524459838867
    5. '.get' → logprob: -4.376452445983887
    6. '.setdefault' → logprob: -4.751452445983887
    7. ' for' → logprob: -5.251452445983887
    8. '       ' → logprob: -5.501452445983887
    9. 'for' → logprob: -6.001452445983887
    10. 'step' → logprob: -6.001452445983887

Token 220: ' exactly' (ID: 9707)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.3327428698539734
    2. ' steps' → logprob: -1.4577429294586182
    3. 'step' → logprob: -3.582742929458618
    4. 'range' → logprob: -4.957742691040039
    5. ' step' → logprob: -5.207742691040039
    6. ' range' → logprob: -5.582742691040039
    7. '[' → logprob: -5.707742691040039
    8. ' [' → logprob: -6.082742691040039
    9. 'edges' → logprob: -8.707742691040039
    10. ' edges' → logprob: -9.082742691040039

Token 221: ' step' (ID: 5983)
  Prédit: ' step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.5004618763923645
    2. 'step' → logprob: -1.0004618167877197
    3. ' steps' → logprob: -4.000462055206299
    4. 'steps' → logprob: -4.875462055206299
    5. ' ' → logprob: -9.87546157836914
    6. '   ' → logprob: -10.87546157836914
    7. '    ' → logprob: -11.50046157836914
    8. '	step' → logprob: -12.50046157836914
    9. '(step' → logprob: -12.75046157836914
    10. ')' → logprob: -13.25046157836914

Token 222: ' steps' (ID: 10331)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001835706876590848
    2. ' ]' → logprob: -7.376835823059082
    3. 's' → logprob: -8.251835823059082
    4. '_steps' → logprob: -8.751835823059082
    5. 'steps' → logprob: -8.751835823059082
    6. ']
' → logprob: -9.001835823059082
    7. 'count' → logprob: -9.376835823059082
    8. '_count' → logprob: -9.376835823059082
    9. '   ' → logprob: -9.876835823059082
    10. ' steps' → logprob: -10.251835823059082

Token 223: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 224: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39649301767349243
    2. '   ' → logprob: -1.2714929580688477
    3. '    
' → logprob: -4.146492958068848
    4. '  
' → logprob: -4.521492958068848
    5. ' for' → logprob: -4.896492958068848
    6. '<|end|>' → logprob: -5.021492958068848
    7. ' 
' → logprob: -6.521492958068848
    8. 'for' → logprob: -7.021492958068848
    9. '\n' → logprob: -7.521492958068848
    10. '[' → logprob: -7.646492958068848

Token 225: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.15475594997406006
    2. 'for' (adapté à ' for') → logprob: -2.2797560691833496
    3. '   ' → logprob: -3.2797560691833496
    4. ' 
' → logprob: -6.52975606918335
    5. '    
' → logprob: -7.15475606918335
    6. '
' → logprob: -7.15475606918335
    7. '	for' → logprob: -8.779755592346191
    8. '  
' → logprob: -9.404755592346191
    9. ' ' → logprob: -10.029755592346191
    10. '   
' → logprob: -10.404755592346191

Token 226: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.4953348636627197
    2. ' u' → logprob: -0.9953348636627197
    3. 'i' → logprob: -4.745334625244141
    4. ' i' → logprob: -5.120334625244141
    5. ' step' → logprob: -5.495334625244141
    6. 'step' → logprob: -6.245334625244141
    7. ' _' → logprob: -9.37033462524414
    8. '_' → logprob: -9.62033462524414
    9. ' node' → logprob: -10.12033462524414
    10. '_u' → logprob: -10.37033462524414

Token 227: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006721756421029568
    2. 'in' → logprob: -5.0067219734191895
    3. ' ' → logprob: -12.631721496582031
    4. ',' → logprob: -13.256721496582031
    5. '   ' → logprob: -15.006721496582031
    6. '_in' → logprob: -16.00672149658203
    7. '	in' → logprob: -16.13172149658203
    8. '  ' → logprob: -16.38172149658203
    9. ' ,' → logprob: -16.38172149658203
    10. 'import' → logprob: -16.38172149658203

Token 228: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009114635176956654
    2. ' range' → logprob: -7.000911235809326
    3. '   ' → logprob: -18.250911712646484
    4. ' ' → logprob: -18.875911712646484
    5. '(range' → logprob: -19.375911712646484
    6. '  ' → logprob: -20.250911712646484
    7. '	range' → logprob: -20.250911712646484
    8. '0' → logprob: -21.000911712646484
    9. 'r' → logprob: -21.125911712646484
    10. 'ra' → logprob: -21.750911712646484

Token 229: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.15310683415737e-05
    2. '(' → logprob: -11.000021934509277
    3. 'n' → logprob: -12.250021934509277
    4. ' (' → logprob: -17.12502098083496
    5. ' n' → logprob: -18.37502098083496
    6. '(
' → logprob: -20.50002098083496
    7. '(len' → logprob: -20.87502098083496
    8. '(num' → logprob: -22.12502098083496
    9. 's' → logprob: -22.25002098083496
    10. '_n' → logprob: -22.75002098083496

Token 230: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5760607719421387
    2. '):' → logprob: -0.8260607719421387
    3. '   ' → logprob: -10.076061248779297
    4. ':' → logprob: -10.826061248779297
    5. ' ):
' → logprob: -10.826061248779297
    6. ' ):' → logprob: -10.951061248779297
    7. '):
' → logprob: -11.326061248779297
    8. ')' → logprob: -12.326061248779297
    9. '):

' → logprob: -13.326061248779297
    10. ' ' → logprob: -13.826061248779297

Token 231: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1422456055879593
    2. ' for' → logprob: -2.1422455310821533
    3. '   ' → logprob: -4.267245769500732
    4. '    ' → logprob: -7.892245769500732
    5. 'for' → logprob: -8.017245292663574
    6. '	   ' → logprob: -8.642245292663574
    7. ' ' → logprob: -9.017245292663574
    8. '	for' → logprob: -9.017245292663574
    9. '     ' → logprob: -10.392245292663574
    10. ',' → logprob: -11.642245292663574

Token 232: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.326722115278244
    2. 'for' (adapté à ' for') → logprob: -1.3267221450805664
    3. '   ' → logprob: -4.576722145080566
    4. '       ' → logprob: -5.826722145080566
    5. '	for' → logprob: -9.576722145080566
    6. '           ' → logprob: -10.576722145080566
    7. ' ' → logprob: -11.326722145080566
    8. '    ' → logprob: -11.701722145080566
    9. '```' → logprob: -12.451722145080566
    10. ' step' → logprob: -13.076722145080566

Token 233: ' s' (ID: 265)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.28047555685043335
    2. ' step' → logprob: -1.5304756164550781
    3. 's' → logprob: -4.155475616455078
    4. ' s' → logprob: -5.155475616455078
    5. 'steps' → logprob: -5.280475616455078
    6. ' steps' → logprob: -6.655475616455078
    7. 'st' → logprob: -8.405475616455078
    8. ' st' → logprob: -10.155475616455078
    9. '   ' → logprob: -11.530475616455078
    10. '	step' → logprob: -11.780475616455078

Token 234: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2254619002342224
    2. 'in' → logprob: -1.6004619598388672
    3. ' ' → logprob: -10.350461959838867
    4. '   ' → logprob: -12.100461959838867
    5. 's' → logprob: -12.975461959838867
    6. '  ' → logprob: -13.225461959838867
    7. 'n' → logprob: -13.600461959838867
    8. 'steps' → logprob: -13.725461959838867
    9. '    ' → logprob: -14.100461959838867
    10. ',' → logprob: -14.725461959838867

Token 235: ' steps' (ID: 10331)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.0012298731599003077
    2. ' steps' → logprob: -6.751229763031006
    3. '[' → logprob: -9.751230239868164
    4. 'range' → logprob: -14.501230239868164
    5. '(' → logprob: -14.751230239868164
    6. ' [' → logprob: -14.876230239868164
    7. '   ' → logprob: -16.251230239868164
    8. ' range' → logprob: -17.751230239868164
    9. 'step' → logprob: -17.876230239868164
    10. ' ' → logprob: -18.001230239868164

Token 236: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00012368128227535635
    2. ':
' → logprob: -9.500123977661133
    3. '):' → logprob: -10.500123977661133
    4. ']:' → logprob: -11.375123977661133
    5. ' :' → logprob: -12.750123977661133
    6. '=' → logprob: -12.750123977661133
    7. '   ' → logprob: -13.875123977661133
    8. ' in' → logprob: -13.875123977661133
    9. ']' → logprob: -14.500123977661133
    10. '>:' → logprob: -15.125123977661133

Token 237: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003611708991229534
    2. ' next' → logprob: -6.1286115646362305
    3. 'next' → logprob: -6.7536115646362305
    4. '       ' → logprob: -8.37861156463623
    5. '```' → logprob: -11.87861156463623
    6. '[next' → logprob: -12.37861156463623
    7. ',next' → logprob: -12.62861156463623
    8. '(next' → logprob: -12.87861156463623
    9. '               ' → logprob: -13.12861156463623
    10. ':' → logprob: -13.25361156463623

Token 238: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.641498327255249
    2. 'next' (adapté à ' next') → logprob: -0.766498327255249
    3. '           ' → logprob: -4.766498565673828
    4. '   ' → logprob: -8.266498565673828
    5. '       ' → logprob: -10.266498565673828
    6. '               ' → logprob: -11.016498565673828
    7. '	next' → logprob: -11.266498565673828
    8. '.next' → logprob: -12.141498565673828
    9. '[next' → logprob: -12.141498565673828
    10. '(next' → logprob: -12.266498565673828

Token 239: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -9.088346359931165e-07
    2. 'pos' → logprob: -14.125000953674316
    3. 'Pos' → logprob: -17.25
    4. ' _' → logprob: -17.5
    5. '[pos' → logprob: -17.75
    6. '[_' → logprob: -17.875
    7. '```' → logprob: -17.875
    8. '_' → logprob: -18.625
    9. '[u' → logprob: -18.75
    10. '_p' → logprob: -19.25

Token 240: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -4.320199877838604e-07
    2. ' [' → logprob: -15.625
    3. '[' → logprob: -16.875
    4. ')[' → logprob: -17.75
    5. '}[' → logprob: -17.875
    6. '][' → logprob: -17.875
    7. '[s' → logprob: -17.875
    8. '```' → logprob: -18.5
    9. '\[' → logprob: -18.75
    10. '[user' → logprob: -19.125

Token 241: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0044876812025904655
    2. '[s' → logprob: -5.50448751449585
    3. '].' → logprob: -8.754487991333008
    4. ']' → logprob: -9.504487991333008
    5. '[' → logprob: -9.754487991333008
    6. '.setdefault' → logprob: -10.004487991333008
    7. ' ][' → logprob: -10.629487991333008
    8. 's' → logprob: -10.754487991333008
    9. '[u' → logprob: -11.129487991333008
    10. ']=' → logprob: -12.629487991333008

Token 242: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -6.704273118884885e-07
    2. ' s' → logprob: -14.750000953674316
    3. ']' → logprob: -15.375000953674316
    4. '(s' → logprob: -18.75
    5. '_s' → logprob: -19.375
    6. ']=' → logprob: -19.875
    7. '
' → logprob: -20.125
    8. ' ' → logprob: -20.5
    9. '   ' → logprob: -21.25
    10. ')' → logprob: -21.375

Token 243: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3868919014930725
    2. ']=' → logprob: -1.1368918418884277
    3. '=' → logprob: -11.761892318725586
    4. ']={' → logprob: -11.761892318725586
    5. ']=(' → logprob: -12.761892318725586
    6. ' ]' → logprob: -14.011892318725586
    7. ']+=' → logprob: -14.386892318725586
    8. ')=' → logprob: -15.761892318725586
    9. '=set' → logprob: -15.761892318725586
    10. '].' → logprob: -15.886892318725586

Token 244: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0067190444096922874
    2. ' =' → logprob: -5.00671911239624
    3. '=set' → logprob: -12.631718635559082
    4. '=

' → logprob: -15.506718635559082
    5. '=re' → logprob: -16.5067195892334
    6. '=}' → logprob: -17.7567195892334
    7. '＝' → logprob: -18.1317195892334
    8. '.=' → logprob: -18.1317195892334
    9. '=get' → logprob: -18.7567195892334
    10. '=create' → logprob: -18.7567195892334

Token 245: ' reachable' (ID: 143580)
  Prédit: 'reachable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reachable' → logprob: -0.0015058133285492659
    2. ' reachable' → logprob: -6.5015058517456055
    3. 'reach' → logprob: -13.251505851745605
    4. 're' → logprob: -13.626505851745605
    5. '   ' → logprob: -15.876505851745605
    6. 'set' → logprob: -16.00150489807129
    7. ' ' → logprob: -17.00150489807129
    8. '{' → logprob: -17.12650489807129
    9. 'read' → logprob: -17.25150489807129
    10. ' ' → logprob: -17.50150489807129

Token 246: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.5
    3. '_tokens' → logprob: -16.875
    4. '_n' → logprob: -16.875
    5. ' _' → logprob: -18.0
    6. '"_' → logprob: -18.75
    7. '_node' → logprob: -18.75
    8. '\' → logprob: -19.25
    9. ')_' → logprob: -19.625
    10. '__' → logprob: -19.625

Token 247: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.00014811802248004824
    2. ' (' → logprob: -9.000147819519043
    3. '(' → logprob: -10.750147819519043
    4. '(next' → logprob: -13.625147819519043
    5. '[u' → logprob: -13.875147819519043
    6. 'u' → logprob: -14.625147819519043
    7. '(s' → logprob: -15.375147819519043
    8. '   ' → logprob: -17.12514877319336
    9. '(nodes' → logprob: -17.12514877319336
    10. '(user' → logprob: -17.25014877319336

Token 248: ',s' (ID: 20379)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12726415693759918
    2. ',s' → logprob: -2.1272642612457275
    3. ' ,' → logprob: -8.002264022827148
    4. ' s' → logprob: -14.252264022827148
    5. 's' → logprob: -15.252264022827148
    6. ',
' → logprob: -15.877264022827148
    7. ',n' → logprob: -16.50226402282715
    8. '   ' → logprob: -16.87726402282715
    9. '，' → logprob: -17.25226402282715
    10. ',int' → logprob: -17.50226402282715

Token 249: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -15.125000953674316
    3. ')
' → logprob: -15.375000953674316
    4. '))' → logprob: -16.875
    5. ')#' → logprob: -17.75
    6. ')}' → logprob: -18.875
    7. '   ' → logprob: -18.875
    8. ')return' → logprob: -19.125
    9. ')}}' → logprob: -19.625
    10. ')`' → logprob: -19.875

Token 250: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 251: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 252: ' If' (ID: 1843)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 253: ' no' (ID: 860)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.1833774596452713
    2. 'not' → logprob: -2.558377504348755
    3. 'len' → logprob: -2.808377504348755
    4. ' len' → logprob: -3.558377504348755
    5. ' s' → logprob: -7.308377265930176
    6. 's' → logprob: -8.183377265930176
    7. 'n' → logprob: -9.308377265930176
    8. ' next' → logprob: -9.808377265930176
    9. ' ' → logprob: -9.933377265930176
    10. 'next' → logprob: -10.308377265930176

Token 254: ' reachable' (ID: 143580)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.48024797439575195
    2. 'next' → logprob: -1.355247974395752
    3. 't' → logprob: -2.480247974395752
    4. ' reachable' → logprob: -4.105247974395752
    5. 'reachable' → logprob: -4.605247974395752
    6. 'n' → logprob: -5.105247974395752
    7. 'w' → logprob: -6.605247974395752
    8. 's' → logprob: -7.230247974395752
    9. ' nodes' → logprob: -7.230247974395752
    10. '[next' → logprob: -7.605247974395752

Token 255: ' nodes' (ID: 15749)
  Prédit: ' nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -0.4996897280216217
    2. '_nodes' → logprob: -1.2496896982192993
    3. 'nodes' → logprob: -2.249689817428589
    4. 's' → logprob: -7.24968957901001
    5. ' node' → logprob: -8.624690055847168
    6. ' ' → logprob: -8.624690055847168
    7. 'node' → logprob: -9.999690055847168
    8. 'Nodes' → logprob: -10.499690055847168
    9. '<|end|>' → logprob: -10.749690055847168
    10. '	nodes' → logprob: -10.874690055847168

Token 256: ' in' (ID: 306)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2613077759742737
    2. ':' → logprob: -1.636307716369629
    3. 'and' → logprob: -4.011307716369629
    4. ':
' → logprob: -4.261307716369629
    5. '           ' → logprob: -6.636307716369629
    6. ' for' → logprob: -7.386307716369629
    7. ' :' → logprob: -8.511307716369629
    8. '[u' → logprob: -8.636307716369629
    9. ' ==' → logprob: -9.011307716369629
    10. ',' → logprob: -9.011307716369629

Token 257: ' exact' (ID: 6354)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.03598044067621231
    2. ' next' → logprob: -3.410980463027954
    3. 's' → logprob: -6.785980224609375
    4. '[next' → logprob: -7.410980224609375
    5. 'steps' → logprob: -8.285980224609375
    6. ' s' → logprob: -9.160980224609375
    7. 'step' → logprob: -9.410980224609375
    8. '   ' → logprob: -10.285980224609375
    9. 'range' → logprob: -10.660980224609375
    10. 'visited' → logprob: -10.785980224609375

Token 258: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8533685207366943
    2. ' s' → logprob: -0.9783685207366943
    3. 'step' → logprob: -2.4783685207366943
    4. 'steps' → logprob: -2.8533685207366943
    5. ' steps' → logprob: -3.4783685207366943
    6. ' step' → logprob: -3.7283685207366943
    7. ' next' → logprob: -8.103368759155273
    8. ' ' → logprob: -8.228368759155273
    9. 'next' → logprob: -8.728368759155273
    10. '[s' → logprob: -8.978368759155273

Token 259: ' steps' (ID: 10331)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.5911176800727844
    2. ' steps' → logprob: -0.8411176800727844
    3. 'step' → logprob: -5.466117858886719
    4. ' step' → logprob: -5.466117858886719
    5. ':' → logprob: -5.841117858886719
    6. '_steps' → logprob: -5.966117858886719
    7. ',' → logprob: -8.591117858886719
    8. ' else' → logprob: -8.966117858886719
    9. ':
' → logprob: -9.216117858886719
    10. '   ' → logprob: -9.466117858886719

Token 260: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10209381580352783
    2. ':' → logprob: -3.3520936965942383
    3. 'and' → logprob: -3.3520936965942383
    4. '           ' → logprob: -3.8520936965942383
    5. ',' → logprob: -5.977093696594238
    6. ':
' → logprob: -6.352093696594238
    7. ' or' → logprob: -7.227093696594238
    8. '       ' → logprob: -8.227093696594238
    9. '<|end|>' → logprob: -8.727093696594238
    10. '               ' → logprob: -9.227093696594238

Token 261: ' empty' (ID: 8213)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.019616723060608
    2. ' next' → logprob: -1.144616723060608
    3. 'next' → logprob: -2.0196166038513184
    4. '           ' → logprob: -2.1446166038513184
    5. '               ' → logprob: -4.019616603851318
    6. ' #' → logprob: -4.144616603851318
    7. ' if' → logprob: -4.519616603851318
    8. ' continue' → logprob: -5.019616603851318
    9. ' for' → logprob: -5.144616603851318
    10. 'continue' → logprob: -5.519616603851318

Token 262: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.008103389292955399
    2. '<|end|>' → logprob: -5.633103370666504
    3. ' set' → logprob: -5.758103370666504
    4. '
' → logprob: -7.258103370666504
    5. '{}' → logprob: -8.383103370666504
    6. '_set' → logprob: -10.008103370666504
    7. '#set' → logprob: -10.258103370666504
    8. ')' → logprob: -10.258103370666504
    9. ')set' → logprob: -10.383103370666504
    10. '=set' → logprob: -10.383103370666504

Token 263: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 264: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 265: ' INF' (ID: 69196)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33606845140457153
    2. 'dp' → logprob: -1.7110683917999268
    3. 'def' → logprob: -3.0860683917999268
    4. 'score' → logprob: -4.961068630218506
    5. 'from' → logprob: -5.211068630218506
    6. 'for' → logprob: -5.336068630218506
    7. '#' → logprob: -5.586068630218506
    8. '
' → logprob: -5.711068630218506
    9. 'return' → logprob: -5.711068630218506
    10. 'turn' → logprob: -5.836068630218506

Token 266: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10048086941242218
    2. '=' → logprob: -2.350480794906616
    3. '=float' → logprob: -8.725481033325195
    4. '=int' → logprob: -9.100481033325195
    5. '＝' → logprob: -16.975481033325195
    6. ')' → logprob: -17.100481033325195
    7. '   ' → logprob: -17.225481033325195
    8. ' ' → logprob: -17.350481033325195
    9. ',' → logprob: -17.725481033325195
    10. ' ' → logprob: -17.850481033325195

Token 267: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.003476293757557869
    2. ' ' → logprob: -6.253476142883301
    3. 'float' → logprob: -6.503476142883301
    4. ' float' → logprob: -10.1284761428833
    5. 'int' → logprob: -11.8784761428833
    6. '100' → logprob: -14.1284761428833
    7. '1' → logprob: -14.2534761428833
    8. ' int' → logprob: -16.878477096557617
    9. '999' → logprob: -17.253477096557617
    10. '   ' → logprob: -17.503477096557617

Token 268: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.006864082533866167
    2. 'float' → logprob: -5.006864070892334
    3. 'int' → logprob: -8.881864547729492
    4. '1' → logprob: -11.631864547729492
    5. ' float' → logprob: -14.631864547729492
    6. ' ' → logprob: -15.006864547729492
    7. '100' → logprob: -16.006864547729492
    8. '(' → logprob: -17.631864547729492
    9. '(float' → logprob: -18.006864547729492
    10. '2' → logprob: -18.006864547729492

Token 269: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.010798431932926178
    2. '**' → logprob: -5.135798454284668
    3. '7' → logprob: -5.885798454284668
    4. '8' → logprob: -6.635798454284668
    5. '6' → logprob: -7.885798454284668
    6. '18' → logprob: -8.135798454284668
    7. '12' → logprob: -10.010798454284668
    8. '10' → logprob: -10.260798454284668
    9. '09' → logprob: -12.260798454284668
    10. '0' → logprob: -12.385798454284668

Token 270: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.009209830313920975
    2. '15' → logprob: -5.009209632873535
    3. '18' → logprob: -6.009209632873535
    4. '10' → logprob: -10.884209632873535
    5. '12' → logprob: -11.134209632873535
    6. '14' → logprob: -13.884209632873535
    7. '16' → logprob: -14.634209632873535
    8. '13' → logprob: -15.134209632873535
    9. '17' → logprob: -15.759209632873535
    10. '20' → logprob: -17.13421058654785

Token 271: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9328500628471375
    2. 'dp' → logprob: -1.0578501224517822
    3. 'dist' → logprob: -1.4328501224517822
    4. '
' → logprob: -4.307849884033203
    5. ' dp' → logprob: -5.807849884033203
    6. 'distance' → logprob: -6.432849884033203
    7. ' dist' → logprob: -6.432849884033203
    8. 'from' → logprob: -8.182849884033203
    9. 'import' → logprob: -9.182849884033203
    10. 'DP' → logprob: -9.432849884033203

Token 272: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08179771155118942
    2. 'dp' → logprob: -3.0817975997924805
    3. 'dist' → logprob: -3.4567975997924805
    4. '
' → logprob: -8.08179759979248
    5. ' dist' → logprob: -8.20679759979248
    6. ' dp' → logprob: -8.70679759979248
    7. 'distance' → logprob: -8.95679759979248
    8. 'from' → logprob: -9.58179759979248
    9. '    
' → logprob: -9.83179759979248
    10. 'import' → logprob: -10.20679759979248

Token 273: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3873206675052643
    2. 'dist' → logprob: -1.137320637702942
    3. '   ' → logprob: -8.387320518493652
    4. 'distance' → logprob: -9.637320518493652
    5. ' dp' → logprob: -10.012320518493652
    6. 'from' → logprob: -10.512320518493652
    7. ' dist' → logprob: -10.762320518493652
    8. 'cost' → logprob: -10.887320518493652
    9. 'DP' → logprob: -11.387320518493652
    10. 'd' → logprob: -12.262320518493652

Token 274: ' dp' (ID: 21546)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6408005356788635
    2. 'dp' → logprob: -0.7658005356788635
    3. 'from' → logprob: -5.140800476074219
    4. 'import' → logprob: -6.265800476074219
    5. 'cost' → logprob: -9.015800476074219
    6. '#' → logprob: -9.515800476074219
    7. 'distance' → logprob: -9.640800476074219
    8. 'DP' → logprob: -10.390800476074219
    9. 'for' → logprob: -10.640800476074219
    10. '   ' → logprob: -11.140800476074219

Token 275: '[' (ID: 58)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06730932742357254
    2. '=' → logprob: -2.8173093795776367
    3. '=[' → logprob: -5.317309379577637
    4. '=[[' → logprob: -7.817309379577637
    5. ' =[' → logprob: -11.317309379577637
    6. '=[]' → logprob: -12.942309379577637
    7. ' ' → logprob: -13.692309379577637
    8. 'dp' → logprob: -14.442309379577637
    9. '=[
' → logprob: -14.942309379577637
    10. '   ' → logprob: -15.067309379577637

Token 276: 'turn' (ID: 529)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9989822506904602
    2. '][' → logprob: -1.2489821910858154
    3. ']' → logprob: -1.3739821910858154
    4. '0' → logprob: -3.2489821910858154
    5. '3' → logprob: -4.3739824295043945
    6. '(n' → logprob: -4.4989824295043945
    7. '(' → logprob: -4.8739824295043945
    8. '1' → logprob: -4.9989824295043945
    9. '])' → logprob: -6.3739824295043945
    10. '4' → logprob: -6.3739824295043945

Token 277: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7123957276344299
    2. '][' → logprob: -0.7123957276344299
    3. ']=' → logprob: -4.212395668029785
    4. '=' → logprob: -6.587395668029785
    5. '][_' → logprob: -7.462395668029785
    6. ']={' → logprob: -8.087395668029785
    7. ',' → logprob: -8.212395668029785
    8. ']_' → logprob: -8.462395668029785
    9. ' =' → logprob: -8.587395668029785
    10. 's' → logprob: -8.587395668029785

Token 278: 'position' (ID: 4504)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.23456308245658875
    2. 'n' → logprob: -1.7345631122589111
    3. '][' → logprob: -4.484562873840332
    4. ' u' → logprob: -5.484562873840332
    5. '(u' → logprob: -5.734562873840332
    6. 'a' → logprob: -5.859562873840332
    7. 'node' → logprob: -6.484562873840332
    8. ' n' → logprob: -6.609562873840332
    9. '[u' → logprob: -6.859562873840332
    10. ' (' → logprob: -6.859562873840332

Token 279: ']:' (ID: 12433)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.4808827340602875
    2. ']' → logprob: -0.9808827638626099
    3. ']=' → logprob: -5.10588264465332
    4. ']={' → logprob: -7.73088264465332
    5. '=' → logprob: -9.10588264465332
    6. ' ][' → logprob: -9.98088264465332
    7. '[' → logprob: -10.10588264465332
    8. ' ]' → logprob: -10.73088264465332
    9. '   ' → logprob: -11.35588264465332
    10. '][]' → logprob: -11.48088264465332

Token 280: ' minimal' (ID: 19957)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.28007346391677856
    2. 'dp' → logprob: -1.6550734043121338
    3. '[
' → logprob: -3.780073404312134
    4. ' [' → logprob: -4.905073642730713
    5. 'from' → logprob: -5.155073642730713
    6. 'import' → logprob: -5.780073642730713
    7. '0' → logprob: -6.030073642730713
    8. ']' → logprob: -6.280073642730713
    9. '{' → logprob: -6.655073642730713
    10. '[-' → logprob: -6.655073642730713

Token 281: ' turns' (ID: 18304)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.8740082383155823
    2. ' cost' → logprob: -1.4990081787109375
    3. 'distance' → logprob: -1.9990081787109375
    4. ' steps' → logprob: -2.7490081787109375
    5. ' distance' → logprob: -2.8740081787109375
    6. 'steps' → logprob: -3.1240081787109375
    7. ' number' → logprob: -3.3740081787109375
    8. '=' → logprob: -5.2490081787109375
    9. '_cost' → logprob: -5.6240081787109375
    10. 'number' → logprob: -5.7490081787109375

Token 282: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6395435929298401
    2. '=' → logprob: -0.7645435929298401
    3. '   ' → logprob: -5.139543533325195
    4. '=[' → logprob: -7.264543533325195
    5. ']' → logprob: -8.514543533325195
    6. '][' → logprob: -10.264543533325195
    7. 'dp' → logprob: -10.764543533325195
    8. ' ' → logprob: -10.889543533325195
    9. ']=' → logprob: -11.389543533325195
    10. '=[]
' → logprob: -11.639543533325195

Token 283: ' reach' (ID: 7627)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.33486810326576233
    2. 'reach' → logprob: -1.95986807346344
    3. 'finish' → logprob: -3.0848681926727295
    4. '
' → logprob: -3.9598681926727295
    5. '```' → logprob: -4.58486795425415
    6. '-' → logprob: -4.70986795425415
    7. ' ' → logprob: -4.70986795425415
    8. 'find' → logprob: -5.33486795425415
    9. ' reach' → logprob: -5.33486795425415
    10. 'lose' → logprob: -5.45986795425415

Token 284: ' goal' (ID: 8583)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -1.4938055276870728
    2. '   ' → logprob: -1.7438055276870728
    3. 'n' → logprob: -2.493805408477783
    4. ']' → logprob: -2.868805408477783
    5. '(n' → logprob: -2.868805408477783
    6. ' (' → logprob: -3.118805408477783
    7. 'pos' → logprob: -3.243805408477783
    8. '[n' → logprob: -3.243805408477783
    9. ' position' → logprob: -3.493805408477783
    10. '[-' → logprob: -3.618805408477783

Token 285: ' from' (ID: 591)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6626994013786316
    2. '   ' → logprob: -0.7876994013786316
    3. '
' → logprob: -4.162699222564697
    4. 'dp' → logprob: -5.037699222564697
    5. ']' → logprob: -5.912699222564697
    6. '=' → logprob: -6.162699222564697
    7. '][' → logprob: -7.412699222564697
    8. '_dp' → logprob: -7.662699222564697
    9. ' ' → logprob: -8.037699699401855
    10. ' dp' → logprob: -8.162699699401855

Token 286: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.5143143534660339
    2. '0' → logprob: -1.2643144130706787
    3. '(' → logprob: -3.5143144130706787
    4. '[' → logprob: -3.7643144130706787
    5. ' position' → logprob: -4.3893141746521
    6. 'range' → logprob: -4.7643141746521
    7. ']' → logprob: -5.2643141746521
    8. 'pos' → logprob: -5.2643141746521
    9. 'start' → logprob: -5.5143141746521
    10. ' ' → logprob: -5.5143141746521

Token 287: ' after' (ID: 1934)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08542826026678085
    2. '=' → logprob: -3.210428237915039
    3. 'dp' → logprob: -4.085428237915039
    4. ']' → logprob: -4.460428237915039
    5. '
' → logprob: -5.335428237915039
    6. '_dp' → logprob: -6.210428237915039
    7. '][' → logprob: -6.460428237915039
    8. '   ' → logprob: -6.460428237915039
    9. ']=' → logprob: -7.335428237915039
    10. '=[' → logprob: -7.335428237915039

Token 288: ' turn' (ID: 3716)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.5338996648788452
    2. ' turn' → logprob: -1.7838996648788452
    3. '0' → logprob: -2.5338997840881348
    4. '   ' → logprob: -3.1588997840881348
    5. '[' → logprob: -3.4088997840881348
    6. 'position' → logprob: -3.6588997840881348
    7. 'current' → logprob: -4.408899784088135
    8. ' ' → logprob: -4.408899784088135
    9. ' current' → logprob: -5.158899784088135
    10. ' position' → logprob: -5.283899784088135

Token 289: ' turns' (ID: 18304)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16363629698753357
    2. '
' → logprob: -3.1636362075805664
    3. '   ' → logprob: -3.2886362075805664
    4. ']' → logprob: -3.4136362075805664
    5. '=' → logprob: -4.413636207580566
    6. 'dp' → logprob: -4.538636207580566
    7. '_dp' → logprob: -5.538636207580566
    8. '_' → logprob: -6.288636207580566
    9. ',' → logprob: -6.663636207580566
    10. '][' → logprob: -6.788636207580566

Token 290: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1659819632768631
    2. 'dp' → logprob: -2.0409820079803467
    3. ' dp' → logprob: -4.040981769561768
    4. '
' → logprob: -5.540981769561768
    5. ' =' → logprob: -7.665981769561768
    6. '_dp' → logprob: -7.915981769561768
    7. '	dp' → logprob: -7.915981769561768
    8. '(dp' → logprob: -9.415982246398926
    9. '    
' → logprob: -9.790982246398926
    10. '```' → logprob: -10.290982246398926

Token 291: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.018395859748125076
    2. '   ' → logprob: -4.268395900726318
    3. ' dp' → logprob: -5.518395900726318
    4. '```' → logprob: -9.51839542388916
    5. ']' → logprob: -9.89339542388916
    6. '_dp' → logprob: -10.51839542388916
    7. '	dp' → logprob: -10.64339542388916
    8. '
' → logprob: -11.64339542388916
    9. 'import' → logprob: -12.14339542388916
    10. ' ' → logprob: -12.26839542388916

Token 292: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5772411227226257
    2. ' dp' → logprob: -1.0772411823272705
    3. '   ' → logprob: -2.3272411823272705
    4. '	dp' → logprob: -8.077240943908691
    5. 'import' → logprob: -9.327240943908691
    6. '_dp' → logprob: -10.702240943908691
    7. '
' → logprob: -11.077240943908691
    8. 'from' → logprob: -11.827240943908691
    9. ' from' → logprob: -12.952240943908691
    10. ' ' → logprob: -13.327240943908691

Token 293: ' However' (ID: 5551)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0004257892433088273
    2. 'from' → logprob: -8.000425338745117
    3. 'import' → logprob: -9.750425338745117
    4. ' dp' → logprob: -10.375425338745117
    5. '   ' → logprob: -14.750425338745117
    6. ' from' → logprob: -14.875425338745117
    7. 'for' → logprob: -17.000425338745117
    8. '
' → logprob: -17.375425338745117
    9. ' import' → logprob: -18.125425338745117
    10. '```' → logprob: -18.375425338745117

Token 294: ' we' (ID: 581)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3348585367202759
    2. ' dp' → logprob: -2.4598584175109863
    3. ',' → logprob: -3.0848584175109863
    4. ']' → logprob: -3.5848584175109863
    5. '   ' → logprob: -3.7098584175109863
    6. '[' → logprob: -3.7098584175109863
    7. '#' → logprob: -4.084858417510986
    8. '
' → logprob: -4.334858417510986
    9. '<|end|>' → logprob: -4.584858417510986
    10. '[]' → logprob: -4.834858417510986

Token 295: ' want' (ID: 1682)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.22358503937721252
    2. '=' → logprob: -2.9735851287841797
    3. ' =' → logprob: -3.0985851287841797
    4. '[' → logprob: -4.09858512878418
    5. '   ' → logprob: -4.59858512878418
    6. ':' → logprob: -4.59858512878418
    7. ' need' → logprob: -4.84858512878418
    8. ' ]' → logprob: -4.84858512878418
    9. ' continue' → logprob: -4.84858512878418
    10. ' are' → logprob: -4.97358512878418

Token 296: ' minimal' (ID: 19957)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.50220787525177
    2. 'to' → logprob: -1.00220787525177
    3. 'dp' → logprob: -3.6272077560424805
    4. ']' → logprob: -8.37720775604248
    5. '   ' → logprob: -8.50220775604248
    6. ' dp' → logprob: -8.62720775604248
    7. ')' → logprob: -9.00220775604248
    8. 'a' → logprob: -9.87720775604248
    9. ' a' → logprob: -10.00220775604248
    10. '[]' → logprob: -10.25220775604248

Token 297: ' turns' (ID: 18304)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -1.312154769897461
    2. 'dp' → logprob: -1.437154769897461
    3. '_turn' → logprob: -1.937154769897461
    4. 'import' → logprob: -2.312154769897461
    5. ' turns' → logprob: -2.437154769897461
    6. 'from' → logprob: -3.187154769897461
    7. 'def' → logprob: -3.187154769897461
    8. 'steps' → logprob: -3.437154769897461
    9. '_' → logprob: -4.562154769897461
    10. 'moves' → logprob: -5.062154769897461

Token 298: ' to' (ID: 316)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7185699939727783
    2. '   ' → logprob: -1.5935699939727783
    3. ' =' → logprob: -2.4685699939727783
    4. '
' → logprob: -2.4685699939727783
    5. '=' → logprob: -3.7185699939727783
    6. ',' → logprob: -3.8435699939727783
    7. '<|end|>' → logprob: -3.8435699939727783
    8. ' to' → logprob: -4.218569755554199
    9. 'import' → logprob: -5.093569755554199
    10. ')' → logprob: -5.218569755554199

Token 299: ' finish' (ID: 9115)
  Prédit: 'reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reach' → logprob: -0.17529736459255219
    2. 'go' → logprob: -3.050297260284424
    3. 'move' → logprob: -3.300297260284424
    4. 'use' → logprob: -4.175297260284424
    5. 'find' → logprob: -4.550297260284424
    6. ' reach' → logprob: -4.800297260284424
    7. 'play' → logprob: -5.300297260284424
    8. 'ach' → logprob: -5.425297260284424
    9. 'get' → logprob: -5.675297260284424
    10. 'win' → logprob: -5.675297260284424

Token 300: ' no' (ID: 860)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21367689967155457
    2. '   ' → logprob: -1.838676929473877
    3. 'dp' → logprob: -4.713676929473877
    4. ']' → logprob: -5.088676929473877
    5. '_dp' → logprob: -5.213676929473877
    6. '[' → logprob: -6.588676929473877
    7. ' =' → logprob: -6.588676929473877
    8. '    
' → logprob: -6.963676929473877
    9. '```' → logprob: -7.213676929473877
    10. '<|end|>' → logprob: -7.213676929473877

Token 301: ' matter' (ID: 7165)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.03028956986963749
    2. 'w' → logprob: -3.780289649963379
    3. ' longer' → logprob: -5.530289649963379
    4. ' t' → logprob: -6.905289649963379
    5. 'T' → logprob: -7.655289649963379
    6. 'n' → logprob: -8.030289649963379
    7. ' more' → logprob: -8.280289649963379
    8. 'ne' → logprob: -8.780289649963379
    9. 'te' → logprob: -9.280289649963379
    10. '   ' → logprob: -9.405289649963379

Token 302: ' what' (ID: 1412)
  Prédit: 'where'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'where' → logprob: -0.787745475769043
    2. ' the' → logprob: -1.662745475769043
    3. ' where' → logprob: -2.162745475769043
    4. 'the' → logprob: -2.537745475769043
    5. 'position' → logprob: -2.912745475769043
    6. ' of' → logprob: -3.037745475769043
    7. 'of' → logprob: -3.287745475769043
    8. ' what' → logprob: -4.537745475769043
    9. 'what' → logprob: -5.037745475769043
    10. ' position' → logprob: -5.662745475769043

Token 303: ' sequence' (ID: 16281)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2744499444961548
    2. '
' → logprob: -1.6494499444961548
    3. 'dp' → logprob: -3.5244498252868652
    4. ' dp' → logprob: -4.399449825286865
    5. '    
' → logprob: -6.524449825286865
    6. '```' → logprob: -6.524449825286865
    7. '_dp' → logprob: -7.274449825286865
    8. '\' → logprob: -7.899449825286865
    9. ' =' → logprob: -8.274450302124023
    10. ' ' → logprob: -8.274450302124023

Token 304: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3762717843055725
    2. 'dp' → logprob: -1.2512717247009277
    3. ' dp' → logprob: -4.501271724700928
    4. '_dp' → logprob: -5.501271724700928
    5. '
' → logprob: -5.626271724700928
    6. ']' → logprob: -6.376271724700928
    7. '[' → logprob: -6.626271724700928
    8. 'def' → logprob: -7.376271724700928
    9. ' ' → logprob: -7.376271724700928
    10. '<|end|>' → logprob: -7.751271724700928

Token 305: ' numbers' (ID: 8663)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.1659121811389923
    2. 'turn' → logprob: -2.29091215133667
    3. 'moves' → logprob: -3.54091215133667
    4. ' steps' → logprob: -4.29091215133667
    5. ' turns' → logprob: -5.66591215133667
    6. 'positions' → logprob: -6.41591215133667
    7. ' moves' → logprob: -7.04091215133667
    8. 'next' → logprob: -7.54091215133667
    9. 'plays' → logprob: -7.79091215133667
    10. 'step' → logprob: -8.040912628173828

Token 306: ' brother' (ID: 16820)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8556004166603088
    2. '
' → logprob: -1.355600357055664
    3. ']' → logprob: -1.355600357055664
    4. 'dp' → logprob: -3.480600357055664
    5. '_dp' → logprob: -4.980600357055664
    6. ' =' → logprob: -6.230600357055664
    7. ']
' → logprob: -6.355600357055664
    8. ',' → logprob: -6.480600357055664
    9. '<|end|>' → logprob: -6.730600357055664
    10. ')' → logprob: -6.730600357055664

Token 307: ' choose' (ID: 5655)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.45988428592681885
    2. '_' → logprob: -2.3348841667175293
    3. ''s' → logprob: -2.5848841667175293
    4. '_steps' → logprob: -2.9598841667175293
    5. '[]' → logprob: -3.4598841667175293
    6. '   ' → logprob: -3.8348841667175293
    7. '_s' → logprob: -4.084884166717529
    8. '_moves' → logprob: -4.584884166717529
    9. ']' → logprob: -4.959884166717529
    10. ' s' → logprob: -5.084884166717529

Token 308: '
' (ID: 198)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9546974897384644
    2. '   ' → logprob: -1.2046974897384644
    3. 'dp' → logprob: -1.3296974897384644
    4. '
' → logprob: -3.829697608947754
    5. ' dp' → logprob: -4.329697608947754
    6. ')' → logprob: -5.329697608947754
    7. '_dp' → logprob: -5.579697608947754
    8. '<|end|>' → logprob: -6.204697608947754
    9. '	dp' → logprob: -7.079697608947754
    10. ']
' → logprob: -7.454697608947754

Token 309: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06340810656547546
    2. '
' → logprob: -3.313408136367798
    3. ' dp' → logprob: -4.063407897949219
    4. 'dp' → logprob: -5.063407897949219
    5. '    
' → logprob: -7.688407897949219
    6. ',' → logprob: -8.563407897949219
    7. '```' → logprob: -8.688407897949219
    8. ' =' → logprob: -8.813407897949219
    9. '_dp' → logprob: -9.563407897949219
    10. ' for' → logprob: -9.688407897949219

Token 310: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.01699303649365902
    2. ' dp' → logprob: -4.766993045806885
    3. '   ' → logprob: -4.891993045806885
    4. ']' → logprob: -8.266992568969727
    5. 'import' → logprob: -8.516992568969727
    6. 'from' → logprob: -9.016992568969727
    7. '_dp' → logprob: -9.641992568969727
    8. '```' → logprob: -10.391992568969727
    9. '
' → logprob: -10.516992568969727
    10. '	dp' → logprob: -10.641992568969727

Token 311: ' We' (ID: 1416)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0008010497549548745
    2. 'from' → logprob: -7.375801086425781
    3. ' dp' → logprob: -9.250801086425781
    4. 'import' → logprob: -9.750801086425781
    5. ' from' → logprob: -11.375801086425781
    6. '   ' → logprob: -12.125801086425781
    7. 'dist' → logprob: -14.375801086425781
    8. '#' → logprob: -14.375801086425781
    9. '	dp' → logprob: -14.750801086425781
    10. '_dp' → logprob: -14.875801086425781

Token 312: ' use' (ID: 1199)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.016897439956665
    2. ' continue' → logprob: -1.516897439956665
    3. ' need' → logprob: -2.266897439956665
    4. 'import' → logprob: -2.391897439956665
    5. '   ' → logprob: -2.766897439956665
    6. ' want' → logprob: -3.141897439956665
    7. '#' → logprob: -3.766897439956665
    8. ' can' → logprob: -3.766897439956665
    9. 'need' → logprob: -4.141897201538086
    10. ' =' → logprob: -4.391897201538086

Token 313: ' a' (ID: 261)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.012217764742672443
    2. 'from' → logprob: -5.137217998504639
    3. 'min' → logprob: -5.637217998504639
    4. 'import' → logprob: -6.512217998504639
    5. 'b' → logprob: -7.387217998504639
    6. ' dp' → logprob: -7.637217998504639
    7. ' from' → logprob: -11.13721752166748
    8. 'a' → logprob: -11.26221752166748
    9. ' min' → logprob: -11.38721752166748
    10. 'def' → logprob: -11.51221752166748

Token 314: ' value' (ID: 1432)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7944908738136292
    2. 'b' → logprob: -0.9194908738136292
    3. 'min' → logprob: -2.2944908142089844
    4. 'from' → logprob: -3.6694908142089844
    5. 'def' → logprob: -4.544490814208984
    6. 'deque' → logprob: -5.169490814208984
    7. 'B' → logprob: -6.044490814208984
    8. 'queue' → logprob: -6.294490814208984
    9. 'bit' → logprob: -7.294490814208984
    10. 'DP' → logprob: -8.294490814208984

Token 315: ' function' (ID: 1114)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05730839818716049
    2. '=' → logprob: -3.0573084354400635
    3. '   ' → logprob: -6.182308197021484
    4. '=[' → logprob: -7.057308197021484
    5. ' ' → logprob: -7.182308197021484
    6. 'import' → logprob: -7.307308197021484
    7. '_iteration' → logprob: -7.307308197021484
    8. 'dp' → logprob: -7.432308197021484
    9. 'def' → logprob: -7.807308197021484
    10. 's' → logprob: -7.932308197021484

Token 316: ' V' (ID: 631)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18766216933727264
    2. 'dp' → logprob: -1.937662124633789
    3. ' dp' → logprob: -4.062662124633789
    4. '
' → logprob: -5.062662124633789
    5. '_dp' → logprob: -6.687662124633789
    6. 'def' → logprob: -7.312662124633789
    7. 'import' → logprob: -8.312662124633789
    8. ']' → logprob: -8.312662124633789
    9. ')' → logprob: -8.937662124633789
    10. '	dp' → logprob: -9.062662124633789

Token 317: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09852981567382812
    2. '   ' → logprob: -2.598529815673828
    3. '=' → logprob: -4.598529815673828
    4. '
' → logprob: -5.848529815673828
    5. ' =
' → logprob: -6.473529815673828
    6. 'def' → logprob: -7.098529815673828
    7. '[' → logprob: -7.098529815673828
    8. '=
' → logprob: -7.598529815673828
    9. '=[' → logprob: -7.973529815673828
    10. 'dp' → logprob: -8.223529815673828

Token 318: ' minimal' (ID: 19957)
  Prédit: ' V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' V' → logprob: -1.1103112697601318
    2. 'dp' → logprob: -1.2353112697601318
    3. 'V' → logprob: -2.485311269760132
    4. ' from' → logprob: -2.610311269760132
    5. ' dp' → logprob: -2.610311269760132
    6. 'from' → logprob: -2.735311269760132
    7. 'def' → logprob: -3.485311269760132
    8. ' def' → logprob: -4.235311508178711
    9. 'import' → logprob: -4.235311508178711
    10. '
' → logprob: -5.735311508178711

Token 319: ' turns' (ID: 18304)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.9575406908988953
    2. 'dp' → logprob: -1.45754075050354
    3. '_turn' → logprob: -2.45754075050354
    4. ' =' → logprob: -2.70754075050354
    5. 'dist' → logprob: -3.33254075050354
    6. '=' → logprob: -3.95754075050354
    7. 'steps' → logprob: -3.95754075050354
    8. 'import' → logprob: -4.082540512084961
    9. '_steps' → logprob: -4.207540512084961
    10. '_' → logprob: -4.207540512084961

Token 320: ' needed' (ID: 6118)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7458636164665222
    2. ' to' → logprob: -1.745863676071167
    3. 'to' → logprob: -2.245863676071167
    4. ' =' → logprob: -2.370863676071167
    5. '=' → logprob: -2.620863676071167
    6. 'def' → logprob: -3.495863676071167
    7. '_to' → logprob: -4.620863437652588
    8. '
' → logprob: -5.120863437652588
    9. ')' → logprob: -5.120863437652588
    10. ' for' → logprob: -5.370863437652588

Token 321: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07448718696832657
    2. ' =' → logprob: -3.6994872093200684
    3. ' to' → logprob: -4.074487209320068
    4. 'def' → logprob: -4.824487209320068
    5. '=' → logprob: -4.949487209320068
    6. ')' → logprob: -5.449487209320068
    7. ']' → logprob: -6.199487209320068
    8. ' for' → logprob: -6.574487209320068
    9. 'dp' → logprob: -6.824487209320068
    10. 'to' → logprob: -7.324487209320068

Token 322: ' node' (ID: 4596)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.6983610987663269
    2. 'each' → logprob: -1.1983611583709717
    3. 'here' → logprob: -2.5733611583709717
    4. 'current' → logprob: -2.9483611583709717
    5. 'state' → logprob: -3.5733611583709717
    6. 'any' → logprob: -4.823360919952393
    7. ' position' → logprob: -4.948360919952393
    8. '(position' → logprob: -5.073360919952393
    9. ' each' → logprob: -5.198360919952393
    10. ' here' → logprob: -5.573360919952393

Token 323: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9456754326820374
    2. ']' → logprob: -2.4456753730773926
    3. ' to' → logprob: -2.4456753730773926
    4. '<|end|>' → logprob: -2.4456753730773926
    5. 's' → logprob: -2.5706753730773926
    6. '[u' → logprob: -2.9456753730773926
    7. '[' → logprob: -3.1956753730773926
    8. '[state' → logprob: -3.6956753730773926
    9. ')' → logprob: -3.8206753730773926
    10. '   ' → logprob: -3.9456753730773926

Token 324: ' reach' (ID: 7627)
  Prédit: 'goal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goal' → logprob: -1.1154943704605103
    2. 'win' → logprob: -1.3654943704605103
    3. 'reach' → logprob: -1.4904943704605103
    4. 'finish' → logprob: -2.3654942512512207
    5. ' reach' → logprob: -3.1154942512512207
    6. ' win' → logprob: -3.7404942512512207
    7. 'go' → logprob: -3.8654942512512207
    8. ' goal' → logprob: -5.740494251251221
    9. ' ' → logprob: -7.365494251251221
    10. ' finish' → logprob: -7.740494251251221

Token 325: ' goal' (ID: 8583)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2387005090713501
    2. 'the' → logprob: -2.1137003898620605
    3. 'goal' → logprob: -2.6137003898620605
    4. ' n' → logprob: -4.4887003898620605
    5. 'target' → logprob: -5.6137003898620605
    6. ' the' → logprob: -6.4887003898620605
    7. 'destination' → logprob: -7.7387003898620605
    8. 'c' → logprob: -8.238700866699219
    9. 'node' → logprob: -8.363700866699219
    10. ' goal' → logprob: -8.613700866699219

Token 326: ' no' (ID: 860)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1897331327199936
    2. 'dp' → logprob: -2.0647330284118652
    3. ' dp' → logprob: -4.439733028411865
    4. ' =' → logprob: -4.689733028411865
    5. '_dp' → logprob: -4.814733028411865
    6. '
' → logprob: -4.939733028411865
    7. 'def' → logprob: -5.814733028411865
    8. '_' → logprob: -6.689733028411865
    9. '=' → logprob: -7.064733028411865
    10. ':' → logprob: -7.189733028411865

Token 327: ' matter' (ID: 7165)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.11562759429216385
    2. 'w' → logprob: -2.2406275272369385
    3. 'n' → logprob: -6.865627765655518
    4. ' matter' → logprob: -7.615627765655518
    5. 'ne' → logprob: -8.24062728881836
    6. ' t' → logprob: -8.36562728881836
    7. 'matter' → logprob: -8.49062728881836
    8. 'r' → logprob: -9.11562728881836
    9. ' w' → logprob: -9.86562728881836
    10. 'def' → logprob: -9.99062728881836

Token 328: ' what' (ID: 1412)
  Prédit: ' what'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' what' → logprob: -0.34328168630599976
    2. 'what' → logprob: -1.9682817459106445
    3. ' the' → logprob: -2.4682817459106445
    4. 'the' → logprob: -3.5932817459106445
    5. 'where' → logprob: -3.7182817459106445
    6. ' where' → logprob: -4.4682817459106445
    7. ' of' → logprob: -6.8432817459106445
    8. 'position' → logprob: -7.0932817459106445
    9. 'of' → logprob: -7.8432817459106445
    10. ' position' → logprob: -8.593281745910645

Token 329: ' choice' (ID: 7158)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3408224582672119
    2. '   ' → logprob: -1.340822458267212
    3. ' dp' → logprob: -4.590822219848633
    4. ')' → logprob: -4.715822219848633
    5. ']' → logprob: -5.965822219848633
    6. 'def' → logprob: -6.715822219848633
    7. 'dist' → logprob: -7.090822219848633
    8. 'v' → logprob: -7.090822219848633
    9. 'goal' → logprob: -7.590822219848633
    10. 'V' → logprob: -7.840822219848633

Token 330: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3854680061340332
    2. 'dp' → logprob: -1.7604680061340332
    3. '_dp' → logprob: -3.010468006134033
    4. '_' → logprob: -3.885468006134033
    5. ' dp' → logprob: -4.010468006134033
    6. '
' → logprob: -4.510468006134033
    7. 'def' → logprob: -4.635468006134033
    8. ']' → logprob: -4.760468006134033
    9. ':' → logprob: -4.885468006134033
    10. ' =' → logprob: -4.885468006134033

Token 331: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.5576677918434143
    2. 'steps' → logprob: -1.4326677322387695
    3. 'next' → logprob: -2.9326677322387695
    4. ' step' → logprob: -3.5576677322387695
    5. ' steps' → logprob: -3.5576677322387695
    6. ' next' → logprob: -3.9326677322387695
    7. 'number' → logprob: -4.4326677322387695
    8. 'the' → logprob: -4.6826677322387695
    9. ' the' → logprob: -5.1826677322387695
    10. 's' → logprob: -5.1826677322387695

Token 332: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7224330902099609
    2. 'dp' → logprob: -0.9724330902099609
    3. '
' → logprob: -2.722433090209961
    4. ' dp' → logprob: -3.097433090209961
    5. '_dp' → logprob: -5.097433090209961
    6. ' =' → logprob: -5.222433090209961
    7. ']' → logprob: -5.722433090209961
    8. '_' → logprob: -6.347433090209961
    9. 'def' → logprob: -6.597433090209961
    10. ':' → logprob: -7.347433090209961

Token 333: ' {' (ID: 354)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4801945388317108
    2. 'steps' → logprob: -1.7301945686340332
    3. '{' → logprob: -2.355194568634033
    4. 'range' → logprob: -2.855194568634033
    5. ' [' → logprob: -4.355194568634033
    6. ' range' → logprob: -4.355194568634033
    7. ' steps' → logprob: -4.355194568634033
    8. ' {' → logprob: -4.730194568634033
    9. '(' → logprob: -6.355194568634033
    10. 'turn' → logprob: -7.230194568634033

Token 334: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0018654527375474572
    2. ' a' → logprob: -6.376865386962891
    3. '   ' → logprob: -9.00186538696289
    4. ' ' → logprob: -11.25186538696289
    5. 'steps' → logprob: -11.62686538696289
    6. '  ' → logprob: -12.00186538696289
    7. '{' → logprob: -12.37686538696289
    8. '(a' → logprob: -13.12686538696289
    9. ' steps' → logprob: -14.00186538696289
    10. '}' → logprob: -14.12686538696289

Token 335: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.12697754800319672
    2. ',' → logprob: -2.1269774436950684
    3. ' ,' → logprob: -10.001977920532227
    4. 'b' → logprob: -13.876977920532227
    5. ',
' → logprob: -14.876977920532227
    6. ',int' → logprob: -15.001977920532227
    7. ',m' → logprob: -15.126977920532227
    8. '   ' → logprob: -15.251977920532227
    9. ',a' → logprob: -15.501977920532227
    10. '','' → logprob: -15.626977920532227

Token 336: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.014215569011867046
    2. ',' → logprob: -4.264215469360352
    3. ' ,' → logprob: -10.514215469360352
    4. 'c' → logprob: -11.014215469360352
    5. ',b' → logprob: -12.764215469360352
    6. ',a' → logprob: -14.014215469360352
    7. '','' → logprob: -14.014215469360352
    8. '}' → logprob: -14.139215469360352
    9. '',' → logprob: -14.764215469360352
    10. ',
' → logprob: -15.264215469360352

Token 337: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.00011689399980241433
    2. ' }' → logprob: -9.750117301940918
    3. '}
' → logprob: -10.625117301940918
    4. '}.' → logprob: -11.125117301940918
    5. ',' → logprob: -12.250117301940918
    6. '}
' → logprob: -12.375117301940918
    7. '}

' → logprob: -12.875117301940918
    8. '})' → logprob: -13.625117301940918
    9. '},' → logprob: -14.000117301940918
    10. '}`' → logprob: -14.125117301940918

Token 338: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5071130394935608
    2. '   ' → logprob: -1.382112979888916
    3. ' dp' → logprob: -2.757112979888916
    4. '
' → logprob: -2.882112979888916
    5. '_dp' → logprob: -4.132112979888916
    6. ' =' → logprob: -5.007112979888916
    7. ']' → logprob: -6.257112979888916
    8. '	dp' → logprob: -7.382112979888916
    9. ' ' → logprob: -8.382113456726074
    10. '(dp' → logprob: -8.757113456726074

Token 339: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1462489664554596
    2. '   ' → logprob: -2.1462490558624268
    3. ' dp' → logprob: -4.271248817443848
    4. ']' → logprob: -6.146248817443848
    5. ')' → logprob: -6.396248817443848
    6. '
' → logprob: -7.271248817443848
    7. '	dp' → logprob: -9.021248817443848
    8. '_dp' → logprob: -9.271248817443848
    9. 'v' → logprob: -9.396248817443848
    10. 'V' → logprob: -9.646248817443848

Token 340: ' At' (ID: 3604)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.002357690827921033
    2. '   ' → logprob: -6.252357482910156
    3. 'dist' → logprob: -8.877357482910156
    4. ' dp' → logprob: -9.002357482910156
    5. 'V' → logprob: -9.252357482910156
    6. 'v' → logprob: -10.627357482910156
    7. ')' → logprob: -11.252357482910156
    8. '
' → logprob: -11.502357482910156
    9. 'DP' → logprob: -11.627357482910156
    10. 'def' → logprob: -12.627357482910156

Token 341: ' each' (ID: 2454)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.482600450515747
    2. 'goal' → logprob: -2.107600450515747
    3. '#' → logprob: -2.482600450515747
    4. 'for' → logprob: -2.482600450515747
    5. 'each' → logprob: -2.732600450515747
    6. 'n' → logprob: -2.857600450515747
    7. ' =' → logprob: -2.857600450515747
    8. ' each' → logprob: -3.357600450515747
    9. '   ' → logprob: -3.607600450515747
    10. 'INF' → logprob: -3.607600450515747

Token 342: ' turn' (ID: 3716)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.6347208619117737
    2. ' turn' → logprob: -0.8847208619117737
    3. 'step' → logprob: -4.134720802307129
    4. 'node' → logprob: -4.509720802307129
    5. ' step' → logprob: -4.634720802307129
    6. 'position' → logprob: -4.884720802307129
    7. ' node' → logprob: -5.509720802307129
    8. 'iteration' → logprob: -5.884720802307129
    9. ' iteration' → logprob: -6.259720802307129
    10. 'for' → logprob: -6.634720802307129

Token 343: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.26901260018348694
    2. '   ' → logprob: -1.6440125703811646
    3. ':
' → logprob: -4.144012451171875
    4. ':' → logprob: -4.519012451171875
    5. ' for' → logprob: -5.519012451171875
    6. ',
' → logprob: -6.269012451171875
    7. 'u' → logprob: -6.269012451171875
    8. ' ,' → logprob: -6.269012451171875
    9. ' u' → logprob: -6.519012451171875
    10. ' we' → logprob: -6.894012451171875

Token 344: ' brother' (ID: 16820)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5952304005622864
    2. 'for' → logprob: -1.0952303409576416
    3. '   ' → logprob: -3.4702303409576416
    4. 'dp' → logprob: -3.5952303409576416
    5. ' new' → logprob: -3.7202303409576416
    6. 'V' → logprob: -4.720230579376221
    7. ' V' → logprob: -4.970230579376221
    8. ' dp' → logprob: -4.970230579376221
    9. 'new' → logprob: -5.095230579376221
    10. '#' → logprob: -6.720230579376221

Token 345: ' chooses' (ID: 75184)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.9414570331573486
    2. ' chooses' → logprob: -1.0664570331573486
    3. ' can' → logprob: -1.8164570331573486
    4. '   ' → logprob: -3.4414570331573486
    5. 'cho' → logprob: -3.8164570331573486
    6. 'select' → logprob: -4.6914567947387695
    7. ' picks' → logprob: -4.8164567947387695
    8. 'must' → logprob: -5.4414567947387695
    9. 'may' → logprob: -5.6914567947387695
    10. ' selects' → logprob: -5.8164567947387695

Token 346: ' in' (ID: 306)
  Prédit: ' one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.46052175760269165
    2. 'one' → logprob: -1.5855216979980469
    3. 'step' → logprob: -2.960521697998047
    4. ' the' → logprob: -3.960521697998047
    5. ' next' → logprob: -3.960521697998047
    6. ' s' → logprob: -4.460521697998047
    7. 'next' → logprob: -4.460521697998047
    8. 'the' → logprob: -4.460521697998047
    9. 's' → logprob: -4.460521697998047
    10. ' step' → logprob: -4.960521697998047

Token 347: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.010748783126473427
    2. 'steps' → logprob: -4.760748863220215
    3. '[a' → logprob: -6.885748863220215
    4. '[' → logprob: -7.510748863220215
    5. ' {' → logprob: -7.760748863220215
    6. ' steps' → logprob: -9.510748863220215
    7. 'a' → logprob: -11.010748863220215
    8. 'range' → logprob: -11.260748863220215
    9. 'next' → logprob: -11.510748863220215
    10. '(a' → logprob: -12.010748863220215

Token 348: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00021784115233458579
    2. ' a' → logprob: -9.00021743774414
    3. 'steps' → logprob: -9.75021743774414
    4. '{' → logprob: -11.12521743774414
    5. '   ' → logprob: -11.25021743774414
    6. ' ' → logprob: -13.00021743774414
    7. '(a' → logprob: -13.00021743774414
    8. ' steps' → logprob: -13.87521743774414
    9. '[a' → logprob: -14.00021743774414
    10. '  ' → logprob: -14.62521743774414

Token 349: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.00018232580623589456
    2. ',' → logprob: -8.625182151794434
    3. 'b' → logprob: -13.125182151794434
    4. ' ,' → logprob: -14.750182151794434
    5. 'a' → logprob: -15.875182151794434
    6. ',a' → logprob: -16.00018310546875
    7. '```' → logprob: -16.87518310546875
    8. '{' → logprob: -17.50018310546875
    9. '   ' → logprob: -18.50018310546875
    10. '[b' → logprob: -18.62518310546875

Token 350: ',c' (ID: 22261)
  Prédit: ',b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.0006567967939190567
    2. ',' → logprob: -7.500656604766846
    3. ',c' → logprob: -9.250657081604004
    4. ',a' → logprob: -12.500657081604004
    5. ' ,' → logprob: -13.375657081604004
    6. 'b' → logprob: -13.375657081604004
    7. '   ' → logprob: -15.000657081604004
    8. '}' → logprob: -15.500657081604004
    9. ' ' → logprob: -16.000656127929688
    10. '```' → logprob: -16.125656127929688

Token 351: '},' (ID: 4180)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.024765800684690475
    2. '},' → logprob: -3.774765729904175
    3. ' }' → logprob: -7.399765968322754
    4. '}
' → logprob: -8.024765968322754
    5. '}.' → logprob: -8.399765968322754
    6. ',' → logprob: -8.399765968322754
    7. '}:' → logprob: -10.274765968322754
    8. '}s' → logprob: -11.024765968322754
    9. ' },' → logprob: -11.149765968322754
    10. '};' → logprob: -11.524765968322754

Token 352: ' we' (ID: 581)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13641971349716187
    2. 'dp' → logprob: -2.2614197731018066
    3. ' dp' → logprob: -4.636419773101807
    4. ' for' → logprob: -5.261419773101807
    5. 'for' → logprob: -6.261419773101807
    6. '
' → logprob: -6.386419773101807
    7. 'V' → logprob: -6.761419773101807
    8. '#' → logprob: -7.011419773101807
    9. ' and' → logprob: -7.261419773101807
    10. ' V' → logprob: -7.386419773101807

Token 353: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -1.2900978326797485
    2. ' update' → logprob: -2.290097713470459
    3. ' want' → logprob: -2.415097713470459
    4. ' consider' → logprob: -2.915097713470459
    5. ' try' → logprob: -3.040097713470459
    6. ' can' → logprob: -3.040097713470459
    7. 'update' → logprob: -3.290097713470459
    8. 'must' → logprob: -3.290097713470459
    9. ' perform' → logprob: -3.290097713470459
    10. '   ' → logprob: -3.540097713470459

Token 354: ' be' (ID: 413)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.5621030926704407
    2. ' move' → logprob: -1.312103033065796
    3. 'choose' → logprob: -3.062103033065796
    4. 'consider' → logprob: -3.437103033065796
    5. 'find' → logprob: -3.687103033065796
    6. 'be' → logprob: -4.562103271484375
    7. 'min' → logprob: -5.187103271484375
    8. ' be' → logprob: -5.187103271484375
    9. 'ensure' → logprob: -5.562103271484375
    10. ' find' → logprob: -5.687103271484375

Token 355: ' able' (ID: 3741)
  Prédit: 'able'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -0.6204254031181335
    2. ' able' → logprob: -0.9954254031181335
    3. 'ready' → logprob: -2.8704254627227783
    4. ' ready' → logprob: -3.3704254627227783
    5. 'prepared' → logprob: -6.870425224304199
    6. 'sure' → logprob: -8.7454252243042
    7. ' prepared' → logprob: -8.9954252243042
    8. '_ready' → logprob: -9.7454252243042
    9. '
' → logprob: -10.1204252243042
    10. '   ' → logprob: -10.2454252243042

Token 356: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.16023945808410645
    2. ' to' → logprob: -1.9102394580841064
    3. '   ' → logprob: -11.410239219665527
    4. 'def' → logprob: -13.910239219665527
    5. '_to' → logprob: -14.285239219665527
    6. ' ' → logprob: -14.410239219665527
    7. '  ' → logprob: -14.660239219665527
    8. '
' → logprob: -14.660239219665527
    9. '    ' → logprob: -15.160239219665527
    10. 'for' → logprob: -15.785239219665527

Token 357: ' pick' (ID: 5230)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.6307835578918457
    2. ' move' → logprob: -2.1307835578918457
    3. 'win' → logprob: -2.1307835578918457
    4. 'reach' → logprob: -2.2557835578918457
    5. ' guarantee' → logprob: -3.6307835578918457
    6. ' reach' → logprob: -3.7557835578918457
    7. 'gu' → logprob: -3.7557835578918457
    8. 'handle' → logprob: -4.505783557891846
    9. ' respond' → logprob: -5.255783557891846
    10. 'respond' → logprob: -5.380783557891846

Token 358: ' a' (ID: 261)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.528073251247406
    2. ' a' → logprob: -1.9030733108520508
    3. 'next' → logprob: -2.403073310852051
    4. ' one' → logprob: -2.903073310852051
    5. 'a' → logprob: -3.153073310852051
    6. ' the' → logprob: -3.278073310852051
    7. 'the' → logprob: -4.778073310852051
    8. 'from' → logprob: -5.278073310852051
    9. 'one' → logprob: -5.528073310852051
    10. ' for' → logprob: -6.153073310852051

Token 359: ' move' (ID: 5275)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.217348337173462
    2. ' step' → logprob: -1.967348337173462
    3. ' next' → logprob: -2.092348337173462
    4. ' to' → logprob: -2.467348337173462
    5. ' ' → logprob: -2.592348337173462
    6. ' for' → logprob: -2.967348337173462
    7. '
' → logprob: -2.967348337173462
    8. ' valid' → logprob: -3.842348337173462
    9. ' value' → logprob: -3.967348337173462
    10. '       ' → logprob: -3.967348337173462

Token 360: ' accordingly' (ID: 44041)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06459774076938629
    2. '
' → logprob: -3.1895978450775146
    3. 'dp' → logprob: -3.9395978450775146
    4. ' dp' → logprob: -7.1895976066589355
    5. 'def' → logprob: -7.8145976066589355
    6. '    
' → logprob: -8.439598083496094
    7. 'DP' → logprob: -9.439598083496094
    8. 'V' → logprob: -9.689598083496094
    9. 'v' → logprob: -9.689598083496094
    10. ')
' → logprob: -10.314598083496094

Token 361: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19681645929813385
    2. '
' → logprob: -2.4468164443969727
    3. 'dp' → logprob: -2.4468164443969727
    4. ' dp' → logprob: -5.821816444396973
    5. 'def' → logprob: -6.946816444396973
    6. 'v' → logprob: -8.196816444396973
    7. 'V' → logprob: -8.946816444396973
    8. '    
' → logprob: -9.071816444396973
    9. '```' → logprob: -9.071816444396973
    10. ')
' → logprob: -9.196816444396973

Token 362: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03612590208649635
    2. '
' → logprob: -3.536125898361206
    3. 'dp' → logprob: -5.161126136779785
    4. ' dp' → logprob: -8.286126136779785
    5. 'def' → logprob: -8.661126136779785
    6. '    
' → logprob: -9.036126136779785
    7. '_dp' → logprob: -11.411126136779785
    8. 'v' → logprob: -11.661126136779785
    9. 'DP' → logprob: -11.911126136779785
    10. '	dp' → logprob: -12.036126136779785

Token 363: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6505126953125
    2. '   ' → logprob: -0.7755126953125
    3. ' dp' → logprob: -4.5255126953125
    4. '
' → logprob: -5.4005126953125
    5. 'V' → logprob: -7.4005126953125
    6. 'def' → logprob: -7.6505126953125
    7. 'DP' → logprob: -7.9005126953125
    8. 'v' → logprob: -7.9005126953125
    9. ' V' → logprob: -9.2755126953125
    10. '    
' → logprob: -9.6505126953125

Token 364: ' So' (ID: 2632)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.002449138555675745
    2. '   ' → logprob: -7.002449035644531
    3. 'V' → logprob: -7.252449035644531
    4. 'dist' → logprob: -7.877449035644531
    5. 'def' → logprob: -8.502449035644531
    6. ' dp' → logprob: -8.627449035644531
    7. '
' → logprob: -10.627449035644531
    8. 'DP' → logprob: -11.252449035644531
    9. 'v' → logprob: -11.877449035644531
    10. 'import' → logprob: -12.252449035644531

Token 365: ':' (ID: 25)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.09447837620973587
    2. 'for' → logprob: -3.7194783687591553
    3. 'V' → logprob: -3.8444783687591553
    4. ' dp' → logprob: -4.094478607177734
    5. ' for' → logprob: -5.219478607177734
    6. 'dist' → logprob: -5.344478607177734
    7. '   ' → logprob: -5.344478607177734
    8. 'from' → logprob: -5.969478607177734
    9. '#' → logprob: -5.969478607177734
    10. 'def' → logprob: -6.219478607177734

Token 366: ' V' (ID: 631)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0360758937895298
    2. ' dp' → logprob: -4.661076068878174
    3. '   ' → logprob: -4.911076068878174
    4. 'from' → logprob: -5.161076068878174
    5. 'V' → logprob: -5.286076068878174
    6. 'import' → logprob: -5.786076068878174
    7. 'dist' → logprob: -6.411076068878174
    8. ' from' → logprob: -7.036076068878174
    9. '
' → logprob: -7.286076068878174
    10. ' V' → logprob: -7.536076068878174

Token 367: '[u' (ID: 48750)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26264718174934387
    2. '=' → logprob: -1.5126471519470215
    3. '=[' → logprob: -5.0126471519470215
    4. '[u' → logprob: -5.6376471519470215
    5. '_next' → logprob: -9.63764762878418
    6. '[next' → logprob: -9.88764762878418
    7. ' =[' → logprob: -10.13764762878418
    8. ' ' → logprob: -10.13764762878418
    9. '   ' → logprob: -10.26264762878418
    10. '[' → logprob: -10.26264762878418

Token 368: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015846160240471363
    2. ']=' → logprob: -6.501584529876709
    3. ' ]' → logprob: -9.751585006713867
    4. ']>=' → logprob: -12.251585006713867
    5. ']={' → logprob: -12.626585006713867
    6. '=' → logprob: -12.626585006713867
    7. ']==' → logprob: -12.751585006713867
    8. '])' → logprob: -13.376585006713867
    9. '   ' → logprob: -13.626585006713867
    10. ']:' → logprob: -13.876585006713867

Token 369: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03396597132086754
    2. ' =' → logprob: -3.408966064453125
    3. '=[' → logprob: -8.158966064453125
    4. '={}' → logprob: -11.158966064453125
    5. '={' → logprob: -12.033966064453125
    6. '=float' → logprob: -12.658966064453125
    7. '=-' → logprob: -13.158966064453125
    8. '=[]' → logprob: -13.283966064453125
    9. ' =[' → logprob: -13.283966064453125
    10. '=set' → logprob: -14.158966064453125

Token 370: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02209477126598358
    2. 'min' → logprob: -3.8970947265625
    3. ' ' → logprob: -7.2720947265625
    4. 'INF' → logprob: -7.6470947265625
    5. ' min' → logprob: -8.1470947265625
    6. '   ' → logprob: -10.0220947265625
    7. '1' → logprob: -11.0220947265625
    8. '-' → logprob: -12.2720947265625
    9. 'MIN' → logprob: -12.3970947265625
    10. '
' → logprob: -12.5220947265625

Token 371: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002292279154062271
    2. 'min' → logprob: -6.127292156219482
    3. 'INF' → logprob: -9.75229263305664
    4. ' ' → logprob: -10.37729263305664
    5. '-' → logprob: -11.87729263305664
    6. '1' → logprob: -12.50229263305664
    7. ' min' → logprob: -12.87729263305664
    8. '   ' → logprob: -13.50229263305664
    9. '
' → logprob: -14.00229263305664
    10. 'max' → logprob: -14.25229263305664

Token 372: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.014312172308564186
    2. 'if' → logprob: -4.264312267303467
    3. '
' → logprob: -9.139311790466309
    4. ' ' → logprob: -11.014311790466309
    5. ' for' → logprob: -11.264311790466309
    6. 'for' → logprob: -12.889311790466309
    7. '<|end|>' → logprob: -13.014311790466309
    8. '   ' → logprob: -13.639311790466309
    9. ' only' → logprob: -14.139311790466309
    10. '  ' → logprob: -14.389311790466309

Token 373: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.029751762747764587
    2. ' u' → logprob: -3.529751777648926
    3. '   ' → logprob: -14.404751777648926
    4. ' ' → logprob: -15.279751777648926
    5. '(u' → logprob: -16.02975082397461
    6. ' ' → logprob: -16.27975082397461
    7. '	u' → logprob: -16.52975082397461
    8. '    ' → logprob: -16.65475082397461
    9. '  ' → logprob: -17.40475082397461
    10. '[u' → logprob: -17.65475082397461

Token 374: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.016061818227171898
    2. ' ==' → logprob: -4.141061782836914
    3. ']==' → logprob: -11.016061782836914
    4. '[u' → logprob: -12.641061782836914
    5. 'u' → logprob: -12.766061782836914
    6. '==(' → logprob: -13.141061782836914
    7. ')==' → logprob: -14.266061782836914
    8. 'in' → logprob: -14.266061782836914
    9. '==
' → logprob: -14.516061782836914
    10. '===' → logprob: -14.766061782836914

Token 375: ' goal' (ID: 8583)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.11608633399009705
    2. ' c' → logprob: -2.74108624458313
    3. 'b' → logprob: -3.36608624458313
    4. 'n' → logprob: -4.991086483001709
    5. ' n' → logprob: -6.116086483001709
    6. ' b' → logprob: -6.491086483001709
    7. 'a' → logprob: -10.61608600616455
    8. '   ' → logprob: -11.74108600616455
    9. ' ' → logprob: -12.36608600616455
    10. ' a' → logprob: -12.86608600616455

Token 376: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07321614027023315
    2. '   ' → logprob: -2.823216199874878
    3. '\n' → logprob: -6.073215961456299
    4. '    
' → logprob: -6.198215961456299
    5. '
' → logprob: -6.323215961456299
    6. ' 
' → logprob: -7.073215961456299
    7. ',' → logprob: -7.073215961456299
    8. '  
' → logprob: -7.198215961456299
    9. ' else' → logprob: -7.448215961456299
    10. ' ' → logprob: -8.073216438293457

Token 377: 'n' (ID: 77)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.27491867542266846
    2. 'b' → logprob: -1.8999186754226685
    3. ')' → logprob: -3.524918556213379
    4. 'n' → logprob: -3.774918556213379
    5. ' c' → logprob: -4.774918556213379
    6. ')
' → logprob: -4.774918556213379
    7. '   ' → logprob: -5.399918556213379
    8. 'u' → logprob: -5.899918556213379
    9. ' else' → logprob: -5.899918556213379
    10. '),' → logprob: -6.149918556213379

Token 378: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.005246210377663374
    2. ' -' → logprob: -5.255246162414551
    3. ')' → logprob: -11.63024616241455
    4. '()-' → logprob: -13.63024616241455
    5. ')-' → logprob: -14.00524616241455
    6. '−' → logprob: -14.63024616241455
    7. ' ' → logprob: -14.75524616241455
    8. '
' → logprob: -15.38024616241455
    9. '   ' → logprob: -15.38024616241455
    10. '–' → logprob: -16.130247116088867

Token 379: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.00000286102295
    3. ')' → logprob: -15.62500286102295
    4. '
' → logprob: -16.375001907348633
    5. '```' → logprob: -17.375001907348633
    6. '-' → logprob: -17.750001907348633
    7. '   ' → logprob: -17.750001907348633
    8. '2' → logprob: -19.000001907348633
    9. '۱' → logprob: -20.000001907348633
    10. '

' → logprob: -20.250001907348633

Token 380: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6160677075386047
    2. '   ' → logprob: -1.36606764793396
    3. ')
' → logprob: -1.86606764793396
    4. ' else' → logprob: -3.24106764793396
    5. 'else' → logprob: -5.116067886352539
    6. '
' → logprob: -5.741067886352539
    7. '),' → logprob: -6.741067886352539
    8. ',' → logprob: -8.491067886352539
    9. '  ' → logprob: -9.616067886352539
    10. ')
' → logprob: -9.866067886352539

Token 381: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4574018716812134
    2. '
' → logprob: -1.0824018716812134
    3. ' else' → logprob: -3.957401752471924
    4. 'else' → logprob: -5.082401752471924
    5. '    
' → logprob: -6.957401752471924
    6. ',' → logprob: -7.707401752471924
    7. ' for' → logprob: -8.082402229309082
    8. '\n' → logprob: -8.332402229309082
    9. '```' → logprob: -8.582402229309082
    10. '  
' → logprob: -8.957402229309082

Token 382: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12099137902259827
    2. '
' → logprob: -2.2459914684295654
    3. ' else' → logprob: -5.370991230010986
    4. 'else' → logprob: -6.245991230010986
    5. 'V' → logprob: -7.995991230010986
    6. ' V' → logprob: -7.995991230010986
    7. '    
' → logprob: -8.870991706848145
    8. ' for' → logprob: -8.870991706848145
    9. 'dp' → logprob: -9.120991706848145
    10. ',' → logprob: -9.245991706848145

Token 383: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5411174893379211
    2. 'dp' → logprob: -2.0411174297332764
    3. 'V' → logprob: -2.1661174297332764
    4. ' for' → logprob: -2.5411174297332764
    5. 'for' → logprob: -2.6661174297332764
    6. 'else' → logprob: -4.7911176681518555
    7. ' V' → logprob: -4.7911176681518555
    8. ' dp' → logprob: -5.9161176681518555
    9. 'def' → logprob: -6.4161176681518555
    10. '
' → logprob: -6.5411176681518555

Token 384: ' V' (ID: 631)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8919457197189331
    2. 'V' → logprob: -1.141945719718933
    3. ' V' → logprob: -1.391945719718933
    4. ' for' → logprob: -5.141945838928223
    5. '
' → logprob: -5.391945838928223
    6. 'INF' → logprob: -5.766945838928223
    7. 'import' → logprob: -6.016945838928223
    8. 'for' → logprob: -6.016945838928223
    9. '    ' → logprob: -7.391945838928223
    10. 'from' → logprob: -7.891945838928223

Token 385: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.00019054718723054975
    2. ' =' → logprob: -8.750190734863281
    3. '=' → logprob: -10.875190734863281
    4. '=[' → logprob: -11.750190734863281
    5. '   ' → logprob: -13.750190734863281
    6. 'u' → logprob: -13.750190734863281
    7. '=u' → logprob: -14.375190734863281
    8. '```' → logprob: -14.375190734863281
    9. ' [' → logprob: -14.500190734863281
    10. ' =[' → logprob: -14.625190734863281

Token 386: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02811678685247898
    2. '=' → logprob: -4.278116703033447
    3. ']=' → logprob: -4.403116703033447
    4. ' =' → logprob: -6.528116703033447
    5. '   ' → logprob: -9.528117179870605
    6. ' ]' → logprob: -9.903117179870605
    7. '[u' → logprob: -11.903117179870605
    8. '```' → logprob: -12.403117179870605
    9. ']+=' → logprob: -12.403117179870605
    10. '[' → logprob: -12.653117179870605

Token 387: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06203893572092056
    2. ' =' → logprob: -2.8120388984680176
    3. '   ' → logprob: -10.062039375305176
    4. '=float' → logprob: -10.687039375305176
    5. '=
' → logprob: -13.937039375305176
    6. '=int' → logprob: -14.062039375305176
    7. '```' → logprob: -14.187039375305176
    8. '=[' → logprob: -14.687039375305176
    9. ' ' → logprob: -14.812039375305176
    10. '=None' → logprob: -15.062039375305176

Token 388: ' ' (ID: 220)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.09791617095470428
    2. '1' → logprob: -2.4729161262512207
    3. ' min' → logprob: -5.222916126251221
    4. '0' → logprob: -5.847916126251221
    5. 'INF' → logprob: -7.722916126251221
    6. ' ' → logprob: -9.222916603088379
    7. '   ' → logprob: -10.097916603088379
    8. 'max' → logprob: -10.222916603088379
    9. 'inf' → logprob: -11.097916603088379
    10. '
' → logprob: -11.222916603088379

Token 389: '1' (ID: 16)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.015841379761695862
    2. '1' → logprob: -4.265841484069824
    3. ' min' → logprob: -7.140841484069824
    4. '0' → logprob: -7.515841484069824
    5. 'INF' → logprob: -8.140841484069824
    6. 'max' → logprob: -10.765841484069824
    7. '   ' → logprob: -11.640841484069824
    8. ' ' → logprob: -12.015841484069824
    9. 'inf' → logprob: -12.390841484069824
    10. '
' → logprob: -12.640841484069824

Token 390: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2854887843132019
    2. '+' → logprob: -1.6604888439178467
    3. 'e' → logprob: -3.5354888439178467
    4. ' if' → logprob: -4.160488605499268
    5. '
' → logprob: -4.660488605499268
    6. '<|end|>' → logprob: -7.035488605499268
    7. '```' → logprob: -7.285488605499268
    8. '*' → logprob: -8.160489082336426
    9. 'if' → logprob: -8.285489082336426
    10. '  ' → logprob: -8.410489082336426

Token 391: ' max' (ID: 2999)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.014712335541844368
    2. 'max' → logprob: -4.264712333679199
    3. ' min' → logprob: -7.514712333679199
    4. ' max' → logprob: -12.5147123336792
    5. '   ' → logprob: -16.889713287353516
    6. 'minimum' → logprob: -17.264713287353516
    7. '(min' → logprob: -18.264713287353516
    8. '	min' → logprob: -19.014713287353516
    9. '  ' → logprob: -19.389713287353516
    10. ' ' → logprob: -20.139713287353516

Token 392: ' over' (ID: 1072)
  Prédit: '(V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.26181572675704956
    2. '(' → logprob: -1.5118157863616943
    3. '(next' → logprob: -5.261815547943115
    4. '(
' → logprob: -5.761815547943115
    5. '([' → logprob: -6.636815547943115
    6. '((' → logprob: -9.386816024780273
    7. 'V' → logprob: -10.511816024780273
    8. 'next' → logprob: -11.011816024780273
    9. '(

' → logprob: -11.011816024780273
    10. '{' → logprob: -11.136816024780273

Token 393: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.45899906754493713
    2. 'steps' → logprob: -1.4589990377426147
    3. 'next' → logprob: -3.0839991569519043
    4. 'step' → logprob: -3.5839991569519043
    5. '{s' → logprob: -4.333999156951904
    6. ' s' → logprob: -4.458999156951904
    7. '{' → logprob: -4.958999156951904
    8. ' next' → logprob: -5.458999156951904
    9. '(s' → logprob: -5.458999156951904
    10. '[' → logprob: -5.708999156951904

Token 394: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.7207549810409546
    2. 'of' → logprob: -1.4707549810409546
    3. ' in' → logprob: -1.9707549810409546
    4. ' of' → logprob: -2.095755100250244
    5. 'for' → logprob: -5.970755100250244
    6. 's' → logprob: -6.095755100250244
    7. '   ' → logprob: -6.095755100250244
    8. '[' → logprob: -6.345755100250244
    9. '(next' → logprob: -6.470755100250244
    10. '[next' → logprob: -6.595755100250244

Token 395: ' steps' (ID: 10331)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.02923162467777729
    2. '{' → logprob: -4.029231548309326
    3. '[' → logprob: -4.654231548309326
    4. ' steps' → logprob: -7.029231548309326
    5. 'next' → logprob: -7.529231548309326
    6. '(' → logprob: -10.279232025146484
    7. '[next' → logprob: -11.279232025146484
    8. ' {' → logprob: -11.654232025146484
    9. '```' → logprob: -12.279232025146484
    10. 'step' → logprob: -12.779232025146484

Token 396: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.5960366129875183
    2. ' for' → logprob: -1.721036672592163
    3. ':' → logprob: -2.096036672592163
    4. '   ' → logprob: -2.721036672592163
    5. ':
' → logprob: -4.096036434173584
    6. ' if' → logprob: -4.596036434173584
    7. 'of' → logprob: -4.846036434173584
    8. ' ' → logprob: -5.096036434173584
    9. ' (' → logprob: -5.096036434173584
    10. '[u' → logprob: -5.096036434173584

Token 397: ' min' (ID: 1349)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6640748977661133
    2. '(min' → logprob: -1.5390748977661133
    3. ' (' → logprob: -2.2890748977661133
    4. 'min' → logprob: -2.2890748977661133
    5. '(max' → logprob: -3.9140748977661133
    6. '(
' → logprob: -4.164074897766113
    7. ' min' → logprob: -4.289074897766113
    8. '(len' → logprob: -5.414074897766113
    9. 'max' → logprob: -5.414074897766113
    10. '(V' → logprob: -6.039074897766113

Token 398: ' over' (ID: 1072)
  Prédit: '(next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.2652948498725891
    2. '(' → logprob: -2.1402947902679443
    3. 'next' → logprob: -2.8902947902679443
    4. '[next' → logprob: -3.2652947902679443
    5. '{' → logprob: -4.890295028686523
    6. '_{' → logprob: -5.140295028686523
    7. 'over' → logprob: -6.140295028686523
    8. ' next' → logprob: -6.265295028686523
    9. '(
' → logprob: -6.515295028686523
    10. '[' → logprob: -7.640295028686523

Token 399: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0978851392865181
    2. 'next' → logprob: -2.7228851318359375
    3. ' v' → logprob: -4.2228851318359375
    4. ' next' → logprob: -4.8478851318359375
    5. '(next' → logprob: -5.5978851318359375
    6. 'w' → logprob: -7.4728851318359375
    7. '[next' → logprob: -7.9728851318359375
    8. '(v' → logprob: -8.722885131835938
    9. '{' → logprob: -8.722885131835938
    10. '(' → logprob: -10.847885131835938

Token 400: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.18732647597789764
    2. ' in' → logprob: -1.812326431274414
    3. ' next' → logprob: -5.937326431274414
    4. 'next' → logprob: -6.062326431274414
    5. '[next' → logprob: -6.687326431274414
    6. '(next' → logprob: -6.937326431274414
    7. '_in' → logprob: -8.937326431274414
    8. ' of' → logprob: -9.562326431274414
    9. ' ' → logprob: -10.812326431274414
    10. '
' → logprob: -10.812326431274414

Token 401: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.20144714415073395
    2. ' next' → logprob: -1.7014471292495728
    3. '(next' → logprob: -10.701447486877441
    4. '[next' → logprob: -11.451447486877441
    5. '```' → logprob: -15.451447486877441
    6. '	next' → logprob: -15.451447486877441
    7. 'reachable' → logprob: -16.076446533203125
    8. '.next' → logprob: -16.576446533203125
    9. '_next' → logprob: -16.701446533203125
    10. '`' → logprob: -17.076446533203125

Token 402: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -1.3856492842023727e-06
    2. 'pos' → logprob: -14.375000953674316
    3. '[u' → logprob: -14.750000953674316
    4. '[pos' → logprob: -16.375001907348633
    5. 'Pos' → logprob: -17.250001907348633
    6. '```' → logprob: -17.375001907348633
    7. '_p' → logprob: -17.625001907348633
    8. '[s' → logprob: -17.750001907348633
    9. '   ' → logprob: -18.000001907348633
    10. '[' → logprob: -18.250001907348633

Token 403: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.0015333088813349605
    2. '[s' → logprob: -6.751533508300781
    3. 's' → logprob: -9.501533508300781
    4. 'u' → logprob: -9.751533508300781
    5. '```' → logprob: -9.751533508300781
    6. '   ' → logprob: -10.376533508300781
    7. ' [' → logprob: -10.376533508300781
    8. '\[' → logprob: -10.876533508300781
    9. '[' → logprob: -11.126533508300781
    10. '[[' → logprob: -11.501533508300781

Token 404: '][' (ID: 2696)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.07787200063467026
    2. '[u' → logprob: -2.7028720378875732
    3. '][' → logprob: -4.952871799468994
    4. 's' → logprob: -7.327871799468994
    5. '[' → logprob: -9.327872276306152
    6. '}[' → logprob: -11.077872276306152
    7. 'u' → logprob: -11.077872276306152
    8. '   ' → logprob: -11.327872276306152
    9. ']' → logprob: -11.702872276306152
    10. '```' → logprob: -11.827872276306152

Token 405: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.620622712536715e-05
    2. '[s' → logprob: -10.250045776367188
    3. ' s' → logprob: -12.000045776367188
    4. '```' → logprob: -13.125045776367188
    5. '
' → logprob: -13.625045776367188
    6. '`s' → logprob: -14.375045776367188
    7. '   ' → logprob: -15.500045776367188
    8. '[' → logprob: -15.500045776367188
    9. '][' → logprob: -16.125045776367188
    10. ']' → logprob: -16.125045776367188

Token 406: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3982839584350586
    2. ']:' → logprob: -1.1482839584350586
    3. ']}' → logprob: -5.773283958435059
    4. ']:
' → logprob: -5.773283958435059
    5. ']{' → logprob: -6.148283958435059
    6. '}' → logprob: -6.773283958435059
    7. '}:' → logprob: -8.023283958435059
    8. ' ]' → logprob: -8.648283958435059
    9. '],' → logprob: -8.898283958435059
    10. '{' → logprob: -9.023283958435059

Token 407: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1999770849943161
    2. '[u' → logprob: -2.824977159500122
    3. '
' → logprob: -2.949977159500122
    4. '           ' → logprob: -4.199976921081543
    5. ':' → logprob: -4.449976921081543
    6. '       ' → logprob: -4.824976921081543
    7. ' =' → logprob: -4.824976921081543
    8. ':
' → logprob: -4.949976921081543
    9. ' if' → logprob: -5.324976921081543
    10. ' ' → logprob: -5.949976921081543

Token 408: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.020624343305826187
    2. ' V' → logprob: -3.8956243991851807
    3. '(V' → logprob: -10.020624160766602
    4. '   ' → logprob: -10.520624160766602
    5. ' ' → logprob: -12.020624160766602
    6. ' ' → logprob: -13.770624160766602
    7. '(' → logprob: -14.020624160766602
    8. 'v' → logprob: -14.395624160766602
    9. ' (' → logprob: -14.395624160766602
    10. '	V' → logprob: -14.395624160766602

Token 409: '[v' (ID: 36561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3061995506286621
    2. '   ' → logprob: -1.556199550628662
    3. ' =' → logprob: -3.306199550628662
    4. 'def' → logprob: -5.556199550628662
    5. '[u' → logprob: -5.681199550628662
    6. '\n' → logprob: -6.431199550628662
    7. ']' → logprob: -6.681199550628662
    8. ']
' → logprob: -6.931199550628662
    9. '\' → logprob: -7.681199550628662
    10. ' ' → logprob: -7.681199550628662

Token 410: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.023158714175224304
    2. '}' → logprob: -3.8981587886810303
    3. '   ' → logprob: -6.398158550262451
    4. '}]' → logprob: -7.273158550262451
    5. ']}' → logprob: -8.77315902709961
    6. ']
' → logprob: -10.64815902709961
    7. '])' → logprob: -11.02315902709961
    8. '       ' → logprob: -11.27315902709961
    9. ')]' → logprob: -11.52315902709961
    10. '']' → logprob: -12.02315902709961

Token 411: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.023935923352837563
    2. '   ' → logprob: -4.023935794830322
    3. '\n' → logprob: -6.398935794830322
    4. '[u' → logprob: -7.023935794830322
    5. '
' → logprob: -7.398935794830322
    6. ']' → logprob: -8.39893627166748
    7. '[
' → logprob: -8.52393627166748
    8. 'def' → logprob: -8.64893627166748
    9. ' =' → logprob: -8.77393627166748
    10. '```' → logprob: -8.77393627166748

Token 412: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09611071646213531
    2. '
' → logprob: -2.4711108207702637
    3. '\n' → logprob: -6.346110820770264
    4. 'def' → logprob: -6.846110820770264
    5. ')' → logprob: -7.346110820770264
    6. '    
' → logprob: -7.471110820770264
    7. ']' → logprob: -7.721110820770264
    8. '\' → logprob: -7.846110820770264
    9. ' ' → logprob: -7.971110820770264
    10. '```' → logprob: -8.471110343933105

Token 413: ' If' (ID: 1843)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6420358419418335
    2. 'V' → logprob: -0.8920358419418335
    3. '
' → logprob: -3.017035961151123
    4. 'def' → logprob: -5.017035961151123
    5. ' V' → logprob: -5.017035961151123
    6. 'v' → logprob: -7.267035961151123
    7. 'import' → logprob: -7.642035961151123
    8. '    
' → logprob: -8.892035484313965
    9. 'dp' → logprob: -9.142035484313965
    10. 'from' → logprob: -9.767035484313965

Token 414: ' for' (ID: 395)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.104034923017025
    2. 'not' → logprob: -3.104034900665283
    3. 'len' → logprob: -3.479034900665283
    4. ' len' → logprob: -4.479034900665283
    5. ' next' → logprob: -4.729034900665283
    6. 'next' → logprob: -6.354034900665283
    7. ' all' → logprob: -6.979034900665283
    8. 'all' → logprob: -8.854035377502441
    9. ' u' → logprob: -10.104035377502441
    10. 'u' → logprob: -10.604035377502441

Token 415: ' some' (ID: 1236)
  Prédit: 'some'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'some' → logprob: -1.2635897397994995
    2. ' all' → logprob: -1.6385897397994995
    3. ' any' → logprob: -2.013589859008789
    4. 'all' → logprob: -2.263589859008789
    5. ' some' → logprob: -2.638589859008789
    6. ' next' → logprob: -2.638589859008789
    7. ' not' → logprob: -3.013589859008789
    8. 'any' → logprob: -3.763589859008789
    9. 'next' → logprob: -3.888589859008789
    10. 'len' → logprob: -4.138589859008789

Token 416: ' s' (ID: 265)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.1737176477909088
    2. ' u' → logprob: -2.173717737197876
    3. ' node' → logprob: -3.673717737197876
    4. 's' → logprob: -5.048717498779297
    5. 'node' → logprob: -5.423717498779297
    6. 'v' → logprob: -6.423717498779297
    7. ' s' → logprob: -6.548717498779297
    8. 'all' → logprob: -7.048717498779297
    9. ' next' → logprob: -7.173717498779297
    10. ' step' → logprob: -7.798717498779297

Token 417: ',' (ID: 11)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.3509966135025024
    2. ' next' → logprob: -1.4759966135025024
    3. ',' → logprob: -1.6009966135025024
    4. ' in' → logprob: -1.8509966135025024
    5. ' not' → logprob: -2.975996494293213
    6. ' there' → logprob: -3.600996494293213
    7. ' all' → logprob: -3.975996494293213
    8. 'next' → logprob: -4.100996494293213
    9. 'in' → logprob: -5.100996494293213
    10. '[next' → logprob: -5.100996494293213

Token 418: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.40603020787239075
    2. ' next' → logprob: -1.9060301780700684
    3. 'not' → logprob: -2.4060301780700684
    4. 'len' → logprob: -2.9060301780700684
    5. ' not' → logprob: -3.2810301780700684
    6. ' len' → logprob: -6.031030178070068
    7. 'no' → logprob: -9.156030654907227
    8. ' no' → logprob: -9.906030654907227
    9. 'all' → logprob: -12.281030654907227
    10. ' all' → logprob: -12.656030654907227

Token 419: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0009972022380679846
    2. '   ' → logprob: -7.625997066497803
    3. '[u' → logprob: -8.500997543334961
    4. '_positions' → logprob: -9.125997543334961
    5. 'pos' → logprob: -9.625997543334961
    6. '_nodes' → logprob: -10.500997543334961
    7. 'nodes' → logprob: -11.250997543334961
    8. ' positions' → logprob: -11.500997543334961
    9. '[pos' → logprob: -11.625997543334961
    10. 'positions' → logprob: -12.000997543334961

Token 420: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -9.968312951968983e-06
    2. '   ' → logprob: -12.500009536743164
    3. '[s' → logprob: -13.625009536743164
    4. '[' → logprob: -13.750009536743164
    5. 'u' → logprob: -13.750009536743164
    6. '```' → logprob: -13.750009536743164
    7. '<u' → logprob: -15.250009536743164
    8. 's' → logprob: -15.375009536743164
    9. '][' → logprob: -15.750009536743164
    10. '       ' → logprob: -16.125009536743164

Token 421: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5313623547554016
    2. '[u' → logprob: -0.9063623547554016
    3. ']' → logprob: -5.031362533569336
    4. '[' → logprob: -7.406362533569336
    5. ']==' → logprob: -8.031362533569336
    6. '[s' → logprob: -8.906362533569336
    7. '}[' → logprob: -8.906362533569336
    8. 'u' → logprob: -9.281362533569336
    9. 's' → logprob: -9.531362533569336
    10. '   ' → logprob: -9.906362533569336

Token 422: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04580828174948692
    2. '][' → logprob: -3.7958083152770996
    3. '[s' → logprob: -3.9208083152770996
    4. ']' → logprob: -6.4208083152771
    5. '[u' → logprob: -8.545807838439941
    6. '[' → logprob: -8.795807838439941
    7. '
' → logprob: -9.045807838439941
    8. '].' → logprob: -9.545807838439941
    9. '   ' → logprob: -10.295807838439941
    10. '

' → logprob: -10.545807838439941

Token 423: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3150577247142792
    2. ']==' → logprob: -1.3150577545166016
    3. ']:' → logprob: -7.940057754516602
    4. '==' → logprob: -7.940057754516602
    5. '[u' → logprob: -8.190057754516602
    6. 's' → logprob: -8.565057754516602
    7. ']:
' → logprob: -8.690057754516602
    8. ']=' → logprob: -9.190057754516602
    9. '[' → logprob: -9.565057754516602
    10. '[s' → logprob: -9.690057754516602

Token 424: ' is' (ID: 382)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3793852925300598
    2. ']==' → logprob: -1.504385232925415
    3. ' is' → logprob: -3.379385232925415
    4. ' ==' → logprob: -3.629385232925415
    5. ']' → logprob: -4.629385471343994
    6. '```' → logprob: -5.129385471343994
    7. ':' → logprob: -5.254385471343994
    8. ')==' → logprob: -6.004385471343994
    9. 'is' → logprob: -6.129385471343994
    10. '[' → logprob: -6.629385471343994

Token 425: ' empty' (ID: 8213)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'empty' → logprob: -0.0010612714104354382
    2. ' empty' → logprob: -6.87606143951416
    3. '   ' → logprob: -10.87606143951416
    4. 'set' → logprob: -12.00106143951416
    5. '_empty' → logprob: -13.75106143951416
    6. '[]' → logprob: -14.62606143951416
    7. ' ' → logprob: -15.00106143951416
    8. '0' → logprob: -15.00106143951416
    9. '```' → logprob: -15.25106143951416
    10. ' set' → logprob: -15.75106143951416

Token 426: ' ->' (ID: 2747)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30390164256095886
    2. ':' → logprob: -1.8039016723632812
    3. ' or' → logprob: -2.4289016723632812
    4. ':
' → logprob: -5.303901672363281
    5. '   ' → logprob: -5.928901672363281
    6. ' then' → logprob: -7.303901672363281
    7. ' for' → logprob: -7.803901672363281
    8. '       ' → logprob: -8.678901672363281
    9. ',
' → logprob: -9.553901672363281
    10. '           ' → logprob: -9.928901672363281

Token 427: ' we' (ID: 581)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.02907693199813366
    2. ' INF' → logprob: -4.404077053070068
    3. '   ' → logprob: -4.779077053070068
    4. 'V' → logprob: -5.529077053070068
    5. 'continue' → logprob: -6.154077053070068
    6. ' continue' → logprob: -7.529077053070068
    7. 'return' → logprob: -7.779077053070068
    8. 'pass' → logprob: -8.40407657623291
    9. 'inf' → logprob: -8.65407657623291
    10. ' return' → logprob: -9.52907657623291

Token 428: ' lose' (ID: 12577)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.995435357093811
    2. 'continue' → logprob: -1.370435357093811
    3. 'return' → logprob: -2.4954352378845215
    4. ' return' → logprob: -2.6204352378845215
    5. ' cannot' → logprob: -2.8704352378845215
    6. 'cannot' → logprob: -3.2454352378845215
    7. ' set' → logprob: -3.7454352378845215
    8. ' consider' → logprob: -3.7454352378845215
    9. 'consider' → logprob: -3.8704352378845215
    10. 'skip' → logprob: -4.7454352378845215

Token 429: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0908341333270073
    2. '
' → logprob: -2.465834140777588
    3. 'def' → logprob: -6.715834140777588
    4. '    
' → logprob: -7.715834140777588
    5. 'import' → logprob: -9.71583366394043
    6. ')' → logprob: -11.09083366394043
    7. 'v' → logprob: -11.09083366394043
    8. 'V' → logprob: -11.21583366394043
    9. 'from' → logprob: -11.21583366394043
    10. ')
' → logprob: -11.21583366394043

Token 430: 'IMP' (ID: 67171)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02291954681277275
    2. '   ' → logprob: -4.397919654846191
    3. '),' → logprob: -5.647919654846191
    4. ',' → logprob: -5.772919654846191
    5. '           ' → logprob: -6.897919654846191
    6. '       ' → logprob: -7.397919654846191
    7. ' for' → logprob: -8.022919654846191
    8. ')
' → logprob: -8.147919654846191
    9. ').' → logprob: -8.772919654846191
    10. 'import' → logprob: -9.147919654846191

Token 431: 'OSS' (ID: 26496)
  Prédit: 'OSS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OSS' → logprob: -0.019120173528790474
    2. 'OS' → logprob: -4.269120216369629
    3. 'O' → logprob: -6.644120216369629
    4. '```' → logprob: -6.894120216369629
    5. ')' → logprob: -7.394120216369629
    6. '}' → logprob: -8.019120216369629
    7. 'oss' → logprob: -8.144120216369629
    8. '
' → logprob: -8.269120216369629
    9. '``' → logprob: -8.644120216369629
    10. 'LOSE' → logprob: -9.644120216369629

Token 432: 'IBLE' (ID: 22408)
  Prédit: 'IBLE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IBLE' → logprob: -8.061054359131958e-06
    2. 'ible' → logprob: -12.625007629394531
    3. 'ABLE' → logprob: -14.250007629394531
    4. 'ILE' → logprob: -14.375007629394531
    5. '

' → logprob: -14.875007629394531
    6. '```' → logprob: -14.875007629394531
    7. 'IPLE' → logprob: -15.000007629394531
    8. ')' → logprob: -15.000007629394531
    9. 'E' → logprob: -15.250007629394531
    10. 'IBE' → logprob: -15.375007629394531

Token 433: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002842437708750367
    2. '   ' → logprob: -6.252842426300049
    3. ')
' → logprob: -7.252842426300049
    4. '}' → logprob: -9.502842903137207
    5. '})' → logprob: -9.752842903137207
    6. ')}' → logprob: -11.002842903137207
    7. '')' → logprob: -11.502842903137207
    8. '       ' → logprob: -12.127842903137207
    9. ')
' → logprob: -12.127842903137207
    10. '`)' → logprob: -12.377842903137207

Token 434: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05555843934416771
    2. '
' → logprob: -2.930558443069458
    3. 'def' → logprob: -7.930558204650879
    4. '    
' → logprob: -8.305558204650879
    5. 'V' → logprob: -11.055558204650879
    6. '```' → logprob: -11.680558204650879
    7. '

' → logprob: -11.805558204650879
    8. 'import' → logprob: -12.055558204650879
    9. '  
' → logprob: -12.430558204650879
    10. ')' → logprob: -12.680558204650879

Token 435: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016476840246468782
    2. 'def' → logprob: -6.751647472381592
    3. 'V' → logprob: -8.75164794921875
    4. '
' → logprob: -9.12664794921875
    5. 'v' → logprob: -9.37664794921875
    6. 'import' → logprob: -9.87664794921875
    7. ')' → logprob: -10.62664794921875
    8. 'from' → logprob: -11.25164794921875
    9. '```' → logprob: -11.37664794921875
    10. ')
' → logprob: -12.12664794921875

Token 436: ' Value' (ID: 9963)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.010347955860197544
    2. '   ' → logprob: -4.885347843170166
    3. 'def' → logprob: -7.010347843170166
    4. 'v' → logprob: -7.510347843170166
    5. 'dp' → logprob: -7.510347843170166
    6. 'import' → logprob: -8.010348320007324
    7. 'from' → logprob: -8.260348320007324
    8. ' V' → logprob: -9.260348320007324
    9. 'n' → logprob: -10.510348320007324
    10. 'dist' → logprob: -12.010348320007324

Token 437: ' iteration' (ID: 43155)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3184311091899872
    2. 'function' → logprob: -2.1934311389923096
    3. '_function' → logprob: -2.5684311389923096
    4. '_iteration' → logprob: -4.0684309005737305
    5. '
' → logprob: -4.1934309005737305
    6. '   ' → logprob: -4.3184309005737305
    7. ' function' → logprob: -4.9434309005737305
    8. 's' → logprob: -5.1934309005737305
    9. 'def' → logprob: -5.4434309005737305
    10. '=' → logprob: -5.4434309005737305

Token 438: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2198789119720459
    2. '
' → logprob: -1.719878911972046
    3. 'V' → logprob: -4.344879150390625
    4. '    
' → logprob: -6.219879150390625
    5. 'def' → logprob: -6.844879150390625
    6. 'v' → logprob: -7.219879150390625
    7. 'dp' → logprob: -7.719879150390625
    8. ' V' → logprob: -7.844879150390625
    9. ',
' → logprob: -8.594879150390625
    10. ':
' → logprob: -9.219879150390625

Token 439: ' find' (ID: 1646)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.05360327661037445
    2. 'compute' → logprob: -3.553603172302246
    3. 'find' → logprob: -5.178603172302246
    4. 'solve' → logprob: -5.303603172302246
    5. 'complete' → logprob: -5.428603172302246
    6. ' converge' → logprob: -5.428603172302246
    7. 'continue' → logprob: -6.678603172302246
    8. ' convergence' → logprob: -7.928603172302246
    9. 'finish' → logprob: -7.928603172302246
    10. 'calculate' → logprob: -8.178603172302246

Token 440: ' least' (ID: 5153)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.05360519886016846
    2. ' V' → logprob: -3.053605079650879
    3. ' the' → logprob: -6.428605079650879
    4. 'the' → logprob: -7.303605079650879
    5. 'def' → logprob: -7.428605079650879
    6. 'values' → logprob: -7.803605079650879
    7. '
' → logprob: -7.928605079650879
    8. ' minimal' → logprob: -8.428605079650879
    9. ' values' → logprob: -8.678605079650879
    10. 'v' → logprob: -8.678605079650879

Token 441: ' fixed' (ID: 13213)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.7697958946228027
    2. '   ' → logprob: -1.2697958946228027
    3. ' ' → logprob: -2.2697958946228027
    4. ' V' → logprob: -3.0197958946228027
    5. 'steps' → logprob: -3.7697958946228027
    6. '  ' → logprob: -3.8947958946228027
    7. ' number' → logprob: -4.769795894622803
    8. 'u' → logprob: -4.894795894622803
    9. ' turns' → logprob: -5.019795894622803
    10. ' steps' → logprob: -5.394795894622803

Token 442: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.00026264708139933646
    2. ' point' → logprob: -8.750262260437012
    3. '_point' → logprob: -9.625262260437012
    4. 'points' → logprob: -10.750262260437012
    5. '
' → logprob: -11.125262260437012
    6. '-point' → logprob: -14.375262260437012
    7. 'Point' → logprob: -14.750262260437012
    8. '点' → logprob: -15.125262260437012
    9. '   ' → logprob: -16.000263214111328
    10. 'punkt' → logprob: -16.375263214111328

Token 443: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4386437237262726
    2. '   ' → logprob: -1.0636436939239502
    3. 'V' → logprob: -5.313643932342529
    4. '    
' → logprob: -5.813643932342529
    5. 'def' → logprob: -6.938643932342529
    6. ' V' → logprob: -8.563643455505371
    7. 'dp' → logprob: -8.688643455505371
    8. '
' → logprob: -8.938643455505371
    9. ':
' → logprob: -9.063643455505371
    10. 'v' → logprob: -9.188643455505371

Token 444: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03461863845586777
    2. '
' → logprob: -3.409618616104126
    3. 'V' → logprob: -7.159618854522705
    4. '    
' → logprob: -9.784618377685547
    5. 'v' → logprob: -9.909618377685547
    6. '```' → logprob: -9.909618377685547
    7. ' V' → logprob: -10.534618377685547
    8. 'import' → logprob: -12.159618377685547
    9. 'def' → logprob: -13.034618377685547
    10. '	V' → logprob: -13.909618377685547

Token 445: ' V' (ID: 631)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5800307393074036
    2. 'V' (adapté à ' V') → logprob: -0.8300307393074036
    3. '
' → logprob: -6.705030918121338
    4. ' V' → logprob: -6.955030918121338
    5. 'dp' → logprob: -6.955030918121338
    6. 'v' → logprob: -7.080030918121338
    7. '    
' → logprob: -10.20503044128418
    8. 'def' → logprob: -10.33003044128418
    9. 'value' → logprob: -11.70503044128418
    10. 'dist' → logprob: -11.83003044128418

Token 446: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4809742569923401
    2. ' =' → logprob: -0.9809742569923401
    3. '=[' → logprob: -4.980974197387695
    4. ' =[' → logprob: -12.480974197387695
    5. '[' → logprob: -13.980974197387695
    6. '={' → logprob: -14.855974197387695
    7. '＝' → logprob: -15.355974197387695
    8. '=[[' → logprob: -15.855974197387695
    9. '=[]' → logprob: -16.105974197387695
    10. '={}' → logprob: -16.605974197387695

Token 447: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.023705322295427322
    2. '[n' → logprob: -3.773705244064331
    3. ' [' → logprob: -8.52370548248291
    4. '[int' → logprob: -9.02370548248291
    5. '[value' → logprob: -11.14870548248291
    6. '[-' → logprob: -11.14870548248291
    7. '[I' → logprob: -11.14870548248291
    8. '[name' → logprob: -11.27370548248291
    9. '[N' → logprob: -11.27370548248291
    10. '[in' → logprob: -11.39870548248291

Token 448: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.0022530299611389637
    2. '0' → logprob: -6.12725305557251
    3. 'float' → logprob: -10.377252578735352
    4. '(IN' → logprob: -12.127252578735352
    5. '-INF' → logprob: -12.127252578735352
    6. ' INF' → logprob: -12.252252578735352
    7. 'inf' → logprob: -12.377252578735352
    8. '(' → logprob: -12.377252578735352
    9. 'IN' → logprob: -12.377252578735352
    10. '-' → logprob: -12.752252578735352

Token 449: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.25713449716567993
    2. ' for' → logprob: -1.6321344375610352
    3. ']*' → logprob: -3.632134437561035
    4. 'for' → logprob: -5.632134437561035
    5. ' ]' → logprob: -7.507134437561035
    6. ']*(' → logprob: -7.882134437561035
    7. ' if' → logprob: -8.507134437561035
    8. 'if' → logprob: -10.757134437561035
    9. '   ' → logprob: -11.507134437561035
    10. ']+' → logprob: -11.632134437561035

Token 450: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -7.505351095460355e-05
    2. '(n' → logprob: -9.500075340270996
    3. ' n' → logprob: -16.00007438659668
    4. '(' → logprob: -19.00007438659668
    5. '```' → logprob: -20.00007438659668
    6. '_n' → logprob: -20.75007438659668
    7. '
' → logprob: -20.87507438659668
    8. '	n' → logprob: -21.12507438659668
    9. '   ' → logprob: -21.62507438659668
    10. ' (' → logprob: -22.12507438659668

Token 451: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.030188364908099174
    2. 'V' → logprob: -3.5301883220672607
    3. '
' → logprob: -8.03018856048584
    4. '   ' → logprob: -10.15518856048584
    5. '    
' → logprob: -10.65518856048584
    6. '  
' → logprob: -10.90518856048584
    7. 'for' → logprob: -12.40518856048584
    8. ' V' → logprob: -12.65518856048584
    9. ' 
' → logprob: -12.65518856048584
    10. ',
' → logprob: -12.78018856048584

Token 452: '   ' (ID: 271)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -7.171581091824919e-05
    2. ' V' → logprob: -9.62507152557373
    3. '   ' → logprob: -12.75007152557373
    4. ')' → logprob: -14.12507152557373
    5. '<|end|>' → logprob: -14.12507152557373
    6. ')V' → logprob: -14.62507152557373
    7. '```' → logprob: -14.87507152557373
    8. 'v' → logprob: -16.000072479248047
    9. '
' → logprob: -16.250072479248047
    10. ',' → logprob: -16.500072479248047

Token 453: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' (adapté à ' V') → logprob: -6.704273118884885e-07
    2. ' V' → logprob: -14.625000953674316
    3. '   ' → logprob: -16.0
    4. 'import' → logprob: -18.5
    5. 'from' → logprob: -19.125
    6. '```' → logprob: -19.75
    7. '
' → logprob: -19.875
    8. 'for' → logprob: -19.875
    9. 'goal' → logprob: -20.5
    10. ')V' → logprob: -21.25

Token 454: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0025103818625211716
    2. '[-' → logprob: -6.0025105476379395
    3. ' =' → logprob: -11.002510070800781
    4. '[' → logprob: -12.002510070800781
    5. 'n' → logprob: -12.877510070800781
    6. '=' → logprob: -13.002510070800781
    7. '[
' → logprob: -14.002510070800781
    8. '[:]' → logprob: -14.002510070800781
    9. '[end' → logprob: -14.502510070800781
    10. ' [' → logprob: -14.752510070800781

Token 455: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.690834273584187e-05
    2. ' -' → logprob: -10.25003719329834
    3. '1' → logprob: -14.12503719329834
    4. '<|end|>' → logprob: -15.12503719329834
    5. '()-' → logprob: -15.87503719329834
    6. ']-' → logprob: -16.375036239624023
    7. '[' → logprob: -16.375036239624023
    8. '−' → logprob: -16.875036239624023
    9. '<|end|>' → logprob: -16.875036239624023
    10. ')-' → logprob: -17.125036239624023

Token 456: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. '<|end|>' → logprob: -13.875000953674316
    3. ' ' → logprob: -16.125001907348633
    4. '2' → logprob: -16.250001907348633
    5. '```' → logprob: -16.500001907348633
    6. '   ' → logprob: -17.500001907348633
    7. '<|end|>' → logprob: -17.750001907348633
    8. ')' → logprob: -18.062501907348633
    9. ']' → logprob: -18.062501907348633
    10. '
' → logprob: -18.125001907348633

Token 457: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006736453622579575
    2. ']=' → logprob: -5.0067362785339355
    3. '=' → logprob: -10.881736755371094
    4. ' ]' → logprob: -13.131736755371094
    5. ' =' → logprob: -15.756736755371094
    6. ']==' → logprob: -16.256736755371094
    7. ')' → logprob: -17.006736755371094
    8. ']=-' → logprob: -17.381736755371094
    9. ']+=' → logprob: -18.006736755371094
    10. '']=' → logprob: -18.006736755371094

Token 458: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011047935113310814
    2. ' =' → logprob: -4.511047840118408
    3. '＝' → logprob: -17.63604736328125
    4. '=
' → logprob: -17.76104736328125
    5. ']=' → logprob: -18.13604736328125
    6. ')=' → logprob: -19.38604736328125
    7. '=

' → logprob: -19.51104736328125
    8. '.=' → logprob: -19.63604736328125
    9. '=}' → logprob: -19.76104736328125
    10. '=True' → logprob: -19.76104736328125

Token 459: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '   ' → logprob: -21.625
    4. '۰' → logprob: -22.125
    5. '０' → logprob: -24.125
    6. '000' → logprob: -24.25
    7. '```' → logprob: -25.125
    8. '00' → logprob: -25.375
    9. '  ' → logprob: -25.375
    10. ' ' → logprob: -25.5

Token 460: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '   ' → logprob: -20.5
    4. '۰' → logprob: -21.0
    5. '000' → logprob: -22.0
    6. '00' → logprob: -22.25
    7. '```' → logprob: -22.375
    8. '1' → logprob: -22.5
    9. '０' → logprob: -23.0625
    10. '`' → logprob: -23.25

Token 461: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.28966793417930603
    2. '   ' → logprob: -1.4146679639816284
    3. 'while' → logprob: -5.539668083190918
    4. 'changed' → logprob: -6.664668083190918
    5. ' while' → logprob: -6.789668083190918
    6. '    
' → logprob: -7.039668083190918
    7. ' changed' → logprob: -7.539668083190918
    8. 'from' → logprob: -8.039668083190918
    9. 'for' → logprob: -9.664668083190918
    10. 'def' → logprob: -9.789668083190918

Token 462: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.042034052312374115
    2. 'changed' → logprob: -4.042034149169922
    3. 'while' → logprob: -4.167034149169922
    4. 'for' → logprob: -5.667034149169922
    5. ' changed' → logprob: -6.542034149169922
    6. 'queue' → logprob: -6.917034149169922
    7. 'from' → logprob: -7.542034149169922
    8. ' while' → logprob: -7.542034149169922
    9. ' for' → logprob: -7.792034149169922
    10. '
' → logprob: -8.542034149169922

Token 463: ' changed' (ID: 9180)
  Prédit: 'changed'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'changed' (adapté à ' changed') → logprob: -0.34012100100517273
    2. 'from' → logprob: -1.3401210308074951
    3. 'queue' → logprob: -4.090120792388916
    4. 'while' → logprob: -5.090120792388916
    5. 'updated' → logprob: -6.340120792388916
    6. 'for' → logprob: -7.090120792388916
    7. 'change' → logprob: -7.465120792388916
    8. 'import' → logprob: -8.715121269226074
    9. '   ' → logprob: -8.965121269226074
    10. ' changed' → logprob: -9.090121269226074

Token 464: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07997335493564606
    2. '=' → logprob: -2.5799734592437744
    3. '=True' → logprob: -6.829973220825195
    4. ' ' → logprob: -13.329973220825195
    5. '=False' → logprob: -15.454973220825195
    6. '   ' → logprob: -16.329973220825195
    7. ' True' → logprob: -16.579973220825195
    8. '=true' → logprob: -17.329973220825195
    9. '  ' → logprob: -18.079973220825195
    10. 'True' → logprob: -18.454973220825195

Token 465: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.5048530030981055e-06
    2. ' True' → logprob: -13.500001907348633
    3. 'true' → logprob: -20.750001907348633
    4. '(True' → logprob: -20.750001907348633
    5. '1' → logprob: -21.500001907348633
    6. '=True' → logprob: -21.750001907348633
    7. '   ' → logprob: -22.000001907348633
    8. '[' → logprob: -23.000001907348633
    9. '  ' → logprob: -23.375001907348633
    10. 'Tr' → logprob: -24.000001907348633

Token 466: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03657503053545952
    2. '
' → logprob: -3.4115750789642334
    3. '    
' → logprob: -6.911574840545654
    4. 'while' → logprob: -7.161574840545654
    5. ' while' → logprob: -7.786574840545654
    6. '	while' → logprob: -8.661575317382812
    7. '<|end|>' → logprob: -8.786575317382812
    8. '  
' → logprob: -9.036575317382812
    9. ',' → logprob: -9.661575317382812
    10. '\n' → logprob: -10.161575317382812

Token 467: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018053360283374786
    2. ' while' → logprob: -5.2680535316467285
    3. '```' → logprob: -5.3930535316467285
    4. '
' → logprob: -5.6430535316467285
    5. 'while' → logprob: -6.0180535316467285
    6. '\n' → logprob: -6.6430535316467285
    7. '    
' → logprob: -7.6430535316467285
    8. '	while' → logprob: -8.39305305480957
    9. '<|end|>' → logprob: -10.14305305480957
    10. ' 
' → logprob: -10.26805305480957

Token 468: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7178765535354614
    2. 'while' → logprob: -0.7178765535354614
    3. ' while' → logprob: -3.967876434326172
    4. '	while' → logprob: -5.217876434326172
    5. '
' → logprob: -9.842876434326172
    6. '    
' → logprob: -10.717876434326172
    7. '```' → logprob: -12.217876434326172
    8. '\t' → logprob: -12.217876434326172
    9. '\n' → logprob: -13.842876434326172
    10. '   ' → logprob: -13.842876434326172

Token 469: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.0011772511061280966
    2. '_' → logprob: -6.7511773109436035
    3. ' ' → logprob: -13.001176834106445
    4. ' step' → logprob: -13.001176834106445
    5. ' u' → logprob: -14.501176834106445
    6. ' i' → logprob: -14.626176834106445
    7. ' turn' → logprob: -15.376176834106445
    8. ' range' → logprob: -15.876176834106445
    9. ' __' → logprob: -16.001176834106445
    10. ' iter' → logprob: -16.001176834106445

Token 470: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.218488872051239
    2. ' in' → logprob: -1.9684889316558838
    3. 'range' → logprob: -3.218488931655884
    4. 'in' → logprob: -4.218488693237305
    5. 'ange' → logprob: -6.593488693237305
    6. '_' → logprob: -8.843488693237305
    7. ' ' → logprob: -9.218488693237305
    8. ' _' → logprob: -9.468488693237305
    9. '(range' → logprob: -9.468488693237305
    10. '   ' → logprob: -10.218488693237305

Token 471: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002809275174513459
    2. ' range' → logprob: -5.877809047698975
    3. '(range' → logprob: -13.377809524536133
    4. 'while' → logprob: -13.752809524536133
    5. 'n' → logprob: -14.752809524536133
    6. '(' → logprob: -15.377809524536133
    7. '   ' → logprob: -15.502809524536133
    8. '10' → logprob: -15.502809524536133
    9. 'count' → logprob: -15.627809524536133
    10. ' ' → logprob: -15.627809524536133

Token 472: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.292095299111679e-05
    2. '(n' → logprob: -9.500082969665527
    3. '100' → logprob: -12.125082969665527
    4. ' ' → logprob: -13.500082969665527
    5. ' (' → logprob: -14.625082969665527
    6. 'n' → logprob: -14.625082969665527
    7. '(
' → logprob: -16.37508201599121
    8. '(IN' → logprob: -16.62508201599121
    9. '((' → logprob: -17.25008201599121
    10. '(int' → logprob: -17.25008201599121

Token 473: '*' (ID: 9)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.12710322439670563
    2. '):' → logprob: -2.127103328704834
    3. '*' → logprob: -9.502102851867676
    4. '   ' → logprob: -9.627102851867676
    5. '):
' → logprob: -10.877102851867676
    6. '+' → logprob: -12.127102851867676
    7. ')' → logprob: -12.252102851867676
    8. '**' → logprob: -13.127102851867676
    9. ' ):
' → logprob: -14.377102851867676
    10. '-' → logprob: -14.502102851867676

Token 474: '10' (ID: 702)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6420042514801025
    2. '10' → logprob: -1.2670042514801025
    3. '3' → logprob: -1.8920042514801025
    4. '100' → logprob: -4.517004013061523
    5. '5' → logprob: -4.892004013061523
    6. '20' → logprob: -5.017004013061523
    7. '4' → logprob: -5.017004013061523
    8. 'n' → logprob: -5.142004013061523
    9. '50' → logprob: -5.767004013061523
    10. '30' → logprob: -9.017004013061523

Token 475: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.02148987539112568
    2. '):' → logprob: -3.8964898586273193
    3. '   ' → logprob: -7.146490097045898
    4. '):
' → logprob: -9.271490097045898
    5. '0' → logprob: -10.271490097045898
    6. ')' → logprob: -11.021490097045898
    7. '**' → logprob: -12.646490097045898
    8. ' ):
' → logprob: -13.146490097045898
    9. '       ' → logprob: -13.271490097045898
    10. '+' → logprob: -13.646490097045898

Token 476: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008618119172751904
    2. '   ' → logprob: -4.758618354797363
    3. '	   ' → logprob: -13.133618354797363
    4. ' for' → logprob: -14.133618354797363
    5. 'for' → logprob: -14.633618354797363
    6. '           ' → logprob: -16.258617401123047
    7. '    ' → logprob: -16.508617401123047
    8. '     ' → logprob: -16.758617401123047
    9. ',' → logprob: -17.008617401123047
    10. '```' → logprob: -17.008617401123047

Token 477: ' changed' (ID: 9180)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13845153152942657
    2. 'changed' (adapté à ' changed') → logprob: -2.13845157623291
    3. '       ' → logprob: -4.76345157623291
    4. ' changed' → logprob: -5.88845157623291
    5. 'new' → logprob: -9.51345157623291
    6. 'updated' → logprob: -11.01345157623291
    7. 'ch' → logprob: -11.76345157623291
    8. 'change' → logprob: -11.88845157623291
    9. '  ' → logprob: -12.26345157623291
    10. ' new' → logprob: -12.38845157623291

Token 478: '=False' (ID: 12148)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008930559270083904
    2. ' =' → logprob: -4.758930683135986
    3. '=False' → logprob: -8.133930206298828
    4. '   ' → logprob: -11.508930206298828
    5. '=True' → logprob: -11.508930206298828
    6. ' ' → logprob: -13.883930206298828
    7. '  ' → logprob: -14.758930206298828
    8. '_=' → logprob: -15.133930206298828
    9. ',' → logprob: -15.633930206298828
    10. '=false' → logprob: -15.758930206298828

Token 479: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015502817404922098
    2. '   ' → logprob: -9.125155448913574
    3. ' for' → logprob: -10.625155448913574
    4. '	' → logprob: -11.625155448913574
    5. '<|end|>' → logprob: -12.625155448913574
    6. 'for' → logprob: -12.875155448913574
    7. '	   ' → logprob: -13.125155448913574
    8. ',' → logprob: -13.375155448913574
    9. '        
' → logprob: -14.000155448913574
    10. '           ' → logprob: -14.250155448913574

Token 480: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00855700857937336
    2. '   ' → logprob: -5.008556842803955
    3. ' for' → logprob: -6.883556842803955
    4. 'for' → logprob: -7.133556842803955
    5. '	   ' → logprob: -12.508557319641113
    6. ' ' → logprob: -12.758557319641113
    7. '	' → logprob: -13.383557319641113
    8. '        
' → logprob: -13.383557319641113
    9. '	for' → logprob: -13.633557319641113
    10. '    ' → logprob: -13.758557319641113

Token 481: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.01715077832341194
    2. ' for' → logprob: -4.26715087890625
    3. '       ' → logprob: -6.14215087890625
    4. 'new' → logprob: -7.76715087890625
    5. '   ' → logprob: -7.89215087890625
    6. ' new' → logprob: -10.26715087890625
    7. '	for' → logprob: -15.01715087890625
    8. ' ' → logprob: -16.01715087890625
    9. 'next' → logprob: -16.14215087890625
    10. 'import' → logprob: -17.51715087890625

Token 482: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0019287518225610256
    2. ' u' → logprob: -6.251928806304932
    3. '   ' → logprob: -16.126928329467773
    4. '	u' → logprob: -19.251928329467773
    5. 'v' → logprob: -19.876928329467773
    6. ' ' → logprob: -21.001928329467773
    7. '```' → logprob: -21.126928329467773
    8. '[u' → logprob: -21.501928329467773
    9. '(u' → logprob: -22.251928329467773
    10. '
' → logprob: -22.376928329467773

Token 483: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004079470410943031
    2. 'in' → logprob: -5.504079341888428
    3. '       ' → logprob: -15.129079818725586
    4. '	in' → logprob: -15.504079818725586
    5. '   ' → logprob: -15.754079818725586
    6. ',' → logprob: -15.879079818725586
    7. ' ' → logprob: -16.254079818725586
    8. 'u' → logprob: -16.504079818725586
    9. '        ' → logprob: -16.629079818725586
    10. 'import' → logprob: -16.879079818725586

Token 484: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.941850526549388e-06
    2. ' range' → logprob: -11.750007629394531
    3. '   ' → logprob: -20.87500762939453
    4. '(range' → logprob: -22.75000762939453
    5. '	range' → logprob: -23.37500762939453
    6. ' ' → logprob: -24.75000762939453
    7. '```' → logprob: -24.75000762939453
    8. '  ' → logprob: -25.62500762939453
    9. '0' → logprob: -25.75000762939453
    10. '
' → logprob: -26.25000762939453

Token 485: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0025229842867702246
    2. 'n' → logprob: -6.002522945404053
    3. '(' → logprob: -10.002523422241211
    4. '       ' → logprob: -13.377523422241211
    5. '   ' → logprob: -15.627523422241211
    6. ' n' → logprob: -16.37752342224121
    7. '1' → logprob: -16.87752342224121
    8. '           ' → logprob: -17.00252342224121
    9. ',n' → logprob: -17.00252342224121
    10. '(
' → logprob: -18.00252342224121

Token 486: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.034055616706609726
    2. '):' → logprob: -3.409055709838867
    3. '       ' → logprob: -8.284055709838867
    4. '   ' → logprob: -9.534055709838867
    5. '           ' → logprob: -10.784055709838867
    6. 'n' → logprob: -10.784055709838867
    7. '):
' → logprob: -11.159055709838867
    8. '):

' → logprob: -12.034055709838867
    9. '(n' → logprob: -12.034055709838867
    10. ':
' → logprob: -13.159055709838867

Token 487: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000556843588128686
    2. ' if' → logprob: -7.625556945800781
    3. ':' → logprob: -10.625556945800781
    4. '	       ' → logprob: -11.500556945800781
    5. 'if' → logprob: -11.875556945800781
    6. ',' → logprob: -12.000556945800781
    7. '       ' → logprob: -12.125556945800781
    8. '
' → logprob: -12.875556945800781
    9. '```' → logprob: -12.875556945800781
    10. '   ' → logprob: -13.250556945800781

Token 488: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5910314321517944
    2. ' if' → logprob: -0.8410314321517944
    3. '           ' → logprob: -4.591031551361084
    4. '               ' → logprob: -5.341031551361084
    5. ' min' → logprob: -11.466031074523926
    6. '   ' → logprob: -11.466031074523926
    7. 'min' → logprob: -11.591031074523926
    8. '```' → logprob: -12.966031074523926
    9. 'continue' → logprob: -13.216031074523926
    10. '       ' → logprob: -13.216031074523926

Token 489: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0005383780226111412
    2. 'V' → logprob: -7.750538349151611
    3. ' u' → logprob: -9.75053882598877
    4. '   ' → logprob: -10.00053882598877
    5. '       ' → logprob: -14.12553882598877
    6. '    ' → logprob: -14.50053882598877
    7. '           ' → logprob: -14.75053882598877
    8. 'not' → logprob: -14.75053882598877
    9. '     ' → logprob: -14.87553882598877
    10. '	u' → logprob: -15.12553882598877

Token 490: '==' (ID: 560)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.32596179842948914
    2. '!=' → logprob: -1.3259618282318115
    3. ' ==' → logprob: -4.950961589813232
    4. '==' → logprob: -5.200961589813232
    5. ']!=' → logprob: -12.07596206665039
    6. '=' → logprob: -12.57596206665039
    7. '()!=' → logprob: -12.57596206665039
    8. ' ' → logprob: -12.57596206665039
    9. ')!=' → logprob: -12.70096206665039
    10. ')' → logprob: -13.32596206665039

Token 491: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.4498052223643754e-05
    2. ' n' → logprob: -11.625014305114746
    3. '(n' → logprob: -12.125014305114746
    4. '   ' → logprob: -16.375015258789062
    5. '	n' → logprob: -18.000015258789062
    6. '```' → logprob: -19.250015258789062
    7. ' (' → logprob: -19.625015258789062
    8. ')n' → logprob: -19.875015258789062
    9. '_n' → logprob: -20.125015258789062
    10. '(' → logprob: -20.125015258789062

Token 492: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00014132341311778873
    2. ' -' → logprob: -8.875141143798828
    3. '           ' → logprob: -14.750141143798828
    4. '[' → logprob: -14.875141143798828
    5. '1' → logprob: -15.500141143798828
    6. '()-' → logprob: -16.125141143798828
    7. '–' → logprob: -16.625141143798828
    8. '[-' → logprob: -17.000141143798828
    9. '```' → logprob: -17.375141143798828
    10. '   ' → logprob: -17.500141143798828

Token 493: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -14.500001907348633
    3. '<|end|>' → logprob: -14.500001907348633
    4. '```' → logprob: -14.750001907348633
    5. '   ' → logprob: -15.250001907348633
    6. '           ' → logprob: -15.875001907348633
    7. '...' → logprob: -16.000001907348633
    8. '       ' → logprob: -16.750001907348633
    9. '2' → logprob: -17.000001907348633
    10. '<|end|>' → logprob: -17.875001907348633

Token 494: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2936689555644989
    2. ':
' → logprob: -1.9186689853668213
    3. '               ' → logprob: -2.2936689853668213
    4. 'continue' → logprob: -5.418668746948242
    5. '           ' → logprob: -7.043668746948242
    6. ' continue' → logprob: -7.168668746948242
    7. '       ' → logprob: -8.043668746948242
    8. ' or' → logprob: -8.793668746948242
    9. ':return' → logprob: -8.793668746948242
    10. ':
' → logprob: -11.293668746948242

Token 495: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010615098290145397
    2. ' continue' → logprob: -7.00106143951416
    3. 'continue' → logprob: -9.12606143951416
    4. '           ' → logprob: -10.37606143951416
    5. ':' → logprob: -12.87606143951416
    6. ':
' → logprob: -13.50106143951416
    7. ',' → logprob: -13.62606143951416
    8. ' continues' → logprob: -13.75106143951416
    9. '       ' → logprob: -13.87606143951416
    10. '	           ' → logprob: -14.25106143951416

Token 496: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.1697656363248825
    2. '               ' → logprob: -1.919765591621399
    3. ' continue' → logprob: -4.669765472412109
    4. '           ' → logprob: -9.29476547241211
    5. '                   ' → logprob: -11.54476547241211
    6. '   ' → logprob: -11.91976547241211
    7. '	continue' → logprob: -12.04476547241211
    8. '
' → logprob: -12.66976547241211
    9. '       ' → logprob: -13.29476547241211
    10. '```' → logprob: -13.91976547241211

Token 497: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002330992283532396
    2. '       ' → logprob: -8.500232696533203
    3. '
' → logprob: -11.750232696533203
    4. '            
' → logprob: -11.750232696533203
    5. '               ' → logprob: -12.125232696533203
    6. '   ' → logprob: -13.250232696533203
    7. '	       ' → logprob: -13.625232696533203
    8. ',' → logprob: -13.750232696533203
    9. '          ' → logprob: -14.000232696533203
    10. '<|end|>' → logprob: -14.500232696533203

Token 498: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005222928593866527
    2. '       ' → logprob: -7.625522136688232
    3. '```' → logprob: -11.75052261352539
    4. '
' → logprob: -12.00052261352539
    5. 'v' → logprob: -12.25052261352539
    6. '               ' → logprob: -12.62552261352539
    7. '   ' → logprob: -13.00052261352539
    8. '            
' → logprob: -13.12552261352539
    9. 'if' → logprob: -14.00052261352539
    10. '          ' → logprob: -14.00052261352539

Token 499: ' vals' (ID: 58985)
  Prédit: 'vals'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' (adapté à ' vals') → logprob: -0.22003954648971558
    2. 'min' → logprob: -2.3450396060943604
    3. '           ' → logprob: -3.5950396060943604
    4. 'if' → logprob: -3.9700396060943604
    5. 'values' → logprob: -4.095039367675781
    6. 'possible' → logprob: -4.595039367675781
    7. 'all' → logprob: -5.095039367675781
    8. 'best' → logprob: -5.345039367675781
    9. ' min' → logprob: -5.970039367675781
    10. 'max' → logprob: -6.220039367675781

Token 500: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4755380153656006
    2. '=' → logprob: -0.9755380153656006
    3. '=[]' → logprob: -7.10053825378418
    4. '=[' → logprob: -7.47553825378418
    5. ' =[' → logprob: -10.60053825378418
    6. '   ' → logprob: -10.72553825378418
    7. '[' → logprob: -11.85053825378418
    8. ' ' → logprob: -12.72553825378418
    9. '=[]
' → logprob: -12.85053825378418
    10. '=[
' → logprob: -13.22553825378418

Token 501: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.006719640456140041
    2. '[]
' → logprob: -5.006719589233398
    3. '[' → logprob: -13.006719589233398
    4. ' []' → logprob: -14.131719589233398
    5. '[]

' → logprob: -14.506719589233398
    6. '[]>' → logprob: -14.881719589233398
    7. '[]}' → logprob: -15.381719589233398
    8. '[],' → logprob: -16.1317195892334
    9. '[])' → logprob: -16.1317195892334
    10. '[]"' → logprob: -18.5067195892334

Token 502: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024155179038643837
    2. ' for' → logprob: -3.7741551399230957
    3. 'for' → logprob: -7.149155139923096
    4. '       ' → logprob: -9.649155616760254
    5. '               ' → logprob: -11.399155616760254
    6. '   ' → logprob: -11.399155616760254
    7. ',' → logprob: -11.774155616760254
    8. ' ' → logprob: -12.649155616760254
    9. '[' → logprob: -12.899155616760254
    10. '          ' → logprob: -13.024155616760254

Token 503: ' impossible' (ID: 19786)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5051131248474121
    2. '           ' → logprob: -1.005113124847412
    3. 'valid' → logprob: -3.630113124847412
    4. ' for' → logprob: -5.755113124847412
    5. 'all' → logprob: -7.880113124847412
    6. '       ' → logprob: -9.13011360168457
    7. ' valid' → logprob: -9.25511360168457
    8. '   ' → logprob: -9.75511360168457
    9. 'import' → logprob: -10.25511360168457
    10. 'can' → logprob: -10.25511360168457

Token 504: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2607942223548889
    2. ' =' → logprob: -1.5107941627502441
    3. '=True' → logprob: -4.760794162750244
    4. '=False' → logprob: -8.885794639587402
    5. '   ' → logprob: -9.135794639587402
    6. '       ' → logprob: -11.635794639587402
    7. ' ' → logprob: -12.760794639587402
    8. '    ' → logprob: -13.385794639587402
    9. '           ' → logprob: -13.760794639587402
    10. '  ' → logprob: -13.760794639587402

Token 505: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -2.165027217415627e-05
    2. ' False' → logprob: -10.750021934509277
    3. 'True' → logprob: -16.00002098083496
    4. '   ' → logprob: -18.25002098083496
    5. '(False' → logprob: -18.37502098083496
    6. '=False' → logprob: -18.50002098083496
    7. 'false' → logprob: -20.37502098083496
    8. '```' → logprob: -21.87502098083496
    9. '0' → logprob: -22.37502098083496
    10. '    ' → logprob: -23.00002098083496

Token 506: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1424916684627533
    2. '<|end|>' → logprob: -2.142491579055786
    3. '<|end|>' → logprob: -5.392491817474365
    4. '
' → logprob: -5.767491817474365
    5. ' for' → logprob: -5.892491817474365
    6. ',' → logprob: -6.517491817474365
    7. '            
' → logprob: -6.767491817474365
    8. ':' → logprob: -7.642491817474365
    9. '       ' → logprob: -7.767491817474365
    10. ':
' → logprob: -8.767491340637207

Token 507: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004960732068866491
    2. ' for' → logprob: -5.379960536956787
    3. 'for' → logprob: -8.629961013793945
    4. '<|end|>' → logprob: -9.129961013793945
    5. '       ' → logprob: -11.754961013793945
    6. ',' → logprob: -11.879961013793945
    7. '<|end|>' → logprob: -11.879961013793945
    8. '   ' → logprob: -12.004961013793945
    9. '            
' → logprob: -12.254961013793945
    10. '	       ' → logprob: -12.754961013793945

Token 508: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38754168152809143
    2. 'for' (adapté à ' for') → logprob: -1.387541651725769
    3. '           ' → logprob: -2.6375417709350586
    4. '       ' → logprob: -11.012541770935059
    5. '   ' → logprob: -11.512541770935059
    6. '	for' → logprob: -11.887541770935059
    7. '<|end|>' → logprob: -11.887541770935059
    8. ' ' → logprob: -13.012541770935059
    9. '	       ' → logprob: -13.387541770935059
    10. '	   ' → logprob: -13.512541770935059

Token 509: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.014188424684107304
    2. ' s' → logprob: -4.264188289642334
    3. 'step' → logprob: -11.264188766479492
    4. '   ' → logprob: -11.514188766479492
    5. ' step' → logprob: -13.639188766479492
    6. ' ' → logprob: -15.014188766479492
    7. '	s' → logprob: -16.139188766479492
    8. '`s' → logprob: -16.264188766479492
    9. 'steps' → logprob: -16.764188766479492
    10. '  ' → logprob: -16.889188766479492

Token 510: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03804803267121315
    2. 'in' → logprob: -3.288048028945923
    3. '	in' → logprob: -13.538047790527344
    4. ' ' → logprob: -13.913047790527344
    5. '           ' → logprob: -14.038047790527344
    6. 's' → logprob: -14.288047790527344
    7. ',' → logprob: -14.288047790527344
    8. 'import' → logprob: -14.538047790527344
    9. '   ' → logprob: -14.538047790527344
    10. '_in' → logprob: -15.288047790527344

Token 511: ' steps' (ID: 10331)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.00016313401283696294
    2. ' steps' → logprob: -8.750163078308105
    3. '[' → logprob: -12.500163078308105
    4. '   ' → logprob: -14.375163078308105
    5. 'step' → logprob: -16.000164031982422
    6. '.steps' → logprob: -17.125164031982422
    7. ' ' → logprob: -17.375164031982422
    8. ' [' → logprob: -17.750164031982422
    9. '  ' → logprob: -17.875164031982422
    10. 'st' → logprob: -18.375164031982422

Token 512: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5760141015052795
    2. ':' → logprob: -0.8260141015052795
    3. '               ' → logprob: -10.701014518737793
    4. '):
' → logprob: -10.826014518737793
    5. '           ' → logprob: -11.076014518737793
    6. ':

' → logprob: -12.076014518737793
    7. '=' → logprob: -12.826014518737793
    8. ':
' → logprob: -12.826014518737793
    9. ',' → logprob: -13.576014518737793
    10. ' in' → logprob: -13.701014518737793

Token 513: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003494112053886056
    2. '           ' → logprob: -6.0034942626953125
    3. ' if' → logprob: -7.6284942626953125
    4. '<|end|>' → logprob: -7.8784942626953125
    5. ',' → logprob: -10.503494262695312
    6. '                
' → logprob: -11.003494262695312
    7. '	           ' → logprob: -11.253494262695312
    8. '<|end|>' → logprob: -11.503494262695312
    9. '                   ' → logprob: -11.628494262695312
    10. 'if' → logprob: -11.878494262695312

Token 514: ' reach' (ID: 7627)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.30723243951797485
    2. ' if' → logprob: -1.55723237991333
    3. '               ' → logprob: -2.93223237991333
    4. 'next' → logprob: -8.432232856750488
    5. '           ' → logprob: -8.932232856750488
    6. '                   ' → logprob: -10.182232856750488
    7. 'nodes' → logprob: -10.182232856750488
    8. 'v' → logprob: -10.432232856750488
    9. ' next' → logprob: -10.807232856750488
    10. '   ' → logprob: -12.057232856750488

Token 515: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7405281662940979
    2. ' =' → logprob: -0.8655281662940979
    3. 'able' → logprob: -3.240528106689453
    4. '=set' → logprob: -3.865528106689453
    5. '_nodes' → logprob: -4.365528106689453
    6. 'ed' → logprob: -4.615528106689453
    7. 'ables' → logprob: -4.865528106689453
    8. 's' → logprob: -5.115528106689453
    9. '_set' → logprob: -6.240528106689453
    10. 'set' → logprob: -6.740528106689453

Token 516: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0015028368216007948
    2. ' next' → logprob: -6.501502990722656
    3. '[next' → logprob: -15.001502990722656
    4. '   ' → logprob: -15.626502990722656
    5. '(next' → logprob: -17.876502990722656
    6. '	next' → logprob: -18.251502990722656
    7. ' ' → logprob: -19.751502990722656
    8. '
' → logprob: -19.876502990722656
    9. '.next' → logprob: -20.001502990722656
    10. '```' → logprob: -20.501502990722656

Token 517: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -2.696889623621246e-06
    2. 'pos' → logprob: -13.12500286102295
    3. 'Pos' → logprob: -14.87500286102295
    4. '```' → logprob: -16.000001907348633
    5. '[u' → logprob: -16.125001907348633
    6. '[_' → logprob: -16.875001907348633
    7. '   ' → logprob: -17.000001907348633
    8. '[pos' → logprob: -17.375001907348633
    9. '_POS' → logprob: -18.125001907348633
    10. ' _' → logprob: -18.125001907348633

Token 518: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.9361264946837764e-07
    2. 'u' → logprob: -16.125
    3. '```' → logprob: -17.625
    4. ' [' → logprob: -17.75
    5. '[user' → logprob: -18.375
    6. '][' → logprob: -19.75
    7. '               ' → logprob: -19.875
    8. '   ' → logprob: -19.875
    9. '[s' → logprob: -20.125
    10. '[' → logprob: -20.25

Token 519: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.3149869740009308
    2. '[s' → logprob: -1.3149869441986084
    3. '[u' → logprob: -6.6899871826171875
    4. 's' → logprob: -8.314987182617188
    5. ']' → logprob: -9.439987182617188
    6. '].' → logprob: -9.939987182617188
    7. '[' → logprob: -10.064987182617188
    8. ' ][' → logprob: -11.064987182617188
    9. '   ' → logprob: -11.439987182617188
    10. '.get' → logprob: -12.189987182617188

Token 520: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -3.0590548703912646e-05
    2. '][' → logprob: -11.125030517578125
    3. '[s' → logprob: -11.625030517578125
    4. 'u' → logprob: -12.875030517578125
    5. '
' → logprob: -13.875030517578125
    6. ' s' → logprob: -13.875030517578125
    7. '[u' → logprob: -14.000030517578125
    8. '   ' → logprob: -14.625030517578125
    9. ']' → logprob: -15.000030517578125
    10. '[' → logprob: -15.500030517578125

Token 521: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.3875133693218231
    2. ']' → logprob: -1.1375133991241455
    3. '               ' → logprob: -7.762513160705566
    4. ']
' → logprob: -8.762513160705566
    5. ']

' → logprob: -10.137513160705566
    6. '                   ' → logprob: -11.512513160705566
    7. ']==' → logprob: -12.887513160705566
    8. ']:
' → logprob: -13.637513160705566
    9. '           ' → logprob: -13.887513160705566
    10. ')
' → logprob: -14.137513160705566

Token 522: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006050990778021514
    2. '           ' → logprob: -7.87560510635376
    3. ' if' → logprob: -9.375604629516602
    4. '<|end|>' → logprob: -9.875604629516602
    5. 'if' → logprob: -11.000604629516602
    6. '                   ' → logprob: -11.125604629516602
    7. '       ' → logprob: -11.250604629516602
    8. '                
' → logprob: -11.750604629516602
    9. '                ' → logprob: -12.125604629516602
    10. '              ' → logprob: -12.375604629516602

Token 523: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.09686961770057678
    2. '               ' → logprob: -2.471869707107544
    3. ' if' → logprob: -4.846869468688965
    4. '+' → logprob: -10.346869468688965
    5. '           ' → logprob: -12.221869468688965
    6. 'If' → logprob: -12.596869468688965
    7. '                   ' → logprob: -13.346869468688965
    8. ' ' → logprob: -14.346869468688965
    9. ';if' → logprob: -14.346869468688965
    10. '       ' → logprob: -14.596869468688965

Token 524: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0622137077152729
    2. 'len' → logprob: -2.812213659286499
    3. ' not' → logprob: -8.312213897705078
    4. ' len' → logprob: -15.187213897705078
    5. '   ' → logprob: -15.312213897705078
    6. '(len' → logprob: -17.812213897705078
    7. '(not' → logprob: -18.187213897705078
    8. '!' → logprob: -18.687213897705078
    9. '	not' → logprob: -18.812213897705078
    10. '       ' → logprob: -19.187213897705078

Token 525: ' reach' (ID: 7627)
  Prédit: 'reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reach' → logprob: -4.320199877838604e-07
    2. ' reach' → logprob: -15.125
    3. 'reachable' → logprob: -16.25
    4. 'len' → logprob: -17.5
    5. 'next' → logprob: -17.875
    6. '
' → logprob: -18.25
    7. 'read' → logprob: -20.375
    8. '```' → logprob: -21.25
    9. 'Reach' → logprob: -21.375
    10. 'receive' → logprob: -21.5

Token 526: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2524680495262146
    2. ':
' → logprob: -1.5024681091308594
    3. '                   ' → logprob: -7.752468109130859
    4. '               ' → logprob: -9.75246810913086
    5. ':return' → logprob: -11.12746810913086
    6. ':
' → logprob: -11.75246810913086
    7. ' or' → logprob: -12.25246810913086
    8. '                       ' → logprob: -12.37746810913086
    9. '):
' → logprob: -12.62746810913086
    10. ':

' → logprob: -12.75246810913086

Token 527: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00827117171138525
    2. ':
' → logprob: -5.258271217346191
    3. ':' → logprob: -6.133271217346191
    4. '               ' → logprob: -7.258271217346191
    5. '                       ' → logprob: -9.883271217346191
    6. 'im' → logprob: -10.133271217346191
    7. '           ' → logprob: -11.508271217346191
    8. ' =' → logprob: -11.508271217346191
    9. '                  ' → logprob: -11.633271217346191
    10. '=' → logprob: -11.883271217346191

Token 528: ' impossible' (ID: 19786)
  Prédit: 'im'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.05542457848787308
    2. '                   ' → logprob: -3.555424690246582
    3. ' impossible' → logprob: -3.805424690246582
    4. '               ' → logprob: -5.805424690246582
    5. '                       ' → logprob: -10.180424690246582
    6. '           ' → logprob: -10.805424690246582
    7. '   ' → logprob: -11.180424690246582
    8. '
' → logprob: -11.930424690246582
    9. '       ' → logprob: -13.430424690246582
    10. '	im' → logprob: -13.930424690246582

Token 529: '=True' (ID: 7827)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7735514640808105
    2. '=' → logprob: -1.5235514640808105
    3. '=True' → logprob: -1.5235514640808105
    4. '                   ' → logprob: -2.6485514640808105
    5. ':' → logprob: -4.2735514640808105
    6. ':
' → logprob: -4.6485514640808105
    7. '                       ' → logprob: -5.0235514640808105
    8. '               ' → logprob: -6.3985514640808105
    9. '           ' → logprob: -9.898551940917969
    10. '=true' → logprob: -10.273551940917969

Token 530: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00023035754566080868
    2. '                       ' → logprob: -8.75023078918457
    3. '               ' → logprob: -9.75023078918457
    4. '           ' → logprob: -12.25023078918457
    5. '                           ' → logprob: -12.50023078918457
    6. '                  ' → logprob: -13.87523078918457
    7. '		           ' → logprob: -14.12523078918457
    8. ',' → logprob: -14.37523078918457
    9. 'break' → logprob: -14.50023078918457
    10. '<|end|>' → logprob: -14.62523078918457

Token 531: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0008366696420125663
    2. '               ' → logprob: -7.8758368492126465
    3. '                       ' → logprob: -7.8758368492126465
    4. '                           ' → logprob: -10.375836372375488
    5. '           ' → logprob: -10.500836372375488
    6. '                  ' → logprob: -12.000836372375488
    7. '       ' → logprob: -12.625836372375488
    8. '                    ' → logprob: -13.625836372375488
    9. '                 ' → logprob: -14.000836372375488
    10. '   ' → logprob: -14.000836372375488

Token 532: ' break' (ID: 2338)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01959102600812912
    2. 'break' (adapté à ' break') → logprob: -4.144590854644775
    3. ' break' → logprob: -5.769590854644775
    4. '                       ' → logprob: -8.269591331481934
    5. '               ' → logprob: -9.019591331481934
    6. '           ' → logprob: -10.644591331481934
    7. '	break' → logprob: -11.519591331481934
    8. '
' → logprob: -12.394591331481934
    9. '                           ' → logprob: -12.894591331481934
    10. '       ' → logprob: -12.894591331481934

Token 533: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0049966671504080296
    2. '                   ' → logprob: -5.8799967765808105
    3. '           ' → logprob: -6.1299967765808105
    4. '       ' → logprob: -12.129996299743652
    5. '                       ' → logprob: -13.004996299743652
    6. '[' → logprob: -14.004996299743652
    7. ' continue' → logprob: -14.254996299743652
    8. ',' → logprob: -14.379996299743652
    9. '
' → logprob: -14.379996299743652
    10. '   ' → logprob: -14.629996299743652

Token 534: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011655801208689809
    2. '           ' → logprob: -6.876165390014648
    3. '                   ' → logprob: -9.001165390014648
    4. '
' → logprob: -12.376165390014648
    5. '       ' → logprob: -13.001165390014648
    6. '[' → logprob: -14.251165390014648
    7. '+' → logprob: -14.501165390014648
    8. '   ' → logprob: -15.126165390014648
    9. '              ' → logprob: -15.126165390014648
    10. ',' → logprob: -15.376165390014648

Token 535: ' vals' (ID: 58985)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007198382169008255
    2. ' vals' → logprob: -6.507198333740234
    3. ' min' → logprob: -6.632198333740234
    4. '+' → logprob: -6.632198333740234
    5. '           ' → logprob: -7.257198333740234
    6. 'min' → logprob: -7.382198333740234
    7. 'v' → logprob: -7.632198333740234
    8. 'vals' (adapté à ' vals') → logprob: -8.132198333740234
    9. ' val' → logprob: -8.757198333740234
    10. 'val' → logprob: -9.132198333740234

Token 536: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.006463593803346157
    2. '=' → logprob: -5.381463527679443
    3. ' =' → logprob: -7.006463527679443
    4. '=[]' → logprob: -7.506463527679443
    5. '.' → logprob: -8.006464004516602
    6. '=[' → logprob: -11.006464004516602
    7. 'append' → logprob: -11.506464004516602
    8. '.extend' → logprob: -11.881464004516602
    9. '=[]
' → logprob: -12.506464004516602
    10. '_append' → logprob: -12.506464004516602

Token 537: '(min' (ID: 26035)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0724116563796997
    2. '(max' → logprob: -1.3224116563796997
    3. 'max' → logprob: -1.3224116563796997
    4. '1' → logprob: -2.32241153717041
    5. '(min' → logprob: -3.82241153717041
    6. 'min' → logprob: -5.44741153717041
    7. ' max' → logprob: -7.82241153717041
    8. '   ' → logprob: -9.44741153717041
    9. '(
' → logprob: -10.07241153717041
    10. ' ' → logprob: -10.57241153717041

Token 538: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.014935611747205257
    2. '([' → logprob: -4.264935493469238
    3. '(' → logprob: -7.389935493469238
    4. '((' → logprob: -9.264935493469238
    5. '[V' → logprob: -9.889935493469238
    6. 'V' → logprob: -11.889935493469238
    7. '(
' → logprob: -14.014935493469238
    8. '[' → logprob: -14.389935493469238
    9. ' (' → logprob: -15.389935493469238
    10. '<V' → logprob: -15.764935493469238

Token 539: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -5.676981345459353e-06
    2. 'v' → logprob: -12.375005722045898
    3. '[' → logprob: -14.500005722045898
    4. '[w' → logprob: -14.500005722045898
    5. '[x' → logprob: -15.625005722045898
    6. '[val' → logprob: -16.1250057220459
    7. '(v' → logprob: -17.0000057220459
    8. '[r' → logprob: -17.5000057220459
    9. '[node' → logprob: -17.6250057220459
    10. '[pos' → logprob: -17.7500057220459

Token 540: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004958354867994785
    2. '])' → logprob: -5.379958152770996
    3. ')' → logprob: -8.879958152770996
    4. 'for' → logprob: -9.504958152770996
    5. ']))' → logprob: -10.004958152770996
    6. ' for' → logprob: -10.129958152770996
    7. ' ]' → logprob: -10.629958152770996
    8. '[v' → logprob: -12.254958152770996
    9. 'v' → logprob: -12.629958152770996
    10. ']
' → logprob: -12.879958152770996

Token 541: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5613180994987488
    2. 'for' → logprob: -0.9363180994987488
    3. ']' → logprob: -3.3113181591033936
    4. ')' → logprob: -7.1863179206848145
    5. '[v' → logprob: -9.561318397521973
    6. '])' → logprob: -9.811318397521973
    7. ' ' → logprob: -10.436318397521973
    8. 'v' → logprob: -10.561318397521973
    9. '
' → logprob: -10.936318397521973
    10. ' ]' → logprob: -10.936318397521973

Token 542: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.043019745498895645
    2. ' v' → logprob: -3.1680197715759277
    3. ' reach' → logprob: -11.54301929473877
    4. 'reach' → logprob: -11.54301929473877
    5. '	v' → logprob: -15.66801929473877
    6. 'range' → logprob: -15.91801929473877
    7. ')' → logprob: -15.91801929473877
    8. ' range' → logprob: -15.91801929473877
    9. ' ' → logprob: -16.293020248413086
    10. ')v' → logprob: -16.293020248413086

Token 543: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.474086195230484
    2. 'in' → logprob: -0.9740861654281616
    3. 's' → logprob: -12.849085807800293
    4. 'v' → logprob: -12.974085807800293
    5. ' ' → logprob: -13.349085807800293
    6. '
' → logprob: -13.599085807800293
    7. 'n' → logprob: -15.349085807800293
    8. '	in' → logprob: -15.849085807800293
    9. '<|end|>' → logprob: -15.849085807800293
    10. ')' → logprob: -16.09908676147461

Token 544: ' reach' (ID: 7627)
  Prédit: 'reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reach' → logprob: -0.008638204075396061
    2. ' reach' → logprob: -4.758638381958008
    3. 'next' → logprob: -10.758638381958008
    4. '   ' → logprob: -13.883638381958008
    5. ' ' → logprob: -14.758638381958008
    6. '
' → logprob: -14.758638381958008
    7. ' next' → logprob: -15.133638381958008
    8. '  ' → logprob: -16.133638381958008
    9. 'reachable' → logprob: -16.383638381958008
    10. '    ' → logprob: -16.508638381958008

Token 545: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.41076210141181946
    2. '))
' → logprob: -1.160762071609497
    3. ')' → logprob: -3.785762071609497
    4. '               ' → logprob: -7.410762310028076
    5. '           ' → logprob: -9.035761833190918
    6. ')
' → logprob: -9.660761833190918
    7. '))
' → logprob: -10.160761833190918
    8. ' ))
' → logprob: -10.535761833190918
    9. '                   ' → logprob: -10.660761833190918
    10. ')+' → logprob: -11.410761833190918

Token 546: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00011653638648567721
    2. '
' → logprob: -10.250116348266602
    3. '       ' → logprob: -10.375116348266602
    4. '<|end|>' → logprob: -10.875116348266602
    5. '          ' → logprob: -11.750116348266602
    6. '```' → logprob: -12.000116348266602
    7. ',' → logprob: -12.625116348266602
    8. '               ' → logprob: -12.750116348266602
    9. ')' → logprob: -12.750116348266602
    10. '   ' → logprob: -13.375116348266602

Token 547: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6871864199638367
    2. ' if' → logprob: -0.8121864199638367
    3. 'if' (adapté à ' if') → logprob: -2.9371864795684814
    4. '       ' → logprob: -10.437186241149902
    5. '   ' → logprob: -10.937186241149902
    6. '<|end|>' → logprob: -11.187186241149902
    7. '```' → logprob: -11.687186241149902
    8. ' ' → logprob: -11.687186241149902
    9. '+' → logprob: -11.812186241149902
    10. 'If' → logprob: -12.062186241149902

Token 548: ' impossible' (ID: 19786)
  Prédit: 'im'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.04320288822054863
    2. ' impossible' → logprob: -3.5432028770446777
    3. 'not' → logprob: -4.668202877044678
    4. ' not' → logprob: -5.543202877044678
    5. 'possible' → logprob: -11.043203353881836
    6. '(im' → logprob: -11.293203353881836
    7. '   ' → logprob: -11.543203353881836
    8. ' imposible' → logprob: -12.668203353881836
    9. '	im' → logprob: -12.793203353881836
    10. 'Impossible' → logprob: -12.793203353881836

Token 549: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.44051966071128845
    2. ':' → logprob: -1.1905196905136108
    3. '               ' → logprob: -3.5655195713043213
    4. ' or' → logprob: -3.9405195713043213
    5. '           ' → logprob: -5.4405198097229
    6. ':return' → logprob: -10.065519332885742
    7. '       ' → logprob: -10.315519332885742
    8. '==' → logprob: -10.690519332885742
    9. '                   ' → logprob: -10.690519332885742
    10. '                       ' → logprob: -11.565519332885742

Token 550: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005922397132962942
    2. ' continue' → logprob: -5.255922317504883
    3. '           ' → logprob: -7.880922317504883
    4. ' continues' → logprob: -8.630922317504883
    5. 'continue' → logprob: -9.880922317504883
    6. ',' → logprob: -11.255922317504883
    7. '<|end|>' → logprob: -11.380922317504883
    8. '                   ' → logprob: -11.630922317504883
    9. ':
' → logprob: -11.755922317504883
    10. '=True' → logprob: -12.255922317504883

Token 551: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.3029468059539795
    2. '               ' → logprob: -2.0529468059539795
    3. 'continue' (adapté à ' continue') → logprob: -2.3029468059539795
    4. '           ' → logprob: -3.8029468059539795
    5. ' V' → logprob: -5.052947044372559
    6. 'V' → logprob: -5.552947044372559
    7. '   ' → logprob: -8.177947044372559
    8. ' ' → logprob: -9.802947044372559
    9. '       ' → logprob: -10.552947044372559
    10. ' if' → logprob: -10.802947044372559

Token 552: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00038443657103925943
    2. '       ' → logprob: -8.875384330749512
    3. '<|end|>' → logprob: -8.875384330749512
    4. '               ' → logprob: -10.500384330749512
    5. ',' → logprob: -10.875384330749512
    6. ' else' → logprob: -11.125384330749512
    7. '```' → logprob: -11.625384330749512
    8. '   ' → logprob: -11.875384330749512
    9. ' if' → logprob: -12.250384330749512
    10. '            
' → logprob: -12.375384330749512

Token 553: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002538296685088426
    2. '       ' → logprob: -9.250253677368164
    3. '<|end|>' → logprob: -9.875253677368164
    4. ' if' → logprob: -10.375253677368164
    5. '               ' → logprob: -10.750253677368164
    6. ',' → logprob: -11.375253677368164
    7. '```' → logprob: -11.625253677368164
    8. '   ' → logprob: -11.625253677368164
    9. ' else' → logprob: -12.000253677368164
    10. '	       ' → logprob: -12.750253677368164

Token 554: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.14042940735816956
    2. 'min' → logprob: -2.8904294967651367
    3. '           ' → logprob: -3.6404294967651367
    4. 'val' → logprob: -3.8904294967651367
    5. ' new' → logprob: -4.765429496765137
    6. 'nv' → logprob: -5.390429496765137
    7. 'tmp' → logprob: -5.640429496765137
    8. 'nd' → logprob: -5.890429496765137
    9. ' min' → logprob: -6.515429496765137
    10. 'temp' → logprob: -6.765429496765137

Token 555: 'V' (ID: 53)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.0098861800506711
    2. '_v' → logprob: -5.259886264801025
    3. '_V' → logprob: -5.509886264801025
    4. '_value' → logprob: -8.259885787963867
    5. 'V' → logprob: -8.634885787963867
    6. '_u' → logprob: -9.759885787963867
    7. '_' → logprob: -10.134885787963867
    8. ' =' → logprob: -10.634885787963867
    9. 'Val' → logprob: -10.759885787963867
    10. 'val' → logprob: -12.134885787963867

Token 556: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7379027605056763
    2. '=' → logprob: -1.2379027605056763
    3. '[u' → logprob: -1.6129027605056763
    4. '_u' → logprob: -4.112902641296387
    5. '=u' → logprob: -4.362902641296387
    6. 'u' → logprob: -5.862902641296387
    7. '_val' → logprob: -7.737902641296387
    8. '_value' → logprob: -9.737902641296387
    9. '   ' → logprob: -10.237902641296387
    10. '=[' → logprob: -10.362902641296387

Token 557: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002810007717926055
    2. ' ' → logprob: -8.25028133392334
    3. '   ' → logprob: -11.62528133392334
    4. '           ' → logprob: -12.00028133392334
    5. 'max' → logprob: -13.25028133392334
    6. '               ' → logprob: -14.00028133392334
    7. 'min' → logprob: -15.00028133392334
    8. '  ' → logprob: -15.25028133392334
    9. '                   ' → logprob: -15.50028133392334
    10. '             ' → logprob: -15.75028133392334

Token 558: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.466968650580384e-05
    2. ' ' → logprob: -10.375054359436035
    3. 'max' → logprob: -11.375054359436035
    4. 'min' → logprob: -11.875054359436035
    5. '   ' → logprob: -12.500054359436035
    6. '           ' → logprob: -14.375054359436035
    7. '(' → logprob: -16.25005531311035
    8. '  ' → logprob: -16.25005531311035
    9. '               ' → logprob: -16.75005531311035
    10. '
' → logprob: -16.87505531311035

Token 559: '+' (ID: 10)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.47407740354537964
    2. '+' → logprob: -0.9740774035453796
    3. '+
' → logprob: -15.474077224731445
    4. ' +
' → logprob: -16.474077224731445
    5. '＋' → logprob: -16.849077224731445
    6. '           ' → logprob: -17.474077224731445
    7. ' ' → logprob: -18.224077224731445
    8. '   ' → logprob: -18.349077224731445
    9. ' ' → logprob: -18.474077224731445
    10. '            ' → logprob: -18.724077224731445

Token 560: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -2.7968066206085496e-05
    2. ' max' → logprob: -10.500027656555176
    3. '(max' → logprob: -14.750027656555176
    4. 'min' → logprob: -20.875028610229492
    5. '	max' → logprob: -21.500028610229492
    6. '   ' → logprob: -21.500028610229492
    7. ',max' → logprob: -21.875028610229492
    8. '=max' → logprob: -22.500028610229492
    9. ':max' → logprob: -22.750028610229492
    10. '[max' → logprob: -23.000028610229492

Token 561: '(vals' (ID: 167053)
  Prédit: '(vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vals' → logprob: -1.8312570318812504e-05
    2. 'vals' → logprob: -11.375018119812012
    3. '(' → logprob: -12.125018119812012
    4. '(
' → logprob: -14.125018119812012
    5. '(val' → logprob: -15.625018119812012
    6. '(v' → logprob: -16.125019073486328
    7. '(vars' → logprob: -16.250019073486328
    8. '(values' → logprob: -17.000019073486328
    9. ' (' → logprob: -17.375019073486328
    10. ' vals' → logprob: -18.000019073486328

Token 562: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.061978328973054886
    2. ')' → logprob: -2.811978340148926
    3. ')
' → logprob: -11.686978340148926
    4. '           ' → logprob: -13.561978340148926
    5. ' )
' → logprob: -14.936978340148926
    6. ')

' → logprob: -15.061978340148926
    7. '       ' → logprob: -15.311978340148926
    8. '   ' → logprob: -17.06197738647461
    9. '               ' → logprob: -17.31197738647461
    10. ' )' → logprob: -17.43697738647461

Token 563: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005393316387198865
    2. '
' → logprob: -8.250539779663086
    3. '<|end|>' → logprob: -8.750539779663086
    4. '       ' → logprob: -9.500539779663086
    5. '            
' → logprob: -11.375539779663086
    6. '<|end|>' → logprob: -11.625539779663086
    7. '          ' → logprob: -11.875539779663086
    8. '               ' → logprob: -12.375539779663086
    9. ' if' → logprob: -12.750539779663086
    10. '   ' → logprob: -13.250539779663086

Token 564: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.564688503742218
    2. 'if' (adapté à ' if') → logprob: -1.3146884441375732
    3. '           ' → logprob: -1.8146884441375732
    4. '       ' → logprob: -12.064688682556152
    5. '   ' → logprob: -12.189688682556152
    6. '	if' → logprob: -13.814688682556152
    7. '<|end|>' → logprob: -14.064688682556152
    8. '          ' → logprob: -14.564688682556152
    9. '```' → logprob: -14.564688682556152
    10. ' ' → logprob: -14.564688682556152

Token 565: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.11331172287464142
    2. ' new' → logprob: -2.238311767578125
    3. 'V' → logprob: -7.738311767578125
    4. ' V' → logprob: -9.988311767578125
    5. '   ' → logprob: -12.488311767578125
    6. '           ' → logprob: -13.738311767578125
    7. '	new' → logprob: -14.488311767578125
    8. 'New' → logprob: -14.738311767578125
    9. '(new' → logprob: -15.363311767578125
    10. '新' → logprob: -15.488311767578125

Token 566: 'V' (ID: 53)
  Prédit: 'V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -1.7432603272027336e-06
    2. '[u' → logprob: -14.000001907348633
    3. ' V' → logprob: -14.625001907348633
    4. '```' → logprob: -15.875001907348633
    5. '
' → logprob: -16.250001907348633
    6. '   ' → logprob: -17.125001907348633
    7. '           ' → logprob: -17.375001907348633
    8. 'v' → logprob: -17.375001907348633
    9. '[V' → logprob: -17.625001907348633
    10. '[' → logprob: -17.750001907348633

Token 567: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.14331504702568054
    2. '<' → logprob: -2.018315076828003
    3. '<V' → logprob: -7.643314838409424
    4. '[' → logprob: -9.768315315246582
    5. '<v' → logprob: -10.143315315246582
    6. '<n' → logprob: -10.518315315246582
    7. '<int' → logprob: -11.768315315246582
    8. '<u' → logprob: -12.018315315246582
    9. ' ' → logprob: -12.893315315246582
    10. '<size' → logprob: -13.143315315246582

Token 568: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -7.493430894101039e-05
    2. ' V' → logprob: -9.500075340270996
    3. '   ' → logprob: -16.87507438659668
    4. '	V' → logprob: -19.00007438659668
    5. '=' → logprob: -19.25007438659668
    6. '           ' → logprob: -20.00007438659668
    7. '
' → logprob: -20.12507438659668
    8. ' ' → logprob: -20.12507438659668
    9. 'v' → logprob: -20.50007438659668
    10. '       ' → logprob: -20.50007438659668

Token 569: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: 0.0
    2. 'u' → logprob: -19.125
    3. '   ' → logprob: -20.5
    4. '           ' → logprob: -21.75
    5. '<u' → logprob: -21.875
    6. '```' → logprob: -22.0
    7. '(u' → logprob: -22.375
    8. '[v' → logprob: -22.625
    9. '       ' → logprob: -22.75
    10. '[
' → logprob: -23.25

Token 570: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.09110090136528015
    2. '[u' → logprob: -2.5911009311676025
    3. '):
' → logprob: -5.091100692749023
    4. ':
' → logprob: -5.841100692749023
    5. ']:' → logprob: -6.091100692749023
    6. ':' → logprob: -8.216100692749023
    7. '       ' → logprob: -8.466100692749023
    8. '           ' → logprob: -9.341100692749023
    9. ']' → logprob: -9.841100692749023
    10. '               ' → logprob: -9.966100692749023

Token 571: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0013901159400120378
    2. '           ' → logprob: -7.626389980316162
    3. ' V' → logprob: -8.37639045715332
    4. '                   ' → logprob: -8.37639045715332
    5. '                       ' → logprob: -8.62639045715332
    6. '                               ' → logprob: -9.37639045715332
    7. 'V' → logprob: -10.00139045715332
    8. '                           ' → logprob: -10.12639045715332
    9. '```' → logprob: -10.87639045715332
    10. '                
' → logprob: -11.50139045715332

Token 572: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' (adapté à ' V') → logprob: -0.1565532237291336
    2. '               ' → logprob: -2.406553268432617
    3. ' V' → logprob: -2.906553268432617
    4. '                   ' → logprob: -9.531553268432617
    5. '           ' → logprob: -10.156553268432617
    6. '                ' → logprob: -12.531553268432617
    7. '                       ' → logprob: -12.906553268432617
    8. '   ' → logprob: -13.031553268432617
    9. '```' → logprob: -13.031553268432617
    10. '       ' → logprob: -13.906553268432617

Token 573: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.9361264946837764e-07
    2. 'u' → logprob: -16.25
    3. '<u' → logprob: -19.5
    4. '(u' → logprob: -20.5
    5. '[user' → logprob: -20.5
    6. '[' → logprob: -21.0
    7. '[V' → logprob: -21.0
    8. '[v' → logprob: -21.125
    9. '```' → logprob: -21.375
    10. '[
' → logprob: -21.75

Token 574: ']=' (ID: 9539)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.9361264946837764e-07
    2. ']' → logprob: -16.375
    3. 'u' → logprob: -17.375
    4. '=u' → logprob: -17.625
    5. '=' → logprob: -18.625
    6. ' =' → logprob: -19.625
    7. '[' → logprob: -19.75
    8. '<u' → logprob: -20.625
    9. '(u' → logprob: -21.0
    10. '   ' → logprob: -21.0

Token 575: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -7.493430894101039e-05
    2. ' new' → logprob: -9.500075340270996
    3. '_new' → logprob: -22.12507438659668
    4. 'New' → logprob: -23.00007438659668
    5. '               ' → logprob: -23.25007438659668
    6. '	new' → logprob: -23.25007438659668
    7. '(new' → logprob: -23.62507438659668
    8. '[new' → logprob: -24.00007438659668
    9. '           ' → logprob: -24.12507438659668
    10. '新' → logprob: -24.75007438659668

Token 576: 'V' (ID: 53)
  Prédit: 'V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: 0.0
    2. ' V' → logprob: -18.625
    3. 'w' → logprob: -18.875
    4. 'W' → logprob: -19.625
    5. '
' → logprob: -21.0
    6. 'v' → logprob: -21.375
    7. 'ew' → logprob: -21.375
    8. '[' → logprob: -21.75
    9. '```' → logprob: -21.875
    10. 'В' → logprob: -22.5

Token 577: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003597760514821857
    2. '<|end|>' → logprob: -8.375359535217285
    3. '
' → logprob: -9.625359535217285
    4. '           ' → logprob: -11.375359535217285
    5. '                   ' → logprob: -11.500359535217285
    6. '              ' → logprob: -11.625359535217285
    7. '                
' → logprob: -11.625359535217285
    8. ',' → logprob: -12.125359535217285
    9. '<|end|>' → logprob: -12.125359535217285
    10. '                ' → logprob: -12.500359535217285

Token 578: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002165299083571881
    2. '<|end|>' → logprob: -9.125216484069824
    3. '                
' → logprob: -10.250216484069824
    4. '           ' → logprob: -11.000216484069824
    5. '              ' → logprob: -11.125216484069824
    6. '```' → logprob: -11.625216484069824
    7. '
' → logprob: -11.750216484069824
    8. '                   ' → logprob: -11.750216484069824
    9. '       ' → logprob: -12.250216484069824
    10. '                ' → logprob: -13.125216484069824

Token 579: ' changed' (ID: 9180)
  Prédit: ' changed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' changed' → logprob: -0.5890852808952332
    2. 'changed' (adapté à ' changed') → logprob: -0.8390852808952332
    3. '               ' → logprob: -4.339085102081299
    4. '                   ' → logprob: -12.339085578918457
    5. '           ' → logprob: -12.839085578918457
    6. '.changed' → logprob: -12.964085578918457
    7. '              ' → logprob: -14.214085578918457
    8. '_changed' → logprob: -14.714085578918457
    9. '                ' → logprob: -15.089085578918457
    10. '             ' → logprob: -15.839085578918457

Token 580: '=True' (ID: 7827)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01419064961373806
    2. '=True' → logprob: -4.514190673828125
    3. ' =' → logprob: -5.764190673828125
    4. '=true' → logprob: -18.139190673828125
    5. '=
' → logprob: -18.764190673828125
    6. '   ' → logprob: -19.389190673828125
    7. '＝' → logprob: -19.764190673828125
    8. ' ' → logprob: -19.889190673828125
    9. '_=' → logprob: -20.139190673828125
    10. '=

' → logprob: -20.514190673828125

Token 581: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 582: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1443886011838913
    2. '<|end|>' → logprob: -2.6443886756896973
    3. '
' → logprob: -3.2693886756896973
    4. '       ' → logprob: -4.019388675689697
    5. '    
' → logprob: -5.394388675689697
    6. '<|end|>' → logprob: -7.269388675689697
    7. 'return' → logprob: -7.644388675689697
    8. '	return' → logprob: -7.769388675689697
    9. '```' → logprob: -7.894388675689697
    10. '        
' → logprob: -8.269388198852539

Token 583: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 584: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.47414594888687134
    2. ' not' → logprob: -0.9741459488868713
    3. '   ' → logprob: -9.599145889282227
    4. '       ' → logprob: -14.224145889282227
    5. '
' → logprob: -15.599145889282227
    6. '(not' → logprob: -15.599145889282227
    7. '	not' → logprob: -16.349145889282227
    8. '           ' → logprob: -17.349145889282227
    9. '!' → logprob: -18.224145889282227
    10. '_not' → logprob: -18.724145889282227

Token 585: ' changed' (ID: 9180)
  Prédit: 'changed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'changed' → logprob: -0.47407716512680054
    2. ' changed' → logprob: -0.9740771651268005
    3. '_changed' → logprob: -16.349077224731445
    4. '.changed' → logprob: -16.599077224731445
    5. ' ' → logprob: -17.849077224731445
    6. '   ' → logprob: -19.349077224731445
    7. ' ' → logprob: -19.474077224731445
    8. 'ch' → logprob: -19.599077224731445
    9. 'Changed' → logprob: -19.599077224731445
    10. 'change' → logprob: -20.349077224731445

Token 586: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1641537845134735
    2. '           ' → logprob: -2.164153814315796
    3. ':
' → logprob: -3.789153814315796
    4. '       ' → logprob: -4.289153575897217
    5. '   ' → logprob: -9.164154052734375
    6. 'break' → logprob: -10.289154052734375
    7. '               ' → logprob: -10.664154052734375
    8. ' break' → logprob: -11.414154052734375
    9. '	break' → logprob: -11.539154052734375
    10. '.' → logprob: -12.789154052734375

Token 587: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008132012444548309
    2. '       ' → logprob: -7.250813007354736
    3. ':' → logprob: -10.000813484191895
    4. ' break' → logprob: -10.250813484191895
    5. ':
' → logprob: -12.000813484191895
    6. '		' → logprob: -12.125813484191895
    7. 'break' → logprob: -12.875813484191895
    8. '               ' → logprob: -13.125813484191895
    9. '	       ' → logprob: -13.375813484191895
    10. '	break' → logprob: -13.875813484191895

Token 588: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.5290411710739136
    2. '       ' → logprob: -1.5290411710739136
    3. 'break' (adapté à ' break') → logprob: -2.279041290283203
    4. '           ' → logprob: -2.404041290283203
    5. '	break' → logprob: -7.279041290283203
    6. '   ' → logprob: -7.404041290283203
    7. '               ' → logprob: -10.654041290283203
    8. '
' → logprob: -11.904041290283203
    9. '_break' → logprob: -11.904041290283203
    10. '		' → logprob: -12.029041290283203

Token 589: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.014000249095261097
    2. '   ' → logprob: -4.639000415802002
    3. '<|end|>' → logprob: -5.764000415802002
    4. '    
' → logprob: -7.139000415802002
    5. '

' → logprob: -9.263999938964844
    6. '
' → logprob: -9.763999938964844
    7. '  
' → logprob: -10.013999938964844
    8. 'if' → logprob: -10.513999938964844
    9. '```' → logprob: -10.763999938964844
    10. '<|end|>' → logprob: -11.763999938964844

Token 590: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6539075374603271
    2. '   ' → logprob: -1.4039075374603271
    3. '
' → logprob: -2.153907537460327
    4. ' if' → logprob: -2.403907537460327
    5. '```' → logprob: -4.153907775878906
    6. '    
' → logprob: -5.028907775878906
    7. 'return' → logprob: -6.278907775878906
    8. 'for' → logprob: -6.403907775878906
    9. 'print' → logprob: -7.153907775878906
    10. ' for' → logprob: -7.903907775878906

Token 591: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.44438275694847107
    2. 'if' → logprob: -1.1943827867507935
    3. '   ' → logprob: -3.069382667541504
    4. ' if' → logprob: -5.194382667541504
    5. 'return' → logprob: -5.944382667541504
    6. '
' → logprob: -7.569382667541504
    7. ' print' → logprob: -7.694382667541504
    8. 'for' → logprob: -8.694382667541504
    9. '```' → logprob: -9.319382667541504
    10. ' return' → logprob: -10.944382667541504

Token 592: '("' (ID: 568)
  Prédit: '(V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.01847638189792633
    2. '(' → logprob: -4.018476486206055
    3. '(-' → logprob: -8.643476486206055
    4. '((' → logprob: -9.518476486206055
    5. '('' → logprob: -9.643476486206055
    6. '("' → logprob: -12.018476486206055
    7. '(f' → logprob: -13.643476486206055
    8. '(""' → logprob: -13.768476486206055
    9. '()' → logprob: -13.893476486206055
    10. '(min' → logprob: -14.268476486206055

Token 593: 'IMP' (ID: 67171)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.057540372014045715
    2. '-' → logprob: -2.9325404167175293
    3. '-V' → logprob: -6.307540416717529
    4. '"' → logprob: -7.432540416717529
    5. '(V' → logprob: -9.432539939880371
    6. '0' → logprob: -9.432539939880371
    7. ' V' → logprob: -9.807539939880371
    8. ' -' → logprob: -11.932539939880371
    9. '{' → logprob: -13.182539939880371
    10. '""' → logprob: -13.432539939880371

Token 594: 'OSS' (ID: 26496)
  Prédit: 'OSS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OSS' → logprob: -4.203409844194539e-05
    2. 'OS' → logprob: -10.625041961669922
    3. 'O' → logprob: -11.500041961669922
    4. 'P' → logprob: -12.125041961669922
    5. '"' → logprob: -13.750041961669922
    6. '[' → logprob: -15.500041961669922
    7. '``' → logprob: -15.750041961669922
    8. '`' → logprob: -16.250041961669922
    9. 'oss' → logprob: -16.375041961669922
    10. 'Possible' → logprob: -16.500041961669922

Token 595: 'IBLE' (ID: 22408)
  Prédit: 'IBLE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IBLE' → logprob: -0.0008378617349080741
    2. 'ISIBLE' → logprob: -7.750837802886963
    3. 'S' → logprob: -8.500838279724121
    4. 'IABLE' → logprob: -10.000838279724121
    5. 'SS' → logprob: -10.125838279724121
    6. 'ISS' → logprob: -10.375838279724121
    7. 'IB' → logprob: -10.500838279724121
    8. 'OSS' → logprob: -10.500838279724121
    9. 'ESS' → logprob: -11.750838279724121
    10. '"' → logprob: -12.375838279724121

Token 596: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.014558679424226284
    2. '")' → logprob: -4.264558792114258
    3. 'if' → logprob: -7.889558792114258
    4. ' if' → logprob: -11.139558792114258
    5. ')' → logprob: -12.639558792114258
    6. '")
' → logprob: -14.014558792114258
    7. 'else' → logprob: -14.639558792114258
    8. ' or' → logprob: -14.764558792114258
    9. '   ' → logprob: -15.014558792114258
    10. ')"' → logprob: -15.139558792114258

Token 597: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004935794277116656
    2. ' if' → logprob: -8.375494003295898
    3. 'if' → logprob: -8.750494003295898
    4. '")' → logprob: -9.875494003295898
    5. '   ' → logprob: -10.250494003295898
    6. ' or' → logprob: -11.625494003295898
    7. ' )' → logprob: -13.250494003295898
    8. ')
' → logprob: -13.250494003295898
    9. ',' → logprob: -13.625494003295898
    10. ')")' → logprob: -13.750494003295898

Token 598: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.011048170737922192
    2. ' V' → logprob: -4.511048316955566
    3. '   ' → logprob: -15.761048316955566
    4. ' ' → logprob: -16.01104736328125
    5. '(V' → logprob: -16.01104736328125
    6. 'all' → logprob: -17.88604736328125
    7. ' all' → logprob: -17.88604736328125
    8. '	V' → logprob: -18.26104736328125
    9. ' ' → logprob: -18.38604736328125
    10. '  ' → logprob: -18.38604736328125

Token 599: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0017144508892670274
    2. '[u' → logprob: -6.37671422958374
    3. '[user' → logprob: -11.751714706420898
    4. ' [' → logprob: -13.626714706420898
    5. '   ' → logprob: -14.376714706420898
    6. '```' → logprob: -14.876714706420898
    7. '[input' → logprob: -14.876714706420898
    8. '\[' → logprob: -15.126714706420898
    9. '[start' → logprob: -15.501714706420898
    10. '[a' → logprob: -15.501714706420898

Token 600: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.0259150157216936e-05
    2. 'a' → logprob: -10.12505054473877
    3. ' ' → logprob: -12.12505054473877
    4. '[' → logprob: -12.87505054473877
    5. '   ' → logprob: -14.00005054473877
    6. 'u' → logprob: -15.00005054473877
    7. '
' → logprob: -15.87505054473877
    8. 'n' → logprob: -15.87505054473877
    9. '[a' → logprob: -16.000049591064453
    10. 'user' → logprob: -16.125049591064453

Token 601: ']==' (ID: 34128)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.01311587542295456
    2. ' ==' → logprob: -4.388115882873535
    3. ']==' → logprob: -8.138115882873535
    4. '[' → logprob: -8.388115882873535
    5. '>' → logprob: -10.638115882873535
    6. '==-' → logprob: -10.763115882873535
    7. ']' → logprob: -11.138115882873535
    8. ')==' → logprob: -11.888115882873535
    9. '>=' → logprob: -12.263115882873535
    10. '!=' → logprob: -12.388115882873535

Token 602: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.00014036978245712817
    2. '10' → logprob: -8.875140190124512
    3. ' INF' → logprob: -15.375140190124512
    4. 'IN' → logprob: -15.875140190124512
    5. 'inf' → logprob: -16.500141143798828
    6. '_INF' → logprob: -17.125141143798828
    7. 'Inf' → logprob: -17.625141143798828
    8. '100' → logprob: -18.500141143798828
    9. '-INF' → logprob: -18.500141143798828
    10. '```' → logprob: -18.750141143798828

Token 603: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.31340086460113525
    2. 'else' → logprob: -1.3134008646011353
    3. '   ' → logprob: -9.563401222229004
    4. ')' → logprob: -9.688401222229004
    5. '	else' → logprob: -13.188401222229004
    6. '    ' → logprob: -13.438401222229004
    7. '```' → logprob: -13.563401222229004
    8. '     ' → logprob: -14.563401222229004
    9. '        ' → logprob: -14.813401222229004
    10. ' ' → logprob: -14.813401222229004

Token 604: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -3.547789674485102e-05
    2. ' V' → logprob: -10.250035285949707
    3. '   ' → logprob: -19.000036239624023
    4. '(V' → logprob: -22.875036239624023
    5. '	V' → logprob: -23.000036239624023
    6. ' ' → logprob: -23.500036239624023
    7. '  ' → logprob: -24.250036239624023
    8. '
' → logprob: -24.375036239624023
    9. ')V' → logprob: -24.375036239624023
    10. 'v' → logprob: -24.875036239624023

Token 605: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '[u' → logprob: -15.375
    3. '[V' → logprob: -16.5
    4. '0' → logprob: -17.375
    5. 'V' → logprob: -19.0
    6. '```' → logprob: -19.375
    7. ' [' → logprob: -19.5
    8. '(' → logprob: -19.875
    9. '[v' → logprob: -20.0
    10. '   ' → logprob: -20.25

Token 606: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.625
    3. '[' → logprob: -19.125
    4. '```' → logprob: -20.125
    5. '   ' → logprob: -22.0
    6. '０' → logprob: -22.625
    7. '۰' → logprob: -22.875
    8. ']' → logprob: -23.75
    9. '``' → logprob: -23.875
    10. '  ' → logprob: -24.25

Token 607: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.816093228830141e-06
    2. '})' → logprob: -13.75000286102295
    3. ' )' → logprob: -14.37500286102295
    4. '+' → logprob: -15.12500286102295
    5. '())' → logprob: -15.62500286102295
    6. '}' → logprob: -15.62500286102295
    7. ')}' → logprob: -15.75000286102295
    8. '))' → logprob: -15.87500286102295
    9. '")' → logprob: -16.375001907348633
    10. '+)' → logprob: -16.625001907348633

Token 608: 'main' (ID: 7731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 609: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 607
Tokens correctement prédits (1ère position, stricte): 223
Tokens correctement prédits (1ère position, avec adaptation): 239
Tokens correctement prédits (top 10): 455
Précision stricte (1ère position): 36.74%
Précision adaptée (1ère position): 39.37%
Précision (top 10): 74.96%
================================================================================
