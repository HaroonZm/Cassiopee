================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:40:24
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import heapq
sys.setrecursionlimit(10**7)
input = sys.stdin.readline

N, M, X = map(int, input().split())
H = [int(input()) for _ in range(N)]

graph = [[] for _ in range(N)]
for _ in range(M):
    A, B, T = map(int, input().split())
    graph[A-1].append((B-1, T))
    graph[B-1].append((A-1, T))

# dist[node] = minimal time to reach node at its top (height H[node])
# but we can be at any height between 0 and H[node]
# So we consider time to move vertically to the top each time before flying away or at the end.
# Approach:
# We'll use Dijkstra with states (node, height)
# But height range is too large, so we use an idea:
# For each node, keep minimal time to reach any height,
# because moving up/down costs 1 s per meter, we can always adjust height after arrival.

# Instead, we store dist[node] = minimal time to reach node at some height, but we record it as the minimal time at top height
# when arriving at node at arbitrary height h, we can always pay (H[node] - h) seconds to climb to top.

# We will consider states only at the top of each tree to simplify.
# From starting point: node 0 at height X, time is X (to climb from 0 to X)

# But initial position is (0, X)
# We can consider the initial time as X (to climb from 0 to X)
# Then from there, for each edge (u,v,t), JOI can fly only if:
# current height h_u satisfies h_u - t >= 0 and h_u - t <= H[v]
# Since we only consider states at top of tree u (height H[u]), we can try to adjust height by going up/down before flying.
# So at node u, if we want to fly to v which costs time t:
# We need height h_u so that:
# h_u - t >= 0
# h_u - t <= H[v]
# So h_u >= t and h_u <= H[v] + t

# Since h_u <= H[u], h_u is in [0,H[u]]
# So feasible h_u must satisfy:
# max(t,0) <= h_u <= min(H[u], H[v] + t)

# To fly, JOI must climb or descend from top H[u] to h_u, then fly, then arrive at height h_u - t in v,
# then after arrival, need to climb from that height to top H[v].

# Total cost to go from node u to node v with current cost dist[u]:
# climb/descend time on u side: abs(H[u]-h_u)
# fly time: t
# climb time on v side: H[v] - (h_u - t) = H[v] - h_u + t
# total = abs(H[u] - h_u) + t + H[v] - h_u + t
#       = abs(H[u] - h_u) + H[v] - h_u + 2t

# We want to minimize total time over h_u in feasible range.

# Try candidates h_u:
# - h_u = t (lowest possible)
# - h_u = H[v] + t (highest possible, capped by H[u])
# - or h_u = H[u] (start from top)

# We'll try h_u = max(t,0), h_u = min(H[u], H[v] + t), and h_u = H[u]

# We'll pick the minimal among them.

INF = 1 << 60
dist = [INF] * N
dist[0] = X  # initial: climb from 0 to X on tree 1, time X

hq = []
heapq.heappush(hq, (X, 0))

while hq:
    cur_time, u = heapq.heappop(hq)
    if dist[u] < cur_time:
        continue
    if u == N-1:
        # we want to be at top of tree N, dist[u] already includes cost to climb to top
        break
    for v, t in graph[u]:
        # feasible h_u range
        low = t
        high = H[v] + t
        high = min(high, H[u])
        low = max(low, 0)
        if low > high:
            continue  # no feasible h_u

        candidates = []
        # candidate 1: low
        candidates.append(low)
        # candidate 2: high
        candidates.append(high)
        # candidate 3: H[u]
        candidates.append(H[u])

        min_cost = INF
        chosen_h = None
        for h_u in candidates:
            if h_u < low or h_u > high:
                continue
            cost = cur_time + abs(H[u] - h_u) + t + (H[v] - (h_u - t)) + t
            # cost explained:
            # - abs(H[u] - h_u): climb/descend on u before flying
            # - t: flying time
            # - H[v] - (h_u - t): climb on v after flying
            # - t: flying time counted again? Wait, flying time t is once only, remove second t
            # Actually, flying time counted twice in above.
            # Correct formula is: abs(H[u] - h_u) + t + (H[v] - (h_u - t))
            cost = cur_time + abs(H[u] - h_u) + t + (H[v] - (h_u - t))
            if cost < min_cost:
                min_cost = cost
                chosen_h = h_u
        if min_cost < dist[v]:
            dist[v] = min_cost
            heapq.heappush(hq, (min_cost, v))

if dist[N-1] == INF:
    print(-1)
else:
    print(dist[N-1])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.43386155366897583
    2. '.' → logprob: -1.183861494064331
    3. 'import' → logprob: -4.18386173248291
    4. '\' → logprob: -4.43386173248291
    5. 'newline' → logprob: -5.18386173248291
    6. '<|end|>' → logprob: -5.55886173248291
    7. '
' → logprob: -5.93386173248291
    8. '```' → logprob: -6.55886173248291
    9. '' → logprob: -7.05886173248291
    10. '<|end|>' → logprob: -7.18386173248291

Token 4: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0006277294596657157
    2. 'os' → logprob: -7.375627517700195
    3. ' math' → logprob: -14.500627517700195
    4. ' re' → logprob: -15.375627517700195
    5. '"os' → logprob: -15.625627517700195
    6. ' json' → logprob: -16.125627517700195
    7. '_os' → logprob: -17.000627517700195
    8. '	os' → logprob: -17.625627517700195
    9. ' io' → logprob: -18.125627517700195
    10. ' argparse' → logprob: -18.250627517700195

Token 5: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.3663626305060461e-05
    2. '.' → logprob: -11.37501335144043
    3. '#' → logprob: -14.75001335144043
    4. 'queue' → logprob: -14.75001335144043
    5. '_' → logprob: -15.12501335144043
    6. '=' → logprob: -15.37501335144043
    7. 'ify' → logprob: -15.50001335144043
    8. '[' → logprob: -15.75001335144043
    9. 'space' → logprob: -16.00001335144043
    10. 'u' → logprob: -16.62501335144043

Token 6: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7791579961776733
    2. '\n' → logprob: -1.2791579961776733
    3. '\' → logprob: -1.7791579961776733
    4. '
' → logprob: -2.779158115386963
    5. '```' → logprob: -5.029158115386963
    6. '

' → logprob: -5.029158115386963
    7. '' → logprob: -5.654158115386963
    8. 'import' → logprob: -5.654158115386963
    9. '.
' → logprob: -5.904158115386963
    10. '<|end|>' → logprob: -6.029158115386963

Token 7: 'sys' (ID: 17324)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.8772709369659424
    2. '.' → logprob: -1.0022709369659424
    3. '\n' → logprob: -1.7522709369659424
    4. '
' → logprob: -3.8772709369659424
    5. '

' → logprob: -5.377270698547363
    6. '```' → logprob: -5.502270698547363
    7. '.
' → logprob: -5.877270698547363
    8. 'def' → logprob: -6.127270698547363
    9. '<|end|>' → logprob: -6.252270698547363
    10. '' → logprob: -6.502270698547363

Token 8: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -3.070975071750581e-05
    2. '.exit' → logprob: -12.000030517578125
    3. '.readline' → logprob: -12.750030517578125
    4. ' .' → logprob: -12.875030517578125
    5. '.​' → logprob: -13.000030517578125
    6. '.stdout' → logprob: -13.125030517578125
    7. '.setdefault' → logprob: -13.250030517578125
    8. '.)' → logprob: -13.750030517578125
    9. '.argv' → logprob: -13.875030517578125
    10. '.import' → logprob: -14.000030517578125

Token 9: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.04819926992058754
    2. 't' → logprob: -4.54819917678833
    3. 'trace' → logprob: -4.54819917678833
    4. 'limit' → logprob: -4.54819917678833
    5. '_limit' → logprob: -5.67319917678833
    6. 'set' → logprob: -5.92319917678833
    7. '_rec' → logprob: -6.04819917678833
    8. 's' → logprob: -6.29819917678833
    9. 'rl' → logprob: -6.79819917678833
    10. 'f' → logprob: -6.92319917678833

Token 10: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0005701907211914659
    2. 'urs' → logprob: -7.750570297241211
    3. 'limit' → logprob: -10.000570297241211
    4. 'ur' → logprob: -10.125570297241211
    5. 'ursive' → logprob: -10.125570297241211
    6. '_limit' → logprob: -12.625570297241211
    7. 'ursor' → logprob: -12.625570297241211
    8. 'urf' → logprob: -13.250570297241211
    9. 'urse' → logprob: -13.375570297241211
    10. 'ursively' → logprob: -13.750570297241211

Token 11: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.0028539709746837616
    2. '_limit' → logprob: -5.877853870391846
    3. ' limit' → logprob: -10.252854347229004
    4. 'depth' → logprob: -12.002854347229004
    5. '_depth' → logprob: -12.627854347229004
    6. 'lim' → logprob: -13.127854347229004
    7. '_LIMIT' → logprob: -13.877854347229004
    8. '-limit' → logprob: -14.627854347229004
    9. '.limit' → logprob: -15.127854347229004
    10. 'Limit' → logprob: -15.127854347229004

Token 12: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3663626305060461e-05
    2. '(
' → logprob: -12.12501335144043
    3. ' (' → logprob: -12.62501335144043
    4. '(

' → logprob: -12.75001335144043
    5. '```' → logprob: -14.50001335144043
    6. '((' → logprob: -14.62501335144043
    7. '("("' → logprob: -14.87501335144043
    8. '(None' → logprob: -15.87501335144043
    9. '(
' → logprob: -16.25001335144043
    10. '()' → logprob: -16.37501335144043

Token 13: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.006718571297824383
    2. '100' → logprob: -5.006718635559082
    3. '500' → logprob: -13.756718635559082
    4. ' ' → logprob: -14.006718635559082
    5. '200' → logprob: -14.756718635559082
    6. '300' → logprob: -14.881718635559082
    7. '999' → logprob: -15.256718635559082
    8. '1' → logprob: -16.131717681884766
    9. '150' → logprob: -16.631717681884766
    10. '   ' → logprob: -16.881717681884766

Token 14: '**' (ID: 410)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.35439997911453247
    2. '0' → logprob: -1.6043999195098877
    3. '7' → logprob: -3.1043999195098877
    4. '00' → logprob: -3.4793999195098877
    5. '6' → logprob: -3.8543999195098877
    6. '5' → logprob: -7.729400157928467
    7. '8' → logprob: -10.604399681091309
    8. '07' → logprob: -10.729399681091309
    9. '**' → logprob: -10.979399681091309
    10. '007' → logprob: -11.479399681091309

Token 15: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00017362393555231392
    2. '9' → logprob: -9.000173568725586
    3. '8' → logprob: -10.125173568725586
    4. '6' → logprob: -11.500173568725586
    5. '```' → logprob: -19.375173568725586
    6. '**' → logprob: -20.375173568725586
    7. ' ' → logprob: -20.500173568725586
    8. '``' → logprob: -21.375173568725586
    9. '

' → logprob: -21.625173568725586
    10. ')' → logprob: -22.250173568725586

Token 16: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ')
' → logprob: -14.625000953674316
    3. ' )' → logprob: -15.000000953674316
    4. '))' → logprob: -15.875000953674316
    5. ')

' → logprob: -18.250001907348633
    6. '```' → logprob: -18.625001907348633
    7. '),' → logprob: -19.000001907348633
    8. ' ' → logprob: -19.125001907348633
    9. ')))' → logprob: -19.250001907348633
    10. '）' → logprob: -19.375001907348633

Token 17: 'input' (ID: 2586)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6544995307922363
    2. '
' → logprob: -1.4044995307922363
    3. '\' → logprob: -2.2794995307922363
    4. 'class' → logprob: -2.7794995307922363
    5. '```' → logprob: -3.2794995307922363
    6. '

' → logprob: -4.029499530792236
    7. '\n' → logprob: -4.779499530792236
    8. '
' → logprob: -6.029499530792236
    9. '' → logprob: -6.779499530792236
    10. 'n' → logprob: -7.154499530792236

Token 18: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005781737272627652
    2. '()' → logprob: -8.375577926635742
    3. '('' → logprob: -9.125577926635742
    4. '.' → logprob: -9.875577926635742
    5. '("("' → logprob: -10.250577926635742
    6. ')' → logprob: -10.625577926635742
    7. '```' → logprob: -10.625577926635742
    8. ''' → logprob: -11.125577926635742
    9. '=' → logprob: -11.125577926635742
    10. '(
' → logprob: -11.375577926635742

Token 19: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.266124427318573
    2. ' input' → logprob: -2.2661244869232178
    3. 'input' → logprob: -2.5161244869232178
    4. 'sys' → logprob: -3.0161244869232178
    5. ' lambda' → logprob: -9.016124725341797
    6. 'lambda' → logprob: -10.516124725341797
    7. '=sys' → logprob: -11.891124725341797
    8. '	sys' → logprob: -12.141124725341797
    9. ' ' → logprob: -12.266124725341797
    10. '(sys' → logprob: -12.766124725341797

Token 20: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0001322639436693862
    2. '.readline' → logprob: -9.75013256072998
    3. ' .' → logprob: -10.12513256072998
    4. '.stdin' → logprob: -11.50013256072998
    5. '.​' → logprob: -12.75013256072998
    6. '[' → logprob: -12.87513256072998
    7. '.\' → logprob: -13.12513256072998
    8. '.`' → logprob: -13.12513256072998
    9. '.
' → logprob: -13.37513256072998
    10. '.

' → logprob: -13.50013256072998

Token 21: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0002695608709473163
    2. '.' → logprob: -8.875269889831543
    3. '.read' → logprob: -9.500269889831543
    4. '.buffer' → logprob: -9.875269889831543
    5. '.readlines' → logprob: -12.875269889831543
    6. 'read' → logprob: -15.375269889831543
    7. 'buffer' → logprob: -15.625269889831543
    8. '.stdin' → logprob: -15.750269889831543
    9. ' readline' → logprob: -16.000268936157227
    10. '.Read' → logprob: -16.750268936157227

Token 22: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1166611909866333
    2. '\n' → logprob: -1.7416611909866333
    3. '(' → logprob: -2.1166610717773438
    4. '
' → logprob: -2.2416610717773438
    5. 'n' → logprob: -2.2416610717773438
    6. '

' → logprob: -3.6166610717773438
    7. '\' → logprob: -3.7416610717773438
    8. '```' → logprob: -3.8666610717773438
    9. '(n' → logprob: -3.9916610717773438
    10. '()' → logprob: -4.116661071777344

Token 23: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7281761169433594
    2. 'class' → logprob: -0.9781761169433594
    3. 'n' → logprob: -1.9781761169433594
    4. 'd' → logprob: -6.853176116943359
    5. 'from' → logprob: -7.228176116943359
    6. 'N' → logprob: -7.353176116943359
    7. '
' → logprob: -8.85317611694336
    8. '\' → logprob: -8.85317611694336
    9. '```' → logprob: -10.35317611694336
    10. '

' → logprob: -10.47817611694336

Token 24: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8292087912559509
    2. '=' → logprob: -1.2042088508605957
    3. ' =' → logprob: -1.5792088508605957
    4. ')' → logprob: -3.4542088508605957
    5. ',' → logprob: -4.579208850860596
    6. '<|end|>' → logprob: -5.204208850860596
    7. '>' → logprob: -5.829208850860596
    8. '[' → logprob: -6.454208850860596
    9. '  ' → logprob: -6.704208850860596
    10. ' )' → logprob: -7.204208850860596

Token 25: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.5954596400260925
    2. ' ' → logprob: -0.9704596400260925
    3. 'M' → logprob: -2.8454596996307373
    4. ' K' → logprob: -4.595459461212158
    5. 'K' → logprob: -7.470459461212158
    6. 'space' → logprob: -7.845459461212158
    7. 'int' → logprob: -8.970459938049316
    8. '  ' → logprob: -9.470459938049316
    9. ' space' → logprob: -9.720459938049316
    10. 'input' → logprob: -10.345459938049316

Token 26: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22836802899837494
    2. '=' → logprob: -1.6033680438995361
    3. ',' → logprob: -5.853367805480957
    4. ' ,' → logprob: -9.728367805480957
    5. ' ' → logprob: -11.478367805480957
    6. '=input' → logprob: -12.978367805480957
    7. '<|end|>' → logprob: -12.978367805480957
    8. ')' → logprob: -13.478367805480957
    9. '[' → logprob: -14.353367805480957
    10. ' =)' → logprob: -14.603367805480957

Token 27: ' X' (ID: 2127)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0503324456512928
    2. ' =' → logprob: -3.050332546234131
    3. '=' → logprob: -7.050332546234131
    4. ' K' → logprob: -8.050332069396973
    5. '  ' → logprob: -9.050332069396973
    6. ' map' → logprob: -9.175332069396973
    7. 'map' → logprob: -9.800332069396973
    8. ',' → logprob: -10.300332069396973
    9. 'input' → logprob: -10.550332069396973
    10. ' ,' → logprob: -10.550332069396973

Token 28: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1603350192308426
    2. ' =' → logprob: -1.9103350639343262
    3. ',' → logprob: -9.160334587097168
    4. '=input' → logprob: -12.285334587097168
    5. ')' → logprob: -15.410334587097168
    6. '=list' → logprob: -15.910334587097168
    7. '=

' → logprob: -15.910334587097168
    8. '=int' → logprob: -16.035335540771484
    9. ' ' → logprob: -16.160335540771484
    10. '=sys' → logprob: -16.535335540771484

Token 29: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.018151817843317986
    2. 'map' → logprob: -4.018151760101318
    3. ' input' → logprob: -14.393152236938477
    4. '	map' → logprob: -14.893152236938477
    5. '(map' → logprob: -15.518152236938477
    6. 'input' → logprob: -15.518152236938477
    7. ' ' → logprob: -15.643152236938477
    8. ' mapa' → logprob: -16.143152236938477
    9. ' ma' → logprob: -16.768152236938477
    10. ' list' → logprob: -17.143152236938477

Token 30: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5892465710639954
    2. '(int' → logprob: -0.8392465710639954
    3. '(lambda' → logprob: -4.96424674987793
    4. '(input' → logprob: -5.46424674987793
    5. '(str' → logprob: -6.33924674987793
    6. '(list' → logprob: -9.08924674987793
    7. '(tuple' → logprob: -10.96424674987793
    8. '(
' → logprob: -11.21424674987793
    9. '(

' → logprob: -11.58924674987793
    10. '(eval' → logprob: -11.83924674987793

Token 31: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.027367297559976578
    2. ',input' → logprob: -3.902367353439331
    3. '(' → logprob: -5.277367115020752
    4. ',' → logprob: -6.902367115020752
    5. 'input' → logprob: -7.902367115020752
    6. '(int' → logprob: -8.90236759185791
    7. '(sys' → logprob: -9.77736759185791
    8. '=input' → logprob: -10.40236759185791
    9. ' (' → logprob: -10.52736759185791
    10. '```' → logprob: -11.40236759185791

Token 32: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.029757659882307053
    2. ' input' → logprob: -3.5297577381134033
    3. 'sys' → logprob: -12.404757499694824
    4. ' sys' → logprob: -13.029757499694824
    5. ',input' → logprob: -15.404757499694824
    6. '(input' → logprob: -15.529757499694824
    7. ' ' → logprob: -15.654757499694824
    8. ')' → logprob: -16.52975845336914
    9. '<input' → logprob: -16.65475845336914
    10. '=input' → logprob: -16.77975845336914

Token 33: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.06294838339090347
    2. '())' → logprob: -3.18794846534729
    3. '()' → logprob: -3.93794846534729
    4. '(' → logprob: -9.187948226928711
    5. '()))' → logprob: -9.937948226928711
    6. ')' → logprob: -10.812948226928711
    7. '());' → logprob: -11.062948226928711
    8. '()),' → logprob: -11.437948226928711
    9. '();)' → logprob: -11.812948226928711
    10. '()]' → logprob: -12.062948226928711

Token 34: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.006838868372142315
    2. 'strip' → logprob: -5.006838798522949
    3. 'rstrip' → logprob: -9.00683879852295
    4. '(split' → logprob: -14.88183879852295
    5. ' split' → logprob: -15.00683879852295
    6. 'read' → logprob: -16.256839752197266
    7. ')' → logprob: -16.881839752197266
    8. 'spl' → logprob: -17.881839752197266
    9. '_split' → logprob: -18.506839752197266
    10. 'plit' → logprob: -18.756839752197266

Token 35: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.690834273584187e-05
    2. '))' → logprob: -10.75003719329834
    3. '())' → logprob: -11.87503719329834
    4. '()' → logprob: -12.75003719329834
    5. '`)' → logprob: -12.75003719329834
    6. '),' → logprob: -14.37503719329834
    7. '(' → logprob: -14.50003719329834
    8. ')`' → logprob: -15.25003719329834
    9. ' )' → logprob: -15.50003719329834
    10. ')))' → logprob: -15.50003719329834

Token 36: 'H' (ID: 39)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.27114853262901306
    2. 'dist' → logprob: -1.7711485624313354
    3. 'distance' → logprob: -4.396148681640625
    4. ' graph' → logprob: -4.396148681640625
    5. 'times' → logprob: -4.396148681640625
    6. 'roads' → logprob: -5.396148681640625
    7. 'city' → logprob: -5.896148681640625
    8. 'time' → logprob: -5.896148681640625
    9. 'road' → logprob: -6.146148681640625
    10. 'town' → logprob: -6.271148681640625

Token 37: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.656960129737854
    2. ' =' → logprob: -0.781960129737854
    3. '[' → logprob: -4.0319600105285645
    4. '[]' → logprob: -6.0319600105285645
    5. '=[]' → logprob: -6.9069600105285645
    6. ',' → logprob: -7.2819600105285645
    7. '_' → logprob: -7.6569600105285645
    8. '=[' → logprob: -8.031960487365723
    9. '[i' → logprob: -8.281960487365723
    10. '[:]' → logprob: -8.656960487365723

Token 38: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.01654054783284664
    2. 'list' → logprob: -4.64154052734375
    3. ' [' → logprob: -5.39154052734375
    4. '(list' → logprob: -6.89154052734375
    5. '[' → logprob: -7.01654052734375
    6. ' []' → logprob: -9.01654052734375
    7. ' ' → logprob: -9.89154052734375
    8. '[list' → logprob: -9.89154052734375
    9. '(' → logprob: -10.64154052734375
    10. ' (' → logprob: -10.76654052734375

Token 39: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.002331170719116926
    2. ' int' → logprob: -6.627331256866455
    3. '0' → logprob: -7.127331256866455
    4. '(int' → logprob: -8.877330780029297
    5. ']int' → logprob: -10.002330780029297
    6. '[int' → logprob: -12.377330780029297
    7. ',int' → logprob: -12.627330780029297
    8. '<int' → logprob: -13.002330780029297
    9. '*' → logprob: -13.502330780029297
    10. ']' → logprob: -13.627330780029297

Token 40: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0744931697845459
    2. '(input' → logprob: -2.699493169784546
    3. '(x' → logprob: -5.574493408203125
    4. '(i' → logprob: -7.449493408203125
    5. ']' → logprob: -10.324493408203125
    6. '(sys' → logprob: -10.699493408203125
    7. '()]' → logprob: -10.824493408203125
    8. '(a' → logprob: -11.449493408203125
    9. '(line' → logprob: -11.449493408203125
    10. '(

' → logprob: -11.699493408203125

Token 41: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0002378673671046272
    2. '()]' → logprob: -9.000237464904785
    3. '()' → logprob: -9.500237464904785
    4. '().' → logprob: -10.875237464904785
    5. '()),' → logprob: -11.875237464904785
    6. '())
' → logprob: -11.875237464904785
    7. '()))' → logprob: -12.375237464904785
    8. ')' → logprob: -14.750237464904785
    9. ' ())' → logprob: -14.750237464904785
    10. '())

' → logprob: -14.750237464904785

Token 42: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00522961001843214
    2. '()]' → logprob: -5.755229473114014
    3. '())' → logprob: -6.255229473114014
    4. '(' → logprob: -9.630229949951172
    5. ')' → logprob: -10.130229949951172
    6. ' ()' → logprob: -11.630229949951172
    7. 'for' → logprob: -12.505229949951172
    8. '(i' → logprob: -13.130229949951172
    9. '(),' → logprob: -13.630229949951172
    10. '().' → logprob: -13.630229949951172

Token 43: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07291297614574432
    2. ' range' → logprob: -2.8229129314422607
    3. ' _' → logprob: -4.82291316986084
    4. 'range' → logprob: -6.32291316986084
    5. ' i' → logprob: -8.32291316986084
    6. ' ' → logprob: -8.32291316986084
    7. '(' → logprob: -8.57291316986084
    8. ' in' → logprob: -9.07291316986084
    9. '_range' → logprob: -9.32291316986084
    10. '	range' → logprob: -10.07291316986084

Token 44: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3376672863960266
    2. 'in' → logprob: -1.4626672267913818
    3. ' in' → logprob: -3.087667226791382
    4. ' range' → logprob: -4.712667465209961
    5. '(range' → logprob: -8.087667465209961
    6. '	range' → logprob: -10.712667465209961
    7. 'ange' → logprob: -11.712667465209961
    8. ' ' → logprob: -11.837667465209961
    9. '```' → logprob: -13.087667465209961
    10. 'ran' → logprob: -13.087667465209961

Token 45: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00015955790877342224
    2. ' range' → logprob: -8.75015926361084
    3. '(range' → logprob: -14.12515926361084
    4. '	range' → logprob: -15.50015926361084
    5. ')' → logprob: -16.625160217285156
    6. 'rang' → logprob: -17.625160217285156
    7. 'ran' → logprob: -17.875160217285156
    8. 'r' → logprob: -18.250160217285156
    9. '[' → logprob: -18.750160217285156
    10. '.range' → logprob: -18.875160217285156

Token 46: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0017374205635860562
    2. '(M' → logprob: -6.501737594604492
    3. '(' → logprob: -8.376737594604492
    4. 'N' → logprob: -13.001737594604492
    5. '(n' → logprob: -13.876737594604492
    6. ' (' → logprob: -14.126737594604492
    7. '(
' → logprob: -14.876737594604492
    8. 'M' → logprob: -16.251737594604492
    9. '(int' → logprob: -16.376737594604492
    10. '((' → logprob: -16.626737594604492

Token 47: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0005620885640382767
    2. ']' → logprob: -7.8755621910095215
    3. ')' → logprob: -8.625561714172363
    4. '])' → logprob: -14.250561714172363
    5. '])]' → logprob: -14.625561714172363
    6. ')]
' → logprob: -14.875561714172363
    7. ' )' → logprob: -15.000561714172363
    8. ')],' → logprob: -15.375561714172363
    9. ')])' → logprob: -15.625561714172363
    10. '')]' → logprob: -16.37556266784668

Token 48: 'graph' (ID: 7978)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8132432699203491
    2. 'graph' → logprob: -1.4382432699203491
    3. 'edges' → logprob: -3.0632433891296387
    4. 'd' → logprob: -3.4382433891296387
    5. 'dist' → logprob: -3.5632433891296387
    6. 'D' → logprob: -3.8132433891296387
    7. 'adj' → logprob: -4.063243389129639
    8. 'visited' → logprob: -4.188243389129639
    9. 'cost' → logprob: -4.188243389129639
    10. '```' → logprob: -4.563243389129639

Token 49: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009762817993760109
    2. '=' → logprob: -4.634762763977051
    3. '[' → logprob: -12.63476276397705
    4. 's' → logprob: -14.25976276397705
    5. '=[]' → logprob: -14.50976276397705
    6. ' ' → logprob: -14.63476276397705
    7. ' =[' → logprob: -14.63476276397705
    8. ' =
' → logprob: -14.75976276397705
    9. '[]' → logprob: -15.75976276397705
    10. '_' → logprob: -16.009763717651367

Token 50: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.031936611980199814
    2. ' [[]' → logprob: -3.7819366455078125
    3. '{' → logprob: -5.0319366455078125
    4. '{}' → logprob: -6.2819366455078125
    5. '[]' → logprob: -8.531936645507812
    6. 'default' → logprob: -10.031936645507812
    7. ' [' → logprob: -12.656936645507812
    8. ' [{}' → logprob: -12.906936645507812
    9. '[{' → logprob: -13.031936645507812
    10. '[[' → logprob: -13.156936645507812

Token 51: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.380277544260025
    2. 'for' → logprob: -1.2552775144577026
    3. ']' → logprob: -3.880277633666992
    4. ')' → logprob: -5.130277633666992
    5. ',' → logprob: -5.505277633666992
    6. '()' → logprob: -8.005277633666992
    7. '(' → logprob: -8.755277633666992
    8. '(N' → logprob: -9.630277633666992
    9. '	for' → logprob: -9.755277633666992
    10. ' ' → logprob: -11.005277633666992

Token 52: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6357790231704712
    2. '_' → logprob: -0.8857790231704712
    3. 'range' → logprob: -3.3857789039611816
    4. ' _' → logprob: -3.8857789039611816
    5. '(range' → logprob: -6.010778903961182
    6. '_range' → logprob: -7.510778903961182
    7. ' in' → logprob: -8.01077938079834
    8. ' ' → logprob: -8.38577938079834
    9. '(' → logprob: -10.01077938079834
    10. '	range' → logprob: -10.13577938079834

Token 53: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2775658369064331
    2. 'in' → logprob: -1.777565836906433
    3. ' in' → logprob: -2.9025659561157227
    4. '(range' → logprob: -4.527565956115723
    5. ' range' → logprob: -4.902565956115723
    6. '	range' → logprob: -9.902565956115723
    7. '_' → logprob: -10.027565956115723
    8. '(' → logprob: -10.277565956115723
    9. '_range' → logprob: -11.027565956115723
    10. '(N' → logprob: -11.152565956115723

Token 54: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0788949653506279
    2. ' range' → logprob: -2.578894853591919
    3. '(range' → logprob: -12.20389461517334
    4. '	range' → logprob: -16.578895568847656
    5. ' ' → logprob: -17.828895568847656
    6. 'ran' → logprob: -18.453895568847656
    7. 'r' → logprob: -18.453895568847656
    8. '   ' → logprob: -18.703895568847656
    9. '```' → logprob: -18.828895568847656
    10. 'rang' → logprob: -18.953895568847656

Token 55: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -7.779520092299208e-05
    2. 'range' → logprob: -10.500078201293945
    3. '(range' → logprob: -10.500078201293945
    4. '(' → logprob: -11.750078201293945
    5. 'N' → logprob: -11.875078201293945
    6. ' range' → logprob: -12.750078201293945
    7. '(M' → logprob: -13.000078201293945
    8. '(H' → logprob: -13.250078201293945
    9. '(n' → logprob: -15.500078201293945
    10. 'Range' → logprob: -15.625078201293945

Token 56: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0015212877187877893
    2. ']' → logprob: -6.501521110534668
    3. ')' → logprob: -11.001521110534668
    4. ' ]' → logprob: -14.126521110534668
    5. '>]' → logprob: -14.626521110534668
    6. '}]' → logprob: -15.126521110534668
    7. '])' → logprob: -15.376521110534668
    8. '+' → logprob: -16.126522064208984
    9. ']]' → logprob: -16.126522064208984
    10. ' )' → logprob: -16.126522064208984

Token 57: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07195255160331726
    2. '<|end|>' → logprob: -3.1969525814056396
    3. ' for' → logprob: -3.5719525814056396
    4. ' ' → logprob: -8.946952819824219
    5. '<|end|>' → logprob: -9.196952819824219
    6. '```' → logprob: -9.946952819824219
    7. '
' → logprob: -10.071952819824219
    8. ' 
' → logprob: -10.071952819824219
    9. ')' → logprob: -10.446952819824219
    10. '\n' → logprob: -11.446952819824219

Token 58: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.07000623643398285
    2. '_' → logprob: -2.6950061321258545
    3. ' i' → logprob: -10.070006370544434
    4. ' ' → logprob: -10.820006370544434
    5. '_i' → logprob: -12.445006370544434
    6. ' range' → logprob: -13.945006370544434
    7. ' ' → logprob: -13.945006370544434
    8. 'i' → logprob: -14.695006370544434
    9. ' __' → logprob: -15.070006370544434
    10. ' ▁' → logprob: -15.445006370544434

Token 59: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.13248178362846375
    2. 'in' → logprob: -2.382481813430786
    3. 'range' → logprob: -3.632481813430786
    4. '_' → logprob: -6.257481575012207
    5. ' range' → logprob: -6.507481575012207
    6. '(range' → logprob: -7.632481575012207
    7. 'ange' → logprob: -8.132481575012207
    8. 'n' → logprob: -8.257481575012207
    9. ' xrange' → logprob: -9.132481575012207
    10. ' _' → logprob: -9.257481575012207

Token 60: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00015920029545668513
    2. ' range' → logprob: -8.75015926361084
    3. '(range' → logprob: -14.75015926361084
    4. 'graph' → logprob: -15.37515926361084
    5. '	range' → logprob: -17.500158309936523
    6. 'ran' → logprob: -17.625158309936523
    7. 'rang' → logprob: -17.625158309936523
    8. 'ange' → logprob: -17.750158309936523
    9. 'r' → logprob: -18.125158309936523
    10. ')' → logprob: -18.125158309936523

Token 61: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.16131021082401276
    2. 'M' → logprob: -1.9113101959228516
    3. ' M' → logprob: -6.911310195922852
    4. '(' → logprob: -9.911310195922852
    5. ' (' → logprob: -10.411310195922852
    6. '	M' → logprob: -13.286310195922852
    7. '[M' → logprob: -13.536310195922852
    8. ',M' → logprob: -13.786310195922852
    9. ')' → logprob: -14.161310195922852
    10. '_M' → logprob: -14.286310195922852

Token 62: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007461408386006951
    2. '):
' → logprob: -7.750746250152588
    3. ' ):' → logprob: -8.25074577331543
    4. ')' → logprob: -10.00074577331543
    5. ':' → logprob: -12.12574577331543
    6. '():' → logprob: -13.62574577331543
    7. '):
' → logprob: -13.87574577331543
    8. ',' → logprob: -14.87574577331543
    9. ']:' → logprob: -15.37574577331543
    10. ' ):
' → logprob: -15.75074577331543

Token 63: '   ' (ID: 271)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.37310656905174255
    2. 'u' → logprob: -1.248106598854065
    3. 'a' → logprob: -3.9981064796447754
    4. '   ' → logprob: -5.748106479644775
    5. ' a' → logprob: -6.623106479644775
    6. '	u' → logprob: -7.873106479644775
    7. 'A' → logprob: -8.998106956481934
    8. 's' → logprob: -9.123106956481934
    9. 'x' → logprob: -9.123106956481934
    10. ' 
' → logprob: -9.248106956481934

Token 64: ' A' (ID: 355)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6522420048713684
    2. 'u' → logprob: -0.7772420048713684
    3. 'A' (adapté à ' A') → logprob: -4.527242183685303
    4. 'U' → logprob: -4.902242183685303
    5. 's' → logprob: -7.652242183685303
    6. ' u' → logprob: -8.277241706848145
    7. ' a' → logprob: -9.277241706848145
    8. '```' → logprob: -9.277241706848145
    9. 'from' → logprob: -9.527241706848145
    10. 'f' → logprob: -10.277241706848145

Token 65: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0058790212497115135
    2. ' ,' → logprob: -5.630878925323486
    3. ',B' → logprob: -6.130878925323486
    4. ',b' → logprob: -10.005879402160645
    5. ',A' → logprob: -11.005879402160645
    6. '_,' → logprob: -11.755879402160645
    7. '-,' → logprob: -11.755879402160645
    8. ',H' → logprob: -12.380879402160645
    9. ',input' → logprob: -12.505879402160645
    10. '-' → logprob: -12.630879402160645

Token 66: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.4740932583808899
    2. ' B' → logprob: -0.9740932583808899
    3. ' ' → logprob: -11.474093437194824
    4. 'b' → logprob: -12.349093437194824
    5. 'C' → logprob: -14.474093437194824
    6. '<|end|>' → logprob: -14.974093437194824
    7. 'K' → logprob: -15.474093437194824
    8. 'D' → logprob: -16.099092483520508
    9. ' b' → logprob: -16.599092483520508
    10. ' C' → logprob: -16.724092483520508

Token 67: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16032059490680695
    2. ' =' → logprob: -1.9103206396102905
    3. ',' → logprob: -9.285320281982422
    4. '=input' → logprob: -13.660320281982422
    5. ' ' → logprob: -14.660320281982422
    6. '=int' → logprob: -14.910320281982422
    7. '-' → logprob: -15.035320281982422
    8. ')' → logprob: -15.535320281982422
    9. '=A' → logprob: -15.660320281982422
    10. '=line' → logprob: -15.660320281982422

Token 68: ' T' (ID: 353)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.3148580491542816
    2. ' C' → logprob: -1.314858078956604
    3. ' ' → logprob: -7.0648579597473145
    4. 'c' → logprob: -8.189858436584473
    5. 'T' → logprob: -9.439858436584473
    6. 'w' → logprob: -10.064858436584473
    7. 't' → logprob: -10.189858436584473
    8. '<|end|>' → logprob: -10.189858436584473
    9. 'D' → logprob: -10.314858436584473
    10. ' T' → logprob: -10.377358436584473

Token 69: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14267711341381073
    2. ' =' → logprob: -2.017677068710327
    3. ' ' → logprob: -14.017677307128906
    4. '=input' → logprob: -14.642677307128906
    5. '=sys' → logprob: -15.267677307128906
    6. ')' → logprob: -15.642677307128906
    7. '=int' → logprob: -16.392677307128906
    8. ')=' → logprob: -16.642677307128906
    9. '＝' → logprob: -17.017677307128906
    10. '=line' → logprob: -17.517677307128906

Token 70: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.1602274775505066
    2. 'map' → logprob: -1.9102275371551514
    3. '	map' → logprob: -12.91022777557373
    4. ' ' → logprob: -14.78522777557373
    5. ' ma' → logprob: -16.285226821899414
    6. 'm' → logprob: -16.410226821899414
    7. '(map' → logprob: -16.660226821899414
    8. 'ma' → logprob: -16.785226821899414
    9. ' ' → logprob: -17.160226821899414
    10. 'list' → logprob: -17.660226821899414

Token 71: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00179846934042871
    2. '(' → logprob: -7.001798629760742
    3. '(input' → logprob: -7.126798629760742
    4. '(in' → logprob: -10.251798629760742
    5. '(lambda' → logprob: -11.126798629760742
    6. '(list' → logprob: -11.626798629760742
    7. '(str' → logprob: -11.876798629760742
    8. ' (' → logprob: -12.126798629760742
    9. '(tuple' → logprob: -12.376798629760742
    10. '[int' → logprob: -13.251798629760742

Token 72: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4211146831512451
    2. ',input' → logprob: -1.2961146831512451
    3. '(input' → logprob: -2.671114683151245
    4. '(' → logprob: -7.671114921569824
    5. ' ,' → logprob: -8.671114921569824
    6. ',int' → logprob: -8.796114921569824
    7. ')' → logprob: -10.296114921569824
    8. '(int' → logprob: -10.546114921569824
    9. ',(' → logprob: -10.921114921569824
    10. ' (' → logprob: -11.796114921569824

Token 73: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.011048289015889168
    2. ' input' → logprob: -4.511048316955566
    3. '(input' → logprob: -15.636048316955566
    4. ')' → logprob: -16.38604736328125
    5. ',input' → logprob: -16.76104736328125
    6. '	input' → logprob: -17.13604736328125
    7. '=input' → logprob: -17.13604736328125
    8. '[input' → logprob: -17.51104736328125
    9. ' ' → logprob: -18.13604736328125
    10. '_input' → logprob: -18.13604736328125

Token 74: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.729906196298543e-06
    2. '()' → logprob: -11.625009536743164
    3. '())' → logprob: -14.875009536743164
    4. ')' → logprob: -15.125009536743164
    5. ' ().' → logprob: -17.250009536743164
    6. '()
' → logprob: -18.125009536743164
    7. '()-' → logprob: -18.625009536743164
    8. '(' → logprob: -18.875009536743164
    9. '());' → logprob: -18.875009536743164
    10. '().__' → logprob: -19.375009536743164

Token 75: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.1472419600977446e-06
    2. '(split' → logprob: -14.375000953674316
    3. ' split' → logprob: -15.375000953674316
    4. 'strip' → logprob: -15.750000953674316
    5. ')' → logprob: -15.875000953674316
    6. 'spl' → logprob: -16.875001907348633
    7. '().' → logprob: -17.750001907348633
    8. 'rstrip' → logprob: -18.000001907348633
    9. 'plit' → logprob: -19.000001907348633
    10. '```' → logprob: -19.250001907348633

Token 76: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011517901904881
    2. '())' → logprob: -4.6365180015563965
    3. '()' → logprob: -6.3865180015563965
    4. ')
' → logprob: -10.261517524719238
    5. '(' → logprob: -10.761517524719238
    6. '))' → logprob: -12.011517524719238
    7. '())
' → logprob: -12.011517524719238
    8. ' )' → logprob: -13.011517524719238
    9. ')`' → logprob: -13.261517524719238
    10. '(
' → logprob: -14.511517524719238

Token 77: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06350141018629074
    2. '	graph' → logprob: -3.8135013580322266
    3. '<|end|>' → logprob: -4.063501358032227
    4. 'graph' → logprob: -4.313501358032227
    5. ' graph' → logprob: -6.063501358032227
    6. '(graph' → logprob: -6.438501358032227
    7. '    
' → logprob: -6.688501358032227
    8. ')' → logprob: -7.063501358032227
    9. ' ' → logprob: -7.063501358032227
    10. '
' → logprob: -7.563501358032227

Token 78: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.014168800786137581
    2. ' graph' → logprob: -4.264168739318848
    3. '	graph' → logprob: -12.514168739318848
    4. '(graph' → logprob: -14.139168739318848
    5. 'A' → logprob: -14.889168739318848
    6. '.graph' → logprob: -15.889168739318848
    7. '   ' → logprob: -15.889168739318848
    8. 'graphql' → logprob: -16.014169692993164
    9. '```' → logprob: -16.139169692993164
    10. ' A' → logprob: -16.889169692993164

Token 79: '[A' (ID: 58391)
  Prédit: '[A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -5.764977686339989e-05
    2. '[' → logprob: -9.875057220458984
    3. '[B' → logprob: -12.125057220458984
    4. 'A' → logprob: -14.500057220458984
    5. '[a' → logprob: -16.125057220458984
    6. ' [' → logprob: -16.375057220458984
    7. '[[' → logprob: -17.250057220458984
    8. '```' → logprob: -17.750057220458984
    9. ' A' → logprob: -18.125057220458984
    10. '[
' → logprob: -18.250057220458984

Token 80: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03613406792283058
    2. '[' → logprob: -3.5361340045928955
    3. '[-' → logprob: -5.411134243011475
    4. ' -' → logprob: -6.411134243011475
    5. ')' → logprob: -10.411133766174316
    6. '][' → logprob: -10.536133766174316
    7. '[i' → logprob: -10.661133766174316
    8. '[I' → logprob: -10.661133766174316
    9. '[A' → logprob: -10.786133766174316
    10. '[idx' → logprob: -11.036133766174316

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '<|end|>' → logprob: -17.625
    4. '１' → logprob: -18.25
    5. '```' → logprob: -18.625
    6. '2' → logprob: -19.0
    7. 'to' → logprob: -19.25
    8. ')' → logprob: -20.0
    9. '-' → logprob: -20.0625
    10. '१' → logprob: -20.375

Token 82: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0021938022691756487
    2. ').' → logprob: -6.377193927764893
    3. '.append' → logprob: -7.877193927764893
    4. '.' → logprob: -9.877193450927734
    5. ']' → logprob: -9.877193450927734
    6. ' ].' → logprob: -12.377193450927734
    7. ')' → logprob: -13.252193450927734
    8. '}.' → logprob: -13.627193450927734
    9. '   ' → logprob: -14.127193450927734
    10. '[' → logprob: -15.127193450927734

Token 83: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.320199877838604e-07
    2. ' append' → logprob: -16.125
    3. '.append' → logprob: -16.375
    4. 'push' → logprob: -16.375
    5. 'appen' → logprob: -17.25
    6. ' ' → logprob: -19.625
    7. 'app' → logprob: -19.875
    8. '	append' → logprob: -19.875
    9. '_append' → logprob: -20.125
    10. 'Append' → logprob: -20.125

Token 84: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.22581855952739716
    2. '(B' → logprob: -1.7258185148239136
    3. '(' → logprob: -3.725818634033203
    4. ' (' → logprob: -11.475818634033203
    5. '(b' → logprob: -12.600818634033203
    6. '(A' → logprob: -13.600818634033203
    7. '([' → logprob: -14.725818634033203
    8. '(T' → logprob: -15.850818634033203
    9. '(
' → logprob: -15.975818634033203
    10. '(True' → logprob: -16.225818634033203

Token 85: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -3.547789674485102e-05
    2. ' B' → logprob: -10.250035285949707
    3. '<|end|>' → logprob: -17.125036239624023
    4. '(B' → logprob: -18.875036239624023
    5. ')' → logprob: -19.000036239624023
    6. '   ' → logprob: -19.500036239624023
    7. ' ' → logprob: -19.500036239624023
    8. '	B' → logprob: -19.500036239624023
    9. 'b' → logprob: -19.625036239624023
    10. '(' → logprob: -21.000036239624023

Token 86: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0002613358374219388
    2. ' -' → logprob: -8.250261306762695
    3. '()-' → logprob: -17.375261306762695
    4. '1' → logprob: -18.250261306762695
    5. ' ' → logprob: -19.875261306762695
    6. '-
' → logprob: -20.125261306762695
    7. '−' → logprob: -20.125261306762695
    8. '–' → logprob: -20.750261306762695
    9. ',' → logprob: -21.125261306762695
    10. '[' → logprob: -21.250261306762695

Token 87: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '2' → logprob: -18.2500057220459
    4. '```' → logprob: -18.6250057220459
    5. '   ' → logprob: -19.2500057220459
    6. '<|end|>' → logprob: -19.5000057220459
    7. ')' → logprob: -19.6250057220459
    8. ',' → logprob: -19.6875057220459
    9. '`' → logprob: -20.8750057220459
    10. '１' → logprob: -20.9375057220459

Token 88: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.9795445849886164e-05
    2. ',T' → logprob: -9.875060081481934
    3. ' ,' → logprob: -11.750060081481934
    4. ',
' → logprob: -15.500060081481934
    5. '‌,' → logprob: -16.000059127807617
    6. ',

' → logprob: -16.500059127807617
    7. ')' → logprob: -17.625059127807617
    8. '，' → logprob: -17.875059127807617
    9. ',)' → logprob: -18.000059127807617
    10. '`,' → logprob: -18.375059127807617

Token 89: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.012513887137174606
    2. ' T' → logprob: -4.387514114379883
    3. ' ' → logprob: -13.137514114379883
    4. '   ' → logprob: -13.512514114379883
    5. '	T' → logprob: -14.762514114379883
    6. '  ' → logprob: -16.137514114379883
    7. ')' → logprob: -16.262514114379883
    8. '    ' → logprob: -16.887514114379883
    9. ' ' → logprob: -16.887514114379883
    10. ' 
' → logprob: -17.262514114379883

Token 90: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.018270863220095634
    2. ')' → logprob: -4.018270969390869
    3. '))
' → logprob: -9.268270492553711
    4. ' ))' → logprob: -10.893270492553711
    5. ')))' → logprob: -12.893270492553711
    6. '),' → logprob: -13.518270492553711
    7. ' )' → logprob: -13.768270492553711
    8. ')
' → logprob: -14.018270492553711
    9. ',' → logprob: -14.143270492553711
    10. '   ' → logprob: -14.643270492553711

Token 91: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 92: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.0014157117111608386
    2. '	graph' → logprob: -7.251415729522705
    3. ' graph' → logprob: -7.501415729522705
    4. '<|end|>' → logprob: -9.626415252685547
    5. '   ' → logprob: -9.876415252685547
    6. '(graph' → logprob: -10.751415252685547
    7. ' ' → logprob: -12.251415252685547
    8. '.graph' → logprob: -13.001415252685547
    9. '```' → logprob: -13.376415252685547
    10. ')' → logprob: -13.876415252685547

Token 93: '[B' (ID: 95385)
  Prédit: '[B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[B' → logprob: -6.587483221665025e-05
    2. '[' → logprob: -10.250065803527832
    3. '[A' → logprob: -10.500065803527832
    4. '[b' → logprob: -14.000065803527832
    5. 'B' → logprob: -14.250065803527832
    6. '```' → logprob: -15.000065803527832
    7. ' [' → logprob: -15.625065803527832
    8. '

' → logprob: -16.50006675720215
    9. '[
' → logprob: -16.62506675720215
    10. '
' → logprob: -16.75006675720215

Token 94: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -8.537868779967539e-06
    2. ' -' → logprob: -11.750008583068848
    3. '<|end|>' → logprob: -15.000008583068848
    4. ')-' → logprob: -15.375008583068848
    5. ')' → logprob: -16.75000762939453
    6. '<|end|>' → logprob: -17.12500762939453
    7. '-)' → logprob: -17.25000762939453
    8. '()-' → logprob: -17.37500762939453
    9. '-
' → logprob: -18.75000762939453
    10. '-user' → logprob: -18.87500762939453

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. '<|end|>' → logprob: -14.500000953674316
    3. ' ' → logprob: -14.625000953674316
    4. '2' → logprob: -17.000001907348633
    5. '```' → logprob: -17.125001907348633
    6. '-' → logprob: -17.500001907348633
    7. '<|end|>' → logprob: -17.875001907348633
    8. '`' → logprob: -18.562501907348633
    9. '１' → logprob: -18.937501907348633
    10. '۱' → logprob: -19.312501907348633

Token 96: '].' (ID: 1651)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.6448258757591248
    2. '].' → logprob: -0.7698258757591248
    3. '-' → logprob: -4.5198259353637695
    4. '.append' → logprob: -7.6448259353637695
    5. '.' → logprob: -8.26982593536377
    6. ')' → logprob: -8.51982593536377
    7. '   ' → logprob: -9.39482593536377
    8. '[' → logprob: -9.51982593536377
    9. '}.' → logprob: -10.14482593536377
    10. ']' → logprob: -10.64482593536377

Token 97: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -7.896309739408025e-07
    2. 'appen' → logprob: -15.125000953674316
    3. ' append' → logprob: -15.875000953674316
    4. '.append' → logprob: -15.875000953674316
    5. '	append' → logprob: -16.0
    6. 'app' → logprob: -17.625
    7. ' ' → logprob: -18.25
    8. '```' → logprob: -18.625
    9. '_append' → logprob: -19.0
    10. 'Append' → logprob: -19.25

Token 98: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -1.5690089639974758e-05
    2. ' ((' → logprob: -11.125015258789062
    3. '(' → logprob: -14.875015258789062
    4. '(A' → logprob: -15.000015258789062
    5. ' (' → logprob: -16.125015258789062
    6. '(B' → logprob: -16.625015258789062
    7. '(
' → logprob: -17.250015258789062
    8. ')((' → logprob: -17.875015258789062
    9. ' ' → logprob: -18.250015258789062
    10. '>((' → logprob: -18.625015258789062

Token 99: 'A' (ID: 32)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -1.676292231422849e-05
    2. ' (' → logprob: -11.250017166137695
    3. 'A' → logprob: -13.125017166137695
    4. '(B' → logprob: -14.000017166137695
    5. '(' → logprob: -14.250017166137695
    6. '   ' → logprob: -16.625017166137695
    7. ')' → logprob: -16.875017166137695
    8. '((' → logprob: -17.250017166137695
    9. ' ' → logprob: -17.500017166137695
    10. ' A' → logprob: -17.750017166137695

Token 100: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.165027217415627e-05
    2. ' -' → logprob: -10.750021934509277
    3. '[' → logprob: -16.37502098083496
    4. ')-' → logprob: -17.12502098083496
    5. '```' → logprob: -18.50002098083496
    6. '()-' → logprob: -18.62502098083496
    7. '1' → logprob: -19.00002098083496
    8. ')' → logprob: -19.12502098083496
    9. '<|end|>' → logprob: -20.37502098083496
    10. '<|end|>' → logprob: -20.50002098083496

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.500005722045898
    3. '-' → logprob: -13.375005722045898
    4. ')' → logprob: -15.625005722045898
    5. '```' → logprob: -16.0000057220459
    6. '2' → logprob: -16.8750057220459
    7. '   ' → logprob: -17.3125057220459
    8. '<|end|>' → logprob: -17.6875057220459
    9. '１' → logprob: -18.8750057220459
    10. ',' → logprob: -18.9375057220459

Token 102: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9504606825648807e-05
    2. ' ,' → logprob: -10.875019073486328
    3. ',T' → logprob: -15.125019073486328
    4. '‌,' → logprob: -16.250019073486328
    5. '),' → logprob: -16.875019073486328
    6. ')' → logprob: -17.000019073486328
    7. '))' → logprob: -17.125019073486328
    8. ',t' → logprob: -17.375019073486328
    9. '`,' → logprob: -17.625019073486328
    10. ',
' → logprob: -18.250019073486328

Token 103: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.5231342911720276
    2. ' T' → logprob: -0.8981342911720276
    3. ')' → logprob: -12.023134231567383
    4. ' ' → logprob: -12.773134231567383
    5. ' )' → logprob: -14.773134231567383
    6. '   ' → logprob: -14.773134231567383
    7. '))' → logprob: -14.898134231567383
    8. '0' → logprob: -15.273134231567383
    9. ' ' → logprob: -15.523134231567383
    10. '	T' → logprob: -16.148134231567383

Token 104: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.300083648762666e-05
    2. '))' → logprob: -9.875053405761719
    3. ')
' → logprob: -13.875053405761719
    4. ' )' → logprob: -14.625053405761719
    5. ')}' → logprob: -17.50005340576172
    6. ')`' → logprob: -17.87505340576172
    7. ')))' → logprob: -18.50005340576172
    8. '   ' → logprob: -19.12505340576172
    9. ')**' → logprob: -19.50005340576172
    10. '})' → logprob: -19.50005340576172

Token 105: '#' (ID: 2)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4764459729194641
    2. 'def' → logprob: -1.4764459133148193
    3. 'import' → logprob: -1.9764459133148193
    4. 'INF' → logprob: -4.601446151733398
    5. 'distance' → logprob: -6.851446151733398
    6. 'dp' → logprob: -7.851446151733398
    7. 'from' → logprob: -8.476446151733398
    8. 'inf' → logprob: -9.726446151733398
    9. '#' → logprob: -9.726446151733398
    10. 'cost' → logprob: -10.101446151733398

Token 106: ' dist' (ID: 3601)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2874758243560791
    2. 'import' → logprob: -1.787475824356079
    3. 'dist' → logprob: -2.537475824356079
    4. '#' → logprob: -6.9124755859375
    5. 'INF' → logprob: -7.0374755859375
    6. 'distance' → logprob: -7.2874755859375
    7. 'from' → logprob: -8.0374755859375
    8. '
' → logprob: -8.5374755859375
    9. '```' → logprob: -9.5374755859375
    10. 'inf' → logprob: -9.5374755859375

Token 107: '[node' (ID: 67268)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011388971470296383
    2. '=' → logprob: -4.886388778686523
    3. 'ances' → logprob: -5.761388778686523
    4. 'ance' → logprob: -8.011388778686523
    5. '=[]' → logprob: -8.761388778686523
    6. 's' → logprob: -10.136388778686523
    7. '[]' → logprob: -10.636388778686523
    8. '=[' → logprob: -11.136388778686523
    9. ' =[' → logprob: -11.511388778686523
    10. '```' → logprob: -11.761388778686523

Token 108: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6757432818412781
    2. 's' → logprob: -0.9257432818412781
    3. ']' → logprob: -2.925743341445923
    4. ' =' → logprob: -3.550743341445923
    5. ',' → logprob: -5.175743103027344
    6. '=' → logprob: -5.550743103027344
    7. '])' → logprob: -6.050743103027344
    8. ')]' → logprob: -8.800743103027344
    9. ')=' → logprob: -8.800743103027344
    10. ']=' → logprob: -9.550743103027344

Token 109: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14287212491035461
    2. '=' → logprob: -2.0178720951080322
    3. 's' → logprob: -8.642871856689453
    4. ',' → logprob: -11.267871856689453
    5. ' =
' → logprob: -13.017871856689453
    6. '[' → logprob: -13.892871856689453
    7. '=[]' → logprob: -14.142871856689453
    8. ')' → logprob: -14.267871856689453
    9. ' ' → logprob: -14.642871856689453
    10. '=

' → logprob: -14.767871856689453

Token 110: ' minimal' (ID: 19957)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.005981766153126955
    2. ' float' → logprob: -6.255981922149658
    3. '(float' → logprob: -6.380981922149658
    4. 'inf' → logprob: -6.880981922149658
    5. '[' → logprob: -7.505981922149658
    6. '10' → logprob: -8.3809814453125
    7. '0' → logprob: -8.5059814453125
    8. 'heap' → logprob: -9.0059814453125
    9. 'int' → logprob: -10.0059814453125
    10. 'sys' → logprob: -10.2559814453125

Token 111: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -1.3203961849212646
    2. ' time' → logprob: -1.4453961849212646
    3. 'distance' → logprob: -1.5703961849212646
    4. 'cost' → logprob: -1.8203961849212646
    5. ' cost' → logprob: -2.8203961849212646
    6. ' distance' → logprob: -3.1953961849212646
    7. '_time' → logprob: -4.320396423339844
    8. 'dist' → logprob: -4.820396423339844
    9. '_distance' → logprob: -6.320396423339844
    10. ' travel' → logprob: -6.945396423339844

Token 112: ' to' (ID: 316)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.2431883066892624
    2. ' =' → logprob: -1.7431882619857788
    3. '=' → logprob: -3.7431883811950684
    4. 'import' → logprob: -5.493188381195068
    5. '_dist' → logprob: -5.618188381195068
    6. '_' → logprob: -6.243188381195068
    7. 'inf' → logprob: -6.493188381195068
    8. 'from' → logprob: -6.618188381195068
    9. ',' → logprob: -6.743188381195068
    10. ' dist' → logprob: -7.743188381195068

Token 113: ' reach' (ID: 7627)
  Prédit: 'reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reach' → logprob: -0.02567748911678791
    2. ' reach' → logprob: -4.275677680969238
    3. 'get' → logprob: -4.775677680969238
    4. 'visit' → logprob: -6.525677680969238
    5. 'go' → logprob: -7.275677680969238
    6. 'travel' → logprob: -8.525677680969238
    7. 'arr' → logprob: -8.900677680969238
    8. 'return' → logprob: -9.025677680969238
    9. 'node' → logprob: -9.150677680969238
    10. ' get' → logprob: -9.900677680969238

Token 114: ' node' (ID: 4596)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6088911890983582
    2. '[' → logprob: -1.233891248703003
    3. 'from' → logprob: -2.608891248703003
    4. '[start' → logprob: -3.858891248703003
    5. '[X' → logprob: -4.233891010284424
    6. ' dist' → logprob: -4.608891010284424
    7. ' [' → logprob: -4.608891010284424
    8. '[node' → logprob: -5.108891010284424
    9. '[from' → logprob: -5.108891010284424
    10. 'import' → logprob: -5.233891010284424

Token 115: ' at' (ID: 540)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0414293147623539
    2. 'from' → logprob: -4.04142951965332
    3. ' =' → logprob: -4.29142951965332
    4. 'inf' → logprob: -5.79142951965332
    5. 'import' → logprob: -6.16642951965332
    6. '=' → logprob: -6.79142951965332
    7. 'INF' → logprob: -6.91642951965332
    8. ' dist' → logprob: -7.16642951965332
    9. '
' → logprob: -7.91642951965332
    10. 'def' → logprob: -8.79142951965332

Token 116: ' its' (ID: 1617)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -1.396719217300415
    2. 'each' → logprob: -1.896719217300415
    3. 'least' → logprob: -1.896719217300415
    4. 'node' → logprob: -2.146719217300415
    5. '[node' → logprob: -2.646719217300415
    6. 'time' → logprob: -3.396719217300415
    7. 'most' → logprob: -3.521719217300415
    8. 'from' → logprob: -3.521719217300415
    9. 'the' → logprob: -3.646719217300415
    10. 'this' → logprob: -3.771719217300415

Token 117: ' top' (ID: 2344)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -1.5069255828857422
    2. 'height' → logprob: -1.6319255828857422
    3. 'current' → logprob: -2.131925582885742
    4. 'home' → logprob: -2.381925582885742
    5. 'peak' → logprob: -2.756925582885742
    6. 'start' → logprob: -3.131925582885742
    7. 'hill' → logprob: -3.256925582885742
    8. 'e' → logprob: -3.381925582885742
    9. 'initial' → logprob: -4.256925582885742
    10. 'h' → logprob: -4.631925582885742

Token 118: ' (' (ID: 350)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0006757391383871436
    2. '
' → logprob: -7.750675678253174
    3. ' dist' → logprob: -9.375676155090332
    4. 'inf' → logprob: -10.250676155090332
    5. 'def' → logprob: -10.500676155090332
    6. 'INF' → logprob: -10.750676155090332
    7. 'distance' → logprob: -10.875676155090332
    8. 'import' → logprob: -11.000676155090332
    9. '
' → logprob: -11.875676155090332
    10. 'd' → logprob: -11.875676155090332

Token 119: 'height' (ID: 5097)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002088165609166026
    2. 'from' → logprob: -7.0020880699157715
    3. ' )' → logprob: -7.2520880699157715
    4. ')
' → logprob: -8.50208854675293
    5. ' from' → logprob: -9.12708854675293
    6. '")' → logprob: -10.75208854675293
    7. '`)' → logprob: -11.12708854675293
    8. ' or' → logprob: -11.50208854675293
    9. 'or' → logprob: -11.62708854675293
    10. 'in' → logprob: -11.75208854675293

Token 120: ' H' (ID: 487)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011874547228217125
    2. ')
' → logprob: -5.261874675750732
    3. '+' → logprob: -5.386874675750732
    4. ' )' → logprob: -7.386874675750732
    5. ' +' → logprob: -7.886874675750732
    6. 'from' → logprob: -8.136874198913574
    7. ']' → logprob: -8.886874198913574
    8. '])' → logprob: -8.886874198913574
    9. ' from' → logprob: -9.636874198913574
    10. ')

' → logprob: -10.136874198913574

Token 121: '[node' (ID: 67268)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3376375436782837
    2. '])' → logprob: -1.3376375436782837
    3. ']' → logprob: -3.962637424468994
    4. ')]' → logprob: -5.837637424468994
    5. ')
' → logprob: -7.087637424468994
    6. '])
' → logprob: -8.087637901306152
    7. ')])' → logprob: -8.462637901306152
    8. '`)' → logprob: -8.837637901306152
    9. ' )' → logprob: -8.962637901306152
    10. '[' → logprob: -9.587637901306152

Token 122: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007317355484701693
    2. '])' → logprob: -7.500731945037842
    3. ' )' → logprob: -9.500731468200684
    4. ']' → logprob: -9.750731468200684
    5. '）' → logprob: -11.500731468200684
    6. '`)' → logprob: -11.750731468200684
    7. ')]' → logprob: -11.875731468200684
    8. '))' → logprob: -12.625731468200684
    9. ')])' → logprob: -12.875731468200684
    10. 'from' → logprob: -12.875731468200684

Token 123: '#' (ID: 2)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.02112228237092495
    2. 'def' → logprob: -4.146122455596924
    3. 'import' → logprob: -5.521122455596924
    4. '
' → logprob: -7.396122455596924
    5. 'INF' → logprob: -8.521121978759766
    6. 'dp' → logprob: -9.146121978759766
    7. 'distance' → logprob: -9.396121978759766
    8. '```' → logprob: -10.646121978759766
    9. 'from' → logprob: -11.396121978759766
    10. 'inf' → logprob: -11.646121978759766

Token 124: ' but' (ID: 889)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.023581216111779213
    2. 'import' → logprob: -4.148581027984619
    3. 'def' → logprob: -5.023581027984619
    4. 'dp' → logprob: -8.023581504821777
    5. 'from' → logprob: -8.148581504821777
    6. 'INF' → logprob: -8.898581504821777
    7. '#' → logprob: -9.273581504821777
    8. 'inf' → logprob: -11.273581504821777
    9. 'distance' → logprob: -11.523581504821777
    10. ' dist' → logprob: -11.523581504821777

Token 125: ' we' (ID: 581)
  Prédit: 'we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'we' → logprob: -1.6990489959716797
    2. 'the' → logprob: -1.6990489959716797
    3. '#' → logprob: -2.1990489959716797
    4. 'for' → logprob: -2.6990489959716797
    5. 'dist' → logprob: -2.8240489959716797
    6. 'since' → logprob: -3.3240489959716797
    7. ' we' → logprob: -3.4490489959716797
    8. ' the' → logprob: -3.5740489959716797
    9. 'if' → logprob: -3.5740489959716797
    10. 'it' → logprob: -3.8240489959716797

Token 126: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.722134530544281
    2. ' can' → logprob: -1.3471345901489258
    3. 'cannot' → logprob: -2.347134590148926
    4. ' cannot' → logprob: -3.597134590148926
    5. 'need' → logprob: -3.847134590148926
    6. 'can't' → logprob: -4.222134590148926
    7. ' need' → logprob: -4.472134590148926
    8. ' want' → logprob: -4.472134590148926
    9. ' can't' → logprob: -4.597134590148926
    10. 'have' → logprob: -4.972134590148926

Token 127: ' be' (ID: 413)
  Prédit: 'only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'only' → logprob: -1.3081635236740112
    2. 'go' → logprob: -1.6831635236740112
    3. 'also' → logprob: -2.183163642883301
    4. ' only' → logprob: -2.183163642883301
    5. ' also' → logprob: -2.308163642883301
    6. ' go' → logprob: -3.558163642883301
    7. 'cl' → logprob: -4.183163642883301
    8. 'move' → logprob: -4.183163642883301
    9. 'use' → logprob: -4.620663642883301
    10. ' climb' → logprob: -4.683163642883301

Token 128: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.5476694703102112
    2. 'come' → logprob: -1.9226694107055664
    3. 'at' → logprob: -2.1726694107055664
    4. ' on' → logprob: -2.7976694107055664
    5. 'lower' → logprob: -4.172669410705566
    6. 'on' → logprob: -4.610169410705566
    7. ' lower' → logprob: -4.735169410705566
    8. ' anywhere' → logprob: -5.297669410705566
    9. '```' → logprob: -5.485169410705566
    10. 'down' → logprob: -5.547669410705566

Token 129: ' any' (ID: 1062)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.0549867153167725
    2. 'the' → logprob: -1.6799867153167725
    3. ' a' → logprob: -1.9299867153167725
    4. ' any' → logprob: -2.3049867153167725
    5. 'a' → logprob: -2.4299867153167725
    6. 'any' → logprob: -3.1799867153167725
    7. 'different' → logprob: -4.679986953735352
    8. ' base' → logprob: -4.929986953735352
    9. ' node' → logprob: -5.054986953735352
    10. 'top' → logprob: -5.054986953735352

Token 130: ' height' (ID: 4679)
  Prédit: ' height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' height' → logprob: -0.7217467427253723
    2. 'height' → logprob: -0.9717467427253723
    3. ' node' → logprob: -2.8467466831207275
    4. 'node' → logprob: -3.8467466831207275
    5. 'position' → logprob: -4.846746921539307
    6. 'time' → logprob: -4.971746921539307
    7. ' position' → logprob: -5.096746921539307
    8. ' level' → logprob: -5.096746921539307
    9. ' point' → logprob: -5.346746921539307
    10. 'level' → logprob: -5.596746921539307

Token 131: ' between' (ID: 2870)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.005964580457657576
    2. '
' → logprob: -6.005964756011963
    3. 'dp' → logprob: -6.880964756011963
    4. 'distance' → logprob: -7.505964756011963
    5. 'd' → logprob: -7.630964756011963
    6. 'def' → logprob: -7.880964756011963
    7. '```' → logprob: -8.380964279174805
    8. 'import' → logprob: -8.880964279174805
    9. '_dist' → logprob: -9.005964279174805
    10. '#' → logprob: -9.505964279174805

Token 132: ' ' (ID: 220)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.18138255178928375
    2. '0' → logprob: -2.056382656097412
    3. '<|end|>' → logprob: -4.306382656097412
    4. ' H' → logprob: -4.431382656097412
    5. 'the' → logprob: -5.181382656097412
    6. ' ' → logprob: -5.806382656097412
    7. '(H' → logprob: -6.681382656097412
    8. ' the' → logprob: -7.306382656097412
    9. '(' → logprob: -7.556382656097412
    10. 'current' → logprob: -7.931382656097412

Token 133: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4297114312648773
    2. 'H' → logprob: -1.0547114610671997
    3. '(' → logprob: -8.17971134185791
    4. '(H' → logprob: -8.55471134185791
    5. 'the' → logprob: -8.67971134185791
    6. '```' → logprob: -9.80471134185791
    7. ' ' → logprob: -10.17971134185791
    8. 'current' → logprob: -10.30471134185791
    9. 'min' → logprob: -10.30471134185791
    10. '-' → logprob: -10.67971134185791

Token 134: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5287380814552307
    2. 'and' → logprob: -0.9037380814552307
    3. ',' → logprob: -5.403738021850586
    4. ' ' → logprob: -8.028738021850586
    5. '-' → logprob: -8.528738021850586
    6. ' to' → logprob: -8.903738021850586
    7. '+' → logprob: -8.903738021850586
    8. '0' → logprob: -9.653738021850586
    9. '<|end|>' → logprob: -9.653738021850586
    10. ')' → logprob: -9.778738021850586

Token 135: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.003197204554453492
    2. ' H' → logprob: -5.753197193145752
    3. ' ' → logprob: -11.87819766998291
    4. '```' → logprob: -13.00319766998291
    5. ' ' → logprob: -13.12819766998291
    6. '(H' → logprob: -13.50319766998291
    7. '100' → logprob: -14.00319766998291
    8. '`' → logprob: -14.00319766998291
    9. '
' → logprob: -14.62819766998291
    10. '(' → logprob: -14.75319766998291

Token 136: '[node' (ID: 67268)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0348625183105469
    2. 'dist' → logprob: -1.4098625183105469
    3. ')' → logprob: -1.7848625183105469
    4. '_' → logprob: -2.659862518310547
    5. '
' → logprob: -3.034862518310547
    6. '[' → logprob: -3.784862518310547
    7. ',' → logprob: -4.159862518310547
    8. '_dist' → logprob: -4.409862518310547
    9. '#' → logprob: -4.784862518310547
    10. '[node' → logprob: -5.034862518310547

Token 137: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000876208592671901
    2. ']' → logprob: -7.750876426696777
    3. ',' → logprob: -8.875876426696777
    4. ')
' → logprob: -9.250876426696777
    5. '])' → logprob: -9.750876426696777
    6. '#' → logprob: -10.125876426696777
    7. ' )' → logprob: -10.125876426696777
    8. ')]' → logprob: -10.500876426696777
    9. '[' → logprob: -10.875876426696777
    10. '),' → logprob: -11.875876426696777

Token 138: '#' (ID: 2)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.22877219319343567
    2. 'def' → logprob: -1.9787721633911133
    3. 'dp' → logprob: -3.3537721633911133
    4. '
' → logprob: -3.9787721633911133
    5. 'import' → logprob: -4.853772163391113
    6. 'distance' → logprob: -6.228772163391113
    7. 'INF' → logprob: -6.478772163391113
    8. 'from' → logprob: -7.978772163391113
    9. 'cost' → logprob: -8.603772163391113
    10. '#' → logprob: -8.728772163391113

Token 139: ' So' (ID: 2632)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.13246601819992065
    2. 'def' → logprob: -2.8824660778045654
    3. 'dp' → logprob: -3.5074660778045654
    4. 'import' → logprob: -3.6324660778045654
    5. 'INF' → logprob: -5.007465839385986
    6. 'from' → logprob: -6.507465839385986
    7. '#' → logprob: -6.632465839385986
    8. 'for' → logprob: -7.007465839385986
    9. 'cost' → logprob: -7.882465839385986
    10. 'inf' → logprob: -8.382466316223145

Token 140: ' we' (ID: 581)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.514431893825531
    2. 'dist' → logprob: -1.5144319534301758
    3. 'def' → logprob: -2.514431953430176
    4. ' for' → logprob: -2.889431953430176
    5. '#' → logprob: -3.764431953430176
    6. 'dp' → logprob: -4.514431953430176
    7. 'import' → logprob: -5.889431953430176
    8. '
' → logprob: -6.389431953430176
    9. ' dist' → logprob: -7.014431953430176
    10. 'we' → logprob: -7.014431953430176

Token 141: ' consider' (ID: 3331)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' need' → logprob: -1.0349429845809937
    2. ' want' → logprob: -1.5349429845809937
    3. 'need' → logprob: -1.9099429845809937
    4. ' can' → logprob: -2.034943103790283
    5. 'can' → logprob: -2.909943103790283
    6. 'def' → logprob: -3.034943103790283
    7. 'd' → logprob: -5.284943103790283
    8. 'dist' → logprob: -5.409943103790283
    9. ''ll' → logprob: -5.409943103790283
    10. 'want' → logprob: -5.534943103790283

Token 142: ' time' (ID: 1058)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.34076228737831116
    2. 'the' → logprob: -1.9657622575759888
    3. 'a' → logprob: -2.9657623767852783
    4. 'two' → logprob: -3.9657623767852783
    5. 'states' → logprob: -4.465762138366699
    6. ' the' → logprob: -4.590762138366699
    7. 'dp' → logprob: -4.590762138366699
    8. ' a' → logprob: -4.840762138366699
    9. '(dist' → logprob: -5.590762138366699
    10. 'all' → logprob: -5.590762138366699

Token 143: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.41756123304367065
    2. '=' → logprob: -1.2925612926483154
    3. 'dist' → logprob: -3.0425612926483154
    4. 'to' → logprob: -5.667561054229736
    5. 's' → logprob: -6.042561054229736
    6. ',' → logprob: -6.167561054229736
    7. 'def' → logprob: -6.542561054229736
    8. '_to' → logprob: -6.667561054229736
    9. 'needed' → logprob: -6.792561054229736
    10. '=[]' → logprob: -6.917561054229736

Token 144: ' move' (ID: 5275)
  Prédit: 'reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reach' → logprob: -0.2946285009384155
    2. 'stand' → logprob: -2.294628620147705
    3. ' reach' → logprob: -2.544628620147705
    4. 'be' → logprob: -3.919628620147705
    5. 'get' → logprob: -4.044628620147705
    6. 'go' → logprob: -4.294628620147705
    7. ' be' → logprob: -5.044628620147705
    8. 'cl' → logprob: -5.919628620147705
    9. ' climb' → logprob: -6.044628620147705
    10. ' stand' → logprob: -6.044628620147705

Token 145: ' vertically' (ID: 94774)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'up' → logprob: -1.122767686843872
    2. 'from' → logprob: -1.122767686843872
    3. 'to' → logprob: -1.997767686843872
    4. 'down' → logprob: -2.747767686843872
    5. ' up' → logprob: -3.247767686843872
    6. ' to' → logprob: -3.247767686843872
    7. 'and' → logprob: -4.247767448425293
    8. ' from' → logprob: -4.247767448425293
    9. 'between' → logprob: -4.247767448425293
    10. ' and' → logprob: -5.372767448425293

Token 146: ' to' (ID: 316)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.06457852572202682
    2. 'dp' → logprob: -3.4395785331726074
    3. 'def' → logprob: -3.6895785331726074
    4. 'distance' → logprob: -6.564578533172607
    5. 'cost' → logprob: -6.939578533172607
    6. 'import' → logprob: -7.189578533172607
    7. '#' → logprob: -7.439578533172607
    8. 'INF' → logprob: -7.814578533172607
    9. 'inf' → logprob: -8.43957805633545
    10. ' dist' → logprob: -8.93957805633545

Token 147: ' the' (ID: 290)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.04222718998789787
    2. 'the' → logprob: -3.667227268218994
    3. '0' → logprob: -4.667227268218994
    4. ' H' → logprob: -6.667227268218994
    5. 'next' → logprob: -7.042227268218994
    6. 'reach' → logprob: -7.167227268218994
    7. ' the' → logprob: -7.417227268218994
    8. 'get' → logprob: -7.792227268218994
    9. '```' → logprob: -7.917227268218994
    10. ' reach' → logprob: -7.917227268218994

Token 148: ' top' (ID: 2344)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.7418128848075867
    2. 'top' → logprob: -1.6168129444122314
    3. 'desired' → logprob: -2.3668129444122314
    4. 'next' → logprob: -2.6168129444122314
    5. '0' → logprob: -3.6168129444122314
    6. 'current' → logprob: -3.7418129444122314
    7. ' next' → logprob: -3.8668129444122314
    8. 'bottom' → logprob: -3.9918129444122314
    9. 'height' → logprob: -4.491812705993652
    10. 'target' → logprob: -4.616812705993652

Token 149: ' each' (ID: 2454)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.739873468875885
    2. 'dist' → logprob: -0.739873468875885
    3. '
' → logprob: -3.8648734092712402
    4. 'dp' → logprob: -4.36487340927124
    5. 'distance' → logprob: -4.73987340927124
    6. 'import' → logprob: -6.86487340927124
    7. '#' → logprob: -7.48987340927124
    8. 'max' → logprob: -7.98987340927124
    9. 'visited' → logprob: -8.239873886108398
    10. 'INF' → logprob: -9.114873886108398

Token 150: ' time' (ID: 1058)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3540057837963104
    2. 'line' → logprob: -2.479005813598633
    3. 'node' → logprob: -2.979005813598633
    4. ' line' → logprob: -3.104005813598633
    5. '_' → logprob: -3.479005813598633
    6. '_line' → logprob: -3.604005813598633
    7. ')' → logprob: -4.479005813598633
    8. '
' → logprob: -4.604005813598633
    9. ' node' → logprob: -5.104005813598633
    10. '' → logprob: -5.229005813598633

Token 151: ' before' (ID: 2254)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6095631718635559
    2. 'def' → logprob: -0.8595631718635559
    3. 'import' → logprob: -3.984563112258911
    4. 'INF' → logprob: -4.85956335067749
    5. 'dp' → logprob: -5.35956335067749
    6. 'distance' → logprob: -6.98456335067749
    7. 'inf' → logprob: -8.234562873840332
    8. '
' → logprob: -8.359562873840332
    9. '#' → logprob: -8.359562873840332
    10. 'from' → logprob: -8.984562873840332

Token 152: ' flying' (ID: 28022)
  Prédit: 'moving'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moving' → logprob: -0.26692265272140503
    2. 'going' → logprob: -2.64192271232605
    3. 'starting' → logprob: -3.01692271232605
    4. 'travel' → logprob: -3.76692271232605
    5. 'taking' → logprob: -4.641922473907471
    6. 'heap' → logprob: -5.016922473907471
    7. 'consider' → logprob: -5.016922473907471
    8. 'descending' → logprob: -5.141922473907471
    9. 'jump' → logprob: -5.266922473907471
    10. 'enter' → logprob: -5.266922473907471

Token 153: ' away' (ID: 4194)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.26543036103248596
    2. 'def' → logprob: -1.5154303312301636
    3. 'dp' → logprob: -4.765430450439453
    4. 'INF' → logprob: -6.265430450439453
    5. 'import' → logprob: -6.390430450439453
    6. 'distance' → logprob: -7.765430450439453
    7. '
' → logprob: -8.265430450439453
    8. 'visited' → logprob: -9.015430450439453
    9. 'inf' → logprob: -9.140430450439453
    10. 'ans' → logprob: -9.765430450439453

Token 154: ' or' (ID: 503)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.18083462119102478
    2. 'def' → logprob: -2.5558345317840576
    3. '
' → logprob: -2.8058345317840576
    4. 'distance' → logprob: -4.430834770202637
    5. 'import' → logprob: -4.555834770202637
    6. 'dp' → logprob: -5.805834770202637
    7. 'INF' → logprob: -7.805834770202637
    8. 'from' → logprob: -8.305834770202637
    9. '
' → logprob: -8.305834770202637
    10. '

' → logprob: -8.430834770202637

Token 155: ' at' (ID: 540)
  Prédit: 'moving'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moving' → logprob: -1.151400089263916
    2. 'landing' → logprob: -1.526400089263916
    3. 'after' → logprob: -2.151400089263916
    4. 'continu' → logprob: -3.151400089263916
    5. 'arr' → logprob: -3.526400089263916
    6. 'taking' → logprob: -3.651400089263916
    7. 'graph' → logprob: -3.651400089263916
    8. 'jump' → logprob: -3.776400089263916
    9. 'import' → logprob: -3.776400089263916
    10. 'enter' → logprob: -3.901400089263916

Token 156: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.24929498136043549
    2. 'all' → logprob: -2.4992949962615967
    3. 'arrival' → logprob: -3.2492949962615967
    4. 'node' → logprob: -3.7492949962615967
    5. 'rest' → logprob: -3.9992949962615967
    6. 'destination' → logprob: -4.249294757843018
    7. ' the' → logprob: -4.749294757843018
    8. 'least' → logprob: -4.749294757843018
    9. 'a' → logprob: -5.374294757843018
    10. 'each' → logprob: -6.249294757843018

Token 157: ' end' (ID: 1268)
  Prédit: 'destination'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'destination' → logprob: -0.3506944179534912
    2. 'end' → logprob: -1.6006944179534912
    3. 'node' → logprob: -3.475694417953491
    4. 'bottom' → logprob: -3.975694417953491
    5. ' destination' → logprob: -4.60069465637207
    6. ' end' → logprob: -4.72569465637207
    7. 'start' → logprob: -4.85069465637207
    8. 'starting' → logprob: -6.10069465637207
    9. ' node' → logprob: -6.22569465637207
    10. 'arrival' → logprob: -6.35069465637207

Token 158: '.
' (ID: 558)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.05933615565299988
    2. 'def' → logprob: -3.8093361854553223
    3. 'import' → logprob: -4.059336185455322
    4. 'dp' → logprob: -4.809336185455322
    5. '
' → logprob: -5.309336185455322
    6. 'distance' → logprob: -5.934336185455322
    7. 'INF' → logprob: -6.684336185455322
    8. 'from' → logprob: -7.809336185455322
    9. 'cost' → logprob: -8.309335708618164
    10. 'inf' → logprob: -8.559335708618164

Token 159: '#' (ID: 2)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4242911636829376
    2. 'def' → logprob: -1.5492911338806152
    3. 'dp' → logprob: -2.9242911338806152
    4. 'import' → logprob: -2.9242911338806152
    5. 'INF' → logprob: -3.7992911338806152
    6. 'cost' → logprob: -6.924291133880615
    7. 'from' → logprob: -7.049291133880615
    8. 'inf' → logprob: -7.924291133880615
    9. '#' → logprob: -8.174291610717773
    10. 'ans' → logprob: -8.299291610717773

Token 160: ' Approach' (ID: 86383)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6748820543289185
    2. 'def' → logprob: -0.7998820543289185
    3. 'import' → logprob: -3.799881935119629
    4. 'dp' → logprob: -4.424881935119629
    5. 'INF' → logprob: -5.299881935119629
    6. '#' → logprob: -7.549881935119629
    7. 'from' → logprob: -7.799881935119629
    8. 'cost' → logprob: -8.299881935119629
    9. 'distance' → logprob: -8.299881935119629
    10. 'ans' → logprob: -8.799881935119629

Token 161: ':
' (ID: 734)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1485674381256104
    2. ':' → logprob: -1.6485674381256104
    3. 'dist' → logprob: -1.6485674381256104
    4. 'import' → logprob: -1.7735674381256104
    5. '#' → logprob: -2.5235674381256104
    6. 'distance' → logprob: -4.023567199707031
    7. 'from' → logprob: -4.398567199707031
    8. 'd' → logprob: -5.648567199707031
    9. 'visited' → logprob: -5.773567199707031
    10. ' dist' → logprob: -6.523567199707031

Token 162: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3860797882080078
    2. '#' → logprob: -1.5110797882080078
    3. 'import' → logprob: -3.386079788208008
    4. 'for' → logprob: -4.386079788208008
    5. 'from' → logprob: -4.511079788208008
    6. ' def' → logprob: -5.011079788208008
    7. 'dist' → logprob: -5.011079788208008
    8. ' for' → logprob: -5.136079788208008
    9. '"""
' → logprob: -5.261079788208008
    10. '
' → logprob: -5.761079788208008

Token 163: ' We'll' (ID: 46830)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.90288245677948
    2. '#' → logprob: -1.27788245677948
    3. 'from' → logprob: -1.90288245677948
    4. 'import' → logprob: -2.2778825759887695
    5. 'dist' → logprob: -3.2778825759887695
    6. 'for' → logprob: -4.6528825759887695
    7. 'dp' → logprob: -5.4028825759887695
    8. 'distance' → logprob: -5.5278825759887695
    9. 'visited' → logprob: -5.7778825759887695
    10. 'We' → logprob: -7.1528825759887695

Token 164: ' use' (ID: 1199)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.2688344120979309
    2. ' use' → logprob: -2.768834352493286
    3. 'define' → logprob: -2.768834352493286
    4. 'import' → logprob: -3.143834352493286
    5. 'implement' → logprob: -3.518834352493286
    6. 'def' → logprob: -4.143834590911865
    7. ' implement' → logprob: -4.268834590911865
    8. 'd' → logprob: -6.768834590911865
    9. 'apply' → logprob: -7.018834590911865
    10. 'perform' → logprob: -7.143834590911865

Token 165: ' D' (ID: 415)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.209499716758728
    2. 'import' → logprob: -1.209499716758728
    3. 'D' → logprob: -1.459499716758728
    4. 'heap' → logprob: -2.4594998359680176
    5. 'd' → logprob: -2.8344998359680176
    6. ' D' → logprob: -4.084499835968018
    7. ' a' → logprob: -4.959499835968018
    8. ' heap' → logprob: -6.459499835968018
    9. '```' → logprob: -8.08449935913086
    10. ' d' → logprob: -8.45949935913086

Token 166: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.0005953280488029122
    2. 'ijk' → logprob: -7.6255950927734375
    3. 'ij' → logprob: -9.500595092773438
    4. 'jik' → logprob: -11.000595092773438
    5. 'i' → logprob: -12.250595092773438
    6. '```' → logprob: -12.250595092773438
    7. '[i' → logprob: -13.250595092773438
    8. 'ik' → logprob: -13.875595092773438
    9. 'ijks' → logprob: -14.500595092773438
    10. 'jk' → logprob: -14.625595092773438

Token 167: ' with' (ID: 483)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06146111339330673
    2. '(
' → logprob: -3.5614612102508545
    3. 'def' → logprob: -3.8114612102508545
    4. ':' → logprob: -5.436460971832275
    5. 'import' → logprob: -6.186460971832275
    6. 'from' → logprob: -7.186460971832275
    7. '()' → logprob: -8.186461448669434
    8. 'for' → logprob: -8.436461448669434
    9. '(heap' → logprob: -8.936461448669434
    10. '(

' → logprob: -9.061461448669434

Token 168: ' states' (ID: 9407)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7673150897026062
    2. 'heap' → logprob: -1.392315149307251
    3. 'a' → logprob: -1.767315149307251
    4. ' heap' → logprob: -2.767315149307251
    5. ' (' → logprob: -4.267314910888672
    6. 'priority' → logprob: -4.267314910888672
    7. '(' → logprob: -5.267314910888672
    8. 'import' → logprob: -5.642314910888672
    9. 'state' → logprob: -5.642314910888672
    10. ' priority' → logprob: -5.892314910888672

Token 169: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21953575313091278
    2. ',' → logprob: -2.9695358276367188
    3. 'import' → logprob: -3.4695358276367188
    4. ' (' → logprob: -3.5945358276367188
    5. ':' → logprob: -3.9695358276367188
    6. '[' → logprob: -4.219535827636719
    7. '
' → logprob: -4.594535827636719
    8. 'from' → logprob: -4.594535827636719
    9. '(
' → logprob: -4.969535827636719
    10. ' =' → logprob: -4.969535827636719

Token 170: 'node' (ID: 7005)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.0081576108932495
    2. 'node' → logprob: -1.3831576108932495
    3. 'height' → logprob: -1.7581576108932495
    4. 'cost' → logprob: -3.008157730102539
    5. 'time' → logprob: -3.133157730102539
    6. ' current' → logprob: -3.633157730102539
    7. '(node' → logprob: -3.758157730102539
    8. ' node' → logprob: -4.258157730102539
    9. 'curr' → logprob: -4.508157730102539
    10. ' height' → logprob: -4.883157730102539

Token 171: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005181243759579957
    2. ' ,' → logprob: -7.625518321990967
    3. ',
' → logprob: -12.250517845153809
    4. ')' → logprob: -12.250517845153809
    5. ',state' → logprob: -12.250517845153809
    6. '‌,' → logprob: -13.000517845153809
    7. ',int' → logprob: -13.250517845153809
    8. ',

' → logprob: -13.500517845153809
    9. ',index' → logprob: -13.875517845153809
    10. '),' → logprob: -13.875517845153809

Token 172: ' height' (ID: 4679)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.10368556529283524
    2. 'current' → logprob: -2.9786856174468994
    3. ' height' → logprob: -3.3536856174468994
    4. ' current' → logprob: -5.22868537902832
    5. ')' → logprob: -6.10368537902832
    6. 'cur' → logprob: -6.72868537902832
    7. 'curr' → logprob: -6.97868537902832
    8. '0' → logprob: -7.60368537902832
    9. 'time' → logprob: -7.60368537902832
    10. 'cost' → logprob: -7.97868537902832

Token 173: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008714557625353336
    2. ',' → logprob: -4.75871467590332
    3. ' )' → logprob: -9.88371467590332
    4. '_' → logprob: -11.75871467590332
    5. '),' → logprob: -11.88371467590332
    6. '=' → logprob: -12.00871467590332
    7. ',)' → logprob: -12.38371467590332
    8. '))' → logprob: -12.75871467590332
    9. ' ' → logprob: -13.38371467590332
    10. '_)' → logprob: -13.50871467590332

Token 174: '#' (ID: 2)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8384618163108826
    2. ')' → logprob: -1.3384618759155273
    3. '
' → logprob: -1.3384618759155273
    4. '' → logprob: -5.088461875915527
    5. ',' → logprob: -5.213461875915527
    6. ' 
' → logprob: -5.213461875915527
    7. 'import' → logprob: -5.213461875915527
    8. ':
' → logprob: -5.838461875915527
    9. '```' → logprob: -5.963461875915527
    10. 'from' → logprob: -6.088461875915527

Token 175: ' But' (ID: 3072)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6730722188949585
    2. 'import' → logprob: -1.6730722188949585
    3. 'dist' → logprob: -1.7980722188949585
    4. ' ' → logprob: -1.9230722188949585
    5. 'from' → logprob: -2.048072338104248
    6. 'distance' → logprob: -3.048072338104248
    7. '
' → logprob: -3.673072338104248
    8. ' 
' → logprob: -3.923072338104248
    9. ',' → logprob: -4.423072338104248
    10. 'dp' → logprob: -4.548072338104248

Token 176: ' height' (ID: 4679)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.0808578729629517
    2. ' given' → logprob: -1.9558578729629517
    3. ' we' → logprob: -2.080857753753662
    4. '<|end|>' → logprob: -2.455857753753662
    5. ' since' → logprob: -2.580857753753662
    6. ' ' → logprob: -2.830857753753662
    7. ' considering' → logprob: -3.830857753753662
    8. ' for' → logprob: -4.580857753753662
    9. ' to' → logprob: -4.580857753753662
    10. '<|end|>' → logprob: -4.580857753753662

Token 177: ' range' (ID: 3352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 178: ' is' (ID: 382)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 179: ' too' (ID: 3101)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.29660680890083313
    2. 'too' → logprob: -3.0466067790985107
    3. 'limited' → logprob: -3.2966067790985107
    4. ' H' → logprob: -3.4216067790985107
    5. '0' → logprob: -3.4216067790985107
    6. '1' → logprob: -4.17160701751709
    7. 'not' → logprob: -4.29660701751709
    8. ' ' → logprob: -4.67160701751709
    9. 'restricted' → logprob: -4.79660701751709
    10. 'very' → logprob: -4.92160701751709

Token 180: ' large' (ID: 4410)
  Prédit: ' large'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' large' → logprob: -0.474558025598526
    2. 'large' → logprob: -0.9745579957962036
    3. 'big' → logprob: -8.724557876586914
    4. ' big' → logprob: -8.849557876586914
    5. '_large' → logprob: -9.599557876586914
    6. ' wide' → logprob: -10.224557876586914
    7. 'Large' → logprob: -10.474557876586914
    8. 'wide' → logprob: -11.224557876586914
    9. 'hu' → logprob: -11.599557876586914
    10. ' ' → logprob: -11.974557876586914

Token 181: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2871245741844177
    2. '\n' → logprob: -2.5371246337890625
    3. '#' → logprob: -2.7871246337890625
    4. '\' → logprob: -3.2871246337890625
    5. '```' → logprob: -4.0371246337890625
    6. ',' → logprob: -4.0371246337890625
    7. ')' → logprob: -4.2871246337890625
    8. '' → logprob: -5.5371246337890625
    9. ' 
' → logprob: -5.6621246337890625
    10. ':' → logprob: -6.0371246337890625

Token 182: ' so' (ID: 813)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1471722424030304
    2. ')' → logprob: -2.272172212600708
    3. ' )' → logprob: -4.147172451019287
    4. ''' → logprob: -5.147172451019287
    5. ' 
' → logprob: -5.147172451019287
    6. '<|end|>' → logprob: -5.647172451019287
    7. ' so' → logprob: -7.022172451019287
    8. '    ' → logprob: -8.022171974182129
    9. '0' → logprob: -8.272171974182129
    10. ' '' → logprob: -9.397171974182129

Token 183: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.47918587923049927
    2. 'we' → logprob: -0.9791858792304993
    3. ' we' → logprob: -6.604186058044434
    4. '
' → logprob: -7.104186058044434
    5. 'instead' → logprob: -7.604186058044434
    6. 'the' → logprob: -7.729186058044434
    7. ' #' → logprob: -7.854186058044434
    8. 'consider' → logprob: -8.229186058044434
    9. ' we'll' → logprob: -8.854186058044434
    10. 'use' → logprob: -8.979186058044434

Token 184: ' use' (ID: 1199)
  Prédit: ''ll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ll' → logprob: -0.21874858438968658
    2. ' only' → logprob: -2.7187485694885254
    3. ' will' → logprob: -2.8437485694885254
    4. ' consider' → logprob: -4.218748569488525
    5. ' can' → logprob: -4.968748569488525
    6. ' use' → logprob: -5.093748569488525
    7. 'consider' → logprob: -5.093748569488525
    8. ' cannot' → logprob: -5.343748569488525
    9. 'only' → logprob: -5.468748569488525
    10. ' ' → logprob: -5.718748569488525

Token 185: ' an' (ID: 448)
  Prédit: ' only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' only' → logprob: -0.7553868293762207
    2. 'only' → logprob: -1.0053868293762207
    3. ' a' → logprob: -3.0053868293762207
    4. 'a' → logprob: -3.6303868293762207
    5. ' the' → logprob: -4.005386829376221
    6. 'the' → logprob: -4.005386829376221
    7. ' H' → logprob: -4.630386829376221
    8. '"' → logprob: -5.005386829376221
    9. 'heap' → logprob: -5.380386829376221
    10. 'height' → logprob: -5.880386829376221

Token 186: ' idea' (ID: 6056)
  Prédit: ' abstraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abstraction' → logprob: -0.9537122249603271
    2. ' idea' → logprob: -1.3287122249603271
    3. ' optimization' → logprob: -1.8287122249603271
    4. 'other' → logprob: -3.453712224960327
    5. 'optimization' → logprob: -3.703712224960327
    6. ' abstract' → logprob: -3.953712224960327
    7. ' approach' → logprob: -4.578712463378906
    8. ' approximation' → logprob: -4.578712463378906
    9. ' alternative' → logprob: -4.953712463378906
    10. 'optimized' → logprob: -5.078712463378906

Token 187: ':
' (ID: 734)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.4080978035926819
    2. 'of' → logprob: -1.283097743988037
    3. '#' → logprob: -3.783097743988037
    4. ' to' → logprob: -4.033097743988037
    5. 'import' → logprob: -5.033097743988037
    6. 'to' → logprob: -5.908097743988037
    7. ' that' → logprob: -6.533097743988037
    8. ':' → logprob: -6.783097743988037
    9. ',' → logprob: -6.783097743988037
    10. 'from' → logprob: -6.908097743988037

Token 188: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.04307786747813225
    2. '
' → logprob: -4.5430779457092285
    3. 'for' → logprob: -5.0430779457092285
    4. 'dist' → logprob: -5.0430779457092285
    5. 'distance' → logprob: -5.5430779457092285
    6. ' #' → logprob: -5.6680779457092285
    7. 'visited' → logprob: -6.2930779457092285
    8. 'def' → logprob: -6.5430779457092285
    9. ' for' → logprob: -6.5430779457092285
    10. 'import' → logprob: -7.2930779457092285

Token 189: ' For' (ID: 2214)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2589404881000519
    2. 'We' → logprob: -3.0089404582977295
    3. 'from' → logprob: -3.0089404582977295
    4. 'for' → logprob: -3.3839404582977295
    5. 'import' → logprob: -3.7589404582977295
    6. 'Use' → logprob: -3.8839404582977295
    7. 'dist' → logprob: -4.508940696716309
    8. '
' → logprob: -4.758940696716309
    9. 'dp' → logprob: -5.383940696716309
    10. 'def' → logprob: -5.633940696716309

Token 190: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.3605577349662781
    2. ' each' → logprob: -1.3605577945709229
    3. ' node' → logprob: -3.985557794570923
    4. 'node' → logprob: -4.860557556152344
    5. ' all' → logprob: -5.735557556152344
    6. 'all' → logprob: -6.110557556152344
    7. 'the' → logprob: -6.110557556152344
    8. ' the' → logprob: -6.485557556152344
    9. ' height' → logprob: -7.110557556152344
    10. 'h' → logprob: -7.110557556152344

Token 191: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.6511385440826416
    2. ' node' → logprob: -0.7761385440826416
    3. 'neighbor' → logprob: -4.6511383056640625
    4. 'edge' → logprob: -5.7761383056640625
    5. ' edge' → logprob: -5.9011383056640625
    6. 'graph' → logprob: -7.5261383056640625
    7. ' neighbor' → logprob: -8.276138305664062
    8. 'height' → logprob: -8.651138305664062
    9. ' graph' → logprob: -8.651138305664062
    10. 'state' → logprob: -9.151138305664062

Token 192: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016971994191408157
    2. ' we' → logprob: -6.876697063446045
    3. 'we' → logprob: -7.751697063446045
    4. ' ,' → logprob: -9.626697540283203
    5. ' at' → logprob: -10.126697540283203
    6. ',we' → logprob: -11.376697540283203
    7. 'only' → logprob: -11.376697540283203
    8. ',
' → logprob: -11.501697540283203
    9. ' only' → logprob: -11.626697540283203
    10. 'at' → logprob: -11.626697540283203

Token 193: ' keep' (ID: 3357)
  Prédit: 'we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'we' → logprob: -0.26727741956710815
    2. ' we' → logprob: -2.392277479171753
    3. '#' → logprob: -2.767277479171753
    4. 'only' → logprob: -4.142277240753174
    5. 'for' → logprob: -4.267277240753174
    6. 'consider' → logprob: -4.267277240753174
    7. ' only' → logprob: -4.767277240753174
    8. 'store' → logprob: -5.267277240753174
    9. 'the' → logprob: -5.267277240753174
    10. '...' → logprob: -6.017277240753174

Token 194: ' minimal' (ID: 19957)
  Prédit: 'only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'only' → logprob: -0.2144370973110199
    2. 'two' → logprob: -2.7144370079040527
    3. ' only' → logprob: -3.3394370079040527
    4. 'dist' → logprob: -3.4644370079040527
    5. 'the' → logprob: -3.5894370079040527
    6. 'a' → logprob: -3.9644370079040527
    7. ' two' → logprob: -5.464437007904053
    8. 'just' → logprob: -5.839437007904053
    9. 'distance' → logprob: -7.214437007904053
    10. ' a' → logprob: -7.339437007904053

Token 195: ' time' (ID: 1058)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.071428894996643
    2. 'time' → logprob: -1.321428894996643
    3. '_time' → logprob: -1.571428894996643
    4. 'cost' → logprob: -2.0714287757873535
    5. 'times' → logprob: -4.3214287757873535
    6. '_cost' → logprob: -4.4464287757873535
    7. 'distance' → logprob: -4.6964287757873535
    8. '_dist' → logprob: -4.8214287757873535
    9. ' time' → logprob: -5.4464287757873535
    10. '_times' → logprob: -5.8214287757873535

Token 196: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3002888858318329
    2. 'dist' → logprob: -1.5502889156341553
    3. ' to' → logprob: -4.300288677215576
    4. 's' → logprob: -4.550288677215576
    5. 'to' → logprob: -5.050288677215576
    6. '=' → logprob: -5.425288677215576
    7. '_dist' → logprob: -5.800288677215576
    8. ']' → logprob: -6.300288677215576
    9. '_to' → logprob: -6.925288677215576
    10. 'for' → logprob: -7.050288677215576

Token 197: ' reach' (ID: 7627)
  Prédit: 'reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reach' → logprob: -0.06792045384645462
    2. 'be' → logprob: -3.442920446395874
    3. 'stand' → logprob: -4.567920684814453
    4. 'get' → logprob: -4.692920684814453
    5. ' reach' → logprob: -5.067920684814453
    6. 'stay' → logprob: -6.567920684814453
    7. 'arr' → logprob: -6.817920684814453
    8. 'top' → logprob: -6.942920684814453
    9. ' be' → logprob: -7.067920684814453
    10. 'come' → logprob: -7.567920684814453

Token 198: ' any' (ID: 1062)
  Prédit: '[node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[node' → logprob: -0.31346291303634644
    2. ' the' → logprob: -2.438462972640991
    3. 'the' → logprob: -3.188462972640991
    4. ' at' → logprob: -3.438462972640991
    5. '(node' → logprob: -3.938462972640991
    6. ')' → logprob: -4.313462734222412
    7. ' (' → logprob: -4.688462734222412
    8. ' node' → logprob: -4.813462734222412
    9. ' each' → logprob: -4.938462734222412
    10. ',' → logprob: -5.063462734222412

Token 199: ' height' (ID: 4679)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.8742292523384094
    2. ' node' → logprob: -1.7492291927337646
    3. ' height' → logprob: -1.7492291927337646
    4. 'node' → logprob: -2.4992291927337646
    5. 'top' → logprob: -3.2492291927337646
    6. 'state' → logprob: -4.124229431152344
    7. ' (' → logprob: -4.124229431152344
    8. ' top' → logprob: -4.124229431152344
    9. '(node' → logprob: -4.749229431152344
    10. '<|end|>' → logprob: -4.874229431152344

Token 200: ',
' (ID: 412)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.05754442512989044
    2. '
' → logprob: -2.932544469833374
    3. '_dist' → logprob: -7.182544231414795
    4. ' dist' → logprob: -7.932544231414795
    5. 'time' → logprob: -8.057544708251953
    6. '
' → logprob: -8.182544708251953
    7. 'distance' → logprob: -8.807544708251953
    8. '

' → logprob: -8.932544708251953
    9. ',' → logprob: -9.432544708251953
    10. 'times' → logprob: -9.432544708251953

Token 201: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5965597033500671
    2. 'dist' → logprob: -0.9715597033500671
    3. '#' → logprob: -3.596559762954712
    4. ']' → logprob: -3.971559762954712
    5. ' and' → logprob: -5.471559524536133
    6. 'and' → logprob: -5.846559524536133
    7. 'distance' → logprob: -6.096559524536133
    8. 'visited' → logprob: -6.221559524536133
    9. ',' → logprob: -6.596559524536133
    10. ' dist' → logprob: -6.846559524536133

Token 202: ' because' (ID: 2236)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6894266605377197
    2. 'and' → logprob: -1.3144266605377197
    3. 'dist' → logprob: -1.8144266605377197
    4. 'but' → logprob: -3.6894266605377197
    5. ' and' → logprob: -4.064426422119141
    6. ' but' → logprob: -4.939426422119141
    7. 'import' → logprob: -5.314426422119141
    8. 'visited' → logprob: -6.064426422119141
    9. 'min' → logprob: -6.564426422119141
    10. 'for' → logprob: -6.939426422119141

Token 203: ' moving' (ID: 10067)
  Prédit: 'we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'we' → logprob: -1.312980055809021
    2. ' we' → logprob: -2.5629801750183105
    3. 'once' → logprob: -2.8129801750183105
    4. ' the' → logprob: -2.9379801750183105
    5. 'if' → logprob: -2.9379801750183105
    6. 'the' → logprob: -3.3129801750183105
    7. ' moving' → logprob: -3.3129801750183105
    8. ' if' → logprob: -3.5629801750183105
    9. 'from' → logprob: -3.5629801750183105
    10. 'when' → logprob: -3.6879801750183105

Token 204: ' up' (ID: 869)
  Prédit: ' vertically'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vertically' → logprob: -0.36940979957580566
    2. ' up' → logprob: -1.9944097995758057
    3. 'vert' → logprob: -2.2444097995758057
    4. ' between' → logprob: -4.119409561157227
    5. 'up' → logprob: -4.494409561157227
    6. 'from' → logprob: -4.744409561157227
    7. ' from' → logprob: -4.994409561157227
    8. '_vert' → logprob: -5.494409561157227
    9. 'down' → logprob: -6.119409561157227
    10. ' within' → logprob: -6.119409561157227

Token 205: '/down' (ID: 170878)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.13200879096984863
    2. 'or' → logprob: -3.2570087909698486
    3. ' and' → logprob: -3.5070087909698486
    4. 'and' → logprob: -3.8820087909698486
    5. 'from' → logprob: -4.1320085525512695
    6. ' from' → logprob: -4.8820085525512695
    7. ' is' → logprob: -5.8820085525512695
    8. ' within' → logprob: -5.8820085525512695
    9. 'within' → logprob: -6.6320085525512695
    10. ' the' → logprob: -7.6320085525512695

Token 206: ' costs' (ID: 8959)
  Prédit: ' within'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' within' → logprob: -0.7628948092460632
    2. 'within' → logprob: -1.887894868850708
    3. ' is' → logprob: -2.262894868850708
    4. 'from' → logprob: -3.137894868850708
    5. ' vertically' → logprob: -3.262894868850708
    6. ' between' → logprob: -3.512894868850708
    7. ' from' → logprob: -3.762894868850708
    8. ' in' → logprob: -4.012894630432129
    9. 'cost' → logprob: -4.012894630432129
    10. ' costs' → logprob: -4.387894630432129

Token 207: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5870001912117004
    2. ' zero' → logprob: -2.7120001316070557
    3. 'additional' → logprob: -2.7120001316070557
    4. 'time' → logprob: -2.8370001316070557
    5. ' ' → logprob: -2.9620001316070557
    6. ' additional' → logprob: -3.5870001316070557
    7. 'vertical' → logprob: -3.7120001316070557
    8. 'extra' → logprob: -3.7120001316070557
    9. 'zero' → logprob: -3.8370001316070557
    10. ' time' → logprob: -3.9620001316070557

Token 208: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6986498236656189
    2. 'time' → logprob: -2.1986498832702637
    3. 'vertical' → logprob: -2.6986498832702637
    4. 'extra' → logprob: -2.6986498832702637
    5. 'additional' → logprob: -3.3236498832702637
    6. 'height' → logprob: -3.4486498832702637
    7. 'linear' → logprob: -3.9486498832702637
    8. ' ' → logprob: -4.073649883270264
    9. 'H' → logprob: -4.073649883270264
    10. 'zero' → logprob: -4.073649883270264

Token 209: ' s' (ID: 265)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33980000019073486
    2. 'dist' → logprob: -2.5897998809814453
    3. ',' → logprob: -3.2147998809814453
    4. '<|end|>' → logprob: -3.5897998809814453
    5. ')' → logprob: -3.7147998809814453
    6. '#' → logprob: -4.214799880981445
    7. ']' → logprob: -4.214799880981445
    8. 'import' → logprob: -4.464799880981445
    9. '_' → logprob: -4.589799880981445
    10. '_dist' → logprob: -4.964799880981445

Token 210: ' per' (ID: 777)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5865625143051147
    2. 'dist' → logprob: -0.9615625143051147
    3. ')' → logprob: -3.9615626335144043
    4. 'distance' → logprob: -4.961562633514404
    5. ',' → logprob: -5.336562633514404
    6. '#' → logprob: -5.461562633514404
    7. '

' → logprob: -5.836562633514404
    8. ']' → logprob: -6.086562633514404
    9. ' dist' → logprob: -6.211562633514404
    10. 'time' → logprob: -6.336562633514404

Token 211: ' meter' (ID: 23655)
  Prédit: 'unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'unit' → logprob: -0.175940603017807
    2. 'height' → logprob: -2.05094051361084
    3. ' unit' → logprob: -3.92594051361084
    4. '1' → logprob: -5.17594051361084
    5. 'vertical' → logprob: -6.80094051361084
    6. 'second' → logprob: -6.80094051361084
    7. ' height' → logprob: -6.92594051361084
    8. 'distance' → logprob: -7.05094051361084
    9. 'difference' → logprob: -7.17594051361084
    10. ' ' → logprob: -7.67594051361084

Token 212: ',' (ID: 11)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.01591505855321884
    2. '
' → logprob: -4.2659149169921875
    3. 'distance' → logprob: -8.140914916992188
    4. '_dist' → logprob: -8.265914916992188
    5. ',
' → logprob: -8.390914916992188
    6. 'import' → logprob: -8.390914916992188
    7. ' dist' → logprob: -8.640914916992188
    8. 'dp' → logprob: -8.765914916992188
    9. ',' → logprob: -9.890914916992188
    10. '
' → logprob: -10.015914916992188

Token 213: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.19136112928390503
    2. 'dist' → logprob: -1.9413611888885498
    3. 'and' → logprob: -4.691360950469971
    4. ' and' → logprob: -4.941360950469971
    5. 'distance' → logprob: -5.816360950469971
    6. 'import' → logprob: -6.066360950469971
    7. ' dist' → logprob: -6.316360950469971
    8. 'dp' → logprob: -6.941360950469971
    9. 'inf' → logprob: -7.066360950469971
    10. 'for' → logprob: -7.191360950469971

Token 214: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.4316271245479584
    2. ' can' → logprob: -1.0566271543502808
    3. 'need' → logprob: -7.80662727355957
    4. ' only' → logprob: -7.93162727355957
    5. 'import' → logprob: -8.30662727355957
    6. 'cannot' → logprob: -8.43162727355957
    7. 'know' → logprob: -8.55662727355957
    8. 'only' → logprob: -8.55662727355957
    9. 'have' → logprob: -9.05662727355957
    10. 'use' → logprob: -9.05662727355957

Token 215: ' always' (ID: 3324)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -1.2152619361877441
    2. 'always' → logprob: -1.7152619361877441
    3. 'use' → logprob: -2.090261936187744
    4. 'adjust' → logprob: -2.715261936187744
    5. 'reach' → logprob: -3.340261936187744
    6. 'get' → logprob: -3.340261936187744
    7. 'just' → logprob: -3.465261936187744
    8. 'add' → logprob: -3.590261936187744
    9. 'simulate' → logprob: -3.715261936187744
    10. 'consider' → logprob: -4.090261936187744

Token 216: ' adjust' (ID: 10266)
  Prédit: 'adjust'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adjust' → logprob: -0.7991100549697876
    2. 'move' → logprob: -1.1741100549697876
    3. 'go' → logprob: -2.049109935760498
    4. 'reach' → logprob: -3.049109935760498
    5. 'get' → logprob: -4.299109935760498
    6. 'arr' → logprob: -4.924109935760498
    7. 'wait' → logprob: -5.299109935760498
    8. ' move' → logprob: -5.424109935760498
    9. 'consider' → logprob: -5.424109935760498
    10. 'increase' → logprob: -5.674109935760498

Token 217: ' height' (ID: 4679)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0800672173500061
    2. 'the' → logprob: -3.9550671577453613
    3. ' the' → logprob: -4.080067157745361
    4. ' distances' → logprob: -4.205067157745361
    5. '_dist' → logprob: -4.955067157745361
    6. ' dist' → logprob: -5.580067157745361
    7. 'distance' → logprob: -5.580067157745361
    8. 's' → logprob: -6.205067157745361
    9. 'for' → logprob: -6.830067157745361
    10. ',' → logprob: -7.080067157745361

Token 218: ' after' (ID: 1934)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.005245260428637266
    2. '
' → logprob: -5.880245208740234
    3. 'import' → logprob: -6.255245208740234
    4. ' dist' → logprob: -8.630245208740234
    5. 'INF' → logprob: -9.630245208740234
    6. 'distance' → logprob: -10.005245208740234
    7. 'from' → logprob: -10.130245208740234
    8. '#' → logprob: -10.380245208740234
    9. ',
' → logprob: -10.880245208740234
    10. ',' → logprob: -10.880245208740234

Token 219: ' arrival' (ID: 24861)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.990481972694397
    2. 'arr' → logprob: -1.865481972694397
    3. 'arrival' → logprob: -1.865481972694397
    4. 'the' → logprob: -2.8654818534851074
    5. ' reaching' → logprob: -3.1154818534851074
    6. 'import' → logprob: -3.6154818534851074
    7. 'he' → logprob: -3.7404818534851074
    8. 'dist' → logprob: -3.7404818534851074
    9. 'all' → logprob: -3.8654818534851074
    10. 'we' → logprob: -3.9904818534851074

Token 220: '.

' (ID: 364)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.011380837298929691
    2. '
' → logprob: -4.636380672454834
    3. 'import' → logprob: -7.261380672454834
    4. ' dist' → logprob: -7.511380672454834
    5. 'INF' → logprob: -9.386381149291992
    6. 'dp' → logprob: -9.511381149291992
    7. 'distance' → logprob: -10.261381149291992
    8. 'from' → logprob: -10.636381149291992
    9. '
' → logprob: -10.761381149291992
    10. '#' → logprob: -10.761381149291992

Token 221: '#' (ID: 2)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0038632587529718876
    2. 'import' → logprob: -5.878863334655762
    3. 'def' → logprob: -7.503863334655762
    4. 'INF' → logprob: -8.503863334655762
    5. 'dp' → logprob: -9.003863334655762
    6. 'from' → logprob: -9.503863334655762
    7. '#' → logprob: -10.003863334655762
    8. ' dist' → logprob: -10.753863334655762
    9. 'inf' → logprob: -11.253863334655762
    10. 'distance' → logprob: -11.503863334655762

Token 222: ' Instead' (ID: 21050)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.049870628863573074
    2. 'import' → logprob: -3.674870729446411
    3. 'def' → logprob: -3.924870729446411
    4. 'INF' → logprob: -6.049870491027832
    5. '#' → logprob: -7.049870491027832
    6. 'from' → logprob: -8.799870491027832
    7. 'dp' → logprob: -8.924870491027832
    8. 'inf' → logprob: -11.549870491027832
    9. ' dist' → logprob: -12.049870491027832
    10. 'distance' → logprob: -12.174870491027832

Token 223: ',' (ID: 11)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.5057658553123474
    2. 'import' → logprob: -1.7557659149169922
    3. '=' → logprob: -2.755765914916992
    4. ' of' → logprob: -2.880765914916992
    5. 'def' → logprob: -3.130765914916992
    6. 'dist' → logprob: -3.130765914916992
    7. 'from' → logprob: -5.255765914916992
    8. 'for' → logprob: -5.505765914916992
    9. ' =' → logprob: -6.130765914916992
    10. '#' → logprob: -6.880765914916992

Token 224: ' we' (ID: 581)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.023074837401509285
    2. 'import' → logprob: -4.273074626922607
    3. ' dist' → logprob: -5.398074626922607
    4. '#' → logprob: -5.648074626922607
    5. 'def' → logprob: -7.773074626922607
    6. 'from' → logprob: -8.523075103759766
    7. ' import' → logprob: -9.023075103759766
    8. 'distance' → logprob: -10.898075103759766
    9. 'time' → logprob: -11.148075103759766
    10. 'we' → logprob: -11.773075103759766

Token 225: ' store' (ID: 4897)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'use' → logprob: -1.1180061101913452
    2. ''ll' → logprob: -1.6180061101913452
    3. 'initialize' → logprob: -2.1180062294006348
    4. 'dist' → logprob: -2.4930062294006348
    5. 'can' → logprob: -2.7430062294006348
    6. 'will' → logprob: -2.9930062294006348
    7. 'keep' → logprob: -3.2430062294006348
    8. ' use' → logprob: -3.6180062294006348
    9. 'consider' → logprob: -3.7430062294006348
    10. ' can' → logprob: -4.368006229400635

Token 226: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.017180897295475006
    2. 'only' → logprob: -4.642180919647217
    3. ' dist' → logprob: -5.642180919647217
    4. ' only' → logprob: -6.142180919647217
    5. 'minimal' → logprob: -7.517180919647217
    6. ' minimal' → logprob: -8.142180442810059
    7. 'just' → logprob: -8.517180442810059
    8. 'the' → logprob: -8.517180442810059
    9. 'for' → logprob: -8.892180442810059
    10. 'distance' → logprob: -9.392180442810059

Token 227: '[node' (ID: 67268)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0035227409098297358
    2. '=' → logprob: -6.253522872924805
    3. '=[' → logprob: -6.878522872924805
    4. ' =[' → logprob: -8.878522872924805
    5. '[node' → logprob: -9.003522872924805
    6. 's' → logprob: -9.378522872924805
    7. '=[]' → logprob: -9.503522872924805
    8. ']' → logprob: -10.378522872924805
    9. ')' → logprob: -10.628522872924805
    10. ',' → logprob: -10.628522872924805

Token 228: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005201144143939018
    2. '][' → logprob: -5.50520133972168
    3. '])' → logprob: -7.25520133972168
    4. ']=' → logprob: -8.13020133972168
    5. ' ]' → logprob: -9.75520133972168
    6. ')' → logprob: -10.88020133972168
    7. ']={' → logprob: -11.00520133972168
    8. '],' → logprob: -11.63020133972168
    9. '][]' → logprob: -12.25520133972168
    10. ']=-' → logprob: -13.00520133972168

Token 229: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038166917860507965
    2. '=' → logprob: -3.2881669998168945
    3. '[' → logprob: -10.288166999816895
    4. ')' → logprob: -10.413166999816895
    5. '=[' → logprob: -10.913166999816895
    6. '<|end|>' → logprob: -11.663166999816895
    7. ']' → logprob: -11.788166999816895
    8. ',' → logprob: -11.788166999816895
    9. '=[]' → logprob: -12.038166999816895
    10. ' =[' → logprob: -12.538166999816895

Token 230: ' minimal' (ID: 19957)
  Prédit: 'minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimal' → logprob: -0.9788896441459656
    2. '0' → logprob: -1.3538897037506104
    3. 'the' → logprob: -1.8538897037506104
    4. ' minimal' → logprob: -2.8538897037506104
    5. 'minimum' → logprob: -2.8538897037506104
    6. '[' → logprob: -3.7288897037506104
    7. 'float' → logprob: -3.9788897037506104
    8. 'inf' → logprob: -4.353889465332031
    9. '[min' → logprob: -4.478889465332031
    10. 'min' → logprob: -4.853889465332031

Token 231: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.5479980111122131
    2. ' time' → logprob: -0.9229980111122131
    3. '_time' → logprob: -4.672997951507568
    4. 'dist' → logprob: -5.672997951507568
    5. 'cost' → logprob: -5.797997951507568
    6. ' cost' → logprob: -6.047997951507568
    7. ' total' → logprob: -6.547997951507568
    8. 'total' → logprob: -6.672997951507568
    9. 'distance' → logprob: -7.172997951507568
    10. '_' → logprob: -7.672997951507568

Token 232: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7961296439170837
    2. '=' → logprob: -1.5461297035217285
    3. '<|end|>' → logprob: -2.4211297035217285
    4. '[]' → logprob: -2.6711297035217285
    5. '[' → logprob: -2.9211297035217285
    6. ']' → logprob: -2.9211297035217285
    7. '[node' → logprob: -3.7961297035217285
    8. '[:]' → logprob: -4.9211297035217285
    9. '```' → logprob: -5.1711297035217285
    10. ')' → logprob: -5.2961297035217285

Token 233: ' reach' (ID: 7627)
  Prédit: 'reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reach' → logprob: -0.0030822865664958954
    2. ' reach' → logprob: -5.878082275390625
    3. 'arr' → logprob: -9.003082275390625
    4. 'get' → logprob: -9.503082275390625
    5. '[node' → logprob: -10.878082275390625
    6. '
' → logprob: -11.503082275390625
    7. 'node' → logprob: -11.878082275390625
    8. 'stand' → logprob: -11.878082275390625
    9. 'reachable' → logprob: -11.878082275390625
    10. ' ' → logprob: -12.378082275390625

Token 234: ' node' (ID: 4596)
  Prédit: '[node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -0.0052618607878685
    2. ' node' → logprob: -5.7552618980407715
    3. 'node' → logprob: -6.2552618980407715
    4. 'the' → logprob: -9.630261421203613
    5. '(node' → logprob: -10.005261421203613
    6. 'dist' → logprob: -10.880261421203613
    7. ' the' → logprob: -11.505261421203613
    8. '```' → logprob: -11.755261421203613
    9. ' [' → logprob: -12.005261421203613
    10. ',node' → logprob: -13.005261421203613

Token 235: ' at' (ID: 540)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 236: ' some' (ID: 1236)
  Prédit: ' its'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' its' → logprob: -0.8719488978385925
    2. 'its' → logprob: -1.3719489574432373
    3. 'top' → logprob: -1.4969489574432373
    4. 'the' → logprob: -3.2469489574432373
    5. ' top' → logprob: -3.4969489574432373
    6. 'H' → logprob: -4.121948719024658
    7. '0' → logprob: -5.246948719024658
    8. ' ' → logprob: -5.371948719024658
    9. ' the' → logprob: -5.371948719024658
    10. ' H' → logprob: -5.746948719024658

Token 237: ' height' (ID: 4679)
  Prédit: ' height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' height' → logprob: -0.6839190125465393
    2. 'height' → logprob: -0.9339190125465393
    3. ' node' → logprob: -3.5589189529418945
    4. ' level' → logprob: -4.0589189529418945
    5. 'level' → logprob: -4.3089189529418945
    6. '[node' → logprob: -4.6839189529418945
    7. 'dist' → logprob: -4.9339189529418945
    8. 'node' → logprob: -5.0589189529418945
    9. ' point' → logprob: -5.4339189529418945
    10. 'distance' → logprob: -6.1839189529418945

Token 238: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08284489065408707
    2. 'dist' → logprob: -2.7078449726104736
    3. '=' → logprob: -4.7078447341918945
    4. 's' → logprob: -6.3328447341918945
    5. ',' → logprob: -7.0828447341918945
    6. '_dist' → logprob: -7.0828447341918945
    7. ' dist' → logprob: -9.582844734191895
    8. '
' → logprob: -9.707844734191895
    9. 'import' → logprob: -10.082844734191895
    10. ' =
' → logprob: -10.332844734191895

Token 239: ' but' (ID: 889)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2228840589523315
    2. ')' → logprob: -1.9728840589523315
    3. '=' → logprob: -2.347884178161621
    4. 'and' → logprob: -2.597884178161621
    5. ' and' → logprob: -2.597884178161621
    6. ',' → logprob: -2.847884178161621
    7. ' =' → logprob: -3.472884178161621
    8. 'with' → logprob: -3.847884178161621
    9. '\n' → logprob: -3.847884178161621
    10. '#' → logprob: -4.222884178161621

Token 240: ' we' (ID: 581)
  Prédit: 'we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'we' → logprob: -1.1896941661834717
    2. '#' → logprob: -1.4396941661834717
    3. 'dist' → logprob: -1.6896941661834717
    4. ' we' → logprob: -3.0646941661834717
    5. ' ignoring' → logprob: -3.6896941661834717
    6. 'initial' → logprob: -4.189694404602051
    7. 'adding' → logprob: -4.189694404602051
    8. 'not' → logprob: -4.314694404602051
    9. ' adding' → logprob: -4.689694404602051
    10. 'since' → logprob: -4.814694404602051

Token 241: ' record' (ID: 3704)
  Prédit: 'cannot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cannot' → logprob: -0.990412712097168
    2. 'can' → logprob: -1.865412712097168
    3. ' can' → logprob: -2.365412712097168
    4. ' cannot' → logprob: -2.865412712097168
    5. ' only' → logprob: -3.365412712097168
    6. 'only' → logprob: -3.490412712097168
    7. 'don't' → logprob: -3.615412712097168
    8. '#' → logprob: -3.740412712097168
    9. 'continue' → logprob: -3.865412712097168
    10. 'consider' → logprob: -3.990412712097168

Token 242: ' it' (ID: 480)
  Prédit: ' only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' only' → logprob: -0.9165310263633728
    2. '[node' → logprob: -1.1665310859680176
    3. ' the' → logprob: -1.6665310859680176
    4. 'the' → logprob: -3.1665310859680176
    5. 'only' → logprob: -3.7915310859680176
    6. 'dist' → logprob: -4.916531085968018
    7. ' =' → logprob: -5.541531085968018
    8. ')' → logprob: -5.541531085968018
    9. '(node' → logprob: -5.791531085968018
    10. '=' → logprob: -6.291531085968018

Token 243: ' as' (ID: 472)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8991193771362305
    2. '=' → logprob: -1.0241193771362305
    3. '[node' → logprob: -2.1491193771362305
    4. ',' → logprob: -3.3991193771362305
    5. '[' → logprob: -3.6491193771362305
    6. '.' → logprob: -4.0241193771362305
    7. '_' → logprob: -4.7741193771362305
    8. ']' → logprob: -5.3991193771362305
    9. '[:]' → logprob: -5.5241193771362305
    10. 'import' → logprob: -5.8991193771362305

Token 244: ' the' (ID: 290)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0195828415453434
    2. ' dist' → logprob: -4.144582748413086
    3. 'the' → logprob: -6.394582748413086
    4. 'top' → logprob: -7.644582748413086
    5. 'a' → logprob: -8.144582748413086
    6. '[' → logprob: -8.894582748413086
    7. 'at' → logprob: -8.894582748413086
    8. 'arr' → logprob: -9.019582748413086
    9. '0' → logprob: -9.144582748413086
    10. 'an' → logprob: -9.394582748413086

Token 245: ' minimal' (ID: 19957)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.9489008784294128
    2. 'minimal' → logprob: -1.8239009380340576
    3. 'height' → logprob: -2.0739009380340576
    4. 'top' → logprob: -2.1989009380340576
    5. 'distance' → logprob: -2.6989009380340576
    6. 'dist' → logprob: -2.6989009380340576
    7. 'minimum' → logprob: -3.3239009380340576
    8. 'cost' → logprob: -3.8239009380340576
    9. ' minimal' → logprob: -4.9489006996154785
    10. 'total' → logprob: -5.8239006996154785

Token 246: ' time' (ID: 1058)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5046302080154419
    2. '_time' → logprob: -2.3796300888061523
    3. '_' → logprob: -2.6296300888061523
    4. '_dist' → logprob: -3.0046300888061523
    5. 'time' → logprob: -3.2546300888061523
    6. ' time' → logprob: -3.3796300888061523
    7. ')' → logprob: -3.7546300888061523
    8. ' dist' → logprob: -4.004630088806152
    9. 'distance' → logprob: -4.504630088806152
    10. '```' → logprob: -4.754630088806152

Token 247: ' at' (ID: 540)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6001380681991577
    2. '=' → logprob: -0.9751380681991577
    3. ']' → logprob: -2.9751381874084473
    4. ')' → logprob: -5.225138187408447
    5. 'to' → logprob: -5.475138187408447
    6. ',' → logprob: -5.850138187408447
    7. ' to' → logprob: -6.225138187408447
    8. 's' → logprob: -6.975138187408447
    9. 'import' → logprob: -6.975138187408447
    10. '[:]' → logprob: -6.975138187408447

Token 248: ' top' (ID: 2344)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7064260840415955
    2. 'top' → logprob: -0.9564260840415955
    3. 'node' → logprob: -3.2064261436462402
    4. ' top' → logprob: -3.5814261436462402
    5. ' the' → logprob: -3.9564261436462402
    6. ' node' → logprob: -4.33142614364624
    7. 'height' → logprob: -5.45642614364624
    8. ' its' → logprob: -5.70642614364624
    9. 'H' → logprob: -5.95642614364624
    10. '0' → logprob: -6.08142614364624

Token 249: ' height' (ID: 4679)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.05311392992734909
    2. ' =' → logprob: -3.6781139373779297
    3. '=' → logprob: -4.42811393737793
    4. '_dist' → logprob: -5.05311393737793
    5. ',' → logprob: -5.42811393737793
    6. ']' → logprob: -7.05311393737793
    7. 's' → logprob: -7.42811393737793
    8. '.' → logprob: -7.55311393737793
    9. ')' → logprob: -7.67811393737793
    10. '
' → logprob: -8.05311393737793

Token 250: '
' (ID: 198)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00047607114538550377
    2. '
' → logprob: -8.000475883483887
    3. ' dist' → logprob: -9.625475883483887
    4. '_dist' → logprob: -10.000475883483887
    5. ',' → logprob: -11.375475883483887
    6. ',
' → logprob: -12.500475883483887
    7. ' =' → logprob: -12.750475883483887
    8. 'import' → logprob: -13.375475883483887
    9. '(dist' → logprob: -13.500475883483887
    10. '.dist' → logprob: -13.625475883483887

Token 251: '#' (ID: 2)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.002214965643361211
    2. '
' → logprob: -6.2522149085998535
    3. '_dist' → logprob: -9.252215385437012
    4. ' dist' → logprob: -9.752215385437012
    5. ',
' → logprob: -10.127215385437012
    6. ',' → logprob: -10.502215385437012
    7. '.' → logprob: -11.377215385437012
    8. '#' → logprob: -11.627215385437012
    9. '\' → logprob: -11.877215385437012
    10. '```' → logprob: -12.002215385437012

Token 252: ' when' (ID: 1261)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.0683535037969705e-05
    2. '
' → logprob: -12.25001049041748
    3. 'import' → logprob: -12.62501049041748
    4. ' dist' → logprob: -13.62501049041748
    5. 'inf' → logprob: -14.75001049041748
    6. '#' → logprob: -15.00001049041748
    7. 'def' → logprob: -15.87501049041748
    8. '_dist' → logprob: -16.250011444091797
    9. 'from' → logprob: -16.500011444091797
    10. 'INF' → logprob: -16.500011444091797

Token 253: ' arriving' (ID: 53419)
  Prédit: 'we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'we' → logprob: -1.019873023033142
    2. 'arr' → logprob: -1.769873023033142
    3. 'moving' → logprob: -1.894873023033142
    4. 'dist' → logprob: -2.0198731422424316
    5. 'he' → logprob: -3.6448731422424316
    6. 'consider' → logprob: -4.144873142242432
    7. 'using' → logprob: -4.269873142242432
    8. 'expl' → logprob: -4.394873142242432
    9. 'visited' → logprob: -4.769873142242432
    10. 'taking' → logprob: -4.894873142242432

Token 254: ' at' (ID: 540)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.002133960137143731
    2. '
' → logprob: -6.252133846282959
    3. '_dist' → logprob: -9.502134323120117
    4. '

' → logprob: -10.127134323120117
    5. '
' → logprob: -10.252134323120117
    6. ' dist' → logprob: -10.752134323120117
    7. ',' → logprob: -12.127134323120117
    8. 'import' → logprob: -12.377134323120117
    9. '```' → logprob: -12.627134323120117
    10. '#' → logprob: -12.752134323120117

Token 255: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.0726165845990181
    2. 'the' → logprob: -3.3226165771484375
    3. ' node' → logprob: -3.6976165771484375
    4. 'that' → logprob: -5.4476165771484375
    5. '[node' → logprob: -5.8226165771484375
    6. ' the' → logprob: -7.6976165771484375
    7. ' that' → logprob: -8.197616577148438
    8. 'a' → logprob: -8.197616577148438
    9. ')' → logprob: -8.572616577148438
    10. 'graph' → logprob: -8.947616577148438

Token 256: ' at' (ID: 540)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00024512779782526195
    2. '
' → logprob: -8.500245094299316
    3. 'import' → logprob: -11.125245094299316
    4. 'def' → logprob: -11.125245094299316
    5. ' dist' → logprob: -12.375245094299316
    6. 'INF' → logprob: -13.375245094299316
    7. '
' → logprob: -13.625245094299316
    8. '#' → logprob: -14.125245094299316
    9. 'inf' → logprob: -14.125245094299316
    10. 'from' → logprob: -14.250245094299316

Token 257: ' arbitrary' (ID: 56424)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.4610130488872528
    2. 'top' → logprob: -1.8360130786895752
    3. 'the' → logprob: -2.336013078689575
    4. ' its' → logprob: -3.336013078689575
    5. ' top' → logprob: -3.711013078689575
    6. 'height' → logprob: -4.461012840270996
    7. 'its' → logprob: -4.461012840270996
    8. ' H' → logprob: -4.461012840270996
    9. ' the' → logprob: -4.711012840270996
    10. 'least' → logprob: -5.961012840270996

Token 258: ' height' (ID: 4679)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.13838344812393188
    2. ' height' → logprob: -2.763383388519287
    3. '_height' → logprob: -2.888383388519287
    4. ' heights' → logprob: -5.013383388519287
    5. 'he' → logprob: -7.013383388519287
    6. ')' → logprob: -7.138383388519287
    7. '<|end|>' → logprob: -8.138383865356445
    8. 'position' → logprob: -8.263383865356445
    9. 'dist' → logprob: -8.388383865356445
    10. '_' → logprob: -8.888383865356445

Token 259: ' h' (ID: 312)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.004658911377191544
    2. '
' → logprob: -5.3796586990356445
    3. ' dist' → logprob: -11.379658699035645
    4. '

' → logprob: -11.879658699035645
    5. ',
' → logprob: -12.254658699035645
    6. 'import' → logprob: -12.504658699035645
    7. '
' → logprob: -12.629658699035645
    8. '_dist' → logprob: -12.754658699035645
    9. '```' → logprob: -13.504658699035645
    10. 'distance' → logprob: -14.129658699035645

Token 260: ',' (ID: 11)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.014707289636135101
    2. '
' → logprob: -4.389707088470459
    3. 'import' → logprob: -6.639707088470459
    4. '_dist' → logprob: -8.639707565307617
    5. ',
' → logprob: -8.889707565307617
    6. ',' → logprob: -9.014707565307617
    7. ' dist' → logprob: -9.139707565307617
    8. '#' → logprob: -9.639707565307617
    9. '```' → logprob: -10.139707565307617
    10. 'def' → logprob: -10.264707565307617

Token 261: ' we' (ID: 581)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2307897806167603
    2. 'dist' → logprob: -1.4807897806167603
    3. '#' → logprob: -1.7307897806167603
    4. ' 
' → logprob: -2.8557896614074707
    5. ' we' → logprob: -3.6057896614074707
    6. ',' → logprob: -3.7307896614074707
    7. 'we' → logprob: -3.8557896614074707
    8. '   ' → logprob: -4.105789661407471
    9. '<|end|>' → logprob: -4.105789661407471
    10. 'the' → logprob: -4.355789661407471

Token 262: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.32463961839675903
    2. 'can' → logprob: -1.8246395587921143
    3. 'update' → logprob: -3.4496395587921143
    4. 'add' → logprob: -4.199639797210693
    5. 'consider' → logprob: -4.324639797210693
    6. ' add' → logprob: -4.449639797210693
    7. ' update' → logprob: -4.574639797210693
    8. 'need' → logprob: -4.699639797210693
    9. ' need' → logprob: -5.199639797210693
    10. 'calculate' → logprob: -5.949639797210693

Token 263: ' always' (ID: 3324)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -1.1848437786102295
    2. 'just' → logprob: -1.6848437786102295
    3. 'adjust' → logprob: -1.9348437786102295
    4. 'add' → logprob: -2.0598437786102295
    5. ' move' → logprob: -3.4348437786102295
    6. 'sim' → logprob: -3.8098437786102295
    7. 'go' → logprob: -4.059844017028809
    8. 'fly' → logprob: -4.059844017028809
    9. ' just' → logprob: -4.184844017028809
    10. 'always' → logprob: -4.309844017028809

Token 264: ' pay' (ID: 2777)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.39868977665901184
    2. 'add' → logprob: -2.1486897468566895
    3. 'go' → logprob: -2.2736897468566895
    4. 'fly' → logprob: -3.3986897468566895
    5. 'adjust' → logprob: -4.0236897468566895
    6. ' move' → logprob: -4.2736897468566895
    7. 'increase' → logprob: -4.3986897468566895
    8. 'cl' → logprob: -4.5236897468566895
    9. 'just' → logprob: -5.7736897468566895
    10. 'walk' → logprob: -5.8986897468566895

Token 265: ' (' (ID: 350)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.36822766065597534
    2. '(H' → logprob: -2.36822772026062
    3. ' H' → logprob: -2.49322772026062
    4. 'abs' → logprob: -2.99322772026062
    5. ' (' → logprob: -3.74322772026062
    6. '+' → logprob: -3.86822772026062
    7. '(abs' → logprob: -4.243227481842041
    8. '(' → logprob: -5.243227481842041
    9. ' abs' → logprob: -5.243227481842041
    10. ' +' → logprob: -5.868227481842041

Token 266: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.02157900668680668
    2. ' H' → logprob: -4.021578788757324
    3. '(H' → logprob: -5.771578788757324
    4. ' (' → logprob: -8.646578788757324
    5. 'abs' → logprob: -10.146578788757324
    6. ')' → logprob: -10.771578788757324
    7. 'max' → logprob: -10.896578788757324
    8. '(' → logprob: -11.021578788757324
    9. ' ' → logprob: -11.646578788757324
    10. '   ' → logprob: -12.146578788757324

Token 267: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -0.004107254091650248
    2. '[' → logprob: -6.379107475280762
    3. '[h' → logprob: -6.879107475280762
    4. ')' → logprob: -7.004107475280762
    5. '[n' → logprob: -8.879107475280762
    6. '[i' → logprob: -9.379107475280762
    7. ']' → logprob: -10.129107475280762
    8. '[A' → logprob: -10.254107475280762
    9. '[X' → logprob: -10.379107475280762
    10. '[N' → logprob: -10.504107475280762

Token 268: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7738226056098938
    2. '[node' → logprob: -0.7738226056098938
    3. ']-' → logprob: -3.023822546005249
    4. ' -' → logprob: -4.773822784423828
    5. '[i' → logprob: -5.398822784423828
    6. '[' → logprob: -5.523822784423828
    7. '-' → logprob: -5.523822784423828
    8. '[n' → logprob: -5.898822784423828
    9. '[h' → logprob: -5.898822784423828
    10. ']+' → logprob: -7.648822784423828

Token 269: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.477649450302124
    2. '-' → logprob: -0.977649450302124
    3. '-h' → logprob: -5.727649688720703
    4. '-H' → logprob: -8.477649688720703
    5. ')' → logprob: -9.477649688720703
    6. ' ' → logprob: -12.602649688720703
    7. '-height' → logprob: -12.727649688720703
    8. '[' → logprob: -12.852649688720703
    9. '[h' → logprob: -13.352649688720703
    10. ')-' → logprob: -13.477649688720703

Token 270: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.001170460251159966
    2. ' h' → logprob: -6.751170635223389
    3. 'H' → logprob: -16.626171112060547
    4. '(h' → logprob: -17.126171112060547
    5. ')' → logprob: -17.751171112060547
    6. '_h' → logprob: -18.126171112060547
    7. ' (' → logprob: -19.126171112060547
    8. 'height' → logprob: -19.626171112060547
    9. ' ' → logprob: -20.126171112060547
    10. '	h' → logprob: -20.126171112060547

Token 271: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0033257647883147
    2. ' )' → logprob: -5.753325939178467
    3. ')+' → logprob: -9.378325462341309
    4. '+' → logprob: -10.378325462341309
    5. ')`' → logprob: -11.003325462341309
    6. ' +' → logprob: -12.378325462341309
    7. ')*' → logprob: -13.003325462341309
    8. ')
' → logprob: -13.378325462341309
    9. '),' → logprob: -13.753325462341309
    10. '))' → logprob: -13.878325462341309

Token 272: ' seconds' (ID: 12068)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0010928311385214329
    2. '
' → logprob: -7.376092910766602
    3. ' dist' → logprob: -8.126092910766602
    4. '_dist' → logprob: -9.001092910766602
    5. 'import' → logprob: -11.251092910766602
    6. ',' → logprob: -12.376092910766602
    7. ' =' → logprob: -12.751092910766602
    8. 'distance' → logprob: -12.751092910766602
    9. 'inf' → logprob: -12.751092910766602
    10. 'INF' → logprob: -13.001092910766602

Token 273: ' to' (ID: 316)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0001681405701674521
    2. '
' → logprob: -9.250167846679688
    3. ' dist' → logprob: -10.000167846679688
    4. '_dist' → logprob: -11.375167846679688
    5. 'import' → logprob: -12.625167846679688
    6. 'distance' → logprob: -12.750167846679688
    7. 'inf' → logprob: -13.750167846679688
    8. '.dist' → logprob: -14.125167846679688
    9. 'INF' → logprob: -14.375167846679688
    10. '#' → logprob: -14.375167846679688

Token 274: ' climb' (ID: 27049)
  Prédit: 'go'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'go' → logprob: -0.4684649407863617
    2. 'move' → logprob: -2.0934648513793945
    3. 'reach' → logprob: -2.3434648513793945
    4. 'get' → logprob: -3.3434648513793945
    5. ' reach' → logprob: -3.4684648513793945
    6. ' go' → logprob: -3.4684648513793945
    7. 'fly' → logprob: -4.3434648513793945
    8. ' move' → logprob: -4.4684648513793945
    9. 'stand' → logprob: -4.4684648513793945
    10. ' get' → logprob: -4.5934648513793945

Token 275: ' to' (ID: 316)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0004891689168289304
    2. '
' → logprob: -7.750489234924316
    3. ' dist' → logprob: -10.125489234924316
    4. '_dist' → logprob: -11.500489234924316
    5. 'import' → logprob: -12.875489234924316
    6. '#' → logprob: -14.000489234924316
    7. ',
' → logprob: -14.625489234924316
    8. '(dist' → logprob: -14.750489234924316
    9. '
' → logprob: -14.875489234924316
    10. '.dist' → logprob: -15.000489234924316

Token 276: ' top' (ID: 2344)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.442516952753067
    2. 'top' → logprob: -1.3175169229507446
    3. 'the' → logprob: -2.442517042160034
    4. ' top' → logprob: -6.442516803741455
    5. ' the' → logprob: -7.317516803741455
    6. ' H' → logprob: -7.692516803741455
    7. '```' → logprob: -9.192517280578613
    8. 'h' → logprob: -11.942517280578613
    9. '[top' → logprob: -12.567517280578613
    10. 'node' → logprob: -12.817517280578613

Token 277: '.

' (ID: 364)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -7.433829159708694e-05
    2. '
' → logprob: -9.87507438659668
    3. 'import' → logprob: -12.00007438659668
    4. 'def' → logprob: -12.12507438659668
    5. ' dist' → logprob: -12.12507438659668
    6. '#' → logprob: -13.75007438659668
    7. '_dist' → logprob: -14.00007438659668
    8. ',
' → logprob: -14.37507438659668
    9. 'distance' → logprob: -14.50007438659668
    10. 'inf' → logprob: -14.62507438659668

Token 278: '#' (ID: 2)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -4.990154047845863e-05
    2. 'import' → logprob: -10.125049591064453
    3. 'inf' → logprob: -13.000049591064453
    4. '
' → logprob: -13.250049591064453
    5. ' dist' → logprob: -13.250049591064453
    6. 'INF' → logprob: -13.375049591064453
    7. 'from' → logprob: -14.000049591064453
    8. 'def' → logprob: -14.250049591064453
    9. '#' → logprob: -14.500049591064453
    10. 'dp' → logprob: -16.125049591064453

Token 279: ' We' (ID: 1416)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00013834332639817148
    2. 'import' → logprob: -9.875138282775879
    3. 'INF' → logprob: -9.875138282775879
    4. 'def' → logprob: -10.750138282775879
    5. '#' → logprob: -11.375138282775879
    6. 'inf' → logprob: -13.750138282775879
    7. ' dist' → logprob: -14.250138282775879
    8. 'from' → logprob: -14.750138282775879
    9. 'dp' → logprob: -15.750138282775879
    10. '
' → logprob: -16.500139236450195

Token 280: ' will' (ID: 738)
  Prédit: ''ll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''ll' → logprob: -0.8826976418495178
    2. 'dist' → logprob: -1.757697582244873
    3. 'continue' → logprob: -2.257697582244873
    4. '#' → logprob: -2.882697582244873
    5. ' continue' → logprob: -3.007697582244873
    6. ' can' → logprob: -3.132697582244873
    7. 'import' → logprob: -3.632697582244873
    8. ' =' → logprob: -3.632697582244873
    9. 'can' → logprob: -3.882697582244873
    10. '=' → logprob: -4.132697582244873

Token 281: ' consider' (ID: 3331)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.1448592096567154
    2. 'implement' → logprob: -3.0198593139648438
    3. 'initialize' → logprob: -3.3948593139648438
    4. 'import' → logprob: -3.6448593139648438
    5. 'define' → logprob: -3.7698593139648438
    6. 'dist' → logprob: -7.019859313964844
    7. ' use' → logprob: -7.144859313964844
    8. 'continue' → logprob: -7.394859313964844
    9. 'maint' → logprob: -8.269859313964844
    10. ' implement' → logprob: -8.394859313964844

Token 282: ' states' (ID: 9407)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.30758029222488403
    2. 'import' → logprob: -1.4325802326202393
    3. 'from' → logprob: -4.807580471038818
    4. 'for' → logprob: -5.557580471038818
    5. 'the' → logprob: -6.182580471038818
    6. 'a' → logprob: -6.307580471038818
    7. 'heap' → logprob: -6.557580471038818
    8. ' dist' → logprob: -6.932580471038818
    9. 'two' → logprob: -7.057580471038818
    10. 'def' → logprob: -7.182580471038818

Token 283: ' only' (ID: 1606)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9257318377494812
    2. '[node' → logprob: -1.800731897354126
    3. '=' → logprob: -2.300731897354126
    4. ',' → logprob: -2.300731897354126
    5. '<|end|>' → logprob: -2.675731897354126
    6. '(node' → logprob: -2.800731897354126
    7. ')' → logprob: -3.175731897354126
    8. ' (' → logprob: -3.925731897354126
    9. 'import' → logprob: -5.175731658935547
    10. '=node' → logprob: -5.300731658935547

Token 284: ' at' (ID: 540)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -1.3678417205810547
    2. '[node' → logprob: -1.4928417205810547
    3. 'from' → logprob: -1.8678417205810547
    4. '=' → logprob: -3.1178417205810547
    5. ' at' → logprob: -3.2428417205810547
    6. 'import' → logprob: -3.2428417205810547
    7. 'for' → logprob: -3.3678417205810547
    8. ')' → logprob: -3.7428417205810547
    9. '<|end|>' → logprob: -3.8678417205810547
    10. ' (' → logprob: -4.117841720581055

Token 285: ' the' (ID: 290)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.662341296672821
    2. 'the' → logprob: -1.0373413562774658
    3. ' the' → logprob: -2.912341356277466
    4. ' top' → logprob: -3.537341356277466
    5. 'nodes' → logprob: -4.037341117858887
    6. 'node' → logprob: -4.287341117858887
    7. ' node' → logprob: -5.537341117858887
    8. 'tops' → logprob: -5.787341117858887
    9. 'each' → logprob: -5.912341117858887
    10. ' nodes' → logprob: -6.037341117858887

Token 286: ' top' (ID: 2344)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.6999026536941528
    2. 'top' → logprob: -0.8249026536941528
    3. 'nodes' → logprob: -2.8249025344848633
    4. 'tops' → logprob: -6.324902534484863
    5. ' node' → logprob: -6.824902534484863
    6. 'graph' → logprob: -6.949902534484863
    7. ' top' → logprob: -7.074902534484863
    8. ' nodes' → logprob: -8.574902534484863
    9. '[node' → logprob: -8.699902534484863
    10. 'heap' → logprob: -8.699902534484863

Token 287: ' of' (ID: 328)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.002279434585943818
    2. '
' → logprob: -6.127279281616211
    3. 'import' → logprob: -10.002279281616211
    4. ' dist' → logprob: -10.627279281616211
    5. 'def' → logprob: -11.502279281616211
    6. '#' → logprob: -12.877279281616211
    7. 'distance' → logprob: -13.127279281616211
    8. '

' → logprob: -13.252279281616211
    9. '_dist' → logprob: -13.502279281616211
    10. '
' → logprob: -13.627279281616211

Token 288: ' each' (ID: 2454)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.46511125564575195
    2. 'each' → logprob: -1.465111255645752
    3. 'nodes' → logprob: -2.090111255645752
    4. 'node' → logprob: -4.340111255645752
    5. ' the' → logprob: -6.840111255645752
    6. ' each' → logprob: -6.840111255645752
    7. 'he' → logprob: -7.340111255645752
    8. 'H' → logprob: -7.715111255645752
    9. ' nodes' → logprob: -8.465110778808594
    10. 'height' → logprob: -8.965110778808594

Token 289: ' tree' (ID: 8165)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.07939643412828445
    2. ' node' → logprob: -2.5793964862823486
    3. '[node' → logprob: -8.20439624786377
    4. 'line' → logprob: -9.57939624786377
    5. '_node' → logprob: -10.45439624786377
    6. '.node' → logprob: -10.57939624786377
    7. ')' → logprob: -10.57939624786377
    8. '(node' → logprob: -11.45439624786377
    9. '-node' → logprob: -11.57939624786377
    10. '=node' → logprob: -11.57939624786377

Token 290: ' to' (ID: 316)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0006589424447156489
    2. 'import' → logprob: -7.875658988952637
    3. 'def' → logprob: -8.375658988952637
    4. '
' → logprob: -10.375658988952637
    5. 'from' → logprob: -12.000658988952637
    6. ' dist' → logprob: -12.500658988952637
    7. '#' → logprob: -12.750658988952637
    8. 'INF' → logprob: -13.875658988952637
    9. 'distance' → logprob: -14.250658988952637
    10. 'inf' → logprob: -14.375658988952637

Token 291: ' simplify' (ID: 66240)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.7457072138786316
    2. 'complete' → logprob: -1.7457072734832764
    3. 'avoid' → logprob: -2.9957072734832764
    4. ' continue' → logprob: -3.1207072734832764
    5. ' complete' → logprob: -3.1207072734832764
    6. 'expl' → logprob: -3.2457072734832764
    7. 'finish' → logprob: -3.7457072734832764
    8. 'keep' → logprob: -3.7457072734832764
    9. ' avoid' → logprob: -3.8707072734832764
    10. 'use' → logprob: -4.245707035064697

Token 292: '.
' (ID: 558)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0014662963803857565
    2. 'def' → logprob: -6.626466274261475
    3. '
' → logprob: -9.751466751098633
    4. 'import' → logprob: -10.376466751098633
    5. '#' → logprob: -11.001466751098633
    6. 'distance' → logprob: -11.001466751098633
    7. ' dist' → logprob: -12.251466751098633
    8. 'INF' → logprob: -12.626466751098633
    9. 'inf' → logprob: -13.376466751098633
    10. 'from' → logprob: -13.626466751098633

Token 293: '#' (ID: 2)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0012448744382709265
    2. 'import' → logprob: -6.876245021820068
    3. 'def' → logprob: -8.62624454498291
    4. '
' → logprob: -11.62624454498291
    5. 'from' → logprob: -11.75124454498291
    6. ' dist' → logprob: -12.37624454498291
    7. 'INF' → logprob: -12.87624454498291
    8. '#' → logprob: -13.00124454498291
    9. '```' → logprob: -13.00124454498291
    10. 'dp' → logprob: -13.62624454498291

Token 294: ' From' (ID: 7217)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.004547250457108021
    2. 'import' → logprob: -5.629547119140625
    3. 'def' → logprob: -7.004547119140625
    4. 'from' → logprob: -11.129547119140625
    5. '
' → logprob: -11.629547119140625
    6. ' dist' → logprob: -11.754547119140625
    7. 'INF' → logprob: -13.004547119140625
    8. 'dp' → logprob: -13.504547119140625
    9. '#' → logprob: -13.504547119140625
    10. '```' → logprob: -14.254547119140625

Token 295: ' starting' (ID: 8601)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -1.004399061203003
    2. 'node' → logprob: -1.379399061203003
    3. 'each' → logprob: -2.629399061203003
    4. 'the' → logprob: -3.004399061203003
    5. ' heap' → logprob: -3.254399061203003
    6. ' node' → logprob: -3.754399061203003
    7. 'collections' → logprob: -3.754399061203003
    8. 'here' → logprob: -3.754399061203003
    9. ' here' → logprob: -3.879399061203003
    10. ' each' → logprob: -4.004399299621582

Token 296: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.4037097990512848
    2. '_point' → logprob: -2.153709888458252
    3. 'node' → logprob: -2.153709888458252
    4. '_node' → logprob: -2.903709888458252
    5. ' point' → logprob: -3.403709888458252
    6. ' node' → logprob: -4.778709888458252
    7. ')' → logprob: -7.528709888458252
    8. '_' → logprob: -7.778709888458252
    9. '_nodes' → logprob: -7.903709888458252
    10. ',' → logprob: -8.278709411621094

Token 297: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3167817294597626
    2. ',' → logprob: -1.816781759262085
    3. '=' → logprob: -3.566781759262085
    4. 'X' → logprob: -3.941781759262085
    5. ':' → logprob: -4.191781520843506
    6. '[X' → logprob: -4.316781520843506
    7. '0' → logprob: -4.691781520843506
    8. '[' → logprob: -5.066781520843506
    9. '[node' → logprob: -5.316781520843506
    10. '(X' → logprob: -5.816781520843506

Token 298: ' node' (ID: 4596)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.19361914694309235
    2. 'start' → logprob: -2.8186192512512207
    3. ' dist' → logprob: -2.9436192512512207
    4. 'import' → logprob: -3.0686192512512207
    5. ' start' → logprob: -4.693619251251221
    6. 'heap' → logprob: -6.443619251251221
    7. ' import' → logprob: -6.443619251251221
    8. 'q' → logprob: -7.318619251251221
    9. 'queue' → logprob: -7.318619251251221
    10. '
' → logprob: -7.443619251251221

Token 299: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5200983881950378
    2. '=' → logprob: -1.1450984477996826
    3. ',' → logprob: -3.0200984477996826
    4. '=X' → logprob: -4.2700982093811035
    5. ' X' → logprob: -4.7700982093811035
    6. 'X' → logprob: -4.7700982093811035
    7. 's' → logprob: -6.0200982093811035
    8. '0' → logprob: -6.8950982093811035
    9. ' ,' → logprob: -7.2700982093811035
    10. '
' → logprob: -7.2700982093811035

Token 300: '0' (ID: 15)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.06334511935710907
    2. '=' → logprob: -3.313345193862915
    3. ' =' → logprob: -4.688344955444336
    4. '(X' → logprob: -5.688344955444336
    5. ' X' → logprob: -5.688344955444336
    6. '0' → logprob: -6.063344955444336
    7. ',' → logprob: -6.438344955444336
    8. '[X' → logprob: -6.438344955444336
    9. '-' → logprob: -6.563344955444336
    10. '=X' → logprob: -6.813344955444336

Token 301: ' at' (ID: 540)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.03089924529194832
    2. ',' → logprob: -4.5308990478515625
    3. 'import' → logprob: -4.5308990478515625
    4. '
' → logprob: -5.0308990478515625
    5. ',
' → logprob: -7.6558990478515625
    6. 'distance' → logprob: -7.9058990478515625
    7. ' dist' → logprob: -8.530899047851562
    8. '_dist' → logprob: -8.530899047851562
    9. 'heap' → logprob: -8.655899047851562
    10. '#' → logprob: -9.030899047851562

Token 302: ' height' (ID: 4679)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.02950156107544899
    2. ' H' → logprob: -3.7795016765594482
    3. 'height' → logprob: -5.779501438140869
    4. '0' → logprob: -6.279501438140869
    5. 'top' → logprob: -7.529501438140869
    6. ' height' → logprob: -7.779501438140869
    7. ' ' → logprob: -8.904501914978027
    8. 'the' → logprob: -9.779501914978027
    9. ' top' → logprob: -9.904501914978027
    10. 'X' → logprob: -10.154501914978027

Token 303: ' X' (ID: 2127)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.258669912815094
    2. '0' → logprob: -1.7586698532104492
    3. ' H' → logprob: -3.008669853210449
    4. ' ' → logprob: -5.133669853210449
    5. 'X' → logprob: -8.00866985321045
    6. ' X' → logprob: -11.00866985321045
    7. ')' → logprob: -11.25866985321045
    8. '=' → logprob: -12.13366985321045
    9. ' ' → logprob: -12.38366985321045
    10. ',' → logprob: -12.88366985321045

Token 304: ',' (ID: 11)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5224893093109131
    2. ' =' → logprob: -2.147489309310913
    3. '_dist' → logprob: -2.397489309310913
    4. '_height' → logprob: -3.022489309310913
    5. ',' → logprob: -3.147489309310913
    6. '
' → logprob: -3.522489309310913
    7. 'height' → logprob: -4.022489547729492
    8. '_' → logprob: -4.272489547729492
    9. '=' → logprob: -4.772489547729492
    10. '0' → logprob: -4.897489547729492

Token 305: ' time' (ID: 1058)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.008208034560084343
    2. 'import' → logprob: -6.25820779800415
    3. 'start' → logprob: -6.38320779800415
    4. 'queue' → logprob: -7.13320779800415
    5. 'heap' → logprob: -7.25820779800415
    6. 'initial' → logprob: -7.63320779800415
    7. 'distance' → logprob: -7.75820779800415
    8. '#' → logprob: -7.88320779800415
    9. 'q' → logprob: -8.008208274841309
    10. ' dist' → logprob: -8.508208274841309

Token 306: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13705375790596008
    2. '=' → logprob: -2.1370537281036377
    3. ',' → logprob: -4.637053966522217
    4. '0' → logprob: -9.262053489685059
    5. ' ,' → logprob: -9.262053489685059
    6. '[' → logprob: -9.887053489685059
    7. ')' → logprob: -10.137053489685059
    8. 's' → logprob: -10.762053489685059
    9. ' +=' → logprob: -11.262053489685059
    10. ' ' → logprob: -11.262053489685059

Token 307: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.3152737021446228
    2. '0' → logprob: -1.9402737617492676
    3. 'abs' → logprob: -2.5652737617492676
    4. ' X' → logprob: -3.5652737617492676
    5. 'max' → logprob: -5.065273761749268
    6. ' abs' → logprob: -5.190273761749268
    7. 'H' → logprob: -5.315273761749268
    8. ' max' → logprob: -6.190273761749268
    9. ' ' → logprob: -6.690273761749268
    10. ' H' → logprob: -7.815273761749268

Token 308: ' (' (ID: 350)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.19317105412483215
    2. '
' → logprob: -2.0681710243225098
    3. '_dist' → logprob: -3.3181710243225098
    4. ',' → logprob: -5.69317102432251
    5. ' =' → logprob: -6.06817102432251
    6. '_time' → logprob: -6.56817102432251
    7. 'time' → logprob: -6.69317102432251
    8. '
' → logprob: -6.94317102432251
    9. '=' → logprob: -7.06817102432251
    10. ' dist' → logprob: -7.94317102432251

Token 309: 'to' (ID: 935)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0035760728642344475
    2. '+' → logprob: -6.253576278686523
    3. ' )' → logprob: -6.878576278686523
    4. ')
' → logprob: -8.003576278686523
    5. ' +' → logprob: -9.253576278686523
    6. '*' → logprob: -10.378576278686523
    7. '
' → logprob: -10.503576278686523
    8. '\n' → logprob: -10.753576278686523
    9. '**' → logprob: -11.003576278686523
    10. ')\' → logprob: -11.003576278686523

Token 310: ' climb' (ID: 27049)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.6978335976600647
    2. ' climb' → logprob: -0.8228335976600647
    3. ')' → logprob: -2.94783353805542
    4. ' get' → logprob: -6.07283353805542
    5. 'top' → logprob: -6.07283353805542
    6. ' reach' → logprob: -6.19783353805542
    7. '_cl' → logprob: -7.19783353805542
    8. 'reach' → logprob: -7.57283353805542
    9. ' cl' → logprob: -7.82283353805542
    10. 'get' → logprob: -7.82283353805542

Token 311: ' from' (ID: 591)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09532880038022995
    2. '+' → logprob: -2.8453288078308105
    3. ' +' → logprob: -4.0953288078308105
    4. ' up' → logprob: -4.8453288078308105
    5. ')+' → logprob: -4.9703288078308105
    6. ' )' → logprob: -7.3453288078308105
    7. 'up' → logprob: -8.220328330993652
    8. '+)' → logprob: -9.345328330993652
    9. '),' → logprob: -9.595328330993652
    10. '_' → logprob: -10.345328330993652

Token 312: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008411920862272382
    2. 'ground' → logprob: -8.00084114074707
    3. 'H' → logprob: -8.62584114074707
    4. 'X' → logprob: -9.25084114074707
    5. 'the' → logprob: -9.50084114074707
    6. ' ' → logprob: -10.12584114074707
    7. 'bottom' → logprob: -10.25084114074707
    8. 'zero' → logprob: -10.62584114074707
    9. 'base' → logprob: -11.37584114074707
    10. 'floor' → logprob: -11.75084114074707

Token 313: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008046258008107543
    2. 'H' → logprob: -7.750804424285889
    3. 'ground' → logprob: -8.625804901123047
    4. 'the' → logprob: -10.250804901123047
    5. ' ' → logprob: -10.250804901123047
    6. 'zero' → logprob: -10.375804901123047
    7. 'bottom' → logprob: -10.375804901123047
    8. 'X' → logprob: -10.750804901123047
    9. 'top' → logprob: -11.250804901123047
    10. ')' → logprob: -11.375804901123047

Token 314: ' to' (ID: 316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1381807029247284
    2. ' to' → logprob: -2.263180732727051
    3. '+' → logprob: -5.013180732727051
    4. ' )' → logprob: -5.013180732727051
    5. ' up' → logprob: -5.513180732727051
    6. ' +' → logprob: -5.888180732727051
    7. 'to' → logprob: -6.263180732727051
    8. ')+' → logprob: -6.263180732727051
    9. ' ' → logprob: -8.38818073272705
    10. '),' → logprob: -8.76318073272705

Token 315: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0007763965986669064
    2. ' X' → logprob: -7.375776290893555
    3. '0' → logprob: -8.875776290893555
    4. ')' → logprob: -12.000776290893555
    5. 'H' → logprob: -13.375776290893555
    6. 'the' → logprob: -14.625776290893555
    7. 'top' → logprob: -15.125776290893555
    8. '```' → logprob: -15.125776290893555
    9. 'input' → logprob: -15.375776290893555
    10. ' ' → logprob: -15.375776290893555

Token 316: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002807623823173344
    2. ')
' → logprob: -8.375280380249023
    3. '+' → logprob: -10.750280380249023
    4. ' )' → logprob: -11.500280380249023
    5. ')
' → logprob: -11.875280380249023
    6. ')

' → logprob: -13.000280380249023
    7. ').' → logprob: -13.125280380249023
    8. ')+' → logprob: -13.375280380249023
    9. '),' → logprob: -13.625280380249023
    10. ')**' → logprob: -14.500280380249023

Token 317: '#' (ID: 2)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0006610880955122411
    2. '
' → logprob: -8.00066089630127
    3. 'import' → logprob: -8.37566089630127
    4. 'start' → logprob: -10.50066089630127
    5. 'distance' → logprob: -11.25066089630127
    6. 'dp' → logprob: -11.25066089630127
    7. 'from' → logprob: -11.25066089630127
    8. ' dist' → logprob: -12.25066089630127
    9. 'INF' → logprob: -12.25066089630127
    10. 'inf' → logprob: -12.50066089630127

Token 318: ' But' (ID: 3072)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.10084865242242813
    2. 'import' → logprob: -2.35084867477417
    3. 'start' → logprob: -7.72584867477417
    4. 'from' → logprob: -8.850848197937012
    5. 'INF' → logprob: -10.725848197937012
    6. 'def' → logprob: -12.100848197937012
    7. 'initial' → logprob: -12.100848197937012
    8. 'dp' → logprob: -12.350848197937012
    9. '#' → logprob: -12.350848197937012
    10. 'heap' → logprob: -12.475848197937012

Token 319: ' initial' (ID: 4871)
  Prédit: ' X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.9240595102310181
    2. 'X' → logprob: -1.299059510231018
    3. ' we' → logprob: -1.924059510231018
    4. ' not' → logprob: -3.1740593910217285
    5. ' ' → logprob: -4.0490593910217285
    6. ' for' → logprob: -4.1740593910217285
    7. ' dist' → logprob: -4.1740593910217285
    8. 'we' → logprob: -4.4240593910217285
    9. ' the' → logprob: -4.6740593910217285
    10. '0' → logprob: -4.9240593910217285

Token 320: ' position' (ID: 4010)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.024957537651062
    2. ' =' → logprob: -1.399957537651062
    3. '_state' → logprob: -2.1499576568603516
    4. '_position' → logprob: -2.3999576568603516
    5. '_height' → logprob: -3.3999576568603516
    6. '_dist' → logprob: -3.6499576568603516
    7. '_point' → logprob: -4.024957656860352
    8. 'state' → logprob: -4.399957656860352
    9. '_distance' → logprob: -4.524957656860352
    10. ' position' → logprob: -4.774957656860352

Token 321: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43032148480415344
    2. ':' → logprob: -1.930321455001831
    3. '=' → logprob: -2.555321455001831
    4. ' is' → logprob: -2.680321455001831
    5. ' ' → logprob: -3.930321455001831
    6. ',' → logprob: -4.43032169342041
    7. '0' → logprob: -4.55532169342041
    8. ' :' → logprob: -5.18032169342041
    9. ' at' → logprob: -5.30532169342041
    10. '_' → logprob: -5.93032169342041

Token 322: ' (' (ID: 350)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -1.0504708290100098
    2. ' at' → logprob: -1.3004708290100098
    3. '0' → logprob: -1.8004708290100098
    4. 'X' → logprob: -2.1754708290100098
    5. ' (' → logprob: -3.8004708290100098
    6. '(' → logprob: -4.05047082901001
    7. ' X' → logprob: -4.17547082901001
    8. 'not' → logprob: -4.42547082901001
    9. ' ' → logprob: -4.67547082901001
    10. ' not' → logprob: -4.67547082901001

Token 323: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12037201970815659
    2. 'X' → logprob: -2.3703720569610596
    3. ' ' → logprob: -4.4953718185424805
    4. ' X' → logprob: -5.1203718185424805
    5. ',' → logprob: -6.2453718185424805
    6. ')' → logprob: -8.12037181854248
    7. 'N' → logprob: -8.24537181854248
    8. 'node' → logprob: -9.49537181854248
    9. ' ,' → logprob: -9.74537181854248
    10. ' N' → logprob: -10.37037181854248

Token 324: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015709223225712776
    2. ' ,' → logprob: -6.876570701599121
    3. ' at' → logprob: -8.376570701599121
    4. ')' → logprob: -8.376570701599121
    5. ',X' → logprob: -10.001570701599121
    6. ',
' → logprob: -11.626570701599121
    7. '
' → logprob: -12.626570701599121
    8. ' )' → logprob: -13.126570701599121
    9. ' ' → logprob: -13.126570701599121
    10. 'X' → logprob: -13.251570701599121

Token 325: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.008701913058757782
    2. ' X' → logprob: -4.758701801300049
    3. ')' → logprob: -9.758702278137207
    4. '0' → logprob: -11.133702278137207
    5. ' ' → logprob: -11.883702278137207
    6. ',' → logprob: -12.758702278137207
    7. ''' → logprob: -14.008702278137207
    8. '   ' → logprob: -14.258702278137207
    9. 'H' → logprob: -14.508702278137207
    10. '  ' → logprob: -14.633702278137207

Token 326: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004634392389561981
    2. '+' → logprob: -7.875463485717773
    3. ')
' → logprob: -10.625463485717773
    4. ' )' → logprob: -10.625463485717773
    5. ',' → logprob: -10.875463485717773
    6. '),' → logprob: -12.250463485717773
    7. ' +' → logprob: -12.875463485717773
    8. '+)' → logprob: -13.250463485717773
    9. '))' → logprob: -13.875463485717773
    10. ')#' → logprob: -14.250463485717773

Token 327: '#' (ID: 2)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.005108645185828209
    2. '
' → logprob: -5.505108833312988
    3. ')' → logprob: -8.005108833312988
    4. 'distance' → logprob: -8.255108833312988
    5. ',' → logprob: -9.130108833312988
    6. ' dist' → logprob: -9.880108833312988
    7. ')
' → logprob: -9.880108833312988
    8. 'initial' → logprob: -10.130108833312988
    9. 'dp' → logprob: -10.255108833312988
    10. 'import' → logprob: -10.505108833312988

Token 328: ' We' (ID: 1416)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0028627701103687286
    2. 'import' → logprob: -6.377862930297852
    3. 'from' → logprob: -8.002862930297852
    4. 'start' → logprob: -8.127862930297852
    5. 'initial' → logprob: -8.252862930297852
    6. 'dp' → logprob: -9.627862930297852
    7. '
' → logprob: -10.002862930297852
    8. 'distance' → logprob: -10.502862930297852
    9. 'queue' → logprob: -10.627862930297852
    10. 'X' → logprob: -10.627862930297852

Token 329: ' can' (ID: 665)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.391342431306839
    2. '=' → logprob: -1.5163424015045166
    3. ' need' → logprob: -3.1413424015045166
    4. 'dist' → logprob: -3.5163424015045166
    5. 'need' → logprob: -4.516342639923096
    6. '.' → logprob: -5.641342639923096
    7. ')' → logprob: -6.141342639923096
    8. ''ll' → logprob: -6.391342639923096
    9. 'import' → logprob: -6.516342639923096
    10. 'initialize' → logprob: -6.641342639923096

Token 330: ' consider' (ID: 3331)
  Prédit: 'consider'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'consider' → logprob: -0.8831964731216431
    2. 'start' → logprob: -1.258196473121643
    3. 'use' → logprob: -3.0081963539123535
    4. 'initialize' → logprob: -3.2581963539123535
    5. 'cl' → logprob: -3.3831963539123535
    6. 'also' → logprob: -3.5081963539123535
    7. 'move' → logprob: -3.5081963539123535
    8. 'write' → logprob: -4.1331963539123535
    9. 'do' → logprob: -4.5081963539123535
    10. 'simulate' → logprob: -4.7581963539123535

Token 331: ' the' (ID: 290)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.01267186924815178
    2. 'import' → logprob: -5.137671947479248
    3. 'initial' → logprob: -6.262671947479248
    4. 'heap' → logprob: -6.512671947479248
    5. ' dist' → logprob: -7.137671947479248
    6. 'the' → logprob: -7.512671947479248
    7. 'queue' → logprob: -8.13767147064209
    8. 'a' → logprob: -8.38767147064209
    9. 'starting' → logprob: -8.51267147064209
    10. 'distance' → logprob: -8.63767147064209

Token 332: ' initial' (ID: 4871)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.7399740815162659
    2. 'initial' → logprob: -1.614974021911621
    3. 'distance' → logprob: -1.989974021911621
    4. 'starting' → logprob: -3.114974021911621
    5. 'start' → logprob: -3.239974021911621
    6. 'time' → logprob: -3.864974021911621
    7. 'current' → logprob: -4.114974021911621
    8. 'following' → logprob: -4.114974021911621
    9. 'heap' → logprob: -4.614974021911621
    10. 'rest' → logprob: -5.114974021911621

Token 333: ' time' (ID: 1058)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.767414927482605
    2. '_dist' → logprob: -1.392414927482605
    3. '_time' → logprob: -2.2674150466918945
    4. ' =' → logprob: -2.8924150466918945
    5. '=' → logprob: -3.5174150466918945
    6. 'time' → logprob: -3.8924150466918945
    7. '_distance' → logprob: -4.1424150466918945
    8. '_height' → logprob: -4.5174150466918945
    9. 'distance' → logprob: -4.5174150466918945
    10. ')' → logprob: -4.8924150466918945

Token 334: ' as' (ID: 472)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4744027853012085
    2. ' =' → logprob: -0.9744027853012085
    3. '+' → logprob: -9.34940242767334
    4. ')' → logprob: -9.47440242767334
    5. ' +=' → logprob: -9.84940242767334
    6. '+=' → logprob: -10.72440242767334
    7. ',' → logprob: -10.84940242767334
    8. '_' → logprob: -10.97440242767334
    9. ' +' → logprob: -11.34940242767334
    10. '0' → logprob: -11.72440242767334

Token 335: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.00012415809032972902
    2. ' X' → logprob: -9.000123977661133
    3. '0' → logprob: -14.750123977661133
    4. 'abs' → logprob: -15.750123977661133
    5. 'x' → logprob: -16.500123977661133
    6. '   ' → logprob: -17.000123977661133
    7. ' ' → logprob: -17.500123977661133
    8. 'H' → logprob: -18.750123977661133
    9. '(X' → logprob: -18.750123977661133
    10. '
' → logprob: -18.875123977661133

Token 336: ' (' (ID: 350)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.04607545956969261
    2. '
' → logprob: -3.1710753440856934
    3. 'import' → logprob: -6.421075344085693
    4. ',' → logprob: -7.296075344085693
    5. '
' → logprob: -8.421075820922852
    6. 'distance' → logprob: -9.171075820922852
    7. ',
' → logprob: -9.546075820922852
    8. ' dist' → logprob: -10.046075820922852
    9. 'from' → logprob: -10.046075820922852
    10. ')' → logprob: -10.171075820922852

Token 337: 'to' (ID: 935)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00290603912435472
    2. ' )' → logprob: -6.25290584564209
    3. ')
' → logprob: -7.00290584564209
    4. '+' → logprob: -10.75290584564209
    5. ',' → logprob: -11.00290584564209
    6. ' +' → logprob: -12.00290584564209
    7. ' )
' → logprob: -12.12790584564209
    8. ')
' → logprob: -12.37790584564209
    9. '),' → logprob: -13.00290584564209
    10. '
' → logprob: -13.37790584564209

Token 338: ' climb' (ID: 27049)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.012678340077400208
    2. ' climb' → logprob: -5.137678146362305
    3. 'reach' → logprob: -5.512678146362305
    4. ' reach' → logprob: -6.762678146362305
    5. ')' → logprob: -7.012678146362305
    6. 'go' → logprob: -8.887678146362305
    7. 'start' → logprob: -9.637678146362305
    8. '```' → logprob: -9.637678146362305
    9. '_cl' → logprob: -9.762678146362305
    10. ' cl' → logprob: -10.137678146362305

Token 339: ' from' (ID: 591)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03542323783040047
    2. '+' → logprob: -4.660423278808594
    3. 'to' → logprob: -5.160423278808594
    4. 'up' → logprob: -5.285423278808594
    5. ' up' → logprob: -5.785423278808594
    6. ' +' → logprob: -5.785423278808594
    7. 'from' → logprob: -5.910423278808594
    8. ' to' → logprob: -6.160423278808594
    9. ' from' → logprob: -6.535423278808594
    10. ' )' → logprob: -7.160423278808594

Token 340: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015264409012161195
    2. ' ' → logprob: -8.875152587890625
    3. 'ground' → logprob: -12.500152587890625
    4. 'current' → logprob: -13.250152587890625
    5. 'X' → logprob: -13.375152587890625
    6. 'the' → logprob: -13.875152587890625
    7. 'zero' → logprob: -13.875152587890625
    8. 'height' → logprob: -14.000152587890625
    9. 'base' → logprob: -14.250152587890625
    10. '```' → logprob: -14.625152587890625

Token 341: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9266199160483666e-05
    2. 'X' → logprob: -11.625019073486328
    3. ' ' → logprob: -12.000019073486328
    4. 'current' → logprob: -14.250019073486328
    5. 'input' → logprob: -14.375019073486328
    6. '```' → logprob: -14.625019073486328
    7. '
' → logprob: -14.750019073486328
    8. 'the' → logprob: -14.875019073486328
    9. 'zero' → logprob: -14.875019073486328
    10. ')' → logprob: -15.250019073486328

Token 342: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.1534440815448761
    2. 'to' → logprob: -2.2784440517425537
    3. ')' → logprob: -3.2784440517425537
    4. ' )' → logprob: -6.278444290161133
    5. ' up' → logprob: -9.153444290161133
    6. ' ' → logprob: -9.653444290161133
    7. '),' → logprob: -10.153444290161133
    8. ').' → logprob: -12.028444290161133
    9. ' ),' → logprob: -12.278444290161133
    10. ' ' → logprob: -12.403444290161133

Token 343: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0017150469357147813
    2. ' X' → logprob: -6.376715183258057
    3. '0' → logprob: -12.251714706420898
    4. ')' → logprob: -12.376714706420898
    5. 'x' → logprob: -13.876714706420898
    6. ' reach' → logprob: -14.376714706420898
    7. ' ' → logprob: -14.501714706420898
    8. 'input' → logprob: -14.626714706420898
    9. 'start' → logprob: -14.876714706420898
    10. 'top' → logprob: -15.001714706420898

Token 344: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015717383939772844
    2. ')
' → logprob: -8.875157356262207
    3. ')
' → logprob: -12.125157356262207
    4. ' )' → logprob: -12.250157356262207
    5. ')

' → logprob: -13.000157356262207
    6. '
' → logprob: -14.250157356262207
    7. '#' → logprob: -14.375157356262207
    8. ')

' → logprob: -14.500157356262207
    9. '))' → logprob: -14.875157356262207
    10. '),' → logprob: -15.000157356262207

Token 345: '#' (ID: 2)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0026824220549315214
    2. '
' → logprob: -6.377682209014893
    3. 'import' → logprob: -7.002682209014893
    4. 'heap' → logprob: -11.12768268585205
    5. 'dp' → logprob: -11.37768268585205
    6. 'queue' → logprob: -12.00268268585205
    7. 'distance' → logprob: -12.12768268585205
    8. 'q' → logprob: -12.25268268585205
    9. '```' → logprob: -12.37768268585205
    10. 'from' → logprob: -12.50268268585205

Token 346: ' Then' (ID: 7801)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00035333906998857856
    2. 'import' → logprob: -8.000353813171387
    3. '
' → logprob: -11.500353813171387
    4. 'dp' → logprob: -13.125353813171387
    5. 'heap' → logprob: -13.875353813171387
    6. 'from' → logprob: -14.125353813171387
    7. 'INF' → logprob: -14.250353813171387
    8. '#' → logprob: -14.375353813171387
    9. ' dist' → logprob: -14.500353813171387
    10. 'pq' → logprob: -14.625353813171387

Token 347: ' from' (ID: 591)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.007162281312048435
    2. 'import' → logprob: -5.257162094116211
    3. 'heap' → logprob: -6.757162094116211
    4. '
' → logprob: -8.382162094116211
    5. 'pq' → logprob: -8.632162094116211
    6. 'queue' → logprob: -9.132162094116211
    7. 'for' → logprob: -9.507162094116211
    8. 'hq' → logprob: -10.132162094116211
    9. 'q' → logprob: -10.382162094116211
    10. 'que' → logprob: -10.507162094116211

Token 348: ' there' (ID: 1354)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7089205980300903
    2. 'here' → logprob: -1.3339205980300903
    3. 'there' → logprob: -2.333920478820801
    4. 'node' → logprob: -3.333920478820801
    5. 'heap' → logprob: -3.583920478820801
    6. '(' → logprob: -3.583920478820801
    7. 'graph' → logprob: -3.958920478820801
    8. 'the' → logprob: -4.458920478820801
    9. ' there' → logprob: -5.333920478820801
    10. ' here' → logprob: -5.333920478820801

Token 349: ',' (ID: 11)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.7424076199531555
    2. 'import' → logprob: -0.9924076199531555
    3. ',' → logprob: -2.1174075603485107
    4. 'heap' → logprob: -4.24240779876709
    5. 'queue' → logprob: -4.61740779876709
    6. 'pq' → logprob: -5.99240779876709
    7. 'q' → logprob: -6.74240779876709
    8. 'distance' → logprob: -7.11740779876709
    9. 'visited' → logprob: -7.11740779876709
    10. ' dist' → logprob: -7.61740779876709

Token 350: ' for' (ID: 395)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.5423112511634827
    2. 'dist' → logprob: -1.292311191558838
    3. 'import' → logprob: -2.417311191558838
    4. 'pq' → logprob: -4.167311191558838
    5. 'for' → logprob: -4.292311191558838
    6. 'hq' → logprob: -4.417311191558838
    7. 'visited' → logprob: -5.042311191558838
    8. 'queue' → logprob: -5.417311191558838
    9. 'h' → logprob: -7.042311191558838
    10. 'q' → logprob: -7.792311191558838

Token 351: ' each' (ID: 2454)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.9685569405555725
    2. 'neighbor' → logprob: -1.3435568809509277
    3. ' node' → logprob: -1.4685568809509277
    4. ' neighbor' → logprob: -3.4685568809509277
    5. 'next' → logprob: -3.9685568809509277
    6. 'each' → logprob: -4.218556880950928
    7. ' u' → logprob: -4.593556880950928
    8. 'u' → logprob: -4.718556880950928
    9. 'neighbors' → logprob: -5.093556880950928
    10. ' next' → logprob: -5.218556880950928

Token 352: ' edge' (ID: 11165)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.1594889760017395
    2. ' neighbor' → logprob: -2.0344889163970947
    3. ' node' → logprob: -5.159489154815674
    4. 'node' → logprob: -5.409489154815674
    5. '_neighbor' → logprob: -6.784489154815674
    6. ' edge' → logprob: -6.909489154815674
    7. 'edge' → logprob: -7.159489154815674
    8. 'graph' → logprob: -7.659489154815674
    9. ' next' → logprob: -7.659489154815674
    10. 'next' → logprob: -7.784489154815674

Token 353: ' (' (ID: 350)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0675736591219902
    2. ',' → logprob: -3.5675735473632812
    3. 'in' → logprob: -3.5675735473632812
    4. 'u' → logprob: -5.692573547363281
    5. ':' → logprob: -6.067573547363281
    6. 'for' → logprob: -6.567573547363281
    7. ' u' → logprob: -7.567573547363281
    8. ' ,' → logprob: -7.692573547363281
    9. ' for' → logprob: -8.317573547363281
    10. '   ' → logprob: -8.817573547363281

Token 354: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.12995219230651855
    2. 'node' → logprob: -3.0049521923065186
    3. ' u' → logprob: -3.1299521923065186
    4. 'v' → logprob: -4.004952430725098
    5. ')' → logprob: -6.004952430725098
    6. ' node' → logprob: -6.254952430725098
    7. ',' → logprob: -6.629952430725098
    8. ' v' → logprob: -6.879952430725098
    9. '(u' → logprob: -7.129952430725098
    10. 'neighbor' → logprob: -7.254952430725098

Token 355: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029300155118107796
    2. '),' → logprob: -4.029300212860107
    3. ')' → logprob: -4.779300212860107
    4. ' ,' → logprob: -6.279300212860107
    5. ',u' → logprob: -8.65429973602295
    6. ',)' → logprob: -9.02929973602295
    7. '<|end|>' → logprob: -9.02929973602295
    8. '):' → logprob: -9.65429973602295
    9. ',),' → logprob: -10.02929973602295
    10. '   ' → logprob: -10.15429973602295

Token 356: ',t' (ID: 26927)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.631702184677124
    2. ')' → logprob: -1.256702184677124
    3. ',' → logprob: -1.881702184677124
    4. '):' → logprob: -3.506702184677124
    5. ' ),' → logprob: -7.881702423095703
    6. '):
' → logprob: -8.256702423095703
    7. ',)' → logprob: -8.256702423095703
    8. ' )' → logprob: -9.006702423095703
    9. ',),' → logprob: -9.506702423095703
    10. '   ' → logprob: -9.881702423095703

Token 357: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.425079345703125
    2. '),' → logprob: -1.175079345703125
    3. '):' → logprob: -3.550079345703125
    4. '):
' → logprob: -5.175079345703125
    5. ' )' → logprob: -7.050079345703125
    6. ',' → logprob: -7.050079345703125
    7. ' ),' → logprob: -7.675079345703125
    8. ')
' → logprob: -8.175079345703125
    9. '):

' → logprob: -8.175079345703125
    10. '):
' → logprob: -9.175079345703125

Token 358: ' JO' (ID: 72685)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09647070616483688
    2. ' for' → logprob: -3.096470594406128
    3. '   ' → logprob: -3.971470594406128
    4. '#' → logprob: -4.971470832824707
    5. 'if' → logprob: -5.346470832824707
    6. 'dist' → logprob: -5.346470832824707
    7. 'height' → logprob: -5.971470832824707
    8. 'time' → logprob: -6.096470832824707
    9. '
' → logprob: -6.221470832824707
    10. 'heap' → logprob: -6.971470832824707

Token 359: 'I' (ID: 40)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5590149760246277
    2. 'ur' → logprob: -1.4340150356292725
    3. 'b' → logprob: -3.4340150356292725
    4. 'y' → logprob: -3.6840150356292725
    5. 'urnal' → logprob: -3.8090150356292725
    6. 'i' → logprob: -4.184014797210693
    7. 'urn' → logprob: -4.184014797210693
    8. 'int' → logprob: -4.559014797210693
    9. '#' → logprob: -4.559014797210693
    10. 'ut' → logprob: -4.684014797210693

Token 360: ' can' (ID: 665)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7254602313041687
    2. ' can' → logprob: -1.8504602909088135
    3. '_time' → logprob: -2.4754602909088135
    4. 'time' → logprob: -2.7254602909088135
    5. 'ime' → logprob: -3.3504602909088135
    6. 'dist' → logprob: -4.350460052490234
    7. ')' → logprob: -4.475460052490234
    8. 't' → logprob: -4.600460052490234
    9. 'u' → logprob: -4.600460052490234
    10. '#' → logprob: -4.850460052490234

Token 361: ' fly' (ID: 14360)
  Prédit: 'fly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fly' → logprob: -0.628688633441925
    2. 'move' → logprob: -1.6286885738372803
    3. 'cl' → logprob: -2.2536885738372803
    4. 'go' → logprob: -2.6286885738372803
    5. 'pay' → logprob: -3.0036885738372803
    6. ' move' → logprob: -4.503688812255859
    7. ' fly' → logprob: -4.878688812255859
    8. 'wait' → logprob: -5.253688812255859
    9. 'consider' → logprob: -5.503688812255859
    10. ' go' → logprob: -5.753688812255859

Token 362: ' only' (ID: 1606)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.2152244746685028
    2. ' from' → logprob: -2.590224504470825
    3. ' to' → logprob: -3.340224504470825
    4. 'to' → logprob: -3.840224504470825
    5. ',' → logprob: -4.465224266052246
    6. 'v' → logprob: -4.590224266052246
    7. ' up' → logprob: -5.340224266052246
    8. ' ,' → logprob: -5.465224266052246
    9. 'up' → logprob: -5.465224266052246
    10. 'down' → logprob: -6.090224266052246

Token 363: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.33731845021247864
    2. ' if' → logprob: -2.2123184204101562
    3. 'from' → logprob: -2.9623184204101562
    4. 'at' → logprob: -3.2123184204101562
    5. 'up' → logprob: -3.2123184204101562
    6. 'when' → logprob: -4.087318420410156
    7. ' at' → logprob: -4.337318420410156
    8. ' up' → logprob: -5.212318420410156
    9. 'between' → logprob: -5.587318420410156
    10. 'down' → logprob: -6.337318420410156

Token 364: ':
' (ID: 734)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.07365920394659042
    2. 'X' → logprob: -3.6986591815948486
    3. 'abs' → logprob: -4.073659420013428
    4. 't' → logprob: -4.698659420013428
    5. 'he' → logprob: -5.073659420013428
    6. 'graph' → logprob: -5.448659420013428
    7. 'v' → logprob: -5.823659420013428
    8. 'dist' → logprob: -6.198659420013428
    9. ' H' → logprob: -6.698659420013428
    10. 'current' → logprob: -7.198659420013428

Token 365: '#' (ID: 2)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.1745579242706299
    2. ' H' → logprob: -1.5495579242706299
    3. ' abs' → logprob: -1.5495579242706299
    4. 'abs' → logprob: -1.9245579242706299
    5. 'X' → logprob: -3.17455792427063
    6. ' v' → logprob: -3.79955792427063
    7. 'v' → logprob: -4.049557685852051
    8. ' X' → logprob: -4.049557685852051
    9. '   ' → logprob: -5.799557685852051
    10. 'graph' → logprob: -6.049557685852051

Token 366: ' current' (ID: 2208)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.08256294578313828
    2. 'X' → logprob: -2.9575629234313965
    3. 'u' → logprob: -5.4575629234313965
    4. 'v' → logprob: -5.4575629234313965
    5. 't' → logprob: -5.5825629234313965
    6. ' H' → logprob: -5.5825629234313965
    7. 'graph' → logprob: -5.8325629234313965
    8. 'he' → logprob: -5.9575629234313965
    9. 'abs' → logprob: -6.3325629234313965
    10. 'h' → logprob: -6.8325629234313965

Token 367: ' height' (ID: 4679)
  Prédit: '_height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_height' → logprob: -0.07350094616413116
    2. 'height' → logprob: -2.823500871658325
    3. ' height' → logprob: -4.823501110076904
    4. '_h' → logprob: -6.073501110076904
    5. 'H' → logprob: -8.698500633239746
    6. '[' → logprob: -8.823500633239746
    7. 'Height' → logprob: -9.198500633239746
    8. '_node' → logprob: -9.323500633239746
    9. ' _' → logprob: -9.323500633239746
    10. '_' → logprob: -9.448500633239746

Token 368: ' h' (ID: 312)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.20245029032230377
    2. ' <=' → logprob: -1.8274502754211426
    3. '>=' → logprob: -4.202450275421143
    4. '<=' → logprob: -5.827450275421143
    5. ' ==' → logprob: -5.827450275421143
    6. ' >' → logprob: -7.577450275421143
    7. ' ' → logprob: -8.3274507522583
    8. '>' → logprob: -8.4524507522583
    9. '==' → logprob: -8.4524507522583
    10. ' at' → logprob: -9.4524507522583

Token 369: '_u' (ID: 17063)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.4517136514186859
    2. ' <=' → logprob: -1.2017136812210083
    3. ' ' → logprob: -3.9517135620117188
    4. ' ==' → logprob: -4.201713562011719
    5. ' <' → logprob: -4.451713562011719
    6. '>=' → logprob: -5.201713562011719
    7. ' >' → logprob: -5.326713562011719
    8. '<=' → logprob: -6.201713562011719
    9. ' +' → logprob: -7.201713562011719
    10. '>' → logprob: -7.451713562011719

Token 370: ' satisfies' (ID: 126205)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.06428121775388718
    2. ' <=' → logprob: -3.4392812252044678
    3. '>=' → logprob: -4.064280986785889
    4. ' ==' → logprob: -5.439280986785889
    5. ' ' → logprob: -5.689280986785889
    6. ' >' → logprob: -6.564280986785889
    7. '>' → logprob: -7.439280986785889
    8. '<=' → logprob: -7.439280986785889
    9. '_' → logprob: -7.689280986785889
    10. ' <' → logprob: -7.939280986785889

Token 371: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.4390530288219452
    2. 'H' → logprob: -1.1890530586242676
    3. ' h' → logprob: -3.9390530586242676
    4. 'graph' → logprob: -4.689053058624268
    5. ' H' → logprob: -4.939053058624268
    6. 'abs' → logprob: -5.064053058624268
    7. ' abs' → logprob: -5.939053058624268
    8. 'X' → logprob: -6.564053058624268
    9. ' graph' → logprob: -7.439053058624268
    10. '"h' → logprob: -7.689053058624268

Token 372: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -0.6113585829734802
    2. '_' → logprob: -1.236358642578125
    3. '_v' → logprob: -3.111358642578125
    4. ' <=' → logprob: -3.611358642578125
    5. '>=' → logprob: -3.611358642578125
    6. '<=' → logprob: -3.986358642578125
    7. ' >=' → logprob: -3.986358642578125
    8. ' _' → logprob: -4.736358642578125
    9. '>' → logprob: -5.236358642578125
    10. '_i' → logprob: -5.486358642578125

Token 373: ' -' (ID: 533)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.8756037950515747
    2. '>=' → logprob: -1.3756037950515747
    3. ' <=' → logprob: -1.7506037950515747
    4. '<=' → logprob: -2.250603675842285
    5. '=' → logprob: -3.625603675842285
    6. '>' → logprob: -5.000603675842285
    7. '_' → logprob: -5.500603675842285
    8. ')' → logprob: -6.000603675842285
    9. '+' → logprob: -6.625603675842285
    10. ',' → logprob: -7.000603675842285

Token 374: ' t' (ID: 260)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.587804913520813
    2. 't' → logprob: -1.087804913520813
    3. 'graph' → logprob: -2.8378047943115234
    4. 'H' → logprob: -3.8378047943115234
    5. 'X' → logprob: -4.712804794311523
    6. '1' → logprob: -5.087804794311523
    7. ' T' → logprob: -5.462804794311523
    8. ' graph' → logprob: -5.712804794311523
    9. ' t' → logprob: -5.837804794311523
    10. '(graph' → logprob: -8.337804794311523

Token 375: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.1786692887544632
    2. '>=' → logprob: -2.1786692142486572
    3. ' >' → logprob: -4.053669452667236
    4. '+' → logprob: -4.428669452667236
    5. '>' → logprob: -4.553669452667236
    6. ' +' → logprob: -5.428669452667236
    7. ' ' → logprob: -6.428669452667236
    8. ')' → logprob: -7.678669452667236
    9. ' <=' → logprob: -7.678669452667236
    10. ',' → logprob: -8.053668975830078

Token 376: ' ' (ID: 220)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.28952375054359436
    2. '0' → logprob: -1.414523720741272
    3. 'X' → logprob: -5.414523601531982
    4. 'h' → logprob: -6.539523601531982
    5. 't' → logprob: -7.039523601531982
    6. ' H' → logprob: -7.539523601531982
    7. ' ' → logprob: -7.914523601531982
    8. 'max' → logprob: -8.16452407836914
    9. '1' → logprob: -8.66452407836914
    10. 'T' → logprob: -10.03952407836914

Token 377: '0' (ID: 15)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.6537240147590637
    2. '0' → logprob: -0.9037240147590637
    3. 'h' → logprob: -3.403723955154419
    4. 't' → logprob: -3.403723955154419
    5. 'graph' → logprob: -5.403724193572998
    6. 'max' → logprob: -6.653724193572998
    7. 'X' → logprob: -7.403724193572998
    8. ' H' → logprob: -7.653724193572998
    9. ' ' → logprob: -7.653724193572998
    10. '1' → logprob: -8.52872371673584

Token 378: ' and' (ID: 326)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0725039541721344
    2. 'distance' → logprob: -3.9475040435791016
    3. '
' → logprob: -4.072504043579102
    4. 'import' → logprob: -4.447504043579102
    5. ')
' → logprob: -5.447504043579102
    6. ')' → logprob: -5.447504043579102
    7. ' dist' → logprob: -6.072504043579102
    8. 'visited' → logprob: -6.197504043579102
    9. '#' → logprob: -6.572504043579102
    10. ',' → logprob: -7.072504043579102

Token 379: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.03905407711863518
    2. ' h' → logprob: -3.4140541553497314
    3. 'current' → logprob: -6.164053916931152
    4. 'graph' → logprob: -6.789053916931152
    5. 'v' → logprob: -7.289053916931152
    6. 'u' → logprob: -8.664053916931152
    7. '#' → logprob: -8.664053916931152
    8. ' (' → logprob: -8.789053916931152
    9. ' current' → logprob: -8.914053916931152
    10. 'H' → logprob: -9.289053916931152

Token 380: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -0.08063925802707672
    2. '_v' → logprob: -2.955639362335205
    3. '_' → logprob: -4.580639362335205
    4. 'v' → logprob: -4.705639362335205
    5. 'u' → logprob: -6.080639362335205
    6. '_t' → logprob: -7.330639362335205
    7. '<=' → logprob: -7.580639362335205
    8. ' <=' → logprob: -8.080638885498047
    9. '+' → logprob: -8.080638885498047
    10. ' _' → logprob: -8.330638885498047

Token 381: ' -' (ID: 533)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.6614612936973572
    2. '>=' → logprob: -1.786461353302002
    3. '-' → logprob: -2.161461353302002
    4. ' <=' → logprob: -2.786461353302002
    5. ' -' → logprob: -2.911461353302002
    6. '+' → logprob: -3.411461353302002
    7. '<=' → logprob: -4.036461353302002
    8. ')' → logprob: -4.786461353302002
    9. ' +' → logprob: -5.411461353302002
    10. '_' → logprob: -5.536461353302002

Token 382: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2028907686471939
    2. ' t' → logprob: -1.7028907537460327
    3. 'T' → logprob: -7.077890872955322
    4. ' T' → logprob: -7.952890872955322
    5. 'graph' → logprob: -9.202890396118164
    6. ' ' → logprob: -9.827890396118164
    7. ' graph' → logprob: -10.077890396118164
    8. ' M' → logprob: -11.077890396118164
    9. 'H' → logprob: -11.452890396118164
    10. 'M' → logprob: -11.515390396118164

Token 383: ' <=' (ID: 5017)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.08765389770269394
    2. '>=' → logprob: -2.587653875350952
    3. ' <=' → logprob: -5.587654113769531
    4. ' >' → logprob: -6.837654113769531
    5. '+' → logprob: -7.212654113769531
    6. '>' → logprob: -7.212654113769531
    7. '-' → logprob: -7.712654113769531
    8. ')' → logprob: -7.962654113769531
    9. ' ' → logprob: -8.337654113769531
    10. '<=' → logprob: -8.337654113769531

Token 384: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -2.7968066206085496e-05
    2. ' H' → logprob: -11.000027656555176
    3. 'min' → logprob: -11.500027656555176
    4. 'h' → logprob: -14.625027656555176
    5. '   ' → logprob: -15.500027656555176
    6. 'max' → logprob: -15.875027656555176
    7. 'X' → logprob: -16.625028610229492
    8. '	H' → logprob: -16.750028610229492
    9. '```' → logprob: -16.875028610229492
    10. ' ' → logprob: -17.125028610229492

Token 385: '[v' (ID: 36561)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7186195850372314
    2. ')' → logprob: -1.4686195850372314
    3. '_' → logprob: -2.0936195850372314
    4. '_u' → logprob: -2.8436195850372314
    5. '[u' → logprob: -3.0936195850372314
    6. ']' → logprob: -3.4686195850372314
    7. '[node' → logprob: -4.593619346618652
    8. 'u' → logprob: -5.843619346618652
    9. ')_' → logprob: -6.218619346618652
    10. '_)' → logprob: -7.093619346618652

Token 386: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3028221130371094
    2. ')' → logprob: -1.9278221130371094
    3. '])' → logprob: -2.1778221130371094
    4. '],' → logprob: -7.302822113037109
    5. ')]' → logprob: -7.802822113037109
    6. ']
' → logprob: -8.55282211303711
    7. ']),' → logprob: -8.67782211303711
    8. '-' → logprob: -9.30282211303711
    9. ' ]' → logprob: -9.30282211303711
    10. ')
' → logprob: -9.42782211303711

Token 387: '#' (ID: 2)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.034433700144290924
    2. '
' → logprob: -4.534433841705322
    3. 'import' → logprob: -4.909433841705322
    4. 'distance' → logprob: -5.284433841705322
    5. ' dist' → logprob: -6.284433841705322
    6. ')' → logprob: -6.659433841705322
    7. 'dp' → logprob: -7.659433841705322
    8. 'current' → logprob: -7.659433841705322
    9. 'from' → logprob: -7.659433841705322
    10. 'def' → logprob: -7.659433841705322

Token 388: ' Since' (ID: 12265)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00041148843592964113
    2. 'import' → logprob: -8.375411033630371
    3. 'from' → logprob: -9.500411033630371
    4. 'distance' → logprob: -10.250411033630371
    5. '#' → logprob: -11.000411033630371
    6. ' dist' → logprob: -11.250411033630371
    7. '```' → logprob: -11.500411033630371
    8. 'X' → logprob: -11.875411033630371
    9. '
' → logprob: -12.375411033630371
    10. 'dp' → logprob: -13.000411033630371

Token 389: ' we' (ID: 581)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.5502727031707764
    2. 'he' → logprob: -1.9252727031707764
    3. 'we' → logprob: -2.0502727031707764
    4. 'the' → logprob: -2.5502727031707764
    5. ' h' → logprob: -3.6752727031707764
    6. 'current' → logprob: -4.6752729415893555
    7. 'height' → logprob: -5.0502729415893555
    8. ' we' → logprob: -5.0502729415893555
    9. ' the' → logprob: -5.5502729415893555
    10. '#' → logprob: -5.6752729415893555

Token 390: ' only' (ID: 1606)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.594397783279419
    2. 'can' → logprob: -1.469397783279419
    3. ' have' → logprob: -3.219397783279419
    4. ' want' → logprob: -3.344397783279419
    5. ' need' → logprob: -3.719397783279419
    6. 'have' → logprob: -3.969397783279419
    7. ' cannot' → logprob: -4.34439754486084
    8. ' only' → logprob: -4.34439754486084
    9. 'need' → logprob: -4.84439754486084
    10. 'know' → logprob: -4.84439754486084

Token 391: ' consider' (ID: 3331)
  Prédit: 'consider'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'consider' → logprob: -0.5324903130531311
    2. 'store' → logprob: -1.4074902534484863
    3. ' store' → logprob: -3.0324902534484863
    4. ' consider' → logprob: -3.2824902534484863
    5. 'keep' → logprob: -3.5324902534484863
    6. 'have' → logprob: -4.157490253448486
    7. ' have' → logprob: -4.657490253448486
    8. 'can' → logprob: -5.032490253448486
    9. 'know' → logprob: -5.157490253448486
    10. ' can' → logprob: -5.532490253448486

Token 392: ' states' (ID: 9407)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.9908381104469299
    2. 'he' → logprob: -1.2408380508422852
    3. 'the' → logprob: -1.8658380508422852
    4. ' heights' → logprob: -2.240838050842285
    5. 'height' → logprob: -2.990838050842285
    6. ' the' → logprob: -4.490838050842285
    7. ' top' → logprob: -4.990838050842285
    8. 'tops' → logprob: -5.490838050842285
    9. 'h' → logprob: -6.115838050842285
    10. 'current' → logprob: -6.740838050842285

Token 393: ' at' (ID: 540)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.7862728834152222
    2. ' at' → logprob: -0.9112728834152222
    3. '=' → logprob: -2.0362730026245117
    4. ' =' → logprob: -5.036273002624512
    5. ')' → logprob: -6.411273002624512
    6. ',' → logprob: -7.036273002624512
    7. '[node' → logprob: -7.161273002624512
    8. '_at' → logprob: -8.036273002624512
    9. ':' → logprob: -8.536273002624512
    10. 'with' → logprob: -8.536273002624512

Token 394: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.37736719846725464
    2. 'the' → logprob: -1.2523672580718994
    3. ' top' → logprob: -4.12736701965332
    4. ' the' → logprob: -5.00236701965332
    5. 'height' → logprob: -5.62736701965332
    6. 'tops' → logprob: -6.37736701965332
    7. 'he' → logprob: -9.25236701965332
    8. ' height' → logprob: -9.62736701965332
    9. 'node' → logprob: -9.87736701965332
    10. 'tree' → logprob: -10.00236701965332

Token 395: ' of' (ID: 328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.30105528235435486
    2. '_height' → logprob: -2.1760551929473877
    3. '_' → logprob: -2.5510551929473877
    4. ']' → logprob: -3.6760551929473877
    5. 'height' → logprob: -4.176055431365967
    6. ')_' → logprob: -5.676055431365967
    7. ',' → logprob: -5.801055431365967
    8. '-level' → logprob: -5.926055431365967
    9. '_)' → logprob: -6.176055431365967
    10. ' )' → logprob: -6.426055431365967

Token 396: ' tree' (ID: 8165)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.9805983901023865
    2. 'node' → logprob: -1.3555984497070312
    3. 'the' → logprob: -1.4805984497070312
    4. 'nodes' → logprob: -2.4805984497070312
    5. 'trees' → logprob: -4.230598449707031
    6. ' each' → logprob: -5.105598449707031
    7. 'tree' → logprob: -5.105598449707031
    8. ']' → logprob: -5.230598449707031
    9. 'H' → logprob: -5.355598449707031
    10. ' node' → logprob: -5.480598449707031

Token 397: ' u' (ID: 337)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19199365377426147
    2. ':' → logprob: -2.5669937133789062
    3. ')' → logprob: -2.9419937133789062
    4. '):' → logprob: -4.566993713378906
    5. '[' → logprob: -4.691993713378906
    6. '[node' → logprob: -5.316993713378906
    7. 's' → logprob: -5.691993713378906
    8. ',
' → logprob: -5.941993713378906
    9. ']' → logprob: -6.316993713378906
    10. '```' → logprob: -6.316993713378906

Token 398: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14644216001033783
    2. ')' → logprob: -2.896442174911499
    3. ']' → logprob: -3.146442174911499
    4. ':' → logprob: -4.39644193649292
    5. '],' → logprob: -5.64644193649292
    6. '):' → logprob: -5.64644193649292
    7. '),' → logprob: -5.77144193649292
    8. '[' → logprob: -6.02144193649292
    9. '#' → logprob: -6.14644193649292
    10. ',
' → logprob: -6.39644193649292

Token 399: 'height' (ID: 5097)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4368264973163605
    2. '),' → logprob: -1.061826467514038
    3. ',' → logprob: -6.186826705932617
    4. ')
' → logprob: -7.061826705932617
    5. '),
' → logprob: -7.561826705932617
    6. ')]' → logprob: -7.561826705932617
    7. ')],' → logprob: -7.936826705932617
    8. ' )' → logprob: -7.936826705932617
    9. '_' → logprob: -8.311826705932617
    10. ')])' → logprob: -8.311826705932617

Token 400: ' H' (ID: 487)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.05416965112090111
    2. '[v' → logprob: -4.179169654846191
    3. ')' → logprob: -4.554169654846191
    4. '),' → logprob: -5.054169654846191
    5. '[' → logprob: -5.054169654846191
    6. '_u' → logprob: -5.554169654846191
    7. 'u' → logprob: -6.304169654846191
    8. ' )' → logprob: -6.304169654846191
    9. '[node' → logprob: -6.304169654846191
    10. ' ),' → logprob: -6.429169654846191

Token 401: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.18985727429389954
    2. '[' → logprob: -1.8148572444915771
    3. '[v' → logprob: -4.939857482910156
    4. '[node' → logprob: -6.064857482910156
    5. ')' → logprob: -8.689857482910156
    6. '])' → logprob: -9.314857482910156
    7. 'u' → logprob: -9.439857482910156
    8. 'v' → logprob: -10.564857482910156
    9. '[X' → logprob: -10.814857482910156
    10. ']' → logprob: -10.814857482910156

Token 402: ']),' (ID: 19560)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.28843528032302856
    2. ']),' → logprob: -1.9134352207183838
    3. ']' → logprob: -2.663435220718384
    4. ')' → logprob: -3.913435220718384
    5. '])
' → logprob: -5.663435459136963
    6. ']),
' → logprob: -6.163435459136963
    7. ']+' → logprob: -6.538435459136963
    8. ')]' → logprob: -6.788435459136963
    9. ']):' → logprob: -7.038435459136963
    10. ']))' → logprob: -7.288435459136963

Token 403: ' we' (ID: 581)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.4403146505355835
    2. ')' → logprob: -1.5653146505355835
    3. 'for' → logprob: -1.8153146505355835
    4. '#' → logprob: -1.8153146505355835
    5. 'heap' → logprob: -2.565314769744873
    6. 'import' → logprob: -3.190314769744873
    7. ' for' → logprob: -3.815314769744873
    8. 'distance' → logprob: -4.565314769744873
    9. '   ' → logprob: -4.690314769744873
    10. ' dist' → logprob: -4.815314769744873

Token 404: ' can' (ID: 665)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.35443708300590515
    2. ' can' → logprob: -2.3544371128082275
    3. ')' → logprob: -2.7294371128082275
    4. 'continue' → logprob: -2.9794371128082275
    5. 'can' → logprob: -3.2294371128082275
    6. ' need' → logprob: -4.979436874389648
    7. '
' → logprob: -4.979436874389648
    8. ''ll' → logprob: -5.229436874389648
    9. ']' → logprob: -5.354436874389648
    10. ',' → logprob: -5.729436874389648

Token 405: ' try' (ID: 2075)
  Prédit: 'only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'only' → logprob: -1.032754898071289
    2. ' only' → logprob: -1.532754898071289
    3. 'consider' → logprob: -2.032754898071289
    4. 'continue' → logprob: -2.657754898071289
    5. 'move' → logprob: -3.282754898071289
    6. 'try' → logprob: -3.407754898071289
    7. 'start' → logprob: -4.032754898071289
    8. 'fly' → logprob: -4.157754898071289
    9. 'adjust' → logprob: -4.157754898071289
    10. 'ass' → logprob: -4.407754898071289

Token 406: ' to' (ID: 316)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.2402805089950562
    2. 'for' → logprob: -1.3652805089950562
    3. '   ' → logprob: -1.6152805089950562
    4. ' h' → logprob: -2.6152806282043457
    5. 'to' → logprob: -2.8652806282043457
    6. 'all' → logprob: -3.1152806282043457
    7. ' for' → logprob: -3.8652806282043457
    8. ' to' → logprob: -3.9902806282043457
    9. 'he' → logprob: -4.615280628204346
    10. ' all' → logprob: -4.990280628204346

Token 407: ' adjust' (ID: 10266)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.563258707523346
    2. 'fly' → logprob: -0.938258707523346
    3. 'range' → logprob: -3.688258647918701
    4. 'move' → logprob: -5.438258647918701
    5. ' for' → logprob: -6.938258647918701
    6. '
' → logprob: -6.938258647918701
    7. ' fly' → logprob: -7.438258647918701
    8. 'jump' → logprob: -7.438258647918701
    9. ' range' → logprob: -7.688258647918701
    10. 'go' → logprob: -7.688258647918701

Token 408: ' height' (ID: 4679)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.5757750272750854
    2. 'height' → logprob: -1.8257750272750854
    3. ' the' → logprob: -2.075775146484375
    4. 'the' → logprob: -2.325775146484375
    5. 'h' → logprob: -2.950775146484375
    6. '```' → logprob: -2.950775146484375
    7. ' H' → logprob: -3.075775146484375
    8. ' height' → logprob: -3.075775146484375
    9. 'down' → logprob: -3.575775146484375
    10. '
' → logprob: -3.700775146484375

Token 409: ' by' (ID: 656)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.551315188407898
    2. '_' → logprob: -1.926315188407898
    3. ')' → logprob: -2.1763153076171875
    4. ' at' → logprob: -2.3013153076171875
    5. ',' → logprob: -2.6763153076171875
    6. ' for' → logprob: -2.9263153076171875
    7. ' to' → logprob: -3.3013153076171875
    8. '=' → logprob: -3.4263153076171875
    9. '[' → logprob: -3.4263153076171875
    10. '   ' → logprob: -3.9263153076171875

Token 410: ' going' (ID: 2966)
  Prédit: 'descending'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'descending' → logprob: -0.6165319085121155
    2. 'moving' → logprob: -2.3665318489074707
    3. 'subtract' → logprob: -2.7415318489074707
    4. 'pay' → logprob: -3.3665318489074707
    5. 'f' → logprob: -3.4915318489074707
    6. '-' → logprob: -3.4915318489074707
    7. '1' → logprob: -3.6165318489074707
    8. 't' → logprob: -3.9915318489074707
    9. 'de' → logprob: -4.116531848907471
    10. ' paying' → logprob: -4.491531848907471

Token 411: ' up' (ID: 869)
  Prédit: ' down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' down' → logprob: -0.12906306982040405
    2. 'down' → logprob: -2.129063129425049
    3. ' up' → logprob: -6.629063129425049
    4. '_down' → logprob: -8.37906265258789
    5. 'up' → logprob: -8.50406265258789
    6. '-' → logprob: -9.25406265258789
    7. '   ' → logprob: -9.62906265258789
    8. ' to' → logprob: -9.87906265258789
    9. 'dow' → logprob: -10.37906265258789
    10. ' ' → logprob: -11.00406265258789

Token 412: '/down' (ID: 170878)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.12886261940002441
    2. ' and' → logprob: -3.3788626194000244
    3. 'or' → logprob: -3.7538626194000244
    4. 'and' → logprob: -4.628862380981445
    5. ' to' → logprob: -4.878862380981445
    6. 'down' → logprob: -4.878862380981445
    7. 'from' → logprob: -5.128862380981445
    8. ')' → logprob: -5.378862380981445
    9. '   ' → logprob: -5.628862380981445
    10. ',' → logprob: -5.628862380981445

Token 413: ' before' (ID: 2254)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6086488366127014
    2. '
' → logprob: -1.9836487770080566
    3. ',' → logprob: -2.3586487770080566
    4. '[' → logprob: -3.7336487770080566
    5. 'u' → logprob: -3.7336487770080566
    6. ' ' → logprob: -4.108648777008057
    7. ' at' → logprob: -4.358648777008057
    8. ':' → logprob: -4.483648777008057
    9. ')
' → logprob: -4.483648777008057
    10. ']' → logprob: -4.733648777008057

Token 414: ' flying' (ID: 28022)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.1997654438018799
    2. 'moving' → logprob: -1.3247654438018799
    3. 'the' → logprob: -1.4497654438018799
    4. 'continu' → logprob: -2.44976544380188
    5. 'taking' → logprob: -3.19976544380188
    6. ' flying' → logprob: -4.199765205383301
    7. 'each' → logprob: -4.449765205383301
    8. 'fl' → logprob: -5.074765205383301
    9. 'travel' → logprob: -5.324765205383301
    10. 'jump' → logprob: -5.449765205383301

Token 415: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.132547989487648
    2. 'dist' → logprob: -3.0075480937957764
    3. ')' → logprob: -4.507547855377197
    4. 'u' → logprob: -5.007547855377197
    5. ')
' → logprob: -5.132547855377197
    6. 'for' → logprob: -5.257547855377197
    7. ',' → logprob: -5.382547855377197
    8. '
' → logprob: -5.382547855377197
    9. '#' → logprob: -5.507547855377197
    10. 'def' → logprob: -5.757547855377197

Token 416: '#' (ID: 2)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.10957252979278564
    2. 'for' → logprob: -3.859572410583496
    3. '#' → logprob: -3.984572410583496
    4. 'distance' → logprob: -4.234572410583496
    5. '
' → logprob: -4.359572410583496
    6. 'import' → logprob: -4.859572410583496
    7. 'heap' → logprob: -5.234572410583496
    8. 'while' → logprob: -5.359572410583496
    9. 'dp' → logprob: -5.984572410583496
    10. 'visited' → logprob: -5.984572410583496

Token 417: ' So' (ID: 2632)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.039386264979839325
    2. '#' → logprob: -4.16438627243042
    3. 'distance' → logprob: -4.91438627243042
    4. 'visited' → logprob: -5.53938627243042
    5. '
' → logprob: -6.03938627243042
    6. 'def' → logprob: -6.16438627243042
    7. 'import' → logprob: -6.28938627243042
    8. 'for' → logprob: -7.28938627243042
    9. 'heap' → logprob: -7.28938627243042
    10. 'dp' → logprob: -7.28938627243042

Token 418: ' at' (ID: 540)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004529926925897598
    2. ' for' → logprob: -5.75452995300293
    3. 'dist' → logprob: -7.00452995300293
    4. '#' → logprob: -8.25452995300293
    5. '
' → logprob: -9.37952995300293
    6. 'def' → logprob: -10.37952995300293
    7. 'import' → logprob: -10.75452995300293
    8. 'heap' → logprob: -11.00452995300293
    9. 'queue' → logprob: -12.12952995300293
    10. 'from' → logprob: -12.37952995300293

Token 419: ' node' (ID: 4596)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.8697803020477295
    2. ' each' → logprob: -0.9947803020477295
    3. ' node' → logprob: -2.4947803020477295
    4. 'node' → logprob: -2.8697803020477295
    5. 'u' → logprob: -3.6197803020477295
    6. 'current' → logprob: -4.744780540466309
    7. 'the' → logprob: -4.744780540466309
    8. ' the' → logprob: -4.869780540466309
    9. ' u' → logprob: -5.244780540466309
    10. ' current' → logprob: -5.619780540466309

Token 420: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.11941476911306381
    2. ' u' → logprob: -2.619414806365967
    3. '[u' → logprob: -4.744414806365967
    4. ',' → logprob: -4.869414806365967
    5. '0' → logprob: -4.994414806365967
    6. ' =' → logprob: -5.119414806365967
    7. 'v' → logprob: -6.119414806365967
    8. '
' → logprob: -6.369414806365967
    9. ' ' → logprob: -6.494414806365967
    10. '_' → logprob: -7.369414806365967

Token 421: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014978595077991486
    2. ' ,' → logprob: -5.139978408813477
    3. '[' → logprob: -5.764978408813477
    4. ')' → logprob: -6.639978408813477
    5. '#' → logprob: -7.014978408813477
    6. '[u' → logprob: -7.264978408813477
    7. '),' → logprob: -7.764978408813477
    8. ']' → logprob: -8.389978408813477
    9. ',H' → logprob: -8.389978408813477
    10. '<|end|>' → logprob: -8.389978408813477

Token 422: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.038982998579740524
    2. ' for' → logprob: -3.288983106613159
    3. '#' → logprob: -7.53898286819458
    4. 'height' → logprob: -9.038983345031738
    5. 'current' → logprob: -9.538983345031738
    6. 'h' → logprob: -9.663983345031738
    7. 'dist' → logprob: -10.288983345031738
    8. 'while' → logprob: -10.663983345031738
    9. ' #' → logprob: -11.288983345031738
    10. '   ' → logprob: -11.538983345031738

Token 423: ' we' (ID: 581)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.16612350940704346
    2. ' H' → logprob: -1.9161235094070435
    3. 'graph' → logprob: -6.416123390197754
    4. ' we' → logprob: -6.541123390197754
    5. 'we' → logprob: -7.291123390197754
    6. ' graph' → logprob: -7.416123390197754
    7. 'h' → logprob: -7.416123390197754
    8. 'X' → logprob: -8.291123390197754
    9. '   ' → logprob: -8.791123390197754
    10. ' h' → logprob: -9.541123390197754

Token 424: ' want' (ID: 1682)
  Prédit: ' want'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' want' → logprob: -0.6549347639083862
    2. 'want' → logprob: -1.6549347639083862
    3. 'can' → logprob: -2.404934883117676
    4. ' can' → logprob: -2.654934883117676
    5. 'have' → logprob: -2.779934883117676
    6. 'w' → logprob: -3.654934883117676
    7. ' have' → logprob: -3.904934883117676
    8. 'adjust' → logprob: -5.404934883117676
    9. 'choose' → logprob: -5.904934883117676
    10. 'consider' → logprob: -5.904934883117676

Token 425: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.08959143608808517
    2. ' to' → logprob: -2.4645915031433105
    3. 'fly' → logprob: -7.4645915031433105
    4. '   ' → logprob: -10.339591026306152
    5. ' fly' → logprob: -11.714591026306152
    6. '	to' → logprob: -11.964591026306152
    7. ',to' → logprob: -12.839591026306152
    8. '
' → logprob: -12.839591026306152
    9. ')' → logprob: -12.964591026306152
    10. '_to' → logprob: -13.214591026306152

Token 426: ' fly' (ID: 14360)
  Prédit: 'fly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fly' → logprob: -0.00432045292109251
    2. ' fly' → logprob: -5.6293206214904785
    3. 'move' → logprob: -7.8793206214904785
    4. 'go' → logprob: -8.50432014465332
    5. ' move' → logprob: -10.00432014465332
    6. 'land' → logprob: -10.25432014465332
    7. 'jump' → logprob: -12.12932014465332
    8. 'be' → logprob: -12.12932014465332
    9. '.fly' → logprob: -12.37932014465332
    10. 'depart' → logprob: -12.50432014465332

Token 427: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.3957209587097168
    2. 'to' → logprob: -1.6457209587097168
    3. ' at' → logprob: -1.6457209587097168
    4. 'down' → logprob: -1.7707209587097168
    5. 'from' → logprob: -2.020720958709717
    6. ' from' → logprob: -3.520720958709717
    7. 'at' → logprob: -3.895720958709717
    8. ' down' → logprob: -4.395720958709717
    9. 'up' → logprob: -7.895720958709717
    10. ' out' → logprob: -8.520721435546875

Token 428: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.08475930988788605
    2. ' v' → logprob: -2.58475923538208
    3. 'node' → logprob: -5.45975923538208
    4. ' node' → logprob: -6.45975923538208
    5. 'neighbor' → logprob: -11.584759712219238
    6. 'u' → logprob: -11.834759712219238
    7. '
' → logprob: -12.709759712219238
    8. '```' → logprob: -13.209759712219238
    9. 'the' → logprob: -13.459759712219238
    10. 'adj' → logprob: -13.459759712219238

Token 429: ' which' (ID: 1118)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09093602746725082
    2. ' at' → logprob: -2.5909359455108643
    3. '-' → logprob: -5.590936183929443
    4. ' ,' → logprob: -6.215936183929443
    5. 'from' → logprob: -6.590936183929443
    6. ' -' → logprob: -6.590936183929443
    7. '#' → logprob: -7.590936183929443
    8. ' from' → logprob: -7.590936183929443
    9. ' (' → logprob: -7.715936183929443
    10. ',
' → logprob: -8.215935707092285

Token 430: ' costs' (ID: 8959)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.8246520161628723
    2. 'is' → logprob: -0.9496520161628723
    3. '#' → logprob: -2.3246519565582275
    4. ' has' → logprob: -3.3246519565582275
    5. 'has' → logprob: -4.324652194976807
    6. 'can' → logprob: -4.699652194976807
    7. ''s' → logprob: -5.199652194976807
    8. 's' → logprob: -6.199652194976807
    9. ' can' → logprob: -6.199652194976807
    10. ' at' → logprob: -7.074652194976807

Token 431: ' time' (ID: 1058)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5225722193717957
    2. 'H' → logprob: -1.6475722789764404
    3. ' t' → logprob: -3.0225722789764404
    4. ' H' → logprob: -3.1475722789764404
    5. 'graph' → logprob: -3.5225722789764404
    6. 'time' → logprob: -3.7725722789764404
    7. 'T' → logprob: -4.272572040557861
    8. ' at' → logprob: -4.397572040557861
    9. ' graph' → logprob: -4.522572040557861
    10. 'h' → logprob: -4.772572040557861

Token 432: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.58881676197052
    2. 't' → logprob: -1.33881676197052
    3. '=' → logprob: -2.5888166427612305
    4. ' =' → logprob: -3.0888166427612305
    5. ' ' → logprob: -4.2138166427612305
    6. ' +' → logprob: -4.4638166427612305
    7. '=t' → logprob: -4.8388166427612305
    8. '+' → logprob: -5.2138166427612305
    9. '+t' → logprob: -5.4638166427612305
    10. ' T' → logprob: -5.4638166427612305

Token 433: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003629527287557721
    2. '#' → logprob: -6.628629684448242
    3. '   ' → logprob: -7.378629684448242
    4. ' ,' → logprob: -7.628629684448242
    5. '+' → logprob: -8.128629684448242
    6. ',
' → logprob: -8.503629684448242
    7. ' +' → logprob: -9.378629684448242
    8. '=' → logprob: -9.378629684448242
    9. ':' → logprob: -9.628629684448242
    10. ' and' → logprob: -9.628629684448242

Token 434: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7211766242980957
    2. '   ' → logprob: -0.7211766242980957
    3. ' for' → logprob: -4.346176624298096
    4. 'for' → logprob: -5.221176624298096
    5. ' #' → logprob: -5.346176624298096
    6. '       ' → logprob: -7.096176624298096
    7. ' if' → logprob: -7.096176624298096
    8. '```' → logprob: -7.346176624298096
    9. ',' → logprob: -7.471176624298096
    10. '    ' → logprob: -8.221176147460938

Token 435: ' We' (ID: 1416)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7115854024887085
    2. '#' → logprob: -0.9615854024887085
    3. ' for' → logprob: -2.461585521697998
    4. 'if' → logprob: -4.711585521697998
    5. 'h' → logprob: -4.836585521697998
    6. 'prev' → logprob: -5.586585521697998
    7. ' #' → logprob: -5.711585521697998
    8. 'current' → logprob: -5.836585521697998
    9. ' if' → logprob: -6.211585521697998
    10. 'We' → logprob: -6.461585521697998

Token 436: ' need' (ID: 1309)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.8079761266708374
    2. 'can' → logprob: -1.3079761266708374
    3. ' need' → logprob: -2.182976245880127
    4. 'need' → logprob: -2.307976245880127
    5. '#' → logprob: -3.307976245880127
    6. ' try' → logprob: -4.307976245880127
    7. 'try' → logprob: -5.057976245880127
    8. ' must' → logprob: -5.682976245880127
    9. 'must' → logprob: -5.682976245880127
    10. ' want' → logprob: -6.557976245880127

Token 437: ' height' (ID: 4679)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.3115113377571106
    2. 'to' → logprob: -1.8115112781524658
    3. 'h' → logprob: -2.686511278152466
    4. ' h' → logprob: -3.561511278152466
    5. '   ' → logprob: -5.436511516571045
    6. 'if' → logprob: -7.311511516571045
    7. 'current' → logprob: -7.936511516571045
    8. ' if' → logprob: -8.061511039733887
    9. 'for' → logprob: -8.311511039733887
    10. 'u' → logprob: -8.436511039733887

Token 438: ' h' (ID: 312)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6511253714561462
    2. '_u' → logprob: -1.526125431060791
    3. 'u' → logprob: -2.776125431060791
    4. ' at' → logprob: -3.276125431060791
    5. '=' → logprob: -3.401125431060791
    6. ' >=' → logprob: -3.526125431060791
    7. ' h' → logprob: -3.901125431060791
    8. ' u' → logprob: -4.026125431060791
    9. 'h' → logprob: -4.151125431060791
    10. '[u' → logprob: -4.651125431060791

Token 439: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -0.06435655057430267
    2. '_v' → logprob: -4.189356327056885
    3. '=' → logprob: -4.314356327056885
    4. 'u' → logprob: -4.314356327056885
    5. '[u' → logprob: -4.814356327056885
    6. ' =' → logprob: -4.939356327056885
    7. 'v' → logprob: -5.814356327056885
    8. '=u' → logprob: -7.564356327056885
    9. '_' → logprob: -8.064356803894043
    10. '_needed' → logprob: -8.689356803894043

Token 440: ' so' (ID: 813)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -1.0657429695129395
    2. ' =' → logprob: -1.3157429695129395
    3. '=' → logprob: -1.4407429695129395
    4. '>=' → logprob: -2.0657429695129395
    5. ' to' → logprob: -5.0657429695129395
    6. ' ' → logprob: -5.5657429695129395
    7. '≥' → logprob: -6.0657429695129395
    8. '#' → logprob: -6.4407429695129395
    9. '-' → logprob: -6.5657429695129395
    10. ',' → logprob: -6.5657429695129395

Token 441: ' that' (ID: 484)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.8580199480056763
    2. ' that' → logprob: -1.2330199480056763
    3. '>=' → logprob: -1.3580199480056763
    4. '≥' → logprob: -4.108019828796387
    5. '=' → logprob: -4.858019828796387
    6. ' >=' → logprob: -6.608019828796387
    7. '#' → logprob: -7.483019828796387
    8. ',' → logprob: -8.358019828796387
    9. ' ' → logprob: -9.108019828796387
    10. '>' → logprob: -9.108019828796387

Token 442: ':
' (ID: 734)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0029264725744724274
    2. 'H' → logprob: -6.252926349639893
    3. ' h' → logprob: -7.252926349639893
    4. '0' → logprob: -8.50292682647705
    5. '```' → logprob: -10.62792682647705
    6. '`' → logprob: -11.25292682647705
    7. '(h' → logprob: -11.37792682647705
    8. '
' → logprob: -11.87792682647705
    9. '   ' → logprob: -11.87792682647705
    10. ' ' → logprob: -12.50292682647705

Token 443: '#' (ID: 2)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.748656153678894
    2. 'H' → logprob: -0.873656153678894
    3. ' h' → logprob: -2.6236562728881836
    4. ' H' → logprob: -3.3736562728881836
    5. 'u' → logprob: -6.748656272888184
    6. ' u' → logprob: -7.373656272888184
    7. ' ' → logprob: -8.498656272888184
    8. '   ' → logprob: -8.498656272888184
    9. '`' → logprob: -9.248656272888184
    10. 'graph' → logprob: -9.373656272888184

Token 444: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.018971052020788193
    2. 'H' → logprob: -4.893970966339111
    3. ' h' → logprob: -4.893970966339111
    4. 't' → logprob: -5.768970966339111
    5. 'u' → logprob: -8.89397144317627
    6. '```' → logprob: -9.26897144317627
    7. ' t' → logprob: -9.39397144317627
    8. ' H' → logprob: -9.51897144317627
    9. 'abs' → logprob: -9.89397144317627
    10. '#' → logprob: -9.89397144317627

Token 445: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -7.44574936106801e-05
    2. 'u' → logprob: -10.37507438659668
    3. '_' → logprob: -10.50007438659668
    4. '_v' → logprob: -12.00007438659668
    5. '_h' → logprob: -12.37507438659668
    6. '\' → logprob: -13.75007438659668
    7. '[u' → logprob: -13.75007438659668
    8. '
' → logprob: -14.50007438659668
    9. '_{' → logprob: -14.75007438659668
    10. ' _' → logprob: -15.00007438659668

Token 446: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3467656672000885
    2. '-' → logprob: -1.4717656373977661
    3. '>=' → logprob: -3.0967657566070557
    4. ' >=' → logprob: -4.096765518188477
    5. '≥' → logprob: -6.846765518188477
    6. ' ' → logprob: -8.721765518188477
    7. ' ≥' → logprob: -9.096765518188477
    8. '```' → logprob: -10.096765518188477
    9. ' +' → logprob: -10.221765518188477
    10. ' ' → logprob: -10.221765518188477

Token 447: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.002497302368283272
    2. ' t' → logprob: -6.00249719619751
    3. 'T' → logprob: -10.877497673034668
    4. '`t' → logprob: -13.627497673034668
    5. '_t' → logprob: -14.877497673034668
    6. '   ' → logprob: -15.252497673034668
    7. 'M' → logprob: -15.877497673034668
    8. ' ' → logprob: -16.12749671936035
    9. '>' → logprob: -16.12749671936035
    10. '+' → logprob: -16.25249671936035

Token 448: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.5234694480895996
    2. ' >=' → logprob: -0.8984694480895996
    3. '<=' → logprob: -9.523469924926758
    4. ' <=' → logprob: -9.523469924926758
    5. '   ' → logprob: -9.773469924926758
    6. '≥' → logprob: -10.148469924926758
    7. '>' → logprob: -10.523469924926758
    8. ' ' → logprob: -10.648469924926758
    9. ')>=' → logprob: -11.273469924926758
    10. ' ' → logprob: -11.773469924926758

Token 449: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. ' ' → logprob: -17.750024795532227
    4. '   ' → logprob: -18.500024795532227
    5. '۰' → logprob: -18.625024795532227
    6. '00' → logprob: -19.875024795532227
    7. '  ' → logprob: -20.312524795532227
    8. '```' → logprob: -20.375024795532227
    9. '０' → logprob: -20.625024795532227
    10. '
' → logprob: -20.625024795532227

Token 450: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004311460361350328
    2. ' ' → logprob: -7.750431060791016
    3. 'H' → logprob: -15.375431060791016
    4. '   ' → logprob: -17.000431060791016
    5. 'X' → logprob: -17.937931060791016
    6. ' H' → logprob: -18.187931060791016
    7. 'max' → logprob: -18.312931060791016
    8. ' ' → logprob: -18.375431060791016
    9. '  ' → logprob: -18.500431060791016
    10. '```' → logprob: -18.625431060791016

Token 451: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.05750402435660362
    2. '#' → logprob: -3.3075039386749268
    3. 'and' → logprob: -4.182504177093506
    4. ',' → logprob: -6.807504177093506
    5. ' ' → logprob: -6.932504177093506
    6. ' #' → logprob: -7.432504177093506
    7. '```' → logprob: -8.682503700256348
    8. ' 
' → logprob: -8.932503700256348
    9. '   ' → logprob: -9.057503700256348
    10. ')' → logprob: -9.182503700256348

Token 452: '#' (ID: 2)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6451069712638855
    2. '#' → logprob: -1.0201070308685303
    3. 'and' → logprob: -2.8951070308685303
    4. '<|end|>' → logprob: -3.1451070308685303
    5. ' ' → logprob: -5.895106792449951
    6. ')' → logprob: -5.895106792449951
    7. '```' → logprob: -6.270106792449951
    8. ' h' → logprob: -6.520106792449951
    9. '\' → logprob: -6.520106792449951
    10. ',' → logprob: -6.895106792449951

Token 453: ' h' (ID: 312)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.05061795189976692
    2. ' h' → logprob: -3.1756179332733154
    3. 'h' → logprob: -5.4256181716918945
    4. ' and' → logprob: -6.5506181716918945
    5. ' #' → logprob: -6.6756181716918945
    6. 'and' → logprob: -8.675618171691895
    7. ' ' → logprob: -8.675618171691895
    8. ',' → logprob: -10.175618171691895
    9. ' (' → logprob: -10.925618171691895
    10. '```' → logprob: -11.050618171691895

Token 454: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -0.029779309406876564
    2. '_v' → logprob: -3.5297791957855225
    3. '[v' → logprob: -11.529779434204102
    4. '[u' → logprob: -11.529779434204102
    5. 'v' → logprob: -13.154779434204102
    6. '_' → logprob: -13.529779434204102
    7. '```' → logprob: -13.904779434204102
    8. 'u' → logprob: -13.904779434204102
    9. '[' → logprob: -15.029779434204102
    10. '}_' → logprob: -15.154779434204102

Token 455: ' -' (ID: 533)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.4261174499988556
    2. ' -' → logprob: -1.5511174201965332
    3. '>=' → logprob: -2.676117420196533
    4. '-' → logprob: -3.176117420196533
    5. ' <=' → logprob: -3.926117420196533
    6. ' ≥' → logprob: -6.551117420196533
    7. '<=' → logprob: -6.676117420196533
    8. '≥' → logprob: -7.301117420196533
    9. ' ' → logprob: -8.051117897033691
    10. '```' → logprob: -8.551117897033691

Token 456: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.07895852625370026
    2. ' t' → logprob: -2.953958511352539
    3. 'T' → logprob: -3.953958511352539
    4. 'H' → logprob: -5.578958511352539
    5. ' T' → logprob: -7.828958511352539
    6. ' H' → logprob: -8.828958511352539
    7. 'M' → logprob: -9.203958511352539
    8. '`t' → logprob: -10.203958511352539
    9. '_t' → logprob: -10.328958511352539
    10. '0' → logprob: -10.453958511352539

Token 457: ' <=' (ID: 5017)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.7000361680984497
    2. '>=' → logprob: -1.3250361680984497
    3. ' <=' → logprob: -1.8250361680984497
    4. '<=' → logprob: -2.57503604888916
    5. '≥' → logprob: -9.82503604888916
    6. '```' → logprob: -9.82503604888916
    7. ' ' → logprob: -10.07503604888916
    8. '   ' → logprob: -10.57503604888916
    9. '+' → logprob: -11.20003604888916
    10. ' ≥' → logprob: -11.45003604888916

Token 458: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0005530327325686812
    2. ' H' → logprob: -7.500553131103516
    3. 'graph' → logprob: -18.875553131103516
    4. '   ' → logprob: -20.375553131103516
    5. '	H' → logprob: -20.625553131103516
    6. '`' → logprob: -21.125553131103516
    7. ' ' → logprob: -21.500553131103516
    8. '```' → logprob: -22.000553131103516
    9. '_H' → logprob: -22.125553131103516
    10. '#' → logprob: -22.625553131103516

Token 459: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.00012535012501757592
    2. 'v' → logprob: -9.00012493133545
    3. '[u' → logprob: -13.50012493133545
    4. '[' → logprob: -15.50012493133545
    5. '[V' → logprob: -15.62512493133545
    6. '[B' → logprob: -16.500125885009766
    7. ' v' → logprob: -17.000125885009766
    8. '(v' → logprob: -17.250125885009766
    9. ')v' → logprob: -17.875125885009766
    10. '[node' → logprob: -18.250125885009766

Token 460: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04562356695532799
    2. ']' → logprob: -3.420623540878296
    3. '#' → logprob: -5.295623779296875
    4. ')
' → logprob: -5.670623779296875
    5. '}' → logprob: -6.670623779296875
    6. '])' → logprob: -7.920623779296875
    7. 'u' → logprob: -8.545623779296875
    8. '**' → logprob: -8.795623779296875
    9. '\' → logprob: -8.920623779296875
    10. '[u' → logprob: -8.920623779296875

Token 461: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.04996691644191742
    2. '\n' → logprob: -4.674966812133789
    3. '
' → logprob: -4.924966812133789
    4. 'h' → logprob: -5.299966812133789
    5. '\' → logprob: -5.299966812133789
    6. 'for' → logprob: -6.049966812133789
    7. '```' → logprob: -6.174966812133789
    8. ' ' → logprob: -6.299966812133789
    9. ' h' → logprob: -6.549966812133789
    10. '   ' → logprob: -6.549966812133789

Token 462: ' So' (ID: 2632)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.190102458000183
    2. '#' → logprob: -1.690102458000183
    3. 'for' → logprob: -2.5651025772094727
    4. '
' → logprob: -2.9401025772094727
    5. ' h' → logprob: -3.0651025772094727
    6. 'h' → logprob: -3.1901025772094727
    7. '   ' → logprob: -3.3151025772094727
    8. ' ' → logprob: -3.4401025772094727
    9. ' 
' → logprob: -3.5651025772094727
    10. '\' → logprob: -3.6901025772094727

Token 463: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.12523092329502106
    2. ' h' → logprob: -2.6252310276031494
    3. 'max' → logprob: -3.7502310276031494
    4. 'H' → logprob: -4.75023078918457
    5. ' max' → logprob: -4.87523078918457
    6. 'min' → logprob: -6.75023078918457
    7. '   ' → logprob: -7.00023078918457
    8. ' H' → logprob: -7.00023078918457
    9. 'u' → logprob: -7.50023078918457
    10. 't' → logprob: -7.87523078918457

Token 464: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -1.9504606825648807e-05
    2. '_' → logprob: -11.625019073486328
    3. '[u' → logprob: -12.625019073486328
    4. '_e' → logprob: -13.125019073486328
    5. 'u' → logprob: -13.500019073486328
    6. '_v' → logprob: -14.250019073486328
    7. ' =' → logprob: -14.625019073486328
    8. '=' → logprob: -14.750019073486328
    9. '_a' → logprob: -14.875019073486328
    10. '\' → logprob: -15.375019073486328

Token 465: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -1.0010110139846802
    2. '=' → logprob: -1.5010110139846802
    3. ' =' → logprob: -1.5010110139846802
    4. '>=' → logprob: -1.7510110139846802
    5. '≥' → logprob: -5.001010894775391
    6. ' ≥' → logprob: -5.751010894775391
    7. ' <=' → logprob: -7.251010894775391
    8. ' ' → logprob: -7.501010894775391
    9. ' must' → logprob: -7.876010894775391
    10. ' in' → logprob: -8.25101089477539

Token 466: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.5570885807392187e-05
    2. ' t' → logprob: -11.500015258789062
    3. 'max' → logprob: -12.250015258789062
    4. '`t' → logprob: -14.500015258789062
    5. 'T' → logprob: -17.125015258789062
    6. '```' → logprob: -17.625015258789062
    7. '_t' → logprob: -17.875015258789062
    8. '
' → logprob: -18.000015258789062
    9. 'X' → logprob: -18.375015258789062
    10. '0' → logprob: -18.375015258789062

Token 467: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.09701795876026154
    2. 'and' → logprob: -3.847018003463745
    3. ' ' → logprob: -3.972018003463745
    4. '   ' → logprob: -4.222017765045166
    5. ':' → logprob: -4.972017765045166
    6. ')' → logprob: -5.222017765045166
    7. ',' → logprob: -5.347017765045166
    8. '```' → logprob: -5.597017765045166
    9. '
' → logprob: -5.847017765045166
    10. ' 
' → logprob: -6.222017765045166

Token 468: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.012515422888100147
    2. ' h' → logprob: -4.387515544891357
    3. 'u' → logprob: -13.2625150680542
    4. '<h' → logprob: -13.6375150680542
    5. ' ' → logprob: -14.3875150680542
    6. ' ' → logprob: -14.6375150680542
    7. '```' → logprob: -15.1375150680542
    8. '
' → logprob: -15.5125150680542
    9. '<=' → logprob: -15.8875150680542
    10. '	h' → logprob: -15.8875150680542

Token 469: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -1.6286106983898208e-05
    2. 'u' → logprob: -11.750016212463379
    3. '_' → logprob: -11.875016212463379
    4. '<=' → logprob: -15.000016212463379
    5. '[u' → logprob: -15.250016212463379
    6. '<u' → logprob: -15.875016212463379
    7. ' _' → logprob: -16.000017166137695
    8. '\' → logprob: -16.125017166137695
    9. '_
' → logprob: -16.500017166137695
    10. '≤' → logprob: -16.750017166137695

Token 470: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.47160521149635315
    2. ' >=' → logprob: -1.2216051816940308
    3. '<=' → logprob: -3.0966053009033203
    4. '>=' → logprob: -3.3466053009033203
    5. ' ≤' → logprob: -8.22160530090332
    6. '≥' → logprob: -9.09660530090332
    7. '-' → logprob: -9.22160530090332
    8. ' -' → logprob: -9.34660530090332
    9. ' ≥' → logprob: -9.34660530090332
    10. ' ' → logprob: -10.09660530090332

Token 471: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0003967071825172752
    2. 't' → logprob: -7.875396728515625
    3. ' H' → logprob: -11.375396728515625
    4. '(H' → logprob: -13.125396728515625
    5. 'h' → logprob: -13.500396728515625
    6. 'min' → logprob: -13.750396728515625
    7. 'T' → logprob: -15.250396728515625
    8. '(t' → logprob: -15.625396728515625
    9. '```' → logprob: -16.625396728515625
    10. '(' → logprob: -16.875396728515625

Token 472: '[v' (ID: 36561)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.0007949740393087268
    2. 'u' → logprob: -7.750794887542725
    3. '[' → logprob: -8.250795364379883
    4. '[v' → logprob: -9.250795364379883
    5. '```' → logprob: -13.875795364379883
    6. 'v' → logprob: -14.125795364379883
    7. '[h' → logprob: -14.125795364379883
    8. '_u' → logprob: -14.625795364379883
    9. ' u' → logprob: -14.625795364379883
    10. ' [' → logprob: -14.750795364379883

Token 473: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007726230192929506
    2. ']+' → logprob: -5.007726192474365
    3. '+' → logprob: -7.507726192474365
    4. ']
' → logprob: -8.757726669311523
    5. ')' → logprob: -9.007726669311523
    6. ' ]' → logprob: -9.132726669311523
    7. '   ' → logprob: -11.007726669311523
    8. ' +' → logprob: -11.132726669311523
    9. '],' → logprob: -11.882726669311523
    10. ',' → logprob: -12.132726669311523

Token 474: ' +' (ID: 659)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.12530717253684998
    2. ',' → logprob: -4.000307083129883
    3. ')' → logprob: -4.125307083129883
    4. '\n' → logprob: -4.750307083129883
    5. 'for' → logprob: -4.750307083129883
    6. '```' → logprob: -4.750307083129883
    7. '   ' → logprob: -4.875307083129883
    8. ' for' → logprob: -5.000307083129883
    9. '<|end|>' → logprob: -5.250307083129883
    10. '.' → logprob: -5.250307083129883

Token 475: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -3.547789674485102e-05
    2. ' t' → logprob: -10.250035285949707
    3. '   ' → logprob: -17.625036239624023
    4. '	t' → logprob: -17.625036239624023
    5. '`t' → logprob: -18.500036239624023
    6. '_t' → logprob: -18.750036239624023
    7. 'T' → logprob: -19.500036239624023
    8. ' ' → logprob: -20.250036239624023
    9. ')t' → logprob: -22.250036239624023
    10. '
' → logprob: -22.500036239624023

Token 476: '

' (ID: 279)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.1760677099227905
    2. '#' → logprob: -1.3010677099227905
    3. 'h' → logprob: -2.67606782913208
    4. 'for' → logprob: -2.80106782913208
    5. 'dp' → logprob: -3.17606782913208
    6. 'distance' → logprob: -3.67606782913208
    7. 'def' → logprob: -3.92606782913208
    8. 'inf' → logprob: -3.92606782913208
    9. 'from' → logprob: -3.92606782913208
    10. '
' → logprob: -3.92606782913208

Token 477: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20665286481380463
    2. ' for' → logprob: -2.331652879714966
    3. '#' → logprob: -4.331652641296387
    4. '\n' → logprob: -4.581652641296387
    5. 'while' → logprob: -4.706652641296387
    6. '
' → logprob: -4.956652641296387
    7. 'h' → logprob: -4.956652641296387
    8. 'if' → logprob: -5.081652641296387
    9. '   ' → logprob: -5.206652641296387
    10. ' 
' → logprob: -5.581652641296387

Token 478: ' Since' (ID: 12265)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.20850643515586853
    2. 'for' → logprob: -1.958506464958191
    3. 'import' → logprob: -3.7085063457489014
    4. 'from' → logprob: -4.2085065841674805
    5. 'visited' → logprob: -5.9585065841674805
    6. 'dp' → logprob: -6.4585065841674805
    7. '#' → logprob: -6.9585065841674805
    8. '```' → logprob: -7.5835065841674805
    9. 'while' → logprob: -7.8335065841674805
    10. 'distance' → logprob: -7.8335065841674805

Token 479: ' h' (ID: 312)
  Prédit: ' we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' we' → logprob: -1.098649263381958
    2. ' h' → logprob: -1.598649263381958
    3. ' H' → logprob: -2.098649263381958
    4. 'h' → logprob: -2.223649263381958
    5. 'H' → logprob: -2.348649263381958
    6. 'we' → logprob: -2.848649263381958
    7. ' ' → logprob: -4.598649024963379
    8. ' u' → logprob: -4.598649024963379
    9. 'the' → logprob: -4.598649024963379
    10. '#' → logprob: -4.973649024963379

Token 480: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -0.5256699323654175
    2. '_' → logprob: -0.9006699323654175
    3. '[u' → logprob: -7.275670051574707
    4. '_[' → logprob: -7.525670051574707
    5. '_v' → logprob: -8.150670051574707
    6. '_
' → logprob: -8.400670051574707
    7. '_e' → logprob: -8.525670051574707
    8. '_i' → logprob: -8.775670051574707
    9. ' _' → logprob: -9.150670051574707
    10. '[_' → logprob: -9.400670051574707

Token 481: ' <=' (ID: 5017)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0536495447158813
    2. ' <=' → logprob: -1.1786495447158813
    3. ' >=' → logprob: -1.5536495447158813
    4. '=' → logprob: -3.928649425506592
    5. ' ranges' → logprob: -4.428649425506592
    6. ' is' → logprob: -4.553649425506592
    7. '>=' → logprob: -4.553649425506592
    8. ' must' → logprob: -4.553649425506592
    9. '_' → logprob: -4.803649425506592
    10. ' ' → logprob: -5.053649425506592

Token 482: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.00464776111766696
    2. ' H' → logprob: -5.379647731781006
    3. ' ' → logprob: -11.379648208618164
    4. '   ' → logprob: -12.504648208618164
    5. 'min' → logprob: -12.754648208618164
    6. ' ' → logprob: -13.129648208618164
    7. 'graph' → logprob: -13.254648208618164
    8. '`' → logprob: -13.879648208618164
    9. 'h' → logprob: -14.004648208618164
    10. '	H' → logprob: -14.129648208618164

Token 483: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.0008515591034665704
    2. '[' → logprob: -7.125851631164551
    3. 'u' → logprob: -10.50085163116455
    4. '[N' → logprob: -12.37585163116455
    5. '[node' → logprob: -12.50085163116455
    6. '[X' → logprob: -13.12585163116455
    7. '[v' → logprob: -13.12585163116455
    8. '[i' → logprob: -13.50085163116455
    9. '[user' → logprob: -13.62585163116455
    10. '[A' → logprob: -13.75085163116455

Token 484: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8453286290168762
    2. '],' → logprob: -0.8453286290168762
    3. ' and' → logprob: -2.9703285694122314
    4. ',' → logprob: -3.4703285694122314
    5. ']:' → logprob: -4.3453288078308105
    6. ']:
' → logprob: -4.3453288078308105
    7. '),' → logprob: -4.7203288078308105
    8. ']
' → logprob: -5.0953288078308105
    9. ':' → logprob: -5.3453288078308105
    10. 'and' → logprob: -5.9703288078308105

Token 485: ' h' (ID: 312)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.09882274270057678
    2. ' h' → logprob: -3.348822832107544
    3. 'h' → logprob: -3.473822832107544
    4. 'if' → logprob: -4.473822593688965
    5. ' we' → logprob: -5.473822593688965
    6. ' if' → logprob: -5.723822593688965
    7. ' #' → logprob: -5.723822593688965
    8. 'max' → logprob: -6.598822593688965
    9. 'we' → logprob: -6.848822593688965
    10. ' the' → logprob: -7.723822593688965

Token 486: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -0.0006083175539970398
    2. '[u' → logprob: -7.500608444213867
    3. '_' → logprob: -10.125608444213867
    4. '[_' → logprob: -13.000608444213867
    5. '[' → logprob: -13.125608444213867
    6. '_[' → logprob: -13.250608444213867
    7. '```' → logprob: -13.375608444213867
    8. 'u' → logprob: -14.125608444213867
    9. '<u' → logprob: -14.125608444213867
    10. '\[' → logprob: -14.500608444213867

Token 487: ' is' (ID: 382)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.0922202318906784
    2. '>=' → logprob: -3.0922203063964844
    3. ' =' → logprob: -3.7172203063964844
    4. ' <=' → logprob: -4.592220306396484
    5. '=' → logprob: -5.092220306396484
    6. ')' → logprob: -7.967220306396484
    7. '<|end|>' → logprob: -7.967220306396484
    8. '<=' → logprob: -8.217220306396484
    9. ',' → logprob: -8.217220306396484
    10. ' ' → logprob: -8.342220306396484

Token 488: ' in' (ID: 306)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.005579267628490925
    2. 'min' → logprob: -5.255579471588135
    3. ' max' → logprob: -8.005578994750977
    4. 'max' → logprob: -11.755578994750977
    5. '	min' → logprob: -13.630578994750977
    6. ' ' → logprob: -14.130578994750977
    7. '=min' → logprob: -14.130578994750977
    8. ' ' → logprob: -14.505578994750977
    9. ' =' → logprob: -15.255578994750977
    10. '(min' → logprob: -16.005578994750977

Token 489: ' [' (ID: 723)
  Prédit: '[min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[min' → logprob: -0.22145377099514008
    2. 'range' → logprob: -2.4714536666870117
    3. '[' → logprob: -2.9714536666870117
    4. 'min' → logprob: -3.4714536666870117
    5. '[max' → logprob: -4.346453666687012
    6. ' range' → logprob: -4.846453666687012
    7. 'the' → logprob: -5.346453666687012
    8. ' [' → logprob: -5.971453666687012
    9. ' min' → logprob: -6.346453666687012
    10. 'max' → logprob: -6.471453666687012

Token 490: '0' (ID: 15)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.049508675932884216
    2. 'max' → logprob: -3.049508571624756
    3. ' t' → logprob: -7.299508571624756
    4. ' max' → logprob: -8.549509048461914
    5. '0' → logprob: -10.924509048461914
    6. '   ' → logprob: -11.049509048461914
    7. ' ' → logprob: -12.674509048461914
    8. 'min' → logprob: -12.674509048461914
    9. '(max' → logprob: -13.049509048461914
    10. '(t' → logprob: -13.049509048461914

Token 491: ',H' (ID: 94400)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0027928724884986877
    2. ',H' → logprob: -6.502792835235596
    3. ' ,' → logprob: -6.877792835235596
    4. 'H' → logprob: -8.877793312072754
    5. ',
' → logprob: -10.127793312072754
    6. '...' → logprob: -11.127793312072754
    7. ' ' → logprob: -11.377793312072754
    8. ',u' → logprob: -11.627793312072754
    9. '..' → logprob: -11.752793312072754
    10. ']' → logprob: -11.752793312072754

Token 492: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -7.24310302757658e-05
    2. '[' → logprob: -9.875072479248047
    3. 'u' → logprob: -11.000072479248047
    4. '_u' → logprob: -12.500072479248047
    5. ']' → logprob: -15.125072479248047
    6. '[user' → logprob: -16.500072479248047
    7. '	u' → logprob: -17.125072479248047
    8. '\[' → logprob: -17.250072479248047
    9. '(u' → logprob: -17.375072479248047
    10. ' [' → logprob: -17.500072479248047

Token 493: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00040219054790213704
    2. '],' → logprob: -8.125402450561523
    3. ']]' → logprob: -9.375402450561523
    4. ')]' → logprob: -11.500402450561523
    5. ' ]' → logprob: -11.875402450561523
    6. ']
' → logprob: -13.125402450561523
    7. '].' → logprob: -14.750402450561523
    8. ']

' → logprob: -15.125402450561523
    9. '()]' → logprob: -15.500402450561523
    10. '])' → logprob: -15.750402450561523

Token 494: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.09893925487995148
    2. 'for' → logprob: -2.9739391803741455
    3. 'h' → logprob: -3.8489391803741455
    4. 'if' → logprob: -5.098939418792725
    5. 'u' → logprob: -5.348939418792725
    6. ' for' → logprob: -5.848939418792725
    7. ',' → logprob: -6.348939418792725
    8. '#
' → logprob: -7.223939418792725
    9. '
' → logprob: -7.348939418792725
    10. 'while' → logprob: -8.223938941955566

Token 495: ' So' (ID: 2632)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8937740325927734
    2. 'for' → logprob: -1.0187740325927734
    3. 'if' → logprob: -2.1437740325927734
    4. 'h' → logprob: -3.5187740325927734
    5. ' for' → logprob: -3.8937740325927734
    6. 'u' → logprob: -4.393774032592773
    7. ' if' → logprob: -4.643774032592773
    8. 'while' → logprob: -5.143774032592773
    9. '
' → logprob: -5.518774032592773
    10. '\' → logprob: -5.518774032592773

Token 496: ' feasible' (ID: 58866)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.9727658033370972
    2. 'lower' → logprob: -1.9727658033370972
    3. 'max' → logprob: -2.0977659225463867
    4. 'min' → logprob: -2.2227659225463867
    5. 'possible' → logprob: -2.8477659225463867
    6. 'if' → logprob: -2.8477659225463867
    7. ' max' → logprob: -3.3477659225463867
    8. 'h' → logprob: -3.7227659225463867
    9. ' min' → logprob: -3.7227659225463867
    10. '   ' → logprob: -4.847765922546387

Token 497: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.32915210723876953
    2. 'he' → logprob: -1.3291521072387695
    3. 'height' → logprob: -5.4541521072387695
    4. ' heights' → logprob: -6.2041521072387695
    5. 'u' → logprob: -6.3291521072387695
    6. 'hs' → logprob: -6.4541521072387695
    7. 'ranges' → logprob: -6.5791521072387695
    8. ' h' → logprob: -6.8291521072387695
    9. 'range' → logprob: -7.0791521072387695
    10. 'interval' → logprob: -7.4541521072387695

Token 498: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -0.0007581694517284632
    2. '_range' → logprob: -8.000758171081543
    3. ' =' → logprob: -9.500758171081543
    4. '=' → logprob: -9.625758171081543
    5. 'range' → logprob: -9.750758171081543
    6. '_' → logprob: -9.875758171081543
    7. '_ranges' → logprob: -10.000758171081543
    8. 'u' → logprob: -10.375758171081543
    9. 'ight' → logprob: -10.875758171081543
    10. '[u' → logprob: -11.375758171081543

Token 499: ' must' (ID: 2804)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24423906207084656
    2. ' =' → logprob: -1.619239091873169
    3. '_range' → logprob: -5.11923885345459
    4. '_min' → logprob: -6.11923885345459
    5. 'range' → logprob: -6.24423885345459
    6. ' in' → logprob: -6.36923885345459
    7. 'in' → logprob: -7.11923885345459
    8. 's' → logprob: -7.24423885345459
    9. ' is' → logprob: -7.24423885345459
    10. ' range' → logprob: -7.74423885345459

Token 500: ' satisfy' (ID: 35441)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.44415488839149475
    2. ' be' → logprob: -1.1941548585891724
    3. '=' → logprob: -3.069154977798462
    4. '>=' → logprob: -5.569154739379883
    5. 's' → logprob: -6.444154739379883
    6. ' =' → logprob: -7.194154739379883
    7. '<=' → logprob: -7.444154739379883
    8. ' satisfy' → logprob: -7.944154739379883
    9. '≥' → logprob: -7.944154739379883
    10. '	be' → logprob: -8.194154739379883

Token 501: ':
' (ID: 734)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.09643400460481644
    2. ' max' → logprob: -2.4714341163635254
    3. 'min' → logprob: -5.221434116363525
    4. 't' → logprob: -7.221434116363525
    5. 'h' → logprob: -7.846434116363525
    6. '
' → logprob: -8.221433639526367
    7. ' min' → logprob: -8.221433639526367
    8. '```' → logprob: -8.846433639526367
    9. ' t' → logprob: -9.096433639526367
    10. '   ' → logprob: -9.846433639526367

Token 502: '#' (ID: 2)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.25876426696777344
    2. ' max' → logprob: -2.3837642669677734
    3. '#' → logprob: -3.1337642669677734
    4. 'h' → logprob: -3.3837642669677734
    5. 'min' → logprob: -4.133764266967773
    6. '   ' → logprob: -4.508764266967773
    7. 't' → logprob: -5.008764266967773
    8. 'if' → logprob: -5.133764266967773
    9. ' h' → logprob: -6.008764266967773
    10. ' ' → logprob: -6.508764266967773

Token 503: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.009974821470677853
    2. ' max' → logprob: -4.634974956512451
    3. 't' → logprob: -9.009974479675293
    4. '```' → logprob: -10.634974479675293
    5. '(max' → logprob: -10.759974479675293
    6. 'min' → logprob: -11.134974479675293
    7. '[max' → logprob: -11.134974479675293
    8. '   ' → logprob: -11.384974479675293
    9. '``' → logprob: -13.384974479675293
    10. '=max' → logprob: -13.509974479675293

Token 504: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.03425319865345955
    2. '(' → logprob: -3.4092531204223633
    3. 't' → logprob: -7.784253120422363
    4. '(max' → logprob: -8.659253120422363
    5. '0' → logprob: -12.284253120422363
    6. 'max' → logprob: -12.659253120422363
    7. '(h' → logprob: -13.159253120422363
    8. ' (' → logprob: -13.284253120422363
    9. '(H' → logprob: -13.284253120422363
    10. '(
' → logprob: -13.534253120422363

Token 505: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03850260376930237
    2. '(' → logprob: -3.4135026931762695
    3. '(t' → logprob: -5.4135026931762695
    4. ',t' → logprob: -9.03850269317627
    5. ' ,' → logprob: -9.03850269317627
    6. '(max' → logprob: -9.66350269317627
    7. ',max' → logprob: -9.91350269317627
    8. '(
' → logprob: -11.66350269317627
    9. ' (' → logprob: -12.03850269317627
    10. ',
' → logprob: -12.78850269317627

Token 506: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01121510285884142
    2. 't' → logprob: -4.7612152099609375
    3. ' ' → logprob: -6.3862152099609375
    4. 'max' → logprob: -7.8862152099609375
    5. ' t' → logprob: -8.136215209960938
    6. 'H' → logprob: -9.261215209960938
    7. '1' → logprob: -9.636215209960938
    8. ')' → logprob: -11.011215209960938
    9. ' max' → logprob: -11.136215209960938
    10. '   ' → logprob: -11.761215209960938

Token 507: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.031743887811899185
    2. ',H' → logprob: -3.5317440032958984
    3. ',max' → logprob: -6.656744003295898
    4. '),' → logprob: -8.281744003295898
    5. ' ,' → logprob: -8.531744003295898
    6. ')' → logprob: -8.906744003295898
    7. ',
' → logprob: -9.906744003295898
    8. ',h' → logprob: -10.031744003295898
    9. ',m' → logprob: -12.281744003295898
    10. ',M' → logprob: -12.656744003295898

Token 508: ' <=' (ID: 5017)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005002124700695276
    2. ' ,' → logprob: -6.005002021789551
    3. ' <=' → logprob: -6.380002021789551
    4. '<=' → logprob: -7.880002021789551
    5. ',
' → logprob: -8.88000202178955
    6. ' =' → logprob: -9.75500202178955
    7. ')' → logprob: -9.88000202178955
    8. '),' → logprob: -10.00500202178955
    9. '=' → logprob: -10.25500202178955
    10. ',max' → logprob: -10.25500202178955

Token 509: ' h' (ID: 312)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.13712027668952942
    2. 'min' → logprob: -2.262120246887207
    3. 'h' → logprob: -4.512120246887207
    4. 'max' → logprob: -4.887120246887207
    5. ' min' → logprob: -5.762120246887207
    6. ' H' → logprob: -6.137120246887207
    7. ' max' → logprob: -8.887120246887207
    8. ' h' → logprob: -10.387120246887207
    9. ' ' → logprob: -13.637120246887207
    10. ' ' → logprob: -13.762120246887207

Token 510: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -0.0005587508203461766
    2. '[u' → logprob: -7.625558853149414
    3. '_' → logprob: -9.875558853149414
    4. 'u' → logprob: -11.875558853149414
    5. '   ' → logprob: -12.875558853149414
    6. '_[' → logprob: -13.000558853149414
    7. '_v' → logprob: -13.625558853149414
    8. '[' → logprob: -13.625558853149414
    9. '\[' → logprob: -13.875558853149414
    10. ')' → logprob: -14.000558853149414

Token 511: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.2383035570383072
    2. ' and' → logprob: -1.863303542137146
    3. '<=' → logprob: -3.1133036613464355
    4. 'and' → logprob: -4.4883036613464355
    5. ' ≤' → logprob: -7.7383036613464355
    6. ',' → logprob: -8.238303184509277
    7. '<|end|>' → logprob: -8.738303184509277
    8. '\' → logprob: -9.363303184509277
    9. ' \' → logprob: -9.613303184509277
    10. '≤' → logprob: -10.238303184509277

Token 512: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0004307884373702109
    2. ' min' → logprob: -7.750430583953857
    3. 'H' → logprob: -16.625431060791016
    4. '	min' → logprob: -17.375431060791016
    5. 'minimum' → logprob: -18.000431060791016
    6. 'max' → logprob: -18.125431060791016
    7. '(min' → logprob: -18.875431060791016
    8. '_min' → logprob: -19.750431060791016
    9. '=min' → logprob: -19.875431060791016
    10. '
' → logprob: -20.000431060791016

Token 513: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -6.957014556974173e-05
    2. 'H' → logprob: -9.875069618225098
    3. '(' → logprob: -11.000069618225098
    4. '(min' → logprob: -14.250069618225098
    5. ' (' → logprob: -14.500069618225098
    6. '(
' → logprob: -16.00006866455078
    7. '((' → logprob: -16.87506866455078
    8. 'min' → logprob: -17.25006866455078
    9. '(h' → logprob: -17.25006866455078
    10. '```' → logprob: -18.12506866455078

Token 514: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.0014902232214808464
    2. 'u' → logprob: -6.626490116119385
    3. '[' → logprob: -9.126490592956543
    4. '(u' → logprob: -10.001490592956543
    5. '```' → logprob: -12.501490592956543
    6. ')' → logprob: -13.126490592956543
    7. '\[' → logprob: -14.126490592956543
    8. '[
' → logprob: -14.501490592956543
    9. '[v' → logprob: -14.501490592956543
    10. ' [' → logprob: -15.126490592956543

Token 515: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11748187243938446
    2. '],' → logprob: -2.3674819469451904
    3. ',u' → logprob: -5.242481708526611
    4. '[u' → logprob: -5.617481708526611
    5. ',v' → logprob: -5.742481708526611
    6. '),' → logprob: -6.492481708526611
    7. '[v' → logprob: -6.742481708526611
    8. ',H' → logprob: -6.867481708526611
    9. ' ,' → logprob: -7.617481708526611
    10. ']' → logprob: -8.36748218536377

Token 516: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -2.868328920158092e-05
    2. ' H' → logprob: -10.500028610229492
    3. '(H' → logprob: -13.875028610229492
    4. '
' → logprob: -17.500028610229492
    5. '	H' → logprob: -17.500028610229492
    6. '   ' → logprob: -17.625028610229492
    7. '```' → logprob: -17.875028610229492
    8. '(' → logprob: -18.000028610229492
    9. ' ' → logprob: -18.250028610229492
    10. '_H' → logprob: -18.750028610229492

Token 517: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0020832857117056847
    2. 'v' → logprob: -6.8770833015441895
    3. '[u' → logprob: -6.8770833015441895
    4. '[' → logprob: -12.127082824707031
    5. '[t' → logprob: -13.002082824707031
    6. '
' → logprob: -13.252082824707031
    7. '	v' → logprob: -13.502082824707031
    8. '[
' → logprob: -14.002082824707031
    9. 'u' → logprob: -14.252082824707031
    10. '(v' → logprob: -14.377082824707031

Token 518: ']' (ID: 60)
  Prédit: ']+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.6085842847824097
    2. ']' → logprob: -0.9835842847824097
    3. '+' → logprob: -3.233584403991699
    4. '[v' → logprob: -3.358584403991699
    5. ')+' → logprob: -5.358584403991699
    6. ')' → logprob: -6.358584403991699
    7. ' +' → logprob: -7.858584403991699
    8. '[' → logprob: -8.2335844039917
    9. '[u' → logprob: -8.3585844039917
    10. '+t' → logprob: -9.4835844039917

Token 519: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2531958818435669
    2. '+t' → logprob: -1.628195881843567
    3. ' +' → logprob: -3.6281957626342773
    4. ')+' → logprob: -7.628195762634277
    5. ')' → logprob: -8.753195762634277
    6. ']+' → logprob: -9.253195762634277
    7. '   ' → logprob: -11.128195762634277
    8. ' ' → logprob: -11.753195762634277
    9. '[t' → logprob: -11.878195762634277
    10. ']' → logprob: -11.878195762634277

Token 520: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00014191943046171218
    2. ' t' → logprob: -8.875142097473145
    3. '_t' → logprob: -14.375142097473145
    4. ')t' → logprob: -14.625142097473145
    5. '	t' → logprob: -14.875142097473145
    6. '`t' → logprob: -15.750142097473145
    7. ')' → logprob: -16.000141143798828
    8. '```' → logprob: -16.375141143798828
    9. '
' → logprob: -16.625141143798828
    10. '   ' → logprob: -16.625141143798828

Token 521: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000844172143843025
    2. ' )' → logprob: -7.6258440017700195
    3. ')
' → logprob: -8.25084400177002
    4. '   ' → logprob: -10.25084400177002
    5. ')\' → logprob: -11.12584400177002
    6. '#' → logprob: -11.12584400177002
    7. ')
' → logprob: -11.87584400177002
    8. '```' → logprob: -12.87584400177002
    9. '`)' → logprob: -12.87584400177002
    10. ')`' → logprob: -13.00084400177002

Token 522: '#' (ID: 2)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0067378282546997
    2. 'for' → logprob: -1.1317378282546997
    3. '#' → logprob: -2.38173770904541
    4. ')' → logprob: -2.88173770904541
    5. ' for' → logprob: -3.25673770904541
    6. 'if' → logprob: -4.00673770904541
    7. ',' → logprob: -4.13173770904541
    8. '
' → logprob: -4.50673770904541
    9. ' if' → logprob: -5.00673770904541
    10. '\n' → logprob: -5.00673770904541

Token 523: ' To' (ID: 2514)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03752836957573891
    2. '#' → logprob: -4.9125285148620605
    3. 'if' → logprob: -4.9125285148620605
    4. 'lower' → logprob: -4.9125285148620605
    5. 'low' → logprob: -5.7875285148620605
    6. 'dist' → logprob: -6.0375285148620605
    7. 'while' → logprob: -6.2875285148620605
    8. 'inf' → logprob: -6.5375285148620605
    9. 'max' → logprob: -6.9125285148620605
    10. 'def' → logprob: -6.9125285148620605

Token 524: ' fly' (ID: 14360)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.693986713886261
    2. ' continue' → logprob: -1.0689866542816162
    3. 'find' → logprob: -3.818986654281616
    4. ' find' → logprob: -3.818986654281616
    5. ' check' → logprob: -4.193986892700195
    6. ' complete' → logprob: -4.193986892700195
    7. 'check' → logprob: -4.568986892700195
    8. 'complete' → logprob: -5.068986892700195
    9. ' proceed' → logprob: -5.068986892700195
    10. 'consider' → logprob: -5.318986892700195

Token 525: ',' (ID: 11)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.22629141807556152
    2. 'to' → logprob: -2.2262914180755615
    3. ' from' → logprob: -2.7262914180755615
    4. ' to' → logprob: -3.6012914180755615
    5. ' out' → logprob: -7.476291656494141
    6. ',' → logprob: -7.601291656494141
    7. 'out' → logprob: -8.47629165649414
    8. ' ' → logprob: -9.22629165649414
    9. '	from' → logprob: -9.60129165649414
    10. '=' → logprob: -10.10129165649414

Token 526: ' JO' (ID: 72685)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7172765731811523
    2. 'we' → logprob: -1.2172765731811523
    3. ' if' → logprob: -2.2172765731811523
    4. ' we' → logprob: -3.0922765731811523
    5. 'for' → logprob: -3.5922765731811523
    6. 'h' → logprob: -4.092276573181152
    7. ' h' → logprob: -4.967276573181152
    8. ' for' → logprob: -5.092276573181152
    9. ' feasible' → logprob: -6.967276573181152
    10. 'the' → logprob: -7.092276573181152

Token 527: 'I' (ID: 40)
  Prédit: '_u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_u' → logprob: -0.0009263493702746928
    2. 'u' → logprob: -7.875926494598389
    3. '_w' → logprob: -8.50092601776123
    4. '_' → logprob: -8.75092601776123
    5. ' _' → logprob: -10.12592601776123
    6. '\' → logprob: -10.62592601776123
    7. '```' → logprob: -10.87592601776123
    8. '_can' → logprob: -11.12592601776123
    9. '_v' → logprob: -11.37592601776123
    10. '_h' → logprob: -11.75092601776123

Token 528: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.7152925133705139
    2. ' can' → logprob: -1.5902924537658691
    3. 'must' → logprob: -2.215292453765869
    4. 'can' → logprob: -2.340292453765869
    5. ' needs' → logprob: -2.715292453765869
    6. 'needs' → logprob: -4.465292453765869
    7. '_can' → logprob: -5.340292453765869
    8. '_' → logprob: -5.590292453765869
    9. ''s' → logprob: -5.590292453765869
    10. '_u' → logprob: -5.590292453765869

Token 529: ' climb' (ID: 27049)
  Prédit: 'choose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'choose' → logprob: -0.2626814544200897
    2. 'have' → logprob: -2.762681484222412
    3. ' choose' → logprob: -3.512681484222412
    4. ' be' → logprob: -3.512681484222412
    5. ' have' → logprob: -3.512681484222412
    6. 'be' → logprob: -3.637681484222412
    7. 'find' → logprob: -3.762681484222412
    8. ' find' → logprob: -4.762681484222412
    9. 'fly' → logprob: -5.262681484222412
    10. 'pick' → logprob: -5.262681484222412

Token 530: ' or' (ID: 503)
  Prédit: ' up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' up' → logprob: -0.9504418969154358
    2. 'up' → logprob: -1.575441837310791
    3. ' to' → logprob: -1.700441837310791
    4. 'to' → logprob: -1.700441837310791
    5. 'from' → logprob: -4.450441837310791
    6. ' or' → logprob: -4.575441837310791
    7. '#' → logprob: -4.825441837310791
    8. 'or' → logprob: -6.200441837310791
    9. ' from' → logprob: -6.200441837310791
    10. '   ' → logprob: -6.450441837310791

Token 531: ' descend' (ID: 47877)
  Prédit: 'desc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'desc' → logprob: -0.1230604350566864
    2. 'down' → logprob: -2.748060464859009
    3. ' descend' → logprob: -3.248060464859009
    4. 'fly' → logprob: -4.49806022644043
    5. 'go' → logprob: -7.62306022644043
    6. 'dow' → logprob: -8.74806022644043
    7. 'walk' → logprob: -8.87306022644043
    8. '#' → logprob: -8.99806022644043
    9. '```' → logprob: -9.24806022644043
    10. ' descent' → logprob: -9.24806022644043

Token 532: ' from' (ID: 591)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.9962109923362732
    2. ' one' → logprob: -1.621211051940918
    3. ' before' → logprob: -2.246211051940918
    4. '#' → logprob: -2.371211051940918
    5. ' ' → logprob: -3.121211051940918
    6. 'to' → logprob: -3.246211051940918
    7. ' at' → logprob: -3.371211051940918
    8. 'before' → logprob: -3.746211051940918
    9. ' the' → logprob: -3.871211051940918
    10. ' #' → logprob: -4.746211051940918

Token 533: ' top' (ID: 2344)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.052074845880270004
    2. 'current' → logprob: -4.177074909210205
    3. ' H' → logprob: -4.302074909210205
    4. 'the' → logprob: -4.552074909210205
    5. 'top' → logprob: -5.552074909210205
    6. 'h' → logprob: -5.927074909210205
    7. ' current' → logprob: -6.427074909210205
    8. ' the' → logprob: -6.927074909210205
    9. 'his' → logprob: -7.427074909210205
    10. 'max' → logprob: -7.552074909210205

Token 534: ' H' (ID: 487)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.7320449352264404
    2. ' to' → logprob: -2.2320449352264404
    3. 'height' → logprob: -2.2320449352264404
    4. '_height' → logprob: -2.2320449352264404
    5. 'H' → logprob: -2.3570449352264404
    6. ' height' → logprob: -2.3570449352264404
    7. ' H' → logprob: -2.9820449352264404
    8. ' of' → logprob: -3.3570449352264404
    9. '```' → logprob: -3.3570449352264404
    10. ')' → logprob: -3.4820449352264404

Token 535: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.009900694712996483
    2. ']' → logprob: -5.2599005699157715
    3. '[' → logprob: -6.0099005699157715
    4. '_u' → logprob: -6.5099005699157715
    5. 'u' → logprob: -7.8849005699157715
    6. '\[' → logprob: -9.88490104675293
    7. '[user' → logprob: -10.00990104675293
    8. '][' → logprob: -10.25990104675293
    9. '_' → logprob: -10.25990104675293
    10. '   ' → logprob: -10.38490104675293

Token 536: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0018455786630511284
    2. '])' → logprob: -7.001845359802246
    3. ']+' → logprob: -7.751845359802246
    4. ')' → logprob: -9.001845359802246
    5. '],' → logprob: -9.001845359802246
    6. ']-' → logprob: -9.376845359802246
    7. ' ]' → logprob: -9.626845359802246
    8. '[u' → logprob: -11.001845359802246
    9. '   ' → logprob: -11.126845359802246
    10. ' to' → logprob: -11.376845359802246

Token 537: ' to' (ID: 316)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2719422578811646
    2. ',' → logprob: -2.146942138671875
    3. '
' → logprob: -2.146942138671875
    4. ' ' → logprob: -3.021942138671875
    5. '   ' → logprob: -3.021942138671875
    6. 'u' → logprob: -3.146942138671875
    7. '```' → logprob: -3.146942138671875
    8. ')' → logprob: -3.271942138671875
    9. '#' → logprob: -3.521942138671875
    10. ' to' → logprob: -3.771942138671875

Token 538: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.46013420820236206
    2. 'some' → logprob: -1.3351342678070068
    3. 'a' → logprob: -3.210134267807007
    4. 'the' → logprob: -3.460134267807007
    5. 'that' → logprob: -4.585134029388428
    6. 'fe' → logprob: -4.835134029388428
    7. 'max' → logprob: -5.335134029388428
    8. 'any' → logprob: -5.460134029388428
    9. ' h' → logprob: -6.585134029388428
    10. 'height' → logprob: -7.210134029388428

Token 539: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -0.0013445195509120822
    2. '_' → logprob: -6.626344680786133
    3. '_v' → logprob: -12.376344680786133
    4. ' _' → logprob: -12.626344680786133
    5. '_e' → logprob: -13.001344680786133
    6. '_i' → logprob: -13.126344680786133
    7. '[u' → logprob: -13.376344680786133
    8. '_[' → logprob: -13.501344680786133
    9. '_o' → logprob: -14.751344680786133
    10. '   ' → logprob: -15.126344680786133

Token 540: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.35699769854545593
    2. ',' → logprob: -2.4819977283477783
    3. ' for' → logprob: -3.6069977283477783
    4. 'u' → logprob: -3.8569977283477783
    5. ' to' → logprob: -3.8569977283477783
    6. ' ' → logprob: -3.8569977283477783
    7. 'for' → logprob: -3.9819977283477783
    8. 'h' → logprob: -4.106997489929199
    9. '
' → logprob: -4.481997489929199
    10. '_u' → logprob: -4.606997489929199

Token 541: ' then' (ID: 1815)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.0401933193206787
    2. ' then' → logprob: -1.1651933193206787
    3. ' so' → logprob: -2.0401933193206787
    4. ' which' → logprob: -2.9151933193206787
    5. ' #' → logprob: -3.0401933193206787
    6. '#' → logprob: -3.2901933193206787
    7. ' i' → logprob: -3.9151933193206787
    8. ' h' → logprob: -4.665193557739258
    9. ' ' → logprob: -5.540193557739258
    10. '   ' → logprob: -5.665193557739258

Token 542: ' fly' (ID: 14360)
  Prédit: 'fly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fly' → logprob: -0.04003644362092018
    2. ' fly' → logprob: -3.66503643989563
    3. 'pay' → logprob: -4.540036678314209
    4. 'desc' → logprob: -6.415036678314209
    5. ' descend' → logprob: -7.790036678314209
    6. ' pay' → logprob: -8.04003620147705
    7. 'sp' → logprob: -8.41503620147705
    8. 'subtract' → logprob: -9.54003620147705
    9. ' spend' → logprob: -10.29003620147705
    10. 'wait' → logprob: -10.29003620147705

Token 543: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3575837314128876
    2. ' to' → logprob: -2.35758376121521
    3. ' and' → logprob: -2.98258376121521
    4. '#' → logprob: -3.60758376121521
    5. ' ,' → logprob: -3.85758376121521
    6. '   ' → logprob: -3.98258376121521
    7. ' h' → logprob: -4.482583522796631
    8. ' #' → logprob: -4.732583522796631
    9. ' (' → logprob: -4.982583522796631
    10. 'down' → logprob: -4.982583522796631

Token 544: ' then' (ID: 1815)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.14247730374336243
    2. ' then' → logprob: -3.01747727394104
    3. 'then' → logprob: -3.14247727394104
    4. 'and' → logprob: -3.51747727394104
    5. ' and' → logprob: -5.517477512359619
    6. ' #' → logprob: -5.517477512359619
    7. 'h' → logprob: -7.142477512359619
    8. '   ' → logprob: -7.392477512359619
    9. 'which' → logprob: -7.892477512359619
    10. '
' → logprob: -8.517477035522461

Token 545: ' arrive' (ID: 18338)
  Prédit: 'desc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'desc' → logprob: -0.2847849726676941
    2. 'cl' → logprob: -2.284785032272339
    3. 'land' → logprob: -2.409785032272339
    4. '#' → logprob: -3.909785032272339
    5. 'fly' → logprob: -4.40978479385376
    6. ' land' → logprob: -4.53478479385376
    7. 'pay' → logprob: -5.15978479385376
    8. ' descend' → logprob: -5.28478479385376
    9. 'asc' → logprob: -7.90978479385376
    10. 'arr' → logprob: -7.90978479385376

Token 546: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.015932423993945122
    2. 'at' → logprob: -4.390932559967041
    3. '_' → logprob: -6.390932559967041
    4. '_at' → logprob: -7.015932559967041
    5. '```' → logprob: -8.890932083129883
    6. ' to' → logprob: -8.890932083129883
    7. '   ' → logprob: -9.015932083129883
    8. ',' → logprob: -9.390932083129883
    9. ' _' → logprob: -10.015932083129883
    10. ' h' → logprob: -10.265932083129883

Token 547: ' height' (ID: 4679)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.10832879692316055
    2. 'height' → logprob: -2.7333288192749023
    3. 'top' → logprob: -3.8583288192749023
    4. ' H' → logprob: -4.483328819274902
    5. ' height' → logprob: -5.983328819274902
    6. 'h' → logprob: -6.733328819274902
    7. 'v' → logprob: -7.733328819274902
    8. ' top' → logprob: -7.858328819274902
    9. 'the' → logprob: -8.358328819274902
    10. '0' → logprob: -8.983328819274902

Token 548: ' h' (ID: 312)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.06292330473661423
    2. ' H' → logprob: -2.8129231929779053
    3. 'h' → logprob: -8.062923431396484
    4. ' (' → logprob: -8.312923431396484
    5. '(H' → logprob: -8.687923431396484
    6. ' h' → logprob: -10.187923431396484
    7. '`' → logprob: -10.437923431396484
    8. 'max' → logprob: -10.437923431396484
    9. '(' → logprob: -10.562923431396484
    10. '0' → logprob: -10.812923431396484

Token 549: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -0.0027851462364196777
    2. '_v' → logprob: -6.1277852058410645
    3. '[u' → logprob: -8.127784729003906
    4. '_' → logprob: -8.877784729003906
    5. '```' → logprob: -10.127784729003906
    6. 'u' → logprob: -10.252784729003906
    7. '   ' → logprob: -11.127784729003906
    8. '\[' → logprob: -11.377784729003906
    9. 'v' → logprob: -11.627784729003906
    10. ''_' → logprob: -11.877784729003906

Token 550: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1847269535064697
    2. ' +' → logprob: -1.3097269535064697
    3. '_u' → logprob: -2.5597269535064697
    4. '+' → logprob: -2.6847269535064697
    5. '#' → logprob: -3.0597269535064697
    6. ')' → logprob: -3.1847269535064697
    7. '   ' → logprob: -3.3097269535064697
    8. 'u' → logprob: -3.3097269535064697
    9. ' ' → logprob: -4.434726715087891
    10. '.' → logprob: -4.559726715087891

Token 551: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -5.1689596148207784e-05
    2. ' t' → logprob: -10.000051498413086
    3. '`t' → logprob: -12.750051498413086
    4. 'T' → logprob: -13.375051498413086
    5. '_t' → logprob: -13.750051498413086
    6. '```' → logprob: -14.500051498413086
    7. '	t' → logprob: -16.000051498413086
    8. '`' → logprob: -17.875051498413086
    9. ')t' → logprob: -18.125051498413086
    10. '<|end|>' → logprob: -18.625051498413086

Token 552: ' in' (ID: 306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7894474267959595
    2. 'for' → logprob: -2.03944730758667
    3. '   ' → logprob: -2.53944730758667
    4. ',' → logprob: -2.53944730758667
    5. ' for' → logprob: -2.53944730758667
    6. '\n' → logprob: -2.78944730758667
    7. '#' → logprob: -3.03944730758667
    8. '.' → logprob: -3.28944730758667
    9. ' =' → logprob: -3.41444730758667
    10. 'u' → logprob: -3.53944730758667

Token 553: ' v' (ID: 323)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0110870599746704
    2. '[v' → logprob: -1.2610870599746704
    3. 'H' → logprob: -1.5110870599746704
    4. 'v' → logprob: -2.386086940765381
    5. ' H' → logprob: -4.886086940765381
    6. 'range' → logprob: -5.386086940765381
    7. ' [' → logprob: -5.511086940765381
    8. '[
' → logprob: -5.511086940765381
    9. 'h' → logprob: -5.636086940765381
    10. ' v' → logprob: -5.886086940765381

Token 554: ',
' (ID: 412)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.8124245405197144
    2. 'import' → logprob: -2.187424659729004
    3. '
' → logprob: -2.437424659729004
    4. ')' → logprob: -3.312424659729004
    5. '#' → logprob: -3.562424659729004
    6. ']' → logprob: -3.687424659729004
    7. 'h' → logprob: -3.687424659729004
    8. '_u' → logprob: -3.812424659729004
    9. 'for' → logprob: -3.937424659729004
    10. ' =' → logprob: -3.937424659729004

Token 555: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2500437796115875
    2. ' then' → logprob: -1.8750437498092651
    3. ' and' → logprob: -3.5000438690185547
    4. ' which' → logprob: -4.250043869018555
    5. 'and' → logprob: -4.875043869018555
    6. 'then' → logprob: -5.500043869018555
    7. 'which' → logprob: -5.625043869018555
    8. ' #' → logprob: -5.750043869018555
    9. '   ' → logprob: -7.125043869018555
    10. ''' → logprob: -7.375043869018555

Token 556: ' then' (ID: 1815)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.30596283078193665
    2. 'and' → logprob: -2.4309628009796143
    3. ' and' → logprob: -2.8059628009796143
    4. ' then' → logprob: -3.6809628009796143
    5. 'which' → logprob: -3.8059628009796143
    6. '   ' → logprob: -3.9309628009796143
    7. ' which' → logprob: -4.555963039398193
    8. 'then' → logprob: -4.930963039398193
    9. 'h' → logprob: -5.055963039398193
    10. '\n' → logprob: -5.055963039398193

Token 557: ' after' (ID: 1934)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0048640575259923935
    2. 'pay' → logprob: -6.37986421585083
    3. 'desc' → logprob: -7.00486421585083
    4. 'cl' → logprob: -7.50486421585083
    5. 'then' → logprob: -7.50486421585083
    6. 'dist' → logprob: -8.379863739013672
    7. '   ' → logprob: -8.504863739013672
    8. ' #' → logprob: -8.629863739013672
    9. 'add' → logprob: -9.754863739013672
    10. ' then' → logprob: -10.004863739013672

Token 558: ' arrival' (ID: 24861)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.7396916151046753
    2. 'f' → logprob: -1.2396916151046753
    3. 'arrival' → logprob: -2.114691734313965
    4. 'landing' → logprob: -2.614691734313965
    5. 'flight' → logprob: -3.864691734313965
    6. 'fly' → logprob: -5.239691734313965
    7. 'that' → logprob: -5.864691734313965
    8. 're' → logprob: -5.989691734313965
    9. ' flying' → logprob: -6.239691734313965
    10. '   ' → logprob: -7.364691734313965

Token 559: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.055636025965213776
    2. '#' → logprob: -3.680635929107666
    3. ' at' → logprob: -4.305635929107666
    4. 'at' → logprob: -5.555635929107666
    5. 'he' → logprob: -5.930635929107666
    6. ' can' → logprob: -6.055635929107666
    7. ',
' → logprob: -6.930635929107666
    8. ' we' → logprob: -7.180635929107666
    9. '   ' → logprob: -7.305635929107666
    10. 'can' → logprob: -7.305635929107666

Token 560: ' need' (ID: 1309)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5583606362342834
    2. 'pay' → logprob: -1.0583605766296387
    3. 'cl' → logprob: -3.3083605766296387
    4. 'desc' → logprob: -4.308360576629639
    5. 'dist' → logprob: -5.058360576629639
    6. 'fly' → logprob: -5.058360576629639
    7. 'we' → logprob: -5.308360576629639
    8. ' pay' → logprob: -5.933360576629639
    9. ' #' → logprob: -6.308360576629639
    10. '   ' → logprob: -6.558360576629639

Token 561: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.38723960518836975
    2. 'to' → logprob: -1.1372395753860474
    3. 's' → logprob: -9.762239456176758
    4. '_to' → logprob: -9.887239456176758
    5. 'time' → logprob: -10.012239456176758
    6. '_' → logprob: -10.012239456176758
    7. ' (' → logprob: -10.262239456176758
    8. '(' → logprob: -10.387239456176758
    9. ' ' → logprob: -10.637239456176758
    10. ' time' → logprob: -10.762239456176758

Token 562: ' climb' (ID: 27049)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.004016310907900333
    2. 'pay' → logprob: -6.379016399383545
    3. ' climb' → logprob: -6.754016399383545
    4. 'fly' → logprob: -7.254016399383545
    5. '```' → logprob: -8.379015922546387
    6. 'asc' → logprob: -10.004015922546387
    7. 'raise' → logprob: -10.754015922546387
    8. 'desc' → logprob: -10.879015922546387
    9. 'adjust' → logprob: -11.129015922546387
    10. '(cl' → logprob: -11.254015922546387

Token 563: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5275516510009766
    2. ' to' → logprob: -2.1525516510009766
    3. 'to' → logprob: -2.2775516510009766
    4. '   ' → logprob: -3.0275516510009766
    5. 'up' → logprob: -3.2775516510009766
    6. '#' → logprob: -3.5275516510009766
    7. ' from' → logprob: -3.9025516510009766
    8. ' up' → logprob: -4.402551651000977
    9. ' (' → logprob: -5.152551651000977
    10. ')' → logprob: -5.152551651000977

Token 564: ' that' (ID: 484)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.18474683165550232
    2. 'h' → logprob: -2.059746742248535
    3. ' H' → logprob: -4.184746742248535
    4. 'v' → logprob: -4.809746742248535
    5. '(H' → logprob: -4.809746742248535
    6. ' h' → logprob: -5.309746742248535
    7. ' (' → logprob: -6.184746742248535
    8. '(h' → logprob: -6.809746742248535
    9. ' v' → logprob: -7.684746742248535
    10. '(' → logprob: -8.059746742248535

Token 565: ' height' (ID: 4679)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.4846065640449524
    2. 'v' → logprob: -2.1096065044403076
    3. 'H' → logprob: -2.7346065044403076
    4. 'to' → logprob: -2.8596065044403076
    5. '#' → logprob: -2.9846065044403076
    6. 'h' → logprob: -3.6096065044403076
    7. ' to' → logprob: -4.484606742858887
    8. '+' → logprob: -4.734606742858887
    9. ' height' → logprob: -4.984606742858887
    10. '
' → logprob: -5.359606742858887

Token 566: ' to' (ID: 316)
  Prédit: '_u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_u' → logprob: -1.7828532457351685
    2. '[u' → logprob: -1.9078532457351685
    3. '   ' → logprob: -2.157853126525879
    4. '
' → logprob: -2.157853126525879
    5. 'u' → logprob: -2.532853126525879
    6. ' +' → logprob: -2.657853126525879
    7. '```' → logprob: -2.907853126525879
    8. ']' → logprob: -3.407853126525879
    9. ',' → logprob: -3.782853126525879
    10. ')' → logprob: -3.782853126525879

Token 567: ' top' (ID: 2344)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.00023393364972434938
    2. ' H' → logprob: -8.37523365020752
    3. '`' → logprob: -13.37523365020752
    4. '```' → logprob: -14.25023365020752
    5. '   ' → logprob: -14.50023365020752
    6. '+' → logprob: -15.12523365020752
    7. '``' → logprob: -16.250234603881836
    8. ' ' → logprob: -16.750234603881836
    9. '(H' → logprob: -16.875234603881836
    10. '	H' → logprob: -17.250234603881836

Token 568: ' H' (ID: 487)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.20238564908504486
    2. 'u' → logprob: -2.577385663986206
    3. '_u' → logprob: -3.202385663986206
    4. ']' → logprob: -4.077385425567627
    5. '   ' → logprob: -4.327385425567627
    6. '+' → logprob: -4.952385425567627
    7. ' +' → logprob: -5.452385425567627
    8. ' u' → logprob: -5.827385425567627
    9. '[' → logprob: -6.077385425567627
    10. ' ' → logprob: -6.077385425567627

Token 569: '[v' (ID: 36561)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.03430653363466263
    2. '[v' → logprob: -3.409306526184082
    3. '```' → logprob: -7.784306526184082
    4. 'u' → logprob: -9.409306526184082
    5. '[' → logprob: -9.534306526184082
    6. 'v' → logprob: -9.784306526184082
    7. '``' → logprob: -11.659306526184082
    8. '   ' → logprob: -12.534306526184082
    9. '\[' → logprob: -12.909306526184082
    10. ']' → logprob: -13.284306526184082

Token 570: '].

' (ID: 37441)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2316652536392212
    2. ']' → logprob: -2.3566651344299316
    3. ')
' → logprob: -3.2316651344299316
    4. '])' → logprob: -3.3566651344299316
    5. ')]' → logprob: -3.6066651344299316
    6. '])
' → logprob: -6.106665134429932
    7. ']
' → logprob: -6.106665134429932
    8. '#' → logprob: -6.856665134429932
    9. ')])' → logprob: -6.856665134429932
    10. '   ' → logprob: -7.106665134429932

Token 571: '#' (ID: 2)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0027689787093549967
    2. 'import' → logprob: -6.8777689933776855
    3. 'distance' → logprob: -7.7527689933776855
    4. 'for' → logprob: -8.127768516540527
    5. 'dp' → logprob: -8.502768516540527
    6. '#' → logprob: -8.502768516540527
    7. 'visited' → logprob: -9.127768516540527
    8. 'heap' → logprob: -9.502768516540527
    9. 'inf' → logprob: -9.752768516540527
    10. 'INF' → logprob: -9.752768516540527

Token 572: ' Total' (ID: 17565)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.684942901134491
    2. 'for' → logprob: -0.809942901134491
    3. 'visited' → logprob: -4.184942722320557
    4. 'dp' → logprob: -4.809942722320557
    5. 'while' → logprob: -5.059942722320557
    6. 'def' → logprob: -5.434942722320557
    7. 'distance' → logprob: -5.684942722320557
    8. 'inf' → logprob: -6.059942722320557
    9. 'INF' → logprob: -6.309942722320557
    10. '#' → logprob: -6.434942722320557

Token 573: ' cost' (ID: 3097)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.009690572507679462
    2. '_cost' → logprob: -5.134690761566162
    3. '_' → logprob: -6.009690761566162
    4. 'time' → logprob: -7.634690761566162
    5. ' =' → logprob: -8.009690284729004
    6. ' _' → logprob: -8.634690284729004
    7. ' time' → logprob: -9.134690284729004
    8. 'cost' → logprob: -9.634690284729004
    9. '_t' → logprob: -10.134690284729004
    10. '_dist' → logprob: -10.509690284729004

Token 574: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2280743569135666
    2. '=' → logprob: -1.853074312210083
    3. ' +=' → logprob: -3.353074312210083
    4. ' +' → logprob: -6.228074550628662
    5. '_u' → logprob: -6.478074550628662
    6. '+=' → logprob: -6.728074550628662
    7. ')' → logprob: -6.853074550628662
    8. '+' → logprob: -6.978074550628662
    9. 'from' → logprob: -7.103074550628662
    10. ':' → logprob: -7.103074550628662

Token 575: ' go' (ID: 810)
  Prédit: 'fly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fly' → logprob: -0.08339690417051315
    2. 'go' → logprob: -3.8333969116210938
    3. 'move' → logprob: -3.8333969116210938
    4. 'reach' → logprob: -3.8333969116210938
    5. ' fly' → logprob: -4.708396911621094
    6. ' move' → logprob: -6.333396911621094
    7. 'arr' → logprob: -6.833396911621094
    8. 'cl' → logprob: -7.458396911621094
    9. ' go' → logprob: -7.583396911621094
    10. '   ' → logprob: -7.708396911621094

Token 576: ' from' (ID: 591)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6646090149879456
    2. ' =' → logprob: -1.0396089553833008
    3. '_' → logprob: -3.664608955383301
    4. ' u' → logprob: -3.664608955383301
    5. ' v' → logprob: -3.664608955383301
    6. 'u' → logprob: -4.539608955383301
    7. 'from' → logprob: -4.664608955383301
    8. ' from' → logprob: -5.039608955383301
    9. ' _' → logprob: -5.164608955383301
    10. ' ' → logprob: -5.539608955383301

Token 577: ' node' (ID: 4596)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.04308939725160599
    2. ' u' → logprob: -3.1680893898010254
    3. 'node' → logprob: -10.668089866638184
    4. 'graph' → logprob: -11.168089866638184
    5. '[u' → logprob: -11.168089866638184
    6. '   ' → logprob: -11.418089866638184
    7. ' node' → logprob: -12.293089866638184
    8. '```' → logprob: -12.418089866638184
    9. '
' → logprob: -12.668089866638184
    10. '	u' → logprob: -12.918089866638184

Token 578: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.11906316876411438
    2. 'u' → logprob: -2.244063138961792
    3. '[u' → logprob: -5.244063377380371
    4. ',' → logprob: -8.244063377380371
    5. '_' → logprob: -8.494063377380371
    6. ' ' → logprob: -9.119063377380371
    7. ' to' → logprob: -9.619063377380371
    8. ' _' → logprob: -9.744063377380371
    9. ' v' → logprob: -10.119063377380371
    10. '_u' → logprob: -10.619063377380371

Token 579: ' to' (ID: 316)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.2964424192905426
    2. ',' → logprob: -1.6714423894882202
    3. ' to' → logprob: -4.04644250869751
    4. 'u' → logprob: -4.17144250869751
    5. ' u' → logprob: -4.67144250869751
    6. ' ' → logprob: -4.79644250869751
    7. ' ,' → logprob: -5.17144250869751
    8. '[' → logprob: -5.17144250869751
    9. 'to' → logprob: -6.17144250869751
    10. ' [' → logprob: -6.92144250869751

Token 580: ' node' (ID: 4596)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.21411581337451935
    2. ' v' → logprob: -1.714115858078003
    3. 'node' → logprob: -4.589115619659424
    4. ' node' → logprob: -6.089115619659424
    5. 'u' → logprob: -8.714116096496582
    6. ' u' → logprob: -10.839116096496582
    7. 'graph' → logprob: -12.339116096496582
    8. ' ' → logprob: -13.964116096496582
    9. '```' → logprob: -13.964116096496582
    10. ' graph' → logprob: -14.464116096496582

Token 581: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.07334144413471222
    2. 'v' → logprob: -3.1983413696289062
    3. ' u' → logprob: -4.948341369628906
    4. ' +' → logprob: -5.448341369628906
    5. ' '' → logprob: -5.823341369628906
    6. ''' → logprob: -5.948341369628906
    7. '+' → logprob: -5.948341369628906
    8. 'u' → logprob: -6.073341369628906
    9. ' `' → logprob: -6.073341369628906
    10. ',' → logprob: -6.823341369628906

Token 582: ' with' (ID: 483)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10446593910455704
    2. '=' → logprob: -2.604465961456299
    3. ' +' → logprob: -5.604465961456299
    4. ' u' → logprob: -5.604465961456299
    5. ' +=' → logprob: -5.604465961456299
    6. ':' → logprob: -5.729465961456299
    7. ' is' → logprob: -5.979465961456299
    8. 'u' → logprob: -6.354465961456299
    9. '#' → logprob: -6.854465961456299
    10. ' for' → logprob: -7.104465961456299

Token 583: ' current' (ID: 2208)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2919842004776
    2. 'edge' → logprob: -2.2919840812683105
    3. 'the' → logprob: -2.4169840812683105
    4. 'each' → logprob: -3.0419840812683105
    5. 'time' → logprob: -3.1669840812683105
    6. 'a' → logprob: -3.2919840812683105
    7. 'height' → logprob: -3.5419840812683105
    8. 'H' → logprob: -3.6669840812683105
    9. ' edge' → logprob: -3.7919840812683105
    10. ''' → logprob: -3.7919840812683105

Token 584: ' cost' (ID: 3097)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.49406376481056213
    2. '_height' → logprob: -1.7440637350082397
    3. 'height' → logprob: -3.1190638542175293
    4. ' height' → logprob: -3.4940638542175293
    5. ' _' → logprob: -3.6190638542175293
    6. '_h' → logprob: -3.6190638542175293
    7. 'H' → logprob: -4.119063854217529
    8. '`' → logprob: -4.619063854217529
    9. '_u' → logprob: -4.744063854217529
    10. ' H' → logprob: -5.494063854217529

Token 585: ' dist' (ID: 3601)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7144525647163391
    2. ' +=' → logprob: -1.4644525051116943
    3. ' =' → logprob: -2.2144525051116943
    4. '[u' → logprob: -2.4644525051116943
    5. '=' → logprob: -3.8394525051116943
    6. '+' → logprob: -3.8394525051116943
    7. 'u' → logprob: -4.339452743530273
    8. ' u' → logprob: -4.464452743530273
    9. ' ' → logprob: -4.964452743530273
    10. '+=' → logprob: -6.464452743530273

Token 586: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.06871017068624496
    2. '[' → logprob: -2.8187100887298584
    3. 'u' → logprob: -6.3187103271484375
    4. '[node' → logprob: -6.4437103271484375
    5. '=' → logprob: -6.6937103271484375
    6. 's' → logprob: -7.9437103271484375
    7. '_u' → logprob: -8.068710327148438
    8. ',' → logprob: -8.193710327148438
    9. '[v' → logprob: -8.693710327148438
    10. ']' → logprob: -8.943710327148438

Token 587: ']:
' (ID: 22152)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007743032183498144
    2. ']+' → logprob: -5.632742881774902
    3. '[u' → logprob: -5.757742881774902
    4. '])' → logprob: -7.132742881774902
    5. ' ]' → logprob: -9.882742881774902
    6. ']
' → logprob: -9.882742881774902
    7. ')' → logprob: -10.757742881774902
    8. '][' → logprob: -10.882742881774902
    9. '],' → logprob: -11.132742881774902
    10. '[' → logprob: -12.632742881774902

Token 588: '#' (ID: 2)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.6555427312850952
    2. '`' → logprob: -1.6555427312850952
    3. '   ' → logprob: -1.6555427312850952
    4. ' 
' → logprob: -2.5305428504943848
    5. '```' → logprob: -2.5305428504943848
    6. ''' → logprob: -3.2805428504943848
    7. ' \' → logprob: -3.4055428504943848
    8. '    ' → logprob: -3.9055428504943848
    9. '
' → logprob: -4.030542850494385
    10. '``' → logprob: -4.405542850494385

Token 589: ' climb' (ID: 27049)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.5540435314178467
    2. ' for' → logprob: -1.8040435314178467
    3. ''' → logprob: -2.1790435314178467
    4. '`' → logprob: -2.1790435314178467
    5. ' 
' → logprob: -2.5540435314178467
    6. '"' → logprob: -2.9290435314178467
    7. ' ' → logprob: -3.4290435314178467
    8. ' +' → logprob: -3.8040435314178467
    9. ' #' → logprob: -4.054043769836426
    10. '#' → logprob: -4.179043769836426

Token 590: '/' (ID: 14)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.7630834579467773
    2. '_down' → logprob: -1.6380834579467773
    3. '_time' → logprob: -2.3880834579467773
    4. '_up' → logprob: -2.5130834579467773
    5. 'cost' → logprob: -3.0130834579467773
    6. 'down' → logprob: -3.5130834579467773
    7. '[u' → logprob: -3.8880834579467773
    8. 'up' → logprob: -4.138083457946777
    9. '_u' → logprob: -4.513083457946777
    10. '_diff' → logprob: -5.138083457946777

Token 591: 'desc' (ID: 17186)
  Prédit: 'down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'down' → logprob: -0.2895534634590149
    2. 'up' → logprob: -2.16455340385437
    3. ' up' → logprob: -2.78955340385437
    4. ' down' → logprob: -3.66455340385437
    5. '_down' → logprob: -3.66455340385437
    6. '_up' → logprob: -4.914553642272949
    7. ' H' → logprob: -5.289553642272949
    8. 'ing' → logprob: -5.414553642272949
    9. ' (' → logprob: -6.539553642272949
    10. ' time' → logprob: -7.164553642272949

Token 592: 'end' (ID: 419)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.25551125407218933
    2. 'end' → logprob: -2.1305112838745117
    3. 'e' → logprob: -3.6305112838745117
    4. '=' → logprob: -4.630511283874512
    5. '_' → logprob: -4.630511283874512
    6. 'b' → logprob: -4.755511283874512
    7. ' =' → logprob: -5.005511283874512
    8. 'h' → logprob: -5.380511283874512
    9. '   ' → logprob: -5.380511283874512
    10. '`' → logprob: -5.630511283874512

Token 593: ' time' (ID: 1058)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.9579796195030212
    2. 'from' → logprob: -1.707979679107666
    3. ' +' → logprob: -1.707979679107666
    4. ' =' → logprob: -2.207979679107666
    5. ' to' → logprob: -3.582979679107666
    6. ' (' → logprob: -3.832979679107666
    7. ' at' → logprob: -4.207979679107666
    8. 'down' → logprob: -4.332979679107666
    9. ' H' → logprob: -4.582979679107666
    10. '(u' → logprob: -4.957979679107666

Token 594: ' on' (ID: 402)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.08963435888290405
    2. '+' → logprob: -2.964634418487549
    3. ' =' → logprob: -3.589634418487549
    4. '=' → logprob: -5.339634418487549
    5. ' +=' → logprob: -7.464634418487549
    6. ' +
' → logprob: -8.58963394165039
    7. 'u' → logprob: -8.58963394165039
    8. ' ' → logprob: -8.96463394165039
    9. '[u' → logprob: -9.08963394165039
    10. ' #' → logprob: -9.71463394165039

Token 595: ' u' (ID: 337)
  Prédit: ' H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.8309895992279053
    2. ' (' → logprob: -1.9559895992279053
    3. 'H' → logprob: -2.8309895992279053
    4. '`' → logprob: -2.8309895992279053
    5. ' ' → logprob: -3.0809895992279053
    6. ' top' → logprob: -3.0809895992279053
    7. 'u' → logprob: -3.2059895992279053
    8. ' the' → logprob: -3.5809895992279053
    9. 'top' → logprob: -3.8309895992279053
    10. ' u' → logprob: -4.330989837646484

Token 596: ' side' (ID: 4307)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.18115074932575226
    2. '+' → logprob: -1.8061507940292358
    3. '   ' → logprob: -7.681150913238525
    4. ' ' → logprob: -8.931150436401367
    5. ' -' → logprob: -9.056150436401367
    6. 'u' → logprob: -9.056150436401367
    7. '
' → logprob: -9.181150436401367
    8. ' +
' → logprob: -9.806150436401367
    9. ')' → logprob: -9.931150436401367
    10. '#' → logprob: -10.181150436401367

Token 597: ':' (ID: 25)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20206360518932343
    2. '+' → logprob: -1.7020635604858398
    3. '
' → logprob: -8.70206356048584
    4. ' +
' → logprob: -8.95206356048584
    5. '   ' → logprob: -9.82706356048584
    6. '+
' → logprob: -10.07706356048584
    7. ',' → logprob: -10.20206356048584
    8. ' -' → logprob: -10.45206356048584
    9. ' ' → logprob: -10.45206356048584
    10. ')' → logprob: -10.95206356048584

Token 598: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.9314494729042053
    2. ' abs' → logprob: -1.3064494132995605
    3. ' H' → logprob: -2.5564494132995605
    4. ''' → logprob: -2.5564494132995605
    5. '"' → logprob: -3.1814494132995605
    6. 'H' → logprob: -3.5564494132995605
    7. '`' → logprob: -3.6814494132995605
    8. ' (' → logprob: -3.9314494132995605
    9. ' ' → logprob: -4.5564494132995605
    10. ' f' → logprob: -4.5564494132995605

Token 599: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.009286366403102875
    2. '(' → logprob: -4.759286403656006
    3. 'H' → logprob: -7.634286403656006
    4. '(dist' → logprob: -9.009285926818848
    5. 'dist' → logprob: -10.384285926818848
    6. '(
' → logprob: -11.384285926818848
    7. ' (' → logprob: -11.634285926818848
    8. '(abs' → logprob: -12.384285926818848
    9. '((' → logprob: -12.509285926818848
    10. '(h' → logprob: -13.134285926818848

Token 600: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.006734676193445921
    2. '[' → logprob: -5.006734848022461
    3. '[v' → logprob: -11.131734848022461
    4. 'u' → logprob: -13.131734848022461
    5. '[user' → logprob: -13.506734848022461
    6. ' [' → logprob: -14.756734848022461
    7. ')' → logprob: -15.631734848022461
    8. '[
' → logprob: -15.631734848022461
    9. '[i' → logprob: -16.00673484802246
    10. '   ' → logprob: -16.63173484802246

Token 601: ']-' (ID: 27107)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003713857615366578
    2. '-' → logprob: -6.753714084625244
    3. ' -' → logprob: -6.878714084625244
    4. ']-' → logprob: -6.878714084625244
    5. ')' → logprob: -8.128713607788086
    6. '[u' → logprob: -9.128713607788086
    7. ' ]' → logprob: -9.878713607788086
    8. '[' → logprob: -11.503713607788086
    9. ']+' → logprob: -12.003713607788086
    10. ' ' → logprob: -13.128713607788086

Token 602: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.02138368785381317
    2. ' h' → logprob: -3.896383762359619
    3. '(' → logprob: -8.271383285522461
    4. '(h' → logprob: -8.271383285522461
    5. ' (' → logprob: -8.646383285522461
    6. 'u' → logprob: -10.271383285522461
    7. ' ' → logprob: -10.771383285522461
    8. ')' → logprob: -10.896383285522461
    9. '(u' → logprob: -11.396383285522461
    10. '(
' → logprob: -11.396383285522461

Token 603: '_u' (ID: 17063)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.313975989818573
    2. '_u' → logprob: -1.3139760494232178
    3. '[' → logprob: -7.438975811004639
    4. 'u' → logprob: -9.813976287841797
    5. '```' → logprob: -10.563976287841797
    6. '[v' → logprob: -11.438976287841797
    7. '_' → logprob: -11.938976287841797
    8. ')' → logprob: -12.188976287841797
    9. '[_' → logprob: -12.563976287841797
    10. '_[' → logprob: -12.563976287841797

Token 604: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00431807991117239
    2. ')+' → logprob: -5.6293182373046875
    3. ')
' → logprob: -7.3793182373046875
    4. '),' → logprob: -10.504318237304688
    5. ' )' → logprob: -11.004318237304688
    6. ')`' → logprob: -11.254318237304688
    7. '))' → logprob: -11.504318237304688
    8. ')
' → logprob: -12.879318237304688
    9. '_)' → logprob: -13.004318237304688
    10. '`)' → logprob: -13.004318237304688

Token 605: '#' (ID: 2)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38279762864112854
    2. ' +' → logprob: -1.8827975988388062
    3. '+
' → logprob: -2.5077977180480957
    4. '\n' → logprob: -3.3827977180480957
    5. '
' → logprob: -4.382797718048096
    6. '#' → logprob: -5.007797718048096
    7. '```' → logprob: -5.132797718048096
    8. 'for' → logprob: -5.132797718048096
    9. 'abs' → logprob: -5.757797718048096
    10. ')' → logprob: -6.007797718048096

Token 606: ' fly' (ID: 14360)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7968237400054932
    2. ' +' → logprob: -1.1718237400054932
    3. 'cost' → logprob: -3.296823740005493
    4. '
' → logprob: -3.671823740005493
    5. '+
' → logprob: -3.671823740005493
    6. '   ' → logprob: -3.671823740005493
    7. '#' → logprob: -3.921823740005493
    8. 'for' → logprob: -4.421823501586914
    9. 'total' → logprob: -4.546823501586914
    10. 'heap' → logprob: -4.546823501586914

Token 607: ' time' (ID: 1058)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.8089694976806641
    2. ' time' → logprob: -1.433969497680664
    3. 'time' → logprob: -2.433969497680664
    4. '+' → logprob: -2.683969497680664
    5. ' +' → logprob: -3.308969497680664
    6. '_' → logprob: -3.433969497680664
    7. '_cost' → logprob: -3.683969497680664
    8. 'cost' → logprob: -4.058969497680664
    9. ' _' → logprob: -4.308969497680664
    10. '_t' → logprob: -4.558969497680664

Token 608: ':' (ID: 25)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.41124391555786133
    2. ':' → logprob: -1.6612439155578613
    3. '+' → logprob: -3.1612439155578613
    4. ' :' → logprob: -3.5362439155578613
    5. ',' → logprob: -3.7862439155578613
    6. ' t' → logprob: -3.7862439155578613
    7. ' =' → logprob: -4.661243915557861
    8. ' ' → logprob: -4.661243915557861
    9. '=' → logprob: -5.536243915557861
    10. ' ,' → logprob: -6.411243915557861

Token 609: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.016037650406360626
    2. ' t' → logprob: -4.141037464141846
    3. 'T' → logprob: -13.766037940979004
    4. ' ' → logprob: -14.141037940979004
    5. '`t' → logprob: -14.641037940979004
    6. '   ' → logprob: -14.766037940979004
    7. '_t' → logprob: -15.516037940979004
    8. '	t' → logprob: -15.891037940979004
    9. ' ' → logprob: -15.891037940979004
    10. '+t' → logprob: -16.391036987304688

Token 610: '
' (ID: 198)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4445522427558899
    2. ')' → logprob: -2.194552183151245
    3. '   ' → logprob: -2.444552183151245
    4. '+' → logprob: -2.694552183151245
    5. ' +' → logprob: -3.194552183151245
    6. ' ' → logprob: -4.569552421569824
    7. ',' → logprob: -4.694552421569824
    8. '
' → logprob: -4.819552421569824
    9. ' #' → logprob: -5.069552421569824
    10. '<|end|>' → logprob: -6.069552421569824

Token 611: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4442932903766632
    2. '   ' → logprob: -2.069293260574341
    3. ' for' → logprob: -2.444293260574341
    4. ',' → logprob: -3.069293260574341
    5. ')' → logprob: -3.944293260574341
    6. '```' → logprob: -3.944293260574341
    7. ' ' → logprob: -4.69429349899292
    8. 'from' → logprob: -4.94429349899292
    9. 'h' → logprob: -5.19429349899292
    10. '#' → logprob: -5.31929349899292

Token 612: ' climb' (ID: 27049)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.8161417245864868
    2. 'fly' → logprob: -2.0661416053771973
    3. 'desc' → logprob: -2.3161416053771973
    4. 'cl' → logprob: -2.8161416053771973
    5. 'abs' → logprob: -3.0661416053771973
    6. 'for' → logprob: -3.4411416053771973
    7. '
' → logprob: -3.4411416053771973
    8. '#' → logprob: -3.8161416053771973
    9. 'total' → logprob: -3.8161416053771973
    10. ' cost' → logprob: -4.816141605377197

Token 613: ' time' (ID: 1058)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.0140965161845088
    2. 'down' → logprob: -5.014096736907959
    3. '/down' → logprob: -5.889096736907959
    4. '/_' → logprob: -6.514096736907959
    5. '/d' → logprob: -6.639096736907959
    6. '_down' → logprob: -7.389096736907959
    7. '/v' → logprob: -7.389096736907959
    8. '/up' → logprob: -9.1390962600708
    9. 'up' → logprob: -9.8890962600708
    10. '```' → logprob: -10.1390962600708

Token 614: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -1.0134297609329224
    2. '=' → logprob: -1.6384297609329224
    3. '[v' → logprob: -2.138429641723633
    4. ' on' → logprob: -2.388429641723633
    5. '(v' → logprob: -2.513429641723633
    6. ' =' → logprob: -2.888429641723633
    7. 'v' → logprob: -3.638429641723633
    8. '+' → logprob: -4.138429641723633
    9. '(H' → logprob: -4.388429641723633
    10. 'abs' → logprob: -4.888429641723633

Token 615: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.2957092225551605
    2. 'H' → logprob: -1.545709252357483
    3. 'abs' → logprob: -3.6707091331481934
    4. ' v' → logprob: -4.795709133148193
    5. ' H' → logprob: -4.795709133148193
    6. ' abs' → logprob: -7.420709133148193
    7. '+' → logprob: -9.545709609985352
    8. '(v' → logprob: -9.670709609985352
    9. 'V' → logprob: -10.795709609985352
    10. ' ' → logprob: -10.920709609985352

Token 616: ' side' (ID: 4307)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.02926332876086235
    2. '[u' → logprob: -3.6542632579803467
    3. 'v' → logprob: -6.779263496398926
    4. '[' → logprob: -7.779263496398926
    5. '_v' → logprob: -7.779263496398926
    6. '+' → logprob: -8.154263496398926
    7. '```' → logprob: -8.529263496398926
    8. ')' → logprob: -8.654263496398926
    9. '_u' → logprob: -9.904263496398926
    10. '   ' → logprob: -9.904263496398926

Token 617: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.035063374787569046
    2. ' +' → logprob: -3.9100632667541504
    3. '+' → logprob: -4.41006326675415
    4. ' :' → logprob: -6.53506326675415
    5. '+:' → logprob: -8.285063743591309
    6. ')' → logprob: -9.160063743591309
    7. 'abs' → logprob: -9.410063743591309
    8. ' =' → logprob: -9.660063743591309
    9. '   ' → logprob: -9.785063743591309
    10. '):' → logprob: -9.910063743591309

Token 618: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.3555006980895996
    2. 'abs' → logprob: -1.2305006980895996
    3. '(H' → logprob: -5.1055006980896
    4. ' abs' → logprob: -7.6055006980896
    5. ' H' → logprob: -8.105501174926758
    6. '(abs' → logprob: -8.855501174926758
    7. 'max' → logprob: -11.605501174926758
    8. '   ' → logprob: -12.730501174926758
    9. ' (' → logprob: -12.855501174926758
    10. '```' → logprob: -13.105501174926758

Token 619: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -7.584239938296378e-06
    2. '[u' → logprob: -12.000007629394531
    3. 'v' → logprob: -13.750007629394531
    4. '[V' → logprob: -16.00000762939453
    5. '```' → logprob: -16.12500762939453
    6. '[' → logprob: -16.87500762939453
    7. '(v' → logprob: -18.37500762939453
    8. '<v' → logprob: -20.00000762939453
    9. '``' → logprob: -20.12500762939453
    10. '[i' → logprob: -20.12500762939453

Token 620: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12993262708187103
    2. '])' → logprob: -2.8799326419830322
    3. ']' → logprob: -3.2549326419830322
    4. '-' → logprob: -4.004932403564453
    5. ' -' → logprob: -5.754932403564453
    6. '[v' → logprob: -6.629932403564453
    7. ')-' → logprob: -6.629932403564453
    8. ']-' → logprob: -7.004932403564453
    9. ')]' → logprob: -7.004932403564453
    10. '[' → logprob: -8.379932403564453

Token 621: ' -' (ID: 533)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7612323760986328
    2. 'dist' → logprob: -1.3862323760986328
    3. 'from' → logprob: -2.011232376098633
    4. 'import' → logprob: -3.011232376098633
    5. '
' → logprob: -3.511232376098633
    6. '   ' → logprob: -4.011232376098633
    7. ' for' → logprob: -4.136232376098633
    8. 'dp' → logprob: -4.761232376098633
    9. ')
' → logprob: -5.136232376098633
    10. 'distance' → logprob: -5.386232376098633

Token 622: ' (' (ID: 350)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0003491705865599215
    2. ' (' → logprob: -8.500349044799805
    3. '(H' → logprob: -9.000349044799805
    4. '(' → logprob: -10.875349044799805
    5. '((' → logprob: -12.750349044799805
    6. '(arr' → logprob: -16.250349044799805
    7. '(abs' → logprob: -16.375349044799805
    8. '(v' → logprob: -16.500349044799805
    9. '(max' → logprob: -16.500349044799805
    10. '(t' → logprob: -17.125349044799805

Token 623: 'h' (ID: 71)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0065678260289132595
    2. ' (' → logprob: -5.25656795501709
    3. 'h' → logprob: -6.88156795501709
    4. '(' → logprob: -8.13156795501709
    5. '(
' → logprob: -12.88156795501709
    6. ' h' → logprob: -13.13156795501709
    7. '(H' → logprob: -13.13156795501709
    8. '   ' → logprob: -13.50656795501709
    9. '
' → logprob: -13.88156795501709
    10. '[h' → logprob: -14.00656795501709

Token 624: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -0.0002913678181357682
    2. '[u' → logprob: -8.50029182434082
    3. '_v' → logprob: -10.12529182434082
    4. 'u' → logprob: -10.75029182434082
    5. '[v' → logprob: -10.87529182434082
    6. 'v' → logprob: -11.87529182434082
    7. '(u' → logprob: -16.25029182434082
    8. '<u' → logprob: -16.62529182434082
    9. '_i' → logprob: -16.87529182434082
    10. ''u' → logprob: -16.87529182434082

Token 625: ' -' (ID: 533)
  Prédit: '+t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+t' → logprob: -0.9131758213043213
    2. ' +' → logprob: -1.4131758213043213
    3. '+' → logprob: -1.7881758213043213
    4. '-t' → logprob: -2.2881758213043213
    5. ' -' → logprob: -3.6631758213043213
    6. '-' → logprob: -3.7881758213043213
    7. ')' → logprob: -4.413175582885742
    8. '_t' → logprob: -5.163175582885742
    9. '_u' → logprob: -5.538175582885742
    10. '_' → logprob: -5.538175582885742

Token 626: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0009319446398876607
    2. ' t' → logprob: -7.000931739807129
    3. '`t' → logprob: -10.875931739807129
    4. ')t' → logprob: -14.500931739807129
    5. '	t' → logprob: -14.625931739807129
    6. '_t' → logprob: -15.000931739807129
    7. '   ' → logprob: -15.875931739807129
    8. '```' → logprob: -16.250932693481445
    9. ' ' → logprob: -17.375932693481445
    10. ''t' → logprob: -18.125932693481445

Token 627: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00033677343162707984
    2. ')`' → logprob: -8.625336647033691
    3. ')
' → logprob: -9.500336647033691
    4. '))' → logprob: -10.125336647033691
    5. ' )' → logprob: -11.375336647033691
    6. '`)' → logprob: -11.500336647033691
    7. ')
' → logprob: -12.125336647033691
    8. ')**' → logprob: -12.250336647033691
    9. ')`
' → logprob: -12.750336647033691
    10. '])' → logprob: -13.750336647033691

Token 628: ' =' (ID: 314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.044548336416482925
    2. 'if' → logprob: -4.794548511505127
    3. ' for' → logprob: -4.794548511505127
    4. '
' → logprob: -4.919548511505127
    5. 'def' → logprob: -5.294548511505127
    6. 'from' → logprob: -5.544548511505127
    7. '#' → logprob: -5.669548511505127
    8. ')
' → logprob: -6.669548511505127
    9. '   ' → logprob: -6.794548511505127
    10. 'import' → logprob: -7.294548511505127

Token 629: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.00036406738217920065
    2. ' H' → logprob: -8.125364303588867
    3. '(H' → logprob: -9.625364303588867
    4. 'abs' → logprob: -14.000364303588867
    5. ' (' → logprob: -14.625364303588867
    6. '(' → logprob: -14.875364303588867
    7. ' ' → logprob: -16.000364303588867
    8. '   ' → logprob: -16.500364303588867
    9. '	H' → logprob: -17.750364303588867
    10. '```' → logprob: -17.875364303588867

Token 630: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -4.334533878136426e-05
    2. 'v' → logprob: -10.250042915344238
    3. '[u' → logprob: -11.750042915344238
    4. '[' → logprob: -17.500043869018555
    5. '```' → logprob: -18.125043869018555
    6. '	v' → logprob: -19.125043869018555
    7. '[
' → logprob: -19.500043869018555
    8. '(v' → logprob: -19.750043869018555
    9. '<v' → logprob: -20.125043869018555
    10. '
' → logprob: -20.500043869018555

Token 631: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38341763615608215
    2. ' -' → logprob: -1.3834176063537598
    3. '-' → logprob: -3.7584176063537598
    4. '+' → logprob: -4.13341760635376
    5. ' +' → logprob: -4.75841760635376
    6. ' )' → logprob: -5.38341760635376
    7. '[' → logprob: -5.38341760635376
    8. ']' → logprob: -5.38341760635376
    9. ')-' → logprob: -6.50841760635376
    10. '[u' → logprob: -6.50841760635376

Token 632: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.049802351742982864
    2. '-' → logprob: -3.174802303314209
    3. ')' → logprob: -5.174802303314209
    4. '+' → logprob: -8.424802780151367
    5. ' -
' → logprob: -8.424802780151367
    6. ' +' → logprob: -8.549802780151367
    7. ' ' → logprob: -8.799802780151367
    8. '-
' → logprob: -9.924802780151367
    9. '),' → logprob: -10.549802780151367
    10. '[' → logprob: -10.674802780151367

Token 633: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.12727360427379608
    2. '(h' → logprob: -2.1272735595703125
    3. '(' → logprob: -8.627273559570312
    4. ' h' → logprob: -9.002273559570312
    5. ' (' → logprob: -10.252273559570312
    6. '```' → logprob: -13.252273559570312
    7. '_h' → logprob: -13.877273559570312
    8. '(H' → logprob: -14.127273559570312
    9. 'H' → logprob: -14.252273559570312
    10. '`' → logprob: -14.627273559570312

Token 634: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -0.0005038236267864704
    2. '[u' → logprob: -7.625504016876221
    3. '[_' → logprob: -11.875503540039062
    4. '_v' → logprob: -12.625503540039062
    5. '[v' → logprob: -13.000503540039062
    6. 'u' → logprob: -13.625503540039062
    7. '[' → logprob: -15.125503540039062
    8. ' _' → logprob: -15.250503540039062
    9. '\[' → logprob: -15.375503540039062
    10. '[t' → logprob: -15.625503540039062

Token 635: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.361331582069397
    2. 'for' → logprob: -1.486331582069397
    3. ')' → logprob: -2.1113314628601074
    4. ')
' → logprob: -2.3613314628601074
    5. ' for' → logprob: -2.6113314628601074
    6. ' +' → logprob: -3.1113314628601074
    7. '   ' → logprob: -3.1113314628601074
    8. '+' → logprob: -4.111331462860107
    9. ',' → logprob: -4.111331462860107
    10. '+
' → logprob: -4.736331462860107

Token 636: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0004307884373702109
    2. ' t' → logprob: -7.750430583953857
    3. '	t' → logprob: -17.000431060791016
    4. '`t' → logprob: -17.250431060791016
    5. '_t' → logprob: -19.250431060791016
    6. '   ' → logprob: -20.250431060791016
    7. ' ' → logprob: -21.125431060791016
    8. '(t' → logprob: -21.500431060791016
    9. '```' → logprob: -21.750431060791016
    10. ')t' → logprob: -22.000431060791016

Token 637: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04056738317012787
    2. ' for' → logprob: -3.540567398071289
    3. ')' → logprob: -6.040567398071289
    4. 'while' → logprob: -6.665567398071289
    5. 'if' → logprob: -7.165567398071289
    6. '   ' → logprob: -7.415567398071289
    7. 'import' → logprob: -7.415567398071289
    8. '#' → logprob: -7.415567398071289
    9. 'from' → logprob: -7.790567398071289
    10. '
' → logprob: -7.790567398071289

Token 638: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.049634598195552826
    2. ' for' → logprob: -3.1746346950531006
    3. '   ' → logprob: -5.7996344566345215
    4. ')' → logprob: -7.5496344566345215
    5. ' =' → logprob: -7.9246344566345215
    6. ')
' → logprob: -7.9246344566345215
    7. '```' → logprob: -8.04963493347168
    8. 'while' → logprob: -8.54963493347168
    9. 'import' → logprob: -8.67463493347168
    10. '
' → logprob: -8.67463493347168

Token 639: ' total' (ID: 3609)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2951437532901764
    2. ' for' → logprob: -1.420143723487854
    3. '   ' → logprob: -5.4201436042785645
    4. 'if' → logprob: -6.6701436042785645
    5. ' =' → logprob: -6.6701436042785645
    6. ' if' → logprob: -6.7951436042785645
    7. 'possible' → logprob: -6.7951436042785645
    8. ' next' → logprob: -7.0451436042785645
    9. ' possible' → logprob: -7.5451436042785645
    10. 'next' → logprob: -7.6701436042785645

Token 640: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03267700597643852
    2. '=' → logprob: -3.657676935195923
    3. '_u' → logprob: -6.532677173614502
    4. 'cost' → logprob: -7.157677173614502
    5. '_time' → logprob: -7.282677173614502
    6. ' +=' → logprob: -7.657677173614502
    7. ')' → logprob: -7.782677173614502
    8. ' +' → logprob: -7.907677173614502
    9. '   ' → logprob: -8.282676696777344
    10. '_cost' → logprob: -8.532676696777344

Token 641: ' abs' (ID: 8443)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.449338436126709
    2. 'abs' → logprob: -1.074338436126709
    3. ' dist' → logprob: -4.324338436126709
    4. ' abs' → logprob: -4.949338436126709
    5. '   ' → logprob: -10.324338912963867
    6. '(abs' → logprob: -10.699338912963867
    7. '(dist' → logprob: -11.324338912963867
    8. 'graph' → logprob: -12.574338912963867
    9. 't' → logprob: -12.824338912963867
    10. 'cost' → logprob: -12.824338912963867

Token 642: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -4.5491004129871726e-05
    2. '(' → logprob: -10.000045776367188
    3. '(
' → logprob: -17.250045776367188
    4. '\(' → logprob: -18.375045776367188
    5. ' (' → logprob: -18.750045776367188
    6. '(abs' → logprob: -19.000045776367188
    7. '((' → logprob: -20.250045776367188
    8. 'H' → logprob: -20.750045776367188
    9. '(
' → logprob: -21.625045776367188
    10. '(

' → logprob: -21.625045776367188

Token 643: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -4.56102097814437e-05
    2. '[' → logprob: -10.000045776367188
    3. '[v' → logprob: -15.875045776367188
    4. 'u' → logprob: -16.625045776367188
    5. '[
' → logprob: -17.750045776367188
    6. '(u' → logprob: -18.000045776367188
    7. '```' → logprob: -18.250045776367188
    8. '[user' → logprob: -18.750045776367188
    9. '\[' → logprob: -18.875045776367188
    10. ' [' → logprob: -19.250045776367188

Token 644: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.13703255355358124
    2. ' -' → logprob: -2.1370325088500977
    3. '-H' → logprob: -4.762032508850098
    4. ')' → logprob: -6.637032508850098
    5. ')-' → logprob: -9.012032508850098
    6. '-)' → logprob: -10.387032508850098
    7. '-u' → logprob: -10.762032508850098
    8. '-h' → logprob: -11.887032508850098
    9. '[' → logprob: -13.137032508850098
    10. '-W' → logprob: -13.762032508850098

Token 645: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5976107716560364
    2. ' -' → logprob: -0.8476107716560364
    3. '-H' → logprob: -3.8476107120513916
    4. ')' → logprob: -9.722610473632812
    5. '[' → logprob: -10.597610473632812
    6. '(H' → logprob: -12.222610473632812
    7. ',' → logprob: -12.222610473632812
    8. ' ' → logprob: -12.972610473632812
    9. '[-' → logprob: -13.472610473632812
    10. '-)' → logprob: -13.597610473632812

Token 646: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0003815756645053625
    2. ' h' → logprob: -7.8753814697265625
    3. '```' → logprob: -14.250381469726562
    4. '(h' → logprob: -15.000381469726562
    5. ')' → logprob: -15.875381469726562
    6. '	h' → logprob: -16.500381469726562
    7. '`' → logprob: -16.500381469726562
    8. ''h' → logprob: -16.875381469726562
    9. '+h' → logprob: -17.250381469726562
    10. ' ' → logprob: -17.750381469726562

Token 647: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -1.9361264946837764e-07
    2. '[u' → logprob: -15.625
    3. 'u' → logprob: -17.0
    4. '```' → logprob: -19.0
    5. '_' → logprob: -19.625
    6. '_o' → logprob: -20.0
    7. '<u' → logprob: -20.25
    8. ' _' → logprob: -20.75
    9. '_
' → logprob: -21.0
    10. '[_' → logprob: -21.125

Token 648: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002554615493863821
    2. ')+' → logprob: -6.002554416656494
    3. ' )' → logprob: -10.377554893493652
    4. '+' → logprob: -10.627554893493652
    5. ')
' → logprob: -11.502554893493652
    6. ' +' → logprob: -11.752554893493652
    7. '+)' → logprob: -13.002554893493652
    8. '))' → logprob: -14.752554893493652
    9. '),' → logprob: -14.877554893493652
    10. '）' → logprob: -15.127554893493652

Token 649: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.05504115670919418
    2. '+' → logprob: -3.0550410747528076
    3. ')' → logprob: -5.180041313171387
    4. ',' → logprob: -8.930041313171387
    5. ' -' → logprob: -9.055041313171387
    6. ')+' → logprob: -9.430041313171387
    7. ' +
' → logprob: -9.555041313171387
    8. ' if' → logprob: -10.055041313171387
    9. '+
' → logprob: -10.055041313171387
    10. ' ' → logprob: -10.305041313171387

Token 650: ' t' (ID: 260)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.6947661638259888
    2. '(H' → logprob: -1.3197661638259888
    3. 'H' → logprob: -2.319766044616699
    4. 'h' → logprob: -2.819766044616699
    5. '(h' → logprob: -2.944766044616699
    6. ' abs' → logprob: -4.444766044616699
    7. '(abs' → logprob: -4.944766044616699
    8. ' (' → logprob: -5.944766044616699
    9. ' H' → logprob: -7.819766044616699
    10. '(' → logprob: -8.0697660446167

Token 651: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.4647715091705322
    2. ' +' → logprob: -1.4647715091705322
    3. 'for' → logprob: -1.5897715091705322
    4. '+' → logprob: -1.7147715091705322
    5. ' for' → logprob: -2.5897715091705322
    6. '+
' → logprob: -3.0897715091705322
    7. '   ' → logprob: -4.714771270751953
    8. '\n' → logprob: -5.964771270751953
    9. '
' → logprob: -5.964771270751953
    10. ')' → logprob: -5.964771270751953

Token 652: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.38779765367507935
    2. '(H' → logprob: -1.1377975940704346
    3. ' H' → logprob: -7.262797832489014
    4. ' (' → logprob: -8.762797355651855
    5. '(' → logprob: -9.762797355651855
    6. 'abs' → logprob: -11.887797355651855
    7. 'max' → logprob: -14.137797355651855
    8. ' ' → logprob: -14.137797355651855
    9. '	H' → logprob: -14.512797355651855
    10. '(abs' → logprob: -14.637797355651855

Token 653: '[v' (ID: 36561)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.11337132751941681
    2. '[v' → logprob: -2.2383713722229004
    3. '[' → logprob: -8.988370895385742
    4. 'v' → logprob: -8.988370895385742
    5. '```' → logprob: -8.988370895385742
    6. 'u' → logprob: -9.113370895385742
    7. '_u' → logprob: -11.488370895385742
    8. ')' → logprob: -11.738370895385742
    9. '   ' → logprob: -11.988370895385742
    10. '\[' → logprob: -12.363370895385742

Token 654: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.035944677889347076
    2. '-' → logprob: -3.785944700241089
    3. ')' → logprob: -4.41094446182251
    4. ']' → logprob: -7.91094446182251
    5. ' ' → logprob: -10.660944938659668
    6. '[' → logprob: -10.910944938659668
    7. '[u' → logprob: -11.035944938659668
    8. '   ' → logprob: -11.160944938659668
    9. ' )' → logprob: -11.910944938659668
    10. ')-' → logprob: -12.535944938659668

Token 655: ' -' (ID: 533)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8975276350975037
    2. ')' → logprob: -1.1475276947021484
    3. '
' → logprob: -2.0225276947021484
    4. ' for' → logprob: -2.8975276947021484
    5. ',' → logprob: -4.897527694702148
    6. ' 
' → logprob: -5.022527694702148
    7. ' ' → logprob: -5.022527694702148
    8. ')
' → logprob: -5.147527694702148
    9. '   ' → logprob: -5.272527694702148
    10. '+' → logprob: -5.272527694702148

Token 656: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.011135423555970192
    2. '_h' → logprob: -4.511135578155518
    3. '_u' → logprob: -9.76113510131836
    4. ' h' → logprob: -11.13613510131836
    5. 'u' → logprob: -11.13613510131836
    6. '```' → logprob: -15.26113510131836
    7. '	h' → logprob: -15.38613510131836
    8. '_' → logprob: -16.76113510131836
    9. '(h' → logprob: -16.88613510131836
    10. ''h' → logprob: -17.51113510131836

Token 657: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -0.0067355032078921795
    2. '[u' → logprob: -5.131735324859619
    3. 'u' → logprob: -7.131735324859619
    4. '[' → logprob: -13.631735801696777
    5. '<u' → logprob: -13.631735801696777
    6. '```' → logprob: -13.631735801696777
    7. '_i' → logprob: -14.381735801696777
    8. ''u' → logprob: -14.381735801696777
    9. '\[' → logprob: -14.506735801696777
    10. '_' → logprob: -14.881735801696777

Token 658: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3389655351638794
    2. 'for' → logprob: -1.3389655351638794
    3. '+
' → logprob: -1.5889655351638794
    4. '+' → logprob: -2.33896541595459
    5. ' +' → logprob: -2.83896541595459
    6. ' for' → logprob: -4.33896541595459
    7. '```' → logprob: -4.46396541595459
    8. ')' → logprob: -4.71396541595459
    9. '
' → logprob: -4.96396541595459
    10. ' +
' → logprob: -4.96396541595459

Token 659: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.2225741147994995
    2. 'abs' → logprob: -1.2225741147994995
    3. 'u' → logprob: -1.5975741147994995
    4. 'h' → logprob: -2.222574234008789
    5. 'H' → logprob: -2.472574234008789
    6. ' abs' → logprob: -4.597574234008789
    7. ' t' → logprob: -6.472574234008789
    8. '(u' → logprob: -6.722574234008789
    9. '(abs' → logprob: -6.722574234008789
    10. ' u' → logprob: -8.097574234008789

Token 660: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1914403736591339
    2. '+' → logprob: -2.9414403438568115
    3. ' for' → logprob: -3.1914403438568115
    4. '+
' → logprob: -3.4414403438568115
    5. 'from' → logprob: -5.191440582275391
    6. ' +' → logprob: -5.316440582275391
    7. '```' → logprob: -5.316440582275391
    8. '#' → logprob: -5.316440582275391
    9. '
' → logprob: -5.691440582275391
    10. '=' → logprob: -5.941440582275391

Token 661: '#' (ID: 2)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.4607819318771362
    2. '\n' → logprob: -1.5857819318771362
    3. '
' → logprob: -2.210782051086426
    4. '+
' → logprob: -2.335782051086426
    5. ' +' → logprob: -2.835782051086426
    6. 'for' → logprob: -3.210782051086426
    7. '=' → logprob: -3.460782051086426
    8. '\' → logprob: -3.710782051086426
    9. ')' → logprob: -3.710782051086426
    10. ' ' → logprob: -3.835782051086426

Token 662: '      ' (ID: 1699)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03913135081529617
    2. '+
' → logprob: -4.039131164550781
    3. ' for' → logprob: -4.289131164550781
    4. '+' → logprob: -6.039131164550781
    5. '```' → logprob: -7.289131164550781
    6. 'from' → logprob: -7.539131164550781
    7. '   ' → logprob: -7.664131164550781
    8. ' +' → logprob: -7.789131164550781
    9. 'import' → logprob: -8.414131164550781
    10. '#' → logprob: -8.414131164550781

Token 663: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7449933886528015
    2. '=' (adapté à ' =') → logprob: -1.1199934482574463
    3. ' +' → logprob: -2.7449934482574463
    4. ')' → logprob: -2.9949934482574463
    5. ' =' → logprob: -3.1199934482574463
    6. '+
' → logprob: -4.119993209838867
    7. 'for' → logprob: -5.119993209838867
    8. '#' → logprob: -5.619993209838867
    9. '*' → logprob: -5.994993209838867
    10. '-' → logprob: -6.744993209838867

Token 664: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.01810370199382305
    2. 'H' → logprob: -4.51810359954834
    3. ' abs' → logprob: -5.64310359954834
    4. '2' → logprob: -5.76810359954834
    5. '(abs' → logprob: -8.26810359954834
    6. '(H' → logprob: -9.64310359954834
    7. ' ' → logprob: -11.14310359954834
    8. ' H' → logprob: -11.26810359954834
    9. 't' → logprob: -12.51810359954834
    10. '(' → logprob: -12.51810359954834

Token 665: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -1.6240566083070007e-06
    2. '(' → logprob: -13.750001907348633
    3. 'H' → logprob: -14.875001907348633
    4. '\(' → logprob: -16.250001907348633
    5. '((' → logprob: -17.250001907348633
    6. ' (' → logprob: -17.625001907348633
    7. '(
' → logprob: -18.500001907348633
    8. '\' → logprob: -19.000001907348633
    9. '(h' → logprob: -20.500001907348633
    10. '(abs' → logprob: -21.375001907348633

Token 666: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -7.338466093642637e-05
    2. '(u' → logprob: -10.000073432922363
    3. '[' → logprob: -10.750073432922363
    4. '[v' → logprob: -12.125073432922363
    5. 'u' → logprob: -14.625073432922363
    6. '\[' → logprob: -14.750073432922363
    7. '```' → logprob: -16.875072479248047
    8. '([' → logprob: -17.000072479248047
    9. ' [' → logprob: -17.625072479248047
    10. '[[' → logprob: -17.875072479248047

Token 667: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.020625857636332512
    2. '[u' → logprob: -4.270626068115234
    3. '-' → logprob: -5.145626068115234
    4. '[' → logprob: -7.770626068115234
    5. ')' → logprob: -9.145626068115234
    6. '-u' → logprob: -10.145626068115234
    7. ' ' → logprob: -10.770626068115234
    8. ']' → logprob: -11.395626068115234
    9. ' ' → logprob: -13.645626068115234
    10. 'u' → logprob: -13.645626068115234

Token 668: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12775641679763794
    2. '-' → logprob: -2.127756357192993
    3. '-H' → logprob: -7.127756595611572
    4. ')' → logprob: -11.252756118774414
    5. '-u' → logprob: -12.502756118774414
    6. ' ' → logprob: -13.002756118774414
    7. '-h' → logprob: -13.377756118774414
    8. ' ' → logprob: -14.002756118774414
    9. '[' → logprob: -14.002756118774414
    10. ',' → logprob: -14.877756118774414

Token 669: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0009320637909695506
    2. ' h' → logprob: -7.000932216644287
    3. '_h' → logprob: -11.125931739807129
    4. '```' → logprob: -13.125931739807129
    5. 'H' → logprob: -14.375931739807129
    6. ' ' → logprob: -14.625931739807129
    7. '`' → logprob: -14.750931739807129
    8. ''h' → logprob: -15.000931739807129
    9. '"h' → logprob: -15.000931739807129
    10. '	h' → logprob: -15.125931739807129

Token 670: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -0.020611843094229698
    2. '[u' → logprob: -3.8956117630004883
    3. '[_' → logprob: -9.895611763000488
    4. '\[' → logprob: -11.770611763000488
    5. 'u' → logprob: -12.145611763000488
    6. '```' → logprob: -13.395611763000488
    7. '[' → logprob: -13.895611763000488
    8. '[v' → logprob: -14.270611763000488
    9. '\' → logprob: -14.520611763000488
    10. '_v' → logprob: -14.645611763000488

Token 671: ')' (ID: 8)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.8818469643592834
    2. ')' → logprob: -1.1318469047546387
    3. ' +' → logprob: -1.6318469047546387
    4. '-' → logprob: -3.1318469047546387
    5. '+' → logprob: -3.8818469047546387
    6. ')+' → logprob: -5.756846904754639
    7. ' )' → logprob: -8.756847381591797
    8. 'if' → logprob: -9.506847381591797
    9. '```' → logprob: -9.881847381591797
    10. '>' → logprob: -10.381847381591797

Token 672: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.03708794340491295
    2. '+' → logprob: -3.537087917327881
    3. ')' → logprob: -5.662087917327881
    4. ' -' → logprob: -5.787087917327881
    5. '-' → logprob: -8.162088394165039
    6. '```' → logprob: -8.787088394165039
    7. ')+' → logprob: -9.162088394165039
    8. ' ' → logprob: -9.787088394165039
    9. 'if' → logprob: -10.537088394165039
    10. ' +
' → logprob: -10.662088394165039

Token 673: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.053011275827884674
    2. '2' → logprob: -3.303011178970337
    3. '(H' → logprob: -4.428011417388916
    4. '(' → logprob: -6.803011417388916
    5. '(t' → logprob: -7.053011417388916
    6. 't' → logprob: -7.178011417388916
    7. ' H' → logprob: -9.428010940551758
    8. 'abs' → logprob: -10.178010940551758
    9. ' (' → logprob: -11.053010940551758
    10. '(T' → logprob: -11.303010940551758

Token 674: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.020567815750837326
    2. '[u' → logprob: -3.8955678939819336
    3. 'v' → logprob: -10.895567893981934
    4. '[' → logprob: -12.770567893981934
    5. '```' → logprob: -13.270567893981934
    6. 'u' → logprob: -14.645567893981934
    7. '[V' → logprob: -14.895567893981934
    8. '(v' → logprob: -15.145567893981934
    9. '	v' → logprob: -15.645567893981934
    10. '\[' → logprob: -15.770567893981934

Token 675: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.008853166364133358
    2. '-' → logprob: -4.758852958679199
    3. ')' → logprob: -9.1338529586792
    4. '[' → logprob: -10.1338529586792
    5. '[u' → logprob: -10.1338529586792
    6. ']' → logprob: -10.8838529586792
    7. ' ' → logprob: -11.7588529586792
    8. '[v' → logprob: -12.1338529586792
    9. ' ' → logprob: -12.7588529586792
    10. ' +' → logprob: -12.8838529586792

Token 676: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1744098961353302
    2. ' +' → logprob: -2.174409866333008
    3. '-' → logprob: -4.549409866333008
    4. '+' → logprob: -4.674409866333008
    5. '[' → logprob: -4.799409866333008
    6. ')' → logprob: -4.799409866333008
    7. '_' → logprob: -6.174409866333008
    8. ' ' → logprob: -6.299409866333008
    9. ',' → logprob: -6.549409866333008
    10. '*' → logprob: -7.049409866333008

Token 677: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.000317231344524771
    2. '_h' → logprob: -8.375317573547363
    3. ' h' → logprob: -9.375317573547363
    4. 'u' → logprob: -14.125317573547363
    5. '```' → logprob: -14.750317573547363
    6. 'H' → logprob: -15.375317573547363
    7. ' ' → logprob: -15.875317573547363
    8. '_u' → logprob: -16.125316619873047
    9. '	h' → logprob: -16.250316619873047
    10. '<h' → logprob: -17.375316619873047

Token 678: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -1.1160349458805285e-05
    2. '[u' → logprob: -11.500011444091797
    3. 'u' → logprob: -14.125011444091797
    4. '_v' → logprob: -16.625011444091797
    5. '<u' → logprob: -17.000011444091797
    6. '```' → logprob: -17.625011444091797
    7. '_i' → logprob: -18.375011444091797
    8. '_' → logprob: -18.750011444091797
    9. '_w' → logprob: -18.750011444091797
    10. '(u' → logprob: -18.750011444091797

Token 679: ' +' (ID: 659)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19828714430332184
    2. '+' → logprob: -2.94828724861145
    3. '+
' → logprob: -3.07328724861145
    4. ' +' → logprob: -3.57328724861145
    5. ' for' → logprob: -3.82328724861145
    6. '```' → logprob: -5.198287010192871
    7. 'import' → logprob: -5.323287010192871
    8. 'heap' → logprob: -5.573287010192871
    9. '   ' → logprob: -5.948287010192871
    10. 'while' → logprob: -5.948287010192871

Token 680: ' ' (ID: 220)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.11668173223733902
    2. '2' → logprob: -2.2416818141937256
    3. ' t' → logprob: -5.6166815757751465
    4. ' ' → logprob: -8.616682052612305
    5. '`t' → logprob: -11.866682052612305
    6. '(t' → logprob: -12.366682052612305
    7. '(' → logprob: -12.366682052612305
    8. '   ' → logprob: -12.491682052612305
    9. '```' → logprob: -12.616682052612305
    10. '+t' → logprob: -12.991682052612305

Token 681: '2' (ID: 17)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.023456968367099762
    2. '2' → logprob: -3.7734570503234863
    3. ' t' → logprob: -8.523456573486328
    4. ' ' → logprob: -12.148456573486328
    5. '(' → logprob: -13.148456573486328
    6. '(t' → logprob: -13.773456573486328
    7. '   ' → logprob: -13.773456573486328
    8. 'T' → logprob: -14.398456573486328
    9. '
' → logprob: -14.773456573486328
    10. 'tt' → logprob: -15.023456573486328

Token 682: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.10829531401395798
    2. ' t' → logprob: -2.358295202255249
    3. '+' → logprob: -6.733295440673828
    4. '0' → logprob: -6.733295440673828
    5. ')' → logprob: -7.108295440673828
    6. ' ' → logprob: -7.233295440673828
    7. '*' → logprob: -7.358295440673828
    8. '*t' → logprob: -7.733295440673828
    9. '1' → logprob: -7.983295440673828
    10. '=' → logprob: -8.108295440673828

Token 683: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1053279638290405
    2. 'for' → logprob: -1.3553279638290405
    3. ',' → logprob: -2.35532808303833
    4. 'import' → logprob: -2.48032808303833
    5. 'heap' → logprob: -2.73032808303833
    6. 'while' → logprob: -3.73032808303833
    7. ' =' → logprob: -4.10532808303833
    8. '+' → logprob: -4.73032808303833
    9. ' +' → logprob: -4.73032808303833
    10. ' for' → logprob: -4.73032808303833

Token 684: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004706849809736013
    2. 'heap' → logprob: -6.129706859588623
    3. 'dist' → logprob: -6.754706859588623
    4. 'import' → logprob: -7.504706859588623
    5. ' for' → logprob: -8.629706382751465
    6. 'while' → logprob: -9.504706382751465
    7. 'h' → logprob: -9.629706382751465
    8. 'from' → logprob: -9.629706382751465
    9. 'pq' → logprob: -9.629706382751465
    10. '```' → logprob: -9.629706382751465

Token 685: ' We' (ID: 1416)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3043130934238434
    2. 'h' → logprob: -1.429313063621521
    3. 'while' → logprob: -5.0543131828308105
    4. ' for' → logprob: -5.1793131828308105
    5. 'heap' → logprob: -5.4293131828308105
    6. ',' → logprob: -6.4293131828308105
    7. ')' → logprob: -6.6793131828308105
    8. 'd' → logprob: -7.9293131828308105
    9. '```' → logprob: -7.9293131828308105
    10. 'def' → logprob: -8.179312705993652

Token 686: ' want' (ID: 1682)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26594966650009155
    2. '=' → logprob: -2.1409497261047363
    3. '_' → logprob: -2.6409497261047363
    4. '[' → logprob: -3.5159497261047363
    5. ' ' → logprob: -5.515949726104736
    6. ' can' → logprob: -6.765949726104736
    7. 'u' → logprob: -6.890949726104736
    8. ',' → logprob: -6.890949726104736
    9. ']' → logprob: -6.890949726104736
    10. ')' → logprob: -7.015949726104736

Token 687: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.30570313334465027
    2. 'min' → logprob: -2.3057031631469727
    3. ' min' → logprob: -2.3057031631469727
    4. 'to' → logprob: -4.055703163146973
    5. '[' → logprob: -4.805703163146973
    6. ' ' → logprob: -4.805703163146973
    7. ' max' → logprob: -5.430703163146973
    8. '[min' → logprob: -5.430703163146973
    9. '   ' → logprob: -5.930703163146973
    10. 'max' → logprob: -6.055703163146973

Token 688: ' minimize' (ID: 41776)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.004072582349181175
    2. 'find' → logprob: -5.754072666168213
    3. 'choose' → logprob: -7.504072666168213
    4. 'try' → logprob: -8.379072189331055
    5. ' minimize' → logprob: -9.504072189331055
    6. '
' → logprob: -11.879072189331055
    7. 'import' → logprob: -12.379072189331055
    8. ' min' → logprob: -12.379072189331055
    9. 'consider' → logprob: -12.379072189331055
    10. 'search' → logprob: -12.504072189331055

Token 689: ' total' (ID: 3609)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.22043024003505707
    2. 'h' → logprob: -2.0954301357269287
    3. 'abs' → logprob: -3.5954301357269287
    4. 'min' → logprob: -3.9704301357269287
    5. '(' → logprob: -4.845430374145508
    6. '(H' → logprob: -4.970430374145508
    7. '(
' → logprob: -5.095430374145508
    8. ' H' → logprob: -6.845430374145508
    9. '(abs' → logprob: -6.970430374145508
    10. ' abs' → logprob: -7.095430374145508

Token 690: ' time' (ID: 1058)
  Prédit: '_u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_u' → logprob: -0.29940828680992126
    2. '_
' → logprob: -2.424408197402954
    3. '_h' → logprob: -2.424408197402954
    4. '_' → logprob: -3.174408197402954
    5. 'u' → logprob: -3.549408197402954
    6. ' _' → logprob: -6.049408435821533
    7. '_H' → logprob: -6.424408435821533
    8. 'H' → logprob: -6.799408435821533
    9. 'h' → logprob: -7.049408435821533
    10. '_

' → logprob: -7.424408435821533

Token 691: ' over' (ID: 1072)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.27331697940826416
    2. 'for' → logprob: -2.3983168601989746
    3. 'u' → logprob: -3.6483168601989746
    4. ',' → logprob: -3.8983168601989746
    5. '_h' → logprob: -4.273316860198975
    6. 'best' → logprob: -4.398316860198975
    7. '#' → logprob: -4.648316860198975
    8. ' for' → logprob: -5.148316860198975
    9. 'import' → logprob: -5.148316860198975
    10. ' h' → logprob: -5.648316860198975

Token 692: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.00041386886732652783
    2. ' h' → logprob: -8.75041389465332
    3. 'range' → logprob: -9.00041389465332
    4. 'int' → logprob: -10.00041389465332
    5. 'all' → logprob: -10.75041389465332
    6. '```' → logprob: -11.12541389465332
    7. 'possible' → logprob: -11.25041389465332
    8. '[h' → logprob: -12.00041389465332
    9. '_h' → logprob: -12.12541389465332
    10. '(' → logprob: -12.62541389465332

Token 693: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -0.0008826419361867011
    2. '_' → logprob: -7.125882625579834
    3. '_i' → logprob: -10.625883102416992
    4. '_v' → logprob: -11.250883102416992
    5. '```' → logprob: -11.750883102416992
    6. ''_' → logprob: -12.500883102416992
    7. ' _' → logprob: -12.500883102416992
    8. '_o' → logprob: -12.625883102416992
    9. '[u' → logprob: -12.625883102416992
    10. 'u' → logprob: -12.750883102416992

Token 694: ' in' (ID: 306)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.9738751649856567
    2. 'for' → logprob: -0.9738751649856567
    3. '\n' → logprob: -3.348875045776367
    4. ' =' → logprob: -3.723875045776367
    5. ' for' → logprob: -3.848875045776367
    6. '```' → logprob: -3.848875045776367
    7. '
' → logprob: -3.848875045776367
    8. 'import' → logprob: -4.348875045776367
    9. 'if' → logprob: -4.598875045776367
    10. ',' → logprob: -4.723875045776367

Token 695: ' feasible' (ID: 58866)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.2413195371627808
    2. '[min' → logprob: -1.3663195371627808
    3. '[' → logprob: -1.4913195371627808
    4. '[max' → logprob: -1.7413195371627808
    5. '[u' → logprob: -3.9913196563720703
    6. '[h' → logprob: -3.9913196563720703
    7. ' range' → logprob: -4.74131965637207
    8. 'max' → logprob: -4.86631965637207
    9. ' [' → logprob: -7.61631965637207
    10. 'min' → logprob: -7.61631965637207

Token 696: ' range' (ID: 3352)
  Prédit: '_u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_u' → logprob: -0.043634798377752304
    2. '_' → logprob: -3.6686348915100098
    3. '_h' → logprob: -4.66863489151001
    4. ' ' → logprob: -5.91863489151001
    5. 'u' → logprob: -6.16863489151001
    6. ' _' → logprob: -7.04363489151001
    7. ' \' → logprob: -8.043634414672852
    8. '_
' → logprob: -8.168634414672852
    9. '[' → logprob: -8.293634414672852
    10. '_\' → logprob: -8.543634414672852

Token 697: '.

' (ID: 364)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6664074063301086
    2. ' for' → logprob: -2.166407346725464
    3. '
' → logprob: -2.791407346725464
    4. 'h' → logprob: -2.791407346725464
    5. '   ' → logprob: -3.041407346725464
    6. ',' → logprob: -3.666407346725464
    7. ' h' → logprob: -4.166407585144043
    8. 'min' → logprob: -4.291407585144043
    9. 'import' → logprob: -4.416407585144043
    10. ')' → logprob: -4.416407585144043

Token 698: '#' (ID: 2)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.33553609251976013
    2. '(' → logprob: -3.335536003112793
    3. 'min' → logprob: -3.835536003112793
    4. '\' → logprob: -4.085536003112793
    5. '(
' → logprob: -4.085536003112793
    6. 'u' → logprob: -4.210536003112793
    7. 'for' → logprob: -4.460536003112793
    8. ')' → logprob: -4.585536003112793
    9. ' h' → logprob: -4.585536003112793
    10. ',' → logprob: -4.710536003112793

Token 699: ' Try' (ID: 14720)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5919421315193176
    2. 'h' → logprob: -2.466942071914673
    3. 'if' → logprob: -2.466942071914673
    4. 'def' → logprob: -2.716942071914673
    5. 'while' → logprob: -2.716942071914673
    6. 'min' → logprob: -3.466942071914673
    7. 'lower' → logprob: -4.091942310333252
    8. 'low' → logprob: -4.341942310333252
    9. '#' → logprob: -4.466942310333252
    10. 'candidate' → logprob: -4.466942310333252

Token 700: ' candidates' (ID: 18116)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.1508184671401978
    2. ' feasible' → logprob: -1.9008184671401978
    3. 'h' → logprob: -2.150818347930908
    4. 'low' → logprob: -3.025818347930908
    5. 'possible' → logprob: -3.150818347930908
    6. '#' → logprob: -3.400818347930908
    7. 'def' → logprob: -3.525818347930908
    8. 'lower' → logprob: -3.525818347930908
    9. '[u' → logprob: -3.650818347930908
    10. '[min' → logprob: -3.775818347930908

Token 701: ' h' (ID: 312)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.171827793121338
    2. '[
' → logprob: -1.671827793121338
    3. '[h' → logprob: -2.046827793121338
    4. 'h' → logprob: -2.546827793121338
    5. ' =' → logprob: -2.671827793121338
    6. '[min' → logprob: -3.296827793121338
    7. 'max' → logprob: -3.671827793121338
    8. ' h' → logprob: -3.671827793121338
    9. 'for' → logprob: -4.046827793121338
    10. ':' → logprob: -4.421827793121338

Token 702: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -0.003056854009628296
    2. '_candidates' → logprob: -6.75305700302124
    3. 's' → logprob: -7.50305700302124
    4. '_' → logprob: -7.75305700302124
    5. '_s' → logprob: -7.87805700302124
    6. ' =' → logprob: -8.503056526184082
    7. '_us' → logprob: -9.378056526184082
    8. '_i' → logprob: -10.128056526184082
    9. '_uv' → logprob: -10.628056526184082
    10. '```' → logprob: -10.878056526184082

Token 703: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09254466742277145
    2. '=' → logprob: -2.4675445556640625
    3. ':' → logprob: -6.2175445556640625
    4. 's' → logprob: -7.8425445556640625
    5. '_' → logprob: -8.717544555664062
    6. '1' → logprob: -8.842544555664062
    7. ',' → logprob: -8.967544555664062
    8. ' in' → logprob: -9.092544555664062
    9. '_candidates' → logprob: -9.217544555664062
    10. '[' → logprob: -9.467544555664062

Token 704: '#' (ID: 2)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.40442216396331787
    2. 'min' → logprob: -2.1544222831726074
    3. 't' → logprob: -3.2794222831726074
    4. 'for' → logprob: -3.5294222831726074
    5. '(' → logprob: -4.029422283172607
    6. '(
' → logprob: -4.154422283172607
    7. 'max' → logprob: -4.654422283172607
    8. 'import' → logprob: -4.654422283172607
    9. '[
' → logprob: -4.654422283172607
    10. '```' → logprob: -4.654422283172607

Token 705: ' -' (ID: 533)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.9149821400642395
    2. 'min' → logprob: -1.2899820804595947
    3. 'h' → logprob: -2.4149820804595947
    4. 'max' → logprob: -2.6649820804595947
    5. 't' → logprob: -3.4149820804595947
    6. '0' → logprob: -3.9149820804595947
    7. ' min' → logprob: -4.289982318878174
    8. '#' → logprob: -4.539982318878174
    9. '   ' → logprob: -4.539982318878174
    10. ' H' → logprob: -4.664982318878174

Token 706: ' h' (ID: 312)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.45622867345809937
    2. 'H' → logprob: -1.5812287330627441
    3. 'max' → logprob: -2.331228733062744
    4. 'min' → logprob: -3.081228733062744
    5. ' t' → logprob: -5.081228733062744
    6. 'h' → logprob: -5.081228733062744
    7. ' max' → logprob: -6.706228733062744
    8. ' H' → logprob: -6.831228733062744
    9. '#' → logprob: -6.956228733062744
    10. '   ' → logprob: -7.831228733062744

Token 707: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -0.0012880940921604633
    2. '[u' → logprob: -8.001288414001465
    3. 'u' → logprob: -8.251288414001465
    4. ' =' → logprob: -9.126288414001465
    5. '#' → logprob: -9.376288414001465
    6. '=' → logprob: -9.376288414001465
    7. '[' → logprob: -9.501288414001465
    8. 'int' → logprob: -9.501288414001465
    9. '_i' → logprob: -9.876288414001465
    10. 'range' → logprob: -10.001288414001465

Token 708: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14451096951961517
    2. ' =' → logprob: -2.0195109844207764
    3. '=max' → logprob: -7.019510746002197
    4. '=min' → logprob: -8.394511222839355
    5. 'max' → logprob: -8.769511222839355
    6. 's' → logprob: -9.269511222839355
    7. '=
' → logprob: -9.394511222839355
    8. '=u' → logprob: -9.519511222839355
    9. ',' → logprob: -9.644511222839355
    10. '=h' → logprob: -10.269511222839355

Token 709: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5899226069450378
    2. 'max' → logprob: -0.8399226069450378
    3. 'min' → logprob: -5.2149224281311035
    4. 'H' → logprob: -5.2149224281311035
    5. ' max' → logprob: -6.0899224281311035
    6. ' t' → logprob: -7.3399224281311035
    7. ' H' → logprob: -11.089922904968262
    8. 'h' → logprob: -11.214922904968262
    9. 'm' → logprob: -11.589922904968262
    10. '   ' → logprob: -11.589922904968262

Token 710: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4398472011089325
    2. ' or' → logprob: -1.8148472309112549
    3. 'if' → logprob: -2.564847230911255
    4. ',' → logprob: -3.564847230911255
    5. ' if' → logprob: -3.814847230911255
    6. 'or' → logprob: -3.814847230911255
    7. '\n' → logprob: -3.814847230911255
    8. ',
' → logprob: -4.689846992492676
    9. '   ' → logprob: -6.314846992492676
    10. ' ' → logprob: -6.439846992492676

Token 711: 'lowest' (ID: 183722)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.28286463022232056
    2. ')' → logprob: -1.6578645706176758
    3. ' if' → logprob: -4.407864570617676
    4. '\n' → logprob: -4.407864570617676
    5. 'if' → logprob: -4.782864570617676
    6. ' or' → logprob: -4.907864570617676
    7. ',' → logprob: -5.157864570617676
    8. ' )
' → logprob: -5.657864570617676
    9. '),' → logprob: -6.407864570617676
    10. ')

' → logprob: -7.282864570617676

Token 712: ' possible' (ID: 4149)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0074169631116092205
    2. ')
' → logprob: -5.632416725158691
    3. '_h' → logprob: -6.382416725158691
    4. '_candidate' → logprob: -7.632416725158691
    5. ' )' → logprob: -8.382416725158691
    6. '),' → logprob: -8.632416725158691
    7. '_possible' → logprob: -8.757416725158691
    8. '_u' → logprob: -8.757416725158691
    9. ',' → logprob: -8.882416725158691
    10. ' or' → logprob: -9.007416725158691

Token 713: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10967124998569489
    2. ')
' → logprob: -2.3596713542938232
    3. '_u' → logprob: -4.859671115875244
    4. '_h' → logprob: -7.109671115875244
    5. ',' → logprob: -9.109671592712402
    6. ' or' → logprob: -9.234671592712402
    7. '),' → logprob: -9.359671592712402
    8. ' )' → logprob: -9.484671592712402
    9. ')

' → logprob: -9.609671592712402
    10. ')
' → logprob: -9.609671592712402

Token 714: '#' (ID: 2)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.21919360756874084
    2. '
' → logprob: -2.219193696975708
    3. '  
' → logprob: -3.469193696975708
    4. ',' → logprob: -4.719193458557129
    5. ',
' → logprob: -4.844193458557129
    6. ':' → logprob: -5.094193458557129
    7. '\' → logprob: -5.469193458557129
    8. ')' → logprob: -5.469193458557129
    9. ' or' → logprob: -5.844193458557129
    10. '```' → logprob: -6.094193458557129

Token 715: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.19465674459934235
    2. '
' → logprob: -2.0696568489074707
    3. 'if' → logprob: -4.569656848907471
    4. ',' → logprob: -4.819656848907471
    5. 'h' → logprob: -4.944656848907471
    6. '   ' → logprob: -5.819656848907471
    7. ' if' → logprob: -5.819656848907471
    8. '_h' → logprob: -6.194656848907471
    9. '\n' → logprob: -6.194656848907471
    10. '  
' → logprob: -6.319656848907471

Token 716: ' h' (ID: 312)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.30560705065727234
    2. 'min' → logprob: -1.8056070804595947
    3. 'h' → logprob: -2.9306070804595947
    4. 'max' → logprob: -4.055606842041016
    5. ' H' → logprob: -4.555606842041016
    6. ' min' → logprob: -4.555606842041016
    7. '#' → logprob: -5.430606842041016
    8. ' max' → logprob: -6.805606842041016
    9. ' h' → logprob: -6.805606842041016
    10. 't' → logprob: -7.930606842041016

Token 717: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -0.0016153192846104503
    2. '[u' → logprob: -6.751615524291992
    3. '_v' → logprob: -8.376615524291992
    4. '[v' → logprob: -9.376615524291992
    5. 'u' → logprob: -9.876615524291992
    6. '[' → logprob: -11.126615524291992
    7. '_i' → logprob: -11.626615524291992
    8. '_[' → logprob: -12.126615524291992
    9. '[_' → logprob: -12.251615524291992
    10. '\[' → logprob: -12.314115524291992

Token 718: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141616463661194
    2. ' =' → logprob: -1.7014161348342896
    3. ',' → logprob: -13.576416015625
    4. ' ' → logprob: -14.201416015625
    5. '=
' → logprob: -14.951416015625
    6. ' =
' → logprob: -16.076416015625
    7. '==' → logprob: -16.826416015625
    8. '=}' → logprob: -16.951416015625
    9. ' ==' → logprob: -17.076416015625
    10. ')' → logprob: -17.076416015625

Token 719: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.03965303674340248
    2. 'min' → logprob: -3.5396530628204346
    3. 'max' → logprob: -4.6646528244018555
    4. ' H' → logprob: -8.539652824401855
    5. 't' → logprob: -8.789652824401855
    6. ' min' → logprob: -10.539652824401855
    7. 'h' → logprob: -10.664652824401855
    8. ' max' → logprob: -11.664652824401855
    9. 'int' → logprob: -12.539652824401855
    10. '```' → logprob: -13.039652824401855

Token 720: '[v' (ID: 36561)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.0008338087354786694
    2. '_u' → logprob: -7.875833988189697
    3. '[' → logprob: -8.000833511352539
    4. '[v' → logprob: -9.875833511352539
    5. 'u' → logprob: -10.000833511352539
    6. '```' → logprob: -12.125833511352539
    7. ']' → logprob: -12.250833511352539
    8. '[t' → logprob: -12.500833511352539
    9. ')' → logprob: -13.875833511352539
    10. '[i' → logprob: -14.000833511352539

Token 721: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.18341875076293945
    2. ' +' → logprob: -1.8084187507629395
    3. '+t' → logprob: -6.0584187507629395
    4. ']+' → logprob: -7.5584187507629395
    5. ']' → logprob: -7.8084187507629395
    6. ')' → logprob: -8.308418273925781
    7. ')+' → logprob: -9.558418273925781
    8. ' ' → logprob: -10.808418273925781
    9. '   ' → logprob: -11.308418273925781
    10. '-' → logprob: -11.808418273925781

Token 722: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6971485018730164
    2. ' +' → logprob: -0.6971485018730164
    3. '+t' → logprob: -5.572148323059082
    4. ')' → logprob: -9.197148323059082
    5. ')+' → logprob: -10.572148323059082
    6. '+h' → logprob: -10.572148323059082
    7. ']+' → logprob: -12.447148323059082
    8. '+p' → logprob: -12.572148323059082
    9. ',' → logprob: -12.697148323059082
    10. '```' → logprob: -13.072148323059082

Token 723: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0019312551012262702
    2. ' t' → logprob: -6.251931190490723
    3. '`t' → logprob: -13.251931190490723
    4. '	t' → logprob: -15.251931190490723
    5. '_t' → logprob: -15.376931190490723
    6. ' ' → logprob: -15.876931190490723
    7. '```' → logprob: -16.00193214416504
    8. ')t' → logprob: -16.25193214416504
    9. '
' → logprob: -17.25193214416504
    10. ''t' → logprob: -17.50193214416504

Token 724: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7592120170593262
    2. '#' → logprob: -1.8842120170593262
    3. 'h' → logprob: -2.384212017059326
    4. '   ' → logprob: -2.884212017059326
    5. '_candidates' → logprob: -3.134212017059326
    6. 'candidate' → logprob: -3.384212017059326
    7. ',' → logprob: -4.134212017059326
    8. 'possible' → logprob: -4.134212017059326
    9. '_u' → logprob: -4.259212017059326
    10. ' candidates' → logprob: -4.259212017059326

Token 725: 'highest' (ID: 145680)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1324877291917801
    2. 'H' → logprob: -2.2574877738952637
    3. ')
' → logprob: -4.882487773895264
    4. 'min' → logprob: -5.132487773895264
    5. 'h' → logprob: -6.757487773895264
    6. '#' → logprob: -6.757487773895264
    7. '```' → logprob: -7.382487773895264
    8. 't' → logprob: -7.882487773895264
    9. '``' → logprob: -8.132487297058105
    10. ',' → logprob: -8.132487297058105

Token 726: ' possible' (ID: 4149)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7165159583091736
    2. '_u' → logprob: -0.7165159583091736
    3. 'possible' → logprob: -4.716516017913818
    4. ')
' → logprob: -4.716516017913818
    5. ' possible' → logprob: -6.716516017913818
    6. '#' → logprob: -7.091516017913818
    7. ' or' → logprob: -7.341516017913818
    8. '),' → logprob: -7.466516017913818
    9. '_possible' → logprob: -7.466516017913818
    10. '_h' → logprob: -8.21651554107666

Token 727: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33010154962539673
    2. '#' → logprob: -1.455101490020752
    3. '_h' → logprob: -3.955101490020752
    4. 'if' → logprob: -4.955101490020752
    5. '_u' → logprob: -5.080101490020752
    6. ')
' → logprob: -5.080101490020752
    7. ',' → logprob: -5.830101490020752
    8. '   ' → logprob: -7.080101490020752
    9. 'h' → logprob: -7.330101490020752
    10. ' if' → logprob: -7.455101490020752

Token 728: ' capped' (ID: 112860)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.26682382822036743
    2. ')' → logprob: -1.8918237686157227
    3. 'if' → logprob: -3.2668237686157227
    4. 'h' → logprob: -4.266823768615723
    5. ' if' → logprob: -4.266823768615723
    6. ')
' → logprob: -5.391823768615723
    7. ' #' → logprob: -6.266823768615723
    8. ' or' → logprob: -7.141823768615723
    9. '0' → logprob: -7.266823768615723
    10. ')\' → logprob: -7.391823768615723

Token 729: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -1.0371121168136597
    2. ',' → logprob: -1.1621121168136597
    3. 'by' → logprob: -1.5371121168136597
    4. ' at' → logprob: -3.412112236022949
    5. ')' → logprob: -3.662112236022949
    6. '=' → logprob: -3.912112236022949
    7. '),' → logprob: -4.287112236022949
    8. 'at' → logprob: -5.037112236022949
    9. ' ,' → logprob: -5.287112236022949
    10. 'to' → logprob: -5.412112236022949

Token 730: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.02617744170129299
    2. ' H' → logprob: -4.401177406311035
    3. 'min' → logprob: -4.401177406311035
    4. ' min' → logprob: -6.651177406311035
    5. ')' → logprob: -11.901177406311035
    6. ' ' → logprob: -12.526177406311035
    7. 'max' → logprob: -12.776177406311035
    8. '_H' → logprob: -13.651177406311035
    9. '	H' → logprob: -14.401177406311035
    10. '`' → logprob: -14.526177406311035

Token 731: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.0037212190218269825
    2. '[v' → logprob: -5.628721237182617
    3. 'u' → logprob: -9.253721237182617
    4. 'v' → logprob: -11.378721237182617
    5. '[' → logprob: -11.628721237182617
    6. '```' → logprob: -13.878721237182617
    7. '[
' → logprob: -14.503721237182617
    8. ']' → logprob: -14.628721237182617
    9. '\[' → logprob: -14.753721237182617
    10. '(u' → logprob: -15.253721237182617

Token 732: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.1845289021730423
    2. ')' → logprob: -2.1845288276672363
    3. ']' → logprob: -3.5595288276672363
    4. ',' → logprob: -4.559528827667236
    5. '],' → logprob: -5.309528827667236
    6. ')]' → logprob: -5.934528827667236
    7. '),' → logprob: -5.934528827667236
    8. '])
' → logprob: -6.559528827667236
    9. ']),' → logprob: -6.684528827667236
    10. ')])' → logprob: -6.809528827667236

Token 733: '#' (ID: 2)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9991771578788757
    2. '_' → logprob: -2.2491772174835205
    3. 'if' → logprob: -2.4991772174835205
    4. ':' → logprob: -2.6241772174835205
    5. '=' → logprob: -2.6241772174835205
    6. '[' → logprob: -3.4991772174835205
    7. ' if' → logprob: -3.6241772174835205
    8. 'for' → logprob: -3.8741772174835205
    9. ')' → logprob: -3.9991772174835205
    10. '\' → logprob: -4.249176979064941

Token 734: ' -' (ID: 533)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.7541881799697876
    2. '_' → logprob: -2.004188060760498
    3. '[' → logprob: -2.504188060760498
    4. ' ' → logprob: -2.629188060760498
    5. ')' → logprob: -2.754188060760498
    6. '"' → logprob: -3.129188060760498
    7. ':' → logprob: -3.254188060760498
    8. '`' → logprob: -3.254188060760498
    9. ' =' → logprob: -3.379188060760498
    10. '\' → logprob: -3.379188060760498

Token 735: ' or' (ID: 503)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.48906761407852173
    2. 'min' → logprob: -1.239067554473877
    3. 'H' → logprob: -2.989067554473877
    4. 'max' → logprob: -3.364067554473877
    5. '#' → logprob: -5.114067554473877
    6. 'import' → logprob: -5.864067554473877
    7. ' min' → logprob: -7.364067554473877
    8. 'if' → logprob: -7.989067554473877
    9. 'for' → logprob: -7.989067554473877
    10. '   ' → logprob: -8.239068031311035

Token 736: ' h' (ID: 312)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.1343451291322708
    2. ' H' → logprob: -2.259345054626465
    3. 'max' → logprob: -4.759345054626465
    4. 'h' → logprob: -5.134345054626465
    5. ' max' → logprob: -5.509345054626465
    6. 'min' → logprob: -6.634345054626465
    7. ' h' → logprob: -7.509345054626465
    8. ' min' → logprob: -7.759345054626465
    9. '(H' → logprob: -9.384345054626465
    10. ' ' → logprob: -9.884345054626465

Token 737: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -0.006073133088648319
    2. '[u' → logprob: -5.631072998046875
    3. '[' → logprob: -6.381072998046875
    4. '   ' → logprob: -9.006072998046875
    5. '```' → logprob: -9.631072998046875
    6. '#' → logprob: -9.631072998046875
    7. 'max' → logprob: -10.006072998046875
    8. '[max' → logprob: -10.006072998046875
    9. '\[' → logprob: -10.006072998046875
    10. '[int' → logprob: -10.256072998046875

Token 738: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.576261043548584
    2. ' =' → logprob: -0.826261043548584
    3. '=max' → logprob: -9.826261520385742
    4. ',' → logprob: -10.326261520385742
    5. '=min' → logprob: -10.451261520385742
    6. '```' → logprob: -10.451261520385742
    7. ' ' → logprob: -10.701261520385742
    8. '=
' → logprob: -10.951261520385742
    9. ' =
' → logprob: -11.201261520385742
    10. '_' → logprob: -11.451261520385742

Token 739: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.004168983083218336
    2. ' H' → logprob: -5.50416898727417
    3. 'max' → logprob: -10.004168510437012
    4. 'min' → logprob: -10.129168510437012
    5. ' min' → logprob: -13.254168510437012
    6. ' max' → logprob: -13.379168510437012
    7. '```' → logprob: -14.754168510437012
    8. '	H' → logprob: -15.129168510437012
    9. '(H' → logprob: -15.254168510437012
    10. '`' → logprob: -15.504168510437012

Token 740: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.3901243507862091
    2. '[' → logprob: -1.1401243209838867
    3. '_' → logprob: -6.515124320983887
    4. '\[' → logprob: -7.140124320983887
    5. '_u' → logprob: -7.890124320983887
    6. '```' → logprob: -8.890124320983887
    7. '_[' → logprob: -9.015124320983887
    8. ']' → logprob: -9.515124320983887
    9. '[_' → logprob: -9.640124320983887
    10. '[v' → logprob: -9.890124320983887

Token 741: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9164501428604126
    2. ']' → logprob: -1.1664501428604126
    3. '[u' → logprob: -1.6664501428604126
    4. '_u' → logprob: -2.791450023651123
    5. '])' → logprob: -3.791450023651123
    6. 'u' → logprob: -5.291450023651123
    7. ' if' → logprob: -5.541450023651123
    8. 'if' → logprob: -6.541450023651123
    9. ',' → logprob: -6.541450023651123
    10. ')]' → logprob: -7.166450023651123

Token 742: ' (' (ID: 350)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.04781489446759224
    2. 'import' → logprob: -3.9228148460388184
    3. 'def' → logprob: -4.297814846038818
    4. 'h' → logprob: -6.047814846038818
    5. 'INF' → logprob: -6.297814846038818
    6. 'heap' → logprob: -6.422814846038818
    7. 'inf' → logprob: -6.422814846038818
    8. 'from' → logprob: -6.672814846038818
    9. '#' → logprob: -6.797814846038818
    10. 'dp' → logprob: -6.922814846038818

Token 743: 'start' (ID: 5236)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0035636075772345066
    2. ' )' → logprob: -6.128563404083252
    3. ')
' → logprob: -7.878563404083252
    4. ' if' → logprob: -8.37856388092041
    5. ']' → logprob: -8.75356388092041
    6. '```' → logprob: -9.00356388092041
    7. ',' → logprob: -9.50356388092041
    8. '#' → logprob: -9.87856388092041
    9. '])' → logprob: -10.00356388092041
    10. ' ' → logprob: -10.00356388092041

Token 744: ' from' (ID: 591)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04391287639737129
    2. '_u' → logprob: -3.293912887573242
    3. ' or' → logprob: -6.168912887573242
    4. '+' → logprob: -6.418912887573242
    5. ']' → logprob: -7.293912887573242
    6. 'u' → logprob: -8.543912887573242
    7. '_' → logprob: -8.543912887573242
    8. ',' → logprob: -8.543912887573242
    9. '_)' → logprob: -8.793912887573242
    10. '])' → logprob: -9.168912887573242

Token 745: ' top' (ID: 2344)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31461623311042786
    2. 'H' → logprob: -1.5646162033081055
    3. ' )' → logprob: -3.8146162033081055
    4. 'the' → logprob: -4.5646162033081055
    5. ' H' → logprob: -5.0646162033081055
    6. 'u' → logprob: -5.4396162033081055
    7. '[u' → logprob: -5.6896162033081055
    8. '])' → logprob: -5.9396162033081055
    9. ']' → logprob: -6.1896162033081055
    10. ' the' → logprob: -6.5646162033081055

Token 746: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10934483259916306
    2. '_u' → logprob: -2.359344720840454
    3. 'u' → logprob: -6.109344959259033
    4. '])' → logprob: -6.234344959259033
    5. ']' → logprob: -6.359344959259033
    6. '[u' → logprob: -6.359344959259033
    7. '_)' → logprob: -7.984344959259033
    8. ' )' → logprob: -8.484344482421875
    9. ')
' → logprob: -8.484344482421875
    10. '   ' → logprob: -8.859344482421875

Token 747: '#' (ID: 2)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.3970037698745728
    2. 'h' → logprob: -1.6470037698745728
    3. ':' → logprob: -1.8970037698745728
    4. '\' → logprob: -2.772003650665283
    5. ':
' → logprob: -3.272003650665283
    6. 'for' → logprob: -3.397003650665283
    7. '```' → logprob: -3.647003650665283
    8. 'u' → logprob: -3.772003650665283
    9. '`' → logprob: -3.772003650665283
    10. 'if' → logprob: -3.897003650665283

Token 748: ' We'll' (ID: 46830)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.4953700304031372
    2. 'for' → logprob: -2.1203699111938477
    3. ':' → logprob: -2.2453699111938477
    4. ',' → logprob: -2.4953699111938477
    5. '' → logprob: -2.7453699111938477
    6. '`' → logprob: -3.2453699111938477
    7. ')' → logprob: -3.3703699111938477
    8. '#' → logprob: -3.3703699111938477
    9. '
' → logprob: -3.6203699111938477
    10. 'd' → logprob: -3.6203699111938477

Token 749: ' try' (ID: 2075)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.15377174317836761
    2. 'continue' → logprob: -3.0287716388702393
    3. 'push' → logprob: -3.5287716388702393
    4. ' import' → logprob: -3.9037716388702393
    5. 'from' → logprob: -4.653771877288818
    6. 'def' → logprob: -4.903771877288818
    7. 'use' → logprob: -5.278771877288818
    8. ' use' → logprob: -5.653771877288818
    9. 'dist' → logprob: -6.028771877288818
    10. '
' → logprob: -6.028771877288818

Token 750: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.17603689432144165
    2. 'for' → logprob: -2.801036834716797
    3. '[h' → logprob: -2.926036834716797
    4. 'c' → logprob: -4.176036834716797
    5. '[u' → logprob: -4.426036834716797
    6. '   ' → logprob: -5.301036834716797
    7. '[' → logprob: -5.801036834716797
    8. ' h' → logprob: -5.926036834716797
    9. 't' → logprob: -6.426036834716797
    10. ' for' → logprob: -6.801036834716797

Token 751: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -0.0005966392927803099
    2. '[u' → logprob: -8.00059700012207
    3. '[_' → logprob: -9.12559700012207
    4. '_' → logprob: -9.62559700012207
    5. '[' → logprob: -10.50059700012207
    6. '_[' → logprob: -10.62559700012207
    7. '_i' → logprob: -11.25059700012207
    8. ' _' → logprob: -12.75059700012207
    9. '```' → logprob: -13.12559700012207
    10. '_e' → logprob: -13.37559700012207

Token 752: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6220002770423889
    2. '=' → logprob: -0.8720002770423889
    3. ' in' → logprob: -3.622000217437744
    4. 'in' → logprob: -4.872000217437744
    5. 's' → logprob: -5.247000217437744
    6. '_candidates' → logprob: -6.122000217437744
    7. 'for' → logprob: -6.622000217437744
    8. '```' → logprob: -8.122000694274902
    9. ')' → logprob: -8.247000694274902
    10. ' for' → logprob: -8.622000694274902

Token 753: ' max' (ID: 2999)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.08004597574472427
    2. 'max' → logprob: -2.7050459384918213
    3. ' t' → logprob: -5.3300461769104
    4. 'min' → logprob: -5.8300461769104
    5. ' max' → logprob: -6.4550461769104
    6. 'H' → logprob: -7.5800461769104
    7. ' min' → logprob: -10.080045700073242
    8. '   ' → logprob: -10.205045700073242
    9. '0' → logprob: -10.830045700073242
    10. 'h' → logprob: -11.080045700073242

Token 754: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.07011071592569351
    2. '(' → logprob: -2.82011079788208
    3. '(H' → logprob: -4.94511079788208
    4. '(max' → logprob: -7.69511079788208
    5. 't' → logprob: -8.445110321044922
    6. 'H' → logprob: -8.445110321044922
    7. '((' → logprob: -10.195110321044922
    8. '(T' → logprob: -11.070110321044922
    9. '(h' → logprob: -11.070110321044922
    10. '()' → logprob: -11.945110321044922

Token 755: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013659505639225245
    2. ',t' → logprob: -7.126366138458252
    3. ',max' → logprob: -7.876366138458252
    4. ' ,' → logprob: -9.751365661621094
    5. '),' → logprob: -10.126365661621094
    6. '(t' → logprob: -11.001365661621094
    7. ',H' → logprob: -11.251365661621094
    8. ')' → logprob: -11.751365661621094
    9. 'max' → logprob: -12.001365661621094
    10. ',h' → logprob: -12.126365661621094

Token 756: '0' (ID: 15)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.40864551067352295
    2. 'max' → logprob: -2.1586456298828125
    3. 't' → logprob: -2.4086456298828125
    4. 'min' → logprob: -2.7836456298828125
    5. '0' → logprob: -2.9086456298828125
    6. ' max' → logprob: -5.6586456298828125
    7. ' t' → logprob: -6.0336456298828125
    8. ' H' → logprob: -6.1586456298828125
    9. ' min' → logprob: -6.6586456298828125
    10. ')' → logprob: -6.7836456298828125

Token 757: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.43859216570854187
    2. '),' → logprob: -1.0635921955108643
    3. ',' → logprob: -4.688591957092285
    4. ')
' → logprob: -7.563591957092285
    5. 'if' → logprob: -10.313591957092285
    6. '),
' → logprob: -10.313591957092285
    7. '
' → logprob: -11.563591957092285
    8. ' ),' → logprob: -11.563591957092285
    9. ' )' → logprob: -11.688591957092285
    10. ' if' → logprob: -11.813591957092285

Token 758: ' h' (ID: 312)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.801101803779602
    2. 'max' → logprob: -1.801101803779602
    3. 'min' → logprob: -1.926101803779602
    4. ' min' → logprob: -2.6761016845703125
    5. 'h' → logprob: -2.6761016845703125
    6. ' H' → logprob: -3.3011016845703125
    7. ' max' → logprob: -3.4261016845703125
    8. ',' → logprob: -3.9261016845703125
    9. ' h' → logprob: -4.9261016845703125
    10. '   ' → logprob: -6.3011016845703125

Token 759: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -0.0007872331188991666
    2. '[u' → logprob: -7.875787258148193
    3. '_' → logprob: -8.125786781311035
    4. '_e' → logprob: -10.500786781311035
    5. '[_' → logprob: -10.625786781311035
    6. '[' → logprob: -11.125786781311035
    7. '_i' → logprob: -11.750786781311035
    8. ' _' → logprob: -12.250786781311035
    9. '\[' → logprob: -12.250786781311035
    10. '_[' → logprob: -12.375786781311035

Token 760: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6406368613243103
    2. ' =' → logprob: -1.140636920928955
    3. ',' → logprob: -1.890636920928955
    4. ' ,' → logprob: -6.890636920928955
    5. ')' → logprob: -7.765636920928955
    6. '<|end|>' → logprob: -8.265636444091797
    7. '),' → logprob: -8.515636444091797
    8. '[u' → logprob: -9.640636444091797
    9. ',u' → logprob: -9.765636444091797
    10. '[' → logprob: -9.890636444091797

Token 761: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.002621670486405492
    2. ' min' → logprob: -6.127621650695801
    3. 'max' → logprob: -8.3776216506958
    4. 'H' → logprob: -8.5026216506958
    5. '
' → logprob: -14.2526216506958
    6. '(min' → logprob: -14.5026216506958
    7. ' H' → logprob: -14.6276216506958
    8. 'minimum' → logprob: -14.7526216506958
    9. '	min' → logprob: -14.8776216506958
    10. ' max' → logprob: -15.2526216506958

Token 762: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -9.233804303221405e-05
    2. 'H' → logprob: -9.625092506408691
    3. '(' → logprob: -10.625092506408691
    4. '(
' → logprob: -13.750092506408691
    5. '(min' → logprob: -14.125092506408691
    6. 'min' → logprob: -16.000091552734375
    7. '((' → logprob: -16.750091552734375
    8. ' (' → logprob: -17.250091552734375
    9. '```' → logprob: -17.875091552734375
    10. '(h' → logprob: -19.375091552734375

Token 763: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.002574471291154623
    2. '[v' → logprob: -6.002574443817139
    3. 'u' → logprob: -9.377574920654297
    4. 'v' → logprob: -11.877574920654297
    5. '[' → logprob: -12.252574920654297
    6. '```' → logprob: -14.002574920654297
    7. '(u' → logprob: -14.627574920654297
    8. '\[' → logprob: -14.752574920654297
    9. '_u' → logprob: -15.377574920654297
    10. '<u' → logprob: -16.377574920654297

Token 764: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.17304109036922455
    2. '[u' → logprob: -1.9230411052703857
    3. ',' → logprob: -4.923040866851807
    4. '[v' → logprob: -5.673040866851807
    5. ',u' → logprob: -7.298040866851807
    6. 'u' → logprob: -7.673040866851807
    7. '),' → logprob: -7.798040866851807
    8. ']' → logprob: -8.923041343688965
    9. '],[' → logprob: -9.173041343688965
    10. ',v' → logprob: -9.548041343688965

Token 765: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0003862245939671993
    2. ' H' → logprob: -7.8753862380981445
    3. '(H' → logprob: -12.750386238098145
    4. 'min' → logprob: -13.625386238098145
    5. '   ' → logprob: -14.125386238098145
    6. ' ' → logprob: -15.125386238098145
    7. '```' → logprob: -15.750386238098145
    8. 'max' → logprob: -16.000385284423828
    9. 'h' → logprob: -16.250385284423828
    10. '	H' → logprob: -16.250385284423828

Token 766: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0005048964521847665
    2. 'v' → logprob: -8.125504493713379
    3. '[u' → logprob: -8.500504493713379
    4. '[' → logprob: -13.875504493713379
    5. '(v' → logprob: -14.375504493713379
    6. '<v' → logprob: -14.500504493713379
    7. '
' → logprob: -14.500504493713379
    8. '```' → logprob: -14.500504493713379
    9. '	v' → logprob: -15.250504493713379
    10. ')v' → logprob: -15.500504493713379

Token 767: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.25792959332466125
    2. ']+' → logprob: -1.5079295635223389
    3. '+' → logprob: -5.257929801940918
    4. '+t' → logprob: -7.632929801940918
    5. ' +' → logprob: -9.257929801940918
    6. ')' → logprob: -10.257929801940918
    7. '[t' → logprob: -10.507929801940918
    8. '[' → logprob: -10.507929801940918
    9. ')+' → logprob: -10.757929801940918
    10. ']),' → logprob: -10.757929801940918

Token 768: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.13064807653427124
    2. '+t' → logprob: -2.630648136138916
    3. ' +' → logprob: -3.005648136138916
    4. ')+' → logprob: -7.505648136138916
    5. ')' → logprob: -8.380647659301758
    6. ' ' → logprob: -9.755647659301758
    7. '   ' → logprob: -10.630647659301758
    8. '),' → logprob: -10.755647659301758
    9. ']+' → logprob: -11.255647659301758
    10. '```' → logprob: -12.130647659301758

Token 769: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.012545322999358177
    2. ' t' → logprob: -4.387545108795166
    3. ')t' → logprob: -11.012545585632324
    4. '_t' → logprob: -12.137545585632324
    5. '`t' → logprob: -12.262545585632324
    6. ')' → logprob: -12.887545585632324
    7. '```' → logprob: -13.262545585632324
    8. '	t' → logprob: -13.887545585632324
    9. ' ' → logprob: -13.887545585632324
    10. '1' → logprob: -14.012545585632324

Token 770: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.3880055248737335
    2. ')' → logprob: -1.1380054950714111
    3. ',' → logprob: -7.01300573348999
    4. '+' → logprob: -10.138005256652832
    5. ')
' → logprob: -10.513005256652832
    6. '```' → logprob: -10.513005256652832
    7. ')`' → logprob: -10.513005256652832
    8. ')**' → logprob: -10.888005256652832
    9. ')+' → logprob: -11.388005256652832
    10. ')}' → logprob: -11.388005256652832

Token 771: ' and' (ID: 326)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.23257450759410858
    2. ' h' → logprob: -1.857574462890625
    3. '   ' → logprob: -3.607574462890625
    4. '```' → logprob: -4.357574462890625
    5. ' and' → logprob: -5.982574462890625
    6. ' ' → logprob: -6.607574462890625
    7. '#' → logprob: -6.607574462890625
    8. '`' → logprob: -7.232574462890625
    9. 'H' → logprob: -7.232574462890625
    10. ',' → logprob: -7.357574462890625

Token 772: ' h' (ID: 312)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.016199883073568344
    2. ' H' → logprob: -4.141200065612793
    3. 'max' → logprob: -9.516200065612793
    4. 'h' → logprob: -10.266200065612793
    5. ' ' → logprob: -11.266200065612793
    6. '(H' → logprob: -11.641200065612793
    7. 'min' → logprob: -12.141200065612793
    8. ' max' → logprob: -12.141200065612793
    9. 'int' → logprob: -12.516200065612793
    10. 'abs' → logprob: -12.641200065612793

Token 773: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -0.12713682651519775
    2. '[u' → logprob: -2.127136707305908
    3. '[' → logprob: -8.627137184143066
    4. '_[' → logprob: -12.252137184143066
    5. '\[' → logprob: -12.377137184143066
    6. 'u' → logprob: -12.627137184143066
    7. '<u' → logprob: -12.752137184143066
    8. '_' → logprob: -13.127137184143066
    9. '```' → logprob: -13.127137184143066
    10. '[_' → logprob: -13.377137184143066

Token 774: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11752141267061234
    2. ' =' → logprob: -2.2425215244293213
    3. ',' → logprob: -6.117521286010742
    4. ')' → logprob: -6.867521286010742
    5. '[u' → logprob: -7.867521286010742
    6. '=u' → logprob: -7.992521286010742
    7. '<|end|>' → logprob: -8.117521286010742
    8. '[' → logprob: -8.617521286010742
    9. 'u' → logprob: -10.617521286010742
    10. ']' → logprob: -10.992521286010742

Token 775: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.018154975026845932
    2. ' H' → logprob: -4.018155097961426
    3. '(H' → logprob: -12.393155097961426
    4. ' ' → logprob: -14.893155097961426
    5. '	H' → logprob: -15.268155097961426
    6. 'max' → logprob: -16.14315414428711
    7. '   ' → logprob: -16.39315414428711
    8. '(' → logprob: -17.39315414428711
    9. '`' → logprob: -17.76815414428711
    10. '_H' → logprob: -17.89315414428711

Token 776: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.0037551866844296455
    2. '[' → logprob: -5.62875509262085
    3. 'u' → logprob: -9.628755569458008
    4. '[v' → logprob: -10.628755569458008
    5. '\[' → logprob: -11.003755569458008
    6. ']' → logprob: -11.378755569458008
    7. '```' → logprob: -11.378755569458008
    8. '[user' → logprob: -11.503755569458008
    9. '_u' → logprob: -12.003755569458008
    10. '   ' → logprob: -13.753755569458008

Token 777: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019512299913913012
    2. ')]' → logprob: -7.251951217651367
    3. ',' → logprob: -7.876951217651367
    4. ']' → logprob: -8.501951217651367
    5. '),' → logprob: -9.251951217651367
    6. ')
' → logprob: -9.251951217651367
    7. '])' → logprob: -9.376951217651367
    8. ')}' → logprob: -9.501951217651367
    9. ')])' → logprob: -9.501951217651367
    10. '+' → logprob: -10.126951217651367

Token 778: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04116302356123924
    2. 'dist' → logprob: -4.166162967681885
    3. 'while' → logprob: -4.666162967681885
    4. 'heap' → logprob: -4.791162967681885
    5. 'import' → logprob: -5.541162967681885
    6. '```' → logprob: -7.041162967681885
    7. ' for' → logprob: -7.541162967681885
    8. 'h' → logprob: -7.916162967681885
    9. 'hq' → logprob: -8.291163444519043
    10. 'from' → logprob: -8.416163444519043

Token 779: ' We'll' (ID: 46830)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.16484075784683228
    2. 'import' → logprob: -1.9148406982421875
    3. 'heap' → logprob: -6.6648406982421875
    4. 'for' → logprob: -7.2898406982421875
    5. 'INF' → logprob: -7.4148406982421875
    6. 'while' → logprob: -7.6648406982421875
    7. 'from' → logprob: -7.7898406982421875
    8. 'hq' → logprob: -8.414840698242188
    9. 'queue' → logprob: -8.539840698242188
    10. 'pq' → logprob: -8.664840698242188

Token 780: ' pick' (ID: 5230)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.023414114490151405
    2. 'import' → logprob: -4.773414134979248
    3. ' for' → logprob: -5.023414134979248
    4. 'continue' → logprob: -5.398414134979248
    5. ' continue' → logprob: -6.398414134979248
    6. ' import' → logprob: -7.273414134979248
    7. 'def' → logprob: -7.648414134979248
    8. 'from' → logprob: -8.14841365814209
    9. '
' → logprob: -8.89841365814209
    10. 'heap' → logprob: -8.89841365814209

Token 781: ' the' (ID: 290)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.6846780180931091
    2. ' the' → logprob: -1.184678077697754
    3. 'the' → logprob: -2.934678077697754
    4. 'min' → logprob: -3.059678077697754
    5. ' h' → logprob: -3.434678077697754
    6. ' best' → logprob: -3.934678077697754
    7. 'h' → logprob: -4.434678077697754
    8. ' minimal' → logprob: -4.809678077697754
    9. 'best' → logprob: -5.309678077697754
    10. ' max' → logprob: -5.684678077697754

Token 782: ' minimal' (ID: 19957)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.7741214632987976
    2. ' next' → logprob: -1.5241215229034424
    3. ' best' → logprob: -1.7741215229034424
    4. 'next' → logprob: -2.7741215229034424
    5. 'min' → logprob: -3.8991215229034424
    6. 'for' → logprob: -4.149121284484863
    7. 'lowest' → logprob: -4.399121284484863
    8. '[' → logprob: -5.274121284484863
    9. ' smallest' → logprob: -5.399121284484863
    10. ' for' → logprob: -5.524121284484863

Token 783: ' among' (ID: 6200)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8877586722373962
    2. '_h' → logprob: -0.8877586722373962
    3. 'dist' → logprob: -3.637758731842041
    4. '_u' → logprob: -3.887758731842041
    5. 'h' → logprob: -4.012758731842041
    6. ' for' → logprob: -4.012758731842041
    7. '_time' → logprob: -4.387758731842041
    8. 'import' → logprob: -4.637758731842041
    9. ')' → logprob: -4.637758731842041
    10. '_candidates' → logprob: -4.762758731842041

Token 784: ' them' (ID: 1373)
  Prédit: '[h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[h' → logprob: -0.21195247769355774
    2. '[
' → logprob: -2.8369524478912354
    3. '[c' → logprob: -2.8369524478912354
    4. '[' → logprob: -3.3369524478912354
    5. 'h' → logprob: -3.9619524478912354
    6. 'c' → logprob: -4.8369526863098145
    7. '[u' → logprob: -5.4619526863098145
    8. '[min' → logprob: -6.8369526863098145
    9. 'candidate' → logprob: -6.9619526863098145
    10. 'the' → logprob: -6.9619526863098145

Token 785: '.

' (ID: 364)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3248770534992218
    2. 'dist' → logprob: -2.9498770236968994
    3. ')' → logprob: -3.3248770236968994
    4. 'import' → logprob: -3.5748770236968994
    5. '
' → logprob: -3.8248770236968994
    6. 'h' → logprob: -3.8248770236968994
    7. ':' → logprob: -4.1998772621154785
    8. 'd' → logprob: -4.1998772621154785
    9. ' for' → logprob: -4.4498772621154785
    10. '=' → logprob: -4.4498772621154785

Token 786: 'INF' (ID: 64358)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02987903542816639
    2. 'while' → logprob: -4.029879093170166
    3. 'import' → logprob: -5.654879093170166
    4. ' for' → logprob: -6.279879093170166
    5. 'def' → logprob: -6.404879093170166
    6. ')' → logprob: -7.029879093170166
    7. 'd' → logprob: -7.154879093170166
    8. 'from' → logprob: -7.404879093170166
    9. 'dist' → logprob: -7.779879093170166
    10. 'heap' → logprob: -7.779879093170166

Token 787: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602306365966797
    2. '=' → logprob: -1.9102306365966797
    3. '=int' → logprob: -13.03523063659668
    4. ' =
' → logprob: -13.78523063659668
    5. ',' → logprob: -14.03523063659668
    6. '=
' → logprob: -14.41023063659668
    7. ')' → logprob: -14.41023063659668
    8. '＝' → logprob: -14.78523063659668
    9. ' ' → logprob: -15.28523063659668
    10. '=float' → logprob: -15.78523063659668

Token 788: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00026181264547631145
    2. 'float' → logprob: -8.250262260437012
    3. 'int' → logprob: -15.125262260437012
    4. '1' → logprob: -16.125261306762695
    5. ' ' → logprob: -16.125261306762695
    6. '100' → logprob: -18.375261306762695
    7. ' float' → logprob: -18.625261306762695
    8. '11' → logprob: -19.625261306762695
    9. '(' → logprob: -20.000261306762695
    10. '(float' → logprob: -20.875261306762695

Token 789: '1' (ID: 16)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.014170088805258274
    2. 'float' → logprob: -4.264170169830322
    3. '1' → logprob: -12.264169692993164
    4. ' float' → logprob: -13.639169692993164
    5. 'int' → logprob: -14.514169692993164
    6. ' ' → logprob: -17.264169692993164
    7. 'pow' → logprob: -17.389169692993164
    8. '100' → logprob: -17.514169692993164
    9. '11' → logprob: -18.139169692993164
    10. '(float' → logprob: -18.389169692993164

Token 790: ' <<' (ID: 2256)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '000' → logprob: -0.05765020102262497
    2. '0' → logprob: -2.932650089263916
    3. '8' → logprob: -6.432650089263916
    4. '800' → logprob: -7.182650089263916
    5. '<<' → logprob: -8.307650566101074
    6. '00' → logprob: -10.432650566101074
    7. '018' → logprob: -10.682650566101074
    8. '
' → logprob: -10.807650566101074
    9. '```' → logprob: -11.182650566101074
    10. '500' → logprob: -11.307650566101074

Token 791: ' ' (ID: 220)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '60' → logprob: -2.248469718324486e-05
    2. '30' → logprob: -10.750022888183594
    3. '50' → logprob: -14.125022888183594
    4. '61' → logprob: -15.500022888183594
    5. '40' → logprob: -17.125022888183594
    6. '59' → logprob: -17.375022888183594
    7. '55' → logprob: -17.625022888183594
    8. '62' → logprob: -18.375022888183594
    9. '31' → logprob: -18.625022888183594
    10. '=' → logprob: -19.500022888183594

Token 792: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -1.2352385965641588e-05
    2. '30' → logprob: -11.500012397766113
    3. '50' → logprob: -13.500012397766113
    4. '61' → logprob: -14.875012397766113
    5. '59' → logprob: -15.250012397766113
    6. '55' → logprob: -16.750011444091797
    7. '62' → logprob: -16.750011444091797
    8. '40' → logprob: -17.625011444091797
    9. '58' → logprob: -18.125011444091797
    10. '31' → logprob: -18.250011444091797

Token 793: '
' (ID: 198)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -6.392202976712724e-06
    2. 'import' → logprob: -12.125006675720215
    3. '```' → logprob: -14.750006675720215
    4. '
' → logprob: -16.0000057220459
    5. 'distance' → logprob: -16.3750057220459
    6. 'dp' → logprob: -16.3750057220459
    7. ' dist' → logprob: -16.6250057220459
    8. 'def' → logprob: -17.3750057220459
    9. 'from' → logprob: -17.7500057220459
    10. '    
' → logprob: -18.8750057220459

Token 794: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -7.941850526549388e-06
    2. 'import' → logprob: -12.250007629394531
    3. '```' → logprob: -12.875007629394531
    4. ' dist' → logprob: -15.125007629394531
    5. 'def' → logprob: -15.250007629394531
    6. 'dp' → logprob: -17.00000762939453
    7. 'from' → logprob: -17.50000762939453
    8. 'distance' → logprob: -17.62500762939453
    9. '`' → logprob: -19.75000762939453
    10. '``' → logprob: -19.75000762939453

Token 795: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18068896234035492
    2. ' =' → logprob: -1.8056889772415161
    3. '[' → logprob: -7.430688858032227
    4. '=[' → logprob: -8.180688858032227
    5. ']' → logprob: -10.930688858032227
    6. ')' → logprob: -11.180688858032227
    7. '=[]' → logprob: -11.555688858032227
    8. '```' → logprob: -11.680688858032227
    9. ' =[' → logprob: -11.805688858032227
    10. '<|end|>' → logprob: -13.180688858032227

Token 796: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00011534435179783031
    2. ' [' → logprob: -9.750115394592285
    3. '[int' → logprob: -10.625115394592285
    4. '[I' → logprob: -12.000115394592285
    5. '[N' → logprob: -12.125115394592285
    6. '[min' → logprob: -12.125115394592285
    7. '[node' → logprob: -12.375115394592285
    8. '[array' → logprob: -13.125115394592285
    9. '[len' → logprob: -13.500115394592285
    10. '[in' → logprob: -14.000115394592285

Token 797: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.000624514592345804
    2. 'X' → logprob: -7.875624656677246
    3. 'abs' → logprob: -8.750624656677246
    4. 'H' → logprob: -10.500624656677246
    5. '[' → logprob: -10.750624656677246
    6. 'inf' → logprob: -11.000624656677246
    7. 'float' → logprob: -11.875624656677246
    8. '0' → logprob: -12.250624656677246
    9. '[X' → logprob: -12.750624656677246
    10. '(' → logprob: -13.625624656677246

Token 798: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05754442512989044
    2. ']*' → logprob: -3.182544469833374
    3. ' for' → logprob: -4.307544231414795
    4. 'for' → logprob: -7.182544231414795
    5. ' ]' → logprob: -8.932544708251953
    6. ',' → logprob: -9.682544708251953
    7. ']*(' → logprob: -11.057544708251953
    8. ')' → logprob: -14.182544708251953
    9. '()]' → logprob: -14.432544708251953
    10. ']+' → logprob: -14.932544708251953

Token 799: ' *' (ID: 425)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4517558515071869
    2. ']' → logprob: -1.8267558813095093
    3. ' for' → logprob: -2.2017557621002197
    4. ']*' → logprob: -2.9517557621002197
    5. '*' → logprob: -4.076756000518799
    6. ']*(' → logprob: -4.576756000518799
    7. '*(' → logprob: -4.826756000518799
    8. '*N' → logprob: -6.701756000518799
    9. ')' → logprob: -6.951756000518799
    10. '[' → logprob: -7.826756000518799

Token 800: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: 0.0
    2. ' N' → logprob: -20.0
    3. '(N' → logprob: -21.0
    4. '	N' → logprob: -23.375
    5. '[N' → logprob: -24.0
    6. 'Ｎ' → logprob: -24.375
    7. '_N' → logprob: -24.5
    8. 'n' → logprob: -25.375
    9. '```' → logprob: -25.75
    10. 'import' → logprob: -26.25

Token 801: '
' (ID: 198)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0004311460361350328
    2. 'import' → logprob: -7.750431060791016
    3. ' dist' → logprob: -15.625431060791016
    4. '```' → logprob: -15.625431060791016
    5. 'from' → logprob: -16.500431060791016
    6. '
' → logprob: -17.750431060791016
    7. 'pq' → logprob: -18.625431060791016
    8. 'queue' → logprob: -18.625431060791016
    9. 'visited' → logprob: -18.875431060791016
    10. '	dist' → logprob: -18.875431060791016

Token 802: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4744771718978882
    2. 'import' → logprob: -0.9744771718978882
    3. 'from' → logprob: -7.849477291107178
    4. 'initial' → logprob: -12.59947681427002
    5. 'pq' → logprob: -12.84947681427002
    6. '```' → logprob: -13.22447681427002
    7. 'start' → logprob: -13.97447681427002
    8. ' import' → logprob: -14.47447681427002
    9. 'heap' → logprob: -14.84947681427002
    10. 'hq' → logprob: -15.84947681427002

Token 803: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.537868779967539e-06
    2. '```' → logprob: -12.500008583068848
    3. '=' → logprob: -13.500008583068848
    4. '\[' → logprob: -14.500008583068848
    5. ' =' → logprob: -14.625008583068848
    6. '[X' → logprob: -14.625008583068848
    7. ',' → logprob: -14.875008583068848
    8. '[
' → logprob: -15.125008583068848
    9. ' [' → logprob: -15.375008583068848
    10. ']' → logprob: -15.500008583068848

Token 804: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.125000953674316
    3. ']' → logprob: -15.875000953674316
    4. 'X' → logprob: -16.0
    5. '(' → logprob: -17.0
    6. '[' → logprob: -17.375
    7. '
' → logprob: -18.4375
    8. '۰' → logprob: -18.75
    9. '```' → logprob: -18.875
    10. '#' → logprob: -19.0625

Token 805: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0032153804786503315
    2. ']=' → logprob: -6.003215312957764
    3. '=' → logprob: -7.253215312957764
    4. ' ]' → logprob: -10.878215789794922
    5. ' =' → logprob: -11.503215789794922
    6. ']+=' → logprob: -13.378215789794922
    7. '[' → logprob: -14.753215789794922
    8. ')' → logprob: -15.503215789794922
    9. ']
' → logprob: -15.878215789794922
    10. ']==' → logprob: -16.628215789794922

Token 806: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018150178715586662
    2. ' =' → logprob: -4.018150329589844
    3. '=X' → logprob: -15.393150329589844
    4. '=
' → logprob: -17.518150329589844
    5. '＝' → logprob: -17.518150329589844
    6. '=

' → logprob: -17.768150329589844
    7. '=int' → logprob: -18.768150329589844
    8. ')=' → logprob: -19.268150329589844
    9. ',' → logprob: -19.643150329589844
    10. '.=' → logprob: -19.768150329589844

Token 807: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -1.9361264946837764e-07
    2. ' X' → logprob: -15.875
    3. '(X' → logprob: -20.625
    4. '```' → logprob: -22.25
    5. '	X' → logprob: -22.375
    6. 'import' → logprob: -22.375
    7. '>X' → logprob: -22.625
    8. '[X' → logprob: -22.875
    9. '_X' → logprob: -23.25
    10. 'Xs' → logprob: -23.625

Token 808: ' ' (ID: 220)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0036031559575349092
    2. 'heap' → logprob: -6.753602981567383
    3. 'queue' → logprob: -7.503602981567383
    4. 'q' → logprob: -7.628602981567383
    5. 'pq' → logprob: -7.628602981567383
    6. 'hq' → logprob: -7.753602981567383
    7. '```' → logprob: -8.253602981567383
    8. '
' → logprob: -8.628602981567383
    9. 'que' → logprob: -10.753602981567383
    10. 'from' → logprob: -11.628602981567383

Token 809: ' #' (ID: 1069)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.030298927798867226
    2. '
' → logprob: -4.030298709869385
    3. 'pq' → logprob: -5.280298709869385
    4. 'q' → logprob: -6.155298709869385
    5. 'hq' → logprob: -6.280298709869385
    6. 'queue' → logprob: -6.530298709869385
    7. 'heap' → logprob: -6.905298709869385
    8. '```' → logprob: -8.030299186706543
    9. 'que' → logprob: -8.655299186706543
    10. '    
' → logprob: -11.655299186706543

Token 810: ' initial' (ID: 4871)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.03891775757074356
    2. 'heap' → logprob: -3.2889177799224854
    3. 'hq' → logprob: -7.663917541503906
    4. 'h' → logprob: -8.913917541503906
    5. 'queue' → logprob: -9.163917541503906
    6. '```' → logprob: -9.413917541503906
    7. 'pq' → logprob: -9.538917541503906
    8. 'q' → logprob: -11.788917541503906
    9. 'que' → logprob: -12.663917541503906
    10. 'he' → logprob: -13.663917541503906

Token 811: ':' (ID: 25)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.34741121530532837
    2. 'q' → logprob: -2.3474111557006836
    3. 'queue' → logprob: -2.8474111557006836
    4. 'hq' → logprob: -2.8474111557006836
    5. 'pq' → logprob: -3.3474111557006836
    6. 'heap' → logprob: -3.3474111557006836
    7. 'que' → logprob: -4.597411155700684
    8. '```' → logprob: -6.597411155700684
    9. 'h' → logprob: -9.847411155700684
    10. 'Q' → logprob: -11.722411155700684

Token 812: ' climb' (ID: 27049)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -3.7385154428193346e-05
    2. 'dist' → logprob: -11.25003719329834
    3. 'input' → logprob: -11.75003719329834
    4. ' X' → logprob: -12.12503719329834
    5. 'H' → logprob: -12.50003719329834
    6. '0' → logprob: -13.12503719329834
    7. 'import' → logprob: -13.37503719329834
    8. 'x' → logprob: -14.00003719329834
    9. 'sys' → logprob: -14.37503719329834
    10. '#' → logprob: -14.87503719329834

Token 813: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.22687943279743195
    2. 'up' → logprob: -2.226879358291626
    3. 'to' → logprob: -3.601879358291626
    4. '+' → logprob: -4.226879596710205
    5. 'X' → logprob: -4.351879596710205
    6. ')' → logprob: -4.601879596710205
    7. '<|end|>' → logprob: -5.101879596710205
    8. ' from' → logprob: -5.476879596710205
    9. '(' → logprob: -5.476879596710205
    10. '-up' → logprob: -5.601879596710205

Token 814: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023500648967456073
    2. 'X' → logprob: -8.375234603881836
    3. ' ' → logprob: -13.000234603881836
    4. 'zero' → logprob: -14.125234603881836
    5. 'input' → logprob: -15.125234603881836
    6. ' X' → logprob: -15.500234603881836
    7. 'ground' → logprob: -15.625234603881836
    8. 'initial' → logprob: -16.125234603881836
    9. 'start' → logprob: -16.125234603881836
    10. '```' → logprob: -16.250234603881836

Token 815: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003819332632701844
    2. 'X' → logprob: -7.875381946563721
    3. ' ' → logprob: -14.375381469726562
    4. 'input' → logprob: -15.000381469726562
    5. 'zero' → logprob: -15.250381469726562
    6. 'x' → logprob: -15.500381469726562
    7. '```' → logprob: -16.125381469726562
    8. ' X' → logprob: -16.250381469726562
    9. 'initial' → logprob: -16.625381469726562
    10. 'start' → logprob: -16.750381469726562

Token 816: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.2070501148700714
    2. 'for' → logprob: -2.082050085067749
    3. '
' → logprob: -3.332050085067749
    4. ' to' → logprob: -4.207050323486328
    5. 'X' → logprob: -5.457050323486328
    6. '_to' → logprob: -5.582050323486328
    7. '0' → logprob: -7.582050323486328
    8. ' for' → logprob: -7.707050323486328
    9. '+' → logprob: -8.082050323486328
    10. 'top' → logprob: -8.082050323486328

Token 817: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -2.1008713702030946e-06
    2. ' X' → logprob: -13.125001907348633
    3. '
' → logprob: -16.750001907348633
    4. 'top' → logprob: -17.375001907348633
    5. '```' → logprob: -17.625001907348633
    6. '0' → logprob: -18.250001907348633
    7. 'input' → logprob: -18.625001907348633
    8. 'initial' → logprob: -19.125001907348633
    9. 'H' → logprob: -19.375001907348633
    10. 'height' → logprob: -19.500001907348633

Token 818: ' on' (ID: 402)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.00029351349803619087
    2. 'pq' → logprob: -9.125293731689453
    3. '```' → logprob: -9.750293731689453
    4. 'hq' → logprob: -9.875293731689453
    5. 'q' → logprob: -10.500293731689453
    6. 'queue' → logprob: -11.000293731689453
    7. 'heap' → logprob: -11.125293731689453
    8. 'from' → logprob: -11.250293731689453
    9. 'que' → logprob: -13.250293731689453
    10. ' import' → logprob: -14.250293731689453

Token 819: ' tree' (ID: 8165)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004369597882032394
    2. 'tree' → logprob: -6.629369735717773
    3. 'the' → logprob: -7.004369735717773
    4. 'H' → logprob: -7.004369735717773
    5. '```' → logprob: -7.879369735717773
    6. 'X' → logprob: -7.879369735717773
    7. 'import' → logprob: -8.379369735717773
    8. 'top' → logprob: -10.129369735717773
    9. 'trees' → logprob: -10.129369735717773
    10. 'initial' → logprob: -10.629369735717773

Token 820: ' ' (ID: 220)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7146786451339722
    2. 'q' → logprob: -0.9646786451339722
    3. '
' → logprob: -2.9646787643432617
    4. 'heap' → logprob: -3.9646787643432617
    5. 'h' → logprob: -4.214678764343262
    6. 'queue' → logprob: -4.339678764343262
    7. 'hq' → logprob: -4.714678764343262
    8. 'pq' → logprob: -4.839678764343262
    9. '0' → logprob: -5.214678764343262
    10. 'que' → logprob: -5.714678764343262

Token 821: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000629279064014554
    2. '[' → logprob: -7.375629425048828
    3. '```' → logprob: -14.250629425048828
    4. '[u' → logprob: -14.500629425048828
    5. 'u' → logprob: -14.875629425048828
    6. ' ' → logprob: -15.250629425048828
    7. '(' → logprob: -15.375629425048828
    8. '<|end|>' → logprob: -16.250629425048828
    9. '<|end|>' → logprob: -16.438129425048828
    10. 's' → logprob: -17.063129425048828

Token 822: ',' (ID: 11)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.028827721253037453
    2. 'q' → logprob: -4.528827667236328
    3. 'hq' → logprob: -4.903827667236328
    4. 'pq' → logprob: -5.028827667236328
    5. 'heap' → logprob: -6.653827667236328
    6. 'queue' → logprob: -6.778827667236328
    7. '
' → logprob: -7.653827667236328
    8. 'que' → logprob: -7.903827667236328
    9. '```' → logprob: -8.028827667236328
    10. 'from' → logprob: -10.528827667236328

Token 823: ' time' (ID: 1058)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.2984502911567688
    2. 'import' → logprob: -1.798450231552124
    3. 'hq' → logprob: -2.548450231552124
    4. 'h' → logprob: -4.798450469970703
    5. 'pq' → logprob: -5.298450469970703
    6. 'queue' → logprob: -7.798450469970703
    7. '```' → logprob: -7.923450469970703
    8. 'q' → logprob: -8.798450469970703
    9. '
' → logprob: -9.923450469970703
    10. 'que' → logprob: -10.173450469970703

Token 824: ' X' (ID: 2127)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7374382019042969
    2. '
' → logprob: -0.8624382019042969
    3. 'heap' → logprob: -3.612438201904297
    4. 'q' → logprob: -3.862438201904297
    5. '+' → logprob: -4.237438201904297
    6. ',' → logprob: -4.862438201904297
    7. '=' → logprob: -5.112438201904297
    8. '
' → logprob: -5.237438201904297
    9. 'pq' → logprob: -5.237438201904297
    10. ' +' → logprob: -6.362438201904297

Token 825: '

' (ID: 279)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.031647343188524246
    2. 'q' → logprob: -4.031647205352783
    3. 'pq' → logprob: -4.906647205352783
    4. 'hq' → logprob: -6.031647205352783
    5. 'queue' → logprob: -6.281647205352783
    6. 'heap' → logprob: -6.906647205352783
    7. 'que' → logprob: -7.906647205352783
    8. '
' → logprob: -8.531647682189941
    9. '```' → logprob: -9.031647682189941
    10. 'from' → logprob: -10.406647682189941

Token 826: 'hq' (ID: 156668)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0006852717488072813
    2. 'pq' → logprob: -8.500685691833496
    3. 'hq' → logprob: -9.000685691833496
    4. 'q' → logprob: -9.250685691833496
    5. 'queue' → logprob: -9.375685691833496
    6. '```' → logprob: -9.500685691833496
    7. 'heap' → logprob: -9.500685691833496
    8. '
' → logprob: -11.125685691833496
    9. 'from' → logprob: -11.875685691833496
    10. 'que' → logprob: -12.750685691833496

Token 827: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029795151203870773
    2. '=' → logprob: -3.5297951698303223
    3. '=[]' → logprob: -10.654794692993164
    4. '=[' → logprob: -12.279794692993164
    5. '.' → logprob: -12.654794692993164
    6. ' =[' → logprob: -12.779794692993164
    7. '=[
' → logprob: -13.154794692993164
    8. '.append' → logprob: -13.154794692993164
    9. '=[]
' → logprob: -13.529794692993164
    10. ' ' → logprob: -13.779794692993164

Token 828: ' []
' (ID: 8911)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -7.886803359724581e-05
    2. '[]' → logprob: -9.500079154968262
    3. ' [(' → logprob: -12.500079154968262
    4. '[]
' → logprob: -15.500079154968262
    5. '[' → logprob: -18.250078201293945
    6. '[((' → logprob: -18.375078201293945
    7. '[]

' → logprob: -20.500078201293945
    8. '([(' → logprob: -21.000078201293945
    9. ' []' → logprob: -21.500078201293945
    10. '[],' → logprob: -21.750078201293945

Token 829: 'heap' (ID: 38535)
  Prédit: 'heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -1.1472419600977446e-06
    2. ' heap' → logprob: -14.375000953674316
    3. 'he' → logprob: -14.875000953674316
    4. 'import' → logprob: -15.625000953674316
    5. '(heap' → logprob: -17.000001907348633
    6. '```' → logprob: -18.875001907348633
    7. '-' → logprob: -20.375001907348633
    8. '_heap' → logprob: -20.625001907348633
    9. '.heap' → logprob: -20.625001907348633
    10. 'queue' → logprob: -22.375001907348633

Token 830: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.5048530030981055e-06
    2. '.he' → logprob: -13.875001907348633
    3. '```' → logprob: -15.125001907348633
    4. 'push' → logprob: -15.750001907348633
    5. 'he' → logprob: -16.750001907348633
    6. 'ify' → logprob: -17.625001907348633
    7. '.push' → logprob: -18.250001907348633
    8. 'h' → logprob: -18.375001907348633
    9. 'queue' → logprob: -18.750001907348633
    10. '=' → logprob: -18.750001907348633

Token 831: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.0001266613689949736
    2. '.heap' → logprob: -9.000126838684082
    3. '.' → logprob: -12.875126838684082
    4. '.push' → logprob: -15.750126838684082
    5. '​.' → logprob: -16.500125885009766
    6. '```' → logprob: -16.625125885009766
    7. '>.' → logprob: -16.750125885009766
    8. '.He' → logprob: -17.500125885009766
    9. ').' → logprob: -17.500125885009766
    10. ' .' → logprob: -17.625125885009766

Token 832: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -5.080963092041202e-06
    2. 'ap' → logprob: -12.375004768371582
    3. 'pp' → logprob: -14.500004768371582
    4. 'push' → logprob: -16.2500057220459
    5. '```' → logprob: -16.3750057220459
    6. 'q' → logprob: -17.1250057220459
    7. 'appen' → logprob: -18.3750057220459
    8. 'p' → logprob: -19.2500057220459
    9. 'qp' → logprob: -19.2500057220459
    10. 'append' → logprob: -19.2500057220459

Token 833: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -9.088346359931165e-07
    2. 'op' → logprob: -14.750000953674316
    3. 'push' → logprob: -15.250000953674316
    4. 'sh' → logprob: -16.0
    5. 'ort' → logprob: -17.125
    6. 'h' → logprob: -17.75
    7. '```' → logprob: -18.75
    8. 'ut' → logprob: -19.25
    9. 'u' → logprob: -19.375
    10. 'USH' → logprob: -19.75

Token 834: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -4.008129963040119e-06
    2. '(q' → logprob: -12.750003814697266
    3. '(' → logprob: -14.000003814697266
    4. '((' → logprob: -15.750003814697266
    5. '(heap' → logprob: -16.625003814697266
    6. ' (' → logprob: -17.000003814697266
    7. '(hr' → logprob: -18.250003814697266
    8. '(
' → logprob: -18.375003814697266
    9. '```' → logprob: -18.875003814697266
    10. '(H' → logprob: -20.750003814697266

Token 835: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -6.704273118884885e-07
    2. 'p' → logprob: -14.875000953674316
    3. '(q' → logprob: -15.500000953674316
    4. 'Q' → logprob: -16.875
    5. '(h' → logprob: -17.875
    6. 'qp' → logprob: -18.0
    7. '(' → logprob: -18.625
    8. 'aq' → logprob: -18.75
    9. 'pq' → logprob: -18.75
    10. '?q' → logprob: -18.75

Token 836: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47846776247024536
    2. '((' → logprob: -0.9784677624702454
    3. '(h' → logprob: -5.72846794128418
    4. '(dist' → logprob: -6.85346794128418
    5. ' (' → logprob: -10.10346794128418
    6. ')' → logprob: -11.22846794128418
    7. ' ' → logprob: -11.97846794128418
    8. '([' → logprob: -12.60346794128418
    9. ',' → logprob: -12.85346794128418
    10. '```' → logprob: -12.85346794128418

Token 837: ' (' (ID: 350)
  Prédit: '(X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.5764908194541931
    2. '(' → logprob: -0.8264908194541931
    3. '(dist' → logprob: -7.576490879058838
    4. '((' → logprob: -10.57649040222168
    5. ' (' → logprob: -11.32649040222168
    6. '(x' → logprob: -14.57649040222168
    7. '(distance' → logprob: -15.70149040222168
    8. '(D' → logprob: -15.95149040222168
    9. 'dist' → logprob: -16.57649040222168
    10. '   ' → logprob: -16.70149040222168

Token 838: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0007107630372047424
    2. 'dist' → logprob: -7.250710964202881
    3. ' X' → logprob: -14.250710487365723
    4. '(X' → logprob: -15.500710487365723
    5. 'Dist' → logprob: -17.50071144104004
    6. ' dist' → logprob: -17.75071144104004
    7. '(dist' → logprob: -18.87571144104004
    8. '0' → logprob: -19.00071144104004
    9. '	X' → logprob: -19.25071144104004
    10. 'x' → logprob: -20.12571144104004

Token 839: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1756367712223437e-05
    2. ' ,' → logprob: -11.750011444091797
    3. '0' → logprob: -12.500011444091797
    4. ',
' → logprob: -16.750011444091797
    5. '```' → logprob: -17.375011444091797
    6. ' ' → logprob: -19.625011444091797
    7. '
' → logprob: -19.750011444091797
    8. '‌,' → logprob: -19.875011444091797
    9. '(' → logprob: -20.375011444091797
    10. ')' → logprob: -20.375011444091797

Token 840: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. '```' → logprob: -23.625
    4. '۰' → logprob: -23.875
    5. '   ' → logprob: -24.625
    6. '０' → logprob: -24.75
    7. ')' → logprob: -25.125
    8. '(' → logprob: -25.375
    9. '00' → logprob: -25.375
    10. '[' → logprob: -25.5

Token 841: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -19.125
    3. '۰' → logprob: -22.25
    4. '```' → logprob: -22.625
    5. '０' → logprob: -23.25
    6. '(' → logprob: -23.25
    7. '{
' → logprob: -23.375
    8. '
' → logprob: -23.5
    9. ')' → logprob: -23.75
    10. '০' → logprob: -24.3125

Token 842: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0015043864259496331
    2. ')' → logprob: -6.501504421234131
    3. '))
' → logprob: -13.126503944396973
    4. ')))' → logprob: -16.50150489807129
    5. ')
' → logprob: -17.12650489807129
    6. ' ))' → logprob: -17.25150489807129
    7. '),' → logprob: -18.12650489807129
    8. '));' → logprob: -18.25150489807129
    9. '))

' → logprob: -18.37650489807129
    10. ',' → logprob: -18.62650489807129

Token 843: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -2.45848218582978e-06
    2. '```' → logprob: -13.25000286102295
    3. ' while' → logprob: -14.62500286102295
    4. 'While' → logprob: -16.375001907348633
    5. '	while' → logprob: -18.250001907348633
    6. '
' → logprob: -19.875001907348633
    7. 'from' → logprob: -22.000001907348633
    8. 'for' → logprob: -22.000001907348633
    9. '``' → logprob: -22.000001907348633
    10. 'import' → logprob: -22.125001907348633

Token 844: ' h' (ID: 312)
  Prédit: 'hq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hq' → logprob: -0.048849642276763916
    2. ' h' → logprob: -3.048849582672119
    3. '(h' → logprob: -8.298850059509277
    4. 'h' → logprob: -11.673850059509277
    5. '	h' → logprob: -13.173850059509277
    6. 'len' → logprob: -13.298850059509277
    7. '[h' → logprob: -14.298850059509277
    8. '
' → logprob: -14.548850059509277
    9. '```' → logprob: -16.42384910583496
    10. '<h' → logprob: -17.29884910583496

Token 845: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.696889623621246e-06
    2. 'Q' → logprob: -13.37500286102295
    3. 'c' → logprob: -14.62500286102295
    4. 'cq' → logprob: -15.75000286102295
    5. 'p' → logprob: -15.87500286102295
    6. '[' → logprob: -16.500001907348633
    7. '
' → logprob: -16.625001907348633
    8. 'e' → logprob: -16.625001907348633
    9. '_' → logprob: -17.750001907348633
    10. 'a' → logprob: -18.625001907348633

Token 846: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006622650660574436
    2. ':
' → logprob: -5.381622791290283
    3. '):' → logprob: -7.006622791290283
    4. '[' → logprob: -7.756622791290283
    5. '>:' → logprob: -8.256622314453125
    6. ',' → logprob: -9.506622314453125
    7. '```' → logprob: -9.881622314453125
    8. 'and' → logprob: -10.006622314453125
    9. '!=' → logprob: -10.006622314453125
    10. '):
' → logprob: -10.006622314453125

Token 847: '   ' (ID: 271)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -1.2221062183380127
    2. 'time' → logprob: -1.3471062183380127
    3. '   ' → logprob: -1.5971062183380127
    4. 'cur' → logprob: -2.2221062183380127
    5. 'c' → logprob: -3.0971062183380127
    6. 't' → logprob: -3.5971062183380127
    7. 'dist' → logprob: -3.8471062183380127
    8. 'curr' → logprob: -4.222105979919434
    9. 'd' → logprob: -4.347105979919434
    10. 'current' → logprob: -4.722105979919434

Token 848: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -0.6466608047485352
    2. 'cost' → logprob: -1.3966608047485352
    3. 'time' → logprob: -2.146660804748535
    4. 'd' → logprob: -2.396660804748535
    5. 'curr' → logprob: -4.146660804748535
    6. 'current' → logprob: -5.771660804748535
    7. 'c' → logprob: -6.896660804748535
    8. 'dist' → logprob: -7.396660804748535
    9. '   ' → logprob: -8.771660804748535
    10. 't' → logprob: -9.271660804748535

Token 849: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.6440206170082092
    2. '_dist' → logprob: -1.0190205574035645
    3. '_cost' → logprob: -2.6440205574035645
    4. '_t' → logprob: -3.2690205574035645
    5. 'dist' → logprob: -6.8940205574035645
    6. '_d' → logprob: -7.0190205574035645
    7. 'time' → logprob: -7.0190205574035645
    8. '_' → logprob: -7.3940205574035645
    9. '_distance' → logprob: -7.6440205574035645
    10. 't' → logprob: -8.019021034240723

Token 850: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4974866644479334e-05
    2. ' ,' → logprob: -11.625015258789062
    3. ',node' → logprob: -13.375015258789062
    4. ',
' → logprob: -13.750015258789062
    5. ',u' → logprob: -14.250015258789062
    6. ',c' → logprob: -14.625015258789062
    7. ',current' → logprob: -14.875015258789062
    8. ',num' → logprob: -14.875015258789062
    9. ',n' → logprob: -15.000015258789062
    10. ',t' → logprob: -15.125015258789062

Token 851: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.00020687808864749968
    2. 'cur' → logprob: -8.50020694732666
    3. ' u' → logprob: -12.75020694732666
    4. 'node' → logprob: -14.62520694732666
    5. 'v' → logprob: -19.125205993652344
    6. 'now' → logprob: -19.375205993652344
    7. '```' → logprob: -19.875205993652344
    8. '
' → logprob: -20.000205993652344
    9. '[u' → logprob: -20.125205993652344
    10. '(u' → logprob: -20.250205993652344

Token 852: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011064444668591022
    2. ' =' → logprob: -4.511064529418945
    3. ')' → logprob: -11.136064529418945
    4. ')=' → logprob: -13.261064529418945
    5. '   ' → logprob: -15.511064529418945
    6. '=
' → logprob: -17.136064529418945
    7. ']' → logprob: -17.136064529418945
    8. ']=' → logprob: -17.261064529418945
    9. '=u' → logprob: -17.761064529418945
    10. ',' → logprob: -18.636064529418945

Token 853: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -1.1472419600977446e-06
    2. ' heap' → logprob: -13.750000953674316
    3. 'he' → logprob: -17.250001907348633
    4. '(heap' → logprob: -22.500001907348633
    5. '.heap' → logprob: -22.625001907348633
    6. '_heap' → logprob: -23.375001907348633
    7. 'hq' → logprob: -24.375001907348633
    8. '
' → logprob: -24.625001907348633
    9. 'queue' → logprob: -24.750001907348633
    10. 'Heap' → logprob: -26.000001907348633

Token 854: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00023226479243021458
    2. 'pop' → logprob: -8.500232696533203
    3. 'app' → logprob: -10.875232696533203
    4. 'replace' → logprob: -12.250232696533203
    5. 'op' → logprob: -13.250232696533203
    6. '   ' → logprob: -13.250232696533203
    7. 'p' → logprob: -15.250232696533203
    8. '       ' → logprob: -15.375232696533203
    9. '```' → logprob: -15.375232696533203
    10. 'eq' → logprob: -16.000232696533203

Token 855: '.he' (ID: 67786)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.23063744604587555
    2. '.he' → logprob: -1.7306374311447144
    3. 'app' → logprob: -3.855637550354004
    4. '[' → logprob: -5.230637550354004
    5. 'he' → logprob: -7.230637550354004
    6. '```' → logprob: -7.730637550354004
    7. '.heap' → logprob: -7.855637550354004
    8. '.' → logprob: -8.980637550354004
    9. '   ' → logprob: -9.105637550354004
    10. '.pop' → logprob: -9.230637550354004

Token 856: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -4.739826181321405e-05
    2. 'ap' → logprob: -10.25004768371582
    3. 'pp' → logprob: -11.50004768371582
    4. '[' → logprob: -14.75004768371582
    5. 'pop' → logprob: -14.75004768371582
    6. 'q' → logprob: -15.00004768371582
    7. 'appen' → logprob: -15.75004768371582
    8. '```' → logprob: -15.75004768371582
    9. 'appe' → logprob: -15.87504768371582
    10. 'p' → logprob: -16.00004768371582

Token 857: 'op' (ID: 467)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.07921835780143738
    2. 'ush' → logprob: -3.4542183876037598
    3. 'op' → logprob: -3.7042183876037598
    4. 'q' → logprob: -4.07921838760376
    5. 'ap' → logprob: -6.45421838760376
    6. 'pop' → logprob: -7.32921838760376
    7. 'pp' → logprob: -7.32921838760376
    8. 'u' → logprob: -9.829217910766602
    9. 'p' → logprob: -10.829217910766602
    10. '```' → logprob: -11.079217910766602

Token 858: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -15.000000953674316
    3. '(q' → logprob: -15.250000953674316
    4. '(
' → logprob: -15.250000953674316
    5. 'hq' → logprob: -16.500001907348633
    6. '(heap' → logprob: -17.625001907348633
    7. 'h' → logprob: -18.125001907348633
    8. ' (' → logprob: -18.625001907348633
    9. ',h' → logprob: -19.000001907348633
    10. '[h' → logprob: -19.875001907348633

Token 859: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: 0.0
    2. '_q' → logprob: -19.875
    3. ')' → logprob: -20.875
    4. ')
' → logprob: -22.5
    5. '	q' → logprob: -22.625
    6. '_' → logprob: -22.875
    7. '```' → logprob: -23.625
    8. '
' → logprob: -23.75
    9. 'sq' → logprob: -24.0
    10. 'qs' → logprob: -24.0

Token 860: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020413640595506877
    2. ')
' → logprob: -8.500204086303711
    3. '   ' → logprob: -14.875204086303711
    4. ' )' → logprob: -15.875204086303711
    5. ')
' → logprob: -16.12520408630371
    6. ')`' → logprob: -18.00020408630371
    7. ')

' → logprob: -18.25020408630371
    8. '),' → logprob: -19.12520408630371
    9. ').' → logprob: -19.62520408630371
    10. '):
' → logprob: -20.25020408630371

Token 861: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001191298826597631
    2. 'if' → logprob: -6.751191139221191
    3. ' if' → logprob: -11.376191139221191
    4. '```' → logprob: -11.751191139221191
    5. '    
' → logprob: -13.376191139221191
    6. '
' → logprob: -15.751191139221191
    7. '	if' → logprob: -16.376192092895508
    8. '   ' → logprob: -17.751192092895508
    9. '       ' → logprob: -18.501192092895508
    10. 'continue' → logprob: -18.751192092895508

Token 862: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.004238785710185766
    2. '   ' → logprob: -5.504238605499268
    3. ' if' → logprob: -8.754239082336426
    4. '```' → logprob: -13.629239082336426
    5. '    
' → logprob: -13.754239082336426
    6. 'continue' → logprob: -15.504239082336426
    7. '
' → logprob: -16.12923812866211
    8. '	if' → logprob: -17.75423812866211
    9. ';if' → logprob: -18.50423812866211
    10. ' 
' → logprob: -18.62923812866211

Token 863: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8121184706687927
    2. ' dist' → logprob: -1.3121185302734375
    3. 'cur' → logprob: -1.5621185302734375
    4. ' cur' → logprob: -2.5621185302734375
    5. '	dist' → logprob: -13.937118530273438
    6. '(dist' → logprob: -14.812118530273438
    7. '(cur' → logprob: -15.312118530273438
    8. '	cur' → logprob: -15.437118530273438
    9. 'curr' → logprob: -16.687118530273438
    10. '_dist' → logprob: -17.812118530273438

Token 864: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -5.9153885558771435e-06
    2. '[' → logprob: -12.500005722045898
    3. '[cur' → logprob: -13.375005722045898
    4. '```' → logprob: -14.875005722045898
    5. '[user' → logprob: -16.2500057220459
    6. 'u' → logprob: -16.7500057220459
    7. '[
' → logprob: -16.7500057220459
    8. '\[' → logprob: -17.6250057220459
    9. '[node' → logprob: -18.0000057220459
    10. '[current' → logprob: -19.5000057220459

Token 865: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.6242506504058838
    2. '>' → logprob: -1.2492506504058838
    3. ' !=' → logprob: -1.8742506504058838
    4. ' >' → logprob: -4.499250411987305
    5. '<' → logprob: -5.374250411987305
    6. ' <' → logprob: -5.999250411987305
    7. '==' → logprob: -6.499250411987305
    8. '[' → logprob: -7.249250411987305
    9. ']!=' → logprob: -7.249250411987305
    10. ']' → logprob: -7.749250411987305

Token 866: ' <' (ID: 464)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.29257386922836304
    2. ' !=' → logprob: -2.167573928833008
    3. '<' → logprob: -2.417573928833008
    4. ' <' → logprob: -3.667573928833008
    5. '>' → logprob: -4.292573928833008
    6. '[' → logprob: -4.792573928833008
    7. ' >' → logprob: -7.667573928833008
    8. '[u' → logprob: -7.917573928833008
    9. '[cur' → logprob: -7.917573928833008
    10. '==' → logprob: -8.792573928833008

Token 867: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -2.339278580620885e-06
    2. ' cur' → logprob: -13.000001907348633
    3. '	cur' → logprob: -22.875001907348633
    4. '(cur' → logprob: -23.500001907348633
    5. '[cur' → logprob: -24.375001907348633
    6. '_cur' → logprob: -24.750001907348633
    7. '-cur' → logprob: -25.375001907348633
    8. '.cur' → logprob: -25.875001907348633
    9. 'Cur' → logprob: -26.375001907348633
    10. 'curr' → logprob: -26.875001907348633

Token 868: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.8074162653647363e-05
    2. '_t' → logprob: -11.000018119812012
    3. '_tim' → logprob: -14.750018119812012
    4. '_' → logprob: -14.875018119812012
    5. 'time' → logprob: -15.250018119812012
    6. '_cur' → logprob: -16.500017166137695
    7. '_times' → logprob: -16.750017166137695
    8. 't' → logprob: -17.125017166137695
    9. 'Time' → logprob: -17.250017166137695
    10. '_size' → logprob: -18.250017166137695

Token 869: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01204675529152155
    2. ':
' → logprob: -4.637046813964844
    3. 'continue' → logprob: -6.637046813964844
    4. '   ' → logprob: -7.387046813964844
    5. ' continue' → logprob: -8.387046813964844
    6. '	continue' → logprob: -9.762046813964844
    7. '       ' → logprob: -10.012046813964844
    8. ':return' → logprob: -11.387046813964844
    9. '_continue' → logprob: -11.762046813964844
    10. ' continues' → logprob: -12.262046813964844

Token 870: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02102549932897091
    2. '   ' → logprob: -4.146025657653809
    3. 'continue' → logprob: -5.396025657653809
    4. '	continue' → logprob: -8.271025657653809
    5. ' continue' → logprob: -8.646025657653809
    6. '```' → logprob: -11.646025657653809
    7. '_continue' → logprob: -13.521025657653809
    8. '
' → logprob: -14.021025657653809
    9. '	' → logprob: -14.271025657653809
    10. '	   ' → logprob: -14.896025657653809

Token 871: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.0036480571143329144
    2. '       ' → logprob: -6.003648281097412
    3. ' continue' → logprob: -7.253648281097412
    4. '   ' → logprob: -8.253647804260254
    5. '	continue' → logprob: -8.503647804260254
    6. '_continue' → logprob: -14.128647804260254
    7. 'contin' → logprob: -15.628647804260254
    8. '```' → logprob: -16.25364875793457
    9. 'continu' → logprob: -16.50364875793457
    10. '	' → logprob: -17.62864875793457

Token 872: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008523324504494667
    2. 'for' → logprob: -5.383523464202881
    3. '```' → logprob: -5.758523464202881
    4. ' for' → logprob: -7.258523464202881
    5. '    
' → logprob: -10.508522987365723
    6. '	for' → logprob: -12.883522987365723
    7. '
' → logprob: -13.008522987365723
    8. 'continue' → logprob: -14.133522987365723
    9. '   ' → logprob: -14.633522987365723
    10. '``' → logprob: -14.883522987365723

Token 873: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10099025815725327
    2. 'for' → logprob: -2.3509902954101562
    3. ' for' → logprob: -7.850990295410156
    4. '```' → logprob: -7.850990295410156
    5. '    
' → logprob: -12.975990295410156
    6. '	for' → logprob: -13.350990295410156
    7. 'continue' → logprob: -15.600990295410156
    8. '   ' → logprob: -15.600990295410156
    9. '
' → logprob: -15.725990295410156
    10. '       ' → logprob: -16.850990295410156

Token 874: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00037371189682744443
    2. '   ' → logprob: -8.000373840332031
    3. ' for' → logprob: -10.250373840332031
    4. '```' → logprob: -12.875373840332031
    5. '    
' → logprob: -15.250373840332031
    6. '
' → logprob: -15.625373840332031
    7. '	for' → logprob: -17.50037384033203
    8. '``' → logprob: -19.12537384033203
    9. 'from' → logprob: -19.75037384033203
    10. '_for' → logprob: -21.62537384033203

Token 875: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0019287518225610256
    2. ' u' → logprob: -6.251928806304932
    3. '	u' → logprob: -17.251928329467773
    4. 'dist' → logprob: -17.376928329467773
    5. '   ' → logprob: -17.876928329467773
    6. ' ' → logprob: -18.501928329467773
    7. '
' → logprob: -18.626928329467773
    8. 'graph' → logprob: -18.626928329467773
    9. '[u' → logprob: -18.876928329467773
    10. ' ' → logprob: -19.001928329467773

Token 876: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4741402268409729
    2. ' ==' → logprob: -0.9741402268409729
    3. '=' → logprob: -10.099140167236328
    4. '==
' → logprob: -11.599140167236328
    5. ']==' → logprob: -12.849140167236328
    6. ' =' → logprob: -13.224140167236328
    7. ')==' → logprob: -13.224140167236328
    8. '()==' → logprob: -13.349140167236328
    9. '==(' → logprob: -13.599140167236328
    10. 'u' → logprob: -14.099140167236328

Token 877: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -6.265633419388905e-05
    2. '0' → logprob: -9.750062942504883
    3. 'u' → logprob: -12.750062942504883
    4. ' N' → logprob: -14.125062942504883
    5. 'X' → logprob: -14.625062942504883
    6. '(N' → logprob: -16.125062942504883
    7. 'n' → logprob: -16.625062942504883
    8. 'H' → logprob: -17.625062942504883
    9. '[N' → logprob: -18.875062942504883
    10. '	N' → logprob: -19.625062942504883

Token 878: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0002964935847558081
    2. ' -' → logprob: -8.125296592712402
    3. '1' → logprob: -15.000296592712402
    4. '()-' → logprob: -16.625295639038086
    5. '[' → logprob: -19.000295639038086
    6. '−' → logprob: -20.000295639038086
    7. '[-' → logprob: -20.500295639038086
    8. ' ' → logprob: -20.625295639038086
    9. '–' → logprob: -21.000295639038086
    10. '```' → logprob: -21.000295639038086

Token 879: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -17.375
    4. '   ' → logprob: -19.0
    5. '-' → logprob: -19.75
    6. '2' → logprob: -19.75
    7. '１' → logprob: -20.375
    8. '
' → logprob: -21.0625
    9. '...' → logprob: -21.625
    10. ',' → logprob: -21.625

Token 880: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.25227606296539307
    2. ':' → logprob: -1.502276062965393
    3. ' and' → logprob: -8.502276420593262
    4. '   ' → logprob: -9.127276420593262
    5. 'and' → logprob: -10.627276420593262
    6. ':return' → logprob: -12.002276420593262
    7. ':
' → logprob: -13.627276420593262
    8. ' :
' → logprob: -14.127276420593262
    9. '):
' → logprob: -14.377276420593262
    10. ' ' → logprob: -14.502276420593262

Token 881: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.062290653586387634
    2. '   ' → logprob: -2.812290668487549
    3. 'print' → logprob: -8.06229019165039
    4. '```' → logprob: -12.68729019165039
    5. 'break' → logprob: -13.31229019165039
    6. ' print' → logprob: -13.43729019165039
    7. '
' → logprob: -14.31229019165039
    8. '           ' → logprob: -15.68729019165039
    9. '	print' → logprob: -15.81229019165039
    10. '    
' → logprob: -15.93729019165039

Token 882: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.6100132496794686e-05
    2. 'break' → logprob: -10.000056266784668
    3. '   ' → logprob: -11.500056266784668
    4. '```' → logprob: -14.875056266784668
    5. ' print' → logprob: -16.00005531311035
    6. '	print' → logprob: -19.00005531311035
    7. '_print' → logprob: -20.75005531311035
    8. '``' → logprob: -21.00005531311035
    9. '       ' → logprob: -21.50005531311035
    10. '#print' → logprob: -21.62505531311035

Token 883: ' we' (ID: 581)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.88418151892256e-05
    2. 'break' → logprob: -9.750059127807617
    3. '   ' → logprob: -14.875059127807617
    4. '```' → logprob: -16.000059127807617
    5. ' print' → logprob: -17.875059127807617
    6. 'return' → logprob: -21.125059127807617
    7. '
' → logprob: -21.625059127807617
    8. 'pr' → logprob: -21.875059127807617
    9. '    
' → logprob: -21.875059127807617
    10. '#print' → logprob: -22.375059127807617

Token 884: ' want' (ID: 1682)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20743981003761292
    2. '       ' → logprob: -1.9574397802352905
    3. 'print' → logprob: -3.20743989944458
    4. 'break' → logprob: -5.20743989944458
    5. '           ' → logprob: -9.207439422607422
    6. ' print' → logprob: -10.832439422607422
    7. '
' → logprob: -11.082439422607422
    8. ' break' → logprob: -11.457439422607422
    9. '    ' → logprob: -11.707439422607422
    10. '     ' → logprob: -11.832439422607422

Token 885: ' to' (ID: 316)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00014132341311778873
    2. '   ' → logprob: -9.375141143798828
    3. 'break' → logprob: -9.875141143798828
    4. 'to' → logprob: -12.875141143798828
    5. ' print' → logprob: -13.375141143798828
    6. '```' → logprob: -14.500141143798828
    7. '#print' → logprob: -16.250141143798828
    8. '
' → logprob: -16.625141143798828
    9. ' to' → logprob: -16.625141143798828
    10. 'return' → logprob: -17.000141143798828

Token 886: ' be' (ID: 413)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.5491004129871726e-05
    2. 'break' → logprob: -10.000045776367188
    3. ' print' → logprob: -17.625045776367188
    4. '
' → logprob: -17.875045776367188
    5. '#print' → logprob: -18.500045776367188
    6. '```' → logprob: -19.125045776367188
    7. 'exit' → logprob: -20.250045776367188
    8. 'import' → logprob: -20.750045776367188
    9. 'return' → logprob: -20.750045776367188
    10. 'pr' → logprob: -21.375045776367188

Token 887: ' at' (ID: 540)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.14244307577610016
    2. 'print' → logprob: -2.5174431800842285
    3. 'dist' → logprob: -3.2674431800842285
    4. ' at' → logprob: -5.0174431800842285
    5. 'cur' → logprob: -5.0174431800842285
    6. '
' → logprob: -8.01744270324707
    7. 'top' → logprob: -9.39244270324707
    8. '#print' → logprob: -9.64244270324707
    9. ' dist' → logprob: -9.89244270324707
    10. '_at' → logprob: -10.01744270324707

Token 888: ' top' (ID: 2344)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.1302442103624344
    2. 'dist' → logprob: -2.380244255065918
    3. 'X' → logprob: -3.880244255065918
    4. 'top' → logprob: -5.630244255065918
    5. '0' → logprob: -6.130244255065918
    6. 'N' → logprob: -6.380244255065918
    7. 'the' → logprob: -7.255244255065918
    8. ' dist' → logprob: -8.130244255065918
    9. 'height' → logprob: -8.255244255065918
    10. ' H' → logprob: -9.630244255065918

Token 889: ' of' (ID: 328)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3291213810443878
    2. '   ' → logprob: -1.3291213512420654
    3. 'break' → logprob: -4.2041215896606445
    4. ' of' → logprob: -8.079121589660645
    5. 'of' → logprob: -8.329121589660645
    6. '```' → logprob: -9.579121589660645
    7. '       ' → logprob: -9.954121589660645
    8. ' at' → logprob: -10.079121589660645
    9. ' print' → logprob: -10.454121589660645
    10. '
' → logprob: -10.954121589660645

Token 890: ' tree' (ID: 8165)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.8519881963729858
    2. 'u' → logprob: -0.9769881963729858
    3. 'N' → logprob: -2.3519883155822754
    4. 'H' → logprob: -2.9769883155822754
    5. 'tree' → logprob: -3.9769883155822754
    6. 'the' → logprob: -4.226988315582275
    7. '[u' → logprob: -5.601988315582275
    8. 'range' → logprob: -5.851988315582275
    9. 'node' → logprob: -6.601988315582275
    10. 'v' → logprob: -6.726988315582275

Token 891: ' N' (ID: 478)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04912932962179184
    2. '   ' → logprob: -3.2991292476654053
    3. 'u' → logprob: -4.924129486083984
    4. 'break' → logprob: -5.799129486083984
    5. '```' → logprob: -8.049129486083984
    6. '[u' → logprob: -8.924129486083984
    7. '(u' → logprob: -9.549129486083984
    8. ' print' → logprob: -9.674129486083984
    9. ',' → logprob: -10.424129486083984
    10. 'return' → logprob: -10.924129486083984

Token 892: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00032366468803957105
    2. ' -' → logprob: -8.250323295593262
    3. ',' → logprob: -10.875323295593262
    4. '```' → logprob: -11.750323295593262
    5. '   ' → logprob: -12.125323295593262
    6. ')' → logprob: -12.250323295593262
    7. '1' → logprob: -12.375323295593262
    8. '
' → logprob: -12.375323295593262
    9. '       ' → logprob: -12.750323295593262
    10. ':
' → logprob: -12.750323295593262

Token 893: ' dist' (ID: 3601)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009365935111418366
    2. 'break' → logprob: -7.375936508178711
    3. '   ' → logprob: -8.125936508178711
    4. '```' → logprob: -11.750936508178711
    5. '
' → logprob: -12.875936508178711
    6. ' print' → logprob: -13.125936508178711
    7. '       ' → logprob: -13.750936508178711
    8. '    
' → logprob: -15.250936508178711
    9. '``' → logprob: -15.750936508178711
    10. '#print' → logprob: -16.87593650817871

Token 894: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.09236567467451096
    2. 'u' → logprob: -3.0923657417297363
    3. ' =' → logprob: -3.4673657417297363
    4. '=' → logprob: -4.842365741729736
    5. 'urn' → logprob: -6.592365741729736
    6. '[cur' → logprob: -7.217365741729736
    7. '=u' → logprob: -7.967365741729736
    8. 'inue' → logprob: -8.217365264892578
    9. 'ime' → logprob: -8.592365264892578
    10. 'print' → logprob: -9.467365264892578

Token 895: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9062008857727051
    2. ']' → logprob: -1.031200885772705
    3. '[u' → logprob: -2.156200885772705
    4. '=' → logprob: -3.031200885772705
    5. ' =' → logprob: -4.281200885772705
    6. '==' → logprob: -4.906200885772705
    7. '+=' → logprob: -4.906200885772705
    8. '])' → logprob: -4.906200885772705
    9. ':' → logprob: -5.156200885772705
    10. ']+=' → logprob: -5.406200885772705

Token 896: ' already' (ID: 4279)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07012516260147095
    2. 'print' → logprob: -3.320125102996826
    3. ' =' → logprob: -3.945125102996826
    4. '+=' → logprob: -5.195125102996826
    5. 'break' → logprob: -5.820125102996826
    6. '   ' → logprob: -6.695125102996826
    7. ',' → logprob: -8.195125579833984
    8. '
' → logprob: -8.195125579833984
    9. '       ' → logprob: -8.320125579833984
    10. 'return' → logprob: -8.445125579833984

Token 897: ' includes' (ID: 6664)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.30347955226898193
    2. '+=' → logprob: -1.928479552268982
    3. '<=' → logprob: -2.1784796714782715
    4. '-=' → logprob: -6.5534796714782715
    5. '>=' → logprob: -6.5534796714782715
    6. 'print' → logprob: -9.178479194641113
    7. '=min' → logprob: -9.553479194641113
    8. '==' → logprob: -10.553479194641113
    9. '=
' → logprob: -10.803479194641113
    10. '*=' → logprob: -10.928479194641113

Token 898: ' cost' (ID: 3097)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.1467667520046234
    2. 'H' → logprob: -2.3967666625976562
    3. 'X' → logprob: -3.5217666625976562
    4. 'dist' → logprob: -4.396766662597656
    5. '0' → logprob: -6.271766662597656
    6. '+' → logprob: -7.146766662597656
    7. 'the' → logprob: -7.271766662597656
    8. ' cur' → logprob: -9.271766662597656
    9. '(cur' → logprob: -9.896766662597656
    10. '#' → logprob: -10.521766662597656

Token 899: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022697437554597855
    2. 'print' → logprob: -4.272697448730469
    3. '       ' → logprob: -4.772697448730469
    4. 'break' → logprob: -10.897697448730469
    5. '
' → logprob: -11.397697448730469
    6. '```' → logprob: -11.772697448730469
    7. ' print' → logprob: -13.522697448730469
    8. '    
' → logprob: -14.272697448730469
    9. '           ' → logprob: -15.647697448730469
    10. '``' → logprob: -15.897697448730469

Token 900: ' climb' (ID: 27049)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.038144081830978394
    2. 'be' → logprob: -3.413144111633301
    3. 'reach' → logprob: -5.538144111633301
    4. 'arr' → logprob: -8.4131441116333
    5. 'stand' → logprob: -9.0381441116333
    6. 'raise' → logprob: -10.1631441116333
    7. 'print' → logprob: -10.1631441116333
    8. 'finish' → logprob: -10.6631441116333
    9. 'get' → logprob: -10.7881441116333
    10. '```' → logprob: -10.9131441116333

Token 901: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31831735372543335
    2. 'print' → logprob: -1.3183174133300781
    3. '       ' → logprob: -5.318317413330078
    4. 'break' → logprob: -8.943317413330078
    5. '```' → logprob: -11.818317413330078
    6. ' print' → logprob: -13.568317413330078
    7. '
' → logprob: -13.943317413330078
    8. '    
' → logprob: -14.443317413330078
    9. '           ' → logprob: -14.693317413330078
    10. '	print' → logprob: -15.443317413330078

Token 902: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.4755197763442993
    2. 'H' → logprob: -0.9755197763442993
    3. 'the' → logprob: -6.60051965713501
    4. 'X' → logprob: -10.100520133972168
    5. '```' → logprob: -10.600520133972168
    6. ' top' → logprob: -11.850520133972168
    7. 'height' → logprob: -12.100520133972168
    8. 'Top' → logprob: -13.725520133972168
    9. ' H' → logprob: -14.475520133972168
    10. 'N' → logprob: -14.975520133972168

Token 903: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12719644606113434
    2. 'print' → logprob: -2.1271965503692627
    3. '       ' → logprob: -8.377196311950684
    4. '```' → logprob: -11.127196311950684
    5. 'break' → logprob: -11.252196311950684
    6. ' print' → logprob: -12.127196311950684
    7. '
' → logprob: -12.377196311950684
    8. '    
' → logprob: -14.877196311950684
    9. '	print' → logprob: -15.627196311950684
    10. '``' → logprob: -15.627196311950684

Token 904: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4108864665031433
    2. '   ' → logprob: -1.410886526107788
    3. '       ' → logprob: -2.410886526107788
    4. '```' → logprob: -5.785886287689209
    5. 'break' → logprob: -8.660886764526367
    6. ' print' → logprob: -11.035886764526367
    7. '``' → logprob: -11.660886764526367
    8. '	print' → logprob: -12.910886764526367
    9. '           ' → logprob: -13.785886764526367
    10. '
' → logprob: -13.910886764526367

Token 905: ' break' (ID: 2338)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.547789674485102e-05
    2. 'break' (adapté à ' break') → logprob: -10.250035285949707
    3. '```' → logprob: -19.000036239624023
    4. ' print' → logprob: -20.500036239624023
    5. '   ' → logprob: -21.625036239624023
    6. 'return' → logprob: -21.750036239624023
    7. '#print' → logprob: -22.500036239624023
    8. '
' → logprob: -23.625036239624023
    9. '    
' → logprob: -24.000036239624023
    10. '``' → logprob: -24.750036239624023

Token 906: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02601519785821438
    2. '   ' → logprob: -3.776015281677246
    3. ' for' → logprob: -6.151015281677246
    4. '```' → logprob: -7.401015281677246
    5. '
' → logprob: -10.901015281677246
    6. '	for' → logprob: -12.901015281677246
    7. '    
' → logprob: -13.151015281677246
    8. '``' → logprob: -14.401015281677246
    9. 'from' → logprob: -16.27601432800293
    10. 'import' → logprob: -16.40101432800293

Token 907: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3165194094181061
    2. '   ' → logprob: -1.3165193796157837
    3. '```' → logprob: -5.941519260406494
    4. ' for' → logprob: -7.441519260406494
    5. '	for' → logprob: -10.441519737243652
    6. '    
' → logprob: -11.941519737243652
    7. '``' → logprob: -13.941519737243652
    8. '
' → logprob: -14.191519737243652
    9. 'from' → logprob: -16.066518783569336
    10. '   ' → logprob: -16.191518783569336

Token 908: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -4.954393079970032e-05
    2. '   ' → logprob: -10.000049591064453
    3. ' for' → logprob: -12.500049591064453
    4. '```' → logprob: -15.625049591064453
    5. '    
' → logprob: -16.250049591064453
    6. '
' → logprob: -16.500049591064453
    7. '	for' → logprob: -17.750049591064453
    8. '``' → logprob: -20.750049591064453
    9. 'from' → logprob: -21.875049591064453
    10. 'For' → logprob: -23.125049591064453

Token 909: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0005019200034439564
    2. '(v' → logprob: -8.12550163269043
    3. ' v' → logprob: -8.50050163269043
    4. 'idx' → logprob: -14.00050163269043
    5. ' (' → logprob: -15.00050163269043
    6. '```' → logprob: -15.12550163269043
    7. '(u' → logprob: -15.87550163269043
    8. 'vv' → logprob: -16.12550163269043
    9. '   ' → logprob: -16.25050163269043
    10. 'i' → logprob: -16.25050163269043

Token 910: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022200802341103554
    2. 'in' → logprob: -7.127220153808594
    3. ' ,' → logprob: -7.752220153808594
    4. ' in' → logprob: -7.877220153808594
    5. ',v' → logprob: -8.127220153808594
    6. ',u' → logprob: -9.127220153808594
    7. ',
' → logprob: -9.502220153808594
    8. ',in' → logprob: -10.377220153808594
    9. ',t' → logprob: -10.752220153808594
    10. ',(' → logprob: -10.877220153808594

Token 911: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.001241421326994896
    2. 'T' → logprob: -7.001241207122803
    3. 'time' → logprob: -8.501241683959961
    4. 'w' → logprob: -9.876241683959961
    5. ' t' → logprob: -10.376241683959961
    6. 'cost' → logprob: -10.376241683959961
    7. '`t' → logprob: -12.126241683959961
    8. '_t' → logprob: -13.001241683959961
    9. '```' → logprob: -14.001241683959961
    10. 'graph' → logprob: -14.126241683959961

Token 912: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.054884541779756546
    2. 'in' → logprob: -2.929884433746338
    3. ' ' → logprob: -14.304884910583496
    4. '	in' → logprob: -14.929884910583496
    5. '_in' → logprob: -15.429884910583496
    6. 's' → logprob: -15.804884910583496
    7. ')' → logprob: -15.929884910583496
    8. ',' → logprob: -16.05488395690918
    9. '  ' → logprob: -16.17988395690918
    10. 'v' → logprob: -16.42988395690918

Token 913: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -1.8624639324116288e-06
    2. ' graph' → logprob: -13.250001907348633
    3. '	graph' → logprob: -19.750001907348633
    4. '(graph' → logprob: -20.500001907348633
    5. '_graph' → logprob: -23.000001907348633
    6. '.graph' → logprob: -24.000001907348633
    7. 'Graph' → logprob: -25.625001907348633
    8. 'graphql' → logprob: -25.625001907348633
    9. 'graphs' → logprob: -26.375001907348633
    10. 'graphic' → logprob: -26.750001907348633

Token 914: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -5.0259150157216936e-05
    2. 'in' → logprob: -10.00005054473877
    3. ' in' → logprob: -13.00005054473877
    4. 'u' → logprob: -13.50005054473877
    5. '[' → logprob: -14.75005054473877
    6. '(u' → logprob: -15.12505054473877
    7. '
' → logprob: -15.62505054473877
    8. '[in' → logprob: -15.87505054473877
    9. '```' → logprob: -16.875049591064453
    10. '[v' → logprob: -17.000049591064453

Token 915: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006345495581626892
    2. '):
' → logprob: -5.131345272064209
    3. ':' → logprob: -8.381345748901367
    4. ']:' → logprob: -8.881345748901367
    5. ']):' → logprob: -10.881345748901367
    6. '   ' → logprob: -11.256345748901367
    7. ')' → logprob: -12.131345748901367
    8. '):
' → logprob: -12.381345748901367
    9. '）：' → logprob: -13.131345748901367
    10. ' ):' → logprob: -13.756345748901367

Token 916: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00976293720304966
    2. '```' → logprob: -4.759762763977051
    3. '   ' → logprob: -6.884762763977051
    4. ' candidates' → logprob: -10.50976276397705
    5. '_candidates' → logprob: -10.88476276397705
    6. '     ' → logprob: -11.13476276397705
    7. '``' → logprob: -11.13476276397705
    8. '        
' → logprob: -11.38476276397705
    9. '	   ' → logprob: -12.38476276397705
    10. 'candidate' → logprob: -12.38476276397705

Token 917: ' #' (ID: 1069)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3194074034690857
    2. '       ' → logprob: -2.0694074630737305
    3. 'u' → logprob: -2.8194074630737305
    4. '```' → logprob: -3.4444074630737305
    5. 'h' → logprob: -3.6944074630737305
    6. 'for' → logprob: -4.9444074630737305
    7. 'options' → logprob: -5.4444074630737305
    8. 'cand' → logprob: -5.6944074630737305
    9. 'possible' → logprob: -5.8194074630737305
    10. 'fe' → logprob: -5.9444074630737305

Token 918: ' feasible' (ID: 58866)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.12329535186290741
    2. 'H' → logprob: -3.373295307159424
    3. 'h' → logprob: -3.498295307159424
    4. 'for' → logprob: -4.623295307159424
    5. 'options' → logprob: -4.998295307159424
    6. 'cand' → logprob: -4.998295307159424
    7. 'candidate' → logprob: -5.498295307159424
    8. 'hu' → logprob: -5.498295307159424
    9. 'fe' → logprob: -5.873295307159424
    10. 'possible' → logprob: -5.873295307159424

Token 919: ' h' (ID: 312)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36229848861694336
    2. 'h' → logprob: -2.2372984886169434
    3. 'u' → logprob: -2.4872984886169434
    4. '_u' → logprob: -2.7372984886169434
    5. '
' → logprob: -4.362298488616943
    6. '_h' → logprob: -4.862298488616943
    7. 't' → logprob: -4.987298488616943
    8. '        
' → logprob: -5.487298488616943
    9. '_candidates' → logprob: -5.737298488616943
    10. 'range' → logprob: -6.487298488616943

Token 920: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -0.024387773126363754
    2. '_us' → logprob: -4.024387836456299
    3. '_' → logprob: -5.649387836456299
    4. '_candidates' → logprob: -7.024387836456299
    5. 's' → logprob: -7.649387836456299
    6. 'us' → logprob: -7.899387836456299
    7. ' =' → logprob: -8.77438735961914
    8. 'u' → logprob: -8.77438735961914
    9. '_s' → logprob: -9.14938735961914
    10. '_t' → logprob: -9.64938735961914

Token 921: ' range' (ID: 3352)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2921784222126007
    2. '=' → logprob: -2.1671783924102783
    3. '       ' → logprob: -2.5421783924102783
    4. ':' → logprob: -3.7921783924102783
    5. '_candidates' → logprob: -4.042178630828857
    6. ' candidates' → logprob: -4.917178630828857
    7. '```' → logprob: -5.792178630828857
    8. '        
' → logprob: -6.917178630828857
    9. 'candidate' → logprob: -7.042178630828857
    10. 'c' → logprob: -7.542178630828857

Token 922: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3440254032611847
    2. ' =' → logprob: -1.8440253734588623
    3. ':
' → logprob: -2.7190253734588623
    4. '=' → logprob: -3.0940253734588623
    5. '       ' → logprob: -4.094025611877441
    6. '
' → logprob: -6.969025611877441
    7. ':

' → logprob: -7.344025611877441
    8. '        
' → logprob: -7.469025611877441
    9. '[' → logprob: -7.594025611877441
    10. '```' → logprob: -7.969025611877441

Token 923: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5654188394546509
    2. '       ' → logprob: -1.6904188394546509
    3. ' =' → logprob: -1.8154188394546509
    4. '=' → logprob: -3.0654187202453613
    5. ':
' → logprob: -3.6904187202453613
    6. '[' → logprob: -5.190418720245361
    7. ',' → logprob: -6.440418720245361
    8. '        ' → logprob: -6.815418720245361
    9. ' :' → logprob: -7.190418720245361
    10. '```' → logprob: -7.315418720245361

Token 924: ' low' (ID: 4465)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' (adapté à ' low') → logprob: -0.9657259583473206
    2. 'fe' → logprob: -1.9657258987426758
    3. '       ' → logprob: -2.340725898742676
    4. 'lower' → logprob: -2.465725898742676
    5. 'h' → logprob: -2.965725898742676
    6. 'possible' → logprob: -3.215725898742676
    7. '```' → logprob: -3.465725898742676
    8. 'c' → logprob: -3.715725898742676
    9. ' feasible' → logprob: -3.715725898742676
    10. 'max' → logprob: -3.840725898742676

Token 925: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519625425338745
    2. ' =' → logprob: -1.5019625425338745
    3. ',' → logprob: -10.501962661743164
    4. '=max' → logprob: -12.251962661743164
    5. 's' → logprob: -14.626962661743164
    6. '＝' → logprob: -15.376962661743164
    7. '_candidates' → logprob: -16.376962661743164
    8. 'max' → logprob: -16.626962661743164
    9. ')' → logprob: -16.876962661743164
    10. '_' → logprob: -17.001962661743164

Token 926: ' t' (ID: 260)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.08711494505405426
    2. 't' → logprob: -2.7121150493621826
    3. ' max' → logprob: -4.0871148109436035
    4. ' t' → logprob: -8.337115287780762
    5. '   ' → logprob: -13.337115287780762
    6. 'min' → logprob: -13.712115287780762
    7. '(max' → logprob: -14.462115287780762
    8. '	max' → logprob: -14.587115287780762
    9. '0' → logprob: -15.462115287780762
    10. '=max' → logprob: -15.462115287780762

Token 927: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18929214775562286
    2. ',' → logprob: -2.1892921924591064
    3. ' =' → logprob: -3.6892921924591064
    4. '=' → logprob: -3.8142921924591064
    5. ' if' → logprob: -4.939291954040527
    6. 'if' → logprob: -6.314291954040527
    7. ',
' → logprob: -6.939291954040527
    8. '#' → logprob: -7.064291954040527
    9. '<|end|>' → logprob: -7.189291954040527
    10. '       ' → logprob: -7.689291954040527

Token 928: '       ' (ID: 309)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' → logprob: -0.131395623087883
    2. '       ' → logprob: -2.8813955783843994
    3. ' high' → logprob: -3.3813955783843994
    4. ',' → logprob: -4.0063958168029785
    5. '
' → logprob: -4.5063958168029785
    6. 'up' → logprob: -6.2563958168029785
    7. '        
' → logprob: -8.13139533996582
    8. '```' → logprob: -8.38139533996582
    9. '(high' → logprob: -8.38139533996582
    10. '.high' → logprob: -8.50639533996582

Token 929: ' high' (ID: 1932)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' (adapté à ' high') → logprob: -0.008760282769799232
    2. 'up' → logprob: -4.883760452270508
    3. ' high' → logprob: -7.383760452270508
    4. 'hi' → logprob: -7.758760452270508
    5. 'upp' → logprob: -9.758760452270508
    6. 'if' → logprob: -11.258760452270508
    7. '0' → logprob: -11.883760452270508
    8. 'upper' → logprob: -12.258760452270508
    9. 'upt' → logprob: -12.508760452270508
    10. '```' → logprob: -12.633760452270508

Token 930: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022524237632751
    2. ' =' → logprob: -1.91022527217865
    3. '=min' → logprob: -13.910224914550781
    4. ',' → logprob: -16.66022491455078
    5. '=max' → logprob: -17.16022491455078
    6. '=
' → logprob: -17.28522491455078
    7. 'min' → logprob: -18.41022491455078
    8. '＝' → logprob: -18.53522491455078
    9. ')' → logprob: -19.16022491455078
    10. '=

' → logprob: -19.41022491455078

Token 931: ' H' (ID: 487)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.007955922745168209
    2. 'H' → logprob: -4.882956027984619
    3. ' min' → logprob: -8.007955551147461
    4. 'max' → logprob: -11.257955551147461
    5. '(min' → logprob: -13.632955551147461
    6. ' H' → logprob: -14.132955551147461
    7. '[min' → logprob: -14.257955551147461
    8. '=min' → logprob: -15.132955551147461
    9. '	min' → logprob: -15.382955551147461
    10. 'minimum' → logprob: -15.632955551147461

Token 932: '[v' (ID: 36561)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.9862216504407115e-05
    2. '[' → logprob: -11.125020027160645
    3. 'u' → logprob: -12.375020027160645
    4. '[v' → logprob: -14.125020027160645
    5. '(u' → logprob: -16.000019073486328
    6. '[h' → logprob: -17.625019073486328
    7. '<u' → logprob: -17.875019073486328
    8. '```' → logprob: -18.000019073486328
    9. ',u' → logprob: -18.750019073486328
    10. '	u' → logprob: -19.125019073486328

Token 933: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.29641059041023254
    2. ']+' → logprob: -1.6714105606079102
    3. '+' → logprob: -2.79641056060791
    4. ' +' → logprob: -5.17141056060791
    5. ')' → logprob: -6.92141056060791
    6. ')+' → logprob: -7.79641056060791
    7. '+t' → logprob: -7.92141056060791
    8. '+]' → logprob: -11.17141056060791
    9. ' ]' → logprob: -11.29641056060791
    10. '])' → logprob: -11.42141056060791

Token 934: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0440804958343506
    2. 'if' → logprob: -1.4190804958343506
    3. ' if' → logprob: -1.5440804958343506
    4. ' =' → logprob: -2.0440804958343506
    5. '=' → logprob: -3.0440804958343506
    6. '       ' → logprob: -4.91908073425293
    7. ',' → logprob: -6.41908073425293
    8. ')' → logprob: -6.91908073425293
    9. '=min' → logprob: -7.04408073425293
    10. '+' → logprob: -7.41908073425293

Token 935: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -6.392202976712724e-06
    2. ' t' → logprob: -12.000006675720215
    3. '_t' → logprob: -16.1250057220459
    4. '	t' → logprob: -17.1250057220459
    5. '`t' → logprob: -18.2500057220459
    6. ')t' → logprob: -19.0000057220459
    7. '   ' → logprob: -19.1250057220459
    8. ' ' → logprob: -19.2500057220459
    9. '<|end|>' → logprob: -19.5000057220459
    10. '+t' → logprob: -20.3750057220459

Token 936: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5687827467918396
    2. '
' → logprob: -1.4437828063964844
    3. ' if' → logprob: -2.4437828063964844
    4. 'if' → logprob: -2.9437828063964844
    5. 'high' → logprob: -3.1937828063964844
    6. ' high' → logprob: -5.318782806396484
    7. 'low' → logprob: -5.318782806396484
    8. '```' → logprob: -5.943782806396484
    9. ',' → logprob: -6.693782806396484
    10. '        
' → logprob: -6.943782806396484

Token 937: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0960511565208435
    2. '```' → logprob: -2.5960512161254883
    3. ',' → logprob: -5.346051216125488
    4. ' if' → logprob: -5.721051216125488
    5. 'high' → logprob: -6.346051216125488
    6. 'u' → logprob: -6.971051216125488
    7. 'low' → logprob: -7.471051216125488
    8. 'possible' → logprob: -7.471051216125488
    9. ')' → logprob: -7.596051216125488
    10. 'max' → logprob: -7.721051216125488

Token 938: ' high' (ID: 1932)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.40138134360313416
    2. 'high' (adapté à ' high') → logprob: -1.9013813734054565
    3. 'low' → logprob: -2.651381254196167
    4. '       ' → logprob: -3.026381254196167
    5. 'if' → logprob: -3.401381254196167
    6. 'possible' → logprob: -4.901381492614746
    7. 'for' → logprob: -4.901381492614746
    8. 'h' → logprob: -5.401381492614746
    9. 'fe' → logprob: -6.401381492614746
    10. 'cand' → logprob: -6.901381492614746

Token 939: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023245595395565033
    2. ' =' → logprob: -3.7732455730438232
    3. '=min' → logprob: -16.023244857788086
    4. '＝' → logprob: -19.523244857788086
    5. '=
' → logprob: -19.648244857788086
    6. '   ' → logprob: -19.648244857788086
    7. ',' → logprob: -20.023244857788086
    8. ' ' → logprob: -20.648244857788086
    9. ')' → logprob: -20.898244857788086
    10. '.=' → logprob: -21.023244857788086

Token 940: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0011703446507453918
    2. ' min' → logprob: -6.7511701583862305
    3. '	min' → logprob: -16.376171112060547
    4. '=min' → logprob: -18.876171112060547
    5. '(min' → logprob: -19.251171112060547
    6. '[min' → logprob: -20.751171112060547
    7. ',min' → logprob: -21.376171112060547
    8. 'max' → logprob: -22.001171112060547
    9. '   ' → logprob: -22.251171112060547
    10. '_min' → logprob: -22.376171112060547

Token 941: '(high' (ID: 126087)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.005270991940051317
    2. '(high' → logprob: -5.255270957946777
    3. 'high' → logprob: -10.880270957946777
    4. 'H' → logprob: -11.255270957946777
    5. '(' → logprob: -12.255270957946777
    6. '(low' → logprob: -14.505270957946777
    7. '(
' → logprob: -16.380271911621094
    8. ' high' → logprob: -16.755271911621094
    9. 'High' → logprob: -17.005271911621094
    10. ' (' → logprob: -17.755271911621094

Token 942: ',' (ID: 11)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.2525971531867981
    2. ',' → logprob: -1.5025970935821533
    3. '(' → logprob: -7.377597332000732
    4. ',H' → logprob: -11.002596855163574
    5. ' (' → logprob: -11.752596855163574
    6. '(high' → logprob: -12.252596855163574
    7. ' ,' → logprob: -12.502596855163574
    8. '(
' → logprob: -12.877596855163574
    9. ')' → logprob: -12.877596855163574
    10. ',(' → logprob: -13.377596855163574

Token 943: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -9.014684110297821e-06
    2. ' H' → logprob: -11.625008583068848
    3. '   ' → logprob: -18.625009536743164
    4. '(H' → logprob: -19.000009536743164
    5. ')' → logprob: -19.375009536743164
    6. '	H' → logprob: -20.125009536743164
    7. ' ' → logprob: -22.000009536743164
    8. '       ' → logprob: -22.000009536743164
    9. 'Hi' → logprob: -22.250009536743164
    10. '`' → logprob: -22.250009536743164

Token 944: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.7432603272027336e-06
    2. 'u' → logprob: -13.375001907348633
    3. '[' → logprob: -16.625001907348633
    4. '
' → logprob: -18.500001907348633
    5. ' [' → logprob: -18.750001907348633
    6. '```' → logprob: -19.000001907348633
    7. '[
' → logprob: -19.875001907348633
    8. '[v' → logprob: -20.500001907348633
    9. '(u' → logprob: -20.500001907348633
    10. '   ' → logprob: -20.625001907348633

Token 945: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00535743311047554
    2. '[u' → logprob: -5.255357265472412
    3. '])
' → logprob: -9.13035774230957
    4. ')' → logprob: -11.88035774230957
    5. ']' → logprob: -13.00535774230957
    6. ' ])' → logprob: -13.50535774230957
    7. '])

' → logprob: -13.63035774230957
    8. '])
' → logprob: -14.13035774230957
    9. 'u' → logprob: -14.13035774230957
    10. '   ' → logprob: -14.75535774230957

Token 946: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13069409132003784
    2. 'c' → logprob: -2.5056941509246826
    3. 'for' → logprob: -3.7556941509246826
    4. '```' → logprob: -4.3806939125061035
    5. ' candidates' → logprob: -6.6306939125061035
    6. '        
' → logprob: -7.1306939125061035
    7. 'candidate' → logprob: -7.5056939125061035
    8. ' for' → logprob: -7.6306939125061035
    9. '_candidates' → logprob: -7.7556939125061035
    10. 'best' → logprob: -7.8806939125061035

Token 947: ' low' (ID: 4465)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.039413195103406906
    2. 'for' → logprob: -3.5394132137298584
    3. '       ' → logprob: -4.789412975311279
    4. 'options' → logprob: -7.789412975311279
    5. '```' → logprob: -8.289413452148438
    6. 'cand' → logprob: -8.289413452148438
    7. 'candidate' → logprob: -9.039413452148438
    8. 'best' → logprob: -9.414413452148438
    9. 'possible' → logprob: -9.664413452148438
    10. ' candidates' → logprob: -9.789413452148438

Token 948: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.013676460832357407
    2. ' =' → logprob: -4.388676643371582
    3. '=max' → logprob: -6.763676643371582
    4. '=min' → logprob: -12.138676643371582
    5. '=
' → logprob: -12.763676643371582
    6. 'max' → logprob: -13.888676643371582
    7. ',' → logprob: -14.263676643371582
    8. '=int' → logprob: -14.638676643371582
    9. '>=' → logprob: -15.513676643371582
    10. '+=' → logprob: -15.513676643371582

Token 949: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0010373335098847747
    2. 't' → logprob: -7.001037120819092
    3. ' max' → logprob: -9.12603759765625
    4. '0' → logprob: -11.25103759765625
    5. 'min' → logprob: -12.87603759765625
    6. '(max' → logprob: -14.25103759765625
    7. '=max' → logprob: -15.62603759765625
    8. '	max' → logprob: -15.75103759765625
    9. '   ' → logprob: -15.75103759765625
    10. ' t' → logprob: -16.00103759765625

Token 950: '(low' (ID: 119835)
  Prédit: '(low'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(low' → logprob: -0.015286923386156559
    2. '(' → logprob: -4.765286922454834
    3. '(t' → logprob: -5.015286922454834
    4. '(high' → logprob: -12.140287399291992
    5. 'low' → logprob: -12.265287399291992
    6. '(lo' → logprob: -13.515287399291992
    7. '(lower' → logprob: -13.765287399291992
    8. '0' → logprob: -13.890287399291992
    9. 't' → logprob: -15.015287399291992
    10. '(
' → logprob: -15.390287399291992

Token 951: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7379999160766602
    2. '(t' → logprob: -0.7379999160766602
    3. '(low' → logprob: -3.23799991607666
    4. ',' → logprob: -5.73799991607666
    5. '0' → logprob: -6.86299991607666
    6. '(
' → logprob: -8.98799991607666
    7. ',t' → logprob: -9.86299991607666
    8. 't' → logprob: -9.98799991607666
    9. ')' → logprob: -10.61299991607666
    10. ' (' → logprob: -10.61299991607666

Token 952: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007624968886375427
    2. 't' → logprob: -4.882625102996826
    3. '1' → logprob: -11.132624626159668
    4. ' ' → logprob: -13.132624626159668
    5. ' t' → logprob: -14.257624626159668
    6. ')' → logprob: -14.757624626159668
    7. '(t' → logprob: -14.882624626159668
    8. ')t' → logprob: -15.945124626159668
    9. '(' → logprob: -16.070125579833984
    10. '```' → logprob: -16.195125579833984

Token 953: '0' (ID: 15)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.4741382896900177
    2. '0' → logprob: -0.9741382598876953
    3. '1' → logprob: -10.099138259887695
    4. ' t' → logprob: -11.099138259887695
    5. '(t' → logprob: -13.349138259887695
    6. ' ' → logprob: -14.099138259887695
    7. ')t' → logprob: -14.224138259887695
    8. '`t' → logprob: -14.724138259887695
    9. ')' → logprob: -15.224138259887695
    10. '[t' → logprob: -15.536638259887695

Token 954: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02780982106924057
    2. '       ' → logprob: -3.7778098583221436
    3. ')
' → logprob: -5.4028096199035645
    4. ' )' → logprob: -10.777810096740723
    5. '<|end|>' → logprob: -11.402810096740723
    6. ',' → logprob: -11.777810096740723
    7. '
' → logprob: -12.777810096740723
    8. '```' → logprob: -13.277810096740723
    9. '        
' → logprob: -14.277810096740723
    10. ')
' → logprob: -14.277810096740723

Token 955: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3553980886936188
    2. 'c' → logprob: -1.2303980588912964
    3. '```' → logprob: -6.105398178100586
    4. 'candidate' → logprob: -6.855398178100586
    5. ' candidates' → logprob: -7.105398178100586
    6. '        
' → logprob: -7.355398178100586
    7. 'possible' → logprob: -7.605398178100586
    8. 'best' → logprob: -7.980398178100586
    9. 'for' → logprob: -7.980398178100586
    10. '_candidates' → logprob: -7.980398178100586

Token 956: ' if' (ID: 538)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.004865480586886406
    2. 'for' → logprob: -5.879865646362305
    3. '       ' → logprob: -6.754865646362305
    4. 'cand' → logprob: -8.129865646362305
    5. 'options' → logprob: -8.754865646362305
    6. 'best' → logprob: -9.129865646362305
    7. '```' → logprob: -9.254865646362305
    8. 'candidate' → logprob: -9.504865646362305
    9. ' candidates' → logprob: -9.754865646362305
    10. 'possible' → logprob: -10.754865646362305

Token 957: ' low' (ID: 4465)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.07983457297086716
    2. ' low' → logprob: -2.579834461212158
    3. 'high' → logprob: -7.079834461212158
    4. ' high' → logprob: -9.579834938049316
    5. 'dist' → logprob: -10.704834938049316
    6. '   ' → logprob: -12.579834938049316
    7. '       ' → logprob: -13.079834938049316
    8. '(low' → logprob: -13.204834938049316
    9. ' dist' → logprob: -14.329834938049316
    10. 'not' → logprob: -14.704834938049316

Token 958: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.478336364030838
    2. ' >' → logprob: -0.9783363342285156
    3. '<=' → logprob: -5.853336334228516
    4. ' <=' → logprob: -6.603336334228516
    5. '>=' → logprob: -11.353336334228516
    6. '```' → logprob: -12.103336334228516
    7. ' >=' → logprob: -12.853336334228516
    8. '()>' → logprob: -13.853336334228516
    9. '>
' → logprob: -14.353336334228516
    10. ' >
' → logprob: -14.728336334228516

Token 959: ' high' (ID: 1932)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' → logprob: -9.615255839889869e-05
    2. ' high' → logprob: -9.250096321105957
    3. 'High' → logprob: -19.00009536743164
    4. '   ' → logprob: -20.00009536743164
    5. '(high' → logprob: -20.12509536743164
    6. '
' → logprob: -20.37509536743164
    7. '.high' → logprob: -20.75009536743164
    8. ' ' → logprob: -21.25009536743164
    9. '高' → logprob: -21.25009536743164
    10. '_high' → logprob: -22.12509536743164

Token 960: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24640798568725586
    2. '           ' → logprob: -1.7464079856872559
    3. ':
' → logprob: -3.371407985687256
    4. 'continue' → logprob: -5.246407985687256
    5. ' continue' → logprob: -5.496407985687256
    6. '       ' → logprob: -9.121408462524414
    7. '	continue' → logprob: -9.496408462524414
    8. ' continues' → logprob: -10.496408462524414
    9. '_continue' → logprob: -11.121408462524414
    10. ',' → logprob: -11.371408462524414

Token 961: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004785157274454832
    2. 'continue' → logprob: -5.379785060882568
    3. ' continue' → logprob: -9.004785537719727
    4. '```' → logprob: -11.379785537719727
    5. '       ' → logprob: -11.629785537719727
    6. '   ' → logprob: -11.629785537719727
    7. '               ' → logprob: -12.254785537719727
    8. '	continue' → logprob: -12.379785537719727
    9. '		' → logprob: -13.129785537719727
    10. '	       ' → logprob: -13.629785537719727

Token 962: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.1022576317191124
    2. '           ' → logprob: -2.35225772857666
    3. ' continue' → logprob: -6.35225772857666
    4. '               ' → logprob: -8.22725772857666
    5. '	continue' → logprob: -10.60225772857666
    6. '   ' → logprob: -11.72725772857666
    7. '```' → logprob: -12.60225772857666
    8. '       ' → logprob: -13.72725772857666
    9. '_continue' → logprob: -13.97725772857666
    10. '		' → logprob: -15.47725772857666

Token 963: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05542243644595146
    2. '```' → logprob: -3.55542254447937
    3. '        
' → logprob: -4.430422306060791
    4. ' candidates' → logprob: -4.805422306060791
    5. '_candidates' → logprob: -5.930422306060791
    6. ' for' → logprob: -7.680422306060791
    7. 'candidate' → logprob: -7.680422306060791
    8. 'for' → logprob: -7.930422306060791
    9. 'tokens' → logprob: -8.05542278289795
    10. '#' → logprob: -8.93042278289795

Token 964: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.054708268493413925
    2. '```' → logprob: -3.179708242416382
    3. '        
' → logprob: -5.304708480834961
    4. '
' → logprob: -6.429708480834961
    5. '_candidates' → logprob: -6.429708480834961
    6. ' candidates' → logprob: -6.929708480834961
    7. 'candidate' → logprob: -7.429708480834961
    8. 'tokens' → logprob: -8.179708480834961
    9. '``' → logprob: -8.304708480834961
    10. 'possible' → logprob: -8.304708480834961

Token 965: ' no' (ID: 860)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.009328414686024189
    2. '       ' → logprob: -4.884328365325928
    3. ' continue' → logprob: -6.884328365325928
    4. 'next' → logprob: -8.009328842163086
    5. '   ' → logprob: -8.884328842163086
    6. '           ' → logprob: -9.009328842163086
    7. '#' → logprob: -10.134328842163086
    8. '```' → logprob: -10.509328842163086
    9. 'pass' → logprob: -11.634328842163086
    10. '
' → logprob: -12.134328842163086

Token 966: ' feasible' (ID: 58866)
  Prédit: 'fe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fe' → logprob: -0.16729292273521423
    2. ' feasible' → logprob: -1.9172929525375366
    3. 'possible' → logprob: -6.042293071746826
    4. 'fly' → logprob: -6.167293071746826
    5. 'valid' → logprob: -6.542293071746826
    6. ' valid' → logprob: -7.292293071746826
    7. ' possible' → logprob: -9.417292594909668
    8. 'f' → logprob: -9.417292594909668
    9. '```' → logprob: -9.417292594909668
    10. 'flight' → logprob: -9.542292594909668

Token 967: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.08339690417051315
    2. 'u' → logprob: -3.2083969116210938
    3. ' h' → logprob: -4.333396911621094
    4. 'height' → logprob: -4.583396911621094
    5. '_u' → logprob: -5.333396911621094
    6. '_h' → logprob: -5.333396911621094
    7. '   ' → logprob: -6.958396911621094
    8. 'continue' → logprob: -7.208396911621094
    9. 'for' → logprob: -7.333396911621094
    10. '```' → logprob: -7.333396911621094

Token 968: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -0.009242776781320572
    2. '       ' → logprob: -5.634243011474609
    3. 'u' → logprob: -5.884243011474609
    4. '           ' → logprob: -6.134243011474609
    5. '   ' → logprob: -8.38424301147461
    6. '               ' → logprob: -8.63424301147461
    7. 'if' → logprob: -9.00924301147461
    8. 'continue' → logprob: -10.25924301147461
    9. '```' → logprob: -10.50924301147461
    10. 'range' → logprob: -11.75924301147461

Token 969: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01461812760680914
    2. '```' → logprob: -4.639617919921875
    3. '        
' → logprob: -6.139617919921875
    4. 'for' → logprob: -7.014617919921875
    5. '_candidates' → logprob: -7.889617919921875
    6. ' candidates' → logprob: -7.889617919921875
    7. 'candidate' → logprob: -8.264617919921875
    8. ' for' → logprob: -8.889617919921875
    9. 'tokens' → logprob: -9.264617919921875
    10. '#' → logprob: -9.389617919921875

Token 970: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015870943665504456
    2. '```' → logprob: -4.265871047973633
    3. '        
' → logprob: -7.015871047973633
    4. 'for' → logprob: -8.390871047973633
    5. 'candidate' → logprob: -8.890871047973633
    6. '_candidates' → logprob: -9.265871047973633
    7. 'tokens' → logprob: -9.515871047973633
    8. 'possible' → logprob: -9.640871047973633
    9. ' candidates' → logprob: -10.265871047973633
    10. '``' → logprob: -10.390871047973633

Token 971: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.029321562498807907
    2. '       ' → logprob: -4.154321670532227
    3. 'for' → logprob: -4.779321670532227
    4. 'cand' → logprob: -6.404321670532227
    5. 'options' → logprob: -7.279321670532227
    6. 'def' → logprob: -7.279321670532227
    7. '```' → logprob: -7.279321670532227
    8. ' candidates' → logprob: -8.279321670532227
    9. 'res' → logprob: -8.654321670532227
    10. 'candidate' → logprob: -8.779321670532227

Token 972: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692894041538239
    2. '=' → logprob: -2.1269290447235107
    3. '＝' → logprob: -15.50192928314209
    4. '=[' → logprob: -15.50192928314209
    5. ':' → logprob: -15.87692928314209
    6. ' =[' → logprob: -15.87692928314209
    7. ')' → logprob: -16.251928329467773
    8. '=[]' → logprob: -17.126928329467773
    9. '=[
' → logprob: -17.626928329467773
    10. 's' → logprob: -17.751928329467773

Token 973: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3884585201740265
    2. '[t' → logprob: -1.138458490371704
    3. '[c' → logprob: -7.388458728790283
    4. '[]
' → logprob: -7.388458728790283
    5. '[max' → logprob: -9.513458251953125
    6. '[]' → logprob: -9.763458251953125
    7. '[min' → logprob: -9.888458251953125
    8. '[l' → logprob: -10.013458251953125
    9. '[
' → logprob: -10.138458251953125
    10. '{' → logprob: -10.638458251953125

Token 974: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5721285939216614
    2. 'for' → logprob: -1.4471285343170166
    3. 'c' → logprob: -1.6971285343170166
    4. ' for' → logprob: -4.197128772735596
    5. ' candidates' → logprob: -6.447128772735596
    6. '        
' → logprob: -8.947128295898438
    7. '   ' → logprob: -9.197128295898438
    8. '
' → logprob: -9.447128295898438
    9. '#' → logprob: -9.572128295898438
    10. '```' → logprob: -9.572128295898438

Token 975: ' #' (ID: 1069)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.48218870162963867
    2. 'for' → logprob: -0.9821887016296387
    3. '       ' → logprob: -4.857188701629639
    4. '```' → logprob: -9.107189178466797
    5. '#' (adapté à ' #') → logprob: -9.732189178466797
    6. '
' → logprob: -10.607189178466797
    7. ' for' → logprob: -10.732189178466797
    8. 'h' → logprob: -10.982189178466797
    9. ' candidates' → logprob: -11.232189178466797
    10. '   ' → logprob: -11.732189178466797

Token 976: ' candidate' (ID: 17098)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08966269344091415
    2. 'c' → logprob: -2.464662790298462
    3. 'def' → logprob: -8.089662551879883
    4. '#' → logprob: -8.214662551879883
    5. 'h' → logprob: -9.339662551879883
    6. 'candidate' → logprob: -10.714662551879883
    7. 'hc' → logprob: -12.339662551879883
    8. 'options' → logprob: -12.464662551879883
    9. 'if' → logprob: -12.589662551879883
    10. ' candidates' → logprob: -12.714662551879883

Token 977: ' ' (ID: 220)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8224277496337891
    2. 's' → logprob: -1.447427749633789
    3. '.append' → logprob: -1.572427749633789
    4. ' =' → logprob: -3.322427749633789
    5. '_candidates' → logprob: -3.447427749633789
    6. '=' → logprob: -3.822427749633789
    7. 'for' → logprob: -4.322427749633789
    8. 'h' → logprob: -5.572427749633789
    9. ' for' → logprob: -5.822427749633789
    10. ' candidates' → logprob: -6.072427749633789

Token 978: '1' (ID: 16)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.12738296389579773
    2. 'c' → logprob: -2.50238299369812
    3. 'h' → logprob: -4.377382755279541
    4. 'for' → logprob: -4.877382755279541
    5. '=' → logprob: -5.252382755279541
    6. 'append' → logprob: -5.377382755279541
    7. '.extend' → logprob: -6.002382755279541
    8. '_candidates' → logprob: -6.377382755279541
    9. ' =' → logprob: -7.252382755279541
    10. 'hs' → logprob: -8.0023832321167

Token 979: ':' (ID: 25)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2871803939342499
    2. '=' → logprob: -1.6621804237365723
    3. '.append' → logprob: -3.4121804237365723
    4. ' =' → logprob: -4.287180423736572
    5. 'low' → logprob: -5.037180423736572
    6. '=c' → logprob: -5.912180423736572
    7. 'for' → logprob: -6.787180423736572
    8. '_candidates' → logprob: -7.037180423736572
    9. ' candidates' → logprob: -7.537180423736572
    10. 'h' → logprob: -7.662180423736572

Token 980: ' low' (ID: 4465)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.623852014541626
    2. 'c' → logprob: -1.373852014541626
    3. 'h' → logprob: -1.998852014541626
    4. 'hu' → logprob: -3.623852014541626
    5. 't' → logprob: -3.748852014541626
    6. 'cu' → logprob: -4.748851776123047
    7. 'tu' → logprob: -5.248851776123047
    8. 'for' → logprob: -5.248851776123047
    9. ' low' → logprob: -6.498851776123047
    10. 'lu' → logprob: -6.873851776123047

Token 981: '
' (ID: 198)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.009424306452274323
    2. '=' → logprob: -5.884424209594727
    3. ' =' → logprob: -6.134424209594727
    4. '
' → logprob: -6.884424209594727
    5. ')
' → logprob: -6.884424209594727
    6. '_candidates' → logprob: -6.884424209594727
    7. ' candidates' → logprob: -7.009424209594727
    8. ',' → logprob: -8.634424209594727
    9. ')' → logprob: -9.759424209594727
    10. '=c' → logprob: -9.884424209594727

Token 982: '       ' (ID: 309)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2922191619873047
    2. '       ' → logprob: -1.4172191619873047
    3. '```' → logprob: -5.792219161987305
    4. '
' → logprob: -6.292219161987305
    5. 'for' → logprob: -6.292219161987305
    6. '.append' → logprob: -6.542219161987305
    7. ' candidates' → logprob: -7.292219161987305
    8. '   ' → logprob: -7.667219161987305
    9. '_candidates' → logprob: -7.917219161987305
    10. '``' → logprob: -8.042219161987305

Token 983: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.02773376740515232
    2. 'h' → logprob: -4.15273380279541
    3. 'for' → logprob: -5.15273380279541
    4. 'if' → logprob: -5.90273380279541
    5. 'hu' → logprob: -6.52773380279541
    6. 'low' → logprob: -8.27773380279541
    7. ' candidates' → logprob: -8.65273380279541
    8. '```' → logprob: -8.90273380279541
    9. 'candidate' → logprob: -9.02773380279541
    10. 'cand' → logprob: -9.15273380279541

Token 984: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.816093228830141e-06
    2. '.' → logprob: -13.87500286102295
    3. '.c' → logprob: -14.00000286102295
    4. ').' → logprob: -14.62500286102295
    5. ' .' → logprob: -15.62500286102295
    6. '.extend' → logprob: -16.000001907348633
    7. '.app' → logprob: -16.500001907348633
    8. 'append' → logprob: -16.875001907348633
    9. '=' → logprob: -17.000001907348633
    10. 'c' → logprob: -17.625001907348633

Token 985: '(low' (ID: 119835)
  Prédit: '(low'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(low' → logprob: -0.14307671785354614
    2. 'low' → logprob: -2.0180766582489014
    3. '((' → logprob: -8.51807689666748
    4. '(' → logprob: -9.01807689666748
    5. ' low' → logprob: -10.26807689666748
    6. ' (' → logprob: -11.39307689666748
    7. '(abs' → logprob: -12.01807689666748
    8. '(c' → logprob: -12.39307689666748
    9. '(int' → logprob: -12.89307689666748
    10. '(max' → logprob: -12.89307689666748

Token 986: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.03810964897274971
    2. ')' → logprob: -3.288109540939331
    3. ')
' → logprob: -10.53810977935791
    4. ' )
' → logprob: -10.66310977935791
    5. '       ' → logprob: -11.91310977935791
    6. ')c' → logprob: -12.28810977935791
    7. ')

' → logprob: -13.16310977935791
    8. ' if' → logprob: -13.78810977935791
    9. '+' → logprob: -14.03810977935791
    10. ' )' → logprob: -14.03810977935791

Token 987: '       ' (ID: 309)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.048931606113910675
    2. '       ' → logprob: -3.04893159866333
    3. '```' → logprob: -8.298932075500488
    4. '#' → logprob: -10.173932075500488
    5. ' candidates' → logprob: -11.048932075500488
    6. '
' → logprob: -11.173932075500488
    7. 'if' → logprob: -11.298932075500488
    8. 'for' → logprob: -12.048932075500488
    9. '_candidates' → logprob: -12.798932075500488
    10. '   ' → logprob: -13.173932075500488

Token 988: ' #' (ID: 1069)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5793646574020386
    2. '#' (adapté à ' #') → logprob: -0.8293646574020386
    3. '       ' → logprob: -5.704364776611328
    4. 'if' → logprob: -10.454364776611328
    5. 'for' → logprob: -11.079364776611328
    6. '```' → logprob: -11.079364776611328
    7. ' candidates' → logprob: -11.954364776611328
    8. '
' → logprob: -11.954364776611328
    9. '   ' → logprob: -12.579364776611328
    10. 'import' → logprob: -13.079364776611328

Token 989: ' candidate' (ID: 17098)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.16045279800891876
    2. 'c' → logprob: -1.9104528427124023
    3. '       ' → logprob: -8.660452842712402
    4. 'candidate' → logprob: -11.035452842712402
    5. '```' → logprob: -11.160452842712402
    6. ' candidates' → logprob: -11.910452842712402
    7. '
' → logprob: -12.285452842712402
    8. '   ' → logprob: -12.535452842712402
    9. 'cand' → logprob: -12.910452842712402
    10. ' #' → logprob: -13.285452842712402

Token 990: ' ' (ID: 220)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00024596223374828696
    2. 'append' → logprob: -8.750246047973633
    3. '.' → logprob: -9.750246047973633
    4. '.extend' → logprob: -10.500246047973633
    5. '=' → logprob: -14.750246047973633
    6. ':' → logprob: -15.250246047973633
    7. '           ' → logprob: -15.375246047973633
    8. '
' → logprob: -15.750246047973633
    9. ' .' → logprob: -15.875246047973633
    10. '1' → logprob: -16.125246047973633

Token 991: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00032390307751484215
    2. '.append' → logprob: -8.375324249267578
    3. 'min' → logprob: -10.375324249267578
    4. 'append' → logprob: -10.500324249267578
    5. '1' → logprob: -11.000324249267578
    6. '3' → logprob: -11.250324249267578
    7. ' ' → logprob: -13.125324249267578
    8. '
' → logprob: -14.250324249267578
    9. '=' → logprob: -15.000324249267578
    10. '```' → logprob: -15.000324249267578

Token 992: ':' (ID: 25)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.06562478840351105
    2. '=' → logprob: -3.065624713897705
    3. ' =' → logprob: -4.690624713897705
    4. ':' → logprob: -5.815624713897705
    5. 'c' → logprob: -6.065624713897705
    6. 'append' → logprob: -6.315624713897705
    7. ',' → logprob: -8.690625190734863
    8. '=c' → logprob: -8.690625190734863
    9. '.' → logprob: -9.815625190734863
    10. ' c' → logprob: -10.190625190734863

Token 993: ' high' (ID: 1932)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.034218866378068924
    2. 'high' → logprob: -3.4092187881469727
    3. ' min' → logprob: -7.659218788146973
    4. 'max' → logprob: -9.659218788146973
    5. ' high' → logprob: -10.284218788146973
    6. '(min' → logprob: -13.534218788146973
    7. 'High' → logprob: -14.909218788146973
    8. 'low' → logprob: -15.409218788146973
    9. '[min' → logprob: -15.409218788146973
    10. '(high' → logprob: -15.534218788146973

Token 994: '
' (ID: 198)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.055353522300720215
    2. '       ' → logprob: -3.3053536415100098
    3. '
' → logprob: -4.43035364151001
    4. ')
' → logprob: -5.80535364151001
    5. ')c' → logprob: -7.43035364151001
    6. ' candidates' → logprob: -7.55535364151001
    7. '```' → logprob: -8.305353164672852
    8. ',c' → logprob: -8.305353164672852
    9. '_candidates' → logprob: -8.930353164672852
    10. ')' → logprob: -9.180353164672852

Token 995: '       ' (ID: 309)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.09094483405351639
    2. '       ' → logprob: -2.590944766998291
    3. '```' → logprob: -4.590944766998291
    4. ' candidates' → logprob: -6.965944766998291
    5. '_candidates' → logprob: -9.09094524383545
    6. '``' → logprob: -9.09094524383545
    7. '
' → logprob: -9.34094524383545
    8. ',c' → logprob: -9.34094524383545
    9. '   ' → logprob: -9.46594524383545
    10. '.c' → logprob: -9.59094524383545

Token 996: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -6.313314952421933e-05
    2. '.append' → logprob: -10.250062942504883
    3. 'if' → logprob: -10.625062942504883
    4. ' candidates' → logprob: -13.375062942504883
    5. 'append' → logprob: -13.875062942504883
    6. '
' → logprob: -15.125062942504883
    7. '       ' → logprob: -15.625062942504883
    8. '```' → logprob: -15.750062942504883
    9. '_candidates' → logprob: -15.875062942504883
    10. '.' → logprob: -16.625062942504883

Token 997: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.5954712075181305e-05
    2. '.' → logprob: -10.250036239624023
    3. 'append' → logprob: -14.625036239624023
    4. '.extend' → logprob: -17.625036239624023
    5. '.Append' → logprob: -18.500036239624023
    6. '.app' → logprob: -18.500036239624023
    7. ' .' → logprob: -19.500036239624023
    8. 'Append' → logprob: -20.625036239624023
    9. '_append' → logprob: -21.125036239624023
    10. ').' → logprob: -21.125036239624023

Token 998: '(high' (ID: 126087)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' → logprob: -0.0014504714636132121
    2. '(high' → logprob: -6.626450538635254
    3. ' high' → logprob: -9.001450538635254
    4. 'min' → logprob: -14.876450538635254
    5. 'High' → logprob: -15.376450538635254
    6. 'max' → logprob: -15.501450538635254
    7. '   ' → logprob: -16.501449584960938
    8. 'hi' → logprob: -17.001449584960938
    9. '.high' → logprob: -17.251449584960938
    10. '(' → logprob: -17.251449584960938

Token 999: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.550589919090271
    2. ')
' → logprob: -0.925589919090271
    3. '       ' → logprob: -3.6755900382995605
    4. ')c' → logprob: -6.5505900382995605
    5. '   ' → logprob: -8.675589561462402
    6. '```' → logprob: -10.175589561462402
    7. 'c' → logprob: -10.550589561462402
    8. '<|end|>' → logprob: -10.675589561462402
    9. '
' → logprob: -11.425589561462402
    10. '#' → logprob: -11.800589561462402

Token 1000: '       ' (ID: 309)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.13571961224079132
    2. '#' → logprob: -2.1357195377349854
    3. '       ' → logprob: -5.1357197761535645
    4. '```' → logprob: -5.8857197761535645
    5. '   ' → logprob: -9.760719299316406
    6. ' candidates' → logprob: -11.135719299316406
    7. '``' → logprob: -11.510719299316406
    8. '
' → logprob: -12.635719299316406
    9. '_candidates' → logprob: -13.760719299316406
    10. ' #' → logprob: -14.135719299316406

Token 1001: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.16184288263320923
    2. 'c' → logprob: -2.1618428230285645
    3. '       ' → logprob: -3.4118428230285645
    4. '```' → logprob: -6.6618428230285645
    5. 'for' → logprob: -11.161843299865723
    6. '``' → logprob: -11.286843299865723
    7. 'if' → logprob: -11.911843299865723
    8. '   ' → logprob: -12.286843299865723
    9. ' candidates' → logprob: -12.286843299865723
    10. ' #' → logprob: -12.286843299865723

Token 1002: ' candidate' (ID: 17098)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.008654399774968624
    2. '#' → logprob: -4.758654594421387
    3. '       ' → logprob: -10.508654594421387
    4. ' candidates' → logprob: -12.258654594421387
    5. '```' → logprob: -12.383654594421387
    6. '
' → logprob: -13.008654594421387
    7. 'candidate' → logprob: -14.883654594421387
    8. '           ' → logprob: -15.133654594421387
    9. 'if' → logprob: -15.758654594421387
    10. '   ' → logprob: -16.13365364074707

Token 1003: ' ' (ID: 220)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00031615851912647486
    2. '.' → logprob: -8.125316619873047
    3. 'append' → logprob: -11.125316619873047
    4. '```' → logprob: -13.125316619873047
    5. '.extend' → logprob: -13.750316619873047
    6. ' .' → logprob: -14.625316619873047
    7. ':' → logprob: -14.750316619873047
    8. 's' → logprob: -15.125316619873047
    9. '.Append' → logprob: -15.375316619873047
    10. '.setdefault' → logprob: -15.875316619873047

Token 1004: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.4287503957748413
    2. '2' → logprob: -1.0537503957748413
    3. ' ' → logprob: -10.678750038146973
    4. '
' → logprob: -12.053750038146973
    5. '.append' → logprob: -12.178750038146973
    6. '```' → logprob: -12.303750038146973
    7. 'append' → logprob: -12.803750038146973
    8. ':' → logprob: -13.428750038146973
    9. 'H' → logprob: -13.678750038146973
    10. '[u' → logprob: -14.178750038146973

Token 1005: ':' (ID: 25)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.033232852816581726
    2. ':' → logprob: -3.9082329273223877
    3. '=' → logprob: -4.533232688903809
    4. ' =' → logprob: -6.408232688903809
    5. ' .' → logprob: -9.533232688903809
    6. '       ' → logprob: -10.408232688903809
    7. '.' → logprob: -10.658232688903809
    8. 'append' → logprob: -10.908232688903809
    9. ':
' → logprob: -11.533232688903809
    10. ')' → logprob: -12.033232688903809

Token 1006: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.0280383548888494e-06
    2. ' H' → logprob: -14.375000953674316
    3. '       ' → logprob: -15.625000953674316
    4. '   ' → logprob: -15.875000953674316
    5. '(H' → logprob: -16.875001907348633
    6. '           ' → logprob: -18.125001907348633
    7. '	H' → logprob: -19.250001907348633
    8. 'HU' → logprob: -20.375001907348633
    9. '         ' → logprob: -21.375001907348633
    10. '               ' → logprob: -22.125001907348633

Token 1007: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.00020747410599142313
    2. 'u' → logprob: -8.500207901000977
    3. '```' → logprob: -13.000207901000977
    4. '[' → logprob: -13.875207901000977
    5. '(u' → logprob: -15.375207901000977
    6. '	u' → logprob: -15.875207901000977
    7. '<|end|>' → logprob: -16.875207901000977
    8. '<u' → logprob: -17.000207901000977
    9. '<|end|>' → logprob: -17.250207901000977
    10. '\[' → logprob: -17.250207901000977

Token 1008: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4938317835330963
    2. '])' → logprob: -1.368831753730774
    3. ')])' → logprob: -2.7438318729400635
    4. '[u' → logprob: -2.8688318729400635
    5. '])
' → logprob: -4.743831634521484
    6. ')
' → logprob: -5.493831634521484
    7. ')]' → logprob: -7.618831634521484
    8. ')])
' → logprob: -8.243831634521484
    9. ']' → logprob: -8.493831634521484
    10. ']])' → logprob: -9.493831634521484

Token 1009: '       ' (ID: 309)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.38716408610343933
    2. '       ' → logprob: -1.1371641159057617
    3. ' candidates' → logprob: -9.012164115905762
    4. '```' → logprob: -9.012164115905762
    5. '_candidates' → logprob: -11.637164115905762
    6. 'for' → logprob: -11.637164115905762
    7. '
' → logprob: -11.887164115905762
    8. '	c' → logprob: -12.137164115905762
    9. '``' → logprob: -12.387164115905762
    10. ')c' → logprob: -12.762164115905762

Token 1010: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -4.320199877838604e-07
    2. '       ' → logprob: -15.375
    3. ' candidates' → logprob: -15.875
    4. '
' → logprob: -17.375
    5. 'candidate' → logprob: -17.75
    6. 'for' → logprob: -18.25
    7. 'if' → logprob: -18.25
    8. '   ' → logprob: -18.375
    9. '           ' → logprob: -18.625
    10. '```' → logprob: -19.0

Token 1011: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.000133098365040496
    2. '.' → logprob: -9.000133514404297
    3. ').' → logprob: -13.000133514404297
    4. '[u' → logprob: -13.250133514404297
    5. 'append' → logprob: -13.625133514404297
    6. ' .' → logprob: -14.125133514404297
    7. '.setdefault' → logprob: -14.375133514404297
    8. '.u' → logprob: -14.750133514404297
    9. '.extend' → logprob: -14.875133514404297
    10. '```' → logprob: -14.875133514404297

Token 1012: '(H' (ID: 20904)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.10127349942922592
    2. '(H' → logprob: -2.351273536682129
    3. ' H' → logprob: -6.851273536682129
    4. '(' → logprob: -12.351273536682129
    5. ' (' → logprob: -12.726273536682129
    6. '	H' → logprob: -14.601273536682129
    7. '   ' → logprob: -16.226272583007812
    8. '_H' → logprob: -16.351272583007812
    9. '(
' → logprob: -16.601272583007812
    10. ',H' → logprob: -16.726272583007812

Token 1013: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.0280383548888494e-06
    2. 'u' → logprob: -13.875000953674316
    3. '[' → logprob: -18.125001907348633
    4. '```' → logprob: -19.875001907348633
    5. '	u' → logprob: -20.750001907348633
    6. '(u' → logprob: -21.000001907348633
    7. '<u' → logprob: -21.625001907348633
    8. '[
' → logprob: -22.000001907348633
    9. ']' → logprob: -22.500001907348633
    10. '[user' → logprob: -22.625001907348633

Token 1014: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38759198784828186
    2. '])' → logprob: -1.1375919580459595
    3. ')])' → logprob: -8.137592315673828
    4. '))' → logprob: -9.387592315673828
    5. ')]' → logprob: -9.512592315673828
    6. ')
' → logprob: -9.637592315673828
    7. ' ])' → logprob: -9.637592315673828
    8. '])
' → logprob: -9.887592315673828
    9. ' )' → logprob: -10.012592315673828
    10. ']' → logprob: -10.387592315673828

Token 1015: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2543942928314209
    2. '       ' → logprob: -1.629394292831421
    3. 'best' → logprob: -3.754394292831421
    4. 'min' → logprob: -6.37939453125
    5. 'next' → logprob: -6.75439453125
    6. ' for' → logprob: -6.87939453125
    7. '```' → logprob: -6.87939453125
    8. '   ' → logprob: -10.25439453125
    9. 'new' → logprob: -10.25439453125
    10. '``' → logprob: -10.25439453125

Token 1016: ' min' (ID: 1349)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.028062302619218826
    2. 'best' → logprob: -3.903062343597412
    3. 'min' (adapté à ' min') → logprob: -5.028062343597412
    4. '       ' → logprob: -7.403062343597412
    5. 'next' → logprob: -8.403061866760254
    6. 'res' → logprob: -9.778061866760254
    7. ' for' → logprob: -11.528061866760254
    8. 'new' → logprob: -11.653061866760254
    9. 'ans' → logprob: -11.653061866760254
    10. 'mn' → logprob: -12.278061866760254

Token 1017: '_cost' (ID: 36820)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.1343149095773697
    2. '_cost' → logprob: -2.134315013885498
    3. '_total' → logprob: -5.134315013885498
    4. '_candidate' → logprob: -7.134315013885498
    5. '_t' → logprob: -8.63431453704834
    6. '_' → logprob: -8.88431453704834
    7. '_c' → logprob: -8.88431453704834
    8. '_val' → logprob: -9.25931453704834
    9. 'cost' → logprob: -10.00931453704834
    10. 't' → logprob: -10.88431453704834

Token 1018: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602267622947693
    2. '=' → logprob: -1.910226821899414
    3. '_' → logprob: -14.035226821899414
    4. ',' → logprob: -14.160226821899414
    5. ')' → logprob: -15.535226821899414
    6. '_=' → logprob: -15.785226821899414
    7. ' =
' → logprob: -15.785226821899414
    8. '_idx' → logprob: -16.160226821899414
    9. '=None' → logprob: -16.285226821899414
    10. '=min' → logprob: -16.410226821899414

Token 1019: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -7.314625690924004e-05
    2. 'None' → logprob: -10.375073432922363
    3. 'float' → logprob: -11.125073432922363
    4. '1' → logprob: -11.125073432922363
    5. 'inf' → logprob: -12.375073432922363
    6. 'min' → logprob: -12.875073432922363
    7. ' INF' → logprob: -13.000073432922363
    8. 'dist' → logprob: -13.250073432922363
    9. '10' → logprob: -14.375073432922363
    10. 'IN' → logprob: -15.000073432922363

Token 1020: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001590438769198954
    2. '
' → logprob: -6.626590251922607
    3. 'min' → logprob: -9.376590728759766
    4. '       ' → logprob: -9.376590728759766
    5. ' for' → logprob: -9.501590728759766
    6. '```' → logprob: -11.626590728759766
    7. '=' → logprob: -12.251590728759766
    8. '        
' → logprob: -12.876590728759766
    9. '           ' → logprob: -13.751590728759766
    10. '=min' → logprob: -14.626590728759766

Token 1021: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.40998875699006e-05
    2. ' for' → logprob: -10.12507438659668
    3. '       ' → logprob: -10.50007438659668
    4. '
' → logprob: -12.62507438659668
    5. 'min' → logprob: -13.25007438659668
    6. '```' → logprob: -13.75007438659668
    7. '   ' → logprob: -15.75007438659668
    8. '        
' → logprob: -16.62507438659668
    9. '           ' → logprob: -17.62507438659668
    10. '	for' → logprob: -18.12507438659668

Token 1022: ' chosen' (ID: 16180)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -15.5
    3. ' for' → logprob: -16.875
    4. '       ' → logprob: -17.75
    5. 'min' → logprob: -18.375
    6. '
' → logprob: -19.125
    7. '   ' → logprob: -20.75
    8. '           ' → logprob: -20.875
    9. '``' → logprob: -21.375
    10. '	for' → logprob: -21.75

Token 1023: '_h' (ID: 3434)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.049972813576459885
    2. '_cost' → logprob: -3.6749727725982666
    3. '_h' → logprob: -4.549973011016846
    4. '=' → logprob: -5.174973011016846
    5. '_token' → logprob: -6.299973011016846
    6. ' =' → logprob: -6.299973011016846
    7. '_c' → logprob: -7.299973011016846
    8. '_=' → logprob: -7.299973011016846
    9. '_candidate' → logprob: -7.424973011016846
    10. ' _' → logprob: -8.174972534179688

Token 1024: ' =' (ID: 314)
  Prédit: '_u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -0.00018685187387745827
    2. 'u' → logprob: -9.000186920166016
    3. '=' → logprob: -10.750186920166016
    4. ' =' → logprob: -11.500186920166016
    5. '=u' → logprob: -11.750186920166016
    6. '_' → logprob: -12.375186920166016
    7. '_candidates' → logprob: -12.500186920166016
    8. '=_' → logprob: -12.750186920166016
    9. '_=' → logprob: -13.750186920166016
    10. '_c' → logprob: -13.750186920166016

Token 1025: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.001022566924802959
    2. '0' → logprob: -7.0010223388671875
    3. '-' → logprob: -9.251022338867188
    4. ' None' → logprob: -11.126022338867188
    5. 'none' → logprob: -15.001022338867188
    6. 'low' → logprob: -16.751022338867188
    7. '=None' → logprob: -16.876022338867188
    8. '_None' → logprob: -17.126022338867188
    9. 'min' → logprob: -17.251022338867188
    10. '-none' → logprob: -17.626022338867188

Token 1026: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.016423529013991356
    2. '       ' → logprob: -4.51642370223999
    3. ' for' → logprob: -5.26642370223999
    4. '	for' → logprob: -8.641423225402832
    5. '```' → logprob: -11.516423225402832
    6. '   ' → logprob: -12.016423225402832
    7. '
' → logprob: -12.391423225402832
    8. '        
' → logprob: -14.266423225402832
    9. '           ' → logprob: -14.266423225402832
    10. '	' → logprob: -14.641423225402832

Token 1027: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01986078917980194
    2. '       ' → logprob: -4.019860744476318
    3. ' for' → logprob: -6.519860744476318
    4. '	for' → logprob: -8.519861221313477
    5. '   ' → logprob: -10.394861221313477
    6. '
' → logprob: -13.019861221313477
    7. '```' → logprob: -13.144861221313477
    8. '	' → logprob: -14.519861221313477
    9. '           ' → logprob: -15.144861221313477
    10. '        
' → logprob: -15.394861221313477

Token 1028: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0001410850090906024
    2. '       ' → logprob: -9.000141143798828
    3. ' for' → logprob: -11.000141143798828
    4. '```' → logprob: -14.250141143798828
    5. '	for' → logprob: -15.625141143798828
    6. '
' → logprob: -16.625141143798828
    7. '``' → logprob: -17.875141143798828
    8. '   ' → logprob: -17.875141143798828
    9. '           ' → logprob: -19.250141143798828
    10. '        
' → logprob: -19.750141143798828

Token 1029: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.000422570708906278
    2. 'hu' → logprob: -8.625422477722168
    3. 'c' → logprob: -9.375422477722168
    4. ' h' → logprob: -9.500422477722168
    5. 'candidate' → logprob: -10.250422477722168
    6. 'ch' → logprob: -11.250422477722168
    7. 'cand' → logprob: -11.500422477722168
    8. 'x' → logprob: -12.000422477722168
    9. 'hc' → logprob: -12.500422477722168
    10. 'cu' → logprob: -12.500422477722168

Token 1030: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -7.398067828034982e-05
    2. ' in' → logprob: -10.25007438659668
    3. '```' → logprob: -12.00007438659668
    4. '_candidates' → logprob: -12.12507438659668
    5. '_' → logprob: -12.50007438659668
    6. 'u' → logprob: -12.62507438659668
    7. '_candidate' → logprob: -12.62507438659668
    8. ')' → logprob: -12.87507438659668
    9. '
' → logprob: -13.00007438659668
    10. '_i' → logprob: -13.12507438659668

Token 1031: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03804677724838257
    2. 'in' → logprob: -3.2880468368530273
    3. '	in' → logprob: -13.288046836853027
    4. '<|end|>' → logprob: -13.913046836853027
    5. '_in' → logprob: -14.038046836853027
    6. 'n' → logprob: -15.288046836853027
    7. 'In' → logprob: -15.288046836853027
    8. ' ' → logprob: -15.413046836853027
    9. 'inth' → logprob: -15.538046836853027
    10. ')' → logprob: -15.663046836853027

Token 1032: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.000492268183734268
    2. ' candidates' → logprob: -7.625492095947266
    3. '[c' → logprob: -12.625492095947266
    4. '_candidates' → logprob: -15.000492095947266
    5. 'candidate' → logprob: -15.375492095947266
    6. '[' → logprob: -16.250492095947266
    7. '(c' → logprob: -16.375492095947266
    8. '
' → logprob: -16.375492095947266
    9. 'cand' → logprob: -17.250492095947266
    10. '   ' → logprob: -17.375492095947266

Token 1033: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06568484753370285
    2. ':
' → logprob: -3.1906847953796387
    3. '<|end|>' → logprob: -4.315684795379639
    4. '<|end|>' → logprob: -5.565684795379639
    5. '       ' → logprob: -6.565684795379639
    6. ',' → logprob: -6.565684795379639
    7. '):
' → logprob: -7.315684795379639
    8. '           ' → logprob: -7.440684795379639
    9. '=' → logprob: -7.940684795379639
    10. ')' → logprob: -9.065685272216797

Token 1034: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0023739850148558617
    2. '       ' → logprob: -6.877374172210693
    3. '	       ' → logprob: -7.752374172210693
    4. '               ' → logprob: -8.627373695373535
    5. '            ' → logprob: -8.627373695373535
    6. '        ' → logprob: -9.002373695373535
    7. '		' → logprob: -9.127373695373535
    8. '   ' → logprob: -9.752373695373535
    9. '<|end|>' → logprob: -10.002373695373535
    10. '         ' → logprob: -10.252373695373535

Token 1035: ' if' (ID: 538)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.012441135942935944
    2. '           ' → logprob: -5.637441158294678
    3. 'total' → logprob: -5.887441158294678
    4. 'time' → logprob: -6.012441158294678
    5. ' cost' → logprob: -6.387441158294678
    6. '               ' → logprob: -6.762441158294678
    7. 'cur' → logprob: -8.88744068145752
    8. 'tmp' → logprob: -9.01244068145752
    9. 'temp' → logprob: -9.76244068145752
    10. '   ' → logprob: -9.76244068145752

Token 1036: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.1779698133468628
    2. '0' → logprob: -2.0529699325561523
    3. 'not' → logprob: -4.427969932556152
    4. ' h' → logprob: -4.802969932556152
    5. 'low' → logprob: -4.802969932556152
    6. 'abs' → logprob: -5.927969932556152
    7. ' not' → logprob: -6.552969932556152
    8. ' ' → logprob: -7.052969932556152
    9. ' low' → logprob: -8.052969932556152
    10. 'min' → logprob: -8.302969932556152

Token 1037: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -0.00025657136575318873
    2. '<=' → logprob: -9.125256538391113
    3. 'u' → logprob: -10.000256538391113
    4. '[u' → logprob: -10.250256538391113
    5. '==' → logprob: -10.375256538391113
    6. '_' → logprob: -11.625256538391113
    7. '<u' → logprob: -11.750256538391113
    8. '   ' → logprob: -12.625256538391113
    9. '>' → logprob: -12.875256538391113
    10. '>=' → logprob: -13.000256538391113

Token 1038: ' <' (ID: 464)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.6149061918258667
    2. '>=' → logprob: -1.8649061918258667
    3. '==' → logprob: -2.1149063110351562
    4. ' <=' → logprob: -2.1149063110351562
    5. ' ==' → logprob: -3.3649063110351562
    6. ' >=' → logprob: -3.8649063110351562
    7. '!=' → logprob: -5.989906311035156
    8. '>' → logprob: -6.114906311035156
    9. ' !=' → logprob: -6.989906311035156
    10. ' >' → logprob: -7.489906311035156

Token 1039: ' low' (ID: 4465)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06529193371534348
    2. 'low' → logprob: -2.8152918815612793
    3. ' ' → logprob: -6.315291881561279
    4. ' low' → logprob: -6.940291881561279
    5. 't' → logprob: -7.940291881561279
    6. 'max' → logprob: -9.940292358398438
    7. '=' → logprob: -10.190292358398438
    8. ' t' → logprob: -10.565292358398438
    9. 'h' → logprob: -10.940292358398438
    10. 'min' → logprob: -11.440292358398438

Token 1040: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.008797389455139637
    2. 'or' → logprob: -5.3837971687316895
    3. ':' → logprob: -6.0087971687316895
    4. '           ' → logprob: -6.7587971687316895
    5. ':
' → logprob: -7.8837971687316895
    6. ')' → logprob: -9.508797645568848
    7. '               ' → logprob: -10.508797645568848
    8. ' and' → logprob: -11.133797645568848
    9. '<|end|>' → logprob: -11.508797645568848
    10. ':return' → logprob: -12.258797645568848

Token 1041: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.023303363472223282
    2. ' h' → logprob: -3.773303270339966
    3. '>' → logprob: -10.023303031921387
    4. '           ' → logprob: -12.898303031921387
    5. '```' → logprob: -13.273303031921387
    6. ' or' → logprob: -13.773303031921387
    7. '	h' → logprob: -13.773303031921387
    8. ' >' → logprob: -13.898303031921387
    9. '   ' → logprob: -14.335803031921387
    10. 'None' → logprob: -14.460803031921387

Token 1042: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -0.02176763489842415
    2. '>' → logprob: -3.8967676162719727
    3. 'u' → logprob: -6.771767616271973
    4. '=' → logprob: -10.021767616271973
    5. '_' → logprob: -11.271767616271973
    6. ' >' → logprob: -11.646767616271973
    7. '```' → logprob: -11.771767616271973
    8. '0' → logprob: -14.521767616271973
    9. '``' → logprob: -14.521767616271973
    10. '==' → logprob: -14.521767616271973

Token 1043: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5232874751091003
    2. ' >' → logprob: -0.8982874751091003
    3. ':' → logprob: -9.148287773132324
    4. ' or' → logprob: -10.898287773132324
    5. ' ' → logprob: -11.898287773132324
    6. 'continue' → logprob: -11.898287773132324
    7. '>:' → logprob: -12.398287773132324
    8. '==' → logprob: -12.898287773132324
    9. '   ' → logprob: -12.898287773132324
    10. '=' → logprob: -13.023287773132324

Token 1044: ' high' (ID: 1932)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' → logprob: -0.04300136864185333
    2. ' high' → logprob: -3.168001413345337
    3. '(high' → logprob: -14.168001174926758
    4. '.high' → logprob: -15.043001174926758
    5. ' ' → logprob: -15.293001174926758
    6. '
' → logprob: -15.418001174926758
    7. 'High' → logprob: -15.543001174926758
    8. '   ' → logprob: -16.293001174926758
    9. '高' → logprob: -16.543001174926758
    10. '```' → logprob: -16.793001174926758

Token 1045: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1519307941198349
    2. ':
' → logprob: -2.276930809020996
    3. '               ' → logprob: -3.526930809020996
    4. '           ' → logprob: -4.901930809020996
    5. ' or' → logprob: -6.901930809020996
    6. ')' → logprob: -9.276930809020996
    7. '):' → logprob: -9.276930809020996
    8. '):
' → logprob: -9.401930809020996
    9. ',' → logprob: -9.526930809020996
    10. ':return' → logprob: -9.901930809020996

Token 1046: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07221952825784683
    2. '           ' → logprob: -2.6972196102142334
    3. '            ' → logprob: -6.947219371795654
    4. '             ' → logprob: -8.697219848632812
    5. '	           ' → logprob: -8.822219848632812
    6. '                               ' → logprob: -8.947219848632812
    7. '                   ' → logprob: -9.322219848632812
    8. '                ' → logprob: -9.322219848632812
    9. ':' → logprob: -9.572219848632812
    10. '                           ' → logprob: -9.572219848632812

Token 1047: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.10169775038957596
    2. ' continue' → logprob: -2.3516976833343506
    3. '               ' → logprob: -6.60169792175293
    4. '           ' → logprob: -9.35169792175293
    5. '	continue' → logprob: -10.47669792175293
    6. '   ' → logprob: -11.35169792175293
    7. '_continue' → logprob: -13.22669792175293
    8. 'contin' → logprob: -13.85169792175293
    9. '```' → logprob: -13.97669792175293
    10. '                   ' → logprob: -14.35169792175293

Token 1048: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004870378761552274
    2. '               ' → logprob: -7.750486850738525
    3. '       ' → logprob: -11.375487327575684
    4. ',' → logprob: -11.750487327575684
    5. '	       ' → logprob: -12.125487327575684
    6. '		' → logprob: -12.375487327575684
    7. '
' → logprob: -12.500487327575684
    8. '            
' → logprob: -12.625487327575684
    9. '            ' → logprob: -12.625487327575684
    10. '```' → logprob: -12.875487327575684

Token 1049: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0052505917847156525
    2. 'cost' → logprob: -5.630250453948975
    3. '               ' → logprob: -6.880250453948975
    4. ' cost' → logprob: -7.755250453948975
    5. 'total' → logprob: -9.255250930786133
    6. '```' → logprob: -10.130250930786133
    7. 'time' → logprob: -11.380250930786133
    8. 'token' → logprob: -11.505250930786133
    9. 'temp' → logprob: -12.630250930786133
    10. ' total' → logprob: -12.755250930786133

Token 1050: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.03582277148962021
    2. '           ' → logprob: -4.035822868347168
    3. 'total' → logprob: -4.410822868347168
    4. 'time' → logprob: -6.285822868347168
    5. ' cost' → logprob: -6.785822868347168
    6. 'cur' → logprob: -7.410822868347168
    7. '```' → logprob: -8.035822868347168
    8. '               ' → logprob: -8.160822868347168
    9. 'diff' → logprob: -8.410822868347168
    10. 'abs' → logprob: -8.660822868347168

Token 1051: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326186656951904
    2. ' =' → logprob: -1.313261866569519
    3. '＝' → logprob: -16.563261032104492
    4. '   ' → logprob: -17.188261032104492
    5. ' ' → logprob: -17.813261032104492
    6. '=
' → logprob: -17.938261032104492
    7. '_=' → logprob: -18.313261032104492
    8. '_candidate' → logprob: -18.313261032104492
    9. '           ' → logprob: -18.563261032104492
    10. 's' → logprob: -18.813261032104492

Token 1052: ' cur' (ID: 4396)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.09477844834327698
    2. 'dist' → logprob: -2.719778537750244
    3. 'cur' → logprob: -3.719778537750244
    4. ' abs' → logprob: -8.969778060913086
    5. '   ' → logprob: -9.219778060913086
    6. '(abs' → logprob: -10.844778060913086
    7. 'cost' → logprob: -11.094778060913086
    8. ' dist' → logprob: -11.344778060913086
    9. ' cur' → logprob: -12.844778060913086
    10. '       ' → logprob: -12.844778060913086

Token 1053: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -2.15310683415737e-05
    2. '_cost' → logprob: -11.375021934509277
    3. '[u' → logprob: -12.125021934509277
    4. '_u' → logprob: -13.750021934509277
    5. ' _' → logprob: -14.000021934509277
    6. '_' → logprob: -14.375021934509277
    7. 'time' → logprob: -15.125021934509277
    8. '_TIME' → logprob: -15.250021934509277
    9. ')_' → logprob: -15.375021934509277
    10. 'Time' → logprob: -15.875021934509277

Token 1054: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3868864178657532
    2. '+' → logprob: -1.1368863582611084
    3. ' +
' → logprob: -12.261886596679688
    4. '+
' → logprob: -12.511886596679688
    5. '<|end|>' → logprob: -12.761886596679688
    6. ' -' → logprob: -14.136886596679688
    7. '-' → logprob: -14.261886596679688
    8. ' ' → logprob: -14.636886596679688
    9. ')' → logprob: -14.636886596679688
    10. '           ' → logprob: -15.136886596679688

Token 1055: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0007486367831006646
    2. ' abs' → logprob: -7.250748634338379
    3. '(abs' → logprob: -10.250748634338379
    4. '   ' → logprob: -12.750748634338379
    5. '
' → logprob: -15.375748634338379
    6. '```' → logprob: -16.875749588012695
    7. '       ' → logprob: -17.375749588012695
    8. '  ' → logprob: -17.750749588012695
    9. ' ' → logprob: -17.875749588012695
    10. '_abs' → logprob: -17.875749588012695

Token 1056: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.0019374389667063951
    2. '(' → logprob: -6.251937389373779
    3. 'H' → logprob: -11.751937866210938
    4. '(
' → logprob: -14.001937866210938
    5. ' (' → logprob: -16.251937866210938
    6. '(h' → logprob: -18.251937866210938
    7. '((' → logprob: -18.626937866210938
    8. '(

' → logprob: -19.376937866210938
    9. '	H' → logprob: -19.626937866210938
    10. '('' → logprob: -20.126937866210938

Token 1057: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -2.935296834039036e-06
    2. '[' → logprob: -12.87500286102295
    3. 'u' → logprob: -15.25000286102295
    4. '[user' → logprob: -17.125003814697266
    5. '(u' → logprob: -19.250003814697266
    6. '```' → logprob: -19.375003814697266
    7. '[
' → logprob: -20.125003814697266
    8. '<u' → logprob: -20.250003814697266
    9. '[cur' → logprob: -20.500003814697266
    10. ' [' → logprob: -20.625003814697266

Token 1058: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5492963790893555
    2. '-' → logprob: -0.9242963790893555
    3. '-u' → logprob: -4.1742963790893555
    4. '[u' → logprob: -4.7992963790893555
    5. ']' → logprob: -6.5492963790893555
    6. '-h' → logprob: -8.049296379089355
    7. ')' → logprob: -8.174296379089355
    8. ']-' → logprob: -9.549296379089355
    9. '[h' → logprob: -10.174296379089355
    10. '[' → logprob: -10.549296379089355

Token 1059: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.721540093421936
    2. ' -' → logprob: -0.721540093421936
    3. '-h' → logprob: -3.5965399742126465
    4. '-u' → logprob: -7.4715399742126465
    5. ' ' → logprob: -13.346540451049805
    6. '-t' → logprob: -14.471540451049805
    7. '-code' → logprob: -14.471540451049805
    8. '-
' → logprob: -14.846540451049805
    9. '
' → logprob: -14.971540451049805
    10. '[' → logprob: -15.221540451049805

Token 1060: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -3.8889261304575484e-06
    2. ' h' → logprob: -12.500003814697266
    3. '```' → logprob: -16.875003814697266
    4. '_h' → logprob: -19.875003814697266
    5. '	h' → logprob: -20.250003814697266
    6. ')' → logprob: -20.875003814697266
    7. '   ' → logprob: -21.125003814697266
    8. '<h' → logprob: -21.250003814697266
    9. '
' → logprob: -21.500003814697266
    10. '`' → logprob: -21.625003814697266

Token 1061: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -2.8206473871250637e-05
    2. 'u' → logprob: -10.500028610229492
    3. '[u' → logprob: -14.750028610229492
    4. '```' → logprob: -16.125028610229492
    5. '<u' → logprob: -18.250028610229492
    6. 's' → logprob: -18.250028610229492
    7. '_user' → logprob: -18.500028610229492
    8. '   ' → logprob: -18.875028610229492
    9. '(u' → logprob: -18.875028610229492
    10. '-u' → logprob: -19.000028610229492

Token 1062: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002217748697148636
    2. ')+' → logprob: -8.625222206115723
    3. '+' → logprob: -10.500222206115723
    4. ' +' → logprob: -12.000222206115723
    5. ' )' → logprob: -12.375222206115723
    6. '+)' → logprob: -13.250222206115723
    7. ')
' → logprob: -14.000222206115723
    8. '<|end|>' → logprob: -15.000222206115723
    9. '           ' → logprob: -15.250222206115723
    10. '```' → logprob: -15.750222206115723

Token 1063: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2014361321926117
    2. ' +' → logprob: -1.701436161994934
    3. '           ' → logprob: -10.826436042785645
    4. '+
' → logprob: -13.826436042785645
    5. '          ' → logprob: -14.826436042785645
    6. '```' → logprob: -15.076436042785645
    7. '+c' → logprob: -15.201436042785645
    8. '               ' → logprob: -15.701436042785645
    9. '-' → logprob: -15.826436042785645
    10. '+h' → logprob: -16.20143699645996

Token 1064: ' t' (ID: 260)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.000541592831723392
    2. ' H' → logprob: -7.875541687011719
    3. '(H' → logprob: -8.750541687011719
    4. ' (' → logprob: -14.125541687011719
    5. '(' → logprob: -14.250541687011719
    6. '   ' → logprob: -14.500541687011719
    7. ' ' → logprob: -15.000541687011719
    8. '           ' → logprob: -15.500541687011719
    9. '+' → logprob: -16.50054168701172
    10. '         ' → logprob: -16.62554168701172

Token 1065: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47428497672080994
    2. ' +' → logprob: -0.9742850065231323
    3. ' -' → logprob: -8.724285125732422
    4. '-' → logprob: -10.099285125732422
    5. '+
' → logprob: -13.224285125732422
    6. '```' → logprob: -13.724285125732422
    7. '           ' → logprob: -15.224285125732422
    8. '          ' → logprob: -15.349285125732422
    9. ' ' → logprob: -15.349285125732422
    10. ' ' → logprob: -15.724285125732422

Token 1066: ' (' (ID: 350)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.003644376527518034
    2. '(H' → logprob: -5.6286444664001465
    3. ' H' → logprob: -10.128643989562988
    4. '(' → logprob: -13.253643989562988
    5. ' (' → logprob: -13.753643989562988
    6. '2' → logprob: -14.503643989562988
    7. '   ' → logprob: -14.753643989562988
    8. '+' → logprob: -15.003643989562988
    9. '
' → logprob: -16.878644943237305
    10. '           ' → logprob: -17.003644943237305

Token 1067: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.1279553291387856e-05
    2. ' H' → logprob: -11.500011444091797
    3. '(H' → logprob: -14.125011444091797
    4. ')' → logprob: -15.875011444091797
    5. '   ' → logprob: -16.250011444091797
    6. '           ' → logprob: -16.875011444091797
    7. '
' → logprob: -17.375011444091797
    8. '(' → logprob: -17.875011444091797
    9. '```' → logprob: -17.875011444091797
    10. ' (' → logprob: -18.250011444091797

Token 1068: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.00011331788846291602
    2. 'v' → logprob: -9.125113487243652
    3. '[u' → logprob: -12.500113487243652
    4. '[' → logprob: -15.625113487243652
    5. '<v' → logprob: -16.000112533569336
    6. '
' → logprob: -16.500112533569336
    7. '[
' → logprob: -16.750112533569336
    8. '```' → logprob: -16.750112533569336
    9. '	v' → logprob: -17.000112533569336
    10. '(v' → logprob: -17.000112533569336

Token 1069: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7274846434593201
    2. ']' → logprob: -0.9774846434593201
    3. ' -' → logprob: -2.352484703063965
    4. '-' → logprob: -3.227484703063965
    5. '[u' → logprob: -5.727484703063965
    6. '[v' → logprob: -6.852484703063965
    7. ']-' → logprob: -7.727484703063965
    8. '[' → logprob: -7.852484703063965
    9. ')-' → logprob: -8.227484703063965
    10. '])' → logprob: -9.477484703063965

Token 1070: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1002255454659462
    2. '-' → logprob: -2.3502254486083984
    3. ')' → logprob: -11.100225448608398
    4. ' ' → logprob: -13.725225448608398
    5. '[' → logprob: -14.350225448608398
    6. '-u' → logprob: -14.600225448608398
    7. ' ' → logprob: -14.975225448608398
    8. '-h' → logprob: -15.100225448608398
    9. '[u' → logprob: -15.350225448608398
    10. '
' → logprob: -15.850225448608398

Token 1071: ' (' (ID: 350)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0001514557225164026
    2. '(h' → logprob: -9.375151634216309
    3. ' h' → logprob: -9.625151634216309
    4. '(' → logprob: -15.750151634216309
    5. ' (' → logprob: -15.750151634216309
    6. '_h' → logprob: -16.000150680541992
    7. '	h' → logprob: -16.500150680541992
    8. '   ' → logprob: -17.875150680541992
    9. '           ' → logprob: -17.875150680541992
    10. '       ' → logprob: -18.125150680541992

Token 1072: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -2.963691804325208e-05
    2. '(h' → logprob: -10.625029563903809
    3. ' h' → logprob: -12.750029563903809
    4. '```' → logprob: -14.250029563903809
    5. '(' → logprob: -14.875029563903809
    6. '           ' → logprob: -15.000029563903809
    7. ')' → logprob: -15.125029563903809
    8. '   ' → logprob: -15.250029563903809
    9. ' (' → logprob: -16.250030517578125
    10. '
' → logprob: -16.250030517578125

Token 1073: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -7.896309739408025e-07
    2. 'u' → logprob: -14.125000953674316
    3. '[u' → logprob: -17.75
    4. '```' → logprob: -18.375
    5. '_i' → logprob: -19.875
    6. '   ' → logprob: -20.125
    7. '
' → logprob: -20.625
    8. '``' → logprob: -20.625
    9. '_uc' → logprob: -20.625
    10. '_v' → logprob: -20.625

Token 1074: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34831055998802185
    2. '+' → logprob: -1.5983105897903442
    3. ')+' → logprob: -2.9733104705810547
    4. '))' → logprob: -3.7233104705810547
    5. ' +' → logprob: -4.348310470581055
    6. '_u' → logprob: -6.348310470581055
    7. '-' → logprob: -7.598310470581055
    8. '))+' → logprob: -7.598310470581055
    9. '[' → logprob: -8.223310470581055
    10. '[u' → logprob: -8.723310470581055

Token 1075: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -2.856408536899835e-05
    2. ' t' → logprob: -10.500028610229492
    3. '`t' → logprob: -14.500028610229492
    4. ')t' → logprob: -14.625028610229492
    5. '	t' → logprob: -17.375028610229492
    6. '_t' → logprob: -18.125028610229492
    7. '```' → logprob: -18.625028610229492
    8. ')' → logprob: -18.750028610229492
    9. ''t' → logprob: -20.375028610229492
    10. '(t' → logprob: -20.625028610229492

Token 1076: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.693193793296814
    2. '))' → logprob: -0.693193793296814
    3. ')+' → logprob: -11.318193435668945
    4. '))
' → logprob: -11.568193435668945
    5. ')))' → logprob: -11.818193435668945
    6. '))+' → logprob: -12.068193435668945
    7. '           ' → logprob: -12.443193435668945
    8. ' )' → logprob: -13.068193435668945
    9. '])' → logprob: -13.443193435668945
    10. ')
' → logprob: -13.568193435668945

Token 1077: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.152104377746582
    2. ' -' → logprob: -1.527104377746582
    3. ')' → logprob: -1.652104377746582
    4. '           ' → logprob: -2.152104377746582
    5. '<|end|>' → logprob: -2.777104377746582
    6. '+' → logprob: -3.152104377746582
    7. '-' → logprob: -3.277104377746582
    8. '```' → logprob: -5.152104377746582
    9. '               ' → logprob: -5.652104377746582
    10. '<|end|>' → logprob: -6.277104377746582

Token 1078: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.017450939863920212
    2. ' t' → logprob: -4.14245080947876
    3. '2' → logprob: -6.76745080947876
    4. '0' → logprob: -8.642451286315918
    5. ' ' → logprob: -10.642451286315918
    6. '(t' → logprob: -10.892451286315918
    7. '+t' → logprob: -11.767451286315918
    8. '+' → logprob: -11.892451286315918
    9. '(' → logprob: -11.892451286315918
    10. '
' → logprob: -12.392451286315918

Token 1079: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02616025321185589
    2. ')' → logprob: -4.27616024017334
    3. ' if' → logprob: -5.40116024017334
    4. '<|end|>' → logprob: -5.65116024017334
    5. '
' → logprob: -6.15116024017334
    6. '               ' → logprob: -7.52616024017334
    7. 'if' → logprob: -7.90116024017334
    8. '<|end|>' → logprob: -8.27616024017334
    9. ')
' → logprob: -8.90116024017334
    10. '            
' → logprob: -9.15116024017334

Token 1080: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007205340662039816
    2. ' if' → logprob: -8.250720977783203
    3. 'if' → logprob: -8.375720977783203
    4. '```' → logprob: -9.625720977783203
    5. '       ' → logprob: -9.750720977783203
    6. '
' → logprob: -10.000720977783203
    7. '               ' → logprob: -10.375720977783203
    8. ')' → logprob: -11.500720977783203
    9. '            
' → logprob: -12.000720977783203
    10. '                   ' → logprob: -13.000720977783203

Token 1081: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5910811424255371
    2. '           ' → logprob: -0.8410811424255371
    3. ' if' → logprob: -4.216081142425537
    4. '       ' → logprob: -8.841081619262695
    5. 'for' → logprob: -9.716081619262695
    6. '
' → logprob: -9.966081619262695
    7. '               ' → logprob: -11.966081619262695
    8. '   ' → logprob: -12.466081619262695
    9. '```' → logprob: -12.466081619262695
    10. 'cost' → logprob: -13.841081619262695

Token 1082: ' cost' (ID: 3097)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0034759361296892166
    2. '           ' → logprob: -5.753476142883301
    3. ' if' → logprob: -8.1284761428833
    4. 'min' → logprob: -13.8784761428833
    5. 'for' → logprob: -14.1284761428833
    6. '```' → logprob: -14.1284761428833
    7. 'cost' → logprob: -15.3784761428833
    8. '               ' → logprob: -15.5034761428833
    9. '       ' → logprob: -15.7534761428833
    10. 'If' → logprob: -16.253475189208984

Token 1083: ' explained' (ID: 20460)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.37150856852531433
    2. '_tokens' → logprob: -1.9965085983276367
    3. '<=' → logprob: -2.6215085983276367
    4. '+=' → logprob: -3.4965085983276367
    5. '<' → logprob: -4.371508598327637
    6. ' =' → logprob: -4.371508598327637
    7. '>=' → logprob: -4.496508598327637
    8. 'tokens' → logprob: -4.496508598327637
    9. ' +=' → logprob: -5.496508598327637
    10. ' <' → logprob: -5.996508598327637

Token 1084: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16129672527313232
    2. ' if' → logprob: -2.286296844482422
    3. 'if' → logprob: -3.661296844482422
    4. ')' → logprob: -4.661296844482422
    5. '
' → logprob: -6.036296844482422
    6. ' =' → logprob: -6.536296844482422
    7. '=' → logprob: -6.786296844482422
    8. '       ' → logprob: -6.911296844482422
    9. '            
' → logprob: -6.911296844482422
    10. ',' → logprob: -7.161296844482422

Token 1085: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0480380617082119
    2. '#' → logprob: -3.7980380058288574
    3. ' if' → logprob: -4.673038005828857
    4. ')' → logprob: -5.423038005828857
    5. '       ' → logprob: -5.798038005828857
    6. 'if' → logprob: -6.423038005828857
    7. '               ' → logprob: -6.673038005828857
    8. '            
' → logprob: -6.673038005828857
    9. ' #' → logprob: -7.298038005828857
    10. '=' → logprob: -8.173038482666016

Token 1086: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5914797186851501
    2. '#' (adapté à ' #') → logprob: -1.091479778289795
    3. '           ' → logprob: -3.591479778289795
    4. '=' → logprob: -4.216479778289795
    5. ' if' → logprob: -4.466479778289795
    6. 'if' → logprob: -4.966479778289795
    7. ' #' → logprob: -5.216479778289795
    8. '+' → logprob: -5.216479778289795
    9. '<|end|>' → logprob: -5.216479778289795
    10. ')
' → logprob: -5.841479778289795

Token 1087: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.004802484065294266
    2. '           ' → logprob: -5.754802703857422
    3. ' #' → logprob: -7.504802703857422
    4. 'abs' → logprob: -7.879802703857422
    5. '
' → logprob: -8.379802703857422
    6. 'if' → logprob: -9.629802703857422
    7. '               ' → logprob: -9.754802703857422
    8. 'pass' → logprob: -10.129802703857422
    9. '#
' → logprob: -10.629802703857422
    10. 'total' → logprob: -10.629802703857422

Token 1088: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.05544757843017578
    2. 'cur' → logprob: -3.930447578430176
    3. '#' → logprob: -4.055447578430176
    4. 'h' → logprob: -5.555447578430176
    5. '(abs' → logprob: -5.805447578430176
    6. 'cl' → logprob: -6.430447578430176
    7. ' abs' → logprob: -6.430447578430176
    8. 'cost' → logprob: -6.680447578430176
    9. 'fly' → logprob: -7.305447578430176
    10. 'H' → logprob: -7.680447578430176

Token 1089: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.00014895245840307325
    2. '(' → logprob: -8.87514877319336
    3. 'H' → logprob: -12.25014877319336
    4. '(
' → logprob: -12.50014877319336
    5. '(h' → logprob: -15.12514877319336
    6. '(abs' → logprob: -16.62514877319336
    7. '           ' → logprob: -16.75014877319336
    8. ' (' → logprob: -17.37514877319336
    9. '((' → logprob: -17.75014877319336
    10. ')' → logprob: -18.12514877319336

Token 1090: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -4.4894986785948277e-05
    2. '[' → logprob: -10.625044822692871
    3. '(u' → logprob: -10.875044822692871
    4. 'u' → logprob: -13.750044822692871
    5. '[user' → logprob: -15.000044822692871
    6. '               ' → logprob: -16.000045776367188
    7. '[
' → logprob: -16.750045776367188
    8. '```' → logprob: -16.875045776367188
    9. '           ' → logprob: -17.000045776367188
    10. '                   ' → logprob: -17.125045776367188

Token 1091: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07615582644939423
    2. '-' → logprob: -2.9511559009552
    3. '[u' → logprob: -4.451155662536621
    4. ')' → logprob: -5.201155662536621
    5. ']' → logprob: -6.326155662536621
    6. '-u' → logprob: -6.451155662536621
    7. '_u' → logprob: -8.576155662536621
    8. ')-' → logprob: -8.951155662536621
    9. ' ' → logprob: -9.951155662536621
    10. 'u' → logprob: -10.201155662536621

Token 1092: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.11293933540582657
    2. '-' → logprob: -2.2379393577575684
    3. '-h' → logprob: -9.23793888092041
    4. '-H' → logprob: -11.73793888092041
    5. ' ' → logprob: -12.48793888092041
    6. '           ' → logprob: -12.61293888092041
    7. '-u' → logprob: -13.48793888092041
    8. ')' → logprob: -14.73793888092041
    9. '   ' → logprob: -14.86293888092041
    10. ' ' → logprob: -14.86293888092041

Token 1093: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -9.088346359931165e-07
    2. ' h' → logprob: -14.000000953674316
    3. '   ' → logprob: -17.375
    4. '```' → logprob: -18.125
    5. '           ' → logprob: -18.25
    6. 'chosen' → logprob: -19.0
    7. '	h' → logprob: -19.5
    8. '       ' → logprob: -20.25
    9. '                   ' → logprob: -20.875
    10. '<h' → logprob: -21.25

Token 1094: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -1.0280383548888494e-06
    2. 'u' → logprob: -15.500000953674316
    3. '```' → logprob: -15.625000953674316
    4. '   ' → logprob: -16.375001907348633
    5. '[u' → logprob: -16.375001907348633
    6. '_' → logprob: -16.750001907348633
    7. '[_' → logprob: -17.125001907348633
    8. '_i' → logprob: -17.125001907348633
    9. ' _' → logprob: -17.125001907348633
    10. ''_' → logprob: -17.125001907348633

Token 1095: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006790731567889452
    2. ')
' → logprob: -7.500679016113281
    3. ')+' → logprob: -9.250679016113281
    4. ' )' → logprob: -11.625679016113281
    5. '           ' → logprob: -12.375679016113281
    6. '```' → logprob: -12.875679016113281
    7. '))' → logprob: -13.000679016113281
    8. '),' → logprob: -13.125679016113281
    9. ')`' → logprob: -13.625679016113281
    10. '`)' → logprob: -13.875679016113281

Token 1096: ' climb' (ID: 27049)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4554379880428314
    2. 'h' → logprob: -1.7054380178451538
    3. 'abs' → logprob: -2.7054378986358643
    4. ')' → logprob: -3.0804378986358643
    5. '```' → logprob: -4.330438137054443
    6. '<|end|>' → logprob: -4.580438137054443
    7. ' h' → logprob: -4.830438137054443
    8. '(h' → logprob: -4.955438137054443
    9. ' (' → logprob: -5.205438137054443
    10. '(abs' → logprob: -5.580438137054443

Token 1097: '/' (ID: 14)
  Prédit: '_u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_u' → logprob: -0.48714420199394226
    2. '           ' → logprob: -1.7371442317962646
    3. 'or' → logprob: -2.4871442317962646
    4. ')' → logprob: -3.8621442317962646
    5. 'u' → logprob: -3.8621442317962646
    6. '(u' → logprob: -3.9871442317962646
    7. 'down' → logprob: -4.3621439933776855
    8. '[u' → logprob: -4.3621439933776855
    9. ' or' → logprob: -4.8621439933776855
    10. '#' → logprob: -4.8621439933776855

Token 1098: 'desc' (ID: 17186)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.025617066770792007
    2. 'u' → logprob: -4.0256171226501465
    3. 'desc' → logprob: -5.2756171226501465
    4. 'down' → logprob: -7.0256171226501465
    5. '_u' → logprob: -7.1506171226501465
    6. 'abs' → logprob: -8.400616645812988
    7. '```' → logprob: -9.025616645812988
    8. '_desc' → logprob: -9.900616645812988
    9. '_h' → logprob: -10.150616645812988
    10. ' h' → logprob: -10.775616645812988

Token 1099: 'end' (ID: 419)
  Prédit: 'end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -7.398067828034982e-05
    2. '```' → logprob: -10.50007438659668
    3. '   ' → logprob: -11.50007438659668
    4. ')' → logprob: -11.50007438659668
    5. 'ent' → logprob: -12.12507438659668
    6. 'en' → logprob: -12.37507438659668
    7. '
' → logprob: -13.25007438659668
    8. ']' → logprob: -13.25007438659668
    9. '           ' → logprob: -13.62507438659668
    10. '       ' → logprob: -13.62507438659668

Token 1100: ' on' (ID: 402)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5979982614517212
    2. 'on' → logprob: -1.4729982614517212
    3. ' on' → logprob: -2.9729981422424316
    4. ')' → logprob: -3.2229981422424316
    5. '           ' → logprob: -3.3479981422424316
    6. 'down' → logprob: -4.222998142242432
    7. 'to' → logprob: -4.597998142242432
    8. '               ' → logprob: -4.597998142242432
    9. ' from' → logprob: -4.972998142242432
    10. '(u' → logprob: -5.222998142242432

Token 1101: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0002407282590866089
    2. 'node' → logprob: -9.000240325927734
    3. ' u' → logprob: -9.875240325927734
    4. 'the' → logprob: -10.875240325927734
    5. 'tree' → logprob: -11.000240325927734
    6. '```' → logprob: -11.625240325927734
    7. 'current' → logprob: -11.875240325927734
    8. 'previous' → logprob: -13.000240325927734
    9. 'user' → logprob: -13.125240325927734
    10. '[u' → logprob: -13.125240325927734

Token 1102: ' before' (ID: 2254)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3601285517215729
    2. ' -' → logprob: -2.11012864112854
    3. '-' → logprob: -3.11012864112854
    4. '
' → logprob: -3.23512864112854
    5. ')' → logprob: -3.36012864112854
    6. '_u' → logprob: -3.48512864112854
    7. ')
' → logprob: -5.235128402709961
    8. '       ' → logprob: -5.235128402709961
    9. '               ' → logprob: -5.485128402709961
    10. '```' → logprob: -5.985128402709961

Token 1103: ' flying' (ID: 28022)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.04896804317831993
    2. 'h' → logprob: -3.9239680767059326
    3. 'fly' → logprob: -4.5489678382873535
    4. 'le' → logprob: -5.1739678382873535
    5. '```' → logprob: -5.6739678382873535
    6. 'flight' → logprob: -6.4239678382873535
    7. 'fl' → logprob: -6.6739678382873535
    8. 'fle' → logprob: -6.6739678382873535
    9. 'taking' → logprob: -6.7989678382873535
    10. 'going' → logprob: -7.4239678382873535

Token 1104: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6364322304725647
    2. 'if' → logprob: -1.26143217086792
    3. ' if' → logprob: -1.76143217086792
    4. '```' → logprob: -5.13643217086792
    5. ')' → logprob: -5.76143217086792
    6. 'for' → logprob: -6.38643217086792
    7. '
' → logprob: -6.63643217086792
    8. '               ' → logprob: -7.01143217086792
    9. ' for' → logprob: -7.51143217086792
    10. '#' → logprob: -7.63643217086792

Token 1105: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.032559096813201904
    2. '```' → logprob: -4.657558917999268
    3. 'for' → logprob: -5.407558917999268
    4. '+' → logprob: -5.407558917999268
    5. 'if' → logprob: -5.532558917999268
    6. ' +' → logprob: -6.282558917999268
    7. ' if' → logprob: -6.407558917999268
    8. ')' → logprob: -6.532558917999268
    9. ' for' → logprob: -6.782558917999268
    10. '#' → logprob: -6.782558917999268

Token 1106: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07951424270868301
    2. ')' → logprob: -3.204514265060425
    3. ' if' → logprob: -4.454514026641846
    4. 'if' → logprob: -5.204514026641846
    5. '       ' → logprob: -5.579514026641846
    6. '#' (adapté à ' #') → logprob: -5.829514026641846
    7. '               ' → logprob: -6.079514026641846
    8. '```' → logprob: -6.454514026641846
    9. '            
' → logprob: -6.829514026641846
    10. '<|end|>' → logprob: -6.954514026641846

Token 1107: ' -' (ID: 533)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4368134140968323
    2. ' if' → logprob: -2.1868133544921875
    3. 'if' → logprob: -2.1868133544921875
    4. 'for' → logprob: -3.5618133544921875
    5. ' for' → logprob: -4.0618133544921875
    6. '+' → logprob: -4.0618133544921875
    7. '#' → logprob: -4.1868133544921875
    8. '               ' → logprob: -4.4368133544921875
    9. '       ' → logprob: -4.6868133544921875
    10. ')' → logprob: -5.0618133544921875

Token 1108: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.22836585342884064
    2. '2' → logprob: -1.6033658981323242
    3. 'h' → logprob: -6.103365898132324
    4. 'abs' → logprob: -9.478365898132324
    5. ' t' → logprob: -9.478365898132324
    6. '0' → logprob: -9.603365898132324
    7. 'H' → logprob: -9.728365898132324
    8. '+' → logprob: -9.728365898132324
    9. ' ' → logprob: -9.728365898132324
    10. ')t' → logprob: -9.978365898132324

Token 1109: ':' (ID: 25)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3580504357814789
    2. '+' → logprob: -1.6080504655838013
    3. '*' → logprob: -2.7330503463745117
    4. ' *' → logprob: -4.108050346374512
    5. ')' → logprob: -4.608050346374512
    6. '#' → logprob: -5.483050346374512
    7. ' #' → logprob: -6.983050346374512
    8. '
' → logprob: -7.108050346374512
    9. ' ' → logprob: -7.483050346374512
    10. ' -' → logprob: -7.733050346374512

Token 1110: ' flying' (ID: 28022)
  Prédit: 'fly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fly' → logprob: -0.13091185688972473
    2. 't' → logprob: -2.6309118270874023
    3. 'f' → logprob: -3.3809118270874023
    4. ' fly' → logprob: -4.880911827087402
    5. ' flying' → logprob: -5.380911827087402
    6. 'flight' → logprob: -5.755911827087402
    7. ' t' → logprob: -7.755911827087402
    8. '1' → logprob: -8.130911827087402
    9. '#' → logprob: -8.880911827087402
    10. '```' → logprob: -9.505911827087402

Token 1111: ' time' (ID: 1058)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.05312979221344
    2. ')' → logprob: -1.17812979221344
    3. '+' → logprob: -1.80312979221344
    4. 'time' → logprob: -2.4281296730041504
    5. '<|end|>' → logprob: -3.1781296730041504
    6. '<|end|>' → logprob: -4.17812967300415
    7. ' time' → logprob: -4.30312967300415
    8. ' )' → logprob: -5.42812967300415
    9. '_time' → logprob: -5.92812967300415
    10. '
' → logprob: -6.05312967300415

Token 1112: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8270429968833923
    2. ')' → logprob: -1.202043056488037
    3. ' +' → logprob: -1.452043056488037
    4. '           ' → logprob: -3.827043056488037
    5. '<|end|>' → logprob: -6.702043056488037
    6. '+
' → logprob: -6.952043056488037
    7. '```' → logprob: -7.202043056488037
    8. ' )' → logprob: -7.952043056488037
    9. ')+' → logprob: -8.077042579650879
    10. ' 
' → logprob: -8.077042579650879

Token 1113: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.41338932514190674
    2. '+' → logprob: -1.4133893251419067
    3. ' +' → logprob: -3.288389205932617
    4. '           ' → logprob: -3.538389205932617
    5. '<|end|>' → logprob: -5.163389205932617
    6. ' ' → logprob: -5.413389205932617
    7. ' 
' → logprob: -5.413389205932617
    8. ' )' → logprob: -6.288389205932617
    9. '#' → logprob: -6.288389205932617
    10. 't' → logprob: -6.663389205932617

Token 1114: ' #' (ID: 1069)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.3007642030715942
    2. '+' → logprob: -1.4257642030715942
    3. ' +' → logprob: -1.4257642030715942
    4. ' t' → logprob: -2.3007640838623047
    5. ')' → logprob: -2.9257640838623047
    6. ' ' → logprob: -3.0507640838623047
    7. '           ' → logprob: -3.9257640838623047
    8. '   ' → logprob: -5.425764083862305
    9. ' 
' → logprob: -5.550764083862305
    10. '2' → logprob: -6.175764083862305

Token 1115: ' -' (ID: 533)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.30194079875946045
    2. '       ' → logprob: -2.80194091796875
    3. '+' → logprob: -2.92694091796875
    4. ')' → logprob: -3.17694091796875
    5. ' ' → logprob: -3.80194091796875
    6. '#' → logprob: -3.92694091796875
    7. 't' → logprob: -4.17694091796875
    8. ' +' → logprob: -4.80194091796875
    9. '   ' → logprob: -4.92694091796875
    10. '               ' → logprob: -5.17694091796875

Token 1116: ' H' (ID: 487)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0031361279543489218
    2. 'H' → logprob: -6.753136157989502
    3. '2' → logprob: -7.003136157989502
    4. '+' → logprob: -7.253136157989502
    5. 'h' → logprob: -9.503135681152344
    6. ' t' → logprob: -9.878135681152344
    7. '           ' → logprob: -10.253135681152344
    8. '+t' → logprob: -10.628135681152344
    9. 'cost' → logprob: -10.628135681152344
    10. '(t' → logprob: -10.753135681152344

Token 1117: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0010669894982129335
    2. '[u' → logprob: -6.876067161560059
    3. 'v' → logprob: -10.626067161560059
    4. '(v' → logprob: -12.251067161560059
    5. '```' → logprob: -13.001067161560059
    6. '_v' → logprob: -14.251067161560059
    7. 'u' → logprob: -14.751067161560059
    8. '<v' → logprob: -14.876067161560059
    9. '[' → logprob: -15.126067161560059
    10. '_u' → logprob: -15.251067161560059

Token 1118: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1491839587688446
    2. '-' → logprob: -2.524183988571167
    3. '[v' → logprob: -2.899183988571167
    4. ')' → logprob: -6.524183750152588
    5. '[u' → logprob: -6.774183750152588
    6. '[' → logprob: -8.399184226989746
    7. ']' → logprob: -8.399184226989746
    8. '```' → logprob: -9.024184226989746
    9. ' ' → logprob: -9.399184226989746
    10. 'v' → logprob: -10.399184226989746

Token 1119: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06207277998328209
    2. '-' → logprob: -2.81207275390625
    3. ')' → logprob: -10.18707275390625
    4. '```' → logprob: -11.06207275390625
    5. '[u' → logprob: -11.18707275390625
    6. ' ' → logprob: -11.43707275390625
    7. '[' → logprob: -11.68707275390625
    8. '
' → logprob: -12.81207275390625
    9. '           ' → logprob: -13.06207275390625
    10. 'u' → logprob: -13.56207275390625

Token 1120: ' (' (ID: 350)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.04608422890305519
    2. '(h' → logprob: -3.17108416557312
    3. ' h' → logprob: -6.296084403991699
    4. ' (' → logprob: -7.046084403991699
    5. '(' → logprob: -8.1710844039917
    6. '```' → logprob: -10.6710844039917
    7. '_h' → logprob: -11.1710844039917
    8. '   ' → logprob: -11.1710844039917
    9. ' ' → logprob: -11.7960844039917
    10. 'chosen' → logprob: -12.4210844039917

Token 1121: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.006742135155946016
    2. '(h' → logprob: -5.006742000579834
    3. ' h' → logprob: -11.381742477416992
    4. ' (' → logprob: -12.006742477416992
    5. '   ' → logprob: -12.756742477416992
    6. '_h' → logprob: -13.881742477416992
    7. '	h' → logprob: -14.506742477416992
    8. '           ' → logprob: -14.506742477416992
    9. ')' → logprob: -14.756742477416992
    10. 'hu' → logprob: -14.756742477416992

Token 1122: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -0.00015872348740231246
    2. 'u' → logprob: -8.750158309936523
    3. 'h' → logprob: -16.500158309936523
    4. '```' → logprob: -17.375158309936523
    5. '[u' → logprob: -17.625158309936523
    6. '(u' → logprob: -18.250158309936523
    7. '   ' → logprob: -18.375158309936523
    8. 'uc' → logprob: -19.125158309936523
    9. 'ub' → logprob: -19.250158309936523
    10. ''u' → logprob: -19.375158309936523

Token 1123: ' -' (ID: 533)
  Prédit: '_u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_u' → logprob: -0.33757179975509644
    2. '+' → logprob: -1.4625718593597412
    3. ' +' → logprob: -2.962571859359741
    4. 'u' → logprob: -6.212571620941162
    5. ')' → logprob: -7.462571620941162
    6. ')+' → logprob: -8.83757209777832
    7. '[u' → logprob: -9.08757209777832
    8. '           ' → logprob: -9.58757209777832
    9. '```' → logprob: -9.83757209777832
    10. '-u' → logprob: -9.83757209777832

Token 1124: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.000609271228313446
    2. ' t' → logprob: -7.750609397888184
    3. '(t' → logprob: -9.500609397888184
    4. 'h' → logprob: -9.750609397888184
    5. 'u' → logprob: -10.625609397888184
    6. '(u' → logprob: -12.250609397888184
    7. '_t' → logprob: -12.250609397888184
    8. '   ' → logprob: -12.750609397888184
    9. ' (' → logprob: -13.125609397888184
    10. '```' → logprob: -13.250609397888184

Token 1125: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005676822271198034
    2. '):' → logprob: -5.630676746368408
    3. ')+' → logprob: -6.255676746368408
    4. '):
' → logprob: -10.130677223205566
    5. ' )' → logprob: -10.380677223205566
    6. '           ' → logprob: -10.755677223205566
    7. ')
' → logprob: -10.880677223205566
    8. '))' → logprob: -10.880677223205566
    9. '```' → logprob: -11.755677223205566
    10. '+' → logprob: -12.505677223205566

Token 1126: ' climb' (ID: 27049)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.013966157101094723
    2. ' H' → logprob: -5.013966083526611
    3. 'h' → logprob: -5.638966083526611
    4. '(H' → logprob: -6.013966083526611
    5. 'cost' → logprob: -7.888966083526611
    6. '(h' → logprob: -8.38896656036377
    7. ' (' → logprob: -8.38896656036377
    8. 'abs' → logprob: -9.01396656036377
    9. ' h' → logprob: -9.76396656036377
    10. '#' → logprob: -9.88896656036377

Token 1127: ' on' (ID: 402)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.33162569999694824
    2. '_time' → logprob: -1.4566256999969482
    3. '           ' → logprob: -3.8316256999969482
    4. ' time' → logprob: -4.081625938415527
    5. '_u' → logprob: -5.206625938415527
    6. '               ' → logprob: -5.706625938415527
    7. '```' → logprob: -7.956625938415527
    8. '                   ' → logprob: -8.081625938415527
    9. '   ' → logprob: -8.331625938415527
    10. '       ' → logprob: -8.456625938415527

Token 1128: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.011426322162151337
    2. 'h' → logprob: -4.5114264488220215
    3. 'u' → logprob: -8.636425971984863
    4. '(v' → logprob: -9.761425971984863
    5. ' v' → logprob: -9.761425971984863
    6. '```' → logprob: -10.261425971984863
    7. '(h' → logprob: -10.886425971984863
    8. '
' → logprob: -11.511425971984863
    9. ' h' → logprob: -12.761425971984863
    10. '(' → logprob: -13.011425971984863

Token 1129: ' after' (ID: 1934)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07841893285512924
    2. ' +' → logprob: -2.9534189701080322
    3. '
' → logprob: -4.828418731689453
    4. '+' → logprob: -5.453418731689453
    5. '```' → logprob: -5.578418731689453
    6. '       ' → logprob: -6.453418731689453
    7. ' if' → logprob: -6.703418731689453
    8. ' for' → logprob: -7.328418731689453
    9. 'if' → logprob: -7.328418731689453
    10. ')' → logprob: -7.328418731689453

Token 1130: ' flying' (ID: 28022)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.00036894375807605684
    2. ' h' → logprob: -8.62536907196045
    3. '(h' → logprob: -9.12536907196045
    4. '           ' → logprob: -11.25036907196045
    5. '```' → logprob: -11.37536907196045
    6. '   ' → logprob: -11.37536907196045
    7. 'u' → logprob: -12.00036907196045
    8. '(' → logprob: -12.12536907196045
    9. ' (' → logprob: -12.25036907196045
    10. '1' → logprob: -12.25036907196045

Token 1131: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002605387009680271
    2. ' if' → logprob: -7.252605438232422
    3. '```' → logprob: -7.627605438232422
    4. ')' → logprob: -7.752605438232422
    5. '       ' → logprob: -7.877605438232422
    6. 'if' → logprob: -8.127605438232422
    7. '               ' → logprob: -9.877605438232422
    8. ' for' → logprob: -10.002605438232422
    9. 'for' → logprob: -10.002605438232422
    10. ',' → logprob: -10.127605438232422

Token 1132: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3218778669834137
    2. '+' → logprob: -1.9468778371810913
    3. ' +' → logprob: -2.446877956390381
    4. ')' → logprob: -3.571877956390381
    5. '```' → logprob: -4.821877956390381
    6. '<|end|>' → logprob: -5.696877956390381
    7. '+
' → logprob: -6.696877956390381
    8. '            
' → logprob: -7.446877956390381
    9. '       ' → logprob: -7.696877956390381
    10. '          ' → logprob: -8.071877479553223

Token 1133: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.061459314078092575
    2. ' if' → logprob: -3.8114593029022217
    3. '+' → logprob: -4.061459541320801
    4. 'if' → logprob: -4.686459541320801
    5. ' +' → logprob: -4.811459541320801
    6. ')' → logprob: -7.311459541320801
    7. ' for' → logprob: -7.561459541320801
    8. 'for' → logprob: -7.686459541320801
    9. '```' → logprob: -7.936459541320801
    10. '       ' → logprob: -8.5614595413208

Token 1134: ' -' (ID: 533)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6488152742385864
    2. '           ' → logprob: -1.0238152742385864
    3. ' if' → logprob: -2.148815155029297
    4. 'for' → logprob: -7.023815155029297
    5. '   ' → logprob: -8.148815155029297
    6. '       ' → logprob: -9.023815155029297
    7. ' for' → logprob: -9.273815155029297
    8. '
' → logprob: -10.273815155029297
    9. ' ' → logprob: -10.773815155029297
    10. '               ' → logprob: -11.273815155029297

Token 1135: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0005219352315180004
    2. ' t' → logprob: -7.625522136688232
    3. '+' → logprob: -11.500521659851074
    4. '           ' → logprob: -12.250521659851074
    5. '   ' → logprob: -12.875521659851074
    6. '0' → logprob: -12.875521659851074
    7. '+t' → logprob: -13.000521659851074
    8. '2' → logprob: -13.250521659851074
    9. '(t' → logprob: -13.750521659851074
    10. ' ' → logprob: -13.875521659851074

Token 1136: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48554420471191406
    2. '<|end|>' → logprob: -1.735544204711914
    3. '<|end|>' → logprob: -2.110544204711914
    4. ' +=' → logprob: -3.235544204711914
    5. ' +' → logprob: -4.485544204711914
    6. '+' → logprob: -4.860544204711914
    7. '           ' → logprob: -5.235544204711914
    8. ' *' → logprob: -5.985544204711914
    9. '*' → logprob: -5.985544204711914
    10. '+=' → logprob: -6.360544204711914

Token 1137: ' flying' (ID: 28022)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.001725157257169485
    2. ' t' → logprob: -6.376725196838379
    3. '+' → logprob: -11.001725196838379
    4. ' ' → logprob: -13.751725196838379
    5. '
' → logprob: -13.876725196838379
    6. ' +' → logprob: -14.126725196838379
    7. '+t' → logprob: -14.251725196838379
    8. '`t' → logprob: -14.501725196838379
    9. ' ' → logprob: -14.751725196838379
    10. ')t' → logprob: -15.626725196838379

Token 1138: ' time' (ID: 1058)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9732734560966492
    2. '<|end|>' → logprob: -1.723273515701294
    3. 'time' → logprob: -1.973273515701294
    4. '           ' → logprob: -2.473273515701294
    5. '<|end|>' → logprob: -2.848273515701294
    6. '       ' → logprob: -3.473273515701294
    7. '
' → logprob: -3.848273515701294
    8. 'times' → logprob: -3.973273515701294
    9. ')
' → logprob: -4.098273277282715
    10. ' time' → logprob: -4.223273277282715

Token 1139: ' counted' (ID: 60500)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017737677320837975
    2. '
' → logprob: -5.017737865447998
    3. ' if' → logprob: -5.267737865447998
    4. '       ' → logprob: -5.892737865447998
    5. 'if' → logprob: -7.017737865447998
    6. ')' → logprob: -7.392737865447998
    7. '<|end|>' → logprob: -8.14273738861084
    8. ',' → logprob: -8.39273738861084
    9. '<|end|>' → logprob: -8.76773738861084
    10. '		' → logprob: -8.89273738861084

Token 1140: ' again' (ID: 2418)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19828735291957855
    2. ' if' → logprob: -2.32328724861145
    3. 'if' → logprob: -3.07328724861145
    4. '<|end|>' → logprob: -4.573287487030029
    5. '<|end|>' → logprob: -4.823287487030029
    6. ')' → logprob: -5.323287487030029
    7. '
' → logprob: -5.323287487030029
    8. '               ' → logprob: -6.573287487030029
    9. '+' → logprob: -6.948287487030029
    10. '		' → logprob: -7.323287487030029

Token 1141: '?' (ID: 30)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00665995804592967
    2. '
' → logprob: -5.631659984588623
    3. ')' → logprob: -6.256659984588623
    4. ' if' → logprob: -8.131659507751465
    5. ',' → logprob: -8.631659507751465
    6. '<|end|>' → logprob: -9.131659507751465
    7. '```' → logprob: -9.256659507751465
    8. '       ' → logprob: -9.256659507751465
    9. ')
' → logprob: -9.881659507751465
    10. '            
' → logprob: -10.006659507751465

Token 1142: ' Wait' (ID: 24305)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.862318754196167
    2. '
' → logprob: -2.112318754196167
    3. ')' → logprob: -2.237318754196167
    4. '           ' → logprob: -2.487318754196167
    5. ' 
' → logprob: -3.237318754196167
    6. '<|end|>' → logprob: -3.362318754196167
    7. '+' → logprob: -3.737318754196167
    8. ' (' → logprob: -3.987318754196167
    9. '<|end|>' → logprob: -4.362318992614746
    10. ' #' → logprob: -4.362318992614746

Token 1143: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9166629910469055
    2. '<|end|>' → logprob: -1.5416629314422607
    3. ' 
' → logprob: -2.0416629314422607
    4. '+' → logprob: -2.5416629314422607
    5. '<|end|>' → logprob: -3.2916629314422607
    6. '#' → logprob: -3.2916629314422607
    7. ' ' → logprob: -3.5416629314422607
    8. ' continue' → logprob: -4.04166316986084
    9. '
' → logprob: -4.66666316986084
    10. '=' → logprob: -4.79166316986084

Token 1144: ' flying' (ID: 28022)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.33818238973617554
    2. ')' → logprob: -3.0881824493408203
    3. '-' → logprob: -3.2131824493408203
    4. ' t' → logprob: -3.2131824493408203
    5. ' +' → logprob: -3.2131824493408203
    6. ' continue' → logprob: -3.3381824493408203
    7. '#' → logprob: -3.9631824493408203
    8. 't' → logprob: -4.08818244934082
    9. ' ' → logprob: -4.96318244934082
    10. '=' → logprob: -4.96318244934082

Token 1145: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.3452240228652954
    2. '_time' → logprob: -1.9702240228652954
    3. ' time' → logprob: -2.345223903656006
    4. ')' → logprob: -3.470223903656006
    5. 'cost' → logprob: -4.845223903656006
    6. '*' → logprob: -4.970223903656006
    7. 'times' → logprob: -5.595223903656006
    8. '_cost' → logprob: -6.970223903656006
    9. '),' → logprob: -7.095223903656006
    10. '_times' → logprob: -7.720223903656006

Token 1146: ' t' (ID: 260)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7974377274513245
    2. '<|end|>' → logprob: -1.7974376678466797
    3. '<|end|>' → logprob: -2.0474376678466797
    4. '+' → logprob: -2.6724376678466797
    5. ' is' → logprob: -2.9224376678466797
    6. '*' → logprob: -3.4224376678466797
    7. '#' → logprob: -4.04743766784668
    8. 'is' → logprob: -4.42243766784668
    9. '=' → logprob: -4.79743766784668
    10. ',' → logprob: -4.79743766784668

Token 1147: ' is' (ID: 382)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9954823851585388
    2. '<|end|>' → logprob: -1.2454824447631836
    3. '<|end|>' → logprob: -1.4954824447631836
    4. '+' → logprob: -4.120482444763184
    5. '*' → logprob: -4.120482444763184
    6. '
' → logprob: -4.120482444763184
    7. '#' → logprob: -4.620482444763184
    8. ' +' → logprob: -4.745482444763184
    9. '           ' → logprob: -4.870482444763184
    10. ',' → logprob: -5.245482444763184

Token 1148: ' once' (ID: 4730)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2921540439128876
    2. 'not' → logprob: -2.79215407371521
    3. 'added' → logprob: -3.04215407371521
    4. '0' → logprob: -3.41715407371521
    5. 't' → logprob: -3.79215407371521
    6. ' not' → logprob: -4.042153835296631
    7. ' added' → logprob: -4.417153835296631
    8. ')' → logprob: -4.917153835296631
    9. ' counted' → logprob: -4.917153835296631
    10. 'already' → logprob: -4.917153835296631

Token 1149: ' only' (ID: 1606)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1150: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28360217809677124
    2. '       ' → logprob: -2.533602237701416
    3. 'if' → logprob: -2.908602237701416
    4. ' if' → logprob: -3.033602237701416
    5. '#' → logprob: -3.283602237701416
    6. '
' → logprob: -5.033602237701416
    7. '<|end|>' → logprob: -5.658602237701416
    8. '<|end|>' → logprob: -5.783602237701416
    9. ')' → logprob: -6.283602237701416
    10. 'continue' → logprob: -6.408602237701416

Token 1151: ' remove' (ID: 6234)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21894827485084534
    2. '#' → logprob: -3.0939483642578125
    3. '+' → logprob: -3.4689483642578125
    4. '-' → logprob: -3.5939483642578125
    5. '<|end|>' → logprob: -3.9689483642578125
    6. '=' → logprob: -4.0939483642578125
    7. '<|end|>' → logprob: -4.9689483642578125
    8. ':' → logprob: -5.0939483642578125
    9. '           ' → logprob: -5.4689483642578125
    10. '):
' → logprob: -5.7189483642578125

Token 1152: ' second' (ID: 3099)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20158651471138
    2. '           ' → logprob: -2.3265864849090576
    3. ' -' → logprob: -3.2015864849090576
    4. '#' → logprob: -4.076586723327637
    5. ')' → logprob: -4.451586723327637
    6. '=' → logprob: -4.826586723327637
    7. '       ' → logprob: -6.326586723327637
    8. '-
' → logprob: -6.951586723327637
    9. '               ' → logprob: -7.326586723327637
    10. ' =' → logprob: -7.951586723327637

Token 1153: ' t' (ID: 260)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02029942162334919
    2. ' -' → logprob: -4.520299434661865
    3. '           ' → logprob: -5.770299434661865
    4. '#' → logprob: -5.895299434661865
    5. ')' → logprob: -6.145299434661865
    6. '=' → logprob: -7.645299434661865
    7. '<|end|>' → logprob: -9.270298957824707
    8. '       ' → logprob: -9.395298957824707
    9. ' -=' → logprob: -9.645298957824707
    10. '-)' → logprob: -9.895298957824707

Token 1154: '
' (ID: 198)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.007661036215722561
    2. '           ' → logprob: -5.132660865783691
    3. ' -' → logprob: -6.757660865783691
    4. '#' → logprob: -8.882660865783691
    5. '-cost' → logprob: -9.007660865783691
    6. '<|end|>' → logprob: -9.382660865783691
    7. '       ' → logprob: -10.132660865783691
    8. '=' → logprob: -10.382660865783691
    9. '          ' → logprob: -10.382660865783691
    10. ')' → logprob: -11.007660865783691

Token 1155: '           ' (ID: 352)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02645866945385933
    2. '           ' → logprob: -4.776458740234375
    3. ' -' → logprob: -4.776458740234375
    4. '#' → logprob: -5.151458740234375
    5. '=' → logprob: -7.526458740234375
    6. ')' → logprob: -7.651458740234375
    7. '<|end|>' → logprob: -7.776458740234375
    8. '          ' → logprob: -7.901458740234375
    9. '       ' → logprob: -7.901458740234375
    10. '         ' → logprob: -8.401458740234375

Token 1156: ' #' (ID: 1069)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.351596474647522
    2. '           ' → logprob: -1.351596474647522
    3. '#' (adapté à ' #') → logprob: -3.9765963554382324
    4. ' -' → logprob: -4.726596355438232
    5. 'cost' → logprob: -5.726596355438232
    6. '-cost' → logprob: -5.726596355438232
    7. '               ' → logprob: -7.851596355438232
    8. '       ' → logprob: -7.851596355438232
    9. '          ' → logprob: -7.976596355438232
    10. 'continue' → logprob: -8.22659683227539

Token 1157: ' Actually' (ID: 50557)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5918229222297668
    2. '-' → logprob: -1.216822862625122
    3. '#' → logprob: -2.216822862625122
    4. ' -' → logprob: -3.841822862625122
    5. '       ' → logprob: -5.091823101043701
    6. ')' → logprob: -6.091823101043701
    7. '<|end|>' → logprob: -6.216823101043701
    8. 'cost' → logprob: -6.341823101043701
    9. '-cost' → logprob: -6.841823101043701
    10. '<|end|>' → logprob: -7.216823101043701

Token 1158: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5345116257667542
    2. 'cost' → logprob: -1.2845115661621094
    3. '-' → logprob: -2.6595115661621094
    4. ')' → logprob: -3.6595115661621094
    5. ' cost' → logprob: -4.409511566162109
    6. '<|end|>' → logprob: -4.534511566162109
    7. '<|end|>' → logprob: -5.534511566162109
    8. 'continue' → logprob: -5.784511566162109
    9. 'pass' → logprob: -6.034511566162109
    10. '...' → logprob: -6.909511566162109

Token 1159: ' flying' (ID: 28022)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.15499180555343628
    2. '#' → logprob: -2.029991865158081
    3. ' cost' → logprob: -4.904991626739502
    4. 'continue' → logprob: -5.904991626739502
    5. 'pass' → logprob: -7.404991626739502
    6. 'the' → logprob: -8.15499210357666
    7. '           ' → logprob: -8.52999210357666
    8. '
' → logprob: -8.77999210357666
    9. '...' → logprob: -8.90499210357666
    10. 't' → logprob: -9.15499210357666

Token 1160: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.28117671608924866
    2. ' time' → logprob: -1.7811766862869263
    3. '_time' → logprob: -2.906176805496216
    4. ')' → logprob: -4.031176567077637
    5. ' )' → logprob: -6.531176567077637
    6. '_' → logprob: -6.906176567077637
    7. 't' → logprob: -7.531176567077637
    8. 'cost' → logprob: -8.406176567077637
    9. ',' → logprob: -8.656176567077637
    10. ' _' → logprob: -9.281176567077637

Token 1161: ' counted' (ID: 60500)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2705819010734558
    2. '<|end|>' → logprob: -2.2705819606781006
    3. '<|end|>' → logprob: -2.6455819606781006
    4. ' is' → logprob: -4.0205817222595215
    5. ' only' → logprob: -4.3955817222595215
    6. '#' → logprob: -5.1455817222595215
    7. ' )' → logprob: -5.1455817222595215
    8. ':' → logprob: -5.6455817222595215
    9. '=' → logprob: -5.6455817222595215
    10. ',' → logprob: -6.3955817222595215

Token 1162: ' twice' (ID: 18370)
  Prédit: 'only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'only' → logprob: -0.6884129047393799
    2. '-' → logprob: -1.4384129047393799
    3. 'once' → logprob: -2.06341290473938
    4. '-=' → logprob: -2.93841290473938
    5. ' only' → logprob: -3.18841290473938
    6. '=' → logprob: -3.68841290473938
    7. ' once' → logprob: -5.438412666320801
    8. ' -=' → logprob: -5.938412666320801
    9. ')' → logprob: -6.313412666320801
    10. '+=' → logprob: -6.813412666320801

Token 1163: ' in' (ID: 306)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4278562664985657
    2. ' -' → logprob: -1.427856206893921
    3. '           ' → logprob: -2.302856206893921
    4. '       ' → logprob: -6.3028564453125
    5. '-cost' → logprob: -6.5528564453125
    6. '<|end|>' → logprob: -6.9278564453125
    7. '=' → logprob: -7.0528564453125
    8. '<|end|>' → logprob: -7.0528564453125
    9. ')' → logprob: -7.8028564453125
    10. ' -=' → logprob: -8.5528564453125

Token 1164: ' above' (ID: 5151)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.4648372232913971
    2. '-' → logprob: -1.7148371934890747
    3. ')' → logprob: -2.2148373126983643
    4. '+' → logprob: -3.2148373126983643
    5. '-cost' → logprob: -3.9648373126983643
    6. '-c' → logprob: -4.839837074279785
    7. 'the' → logprob: -5.839837074279785
    8. '```' → logprob: -6.464837074279785
    9. '-h' → logprob: -6.714837074279785
    10. ' cost' → logprob: -6.964837074279785

Token 1165: '.
' (ID: 558)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.15953603386878967
    2. ' -' → logprob: -2.659536123275757
    3. '           ' → logprob: -2.659536123275757
    4. '-cost' → logprob: -5.284535884857178
    5. '       ' → logprob: -6.659535884857178
    6. ')' → logprob: -8.034536361694336
    7. '#' → logprob: -9.159536361694336
    8. 'cost' → logprob: -9.284536361694336
    9. '```' → logprob: -9.284536361694336
    10. '          ' → logprob: -9.534536361694336

Token 1166: '           ' (ID: 352)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.210378497838974
    2. '           ' → logprob: -2.585378408432007
    3. '<|end|>' → logprob: -3.335378408432007
    4. '#' → logprob: -3.710378408432007
    5. ')' → logprob: -4.085378646850586
    6. ' -' → logprob: -4.210378646850586
    7. '<|end|>' → logprob: -5.210378646850586
    8. '       ' → logprob: -5.585378646850586
    9. '=' → logprob: -6.335378646850586
    10. '+' → logprob: -6.710378646850586

Token 1167: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6837345361709595
    2. '-' → logprob: -0.9337345361709595
    3. ' -' → logprob: -3.18373441696167
    4. 'cost' → logprob: -4.05873441696167
    5. ' cost' → logprob: -5.05873441696167
    6. '-cost' → logprob: -5.18373441696167
    7. ')' → logprob: -5.30873441696167
    8. ' if' → logprob: -5.43373441696167
    9. '#' (adapté à ' #') → logprob: -5.80873441696167
    10. 'continue' → logprob: -5.93373441696167

Token 1168: ' Correct' (ID: 71686)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6233875155448914
    2. '           ' → logprob: -0.8733875155448914
    3. ' -' → logprob: -3.373387575149536
    4. '#' → logprob: -5.873387336730957
    5. '       ' → logprob: -6.123387336730957
    6. 'cost' → logprob: -6.498387336730957
    7. '-cost' → logprob: -6.748387336730957
    8. ')' → logprob: -7.498387336730957
    9. 'for' → logprob: -7.623387336730957
    10. ' for' → logprob: -7.873387336730957

Token 1169: ' formula' (ID: 20690)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7198955416679382
    2. 'cost' → logprob: -1.094895601272583
    3. '-' → logprob: -2.469895601272583
    4. '=' → logprob: -3.094895601272583
    5. ' cost' → logprob: -3.719895601272583
    6. ' =' → logprob: -4.719895362854004
    7. ' -' → logprob: -5.219895362854004
    8. '-cost' → logprob: -6.094895362854004
    9. '#' → logprob: -6.719895362854004
    10. '```' → logprob: -7.094895362854004

Token 1170: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0784498453140259
    2. '           ' → logprob: -1.4534498453140259
    3. '-' → logprob: -1.8284498453140259
    4. ' -' → logprob: -2.0784497261047363
    5. '=' → logprob: -2.4534497261047363
    6. ' -=' → logprob: -3.5784497261047363
    7. 'cost' → logprob: -4.453449726104736
    8. '-cost' → logprob: -5.328449726104736
    9. ' cost' → logprob: -6.328449726104736
    10. ')' → logprob: -6.828449726104736

Token 1171: ':' (ID: 25)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.19704298675060272
    2. 'cost' → logprob: -1.9470429420471191
    3. ' cur' → logprob: -3.697042942047119
    4. ' cost' → logprob: -4.697042942047119
    5. 'abs' → logprob: -6.322042942047119
    6. '           ' → logprob: -8.447043418884277
    7. ' abs' → logprob: -9.072043418884277
    8. '```' → logprob: -10.447043418884277
    9. '               ' → logprob: -10.697043418884277
    10. '=' → logprob: -11.322043418884277

Token 1172: ' abs' (ID: 8443)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.623166561126709
    2. 'cost' → logprob: -0.998166561126709
    3. ' cur' → logprob: -3.248166561126709
    4. ' cost' → logprob: -3.498166561126709
    5. 'abs' → logprob: -3.748166561126709
    6. ' abs' → logprob: -6.248166561126709
    7. '           ' → logprob: -7.873166561126709
    8. '               ' → logprob: -9.873167037963867
    9. '```' → logprob: -9.873167037963867
    10. '`' → logprob: -11.123167037963867

Token 1173: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.000805341056548059
    2. '(' → logprob: -7.125805377960205
    3. ' (' → logprob: -14.625804901123047
    4. '(
' → logprob: -14.875804901123047
    5. ')' → logprob: -17.250804901123047
    6. 'H' → logprob: -18.250804901123047
    7. '```' → logprob: -18.750804901123047
    8. '(abs' → logprob: -19.250804901123047
    9. '(C' → logprob: -19.375804901123047
    10. '\(' → logprob: -19.375804901123047

Token 1174: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.3856492842023727e-06
    2. '```' → logprob: -14.250000953674316
    3. '[' → logprob: -15.000000953674316
    4. '(u' → logprob: -15.500000953674316
    5. 'u' → logprob: -16.875001907348633
    6. '[
' → logprob: -17.125001907348633
    7. '[user' → logprob: -17.750001907348633
    8. '
' → logprob: -19.125001907348633
    9. ' [' → logprob: -19.250001907348633
    10. '<u' → logprob: -20.250001907348633

Token 1175: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.008995180018246174
    2. '-' → logprob: -4.758995056152344
    3. '[u' → logprob: -8.758995056152344
    4. ')' → logprob: -9.008995056152344
    5. '-u' → logprob: -9.633995056152344
    6. ']' → logprob: -10.883995056152344
    7. ' ' → logprob: -12.133995056152344
    8. '[' → logprob: -12.633995056152344
    9. 'u' → logprob: -13.258995056152344
    10. ')-' → logprob: -13.758995056152344

Token 1176: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12705683708190918
    2. '-' → logprob: -2.127056837081909
    3. '-h' → logprob: -9.627057075500488
    4. '-u' → logprob: -10.002057075500488
    5. '[u' → logprob: -12.127057075500488
    6. '[' → logprob: -12.627057075500488
    7. ')' → logprob: -13.002057075500488
    8. ' ' → logprob: -13.377057075500488
    9. '-H' → logprob: -13.752057075500488
    10. ' ' → logprob: -13.877057075500488

Token 1177: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -3.607391408877447e-05
    2. ' h' → logprob: -10.250036239624023
    3. '```' → logprob: -14.750036239624023
    4. '	h' → logprob: -16.875036239624023
    5. '   ' → logprob: -17.125036239624023
    6. '+h' → logprob: -17.625036239624023
    7. '           ' → logprob: -18.125036239624023
    8. '``' → logprob: -18.250036239624023
    9. '(h' → logprob: -18.250036239624023
    10. '       ' → logprob: -18.375036239624023

Token 1178: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -2.856408536899835e-05
    2. '[u' → logprob: -11.125028610229492
    3. 'u' → logprob: -11.875028610229492
    4. '```' → logprob: -12.000028610229492
    5. '`' → logprob: -15.625028610229492
    6. '   ' → logprob: -16.000028610229492
    7. '(u' → logprob: -16.125028610229492
    8. '``' → logprob: -16.250028610229492
    9. '[_' → logprob: -17.250028610229492
    10. ')' → logprob: -17.250028610229492

Token 1179: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09246816486120224
    2. ' -' → logprob: -2.59246826171875
    3. '-' → logprob: -5.09246826171875
    4. ')+' → logprob: -5.34246826171875
    5. ' +' → logprob: -6.59246826171875
    6. '           ' → logprob: -7.59246826171875
    7. '+' → logprob: -8.34246826171875
    8. ' )' → logprob: -8.46746826171875
    9. '),' → logprob: -9.96746826171875
    10. '          ' → logprob: -10.34246826171875

Token 1180: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.23455797135829926
    2. '+' → logprob: -1.6095579862594604
    3. ' -' → logprob: -5.48455810546875
    4. '-' → logprob: -6.10955810546875
    5. ')' → logprob: -6.73455810546875
    6. '           ' → logprob: -6.85955810546875
    7. '```' → logprob: -8.85955810546875
    8. '+t' → logprob: -9.23455810546875
    9. ')+' → logprob: -9.60955810546875
    10. '          ' → logprob: -10.60955810546875

Token 1181: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0007335089612752199
    2. ' t' → logprob: -7.625733375549316
    3. '2' → logprob: -9.000733375549316
    4. 'H' → logprob: -9.625733375549316
    5. 'abs' → logprob: -10.500733375549316
    6. '   ' → logprob: -12.125733375549316
    7. ' ' → logprob: -12.625733375549316
    8. '(t' → logprob: -12.750733375549316
    9. 'cost' → logprob: -12.750733375549316
    10. '`t' → logprob: -12.750733375549316

Token 1182: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7478916049003601
    2. ' -' → logprob: -1.1228916645050049
    3. '+' → logprob: -2.622891664505005
    4. '-' → logprob: -2.872891664505005
    5. ')' → logprob: -3.247891664505005
    6. '           ' → logprob: -3.747891664505005
    7. '```' → logprob: -5.622891426086426
    8. '*' → logprob: -6.747891426086426
    9. '<|end|>' → logprob: -6.747891426086426
    10. '          ' → logprob: -6.997891426086426

Token 1183: ' (' (ID: 350)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.024603556841611862
    2. 'H' → logprob: -3.7746036052703857
    3. ' (' → logprob: -6.649603366851807
    4. ' H' → logprob: -9.899603843688965
    5. '(' → logprob: -11.649603843688965
    6. '
' → logprob: -14.149603843688965
    7. '   ' → logprob: -14.524603843688965
    8. '```' → logprob: -14.774603843688965
    9. ' ' → logprob: -14.899603843688965
    10. '+' → logprob: -15.149603843688965

Token 1184: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0002989968634210527
    2. '(H' → logprob: -8.125299453735352
    3. ' H' → logprob: -12.750299453735352
    4. ' (' → logprob: -17.12529945373535
    5. '   ' → logprob: -17.62529945373535
    6. '
' → logprob: -18.12529945373535
    7. '           ' → logprob: -18.50029945373535
    8. '(' → logprob: -19.00029945373535
    9. '_H' → logprob: -19.50029945373535
    10. '	H' → logprob: -19.62529945373535

Token 1185: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0003032881941180676
    2. '[u' → logprob: -8.125303268432617
    3. 'v' → logprob: -11.875303268432617
    4. '```' → logprob: -15.625303268432617
    5. '[' → logprob: -16.750303268432617
    6. '(v' → logprob: -17.125303268432617
    7. '
' → logprob: -17.875303268432617
    8. '	v' → logprob: -18.250303268432617
    9. '<v' → logprob: -18.250303268432617
    10. '[
' → logprob: -18.875303268432617

Token 1186: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.02085191383957863
    2. '-' → logprob: -3.8958518505096436
    3. ')' → logprob: -8.145852088928223
    4. ' ' → logprob: -11.895852088928223
    5. ']' → logprob: -12.395852088928223
    6. '```' → logprob: -13.270852088928223
    7. '-u' → logprob: -13.395852088928223
    8. ')-' → logprob: -13.645852088928223
    9. '[' → logprob: -13.645852088928223
    10. ' ' → logprob: -14.020852088928223

Token 1187: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03805319964885712
    2. '-' → logprob: -3.288053274154663
    3. ')' → logprob: -12.038053512573242
    4. '```' → logprob: -12.913053512573242
    5. ' ' → logprob: -13.538053512573242
    6. '-h' → logprob: -13.788053512573242
    7. ' ' → logprob: -15.663053512573242
    8. '
' → logprob: -15.913053512573242
    9. ' -
' → logprob: -16.538053512573242
    10. '-u' → logprob: -16.538053512573242

Token 1188: ' (' (ID: 350)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.07124034315347672
    2. '(h' → logprob: -2.6962404251098633
    3. ' (' → logprob: -7.196240425109863
    4. ' h' → logprob: -7.571240425109863
    5. '(' → logprob: -11.071240425109863
    6. '   ' → logprob: -12.196240425109863
    7. '```' → logprob: -12.196240425109863
    8. '
' → logprob: -12.821240425109863
    9. '_h' → logprob: -12.946240425109863
    10. ' ' → logprob: -13.196240425109863

Token 1189: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -6.2729995988775045e-06
    2. ' h' → logprob: -12.625006675720215
    3. '(h' → logprob: -12.875006675720215
    4. '```' → logprob: -15.375006675720215
    5. '_h' → logprob: -17.5000057220459
    6. '	h' → logprob: -17.7500057220459
    7. '   ' → logprob: -17.7500057220459
    8. '"h' → logprob: -18.1250057220459
    9. ')' → logprob: -18.2500057220459
    10. ''h' → logprob: -18.2500057220459

Token 1190: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -0.0007118358626030385
    2. 'u' → logprob: -7.250711917877197
    3. 'h' → logprob: -13.625711441040039
    4. '```' → logprob: -15.375711441040039
    5. '[u' → logprob: -15.750711441040039
    6. '   ' → logprob: -16.12571144104004
    7. '(u' → logprob: -16.50071144104004
    8. '`' → logprob: -17.75071144104004
    9. '
' → logprob: -17.87571144104004
    10. '``' → logprob: -18.00071144104004

Token 1191: ' -' (ID: 533)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5088533759117126
    2. '+' → logprob: -1.1338534355163574
    3. ')' → logprob: -2.6338534355163574
    4. ')+' → logprob: -6.008853435516357
    5. ' -' → logprob: -7.008853435516357
    6. '-' → logprob: -7.258853435516357
    7. '```' → logprob: -8.2588529586792
    8. ' ' → logprob: -8.3838529586792
    9. '+t' → logprob: -8.7588529586792
    10. '))' → logprob: -8.7588529586792

Token 1192: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0008197537390515208
    2. ' t' → logprob: -7.125819683074951
    3. '`t' → logprob: -11.87582015991211
    4. '   ' → logprob: -12.75082015991211
    5. '```' → logprob: -13.50082015991211
    6. ')t' → logprob: -13.62582015991211
    7. '	t' → logprob: -13.75082015991211
    8. '_t' → logprob: -14.00082015991211
    9. '
' → logprob: -15.50082015991211
    10. ' ' → logprob: -16.12582015991211

Token 1193: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005692371050827205
    2. '))' → logprob: -7.7505693435668945
    3. ')
' → logprob: -9.000569343566895
    4. ' )' → logprob: -12.375569343566895
    5. ')`' → logprob: -12.750569343566895
    6. ')**' → logprob: -13.500569343566895
    7. ')+' → logprob: -13.625569343566895
    8. ')))' → logprob: -13.625569343566895
    9. '])' → logprob: -14.125569343566895
    10. '))
' → logprob: -14.375569343566895

Token 1194: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1297418773174286
    2. ' +' → logprob: -3.004741907119751
    3. '+' → logprob: -3.254741907119751
    4. ')' → logprob: -3.754741907119751
    5. ' if' → logprob: -5.504741668701172
    6. '<|end|>' → logprob: -6.504741668701172
    7. '               ' → logprob: -7.129741668701172
    8. '[' → logprob: -8.004741668701172
    9. '```' → logprob: -8.004741668701172
    10. '<|end|>' → logprob: -8.004741668701172

Token 1195: ' cost' (ID: 3097)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10999391973018646
    2. ' if' → logprob: -3.1099939346313477
    3. '
' → logprob: -4.359993934631348
    4. ')' → logprob: -4.484993934631348
    5. ')
' → logprob: -4.859993934631348
    6. 'if' → logprob: -5.359993934631348
    7. '=' → logprob: -5.359993934631348
    8. ' =' → logprob: -5.609993934631348
    9. '+' → logprob: -5.734993934631348
    10. ' +' → logprob: -5.984993934631348

Token 1196: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07619758695363998
    2. ' =' → logprob: -2.826197624206543
    3. '           ' → logprob: -4.451197624206543
    4. '+=' → logprob: -7.326197624206543
    5. ' +=' → logprob: -7.951197624206543
    6. ')' → logprob: -8.201197624206543
    7. 'if' → logprob: -8.451197624206543
    8. ' if' → logprob: -8.451197624206543
    9. '       ' → logprob: -9.201197624206543
    10. ',' → logprob: -9.451197624206543

Token 1197: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -4.620622712536715e-05
    2. ' cur' → logprob: -10.000045776367188
    3. 'min' → logprob: -14.250045776367188
    4. '   ' → logprob: -16.500045776367188
    5. 'cost' → logprob: -18.500045776367188
    6. '(cur' → logprob: -18.625045776367188
    7. '	cur' → logprob: -18.625045776367188
    8. 'max' → logprob: -19.375045776367188
    9. ' ' → logprob: -19.500045776367188
    10. 'Cur' → logprob: -20.375045776367188

Token 1198: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.1517960956552997e-05
    2. 'ent' → logprob: -12.250011444091797
    3. 'time' → logprob: -12.375011444091797
    4. '_cost' → logprob: -14.125011444091797
    5. 'cost' → logprob: -14.500011444091797
    6. 'cur' → logprob: -14.625011444091797
    7. 'ents' → logprob: -15.250011444091797
    8. 'Time' → logprob: -16.000011444091797
    9. '_TIME' → logprob: -16.500011444091797
    10. 't' → logprob: -16.500011444091797

Token 1199: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2519311308860779
    2. '+' → logprob: -1.5019311904907227
    3. '           ' → logprob: -14.251931190490723
    4. ' ' → logprob: -15.626931190490723
    5. '+
' → logprob: -15.751931190490723
    6. '＋' → logprob: -15.751931190490723
    7. '+=' → logprob: -15.876931190490723
    8. ' +
' → logprob: -15.876931190490723
    9. ')' → logprob: -16.501930236816406
    10. '   ' → logprob: -16.626930236816406

Token 1200: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0001589618914294988
    2. ' abs' → logprob: -8.75015926361084
    3. '(abs' → logprob: -14.62515926361084
    4. '   ' → logprob: -18.875158309936523
    5. '.abs' → logprob: -20.750158309936523
    6. '
' → logprob: -21.375158309936523
    7. '_abs' → logprob: -21.750158309936523
    8. ' ' → logprob: -21.750158309936523
    9. 'ans' → logprob: -22.250158309936523
    10. '  ' → logprob: -22.375158309936523

Token 1201: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.006719282828271389
    2. '(' → logprob: -5.00671911239624
    3. '(
' → logprob: -13.506719589233398
    4. ' (' → logprob: -13.631719589233398
    5. 'H' → logprob: -13.631719589233398
    6. '((' → logprob: -17.1317195892334
    7. '('' → logprob: -18.1317195892334
    8. '```' → logprob: -18.3817195892334
    9. '(

' → logprob: -18.3817195892334
    10. ')' → logprob: -18.5067195892334

Token 1202: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -4.36574100604048e-06
    2. '[' → logprob: -12.500004768371582
    3. '[user' → logprob: -15.375004768371582
    4. '(u' → logprob: -15.500004768371582
    5. 'u' → logprob: -17.125003814697266
    6. '```' → logprob: -17.875003814697266
    7. ' [' → logprob: -18.625003814697266
    8. '[
' → logprob: -19.375003814697266
    9. '<u' → logprob: -21.125003814697266
    10. '[[' → logprob: -21.625003814697266

Token 1203: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.004375529009848833
    2. '-' → logprob: -5.504375457763672
    3. ')' → logprob: -9.004375457763672
    4. '[u' → logprob: -9.379375457763672
    5. ']' → logprob: -10.379375457763672
    6. '[' → logprob: -10.754375457763672
    7. '-u' → logprob: -11.004375457763672
    8. ' ' → logprob: -11.254375457763672
    9. 'u' → logprob: -13.254375457763672
    10. '-h' → logprob: -14.004375457763672

Token 1204: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.05491941049695015
    2. '-' → logprob: -2.929919481277466
    3. '-h' → logprob: -10.429919242858887
    4. ' ' → logprob: -12.804919242858887
    5. '[' → logprob: -13.179919242858887
    6. ')' → logprob: -13.929919242858887
    7. '-u' → logprob: -14.054919242858887
    8. '-cost' → logprob: -15.054919242858887
    9. ' -
' → logprob: -15.554919242858887
    10. 'h' → logprob: -16.429920196533203

Token 1205: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -2.7729658540920354e-05
    2. ' h' → logprob: -10.500027656555176
    3. '   ' → logprob: -17.500028610229492
    4. 'int' → logprob: -18.625028610229492
    5. '	h' → logprob: -18.875028610229492
    6. '```' → logprob: -18.875028610229492
    7. ' ' → logprob: -19.125028610229492
    8. '  ' → logprob: -19.250028610229492
    9. '_h' → logprob: -19.250028610229492
    10. '    ' → logprob: -19.250028610229492

Token 1206: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -3.173704271830502e-06
    2. 'u' → logprob: -12.75000286102295
    3. '```' → logprob: -16.750003814697266
    4. '[u' → logprob: -18.750003814697266
    5. '`' → logprob: -19.000003814697266
    6. '   ' → logprob: -19.125003814697266
    7. '_uc' → logprob: -19.625003814697266
    8. '_a' → logprob: -19.750003814697266
    9. 's' → logprob: -19.750003814697266
    10. 'uc' → logprob: -20.000003814697266

Token 1207: ')' (ID: 8)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.41227301955223083
    2. ')' → logprob: -1.2872730493545532
    3. '-' → logprob: -2.7872729301452637
    4. ')+' → logprob: -9.412273406982422
    5. '-)' → logprob: -9.787273406982422
    6. ' )' → logprob: -10.287273406982422
    7. ')-' → logprob: -10.662273406982422
    8. '[' → logprob: -12.037273406982422
    9. '-h' → logprob: -12.162273406982422
    10. ' +' → logprob: -12.287273406982422

Token 1208: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16029785573482513
    2. ' +' → logprob: -1.9102978706359863
    3. '           ' → logprob: -10.160297393798828
    4. '```' → logprob: -11.910297393798828
    5. '          ' → logprob: -12.035297393798828
    6. '       ' → logprob: -12.035297393798828
    7. '         ' → logprob: -12.410297393798828
    8. '+t' → logprob: -12.785297393798828
    9. '        ' → logprob: -13.285297393798828
    10. ' ' → logprob: -13.660297393798828

Token 1209: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00012558852904476225
    2. ' t' → logprob: -9.000125885009766
    3. '   ' → logprob: -13.250125885009766
    4. '`t' → logprob: -16.250125885009766
    5. '(t' → logprob: -16.500125885009766
    6. '
' → logprob: -16.625125885009766
    7. '```' → logprob: -17.000125885009766
    8. ' ' → logprob: -17.000125885009766
    9. 'H' → logprob: -17.250125885009766
    10. '     ' → logprob: -17.625125885009766

Token 1210: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.47408607602119446
    2. '+' → logprob: -0.9740860462188721
    3. '           ' → logprob: -12.474085807800293
    4. '+(' → logprob: -13.849085807800293
    5. '          ' → logprob: -13.974085807800293
    6. '   ' → logprob: -14.224085807800293
    7. '```' → logprob: -14.724085807800293
    8. '         ' → logprob: -14.849085807800293
    9. '+
' → logprob: -14.849085807800293
    10. '       ' → logprob: -14.849085807800293

Token 1211: ' (' (ID: 350)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.038174718618392944
    2. 'H' → logprob: -3.288174629211426
    3. ' (' → logprob: -9.038174629211426
    4. '(' → logprob: -11.663174629211426
    5. ' H' → logprob: -12.288174629211426
    6. '   ' → logprob: -14.163174629211426
    7. ' ' → logprob: -16.538175582885742
    8. '((' → logprob: -16.788175582885742
    9. '	H' → logprob: -16.788175582885742
    10. ''H' → logprob: -16.788175582885742

Token 1212: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -2.5776860184123507e-06
    2. '(H' → logprob: -13.00000286102295
    3. ' H' → logprob: -15.37500286102295
    4. '   ' → logprob: -20.500001907348633
    5. '(' → logprob: -20.625001907348633
    6. ' (' → logprob: -22.375001907348633
    7. '_H' → logprob: -23.125001907348633
    8. '	H' → logprob: -23.500001907348633
    9. '           ' → logprob: -23.625001907348633
    10. '```' → logprob: -24.500001907348633

Token 1213: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0002619318547658622
    2. 'v' → logprob: -8.250262260437012
    3. '[u' → logprob: -14.250262260437012
    4. '(v' → logprob: -18.625261306762695
    5. '	v' → logprob: -18.625261306762695
    6. '<v' → logprob: -19.375261306762695
    7. ',v' → logprob: -20.750261306762695
    8. '$v' → logprob: -20.750261306762695
    9. '```' → logprob: -20.750261306762695
    10. '-v' → logprob: -20.875261306762695

Token 1214: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.033790115267038345
    2. '-' → logprob: -3.408790111541748
    3. ']' → logprob: -9.033790588378906
    4. ' ' → logprob: -11.658790588378906
    5. ')' → logprob: -11.658790588378906
    6. ']-' → logprob: -13.408790588378906
    7. '>' → logprob: -14.033790588378906
    8. '   ' → logprob: -14.533790588378906
    9. ' ' → logprob: -14.533790588378906
    10. '           ' → logprob: -14.658790588378906

Token 1215: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.061970822513103485
    2. '-' → logprob: -2.8119707107543945
    3. ' ' → logprob: -13.561970710754395
    4. ' ' → logprob: -14.936970710754395
    5. '        ' → logprob: -15.311970710754395
    6. '         ' → logprob: -15.311970710754395
    7. '     ' → logprob: -15.561970710754395
    8. '```' → logprob: -15.561970710754395
    9. '          ' → logprob: -15.811970710754395
    10. '           ' → logprob: -15.936970710754395

Token 1216: ' (' (ID: 350)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.028535449877381325
    2. ' (' → logprob: -4.15353536605835
    3. 'h' → logprob: -4.40353536605835
    4. '(' → logprob: -8.903535842895508
    5. ' h' → logprob: -9.903535842895508
    6. '   ' → logprob: -14.653535842895508
    7. ' ' → logprob: -15.028535842895508
    8. '/h' → logprob: -15.216035842895508
    9. '_h' → logprob: -15.341035842895508
    10. '(
' → logprob: -15.653535842895508

Token 1217: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.5094070477061905e-05
    2. '(h' → logprob: -11.750015258789062
    3. ' h' → logprob: -11.875015258789062
    4. ' (' → logprob: -16.000015258789062
    5. '(' → logprob: -16.750015258789062
    6. '   ' → logprob: -17.125015258789062
    7. '```' → logprob: -17.750015258789062
    8. '[h' → logprob: -18.625015258789062
    9. '	h' → logprob: -18.875015258789062
    10. ')' → logprob: -19.250015258789062

Token 1218: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -0.0024882610887289047
    2. 'u' → logprob: -6.002488136291504
    3. '[u' → logprob: -11.377488136291504
    4. '(u' → logprob: -15.252488136291504
    5. '```' → logprob: -15.252488136291504
    6. '-u' → logprob: -16.25248908996582
    7. 'h' → logprob: -16.25248908996582
    8. ' u' → logprob: -16.62748908996582
    9. '<u' → logprob: -16.62748908996582
    10. '   ' → logprob: -16.75248908996582

Token 1219: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08220451325178146
    2. ' -' → logprob: -2.582204580307007
    3. '-u' → logprob: -6.457204341888428
    4. '_u' → logprob: -6.582204341888428
    5. 'u' → logprob: -8.332204818725586
    6. '_' → logprob: -9.707204818725586
    7. ' ' → logprob: -11.207204818725586
    8. ' u' → logprob: -11.707204818725586
    9. '[u' → logprob: -11.707204818725586
    10. '[' → logprob: -12.332204818725586

Token 1220: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0002942287246696651
    2. ' t' → logprob: -8.25029468536377
    3. 'u' → logprob: -11.00029468536377
    4. '_t' → logprob: -11.37529468536377
    5. '`t' → logprob: -13.12529468536377
    6. ')t' → logprob: -13.50029468536377
    7. '```' → logprob: -14.62529468536377
    8. '
' → logprob: -15.50029468536377
    9. '	t' → logprob: -15.87529468536377
    10. 'h' → logprob: -15.87529468536377

Token 1221: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014260347932577133
    2. '))' → logprob: -4.264260292053223
    3. ')
' → logprob: -9.514260292053223
    4. '           ' → logprob: -11.264260292053223
    5. '])' → logprob: -12.389260292053223
    6. '))
' → logprob: -12.889260292053223
    7. ')))' → logprob: -14.014260292053223
    8. ')`' → logprob: -14.139260292053223
    9. ' )' → logprob: -14.389260292053223
    10. '       ' → logprob: -14.764260292053223

Token 1222: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00012976066500414163
    2. '       ' → logprob: -9.875129699707031
    3. '```' → logprob: -10.375129699707031
    4. ' if' → logprob: -10.750129699707031
    5. 'if' → logprob: -11.500129699707031
    6. ',' → logprob: -12.875129699707031
    7. '   ' → logprob: -12.875129699707031
    8. '		' → logprob: -13.125129699707031
    9. '            
' → logprob: -13.250129699707031
    10. '	       ' → logprob: -13.375129699707031

Token 1223: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016312669031322002
    2. 'if' (adapté à ' if') → logprob: -7.001631259918213
    3. ' if' → logprob: -7.251631259918213
    4. '```' → logprob: -12.626631736755371
    5. '       ' → logprob: -12.751631736755371
    6. '            
' → logprob: -13.501631736755371
    7. ',' → logprob: -13.876631736755371
    8. '               ' → logprob: -14.001631736755371
    9. ' ' → logprob: -14.876631736755371
    10. '   ' → logprob: -15.501631736755371

Token 1224: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.011047814972698689
    2. ' cost' → logprob: -4.511047840118408
    3. 'min' → logprob: -18.38604736328125
    4. 'dist' → logprob: -19.51104736328125
    5. '(cost' → logprob: -19.76104736328125
    6. '   ' → logprob: -20.26104736328125
    7. ' min' → logprob: -23.01104736328125
    8. ' dist' → logprob: -23.26104736328125
    9. '    ' → logprob: -23.38604736328125
    10. 'cur' → logprob: -23.38604736328125

Token 1225: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.04870341345667839
    2. ' <' → logprob: -3.04870343208313
    3. '<=' → logprob: -10.17370319366455
    4. ' <=' → logprob: -10.29870319366455
    5. '<num' → logprob: -12.29870319366455
    6. '<int' → logprob: -12.42370319366455
    7. '<len' → logprob: -12.42370319366455
    8. '[' → logprob: -12.42370319366455
    9. '<size' → logprob: -12.42370319366455
    10. '<
' → logprob: -12.54870319366455

Token 1226: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5761308670043945
    2. 'dist' → logprob: -0.8261308670043945
    3. ' dist' → logprob: -8.951130867004395
    4. ' min' → logprob: -9.701130867004395
    5. '
' → logprob: -16.076129913330078
    6. '   ' → logprob: -16.701129913330078
    7. 'cost' → logprob: -16.701129913330078
    8. '(min' → logprob: -16.701129913330078
    9. '(dist' → logprob: -17.076129913330078
    10. '	dist' → logprob: -17.076129913330078

Token 1227: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.031093517318367958
    2. 'dist' → logprob: -4.156093597412109
    3. 'cost' → logprob: -4.406093597412109
    4. '_dist' → logprob: -5.906093597412109
    5. '_time' → logprob: -11.65609359741211
    6. '(dist' → logprob: -12.53109359741211
    7. ' dist' → logprob: -13.40609359741211
    8. '[u' → logprob: -13.90609359741211
    9. 'c' → logprob: -14.15609359741211
    10. 'Cost' → logprob: -14.40609359741211

Token 1228: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4673217833042145
    2. ':
' → logprob: -1.092321753501892
    3. '           ' → logprob: -3.9673218727111816
    4. '=' → logprob: -4.342321872711182
    5. '               ' → logprob: -5.467321872711182
    6. ' =' → logprob: -7.217321872711182
    7. '       ' → logprob: -8.092321395874023
    8. '):
' → logprob: -8.592321395874023
    9. '=min' → logprob: -9.092321395874023
    10. '[' → logprob: -9.842321395874023

Token 1229: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.43192020058631897
    2. '               ' → logprob: -1.0569201707839966
    3. 'min' → logprob: -6.681920051574707
    4. ' min' → logprob: -6.806920051574707
    5. '```' → logprob: -8.306920051574707
    6. '(min' → logprob: -8.556920051574707
    7. '       ' → logprob: -8.806920051574707
    8. '[min' → logprob: -9.806920051574707
    9. '	       ' → logprob: -10.556920051574707
    10. '                   ' → logprob: -10.681920051574707

Token 1230: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -7.107425062713446e-06
    2. 'chosen' → logprob: -12.375006675720215
    3. ' min' → logprob: -13.750006675720215
    4. '               ' → logprob: -13.750006675720215
    5. '                   ' → logprob: -14.625006675720215
    6. '           ' → logprob: -15.750006675720215
    7. '	min' → logprob: -17.62500762939453
    8. '   ' → logprob: -17.75000762939453
    9. '       ' → logprob: -18.12500762939453
    10. '```' → logprob: -18.62500762939453

Token 1231: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -6.051066520740278e-05
    2. 'cost' → logprob: -9.750060081481934
    3. 'Cost' → logprob: -13.250060081481934
    4. '_COST' → logprob: -15.750060081481934
    5. '[u' → logprob: -16.62506103515625
    6. ' cost' → logprob: -16.87506103515625
    7. '_code' → logprob: -16.87506103515625
    8. '_time' → logprob: -16.87506103515625
    9. 'u' → logprob: -17.50006103515625
    10. '-cost' → logprob: -19.00006103515625

Token 1232: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0007419686880894005
    2. ' =' → logprob: -7.250741958618164
    3. '=
' → logprob: -10.375741958618164
    4. '=min' → logprob: -15.125741958618164
    5. ',' → logprob: -15.500741958618164
    6. '=

' → logprob: -16.125741958618164
    7. ' =
' → logprob: -16.250741958618164
    8. '＝' → logprob: -18.000741958618164
    9. '=int' → logprob: -18.875741958618164
    10. '=c' → logprob: -18.875741958618164

Token 1233: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -4.5491004129871726e-05
    2. ' cost' → logprob: -10.000045776367188
    3. '(cost' → logprob: -20.625045776367188
    4. 'code' → logprob: -20.875045776367188
    5. '_cost' → logprob: -21.000045776367188
    6. 'cur' → logprob: -22.625045776367188
    7. 'Cost' → logprob: -22.750045776367188
    8. '```' → logprob: -23.250045776367188
    9. 'cos' → logprob: -23.625045776367188
    10. 'price' → logprob: -23.750045776367188

Token 1234: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -7.76759916334413e-05
    2. '           ' → logprob: -10.000077247619629
    3. '       ' → logprob: -10.625077247619629
    4. '```' → logprob: -12.500077247619629
    5. '              ' → logprob: -13.375077247619629
    6. '                   ' → logprob: -14.000077247619629
    7. '   ' → logprob: -14.125077247619629
    8. '                ' → logprob: -15.000077247619629
    9. '             ' → logprob: -15.000077247619629
    10. '
' → logprob: -16.000078201293945

Token 1235: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1398757123970427e-05
    2. '       ' → logprob: -12.125011444091797
    3. '```' → logprob: -12.500011444091797
    4. '           ' → logprob: -13.375011444091797
    5. '                   ' → logprob: -15.250011444091797
    6. '              ' → logprob: -16.125011444091797
    7. '   ' → logprob: -16.125011444091797
    8. '                       ' → logprob: -17.500011444091797
    9. '``' → logprob: -17.875011444091797
    10. '[' → logprob: -17.875011444091797

Token 1236: ' chosen' (ID: 16180)
  Prédit: 'chosen'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chosen' (adapté à ' chosen') → logprob: -0.00024477019906044006
    2. '               ' → logprob: -8.875245094299316
    3. ' chosen' → logprob: -10.000245094299316
    4. 'u' → logprob: -10.250245094299316
    5. '   ' → logprob: -11.625245094299316
    6. '       ' → logprob: -12.250245094299316
    7. '           ' → logprob: -12.500245094299316
    8. 'h' → logprob: -12.750245094299316
    9. 'v' → logprob: -13.500245094299316
    10. 'selected' → logprob: -14.125245094299316

Token 1237: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.00011391390580683947
    2. '_u' → logprob: -9.125113487243652
    3. '_' → logprob: -13.375113487243652
    4. 'h' → logprob: -13.375113487243652
    5. '\' → logprob: -14.500113487243652
    6. '=' → logprob: -15.250113487243652
    7. 'u' → logprob: -15.625113487243652
    8. '```' → logprob: -15.750113487243652
    9. '_c' → logprob: -16.62511444091797
    10. '_s' → logprob: -16.62511444091797

Token 1238: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -7.255023956531659e-05
    2. '=h' → logprob: -10.250072479248047
    3. '=u' → logprob: -10.750072479248047
    4. '=
' → logprob: -11.500072479248047
    5. '_u' → logprob: -12.750072479248047
    6. 'u' → logprob: -13.625072479248047
    7. '_=' → logprob: -14.375072479248047
    8. ' =' → logprob: -14.875072479248047
    9. '=

' → logprob: -15.625072479248047
    10. 'h' → logprob: -15.750072479248047

Token 1239: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -4.320199877838604e-07
    2. ' h' → logprob: -15.0
    3. '   ' → logprob: -19.625
    4. '	h' → logprob: -20.25
    5. '```' → logprob: -21.0
    6. '"h' → logprob: -22.5
    7. '_h' → logprob: -22.625
    8. '<h' → logprob: -23.0
    9. '[h' → logprob: -23.375
    10. '
' → logprob: -24.125

Token 1240: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -1.9623810658231378e-05
    2. 'u' → logprob: -11.625020027160645
    3. '[u' → logprob: -11.750020027160645
    4. '```' → logprob: -13.250020027160645
    5. '<u' → logprob: -16.125019073486328
    6. '_i' → logprob: -16.375019073486328
    7. '_v' → logprob: -16.500019073486328
    8. '(u' → logprob: -16.500019073486328
    9. '
' → logprob: -16.875019073486328
    10. '[' → logprob: -17.000019073486328

Token 1241: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.5120287066092715e-05
    2. '
' → logprob: -10.500035285949707
    3. '        
' → logprob: -12.250035285949707
    4. 'if' → logprob: -13.750035285949707
    5. '```' → logprob: -13.875035285949707
    6. '           ' → logprob: -14.875035285949707
    7. ' if' → logprob: -15.500035285949707
    8. '   ' → logprob: -16.87503433227539
    9. '      ' → logprob: -17.50003433227539
    10. '<|end|>' → logprob: -17.75003433227539

Token 1242: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.2961512513575144e-05
    2. '```' → logprob: -11.000022888183594
    3. '           ' → logprob: -12.875022888183594
    4. '
' → logprob: -13.125022888183594
    5. 'if' → logprob: -13.875022888183594
    6. ' if' → logprob: -15.750022888183594
    7. '   ' → logprob: -15.750022888183594
    8. '        
' → logprob: -15.750022888183594
    9. '<|end|>' → logprob: -16.125022888183594
    10. '               ' → logprob: -16.875022888183594

Token 1243: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011096392758190632
    2. 'if' (adapté à ' if') → logprob: -4.511096477508545
    3. ' if' → logprob: -10.136096000671387
    4. '   ' → logprob: -12.761096000671387
    5. '           ' → logprob: -12.886096000671387
    6. '```' → logprob: -13.136096000671387
    7. '	' → logprob: -14.386096000671387
    8. '	if' → logprob: -14.636096000671387
    9. '        
' → logprob: -15.886096000671387
    10. ' ' → logprob: -16.886096954345703

Token 1244: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.033486973494291306
    2. 'dist' → logprob: -3.90848708152771
    3. ' min' → logprob: -4.408486843109131
    4. ' dist' → logprob: -7.283486843109131
    5. '   ' → logprob: -14.283487319946289
    6. 'cost' → logprob: -15.533487319946289
    7. '	min' → logprob: -15.908487319946289
    8. '(min' → logprob: -16.78348731994629
    9. 'max' → logprob: -17.03348731994629
    10. '	dist' → logprob: -17.78348731994629

Token 1245: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.00026205103495158255
    2. 'cost' → logprob: -8.500262260437012
    3. '_dist' → logprob: -10.000262260437012
    4. 'if' → logprob: -11.625262260437012
    5. 'dist' → logprob: -13.750262260437012
    6. '_time' → logprob: -14.000262260437012
    7. '   ' → logprob: -14.375262260437012
    8. 'Cost' → logprob: -14.500262260437012
    9. '=' → logprob: -15.375262260437012
    10. '_COST' → logprob: -15.750262260437012

Token 1246: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.11288556456565857
    2. '<' → logprob: -2.2378854751586914
    3. '<n' → logprob: -10.737885475158691
    4. '   ' → logprob: -11.612885475158691
    5. '<int' → logprob: -12.487885475158691
    6. '       ' → logprob: -12.862885475158691
    7. '<len' → logprob: -12.987885475158691
    8. '           ' → logprob: -13.237885475158691
    9. '<size' → logprob: -13.362885475158691
    10. '<p' → logprob: -13.362885475158691

Token 1247: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -6.704273118884885e-07
    2. ' dist' → logprob: -14.250000953674316
    3. '
' → logprob: -22.25
    4. '	dist' → logprob: -22.625
    5. '(dist' → logprob: -22.875
    6. '   ' → logprob: -23.375
    7. '```' → logprob: -24.0
    8. '       ' → logprob: -24.5
    9. '_dist' → logprob: -24.625
    10. '           ' → logprob: -24.875

Token 1248: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -2.696889623621246e-06
    2. 'v' → logprob: -12.87500286102295
    3. '[u' → logprob: -18.375001907348633
    4. '[' → logprob: -18.625001907348633
    5. '       ' → logprob: -19.125001907348633
    6. '(v' → logprob: -19.125001907348633
    7. '```' → logprob: -19.125001907348633
    8. '
' → logprob: -19.625001907348633
    9. '   ' → logprob: -19.750001907348633
    10. '=v' → logprob: -19.875001907348633

Token 1249: ']:
' (ID: 22152)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.786604106426239
    2. ':' → logprob: -0.911604106426239
    3. ':
' → logprob: -2.536604166030884
    4. ']:
' → logprob: -4.161603927612305
    5. '):
' → logprob: -4.286603927612305
    6. ']:' → logprob: -4.411603927612305
    7. '[u' → logprob: -4.661603927612305
    8. '       ' → logprob: -5.036603927612305
    9. '):' → logprob: -5.411603927612305
    10. '[' → logprob: -7.411603927612305

Token 1250: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01048421673476696
    2. '       ' → logprob: -5.260484218597412
    3. 'dist' → logprob: -5.885484218597412
    4. ' dist' → logprob: -6.510484218597412
    5. '```' → logprob: -7.510484218597412
    6. '	       ' → logprob: -9.510483741760254
    7. '<|end|>' → logprob: -9.510483741760254
    8. '	dist' → logprob: -9.635483741760254
    9. '               ' → logprob: -9.885483741760254
    10. '   ' → logprob: -10.510483741760254

Token 1251: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.0015602122293785214
    2. ' dist' → logprob: -6.501560211181641
    3. '           ' → logprob: -10.00156021118164
    4. '```' → logprob: -12.00156021118164
    5. '	dist' → logprob: -12.50156021118164
    6. '               ' → logprob: -13.25156021118164
    7. '_dist' → logprob: -14.25156021118164
    8. '       ' → logprob: -15.50156021118164
    9. 'Dist' → logprob: -16.37656021118164
    10. '   ' → logprob: -17.37656021118164

Token 1252: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -4.320199877838604e-07
    2. 'v' → logprob: -14.75
    3. '[min' → logprob: -17.625
    4. '```' → logprob: -17.75
    5. '=v' → logprob: -18.125
    6. '][' → logprob: -18.375
    7. '[u' → logprob: -18.5
    8. '<v' → logprob: -19.0
    9. '[' → logprob: -19.25
    10. '=' → logprob: -19.625

Token 1253: ']' (ID: 60)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.012058887630701065
    2. ']' → logprob: -5.262058734893799
    3. '[min' → logprob: -5.262058734893799
    4. ']=' → logprob: -6.887058734893799
    5. '[' → logprob: -7.887058734893799
    6. '=' → logprob: -9.137059211730957
    7. ' =' → logprob: -10.637059211730957
    8. '[
' → logprob: -10.887059211730957
    9. 'v' → logprob: -11.012059211730957
    10. 'min' → logprob: -11.137059211730957

Token 1254: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00016301481809932739
    2. '=min' → logprob: -9.250163078308105
    3. ' =' → logprob: -9.750163078308105
    4. '[min' → logprob: -11.750163078308105
    5. '=
' → logprob: -14.625163078308105
    6. '=v' → logprob: -16.12516212463379
    7. '[v' → logprob: -17.00016212463379
    8. '＝' → logprob: -17.37516212463379
    9. '[' → logprob: -17.62516212463379
    10. ']=' → logprob: -18.75016212463379

Token 1255: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.9361264946837764e-07
    2. ' min' → logprob: -16.25
    3. '_min' → logprob: -23.0
    4. '	min' → logprob: -23.75
    5. '[min' → logprob: -24.625
    6. '(min' → logprob: -25.375
    7. 'max' → logprob: -26.125
    8. '=min' → logprob: -26.375
    9. '```' → logprob: -26.5
    10. 'Min' → logprob: -26.875

Token 1256: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.0022372088860720396
    2. 'cost' → logprob: -6.502237319946289
    3. 'min' → logprob: -7.377237319946289
    4. '_min' → logprob: -9.627237319946289
    5. '(min' → logprob: -10.502237319946289
    6. '[min' → logprob: -11.252237319946289
    7. 'Cost' → logprob: -13.877237319946289
    8. '_dist' → logprob: -13.877237319946289
    9. 'dist' → logprob: -14.252237319946289
    10. ' min' → logprob: -15.377237319946289

Token 1257: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005219352315180004
    2. 'heap' → logprob: -7.625522136688232
    3. '```' → logprob: -10.750521659851074
    4. ' heap' → logprob: -11.875521659851074
    5. '
' → logprob: -12.750521659851074
    6. '		' → logprob: -13.625521659851074
    7. '(heap' → logprob: -14.875521659851074
    8. '       ' → logprob: -15.125521659851074
    9. '               ' → logprob: -15.500521659851074
    10. '
' → logprob: -15.875521659851074

Token 1258: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004977479111403227
    2. '```' → logprob: -8.250497817993164
    3. 'heap' → logprob: -9.000497817993164
    4. '		' → logprob: -9.125497817993164
    5. '	       ' → logprob: -13.750497817993164
    6. ' heap' → logprob: -14.000497817993164
    7. '               ' → logprob: -14.625497817993164
    8. '(heap' → logprob: -14.625497817993164
    9. '          ' → logprob: -15.125497817993164
    10. '``' → logprob: -15.500497817993164

Token 1259: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: 0.0
    2. ' heap' → logprob: -17.75
    3. '           ' → logprob: -18.125
    4. '   ' → logprob: -20.0
    5. '            
' → logprob: -21.875
    6. '```' → logprob: -22.0
    7. '
' → logprob: -22.25
    8. '       ' → logprob: -23.0
    9. 'queue' → logprob: -24.0
    10. 'he' → logprob: -24.375

Token 1260: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.935296834039036e-06
    2. 'push' → logprob: -13.50000286102295
    3. 'app' → logprob: -14.37500286102295
    4. 'he' → logprob: -14.37500286102295
    5. 'hq' → logprob: -16.750003814697266
    6. 'h' → logprob: -16.875003814697266
    7. 'heap' → logprob: -17.000003814697266
    8. 'queue' → logprob: -17.125003814697266
    9. 'p' → logprob: -17.500003814697266
    10. 'qq' → logprob: -17.875003814697266

Token 1261: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.01427022460848093
    2. 'he' → logprob: -4.264270305633545
    3. 'q' → logprob: -9.389269828796387
    4. 'heap' → logprob: -11.889269828796387
    5. '.heap' → logprob: -12.514269828796387
    6. 'ush' → logprob: -12.889269828796387
    7. 'push' → logprob: -13.014269828796387
    8. ' he' → logprob: -13.264269828796387
    9. '_he' → logprob: -13.264269828796387
    10. '/he' → logprob: -13.389269828796387

Token 1262: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.006423678714782
    2. 'pp' → logprob: -5.756423473358154
    3. 'push' → logprob: -5.756423473358154
    4. 'ush' → logprob: -9.506423950195312
    5. 'p' → logprob: -13.006423950195312
    6. 'ap' → logprob: -14.381423950195312
    7. 'q' → logprob: -14.506423950195312
    8. 'e' → logprob: -15.756423950195312
    9. 'h' → logprob: -16.381423950195312
    10. 'appen' → logprob: -16.381423950195312

Token 1263: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.0007034952868707478
    2. 'push' → logprob: -7.75070333480835
    3. 'app' → logprob: -8.500703811645508
    4. 'pp' → logprob: -9.625703811645508
    5. 'op' → logprob: -13.000703811645508
    6. 'he' → logprob: -14.750703811645508
    7. 'p' → logprob: -15.000703811645508
    8. '```' → logprob: -15.625703811645508
    9. 'sh' → logprob: -16.750703811645508
    10. 'u' → logprob: -17.125703811645508

Token 1264: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.9361264946837764e-07
    2. 'hq' → logprob: -16.125
    3. '```' → logprob: -18.125
    4. 'h' → logprob: -18.75
    5. '(q' → logprob: -18.875
    6. '(
' → logprob: -19.25
    7. ' (' → logprob: -19.375
    8. '	h' → logprob: -19.75
    9. ',h' → logprob: -20.0
    10. '(' → logprob: -20.25

Token 1265: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.47828036546707153
    2. 'hq' → logprob: -0.9782803654670715
    3. '(h' → logprob: -5.478280544281006
    4. 'qh' → logprob: -11.978280067443848
    5. 'h' → logprob: -12.353280067443848
    6. '(q' → logprob: -12.853280067443848
    7. 'vq' → logprob: -12.978280067443848
    8. '[h' → logprob: -14.478280067443848
    9. '(
' → logprob: -15.353280067443848
    10. 'sq' → logprob: -15.603280067443848

Token 1266: ',' (ID: 11)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.8624639324116288e-06
    2. '(q' → logprob: -13.875001907348633
    3. ' (' → logprob: -15.125001907348633
    4. 'hq' → logprob: -15.375001907348633
    5. '((' → logprob: -16.250001907348633
    6. '(' → logprob: -16.500001907348633
    7. '```' → logprob: -17.125001907348633
    8. '(heap' → logprob: -17.625001907348633
    9. ',h' → logprob: -17.750001907348633
    10. 'h' → logprob: -18.750001907348633

Token 1267: ' (' (ID: 350)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -1.9027791495318525e-05
    2. '(h' → logprob: -11.750019073486328
    3. '(cur' → logprob: -12.375019073486328
    4. ' (' → logprob: -12.625019073486328
    5. '   ' → logprob: -13.875019073486328
    6. '[min' → logprob: -13.875019073486328
    7. '(dist' → logprob: -14.375019073486328
    8. '(m' → logprob: -14.750019073486328
    9. '(' → logprob: -15.500019073486328
    10. '(max' → logprob: -16.125019073486328

Token 1268: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -3.2378600735682994e-05
    2. 'dist' → logprob: -10.500032424926758
    3. '(min' → logprob: -12.250032424926758
    4. ' min' → logprob: -17.750032424926758
    5. '(dist' → logprob: -18.875032424926758
    6. '[min' → logprob: -19.625032424926758
    7. '```' → logprob: -19.750032424926758
    8. '	min' → logprob: -19.875032424926758
    9. '   ' → logprob: -20.500032424926758
    10. '_min' → logprob: -20.500032424926758

Token 1269: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.00020914296328555793
    2. 'cost' → logprob: -8.500208854675293
    3. 'Cost' → logprob: -12.250208854675293
    4. '-cost' → logprob: -14.750208854675293
    5. ' cost' → logprob: -15.375208854675293
    6. '_COST' → logprob: -16.37520980834961
    7. '_dist' → logprob: -16.62520980834961
    8. 'kost' → logprob: -17.12520980834961
    9. 'ost' → logprob: -17.37520980834961
    10. 'ot' → logprob: -18.75020980834961

Token 1270: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002479104558005929
    2. ',v' → logprob: -6.002479076385498
    3. ' ,' → logprob: -13.377479553222656
    4. '(v' → logprob: -13.752479553222656
    5. 'v' → logprob: -14.502479553222656
    6. '[v' → logprob: -16.002479553222656
    7. '```' → logprob: -16.002479553222656
    8. ' v' → logprob: -17.002479553222656
    9. ',
' → logprob: -17.627479553222656
    10. '`,' → logprob: -18.127479553222656

Token 1271: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.9361264946837764e-07
    2. ' v' → logprob: -16.25
    3. '	v' → logprob: -21.5
    4. ')v' → logprob: -22.25
    5. '$v' → logprob: -23.375
    6. '   ' → logprob: -23.5
    7. '[v' → logprob: -24.125
    8. '```' → logprob: -25.25
    9. 'vq' → logprob: -25.375
    10. 'vj' → logprob: -25.75

Token 1272: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -2.236549335066229e-05
    2. ')' → logprob: -11.000021934509277
    3. '))
' → logprob: -12.125021934509277
    4. ')))' → logprob: -15.500021934509277
    5. ' ))' → logprob: -17.625022888183594
    6. '   ' → logprob: -17.875022888183594
    7. '       ' → logprob: -18.750022888183594
    8. '));' → logprob: -19.125022888183594
    9. '))

' → logprob: -19.625022888183594
    10. ')}' → logprob: -19.750022888183594

Token 1273: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.4868770196917467e-05
    2. ')' → logprob: -11.375024795532227
    3. '```' → logprob: -11.875024795532227
    4. ' print' → logprob: -12.625024795532227
    5. '
' → logprob: -13.750024795532227
    6. '#' → logprob: -14.000024795532227
    7. '<|end|>' → logprob: -14.625024795532227
    8. '#print' → logprob: -15.000024795532227
    9. ')
' → logprob: -15.875024795532227
    10. 'for' → logprob: -16.125024795532227

Token 1274: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.011049000546336174
    2. ' dist' → logprob: -4.511048793792725
    3. '__' → logprob: -13.761049270629883
    4. ' __' → logprob: -16.761049270629883
    5. '	dist' → logprob: -17.636049270629883
    6. 'print' → logprob: -17.886049270629883
    7. '(dist' → logprob: -17.886049270629883
    8. ' ' → logprob: -18.511049270629883
    9. 'Dist' → logprob: -18.636049270629883
    10. '_' → logprob: -18.636049270629883

Token 1275: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.04913422092795372
    2. '[-' → logprob: -3.0491342544555664
    3. '[' → logprob: -7.674134254455566
    4. '```' → logprob: -10.424134254455566
    5. '[n' → logprob: -10.924134254455566
    6. '[end' → logprob: -11.299134254455566
    7. '[X' → logprob: -12.174134254455566
    8. '[len' → logprob: -12.424134254455566
    9. '[M' → logprob: -12.674134254455566
    10. '[v' → logprob: -13.299134254455566

Token 1276: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.320199877838604e-07
    2. ' -' → logprob: -16.25
    3. '1' → logprob: -16.5
    4. '[-' → logprob: -16.5
    5. '−' → logprob: -18.625
    6. '()-' → logprob: -19.875
    7. '```' → logprob: -20.0
    8. ']-' → logprob: -20.125
    9. '-
' → logprob: -20.75
    10. '[' → logprob: -21.625

Token 1277: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -15.75
    3. ' ' → logprob: -16.5
    4. '
' → logprob: -16.625
    5. '-' → logprob: -17.375
    6. '2' → logprob: -18.375
    7. ')' → logprob: -18.375
    8. '   ' → logprob: -19.3125
    9. ']' → logprob: -19.5
    10. '``' → logprob: -19.8125

Token 1278: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1373058557510376
    2. ' ==' → logprob: -1.2623058557510376
    3. '==' → logprob: -1.6373058557510376
    4. ' !=' → logprob: -2.262305736541748
    5. '!=' → logprob: -2.387305736541748
    6. '<' → logprob: -5.637305736541748
    7. ' <' → logprob: -7.262305736541748
    8. ' )' → logprob: -7.512305736541748
    9. 'print' → logprob: -8.137306213378906
    10. ')==' → logprob: -8.762306213378906

Token 1279: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.003338121809065342
    2. ' ==' → logprob: -6.25333833694458
    3. '!=' → logprob: -7.50333833694458
    4. '<' → logprob: -7.62833833694458
    5. '<=' → logprob: -8.128337860107422
    6. '```' → logprob: -10.128337860107422
    7. 'print' → logprob: -10.628337860107422
    8. '>=' → logprob: -12.128337860107422
    9. '>' → logprob: -13.003337860107422
    10. '==
' → logprob: -13.503337860107422

Token 1280: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: 0.0
    2. ' INF' → logprob: -18.375
    3. '_INF' → logprob: -19.0
    4. 'IN' → logprob: -19.125
    5. 'inf' → logprob: -19.25
    6. 'float' → logprob: -21.0
    7. '-INF' → logprob: -21.875
    8. 'sys' → logprob: -22.0
    9. 'INT' → logprob: -22.125
    10. '```' → logprob: -23.125

Token 1281: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.18620701134204865
    2. ':' → logprob: -1.8112070560455322
    3. 'print' → logprob: -5.186206817626953
    4. ' print' → logprob: -7.936206817626953
    5. '   ' → logprob: -8.561206817626953
    6. '==' → logprob: -8.686206817626953
    7. '=' → logprob: -9.436206817626953
    8. '	print' → logprob: -11.811206817626953
    9. ':return' → logprob: -12.186206817626953
    10. '):
' → logprob: -12.311206817626953

Token 1282: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007651942316442728
    2. '```' → logprob: -5.0076518058776855
    3. '``' → logprob: -7.7576518058776855
    4. ' print' → logprob: -8.507652282714844
    5. '   ' → logprob: -8.507652282714844
    6. '
' → logprob: -10.382652282714844
    7. '-print' → logprob: -10.382652282714844
    8. '	print' → logprob: -11.257652282714844
    9. '    
' → logprob: -11.632652282714844
    10. '.print' → logprob: -12.757652282714844

Token 1283: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -6.869017852295656e-06
    2. '```' → logprob: -12.500006675720215
    3. '   ' → logprob: -13.375006675720215
    4. '
' → logprob: -14.125006675720215
    5. ' print' → logprob: -14.500006675720215
    6. '``' → logprob: -15.500006675720215
    7. '	print' → logprob: -17.12500762939453
    8. '    
' → logprob: -17.12500762939453
    9. '-print' → logprob: -18.00000762939453
    10. '#print' → logprob: -18.37500762939453

Token 1284: '(-' (ID: 8087)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.5577775128767826e-06
    2. '(-' → logprob: -13.125005722045898
    3. ' -' → logprob: -13.750005722045898
    4. '"-' → logprob: -13.875005722045898
    5. '-im' → logprob: -14.750005722045898
    6. '-print' → logprob: -15.125005722045898
    7. '\-' → logprob: -16.2500057220459
    8. '```' → logprob: -16.2500057220459
    9. 'print' → logprob: -16.5000057220459
    10. '-No' → logprob: -16.5000057220459

Token 1285: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '１' → logprob: -22.25
    3. '```' → logprob: -24.375
    4. '
' → logprob: -24.625
    5. '2' → logprob: -24.875
    6. ' ' → logprob: -25.25
    7. '3' → logprob: -25.875
    8. '01' → logprob: -26.125
    9. '۱' → logprob: -26.25
    10. '``' → logprob: -26.25

Token 1286: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.007144290488213301
    2. ')' → logprob: -5.007144451141357
    3. 'else' → logprob: -7.757144451141357
    4. ')
' → logprob: -14.3821439743042
    5. '```' → logprob: -15.1321439743042
    6. '   ' → logprob: -15.7571439743042
    7. '``' → logprob: -17.007144927978516
    8. ')`
' → logprob: -17.132144927978516
    9. '),' → logprob: -17.507144927978516
    10. ' else' → logprob: -17.632144927978516

Token 1287: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.3856492842023727e-06
    2. ' else' → logprob: -13.625000953674316
    3. '```' → logprob: -16.375001907348633
    4. '_else' → logprob: -19.250001907348633
    5. 'elif' → logprob: -19.500001907348633
    6. '``' → logprob: -19.750001907348633
    7. 'print' → logprob: -20.125001907348633
    8. 'elses' → logprob: -20.125001907348633
    9. '#else' → logprob: -20.250001907348633
    10. 'elser' → logprob: -20.750001907348633

Token 1288: ':
' (ID: 734)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12816379964351654
    2. '   ' → logprob: -2.1281638145446777
    3. ' print' → logprob: -7.378163814544678
    4. '```' → logprob: -7.878163814544678
    5. '(print' → logprob: -9.25316333770752
    6. '    
' → logprob: -9.50316333770752
    7. '	print' → logprob: -10.62816333770752
    8. ':
' → logprob: -11.75316333770752
    9. ':' → logprob: -12.00316333770752
    10. '.print' → logprob: -12.37816333770752

Token 1289: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.128163257315464e-07
    2. ' print' → logprob: -16.25
    3. '```' → logprob: -16.5
    4. '	print' → logprob: -21.25
    5. '   ' → logprob: -22.0
    6. '``' → logprob: -22.375
    7. '(print' → logprob: -23.0
    8. 'printf' → logprob: -23.375
    9. '.print' → logprob: -23.375
    10. '_print' → logprob: -23.75

Token 1290: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: 0.0
    2. '```' → logprob: -21.0
    3. ' print' → logprob: -21.75
    4. 'printf' → logprob: -23.75
    5. 'println' → logprob: -25.0
    6. '   ' → logprob: -26.125
    7. '
' → logprob: -27.125
    8. 'pr' → logprob: -27.125
    9. '``' → logprob: -27.5
    10. '	print' → logprob: -28.75

Token 1291: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -1.0206720617134124e-05
    2. 'dist' → logprob: -11.50001049041748
    3. ' dist' → logprob: -21.125009536743164
    4. '	dist' → logprob: -21.250009536743164
    5. '(int' → logprob: -21.625009536743164
    6. '(' → logprob: -21.750009536743164
    7. '(d' → logprob: -22.875009536743164
    8. '.dist' → logprob: -23.000009536743164
    9. '(dest' → logprob: -23.250009536743164
    10. '/dist' → logprob: -23.375009536743164

Token 1292: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -3.128163257315464e-07
    2. '[-' → logprob: -15.375
    3. 'N' → logprob: -19.0
    4. '[' → logprob: -19.625
    5. '[n' → logprob: -20.0
    6. '[
' → logprob: -22.125
    7. ')' → logprob: -22.125
    8. '[M' → logprob: -22.25
    9. '[X' → logprob: -22.625
    10. ' [' → logprob: -22.875

Token 1293: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.128163257315464e-07
    2. '[-' → logprob: -16.0
    3. '1' → logprob: -16.5
    4. '[' → logprob: -17.0
    5. ' -' → logprob: -18.0
    6. '```' → logprob: -18.25
    7. '−' → logprob: -20.75
    8. '-
' → logprob: -20.75
    9. ']-' → logprob: -21.875
    10. '‑' → logprob: -22.125

Token 1294: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '```' → logprob: -17.125
    3. '
' → logprob: -18.25
    4. 'print' → logprob: -18.5
    5. '１' → logprob: -20.625
    6. ' ' → logprob: -20.6875
    7. '-' → logprob: -20.75
    8. '   ' → logprob: -21.3125
    9. '`' → logprob: -21.5
    10. 'from' → logprob: -21.625

Token 1295: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. '))' → logprob: -15.5
    3. '+' → logprob: -17.375
    4. '})' → logprob: -17.5
    5. '())' → logprob: -17.5
    6. ' )' → logprob: -17.875
    7. ')}' → logprob: -18.625
    8. ')
' → logprob: -18.75
    9. '}' → logprob: -19.0
    10. ')`' → logprob: -19.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1293
Tokens correctement prédits (1ère position, stricte): 328
Tokens correctement prédits (1ère position, avec adaptation): 347
Tokens correctement prédits (top 10): 877
Précision stricte (1ère position): 25.37%
Précision adaptée (1ère position): 26.84%
Précision (top 10): 67.83%
================================================================================
