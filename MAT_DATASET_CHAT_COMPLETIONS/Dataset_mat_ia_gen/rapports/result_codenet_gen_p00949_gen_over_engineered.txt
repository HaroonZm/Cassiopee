================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from typing import List, Dict, Tuple
from collections import Counter
from abc import ABC, abstractmethod


class StringSource(ABC):
    @abstractmethod
    def length(self) -> int:
        pass

    @abstractmethod
    def substring(self, start: int, length: int) -> str:
        pass

    @abstractmethod
    def char_frequency_vector(self, start: int, length: int) -> List[int]:
        pass


class ConcreteString(StringSource):
    def __init__(self, s: str):
        self._s = s
        self._prefix_freq = self._compute_prefix_frequency(s)

    def _compute_prefix_frequency(self, s: str) -> List[List[int]]:
        freq = [[0] * 26]
        for ch in s:
            curr = freq[-1].copy()
            curr[ord(ch) - ord('a')] += 1
            freq.append(curr)
        return freq

    def length(self) -> int:
        return len(self._s)

    def substring(self, start: int, length: int) -> str:
        return self._s[start:start+length]

    def char_frequency_vector(self, start: int, length: int) -> List[int]:
        end = start + length
        freq_start = self._prefix_freq[start]
        freq_end = self._prefix_freq[end]
        return [freq_end[i] - freq_start[i] for i in range(26)]


class SubstringComparator(ABC):
    @abstractmethod
    def are_anagrams(self, v1: List[int], v2: List[int]) -> bool:
        pass


class FrequencyVectorComparator(SubstringComparator):
    def are_anagrams(self, v1: List[int], v2: List[int]) -> bool:
        return v1 == v2


class HiddenAnagramSolver:
    def __init__(self, s1: StringSource, s2: StringSource, comparator: SubstringComparator):
        self.s1 = s1
        self.s2 = s2
        self.comparator = comparator

    def _can_find_hidden_anagram_of_length(self, length: int) -> bool:
        if length == 0:
            return True
        freq_map_s1 = {}
        for start1 in range(self.s1.length() - length + 1):
            freq_v = tuple(self.s1.char_frequency_vector(start1, length))
            freq_map_s1[freq_v] = True

        for start2 in range(self.s2.length() - length + 1):
            freq_v2 = self.s2.char_frequency_vector(start2, length)
            if tuple(freq_v2) in freq_map_s1:
                # Because comparison is by frequency tuples and hashing, comparator check is optional here;
                # but left for extensibility.
                if self.comparator.are_anagrams(freq_v2, list(freq_v2)):
                    return True
        return False

    def longest_hidden_anagram_length(self) -> int:
        low = 0
        high = min(self.s1.length(), self.s2.length())
        best = 0
        while low <= high:
            mid = (low + high) // 2
            if self._can_find_hidden_anagram_of_length(mid):
                best = mid
                low = mid + 1
            else:
                high = mid - 1
        return best


def main():
    import sys

    s1_raw = sys.stdin.readline().strip()
    s2_raw = sys.stdin.readline().strip()

    s1 = ConcreteString(s1_raw)
    s2 = ConcreteString(s2_raw)

    comparator = FrequencyVectorComparator()

    solver = HiddenAnagramSolver(s1, s2, comparator)

    print(solver.longest_hidden_anagram_length())


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' typing' (ID: 34152)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.014027046039700508
    2. ' Any' → logprob: -5.014027118682861
    3. 'List' → logprob: -5.389027118682861
    4. ' Optional' → logprob: -6.514027118682861
    5. ' Union' → logprob: -7.514027118682861
    6. 'Any' → logprob: -7.764027118682861
    7. ' Generator' → logprob: -8.889026641845703
    8. 'Optional' → logprob: -10.389026641845703
    9. ' Iterable' → logprob: -10.639026641845703
    10. ' ' → logprob: -10.764026641845703

Token 4: ',' (ID: 11)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4672740399837494
    2. 'def' → logprob: -1.4672740697860718
    3. '<|end|>' → logprob: -3.4672739505767822
    4. '
' → logprob: -3.5922739505767822
    5. '\n' → logprob: -4.217274188995361
    6. '\' → logprob: -4.217274188995361
    7. '[' → logprob: -4.467274188995361
    8. ',' → logprob: -4.592274188995361
    9. 'import' → logprob: -4.967274188995361
    10. '`' → logprob: -5.592274188995361

Token 5: ' Dict' (ID: 55179)
  Prédit: ' Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -0.4627706706523895
    2. 'Optional' → logprob: -1.087770700454712
    3. 'Dict' → logprob: -4.087770462036133
    4. ' Dict' → logprob: -4.462770462036133
    5. 'Tuple' → logprob: -5.712770462036133
    6. ' Tuple' → logprob: -7.337770462036133
    7. ' Union' → logprob: -7.337770462036133
    8. 'Union' → logprob: -8.587770462036133
    9. 'Any' → logprob: -8.962770462036133
    10. ' Any' → logprob: -9.837770462036133

Token 6: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30749499797821045
    2. '```' → logprob: -2.1824951171875
    3. '<|end|>' → logprob: -3.0574951171875
    4. 'import' → logprob: -3.3074951171875
    5. 'def' → logprob: -3.5574951171875
    6. '[' → logprob: -4.4324951171875
    7. '<|end|>' → logprob: -5.3074951171875
    8. '\' → logprob: -5.8074951171875
    9. '`' → logprob: -6.0574951171875
    10. '

' → logprob: -6.0574951171875

Token 7: ' Tuple' (ID: 50841)
  Prédit: 'Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Any' → logprob: -1.1023739576339722
    2. 'Set' → logprob: -1.9773739576339722
    3. 'Optional' → logprob: -1.9773739576339722
    4. 'Tuple' → logprob: -2.1023740768432617
    5. ' Union' → logprob: -2.8523740768432617
    6. ' Optional' → logprob: -2.8523740768432617
    7. 'Union' → logprob: -2.9773740768432617
    8. ' Any' → logprob: -3.1023740768432617
    9. ' Tuple' → logprob: -3.3523740768432617
    10. ' Set' → logprob: -4.227374076843262

Token 8: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6898099780082703
    2. '```' → logprob: -1.564810037612915
    3. 'import' → logprob: -2.189810037612915
    4. 'def' → logprob: -3.064810037612915
    5. '<|end|>' → logprob: -3.439810037612915
    6. 'a' → logprob: -3.939810037612915
    7. '[' → logprob: -3.939810037612915
    8. ':' → logprob: -4.189809799194336
    9. '\' → logprob: -4.689809799194336
    10. '`' → logprob: -4.939809799194336

Token 9: 'from' (ID: 2845)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.4616023302078247
    2. 'import' → logprob: -1.7116023302078247
    3. 'def' → logprob: -1.7116023302078247
    4. ',' → logprob: -2.086602210998535
    5. '<|end|>' → logprob: -2.461602210998535
    6. 'a' → logprob: -2.586602210998535
    7. '\n' → logprob: -3.711602210998535
    8. '`' → logprob: -3.836602210998535
    9. '
' → logprob: -4.086602210998535
    10. '\' → logprob: -4.461602210998535

Token 10: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.1370048075914383
    2. ' typing' → logprob: -2.387004852294922
    3. 'collections' → logprob: -3.512004852294922
    4. ' dat' → logprob: -5.387004852294922
    5. ' fast' → logprob: -7.762004852294922
    6. 'typing' → logprob: -7.887004852294922
    7. ' datetime' → logprob: -8.262004852294922
    8. ' math' → logprob: -9.512004852294922
    9. ' enum' → logprob: -9.637004852294922
    10. ' sys' → logprob: -9.637004852294922

Token 11: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0018234545132145286
    2. ' import' → logprob: -6.376823425292969
    3. 'abc' → logprob: -9.626823425292969
    4. '```' → logprob: -10.376823425292969
    5. '.Counter' → logprob: -12.126823425292969
    6. 'Counter' → logprob: -12.251823425292969
    7. '	import' → logprob: -12.376823425292969
    8. '.' → logprob: -12.501823425292969
    9. 'imports' → logprob: -14.251823425292969
    10. '-import' → logprob: -14.376823425292969

Token 12: ' Counter' (ID: 32251)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.10354552417993546
    2. 'default' → logprob: -2.8535454273223877
    3. ' named' → logprob: -4.603545665740967
    4. 'abc' → logprob: -4.603545665740967
    5. 'named' → logprob: -4.603545665740967
    6. ' abc' → logprob: -4.978545665740967
    7. 'deque' → logprob: -6.353545665740967
    8. 'import' → logprob: -6.853545665740967
    9. ' deque' → logprob: -8.353545188903809
    10. ' import' → logprob: -8.478545188903809

Token 13: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9859111309051514
    2. '
' → logprob: -1.6109111309051514
    3. '```' → logprob: -1.7359111309051514
    4. '\' → logprob: -2.3609111309051514
    5. '

' → logprob: -2.4859111309051514
    6. '(' → logprob: -4.2359113693237305
    7. 'import' → logprob: -4.3609113693237305
    8. ',' → logprob: -4.3609113693237305
    9. 'def' → logprob: -4.8609113693237305
    10. '`' → logprob: -5.1109113693237305

Token 14: 'from' (ID: 2845)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8767077922821045
    2. 'def' → logprob: -1.1267077922821045
    3. '\n' → logprob: -1.7517077922821045
    4. '\' → logprob: -3.7517077922821045
    5. 'import' → logprob: -4.001708030700684
    6. '
' → logprob: -4.001708030700684
    7. 'class' → logprob: -5.001708030700684
    8. '``' → logprob: -5.126708030700684
    9. '`' → logprob: -5.376708030700684
    10. ',' → logprob: -6.376708030700684

Token 15: ' abc' (ID: 75094)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.021667204797267914
    2. ' math' → logprob: -4.146667003631592
    3. ' typing' → logprob: -5.896667003631592
    4. ' collections' → logprob: -6.646667003631592
    5. ' functools' → logprob: -7.521667003631592
    6. ' ' → logprob: -8.64666748046875
    7. ' sklearn' → logprob: -9.02166748046875
    8. ' re' → logprob: -9.14666748046875
    9. ' statistics' → logprob: -9.52166748046875
    10. ' enum' → logprob: -9.52166748046875

Token 16: ' import' (ID: 1588)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.24056242406368256
    2. ' import' → logprob: -1.9905624389648438
    3. 'import' → logprob: -2.7405624389648438
    4. '.import' → logprob: -5.490562438964844
    5. '	import' → logprob: -5.615562438964844
    6. ' .' → logprob: -5.990562438964844
    7. '.abstract' → logprob: -6.490562438964844
    8. '.ext' → logprob: -7.740562438964844
    9. '.A' → logprob: -9.990562438964844
    10. ' ' → logprob: -10.115562438964844

Token 17: ' ABC' (ID: 33047)
  Prédit: ' ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -0.0040978738106787205
    2. 'ABC' → logprob: -5.754097938537598
    3. ' A' → logprob: -7.004097938537598
    4. ' abstract' → logprob: -12.504097938537598
    5. 'abstract' → logprob: -12.754097938537598
    6. ' ' → logprob: -13.379097938537598
    7. 'A' → logprob: -13.754097938537598
    8. 'abc' → logprob: -14.379097938537598
    9. ' AB' → logprob: -14.504097938537598
    10. '	' → logprob: -15.129097938537598

Token 18: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002245415700599551
    2. 'import' → logprob: -7.2522454261779785
    3. '.' → logprob: -7.5022454261779785
    4. 'and' → logprob: -8.12724494934082
    5. ' ,' → logprob: -8.75224494934082
    6. ' and' → logprob: -8.75224494934082
    7. '<|end|>' → logprob: -9.12724494934082
    8. ')' → logprob: -9.75224494934082
    9. '```' → logprob: -10.12724494934082
    10. ',
' → logprob: -10.37724494934082

Token 19: ' abstract' (ID: 13004)
  Prédit: 'abstract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.03804171830415726
    2. ' abstract' → logprob: -3.288041830062866
    3. '.abstract' → logprob: -15.788042068481445
    4. 'Abstract' → logprob: -17.663042068481445
    5. ' abstr' → logprob: -17.663042068481445
    6. '```' → logprob: -17.788042068481445
    7. ' ABC' → logprob: -18.163042068481445
    8. ' ' → logprob: -18.538042068481445
    9. 'classmethod' → logprob: -18.538042068481445
    10. 'ABC' → logprob: -18.913042068481445

Token 20: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -1.4259644558478612e-05
    2. 'm' → logprob: -11.875014305114746
    3. 'classmethod' → logprob: -12.625014305114746
    4. 'meth' → logprob: -13.000014305114746
    5. ' method' → logprob: -14.250014305114746
    6. 'me' → logprob: -14.750014305114746
    7. 'base' → logprob: -15.375014305114746
    8. 'class' → logprob: -15.875014305114746
    9. 'ethod' → logprob: -16.25001335144043
    10. 'staticmethod' → logprob: -17.00001335144043

Token 21: '


' (ID: 2499)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.57256019115448
    2. '
' → logprob: -1.07256019115448
    3. '

' → logprob: -2.4475603103637695
    4. ' class' → logprob: -6.0725603103637695
    5. '```' → logprob: -6.4475603103637695
    6. '' → logprob: -6.6975603103637695
    7. '\n' → logprob: -7.0725603103637695
    8. '<|end|>' → logprob: -8.32256031036377
    9. 'c' → logprob: -8.57256031036377
    10. '


' → logprob: -8.69756031036377

Token 22: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.12739387154579163
    2. 'c' → logprob: -2.127393960952759
    3. 'cl' → logprob: -8.87739372253418
    4. 'clas' → logprob: -9.25239372253418
    5. '
' → logprob: -9.37739372253418
    6. 'cla' → logprob: -9.75239372253418
    7. 'C' → logprob: -10.25239372253418
    8. ' class' → logprob: -10.87739372253418
    9. 'a' → logprob: -11.62739372253418
    10. '```' → logprob: -11.87739372253418

Token 23: ' String' (ID: 1189)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.006741184741258621
    2. ' Abstract' → logprob: -6.881741046905518
    3. ' Analyzer' → logprob: -6.881741046905518
    4. ' Serializer' → logprob: -7.006741046905518
    5. ' Processor' → logprob: -7.131741046905518
    6. ' Space' → logprob: -7.256741046905518
    7. ' Base' → logprob: -7.631741046905518
    8. ' Parser' → logprob: -8.131741523742676
    9. ' Shape' → logprob: -8.381741523742676
    10. ' Basic' → logprob: -8.756741523742676

Token 24: 'Source' (ID: 4823)
  Prédit: 'Processor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Processor' → logprob: -0.02775324508547783
    2. 'Manipulator' → logprob: -3.9027533531188965
    3. '(' → logprob: -6.5277533531188965
    4. 'Matcher' → logprob: -6.7777533531188965
    5. 'Analyzer' → logprob: -6.9027533531188965
    6. 'Handler' → logprob: -7.0277533531188965
    7. 'Transformer' → logprob: -7.4027533531188965
    8. 'er' → logprob: -7.5277533531188965
    9. 'Util' → logprob: -8.652752876281738
    10. ':' → logprob: -8.902752876281738

Token 25: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.227874293923378
    2. ':' → logprob: -1.6028742790222168
    3. '(Abstract' → logprob: -6.102874279022217
    4. '():' → logprob: -8.977874755859375
    5. '(object' → logprob: -10.477874755859375
    6. ' :' → logprob: -10.602874755859375
    7. '(Exception' → logprob: -11.977874755859375
    8. '(:' → logprob: -11.977874755859375
    9. ':
' → logprob: -12.852874755859375
    10. '```' → logprob: -12.977874755859375

Token 26: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.06944877654314041
    2. ' ABC' → logprob: -2.819448709487915
    3. '):' → logprob: -5.194448947906494
    4. ')' → logprob: -6.444448947906494
    5. 'abc' → logprob: -9.069448471069336
    6. ' ):' → logprob: -9.819448471069336
    7. '):
' → logprob: -10.319448471069336
    8. '   ' → logprob: -10.944448471069336
    9. 'Abstract' → logprob: -11.069448471069336
    10. '(' → logprob: -11.194448471069336

Token 27: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005924708093516529
    2. ')' → logprob: -7.5005927085876465
    3. ':' → logprob: -10.375592231750488
    4. ' ):' → logprob: -12.250592231750488
    5. ',' → logprob: -13.625592231750488
    6. '):
' → logprob: -13.750592231750488
    7. '>):' → logprob: -15.750592231750488
    8. '():' → logprob: -15.750592231750488
    9. '>:' → logprob: -15.875592231750488
    10. '):

' → logprob: -16.250593185424805

Token 28: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002538444008678198
    2. '   ' → logprob: -6.377538681030273
    3. '):' → logprob: -7.877538681030273
    4. ' :' → logprob: -8.002538681030273
    5. ':
' → logprob: -9.627538681030273
    6. ')' → logprob: -10.377538681030273
    7. '<|end|>' → logprob: -12.127538681030273
    8. '    ' → logprob: -12.252538681030273
    9. ':def' → logprob: -13.002538681030273
    10. ',' → logprob: -13.377538681030273

Token 29: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00556421373039484
    2. 'def' → logprob: -6.380564212799072
    3. '    
' → logprob: -6.505564212799072
    4. '    ' → logprob: -6.505564212799072
    5. '@' (adapté à ' @') → logprob: -7.630564212799072
    6. ' def' → logprob: -8.63056468963623
    7. '
' → logprob: -9.63056468963623
    8. '  ' → logprob: -11.00556468963623
    9. '```' → logprob: -11.00556468963623
    10. ' @' → logprob: -11.13056468963623

Token 30: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.00023095356300473213
    2. 'ab' → logprob: -8.50023078918457
    3. 'abs' → logprob: -10.62523078918457
    4. 'a' → logprob: -13.25023078918457
    5. 'abc' → logprob: -14.25023078918457
    6. 'property' → logprob: -14.75023078918457
    7. 'staticmethod' → logprob: -15.37523078918457
    8. 'classmethod' → logprob: -17.12523078918457
    9. '.abstract' → logprob: -17.75023078918457
    10. ' abstract' → logprob: -18.00023078918457

Token 31: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.00025800178991630673
    2. '_method' → logprob: -8.375258445739746
    3. 'meth' → logprob: -11.750258445739746
    4. 'classmethod' → logprob: -12.250258445739746
    5. 'def' → logprob: -12.500258445739746
    6. '.method' → logprob: -12.625258445739746
    7. 'ethod' → logprob: -13.250258445739746
    8. 'Method' → logprob: -13.375258445739746
    9. ' method' → logprob: -13.500258445739746
    10. '-method' → logprob: -13.875258445739746

Token 32: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08014468103647232
    2. '
' → logprob: -3.4551446437835693
    3. 'method' → logprob: -4.080144882202148
    4. '(' → logprob: -4.205144882202148
    5. ' def' → logprob: -4.580144882202148
    6. '    
' → logprob: -7.080144882202148
    7. ' ' → logprob: -7.705144882202148
    8. ')' → logprob: -8.205144882202148
    9. '   ' → logprob: -8.205144882202148
    10. '\' → logprob: -8.455144882202148

Token 33: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11359556019306183
    2. '
' → logprob: -2.988595485687256
    3. '(' → logprob: -3.113595485687256
    4. ' def' → logprob: -4.863595485687256
    5. '(
' → logprob: -6.613595485687256
    6. '    
' → logprob: -6.863595485687256
    7. 'method' → logprob: -7.613595485687256
    8. '   ' → logprob: -7.863595485687256
    9. ':def' → logprob: -8.363595962524414
    10. '`' → logprob: -8.488595962524414

Token 34: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.008663378655910492
    2. ' def' → logprob: -4.758663177490234
    3. 'method' → logprob: -10.383663177490234
    4. ' ' → logprob: -12.008663177490234
    5. '
' → logprob: -13.133663177490234
    6. 'define' → logprob: -13.133663177490234
    7. '_def' → logprob: -13.383663177490234
    8. 's' → logprob: -13.758663177490234
    9. '   ' → logprob: -14.383663177490234
    10. '  ' → logprob: -14.383663177490234

Token 35: ' length' (ID: 5517)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.20295391976833344
    2. ' read' → logprob: -2.077953815460205
    3. ' ' → logprob: -3.202953815460205
    4. ' provide' → logprob: -5.202953815460205
    5. ' fetch' → logprob: -5.327953815460205
    6. ' generate' → logprob: -5.827953815460205
    7. ' source' → logprob: -6.452953815460205
    8. ' iterate' → logprob: -7.577953815460205
    9. 'get' → logprob: -7.827953815460205
    10. ' def' → logprob: -7.952953815460205

Token 36: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01821749098598957
    2. '(' → logprob: -4.01821756362915
    3. 'self' → logprob: -9.893217086791992
    4. ' (' → logprob: -11.643217086791992
    5. '(
' → logprob: -13.018217086791992
    6. 's' → logprob: -13.768217086791992
    7. '()' → logprob: -14.018217086791992
    8. ')' → logprob: -14.268217086791992
    9. '(

' → logprob: -14.518217086791992
    10. ' ' → logprob: -14.643217086791992

Token 37: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002061757491901517
    2. '):' → logprob: -6.37706184387207
    3. 'self' → logprob: -8.00206184387207
    4. ')->' → logprob: -11.25206184387207
    5. ' )' → logprob: -12.00206184387207
    6. '(self' → logprob: -13.25206184387207
    7. ',' → logprob: -13.37706184387207
    8. '   ' → logprob: -14.37706184387207
    9. '):
' → logprob: -14.75206184387207
    10. '),' → logprob: -15.50206184387207

Token 38: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004135868512094021
    2. '(' → logprob: -5.504136085510254
    3. 'self' → logprob: -10.629136085510254
    4. '()' → logprob: -11.629136085510254
    5. '():' → logprob: -11.754136085510254
    6. '->' → logprob: -12.004136085510254
    7. ' ->' → logprob: -12.754136085510254
    8. '   ' → logprob: -13.629136085510254
    9. ')' → logprob: -13.629136085510254
    10. '(s' → logprob: -13.879136085510254

Token 39: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.16022545099258423
    2. 'int' → logprob: -1.9102253913879395
    3. ' ' → logprob: -13.910225868225098
    4. ':int' → logprob: -16.28522491455078
    5. '[int' → logprob: -16.28522491455078
    6. '  ' → logprob: -16.78522491455078
    7. '<int' → logprob: -17.28522491455078
    8. '	int' → logprob: -17.53522491455078
    9. ' ' → logprob: -17.66022491455078
    10. '=int' → logprob: -18.03522491455078

Token 40: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00511551508679986
    2. '<|end|>' → logprob: -5.380115509033203
    3. ':return' → logprob: -8.255115509033203
    4. ':
' → logprob: -9.255115509033203
    5. '<|end|>' → logprob: -10.005115509033203
    6. '
' → logprob: -10.380115509033203
    7. '():' → logprob: -11.505115509033203
    8. '```' → logprob: -11.505115509033203
    9. ':void' → logprob: -11.755115509033203
    10. ':def' → logprob: -11.755115509033203

Token 41: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.6434773206710815
    2. ' pass' → logprob: -0.8934773206710815
    3. '       ' → logprob: -2.768477439880371
    4. '   ' → logprob: -6.643477439880371
    5. '...' → logprob: -7.518477439880371
    6. '    ' → logprob: -8.393477439880371
    7. ' ' → logprob: -8.643477439880371
    8. '	pass' → logprob: -9.643477439880371
    9. '  ' → logprob: -10.018477439880371
    10. '        ' → logprob: -10.518477439880371

Token 43: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.318500816822052
    2. '   ' → logprob: -2.3185007572174072
    3. '

' → logprob: -3.0685007572174072
    4. '    
' → logprob: -3.1935007572174072
    5. '<|end|>' → logprob: -3.3185007572174072
    6. '\n' → logprob: -3.8185007572174072
    7. ' 
' → logprob: -4.818500995635986
    8. '


' → logprob: -5.568500995635986
    9. '
    
' → logprob: -5.693500995635986
    10. '    ' → logprob: -6.318500995635986

Token 44: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3119218349456787
    2. '   ' → logprob: -1.8119218349456787
    3. '<|end|>' → logprob: -2.6869218349456787
    4. '    
' → logprob: -3.6869218349456787
    5. '

' → logprob: -5.811922073364258
    6. '<|end|>' → logprob: -6.061922073364258
    7. '\n' → logprob: -6.186922073364258
    8. ' 
' → logprob: -7.061922073364258
    9. '  
' → logprob: -7.561922073364258
    10. '    ' → logprob: -7.561922073364258

Token 45: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2114400714635849
    2. '
' → logprob: -2.461440086364746
    3. '    
' → logprob: -2.836440086364746
    4. '@' (adapté à ' @') → logprob: -3.711440086364746
    5. '<|end|>' → logprob: -4.961440086364746
    6. '\n' → logprob: -5.836440086364746
    7. 'def' → logprob: -5.961440086364746
    8. '@property' → logprob: -6.586440086364746
    9. '<|end|>' → logprob: -6.586440086364746
    10. '    ' → logprob: -6.711440086364746

Token 46: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.008904680609703064
    2. 'property' → logprob: -5.133904457092285
    3. 'staticmethod' → logprob: -6.258904457092285
    4. 'classmethod' → logprob: -7.008904457092285
    5. 'abc' → logprob: -9.008904457092285
    6. ' abstract' → logprob: -10.633904457092285
    7. 'abs' → logprob: -13.258904457092285
    8. '.abstract' → logprob: -13.258904457092285
    9. 'ab' → logprob: -14.008904457092285
    10. 'dat' → logprob: -14.133904457092285

Token 47: 'method' (ID: 8697)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02753465808928013
    2. ' def' → logprob: -4.152534484863281
    3. 'method' → logprob: -5.152534484863281
    4. '<|end|>' → logprob: -5.527534484863281
    5. '   ' → logprob: -7.402534484863281
    6. '<|end|>' → logprob: -7.902534484863281
    7. '_method' → logprob: -8.152534484863281
    8. '	def' → logprob: -8.777534484863281
    9. '(def' → logprob: -10.277534484863281
    10. '  ' → logprob: -10.652534484863281

Token 48: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.023154402151703835
    2. 'def' → logprob: -4.023154258728027
    3. ' def' → logprob: -5.773154258728027
    4. '   ' → logprob: -7.398154258728027
    5. '    
' → logprob: -7.523154258728027
    6. '<|end|>' → logprob: -8.398154258728027
    7. ' 
' → logprob: -9.648154258728027
    8. '  
' → logprob: -9.648154258728027
    9. '<|end|>' → logprob: -9.648154258728027
    10. '
' → logprob: -9.773154258728027

Token 49: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.37292659282684326
    2. '
' → logprob: -1.6229265928268433
    3. '   ' → logprob: -2.247926712036133
    4. ' def' → logprob: -4.872926712036133
    5. '    
' → logprob: -8.247926712036133
    6. '```' → logprob: -9.122926712036133
    7. '
' → logprob: -9.247926712036133
    8. '<|end|>' → logprob: -9.747926712036133
    9. '	def' → logprob: -10.622926712036133
    10. ' ' → logprob: -10.747926712036133

Token 50: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.011051944456994534
    2. ' def' → logprob: -4.511052131652832
    3. '
' → logprob: -12.886052131652832
    4. '   ' → logprob: -14.886052131652832
    5. '<|end|>' → logprob: -15.261052131652832
    6. 'str' → logprob: -15.761052131652832
    7. '```' → logprob: -15.886052131652832
    8. 'length' → logprob: -16.011051177978516
    9. 'classmethod' → logprob: -16.761051177978516
    10. ':def' → logprob: -16.761051177978516

Token 51: ' substring' (ID: 89494)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.04860270395874977
    2. 'get' → logprob: -4.04860258102417
    3. ' char' → logprob: -4.04860258102417
    4. ' substring' → logprob: -5.17360258102417
    5. 'char' → logprob: -5.42360258102417
    6. ' def' → logprob: -7.04860258102417
    7. 'substring' → logprob: -7.67360258102417
    8. ' content' → logprob: -8.673603057861328
    9. ' read' → logprob: -8.923603057861328
    10. ' character' → logprob: -9.173603057861328

Token 52: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02651474066078663
    2. '(' → logprob: -3.651514768600464
    3. ' (' → logprob: -8.526515007019043
    4. '(s' → logprob: -12.526515007019043
    5. '(
' → logprob: -13.151515007019043
    6. '```' → logprob: -13.401515007019043
    7. 'self' → logprob: -13.526515007019043
    8. '   ' → logprob: -13.651515007019043
    9. ' ' → logprob: -13.651515007019043
    10. '(start' → logprob: -14.151515007019043

Token 53: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01886647194623947
    2. ')' → logprob: -4.518866539001465
    3. ' ,' → logprob: -4.893866539001465
    4. 'self' → logprob: -8.518866539001465
    5. ' )' → logprob: -10.518866539001465
    6. '(self' → logprob: -10.643866539001465
    7. '   ' → logprob: -11.143866539001465
    8. 's' → logprob: -11.268866539001465
    9. ',self' → logprob: -12.393866539001465
    10. ' ' → logprob: -13.018866539001465

Token 54: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.4855102300643921
    2. 'start' → logprob: -1.110510230064392
    3. ' self' → logprob: -3.4855103492736816
    4. 'self' → logprob: -3.7355103492736816
    5. ')' → logprob: -7.860510349273682
    6. '```' → logprob: -9.110509872436523
    7. '   ' → logprob: -10.235509872436523
    8. 's' → logprob: -10.235509872436523
    9. ' ' → logprob: -10.235509872436523
    10. ' )' → logprob: -10.860509872436523

Token 55: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3457791209220886
    2. ',' → logprob: -1.3457791805267334
    3. ':int' → logprob: -3.4707791805267334
    4. ' ,' → logprob: -7.345778942108154
    5. ' :' → logprob: -9.220779418945312
    6. ')' → logprob: -9.845779418945312
    7. ',int' → logprob: -9.845779418945312
    8. '=' → logprob: -11.095779418945312
    9. '):' → logprob: -11.720779418945312
    10. ':Int' → logprob: -12.595779418945312

Token 56: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.023517059162259102
    2. ' int' → logprob: -3.77351713180542
    3. ':int' → logprob: -8.773516654968262
    4. ')' → logprob: -9.148516654968262
    5. '0' → logprob: -12.523516654968262
    6. '[int' → logprob: -13.398516654968262
    7. '=int' → logprob: -13.898516654968262
    8. ' )' → logprob: -14.148516654968262
    9. ',int' → logprob: -14.273516654968262
    10. ',' → logprob: -14.523516654968262

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.249780638725497e-05
    2. ' ,' → logprob: -10.500032424926758
    3. ')' → logprob: -12.625032424926758
    4. '‌,' → logprob: -14.875032424926758
    5. ',int' → logprob: -15.000032424926758
    6. ',
' → logprob: -15.125032424926758
    7. '<|end|>' → logprob: -15.875032424926758
    8. ':' → logprob: -16.125032424926758
    9. ',length' → logprob: -17.000032424926758
    10. ' ' → logprob: -17.250032424926758

Token 58: ' length' (ID: 5517)
  Prédit: ' end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.0038324985653162003
    2. 'end' → logprob: -5.6288323402404785
    3. ' length' → logprob: -8.628832817077637
    4. ' ' → logprob: -10.503832817077637
    5. '   ' → logprob: -11.003832817077637
    6. 'length' → logprob: -12.753832817077637
    7. '	end' → logprob: -13.128832817077637
    8. ')' → logprob: -13.628832817077637
    9. ' stop' → logprob: -13.753832817077637
    10. '  ' → logprob: -13.878832817077637

Token 59: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4754832684993744
    2. ':' → logprob: -0.9754832983016968
    3. '):' → logprob: -6.600483417510986
    4. ':int' → logprob: -10.850482940673828
    5. '   ' → logprob: -11.225482940673828
    6. ' ' → logprob: -12.475482940673828
    7. '```' → logprob: -12.725482940673828
    8. ' )' → logprob: -13.225482940673828
    9. '=' → logprob: -13.850482940673828
    10. '  ' → logprob: -14.225482940673828

Token 60: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4896220564842224
    2. 'int' → logprob: -0.9896220564842224
    3. ')' → logprob: -4.239622116088867
    4. ' ' → logprob: -7.489622116088867
    5. ':int' → logprob: -8.864622116088867
    6. ' )' → logprob: -9.239622116088867
    7. '<|end|>' → logprob: -9.364622116088867
    8. '[int' → logprob: -10.239622116088867
    9. 's' → logprob: -10.989622116088867
    10. '=int' → logprob: -11.114622116088867

Token 61: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0067201098427176476
    2. '):' → logprob: -5.006720066070557
    3. ' )' → logprob: -13.006720542907715
    4. '):
' → logprob: -13.631720542907715
    5. ')->' → logprob: -14.006720542907715
    6. ':' → logprob: -15.381720542907715
    7. ' ):' → logprob: -16.0067195892334
    8. ')
' → logprob: -17.3817195892334
    9. ' ' → logprob: -17.5067195892334
    10. '):

' → logprob: -17.6317195892334

Token 62: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001706367009319365
    2. ' ->' → logprob: -7.376706600189209
    3. ' )' → logprob: -7.751706600189209
    4. '):' → logprob: -8.50170612335205
    5. '   ' → logprob: -8.87670612335205
    6. ')->' → logprob: -9.00170612335205
    7. ':' → logprob: -9.00170612335205
    8. '->' → logprob: -10.00170612335205
    9. ' ' → logprob: -12.37670612335205
    10. ' )->' → logprob: -13.00170612335205

Token 63: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.1002165898680687
    2. 'str' → logprob: -2.3502166271209717
    3. ' ' → logprob: -12.60021686553955
    4. ' '' → logprob: -13.22521686553955
    5. '[str' → logprob: -13.35021686553955
    6. '	str' → logprob: -14.10021686553955
    7. 's' → logprob: -14.72521686553955
    8. ''s' → logprob: -15.10021686553955
    9. ''' → logprob: -15.35021686553955
    10. 'Str' → logprob: -15.85021686553955

Token 64: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017202809685841203
    2. '):' → logprob: -7.126720428466797
    3. '<|end|>' → logprob: -7.126720428466797
    4. ':
' → logprob: -10.126720428466797
    5. ':return' → logprob: -10.376720428466797
    6. ' :' → logprob: -11.376720428466797
    7. '   ' → logprob: -11.876720428466797
    8. '<|end|>' → logprob: -11.876720428466797
    9. ')' → logprob: -12.376720428466797
    10. ':def' → logprob: -13.126720428466797

Token 65: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 66: ' pass' (ID: 1853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03279734030365944
    2. 'pass' (adapté à ' pass') → logprob: -4.282797336578369
    3. ' pass' → logprob: -4.407797336578369
    4. '<|end|>' → logprob: -6.032797336578369
    5. '\n' → logprob: -6.407797336578369
    6. '```' → logprob: -7.532797336578369
    7. '   ' → logprob: -7.532797336578369
    8. '        
' → logprob: -8.282797813415527
    9. '\' → logprob: -8.657797813415527
    10. '    ' → logprob: -9.407797813415527

Token 67: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7038263082504272
    2. '

' → logprob: -0.7038263082504272
    3. 'class' → logprob: -4.578826427459717
    4. '


' → logprob: -8.203825950622559
    5. '```' → logprob: -10.828825950622559
    6. '
' → logprob: -11.078825950622559
    7. '<|end|>' → logprob: -11.453825950622559
    8. ' class' → logprob: -11.953825950622559
    9. '\n' → logprob: -11.953825950622559
    10. '
    
' → logprob: -12.203825950622559

Token 68: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39806267619132996
    2. '

' → logprob: -1.3980627059936523
    3. 'class' → logprob: -2.5230627059936523
    4. '


' → logprob: -6.898062705993652
    5. ' class' → logprob: -10.773062705993652
    6. '```' → logprob: -11.148062705993652
    7. '



' → logprob: -11.898062705993652
    8. '
' → logprob: -11.898062705993652
    9. '
    
' → logprob: -12.023062705993652
    10. '\n' → logprob: -12.023062705993652

Token 69: ' @' (ID: 759)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.008919687941670418
    2. '
' → logprob: -4.758919715881348
    3. '

' → logprob: -8.258919715881348
    4. ' class' → logprob: -10.883919715881348
    5. '    
' → logprob: -11.883919715881348
    6. '


' → logprob: -12.258919715881348
    7. ' 
' → logprob: -12.633919715881348
    8. '<class' → logprob: -13.008919715881348
    9. '
    
' → logprob: -13.008919715881348
    10. '  
' → logprob: -13.133919715881348

Token 70: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.6255626082420349
    2. 'classmethod' → logprob: -1.1255626678466797
    3. 'class' → logprob: -2.3755626678466797
    4. 'staticmethod' → logprob: -3.3755626678466797
    5. 'abc' → logprob: -5.00056266784668
    6. 'property' → logprob: -5.12556266784668
    7. 'Abstract' → logprob: -8.50056266784668
    8. 'ABC' → logprob: -8.62556266784668
    9. 'string' → logprob: -9.50056266784668
    10. 'String' → logprob: -9.62556266784668

Token 71: 'method' (ID: 8697)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.22919251024723053
    2. 'method' → logprob: -2.1041924953460693
    3. '<|end|>' → logprob: -3.1041924953460693
    4. ' def' → logprob: -3.7291924953460693
    5. 'classmethod' → logprob: -5.479192733764648
    6. 'staticmethod' → logprob: -6.479192733764648
    7. '<|end|>' → logprob: -6.479192733764648
    8. '   ' → logprob: -6.979192733764648
    9. '_method' → logprob: -7.104192733764648
    10. ' ' → logprob: -7.354192733764648

Token 72: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.752284824848175
    2. '
' → logprob: -0.877284824848175
    3. '   ' → logprob: -2.2522847652435303
    4. ' def' → logprob: -5.002285003662109
    5. '<|end|>' → logprob: -7.377285003662109
    6. '
' → logprob: -9.25228500366211
    7. '    
' → logprob: -9.62728500366211
    8. '<|end|>' → logprob: -10.12728500366211
    9. '  ' → logprob: -10.87728500366211
    10. '	def' → logprob: -10.87728500366211

Token 73: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.016792962327599525
    2. '   ' → logprob: -4.2667927742004395
    3. '
' → logprob: -6.1417927742004395
    4. ' def' → logprob: -7.8917927742004395
    5. 'property' → logprob: -10.016793251037598
    6. '```' → logprob: -11.141793251037598
    7. 'classmethod' → logprob: -11.516793251037598
    8. 'staticmethod' → logprob: -12.141793251037598
    9. 'method' → logprob: -12.766793251037598
    10. '	def' → logprob: -12.891793251037598

Token 74: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.002554734703153372
    2. 'str' → logprob: -6.627554893493652
    3. 'bool' → logprob: -7.377554893493652
    4. ' def' → logprob: -8.377554893493652
    5. 'class' → logprob: -8.877554893493652
    6. 'classmethod' → logprob: -9.502554893493652
    7. 'property' → logprob: -9.752554893493652
    8. 'f' → logprob: -10.002554893493652
    9. '
' → logprob: -10.752554893493652
    10. 'staticmethod' → logprob: -11.252554893493652

Token 75: ' char' (ID: 1826)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -1.0056992769241333
    2. ' get' → logprob: -1.7556992769241333
    3. ' to' → logprob: -1.8806992769241333
    4. 'char' → logprob: -2.8806991577148438
    5. 'get' → logprob: -3.3806991577148438
    6. ' def' → logprob: -3.5056991577148438
    7. ' char' → logprob: -3.6306991577148438
    8. 'def' → logprob: -4.380699157714844
    9. 'index' → logprob: -4.630699157714844
    10. ' find' → logprob: -4.630699157714844

Token 76: '_frequency' (ID: 98311)
  Prédit: '_at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.004822887945920229
    2. 'At' → logprob: -6.379822731018066
    3. 'at' → logprob: -6.629822731018066
    4. 'acters' → logprob: -6.629822731018066
    5. '_count' → logprob: -8.754822731018066
    6. 'acter' → logprob: -9.004822731018066
    7. 's' → logprob: -9.379822731018066
    8. 'count' → logprob: -10.504822731018066
    9. 'a' → logprob: -10.629822731018066
    10. '```' → logprob: -11.004822731018066

Token 77: '_vector' (ID: 29530)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0018008425831794739
    2. 's' → logprob: -6.626801013946533
    3. '(' → logprob: -8.251800537109375
    4. ')' → logprob: -9.251800537109375
    5. 'self' → logprob: -9.251800537109375
    6. ' (' → logprob: -12.126800537109375
    7. '   ' → logprob: -12.251800537109375
    8. '```' → logprob: -12.251800537109375
    9. ' ' → logprob: -13.501800537109375
    10. '(s' → logprob: -14.001800537109375

Token 78: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001204519416205585
    2. '(' → logprob: -6.751204490661621
    3. ' (' → logprob: -11.001204490661621
    4. 'self' → logprob: -11.501204490661621
    5. '   ' → logprob: -13.376204490661621
    6. '(
' → logprob: -13.376204490661621
    7. 's' → logprob: -13.501204490661621
    8. ')' → logprob: -13.626204490661621
    9. ' ' → logprob: -14.876204490661621
    10. ')(' → logprob: -15.126204490661621

Token 79: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007985501433722675
    2. '(self' → logprob: -7.87579870223999
    3. 'self' → logprob: -8.125798225402832
    4. ' )' → logprob: -10.375798225402832
    5. ',' → logprob: -10.500798225402832
    6. '   ' → logprob: -10.750798225402832
    7. ')(' → logprob: -10.750798225402832
    8. '```' → logprob: -12.125798225402832
    9. ' ' → logprob: -12.375798225402832
    10. '       ' → logprob: -12.750798225402832

Token 80: ' start' (ID: 1604)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.43551698327064514
    2. 'self' → logprob: -1.0605169534683228
    3. ' self' → logprob: -5.060516834259033
    4. ' )' → logprob: -8.935517311096191
    5. '
' → logprob: -9.560517311096191
    6. 'n' → logprob: -9.560517311096191
    7. 's' → logprob: -10.310517311096191
    8. 'chars' → logprob: -10.560517311096191
    9. '):' → logprob: -11.310517311096191
    10. ' ' → logprob: -11.560517311096191

Token 81: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04062988609075546
    2. ',' → logprob: -3.2906298637390137
    3. '=' → logprob: -7.165629863739014
    4. ':int' → logprob: -7.540629863739014
    5. ')' → logprob: -7.665629863739014
    6. ' :' → logprob: -7.790629863739014
    7. '<|end|>' → logprob: -8.790630340576172
    8. ' ,' → logprob: -9.040630340576172
    9. '<|end|>' → logprob: -9.665630340576172
    10. '):' → logprob: -10.165630340576172

Token 82: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3503582179546356
    2. 'int' → logprob: -1.225358247756958
    3. '<|end|>' → logprob: -6.725358009338379
    4. ' ' → logprob: -7.600358009338379
    5. ':int' → logprob: -8.975358009338379
    6. ')' → logprob: -10.725358009338379
    7. '[int' → logprob: -10.975358009338379
    8. '=int' → logprob: -11.225358009338379
    9. ',int' → logprob: -12.100358009338379
    10. '<|end|>' → logprob: -12.225358009338379

Token 83: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017290872347075492
    2. ' ,' → logprob: -8.87517261505127
    3. ')' → logprob: -10.62517261505127
    4. ':' → logprob: -12.75017261505127
    5. ',int' → logprob: -12.75017261505127
    6. '<|end|>' → logprob: -14.00017261505127
    7. ',
' → logprob: -14.50017261505127
    8. '=' → logprob: -14.87517261505127
    9. ':int' → logprob: -15.00017261505127
    10. '<|end|>' → logprob: -15.37517261505127

Token 84: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.38726353645324707
    2. ' length' → logprob: -1.137263536453247
    3. ' end' → logprob: -8.887263298034668
    4. 'end' → logprob: -9.012263298034668
    5. ')' → logprob: -9.262263298034668
    6. 'ength' → logprob: -11.262263298034668
    7. '<|end|>' → logprob: -12.012263298034668
    8. ',length' → logprob: -12.387263298034668
    9. 'leng' → logprob: -12.762263298034668
    10. ' ' → logprob: -12.887263298034668

Token 85: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5802768468856812
    2. ')' → logprob: -0.8302768468856812
    3. '):' → logprob: -5.455276966094971
    4. ':int' → logprob: -11.330276489257812
    5. '   ' → logprob: -11.455276489257812
    6. '=' → logprob: -12.205276489257812
    7. '```' → logprob: -12.330276489257812
    8. ' ' → logprob: -12.455276489257812
    9. '):
' → logprob: -12.580276489257812
    10. ' :' → logprob: -12.830276489257812

Token 86: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.2951820194721222
    2. 'int' → logprob: -1.4201819896697998
    3. ')' → logprob: -4.295182228088379
    4. ' )' → logprob: -8.795182228088379
    5. ' ' → logprob: -9.795182228088379
    6. '<|end|>' → logprob: -10.795182228088379
    7. ':int' → logprob: -10.920182228088379
    8. '[int' → logprob: -11.170182228088379
    9. ' ' → logprob: -11.295182228088379
    10. ' str' → logprob: -11.920182228088379

Token 87: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.607391408877447e-05
    2. '):' → logprob: -11.000036239624023
    3. ' )' → logprob: -11.250036239624023
    4. '   ' → logprob: -12.250036239624023
    5. '`)' → logprob: -14.500036239624023
    6. ' ' → logprob: -15.500036239624023
    7. ')
' → logprob: -15.750036239624023
    8. '')' → logprob: -16.000036239624023
    9. ':' → logprob: -16.000036239624023
    10. ',' → logprob: -16.250036239624023

Token 88: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5138793587684631
    2. ' ->' → logprob: -1.0138792991638184
    3. '->' → logprob: -3.2638792991638184
    4. ')->' → logprob: -7.263879299163818
    5. ' )' → logprob: -10.388879776000977
    6. ' ' → logprob: -10.888879776000977
    7. '   ' → logprob: -11.388879776000977
    8. ':' → logprob: -12.263879776000977
    9. ']' → logprob: -12.513879776000977
    10. '>' → logprob: -12.763879776000977

Token 89: ' List' (ID: 2655)
  Prédit: 'Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dict' → logprob: -1.1384190320968628
    2. ' List' → logprob: -1.3884190320968628
    3. ' Dict' → logprob: -1.3884190320968628
    4. 'List' → logprob: -1.8884190320968628
    5. ' Counter' → logprob: -4.013419151306152
    6. 'Counter' → logprob: -4.638419151306152
    7. ' dict' → logprob: -7.263419151306152
    8. 'dict' → logprob: -8.700919151306152
    9. ' ' → logprob: -8.888419151306152
    10. '	List' → logprob: -8.950919151306152

Token 90: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -9.066919301403686e-05
    2. '[' → logprob: -9.375090599060059
    3. '[str' → logprob: -13.000090599060059
    4. 'int' → logprob: -13.125090599060059
    5. '[Int' → logprob: -14.250090599060059
    6. '<int' → logprob: -14.750090599060059
    7. '[i' → logprob: -15.750090599060059
    8. ' [' → logprob: -16.000091552734375
    9. '[List' → logprob: -16.125091552734375
    10. '[
' → logprob: -16.500091552734375

Token 91: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03906095772981644
    2. ']:' → logprob: -3.4140610694885254
    3. ')' → logprob: -5.289061069488525
    4. ']' → logprob: -8.414060592651367
    5. ':' → logprob: -9.414060592651367
    6. '   ' → logprob: -11.289060592651367
    7. ']):' → logprob: -11.539060592651367
    8. '):
' → logprob: -11.664060592651367
    9. ' ):' → logprob: -12.164060592651367
    10. '[' → logprob: -12.414060592651367

Token 92: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9012360572814941
    2. '       ' → logprob: -1.0262360572814941
    3. '<|end|>' → logprob: -1.5262360572814941
    4. '   ' → logprob: -4.776236057281494
    5. ' :' → logprob: -5.401236057281494
    6. '):' → logprob: -6.026236057281494
    7. ')' → logprob: -6.651236057281494
    8. ' ' → logprob: -7.526236057281494
    9. '<|end|>' → logprob: -7.901236057281494
    10. ':
' → logprob: -9.526235580444336

Token 93: ' pass' (ID: 1853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.905240535736084
    2. 'pass' (adapté à ' pass') → logprob: -0.905240535736084
    3. ' pass' → logprob: -1.655240535736084
    4. '   ' → logprob: -10.905241012573242
    5. '	pass' → logprob: -11.155241012573242
    6. '    ' → logprob: -11.780241012573242
    7. '      ' → logprob: -11.905241012573242
    8. '```' → logprob: -12.405241012573242
    9. '     ' → logprob: -12.655241012573242
    10. ' ' → logprob: -12.780241012573242

Token 94: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5105614066123962
    2. '

' → logprob: -1.510561466217041
    3. 'class' → logprob: -1.760561466217041
    4. '


' → logprob: -5.635561466217041
    5. '<|end|>' → logprob: -7.510561466217041
    6. ' class' → logprob: -7.635561466217041
    7. '\n' → logprob: -7.885561466217041
    8. '
    
' → logprob: -7.885561466217041
    9. '```' → logprob: -7.885561466217041
    10. ' 
' → logprob: -8.260560989379883

Token 95: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.583220899105072
    2. '
' → logprob: -0.833220899105072
    3. '

' → logprob: -4.958220958709717
    4. 'c' → logprob: -9.833220481872559
    5. ' class' → logprob: -9.833220481872559
    6. '
' → logprob: -10.708220481872559
    7. '


' → logprob: -10.833220481872559
    8. '```' → logprob: -10.833220481872559
    9. '
    
' → logprob: -11.208220481872559
    10. '\n' → logprob: -11.583220481872559

Token 96: ' Concrete' (ID: 47600)
  Prédit: ' String'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' String' → logprob: -0.2392198145389557
    2. ' Concrete' → logprob: -2.739219903945923
    3. ' ' → logprob: -3.114219903945923
    4. ' Basic' → logprob: -3.239219903945923
    5. ' Simple' → logprob: -3.864219903945923
    6. ' Array' → logprob: -4.989219665527344
    7. ' Literal' → logprob: -5.239219665527344
    8. ' File' → logprob: -5.239219665527344
    9. ' Static' → logprob: -5.364219665527344
    10. ' Text' → logprob: -5.614219665527344

Token 97: 'String' (ID: 916)
  Prédit: 'String'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'String' → logprob: -8.41866585687967e-06
    2. 'Source' → logprob: -12.000008583068848
    3. ' String' → logprob: -13.250008583068848
    4. 'string' → logprob: -14.750008583068848
    5. '_String' → logprob: -17.37500762939453
    6. 'Str' → logprob: -17.75000762939453
    7. 'Strings' → logprob: -17.87500762939453
    8. '_string' → logprob: -18.50000762939453
    9. ' string' → logprob: -18.50000762939453
    10. 'S' → logprob: -18.75000762939453

Token 98: '(String' (ID: 2930)
  Prédit: 'Source'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Source' → logprob: -1.981667537620524e-06
    2. 'S' → logprob: -13.500001907348633
    3. '(Source' → logprob: -15.375001907348633
    4. '(' → logprob: -15.750001907348633
    5. 'ource' → logprob: -16.125001907348633
    6. ' Source' → logprob: -16.875001907348633
    7. 'source' → logprob: -17.250001907348633
    8. 'So' → logprob: -17.875001907348633
    9. 'Sou' → logprob: -18.125001907348633
    10. '_source' → logprob: -18.500001907348633

Token 99: 'Source' (ID: 4823)
  Prédit: 'Source'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Source' → logprob: -9.372294698550832e-06
    2. ')' → logprob: -12.625009536743164
    3. '):' → logprob: -12.875009536743164
    4. 'S' → logprob: -13.250009536743164
    5. '):
' → logprob: -14.625009536743164
    6. 'ource' → logprob: -14.750009536743164
    7. ' Source' → logprob: -15.000009536743164
    8. 'So' → logprob: -15.875009536743164
    9. 'Sou' → logprob: -16.125009536743164
    10. '(Source' → logprob: -16.250009536743164

Token 100: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00021629150433000177
    2. ')' → logprob: -8.500216484069824
    3. ':' → logprob: -11.875216484069824
    4. '):
' → logprob: -12.250216484069824
    5. ']:' → logprob: -14.750216484069824
    6. ' ):' → logprob: -14.875216484069824
    7. ',' → logprob: -16.125215530395508
    8. '):
' → logprob: -16.125215530395508
    9. '):

' → logprob: -16.500215530395508
    10. '   ' → logprob: -17.625215530395508

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008025577291846275
    2. ':' → logprob: -5.633025646209717
    3. '    
' → logprob: -5.883025646209717
    4. '    ' → logprob: -7.133025646209717
    5. '
' → logprob: -7.758025646209717
    6. ' def' → logprob: -9.258025169372559
    7. ')' → logprob: -9.383025169372559
    8. ' 
' → logprob: -10.008025169372559
    9. '```' → logprob: -10.383025169372559
    10. ' :' → logprob: -10.633025169372559

Token 102: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015292210504412651
    2. 'def' (adapté à ' def') → logprob: -4.390292167663574
    3. ' def' → logprob: -5.890292167663574
    4. '    
' → logprob: -11.890292167663574
    5. '
' → logprob: -12.765292167663574
    6. ' ' → logprob: -14.140292167663574
    7. '	def' → logprob: -14.390292167663574
    8. '  ' → logprob: -15.140292167663574
    9. '```' → logprob: -15.265292167663574
    10. '    ' → logprob: -15.390292167663574

Token 103: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -5.44312788406387e-05
    2. '__' → logprob: -9.875054359436035
    3. ' ' → logprob: -13.250054359436035
    4. ' _' → logprob: -14.500054359436035
    5. '_init' → logprob: -14.875054359436035
    6. ' def' → logprob: -16.12505531311035
    7. ' ' → logprob: -17.12505531311035
    8. 'init' → logprob: -17.75005531311035
    9. '_' → logprob: -17.87505531311035
    10. ' ```' → logprob: -17.87505531311035

Token 104: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'ini' → logprob: -16.75
    3. 'inite' → logprob: -19.0
    4. 'i' → logprob: -19.25
    5. ' init' → logprob: -19.875
    6. 'in' → logprob: -20.625
    7. 'innit' → logprob: -20.625
    8. '_init' → logprob: -20.875
    9. '	init' → logprob: -21.125
    10. '
' → logprob: -22.25

Token 105: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.002297278493642807
    2. '(self' → logprob: -6.127297401428223
    3. '__(
' → logprob: -9.877297401428223
    4. '__' → logprob: -10.002297401428223
    5. '(' → logprob: -12.002297401428223
    6. '__((' → logprob: -12.752297401428223
    7. '<>(' → logprob: -13.502297401428223
    8. 'self' → logprob: -13.627297401428223
    9. '```' → logprob: -14.127297401428223
    10. '__('' → logprob: -14.377297401428223

Token 106: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005537479883059859
    2. ' self' → logprob: -7.500553607940674
    3. '(self' → logprob: -15.250554084777832
    4. '       ' → logprob: -15.625554084777832
    5. '
' → logprob: -16.125553131103516
    6. ',' → logprob: -16.375553131103516
    7. '   ' → logprob: -17.000553131103516
    8. ')' → logprob: -18.625553131103516
    9. '	self' → logprob: -18.875553131103516
    10. ' ' → logprob: -19.125553131103516

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017863049288280308
    2. ' ,' → logprob: -9.125178337097168
    3. 'self' → logprob: -9.625178337097168
    4. '<|end|>' → logprob: -14.375178337097168
    5. ',
' → logprob: -14.625178337097168
    6. ',self' → logprob: -14.750178337097168
    7. ' self' → logprob: -15.125178337097168
    8. ')' → logprob: -15.125178337097168
    9. ' ' → logprob: -15.625178337097168
    10. 'string' → logprob: -15.875178337097168

Token 108: ' s' (ID: 265)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -1.413407325744629
    2. ' s' → logprob: -1.663407325744629
    3. ' text' → logprob: -1.788407325744629
    4. 'text' → logprob: -2.163407325744629
    5. 'value' → logprob: -2.538407325744629
    6. ' string' → logprob: -3.038407325744629
    7. 's' → logprob: -3.163407325744629
    8. 'string' → logprob: -3.288407325744629
    9. ' content' → logprob: -3.788407325744629
    10. ' data' → logprob: -4.163407325744629

Token 109: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004374638374429196
    2. ':str' → logprob: -7.875437259674072
    3. '):' → logprob: -10.37543773651123
    4. 'tring' → logprob: -10.75043773651123
    5. ' :' → logprob: -12.87543773651123
    6. ')' → logprob: -13.37543773651123
    7. '_:' → logprob: -15.50043773651123
    8. 'tr' → logprob: -15.75043773651123
    9. ':string' → logprob: -16.500436782836914
    10. ' ):' → logprob: -16.875436782836914

Token 110: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.014179613441228867
    2. ' str' → logprob: -4.264179706573486
    3. ')' → logprob: -11.264179229736328
    4. ':str' → logprob: -14.014179229736328
    5. ' ' → logprob: -14.639179229736328
    6. '=str' → logprob: -14.764179229736328
    7. '[str' → logprob: -14.889179229736328
    8. '	str' → logprob: -15.014179229736328
    9. '   ' → logprob: -15.139179229736328
    10. 's' → logprob: -15.889179229736328

Token 111: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00426441989839077
    2. ')' → logprob: -5.7542643547058105
    3. ':' → logprob: -7.3792643547058105
    4. ' ):' → logprob: -7.8792643547058105
    5. '):
' → logprob: -9.629264831542969
    6. '   ' → logprob: -11.629264831542969
    7. ' )' → logprob: -12.254264831542969
    8. '):
' → logprob: -13.129264831542969
    9. ' :' → logprob: -14.254264831542969
    10. ' ' → logprob: -14.754264831542969

Token 112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00022296691895462573
    2. 'self' → logprob: -8.500223159790039
    3. ' self' → logprob: -11.250223159790039
    4. '   ' → logprob: -12.250223159790039
    5. '      ' → logprob: -14.250223159790039
    6. '     ' → logprob: -15.000223159790039
    7. '           ' → logprob: -15.875223159790039
    8. ' ' → logprob: -16.00022315979004
    9. '    ' → logprob: -16.37522315979004
    10. '        ' → logprob: -16.37522315979004

Token 113: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40763798356056213
    2. 'self' (adapté à ' self') → logprob: -1.4076379537582397
    3. ' self' → logprob: -2.4076380729675293
    4. '   ' → logprob: -11.032637596130371
    5. ' ' → logprob: -12.157637596130371
    6. '	self' → logprob: -13.282637596130371
    7. '      ' → logprob: -13.532637596130371
    8. 's' → logprob: -13.657637596130371
    9. ' ' → logprob: -13.782637596130371
    10. '        ' → logprob: -13.782637596130371

Token 114: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.43388843536376953
    2. '.s' → logprob: -1.3088884353637695
    3. 's' → logprob: -3.0588884353637695
    4. ' s' → logprob: -3.8088884353637695
    5. ' .' → logprob: -5.8088884353637695
    6. ' =' → logprob: -5.8088884353637695
    7. '   ' → logprob: -5.9338884353637695
    8. '=' → logprob: -6.5588884353637695
    9. ' ' → logprob: -6.9338884353637695
    10. ':' → logprob: -6.9338884353637695

Token 115: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12721702456474304
    2. 'string' → logprob: -2.1272170543670654
    3. 'str' → logprob: -8.627217292785645
    4. '_string' → logprob: -9.377217292785645
    5. 'data' → logprob: -11.627217292785645
    6. '_str' → logprob: -12.127217292785645
    7. 'source' → logprob: -12.502217292785645
    8. '_s' → logprob: -13.127217292785645
    9. ' string' → logprob: -13.752217292785645
    10. '```' → logprob: -13.752217292785645

Token 116: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868747651576996
    2. '=' → logprob: -1.136874794960022
    3. ' ' → logprob: -13.01187515258789
    4. '=s' → logprob: -14.26187515258789
    5. ':' → logprob: -14.63687515258789
    6. 's' → logprob: -15.76187515258789
    7. ')' → logprob: -16.13687515258789
    8. ' =
' → logprob: -17.01187515258789
    9. ' =)' → logprob: -17.13687515258789
    10. '  ' → logprob: -17.38687515258789

Token 117: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.31326213479042053
    2. ' s' → logprob: -1.3132621049880981
    3. ' ' → logprob: -15.438261985778809
    4. '_s' → logprob: -16.438262939453125
    5. '	s' → logprob: -16.688262939453125
    6. '(s' → logprob: -17.188262939453125
    7. ' ' → logprob: -17.688262939453125
    8. '<s' → logprob: -17.938262939453125
    9. '`s' → logprob: -18.688262939453125
    10. '    ' → logprob: -18.813262939453125

Token 118: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 119: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.378318727016449
    2. '<|end|>' → logprob: -2.0033187866210938
    3. '   ' → logprob: -2.2533187866210938
    4. '    
' → logprob: -2.8783187866210938
    5. '<|end|>' → logprob: -5.128318786621094
    6. 'def' → logprob: -5.253318786621094
    7. '  
' → logprob: -5.628318786621094
    8. '```' → logprob: -7.003318786621094
    9. '

' → logprob: -7.128318786621094
    10. ' 
' → logprob: -7.378318786621094

Token 120: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009219986386597157
    2. ' def' → logprob: -5.634220123291016
    3. '   ' → logprob: -5.759220123291016
    4. '
' → logprob: -6.634220123291016
    5. '<|end|>' → logprob: -7.009220123291016
    6. '

' → logprob: -9.259220123291016
    7. '    
' → logprob: -10.384220123291016
    8. 'self' (adapté à ' self') → logprob: -10.634220123291016
    9. '<|end|>' → logprob: -11.009220123291016
    10. ' ' → logprob: -11.384220123291016

Token 121: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.07470039278268814
    2. '.length' → logprob: -3.574700355529785
    3. ' .' → logprob: -3.699700355529785
    4. ' ' → logprob: -4.824700355529785
    5. '._' → logprob: -5.324700355529785
    6. '_length' → logprob: -6.074700355529785
    7. '_len' → logprob: -7.074700355529785
    8. '_' → logprob: -7.699700355529785
    9. 'length' → logprob: -7.949700355529785
    10. ' =' → logprob: -7.949700355529785

Token 122: 'prefix' (ID: 26155)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.8815825581550598
    2. 'counter' → logprob: -1.506582498550415
    3. 'cache' → logprob: -2.006582498550415
    4. 'freq' → logprob: -2.256582498550415
    5. 'char' → logprob: -2.631582498550415
    6. 'len' → logprob: -4.381582736968994
    7. 'count' → logprob: -4.506582736968994
    8. 'c' → logprob: -4.506582736968994
    9. 'counts' → logprob: -5.256582736968994
    10. 'frequency' → logprob: -5.381582736968994

Token 123: '_freq' (ID: 51889)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.058666620403528214
    2. '_counter' → logprob: -3.558666706085205
    3. '_freq' → logprob: -4.058666706085205
    4. '_c' → logprob: -4.808666706085205
    5. '_char' → logprob: -5.933666706085205
    6. '_' → logprob: -8.933666229248047
    7. '_count' → logprob: -9.183666229248047
    8. '_sum' → logprob: -9.683666229248047
    9. '_lengths' → logprob: -10.058666229248047
    10. '_chars' → logprob: -10.683666229248047

Token 124: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2772464156150818
    2. ' =' → logprob: -1.7772464752197266
    3. '=' → logprob: -3.6522464752197266
    4. ':' → logprob: -4.277246475219727
    5. '_counts' → logprob: -4.652246475219727
    6. '_' → logprob: -5.027246475219727
    7. '_counter' → logprob: -5.152246475219727
    8. '_vectors' → logprob: -5.152246475219727
    9. '_c' → logprob: -6.027246475219727
    10. '_s' → logprob: -6.402246475219727

Token 125: ' self' (ID: 1051)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06261621415615082
    2. ' [' → logprob: -3.0626161098480225
    3. '[]' → logprob: -4.437616348266602
    4. ' []' → logprob: -6.312616348266602
    5. 'None' → logprob: -9.562616348266602
    6. '[counter' → logprob: -9.937616348266602
    7. ' None' → logprob: -10.187616348266602
    8. ' Counter' → logprob: -10.437616348266602
    9. 'Counter' → logprob: -10.562616348266602
    10. '[self' → logprob: -10.937616348266602

Token 126: '._' (ID: 2697)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02423395961523056
    2. '[' → logprob: -4.774233818054199
    3. '_counter' → logprob: -5.149233818054199
    4. '_char' → logprob: -5.399233818054199
    5. '[]' → logprob: -7.274233818054199
    6. 's' → logprob: -7.399233818054199
    7. ' _' → logprob: -7.524233818054199
    8. '._' → logprob: -7.774233818054199
    9. '_chars' → logprob: -7.774233818054199
    10. 'Counter' → logprob: -7.899233818054199

Token 127: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.3228292167186737
    2. 'build' → logprob: -1.447829246520996
    3. 'calculate' → logprob: -3.572829246520996
    4. 'pre' → logprob: -5.197829246520996
    5. 'init' → logprob: -6.322829246520996
    6. 'calc' → logprob: -6.447829246520996
    7. 'prefix' → logprob: -6.572829246520996
    8. 's' → logprob: -6.947829246520996
    9. 'initialize' → logprob: -7.697829246520996
    10. 'get' → logprob: -8.072829246520996

Token 128: '_prefix' (ID: 33197)
  Prédit: '_prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prefix' → logprob: -0.49868395924568176
    2. '_' → logprob: -1.1236839294433594
    3. '_char' → logprob: -3.6236839294433594
    4. '_frequency' → logprob: -4.123683929443359
    5. '<|end|>' → logprob: -4.373683929443359
    6. '_freq' → logprob: -5.123683929443359
    7. '_counter' → logprob: -5.623683929443359
    8. '_counts' → logprob: -6.998683929443359
    9. '_f' → logprob: -7.498683929443359
    10. '_vector' → logprob: -8.24868392944336

Token 129: '_frequency' (ID: 98311)
  Prédit: '_freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_freq' → logprob: -0.2431030571460724
    2. '_counts' → logprob: -1.86810302734375
    3. '_vectors' → logprob: -3.86810302734375
    4. '_counter' → logprob: -4.24310302734375
    5. '_frequency' → logprob: -4.24310302734375
    6. '_f' → logprob: -4.99310302734375
    7. '_' → logprob: -6.24310302734375
    8. '_c' → logprob: -6.36810302734375
    9. '_vector' → logprob: -7.86810302734375
    10. '_char' → logprob: -8.11810302734375

Token 130: '(s' (ID: 1858)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7138347625732422
    2. '()' → logprob: -0.7138347625732422
    3. '_vectors' → logprob: -4.338834762573242
    4. '(s' → logprob: -5.463834762573242
    5. '(' → logprob: -7.338834762573242
    6. 'es' → logprob: -7.838834762573242
    7. ' ()' → logprob: -7.838834762573242
    8. '_' → logprob: -7.838834762573242
    9. '_vector' → logprob: -8.088834762573242
    10. '_arrays' → logprob: -8.463834762573242

Token 131: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00021069261129014194
    2. ' )' → logprob: -9.375210762023926
    3. '<|end|>' → logprob: -9.375210762023926
    4. ')
' → logprob: -11.000210762023926
    5. '   ' → logprob: -11.750210762023926
    6. ' ' → logprob: -12.000210762023926
    7. ')

' → logprob: -12.500210762023926
    8. '<|end|>' → logprob: -12.750210762023926
    9. '
' → logprob: -14.750210762023926
    10. '),' → logprob: -14.875210762023926

Token 132: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.910893976688385
    2. '<|end|>' → logprob: -1.2858939170837402
    3. 'def' → logprob: -1.7858939170837402
    4. '   ' → logprob: -2.7858939170837402
    5. ')' → logprob: -3.2858939170837402
    6. '    
' → logprob: -3.4108939170837402
    7. ' def' → logprob: -5.03589391708374
    8. '  
' → logprob: -5.28589391708374
    9. '<|end|>' → logprob: -6.16089391708374
    10. '

' → logprob: -6.41089391708374

Token 133: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.368149071931839
    2. ' def' → logprob: -1.8681490421295166
    3. '
' → logprob: -2.1181490421295166
    4. '   ' → logprob: -3.8681490421295166
    5. '    
' → logprob: -4.743149280548096
    6. ' ' → logprob: -5.993149280548096
    7. '  
' → logprob: -7.618149280548096
    8. ' 
' → logprob: -8.368148803710938
    9. '

' → logprob: -8.368148803710938
    10. '	def' → logprob: -9.618148803710938

Token 134: ' _' (ID: 1175)
  Prédit: '_compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_compute' → logprob: -0.5958282947540283
    2. ' _' → logprob: -0.8458282947540283
    3. '_' → logprob: -4.095828056335449
    4. '_length' → logprob: -5.970828056335449
    5. '_char' → logprob: -8.84582805633545
    6. '_define' → logprob: -9.34582805633545
    7. '_s' → logprob: -9.72082805633545
    8. '_def' → logprob: -10.84582805633545
    9. ' def' → logprob: -10.84582805633545
    10. '_prefix' → logprob: -10.97082805633545

Token 135: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -1.1472419600977446e-06
    2. 'prefix' → logprob: -14.750000953674316
    3. ' compute' → logprob: -14.875000953674316
    4. '_compute' → logprob: -16.125001907348633
    5. '.compute' → logprob: -16.375001907348633
    6. 'com' → logprob: -16.625001907348633
    7. 'def' → logprob: -17.125001907348633
    8. 'calculate' → logprob: -18.500001907348633
    9. 'comput' → logprob: -18.750001907348633
    10. 'comp' → logprob: -18.875001907348633

Token 136: '_prefix' (ID: 33197)
  Prédit: '_prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prefix' → logprob: -1.259079363080673e-05
    2. '_' → logprob: -11.625012397766113
    3. '_frequency' → logprob: -13.375012397766113
    4. ' _' → logprob: -13.875012397766113
    5. '_p' → logprob: -15.000012397766113
    6. 'prefix' → logprob: -15.250012397766113
    7. '_freq' → logprob: -15.625012397766113
    8. '_pref' → logprob: -15.750012397766113
    9. '_suffix' → logprob: -16.25001335144043
    10. '_pres' → logprob: -17.37501335144043

Token 137: '_frequency' (ID: 98311)
  Prédit: '_frequency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_frequency' → logprob: -0.001958251930773258
    2. '_freq' → logprob: -6.25195837020874
    3. '_f' → logprob: -10.876957893371582
    4. '_' → logprob: -11.626957893371582
    5. ' _' → logprob: -13.626957893371582
    6. '_counter' → logprob: -15.251957893371582
    7. '_prefix' → logprob: -16.1269588470459
    8. '_counts' → logprob: -16.3769588470459
    9. ' frequency' → logprob: -17.1269588470459
    10. '_length' → logprob: -17.2519588470459

Token 138: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002516839886084199
    2. '(s' → logprob: -8.875251770019531
    3. '(' → logprob: -9.125251770019531
    4. ' (' → logprob: -13.500251770019531
    5. 'self' → logprob: -14.125251770019531
    6. '(
' → logprob: -14.625251770019531
    7. 's' → logprob: -15.500251770019531
    8. '   ' → logprob: -16.75025177001953
    9. '(Self' → logprob: -17.87525177001953
    10. '<|end|>' → logprob: -17.87525177001953

Token 139: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005651841638609767
    2. '(' → logprob: -8.375565528869629
    3. '(s' → logprob: -8.625565528869629
    4. ')(' → logprob: -9.750565528869629
    5. ')' → logprob: -10.000565528869629
    6. ',' → logprob: -11.000565528869629
    7. 'self' → logprob: -11.250565528869629
    8. 's' → logprob: -11.500565528869629
    9. ' (' → logprob: -12.875565528869629
    10. '(
' → logprob: -13.125565528869629

Token 140: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2078292816877365
    2. 'self' → logprob: -1.957829236984253
    3. ' s' → logprob: -3.332829236984253
    4. ' self' → logprob: -4.582829475402832
    5. '<|end|>' → logprob: -7.832829475402832
    6. ')' → logprob: -9.332829475402832
    7. 'text' → logprob: -10.207829475402832
    8. ' ' → logprob: -10.832829475402832
    9. 'string' → logprob: -11.332829475402832
    10. ')s' → logprob: -12.957829475402832

Token 141: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0034439763985574245
    2. '):' → logprob: -5.753444194793701
    3. ')' → logprob: -9.003443717956543
    4. ':str' → logprob: -9.628443717956543
    5. ' :' → logprob: -9.753443717956543
    6. ' ):' → logprob: -11.128443717956543
    7. '):
' → logprob: -13.378443717956543
    8. 's' → logprob: -14.003443717956543
    9. '   ' → logprob: -14.128443717956543
    10. ' ' → logprob: -14.378443717956543

Token 142: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.5968477725982666
    2. 'str' → logprob: -0.8468477725982666
    3. ')' → logprob: -3.9718477725982666
    4. '[str' → logprob: -7.4718475341796875
    5. 's' → logprob: -7.8468475341796875
    6. 'self' → logprob: -8.471847534179688
    7. '):
' → logprob: -8.721847534179688
    8. ' ' → logprob: -8.846847534179688
    9. ':str' → logprob: -9.721847534179688
    10. ' s' → logprob: -10.221847534179688

Token 143: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012118533049942926
    2. '):' → logprob: -9.375121116638184
    3. ' )' → logprob: -10.250121116638184
    4. ':' → logprob: -14.250121116638184
    5. '   ' → logprob: -16.6251220703125
    6. ')->' → logprob: -16.6251220703125
    7. ' ):' → logprob: -16.6251220703125
    8. '):
' → logprob: -16.8751220703125
    9. ' ' → logprob: -17.1251220703125
    10. '`)' → logprob: -18.3751220703125

Token 144: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01264137588441372
    2. ':' → logprob: -4.512641429901123
    3. '):' → logprob: -6.637641429901123
    4. ')->' → logprob: -9.137640953063965
    5. ' ->' → logprob: -9.137640953063965
    6. ' )' → logprob: -10.262640953063965
    7. '->' → logprob: -10.637640953063965
    8. '   ' → logprob: -12.512640953063965
    9. ' ' → logprob: -14.137640953063965
    10. ' :' → logprob: -14.137640953063965

Token 145: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.000156577822053805
    2. '[List' → logprob: -9.50015640258789
    3. ' List' → logprob: -10.00015640258789
    4. 'Dict' → logprob: -10.25015640258789
    5. '	List' → logprob: -14.75015640258789
    6. 'Counter' → logprob: -14.75015640258789
    7. 'list' → logprob: -17.25015640258789
    8. '[' → logprob: -17.50015640258789
    9. '<List' → logprob: -17.87515640258789
    10. '(List' → logprob: -18.37515640258789

Token 146: '[List' (ID: 113982)
  Prédit: '[List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[List' → logprob: -0.4163673222064972
    2. '[' → logprob: -1.1663672924041748
    3. '[int' → logprob: -3.541367292404175
    4. ':' → logprob: -9.916367530822754
    5. '[Int' → logprob: -11.041367530822754
    6. '[
' → logprob: -11.541367530822754
    7. '<|end|>' → logprob: -12.541367530822754
    8. '[[' → logprob: -13.041367530822754
    9. '[np' → logprob: -13.166367530822754
    10. ' [' → logprob: -13.541367530822754

Token 147: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -4.36574100604048e-06
    2. ']int' → logprob: -13.000004768371582
    3. '<int' → logprob: -13.875004768371582
    4. 'int' → logprob: -14.000004768371582
    5. '[' → logprob: -15.875004768371582
    6. ']:' → logprob: -17.125003814697266
    7. '(int' → logprob: -17.500003814697266
    8. '[Int' → logprob: -18.125003814697266
    9. '	int' → logprob: -18.375003814697266
    10. '[str' → logprob: -18.500003814697266

Token 148: ']]:
' (ID: 183340)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.004983032122254372
    2. ']' → logprob: -5.379982948303223
    3. ']:
' → logprob: -8.254982948303223
    4. ' ]' → logprob: -10.129982948303223
    5. '):' → logprob: -11.254982948303223
    6. ']:
' → logprob: -11.254982948303223
    7. ']):' → logprob: -11.629982948303223
    8. ':' → logprob: -12.004982948303223
    9. ']]' → logprob: -12.254982948303223
    10. ']:

' → logprob: -12.254982948303223

Token 149: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009066991042345762
    2. '<|end|>' → logprob: -8.250906944274902
    3. ':' → logprob: -8.375906944274902
    4. '   ' → logprob: -8.625906944274902
    5. '        
' → logprob: -9.750906944274902
    6. ' ' → logprob: -9.875906944274902
    7. '      ' → logprob: -10.875906944274902
    8. '[' → logprob: -11.000906944274902
    9. '    ' → logprob: -11.250906944274902
    10. ',' → logprob: -11.375906944274902

Token 150: ' freq' (ID: 42078)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2341684103012085
    2. 'prefix' → logprob: -2.234168529510498
    3. ' freq' → logprob: -3.109168529510498
    4. 'freq' (adapté à ' freq') → logprob: -3.109168529510498
    5. ' prefix' → logprob: -5.609168529510498
    6. ' frequency' → logprob: -5.859168529510498
    7. 'frequency' → logprob: -6.234168529510498
    8. 'counter' → logprob: -6.484168529510498
    9. 'counts' → logprob: -7.609168529510498
    10. 'count' → logprob: -7.859168529510498

Token 151: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.015343745239078999
    2. '=' → logprob: -4.64034366607666
    3. ':' → logprob: -5.51534366607666
    4. 's' → logprob: -7.51534366607666
    5. '_counts' → logprob: -7.64034366607666
    6. '_list' → logprob: -8.76534366607666
    7. ']' → logprob: -9.76534366607666
    8. ' ' → logprob: -10.01534366607666
    9. '_vectors' → logprob: -10.01534366607666
    10. '_' → logprob: -10.14034366607666

Token 152: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.6585185527801514
    2. '[' → logprob: -1.4085185527801514
    3. '[]' → logprob: -2.4085185527801514
    4. ' [' → logprob: -2.6585185527801514
    5. ' [[' → logprob: -2.6585185527801514
    6. ' []' → logprob: -4.9085187911987305
    7. '[]
' → logprob: -8.15851879119873
    8. '[array' → logprob: -10.15851879119873
    9. '[List' → logprob: -10.28351879119873
    10. ' []
' → logprob: -11.65851879119873

Token 153: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -12.250004768371582
    3. ']' → logprob: -15.625004768371582
    4. '   ' → logprob: -18.3750057220459
    5. '26' → logprob: -18.6250057220459
    6. '
' → logprob: -18.8750057220459
    7. ')' → logprob: -19.0000057220459
    8. '۰' → logprob: -19.2500057220459
    9. ' ]' → logprob: -19.5000057220459
    10. '[' → logprob: -19.6250057220459

Token 154: ']' (ID: 60)
  Prédit: ']*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.6093659996986389
    2. ']' → logprob: -0.8593659996986389
    3. ' for' → logprob: -3.484365940093994
    4. 'for' → logprob: -7.109365940093994
    5. ']*(' → logprob: -7.234365940093994
    6. ']]' → logprob: -7.984365940093994
    7. ' ]' → logprob: -8.984366416931152
    8. ']+' → logprob: -9.609366416931152
    9. '])' → logprob: -10.984366416931152
    10. ' *' → logprob: -10.984366416931152

Token 155: ' *' (ID: 425)
  Prédit: ']*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.6717092990875244
    2. ']' → logprob: -0.7967092990875244
    3. ' for' → logprob: -3.2967092990875244
    4. 'for' → logprob: -7.171709060668945
    5. ']*(' → logprob: -8.046709060668945
    6. ' ]' → logprob: -8.921709060668945
    7. ' *' → logprob: -9.921709060668945
    8. ']+' → logprob: -10.421709060668945
    9. '
' → logprob: -11.671709060668945
    10. '   ' → logprob: -11.921709060668945

Token 156: ' ' (ID: 220)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.009253998287022114
    2. ' ' → logprob: -4.759253978729248
    3. '256' → logprob: -7.384253978729248
    4. '   ' → logprob: -12.259254455566406
    5. '
' → logprob: -12.384254455566406
    6. '128' → logprob: -12.759254455566406
    7. '52' → logprob: -12.884254455566406
    8. '(' → logprob: -13.134254455566406
    9. '```' → logprob: -15.384254455566406
    10. '  ' → logprob: -15.509254455566406

Token 157: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.0022581410594284534
    2. '256' → logprob: -6.12725830078125
    3. ' ' → logprob: -9.75225830078125
    4. '128' → logprob: -11.50225830078125
    5. '   ' → logprob: -13.37725830078125
    6. '(' → logprob: -13.75225830078125
    7. '
' → logprob: -13.75225830078125
    8. '52' → logprob: -14.62725830078125
    9. '255' → logprob: -16.00225830078125
    10. '27' → logprob: -16.00225830078125

Token 158: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.020307235419750214
    2. ' for' → logprob: -4.7703070640563965
    3. ' ]' → logprob: -4.8953070640563965
    4. ']
' → logprob: -5.8953070640563965
    5. 'for' → logprob: -7.0203070640563965
    6. '
' → logprob: -8.020307540893555
    7. ',' → logprob: -10.020307540893555
    8. '   ' → logprob: -10.520307540893555
    9. ']

' → logprob: -10.770307540893555
    10. ' ]
' → logprob: -11.020307540893555

Token 159: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3711608052253723
    2. '   ' → logprob: -1.9961607456207275
    3. ' for' → logprob: -2.3711607456207275
    4. '
' → logprob: -3.7461607456207275
    5. ' ' → logprob: -4.121160984039307
    6. '<|end|>' → logprob: -4.121160984039307
    7. ' 
' → logprob: -5.496160984039307
    8. 'for' → logprob: -5.746160984039307
    9. '  
' → logprob: -5.871160984039307
    10. '[' → logprob: -5.871160984039307

Token 160: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.26498183608055115
    2. 'for' (adapté à ' for') → logprob: -2.139981746673584
    3. '       ' → logprob: -2.264981746673584
    4. '   ' → logprob: -4.514981746673584
    5. '    ' → logprob: -9.139982223510742
    6. '  ' → logprob: -9.264982223510742
    7. ' ' → logprob: -9.639982223510742
    8. '	for' → logprob: -10.139982223510742
    9. '    
' → logprob: -11.889982223510742
    10. '     ' → logprob: -12.139982223510742

Token 161: ' ch' (ID: 549)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2181612253189087
    2. 'ch' → logprob: -1.9681612253189087
    3. 'char' → logprob: -3.718161106109619
    4. ' c' → logprob: -4.218161106109619
    5. ' ch' → logprob: -4.218161106109619
    6. ' char' → logprob: -5.968161106109619
    7. '   ' → logprob: -14.093161582946777
    8. ' ' → logprob: -14.593161582946777
    9. '_char' → logprob: -15.968161582946777
    10. '  ' → logprob: -16.09316062927246

Token 162: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004004792310297489
    2. ' ' → logprob: -5.629004955291748
    3. 'in' → logprob: -8.25400447845459
    4. '_' → logprob: -10.50400447845459
    5. '    ' → logprob: -10.87900447845459
    6. 's' → logprob: -11.00400447845459
    7. '  ' → logprob: -11.25400447845459
    8. '   ' → logprob: -11.37900447845459
    9. ' i' → logprob: -11.50400447845459
    10. '        ' → logprob: -11.75400447845459

Token 163: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5759422183036804
    2. ' s' → logprob: -0.8259422183036804
    3. ' ' → logprob: -13.700942039489746
    4. '   ' → logprob: -14.700942039489746
    5. '_s' → logprob: -14.700942039489746
    6. '(s' → logprob: -15.200942039489746
    7. '	s' → logprob: -15.450942039489746
    8. '    ' → logprob: -16.388442993164062
    9. '`s' → logprob: -16.513442993164062
    10. 'self' → logprob: -17.013442993164062

Token 164: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012283473275601864
    2. ':
' → logprob: -4.5122833251953125
    3. ' :' → logprob: -6.7622833251953125
    4. ' :
' → logprob: -9.637283325195312
    5. '):' → logprob: -12.637283325195312
    6. '[' → logprob: -12.762283325195312
    7. ',' → logprob: -13.262283325195312
    8. ':
' → logprob: -13.887283325195312
    9. '):
' → logprob: -14.012283325195312
    10. '       ' → logprob: -14.137283325195312

Token 165: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03460458666086197
    2. ' ' → logprob: -4.284604549407959
    3. '            ' → logprob: -5.284604549407959
    4. '        ' → logprob: -5.284604549407959
    5. '[' → logprob: -5.784604549407959
    6. ' freq' → logprob: -6.659604549407959
    7. '       ' → logprob: -6.659604549407959
    8. '            
' → logprob: -6.784604549407959
    9. '
' → logprob: -7.284604549407959
    10. '    ' → logprob: -8.034605026245117

Token 166: ' curr' (ID: 10495)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5038058161735535
    2. ' freq' → logprob: -1.3788058757781982
    3. ' new' → logprob: -2.6288058757781982
    4. ' count' → logprob: -4.253805637359619
    5. ' current' → logprob: -4.628805637359619
    6. '       ' → logprob: -4.753805637359619
    7. ' counts' → logprob: -4.753805637359619
    8. 'count' → logprob: -5.253805637359619
    9. 'freq' → logprob: -5.253805637359619
    10. '        ' → logprob: -6.003805637359619

Token 167: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4350420832633972
    2. '_freq' → logprob: -1.185042142868042
    3. '=' → logprob: -3.685042142868042
    4. '_count' → logprob: -4.060041904449463
    5. '_counts' → logprob: -5.560041904449463
    6. '_cnt' → logprob: -8.310042381286621
    7. '_' → logprob: -8.935042381286621
    8. '   ' → logprob: -9.310042381286621
    9. ' ' → logprob: -9.685042381286621
    10. '_counter' → logprob: -9.935042381286621

Token 168: ' freq' (ID: 42078)
  Prédit: ' freq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' freq' → logprob: -0.11285680532455444
    2. 'freq' → logprob: -2.237856864929199
    3. ' [' → logprob: -10.9878568649292
    4. '[' → logprob: -11.9878568649292
    5. ' frequency' → logprob: -12.4878568649292
    6. '   ' → logprob: -12.8628568649292
    7. '(freq' → logprob: -12.8628568649292
    8. ' list' → logprob: -14.6128568649292
    9. ' ' → logprob: -14.8628568649292
    10. 'frequency' → logprob: -14.8628568649292

Token 169: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -15.375000953674316
    3. ' [-' → logprob: -15.375000953674316
    4. '
' → logprob: -16.0
    5. '][-' → logprob: -16.375
    6. '[
' → logprob: -16.5
    7. '-' → logprob: -17.75
    8. '[len' → logprob: -18.0
    9. '.append' → logprob: -18.75
    10. '[:-' → logprob: -19.25

Token 170: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.46743637323379517
    2. '()]' → logprob: -1.5924363136291504
    3. '()' → logprob: -2.7174363136291504
    4. ']' → logprob: -2.9674363136291504
    5. 'copy' → logprob: -4.46743631362915
    6. '()][' → logprob: -5.34243631362915
    7. '().' → logprob: -5.71743631362915
    8. '()]
' → logprob: -5.71743631362915
    9. 'ch' → logprob: -5.96743631362915
    10. '
' → logprob: -5.96743631362915

Token 171: '].' (ID: 1651)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.05258055031299591
    2. '[:' → logprob: -3.3025805950164795
    3. '.copy' → logprob: -4.3025803565979
    4. '[' → logprob: -7.0525803565979
    5. '][:' → logprob: -11.052580833435059
    6. '.' → logprob: -11.802580833435059
    7. '[
' → logprob: -11.802580833435059
    8. ']' → logprob: -13.427580833435059
    9. '][' → logprob: -14.302580833435059
    10. '[(' → logprob: -15.052580833435059

Token 172: 'copy' (ID: 14730)
  Prédit: 'copy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'copy' → logprob: -2.5107177862082608e-05
    2. '[:]' → logprob: -11.375024795532227
    3. ' copy' → logprob: -11.500024795532227
    4. '.copy' → logprob: -13.250024795532227
    5. '[:' → logprob: -13.375024795532227
    6. '	copy' → logprob: -17.250024795532227
    7. ' ' → logprob: -17.500024795532227
    8. 'cop' → logprob: -17.625024795532227
    9. '_copy' → logprob: -17.750024795532227
    10. '(copy' → logprob: -18.500024795532227

Token 173: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005241937469691038
    2. '()
' → logprob: -5.255241870880127
    3. '()
' → logprob: -12.755242347717285
    4. '(' → logprob: -12.880242347717285
    5. '()

' → logprob: -13.380242347717285
    6. ' ()' → logprob: -14.505242347717285
    7. '();' → logprob: -15.880242347717285
    8. '())' → logprob: -16.00524139404297
    9. '()]' → logprob: -16.13024139404297
    10. '()\' → logprob: -16.50524139404297

Token 174: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010098149999976158
    2. '            
' → logprob: -6.135097980499268
    3. ' curr' → logprob: -6.260097980499268
    4. '   ' → logprob: -6.260097980499268
    5. '[curr' → logprob: -7.135097980499268
    6. '    
' → logprob: -7.510097980499268
    7. '       ' → logprob: -7.635097980499268
    8. ' 
' → logprob: -8.010098457336426
    9. ' ch' → logprob: -8.260098457336426
    10. '
' → logprob: -8.635098457336426

Token 175: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' (adapté à ' curr') → logprob: -0.029112599790096283
    2. ' curr' → logprob: -3.6541125774383545
    3. '           ' → logprob: -6.154112815856934
    4. '[curr' → logprob: -7.529112815856934
    5. 'ch' → logprob: -10.029112815856934
    6. '   ' → logprob: -10.154112815856934
    7. 'ord' → logprob: -10.404112815856934
    8. '	curr' → logprob: -11.654112815856934
    9. '(curr' → logprob: -12.279112815856934
    10. '               ' → logprob: -12.279112815856934

Token 176: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5690089639974758e-05
    2. ' [' → logprob: -11.625015258789062
    3. '[ch' → logprob: -12.375015258789062
    4. '[
' → logprob: -13.500015258789062
    5. '][' → logprob: -15.250015258789062
    6. 'ord' → logprob: -15.750015258789062
    7. '   ' → logprob: -15.750015258789062
    8. '
' → logprob: -16.375015258789062
    9. '```' → logprob: -16.625015258789062
    10. '(ord' → logprob: -16.625015258789062

Token 177: 'ord' (ID: 604)
  Prédit: 'ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.0004319804720580578
    2. ' ord' → logprob: -7.875432014465332
    3. '(ord' → logprob: -10.000432014465332
    4. '   ' → logprob: -12.625432014465332
    5. '
' → logprob: -12.875432014465332
    6. 'ords' → logprob: -15.000432014465332
    7. 'ordi' → logprob: -15.750432014465332
    8. 'or' → logprob: -17.125431060791016
    9. '_ord' → logprob: -17.125431060791016
    10. ' ' → logprob: -17.375431060791016

Token 178: '(ch' (ID: 15574)
  Prédit: '(ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ch' → logprob: -0.023271802812814713
    2. '(' → logprob: -3.7732717990875244
    3. '('' → logprob: -11.523271560668945
    4. ' (' → logprob: -11.773271560668945
    5. '(
' → logprob: -11.898271560668945
    6. 'ch' → logprob: -14.773271560668945
    7. '(chr' → logprob: -15.148271560668945
    8. '[ch' → logprob: -15.398271560668945
    9. '("("' → logprob: -15.648271560668945
    10. '(

' → logprob: -15.773271560668945

Token 179: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002101606223732233
    2. ' )' → logprob: -6.377101421356201
    3. ')-' → logprob: -8.75210189819336
    4. ' -' → logprob: -9.12710189819336
    5. '-' → logprob: -9.37710189819336
    6. ' ' → logprob: -11.00210189819336
    7. ']' → logprob: -11.12710189819336
    8. ')]' → logprob: -12.00210189819336
    9. '-)' → logprob: -12.00210189819336
    10. '   ' → logprob: -14.00210189819336

Token 180: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.23710286617279053
    2. '-' → logprob: -1.6121028661727905
    3. ')' → logprob: -4.48710298538208
    4. ' ' → logprob: -8.362102508544922
    5. ']' → logprob: -9.737102508544922
    6. ' )' → logprob: -10.737102508544922
    7. ')]' → logprob: -10.862102508544922
    8. '   ' → logprob: -11.612102508544922
    9. ')-' → logprob: -11.987102508544922
    10. '[' → logprob: -12.112102508544922

Token 181: ' ord' (ID: 6608)
  Prédit: '97'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '97' → logprob: -0.16081024706363678
    2. ' ord' → logprob: -2.0358102321624756
    3. ' ' → logprob: -4.660810470581055
    4. 'ord' → logprob: -4.785810470581055
    5. 'a' → logprob: -9.285810470581055
    6. '(ord' → logprob: -9.910810470581055
    7. '96' → logprob: -11.535810470581055
    8. ' a' → logprob: -12.285810470581055
    9. '65' → logprob: -13.035810470581055
    10. '   ' → logprob: -13.160810470581055

Token 182: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00020687808864749968
    2. '(' → logprob: -8.50020694732666
    3. 'a' → logprob: -13.50020694732666
    4. '("' → logprob: -13.75020694732666
    5. ' ('' → logprob: -14.37520694732666
    6. '(a' → logprob: -15.62520694732666
    7. '(
' → logprob: -16.375205993652344
    8. ''a' → logprob: -17.000205993652344
    9. '(('' → logprob: -17.500205993652344
    10. '>('' → logprob: -17.875205993652344

Token 183: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -9.088346359931165e-07
    2. ''a' → logprob: -14.000000953674316
    3. ' a' → logprob: -17.5
    4. 'а' → logprob: -17.875
    5. ''' → logprob: -19.625
    6. 'abcdefghijklmnopqrstuvwxyz' → logprob: -20.5
    7. '```' → logprob: -20.75
    8. '	a' → logprob: -20.75
    9. '`' → logprob: -21.75
    10. '   ' → logprob: -21.75

Token 184: '')]' (ID: 94377)
  Prédit: '')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')]' → logprob: -0.09277666360139847
    2. ')]' → logprob: -2.4677767753601074
    3. ']' → logprob: -5.967776775360107
    4. ')' → logprob: -6.842776775360107
    5. '")]' → logprob: -9.09277629852295
    6. '')' → logprob: -9.71777629852295
    7. ''' → logprob: -11.84277629852295
    8. '']' → logprob: -11.96777629852295
    9. '')]
' → logprob: -11.96777629852295
    10. '']]' → logprob: -12.59277629852295

Token 185: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.705547571182251
    2. '+=' → logprob: -0.955547571182251
    3. ']' → logprob: -2.830547571182251
    4. ']+=' → logprob: -2.830547571182251
    5. '+' → logprob: -5.705547332763672
    6. ' ]' → logprob: -9.080547332763672
    7. '+]' → logprob: -9.205547332763672
    8. ' +' → logprob: -10.330547332763672
    9. ']+' → logprob: -12.080547332763672
    10. ')' → logprob: -12.330547332763672

Token 186: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038014890742488205
    2. ' ' → logprob: -7.875380039215088
    3. '   ' → logprob: -17.87537956237793
    4. '
' → logprob: -19.75037956237793
    5. '```' → logprob: -20.06287956237793
    6. '  ' → logprob: -20.68787956237793
    7. '0' → logprob: -20.87537956237793
    8. '۱' → logprob: -21.18787956237793
    9. '１' → logprob: -21.62537956237793
    10. '`' → logprob: -21.68787956237793

Token 187: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -20.875001907348633
    4. '
' → logprob: -21.000001907348633
    5. '```' → logprob: -21.125001907348633
    6. '۱' → logprob: -22.875001907348633
    7. '  ' → logprob: -23.062501907348633
    8. '0' → logprob: -23.187501907348633
    9. '１' → logprob: -23.250001907348633
    10. '`' → logprob: -23.312501907348633

Token 188: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0024305977858603
    2. '       ' → logprob: -6.752430438995361
    3. '
' → logprob: -7.002430438995361
    4. 'freq' → logprob: -8.75243091583252
    5. ' freq' → logprob: -9.62743091583252
    6. '   ' → logprob: -9.87743091583252
    7. ',' → logprob: -10.00243091583252
    8. '               ' → logprob: -11.37743091583252
    9. '```' → logprob: -12.62743091583252
    10. '		' → logprob: -12.62743091583252

Token 189: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004299084190279245
    2. '       ' → logprob: -6.004299163818359
    3. ' freq' → logprob: -7.129299163818359
    4. 'freq' → logprob: -7.129299163818359
    5. '   ' → logprob: -9.12929916381836
    6. '
' → logprob: -9.62929916381836
    7. '               ' → logprob: -11.62929916381836
    8. ',' → logprob: -11.75429916381836
    9. '(freq' → logprob: -11.87929916381836
    10. '```' → logprob: -12.37929916381836

Token 190: ' freq' (ID: 42078)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'freq' (adapté à ' freq') → logprob: -0.3868728280067444
    2. ' freq' → logprob: -1.1368727684020996
    3. 'frequency' → logprob: -14.511873245239258
    4. ' frequency' → logprob: -15.136873245239258
    5. '(freq' → logprob: -15.261873245239258
    6. '.freq' → logprob: -15.511873245239258
    7. '
' → logprob: -15.761873245239258
    8. '       ' → logprob: -15.761873245239258
    9. '_freq' → logprob: -15.886873245239258
    10. 'fre' → logprob: -16.011873245239258

Token 191: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.0802738870552275e-05
    2. '.' → logprob: -11.50001049041748
    3. '.app' → logprob: -14.87501049041748
    4. ' .' → logprob: -16.000011444091797
    5. 'append' → logprob: -16.000011444091797
    6. '.ap' → logprob: -17.250011444091797
    7. ').' → logprob: -19.000011444091797
    8. ' append' → logprob: -19.625011444091797
    9. '.Append' → logprob: -19.875011444091797
    10. '_append' → logprob: -20.125011444091797

Token 192: '(curr' (ID: 49739)
  Prédit: '(curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(curr' → logprob: -2.176947600673884e-05
    2. '(' → logprob: -10.750021934509277
    3. '(cur' → logprob: -15.500021934509277
    4. '(
' → logprob: -17.50002098083496
    5. '(current' → logprob: -17.50002098083496
    6. 'curr' → logprob: -18.50002098083496
    7. '[curr' → logprob: -18.50002098083496
    8. ' (' → logprob: -20.00002098083496
    9. '(c' → logprob: -20.12502098083496
    10. ' curr' → logprob: -20.75002098083496

Token 193: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3507719039916992
    2. ')' → logprob: -1.2257719039916992
    3. '       ' → logprob: -6.350771903991699
    4. ')return' → logprob: -7.850771903991699
    5. '
' → logprob: -9.2257719039917
    6. ')
' → logprob: -9.9757719039917
    7. 'return' → logprob: -10.3507719039917
    8. ')

' → logprob: -12.7257719039917
    9. ' return' → logprob: -12.9757719039917
    10. ']
' → logprob: -13.4757719039917

Token 194: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05282290279865265
    2. 'return' → logprob: -3.0528228282928467
    3. ' return' → logprob: -5.677823066711426
    4. '   ' → logprob: -7.302823066711426
    5. '	return' → logprob: -9.552823066711426
    6. '	' → logprob: -10.427823066711426
    7. '
' → logprob: -12.052823066711426
    8. '           ' → logprob: -12.177823066711426
    9. '<|end|>' → logprob: -12.177823066711426
    10. '```' → logprob: -12.927823066711426

Token 195: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5517371296882629
    2. 'return' (adapté à ' return') → logprob: -0.9267371296882629
    3. ' return' → logprob: -4.176737308502197
    4. '   ' → logprob: -4.426737308502197
    5. '
' → logprob: -7.301737308502197
    6. '	return' → logprob: -8.676736831665039
    7. ':return' → logprob: -12.051736831665039
    8. '<|end|>' → logprob: -12.051736831665039
    9. '```' → logprob: -12.176736831665039
    10. '           ' → logprob: -12.301736831665039

Token 196: ' freq' (ID: 42078)
  Prédit: ' freq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' freq' → logprob: -0.47407761216163635
    2. 'freq' → logprob: -0.974077582359314
    3. '(freq' → logprob: -14.474077224731445
    4. 'fre' → logprob: -16.599077224731445
    5. '_freq' → logprob: -18.474077224731445
    6. '.freq' → logprob: -18.599077224731445
    7. 'frequency' → logprob: -18.849077224731445
    8. 'Freq' → logprob: -18.974077224731445
    9. ' frequency' → logprob: -19.224077224731445
    10. 'f' → logprob: -21.224077224731445

Token 197: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 198: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1197962760925293
    2. '
' → logprob: -2.4947962760925293
    3. '    
' → logprob: -4.119796276092529
    4. 'def' → logprob: -4.744796276092529
    5. ' def' → logprob: -5.994796276092529
    6. '  
' → logprob: -6.619796276092529
    7. ' ' → logprob: -8.119796752929688
    8. '        
' → logprob: -8.244796752929688
    9. '```' → logprob: -8.244796752929688
    10. '<|end|>' → logprob: -8.494796752929688

Token 199: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.000719222822226584
    2. ' def' → logprob: -7.25071907043457
    3. '   ' → logprob: -11.62571907043457
    4. '
' → logprob: -15.87571907043457
    5. '    
' → logprob: -16.37571907043457
    6. ' ' → logprob: -17.62571907043457
    7. '

' → logprob: -18.75071907043457
    8. '  
' → logprob: -19.12571907043457
    9. '@property' → logprob: -19.12571907043457
    10. '```' → logprob: -19.12571907043457

Token 200: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.31326642632484436
    2. 'length' → logprob: -1.313266396522522
    3. ' def' → logprob: -13.43826675415039
    4. 'def' → logprob: -13.93826675415039
    5. '_length' → logprob: -14.06326675415039
    6. ' ' → logprob: -15.06326675415039
    7. 'len' → logprob: -15.18826675415039
    8. 'leng' → logprob: -15.43826675415039
    9. ' len' → logprob: -15.68826675415039
    10. '	length' → logprob: -16.31326675415039

Token 201: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.013511242344975471
    2. '(' → logprob: -4.5135111808776855
    3. '()' → logprob: -6.0135111808776855
    4. ' (' → logprob: -12.263511657714844
    5. '(
' → logprob: -12.513511657714844
    6. 'self' → logprob: -13.513511657714844
    7. ')' → logprob: -13.638511657714844
    8. '()(' → logprob: -13.638511657714844
    9. '   ' → logprob: -13.763511657714844
    10. '(

' → logprob: -14.638511657714844

Token 202: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04100789129734039
    2. ' )' → logprob: -3.7910079956054688
    3. '()' → logprob: -4.791007995605469
    4. '())' → logprob: -5.041007995605469
    5. '(self' → logprob: -7.041007995605469
    6. ' ()' → logprob: -7.541007995605469
    7. '):' → logprob: -7.791007995605469
    8. ' ())' → logprob: -7.791007995605469
    9. ' ' → logprob: -8.541007995605469
    10. '():' → logprob: -8.916007995605469

Token 203: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.20928621292114258
    2. '->' → logprob: -2.9592862129211426
    3. ')' → logprob: -3.0842862129211426
    4. 'self' → logprob: -3.3342862129211426
    5. ':' → logprob: -3.7092862129211426
    6. '(' → logprob: -3.8342862129211426
    7. ' ->' → logprob: -5.084286212921143
    8. '   ' → logprob: -6.459286212921143
    9. '):' → logprob: -7.334286212921143
    10. ' self' → logprob: -8.709285736083984

Token 204: ' int' (ID: 677)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.5780413150787354
    2. ' ' → logprob: -0.8280413150787354
    3. 'len' → logprob: -7.078041076660156
    4. ' )' → logprob: -7.828041076660156
    5. ' self' → logprob: -8.328041076660156
    6. '(len' → logprob: -8.453041076660156
    7. ' return' → logprob: -8.828041076660156
    8. ' ' → logprob: -8.953041076660156
    9. ' ()' → logprob: -10.203041076660156
    10. ')' → logprob: -10.328041076660156

Token 205: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.021040676161646843
    2. ':' → logprob: -4.271040439605713
    3. '(' → logprob: -5.896040439605713
    4. 'self' → logprob: -6.271040439605713
    5. '       ' → logprob: -7.146040439605713
    6. '   ' → logprob: -7.771040439605713
    7. ')' → logprob: -8.271040916442871
    8. ' self' → logprob: -8.396040916442871
    9. '(
' → logprob: -8.396040916442871
    10. ':
' → logprob: -8.771040916442871

Token 206: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015522534027695656
    2. ' return' → logprob: -4.265522480010986
    3. 'return' → logprob: -6.640522480010986
    4. ' 
' → logprob: -10.640522956848145
    5. '
' → logprob: -11.015522956848145
    6. '   ' → logprob: -12.515522956848145
    7. '        
' → logprob: -12.765522956848145
    8. '```' → logprob: -13.515522956848145
    9. ' ' → logprob: -13.890522956848145
    10. '	return' → logprob: -14.515522956848145

Token 207: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.12713104486465454
    2. ' return' → logprob: -2.1271309852600098
    3. 'len' → logprob: -8.627131462097168
    4. '       ' → logprob: -11.127131462097168
    5. ' len' → logprob: -12.252131462097168
    6. '   ' → logprob: -12.377131462097168
    7. '```' → logprob: -17.75213050842285
    8. '	return' → logprob: -18.25213050842285
    9. ' ' → logprob: -18.50213050842285
    10. '
' → logprob: -19.50213050842285

Token 208: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.0007104054093360901
    2. 'len' → logprob: -7.250710487365723
    3. ' self' → logprob: -14.875710487365723
    4. '(len' → logprob: -16.500709533691406
    5. '	len' → logprob: -19.500709533691406
    6. '=len' → logprob: -19.750709533691406
    7. ' ' → logprob: -20.000709533691406
    8. '[len' → logprob: -20.375709533691406
    9. 'self' → logprob: -20.875709533691406
    10. ' ' → logprob: -21.125709533691406

Token 209: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004078758880496025
    2. '(' → logprob: -5.5040788650512695
    3. 'self' → logprob: -15.62907886505127
    4. '(
' → logprob: -16.004077911376953
    5. ' (' → logprob: -16.754077911376953
    6. '(this' → logprob: -17.754077911376953
    7. '(s' → logprob: -18.254077911376953
    8. '(

' → logprob: -18.629077911376953
    9. ' self' → logprob: -18.754077911376953
    10. '((' → logprob: -21.254077911376953

Token 210: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0003433296224102378
    2. '_s' → logprob: -8.000343322753906
    3. '.' → logprob: -12.750343322753906
    4. '_' → logprob: -13.500343322753906
    5. ' .' → logprob: -13.500343322753906
    6. ')._' → logprob: -14.000343322753906
    7. ']._' → logprob: -15.375343322753906
    8. ' _' → logprob: -15.625343322753906
    9. '_self' → logprob: -15.875343322753906
    10. '   ' → logprob: -15.875343322753906

Token 211: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.165027217415627e-05
    2. '_s' → logprob: -10.750021934509277
    3. ' s' → logprob: -15.875021934509277
    4. '_' → logprob: -19.00002098083496
    5. '.s' → logprob: -19.00002098083496
    6. '(s' → logprob: -19.12502098083496
    7. 'S' → logprob: -19.12502098083496
    8. '-s' → logprob: -19.25002098083496
    9. '	s' → logprob: -19.56252098083496
    10. ')' → logprob: -19.62502098083496

Token 212: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.5577775128767826e-06
    2. ')
' → logprob: -12.500005722045898
    3. ' )' → logprob: -13.750005722045898
    4. '   ' → logprob: -15.375005722045898
    5. '<|end|>' → logprob: -15.625005722045898
    6. ')

' → logprob: -16.3750057220459
    7. '}' → logprob: -16.8750057220459
    8. ' ' → logprob: -17.0000057220459
    9. ')return' → logprob: -17.6250057220459
    10. '
' → logprob: -17.8750057220459

Token 213: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6386677026748657
    2. '   ' → logprob: -1.5136677026748657
    3. '```' → logprob: -2.138667583465576
    4. '<|end|>' → logprob: -2.888667583465576
    5. '    
' → logprob: -3.013667583465576
    6. '

' → logprob: -4.888667583465576
    7. ' 
' → logprob: -5.138667583465576
    8. '  
' → logprob: -5.513667583465576
    9. 'def' → logprob: -5.513667583465576
    10. 'newline' → logprob: -6.013667583465576

Token 214: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0007566197891719639
    2. ' def' → logprob: -7.500756740570068
    3. '   ' → logprob: -8.50075626373291
    4. '    
' → logprob: -15.75075626373291
    5. ' ' → logprob: -16.375757217407227
    6. '	def' → logprob: -16.750757217407227
    7. '
' → logprob: -17.375757217407227
    8. '```' → logprob: -17.500757217407227
    9. '  ' → logprob: -18.125757217407227
    10. '   
' → logprob: -19.875757217407227

Token 215: ' substring' (ID: 89494)
  Prédit: ' substring'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' substring' → logprob: -0.0029629655182361603
    2. 'substring' → logprob: -5.877963066101074
    3. ' space' → logprob: -9.627963066101074
    4. '_' → logprob: -10.377963066101074
    5. ' ' → logprob: -10.502963066101074
    6. ' _' → logprob: -10.877963066101074
    7. 'space' → logprob: -12.502963066101074
    8. 'Substring' → logprob: -13.127963066101074
    9. '.substring' → logprob: -13.252963066101074
    10. ' ' → logprob: -13.377963066101074

Token 216: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.062008801847696304
    2. '(' → logprob: -2.812008857727051
    3. '(
' → logprob: -10.81200885772705
    4. ' (' → logprob: -10.93700885772705
    5. '(start' → logprob: -13.06200885772705
    6. '(s' → logprob: -14.56200885772705
    7. '(

' → logprob: -15.18700885772705
    8. 'self' → logprob: -15.56200885772705
    9. ' ' → logprob: -16.562007904052734
    10. '   ' → logprob: -17.312007904052734

Token 217: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008583135902881622
    2. '(self' → logprob: -5.133583068847656
    3. '(' → logprob: -6.758583068847656
    4. ' ,' → logprob: -6.883583068847656
    5. ' (' → logprob: -8.258583068847656
    6. 'self' → logprob: -9.133583068847656
    7. ')' → logprob: -10.508583068847656
    8. ',self' → logprob: -10.883583068847656
    9. '(
' → logprob: -11.133583068847656
    10. '   ' → logprob: -11.258583068847656

Token 218: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.11406929045915604
    2. 'start' → logprob: -2.2390692234039307
    3. ' ' → logprob: -6.86406946182251
    4. '0' → logprob: -8.614068984985352
    5. '(start' → logprob: -11.989068984985352
    6. ')' → logprob: -12.614068984985352
    7. '_start' → logprob: -12.989068984985352
    8. '    ' → logprob: -13.614068984985352
    9. ' )' → logprob: -13.739068984985352
    10. ' end' → logprob: -13.864068984985352

Token 219: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005650650127790868
    2. ' ,' → logprob: -7.500565052032471
    3. ':' → logprob: -11.625565528869629
    4. ',start' → logprob: -13.375565528869629
    5. ',
' → logprob: -14.500565528869629
    6. ',int' → logprob: -15.125565528869629
    7. ')' → logprob: -15.250565528869629
    8. '   ' → logprob: -15.500565528869629
    9. ',end' → logprob: -16.500564575195312
    10. ':int' → logprob: -16.750564575195312

Token 220: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4751206934452057
    2. ' int' → logprob: -0.9751206636428833
    3. 'start' → logprob: -7.600120544433594
    4. ',' → logprob: -7.975120544433594
    5. ' start' → logprob: -8.975120544433594
    6. ',int' → logprob: -10.225120544433594
    7. ':int' → logprob: -10.975120544433594
    8. '0' → logprob: -12.475120544433594
    9. ')' → logprob: -12.475120544433594
    10. ' ,' → logprob: -12.600120544433594

Token 221: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.054500666621607e-06
    2. ' ,' → logprob: -12.75000286102295
    3. ',
' → logprob: -17.000003814697266
    4. ',start' → logprob: -17.125003814697266
    5. ':' → logprob: -19.000003814697266
    6. ',int' → logprob: -19.375003814697266
    7. 'self' → logprob: -19.625003814697266
    8. '   ' → logprob: -19.875003814697266
    9. ',

' → logprob: -20.125003814697266
    10. ')' → logprob: -20.125003814697266

Token 222: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.236846461892128
    2. 'start' → logprob: -1.9868464469909668
    3. ' length' → logprob: -2.861846446990967
    4. ' start' → logprob: -4.111846446990967
    5. ' ' → logprob: -9.236846923828125
    6. ')' → logprob: -10.236846923828125
    7. '0' → logprob: -10.361846923828125
    8. '(length' → logprob: -11.111846923828125
    9. 'len' → logprob: -12.111846923828125
    10. 'end' → logprob: -12.111846923828125

Token 223: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00743494275957346
    2. '):' → logprob: -5.007434844970703
    3. '   ' → logprob: -7.882434844970703
    4. ':' → logprob: -8.382434844970703
    5. '):
' → logprob: -9.882434844970703
    6. 'self' → logprob: -10.007434844970703
    7. '(self' → logprob: -11.882434844970703
    8. '       ' → logprob: -12.507434844970703
    9. ' ' → logprob: -13.007434844970703
    10. ' )' → logprob: -13.132434844970703

Token 224: ' int' (ID: 677)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6405905485153198
    2. ' )' → logprob: -0.7655905485153198
    3. 'int' → logprob: -5.515590667724609
    4. ' ):' → logprob: -6.390590667724609
    5. ' int' → logprob: -6.515590667724609
    6. '):' → logprob: -8.01559066772461
    7. ' ):
' → logprob: -8.64059066772461
    8. ' ' → logprob: -9.26559066772461
    9. '1' → logprob: -9.51559066772461
    10. '):
' → logprob: -9.76559066772461

Token 225: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023619852436240762
    2. '):' → logprob: -8.375236511230469
    3. ' )' → logprob: -12.750236511230469
    4. '):
' → logprob: -13.000236511230469
    5. ')->' → logprob: -15.375236511230469
    6. ':' → logprob: -16.12523651123047
    7. '   ' → logprob: -16.37523651123047
    8. '`)' → logprob: -17.37523651123047
    9. ')
' → logprob: -17.62523651123047
    10. ' ' → logprob: -17.87523651123047

Token 226: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09700097143650055
    2. ')' → logprob: -2.722001075744629
    3. ' ->' → logprob: -3.847001075744629
    4. '->' → logprob: -5.597001075744629
    5. ')->' → logprob: -7.097001075744629
    6. '):' → logprob: -7.347001075744629
    7. ' :' → logprob: -9.222001075744629
    8. ':
' → logprob: -9.972001075744629
    9. '   ' → logprob: -11.472001075744629
    10. ':return' → logprob: -11.722001075744629

Token 227: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.10023763030767441
    2. 'str' → logprob: -2.3502376079559326
    3. ' ' → logprob: -10.600237846374512
    4. 'self' → logprob: -13.350237846374512
    5. ' self' → logprob: -13.350237846374512
    6. '   ' → logprob: -13.850237846374512
    7. 's' → logprob: -13.975237846374512
    8. '  ' → logprob: -15.225237846374512
    9. '_str' → logprob: -15.475237846374512
    10. '[str' → logprob: -16.100236892700195

Token 228: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0031455159187316895
    2. '):' → logprob: -6.128145694732666
    3. ':
' → logprob: -7.128145694732666
    4. '       ' → logprob: -9.628145217895508
    5. '):
' → logprob: -10.378145217895508
    6. '   ' → logprob: -10.503145217895508
    7. ')' → logprob: -11.378145217895508
    8. ':return' → logprob: -11.503145217895508
    9. '():' → logprob: -12.753145217895508
    10. ',' → logprob: -12.753145217895508

Token 229: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1114124208688736
    2. ' return' → logprob: -2.361412525177002
    3. 'return' → logprob: -5.111412525177002
    4. '   ' → logprob: -5.486412525177002
    5. ':' → logprob: -8.236412048339844
    6. ':
' → logprob: -8.611412048339844
    7. ':return' → logprob: -9.236412048339844
    8. ',' → logprob: -9.361412048339844
    9. '):
' → logprob: -9.611412048339844
    10. ')' → logprob: -9.611412048339844

Token 230: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.17230817675590515
    2. 'return' (adapté à ' return') → logprob: -1.9223082065582275
    3. '       ' → logprob: -4.422307968139648
    4. '   ' → logprob: -12.547307968139648
    5. '	return' → logprob: -14.547307968139648
    6. '```' → logprob: -15.672307968139648
    7. '
' → logprob: -15.797307968139648
    8. '        
' → logprob: -16.17230796813965
    9. '{return' → logprob: -16.17230796813965
    10. ' 
' → logprob: -16.29730796813965

Token 231: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.029750484973192215
    2. 'self' → logprob: -3.5297505855560303
    3. '(self' → logprob: -17.77975082397461
    4. '	self' → logprob: -17.90475082397461
    5. ' ' → logprob: -17.90475082397461
    6. ' ' → logprob: -19.27975082397461
    7. '=self' → logprob: -20.52975082397461
    8. '[self' → logprob: -20.52975082397461
    9. ':self' → logprob: -21.02975082397461
    10. 's' → logprob: -21.27975082397461

Token 232: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -9.088346359931165e-07
    2. '.' → logprob: -14.125000953674316
    3. ')._' → logprob: -17.125
    4. ' .' → logprob: -17.75
    5. '._
' → logprob: -17.875
    6. '.__' → logprob: -18.25
    7. '."_' → logprob: -18.875
    8. '_' → logprob: -18.875
    9. ']._' → logprob: -19.125
    10. 'self' → logprob: -19.625

Token 233: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -8.41866585687967e-06
    2. '_s' → logprob: -11.750008583068848
    3. ' s' → logprob: -15.125008583068848
    4. 'substring' → logprob: -16.25000762939453
    5. '-s' → logprob: -18.00000762939453
    6. '.s' → logprob: -18.12500762939453
    7. '(s' → logprob: -18.37500762939453
    8. 'sub' → logprob: -18.50000762939453
    9. '```' → logprob: -18.50000762939453
    10. 'str' → logprob: -18.87500762939453

Token 234: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -2.935296834039036e-06
    2. '[' → logprob: -13.00000286102295
    3. 'start' → logprob: -14.50000286102295
    4. ' [' → logprob: -16.625003814697266
    5. '[
' → logprob: -16.875003814697266
    6. '[s' → logprob: -20.125003814697266
    7. ' start' → logprob: -20.250003814697266
    8. ':start' → logprob: -20.250003814697266
    9. '[self' → logprob: -20.375003814697266
    10. '[int' → logprob: -21.750003814697266

Token 235: ':start' (ID: 198329)
  Prédit: ':start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':start' → logprob: -0.002797272289171815
    2. ' :' → logprob: -6.2527971267700195
    3. ':' → logprob: -7.1277971267700195
    4. 'start' → logprob: -9.75279712677002
    5. ' start' → logprob: -12.00279712677002
    6. ' ' → logprob: -13.75279712677002
    7. '[start' → logprob: -16.502798080444336
    8. '
' → logprob: -17.127798080444336
    9. ':end' → logprob: -17.252798080444336
    10. '(start' → logprob: -17.252798080444336

Token 236: '+' (ID: 10)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3868718445301056
    2. '+' → logprob: -1.1368718147277832
    3. 'start' → logprob: -14.136872291564941
    4. 'length' → logprob: -16.761871337890625
    5. ' start' → logprob: -17.636871337890625
    6. ' ' → logprob: -18.761871337890625
    7. ' ' → logprob: -19.386871337890625
    8. '   ' → logprob: -19.636871337890625
    9. ' +
' → logprob: -19.886871337890625
    10. '＋' → logprob: -19.886871337890625

Token 237: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -1.5048530030981055e-06
    2. ' length' → logprob: -13.500001907348633
    3. 'leng' → logprob: -22.625001907348633
    4. 'len' → logprob: -22.875001907348633
    5. '_length' → logprob: -24.250001907348633
    6. 'ength' → logprob: -25.125001907348633
    7. '(length' → logprob: -25.375001907348633
    8. '[length' → logprob: -26.250001907348633
    9. '	length' → logprob: -26.625001907348633
    10. 'Length' → logprob: -26.750001907348633

Token 238: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.016090326011180878
    2. ')' → logprob: -4.141090393066406
    3. '}' → logprob: -10.266090393066406
    4. '<|end|>' → logprob: -11.141090393066406
    5. '']' → logprob: -13.391090393066406
    6. ']
' → logprob: -13.391090393066406
    7. ' ]' → logprob: -13.391090393066406
    8. '"]' → logprob: -14.641090393066406
    9. '）' → logprob: -14.766090393066406
    10. ' ' → logprob: -14.891090393066406

Token 239: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.055107828229665756
    2. '   ' → logprob: -3.555107831954956
    3. '```' → logprob: -4.055107593536377
    4. 'def' → logprob: -5.680107593536377
    5. ' def' → logprob: -6.180107593536377
    6. '<|end|>' → logprob: -7.180107593536377
    7. ' ' → logprob: -8.055108070373535
    8. ' 
' → logprob: -8.305108070373535
    9. '

' → logprob: -8.555108070373535
    10. '    
' → logprob: -8.680108070373535

Token 240: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.02986607514321804
    2. ' def' → logprob: -3.5298659801483154
    3. '   ' → logprob: -9.154866218566895
    4. '
' → logprob: -12.404866218566895
    5. '	def' → logprob: -12.779866218566895
    6. ' ' → logprob: -12.904866218566895
    7. '  ' → logprob: -15.779866218566895
    8. '```' → logprob: -16.529865264892578
    9. ' 
' → logprob: -17.029865264892578
    10. '    
' → logprob: -17.154865264892578

Token 241: ' char' (ID: 1826)
  Prédit: ' char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' char' → logprob: -0.014511113055050373
    2. 'char' → logprob: -4.2645111083984375
    3. '_char' → logprob: -9.014511108398438
    4. ' ' → logprob: -9.639511108398438
    5. ' ' → logprob: -9.764511108398438
    6. ' def' → logprob: -10.514511108398438
    7. ' _' → logprob: -10.639511108398438
    8. '_' → logprob: -10.639511108398438
    9. ' space' → logprob: -11.389511108398438
    10. '.char' → logprob: -12.389511108398438

Token 242: '_frequency' (ID: 98311)
  Prédit: '_frequency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_frequency' → logprob: -7.862962229410186e-05
    2. '_' → logprob: -9.875078201293945
    3. '_f' → logprob: -11.000078201293945
    4. '_freq' → logprob: -11.625078201293945
    5. ' _' → logprob: -14.375078201293945
    6. '_probability' → logprob: -15.875078201293945
    7. '_vector' → logprob: -16.000078201293945
    8. '_factor' → logprob: -16.000078201293945
    9. '_character' → logprob: -16.875078201293945
    10. ')_' → logprob: -17.625078201293945

Token 243: '_vector' (ID: 29530)
  Prédit: '_vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vector' → logprob: -4.842555426876061e-06
    2. '_vectors' → logprob: -12.500004768371582
    3. '_vec' → logprob: -14.500004768371582
    4. '_vect' → logprob: -15.250004768371582
    5. '_Vector' → logprob: -16.0000057220459
    6. '_VECTOR' → logprob: -16.2500057220459
    7. '_' → logprob: -16.5000057220459
    8. 'vector' → logprob: -17.8750057220459
    9. ' vector' → logprob: -18.3750057220459
    10. ' _' → logprob: -19.5000057220459

Token 244: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.88418151892256e-05
    2. '(' → logprob: -9.750059127807617
    3. ' (' → logprob: -14.875059127807617
    4. '(
' → logprob: -16.250059127807617
    5. '(s' → logprob: -18.000059127807617
    6. 'self' → logprob: -20.375059127807617
    7. '(sel' → logprob: -20.375059127807617
    8. '   ' → logprob: -20.500059127807617
    9. '(Self' → logprob: -20.625059127807617
    10. ' ' → logprob: -21.625059127807617

Token 245: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0016802981263026595
    2. '(' → logprob: -7.001680374145508
    3. ' (' → logprob: -7.251680374145508
    4. ')' → logprob: -10.251680374145508
    5. '(
' → logprob: -11.876680374145508
    6. ',' → logprob: -12.376680374145508
    7. ')(' → logprob: -12.501680374145508
    8. 'self' → logprob: -12.626680374145508
    9. '   ' → logprob: -13.126680374145508
    10. '(start' → logprob: -13.376680374145508

Token 246: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.12693022191524506
    2. 'start' → logprob: -2.1269302368164062
    3. ' ' → logprob: -13.751930236816406
    4. '(start' → logprob: -14.751930236816406
    5. '_start' → logprob: -15.376930236816406
    6. 'Start' → logprob: -15.876930236816406
    7. 'end' → logprob: -16.501930236816406
    8. ')' → logprob: -16.501930236816406
    9. ' end' → logprob: -17.126930236816406
    10. '[start' → logprob: -17.251930236816406

Token 247: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010435284348204732
    2. ' ,' → logprob: -6.876043319702148
    3. ',start' → logprob: -12.126043319702148
    4. ',int' → logprob: -13.626043319702148
    5. '   ' → logprob: -13.751043319702148
    6. '+' → logprob: -14.126043319702148
    7. '=start' → logprob: -14.126043319702148
    8. ',
' → logprob: -14.251043319702148
    9. '=' → logprob: -15.126043319702148
    10. ':' → logprob: -15.376043319702148

Token 248: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5643121004104614
    2. ' ' → logprob: -1.1893121004104614
    3. 'int' → logprob: -2.189311981201172
    4. ' start' → logprob: -5.064311981201172
    5. ',' → logprob: -5.814311981201172
    6. '1' → logprob: -6.814311981201172
    7. ' length' → logprob: -6.939311981201172
    8. 'start' → logprob: -7.064311981201172
    9. ' end' → logprob: -7.689311981201172
    10. '<|end|>' → logprob: -7.939311981201172

Token 249: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.32392441527918e-05
    2. ' ,' → logprob: -9.875053405761719
    3. ',length' → logprob: -13.500053405761719
    4. ',
' → logprob: -16.00005340576172
    5. ',int' → logprob: -16.50005340576172
    6. ',start' → logprob: -16.75005340576172
    7. '   ' → logprob: -16.87505340576172
    8. '+' → logprob: -17.75005340576172
    9. '‌,' → logprob: -18.37505340576172
    10. '+,' → logprob: -18.62505340576172

Token 250: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.3868711292743683
    2. ' length' → logprob: -1.136871099472046
    3. ' ' → logprob: -16.886871337890625
    4. '(length' → logprob: -18.511871337890625
    5. 'Length' → logprob: -18.636871337890625
    6. '	length' → logprob: -19.511871337890625
    7. '_length' → logprob: -19.511871337890625
    8. ',length' → logprob: -19.636871337890625
    9. ' lenght' → logprob: -19.886871337890625
    10. 'ength' → logprob: -19.886871337890625

Token 251: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014252478256821632
    2. '):' → logprob: -4.389252662658691
    3. ':' → logprob: -6.639252662658691
    4. ' )' → logprob: -8.889252662658691
    5. '   ' → logprob: -9.014252662658691
    6. '=' → logprob: -9.514252662658691
    7. ' ):' → logprob: -10.264252662658691
    8. '):
' → logprob: -10.264252662658691
    9. ' ' → logprob: -11.014252662658691
    10. ']' → logprob: -12.514252662658691

Token 252: ' int' (ID: 677)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7718464136123657
    2. ' )' → logprob: -1.0218464136123657
    3. 'int' → logprob: -2.396846294403076
    4. ' int' → logprob: -2.521846294403076
    5. ' ' → logprob: -5.146846294403076
    6. ' ):' → logprob: -8.646846771240234
    7. ' ]' → logprob: -8.896846771240234
    8. '1' → logprob: -8.896846771240234
    9. '):' → logprob: -9.896846771240234
    10. ' ),' → logprob: -9.896846771240234

Token 253: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030251052230596542
    2. '):' → logprob: -3.5302510261535645
    3. '):
' → logprob: -7.6552510261535645
    4. ' )' → logprob: -11.280251502990723
    5. '   ' → logprob: -11.655251502990723
    6. ' ):' → logprob: -12.655251502990723
    7. ')
' → logprob: -15.030251502990723
    8. ':' → logprob: -15.030251502990723
    9. '):

' → logprob: -15.030251502990723
    10. '):
' → logprob: -15.030251502990723

Token 254: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.1268441081047058
    2. ':' → logprob: -2.3768441677093506
    3. ')' → logprob: -4.1268439292907715
    4. '->' → logprob: -4.6268439292907715
    5. ')->' → logprob: -8.87684440612793
    6. ' :' → logprob: -9.12684440612793
    7. '   ' → logprob: -10.25184440612793
    8. '):' → logprob: -10.50184440612793
    9. ' ' → logprob: -11.12684440612793
    10. ' )' → logprob: -11.62684440612793

Token 255: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.5792930722236633
    2. 'List' → logprob: -0.8292930722236633
    3. ' list' → logprob: -6.579293251037598
    4. 'list' → logprob: -7.704293251037598
    5. '[List' → logprob: -7.829293251037598
    6. '[' → logprob: -8.079293251037598
    7. ' [' → logprob: -8.204293251037598
    8. ' self' → logprob: -8.454293251037598
    9. 'self' → logprob: -8.454293251037598
    10. ' ' → logprob: -10.079293251037598

Token 256: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.00019185843120794743
    2. '[' → logprob: -8.750191688537598
    3. '<int' → logprob: -11.125191688537598
    4. 'int' → logprob: -12.000191688537598
    5. '[Int' → logprob: -12.375191688537598
    6. '[
' → logprob: -12.500191688537598
    7. '(int' → logprob: -13.250191688537598
    8. ']int' → logprob: -14.125191688537598
    9. '[str' → logprob: -14.500191688537598
    10. '   ' → logprob: -14.875191688537598

Token 257: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.2833798825740814
    2. '):' → logprob: -1.5333799123764038
    3. ']' → logprob: -3.7833797931671143
    4. '):
' → logprob: -5.283380031585693
    5. ']:
' → logprob: -6.033380031585693
    6. '   ' → logprob: -8.533379554748535
    7. ')' → logprob: -8.658379554748535
    8. ']):' → logprob: -8.658379554748535
    9. '):
' → logprob: -9.783379554748535
    10. ':' → logprob: -9.908379554748535

Token 258: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006557040847837925
    2. '   ' → logprob: -5.506556987762451
    3. ' ' → logprob: -7.256556987762451
    4. '[' → logprob: -7.881556987762451
    5. ')' → logprob: -8.25655746459961
    6. ' return' → logprob: -8.50655746459961
    7. ' 
' → logprob: -8.63155746459961
    8. '    ' → logprob: -9.13155746459961
    9. '  
' → logprob: -9.38155746459961
    10. ':' → logprob: -9.50655746459961

Token 259: ' end' (ID: 1268)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3781852722167969
    2. '       ' → logprob: -1.7531852722167969
    3. 'result' → logprob: -2.878185272216797
    4. '[' → logprob: -2.878185272216797
    5. ' return' → logprob: -4.628185272216797
    6. 'res' → logprob: -5.753185272216797
    7. '[start' → logprob: -5.753185272216797
    8. ' [' → logprob: -6.128185272216797
    9. 'freq' → logprob: -6.128185272216797
    10. 'curr' → logprob: -6.378185272216797

Token 260: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759658813476562
    2. '=' → logprob: -0.8259658813476562
    3. ']' → logprob: -11.700965881347656
    4. ')' → logprob: -12.200965881347656
    5. '_' → logprob: -12.325965881347656
    6. ' ' → logprob: -13.075965881347656
    7. '=end' → logprob: -13.450965881347656
    8. 's' → logprob: -13.950965881347656
    9. ']=' → logprob: -14.325965881347656
    10. '>' → logprob: -14.950965881347656

Token 261: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.07889000326395035
    2. 'start' → logprob: -2.578890085220337
    3. '       ' → logprob: -16.203889846801758
    4. '	start' → logprob: -16.953889846801758
    5. ' ' → logprob: -17.703889846801758
    6. '=start' → logprob: -17.828889846801758
    7. 'Start' → logprob: -17.953889846801758
    8. '(start' → logprob: -18.078889846801758
    9. '   ' → logprob: -18.328889846801758
    10. '[start' → logprob: -18.453889846801758

Token 262: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1602243334054947
    2. '+' → logprob: -1.9102243185043335
    3. ' +
' → logprob: -17.16022491455078
    4. ' ' → logprob: -17.91022491455078
    5. '+
' → logprob: -18.41022491455078
    6. ' plus' → logprob: -18.53522491455078
    7. '＋' → logprob: -19.28522491455078
    8. '[' → logprob: -19.41022491455078
    9. ' ' → logprob: -19.53522491455078
    10. ' +
' → logprob: -20.66022491455078

Token 263: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -9.615255839889869e-05
    2. ' length' → logprob: -9.250096321105957
    3. '(length' → logprob: -22.12509536743164
    4. 'len' → logprob: -22.12509536743164
    5. 'leng' → logprob: -23.25009536743164
    6. '[length' → logprob: -23.37509536743164
    7. '	length' → logprob: -23.50009536743164
    8. '_length' → logprob: -23.50009536743164
    9. 'Length' → logprob: -23.62509536743164
    10. 'ength' → logprob: -24.12509536743164

Token 264: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0703071877360344
    2. '
' → logprob: -2.6953072547912598
    3. '   ' → logprob: -9.570306777954102
    4. '        
' → logprob: -9.570306777954102
    5. ']' → logprob: -9.695306777954102
    6. '[' → logprob: -10.445306777954102
    7. '
' → logprob: -10.945306777954102
    8. ']
' → logprob: -10.945306777954102
    9. ',' → logprob: -11.195306777954102
    10. '           ' → logprob: -11.820306777954102

Token 265: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0049047390930354595
    2. '
' → logprob: -5.879904747009277
    3. ' return' → logprob: -6.629904747009277
    4. ' freq' → logprob: -7.879904747009277
    5. '   ' → logprob: -8.504904747009277
    6. 'return' → logprob: -9.379904747009277
    7. 'freq' → logprob: -10.504904747009277
    8. '        
' → logprob: -10.879904747009277
    9. ' curr' → logprob: -11.629904747009277
    10. 'curr' → logprob: -11.754904747009277

Token 266: ' freq' (ID: 42078)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.13666661083698273
    2. '       ' → logprob: -2.8866665363311768
    3. ' return' → logprob: -3.3866665363311768
    4. 'result' → logprob: -3.7616665363311768
    5. 'freq' (adapté à ' freq') → logprob: -4.636666774749756
    6. 'res' → logprob: -5.636666774749756
    7. ' freq' → logprob: -7.761666774749756
    8. 'curr' → logprob: -7.761666774749756
    9. ' res' → logprob: -7.886666774749756
    10. ' result' → logprob: -8.886666297912598

Token 267: '_start' (ID: 10949)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6114960312843323
    2. '_start' → logprob: -1.3614959716796875
    3. '=' → logprob: -1.6114959716796875
    4. '_' → logprob: -7.3614959716796875
    5. 's' → logprob: -7.8614959716796875
    6. '_vector' → logprob: -8.361495971679688
    7. 'start' → logprob: -9.361495971679688
    8. '_diff' → logprob: -9.736495971679688
    9. '=start' → logprob: -10.111495971679688
    10. '_end' → logprob: -10.361495971679688

Token 268: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858918860554695
    2. ' =' → logprob: -3.0485892295837402
    3. 's' → logprob: -14.048588752746582
    4. '_vec' → logprob: -15.298588752746582
    5. ']=' → logprob: -15.673588752746582
    6. ',' → logprob: -16.0485897064209
    7. ' ' → logprob: -16.0485897064209
    8. ']' → logprob: -16.4235897064209
    9. '[' → logprob: -16.6735897064209
    10. '_vector' → logprob: -16.7985897064209

Token 269: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07889232039451599
    2. ' self' → logprob: -2.578892230987549
    3. '(self' → logprob: -14.078892707824707
    4. '   ' → logprob: -14.453892707824707
    5. '[self' → logprob: -14.578892707824707
    6. '       ' → logprob: -14.828892707824707
    7. '	self' → logprob: -15.328892707824707
    8. '=self' → logprob: -16.07889175415039
    9. ':self' → logprob: -17.82889175415039
    10. '           ' → logprob: -18.07889175415039

Token 270: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -4.127333340875339e-06
    2. ' .' → logprob: -13.625003814697266
    3. '.' → logprob: -13.875003814697266
    4. '   ' → logprob: -14.000003814697266
    5. ']._' → logprob: -15.250003814697266
    6. 'self' → logprob: -15.750003814697266
    7. '_' → logprob: -15.875003814697266
    8. ')._' → logprob: -16.000003814697266
    9. ' ' → logprob: -16.375003814697266
    10. '_prefix' → logprob: -16.875003814697266

Token 271: 'prefix' (ID: 26155)
  Prédit: 'prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -1.981667537620524e-06
    2. '_prefix' → logprob: -13.500001907348633
    3. ' prefix' → logprob: -14.625001907348633
    4. 'freq' → logprob: -17.000001907348633
    5. 'pref' → logprob: -17.750001907348633
    6. 'refix' → logprob: -18.625001907348633
    7. '(prefix' → logprob: -19.000001907348633
    8. '.prefix' → logprob: -20.000001907348633
    9. 'suffix' → logprob: -20.625001907348633
    10. 'p' → logprob: -20.750001907348633

Token 272: '_freq' (ID: 51889)
  Prédit: '_freq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_freq' → logprob: -2.339278580620885e-06
    2. 'freq' → logprob: -13.000001907348633
    3. '_frequency' → logprob: -17.000001907348633
    4. '_FREQ' → logprob: -18.375001907348633
    5. '[_' → logprob: -18.500001907348633
    6. '[' → logprob: -18.500001907348633
    7. '```' → logprob: -19.625001907348633
    8. '_f' → logprob: -19.625001907348633
    9. 'Freq' → logprob: -20.000001907348633
    10. 'frequency' → logprob: -20.250001907348633

Token 273: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -7.941850526549388e-06
    2. '[' → logprob: -12.000007629394531
    3. '[end' → logprob: -14.000007629394531
    4. 'start' → logprob: -14.000007629394531
    5. ' [' → logprob: -18.75000762939453
    6. '[s' → logprob: -18.75000762939453
    7. '[
' → logprob: -19.00000762939453
    8. '[state' → logprob: -20.00000762939453
    9. ')[' → logprob: -20.37500762939453
    10. '[left' → logprob: -20.75000762939453

Token 274: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011793731711804867
    2. ']
' → logprob: -4.636793613433838
    3. ' ]' → logprob: -6.261793613433838
    4. '<|end|>' → logprob: -9.386794090270996
    5. ']

' → logprob: -10.636794090270996
    6. ' ]
' → logprob: -11.136794090270996
    7. '][' → logprob: -13.261794090270996
    8. '<|end|>' → logprob: -14.011794090270996
    9. '
' → logprob: -14.136794090270996
    10. '],' → logprob: -14.886794090270996

Token 275: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10226548463106155
    2. ' freq' → logprob: -2.7272655963897705
    3. 'freq' → logprob: -3.4772655963897705
    4. '
' → logprob: -7.602265357971191
    5. '_freq' → logprob: -8.852265357971191
    6. '[' → logprob: -9.727265357971191
    7. '(freq' → logprob: -9.852265357971191
    8. '	' → logprob: -10.227265357971191
    9. '   ' → logprob: -10.977265357971191
    10. '.freq' → logprob: -11.227265357971191

Token 276: ' freq' (ID: 42078)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'freq' (adapté à ' freq') → logprob: -0.06309019774198532
    2. ' freq' → logprob: -2.9380900859832764
    3. '       ' → logprob: -4.8130903244018555
    4. '   ' → logprob: -11.063090324401855
    5. '_freq' → logprob: -11.563090324401855
    6. 'fre' → logprob: -12.063090324401855
    7. '(freq' → logprob: -12.063090324401855
    8. '
' → logprob: -12.188090324401855
    9. '.freq' → logprob: -12.938090324401855
    10. 'frequency' → logprob: -12.938090324401855

Token 277: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -1.2664456789934775e-06
    2. '_' → logprob: -14.250000953674316
    3. 'end' → logprob: -15.125000953674316
    4. '[end' → logprob: -15.750000953674316
    5. '_END' → logprob: -16.625001907348633
    6. '=end' → logprob: -17.375001907348633
    7. ' end' → logprob: -17.500001907348633
    8. '	end' → logprob: -17.750001907348633
    9. 'End' → logprob: -18.125001907348633
    10. '_diff' → logprob: -18.500001907348633

Token 278: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868730664253235
    2. '=' → logprob: -1.1368730068206787
    3. '[' → logprob: -13.886873245239258
    4. ' ' → logprob: -14.761873245239258
    5. ' =[' → logprob: -15.636873245239258
    6. '<|end|>' → logprob: -15.886873245239258
    7. ']' → logprob: -16.136873245239258
    8. '=[' → logprob: -16.886873245239258
    9. '   ' → logprob: -17.011873245239258
    10. ')' → logprob: -17.261873245239258

Token 279: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6931923627853394
    2. 'self' → logprob: -0.6931923627853394
    3. '[self' → logprob: -10.943192481994629
    4. '(self' → logprob: -11.693192481994629
    5. '       ' → logprob: -12.193192481994629
    6. '	self' → logprob: -12.443192481994629
    7. '=self' → logprob: -12.568192481994629
    8. '   ' → logprob: -13.443192481994629
    9. ' ' → logprob: -13.693192481994629
    10. 's' → logprob: -13.943192481994629

Token 280: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.009824086911976337
    2. '_prefix' → logprob: -4.634824275970459
    3. '   ' → logprob: -11.1348237991333
    4. ' _' → logprob: -11.3848237991333
    5. '.' → logprob: -11.5098237991333
    6. '.prefix' → logprob: -11.5098237991333
    7. '_' → logprob: -12.5098237991333
    8. 'prefix' → logprob: -12.8848237991333
    9. ' ' → logprob: -12.8848237991333
    10. 'self' → logprob: -13.0098237991333

Token 281: 'prefix' (ID: 26155)
  Prédit: 'prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -5.676981345459353e-06
    2. '_prefix' → logprob: -12.750005722045898
    3. ' prefix' → logprob: -13.125005722045898
    4. 'pref' → logprob: -14.375005722045898
    5. '(prefix' → logprob: -16.5000057220459
    6. 'refix' → logprob: -17.6250057220459
    7. 'suffix' → logprob: -17.7500057220459
    8. '
' → logprob: -18.3750057220459
    9. 'freq' → logprob: -18.7500057220459
    10. 'p' → logprob: -18.7500057220459

Token 282: '_freq' (ID: 51889)
  Prédit: '_freq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_freq' → logprob: -0.0005562512087635696
    2. 'freq' → logprob: -7.500556468963623
    3. 'Freq' → logprob: -13.125555992126465
    4. '_FREQ' → logprob: -14.750555992126465
    5. '_prob' → logprob: -15.625555992126465
    6. '[end' → logprob: -15.625555992126465
    7. '[start' → logprob: -15.750555992126465
    8. '.freq' → logprob: -16.12555694580078
    9. '[' → logprob: -16.37555694580078
    10. 's' → logprob: -17.00055694580078

Token 283: '[end' (ID: 125653)
  Prédit: '[end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[end' → logprob: -7.896309739408025e-07
    2. 'end' → logprob: -14.125000953674316
    3. '[' → logprob: -17.125
    4. '[
' → logprob: -17.75
    5. ' [' → logprob: -18.25
    6. '(end' → logprob: -20.25
    7. '```' → logprob: -20.25
    8. '   ' → logprob: -20.625
    9. '=end' → logprob: -20.625
    10. '@end' → logprob: -20.75

Token 284: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1801714152097702
    2. ']
' → logprob: -1.8051713705062866
    3. ' ]' → logprob: -8.180171012878418
    4. ' ]
' → logprob: -10.055171012878418
    5. '       ' → logprob: -10.305171012878418
    6. ')' → logprob: -10.430171012878418
    7. ']

' → logprob: -11.180171012878418
    8. ']
' → logprob: -11.180171012878418
    9. '
' → logprob: -12.555171012878418
    10. '<|end|>' → logprob: -12.930171012878418

Token 285: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09442045539617538
    2. 'return' → logprob: -2.8444204330444336
    3. ' return' → logprob: -3.8444204330444336
    4. 'result' → logprob: -5.344420433044434
    5. '
' → logprob: -5.469420433044434
    6. ' result' → logprob: -7.344420433044434
    7. '   ' → logprob: -8.219420433044434
    8. '[' → logprob: -8.219420433044434
    9. '        
' → logprob: -9.719420433044434
    10. '	' → logprob: -9.844420433044434

Token 286: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0161928478628397
    2. '       ' → logprob: -4.26619291305542
    3. ' return' → logprob: -6.26619291305542
    4. 'result' → logprob: -9.016192436218262
    5. '
' → logprob: -12.766192436218262
    6. '[' → logprob: -13.766192436218262
    7. 'freq' → logprob: -14.016192436218262
    8. '```' → logprob: -14.391192436218262
    9. '	return' → logprob: -15.016192436218262
    10. 'res' → logprob: -15.391192436218262

Token 287: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4872607886791229
    2. '[f' → logprob: -0.9872608184814453
    3. ' [' → logprob: -4.487260818481445
    4. '[count' → logprob: -7.612260818481445
    5. '[list' → logprob: -8.362260818481445
    6. '[counter' → logprob: -8.862260818481445
    7. '[p' → logprob: -9.237260818481445
    8. '[int' → logprob: -9.612260818481445
    9. '[class' → logprob: -9.737260818481445
    10. '[word' → logprob: -9.737260818481445

Token 288: 'freq' (ID: 71759)
  Prédit: 'freq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.00010700009443098679
    2. ' freq' → logprob: -9.625106811523438
    3. 'f' → logprob: -10.750106811523438
    4. '(freq' → logprob: -11.500106811523438
    5. 'fe' → logprob: -12.000106811523438
    6. 'e' → logprob: -13.250106811523438
    7. 'b' → logprob: -14.875106811523438
    8. 'fq' → logprob: -15.125106811523438
    9. 'a' → logprob: -15.875106811523438
    10. 'fre' → logprob: -16.000106811523438

Token 289: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -4.723352049040841e-06
    2. '_e' → logprob: -13.500004768371582
    3. '_en' → logprob: -13.875004768371582
    4. 'end' → logprob: -14.000004768371582
    5. 'End' → logprob: -14.125004768371582
    6. 'e' → logprob: -14.875004768371582
    7. '_' → logprob: -15.375004768371582
    8. '[end' → logprob: -16.250003814697266
    9. '
' → logprob: -16.750003814697266
    10. '-end' → logprob: -17.125003814697266

Token 290: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.200166469876422e-06
    2. 'i' → logprob: -12.500004768371582
    3. '[' → logprob: -13.625004768371582
    4. '[idx' → logprob: -15.375004768371582
    5. '_i' → logprob: -17.7500057220459
    6. '[index' → logprob: -18.6250057220459
    7. ' -' → logprob: -18.7500057220459
    8. '[j' → logprob: -19.1250057220459
    9. '[c' → logprob: -19.5000057220459
    10. '[ch' → logprob: -19.8750057220459

Token 291: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.01416350994259119
    2. '-' → logprob: -4.264163494110107
    3. ' -
' → logprob: -17.514163970947266
    4. ' ' → logprob: -17.889163970947266
    5. '-
' → logprob: -19.014163970947266
    6. ' ' → logprob: -19.139163970947266
    7. '-f' → logprob: -19.389163970947266
    8. ' –' → logprob: -20.889163970947266
    9. '
' → logprob: -21.014163970947266
    10. '−' → logprob: -21.639163970947266

Token 292: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.005234002135694027
    2. '-' → logprob: -5.2552337646484375
    3. ' -
' → logprob: -16.880233764648438
    4. '-f' → logprob: -17.380233764648438
    5. ' ' → logprob: -17.630233764648438
    6. ' ' → logprob: -17.630233764648438
    7. '-
' → logprob: -18.505233764648438
    8. ' –' → logprob: -21.005233764648438
    9. '
' → logprob: -21.005233764648438
    10. '-frequency' → logprob: -21.005233764648438

Token 293: ' freq' (ID: 42078)
  Prédit: ' freq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' freq' → logprob: -0.5759411454200745
    2. 'freq' → logprob: -0.8259411454200745
    3. '(freq' → logprob: -14.07594108581543
    4. 'fre' → logprob: -15.20094108581543
    5. ' frequency' → logprob: -15.32594108581543
    6. '_freq' → logprob: -15.70094108581543
    7. 'frequency' → logprob: -16.20094108581543
    8. ' ' → logprob: -16.82594108581543
    9. ' fre' → logprob: -17.32594108581543
    10. '.freq' → logprob: -17.45094108581543

Token 294: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -5.8961017202818766e-05
    2. 'start' → logprob: -9.875059127807617
    3. 'Start' → logprob: -11.875059127807617
    4. 'freq' → logprob: -15.250059127807617
    5. '_START' → logprob: -16.250059127807617
    6. 'for' → logprob: -17.000059127807617
    7. '[start' → logprob: -17.875059127807617
    8. '_freq' → logprob: -18.000059127807617
    9. '_Start' → logprob: -18.000059127807617
    10. '[i' → logprob: -19.250059127807617

Token 295: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.1405261605978012
    2. ' for' → logprob: -2.140526056289673
    3. 'for' → logprob: -4.390526294708252
    4. '<|end|>' → logprob: -7.890526294708252
    5. ']' → logprob: -8.140525817871094
    6. '[' → logprob: -8.140525817871094
    7. ' ' → logprob: -9.515525817871094
    8. '	for' → logprob: -10.640525817871094
    9. '   ' → logprob: -11.640525817871094
    10. '[]' → logprob: -11.765525817871094

Token 296: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.010864471085369587
    2. ']' → logprob: -4.8858642578125
    3. 'for' → logprob: -5.8858642578125
    4. ' ]' → logprob: -7.7608642578125
    5. ' ' → logprob: -10.2608642578125
    6. '	for' → logprob: -11.6358642578125
    7. '<|end|>' → logprob: -13.6358642578125
    8. '
' → logprob: -14.0108642578125
    9. ')' → logprob: -14.2608642578125
    10. ' 
' → logprob: -14.5108642578125

Token 297: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.002033084398135543
    2. 'for' → logprob: -6.502033233642578
    3. ' ' → logprob: -8.002033233642578
    4. '<|end|>' → logprob: -8.877033233642578
    5. ' ]' → logprob: -10.377033233642578
    6. ']' → logprob: -11.377033233642578
    7. '	for' → logprob: -11.627033233642578
    8. ')' → logprob: -14.002033233642578
    9. '    ' → logprob: -14.252033233642578
    10. '  ' → logprob: -14.377033233642578

Token 298: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.00476569589227438
    2. ' range' → logprob: -5.379765510559082
    3. 'i' → logprob: -9.004765510559082
    4. 'range' → logprob: -10.754765510559082
    5. ' ' → logprob: -14.129765510559082
    6. '	i' → logprob: -14.754765510559082
    7. ' ' → logprob: -17.2547664642334
    8. ' xrange' → logprob: -17.6297664642334
    9. 'Range' → logprob: -17.7547664642334
    10. '	range' → logprob: -17.8797664642334

Token 299: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0019408921943977475
    2. 'in' → logprob: -6.251940727233887
    3. '<|end|>' → logprob: -12.376940727233887
    4. 'range' → logprob: -12.626940727233887
    5. ' ' → logprob: -12.751940727233887
    6. ' range' → logprob: -13.626940727233887
    7. ',' → logprob: -15.251940727233887
    8. ' i' → logprob: -15.876940727233887
    9. '	in' → logprob: -16.501941680908203
    10. '```' → logprob: -17.251941680908203

Token 300: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3868710398674011
    2. ' range' → logprob: -1.136871099472046
    3. '(range' → logprob: -18.511871337890625
    4. '	range' → logprob: -19.261871337890625
    5. ' ' → logprob: -20.261871337890625
    6. '_range' → logprob: -22.261871337890625
    7. 'Range' → logprob: -22.261871337890625
    8. '26' → logprob: -23.011871337890625
    9. '   ' → logprob: -23.511871337890625
    10. ' xrange' → logprob: -23.636871337890625

Token 301: '(' (ID: 7)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.048589076846838
    2. '(' → logprob: -3.048588991165161
    3. ' ' → logprob: -13.548588752746582
    4. '(
' → logprob: -15.173588752746582
    5. '   ' → logprob: -15.923588752746582
    6. '[' → logprob: -16.9235897064209
    7. '(len' → logprob: -17.6735897064209
    8. ' (' → logprob: -17.9235897064209
    9. '
' → logprob: -18.0485897064209
    10. '25' → logprob: -18.7985897064209

Token 302: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -19.875
    4. 'len' → logprob: -22.5
    5. '  ' → logprob: -23.625
    6. '
' → logprob: -23.75
    7. '```' → logprob: -23.75
    8. '    ' → logprob: -24.25
    9. '25' → logprob: -24.625
    10. '2' → logprob: -24.625

Token 303: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.248469718324486e-05
    2. ' ]' → logprob: -10.875022888183594
    3. ')]' → logprob: -13.000022888183594
    4. ']
' → logprob: -14.000022888183594
    5. ')' → logprob: -15.250022888183594
    6. '])' → logprob: -16.250022888183594
    7. ']}' → logprob: -17.375022888183594
    8. '   ' → logprob: -17.750022888183594
    9. '       ' → logprob: -18.250022888183594
    10. '<|end|>' → logprob: -18.750022888183594

Token 304: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 305: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.016753805801272392
    2. '
' → logprob: -4.266753673553467
    3. '

' → logprob: -6.016753673553467
    4. ' class' → logprob: -9.516754150390625
    5. 'c' → logprob: -10.266754150390625
    6. '```' → logprob: -11.391754150390625
    7. '\n' → logprob: -11.891754150390625
    8. '<class' → logprob: -12.141754150390625
    9. '


' → logprob: -12.266754150390625
    10. '"class' → logprob: -13.391754150390625

Token 306: ' Sub' (ID: 5934)
  Prédit: ' An'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' An' → logprob: -0.9344285130500793
    2. ' String' → logprob: -1.4344284534454346
    3. 'String' → logprob: -2.8094284534454346
    4. ' Frequency' → logprob: -2.8094284534454346
    5. ' Sub' → logprob: -3.4344284534454346
    6. ' Sorted' → logprob: -3.5594284534454346
    7. 'An' → logprob: -3.8094284534454346
    8. ' Conc' → logprob: -4.184428691864014
    9. ' Concrete' → logprob: -4.309428691864014
    10. ' Re' → logprob: -4.559428691864014

Token 307: 'string' (ID: 1655)
  Prédit: 'string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'string' → logprob: -0.01645589992403984
    2. 'String' → logprob: -4.391456127166748
    3. 'sequence' → logprob: -5.766456127166748
    4. 'str' → logprob: -8.14145565032959
    5. 'Sequence' → logprob: -8.64145565032959
    6. 'tring' → logprob: -9.01645565032959
    7. 'word' → logprob: -10.26645565032959
    8. 'source' → logprob: -11.01645565032959
    9. 'range' → logprob: -11.39145565032959
    10. 'stitution' → logprob: -11.39145565032959

Token 308: 'Comparator' (ID: 45034)
  Prédit: '(String'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(String' → logprob: -0.7511837482452393
    2. 'String' → logprob: -1.7511837482452393
    3. 'Source' → logprob: -1.7511837482452393
    4. '(' → logprob: -2.8761837482452393
    5. 'Comparator' → logprob: -4.00118350982666
    6. 'Fingerprint' → logprob: -4.25118350982666
    7. 'Frequency' → logprob: -4.50118350982666
    8. '(S' → logprob: -4.50118350982666
    9. '(Source' → logprob: -4.50118350982666
    10. 'View' → logprob: -5.12618350982666

Token 309: '(' (ID: 7)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6027340888977051
    2. '(' → logprob: -0.8527340888977051
    3. '(String' → logprob: -3.852734088897705
    4. '(Abstract' → logprob: -5.477734088897705
    5. ':
' → logprob: -7.602734088897705
    6. ':String' → logprob: -7.977734088897705
    7. '(S' → logprob: -9.977733612060547
    8. '(Sub' → logprob: -10.102733612060547
    9. '():' → logprob: -10.227733612060547
    10. ' :' → logprob: -10.477733612060547

Token 310: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.1799587458372116
    2. 'String' → logprob: -1.929958701133728
    3. '):' → logprob: -4.429958820343018
    4. '):
' → logprob: -5.429958820343018
    5. ')' → logprob: -6.554958820343018
    6. 'string' → logprob: -7.179958820343018
    7. '(' → logprob: -7.929958820343018
    8. 'Abstract' → logprob: -8.42995834350586
    9. 'Concrete' → logprob: -9.17995834350586
    10. ' ABC' → logprob: -9.80495834350586

Token 311: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0178457610309124
    2. '):
' → logprob: -4.142845630645752
    3. ':' → logprob: -6.392845630645752
    4. ')' → logprob: -9.14284610748291
    5. '   ' → logprob: -11.51784610748291
    6. '):
' → logprob: -11.89284610748291
    7. ',' → logprob: -12.51784610748291
    8. ':
' → logprob: -12.89284610748291
    9. '):

' → logprob: -13.39284610748291
    10. '(' → logprob: -13.51784610748291

Token 312: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.327915221452713
    2. ':' → logprob: -1.3279151916503906
    3. ':
' → logprob: -4.327915191650391
    4. '):' → logprob: -7.452915191650391
    5. '):
' → logprob: -7.952915191650391
    6. ')' → logprob: -8.82791519165039
    7. '(Abstract' → logprob: -9.57791519165039
    8. ' :' → logprob: -9.95291519165039
    9. '(' → logprob: -10.07791519165039
    10. '  ' → logprob: -10.20291519165039

Token 313: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03251490369439125
    2. ' @' → logprob: -3.532514810562134
    3. '@' (adapté à ' @') → logprob: -5.907515048980713
    4. '    ' → logprob: -10.907514572143555
    5. ' def' → logprob: -11.782514572143555
    6. ' ' → logprob: -12.532514572143555
    7. '  ' → logprob: -12.907514572143555
    8. ' 
' → logprob: -13.532514572143555
    9. '
' → logprob: -13.782514572143555
    10. '   ' → logprob: -14.032514572143555

Token 314: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -5.080963092041202e-06
    2. 'abc' → logprob: -12.625004768371582
    3. 'staticmethod' → logprob: -13.875004768371582
    4. ' abstract' → logprob: -14.500004768371582
    5. 'abs' → logprob: -16.3750057220459
    6. 'property' → logprob: -16.5000057220459
    7. 'ab' → logprob: -16.6250057220459
    8. 'classmethod' → logprob: -17.2500057220459
    9. 'def' → logprob: -18.6250057220459
    10. 'class' → logprob: -18.6250057220459

Token 315: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.0007175540085881948
    2. '_method' → logprob: -7.250717639923096
    3. 'classmethod' → logprob: -12.125717163085938
    4. 'def' → logprob: -13.875717163085938
    5. 'meth' → logprob: -14.000717163085938
    6. 'staticmethod' → logprob: -15.625717163085938
    7. '__' → logprob: -16.875717163085938
    8. ' method' → logprob: -17.000717163085938
    9. 'ethod' → logprob: -17.375717163085938
    10. '.method' → logprob: -17.750717163085938

Token 316: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3092244565486908
    2. '
' → logprob: -2.0592243671417236
    3. ' def' → logprob: -2.5592243671417236
    4. '   ' → logprob: -2.9342243671417236
    5. '    
' → logprob: -5.059224605560303
    6. '  
' → logprob: -7.684224605560303
    7. 'method' → logprob: -8.934224128723145
    8. '  ' → logprob: -9.059224128723145
    9. ' ' → logprob: -9.059224128723145
    10. ' 
' → logprob: -9.184224128723145

Token 317: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.44250115752220154
    2. '   ' → logprob: -1.317501187324524
    3. ' def' → logprob: -2.5675010681152344
    4. '
' → logprob: -4.567501068115234
    5. '    
' → logprob: -6.567501068115234
    6. 'method' → logprob: -8.067501068115234
    7. '  ' → logprob: -8.067501068115234
    8. ' ' → logprob: -9.317501068115234
    9. '  
' → logprob: -9.317501068115234
    10. '	def' → logprob: -9.692501068115234

Token 318: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0014395194593816996
    2. ' def' → logprob: -6.626439571380615
    3. '
' → logprob: -9.376439094543457
    4. '   ' → logprob: -11.251439094543457
    5. 'staticmethod' → logprob: -12.376439094543457
    6. 'classmethod' → logprob: -12.376439094543457
    7. '  ' → logprob: -12.876439094543457
    8. 'class' → logprob: -13.876439094543457
    9. 'bool' → logprob: -14.001439094543457
    10. '    
' → logprob: -14.251439094543457

Token 319: ' are' (ID: 553)
  Prédit: ' compare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compare' → logprob: -0.05833404138684273
    2. 'compare' → logprob: -2.9333341121673584
    3. ' equal' → logprob: -6.433333873748779
    4. 'equal' → logprob: -7.808333873748779
    5. ' equals' → logprob: -7.808333873748779
    6. ' are' → logprob: -7.933333873748779
    7. 'are' → logprob: -8.683334350585938
    8. '   ' → logprob: -8.808334350585938
    9. 'equals' → logprob: -9.058334350585938
    10. ' is' → logprob: -9.058334350585938

Token 320: '_an' (ID: 47921)
  Prédit: '_equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equal' → logprob: -0.08089984953403473
    2. '_' → logprob: -2.955899953842163
    3. '_equ' → logprob: -3.705899953842163
    4. '_an' → logprob: -7.205899715423584
    5. 'equal' → logprob: -8.705900192260742
    6. '_equals' → logprob: -9.705900192260742
    7. '_sub' → logprob: -9.955900192260742
    8. '_ident' → logprob: -11.205900192260742
    9. 'Equal' → logprob: -11.205900192260742
    10. '_e' → logprob: -11.330900192260742

Token 321: 'agrams' (ID: 54218)
  Prédit: 'agrams'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agrams' → logprob: -0.00043591417488642037
    2. 'agram' → logprob: -7.750435829162598
    3. 'a' → logprob: -12.375435829162598
    4. 'agr' → logprob: -15.000435829162598
    5. 'grams' → logprob: -15.125435829162598
    6. 'ograms' → logprob: -15.625435829162598
    7. 'AGRAM' → logprob: -15.750435829162598
    8. '```' → logprob: -16.875436782836914
    9. 'e' → logprob: -17.750436782836914
    10. '	' → logprob: -17.875436782836914

Token 322: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.2520866096019745
    2. '(' → logprob: -1.5020866394042969
    3. ' (' → logprob: -9.127086639404297
    4. '(
' → logprob: -10.127086639404297
    5. '_of' → logprob: -12.627086639404297
    6. '(s' → logprob: -12.752086639404297
    7. '(

' → logprob: -13.752086639404297
    8. 'of' → logprob: -14.377086639404297
    9. ')' → logprob: -15.377086639404297
    10. '_between' → logprob: -15.752086639404297

Token 323: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.05594008415937424
    2. ',' → logprob: -3.3059401512145996
    3. ')' → logprob: -4.9309401512146
    4. '(' → logprob: -5.1809401512146
    5. 'self' → logprob: -5.9309401512146
    6. ' (' → logprob: -6.4309401512146
    7. ')(' → logprob: -8.430939674377441
    8. '(
' → logprob: -9.930939674377441
    9. ' ,' → logprob: -10.055939674377441
    10. '_sub' → logprob: -10.180939674377441

Token 324: ' v' (ID: 323)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.7057769298553467
    2. 's' → logprob: -2.0807769298553467
    3. ' start' → logprob: -2.2057769298553467
    4. 'substr' → logprob: -2.2057769298553467
    5. 'self' → logprob: -3.2057769298553467
    6. ' substr' → logprob: -3.3307769298553467
    7. ' s' → logprob: -3.5807769298553467
    8. 'substring' → logprob: -3.8307769298553467
    9. 'sub' → logprob: -4.330777168273926
    10. 'str' → logprob: -4.705777168273926

Token 325: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008552522398531437
    2. 'ector' → logprob: -5.758552551269531
    3. 'ec' → logprob: -6.008552551269531
    4. ')' → logprob: -7.008552551269531
    5. ',' → logprob: -7.258552551269531
    6. '[' → logprob: -8.008552551269531
    7. 'al' → logprob: -8.133552551269531
    8. '(' → logprob: -8.633552551269531
    9. '_' → logprob: -9.258552551269531
    10. ':' → logprob: -9.383552551269531

Token 326: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6949439644813538
    2. ':' → logprob: -0.6949439644813538
    3. ' ,' → logprob: -6.694943904876709
    4. ',v' → logprob: -7.694943904876709
    5. ' :' → logprob: -9.694944381713867
    6. ':v' → logprob: -10.944944381713867
    7. 'v' → logprob: -11.944944381713867
    8. ':int' → logprob: -12.319944381713867
    9. '   ' → logprob: -12.694944381713867
    10. '[v' → logprob: -13.069944381713867

Token 327: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.14299768209457397
    2. ' List' → logprob: -2.0179977416992188
    3. ')' → logprob: -9.017997741699219
    4. 'int' → logprob: -10.142997741699219
    5. '[List' → logprob: -10.392997741699219
    6. '   ' → logprob: -10.517997741699219
    7. ' ' → logprob: -10.767997741699219
    8. 'v' → logprob: -11.017997741699219
    9. ',List' → logprob: -11.267997741699219
    10. ' v' → logprob: -11.642997741699219

Token 328: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.0683535037969705e-05
    2. 'int' → logprob: -11.50001049041748
    3. '[in' → logprob: -15.25001049041748
    4. '<int' → logprob: -15.50001049041748
    5. ']int' → logprob: -17.750011444091797
    6. '[' → logprob: -17.750011444091797
    7. ',' → logprob: -18.125011444091797
    8. ',int' → logprob: -18.125011444091797
    9. '[i' → logprob: -18.250011444091797
    10. '   ' → logprob: -18.250011444091797

Token 329: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.2014811635017395
    2. ',' → logprob: -1.7014811038970947
    3. ' ,' → logprob: -10.701480865478516
    4. '>,' → logprob: -11.451480865478516
    5. ' ],' → logprob: -11.576480865478516
    6. ']' → logprob: -11.826480865478516
    7. 'v' → logprob: -12.201480865478516
    8. ',v' → logprob: -12.326480865478516
    9. '),' → logprob: -12.576480865478516
    10. '],
' → logprob: -13.076480865478516

Token 330: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.38689467310905457
    2. 'v' → logprob: -1.136894702911377
    3. '	v' → logprob: -10.761894226074219
    4. ' ' → logprob: -13.386894226074219
    5. ' ' → logprob: -15.011894226074219
    6. ' 
' → logprob: -15.136894226074219
    7. '    ' → logprob: -15.886894226074219
    8. ')v' → logprob: -16.88689422607422
    9. ')' → logprob: -17.38689422607422
    10. ',v' → logprob: -17.51189422607422

Token 331: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9981420336989686e-05
    2. '1' → logprob: -11.125020027160645
    3. ',' → logprob: -13.375020027160645
    4. '
' → logprob: -14.375020027160645
    5. '```' → logprob: -14.375020027160645
    6. ')' → logprob: -14.500020027160645
    7. ' ' → logprob: -14.750020027160645
    8. '   ' → logprob: -15.125020027160645
    9. 'alue' → logprob: -16.187519073486328
    10. 'ersion' → logprob: -16.250019073486328

Token 332: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012898785062134266
    2. ':' → logprob: -7.0012898445129395
    3. ' )' → logprob: -8.751290321350098
    4. '[int' → logprob: -9.001290321350098
    5. '`)' → logprob: -10.626290321350098
    6. '   ' → logprob: -10.626290321350098
    7. '])' → logprob: -11.126290321350098
    8. '):' → logprob: -11.126290321350098
    9. ']' → logprob: -12.751290321350098
    10. '[' → logprob: -12.751290321350098

Token 333: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.06387992203235626
    2. ' List' → logprob: -2.81387996673584
    3. '[List' → logprob: -6.31387996673584
    4. ')' → logprob: -9.31387996673584
    5. '[' → logprob: -11.93887996673584
    6. '	List' → logprob: -13.56387996673584
    7. '[int' → logprob: -14.56387996673584
    8. ' ' → logprob: -15.68887996673584
    9. ',List' → logprob: -15.81387996673584
    10. ' )' → logprob: -15.93887996673584

Token 334: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -6.704273118884885e-07
    2. '<int' → logprob: -14.375000953674316
    3. 'int' → logprob: -16.375
    4. ']int' → logprob: -18.875
    5. '[' → logprob: -19.625
    6. ')' → logprob: -19.875
    7. '[
' → logprob: -20.0
    8. '[Int' → logprob: -20.25
    9. '	int' → logprob: -20.5
    10. '   ' → logprob: -20.625

Token 335: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.16040436923503876
    2. ')' → logprob: -1.9104043245315552
    3. ']' → logprob: -9.785404205322266
    4. ' ])' → logprob: -9.785404205322266
    5. ' )' → logprob: -10.785404205322266
    6. ',' → logprob: -10.910404205322266
    7. '],' → logprob: -11.535404205322266
    8. ''])' → logprob: -12.160404205322266
    9. '`)' → logprob: -12.160404205322266
    10. '   ' → logprob: -13.160404205322266

Token 336: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018717549741268158
    2. ' ->' → logprob: -4.6437177658081055
    3. '->' → logprob: -4.7687177658081055
    4. ')->' → logprob: -8.018717765808105
    5. ' )' → logprob: -9.393717765808105
    6. ']' → logprob: -11.893717765808105
    7. ' )->' → logprob: -12.643717765808105
    8. '   ' → logprob: -13.143717765808105
    9. ' ' → logprob: -13.768717765808105
    10. '`)' → logprob: -14.018717765808105

Token 337: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.6931677460670471
    2. 'bool' → logprob: -0.6931677460670471
    3. ' ' → logprob: -11.443167686462402
    4. '   ' → logprob: -12.818167686462402
    5. '  ' → logprob: -12.943167686462402
    6. '	bool' → logprob: -12.943167686462402
    7. '<bool' → logprob: -14.193167686462402
    8. '    ' → logprob: -14.443167686462402
    9. ' ' → logprob: -14.818167686462402
    10. 'b' → logprob: -15.318167686462402

Token 338: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010076797567307949
    2. ':
' → logprob: -4.760076999664307
    3. '<|end|>' → logprob: -6.885076999664307
    4. '):' → logprob: -8.385076522827148
    5. ':return' → logprob: -9.385076522827148
    6. '   ' → logprob: -9.885076522827148
    7. '():' → logprob: -11.260076522827148
    8. '):
' → logprob: -11.510076522827148
    9. ',' → logprob: -11.510076522827148
    10. ':def' → logprob: -11.760076522827148

Token 339: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00958478543907404
    2. '       ' → logprob: -4.884584903717041
    3. '<|end|>' → logprob: -6.884584903717041
    4. '    ' → logprob: -7.759584903717041
    5. '    
' → logprob: -8.384584426879883
    6. '
' → logprob: -8.759584426879883
    7. ' ' → logprob: -10.009584426879883
    8. ' 
' → logprob: -10.634584426879883
    9. '  ' → logprob: -10.759584426879883
    10. ')' → logprob: -11.259584426879883

Token 340: ' pass' (ID: 1853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07063236832618713
    2. ' pass' → logprob: -2.9456324577331543
    3. 'pass' (adapté à ' pass') → logprob: -4.320632457733154
    4. 'return' → logprob: -7.445632457733154
    5. '   ' → logprob: -7.570632457733154
    6. '\' → logprob: -8.695631980895996
    7. ' ' → logprob: -8.695631980895996
    8. ' return' → logprob: -8.820631980895996
    9. ' 
' → logprob: -8.820631980895996
    10. 'v' → logprob: -8.945631980895996

Token 341: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.646148681640625
    2. '   ' → logprob: -0.771148681640625
    3. '    
' → logprob: -4.896148681640625
    4. ':' → logprob: -6.396148681640625
    5. ' 
' → logprob: -6.396148681640625
    6. '<|end|>' → logprob: -6.521148681640625
    7. '

' → logprob: -8.271148681640625
    8. '  
' → logprob: -8.396148681640625
    9. ':
' → logprob: -8.896148681640625
    10. ' ' → logprob: -9.021148681640625

Token 342: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.009854895062744617
    2. '
' → logprob: -4.634854793548584
    3. 'c' → logprob: -10.134855270385742
    4. ' 
' → logprob: -11.009855270385742
    5. '

' → logprob: -11.134855270385742
    6. ' class' → logprob: -11.384855270385742
    7. '    
' → logprob: -12.009855270385742
    8. '   ' → logprob: -12.134855270385742
    9. 'clas' → logprob: -13.259855270385742
    10. '  
' → logprob: -13.634855270385742

Token 343: ' Frequency' (ID: 79273)
  Prédit: 'Simple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Simple' → logprob: -0.6704587340354919
    2. 'Frequency' → logprob: -1.5454587936401367
    3. 'Exact' → logprob: -1.7954587936401367
    4. 'An' → logprob: -3.4204587936401367
    5. 'Concrete' → logprob: -4.170458793640137
    6. 'Basic' → logprob: -4.795458793640137
    7. 'Default' → logprob: -4.920458793640137
    8. 'Count' → logprob: -4.920458793640137
    9. ' Frequency' → logprob: -4.920458793640137
    10. ' Simple' → logprob: -4.920458793640137

Token 344: 'Vector' (ID: 7580)
  Prédit: 'Based'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Based' → logprob: -0.1587635576725006
    2. 'Comparator' → logprob: -2.0337636470794678
    3. 'An' → logprob: -5.158763408660889
    4. 'Comparer' → logprob: -5.408763408660889
    5. 'Vector' → logprob: -6.283763408660889
    6. 'Counter' → logprob: -6.408763408660889
    7. 'Equality' → logprob: -7.408763408660889
    8. 'Matcher' → logprob: -7.658763408660889
    9. 'Analyzer' → logprob: -8.533763885498047
    10. 'Difference' → logprob: -8.658763885498047

Token 345: 'Comparator' (ID: 45034)
  Prédit: 'Comparator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Comparator' → logprob: -0.0031297095119953156
    2. 'Comparer' → logprob: -6.503129482269287
    3. 'An' → logprob: -6.628129482269287
    4. 'Based' → logprob: -8.378129959106445
    5. 'Substring' → logprob: -10.503129959106445
    6. 'Equality' → logprob: -11.253129959106445
    7. ' Comparator' → logprob: -11.503129959106445
    8. 'Matcher' → logprob: -12.253129959106445
    9. 'Compare' → logprob: -12.378129959106445
    10. 'Comparison' → logprob: -12.628129959106445

Token 346: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2592134475708008
    2. '(Sub' → logprob: -2.259213447570801
    3. ':' → logprob: -2.384213447570801
    4. '(String' → logprob: -3.884213447570801
    5. '(F' → logprob: -4.759213447570801
    6. '():' → logprob: -6.509213447570801
    7. '(Abstract' → logprob: -7.759213447570801
    8. ':String' → logprob: -8.5092134475708
    9. '(:' → logprob: -8.8842134475708
    10. '(S' → logprob: -9.0092134475708

Token 347: 'Substring' (ID: 113055)
  Prédit: 'Substring'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Substring' → logprob: -0.008865457028150558
    2. '):' → logprob: -5.3838653564453125
    3. ')' → logprob: -5.7588653564453125
    4. '):
' → logprob: -7.3838653564453125
    5. '(' → logprob: -8.758865356445312
    6. 'Subclass' → logprob: -9.133865356445312
    7. 'Abstract' → logprob: -9.383865356445312
    8. 'ABC' → logprob: -10.633865356445312
    9. '(Abstract' → logprob: -10.633865356445312
    10. 'substring' → logprob: -11.508865356445312

Token 348: 'Comparator' (ID: 45034)
  Prédit: 'Comparator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Comparator' → logprob: -3.869639476761222e-05
    2. 'Comparer' → logprob: -10.375039100646973
    3. ')' → logprob: -12.875039100646973
    4. '.Comparator' → logprob: -13.250039100646973
    5. ' Comparator' → logprob: -13.375039100646973
    6. 'Compar' → logprob: -15.000039100646973
    7. 'Compare' → logprob: -15.875039100646973
    8. 'Com' → logprob: -16.000038146972656
    9. '):' → logprob: -16.125038146972656
    10. '):
' → logprob: -16.250038146972656

Token 349: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20145709812641144
    2. '):' → logprob: -1.701457142829895
    3. '):
' → logprob: -11.201457023620605
    4. ':' → logprob: -11.326457023620605
    5. ')' → logprob: -11.701457023620605
    6. ':
' → logprob: -12.201457023620605
    7. '   ' → logprob: -12.451457023620605
    8. '):

' → logprob: -14.451457023620605
    9. ' ):
' → logprob: -16.451457977294922
    10. '():
' → logprob: -17.076457977294922

Token 350: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.304016228066757e-05
    2. 'def' → logprob: -10.125082969665527
    3. ' def' → logprob: -10.375082969665527
    4. '
' → logprob: -12.750082969665527
    5. '    ' → logprob: -12.750082969665527
    6. '    
' → logprob: -12.750082969665527
    7. '  ' → logprob: -13.750082969665527
    8. '	def' → logprob: -14.125082969665527
    9. '```' → logprob: -15.000082969665527
    10. '[' → logprob: -15.500082969665527

Token 351: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.25208762288093567
    2. 'def' (adapté à ' def') → logprob: -1.5020875930786133
    3. '   ' → logprob: -8.752087593078613
    4. '	def' → logprob: -15.252087593078613
    5. ' ' → logprob: -17.25208854675293
    6. '
' → logprob: -18.00208854675293
    7. 'class' → logprob: -18.37708854675293
    8. '    ' → logprob: -18.37708854675293
    9. '  ' → logprob: -18.87708854675293
    10. '    
' → logprob: -20.12708854675293

Token 352: ' are' (ID: 553)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.09982472658157349
    2. ' ' → logprob: -2.4748246669769287
    3. ' are' → logprob: -4.599824905395508
    4. 'def' → logprob: -7.849824905395508
    5. 'are' → logprob: -9.224824905395508
    6. ' _' → logprob: -9.849824905395508
    7. '   ' → logprob: -9.849824905395508
    8. ' a' → logprob: -10.474824905395508
    9. ' space' → logprob: -10.474824905395508
    10. '_' → logprob: -11.099824905395508

Token 353: '_an' (ID: 47921)
  Prédit: '_an'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_an' → logprob: -0.0019431571708992124
    2. '_' → logprob: -6.251943111419678
    3. '_a' → logprob: -12.001943588256836
    4. ' _' → logprob: -12.501943588256836
    5. '_are' → logprob: -13.626943588256836
    6. '_equal' → logprob: -13.626943588256836
    7. '_
' → logprob: -13.751943588256836
    8. '_the' → logprob: -15.751943588256836
    9. '_ant' → logprob: -16.001943588256836
    10. 'an' → logprob: -16.251943588256836

Token 354: 'agrams' (ID: 54218)
  Prédit: 'agrams'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agrams' → logprob: -2.15310683415737e-05
    2. '_an' → logprob: -10.875021934509277
    3. 'agram' → logprob: -14.250021934509277
    4. 'grams' → logprob: -14.500021934509277
    5. 'an' → logprob: -14.750021934509277
    6. 'ograms' → logprob: -14.875021934509277
    7. 'a' → logprob: -15.500021934509277
    8. '```' → logprob: -16.25002098083496
    9. '   ' → logprob: -16.50002098083496
    10. 'igrams' → logprob: -17.12502098083496

Token 355: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00017410075815860182
    2. '(' → logprob: -8.750174522399902
    3. ' (' → logprob: -11.125174522399902
    4. '(s' → logprob: -15.000174522399902
    5. '(
' → logprob: -15.125174522399902
    6. '(sel' → logprob: -15.625174522399902
    7. 'self' → logprob: -17.625173568725586
    8. '(se' → logprob: -17.750173568725586
    9. ' ' → logprob: -19.500173568725586
    10. '   ' → logprob: -19.875173568725586

Token 356: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029176851734519005
    2. 'self' → logprob: -4.029176712036133
    3. '(self' → logprob: -4.654176712036133
    4. ' ,' → logprob: -7.029176712036133
    5. ' self' → logprob: -8.279176712036133
    6. ')' → logprob: -8.654176712036133
    7. ',
' → logprob: -10.654176712036133
    8. ',self' → logprob: -11.029176712036133
    9. '   ' → logprob: -11.279176712036133
    10. ' ' → logprob: -11.279176712036133

Token 357: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.1602269560098648
    2. 'v' → logprob: -1.9102269411087036
    3. '	v' → logprob: -13.535226821899414
    4. 'self' → logprob: -14.410226821899414
    5. ')v' → logprob: -14.535226821899414
    6. ' self' → logprob: -15.660226821899414
    7. ')' → logprob: -16.285226821899414
    8. ' ' → logprob: -16.410226821899414
    9. '<|end|>' → logprob: -16.785226821899414
    10. '_v' → logprob: -17.285226821899414

Token 358: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. '2' → logprob: -13.500001907348633
    3. '_' → logprob: -15.750001907348633
    4. ' ' → logprob: -16.625001907348633
    5. ',' → logprob: -18.000001907348633
    6. '   ' → logprob: -18.250001907348633
    7. '
' → logprob: -18.250001907348633
    8. ' _' → logprob: -19.250001907348633
    9. '```' → logprob: -19.500001907348633
    10. ' ,' → logprob: -19.750001907348633

Token 359: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.057448528707027435
    2. ':' → logprob: -2.932448625564575
    3. ' ,' → logprob: -6.557448387145996
    4. ',v' → logprob: -6.807448387145996
    5. ' :' → logprob: -10.682448387145996
    6. ':v' → logprob: -12.432448387145996
    7. '[v' → logprob: -12.557448387145996
    8. 'v' → logprob: -12.932448387145996
    9. ' v' → logprob: -13.057448387145996
    10. '   ' → logprob: -14.057448387145996

Token 360: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.038062144070863724
    2. ' List' → logprob: -3.28806209564209
    3. '[List' → logprob: -11.91306209564209
    4. 'v' → logprob: -12.16306209564209
    5. ' v' → logprob: -12.28806209564209
    6. 'list' → logprob: -12.78806209564209
    7. ' list' → logprob: -13.91306209564209
    8. ')' → logprob: -16.038063049316406
    9. '_list' → logprob: -16.288063049316406
    10. ',List' → logprob: -16.538063049316406

Token 361: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.4974866644479334e-05
    2. '[' → logprob: -11.500015258789062
    3. ',int' → logprob: -13.125015258789062
    4. ',' → logprob: -13.375015258789062
    5. '<int' → logprob: -15.000015258789062
    6. '[in' → logprob: -15.125015258789062
    7. 'int' → logprob: -15.500015258789062
    8. ' [' → logprob: -15.625015258789062
    9. ' ,' → logprob: -16.500015258789062
    10. '[Int' → logprob: -16.500015258789062

Token 362: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019391077803447843
    2. '],' → logprob: -6.251939296722412
    3. ' ,' → logprob: -11.876938819885254
    4. '>,' → logprob: -13.376938819885254
    5. '[],' → logprob: -13.751938819885254
    6. ']' → logprob: -15.126938819885254
    7. '),' → logprob: -15.251938819885254
    8. '},' → logprob: -16.12693977355957
    9. '‌,' → logprob: -16.25193977355957
    10. ' ],' → logprob: -17.25193977355957

Token 363: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.12692831456661224
    2. 'v' → logprob: -2.1269283294677734
    3. ')v' → logprob: -16.126928329467773
    4. ' ' → logprob: -16.751928329467773
    5. ')' → logprob: -16.751928329467773
    6. '	v' → logprob: -17.876928329467773
    7. '[v' → logprob: -19.376928329467773
    8. ',' → logprob: -19.876928329467773
    9. '$v' → logprob: -20.001928329467773
    10. '```' → logprob: -20.126928329467773

Token 364: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001085497424355708
    2. ',' → logprob: -9.75010871887207
    3. '1' → logprob: -10.37510871887207
    4. '   ' → logprob: -11.75010871887207
    5. ' ' → logprob: -12.37510871887207
    6. '```' → logprob: -13.00010871887207
    7. '_' → logprob: -13.87510871887207
    8. ')' → logprob: -14.12510871887207
    9. '       ' → logprob: -14.75010871887207
    10. '
' → logprob: -14.87510871887207

Token 365: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003312937042210251
    2. '])' → logprob: -9.125330924987793
    3. ' )' → logprob: -9.375330924987793
    4. '   ' → logprob: -9.875330924987793
    5. ':' → logprob: -10.625330924987793
    6. ',' → logprob: -11.000330924987793
    7. '`)' → logprob: -11.250330924987793
    8. ']' → logprob: -11.875330924987793
    9. '[int' → logprob: -12.125330924987793
    10. '[' → logprob: -12.125330924987793

Token 366: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.02538313902914524
    2. ' List' → logprob: -4.025382995605469
    3. '[List' → logprob: -5.025382995605469
    4. '[int' → logprob: -7.525382995605469
    5. 'int' → logprob: -9.900382995605469
    6. ')' → logprob: -10.150382995605469
    7. '[' → logprob: -11.775382995605469
    8. ' ' → logprob: -14.400382995605469
    9. '	List' → logprob: -14.900382995605469
    10. ' int' → logprob: -15.400382995605469

Token 367: '[int' (ID: 40124)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11391633749008179
    2. '[int' → logprob: -2.2389163970947266
    3. 'int' → logprob: -7.863916397094727
    4. '   ' → logprob: -8.363916397094727
    5. '[])' → logprob: -9.113916397094727
    6. '[' → logprob: -9.113916397094727
    7. '`)' → logprob: -9.613916397094727
    8. '):' → logprob: -10.113916397094727
    9. '])' → logprob: -10.363916397094727
    10. '==' → logprob: -10.738916397094727

Token 368: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.005291868932545185
    2. ')' → logprob: -5.255291938781738
    3. ']' → logprob: -9.880291938781738
    4. ']):' → logprob: -12.380291938781738
    5. ']):
' → logprob: -14.755291938781738
    6. ''])' → logprob: -14.880291938781738
    7. '],' → logprob: -14.880291938781738
    8. ' ])' → logprob: -14.880291938781738
    9. '   ' → logprob: -15.130291938781738
    10. '):' → logprob: -15.255291938781738

Token 369: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.16440929472446442
    2. '->' → logprob: -2.0394093990325928
    3. ')' → logprob: -4.539409160614014
    4. ':' → logprob: -4.539409160614014
    5. ')->' → logprob: -9.289409637451172
    6. '   ' → logprob: -10.664409637451172
    7. '>' → logprob: -12.039409637451172
    8. '->[' → logprob: -12.289409637451172
    9. ':return' → logprob: -12.289409637451172
    10. '[' → logprob: -12.414409637451172

Token 370: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.12693357467651367
    2. ' bool' → logprob: -2.1269335746765137
    3. ' ' → logprob: -13.001934051513672
    4. 'List' → logprob: -13.376934051513672
    5. '	bool' → logprob: -14.626934051513672
    6. '   ' → logprob: -14.626934051513672
    7. ')' → logprob: -15.126934051513672
    8. 'return' → logprob: -15.751934051513672
    9. '  ' → logprob: -16.376934051513672
    10. '[' → logprob: -16.876934051513672

Token 371: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017959660617634654
    2. ':
' → logprob: -6.376795768737793
    3. ':return' → logprob: -9.751795768737793
    4. '):' → logprob: -10.876795768737793
    5. ' :' → logprob: -12.251795768737793
    6. '       ' → logprob: -12.876795768737793
    7. '[' → logprob: -12.876795768737793
    8. '   ' → logprob: -13.751795768737793
    9. '):
' → logprob: -14.001795768737793
    10. ',' → logprob: -14.001795768737793

Token 372: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00037442712346091866
    2. ' return' → logprob: -8.000374794006348
    3. '   ' → logprob: -11.000374794006348
    4. '    ' → logprob: -11.875374794006348
    5. 'return' → logprob: -12.375374794006348
    6. '      ' → logprob: -12.750374794006348
    7. '	' → logprob: -13.125374794006348
    8. '[' → logprob: -13.375374794006348
    9. ' ' → logprob: -14.000374794006348
    10. '     ' → logprob: -14.125374794006348

Token 373: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.058666620403528214
    2. '       ' → logprob: -3.558666706085205
    3. ' return' → logprob: -3.558666706085205
    4. '   ' → logprob: -11.183666229248047
    5. '	return' → logprob: -12.558666229248047
    6. 'for' → logprob: -12.558666229248047
    7. '
' → logprob: -13.058666229248047
    8. ' ' → logprob: -13.683666229248047
    9. ' for' → logprob: -14.558666229248047
    10. '```' → logprob: -15.308666229248047

Token 374: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.535388708114624
    2. ' v' → logprob: -0.910388708114624
    3. ' all' → logprob: -4.660388946533203
    4. 'all' → logprob: -5.910388946533203
    5. '[v' → logprob: -12.285388946533203
    6. '   ' → logprob: -12.410388946533203
    7. '	v' → logprob: -12.535388946533203
    8. ' ' → logprob: -13.035388946533203
    9. '[' → logprob: -14.785388946533203
    10. ' [' → logprob: -15.160388946533203

Token 375: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '_' → logprob: -17.0
    3. 'v' → logprob: -17.0
    4. '```' → logprob: -17.375
    5. '[v' → logprob: -17.875
    6. '2' → logprob: -18.0
    7. '[' → logprob: -19.1875
    8. '
' → logprob: -19.9375
    9. '１' → logprob: -20.1875
    10. '(v' → logprob: -20.5

Token 376: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02327284961938858
    2. ' ==' → logprob: -3.773272752761841
    3. '=' → logprob: -11.148272514343262
    4. '==
' → logprob: -11.273272514343262
    5. ']==' → logprob: -15.773272514343262
    6. ')==' → logprob: -16.648273468017578
    7. '[:]' → logprob: -16.898273468017578
    8. '[' → logprob: -17.398273468017578
    9. '```' → logprob: -18.023273468017578
    10. ' =' → logprob: -18.148273468017578

Token 377: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0005530327325686812
    2. ' v' → logprob: -7.500553131103516
    3. '	v' → logprob: -20.875553131103516
    4. ')v' → logprob: -23.625553131103516
    5. '
' → logprob: -24.250553131103516
    6. '_v' → logprob: -24.500553131103516
    7. ' ' → logprob: -25.000553131103516
    8. '$v' → logprob: -26.250553131103516
    9. '?v' → logprob: -26.750553131103516
    10. '<|end|>' → logprob: -27.000553131103516

Token 378: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02324547804892063
    2. '1' → logprob: -3.7732455730438232
    3. 'ector' → logprob: -17.273244857788086
    4. 'al' → logprob: -18.523244857788086
    5. 'v' → logprob: -18.898244857788086
    6. 'ctor' → logprob: -18.898244857788086
    7. '[' → logprob: -19.023244857788086
    8. 'ectors' → logprob: -19.023244857788086
    9. 'alue' → logprob: -19.648244857788086
    10. '```' → logprob: -20.648244857788086

Token 379: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7340704798698425
    2. '<|end|>' → logprob: -0.7340704798698425
    3. '

' → logprob: -3.2340705394744873
    4. '<|end|>' → logprob: -7.859070301055908
    5. '


' → logprob: -8.859070777893066
    6. '```' → logprob: -9.484070777893066
    7. 'class' → logprob: -9.609070777893066
    8. '



' → logprob: -12.109070777893066
    9. '\n' → logprob: -12.484070777893066
    10. '#' → logprob: -12.859070777893066

Token 380: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 381: ' Hidden' (ID: 62716)
  Prédit: 'Hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Hash' → logprob: -1.840340256690979
    2. ' Sorted' → logprob: -2.0903401374816895
    3. 'Sorted' → logprob: -2.3403401374816895
    4. 'Concrete' → logprob: -2.7153401374816895
    5. 'Length' → logprob: -3.0903401374816895
    6. 'An' → logprob: -3.3403401374816895
    7. 'Br' → logprob: -3.3403401374816895
    8. ' Rolling' → logprob: -3.3403401374816895
    9. 'Substring' → logprob: -3.3403401374816895
    10. 'Na' → logprob: -3.4653401374816895

Token 382: 'An' (ID: 2223)
  Prédit: 'An'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'An' → logprob: -0.4780403673648834
    2. 'String' → logprob: -2.1030404567718506
    3. 'Substring' → logprob: -2.1030404567718506
    4. 'Mark' → logprob: -2.7280404567718506
    5. 'Palindrome' → logprob: -3.4780404567718506
    6. 'Word' → logprob: -4.6030402183532715
    7. 'Permutation' → logprob: -4.7280402183532715
    8. 'Pair' → logprob: -5.8530402183532715
    9. 'Counter' → logprob: -6.3530402183532715
    10. 'Test' → logprob: -6.3530402183532715

Token 383: 'agram' (ID: 7632)
  Prédit: 'agram'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agram' → logprob: -0.006130825728178024
    2. 'gram' → logprob: -6.131130695343018
    3. 'a' → logprob: -6.631130695343018
    4. 'agrams' → logprob: -6.631130695343018
    5. 'g' → logprob: -7.131130695343018
    6. 'd' → logprob: -9.631131172180176
    7. 'alyzer' → logprob: -10.256131172180176
    8. 'am' → logprob: -10.381131172180176
    9. 'gle' → logprob: -10.381131172180176
    10. 'ogram' → logprob: -10.443631172180176

Token 384: 'Solver' (ID: 70484)
  Prédit: 'Finder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Finder' → logprob: -0.029083875939249992
    2. 'Detector' → logprob: -4.529083728790283
    3. 'Searcher' → logprob: -5.029083728790283
    4. ':' → logprob: -5.404083728790283
    5. '(String' → logprob: -6.404083728790283
    6. '(' → logprob: -6.529083728790283
    7. 'Substring' → logprob: -6.779083728790283
    8. 'Solver' → logprob: -6.904083728790283
    9. '():' → logprob: -7.904083728790283
    10. 'Checker' → logprob: -8.029084205627441

Token 385: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004107732092961669
    2. '(' → logprob: -8.125411033630371
    3. ':
' → logprob: -9.375411033630371
    4. ' :' → logprob: -11.750411033630371
    5. '(String' → logprob: -11.875411033630371
    6. '(Abstract' → logprob: -12.375411033630371
    7. '(S' → logprob: -12.375411033630371
    8. ':String' → logprob: -13.125411033630371
    9. '():' → logprob: -13.375411033630371
    10. ':

' → logprob: -14.250411033630371

Token 386: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008848203346133232
    2. ' def' → logprob: -4.758848190307617
    3. ':' → logprob: -8.758848190307617
    4. 'def' → logprob: -9.633848190307617
    5. '	def' → logprob: -12.258848190307617
    6. '    
' → logprob: -13.008848190307617
    7. ',' → logprob: -13.508848190307617
    8. '(' → logprob: -14.008848190307617
    9. ':def' → logprob: -14.258848190307617
    10. '   ' → logprob: -15.008848190307617

Token 387: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5759885311126709
    2. 'def' (adapté à ' def') → logprob: -0.8259885311126709
    3. '   ' → logprob: -9.95098876953125
    4. 'class' → logprob: -13.57598876953125
    5. ' ' → logprob: -16.20098876953125
    6. ':' → logprob: -17.07598876953125
    7. '	def' → logprob: -17.82598876953125
    8. ':def' → logprob: -18.45098876953125
    9. '```' → logprob: -18.95098876953125
    10. '__' → logprob: -19.32598876953125

Token 388: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.00409015454351902
    2. ' def' → logprob: -6.379090309143066
    3. ' init' → logprob: -6.629090309143066
    4. '_init' → logprob: -7.879090309143066
    5. ' _' → logprob: -8.004090309143066
    6. ' solve' → logprob: -8.629090309143066
    7. ' ' → logprob: -10.004090309143066
    8. 'init' → logprob: -10.004090309143066
    9. '__' → logprob: -10.379090309143066
    10. ' \' → logprob: -10.879090309143066

Token 389: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. '_init' → logprob: -18.875
    3. ' init' → logprob: -18.875
    4. 'def' → logprob: -19.25
    5. '```' → logprob: -19.75
    6. 'in' → logprob: -21.125
    7. '   ' → logprob: -21.25
    8. 'inite' → logprob: -21.5
    9. 'initi' → logprob: -21.75
    10. 'ini' → logprob: -21.75

Token 390: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0009792207274585962
    2. '(self' → logprob: -7.500979423522949
    3. '__' → logprob: -8.25097942352295
    4. '__(
' → logprob: -8.75097942352295
    5. '(' → logprob: -12.87597942352295
    6. '__((' → logprob: -13.50097942352295
    7. '__('' → logprob: -14.00097942352295
    8. '_(' → logprob: -14.87597942352295
    9. '```' → logprob: -15.12597942352295
    10. '__("' → logprob: -15.25097942352295

Token 391: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001025895617203787
    2. ' self' → logprob: -10.000102996826172
    3. '
' → logprob: -10.250102996826172
    4. '(self' → logprob: -11.250102996826172
    5. ',' → logprob: -12.875102996826172
    6. '       ' → logprob: -13.250102996826172
    7. ')' → logprob: -13.500102996826172
    8. ',self' → logprob: -13.875102996826172
    9. '   ' → logprob: -14.375102996826172
    10. '__(' → logprob: -15.000102996826172

Token 392: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.225939872208983e-05
    2. ' ,' → logprob: -10.500032424926758
    3. 'self' → logprob: -12.375032424926758
    4. ',
' → logprob: -15.750032424926758
    5. '   ' → logprob: -16.875032424926758
    6. ')' → logprob: -16.875032424926758
    7. ',s' → logprob: -17.750032424926758
    8. ',self' → logprob: -17.750032424926758
    9. '__,' → logprob: -18.125032424926758
    10. ':' → logprob: -18.250032424926758

Token 393: ' s' (ID: 265)
  Prédit: 'source'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'source' → logprob: -1.1395580768585205
    2. 'string' → logprob: -1.2645580768585205
    3. ' source' → logprob: -1.5145580768585205
    4. ' string' → logprob: -2.5145580768585205
    5. 'self' → logprob: -3.5145580768585205
    6. 'strings' → logprob: -4.139557838439941
    7. ' strings' → logprob: -4.139557838439941
    8. ' self' → logprob: -4.639557838439941
    9. ' s' → logprob: -5.139557838439941
    10. 's' → logprob: -5.264557838439941

Token 394: '1' (ID: 16)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -6.396757089532912e-05
    2. '):' → logprob: -10.1250638961792
    3. ')' → logprob: -10.7500638961792
    4. ':str' → logprob: -14.0000638961792
    5. ' :' → logprob: -14.5000638961792
    6. ',' → logprob: -15.0000638961792
    7. '_:' → logprob: -15.3750638961792
    8. 's' → logprob: -16.000064849853516
    9. '":' → logprob: -16.125064849853516
    10. ' ):' → logprob: -16.875064849853516

Token 395: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03805181756615639
    2. ',' → logprob: -3.2880518436431885
    3. ' :' → logprob: -12.28805160522461
    4. ':str' → logprob: -13.28805160522461
    5. ' ,' → logprob: -13.53805160522461
    6. '):' → logprob: -13.53805160522461
    7. ')' → logprob: -14.28805160522461
    8. 's' → logprob: -15.03805160522461
    9. ':s' → logprob: -15.78805160522461
    10. ',s' → logprob: -16.03805160522461

Token 396: ' String' (ID: 1189)
  Prédit: 'String'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'String' → logprob: -0.508784294128418
    2. 'str' → logprob: -1.133784294128418
    3. 'Concrete' → logprob: -3.258784294128418
    4. ' String' → logprob: -3.883784294128418
    5. ' str' → logprob: -4.258784294128418
    6. ' Concrete' → logprob: -5.758784294128418
    7. 'Str' → logprob: -8.383784294128418
    8. 'Hidden' → logprob: -9.133784294128418
    9. ')' → logprob: -9.258784294128418
    10. 'Abstract' → logprob: -9.383784294128418

Token 397: 'Source' (ID: 4823)
  Prédit: 'Source'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Source' → logprob: -5.512236498361744e-07
    2. ',' → logprob: -15.750000953674316
    3. 'ource' → logprob: -16.5
    4. ' Source' → logprob: -16.625
    5. ')' → logprob: -17.0
    6. '_source' → logprob: -17.375
    7. 'source' → logprob: -17.375
    8. 'S' → logprob: -18.25
    9. '   ' → logprob: -19.5
    10. ' source' → logprob: -20.125

Token 398: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.088346359931165e-07
    2. ' ,' → logprob: -14.125000953674316
    3. ',
' → logprob: -17.75
    4. '   ' → logprob: -18.375
    5. ',s' → logprob: -18.5
    6. '‌,' → logprob: -18.875
    7. '):' → logprob: -19.375
    8. ')' → logprob: -20.0
    9. '       ' → logprob: -21.0
    10. 's' → logprob: -21.125

Token 399: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5231347680091858
    2. 's' → logprob: -0.8981347680091858
    3. '   ' → logprob: -12.2731351852417
    4. ' ' → logprob: -12.7731351852417
    5. '    ' → logprob: -13.1481351852417
    6. '  ' → logprob: -14.0231351852417
    7. '     ' → logprob: -15.1481351852417
    8. '       ' → logprob: -15.6481351852417
    9. '	s' → logprob: -15.7731351852417
    10. ' comparator' → logprob: -16.023134231567383

Token 400: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.203409844194539e-05
    2. 's' → logprob: -10.125041961669922
    3. '_' → logprob: -13.500041961669922
    4. ' s' → logprob: -15.750041961669922
    5. '_s' → logprob: -16.375041961669922
    6. '   ' → logprob: -16.625041961669922
    7. 'e' → logprob: -17.250041961669922
    8. ' ' → logprob: -17.375041961669922
    9. '```' → logprob: -18.000041961669922
    10. 'from' → logprob: -18.375041961669922

Token 401: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000452241423772648
    2. '):' → logprob: -8.500452041625977
    3. ',' → logprob: -8.875452041625977
    4. ')' → logprob: -9.250452041625977
    5. ' :' → logprob: -11.500452041625977
    6. '):
' → logprob: -13.875452041625977
    7. '   ' → logprob: -14.500452041625977
    8. ' ' → logprob: -14.750452041625977
    9. ' ):' → logprob: -15.375452041625977
    10. '_:' → logprob: -15.750452041625977

Token 402: ' String' (ID: 1189)
  Prédit: ' String'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' String' → logprob: -0.4740810692310333
    2. 'String' → logprob: -0.9740810394287109
    3. ' ' → logprob: -13.349081039428711
    4. 'List' → logprob: -14.724081039428711
    5. '
' → logprob: -15.099081039428711
    6. ' str' → logprob: -15.224081039428711
    7. ')' → logprob: -15.224081039428711
    8. '	String' → logprob: -15.349081039428711
    9. ' List' → logprob: -15.599081039428711
    10. '   ' → logprob: -15.724081039428711

Token 403: 'Source' (ID: 4823)
  Prédit: 'Source'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Source' → logprob: -2.45848218582978e-06
    2. 'ource' → logprob: -13.12500286102295
    3. 'source' → logprob: -15.75000286102295
    4. ')' → logprob: -16.000001907348633
    5. '_source' → logprob: -16.375001907348633
    6. 'S' → logprob: -17.750001907348633
    7. ',' → logprob: -18.000001907348633
    8. '_Source' → logprob: -18.000001907348633
    9. '_SOURCE' → logprob: -18.250001907348633
    10. '   ' → logprob: -18.250001907348633

Token 404: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.031081270426511765
    2. '):
' → logprob: -3.531081199645996
    3. ',' → logprob: -6.656081199645996
    4. ')' → logprob: -10.281081199645996
    5. '   ' → logprob: -12.531081199645996
    6. '):
' → logprob: -12.781081199645996
    7. ':' → logprob: -13.531081199645996
    8. ' ):' → logprob: -13.781081199645996
    9. '       ' → logprob: -14.906081199645996
    10. '):

' → logprob: -16.156082153320312

Token 405: ' comparator' (ID: 96166)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.34938928484916687
    2. ' comparator' → logprob: -1.2243893146514893
    3. 'substring' → logprob: -7.84938907623291
    4. 'comp' → logprob: -8.72438907623291
    5. ' substring' → logprob: -9.09938907623291
    6. 'cmp' → logprob: -9.59938907623291
    7. ' ' → logprob: -9.97438907623291
    8. 'an' → logprob: -10.47438907623291
    9. ' comparer' → logprob: -10.47438907623291
    10. 'substr' → logprob: -10.59938907623291

Token 406: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.35706390615087e-05
    2. '):' → logprob: -10.500033378601074
    3. ' :' → logprob: -12.625033378601074
    4. '):
' → logprob: -13.000033378601074
    5. ')' → logprob: -15.500033378601074
    6. '=' → logprob: -15.875033378601074
    7. ' ):' → logprob: -17.25003433227539
    8. '_:' → logprob: -18.50003433227539
    9. ':
' → logprob: -18.75003433227539
    10. '
' → logprob: -19.62503433227539

Token 407: ' Sub' (ID: 5934)
  Prédit: 'Substring'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Substring' → logprob: -0.0016572092426940799
    2. ' Sub' → logprob: -6.501657009124756
    3. 'Sub' → logprob: -9.001657485961914
    4. 'String' → logprob: -11.126657485961914
    5. ' substring' → logprob: -12.376657485961914
    6. 'Frequency' → logprob: -12.751657485961914
    7. ' String' → logprob: -12.876657485961914
    8. 'Subclass' → logprob: -13.001657485961914
    9. ' ' → logprob: -13.751657485961914
    10. 'substring' → logprob: -14.126657485961914

Token 408: 'string' (ID: 1655)
  Prédit: 'string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'string' → logprob: -3.4121114822482923e-06
    2. 'substring' → logprob: -12.875003814697266
    3. 'tring' → logprob: -14.500003814697266
    4. 'str' → logprob: -16.375003814697266
    5. 'strings' → logprob: -16.375003814697266
    6. 'String' → logprob: -17.500003814697266
    7. 'class' → logprob: -18.250003814697266
    8. ' string' → logprob: -18.875003814697266
    9. 'strate' → logprob: -19.125003814697266
    10. 'STRING' → logprob: -19.875003814697266

Token 409: 'Comparator' (ID: 45034)
  Prédit: 'Comparator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Comparator' → logprob: -1.771655115589965e-05
    2. 'Comparer' → logprob: -11.000018119812012
    3. '.Comparator' → logprob: -15.000018119812012
    4. 'Compar' → logprob: -15.375018119812012
    5. '
' → logprob: -15.750018119812012
    6. 'Com' → logprob: -16.375017166137695
    7. ' Comparator' → logprob: -16.625017166137695
    8. 'Compare' → logprob: -16.750017166137695
    9. ' comparator' → logprob: -17.375017166137695
    10. 'Comparison' → logprob: -17.625017166137695

Token 410: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004287215415388346
    2. '):
' → logprob: -5.504287242889404
    3. ')' → logprob: -8.504286766052246
    4. ',' → logprob: -12.754286766052246
    5. ':' → logprob: -13.504286766052246
    6. ' ):' → logprob: -14.004286766052246
    7. '):
' → logprob: -14.129286766052246
    8. '   ' → logprob: -15.629286766052246
    9. ' ' → logprob: -16.629287719726562
    10. '):

' → logprob: -17.504287719726562

Token 411: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030232317745685577
    2. ':' → logprob: -4.1552324295043945
    3. '   ' → logprob: -4.4052324295043945
    4. 'self' → logprob: -7.2802324295043945
    5. '
' → logprob: -8.030232429504395
    6. ',' → logprob: -8.780232429504395
    7. '        
' → logprob: -8.905232429504395
    8. '):' → logprob: -9.155232429504395
    9. '    
' → logprob: -9.405232429504395
    10. ':
' → logprob: -9.530232429504395

Token 412: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0555272102355957
    2. '       ' → logprob: -3.3055272102355957
    3. ' self' → logprob: -4.055527210235596
    4. '   ' → logprob: -12.555526733398438
    5. '	self' → logprob: -12.930526733398438
    6. ' ' → logprob: -14.055526733398438
    7. 's' → logprob: -15.805526733398438
    8. '     ' → logprob: -16.305526733398438
    9. '(self' → logprob: -16.555526733398438
    10. '      ' → logprob: -16.680526733398438

Token 413: '.s' (ID: 640)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.16356919705867767
    2. '.' → logprob: -2.413569211959839
    3. ' .' → logprob: -3.038569211959839
    4. '.s' → logprob: -4.78856897354126
    5. ' ' → logprob: -5.91356897354126
    6. '   ' → logprob: -6.41356897354126
    7. '.__' → logprob: -8.288569450378418
    8. 's' → logprob: -9.038569450378418
    9. '_s' → logprob: -9.413569450378418
    10. '
' → logprob: -9.788569450378418

Token 414: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -14.375000953674316
    3. 'ource' → logprob: -15.625000953674316
    4. 'elf' → logprob: -16.000001907348633
    5. 'rc' → logprob: -18.000001907348633
    6. '   ' → logprob: -18.125001907348633
    7. '
' → logprob: -19.125001907348633
    8. 'earch' → logprob: -20.125001907348633
    9. 'ources' → logprob: -20.500001907348633
    10. '

' → logprob: -20.750001907348633

Token 415: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16078883409500122
    2. ' =' → logprob: -1.9107887744903564
    3. ',' → logprob: -7.5357890129089355
    4. '.' → logprob: -10.660788536071777
    5. '_' → logprob: -12.660788536071777
    6. ')' → logprob: -13.160788536071777
    7. ' ,' → logprob: -14.410788536071777
    8. ' ' → logprob: -14.910788536071777
    9. ' =
' → logprob: -15.160788536071777
    10. '=s' → logprob: -15.160788536071777

Token 416: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2014133334159851
    2. ' s' → logprob: -1.7014133930206299
    3. '_s' → logprob: -18.201414108276367
    4. '	s' → logprob: -19.076414108276367
    5. ' ' → logprob: -21.076414108276367
    6. '(s' → logprob: -21.076414108276367
    7. ' ' → logprob: -21.201414108276367
    8. '   ' → logprob: -21.826414108276367
    9. '{s' → logprob: -21.826414108276367
    10. '
' → logprob: -21.951414108276367

Token 417: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '._' → logprob: -15.500000953674316
    3. '_' → logprob: -16.125
    4. '.' → logprob: -16.25
    5. 's' → logprob: -18.0
    6. '.s' → logprob: -18.25
    7. '１' → logprob: -18.375
    8. ' ' → logprob: -18.5
    9. '
' → logprob: -18.5
    10. '   ' → logprob: -18.625

Token 418: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24862731993198395
    2. '
' → logprob: -1.7486273050308228
    3. 'self' → logprob: -3.7486274242401123
    4. '  
' → logprob: -4.748627185821533
    5. '<|end|>' → logprob: -4.998627185821533
    6. '        
' → logprob: -5.873627185821533
    7. ' 
' → logprob: -6.748627185821533
    8. ' ' → logprob: -7.123627185821533
    9. '    
' → logprob: -7.123627185821533
    10. ' self' → logprob: -7.998627185821533

Token 419: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22566606104373932
    2. 'self' → logprob: -1.8506660461425781
    3. ' self' → logprob: -3.225666046142578
    4. '
' → logprob: -6.600666046142578
    5. ' ' → logprob: -7.100666046142578
    6. '        ' → logprob: -7.350666046142578
    7. ' 
' → logprob: -7.600666046142578
    8. ',' → logprob: -7.725666046142578
    9. '  
' → logprob: -7.725666046142578
    10. '        
' → logprob: -8.100666046142578

Token 420: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00015347852604463696
    2. 's' → logprob: -9.375153541564941
    3. '       ' → logprob: -9.750153541564941
    4. ' self' → logprob: -11.500153541564941
    5. '
' → logprob: -16.500152587890625
    6. '   ' → logprob: -16.625152587890625
    7. '           ' → logprob: -18.375152587890625
    8. '	self' → logprob: -19.125152587890625
    9. '        
' → logprob: -19.625152587890625
    10. ' s' → logprob: -19.750152587890625

Token 421: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.08944091200828552
    2. '.' → logprob: -2.4644408226013184
    3. ' .' → logprob: -8.214441299438477
    4. 's' → logprob: -8.714441299438477
    5. '._' → logprob: -10.464441299438477
    6. '.
' → logprob: -11.464441299438477
    7. '   ' → logprob: -11.714441299438477
    8. ' ' → logprob: -11.839441299438477
    9. ' s' → logprob: -12.589441299438477
    10. '..' → logprob: -13.089441299438477

Token 422: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3856492842023727e-06
    2. 'com' → logprob: -14.375000953674316
    3. 'ource' → logprob: -14.875000953674316
    4. '   ' → logprob: -16.375001907348633
    5. '1' → logprob: -16.750001907348633
    6. 's' → logprob: -17.125001907348633
    7. '_com' → logprob: -17.500001907348633
    8. '_' → logprob: -17.875001907348633
    9. '       ' → logprob: -18.062501907348633
    10. 'r' → logprob: -18.437501907348633

Token 423: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47665461897850037
    2. '=' → logprob: -0.9766546487808228
    3. '<|end|>' → logprob: -6.726654529571533
    4. '       ' → logprob: -7.726654529571533
    5. ',' → logprob: -7.726654529571533
    6. ' ' → logprob: -8.976655006408691
    7. '
' → logprob: -9.226655006408691
    8. 's' → logprob: -9.976655006408691
    9. '=
' → logprob: -10.101655006408691
    10. ' s' → logprob: -10.476655006408691

Token 424: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10020667314529419
    2. ' s' → logprob: -2.3502066135406494
    3. '	s' → logprob: -17.60020637512207
    4. ' ' → logprob: -18.22520637512207
    5. '_s' → logprob: -18.35020637512207
    6. '   ' → logprob: -19.10020637512207
    7. '    ' → logprob: -19.72520637512207
    8. '(s' → logprob: -19.72520637512207
    9. '       ' → logprob: -19.85020637512207
    10. ' ' → logprob: -19.97520637512207

Token 425: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.6240566083070007e-06
    2. 'com' → logprob: -13.750001907348633
    3. '1' → logprob: -15.500001907348633
    4. 'comp' → logprob: -17.125001907348633
    5. ' ' → logprob: -17.500001907348633
    6. 's' → logprob: -17.750001907348633
    7. '   ' → logprob: -18.000001907348633
    8. '_' → logprob: -18.250001907348633
    9. '

' → logprob: -18.375001907348633
    10. '
' → logprob: -18.375001907348633

Token 426: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028003767132759094
    2. '<|end|>' → logprob: -4.028003692626953
    3. '
' → logprob: -4.903003692626953
    4. '   ' → logprob: -6.403003692626953
    5. 'self' → logprob: -8.528003692626953
    6. '<|end|>' → logprob: -8.778003692626953
    7. ' self' → logprob: -9.153003692626953
    8. ',' → logprob: -9.403003692626953
    9. 'def' → logprob: -9.778003692626953
    10. ')' → logprob: -11.028003692626953

Token 427: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00024596223374828696
    2. '   ' → logprob: -8.500246047973633
    3. 'self' → logprob: -10.875246047973633
    4. '<|end|>' → logprob: -11.750246047973633
    5. '
' → logprob: -12.000246047973633
    6. ' self' → logprob: -13.125246047973633
    7. '      ' → logprob: -13.375246047973633
    8. ' ' → logprob: -13.875246047973633
    9. '    
' → logprob: -14.000246047973633
    10. 'def' → logprob: -14.250246047973633

Token 428: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -6.313314952421933e-05
    2. '       ' → logprob: -10.250062942504883
    3. ' self' → logprob: -10.500062942504883
    4. '
' → logprob: -16.125062942504883
    5. 's' → logprob: -16.750062942504883
    6. '   ' → logprob: -17.375062942504883
    7. 'n' → logprob: -18.875062942504883
    8. 'length' → logprob: -19.125062942504883
    9. 'def' → logprob: -19.250062942504883
    10. '0' → logprob: -19.375062942504883

Token 429: '.com' (ID: 1136)
  Prédit: '.com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.com' → logprob: -0.01233646646142006
    2. '.' → logprob: -4.887336254119873
    3. '.comp' → logprob: -6.262336254119873
    4. '._' → logprob: -7.012336254119873
    5. ' .' → logprob: -7.137336254119873
    6. '.length' → logprob: -7.262336254119873
    7. '.s' → logprob: -8.762336730957031
    8. 'com' → logprob: -9.762336730957031
    9. '.compare' → logprob: -10.262336730957031
    10. '.char' → logprob: -10.887336730957031

Token 430: 'parator' (ID: 13157)
  Prédit: 'parator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parator' → logprob: -5.300083648762666e-05
    2. 'PARATOR' → logprob: -10.000053405761719
    3. 'perator' → logprob: -12.500053405761719
    4. 'par' → logprob: -14.000053405761719
    5. 'positor' → logprob: -14.500053405761719
    6. '   ' → logprob: -14.875053405761719
    7. 'operator' → logprob: -15.000053405761719
    8. '```' → logprob: -15.125053405761719
    9. 'ar' → logprob: -15.625053405761719
    10. '>' → logprob: -15.750053405761719

Token 431: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868858814239502
    2. '=' → logprob: -1.1368858814239502
    3. ' ' → logprob: -12.011885643005371
    4. '.' → logprob: -12.636885643005371
    5. '   ' → logprob: -13.886885643005371
    6. '  ' → logprob: -13.886885643005371
    7. '<|end|>' → logprob: -14.011885643005371
    8. ' =
' → logprob: -14.386885643005371
    9. '    ' → logprob: -14.511885643005371
    10. ',' → logprob: -14.886885643005371

Token 432: ' comparator' (ID: 96166)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.01252284087240696
    2. ' comparator' → logprob: -4.3875226974487305
    3. '	com' → logprob: -12.26252269744873
    4. '(com' → logprob: -12.63752269744873
    5. 'compar' → logprob: -13.26252269744873
    6. '
' → logprob: -14.13752269744873
    7. ' com' → logprob: -14.88752269744873
    8. '=com' → logprob: -15.01252269744873
    9. ' ' → logprob: -15.26252269744873
    10. 'converter' → logprob: -15.38752269744873

Token 433: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01069016195833683
    2. '   ' → logprob: -5.010690212249756
    3. '    
' → logprob: -6.635690212249756
    4. 'def' → logprob: -6.885690212249756
    5. ' def' → logprob: -7.260690212249756
    6. '<|end|>' → logprob: -7.760690212249756
    7. '

' → logprob: -8.260689735412598
    8. '  
' → logprob: -9.385689735412598
    9. ' 
' → logprob: -9.635689735412598
    10. '<|end|>' → logprob: -10.510689735412598

Token 434: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5262908935546875
    2. 'def' → logprob: -0.9012908935546875
    3. ' def' → logprob: -5.7762908935546875
    4. '    
' → logprob: -10.901290893554688
    5. '```' → logprob: -11.151290893554688
    6. '	def' → logprob: -11.276290893554688
    7. '<|end|>' → logprob: -12.151290893554688
    8. '
' → logprob: -12.651290893554688
    9. '       ' → logprob: -13.026290893554688
    10. '@property' → logprob: -14.151290893554688

Token 435: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.5048530030981055e-06
    2. ' def' → logprob: -13.500001907348633
    3. '   ' → logprob: -17.875001907348633
    4. 'from' → logprob: -20.500001907348633
    5. '    
' → logprob: -21.875001907348633
    6. '
' → logprob: -22.250001907348633
    7. '@' → logprob: -22.750001907348633
    8. '	def' → logprob: -23.250001907348633
    9. 'class' → logprob: -24.000001907348633
    10. ' ' → logprob: -24.500001907348633

Token 436: ' _' (ID: 1175)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.20225174725055695
    2. 'find' → logprob: -1.7022517919540405
    3. ' hidden' → logprob: -7.95225191116333
    4. ' longest' → logprob: -8.077251434326172
    5. ' solve' → logprob: -10.452251434326172
    6. 'hidden' → logprob: -10.452251434326172
    7. 'solve' → logprob: -10.577251434326172
    8. 'long' → logprob: -11.202251434326172
    9. 'count' → logprob: -11.452251434326172
    10. 'are' → logprob: -11.827251434326172

Token 437: 'can' (ID: 6929)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.0391581729054451
    2. 'get' → logprob: -5.414158344268799
    3. 'hidden' → logprob: -5.414158344268799
    4. 'is' → logprob: -5.664158344268799
    5. 'check' → logprob: -5.664158344268799
    6. 'solve' → logprob: -5.664158344268799
    7. 'length' → logprob: -5.789158344268799
    8. 'are' → logprob: -5.914158344268799
    9. 'generate' → logprob: -6.164158344268799
    10. 'possible' → logprob: -6.414158344268799

Token 438: '_find' (ID: 52203)
  Prédit: '_find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_find' → logprob: -0.1307457685470581
    2. '_match' → logprob: -3.1307458877563477
    3. '_' → logprob: -3.6307458877563477
    4. '_form' → logprob: -4.630745887756348
    5. '_continue' → logprob: -4.630745887756348
    6. '_make' → logprob: -5.130745887756348
    7. '_compare' → logprob: -5.380745887756348
    8. '_have' → logprob: -5.755745887756348
    9. '_construct' → logprob: -6.255745887756348
    10. '_extract' → logprob: -6.630745887756348

Token 439: '_hidden' (ID: 62109)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3125608563423157
    2. '_hidden' → logprob: -1.562560796737671
    3. '_an' → logprob: -3.062560796737671
    4. '_sub' → logprob: -5.06256103515625
    5. 'self' → logprob: -6.43756103515625
    6. '_' → logprob: -6.56256103515625
    7. 'hidden' → logprob: -6.56256103515625
    8. '(' → logprob: -7.68756103515625
    9. 'substring' → logprob: -8.68756103515625
    10. '_in' → logprob: -8.81256103515625

Token 440: '_an' (ID: 47921)
  Prédit: '_an'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_an' → logprob: -0.0038298906292766333
    2. 'an' → logprob: -7.1288299560546875
    3. '_token' → logprob: -7.2538299560546875
    4. '_' → logprob: -7.2538299560546875
    5. '_sub' → logprob: -7.5038299560546875
    6. 'substring' → logprob: -7.6288299560546875
    7. '_word' → logprob: -9.253829956054688
    8. '(self' → logprob: -9.628829956054688
    9. '_hidden' → logprob: -9.628829956054688
    10. '_answer' → logprob: -10.003829956054688

Token 441: 'agram' (ID: 7632)
  Prédit: 'agram'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agram' → logprob: -0.0006793115753680468
    2. 'gram' → logprob: -8.500679016113281
    3. 'agrams' → logprob: -8.750679016113281
    4. 'a' → logprob: -9.125679016113281
    5. '_' → logprob: -9.500679016113281
    6. 'am' → logprob: -11.125679016113281
    7. ' an' → logprob: -11.125679016113281
    8. '_an' → logprob: -11.125679016113281
    9. 'ag' → logprob: -11.625679016113281
    10. 'aram' → logprob: -11.750679016113281

Token 442: '_of' (ID: 8023)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0016203110571950674
    2. '(' → logprob: -6.751620292663574
    3. '_in' → logprob: -8.501620292663574
    4. 'self' → logprob: -8.751620292663574
    5. '(s' → logprob: -10.501620292663574
    6. '_sub' → logprob: -10.876620292663574
    7. '_(' → logprob: -12.001620292663574
    8. 'substring' → logprob: -12.251620292663574
    9. '_at' → logprob: -12.501620292663574
    10. '_of' → logprob: -12.626620292663574

Token 443: '_length' (ID: 11514)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.6260048747062683
    2. 'length' → logprob: -1.501004934310913
    3. 'self' → logprob: -2.251004934310913
    4. 's' → logprob: -2.376004934310913
    5. '_length' → logprob: -3.626004934310913
    6. 'substring' → logprob: -5.001004695892334
    7. '_sub' → logprob: -5.626004695892334
    8. '_s' → logprob: -5.626004695892334
    9. 'def' → logprob: -7.501004695892334
    10. 'sub' → logprob: -7.626004695892334

Token 444: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.011217226274311543
    2. '(' → logprob: -4.51121711730957
    3. '(
' → logprob: -8.76121711730957
    4. 'self' → logprob: -12.38621711730957
    5. ' (' → logprob: -12.51121711730957
    6. '(s' → logprob: -13.26121711730957
    7. '1' → logprob: -14.13621711730957
    8. '0' → logprob: -14.63621711730957
    9. ' self' → logprob: -15.38621711730957
    10. '_' → logprob: -15.38621711730957

Token 445: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.003909795545041561
    2. '(' → logprob: -6.253909587860107
    3. 'self' → logprob: -6.378909587860107
    4. '(
' → logprob: -9.128910064697266
    5. ' (' → logprob: -9.878910064697266
    6. ' self' → logprob: -10.003910064697266
    7. 'def' → logprob: -10.628910064697266
    8. ')' → logprob: -11.503910064697266
    9. '(s' → logprob: -11.503910064697266
    10. ')(' → logprob: -11.878910064697266

Token 446: ' length' (ID: 5517)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5324864387512207
    2. ' self' → logprob: -1.6574864387512207
    3. 'length' → logprob: -2.0324864387512207
    4. ' length' → logprob: -2.4074864387512207
    5. 'l' → logprob: -8.282485961914062
    6. '   ' → logprob: -8.407485961914062
    7. 'n' → logprob: -8.907485961914062
    8. ' l' → logprob: -8.907485961914062
    9. ')' → logprob: -9.282485961914062
    10. ' n' → logprob: -9.407485961914062

Token 447: ':' (ID: 25)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.24353092908859253
    2. 'self' → logprob: -2.2435309886932373
    3. ',' → logprob: -2.7435309886932373
    4. ':' → logprob: -3.4935309886932373
    5. ')' → logprob: -4.993530750274658
    6. '   ' → logprob: -5.243530750274658
    7. '       ' → logprob: -6.243530750274658
    8. ' self' → logprob: -7.243530750274658
    9. '):' → logprob: -8.118531227111816
    10. '=self' → logprob: -9.618531227111816

Token 448: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.014230971224606037
    2. ' int' → logprob: -4.264231204986572
    3. ')' → logprob: -9.639230728149414
    4. '(int' → logprob: -14.264230728149414
    5. '   ' → logprob: -14.764230728149414
    6. '[int' → logprob: -14.764230728149414
    7. '
' → logprob: -15.639230728149414
    8. 'self' → logprob: -15.889230728149414
    9. ':int' → logprob: -16.014230728149414
    10. ' )' → logprob: -16.264230728149414

Token 449: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5570885807392187e-05
    2. ' )' → logprob: -11.500015258789062
    3. '):' → logprob: -13.000015258789062
    4. '   ' → logprob: -13.500015258789062
    5. ':' → logprob: -14.250015258789062
    6. 'self' → logprob: -14.500015258789062
    7. ',' → logprob: -14.625015258789062
    8. '       ' → logprob: -16.875015258789062
    9. ')->' → logprob: -17.000015258789062
    10. '):
' → logprob: -17.000015258789062

Token 450: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010964340530335903
    2. '(self' → logprob: -5.135964393615723
    3. ' ->' → logprob: -6.135964393615723
    4. '->' → logprob: -6.385964393615723
    5. ':
' → logprob: -8.260964393615723
    6. ')' → logprob: -8.385964393615723
    7. '(' → logprob: -8.385964393615723
    8. '   ' → logprob: -8.510964393615723
    9. '       ' → logprob: -8.760964393615723
    10. '):' → logprob: -10.510964393615723

Token 451: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.6931906342506409
    2. 'bool' → logprob: -0.6931906342506409
    3. '   ' → logprob: -10.693190574645996
    4. ' ' → logprob: -11.318190574645996
    5. '	bool' → logprob: -12.193190574645996
    6. '  ' → logprob: -14.068190574645996
    7. ' ' → logprob: -14.693190574645996
    8. 'int' → logprob: -14.943190574645996
    9. '<bool' → logprob: -14.943190574645996
    10. ' True' → logprob: -15.318190574645996

Token 452: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019966813270002604
    2. ':
' → logprob: -6.2519965171813965
    3. '       ' → logprob: -10.126996994018555
    4. '):' → logprob: -11.626996994018555
    5. '(self' → logprob: -12.001996994018555
    6. ',' → logprob: -12.376996994018555
    7. '   ' → logprob: -12.751996994018555
    8. '):
' → logprob: -13.001996994018555
    9. ':self' → logprob: -14.126996994018555
    10. '():' → logprob: -14.376996994018555

Token 453: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008433376788161695
    2. '```' → logprob: -7.375843524932861
    3. '   ' → logprob: -9.375843048095703
    4. '        
' → logprob: -9.375843048095703
    5. '
' → logprob: -11.000843048095703
    6. '    ' → logprob: -12.625843048095703
    7. '    
' → logprob: -12.750843048095703
    8. '        ' → logprob: -12.875843048095703
    9. '           ' → logprob: -13.000843048095703
    10. '<|end|>' → logprob: -13.250843048095703

Token 454: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.058318302035331726
    2. 'freq' → logprob: -2.9333183765411377
    3. 's' → logprob: -7.058318138122559
    4. ' freq' → logprob: -7.433318138122559
    5. 'seen' → logprob: -8.433318138122559
    6. 'n' → logprob: -8.558318138122559
    7. 'count' → logprob: -8.558318138122559
    8. '
' → logprob: -8.683318138122559
    9. 'from' → logprob: -8.683318138122559
    10. 'dict' → logprob: -8.933318138122559

Token 455: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.5759517550468445
    2. 'length' → logprob: -0.8259517550468445
    3. 'self' → logprob: -11.95095157623291
    4. ' self' → logprob: -12.57595157623291
    5. '(length' → logprob: -14.32595157623291
    6. '	length' → logprob: -14.32595157623291
    7. '   ' → logprob: -14.57595157623291
    8. ' ' → logprob: -15.57595157623291
    9. 'len' → logprob: -15.82595157623291
    10. ' not' → logprob: -15.82595157623291

Token 456: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.22202038764953613
    2. '>' → logprob: -2.097020387649536
    3. ' ==' → logprob: -2.847020387649536
    4. '==' → logprob: -4.097020149230957
    5. ' <=' → logprob: -6.597020149230957
    6. '<=' → logprob: -8.347020149230957
    7. '=' → logprob: -11.097020149230957
    8. ' <' → logprob: -11.472020149230957
    9. ' ' → logprob: -11.972020149230957
    10. '<' → logprob: -12.472020149230957

Token 457: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -16.625019073486328
    4. '```' → logprob: -19.000019073486328
    5. '۰' → logprob: -19.000019073486328
    6. '       ' → logprob: -19.500019073486328
    7. '           ' → logprob: -20.562519073486328
    8. '    ' → logprob: -20.750019073486328
    9. '=' → logprob: -20.812519073486328
    10. '  ' → logprob: -20.875019073486328

Token 458: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.1424973713001236e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -17.000030517578125
    4. '۰' → logprob: -17.250030517578125
    5. '```' → logprob: -18.375030517578125
    6. '=' → logprob: -18.625030517578125
    7. '>' → logprob: -18.875030517578125
    8. '０' → logprob: -18.875030517578125
    9. '       ' → logprob: -19.312530517578125
    10. '  ' → logprob: -19.562530517578125

Token 459: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31606143712997437
    2. ':
' → logprob: -1.3160614967346191
    3. ':return' → logprob: -6.316061496734619
    4. ' or' → logprob: -6.941061496734619
    5. ':
' → logprob: -11.816061019897461
    6. '       ' → logprob: -12.191061019897461
    7. '           ' → logprob: -12.816061019897461
    8. 'or' → logprob: -13.316061019897461
    9. '   ' → logprob: -13.441061019897461
    10. 'return' → logprob: -14.316061019897461

Token 460: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006241570226848125
    2. ' return' → logprob: -8.62562370300293
    3. '
' → logprob: -8.75062370300293
    4. '       ' → logprob: -9.50062370300293
    5. 'return' → logprob: -9.62562370300293
    6. '	       ' → logprob: -10.12562370300293
    7. '		' → logprob: -11.00062370300293
    8. '<|end|>' → logprob: -11.25062370300293
    9. ':' → logprob: -11.37562370300293
    10. ':return' → logprob: -11.62562370300293

Token 461: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6935263872146606
    2. 'return' (adapté à ' return') → logprob: -0.6935263872146606
    3. '       ' → logprob: -8.693526268005371
    4. '
' → logprob: -9.068526268005371
    5. '           ' → logprob: -9.443526268005371
    6. '	return' → logprob: -11.443526268005371
    7. ':return' → logprob: -12.943526268005371
    8. '   ' → logprob: -13.818526268005371
    9. ' 
' → logprob: -14.068526268005371
    10. '               ' → logprob: -14.943526268005371

Token 462: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.21395383775234222
    2. ' True' → logprob: -1.7139538526535034
    3. 'False' → logprob: -4.463953971862793
    4. ' False' → logprob: -6.963953971862793
    5. '(True' → logprob: -16.463953018188477
    6. '=True' → logprob: -17.713953018188477
    7. '   ' → logprob: -19.213953018188477
    8. '_true' → logprob: -19.463953018188477
    9. '
' → logprob: -19.463953018188477
    10. 'true' → logprob: -19.713953018188477

Token 463: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4217422902584076
    2. '       ' → logprob: -1.17174232006073
    3. '<|end|>' → logprob: -4.1717424392700195
    4. '  
' → logprob: -4.9217424392700195
    5. '        
' → logprob: -5.0467424392700195
    6. '    
' → logprob: -6.4217424392700195
    7. '\n' → logprob: -6.5467424392700195
    8. '   ' → logprob: -7.5467424392700195
    9. ' 
' → logprob: -8.54674243927002
    10. '
' → logprob: -8.54674243927002

Token 464: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14370384812355042
    2. '
' → logprob: -2.0187039375305176
    3. '        
' → logprob: -7.393703937530518
    4. '  
' → logprob: -9.39370346069336
    5. '    
' → logprob: -9.51870346069336
    6. '   ' → logprob: -9.76870346069336
    7. '\n' → logprob: -9.89370346069336
    8. '	' → logprob: -10.51870346069336
    9. ' 
' → logprob: -11.14370346069336
    10. '
' → logprob: -11.26870346069336

Token 465: ' freq' (ID: 42078)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'freq' (adapté à ' freq') → logprob: -0.035805169492959976
    2. 's' → logprob: -3.6608052253723145
    3. '       ' → logprob: -5.9108052253723145
    4. 'if' → logprob: -6.2858052253723145
    5. '   ' → logprob: -6.2858052253723145
    6. ' freq' → logprob: -6.7858052253723145
    7. 'v' → logprob: -7.2858052253723145
    8. 'seen' → logprob: -8.160804748535156
    9. '        
' → logprob: -8.535804748535156
    10. 'source' → logprob: -9.285804748535156

Token 466: '_map' (ID: 11824)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.024831166490912437
    2. 's' → logprob: -3.7748310565948486
    3. '1' → logprob: -7.399831295013428
    4. '_map' → logprob: -8.14983081817627
    5. '_set' → logprob: -8.39983081817627
    6. '_vectors' → logprob: -8.77483081817627
    7. '_vector' → logprob: -9.64983081817627
    8. '_v' → logprob: -9.89983081817627
    9. '2' → logprob: -10.02483081817627
    10. ' =' → logprob: -10.27483081817627

Token 467: '_s' (ID: 1278)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005427865777164698
    2. '=' → logprob: -5.380427837371826
    3. ':' → logprob: -7.130427837371826
    4. 's' → logprob: -12.505428314208984
    5. ' :' → logprob: -13.755428314208984
    6. ' ' → logprob: -14.630428314208984
    7. ',' → logprob: -14.630428314208984
    8. '  ' → logprob: -15.255428314208984
    9. '[' → logprob: -15.505428314208984
    10. '   ' → logprob: -15.630428314208984

Token 468: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.15039309859275818
    2. '2' → logprob: -2.400393009185791
    3. ':' → logprob: -3.775393009185791
    4. ' =' → logprob: -4.150393009185791
    5. '=' → logprob: -4.775393009185791
    6. 'ource' → logprob: -7.775393009185791
    7. 'elf' → logprob: -8.40039348602295
    8. 's' → logprob: -8.77539348602295
    9. ',' → logprob: -9.02539348602295
    10. '{' → logprob: -9.02539348602295

Token 469: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02692597359418869
    2. '=' → logprob: -3.651926040649414
    3. ':' → logprob: -7.401926040649414
    4. '   ' → logprob: -12.276926040649414
    5. 's' → logprob: -12.651926040649414
    6. ' :' → logprob: -12.776926040649414
    7. ' ' → logprob: -13.276926040649414
    8. ',' → logprob: -13.776926040649414
    9. '  ' → logprob: -13.776926040649414
    10. '[' → logprob: -15.526926040649414

Token 470: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.001237252727150917
    2. '{}
' → logprob: -7.251237392425537
    3. 'set' → logprob: -7.751237392425537
    4. 'dict' → logprob: -10.126236915588379
    5. 'Counter' → logprob: -10.501236915588379
    6. '{' → logprob: -11.126236915588379
    7. '{}

' → logprob: -11.626236915588379
    8. ' {}' → logprob: -12.501236915588379
    9. ' set' → logprob: -14.376236915588379
    10. '{})' → logprob: -14.501236915588379

Token 471: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004307884373702109
    2. ' for' → logprob: -8.125431060791016
    3. 'for' → logprob: -9.250431060791016
    4. '[' → logprob: -11.625431060791016
    5. '+' → logprob: -11.875431060791016
    6. '<|end|>' → logprob: -11.875431060791016
    7. '        
' → logprob: -12.750431060791016
    8. '   ' → logprob: -12.750431060791016
    9. ',' → logprob: -13.250431060791016
    10. '           ' → logprob: -13.750431060791016

Token 472: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.05755218490958214
    2. '       ' → logprob: -2.9325520992279053
    3. 'start' → logprob: -7.307552337646484
    4. ' for' → logprob: -7.432552337646484
    5. 'window' → logprob: -7.432552337646484
    6. 'n' → logprob: -7.557552337646484
    7. 'left' → logprob: -9.307552337646484
    8. 'freq' → logprob: -9.432552337646484
    9. 'i' → logprob: -10.307552337646484
    10. 'end' → logprob: -10.557552337646484

Token 473: ' start' (ID: 1604)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5843327641487122
    2. 'start' → logprob: -0.8343327641487122
    3. ' i' → logprob: -5.0843329429626465
    4. ' start' → logprob: -6.4593329429626465
    5. '   ' → logprob: -7.4593329429626465
    6. '```' → logprob: -11.959332466125488
    7. ' ' → logprob: -12.459332466125488
    8. 'end' → logprob: -13.459332466125488
    9. '       ' → logprob: -13.584332466125488
    10. '`' → logprob: -13.709332466125488

Token 474: '1' (ID: 16)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00420483248308301
    2. 'in' → logprob: -5.504204750061035
    3. ' ' → logprob: -9.879204750061035
    4. '=' → logprob: -10.004204750061035
    5. '_in' → logprob: -12.254204750061035
    6. ' =' → logprob: -12.379204750061035
    7. ',' → logprob: -12.629204750061035
    8. '<|end|>' → logprob: -12.629204750061035
    9. 'In' → logprob: -13.379204750061035
    10. '	in' → logprob: -13.504204750061035

Token 475: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0059463405050337315
    2. 'in' → logprob: -5.130946159362793
    3. ' ' → logprob: -11.505946159362793
    4. ',' → logprob: -13.380946159362793
    5. '=' → logprob: -14.130946159362793
    6. ')' → logprob: -14.380946159362793
    7. 's' → logprob: -14.380946159362793
    8. '[' → logprob: -14.505946159362793
    9. '```' → logprob: -14.630946159362793
    10. 'In' → logprob: -14.880946159362793

Token 476: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2519291639328003
    2. ' range' → logprob: -1.5019291639328003
    3. '	range' → logprob: -16.501928329467773
    4. ' ' → logprob: -17.751928329467773
    5. '(range' → logprob: -18.501928329467773
    6. '   ' → logprob: -19.001928329467773
    7. '0' → logprob: -21.001928329467773
    8. '  ' → logprob: -21.251928329467773
    9. ' xrange' → logprob: -21.376928329467773
    10. '_range' → logprob: -21.501928329467773

Token 477: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01622908189892769
    2. '(len' → logprob: -4.516229152679443
    3. '(' → logprob: -5.266229152679443
    4. '(length' → logprob: -13.391228675842285
    5. 'self' → logprob: -13.516228675842285
    6. ' (' → logprob: -14.766228675842285
    7. '(s' → logprob: -14.766228675842285
    8. '(
' → logprob: -15.016228675842285
    9. 'len' → logprob: -15.141228675842285
    10. ' self' → logprob: -15.516228675842285

Token 478: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.1015128418803215
    2. 's' → logprob: -2.351512908935547
    3. '.' → logprob: -7.726512908935547
    4. ')' → logprob: -8.726512908935547
    5. ' s' → logprob: -8.851512908935547
    6. ' .' → logprob: -8.976512908935547
    7. 'length' → logprob: -9.351512908935547
    8. '0' → logprob: -9.726512908935547
    9. '1' → logprob: -9.851512908935547
    10. '   ' → logprob: -9.976512908935547

Token 479: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012928384239785373
    2. '2' → logprob: -9.625129699707031
    3. 's' → logprob: -10.750129699707031
    4. 'length' → logprob: -11.125129699707031
    5. '.length' → logprob: -12.500129699707031
    6. '.' → logprob: -12.625129699707031
    7. '_length' → logprob: -12.875129699707031
    8. '_' → logprob: -13.000129699707031
    9. '._' → logprob: -13.062629699707031
    10. '   ' → logprob: -13.125129699707031

Token 480: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.00013727048644796014
    2. '().' → logprob: -9.375137329101562
    3. ' .' → logprob: -10.125137329101562
    4. 'length' → logprob: -12.125137329101562
    5. '.' → logprob: -12.250137329101562
    6. ').' → logprob: -14.125137329101562
    7. '   ' → logprob: -14.500137329101562
    8. ' length' → logprob: -15.250137329101562
    9. ')' → logprob: -15.750137329101562
    10. '(length' → logprob: -15.750137329101562

Token 481: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0018666447140276432
    2. '()-' → logprob: -6.376866817474365
    3. ' -' → logprob: -9.251866340637207
    4. '()):
' → logprob: -10.126866340637207
    5. ' ()' → logprob: -10.876866340637207
    6. '():' → logprob: -12.376866340637207
    7. '-' → logprob: -13.751866340637207
    8. '(' → logprob: -13.751866340637207
    9. '():
' → logprob: -14.626866340637207
    10. '):' → logprob: -14.876866340637207

Token 482: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.011164306662976742
    2. '-' → logprob: -4.51116418838501
    3. '-length' → logprob: -9.386164665222168
    4. '()' → logprob: -11.511164665222168
    5. ' ' → logprob: -11.761164665222168
    6. '()-' → logprob: -11.886164665222168
    7. '):' → logprob: -12.761164665222168
    8. '):
' → logprob: -13.511164665222168
    9. ')' → logprob: -14.136164665222168
    10. '   ' → logprob: -14.511164665222168

Token 483: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.014163628220558167
    2. ' length' → logprob: -4.264163494110107
    3. '(length' → logprob: -16.264163970947266
    4. '[length' → logprob: -17.264163970947266
    5. 'ength' → logprob: -17.764163970947266
    6. '	length' → logprob: -18.139163970947266
    7. '   ' → logprob: -18.139163970947266
    8. ' ' → logprob: -18.514163970947266
    9. '    ' → logprob: -19.264163970947266
    10. 'leng' → logprob: -20.014163970947266

Token 484: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931490898132324
    2. ' +' → logprob: -0.6931490898132324
    3. '+
' → logprob: -14.44314956665039
    4. ' +
' → logprob: -14.56814956665039
    5. ' ' → logprob: -14.94314956665039
    6. '    ' → logprob: -15.19314956665039
    7. '   ' → logprob: -16.31814956665039
    8. ')+' → logprob: -16.56814956665039
    9. ')' → logprob: -16.69314956665039
    10. ' plus' → logprob: -18.06814956665039

Token 485: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007102862582542002
    2. ' ' → logprob: -7.250710487365723
    3. '   ' → logprob: -15.250710487365723
    4. ')' → logprob: -17.000709533691406
    5. '```' → logprob: -17.000709533691406
    6. '0' → logprob: -17.938209533691406
    7. '  ' → logprob: -18.250709533691406
    8. '
' → logprob: -18.563209533691406
    9. '    ' → logprob: -18.750709533691406
    10. '１' → logprob: -19.188209533691406

Token 486: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -17.750009536743164
    4. '
' → logprob: -18.125009536743164
    5. '```' → logprob: -18.875009536743164
    6. '{
' → logprob: -20.187509536743164
    7. '0' → logprob: -20.750009536743164
    8. '

' → logprob: -20.937509536743164
    9. '{' → logprob: -20.937509536743164
    10. ')' → logprob: -21.000009536743164

Token 487: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16060784459114075
    2. '):
' → logprob: -1.9106078147888184
    3. ':' → logprob: -8.660608291625977
    4. '):
' → logprob: -8.660608291625977
    5. ' ):' → logprob: -10.785608291625977
    6. ' ):
' → logprob: -12.285608291625977
    7. ')' → logprob: -12.535608291625977
    8. '       ' → logprob: -12.660608291625977
    9. '   ' → logprob: -12.785608291625977
    10. '):

' → logprob: -14.285608291625977

Token 488: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0035259556025266647
    2. ':' → logprob: -6.378525733947754
    3. '):' → logprob: -7.378525733947754
    4. '            
' → logprob: -8.128525733947754
    5. '):
' → logprob: -8.253525733947754
    6. ',' → logprob: -9.003525733947754
    7. '          ' → logprob: -9.253525733947754
    8. ' :' → logprob: -10.128525733947754
    9. '            ' → logprob: -10.253525733947754
    10. '```' → logprob: -10.378525733947754

Token 489: ' freq' (ID: 42078)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'freq' (adapté à ' freq') → logprob: -0.9896730184555054
    2. '           ' → logprob: -1.3646730184555054
    3. 'v' → logprob: -1.6146730184555054
    4. 'vec' → logprob: -2.239673137664795
    5. ' freq' → logprob: -3.114673137664795
    6. '               ' → logprob: -4.864673137664795
    7. ' vec' → logprob: -4.989673137664795
    8. 'key' → logprob: -6.364673137664795
    9. 'vector' → logprob: -6.364673137664795
    10. ' v' → logprob: -6.489673137664795

Token 490: '_v' (ID: 5390)
  Prédit: '_vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vector' → logprob: -0.13450436294078827
    2. '_vec' → logprob: -2.1345043182373047
    3. ' =' → logprob: -5.384504318237305
    4. '1' → logprob: -7.259504318237305
    5. '_vect' → logprob: -7.259504318237305
    6. 'vec' → logprob: -7.509504318237305
    7. '_v' → logprob: -8.009504318237305
    8. '_map' → logprob: -8.259504318237305
    9. 'vector' → logprob: -8.884504318237305
    10. '=' → logprob: -9.009504318237305

Token 491: ' =' (ID: 314)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6329057812690735
    2. ' =' → logprob: -1.6329057216644287
    3. 'ector' → logprob: -2.0079057216644287
    4. '=' → logprob: -2.8829057216644287
    5. 'al' → logprob: -3.1329057216644287
    6. '_s' → logprob: -3.6329057216644287
    7. 's' → logprob: -5.382905960083008
    8. '=s' → logprob: -6.007905960083008
    9. '_' → logprob: -6.632905960083008
    10. 'ectors' → logprob: -6.757905960083008

Token 492: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.2655128836631775
    2. ' tuple' → logprob: -1.5155129432678223
    3. 'self' → logprob: -4.390512943267822
    4. ' self' → logprob: -6.890512943267822
    5. '   ' → logprob: -10.265512466430664
    6. ' ' → logprob: -11.515512466430664
    7. '(tuple' → logprob: -11.890512466430664
    8. 'tu' → logprob: -12.140512466430664
    9. 'str' → logprob: -12.265512466430664
    10. '       ' → logprob: -12.640512466430664

Token 493: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.030103234574198723
    2. 'self' → logprob: -3.5301032066345215
    3. '(' → logprob: -8.53010368347168
    4. ' self' → logprob: -9.78010368347168
    5. '(
' → logprob: -10.15510368347168
    6. '[self' → logprob: -10.15510368347168
    7. 's' → logprob: -11.90510368347168
    8. ')' → logprob: -12.15510368347168
    9. '(s' → logprob: -12.78010368347168
    10. '
' → logprob: -14.03010368347168

Token 494: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.00026765360962599516
    2. '.char' → logprob: -8.75026798248291
    3. 's' → logprob: -9.75026798248291
    4. '.com' → logprob: -10.37526798248291
    5. 'char' → logprob: -12.25026798248291
    6. 'com' → logprob: -12.37526798248291
    7. ').' → logprob: -12.37526798248291
    8. ')' → logprob: -13.25026798248291
    9. '   ' → logprob: -14.12526798248291
    10. '.' → logprob: -14.25026798248291

Token 495: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. 'char' → logprob: -14.00000286102295
    3. '_s' → logprob: -14.62500286102295
    4. '_' → logprob: -14.87500286102295
    5. '.char' → logprob: -14.87500286102295
    6. '2' → logprob: -15.12500286102295
    7. '._' → logprob: -16.000003814697266
    8. 's' → logprob: -16.250003814697266
    9. '```' → logprob: -16.375003814697266
    10. '   ' → logprob: -16.750003814697266

Token 496: '.char' (ID: 18508)
  Prédit: '.char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.char' → logprob: -0.0028739420231431723
    2. 'char' → logprob: -5.87787389755249
    3. ' .' → logprob: -10.377874374389648
    4. '.' → logprob: -11.377874374389648
    5. '_char' → logprob: -11.377874374389648
    6. '._' → logprob: -12.377874374389648
    7. ' char' → logprob: -12.752874374389648
    8. '   ' → logprob: -12.877874374389648
    9. '_.' → logprob: -13.627874374389648
    10. ').' → logprob: -14.127874374389648

Token 497: '_frequency' (ID: 98311)
  Prédit: '_frequency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_frequency' → logprob: -2.339278580620885e-06
    2. 'frequency' → logprob: -13.375001907348633
    3. '_f' → logprob: -14.125001907348633
    4. '_' → logprob: -17.250001907348633
    5. 'requency' → logprob: -17.625001907348633
    6. '_probability' → logprob: -17.625001907348633
    7. 'Frequency' → logprob: -17.750001907348633
    8. 'fre' → logprob: -18.250001907348633
    9. '_freq' → logprob: -18.625001907348633
    10. '_vector' → logprob: -18.625001907348633

Token 498: '_vector' (ID: 29530)
  Prédit: '_vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vector' → logprob: -0.00012713817704934627
    2. 'vector' → logprob: -9.000126838684082
    3. ' vector' → logprob: -13.500126838684082
    4. 'Vector' → logprob: -13.625126838684082
    5. '_VECTOR' → logprob: -14.625126838684082
    6. '   ' → logprob: -16.3751277923584
    7. '_vectors' → logprob: -16.6251277923584
    8. '_Vector' → logprob: -16.6251277923584
    9. '_' → logprob: -17.0001277923584
    10. '_array' → logprob: -17.1251277923584

Token 499: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.003665752476081252
    2. '(' → logprob: -5.628665924072266
    3. '(
' → logprob: -10.003665924072266
    4. 'start' → logprob: -11.628665924072266
    5. ')' → logprob: -12.378665924072266
    6. ' (' → logprob: -12.628665924072266
    7. '[start' → logprob: -13.128665924072266
    8. ')(' → logprob: -14.253665924072266
    9. ',start' → logprob: -15.128665924072266
    10. '=start' → logprob: -15.753665924072266

Token 500: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2113979209971149e-05
    2. '=start' → logprob: -12.125012397766113
    3. '=' → logprob: -12.625012397766113
    4. ',' → logprob: -13.750012397766113
    5. '```' → logprob: -14.500012397766113
    6. ' ' → logprob: -14.875012397766113
    7. '(start' → logprob: -15.375012397766113
    8. 'start' → logprob: -15.687512397766113
    9. '[start' → logprob: -15.750012397766113
    10. ')' → logprob: -16.312511444091797

Token 501: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.375538163818419e-05
    2. ',length' → logprob: -9.750083923339844
    3. ' ,' → logprob: -10.625083923339844
    4. ',
' → logprob: -15.125083923339844
    5. '‌,' → logprob: -15.625083923339844
    6. ',int' → logprob: -16.375083923339844
    7. '<|end|>' → logprob: -16.375083923339844
    8. ',end' → logprob: -16.750083923339844
    9. ',len' → logprob: -16.750083923339844
    10. ')' → logprob: -16.875083923339844

Token 502: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.011047814972698689
    2. ' length' → logprob: -4.511047840118408
    3. 'leng' → logprob: -18.01104736328125
    4. '(length' → logprob: -18.38604736328125
    5. 'ength' → logprob: -18.88604736328125
    6. 'len' → logprob: -18.88604736328125
    7. '	length' → logprob: -18.88604736328125
    8. ' ' → logprob: -19.38604736328125
    9. '[length' → logprob: -19.63604736328125
    10. '_length' → logprob: -19.76104736328125

Token 503: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10110393911600113
    2. '))' → logprob: -2.3511040210723877
    3. '))
' → logprob: -7.351103782653809
    4. ')
' → logprob: -8.476103782653809
    5. ' )' → logprob: -11.351103782653809
    6. '           ' → logprob: -11.851103782653809
    7. ')]' → logprob: -12.101103782653809
    8. ')}' → logprob: -12.601103782653809
    9. '])' → logprob: -12.601103782653809
    10. '       ' → logprob: -12.851103782653809

Token 504: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009505256894044578
    2. '
' → logprob: -7.000950336456299
    3. ')' → logprob: -11.375950813293457
    4. ')
' → logprob: -12.375950813293457
    5. ',' → logprob: -12.500950813293457
    6. '            
' → logprob: -12.625950813293457
    7. ':' → logprob: -13.125950813293457
    8. 'freq' → logprob: -13.250950813293457
    9. '       ' → logprob: -13.375950813293457
    10. '          ' → logprob: -13.625950813293457

Token 505: ' freq' (ID: 42078)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'freq' (adapté à ' freq') → logprob: -0.5281098484992981
    2. '           ' → logprob: -1.2781097888946533
    3. ' freq' → logprob: -2.0281097888946533
    4. '
' → logprob: -9.653109550476074
    5. 'if' → logprob: -10.653109550476074
    6. '       ' → logprob: -11.403109550476074
    7. '(freq' → logprob: -11.778109550476074
    8. '_freq' → logprob: -11.903109550476074
    9. 'fre' → logprob: -12.278109550476074
    10. 'frequency' → logprob: -12.403109550476074

Token 506: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -1.1472419600977446e-06
    2. '_v' → logprob: -13.750000953674316
    3. '_' → logprob: -18.000001907348633
    4. '_m' → logprob: -18.125001907348633
    5. '
' → logprob: -19.750001907348633
    6. '_s' → logprob: -20.250001907348633
    7. '_maps' → logprob: -20.250001907348633
    8. '=' → logprob: -20.500001907348633
    9. 'Map' → logprob: -20.625001907348633
    10. 's' → logprob: -20.750001907348633

Token 507: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.0206720617134124e-05
    2. 's' → logprob: -12.75001049041748
    3. '_' → logprob: -13.12501049041748
    4. '_freq' → logprob: -13.25001049041748
    5. 'freq' → logprob: -14.00001049041748
    6. '[s' → logprob: -14.12501049041748
    7. '[' → logprob: -14.12501049041748
    8. '_f' → logprob: -16.000009536743164
    9. '_[' → logprob: -16.000009536743164
    10. '(freq' → logprob: -16.250009536743164

Token 508: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.273621405242011e-05
    2. 'freq' → logprob: -10.625032424926758
    3. '[f' → logprob: -12.750032424926758
    4. '(freq' → logprob: -13.375032424926758
    5. '[' → logprob: -13.875032424926758
    6. 'v' → logprob: -14.750032424926758
    7. '_freq' → logprob: -15.312532424926758
    8. 'f' → logprob: -15.500032424926758
    9. '```' → logprob: -15.625032424926758
    10. '_v' → logprob: -15.875032424926758

Token 509: '[f' (ID: 52330)
  Prédit: '[f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[f' → logprob: -0.0003233070601709187
    2. '[' → logprob: -8.125323295593262
    3. ' [' → logprob: -11.000323295593262
    4. '[t' → logprob: -12.250323295593262
    5. '[
' → logprob: -13.125323295593262
    6. '.setdefault' → logprob: -13.250323295593262
    7. 'freq' → logprob: -14.875323295593262
    8. '[v' → logprob: -15.125323295593262
    9. '=f' → logprob: -15.250323295593262
    10. '[`' → logprob: -16.250324249267578

Token 510: 'req' (ID: 5331)
  Prédit: 'req'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'req' → logprob: -0.0026686384808272123
    2. '_v' → logprob: -6.127668857574463
    3. 'v' → logprob: -8.002668380737305
    4. 'freq' → logprob: -9.252668380737305
    5. 'rev' → logprob: -11.252668380737305
    6. 'eq' → logprob: -11.752668380737305
    7. 'requency' → logprob: -12.127668380737305
    8. '[v' → logprob: -12.502668380737305
    9. 'rv' → logprob: -12.752668380737305
    10. '_req' → logprob: -13.127668380737305

Token 511: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -3.368984107510187e-05
    2. '_map' → logprob: -11.125033378601074
    3. 'v' → logprob: -11.250033378601074
    4. '_' → logprob: -12.625033378601074
    5. '	v' → logprob: -14.625033378601074
    6. 'map' → logprob: -14.875033378601074
    7. ')' → logprob: -15.125033378601074
    8. ']' → logprob: -15.125033378601074
    9. '```' → logprob: -15.500033378601074
    10. '-v' → logprob: -15.625033378601074

Token 512: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07000267505645752
    2. '=' → logprob: -3.445002555847168
    3. ' =' → logprob: -3.820002555847168
    4. ']=' → logprob: -4.320002555847168
    5. ')' → logprob: -8.320002555847168
    6. ' ]' → logprob: -8.445002555847168
    7. ')=' → logprob: -11.320002555847168
    8. ']+=' → logprob: -13.320002555847168
    9. '    ' → logprob: -14.570002555847168
    10. '[' → logprob: -14.695002555847168

Token 513: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692853808403015
    2. ' =' → logprob: -2.1269285678863525
    3. '=True' → logprob: -15.001928329467773
    4. '=
' → logprob: -16.626928329467773
    5. ' ' → logprob: -17.376928329467773
    6. ')' → logprob: -17.376928329467773
    7. '=count' → logprob: -17.501928329467773
    8. ')=' → logprob: -17.626928329467773
    9. ']=' → logprob: -17.876928329467773
    10. '=

' → logprob: -18.001928329467773

Token 514: ' True' (ID: 6432)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.23273973166942596
    2. 'True' → logprob: -1.8577396869659424
    3. ' freq' → logprob: -3.8577396869659424
    4. ' True' → logprob: -4.2327399253845215
    5. 'start' → logprob: -4.2327399253845215
    6. '1' → logprob: -7.1077399253845215
    7. ' start' → logprob: -8.357739448547363
    8. 'frequency' → logprob: -8.607739448547363
    9. 'true' → logprob: -9.482739448547363
    10. '(freq' → logprob: -9.857739448547363

Token 515: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5321516394615173
    2. '       ' → logprob: -0.9071516394615173
    3. '        
' → logprob: -5.157151699066162
    4. '  
' → logprob: -6.782151699066162
    5. '    
' → logprob: -7.157151699066162
    6. '<|end|>' → logprob: -7.532151699066162
    7. ' 
' → logprob: -9.157151222229004
    8. '		
' → logprob: -9.157151222229004
    9. '
' → logprob: -9.157151222229004
    10. '   ' → logprob: -9.532151222229004

Token 516: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008442710153758526
    2. '
' → logprob: -5.1334428787231445
    3. '   ' → logprob: -7.2584428787231445
    4. '        
' → logprob: -7.7584428787231445
    5. ' for' → logprob: -8.133442878723145
    6. '	' → logprob: -8.383442878723145
    7. '  
' → logprob: -8.633442878723145
    8. '<|end|>' → logprob: -8.758442878723145
    9. '    
' → logprob: -8.883442878723145
    10. ' ' → logprob: -9.633442878723145

Token 517: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03484903275966644
    2. '       ' → logprob: -3.534848928451538
    3. ' for' → logprob: -5.284849166870117
    4. '
' → logprob: -11.159849166870117
    5. '```' → logprob: -13.659849166870117
    6. '        
' → logprob: -13.784849166870117
    7. '   ' → logprob: -14.159849166870117
    8. 'freq' → logprob: -14.784849166870117
    9. '	for' → logprob: -16.159849166870117
    10. ' ' → logprob: -16.909849166870117

Token 518: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.693157434463501
    2. 'start' → logprob: -0.693157434463501
    3. '   ' → logprob: -12.318157196044922
    4. ' ' → logprob: -12.943157196044922
    5. 'end' → logprob: -13.693157196044922
    6. 'length' → logprob: -14.443157196044922
    7. '```' → logprob: -15.068157196044922
    8. '	start' → logprob: -15.193157196044922
    9. ' end' → logprob: -15.443157196044922
    10. 's' → logprob: -15.568157196044922

Token 519: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006722944788634777
    2. ' in' → logprob: -5.506722927093506
    3. 'in' → logprob: -6.006722927093506
    4. ' ' → logprob: -8.756723403930664
    5. '_' → logprob: -11.506723403930664
    6. '   ' → logprob: -11.631723403930664
    7. '  ' → logprob: -14.131723403930664
    8. '_in' → logprob: -14.756723403930664
    9. ',' → logprob: -15.006723403930664
    10. '```' → logprob: -15.631723403930664

Token 520: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0005574395763687789
    2. 'in' → logprob: -7.5005574226379395
    3. ' ' → logprob: -12.375557899475098
    4. 'n' → logprob: -17.00055694580078
    5. '<|end|>' → logprob: -17.12555694580078
    6. ',' → logprob: -17.25055694580078
    7. '	in' → logprob: -17.50055694580078
    8. ' ' → logprob: -17.50055694580078
    9. ' i' → logprob: -17.87555694580078
    10. ' 
' → logprob: -17.87555694580078

Token 521: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.023245595395565033
    2. 'range' → logprob: -3.7732455730438232
    3. ' in' → logprob: -17.148244857788086
    4. '(range' → logprob: -18.773244857788086
    5. ' ' → logprob: -19.773244857788086
    6. 'in' → logprob: -19.898244857788086
    7. '	range' → logprob: -21.023244857788086
    8. 'Range' → logprob: -22.023244857788086
    9. '0' → logprob: -22.398244857788086
    10. '   ' → logprob: -23.148244857788086

Token 522: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.1557283111615106e-05
    2. '(' → logprob: -10.750041961669922
    3. 'self' → logprob: -10.875041961669922
    4. ' self' → logprob: -14.375041961669922
    5. '(s' → logprob: -15.000041961669922
    6. '(
' → logprob: -16.875041961669922
    7. ' (' → logprob: -16.875041961669922
    8. '(len' → logprob: -17.250041961669922
    9. '       ' → logprob: -17.875041961669922
    10. '[self' → logprob: -18.375041961669922

Token 523: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.006019568536430597
    2. 's' → logprob: -5.131019592285156
    3. '.' → logprob: -9.756019592285156
    4. ' .' → logprob: -11.131019592285156
    5. ' s' → logprob: -11.381019592285156
    6. 'self' → logprob: -13.381019592285156
    7. '2' → logprob: -13.631019592285156
    8. '_s' → logprob: -14.006019592285156
    9. '   ' → logprob: -14.131019592285156
    10. '       ' → logprob: -14.506019592285156

Token 524: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1875571544806007e-05
    2. '1' → logprob: -11.500011444091797
    3. 's' → logprob: -13.875011444091797
    4. '_' → logprob: -15.937511444091797
    5. '   ' → logprob: -16.250011444091797
    6. ' ' → logprob: -16.375011444091797
    7. '```' → logprob: -16.437511444091797
    8. 'e' → logprob: -16.687511444091797
    9. 'length' → logprob: -16.875011444091797
    10. '
' → logprob: -17.250011444091797

Token 525: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.00025680975522845984
    2. ' .' → logprob: -8.750256538391113
    3. 'length' → logprob: -10.125256538391113
    4. '.' → logprob: -10.625256538391113
    5. '().' → logprob: -11.125256538391113
    6. ' length' → logprob: -11.500256538391113
    7. ' -' → logprob: -13.000256538391113
    8. ')' → logprob: -13.125256538391113
    9. '(length' → logprob: -13.125256538391113
    10. '()' → logprob: -13.750256538391113

Token 526: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0004311460361350328
    2. ' ()' → logprob: -8.000431060791016
    3. '()-' → logprob: -9.750431060791016
    4. '(' → logprob: -11.000431060791016
    5. ' -' → logprob: -12.000431060791016
    6. '   ' → logprob: -12.375431060791016
    7. ' ' → logprob: -12.625431060791016
    8. ')' → logprob: -12.625431060791016
    9. '-' → logprob: -13.375431060791016
    10. ' (' → logprob: -14.125431060791016

Token 527: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.05132894590497017
    2. '-' → logprob: -3.3013288974761963
    3. '()' → logprob: -4.676329135894775
    4. ' ' → logprob: -6.551329135894775
    5. '()-' → logprob: -6.551329135894775
    6. ' ()' → logprob: -7.301329135894775
    7. ')' → logprob: -8.051328659057617
    8. '   ' → logprob: -12.301328659057617
    9. '(' → logprob: -12.301328659057617
    10. ' (' → logprob: -12.426328659057617

Token 528: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.2014133334159851
    2. ' length' → logprob: -1.7014133930206299
    3. '(length' → logprob: -17.076414108276367
    4. '[length' → logprob: -17.326414108276367
    5. 'Length' → logprob: -17.701414108276367
    6. '	length' → logprob: -18.326414108276367
    7. '_length' → logprob: -19.326414108276367
    8. 'ength' → logprob: -19.451414108276367
    9. 'leng' → logprob: -19.701414108276367
    10. ',length' → logprob: -19.701414108276367

Token 529: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10020828247070312
    2. '+' → logprob: -2.350208282470703
    3. ' ' → logprob: -13.850208282470703
    4. '<|end|>' → logprob: -15.225208282470703
    5. ' +
' → logprob: -15.975208282470703
    6. '1' → logprob: -16.975208282470703
    7. ' ' → logprob: -17.100208282470703
    8. ')' → logprob: -17.225208282470703
    9. ' plus' → logprob: -17.350208282470703
    10. '()+' → logprob: -17.600208282470703

Token 530: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006718690041452646
    2. ' ' → logprob: -5.006718635559082
    3. '+' → logprob: -13.006718635559082
    4. '```' → logprob: -14.881718635559082
    5. '<|end|>' → logprob: -15.506718635559082
    6. ' +' → logprob: -15.506718635559082
    7. '   ' → logprob: -16.5067195892334
    8. '0' → logprob: -16.7567195892334
    9. '2' → logprob: -17.3817195892334
    10. '       ' → logprob: -17.5692195892334

Token 531: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.248469718324486e-05
    2. '+' → logprob: -11.000022888183594
    3. ' ' → logprob: -12.125022888183594
    4. ' +' → logprob: -15.875022888183594
    5. '```' → logprob: -15.875022888183594
    6. '0' → logprob: -17.375022888183594
    7. '
' → logprob: -17.875022888183594
    8. '   ' → logprob: -18.000022888183594
    9. 'length' → logprob: -18.375022888183594
    10. 'start' → logprob: -19.062522888183594

Token 532: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.47597065567970276
    2. '):' → logprob: -0.9759706258773804
    3. ':' → logprob: -6.47597074508667
    4. '       ' → logprob: -8.350970268249512
    5. '):
' → logprob: -10.100970268249512
    6. '   ' → logprob: -10.600970268249512
    7. ':
' → logprob: -10.975970268249512
    8. ')' → logprob: -10.975970268249512
    9. ' ):
' → logprob: -12.225970268249512
    10. '           ' → logprob: -13.225970268249512

Token 533: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06708350032567978
    2. '       ' → logprob: -2.8170835971832275
    3. '   ' → logprob: -6.442083358764648
    4. ' freq' → logprob: -6.567083358764648
    5. ' if' → logprob: -7.317083358764648
    6. 'freq' → logprob: -7.692083358764648
    7. '    ' → logprob: -8.692083358764648
    8. '
' → logprob: -9.317083358764648
    9. '	   ' → logprob: -9.442083358764648
    10. '        ' → logprob: -9.567083358764648

Token 534: ' freq' (ID: 42078)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'freq' (adapté à ' freq') → logprob: -0.27499762177467346
    2. ' freq' → logprob: -1.899997591972351
    3. '           ' → logprob: -2.3999977111816406
    4. 'v' → logprob: -10.39999771118164
    5. '       ' → logprob: -10.64999771118164
    6. '   ' → logprob: -10.77499771118164
    7. '               ' → logprob: -10.89999771118164
    8. '_freq' → logprob: -11.77499771118164
    9. ' ' → logprob: -11.89999771118164
    10. 'fre' → logprob: -12.27499771118164

Token 535: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.0001468067930545658
    2. 'v' → logprob: -8.875146865844727
    3. '_' → logprob: -12.375146865844727
    4. '	v' → logprob: -13.875146865844727
    5. '_vector' → logprob: -14.375146865844727
    6. '_s' → logprob: -15.125146865844727
    7. '_vect' → logprob: -15.750146865844727
    8. '_vec' → logprob: -16.125146865844727
    9. '2' → logprob: -16.500146865844727
    10. '_freq' → logprob: -16.750146865844727

Token 536: '2' (ID: 17)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519613206386566
    2. '=' → logprob: -1.501961350440979
    3. '_' → logprob: -10.876961708068848
    4. '_tuple' → logprob: -12.126961708068848
    5. ' ' → logprob: -12.751961708068848
    6. '_v' → logprob: -13.126961708068848
    7. '           ' → logprob: -14.126961708068848
    8. '_t' → logprob: -14.876961708068848
    9. '_=' → logprob: -15.001961708068848
    10. 'v' → logprob: -15.251961708068848

Token 537: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868730664253235
    2. '=' → logprob: -1.1368730068206787
    3. ' =
' → logprob: -14.636873245239258
    4. ' ' → logprob: -14.761873245239258
    5. '           ' → logprob: -15.136873245239258
    6. '        ' → logprob: -15.511873245239258
    7. '=
' → logprob: -15.636873245239258
    8. '    ' → logprob: -16.011873245239258
    9. '       ' → logprob: -16.386873245239258
    10. ')' → logprob: -16.386873245239258

Token 538: ' self' (ID: 1051)
  Prédit: ' tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -0.04858839511871338
    2. 'tuple' → logprob: -3.048588275909424
    3. '(tuple' → logprob: -14.298588752746582
    4. '           ' → logprob: -14.798588752746582
    5. 'tu' → logprob: -17.923587799072266
    6. '       ' → logprob: -18.298587799072266
    7. ' tu' → logprob: -18.298587799072266
    8. 'Tuple' → logprob: -18.548587799072266
    9. ' tup' → logprob: -18.798587799072266
    10. '_tuple' → logprob: -18.798587799072266

Token 539: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -8.995397365652025e-05
    2. 's' → logprob: -9.750089645385742
    3. '.' → logprob: -10.375089645385742
    4. ' .' → logprob: -15.500089645385742
    5. '._' → logprob: -15.750089645385742
    6. '
' → logprob: -17.000089645385742
    7. '..' → logprob: -17.625089645385742
    8. '_s' → logprob: -17.750089645385742
    9. '.t' → logprob: -18.375089645385742
    10. ''s' → logprob: -18.375089645385742

Token 540: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.636475493200123e-05
    2. '1' → logprob: -10.625076293945312
    3. '.s' → logprob: -10.750076293945312
    4. '_s' → logprob: -10.875076293945312
    5. '_' → logprob: -11.875076293945312
    6. 's' → logprob: -12.750076293945312
    7. '₂' → logprob: -14.250076293945312
    8. '._' → logprob: -15.125076293945312
    9. '```' → logprob: -15.375076293945312
    10. '\' → logprob: -15.750076293945312

Token 541: '.char' (ID: 18508)
  Prédit: '.char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.char' → logprob: -0.00043794067460112274
    2. 'char' → logprob: -8.00043773651123
    3. '.' → logprob: -9.25043773651123
    4. ' .' → logprob: -12.62543773651123
    5. '_char' → logprob: -14.25043773651123
    6. ' char' → logprob: -14.75043773651123
    7. '<char' → logprob: -15.00043773651123
    8. '.character' → logprob: -15.25043773651123
    9. '.token' → logprob: -15.37543773651123
    10. '	char' → logprob: -15.37543773651123

Token 542: '_frequency' (ID: 98311)
  Prédit: '_frequency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_frequency' → logprob: -7.465036105713807e-06
    2. 'frequency' → logprob: -11.875007629394531
    3. 'char' → logprob: -15.875007629394531
    4. '_f' → logprob: -16.25000762939453
    5. '_vector' → logprob: -16.62500762939453
    6. '.frequency' → logprob: -17.87500762939453
    7. 'fre' → logprob: -17.87500762939453
    8. '_probability' → logprob: -18.25000762939453
    9. 'Frequency' → logprob: -18.37500762939453
    10. '\' → logprob: -18.37500762939453

Token 543: '_vector' (ID: 29530)
  Prédit: '_vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vector' → logprob: -0.0007113590254448354
    2. 'vector' → logprob: -7.250711441040039
    3. 'Vector' → logprob: -14.250711441040039
    4. ' vector' → logprob: -14.375711441040039
    5. '_VECTOR' → logprob: -16.62571144104004
    6. '
' → logprob: -17.37571144104004
    7. 'v' → logprob: -18.25071144104004
    8. '_vectors' → logprob: -18.25071144104004
    9. '.vector' → logprob: -18.87571144104004
    10. '_Vector' → logprob: -19.12571144104004

Token 544: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.00028529210248962045
    2. '(' → logprob: -8.375285148620605
    3. 'start' → logprob: -10.500285148620605
    4. '[start' → logprob: -10.875285148620605
    5. ' (' → logprob: -12.250285148620605
    6. '(
' → logprob: -13.250285148620605
    7. ' start' → logprob: -14.750285148620605
    8. '=start' → logprob: -14.750285148620605
    9. ',start' → logprob: -15.250285148620605
    10. '           ' → logprob: -15.750285148620605

Token 545: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. ',' → logprob: -15.5
    3. '(start' → logprob: -16.25
    4. '(' → logprob: -16.875
    5. '۲' → logprob: -17.625
    6. ' ' → logprob: -17.875
    7. 'start' → logprob: -18.25
    8. '```' → logprob: -18.25
    9. ')' → logprob: -18.3125
    10. 's' → logprob: -18.375

Token 546: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.8961017202818766e-05
    2. ',length' → logprob: -9.875059127807617
    3. ' ,' → logprob: -11.875059127807617
    4. ',
' → logprob: -16.125059127807617
    5. '‌,' → logprob: -16.125059127807617
    6. '<|end|>' → logprob: -16.125059127807617
    7. '           ' → logprob: -16.750059127807617
    8. ',len' → logprob: -17.500059127807617
    9. '[length' → logprob: -18.000059127807617
    10. ')' → logprob: -18.000059127807617

Token 547: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.005233763717114925
    2. ' length' → logprob: -5.2552337646484375
    3. '[length' → logprob: -18.380233764648438
    4. '(length' → logprob: -18.630233764648438
    5. ',length' → logprob: -20.630233764648438
    6. 'leng' → logprob: -20.630233764648438
    7. 'Length' → logprob: -21.005233764648438
    8. '	length' → logprob: -21.380233764648438
    9. 'ength' → logprob: -21.505233764648438
    10. 'len' → logprob: -22.255233764648438

Token 548: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.08535099029541016
    2. ')' → logprob: -2.58535099029541
    3. '           ' → logprob: -5.08535099029541
    4. '       ' → logprob: -8.71035099029541
    5. ')
' → logprob: -9.71035099029541
    6. ' )
' → logprob: -10.71035099029541
    7. ')

' → logprob: -13.71035099029541
    8. '          ' → logprob: -13.71035099029541
    9. ')`
' → logprob: -14.21035099029541
    10. '         ' → logprob: -14.33535099029541

Token 549: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.841743303695694e-05
    2. '       ' → logprob: -9.50009822845459
    3. '<|end|>' → logprob: -11.62509822845459
    4. '
' → logprob: -12.25009822845459
    5. ' if' → logprob: -12.87509822845459
    6. '	       ' → logprob: -13.37509822845459
    7. ' for' → logprob: -13.75009822845459
    8. '<|end|>' → logprob: -14.25009822845459
    9. '               ' → logprob: -14.50009822845459
    10. 'if' → logprob: -14.50009822845459

Token 550: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02940247766673565
    2. ' if' → logprob: -4.029402256011963
    3. 'if' (adapté à ' if') → logprob: -4.529402256011963
    4. '       ' → logprob: -8.654402732849121
    5. '
' → logprob: -9.654402732849121
    6. 'freq' → logprob: -9.654402732849121
    7. ' freq' → logprob: -10.279402732849121
    8. '   ' → logprob: -11.279402732849121
    9. 'for' → logprob: -11.529402732849121
    10. ' for' → logprob: -11.779402732849121

Token 551: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.013410086743533611
    2. ' tuple' → logprob: -4.7634100914001465
    3. '           ' → logprob: -5.3884100914001465
    4. 'freq' → logprob: -9.388409614562988
    5. '               ' → logprob: -10.263409614562988
    6. '(tuple' → logprob: -10.263409614562988
    7. '            
' → logprob: -10.763409614562988
    8. '            ' → logprob: -11.638409614562988
    9. '   ' → logprob: -12.388409614562988
    10. '          ' → logprob: -12.388409614562988

Token 552: '(freq' (ID: 157195)
  Prédit: '(freq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(freq' → logprob: -3.292907877039397e-06
    2. 'freq' → logprob: -12.75000286102295
    3. '(' → logprob: -15.12500286102295
    4. '(
' → logprob: -18.125003814697266
    5. '((' → logprob: -19.750003814697266
    6. '_freq' → logprob: -20.750003814697266
    7. '(fe' → logprob: -20.875003814697266
    8. ' freq' → logprob: -21.000003814697266
    9. '
' → logprob: -21.000003814697266
    10. ' (' → logprob: -21.500003814697266

Token 553: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -9.13388703338569e-06
    2. 'v' → logprob: -11.875009536743164
    3. '(v' → logprob: -13.875009536743164
    4. '(freq' → logprob: -14.625009536743164
    5. '[v' → logprob: -15.125009536743164
    6. ')v' → logprob: -16.000009536743164
    7. '_map' → logprob: -16.250009536743164
    8. ')' → logprob: -16.500009536743164
    9. 'freq' → logprob: -17.125009536743164
    10. '_vector' → logprob: -17.375009536743164

Token 554: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.941161776310764e-05
    2. 'v' → logprob: -10.750039100646973
    3. '_v' → logprob: -11.000039100646973
    4. 's' → logprob: -14.000039100646973
    5. '```' → logprob: -16.12504005432129
    6. ')' → logprob: -16.37504005432129
    7. '
' → logprob: -17.25004005432129
    8. ' ' → logprob: -17.31254005432129
    9. '[v' → logprob: -17.68754005432129
    10. '   ' → logprob: -18.06254005432129

Token 555: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020254701375961304
    2. ' )' → logprob: -6.377025604248047
    3. ' in' → logprob: -8.127025604248047
    4. 'in' → logprob: -10.627025604248047
    5. '`)' → logprob: -14.502025604248047
    6. '   ' → logprob: -14.627025604248047
    7. '    ' → logprob: -14.752025604248047
    8. ']' → logprob: -15.627025604248047
    9. '）' → logprob: -15.627025604248047
    10. '")' → logprob: -15.627025604248047

Token 556: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03804963827133179
    2. 'in' → logprob: -3.2880496978759766
    3. ')' → logprob: -12.538049697875977
    4. ' ' → logprob: -13.538049697875977
    5. ' not' → logprob: -13.913049697875977
    6. 'not' → logprob: -14.663049697875977
    7. 'n' → logprob: -14.788049697875977
    8. '	in' → logprob: -14.913049697875977
    9. '[in' → logprob: -15.538049697875977
    10. 'In' → logprob: -15.913049697875977

Token 557: ' freq' (ID: 42078)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.014164102263748646
    2. ' freq' → logprob: -4.264163970947266
    3. '(freq' → logprob: -14.764163970947266
    4. 'frequency' → logprob: -16.389163970947266
    5. 'fre' → logprob: -17.014163970947266
    6. '           ' → logprob: -18.389163970947266
    7. '_freq' → logprob: -18.764163970947266
    8. ' frequency' → logprob: -18.764163970947266
    9. '.freq' → logprob: -18.889163970947266
    10. '
' → logprob: -20.264163970947266

Token 558: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -4.320199877838604e-07
    2. '_v' → logprob: -15.25
    3. 'map' → logprob: -16.0
    4. 'Map' → logprob: -17.125
    5. '_m' → logprob: -18.375
    6. 'v' → logprob: -19.0
    7. '_' → logprob: -19.125
    8. '_MAP' → logprob: -19.625
    9. '_Map' → logprob: -19.875
    10. ' map' → logprob: -20.5

Token 559: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -7.896309739408025e-07
    2. '_map' → logprob: -14.375000953674316
    3. 's' → logprob: -16.75
    4. '_' → logprob: -17.0
    5. '   ' → logprob: -17.75
    6. '	s' → logprob: -18.625
    7. '       ' → logprob: -18.875
    8. '           ' → logprob: -18.875
    9. 'map' → logprob: -19.0
    10. ' ' → logprob: -19.0

Token 560: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02897757850587368
    2. '_s' → logprob: -4.153977394104004
    3. '_map' → logprob: -4.778977394104004
    4. 'map' → logprob: -5.903977394104004
    5. 's' → logprob: -6.903977394104004
    6. 'ap' → logprob: -7.778977394104004
    7. '_' → logprob: -9.153977394104004
    8. '```' → logprob: -10.278977394104004
    9. 'p' → logprob: -10.403977394104004
    10. 'm' → logprob: -11.028977394104004

Token 561: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.006563556380569935
    2. ':' → logprob: -5.506563663482666
    3. 'and' → logprob: -6.381563663482666
    4. '           ' → logprob: -7.631563663482666
    5. ':
' → logprob: -8.506563186645508
    6. '            ' → logprob: -10.256563186645508
    7. '               ' → logprob: -10.381563186645508
    8. '          ' → logprob: -11.131563186645508
    9. '              ' → logprob: -12.381563186645508
    10. ' ' → logprob: -12.631563186645508

Token 562: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00039492646465077996
    2. ' return' → logprob: -8.125394821166992
    3. '           ' → logprob: -9.750394821166992
    4. 'return' → logprob: -11.125394821166992
    5. ' and' → logprob: -11.250394821166992
    6. '                
' → logprob: -13.000394821166992
    7. '              ' → logprob: -13.375394821166992
    8. '                   ' → logprob: -13.375394821166992
    9. ':' → logprob: -13.500394821166992
    10. ' if' → logprob: -13.875394821166992

Token 563: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0147384162992239
    2. ' return' → logprob: -4.7647385597229
    3. '               ' → logprob: -5.2647385597229
    4. '           ' → logprob: -7.1397385597229
    5. '                   ' → logprob: -9.014738082885742
    6. '
' → logprob: -12.014738082885742
    7. 'if' → logprob: -12.014738082885742
    8. '   ' → logprob: -12.389738082885742
    9. '	return' → logprob: -12.889738082885742
    10. '       ' → logprob: -14.639738082885742

Token 564: ' Because' (ID: 13602)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0010722271399572492
    2. '           ' → logprob: -7.626072406768799
    3. 'if' → logprob: -8.12607192993164
    4. '               ' → logprob: -8.62607192993164
    5. ' return' → logprob: -9.50107192993164
    6. '                   ' → logprob: -10.75107192993164
    7. 'for' → logprob: -12.25107192993164
    8. '   ' → logprob: -12.87607192993164
    9. '       ' → logprob: -12.87607192993164
    10. '#' → logprob: -13.12607192993164

Token 565: ' comparison' (ID: 19211)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3296232223510742
    2. 'return' → logprob: -1.4546232223510742
    3. '               ' → logprob: -3.954623222351074
    4. '           ' → logprob: -4.204623222351074
    5. ' True' → logprob: -5.329623222351074
    6. '                   ' → logprob: -5.579623222351074
    7. 'True' → logprob: -6.454623222351074
    8. 'self' → logprob: -6.954623222351074
    9. ' for' → logprob: -7.704623222351074
    10. ' self' → logprob: -7.704623222351074

Token 566: ' is' (ID: 382)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8838050961494446
    2. ':' → logprob: -1.6338050365447998
    3. 'and' → logprob: -1.6338050365447998
    4. '               ' → logprob: -2.7588050365448
    5. '=' → logprob: -3.7588050365448
    6. '                   ' → logprob: -3.8838050365448
    7. ' is' → logprob: -4.008805274963379
    8. ':
' → logprob: -4.258805274963379
    9. '==' → logprob: -4.508805274963379
    10. '=True' → logprob: -5.008805274963379

Token 567: ' by' (ID: 656)
  Prédit: 'exact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exact' → logprob: -0.5682651996612549
    2. 'based' → logprob: -1.3182651996612549
    3. ' based' → logprob: -3.068265199661255
    4. '           ' → logprob: -3.818265199661255
    5. 'self' → logprob: -4.443264961242676
    6. 'done' → logprob: -4.568264961242676
    7. 'frequency' → logprob: -4.568264961242676
    8. ' done' → logprob: -5.193264961242676
    9. ' frequency' → logprob: -5.318264961242676
    10. 'using' → logprob: -5.443264961242676

Token 568: ' frequency' (ID: 19813)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.24175822734832764
    2. 'tuple' → logprob: -2.241758346557617
    3. 'freq' → logprob: -3.491758346557617
    4. 'frequency' → logprob: -3.741758346557617
    5. 'return' → logprob: -3.991758346557617
    6. 'value' → logprob: -4.866758346557617
    7. 'True' → logprob: -4.991758346557617
    8. 'Frequency' → logprob: -5.491758346557617
    9. ' self' → logprob: -5.866758346557617
    10. 'vector' → logprob: -5.991758346557617

Token 569: ' tuples' (ID: 112464)
  Prédit: '_vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_vector' → logprob: -0.18835964798927307
    2. ' vector' → logprob: -2.8133597373962402
    3. '           ' → logprob: -3.5633597373962402
    4. '_' → logprob: -3.6883597373962402
    5. 'vector' → logprob: -4.06335973739624
    6. ',' → logprob: -4.43835973739624
    7. '               ' → logprob: -4.93835973739624
    8. ' and' → logprob: -5.31335973739624
    9. '_vectors' → logprob: -5.31335973739624
    10. ' vectors' → logprob: -5.68835973739624

Token 570: ' and' (ID: 326)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.25977227091789246
    2. ',' → logprob: -2.634772300720215
    3. ' and' → logprob: -2.759772300720215
    4. ':' → logprob: -3.384772300720215
    5. '                   ' → logprob: -3.509772300720215
    6. '           ' → logprob: -4.134772300720215
    7. ':
' → logprob: -4.884772300720215
    8. '
' → logprob: -5.759772300720215
    9. ',
' → logprob: -7.384772300720215
    10. ' return' → logprob: -7.759772300720215

Token 571: ' hashing' (ID: 185245)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.43602240085601807
    2. '               ' → logprob: -1.561022400856018
    3. 'not' → logprob: -3.0610222816467285
    4. ' not' → logprob: -3.0610222816467285
    5. 'True' → logprob: -4.0610222816467285
    6. ' self' → logprob: -4.6860222816467285
    7. 'return' → logprob: -5.0610222816467285
    8. ' True' → logprob: -5.1860222816467285
    9. '           ' → logprob: -5.3110222816467285
    10. '       ' → logprob: -5.8110222816467285

Token 572: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2967420220375061
    2. ',' → logprob: -1.4217419624328613
    3. ' and' → logprob: -5.421741962432861
    4. '                   ' → logprob: -5.796741962432861
    5. ':' → logprob: -6.421741962432861
    6. '           ' → logprob: -6.671741962432861
    7. ',
' → logprob: -6.796741962432861
    8. ' ,' → logprob: -6.921741962432861
    9. ' return' → logprob: -6.921741962432861
    10. ':
' → logprob: -7.046741962432861

Token 573: ' comparator' (ID: 96166)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7341049909591675
    2. ' return' → logprob: -0.7341049909591675
    3. 'return' → logprob: -3.734105110168457
    4. '                   ' → logprob: -4.484105110168457
    5. '           ' → logprob: -5.359105110168457
    6. '   ' → logprob: -9.109105110168457
    7. '       ' → logprob: -10.109105110168457
    8. '                ' → logprob: -10.609105110168457
    9. ' if' → logprob: -10.734105110168457
    10. '                       ' → logprob: -12.359105110168457

Token 574: ' check' (ID: 2371)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 575: ' is' (ID: 382)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06917238235473633
    2. ' is' → logprob: -2.9441723823547363
    3. '                   ' → logprob: -5.694172382354736
    4. '<|end|>' → logprob: -5.694172382354736
    5. ' may' → logprob: -7.319172382354736
    6. ' can' → logprob: -7.319172382354736
    7. '           ' → logprob: -7.444172382354736
    8. ',' → logprob: -7.569172382354736
    9. '                ' → logprob: -7.569172382354736
    10. ' and' → logprob: -7.694172382354736

Token 576: ' optional' (ID: 18297)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.2344668060541153
    2. 'not' → logprob: -2.609466791152954
    3. ' unnecessary' → logprob: -2.609466791152954
    4. '               ' → logprob: -3.859466791152954
    5. ' True' → logprob: -4.109467029571533
    6. ' redundant' → logprob: -4.484467029571533
    7. ' skipped' → logprob: -4.859467029571533
    8. '           ' → logprob: -5.734467029571533
    9. 'True' → logprob: -7.359467029571533
    10. 'redu' → logprob: -7.859467029571533

Token 577: ' here' (ID: 2105)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012751073576509953
    2. '
' → logprob: -5.38775110244751
    3. '           ' → logprob: -5.88775110244751
    4. ':' → logprob: -6.51275110244751
    5. ':
' → logprob: -7.13775110244751
    6. '                   ' → logprob: -7.51275110244751
    7. ',' → logprob: -7.63775110244751
    8. ' and' → logprob: -7.76275110244751
    9. '                
' → logprob: -7.76275110244751
    10. ' return' → logprob: -8.137750625610352

Token 578: ';
' (ID: 307)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011936628259718418
    2. ',' → logprob: -5.636936664581299
    3. ' and' → logprob: -6.261936664581299
    4. ':' → logprob: -6.386936664581299
    5. '.' → logprob: -6.511936664581299
    6. '           ' → logprob: -6.636936664581299
    7. ':
' → logprob: -7.261936664581299
    8. ' but' → logprob: -7.761936664581299
    9. ',
' → logprob: -8.51193618774414
    10. '                   ' → logprob: -8.76193618774414

Token 579: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001835825969465077
    2. '                ' → logprob: -6.876835823059082
    3. ' return' → logprob: -8.501835823059082
    4. '           ' → logprob: -8.501835823059082
    5. 'return' → logprob: -8.751835823059082
    6. '                
' → logprob: -9.501835823059082
    7. '       ' → logprob: -10.001835823059082
    8. '              ' → logprob: -10.501835823059082
    9. '            ' → logprob: -11.001835823059082
    10. '#' → logprob: -11.251835823059082

Token 580: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7675524950027466
    2. '#' (adapté à ' #') → logprob: -1.3925524950027466
    3. 'return' → logprob: -1.3925524950027466
    4. '           ' → logprob: -3.892552375793457
    5. ' return' → logprob: -4.517552375793457
    6. '       ' → logprob: -5.767552375793457
    7. 'if' → logprob: -5.767552375793457
    8. ' if' → logprob: -7.767552375793457
    9. 'continue' → logprob: -7.892552375793457
    10. ' #' → logprob: -8.017552375793457

Token 581: ' but' (ID: 889)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1034181118011475
    2. '           ' → logprob: -1.1034181118011475
    3. 'return' → logprob: -1.8534181118011475
    4. ' return' → logprob: -2.6034181118011475
    5. '               ' → logprob: -2.9784181118011475
    6. ' if' → logprob: -4.103418350219727
    7. '       ' → logprob: -4.478418350219727
    8. ' continue' → logprob: -4.853418350219727
    9. ' #' → logprob: -4.853418350219727
    10. 'continue' → logprob: -5.103418350219727

Token 582: ' left' (ID: 3561)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.14933644235134125
    2. '           ' → logprob: -2.524336338043213
    3. 'if' → logprob: -3.024336338043213
    4. '               ' → logprob: -5.149336338043213
    5. '#' → logprob: -5.774336338043213
    6. ' #' → logprob: -8.649336814880371
    7. ' the' → logprob: -8.649336814880371
    8. ' we' → logprob: -9.024336814880371
    9. ' continue' → logprob: -9.149336814880371
    10. '       ' → logprob: -9.274336814880371

Token 583: ' for' (ID: 395)
  Prédit: ' as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -1.114601731300354
    2. ' out' → logprob: -1.489601731300354
    3. ' for' → logprob: -1.864601731300354
    4. 'out' → logprob: -2.2396016120910645
    5. 'as' → logprob: -2.4896016120910645
    6. 'for' → logprob: -2.8646016120910645
    7. '               ' → logprob: -4.1146016120910645
    8. '           ' → logprob: -5.1146016120910645
    9. '       ' → logprob: -5.3646016120910645
    10. ':' → logprob: -5.3646016120910645

Token 584: ' extens' (ID: 34241)
  Prédit: 'clar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'clar' → logprob: -0.5490906238555908
    2. 'com' → logprob: -0.9240906238555908
    3. 'possible' → logprob: -4.799090385437012
    4. 'compat' → logprob: -4.924090385437012
    5. 'code' → logprob: -6.424090385437012
    6. ' clarity' → logprob: -6.424090385437012
    7. 'potential' → logprob: -6.424090385437012
    8. 'future' → logprob: -6.549090385437012
    9. 'ext' → logprob: -7.049090385437012
    10. ' completeness' → logprob: -7.299090385437012

Token 585: 'ibility' (ID: 4295)
  Prédit: 'ion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ion' → logprob: -0.359042227268219
    2. 'ibility' → logprob: -1.2340421676635742
    3. 'iveness' → logprob: -5.359042167663574
    4. 'ivity' → logprob: -6.234042167663574
    5. 'ions' → logprob: -6.609042167663574
    6. 'ive' → logprob: -6.859042167663574
    7. 'e' → logprob: -7.734042167663574
    8. 'ible' → logprob: -8.109042167663574
    9. 'ity' → logprob: -8.359042167663574
    10. 'ional' → logprob: -8.984042167663574

Token 586: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10015501827001572
    2. '           ' → logprob: -3.1001551151275635
    3. ',' → logprob: -3.8501551151275635
    4. ' and' → logprob: -4.725154876708984
    5. ':' → logprob: -4.850154876708984
    6. '.' → logprob: -4.975154876708984
    7. '<|end|>' → logprob: -6.350154876708984
    8. ':
' → logprob: -7.725154876708984
    9. '
' → logprob: -7.850154876708984
    10. ' to' → logprob: -7.850154876708984

Token 587: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.026392841711640358
    2. '           ' → logprob: -3.651392936706543
    3. '
' → logprob: -10.901392936706543
    4. '                
' → logprob: -11.026392936706543
    5. '                   ' → logprob: -11.526392936706543
    6. '            
' → logprob: -11.651392936706543
    7. ' if' → logprob: -11.776392936706543
    8. '       ' → logprob: -11.776392936706543
    9. ' return' → logprob: -11.901392936706543
    10. 'return' → logprob: -12.151392936706543

Token 588: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6748514771461487
    2. ' if' → logprob: -0.9248514771461487
    3. 'if' (adapté à ' if') → logprob: -2.799851417541504
    4. ' return' → logprob: -4.049851417541504
    5. 'return' → logprob: -4.549851417541504
    6. '               ' → logprob: -5.424851417541504
    7. '       ' → logprob: -7.299851417541504
    8. '   ' → logprob: -8.924851417541504
    9. ' ' → logprob: -10.174851417541504
    10. ' for' → logprob: -10.174851417541504

Token 589: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03806111589074135
    2. ' self' → logprob: -3.2880611419677734
    3. '               ' → logprob: -11.413061141967773
    4. '           ' → logprob: -12.413061141967773
    5. '(self' → logprob: -12.788061141967773
    6. '                   ' → logprob: -13.913061141967773
    7. '   ' → logprob: -14.913061141967773
    8. '	self' → logprob: -15.788061141967773
    9. ' ' → logprob: -16.788061141967773
    10. '[self' → logprob: -17.038061141967773

Token 590: '.com' (ID: 1136)
  Prédit: '.com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.com' → logprob: -6.432518421206623e-05
    2. '.' → logprob: -10.2500638961792
    3. 'com' → logprob: -11.8750638961792
    4. '   ' → logprob: -12.0000638961792
    5. '           ' → logprob: -12.2500638961792
    6. ' .' → logprob: -12.3750638961792
    7. '       ' → logprob: -13.5000638961792
    8. '.comp' → logprob: -13.7500638961792
    9. '<com' → logprob: -13.7500638961792
    10. ').' → logprob: -14.5000638961792

Token 591: 'parator' (ID: 13157)
  Prédit: 'parator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parator' → logprob: -0.0003978992172051221
    2. 'par' → logprob: -8.875397682189941
    3. 'pare' → logprob: -9.125397682189941
    4. 'PARATOR' → logprob: -10.000397682189941
    5. 'perator' → logprob: -10.500397682189941
    6. '               ' → logprob: -10.750397682189941
    7. 'operator' → logprob: -11.625397682189941
    8. 'parer' → logprob: -11.750397682189941
    9. '           ' → logprob: -11.750397682189941
    10. '       ' → logprob: -12.125397682189941

Token 592: '.are' (ID: 161599)
  Prédit: '.are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.are' → logprob: -1.3663626305060461e-05
    2. '.' → logprob: -11.25001335144043
    3. ' .' → logprob: -15.12501335144043
    4. '.Are' → logprob: -15.75001335144043
    5. '.and' → logprob: -16.12501335144043
    6. 'are' → logprob: -17.00001335144043
    7. '.can' → logprob: -17.50001335144043
    8. '.is' → logprob: -18.50001335144043
    9. ').' → logprob: -19.37501335144043
    10. '.have' → logprob: -19.62501335144043

Token 593: '_an' (ID: 47921)
  Prédit: '_an'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_an' → logprob: -5.200166469876422e-06
    2. 'an' → logprob: -12.250004768371582
    3. '_' → logprob: -15.375004768371582
    4. '	an' → logprob: -16.6250057220459
    5. '_are' → logprob: -16.8750057220459
    6. ' an' → logprob: -17.7500057220459
    7. '_a' → logprob: -18.5000057220459
    8. '```' → logprob: -18.8750057220459
    9. '_ant' → logprob: -19.1250057220459
    10. '(an' → logprob: -19.1250057220459

Token 594: 'agrams' (ID: 54218)
  Prédit: 'agrams'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agrams' → logprob: -4.334533878136426e-05
    2. 'agram' → logprob: -10.875042915344238
    3. 'a' → logprob: -11.500042915344238
    4. 'grams' → logprob: -12.000042915344238
    5. '(v' → logprob: -13.375042915344238
    6. '[' → logprob: -14.000042915344238
    7. '(' → logprob: -14.000042915344238
    8. '```' → logprob: -14.125042915344238
    9. 'agr' → logprob: -14.375042915344238
    10. 'ags' → logprob: -15.000042915344238

Token 595: '(freq' (ID: 157195)
  Prédit: '(freq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(freq' → logprob: -0.4796399474143982
    2. '(tuple' → logprob: -0.9796399474143982
    3. ' (' → logprob: -5.354640007019043
    4. '(' → logprob: -7.229640007019043
    5. '(t' → logprob: -10.104640007019043
    6. '((' → logprob: -10.729640007019043
    7. '(list' → logprob: -11.979640007019043
    8. '           ' → logprob: -12.354640007019043
    9. '(
' → logprob: -12.354640007019043
    10. '               ' → logprob: -12.604640007019043

Token 596: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.03012012504041195
    2. '_map' → logprob: -3.5301201343536377
    3. 'v' → logprob: -8.155119895935059
    4. '_freq' → logprob: -10.905119895935059
    5. 'map' → logprob: -11.280119895935059
    6. '_tuple' → logprob: -11.405119895935059
    7. '           ' → logprob: -12.030119895935059
    8. '       ' → logprob: -12.155119895935059
    9. 'tuple' → logprob: -12.655119895935059
    10. 'freq' → logprob: -12.780119895935059

Token 597: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.029909120872616768
    2. 'v' → logprob: -4.779909133911133
    3. '_v' → logprob: -4.779909133911133
    4. '_map' → logprob: -4.779909133911133
    5. '1' → logprob: -6.529909133911133
    6. 's' → logprob: -7.654909133911133
    7. 'tuple' → logprob: -7.654909133911133
    8. '(tuple' → logprob: -7.654909133911133
    9. 'map' → logprob: -8.154909133911133
    10. '[' → logprob: -8.904909133911133

Token 598: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002747576916590333
    2. ' ,' → logprob: -6.377747535705566
    3. 'tuple' → logprob: -7.752747535705566
    4. ' tuple' → logprob: -8.252747535705566
    5. 'freq' → logprob: -9.252747535705566
    6. '               ' → logprob: -10.002747535705566
    7. ',
' → logprob: -10.127747535705566
    8. ',f' → logprob: -10.127747535705566
    9. '           ' → logprob: -10.127747535705566
    10. '(tuple' → logprob: -11.002747535705566

Token 599: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.577122151851654
    2. 'freq' → logprob: -0.827122151851654
    3. 'tuple' → logprob: -8.32712173461914
    4. '[' → logprob: -8.57712173461914
    5. ' list' → logprob: -8.70212173461914
    6. '[list' → logprob: -8.95212173461914
    7. '(freq' → logprob: -9.32712173461914
    8. ' freq' → logprob: -9.45212173461914
    9. 'v' → logprob: -9.82712173461914
    10. '                           ' → logprob: -10.57712173461914

Token 600: '(freq' (ID: 157195)
  Prédit: '(freq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(freq' → logprob: -0.015155312605202198
    2. '(tuple' → logprob: -4.26515531539917
    3. '(' → logprob: -7.89015531539917
    4. '())' → logprob: -8.765154838562012
    5. '(t' → logprob: -9.015154838562012
    6. 'freq' → logprob: -9.265154838562012
    7. '()' → logprob: -9.890154838562012
    8. ')' → logprob: -10.390154838562012
    9. '(self' → logprob: -11.140154838562012
    10. '(dict' → logprob: -11.265154838562012

Token 601: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.09940443187952042
    2. '(freq' → logprob: -3.0994043350219727
    3. 'freq' → logprob: -3.2244043350219727
    4. '_freq' → logprob: -5.224404335021973
    5. 'v' → logprob: -5.724404335021973
    6. ')' → logprob: -8.724404335021973
    7. '))' → logprob: -9.474404335021973
    8. '(v' → logprob: -9.599404335021973
    9. 'tuple' → logprob: -9.599404335021973
    10. '[' → logprob: -9.599404335021973

Token 602: '2' (ID: 17)
  Prédit: '_v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.0019818067084997892
    2. '2' → logprob: -6.501981735229492
    3. '_s' → logprob: -8.751981735229492
    4. 'v' → logprob: -9.126981735229492
    5. ')' → logprob: -9.501981735229492
    6. '_map' → logprob: -10.376981735229492
    7. 's' → logprob: -10.626981735229492
    8. 'map' → logprob: -10.751981735229492
    9. '_t' → logprob: -10.876981735229492
    10. 'ctor' → logprob: -11.501981735229492

Token 603: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.2502976655960083
    2. ')):
' → logprob: -1.7502976655960083
    3. '))' → logprob: -3.1252975463867188
    4. ')):
' → logprob: -6.000297546386719
    5. '               ' → logprob: -7.500297546386719
    6. '           ' → logprob: -8.250297546386719
    7. '()))' → logprob: -9.000297546386719
    8. '       ' → logprob: -9.250297546386719
    9. '):' → logprob: -9.625297546386719
    10. ':' → logprob: -10.125297546386719

Token 604: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.014780356548726559
    2. '               ' → logprob: -4.514780521392822
    3. ' return' → logprob: -6.764780521392822
    4. '                       ' → logprob: -7.014780521392822
    5. 'return' → logprob: -7.264780521392822
    6. ':
' → logprob: -8.014780044555664
    7. '):
' → logprob: -8.389780044555664
    8. ':' → logprob: -8.639780044555664
    9. '
' → logprob: -9.514780044555664
    10. '):' → logprob: -10.139780044555664

Token 605: ' return' (ID: 622)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2715243995189667
    2. 'return' (adapté à ' return') → logprob: -2.021524429321289
    3. '               ' → logprob: -2.521524429321289
    4. '                       ' → logprob: -3.771524429321289
    5. ' return' → logprob: -6.271524429321289
    6. '
' → logprob: -9.771524429321289
    7. '           ' → logprob: -11.521524429321289
    8. '       ' → logprob: -11.771524429321289
    9. '   ' → logprob: -12.771524429321289
    10. '                    
' → logprob: -13.146524429321289

Token 606: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0011709370883181691
    2. ' True' → logprob: -6.751171112060547
    3. '               ' → logprob: -14.876171112060547
    4. '                   ' → logprob: -14.876171112060547
    5. '                       ' → logprob: -18.251171112060547
    6. '           ' → logprob: -18.751171112060547
    7. '(True' → logprob: -20.126171112060547
    8. 'true' → logprob: -20.751171112060547
    9. '=True' → logprob: -21.126171112060547
    10. '                           ' → logprob: -21.501171112060547

Token 607: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011120215989649296
    2. '
' → logprob: -4.886120319366455
    3. '        
' → logprob: -6.761120319366455
    4. '<|end|>' → logprob: -6.761120319366455
    5. '        ' → logprob: -8.386119842529297
    6. '               ' → logprob: -8.511119842529297
    7. 'return' → logprob: -8.636119842529297
    8. '           ' → logprob: -8.761119842529297
    9. '  
' → logprob: -9.636119842529297
    10. '    
' → logprob: -10.136119842529297

Token 608: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024549704045057297
    2. '        
' → logprob: -4.64954948425293
    3. '
' → logprob: -5.14954948425293
    4. '        ' → logprob: -6.14954948425293
    5. 'return' → logprob: -6.27454948425293
    6. '<|end|>' → logprob: -7.14954948425293
    7. ' return' → logprob: -7.27454948425293
    8. '	' → logprob: -7.64954948425293
    9. '```' → logprob: -7.77454948425293
    10. '               ' → logprob: -8.02454948425293

Token 609: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000340945553034544
    2. '
' → logprob: -9.125341415405273
    3. '        
' → logprob: -9.375341415405273
    4. 'return' (adapté à ' return') → logprob: -10.250341415405273
    5. '   ' → logprob: -10.250341415405273
    6. '	' → logprob: -11.000341415405273
    7. '    ' → logprob: -11.625341415405273
    8. '      ' → logprob: -12.000341415405273
    9. '               ' → logprob: -12.250341415405273
    10. '' → logprob: -12.500341415405273

Token 610: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.011047814972698689
    2. ' False' → logprob: -4.511047840118408
    3. '(False' → logprob: -19.38604736328125
    4. 'false' → logprob: -21.76104736328125
    5. '=False' → logprob: -21.88604736328125
    6. '_false' → logprob: -22.76104736328125
    7. '   ' → logprob: -23.76104736328125
    8. 'True' → logprob: -24.63604736328125
    9. '.False' → logprob: -24.63604736328125
    10. ' false' → logprob: -25.63604736328125

Token 611: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 612: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30687469244003296
    2. '<|end|>' → logprob: -1.5568747520446777
    3. ')' → logprob: -3.4318747520446777
    4. ' ' → logprob: -4.931874752044678
    5. '_' → logprob: -5.056874752044678
    6. '       ' → logprob: -6.181874752044678
    7. '<|end|>' → logprob: -6.931874752044678
    8. '
' → logprob: -6.931874752044678
    9. '    ' → logprob: -7.931874752044678
    10. ',' → logprob: -7.931874752044678

Token 613: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2600652873516083
    2. 'def' (adapté à ' def') → logprob: -1.5100653171539307
    3. '
' → logprob: -5.010065078735352
    4. ' def' → logprob: -6.885065078735352
    5. '    
' → logprob: -8.385065078735352
    6. '<|end|>' → logprob: -9.135065078735352
    7. '

' → logprob: -10.510065078735352
    8. '	def' → logprob: -11.385065078735352
    9. ' ' → logprob: -11.760065078735352
    10. '```' → logprob: -12.135065078735352

Token 614: ' longest' (ID: 37511)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.12629644572734833
    2. 'find' → logprob: -2.7512965202331543
    3. ' can' → logprob: -3.2512965202331543
    4. 'can' → logprob: -4.501296520233154
    5. ' longest' → logprob: -6.501296520233154
    6. ' hidden' → logprob: -6.751296520233154
    7. 'max' → logprob: -7.126296520233154
    8. ' max' → logprob: -7.376296520233154
    9. '_find' → logprob: -7.626296520233154
    10. '_can' → logprob: -8.876296043395996

Token 615: '_hidden' (ID: 62109)
  Prédit: '_hidden'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hidden' → logprob: -0.004557461477816105
    2. '_common' → logprob: -5.6295576095581055
    3. '_an' → logprob: -8.129557609558105
    4. '_' → logprob: -8.254557609558105
    5. '_sub' → logprob: -8.879557609558105
    6. '_possible' → logprob: -9.379557609558105
    7. '_length' → logprob: -10.004557609558105
    8. '_prefix' → logprob: -10.379557609558105
    9. '_matching' → logprob: -10.754557609558105
    10. '_visible' → logprob: -11.379557609558105

Token 616: '_an' (ID: 47921)
  Prédit: '_an'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_an' → logprob: -0.0001984146365430206
    2. '_' → logprob: -8.625198364257812
    3. '_hidden' → logprob: -12.000198364257812
    4. 'an' → logprob: -13.625198364257812
    5. '_sub' → logprob: -13.875198364257812
    6. '```' → logprob: -13.875198364257812
    7. ' _' → logprob: -14.250198364257812
    8. '_answer' → logprob: -14.500198364257812
    9. '_pal' → logprob: -14.500198364257812
    10. '_possible' → logprob: -14.625198364257812

Token 617: 'agram' (ID: 7632)
  Prédit: 'agram'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agram' → logprob: -0.0004456852038856596
    2. 'gram' → logprob: -7.87544584274292
    3. 'a' → logprob: -10.875445365905762
    4. '_' → logprob: -11.000445365905762
    5. 'igram' → logprob: -12.250445365905762
    6. 'agrams' → logprob: -12.500445365905762
    7. '(' → logprob: -12.750445365905762
    8. 'am' → logprob: -13.000445365905762
    9. 'ogram' → logprob: -13.375445365905762
    10. '```' → logprob: -13.375445365905762

Token 618: '_length' (ID: 11514)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06695284694433212
    2. '_length' → logprob: -3.44195294380188
    3. '_of' → logprob: -3.44195294380188
    4. '(' → logprob: -7.566952705383301
    5. '_' → logprob: -9.5669527053833
    6. '_(' → logprob: -10.1919527053833
    7. '   ' → logprob: -10.4419527053833
    8. '(
' → logprob: -11.3169527053833
    9. '_found' → logprob: -11.3169527053833
    10. 'self' → logprob: -11.4419527053833

Token 619: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0052495296113193035
    2. '(' → logprob: -5.255249500274658
    3. ' (' → logprob: -11.255249977111816
    4. '(
' → logprob: -13.255249977111816
    5. '_(' → logprob: -14.755249977111816
    6. '   ' → logprob: -15.380249977111816
    7. '(s' → logprob: -15.755249977111816
    8. '_' → logprob: -16.1302490234375
    9. 'self' → logprob: -16.3802490234375
    10. '(Self' → logprob: -16.5052490234375

Token 620: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4514196813106537
    2. '(self' → logprob: -1.826419711112976
    3. ',' → logprob: -1.951419711112976
    4. '):' → logprob: -2.9514195919036865
    5. 'self' → logprob: -5.951419830322266
    6. '   ' → logprob: -6.076419830322266
    7. '):
' → logprob: -6.826419830322266
    8. ')(' → logprob: -7.326419830322266
    9. ')->' → logprob: -7.826419830322266
    10. '       ' → logprob: -8.701419830322266

Token 621: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0013352400856092572
    2. '(' → logprob: -6.626335144042969
    3. '(
' → logprob: -12.626335144042969
    4. 'self' → logprob: -13.251335144042969
    5. '   ' → logprob: -14.251335144042969
    6. ':' → logprob: -14.251335144042969
    7. '_' → logprob: -14.376335144042969
    8. '(s' → logprob: -14.501335144042969
    9. '_(' → logprob: -14.501335144042969
    10. ' (' → logprob: -14.626335144042969

Token 622: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5759449005126953
    2. 'int' → logprob: -0.8259449005126953
    3. '(int' → logprob: -12.200944900512695
    4. '   ' → logprob: -15.700944900512695
    5. ' def' → logprob: -16.325944900512695
    6. ' ' → logprob: -16.825944900512695
    7. ' (' → logprob: -17.075944900512695
    8. '[int' → logprob: -17.200944900512695
    9. ':int' → logprob: -17.700944900512695
    10. 'def' → logprob: -18.075944900512695

Token 623: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0548897311091423
    2. '       ' → logprob: -3.429889678955078
    3. '(
' → logprob: -4.429889678955078
    4. '(' → logprob: -4.804889678955078
    5. '   ' → logprob: -7.554889678955078
    6. ':
' → logprob: -8.554889678955078
    7. ':' → logprob: -8.929889678955078
    8. 'self' → logprob: -10.554889678955078
    9. '(s' → logprob: -11.679889678955078
    10. '):
' → logprob: -11.804889678955078

Token 624: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005675682332366705
    2. '```' → logprob: -8.125567436218262
    3. '   ' → logprob: -8.750567436218262
    4. 'left' → logprob: -9.500567436218262
    5. 'n' → logprob: -11.125567436218262
    6. ' left' → logprob: -11.500567436218262
    7. '
' → logprob: -12.750567436218262
    8. ',' → logprob: -12.750567436218262
    9. 'low' → logprob: -13.125567436218262
    10. 'start' → logprob: -13.875567436218262

Token 625: ' low' (ID: 4465)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.4775763154029846
    2. 'low' (adapté à ' low') → logprob: -0.9775763154029846
    3. ' left' → logprob: -6.22757625579834
    4. '       ' → logprob: -7.47757625579834
    5. ' low' → logprob: -7.47757625579834
    6. 'lo' → logprob: -7.97757625579834
    7. ' lo' → logprob: -10.72757625579834
    8. 'l' → logprob: -11.72757625579834
    9. '   ' → logprob: -11.85257625579834
    10. '```' → logprob: -11.97757625579834

Token 626: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2373255342245102
    2. '=' → logprob: -1.9873255491256714
    3. ',' → logprob: -2.612325429916382
    4. ' ,' → logprob: -7.112325668334961
    5. ' ' → logprob: -10.987325668334961
    6. ',
' → logprob: -12.862325668334961
    7. ' =
' → logprob: -13.362325668334961
    8. '<|end|>' → logprob: -13.612325668334961
    9. ')' → logprob: -13.987325668334961
    10. '       ' → logprob: -14.862325668334961

Token 627: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.749814019713085e-06
    2. ' ' → logprob: -12.000006675720215
    3. '1' → logprob: -14.375006675720215
    4. '۰' → logprob: -19.12500762939453
    5. '=' → logprob: -19.75000762939453
    6. '```' → logprob: -19.87500762939453
    7. '   ' → logprob: -20.50000762939453
    8. '
' → logprob: -20.87500762939453
    9. '       ' → logprob: -21.56250762939453
    10. '00' → logprob: -22.62500762939453

Token 628: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. '1' → logprob: -15.625
    3. ' ' → logprob: -18.125
    4. '```' → logprob: -20.625
    5. '۰' → logprob: -20.75
    6. '=' → logprob: -20.75
    7. '   ' → logprob: -21.125
    8. '
' → logprob: -22.0
    9. '00' → logprob: -22.75
    10. '０' → logprob: -22.75

Token 629: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.021505039185285568
    2. '       ' → logprob: -3.896505117416382
    3. ',
' → logprob: -8.146505355834961
    4. '        
' → logprob: -8.646505355834961
    5. ',' → logprob: -8.896505355834961
    6. '<|end|>' → logprob: -9.396505355834961
    7. ' 
' → logprob: -9.771505355834961
    8. '```' → logprob: -10.021505355834961
    9. '
' → logprob: -10.271505355834961
    10. '  
' → logprob: -10.271505355834961

Token 630: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6010982394218445
    2. '       ' → logprob: -0.8510982394218445
    3. ',' → logprob: -5.10109806060791
    4. 'high' → logprob: -5.22609806060791
    5. ' high' → logprob: -5.35109806060791
    6. ',
' → logprob: -5.60109806060791
    7. '        
' → logprob: -6.60109806060791
    8. ' 
' → logprob: -6.97609806060791
    9. '```' → logprob: -7.22609806060791
    10. '(high' → logprob: -7.85109806060791

Token 631: ' high' (ID: 1932)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' (adapté à ' high') → logprob: -0.25219711661338806
    2. ' high' → logprob: -1.5021971464157104
    3. 'min' → logprob: -8.377197265625
    4. ' min' → logprob: -10.252197265625
    5. '       ' → logprob: -13.877197265625
    6. 'High' → logprob: -14.252197265625
    7. 'hi' → logprob: -15.127197265625
    8. '.high' → logprob: -15.252197265625
    9. '_high' → logprob: -15.752197265625
    10. 'up' → logprob: -16.002197265625

Token 632: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014164448715746403
    2. '=' → logprob: -4.264164447784424
    3. '=self' → logprob: -15.014164924621582
    4. ' =
' → logprob: -15.264164924621582
    5. ' ' → logprob: -15.514164924621582
    6. '=len' → logprob: -16.264163970947266
    7. ',' → logprob: -16.889163970947266
    8. '=
' → logprob: -18.014163970947266
    9. '   ' → logprob: -18.889163970947266
    10. '    ' → logprob: -19.264163970947266

Token 633: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.030059514567255974
    2. ' min' → logprob: -3.530059576034546
    3. 'self' → logprob: -8.155059814453125
    4. ' self' → logprob: -11.280059814453125
    5. 'max' → logprob: -12.405059814453125
    6. '	min' → logprob: -13.030059814453125
    7. '   ' → logprob: -13.155059814453125
    8. '       ' → logprob: -14.780059814453125
    9. '(min' → logprob: -16.030059814453125
    10. '=min' → logprob: -16.280059814453125

Token 634: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.676981345459353e-06
    2. '(
' → logprob: -12.750005722045898
    3. '(' → logprob: -12.875005722045898
    4. '(len' → logprob: -16.3750057220459
    5. 'self' → logprob: -18.0000057220459
    6. '((' → logprob: -19.8750057220459
    7. '(this' → logprob: -20.8750057220459
    8. '(

' → logprob: -20.8750057220459
    9. ' (' → logprob: -21.7500057220459
    10. '(s' → logprob: -22.1250057220459

Token 635: '.s' (ID: 640)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.21710187196731567
    2. '.s' → logprob: -1.717101812362671
    3. '(' → logprob: -4.84210205078125
    4. '.length' → logprob: -5.96710205078125
    5. 'self' → logprob: -6.09210205078125
    6. '.' → logprob: -7.09210205078125
    7. '(
' → logprob: -7.46710205078125
    8. '(s' → logprob: -7.71710205078125
    9. '(len' → logprob: -8.34210205078125
    10. '.len' → logprob: -8.46710205078125

Token 636: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. '.s' → logprob: -11.750015258789062
    3. '2' → logprob: -13.250015258789062
    4. '._' → logprob: -13.500015258789062
    5. '_' → logprob: -14.125015258789062
    6. 's' → logprob: -14.125015258789062
    7. '(' → logprob: -14.750015258789062
    8. '```' → logprob: -14.750015258789062
    9. '.length' → logprob: -15.000015258789062
    10. '.' → logprob: -15.000015258789062

Token 637: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.0009264685213565826
    2. '().' → logprob: -7.000926494598389
    3. ').' → logprob: -11.75092601776123
    4. ')' → logprob: -13.12592601776123
    5. ' .' → logprob: -13.25092601776123
    6. 'length' → logprob: -13.37592601776123
    7. '.' → logprob: -13.75092601776123
    8. '()' → logprob: -15.75092601776123
    9. ' length' → logprob: -15.87592601776123
    10. '.len' → logprob: -16.750926971435547

Token 638: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -8.661626634420827e-05
    2. '()' → logprob: -9.375086784362793
    3. '(),
' → logprob: -14.000086784362793
    4. '()
' → logprob: -15.125086784362793
    5. ' (),' → logprob: -15.250086784362793
    6. '(' → logprob: -15.500086784362793
    7. '(),

' → logprob: -16.250085830688477
    8. ',' → logprob: -16.625085830688477
    9. '(),"' → logprob: -18.375085830688477
    10. '()},' → logprob: -18.500085830688477

Token 639: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2519303858280182
    2. ' self' → logprob: -1.5019303560256958
    3. '       ' → logprob: -13.876930236816406
    4. '(self' → logprob: -16.001930236816406
    5. '	self' → logprob: -16.251930236816406
    6. '=self' → logprob: -17.126930236816406
    7. 's' → logprob: -17.501930236816406
    8. '
' → logprob: -18.376930236816406
    9. '[self' → logprob: -18.376930236816406
    10. ' ' → logprob: -18.376930236816406

Token 640: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.0006945623317733407
    2. 's' → logprob: -7.375694751739502
    3. '.' → logprob: -9.625694274902344
    4. '2' → logprob: -13.625694274902344
    5. ' s' → logprob: -14.875694274902344
    6. ' .' → logprob: -15.375694274902344
    7. '_s' → logprob: -15.750694274902344
    8. '   ' → logprob: -18.000694274902344
    9. '	s' → logprob: -18.375694274902344
    10. '._' → logprob: -18.500694274902344

Token 641: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00031139038037508726
    2. '.length' → logprob: -8.625311851501465
    3. '1' → logprob: -10.000311851501465
    4. '.' → logprob: -10.250311851501465
    5. 'length' → logprob: -10.750311851501465
    6. '.s' → logprob: -11.000311851501465
    7. 's' → logprob: -12.625311851501465
    8. '._' → logprob: -13.375311851501465
    9. ' ' → logprob: -13.500311851501465
    10. '().' → logprob: -13.625311851501465

Token 642: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.0015566397923976183
    2. '().' → logprob: -6.501556873321533
    3. '.' → logprob: -10.126556396484375
    4. ' .' → logprob: -11.501556396484375
    5. ').' → logprob: -13.501556396484375
    6. ')' → logprob: -13.626556396484375
    7. 'length' → logprob: -13.876556396484375
    8. '()' → logprob: -16.001556396484375
    9. '.height' → logprob: -16.251556396484375
    10. ' length' → logprob: -16.751556396484375

Token 643: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.058774761855602264
    2. '())' → logprob: -2.933774709701538
    3. '()' → logprob: -5.683774948120117
    4. ')
' → logprob: -8.183774948120117
    5. '())
' → logprob: -9.433774948120117
    6. ' )' → logprob: -9.558774948120117
    7. '       ' → logprob: -10.558774948120117
    8. '   ' → logprob: -11.808774948120117
    9. ')+' → logprob: -11.808774948120117
    10. '()
' → logprob: -12.433774948120117

Token 644: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4562729597091675
    2. '       ' → logprob: -1.0812729597091675
    3. '        
' → logprob: -4.456273078918457
    4. '  
' → logprob: -5.581273078918457
    5. '    
' → logprob: -5.706273078918457
    6. '<|end|>' → logprob: -5.956273078918457
    7. '   ' → logprob: -6.956273078918457
    8. ' 
' → logprob: -6.956273078918457
    9. ',' → logprob: -7.081273078918457
    10. '```' → logprob: -7.331273078918457

Token 645: ' best' (ID: 1636)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10745028406381607
    2. ' while' → logprob: -3.232450246810913
    3. 'while' → logprob: -3.357450246810913
    4. '       ' → logprob: -3.982450246810913
    5. ' 
' → logprob: -5.232450485229492
    6. '```' → logprob: -6.857450485229492
    7. '        
' → logprob: -6.982450485229492
    8. '   ' → logprob: -7.357450485229492
    9. '\n' → logprob: -8.232450485229492
    10. '    
' → logprob: -8.232450485229492

Token 646: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16351240873336792
    2. '=' → logprob: -1.9135124683380127
    3. '_' → logprob: -5.788512229919434
    4. ' ' → logprob: -8.538512229919434
    5. '_length' → logprob: -10.788512229919434
    6. ' _' → logprob: -13.913512229919434
    7. '_len' → logprob: -14.788512229919434
    8. ':' → logprob: -14.913512229919434
    9. '_=' → logprob: -15.163512229919434
    10. '	' → logprob: -15.538512229919434

Token 647: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. 'low' → logprob: -18.000051498413086
    4. '   ' → logprob: -18.625051498413086
    5. '       ' → logprob: -19.375051498413086
    6. '-' → logprob: -19.625051498413086
    7. '```' → logprob: -19.625051498413086
    8. '=' → logprob: -19.750051498413086
    9. '
' → logprob: -20.000051498413086
    10. '۰' → logprob: -20.312551498413086

Token 648: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.625000953674316
    3. 'low' → logprob: -15.375000953674316
    4. '۰' → logprob: -18.375
    5. '-' → logprob: -19.3125
    6. '=' → logprob: -19.5
    7. '   ' → logprob: -19.5625
    8. '00' → logprob: -19.6875
    9. '```' → logprob: -19.8125
    10. '０' → logprob: -20.0

Token 649: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.016308369114995003
    2. '       ' → logprob: -4.391308307647705
    3. '    
' → logprob: -7.266308307647705
    4. '        
' → logprob: -7.266308307647705
    5. ' 
' → logprob: -7.391308307647705
    6. '  
' → logprob: -7.516308307647705
    7. '\n' → logprob: -8.016308784484863
    8. '	
' → logprob: -8.516308784484863
    9. '   ' → logprob: -8.641308784484863
    10. '<|end|>' → logprob: -8.891308784484863

Token 650: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26105833053588867
    2. '
' → logprob: -1.6360583305358887
    3. ' 
' → logprob: -5.011058330535889
    4. '  
' → logprob: -5.011058330535889
    5. '        
' → logprob: -5.136058330535889
    6. '    
' → logprob: -5.386058330535889
    7. '   ' → logprob: -5.636058330535889
    8. '```' → logprob: -6.136058330535889
    9. '' → logprob: -6.636058330535889
    10. '<|end|>' → logprob: -6.761058330535889

Token 651: ' while' (ID: 2049)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0943717509508133
    2. 'while' (adapté à ' while') → logprob: -2.594371795654297
    3. '       ' → logprob: -4.719371795654297
    4. ' while' → logprob: -5.219371795654297
    5. ' 
' → logprob: -7.469371795654297
    6. '        
' → logprob: -8.344371795654297
    7. '   ' → logprob: -9.844371795654297
    8. '  
' → logprob: -10.094371795654297
    9. '```' → logprob: -10.094371795654297
    10. '	while' → logprob: -10.219371795654297

Token 652: ' low' (ID: 4465)
  Prédit: ' low'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' low' → logprob: -0.04858941584825516
    2. 'low' → logprob: -3.0485894680023193
    3. '(low' → logprob: -13.173589706420898
    4. ' ' → logprob: -16.9235897064209
    5. '_low' → logprob: -17.7985897064209
    6. ' ' → logprob: -17.9235897064209
    7. 'Low' → logprob: -18.5485897064209
    8. '   ' → logprob: -18.5485897064209
    9. '低' → logprob: -19.6735897064209
    10. '.low' → logprob: -20.4235897064209

Token 653: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.0031888822559267282
    2. '<=' → logprob: -6.0031890869140625
    3. ' <' → logprob: -7.2531890869140625
    4. '<' → logprob: -13.128189086914062
    5. ' ' → logprob: -13.878189086914062
    6. ' ≤' → logprob: -14.003189086914062
    7. ' ' → logprob: -14.253189086914062
    8. '<|end|>' → logprob: -15.128189086914062
    9. '	' → logprob: -16.503189086914062
    10. ')<=' → logprob: -16.628189086914062

Token 654: ' high' (ID: 1932)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' → logprob: -0.03804241120815277
    2. ' high' → logprob: -3.2880423069000244
    3. '(high' → logprob: -14.038042068481445
    4. '_high' → logprob: -16.163042068481445
    5. '.high' → logprob: -16.913042068481445
    6. 'High' → logprob: -17.288042068481445
    7. ' ' → logprob: -17.663042068481445
    8. '/high' → logprob: -18.413042068481445
    9. '
' → logprob: -19.163042068481445
    10. '高' → logprob: -19.788042068481445

Token 655: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08896302431821823
    2. ':
' → logprob: -2.463963031768799
    3. '       ' → logprob: -11.96396255493164
    4. ',' → logprob: -12.46396255493164
    5. '           ' → logprob: -12.71396255493164
    6. '):
' → logprob: -13.08896255493164
    7. ':

' → logprob: -13.21396255493164
    8. '<|end|>' → logprob: -13.46396255493164
    9. ':
' → logprob: -13.96396255493164
    10. ' :' → logprob: -14.08896255493164

Token 656: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08454626053571701
    2. '
' → logprob: -2.7095463275909424
    3. ' 
' → logprob: -5.209546089172363
    4. '       ' → logprob: -6.084546089172363
    5. '            
' → logprob: -6.834546089172363
    6. '    
' → logprob: -7.084546089172363
    7. ' ' → logprob: -7.209546089172363
    8. '   ' → logprob: -7.209546089172363
    9. '  
' → logprob: -7.459546089172363
    10. '	       ' → logprob: -7.709546089172363

Token 657: ' mid' (ID: 6959)
  Prédit: ' mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.07125343382358551
    2. 'mid' (adapté à ' mid') → logprob: -2.696253538131714
    3. '           ' → logprob: -7.071253299713135
    4. '
' → logprob: -8.821253776550293
    5. ' midpoint' → logprob: -9.446253776550293
    6. ' middle' → logprob: -9.696253776550293
    7. ' 
' → logprob: -9.821253776550293
    8. '   ' → logprob: -10.696253776550293
    9. '[mid' → logprob: -10.696253776550293
    10. 'm' → logprob: -10.821253776550293

Token 658: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9276289343833923
    2. '=' → logprob: -1.052628993988037
    3. '<|end|>' → logprob: -1.427628993988037
    4. '<|end|>' → logprob: -4.802628993988037
    5. ')' → logprob: -5.677628993988037
    6. ' ' → logprob: -6.552628993988037
    7. ':' → logprob: -6.677628993988037
    8. ',' → logprob: -7.802628993988037
    9. '           ' → logprob: -9.052628517150879
    10. ' <<=' → logprob: -9.740128517150879

Token 659: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6931648850440979
    2. '(low' → logprob: -0.6931648850440979
    3. ' low' → logprob: -11.443164825439453
    4. '(high' → logprob: -12.818164825439453
    5. ' ' → logprob: -13.693164825439453
    6. 'low' → logprob: -13.943164825439453
    7. '(lower' → logprob: -14.568164825439453
    8. '   ' → logprob: -14.693164825439453
    9. '(l' → logprob: -14.693164825439453
    10. '(left' → logprob: -15.318164825439453

Token 660: 'low' (ID: 14739)
  Prédit: 'low'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.0001234428636962548
    2. ' low' → logprob: -9.000123023986816
    3. '(low' → logprob: -17.000123977661133
    4. ' ' → logprob: -20.750123977661133
    5. '_low' → logprob: -21.250123977661133
    6. '   ' → logprob: -21.250123977661133
    7. '.low' → logprob: -21.750123977661133
    8. '
' → logprob: -22.375123977661133
    9. 'Low' → logprob: -22.500123977661133
    10. 'high' → logprob: -23.000123977661133

Token 661: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.014163747429847717
    2. '+' → logprob: -4.264163970947266
    3. ' +
' → logprob: -16.264163970947266
    4. ' ' → logprob: -16.889163970947266
    5. ')' → logprob: -17.889163970947266
    6. ' ' → logprob: -17.889163970947266
    7. '```' → logprob: -19.389163970947266
    8. '+
' → logprob: -19.764163970947266
    9. '[' → logprob: -20.014163970947266
    10. '	' → logprob: -20.264163970947266

Token 662: ' high' (ID: 1932)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' → logprob: -0.12693126499652863
    2. ' high' → logprob: -2.1269311904907227
    3. '(high' → logprob: -13.001931190490723
    4. ' ' → logprob: -14.876931190490723
    5. '
' → logprob: -14.876931190490723
    6. '   ' → logprob: -16.25193214416504
    7. '_high' → logprob: -17.00193214416504
    8. '.high' → logprob: -17.37693214416504
    9. '高' → logprob: -17.50193214416504
    10. '/high' → logprob: -18.12693214416504

Token 663: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.1080467781284824e-05
    2. ')//' → logprob: -10.125041007995605
    3. ' )' → logprob: -14.000041007995605
    4. ')>>' → logprob: -15.875041007995605
    5. ')
' → logprob: -17.875041961669922
    6. '）' → logprob: -20.625041961669922
    7. ']' → logprob: -20.750041961669922
    8. '//' → logprob: -21.375041961669922
    9. '   ' → logprob: -21.750041961669922
    10. '```' → logprob: -21.875041961669922

Token 664: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.0072995638474822044
    2. '//' → logprob: -5.632299423217773
    3. ')' → logprob: -5.757299423217773
    4. ' >>' → logprob: -8.382299423217773
    5. '>>' → logprob: -8.507299423217773
    6. '```' → logprob: -10.382299423217773
    7. ' ' → logprob: -10.507299423217773
    8. '
' → logprob: -11.382299423217773
    9. ' ' → logprob: -11.382299423217773
    10. ')//' → logprob: -11.757299423217773

Token 665: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '   ' → logprob: -18.500123977661133
    4. '```' → logprob: -19.000123977661133
    5. '۲' → logprob: -19.875123977661133
    6. '
' → logprob: -20.875123977661133
    7. '  ' → logprob: -21.125123977661133
    8. '２' → logprob: -21.250123977661133
    9. '२' → logprob: -22.250123977661133
    10. '=' → logprob: -22.375123977661133

Token 666: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '۲' → logprob: -21.5
    4. '```' → logprob: -21.75
    5. '   ' → logprob: -23.25
    6. '२' → logprob: -23.75
    7. '
' → logprob: -23.75
    8. '２' → logprob: -24.125
    9. '২' → logprob: -24.5
    10. '٢' → logprob: -24.875

Token 667: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35416072607040405
    2. '           ' → logprob: -1.2291607856750488
    3. '<|end|>' → logprob: -5.854160785675049
    4. '       ' → logprob: -7.104160785675049
    5. '            
' → logprob: -7.354160785675049
    6. '  
' → logprob: -7.604160785675049
    7. ',' → logprob: -9.10416030883789
    8. 'if' → logprob: -9.22916030883789
    9. '    
' → logprob: -9.22916030883789
    10. ' if' → logprob: -9.60416030883789

Token 668: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015142528340220451
    2. '
' → logprob: -4.765142440795898
    3. '<|end|>' → logprob: -5.265142440795898
    4. '       ' → logprob: -7.765142440795898
    5. '<|end|>' → logprob: -8.015142440795898
    6. '            
' → logprob: -8.640142440795898
    7. ' if' → logprob: -9.390142440795898
    8. 'if' → logprob: -9.515142440795898
    9. '```' → logprob: -9.515142440795898
    10. '   ' → logprob: -10.140142440795898

Token 669: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.607175350189209
    2. 'if' (adapté à ' if') → logprob: -0.857175350189209
    3. ' if' → logprob: -3.482175350189209
    4. '   ' → logprob: -11.732175827026367
    5. '       ' → logprob: -13.357175827026367
    6. 'If' → logprob: -14.482175827026367
    7. '            
' → logprob: -14.482175827026367
    8. '
' → logprob: -14.607175827026367
    9. '```' → logprob: -14.857175827026367
    10. '	if' → logprob: -15.357175827026367

Token 670: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03805446997284889
    2. ' self' → logprob: -3.2880544662475586
    3. '           ' → logprob: -11.913054466247559
    4. '(self' → logprob: -12.038054466247559
    5. '[self' → logprob: -15.663054466247559
    6. '               ' → logprob: -15.913054466247559
    7. '	self' → logprob: -16.788055419921875
    8. '   ' → logprob: -17.413055419921875
    9. ' ' → logprob: -17.788055419921875
    10. '            ' → logprob: -18.038055419921875

Token 671: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -4.246537173457909e-06
    2. '_can' → logprob: -13.000003814697266
    3. '.can' → logprob: -14.000003814697266
    4. '.' → logprob: -14.500003814697266
    5. '   ' → logprob: -14.875003814697266
    6. ' .' → logprob: -16.125003814697266
    7. '_' → logprob: -17.875003814697266
    8. '       ' → logprob: -18.250003814697266
    9. ']._' → logprob: -18.250003814697266
    10. ')._' → logprob: -18.750003814697266

Token 672: 'can' (ID: 6929)
  Prédit: 'can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -1.3856492842023727e-06
    2. '_can' → logprob: -13.625000953674316
    3. ' can' → logprob: -16.375001907348633
    4. 'could' → logprob: -17.375001907348633
    5. '.can' → logprob: -17.625001907348633
    6. '```' → logprob: -17.750001907348633
    7. 'cannot' → logprob: -18.125001907348633
    8. '	can' → logprob: -18.500001907348633
    9. '
' → logprob: -19.750001907348633
    10. '(can' → logprob: -19.750001907348633

Token 673: '_find' (ID: 52203)
  Prédit: '_find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_find' → logprob: -2.816093228830141e-06
    2. 'find' → logprob: -13.50000286102295
    3. '_can' → logprob: -13.87500286102295
    4. '_found' → logprob: -16.250001907348633
    5. '_have' → logprob: -16.500001907348633
    6. '_FIND' → logprob: -16.625001907348633
    7. '_Find' → logprob: -17.500001907348633
    8. '_' → logprob: -17.625001907348633
    9. 'Find' → logprob: -17.875001907348633
    10. ' _' → logprob: -17.875001907348633

Token 674: '_hidden' (ID: 62109)
  Prédit: '_hidden'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hidden' → logprob: -0.0003850325592793524
    2. 'hidden' → logprob: -7.87538480758667
    3. '_visible' → logprob: -13.625385284423828
    4. '_found' → logprob: -13.625385284423828
    5. '```' → logprob: -14.250385284423828
    6. 'Hidden' → logprob: -14.500385284423828
    7. '
' → logprob: -15.250385284423828
    8. '_can' → logprob: -16.000385284423828
    9. '(hidden' → logprob: -16.125385284423828
    10. '`' → logprob: -16.125385284423828

Token 675: '_an' (ID: 47921)
  Prédit: '_hidden'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hidden' → logprob: -0.0898018628358841
    2. '_an' → logprob: -2.464801788330078
    3. 'hidden' → logprob: -7.589801788330078
    4. '_' → logprob: -8.464801788330078
    5. 'an' → logprob: -9.839801788330078
    6. '_find' → logprob: -10.464801788330078
    7. '_found' → logprob: -11.089801788330078
    8. '_can' → logprob: -11.714801788330078
    9. '```' → logprob: -12.089801788330078
    10. '_length' → logprob: -12.214801788330078

Token 676: 'agram' (ID: 7632)
  Prédit: 'agram'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agram' → logprob: -0.0009846967877820134
    2. 'gram' → logprob: -7.7509846687316895
    3. 'am' → logprob: -9.625985145568848
    4. 'ogram' → logprob: -9.625985145568848
    5. '   ' → logprob: -9.750985145568848
    6. '```' → logprob: -9.750985145568848
    7. 'agrams' → logprob: -9.875985145568848
    8. 'an' → logprob: -9.875985145568848
    9. 'ar' → logprob: -10.000985145568848
    10. 'ag' → logprob: -10.500985145568848

Token 677: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: 0.0
    2. '_for' → logprob: -20.625
    3. ' of' → logprob: -20.875
    4. '_' → logprob: -21.0
    5. 's' → logprob: -21.0
    6. 'of' → logprob: -21.25
    7. '   ' → logprob: -21.25
    8. '```' → logprob: -21.5
    9. '
' → logprob: -21.875
    10. '\' → logprob: -22.0

Token 678: '_length' (ID: 11514)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.019301675260066986
    2. '_length' → logprob: -4.019301891326904
    3. 'ength' → logprob: -6.769301891326904
    4. ' length' → logprob: -14.019301414489746
    5. 'leng' → logprob: -14.019301414489746
    6. 'l' → logprob: -14.894301414489746
    7. 'e' → logprob: -16.269302368164062
    8. 'eng' → logprob: -16.269302368164062
    9. '```' → logprob: -16.269302368164062
    10. '(length' → logprob: -16.644302368164062

Token 679: '(mid' (ID: 121498)
  Prédit: '(mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mid' → logprob: -5.7053759519476444e-05
    2. '(' → logprob: -9.875057220458984
    3. '(
' → logprob: -13.125057220458984
    4. '[mid' → logprob: -13.750057220458984
    5. 'mid' → logprob: -13.750057220458984
    6. ' (' → logprob: -14.000057220458984
    7. ' mid' → logprob: -14.750057220458984
    8. '(m' → logprob: -16.625057220458984
    9. '
' → logprob: -18.000057220458984
    10. '(max' → logprob: -19.125057220458984

Token 680: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.38746747374534607
    2. '):
' → logprob: -1.1374675035476685
    3. ':' → logprob: -7.512467384338379
    4. ')' → logprob: -11.012467384338379
    5. ':
' → logprob: -11.012467384338379
    6. ' ):' → logprob: -11.887467384338379
    7. '):
' → logprob: -12.262467384338379
    8. ' ):
' → logprob: -13.262467384338379
    9. '():
' → logprob: -13.762467384338379
    10. '):

' → logprob: -14.137467384338379

Token 681: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07176894694566727
    2. '           ' → logprob: -3.4467689990997314
    3. '
' → logprob: -4.071768760681152
    4. ':
' → logprob: -4.446768760681152
    5. '):
' → logprob: -5.946768760681152
    6. ':' → logprob: -6.071768760681152
    7. '<|end|>' → logprob: -6.446768760681152
    8. '```' → logprob: -7.196768760681152
    9. ')' → logprob: -7.696768760681152
    10. '                
' → logprob: -8.571768760681152

Token 682: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.05005094036459923
    2. ' best' → logprob: -3.050050973892212
    3. '               ' → logprob: -6.675050735473633
    4. '           ' → logprob: -8.800050735473633
    5. '	best' → logprob: -10.675050735473633
    6. '
' → logprob: -10.800050735473633
    7. '(best' → logprob: -12.925050735473633
    8. '   ' → logprob: -13.300050735473633
    9. '.best' → logprob: -13.800050735473633
    10. '```' → logprob: -15.050050735473633

Token 683: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005233882926404476
    2. '=' → logprob: -5.2552337646484375
    3. ' ' → logprob: -18.380233764648438
    4. ' =
' → logprob: -19.380233764648438
    5. ' +=' → logprob: -19.630233764648438
    6. '<|end|>' → logprob: -20.255233764648438
    7. ',' → logprob: -20.630233764648438
    8. ')' → logprob: -21.005233764648438
    9. '＝' → logprob: -21.255233764648438
    10. '	' → logprob: -21.255233764648438

Token 684: ' mid' (ID: 6959)
  Prédit: ' mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.47407931089401245
    2. 'mid' → logprob: -0.9740793108940125
    3. '[mid' → logprob: -13.474079132080078
    4. '(mid' → logprob: -14.849079132080078
    5. '_mid' → logprob: -14.974079132080078
    6. ' midpoint' → logprob: -16.474079132080078
    7. '.mid' → logprob: -16.974079132080078
    8. '           ' → logprob: -18.099079132080078
    9. 'm' → logprob: -18.599079132080078
    10. '            ' → logprob: -18.724079132080078

Token 685: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1472393125295639
    2. '
' → logprob: -2.0222392082214355
    3. '           ' → logprob: -5.7722392082214355
    4. '                
' → logprob: -7.1472392082214355
    5. '<|end|>' → logprob: -8.897239685058594
    6. '    
' → logprob: -9.022239685058594
    7. '            
' → logprob: -9.272239685058594
    8. ' 
' → logprob: -9.647239685058594
    9. '  
' → logprob: -10.147239685058594
    10. '```' → logprob: -10.522239685058594

Token 686: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012482105754315853
    2. '           ' → logprob: -4.762482166290283
    3. '
' → logprob: -5.637482166290283
    4. '                
' → logprob: -8.762481689453125
    5. '            
' → logprob: -9.762481689453125
    6. ' 
' → logprob: -11.012481689453125
    7. '       ' → logprob: -11.387481689453125
    8. '    
' → logprob: -11.512481689453125
    9. '```' → logprob: -11.512481689453125
    10. '<|end|>' → logprob: -12.012481689453125

Token 687: ' low' (ID: 4465)
  Prédit: ' low'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' low' → logprob: -0.04343895986676216
    2. 'low' (adapté à ' low') → logprob: -3.1684389114379883
    3. '               ' → logprob: -8.168438911437988
    4. '           ' → logprob: -9.043438911437988
    5. ' 
' → logprob: -11.293438911437988
    6. '
' → logprob: -11.793438911437988
    7. '(low' → logprob: -12.168438911437988
    8. '            ' → logprob: -12.918438911437988
    9. '.low' → logprob: -12.918438911437988
    10. ' ' → logprob: -13.043438911437988

Token 688: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25192955136299133
    2. '=' → logprob: -1.501929521560669
    3. ' ' → logprob: -15.37692928314209
    4. ' +=' → logprob: -16.126930236816406
    5. '<|end|>' → logprob: -16.376930236816406
    6. ' =
' → logprob: -17.126930236816406
    7. '+=' → logprob: -18.126930236816406
    8. '=
' → logprob: -18.501930236816406
    9. '```' → logprob: -19.001930236816406
    10. ',' → logprob: -19.376930236816406

Token 689: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.04858771339058876
    2. ' mid' → logprob: -3.0485877990722656
    3. '(mid' → logprob: -15.423587799072266
    4. '[mid' → logprob: -15.548587799072266
    5. '_mid' → logprob: -19.298587799072266
    6. '
' → logprob: -19.798587799072266
    7. ' ' → logprob: -20.673587799072266
    8. ' midpoint' → logprob: -20.798587799072266
    9. '.mid' → logprob: -21.298587799072266
    10. '   ' → logprob: -21.548587799072266

Token 690: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.018150178715586662
    2. '+' → logprob: -4.018150329589844
    3. ' ' → logprob: -15.643150329589844
    4. ' +
' → logprob: -16.768150329589844
    5. ' ' → logprob: -17.768150329589844
    6. ' plus' → logprob: -19.018150329589844
    7. '
' → logprob: -19.768150329589844
    8. '+
' → logprob: -20.018150329589844
    9. '1' → logprob: -20.143150329589844
    10. '```' → logprob: -20.768150329589844

Token 691: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029601677670143545
    2. ' ' → logprob: -8.125295639038086
    3. '```' → logprob: -18.625295639038086
    4. '   ' → logprob: -19.000295639038086
    5. '
' → logprob: -21.125295639038086
    6. '۱' → logprob: -21.625295639038086
    7. '  ' → logprob: -21.875295639038086
    8. '           ' → logprob: -21.875295639038086
    9. '0' → logprob: -22.187795639038086
    10. '[' → logprob: -22.562795639038086

Token 692: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '```' → logprob: -21.000003814697266
    4. '   ' → logprob: -22.375003814697266
    5. '
' → logprob: -23.000003814697266
    6. '۱' → logprob: -24.000003814697266
    7. '  ' → logprob: -24.375003814697266
    8. '3' → logprob: -24.500003814697266
    9. '１' → logprob: -24.750003814697266
    10. '0' → logprob: -24.750003814697266

Token 693: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005130576901137829
    2. 'else' → logprob: -5.630130767822266
    3. '
' → logprob: -7.005130767822266
    4. ' else' → logprob: -8.255130767822266
    5. '```' → logprob: -8.755130767822266
    6. '<|end|>' → logprob: -9.130130767822266
    7. '       ' → logprob: -10.380130767822266
    8. '            
' → logprob: -10.880130767822266
    9. '               ' → logprob: -11.505130767822266
    10. '    
' → logprob: -11.755130767822266

Token 694: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0240397397428751
    2. '
' → logprob: -4.2740397453308105
    3. 'else' → logprob: -4.8990397453308105
    4. '       ' → logprob: -7.1490397453308105
    5. '```' → logprob: -7.3990397453308105
    6. ' else' → logprob: -7.5240397453308105
    7. '               ' → logprob: -8.274039268493652
    8. '            
' → logprob: -10.024039268493652
    9. '   ' → logprob: -10.399039268493652
    10. '    
' → logprob: -10.899039268493652

Token 695: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.1201319694519043
    2. '           ' → logprob: -2.6201319694519043
    3. ' else' → logprob: -3.2451319694519043
    4. '       ' → logprob: -6.620131969451904
    5. '
' → logprob: -9.995132446289062
    6. '```' → logprob: -10.370132446289062
    7. '   ' → logprob: -11.870132446289062
    8. 'high' → logprob: -11.995132446289062
    9. 'elif' → logprob: -12.245132446289062
    10. ' high' → logprob: -12.995132446289062

Token 696: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04460739344358444
    2. ':
' → logprob: -3.419607400894165
    3. '           ' → logprob: -5.419607162475586
    4. ':' → logprob: -5.419607162475586
    5. '
' → logprob: -6.669607162475586
    6. '       ' → logprob: -8.169607162475586
    7. '   ' → logprob: -9.169607162475586
    8. '                   ' → logprob: -9.294607162475586
    9. '```' → logprob: -9.419607162475586
    10. '                
' → logprob: -10.294607162475586

Token 697: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15513135492801666
    2. '           ' → logprob: -2.0301313400268555
    3. ' high' → logprob: -4.5301313400268555
    4. 'high' → logprob: -6.7801313400268555
    5. '   ' → logprob: -8.405131340026855
    6. '       ' → logprob: -9.280131340026855
    7. '
' → logprob: -9.905131340026855
    8. '```' → logprob: -10.280131340026855
    9. '(high' → logprob: -11.280131340026855
    10. '                   ' → logprob: -11.655131340026855

Token 698: ' high' (ID: 1932)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' (adapté à ' high') → logprob: -0.018193138763308525
    2. ' high' → logprob: -4.018193244934082
    3. '               ' → logprob: -11.393193244934082
    4. '   ' → logprob: -11.768193244934082
    5. '           ' → logprob: -11.893193244934082
    6. '       ' → logprob: -12.018193244934082
    7. '
' → logprob: -12.143193244934082
    8. '(high' → logprob: -12.893193244934082
    9. '.high' → logprob: -13.143193244934082
    10. '_high' → logprob: -13.643193244934082

Token 699: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692810595035553
    2. '=' → logprob: -2.1269280910491943
    3. ' =
' → logprob: -19.376928329467773
    4. '<|end|>' → logprob: -19.376928329467773
    5. '＝' → logprob: -19.876928329467773
    6. ' ' → logprob: -19.876928329467773
    7. '=
' → logprob: -20.501928329467773
    8. '=end' → logprob: -21.501928329467773
    9. ')' → logprob: -21.626928329467773
    10. ',' → logprob: -21.751928329467773

Token 700: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.038042064756155014
    2. ' mid' → logprob: -3.2880420684814453
    3. '[mid' → logprob: -15.288042068481445
    4. '           ' → logprob: -15.663042068481445
    5. '(mid' → logprob: -16.288042068481445
    6. '_mid' → logprob: -16.913042068481445
    7. '               ' → logprob: -17.538042068481445
    8. '   ' → logprob: -18.663042068481445
    9. 'm' → logprob: -19.413042068481445
    10. 'middle' → logprob: -19.913042068481445

Token 701: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04301837086677551
    2. '-' → logprob: -3.168018341064453
    3. 'mid' → logprob: -12.043018341064453
    4. ' ' → logprob: -12.043018341064453
    5. '           ' → logprob: -12.793018341064453
    6. '=' → logprob: -12.918018341064453
    7. ' mid' → logprob: -14.418018341064453
    8. '[mid' → logprob: -14.543018341064453
    9. ' =' → logprob: -14.668018341064453
    10. '   ' → logprob: -15.043018341064453

Token 702: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '```' → logprob: -19.125024795532227
    4. '   ' → logprob: -20.250024795532227
    5. '
' → logprob: -20.750024795532227
    6. '           ' → logprob: -21.375024795532227
    7. '<|end|>' → logprob: -21.750024795532227
    8. '0' → logprob: -21.875024795532227
    9. '=' → logprob: -21.875024795532227
    10. '       ' → logprob: -22.375024795532227

Token 703: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '```' → logprob: -19.75
    4. '<|end|>' → logprob: -21.75
    5. '۱' → logprob: -22.125
    6. '   ' → logprob: -22.25
    7. '0' → logprob: -23.0
    8. '=' → logprob: -23.5
    9. '2' → logprob: -24.125
    10. '       ' → logprob: -24.125

Token 704: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00019984507525805384
    2. 'return' → logprob: -8.750200271606445
    3. ' return' → logprob: -10.750200271606445
    4. '
' → logprob: -11.500200271606445
    5. '        
' → logprob: -12.750200271606445
    6. '```' → logprob: -13.125200271606445
    7. '<|end|>' → logprob: -13.375200271606445
    8. '	' → logprob: -14.250200271606445
    9. '	return' → logprob: -14.500200271606445
    10. '   ' → logprob: -14.625200271606445

Token 705: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008235711604356766
    2. 'return' → logprob: -5.008235931396484
    3. ' return' → logprob: -6.758235931396484
    4. '
' → logprob: -8.383235931396484
    5. '	' → logprob: -10.133235931396484
    6. '	return' → logprob: -10.383235931396484
    7. '        
' → logprob: -10.883235931396484
    8. '   ' → logprob: -11.008235931396484
    9. '```' → logprob: -11.133235931396484
    10. '    
' → logprob: -12.508235931396484

Token 706: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6949594020843506
    2. 'return' (adapté à ' return') → logprob: -0.6949594020843506
    3. ' return' → logprob: -6.44495964050293
    4. '   ' → logprob: -8.44495964050293
    5. '	return' → logprob: -12.44495964050293
    6. '```' → logprob: -13.44495964050293
    7. ' ' → logprob: -14.81995964050293
    8. '
' → logprob: -15.06995964050293
    9. '      ' → logprob: -15.56995964050293
    10. ':return' → logprob: -15.94495964050293

Token 707: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.005233882926404476
    2. ' best' → logprob: -5.2552337646484375
    3. '	best' → logprob: -16.755233764648438
    4. '(best' → logprob: -18.005233764648438
    5. '_best' → logprob: -20.630233764648438
    6. 'b' → logprob: -20.630233764648438
    7. '.best' → logprob: -21.130233764648438
    8. '
' → logprob: -22.630233764648438
    9. '-best' → logprob: -23.005233764648438
    10. '```' → logprob: -23.880233764648438

Token 708: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 709: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6528946757316589
    2. '<|end|>' → logprob: -1.2778947353363037
    3. ')' → logprob: -1.6528947353363037
    4. '<|end|>' → logprob: -6.027894496917725
    5. '.' → logprob: -6.152894496917725
    6. '   ' → logprob: -6.527894496917725
    7. '[' → logprob: -7.402894496917725
    8. ']' → logprob: -7.777894496917725
    9. '
' → logprob: -8.152894973754883
    10. ',' → logprob: -8.152894973754883

Token 710: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.0953145027160645
    2. ' _' → logprob: -1.5953145027160645
    3. '_' → logprob: -1.7203145027160645
    4. ' test' → logprob: -1.9703145027160645
    5. ' find' → logprob: -2.8453145027160645
    6. ' example' → logprob: -2.9703145027160645
    7. ' solve' → logprob: -3.8453145027160645
    8. ' hidden' → logprob: -4.9703145027160645
    9. ' compute' → logprob: -7.0953145027160645
    10. ' longest' → logprob: -7.2203145027160645

Token 711: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -7.183501293184236e-05
    2. '():
' → logprob: -10.25007152557373
    3. ' ():' → logprob: -10.37507152557373
    4. '()' → logprob: -12.25007152557373
    5. '_' → logprob: -15.37507152557373
    6. '():
' → logprob: -16.250072479248047
    7. '()>' → logprob: -16.750072479248047
    8. '().__' → logprob: -17.375072479248047
    9. '():

' → logprob: -18.250072479248047
    10. '().' → logprob: -18.375072479248047

Token 712: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08050331473350525
    2. 's' → logprob: -2.705503225326538
    3. ' s' → logprob: -4.580503463745117
    4. 'import' → logprob: -9.330503463745117
    5. '```' → logprob: -9.580503463745117
    6. ' import' → logprob: -9.955503463745117
    7. '    ' → logprob: -11.330503463745117
    8. '_s' → logprob: -11.830503463745117
    9. 'string' → logprob: -12.080503463745117
    10. '(s' → logprob: -12.205503463745117

Token 713: ' import' (ID: 1588)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4096190631389618
    2. 'import' (adapté à ' import') → logprob: -1.9096190929412842
    3. ' import' → logprob: -2.659619092941284
    4. ' s' → logprob: -2.784619092941284
    5. '   ' → logprob: -2.909619092941284
    6. 'input' → logprob: -6.909618854522705
    7. ' input' → logprob: -7.534618854522705
    8. 'string' → logprob: -10.159619331359863
    9. 'text' → logprob: -10.159619331359863
    10. 'n' → logprob: -10.659619331359863

Token 714: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.47408607602119446
    2. 'sys' → logprob: -0.9740860462188721
    3. '=sys' → logprob: -11.724085807800293
    4. '	sys' → logprob: -14.349085807800293
    5. '(sys' → logprob: -15.474085807800293
    6. '_sys' → logprob: -16.09908676147461
    7. 'random' → logprob: -17.72408676147461
    8. '_' → logprob: -18.59908676147461
    9. '```' → logprob: -18.84908676147461
    10. 'json' → logprob: -18.84908676147461

Token 715: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04430967941880226
    2. 'input' → logprob: -3.794309616088867
    3. '
' → logprob: -4.544309616088867
    4. '    
' → logprob: -5.294309616088867
    5. 'data' → logprob: -5.669309616088867
    6. ' input' → logprob: -7.544309616088867
    7. 'n' → logprob: -8.169309616088867
    8. 'for' → logprob: -8.669309616088867
    9. ' lines' → logprob: -9.169309616088867
    10. ' readline' → logprob: -9.544309616088867

Token 716: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026400962844491005
    2. 'input' → logprob: -3.9014010429382324
    3. ' input' → logprob: -5.776401042938232
    4. 'data' → logprob: -6.276401042938232
    5. '    
' → logprob: -8.901400566101074
    6. '
' → logprob: -9.026400566101074
    7. 'n' → logprob: -9.401400566101074
    8. ' data' → logprob: -9.401400566101074
    9. '```' → logprob: -9.401400566101074
    10. ' lines' → logprob: -9.526400566101074

Token 717: ' s' (ID: 265)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.9301620721817017
    2. 'lines' → logprob: -1.1801620721817017
    3. 'data' → logprob: -1.4301620721817017
    4. 's' (adapté à ' s') → logprob: -3.305161952972412
    5. ' lines' → logprob: -4.680161952972412
    6. '   ' → logprob: -5.055161952972412
    7. 'args' → logprob: -5.805161952972412
    8. ' input' → logprob: -6.055161952972412
    9. ' data' → logprob: -8.18016242980957
    10. 'n' → logprob: -8.30516242980957

Token 718: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08437918871641159
    2. 'tr' → logprob: -2.834379196166992
    3. ' =' → logprob: -4.209379196166992
    4. '_' → logprob: -6.334379196166992
    5. 'rc' → logprob: -6.334379196166992
    6. '_input' → logprob: -6.584379196166992
    7. 'trs' → logprob: -6.709379196166992
    8. 'tring' → logprob: -7.834379196166992
    9. '=' → logprob: -8.584379196166992
    10. '=input' → logprob: -8.709379196166992

Token 719: '_raw' (ID: 36128)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4767974317073822
    2. '=' → logprob: -0.9767974615097046
    3. ',' → logprob: -5.976797580718994
    4. '_input' → logprob: -9.851797103881836
    5. '_line' → logprob: -9.976797103881836
    6. '=input' → logprob: -10.976797103881836
    7. 's' → logprob: -11.226797103881836
    8. ' ' → logprob: -11.476797103881836
    9. '_str' → logprob: -12.226797103881836
    10. '_text' → logprob: -12.226797103881836

Token 720: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4795440137386322
    2. '=' → logprob: -0.9795440435409546
    3. ',' → logprob: -5.229544162750244
    4. ' ' → logprob: -10.354543685913086
    5. ' ,' → logprob: -10.354543685913086
    6. '_' → logprob: -11.479543685913086
    7. '   ' → logprob: -11.854543685913086
    8. ' =
' → logprob: -12.729543685913086
    9. ')' → logprob: -12.979543685913086
    10. 's' → logprob: -13.229543685913086

Token 721: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.018584512174129486
    2. ' sys' → logprob: -4.018584728240967
    3. 'input' → logprob: -7.768584728240967
    4. ' input' → logprob: -12.018584251403809
    5. '(sys' → logprob: -12.768584251403809
    6. '=sys' → logprob: -14.018584251403809
    7. '	sys' → logprob: -14.393584251403809
    8. ' ' → logprob: -14.518584251403809
    9. '   ' → logprob: -14.518584251403809
    10. 'stdin' → logprob: -16.268585205078125

Token 722: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.03145156800746918
    2. '.argv' → logprob: -3.531451463699341
    3. '.' → logprob: -6.40645170211792
    4. '.stdout' → logprob: -10.156451225280762
    5. '.std' → logprob: -12.406451225280762
    6. '.readline' → logprob: -13.656451225280762
    7. '.st' → logprob: -13.656451225280762
    8. '.version' → logprob: -14.031451225280762
    9. ' .' → logprob: -14.406451225280762
    10. '._' → logprob: -14.656451225280762

Token 723: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -3.750436007976532e-05
    2. '.read' → logprob: -10.62503719329834
    3. '.' → logprob: -11.25003719329834
    4. '().' → logprob: -17.125038146972656
    5. 'read' → logprob: -17.125038146972656
    6. ' .' → logprob: -17.500038146972656
    7. '.readlines' → logprob: -18.000038146972656
    8. '.stdin' → logprob: -19.375038146972656
    9. ' readline' → logprob: -19.500038146972656
    10. '.buffer' → logprob: -20.500038146972656

Token 724: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0031786637846380472
    2. '()' → logprob: -5.753178596496582
    3. '()
' → logprob: -14.503178596496582
    4. '.strip' → logprob: -15.378178596496582
    5. '(' → logprob: -16.3781795501709
    6. '.rstrip' → logprob: -16.5031795501709
    7. ' ().' → logprob: -16.6281795501709
    8. '()

' → logprob: -17.7531795501709
    9. '()).' → logprob: -18.1281795501709
    10. '())' → logprob: -18.6281795501709

Token 725: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0019286326132714748
    2. 'rstrip' → logprob: -6.251928806304932
    3. ' strip' → logprob: -18.001928329467773
    4. '_strip' → logprob: -19.001928329467773
    5. '(strip' → logprob: -20.876928329467773
    6. 'read' → logprob: -21.876928329467773
    7. '.strip' → logprob: -22.126928329467773
    8. 'decode' → logprob: -22.501928329467773
    9. 'rst' → logprob: -22.751928329467773
    10. 'Strip' → logprob: -23.001928329467773

Token 726: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6094819903373718
    2. '()
' → logprob: -1.3594820499420166
    3. '()' → logprob: -1.8594820499420166
    4. 's' → logprob: -3.2344820499420166
    5. '
' → logprob: -5.9844818115234375
    6. ' s' → logprob: -7.1094818115234375
    7. '    
' → logprob: -7.8594818115234375
    8. '(s' → logprob: -9.109481811523438
    9. '  
' → logprob: -9.234481811523438
    10. '().' → logprob: -9.734481811523438

Token 727: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14619046449661255
    2. 's' → logprob: -2.3961904048919678
    3. '
' → logprob: -3.1461904048919678
    4. '    
' → logprob: -6.396190643310547
    5. ' s' → logprob: -8.771190643310547
    6. ' 
' → logprob: -10.146190643310547
    7. '  
' → logprob: -10.896190643310547
    8. '```' → logprob: -11.771190643310547
    9. '   
' → logprob: -12.021190643310547
    10. '`s' → logprob: -12.146190643310547

Token 728: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.4751383364200592
    2. '   ' → logprob: -0.9751383066177368
    3. ' s' → logprob: -6.850138187408447
    4. '
' → logprob: -13.850138664245605
    5. '  ' → logprob: -15.475138664245605
    6. ' ' → logprob: -15.725138664245605
    7. '    
' → logprob: -16.10013771057129
    8. '	s' → logprob: -16.72513771057129
    9. '    ' → logprob: -17.47513771057129
    10. '       ' → logprob: -17.72513771057129

Token 729: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.009757975116372108
    2. '1' → logprob: -4.634757995605469
    3. '_' → logprob: -13.884757995605469
    4. '   ' → logprob: -14.759757995605469
    5. 's' → logprob: -15.009757995605469
    6. '
' → logprob: -16.25975799560547
    7. ' ' → logprob: -16.88475799560547
    8. '₂' → logprob: -16.88475799560547
    9. '```' → logprob: -17.13475799560547
    10. '    ' → logprob: -17.50975799560547

Token 730: '_raw' (ID: 36128)
  Prédit: '_raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_raw' → logprob: -2.963691804325208e-05
    2. '_' → logprob: -10.500029563903809
    3. ' =' → logprob: -14.000029563903809
    4. '=' → logprob: -14.375029563903809
    5. 'raw' → logprob: -15.125029563903809
    6. '=_' → logprob: -15.250029563903809
    7. '_=' → logprob: -17.125030517578125
    8. '_s' → logprob: -17.125030517578125
    9. '_RAW' → logprob: -17.625030517578125
    10. 'Raw' → logprob: -17.750030517578125

Token 731: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687169551849365
    2. '=' → logprob: -1.1368716955184937
    3. '   ' → logprob: -15.386871337890625
    4. ' ' → logprob: -15.386871337890625
    5. ' =
' → logprob: -16.386871337890625
    6. '=s' → logprob: -16.386871337890625
    7. '_' → logprob: -17.761871337890625
    8. 's' → logprob: -18.011871337890625
    9. ' s' → logprob: -18.011871337890625
    10. '=
' → logprob: -18.011871337890625

Token 732: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.4740775227546692
    2. ' sys' → logprob: -0.9740775227546692
    3. '(sys' → logprob: -15.474077224731445
    4. '	sys' → logprob: -15.724077224731445
    5. '=sys' → logprob: -15.849077224731445
    6. '   ' → logprob: -17.724077224731445
    7. 's' → logprob: -18.724077224731445
    8. ' ' → logprob: -18.849077224731445
    9. '.sys' → logprob: -19.224077224731445
    10. 'system' → logprob: -19.599077224731445

Token 733: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -6.20603168499656e-05
    2. 'stdin' → logprob: -10.250061988830566
    3. '.stdout' → logprob: -11.000061988830566
    4. '.readline' → logprob: -11.875061988830566
    5. '(stdin' → logprob: -13.250061988830566
    6. '.' → logprob: -14.250061988830566
    7. '().' → logprob: -15.500061988830566
    8. '.stderr' → logprob: -16.125062942504883
    9. '.argv' → logprob: -16.125062942504883
    10. '1' → logprob: -16.625062942504883

Token 734: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -2.0100624169572257e-05
    2. '.stdin' → logprob: -11.000020027160645
    3. '.' → logprob: -12.750020027160645
    4. 'stdin' → logprob: -15.375020027160645
    5. '().' → logprob: -16.50002098083496
    6. '.readlines' → logprob: -18.12502098083496
    7. '.stdout' → logprob: -18.12502098083496
    8. '.read' → logprob: -18.37502098083496
    9. 'sys' → logprob: -18.62502098083496
    10. '(stdin' → logprob: -18.87502098083496

Token 735: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.024604277219623e-05
    2. '()' → logprob: -10.125040054321289
    3. '()
' → logprob: -16.50004005432129
    4. '()).' → logprob: -17.37504005432129
    5. ' ().' → logprob: -18.37504005432129
    6. '()].' → logprob: -19.00004005432129
    7. '().
' → logprob: -19.12504005432129
    8. '(' → logprob: -19.25004005432129
    9. '().__' → logprob: -19.37504005432129
    10. '.' → logprob: -19.62504005432129

Token 736: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: 0.0
    2. 'rstrip' → logprob: -18.125
    3. ' strip' → logprob: -18.875
    4. '.strip' → logprob: -20.0
    5. '_strip' → logprob: -21.125
    6. 'stripe' → logprob: -21.375
    7. '(strip' → logprob: -21.75
    8. 'read' → logprob: -22.25
    9. '```' → logprob: -22.875
    10. '
' → logprob: -23.625

Token 737: '()

' (ID: 5874)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.043081630021333694
    2. '   ' → logprob: -3.168081521987915
    3. '    
' → logprob: -10.168081283569336
    4. 's' → logprob: -10.793081283569336
    5. '

' → logprob: -11.293081283569336
    6. '
' → logprob: -12.293081283569336
    7. ' s' → logprob: -13.418081283569336
    8. '  
' → logprob: -13.668081283569336
    9. ' 
' → logprob: -13.793081283569336
    10. '()
' → logprob: -14.293081283569336

Token 738: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004233204759657383
    2. 's' → logprob: -5.629233360290527
    3. ' s' → logprob: -8.004233360290527
    4. '
' → logprob: -8.129233360290527
    5. '    
' → logprob: -12.504233360290527
    6. '```' → logprob: -15.754233360290527
    7. '  ' → logprob: -17.00423240661621
    8. ' 
' → logprob: -17.12923240661621
    9. 'c' → logprob: -17.50423240661621
    10. '   
' → logprob: -17.75423240661621

Token 739: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.00032271104282699525
    2. '   ' → logprob: -8.375322341918945
    3. ' s' → logprob: -9.625322341918945
    4. 'source' → logprob: -11.375322341918945
    5. '
' → logprob: -11.500322341918945
    6. '```' → logprob: -13.250322341918945
    7. 'cs' → logprob: -13.875322341918945
    8. '    
' → logprob: -14.625322341918945
    9. 'string' → logprob: -15.250322341918945
    10. '``' → logprob: -15.625322341918945

Token 740: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '_' → logprob: -18.625
    3. '   ' → logprob: -18.875
    4. '```' → logprob: -20.375
    5. ' ' → logprob: -20.625
    6. 's' → logprob: -21.375
    7. ' =' → logprob: -21.875
    8. '１' → logprob: -22.0
    9. '_s' → logprob: -22.5
    10. '  ' → logprob: -23.125

Token 741: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005384945310652256
    2. '=' → logprob: -5.255384922027588
    3. '_source' → logprob: -8.880385398864746
    4. '_src' → logprob: -12.130385398864746
    5. '_' → logprob: -12.380385398864746
    6. 'source' → logprob: -14.380385398864746
    7. ' ' → logprob: -14.630385398864746
    8. '_raw' → logprob: -14.755385398864746
    9. ',' → logprob: -15.130385398864746
    10. '_obj' → logprob: -15.630385398864746

Token 742: ' Concrete' (ID: 47600)
  Prédit: 'Concrete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Concrete' → logprob: -0.006715370807796717
    2. ' Concrete' → logprob: -5.006715297698975
    3. ' concrete' → logprob: -17.631715774536133
    4. 'Con' → logprob: -18.631715774536133
    5. ' ' → logprob: -25.131715774536133
    6. 'Concurrent' → logprob: -25.506715774536133
    7. '   ' → logprob: -25.881715774536133
    8. 'Composite' → logprob: -25.881715774536133
    9. '
' → logprob: -26.131715774536133
    10. 'Continuous' → logprob: -26.881715774536133

Token 743: 'String' (ID: 916)
  Prédit: 'String'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'String' → logprob: 0.0
    2. 'Concrete' → logprob: -19.625
    3. 'Strings' → logprob: -21.0
    4. ' String' → logprob: -21.125
    5. '_String' → logprob: -21.25
    6. 'string' → logprob: -21.75
    7. '_string' → logprob: -21.875
    8. '```' → logprob: -23.5
    9. '<String' → logprob: -23.75
    10. '[String' → logprob: -24.0

Token 744: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -14.500000953674316
    3. ' (' → logprob: -19.375
    4. 's' → logprob: -20.25
    5. '((' → logprob: -22.125
    6. '(
' → logprob: -22.125
    7. ')(' → logprob: -23.875
    8. '(S' → logprob: -23.875
    9. '```' → logprob: -23.875
    10. '(str' → logprob: -24.25

Token 745: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '_raw' → logprob: -17.0
    3. '_' → logprob: -18.5
    4. 'raw' → logprob: -20.25
    5. '１' → logprob: -20.875
    6. '=' → logprob: -21.1875
    7. '```' → logprob: -21.3125
    8. '2' → logprob: -21.3125
    9. ')' → logprob: -21.8125
    10. ' ' → logprob: -21.8125

Token 746: '_raw' (ID: 36128)
  Prédit: '_raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_raw' → logprob: -0.0027057272382080555
    2. ')' → logprob: -6.3777055740356445
    3. ',' → logprob: -7.5027055740356445
    4. 'raw' → logprob: -8.252705574035645
    5. '1' → logprob: -9.877705574035645
    6. 's' → logprob: -10.127705574035645
    7. 'Raw' → logprob: -10.377705574035645
    8. '.raw' → logprob: -10.752705574035645
    9. '_RAW' → logprob: -11.627705574035645
    10. '.Raw' → logprob: -11.877705574035645

Token 747: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011050177738070488
    2. ')
' → logprob: -4.511050224304199
    3. '   ' → logprob: -13.6360502243042
    4. ')
' → logprob: -14.6360502243042
    5. ')s' → logprob: -14.8860502243042
    6. ')

' → logprob: -15.1360502243042
    7. ' )' → logprob: -15.7610502243042
    8. ' ' → logprob: -17.011049270629883
    9. '),' → logprob: -17.386049270629883
    10. ',' → logprob: -17.511049270629883

Token 748: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01120578870177269
    2. 's' → logprob: -4.511205673217773
    3. ' s' → logprob: -8.761205673217773
    4. '    
' → logprob: -14.636205673217773
    5. ' ' → logprob: -15.261205673217773
    6. '```' → logprob: -15.511205673217773
    7. '  ' → logprob: -16.136205673217773
    8. '
' → logprob: -16.136205673217773
    9. '`s' → logprob: -16.511205673217773
    10. '	s' → logprob: -17.386205673217773

Token 749: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.08509756624698639
    2. '   ' → logprob: -2.585097551345825
    3. ' s' → logprob: -5.085097789764404
    4. ' ' → logprob: -16.585098266601562
    5. '	s' → logprob: -16.710098266601562
    6. '_s' → logprob: -17.085098266601562
    7. '  ' → logprob: -17.585098266601562
    8. '
' → logprob: -18.210098266601562
    9. '```' → logprob: -18.460098266601562
    10. '`s' → logprob: -18.960098266601562

Token 750: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.500000953674316
    3. '_' → logprob: -15.625000953674316
    4. 's' → logprob: -15.875000953674316
    5. ' =' → logprob: -18.5
    6. '₂' → logprob: -18.625
    7. '   ' → logprob: -18.75
    8. '۲' → logprob: -19.25
    9. '_s' → logprob: -19.375
    10. '=' → logprob: -20.25

Token 751: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132616877555847
    2. '=' → logprob: -1.3132617473602295
    3. ' =
' → logprob: -19.563261032104492
    4. ' ' → logprob: -19.688261032104492
    5. 's' → logprob: -19.813261032104492
    6. '＝' → logprob: -19.938261032104492
    7. '=
' → logprob: -20.313261032104492
    8. '=}' → logprob: -20.688261032104492
    9. '_' → logprob: -20.813261032104492
    10. ')' → logprob: -21.313261032104492

Token 752: ' Concrete' (ID: 47600)
  Prédit: 'Concrete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Concrete' → logprob: -0.0380416102707386
    2. ' Concrete' → logprob: -3.288041591644287
    3. ' concrete' → logprob: -16.663042068481445
    4. 'Con' → logprob: -16.663042068481445
    5. '   ' → logprob: -19.788042068481445
    6. 'Concurrent' → logprob: -19.913042068481445
    7. ' ' → logprob: -20.788042068481445
    8. '_con' → logprob: -21.413042068481445
    9. 'Conc' → logprob: -21.538042068481445
    10. ' ' → logprob: -21.538042068481445

Token 753: 'String' (ID: 916)
  Prédit: 'String'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'String' → logprob: -4.320199877838604e-07
    2. 'Concrete' → logprob: -14.75
    3. ' String' → logprob: -19.375
    4. 'string' → logprob: -20.25
    5. '_string' → logprob: -20.625
    6. '_String' → logprob: -21.25
    7. '	String' → logprob: -22.625
    8. '.String' → logprob: -22.75
    9. 'Strings' → logprob: -23.0
    10. '<String' → logprob: -23.25

Token 754: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00012451570364646614
    2. 's' → logprob: -9.00012493133545
    3. '(' → logprob: -14.75012493133545
    4. '(
' → logprob: -14.87512493133545
    5. ' (' → logprob: -15.62512493133545
    6. '```' → logprob: -17.750123977661133
    7. '(S' → logprob: -18.000123977661133
    8. '(str' → logprob: -18.125123977661133
    9. '(string' → logprob: -18.250123977661133
    10. '(String' → logprob: -18.375123977661133

Token 755: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1994775377388578e-05
    2. '_raw' → logprob: -11.375012397766113
    3. '1' → logprob: -15.375012397766113
    4. '_' → logprob: -16.000011444091797
    5. '```' → logprob: -17.250011444091797
    6. '₂' → logprob: -17.875011444091797
    7. 'raw' → logprob: -18.500011444091797
    8. ')' → logprob: -19.125011444091797
    9. '_RAW' → logprob: -19.625011444091797
    10. '۲' → logprob: -19.750011444091797

Token 756: '_raw' (ID: 36128)
  Prédit: '_raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_raw' → logprob: -1.6240566083070007e-06
    2. 'raw' → logprob: -13.500001907348633
    3. 'Raw' → logprob: -16.000001907348633
    4. '2' → logprob: -17.500001907348633
    5. '_RAW' → logprob: -18.000001907348633
    6. '.raw' → logprob: -19.500001907348633
    7. '```' → logprob: -19.625001907348633
    8. ')_' → logprob: -19.625001907348633
    9. ')' → logprob: -20.000001907348633
    10. '_' → logprob: -20.500001907348633

Token 757: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008793250657618046
    2. ')
' → logprob: -4.758793354034424
    3. '   ' → logprob: -8.633792877197266
    4. ' )' → logprob: -14.883792877197266
    5. ')
' → logprob: -15.758792877197266
    6. ' ' → logprob: -16.383792877197266
    7. ')

' → logprob: -17.133792877197266
    8. ' )
' → logprob: -17.133792877197266
    9. ',' → logprob: -17.383792877197266
    10. '  ' → logprob: -17.883792877197266

Token 758: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0072996835224330425
    2. ' comparator' → logprob: -5.507299900054932
    3. 'com' → logprob: -5.882299900054932
    4. '
' → logprob: -8.007299423217773
    5. '	com' → logprob: -10.507299423217773
    6. 'c' → logprob: -10.757299423217773
    7. '    
' → logprob: -11.382299423217773
    8. ' comp' → logprob: -11.382299423217773
    9. '(com' → logprob: -11.882299423217773
    10. ' comb' → logprob: -12.257299423217773

Token 759: ' comparator' (ID: 96166)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.0017652629176154733
    2. ' comparator' → logprob: -6.501765251159668
    3. 'comp' → logprob: -8.751765251159668
    4. 'solver' → logprob: -9.626765251159668
    5. '   ' → logprob: -10.876765251159668
    6. 'cmp' → logprob: -12.251765251159668
    7. 'c' → logprob: -12.251765251159668
    8. 'compar' → logprob: -12.376765251159668
    9. 'result' → logprob: -13.876765251159668
    10. 'solution' → logprob: -14.001765251159668

Token 760: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014163628220558167
    2. '=' → logprob: -4.264163494110107
    3. ' =
' → logprob: -15.889163970947266
    4. ')' → logprob: -17.764163970947266
    5. ' ' → logprob: -18.514163970947266
    6. '=
' → logprob: -19.264163970947266
    7. '  ' → logprob: -19.514163970947266
    8. '(' → logprob: -20.014163970947266
    9. ' =)' → logprob: -20.264163970947266
    10. '=

' → logprob: -20.764163970947266

Token 761: ' Frequency' (ID: 79273)
  Prédit: 'Frequency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Frequency' → logprob: -0.16022412478923798
    2. ' Frequency' → logprob: -1.9102240800857544
    3. ' frequency' → logprob: -19.91022491455078
    4. 'Freq' → logprob: -20.28522491455078
    5. 'F' → logprob: -20.66022491455078
    6. '_frequency' → logprob: -21.66022491455078
    7. ' F' → logprob: -21.78522491455078
    8. ' ' → logprob: -22.53522491455078
    9. '(F' → logprob: -22.91022491455078
    10. '	F' → logprob: -23.16022491455078

Token 762: 'Vector' (ID: 7580)
  Prédit: 'Vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: 0.0
    2. '	Vector' → logprob: -22.5
    3. ' Vector' → logprob: -22.875
    4. '_Vector' → logprob: -23.0
    5. '_vector' → logprob: -23.875
    6. 'vector' → logprob: -24.25
    7. '(Vector' → logprob: -24.25
    8. '<Vector' → logprob: -25.0
    9. '```' → logprob: -25.75
    10. 'Vectors' → logprob: -25.75

Token 763: 'Comparator' (ID: 45034)
  Prédit: 'Comparator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Comparator' → logprob: -7.896309739408025e-07
    2. 'Comparer' → logprob: -14.500000953674316
    3. 'Com' → logprob: -16.375
    4. 'Compar' → logprob: -16.625
    5. '.Comparator' → logprob: -17.375
    6. ' Comparator' → logprob: -18.25
    7. ' comparator' → logprob: -18.625
    8. 'Compet' → logprob: -20.0
    9. 'Composite' → logprob: -21.125
    10. 'Converter' → logprob: -21.125

Token 764: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06301028281450272
    2. '()
' → logprob: -2.8130102157592773
    3. '   ' → logprob: -7.438010215759277
    4. '
' → logprob: -8.563010215759277
    5. '(
' → logprob: -8.938010215759277
    6. '(' → logprob: -9.313010215759277
    7. '()

' → logprob: -11.438010215759277
    8. ')' → logprob: -11.563010215759277
    9. '()\' → logprob: -12.313010215759277
    10. '(com' → logprob: -12.813010215759277

Token 765: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.546619176864624
    2. 'solver' → logprob: -1.296619176864624
    3. ' solver' → logprob: -2.046619176864624
    4. '
' → logprob: -4.046619415283203
    5. '    
' → logprob: -7.296619415283203
    6. 's' → logprob: -9.921619415283203
    7. '_solver' → logprob: -9.921619415283203
    8. ' hidden' → logprob: -9.921619415283203
    9. ' solution' → logprob: -10.296619415283203
    10. 'solution' → logprob: -10.796619415283203

Token 766: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -5.860340752406046e-05
    2. ' solver' → logprob: -9.7500581741333
    3. 'solution' → logprob: -15.8750581741333
    4. 'resolver' → logprob: -17.500059127807617
    5. '   ' → logprob: -17.625059127807617
    6. '```' → logprob: -18.750059127807617
    7. 'solve' → logprob: -19.625059127807617
    8. 'sol' → logprob: -19.625059127807617
    9. '_solver' → logprob: -19.875059127807617
    10. '
' → logprob: -20.125059127807617

Token 767: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011146623641252518
    2. '=' → logprob: -4.511146545410156
    3. '.' → logprob: -9.511146545410156
    4. '(' → logprob: -10.886146545410156
    5. '(s' → logprob: -13.761146545410156
    6. '   ' → logprob: -13.761146545410156
    7. ')' → logprob: -14.011146545410156
    8. '.=' → logprob: -14.761146545410156
    9. '	' → logprob: -15.011146545410156
    10. '_' → logprob: -15.011146545410156

Token 768: ' Hidden' (ID: 62716)
  Prédit: ' Hidden'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Hidden' → logprob: -0.029750604182481766
    2. 'Hidden' → logprob: -3.5297505855560303
    3. ' hidden' → logprob: -16.52975082397461
    4. '_hidden' → logprob: -20.15475082397461
    5. '.Hidden' → logprob: -20.90475082397461
    6. ' ' → logprob: -21.27975082397461
    7. ' Hard' → logprob: -22.52975082397461
    8. '	H' → logprob: -22.77975082397461
    9. ' H' → logprob: -23.15475082397461
    10. '_H' → logprob: -23.15475082397461

Token 769: 'An' (ID: 2223)
  Prédit: 'An'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'An' → logprob: -1.9361264946837764e-07
    2. ' An' → logprob: -16.375
    3. '_an' → logprob: -17.5
    4. '>An' → logprob: -18.5
    5. 'A' → logprob: -19.5
    6. '```' → logprob: -20.75
    7. 'Hidden' → logprob: -20.875
    8. 'Analyzer' → logprob: -21.125
    9. 'an' → logprob: -21.25
    10. 'Analy' → logprob: -23.25

Token 770: 'agram' (ID: 7632)
  Prédit: 'agram'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agram' → logprob: -0.016167741268873215
    2. 'ram' → logprob: -4.266167640686035
    3. 'gram' → logprob: -6.641167640686035
    4. 'An' → logprob: -7.891167640686035
    5. 'aram' → logprob: -9.641167640686035
    6. 'an' → logprob: -9.891167640686035
    7. 'agrams' → logprob: -10.141167640686035
    8. 'arm' → logprob: -10.141167640686035
    9. 'ar' → logprob: -10.266167640686035
    10. 'ogram' → logprob: -10.641167640686035

Token 771: 'Solver' (ID: 70484)
  Prédit: 'Solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -3.128163257315464e-07
    2. 'Sol' → logprob: -16.0
    3. 'Solve' → logprob: -16.125
    4. 'solver' → logprob: -16.75
    5. '_solver' → logprob: -17.0
    6. 'Solved' → logprob: -19.625
    7. ' Solver' → logprob: -19.625
    8. 'olver' → logprob: -19.875
    9. ' solver' → logprob: -20.0
    10. 'Solution' → logprob: -20.0

Token 772: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.006141019053757191
    2. '(' → logprob: -5.256141185760498
    3. '(
' → logprob: -7.006141185760498
    4. 's' → logprob: -15.38114070892334
    5. '(

' → logprob: -16.131141662597656
    6. '(
' → logprob: -16.506141662597656
    7. '(S' → logprob: -17.131141662597656
    8. '   ' → logprob: -17.506141662597656
    9. '((' → logprob: -17.881141662597656
    10. ' (' → logprob: -18.006141662597656

Token 773: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '(s' → logprob: -17.875
    3. 'olver' → logprob: -19.125
    4. 's' → logprob: -19.5
    5. ',' → logprob: -19.5
    6. 'tring' → logprob: -19.75
    7. '_' → logprob: -20.0
    8. 'tr' → logprob: -20.375
    9. '(' → logprob: -20.5
    10. '１' → logprob: -20.625

Token 774: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000386701402021572
    2. ',s' → logprob: -7.875386714935303
    3. 's' → logprob: -12.375386238098145
    4. ',
' → logprob: -13.375386238098145
    5. ' ,' → logprob: -14.125386238098145
    6. '   ' → logprob: -17.00038719177246
    7. '‌,' → logprob: -18.25038719177246
    8. ',S' → logprob: -18.87538719177246
    9. ',p' → logprob: -19.12538719177246
    10. ',\
' → logprob: -19.25038719177246

Token 775: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.575939416885376
    2. ' s' → logprob: -0.825939416885376
    3. '	s' → logprob: -18.075939178466797
    4. '   ' → logprob: -18.825939178466797
    5. '<s' → logprob: -18.950939178466797
    6. '(s' → logprob: -18.950939178466797
    7. '```' → logprob: -19.575939178466797
    8. ' ' → logprob: -19.700939178466797
    9. ')s' → logprob: -20.325939178466797
    10. '`s' → logprob: -20.325939178466797

Token 776: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.259079363080673e-05
    2. ',' → logprob: -11.500012397766113
    3. 's' → logprob: -13.125012397766113
    4. 'com' → logprob: -15.875012397766113
    5. ' ' → logprob: -16.25001335144043
    6. '_' → logprob: -16.87501335144043
    7. '₂' → logprob: -17.25001335144043
    8. '_,' → logprob: -17.50001335144043
    9. '_com' → logprob: -17.75001335144043
    10. ' ,' → logprob: -18.50001335144043

Token 777: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9743012671824545e-05
    2. ',
' → logprob: -10.875020027160645
    3. '   ' → logprob: -14.500020027160645
    4. ')' → logprob: -16.125019073486328
    5. ' ,' → logprob: -16.125019073486328
    6. ',

' → logprob: -18.000019073486328
    7. '',' → logprob: -18.125019073486328
    8. '‌,' → logprob: -18.375019073486328
    9. '`,' → logprob: -18.875019073486328
    10. ',\
' → logprob: -18.875019073486328

Token 778: ' comparator' (ID: 96166)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.00020425561524461955
    2. ' comparator' → logprob: -8.500204086303711
    3. '   ' → logprob: -14.750204086303711
    4. '	com' → logprob: -16.25020408630371
    5. '(com' → logprob: -16.25020408630371
    6. 'compar' → logprob: -16.62520408630371
    7. ' com' → logprob: -17.25020408630371
    8. 'comp' → logprob: -18.87520408630371
    9. 'comparison' → logprob: -19.25020408630371
    10. ' compar' → logprob: -19.37520408630371

Token 779: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1871919333934784
    2. '   ' → logprob: -2.437191963195801
    3. ')
' → logprob: -2.562191963195801
    4. '
' → logprob: -5.187191963195801
    5. '    
' → logprob: -8.8121919631958
    6. '<|end|>' → logprob: -8.9371919631958
    7. '  
' → logprob: -9.8121919631958
    8. ' ' → logprob: -9.8121919631958
    9. '  ' → logprob: -9.9371919631958
    10. ').' → logprob: -10.0621919631958

Token 780: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.32643434405326843
    2. '   ' → logprob: -1.8264343738555908
    3. 'length' → logprob: -2.701434373855591
    4. 'result' → logprob: -3.201434373855591
    5. '
' → logprob: -4.701434135437012
    6. '    
' → logprob: -7.951434135437012
    7. ' print' → logprob: -9.326434135437012
    8. '```' → logprob: -9.701434135437012
    9. ' length' → logprob: -9.951434135437012
    10. 'res' → logprob: -10.701434135437012

Token 781: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.02568771503865719
    2. 'result' → logprob: -3.7756876945495605
    3. 'length' → logprob: -6.0256876945495605
    4. '   ' → logprob: -11.400688171386719
    5. 'res' → logprob: -12.150688171386719
    6. '```' → logprob: -12.650688171386719
    7. ' print' → logprob: -13.400688171386719
    8. '
' → logprob: -14.150688171386719
    9. '    
' → logprob: -14.275688171386719
    10. 'answer' → logprob: -14.775688171386719

Token 782: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -4.35837464465294e-05
    2. '(' → logprob: -10.125043869018555
    3. 'solver' → logprob: -12.625043869018555
    4. '(
' → logprob: -16.625043869018555
    5. '(sol' → logprob: -16.750043869018555
    6. '(solution' → logprob: -18.125043869018555
    7. '()' → logprob: -18.250043869018555
    8. '((' → logprob: -19.000043869018555
    9. ' (' → logprob: -19.500043869018555
    10. 's' → logprob: -20.375043869018555

Token 783: 'olver' (ID: 13941)
  Prédit: 'olver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olver' → logprob: -1.1472419600977446e-06
    2. 'over' → logprob: -14.875000953674316
    3. 'solver' → logprob: -15.125000953674316
    4. 'olve' → logprob: -15.500000953674316
    5. 'erver' → logprob: -15.875000953674316
    6. '1' → logprob: -16.500001907348633
    7. 'o' → logprob: -18.000001907348633
    8. 'ol' → logprob: -18.000001907348633
    9. 'oler' → logprob: -18.125001907348633
    10. '.' → logprob: -18.625001907348633

Token 784: '.long' (ID: 45499)
  Prédit: '.long'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.long' → logprob: -0.00011725161311915144
    2. '.' → logprob: -10.250117301940918
    3. ').' → logprob: -10.375117301940918
    4. '.hidden' → logprob: -11.000117301940918
    5. '.Long' → logprob: -11.375117301940918
    6. '.best' → logprob: -11.750117301940918
    7. '.longitude' → logprob: -13.500117301940918
    8. '.lon' → logprob: -13.500117301940918
    9. '<long' → logprob: -13.750117301940918
    10. '.closest' → logprob: -14.000117301940918

Token 785: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -1.3856492842023727e-06
    2. '_hidden' → logprob: -14.500000953674316
    3. 'hidden' → logprob: -14.625000953674316
    4. 'gest' → logprob: -15.375000953674316
    5. 'test' → logprob: -17.250001907348633
    6. 'ent' → logprob: -17.375001907348633
    7. 'thest' → logprob: -17.875001907348633
    8. '```' → logprob: -18.000001907348633
    9. 'en' → logprob: -18.125001907348633
    10. 'e' → logprob: -18.125001907348633

Token 786: '_hidden' (ID: 62109)
  Prédit: '_hidden'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hidden' → logprob: -2.2127087504486553e-05
    2. '_' → logprob: -11.000021934509277
    3. ')_' → logprob: -12.500021934509277
    4. 'hidden' → logprob: -14.375021934509277
    5. '_visible' → logprob: -14.500021934509277
    6. ')' → logprob: -15.000021934509277
    7. 'Hidden' → logprob: -15.875021934509277
    8. '"_' → logprob: -17.250022888183594
    9. ' hidden' → logprob: -17.500022888183594
    10. '(hidden' → logprob: -17.875022888183594

Token 787: '_an' (ID: 47921)
  Prédit: '_an'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_an' → logprob: -5.991464786347933e-05
    2. 'an' → logprob: -9.750060081481934
    3. '_hidden' → logprob: -14.500060081481934
    4. '_' → logprob: -15.250060081481934
    5. '"_' → logprob: -16.000059127807617
    6. 'An' → logprob: -16.125059127807617
    7. '```' → logprob: -16.125059127807617
    8. '	an' → logprob: -16.250059127807617
    9. '
' → logprob: -16.375059127807617
    10. ')_' → logprob: -16.875059127807617

Token 788: 'agram' (ID: 7632)
  Prédit: 'agram'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agram' → logprob: -0.08520276844501495
    2. 'gram' → logprob: -2.835202693939209
    3. 'ram' → logprob: -3.835202693939209
    4. 'ogram' → logprob: -7.085202693939209
    5. 'aram' → logprob: -8.460203170776367
    6. 'arm' → logprob: -9.210203170776367
    7. 'am' → logprob: -10.210203170776367
    8. 'igram' → logprob: -10.210203170776367
    9. 'ar' → logprob: -10.460203170776367
    10. 'r' → logprob: -10.460203170776367

Token 789: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: 0.0
    2. '_l' → logprob: -17.125
    3. 'length' → logprob: -17.375
    4. '_len' → logprob: -19.125
    5. '_lengths' → logprob: -20.0
    6. 'ength' → logprob: -20.25
    7. '_le' → logprob: -21.0
    8. '_size' → logprob: -21.125
    9. '_LENGTH' → logprob: -21.25
    10. '_' → logprob: -21.375

Token 790: '())


' (ID: 131583)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0009131324477493763
    2. '()' → logprob: -7.000913143157959
    3. ')' → logprob: -14.1259126663208
    4. '())
' → logprob: -14.5009126663208
    5. ' ())' → logprob: -15.1259126663208
    6. '(' → logprob: -17.750913619995117
    7. '())
' → logprob: -18.250913619995117
    8. '();)' → logprob: -18.375913619995117
    9. '()
' → logprob: -18.500913619995117
    10. '())

' → logprob: -18.625913619995117

Token 791: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0099698631092906
    2. '<|end|>' → logprob: -5.384969711303711
    3. '```' → logprob: -5.384969711303711
    4. ' if' → logprob: -7.634969711303711
    5. '#' → logprob: -8.509969711303711
    6. '
' → logprob: -10.509969711303711
    7. '[' → logprob: -11.009969711303711
    8. '\' → logprob: -12.384969711303711
    9. '<|end|>' → logprob: -12.759969711303711
    10. '__' → logprob: -13.009969711303711

Token 792: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.12703919410705566
    2. '__' → logprob: -2.1270391941070557
    3. '_' → logprob: -9.752038955688477
    4. '_name' → logprob: -10.877038955688477
    5. 'name' → logprob: -11.377038955688477
    6. '___' → logprob: -11.752038955688477
    7. ' ' → logprob: -12.127038955688477
    8. ' ' → logprob: -12.377038955688477
    9. ' ' → logprob: -14.377038955688477
    10. 'Name' → logprob: -14.502038955688477

Token 793: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.13591265678405762
    2. ' ==' → logprob: -2.7609126567840576
    3. '==' → logprob: -2.8859126567840576
    4. '=="' → logprob: -5.760912895202637
    5. '.__' → logprob: -6.260912895202637
    6. 'name' → logprob: -7.260912895202637
    7. '__.__' → logprob: -7.260912895202637
    8. '=='' → logprob: -8.010912895202637
    9. '[' → logprob: -8.135912895202637
    10. ' __' → logprob: -8.385912895202637

Token 794: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.981667537620524e-06
    2. '__.__' → logprob: -13.625001907348633
    3. '==' → logprob: -14.500001907348633
    4. '__
' → logprob: -16.250001907348633
    5. '____' → logprob: -17.375001907348633
    6. '_' → logprob: -17.625001907348633
    7. '___' → logprob: -18.125001907348633
    8. '__.' → logprob: -18.250001907348633
    9. '__,' → logprob: -19.000001907348633
    10. ' ==' → logprob: -19.000001907348633

Token 795: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.010045516304671764
    2. '==' → logprob: -4.635045528411865
    3. '=="' → logprob: -8.510045051574707
    4. ' ==' → logprob: -9.510045051574707
    5. '=='' → logprob: -11.760045051574707
    6. '__.__' → logprob: -12.760045051574707
    7. '___' → logprob: -13.760045051574707
    8. '=' → logprob: -14.385045051574707
    9. '===' → logprob: -14.760045051574707
    10. '____' → logprob: -15.510045051574707

Token 796: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.029755352064967155
    2. ''' → logprob: -3.5297553539276123
    3. ' "__' → logprob: -12.779755592346191
    4. '__' → logprob: -14.529755592346191
    5. ''"' → logprob: -14.654755592346191
    6. '"user' → logprob: -14.904755592346191
    7. '"_' → logprob: -15.904755592346191
    8. '"name' → logprob: -16.154754638671875
    9. '("__' → logprob: -16.279754638671875
    10. ' '__' → logprob: -16.654754638671875

Token 797: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2587232291698456
    2. 'main' → logprob: -1.508723258972168
    3. '"' → logprob: -5.008723258972168
    4. ''' → logprob: -9.758723258972168
    5. '_main' → logprob: -10.633723258972168
    6. 'name' → logprob: -12.633723258972168
    7. '__":
' → logprob: -13.008723258972168
    8. ' main' → logprob: -13.633723258972168
    9. '__
' → logprob: -14.008723258972168
    10. ' "__' → logprob: -14.258723258972168

Token 798: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.06207277998328209
    2. '__' → logprob: -2.81207275390625
    3. '__':
' → logprob: -9.18707275390625
    4. '__.' → logprob: -13.56207275390625
    5. '__.__' → logprob: -14.43707275390625
    6. '__["' → logprob: -14.56207275390625
    7. '__:' → logprob: -15.93707275390625
    8. '__",' → logprob: -16.31207275390625
    9. '_' → logprob: -16.56207275390625
    10. '__
' → logprob: -16.68707275390625

Token 799: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2565808892250061
    2. 'main' → logprob: -2.1315808296203613
    3. '__' → logprob: -3.0065808296203613
    4. ' main' → logprob: -3.7565808296203613
    5. '"' → logprob: -4.006580829620361
    6. 'True' → logprob: -5.131580829620361
    7. ' True' → logprob: -6.131580829620361
    8. '    
' → logprob: -6.256580829620361
    9. ''' → logprob: -6.756580829620361
    10. ' __' → logprob: -7.006580829620361

Token 800: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -4.246537173457909e-06
    2. ' main' → logprob: -12.500003814697266
    3. '	main' → logprob: -14.500003814697266
    4. '   ' → logprob: -17.500003814697266
    5. '_main' → logprob: -19.125003814697266
    6. 'import' → logprob: -21.375003814697266
    7. '.main' → logprob: -21.375003814697266
    8. '(main' → logprob: -22.125003814697266
    9. '```' → logprob: -22.750003814697266
    10. '
' → logprob: -23.875003814697266

Token 801: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 799
Tokens correctement prédits (1ère position, stricte): 432
Tokens correctement prédits (1ère position, avec adaptation): 467
Tokens correctement prédits (top 10): 726
Précision stricte (1ère position): 54.07%
Précision adaptée (1ère position): 58.45%
Précision (top 10): 90.86%
================================================================================
