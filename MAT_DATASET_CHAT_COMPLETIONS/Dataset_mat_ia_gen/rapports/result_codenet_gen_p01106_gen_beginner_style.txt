================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:23
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def solve():
    import sys

    sys.setrecursionlimit(10000)
    
    def find_folds(n, i, j):
        # n: number of folds
        # i: marked layer (from top)
        # j: marked part (from left)
        if n == 0:
            return ""
        half = 2 ** (n - 1)
        if i <= half and j > half:
            # mark in left half (bottom fold goes on top)
            # fold was from Left to Right (L)
            return 'L' + find_folds(n - 1, i, j - half)
        elif i <= half and j <= half:
            # mark in right half (top fold goes on bottom)
            # fold was from Right to Left (R)
            return 'R' + find_folds(n - 1, i, j)
        elif i > half and j <= half:
            # mark in left half (bottom fold goes on top)
            # fold was from Left to Right (L)
            return 'L' + find_folds(n - 1, i - half, j)
        else:
            # i > half and j > half
            # fold was from Right to Left (R)
            return 'R' + find_folds(n - 1, i - half, j - half)

    for line in sys.stdin:
        n, i, j = map(int, line.split())
        if n == 0 and i == 0 and j == 0:
            break
        print(find_folds(n, i, j))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' solve' (ID: 17722)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -1.0205250978469849
    2. '   ' → logprob: -1.1455250978469849
    3. '\n' → logprob: -1.6455250978469849
    4. '```' → logprob: -2.5205249786376953
    5. '    
' → logprob: -3.7705249786376953
    6. ' 
' → logprob: -5.270524978637695
    7. '
' → logprob: -5.270524978637695
    8. ':' → logprob: -6.145524978637695
    9. '    ' → logprob: -6.645524978637695
    10. '`' → logprob: -6.895524978637695

Token 4: ' import' (ID: 1588)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8679969310760498
    2. 'x' → logprob: -1.2429969310760498
    3. '   ' → logprob: -2.11799693107605
    4. 'i' → logprob: -2.61799693107605
    5. '\n' → logprob: -3.74299693107605
    6. 'a' → logprob: -4.117997169494629
    7. '#' → logprob: -4.492997169494629
    8. 'r' → logprob: -4.992997169494629
    9. '\' → logprob: -5.117997169494629
    10. 'pass' → logprob: -5.242997169494629

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.03070881776511669
    2. ' math' → logprob: -3.5307087898254395
    3. ' ' → logprob: -7.7807087898254395
    4. ' os' → logprob: -8.280709266662598
    5. ' itertools' → logprob: -9.030709266662598
    6. ' numpy' → logprob: -9.530709266662598
    7. 'sys' → logprob: -10.155709266662598
    8. '=sys' → logprob: -11.280709266662598
    9. ' functools' → logprob: -11.405709266662598
    10. ' collections' → logprob: -11.780709266662598

Token 6: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8628436326980591
    2. '\' → logprob: -1.362843632698059
    3. '.readline' → logprob: -1.737843632698059
    4. '```' → logprob: -3.3628435134887695
    5. '   ' → logprob: -3.4878435134887695
    6. '.' → logprob: -3.8628435134887695
    7. 'newline' → logprob: -4.1128435134887695
    8. '.stdout' → logprob: -4.3628435134887695
    9. '.stdin' → logprob: -4.3628435134887695
    10. '
' → logprob: -6.2378435134887695

Token 7: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03927726298570633
    2. 'input' → logprob: -4.914277076721191
    3. 'data' → logprob: -4.914277076721191
    4. '```' → logprob: -4.914277076721191
    5. '
' → logprob: -5.414277076721191
    6. '    
' → logprob: -5.789277076721191
    7. '\n' → logprob: -6.164277076721191
    8. ' for' → logprob: -6.914277076721191
    9. ' readline' → logprob: -6.914277076721191
    10. 'for' → logprob: -7.289277076721191

Token 8: ' sys' (ID: 12228)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.3818819224834442
    2. 'for' → logprob: -1.6318819522857666
    3. 'input' → logprob: -2.7568819522857666
    4. '   ' → logprob: -3.0068819522857666
    5. 'n' → logprob: -5.3818817138671875
    6. ' for' → logprob: -6.5068817138671875
    7. ' data' → logprob: -7.1318817138671875
    8. 'lines' → logprob: -7.2568817138671875
    9. '```' → logprob: -7.3818817138671875
    10. 'line' → logprob: -8.131881713867188

Token 9: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.44001832604408264
    2. '.stdin' → logprob: -1.1900182962417603
    3. '.stdout' → logprob: -3.06501841545105
    4. '.readline' → logprob: -5.940018177032471
    5. '.exit' → logprob: -7.190018177032471
    6. '.argv' → logprob: -7.440018177032471
    7. '.stderr' → logprob: -7.440018177032471
    8. ' .' → logprob: -8.940018653869629
    9. '.read' → logprob: -8.940018653869629
    10. '.std' → logprob: -9.065018653869629

Token 10: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.034613337367773056
    2. '_rec' → logprob: -3.5346133708953857
    3. '_limit' → logprob: -6.034613132476807
    4. '_trace' → logprob: -7.284613132476807
    5. ' recursion' → logprob: -7.784613132476807
    6. 'trace' → logprob: -8.159613609313965
    7. 'limit' → logprob: -8.659613609313965
    8. 's' → logprob: -9.409613609313965
    9. '_int' → logprob: -9.534613609313965
    10. '_' → logprob: -9.534613609313965

Token 11: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0012991653056815267
    2. 'urs' → logprob: -6.8762993812561035
    3. 'ur' → logprob: -8.626298904418945
    4. 'ursive' → logprob: -9.751298904418945
    5. 'urf' → logprob: -11.751298904418945
    6. 'ursor' → logprob: -11.751298904418945
    7. 'limit' → logprob: -12.376298904418945
    8. 'urse' → logprob: -12.501298904418945
    9. 'url' → logprob: -13.876298904418945
    10. '_' → logprob: -13.876298904418945

Token 12: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.31374457478523254
    2. '_limit' → logprob: -1.3137445449829102
    3. ' limit' → logprob: -8.56374454498291
    4. '_depth' → logprob: -8.93874454498291
    5. 'lim' → logprob: -9.18874454498291
    6. 'depth' → logprob: -10.93874454498291
    7. '_LIMIT' → logprob: -11.18874454498291
    8. '_lim' → logprob: -11.31374454498291
    9. '-limit' → logprob: -12.68874454498291
    10. 'Limit' → logprob: -13.31374454498291

Token 13: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.246537173457909e-06
    2. '(
' → logprob: -13.375003814697266
    3. '(

' → logprob: -14.250003814697266
    4. '((' → logprob: -14.625003814697266
    5. '()' → logprob: -15.000003814697266
    6. '('' → logprob: -15.125003814697266
    7. ' (' → logprob: -15.250003814697266
    8. '("("' → logprob: -15.625003814697266
    9. '(None' → logprob: -15.875003814697266
    10. '(int' → logprob: -16.250003814697266

Token 14: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00862426683306694
    2. '100' → logprob: -4.758624076843262
    3. '   ' → logprob: -12.008624076843262
    4. '500' → logprob: -13.758624076843262
    5. '1' → logprob: -14.008624076843262
    6. ' ' → logprob: -14.508624076843262
    7. '200' → logprob: -15.258624076843262
    8. '300' → logprob: -15.258624076843262
    9. '(' → logprob: -15.508624076843262
    10. '           ' → logprob: -16.008625030517578

Token 15: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.39273199439048767
    2. '0' → logprob: -1.14273202419281
    3. '000' → logprob: -5.1427321434021
    4. '4' → logprob: -14.392731666564941
    5. '5' → logprob: -15.142731666564941
    6. ')' → logprob: -15.392731666564941
    7. '50' → logprob: -15.517731666564941
    8. '48' → logprob: -15.642731666564941
    9. '04' → logprob: -16.017732620239258
    10. '09' → logprob: -16.767732620239258

Token 16: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ')
' → logprob: -14.125001907348633
    3. ' )' → logprob: -14.875001907348633
    4. '   ' → logprob: -15.375001907348633
    5. '`)' → logprob: -16.375001907348633
    6. '```' → logprob: -16.750001907348633
    7. '}' → logprob: -16.875001907348633
    8. '))' → logprob: -17.000001907348633
    9. '')' → logprob: -17.125001907348633
    10. ' ' → logprob: -17.375001907348633

Token 17: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7173886299133301
    2. '   ' → logprob: -1.09238862991333
    3. '    
' → logprob: -2.34238862991333
    4. '\n' → logprob: -3.21738862991333
    5. '\' → logprob: -3.59238862991333
    6. '```' → logprob: -5.46738862991333
    7. '' → logprob: -6.21738862991333
    8. '  
' → logprob: -6.59238862991333
    9. '<|end|>' → logprob: -6.96738862991333
    10. 'newline' → logprob: -6.96738862991333

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018150296062231064
    2. 'n' → logprob: -4.143150329589844
    3. 'input' → logprob: -6.643150329589844
    4. ' n' → logprob: -8.143150329589844
    5. 'data' → logprob: -8.268150329589844
    6. 'a' → logprob: -9.768150329589844
    7. '    
' → logprob: -10.393150329589844
    8. ' input' → logprob: -10.518150329589844
    9. '```' → logprob: -10.768150329589844
    10. 'def' → logprob: -11.018150329589844

Token 19: ' def' (ID: 1056)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1469331830739975
    2. '   ' → logprob: -2.021933078765869
    3. ' n' → logprob: -5.896933078765869
    4. 'input' → logprob: -7.521933078765869
    5. 'data' → logprob: -8.021933555603027
    6. 't' → logprob: -8.646933555603027
    7. 'i' → logprob: -9.396933555603027
    8. 'a' → logprob: -9.521933555603027
    9. '```' → logprob: -9.646933555603027
    10. 'd' → logprob: -10.146933555603027

Token 20: ' find' (ID: 1646)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.0005855606868863106
    2. ' f' → logprob: -8.250585556030273
    3. 'dfs' → logprob: -8.750585556030273
    4. ' helper' → logprob: -10.125585556030273
    5. ' main' → logprob: -10.375585556030273
    6. ' DFS' → logprob: -10.375585556030273
    7. ' dp' → logprob: -10.875585556030273
    8. ' factorial' → logprob: -11.375585556030273
    9. ' back' → logprob: -11.875585556030273
    10. ' factor' → logprob: -12.250585556030273

Token 21: '_f' (ID: 1337)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.004574073012918234
    2. ' _' → logprob: -6.379574298858643
    3. '(' → logprob: -7.129574298858643
    4. '_max' → logprob: -7.129574298858643
    5. '_path' → logprob: -8.129573822021484
    6. '(_' → logprob: -8.379573822021484
    7. '_parent' → logprob: -8.504573822021484
    8. '_depth' → logprob: -9.504573822021484
    9. '_paths' → logprob: -9.629573822021484
    10. '_sub' → logprob: -9.754573822021484

Token 22: 'olds' (ID: 37608)
  Prédit: 'actor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'actor' → logprob: -0.09817446768283844
    2. 'a' → logprob: -4.098174571990967
    3. 'requency' → logprob: -4.098174571990967
    4. 'or' → logprob: -4.723174571990967
    5. 'unction' → logprob: -4.848174571990967
    6. 'ind' → logprob: -4.973174571990967
    7. 'actors' → logprob: -4.973174571990967
    8. 'req' → logprob: -5.598174571990967
    9. 'irst' → logprob: -5.598174571990967
    10. 'act' → logprob: -5.848174571990967

Token 23: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005959733389317989
    2. '_' → logprob: -5.255959510803223
    3. '():' → logprob: -8.380959510803223
    4. ' (' → logprob: -9.505959510803223
    5. '(n' → logprob: -9.630959510803223
    6. '(_' → logprob: -9.880959510803223
    7. '_count' → logprob: -10.380959510803223
    8. '(x' → logprob: -10.630959510803223
    9. '_for' → logprob: -10.755959510803223
    10. ':' → logprob: -11.380959510803223

Token 24: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.19400903582572937
    2. ',' → logprob: -1.8190090656280518
    3. ')' → logprob: -4.319008827209473
    4. ':' → logprob: -7.444008827209473
    5. ' ):' → logprob: -8.819008827209473
    6. ' ,' → logprob: -10.444008827209473
    7. ',n' → logprob: -10.819008827209473
    8. '):
' → logprob: -11.819008827209473
    9. '_' → logprob: -11.944008827209473
    10. 's' → logprob: -12.069008827209473

Token 25: ' i' (ID: 575)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.5713304877281189
    2. ' m' → logprob: -1.3213305473327637
    3. 'k' → logprob: -3.4463305473327637
    4. ' folds' → logprob: -3.5713305473327637
    5. ' depth' → logprob: -4.446330547332764
    6. ' fold' → logprob: -4.696330547332764
    7. ' p' → logprob: -4.821330547332764
    8. 'm' → logprob: -4.946330547332764
    9. ' d' → logprob: -4.946330547332764
    10. ' a' → logprob: -5.071330547332764

Token 26: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.21143437922000885
    2. ',' → logprob: -1.7114343643188477
    3. ')' → logprob: -4.961434364318848
    4. '+' → logprob: -6.086434364318848
    5. ' ):' → logprob: -8.336434364318848
    6. ' ,' → logprob: -8.836434364318848
    7. '=' → logprob: -8.961434364318848
    8. '):
' → logprob: -9.836434364318848
    9. '-' → logprob: -10.461434364318848
    10. 'x' → logprob: -11.211434364318848

Token 27: ' j' (ID: 441)
  Prédit: ' folds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' folds' → logprob: -1.0323960781097412
    2. ' j' → logprob: -1.9073960781097412
    3. ' k' → logprob: -2.282396078109741
    4. ' current' → logprob: -2.907396078109741
    5. ' m' → logprob: -3.032396078109741
    6. 'j' → logprob: -3.157396078109741
    7. ' depth' → logprob: -3.532396078109741
    8. 'k' → logprob: -3.657396078109741
    9. 'fold' → logprob: -4.03239631652832
    10. ' fold' → logprob: -4.15739631652832

Token 28: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016957873478531837
    2. ',' → logprob: -4.516957759857178
    3. ')' → logprob: -5.141957759857178
    4. ' ):' → logprob: -10.891958236694336
    5. ':' → logprob: -11.641958236694336
    6. '   ' → logprob: -12.641958236694336
    7. '),' → logprob: -13.141958236694336
    8. '):
' → logprob: -13.391958236694336
    9. ' ,' → logprob: -13.391958236694336
    10. ''):' → logprob: -13.766958236694336

Token 29: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018448760733008385
    2. '       ' → logprob: -4.768448829650879
    3. '):' → logprob: -4.893448829650879
    4. ':
' → logprob: -7.268448829650879
    5. ' :' → logprob: -7.643448829650879
    6. '   ' → logprob: -7.893448829650879
    7. ',' → logprob: -9.018448829650879
    8. '():' → logprob: -9.143448829650879
    9. '    ' → logprob: -9.268448829650879
    10. '<|end|>' → logprob: -9.268448829650879

Token 30: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1609588861465454
    2. ' if' → logprob: -1.5359588861465454
    3. 'if' → logprob: -1.5359588861465454
    4. ' ' → logprob: -2.785958766937256
    5. ':' → logprob: -3.035958766937256
    6. '\n' → logprob: -3.285958766937256
    7. '    ' → logprob: -3.535958766937256
    8. '   ' → logprob: -3.660958766937256
    9. '        ' → logprob: -4.410958766937256
    10. ':
' → logprob: -4.660958766937256

Token 31: ' n' (ID: 297)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3929095268249512
    2. '   ' → logprob: -1.7679095268249512
    3. ' if' → logprob: -1.7679095268249512
    4. 'if' → logprob: -2.017909526824951
    5. '       ' → logprob: -2.392909526824951
    6. '    ' → logprob: -3.017909526824951
    7. '#' → logprob: -3.142909526824951
    8. '        ' → logprob: -4.142909526824951
    9. ' """' → logprob: -4.142909526824951
    10. ' #' → logprob: -4.517909526824951

Token 32: ':' (ID: 25)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8522013425827026
    2. ')' → logprob: -1.2272013425827026
    3. '==' → logprob: -2.977201461791992
    4. ' <=' → logprob: -3.102201461791992
    5. '[' → logprob: -3.727201461791992
    6. ' ' → logprob: -3.852201461791992
    7. ',' → logprob: -3.852201461791992
    8. '   ' → logprob: -3.977201461791992
    9. '-' → logprob: -4.352201461791992
    10. '<|end|>' → logprob: -4.727201461791992

Token 33: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -1.5255906581878662
    2. ' n' → logprob: -1.6505906581878662
    3. ' int' → logprob: -1.7755906581878662
    4. 'int' → logprob: -2.025590658187866
    5. 'n' → logprob: -2.400590658187866
    6. 'number' → logprob: -3.025590658187866
    7. ' ' → logprob: -3.775590658187866
    8. 'length' → logprob: -3.900590658187866
    9. ' length' → logprob: -4.025590896606445
    10. '   ' → logprob: -4.400590896606445

Token 34: ' of' (ID: 328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9860387444496155
    2. '   ' → logprob: -1.9860386848449707
    3. ' of' → logprob: -2.2360386848449707
    4. '<|end|>' → logprob: -2.4860386848449707
    5. ' =' → logprob: -2.6110386848449707
    6. 'of' → logprob: -2.7360386848449707
    7. '_tokens' → logprob: -3.6110386848449707
    8. '=' → logprob: -3.6110386848449707
    9. '<|end|>' → logprob: -3.7360386848449707
    10. ' ' → logprob: -4.236038684844971

Token 35: ' folds' (ID: 102877)
  Prédit: ' folds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' folds' → logprob: -0.5763453245162964
    2. ' ' → logprob: -1.7013453245162964
    3. ')' → logprob: -2.951345443725586
    4. 'fold' → logprob: -3.076345443725586
    5. 's' → logprob: -3.326345443725586
    6. ' folding' → logprob: -3.576345443725586
    7. ' layers' → logprob: -4.576345443725586
    8. ' )' → logprob: -4.576345443725586
    9. ' segments' → logprob: -4.701345443725586
    10. '<|end|>' → logprob: -5.076345443725586

Token 36: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5221704840660095
    2. '):' → logprob: -2.1471705436706543
    3. '   ' → logprob: -2.2721705436706543
    4. '<|end|>' → logprob: -2.5221705436706543
    5. '       ' → logprob: -3.3971705436706543
    6. ',' → logprob: -3.3971705436706543
    7. ' ' → logprob: -4.022170543670654
    8. ':' → logprob: -5.147170543670654
    9. '    ' → logprob: -5.772170543670654
    10. '<|end|>' → logprob: -5.772170543670654

Token 37: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2139657735824585
    2. ':' → logprob: -1.5889657735824585
    3. ',' → logprob: -1.8389657735824585
    4. ' ' → logprob: -2.088965892791748
    5. ')' → logprob: -2.588965892791748
    6. '):' → logprob: -2.838965892791748
    7. '       ' → logprob: -3.463965892791748
    8. '    ' → logprob: -4.213965892791748
    9. ' :' → logprob: -4.838965892791748
    10. '
' → logprob: -4.963965892791748

Token 38: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7118470072746277
    2. ' ' → logprob: -1.7118470668792725
    3. '   ' → logprob: -2.0868470668792725
    4. '    ' → logprob: -3.2118470668792725
    5. ')' → logprob: -3.3368470668792725
    6. ',' → logprob: -3.5868470668792725
    7. ':' → logprob: -3.9618470668792725
    8. '        ' → logprob: -3.9618470668792725
    9. ' if' → logprob: -4.086846828460693
    10. 'if' → logprob: -4.836846828460693

Token 39: ' i' (ID: 575)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.11393601447343826
    2. 'if' → logprob: -3.113935947418213
    3. '    ' → logprob: -3.863935947418213
    4. '       ' → logprob: -4.238935947418213
    5. '   ' → logprob: -4.738935947418213
    6. ' return' → logprob: -5.363935947418213
    7. '        ' → logprob: -5.863935947418213
    8. ' folds' → logprob: -5.863935947418213
    9. ' ' → logprob: -6.113935947418213
    10. 'return' → logprob: -6.488935947418213

Token 40: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6504380106925964
    2. '+' → logprob: -1.7754380702972412
    3. ' ==' → logprob: -2.775438070297241
    4. '<|end|>' → logprob: -3.025438070297241
    5. ' +' → logprob: -3.400438070297241
    6. ' >' → logprob: -3.400438070297241
    7. ' <=' → logprob: -3.525438070297241
    8. ' ,' → logprob: -3.775438070297241
    9. ')' → logprob: -4.025437831878662
    10. '=' → logprob: -4.275437831878662

Token 41: ' marked' (ID: 20779)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.14843343198299408
    2. ' start' → logprob: -2.2734334468841553
    3. 'current' → logprob: -4.773433208465576
    4. ' starting' → logprob: -4.898433208465576
    5. ' ' → logprob: -5.148433208465576
    6. 'start' → logprob: -5.523433208465576
    7. ' fold' → logprob: -6.523433208465576
    8. ' left' → logprob: -6.648433208465576
    9. ' j' → logprob: -6.648433208465576
    10. ' i' → logprob: -7.023433208465576

Token 42: ' layer' (ID: 10261)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18955975770950317
    2. '_' → logprob: -2.8145596981048584
    3. ' )' → logprob: -3.5645596981048584
    4. ',' → logprob: -3.8145596981048584
    5. '<|end|>' → logprob: -3.9395596981048584
    6. ' ,' → logprob: -4.5645599365234375
    7. ' ' → logprob: -4.5645599365234375
    8. '_positions' → logprob: -4.8145599365234375
    9. ' _' → logprob: -5.6895599365234375
    10. '_fold' → logprob: -6.8145599365234375

Token 43: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9012601375579834
    2. '<|end|>' → logprob: -1.6512601375579834
    3. ' ' → logprob: -2.1512601375579834
    4. ',' → logprob: -2.1512601375579834
    5. ' ,' → logprob: -2.4012601375579834
    6. ' )' → logprob: -4.0262603759765625
    7. '+' → logprob: -4.7762603759765625
    8. '<|end|>' → logprob: -5.1512603759765625
    9. '   ' → logprob: -5.2762603759765625
    10. 's' → logprob: -5.6512603759765625

Token 44: 'from' (ID: 2845)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15547285974025726
    2. ' )' → logprob: -2.030472755432129
    3. '0' → logprob: -5.530472755432129
    4. ')
' → logprob: -6.655472755432129
    5. ' )
' → logprob: -6.780472755432129
    6. ' ' → logprob: -6.905472755432129
    7. ' i' → logprob: -6.905472755432129
    8. ',' → logprob: -7.155472755432129
    9. 'i' → logprob: -8.155472755432129
    10. '1' → logprob: -8.280472755432129

Token 45: ' top' (ID: 2344)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.0616626739501953
    2. ' top' → logprob: -1.6866626739501953
    3. ' ' → logprob: -2.0616626739501953
    4. '1' → logprob: -2.4366626739501953
    5. '0' → logprob: -2.5616626739501953
    6. ' i' → logprob: -3.0616626739501953
    7. 'the' → logprob: -3.1866626739501953
    8. 'i' → logprob: -3.4366626739501953
    9. 'top' → logprob: -3.6866626739501953
    10. ' bottom' → logprob: -4.311662673950195

Token 46: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1917252093553543
    2. ' )' → logprob: -1.816725254058838
    3. ' )
' → logprob: -5.191725254058838
    4. ' to' → logprob: -5.816725254058838
    5. ')
' → logprob: -5.941725254058838
    6. ',' → logprob: -8.44172477722168
    7. ' layer' → logprob: -9.31672477722168
    8. '+' → logprob: -9.69172477722168
    9. ' ,' → logprob: -9.81672477722168
    10. '<|end|>' → logprob: -10.56672477722168

Token 47: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9664786458015442
    2. ')' → logprob: -1.8414785861968994
    3. ':' → logprob: -1.8414785861968994
    4. '<|end|>' → logprob: -1.8414785861968994
    5. '):' → logprob: -2.7164785861968994
    6. ' ' → logprob: -3.8414785861968994
    7. ',' → logprob: -3.9664785861968994
    8. '   ' → logprob: -4.0914788246154785
    9. ' :' → logprob: -5.2164788246154785
    10. '<|end|>' → logprob: -5.4664788246154785

Token 48: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8441934585571289
    2. '       ' → logprob: -1.844193458557129
    3. ',' → logprob: -2.469193458557129
    4. ' ' → logprob: -2.469193458557129
    5. ' if' → logprob: -2.469193458557129
    6. 'if' → logprob: -3.344193458557129
    7. ')' → logprob: -3.594193458557129
    8. '    ' → logprob: -3.844193458557129
    9. ' ,' → logprob: -3.844193458557129
    10. ' k' → logprob: -4.969193458557129

Token 49: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.7145323753356934
    2. 'j' → logprob: -0.8395323753356934
    3. ' ' → logprob: -3.7145323753356934
    4. '   ' → logprob: -4.339532375335693
    5. ' if' → logprob: -4.839532375335693
    6. '    ' → logprob: -5.089532375335693
    7. ' return' → logprob: -5.589532375335693
    8. '```' → logprob: -5.839532375335693
    9. 'return' → logprob: -6.339532375335693
    10. 'k' → logprob: -6.339532375335693

Token 50: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021186113357543945
    2. '):' → logprob: -4.271185874938965
    3. ' :' → logprob: -5.521185874938965
    4. ')' → logprob: -6.396185874938965
    5. ',' → logprob: -7.396185874938965
    6. '=' → logprob: -8.646185874938965
    7. '+' → logprob: -9.396185874938965
    8. ' ' → logprob: -10.021185874938965
    9. ' =' → logprob: -10.021185874938965
    10. ' ):' → logprob: -10.271185874938965

Token 51: ' marked' (ID: 20779)
  Prédit: ' marked'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' marked' → logprob: -0.9000276923179626
    2. ' number' → logprob: -2.1500277519226074
    3. 'marked' → logprob: -2.1500277519226074
    4. ' total' → logprob: -2.2750277519226074
    5. ' target' → logprob: -3.5250277519226074
    6. ' layers' → logprob: -3.5250277519226074
    7. ' current' → logprob: -3.6500277519226074
    8. ' layer' → logprob: -4.150027751922607
    9. 'number' → logprob: -4.150027751922607
    10. ' remaining' → logprob: -4.150027751922607

Token 52: ' part' (ID: 997)
  Prédit: ' layer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' layer' → logprob: -0.5697988271713257
    2. 'layer' → logprob: -1.3197988271713257
    3. '_layer' → logprob: -2.6947989463806152
    4. ')' → logprob: -2.9447989463806152
    5. ' layers' → logprob: -4.069798946380615
    6. 'layers' → logprob: -4.194798946380615
    7. '_layers' → logprob: -5.569798946380615
    8. ' )' → logprob: -5.694798946380615
    9. '_' → logprob: -6.194798946380615
    10. ' _' → logprob: -6.882298946380615

Token 53: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5792630910873413
    2. '):' → logprob: -1.2042630910873413
    3. ':' → logprob: -2.329263210296631
    4. ' ' → logprob: -3.829263210296631
    5. '   ' → logprob: -4.954263210296631
    6. '
' → logprob: -5.579263210296631
    7. ',' → logprob: -6.079263210296631
    8. ' )' → logprob: -6.579263210296631
    9. '):
' → logprob: -6.704263210296631
    10. '       ' → logprob: -7.329263210296631

Token 54: 'from' (ID: 2845)
  Prédit: 'from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5525676012039185
    2. ')' → logprob: -1.0525676012039185
    3. ' from' → logprob: -2.802567481994629
    4. 'top' → logprob: -6.052567481994629
    5. ' )' → logprob: -6.177567481994629
    6. '0' → logprob: -6.427567481994629
    7. '1' → logprob: -6.552567481994629
    8. ',' → logprob: -6.802567481994629
    9. '')' → logprob: -7.177567481994629
    10. ' ' → logprob: -7.302567481994629

Token 55: ' left' (ID: 3561)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.33129647374153137
    2. ' top' → logprob: -1.831296443939209
    3. 'bottom' → logprob: -2.956296443939209
    4. 'the' → logprob: -4.206296443939209
    5. 'left' → logprob: -4.206296443939209
    6. '0' → logprob: -4.206296443939209
    7. ' bottom' → logprob: -4.456296443939209
    8. ' the' → logprob: -5.081296443939209
    9. ' ' → logprob: -6.456296443939209
    10. '1' → logprob: -6.581296443939209

Token 56: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028671622276306152
    2. '):' → logprob: -5.877867221832275
    3. '   ' → logprob: -10.627866744995117
    4. ' )' → logprob: -11.627866744995117
    5. ')
' → logprob: -11.877866744995117
    6. '#' → logprob: -12.002866744995117
    7. '       ' → logprob: -12.502866744995117
    8. '):
' → logprob: -12.877866744995117
    9. ',' → logprob: -13.252866744995117
    10. '```' → logprob: -13.502866744995117

Token 57: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6402681469917297
    2. '):' → logprob: -1.140268087387085
    3. '       ' → logprob: -2.140268087387085
    4. ')' → logprob: -3.640268087387085
    5. ' :' → logprob: -5.890268325805664
    6. '   ' → logprob: -6.015268325805664
    7. ':
' → logprob: -6.890268325805664
    8. '<|end|>' → logprob: -7.265268325805664
    9. '):
' → logprob: -7.640268325805664
    10. ' ' → logprob: -8.265268325805664

Token 58: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25750434398651123
    2. '\n' → logprob: -2.382504463195801
    3. '   ' → logprob: -3.882504463195801
    4. ')' → logprob: -4.007504463195801
    5. ':' → logprob: -4.507504463195801
    6. '\' → logprob: -4.507504463195801
    7. '
' → logprob: -4.757504463195801
    8. ' if' → logprob: -4.757504463195801
    9. ' ' → logprob: -4.757504463195801
    10. ' 
' → logprob: -5.132504463195801

Token 59: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.08090150356292725
    2. ' i' → logprob: -2.955901622772217
    3. 'n' → logprob: -3.830901622772217
    4. 'i' → logprob: -6.330901622772217
    5. ' j' → logprob: -6.580901622772217
    6. ' ' → logprob: -7.955901622772217
    7. ' (' → logprob: -8.205901145935059
    8. ' not' → logprob: -9.580901145935059
    9. 'j' → logprob: -9.705901145935059
    10. '(' → logprob: -11.080901145935059

Token 60: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1809656322002411
    2. '==' → logprob: -1.8059656620025635
    3. ' <=' → logprob: -7.055965423583984
    4. '<=' → logprob: -8.930965423583984
    5. ' <' → logprob: -9.555965423583984
    6. '=' → logprob: -9.805965423583984
    7. ' >' → logprob: -10.180965423583984
    8. '>' → logprob: -10.555965423583984
    9. '<' → logprob: -11.055965423583984
    10. ' =' → logprob: -11.930965423583984

Token 61: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12773795425891876
    2. ' ' → logprob: -2.1277379989624023
    3. '1' → logprob: -7.127737998962402
    4. '   ' → logprob: -12.252737998962402
    5. '  ' → logprob: -13.627737998962402
    6. '2' → logprob: -15.190237998962402
    7. '    ' → logprob: -15.627737998962402
    8. ' ' → logprob: -15.690237998962402
    9. '=' → logprob: -16.690237045288086
    10. '۰' → logprob: -17.065237045288086

Token 62: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002705145161598921
    2. ' ' → logprob: -8.50027084350586
    3. '1' → logprob: -9.62527084350586
    4. '   ' → logprob: -14.87527084350586
    5. '  ' → logprob: -15.12527084350586
    6. '2' → logprob: -15.75027084350586
    7. '    ' → logprob: -17.12527084350586
    8. ')' → logprob: -17.37527084350586
    9. '-' → logprob: -17.43777084350586
    10. '۰' → logprob: -17.50027084350586

Token 63: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008415495976805687
    2. ':return' → logprob: -7.5008416175842285
    3. ':
' → logprob: -8.50084114074707
    4. '       ' → logprob: -9.62584114074707
    5. ' :' → logprob: -11.37584114074707
    6. '   ' → logprob: -12.25084114074707
    7. '):' → logprob: -13.50084114074707
    8. ',' → logprob: -15.00084114074707
    9. ' or' → logprob: -15.62584114074707
    10. ' return' → logprob: -16.00084114074707

Token 64: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02593226172029972
    2. ' return' → logprob: -3.7759323120117188
    3. '           ' → logprob: -6.650932312011719
    4. 'return' → logprob: -7.400932312011719
    5. '   ' → logprob: -8.025932312011719
    6. ':return' → logprob: -8.275932312011719
    7. ' ' → logprob: -9.900932312011719
    8. ':' → logprob: -10.150932312011719
    9. ' ' → logprob: -10.525932312011719
    10. '        ' → logprob: -10.650932312011719

Token 65: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2801313102245331
    2. 'return' (adapté à ' return') → logprob: -1.6551313400268555
    3. '       ' → logprob: -3.0301313400268555
    4. '           ' → logprob: -5.4051313400268555
    5. '   ' → logprob: -8.530131340026855
    6. ' ' → logprob: -9.405131340026855
    7. '               ' → logprob: -9.905131340026855
    8. ' if' → logprob: -10.405131340026855
    9. ' ' → logprob: -10.530131340026855
    10. ':return' → logprob: -11.155131340026855

Token 66: ' ""
' (ID: 18061)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -1.2271069288253784
    2. ' ' → logprob: -1.4771069288253784
    3. ' i' → logprob: -1.6021069288253784
    4. ' []' → logprob: -2.227107048034668
    5. '[i' → logprob: -3.602107048034668
    6. ' '' → logprob: -3.602107048034668
    7. ' (' → logprob: -3.727107048034668
    8. ' [(' → logprob: -4.102107048034668
    9. ' "' → logprob: -4.352107048034668
    10. ' ['' → logprob: -4.477107048034668

Token 67: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13365650177001953
    2. '\n' → logprob: -2.7586565017700195
    3. ' ' → logprob: -4.3836565017700195
    4. '        
' → logprob: -4.5086565017700195
    5. '    ' → logprob: -4.6336565017700195
    6. '   ' → logprob: -4.8836565017700195
    7. '        ' → logprob: -5.0086565017700195
    8. '\' → logprob: -5.5086565017700195
    9. '<|end|>' → logprob: -5.5086565017700195
    10. ' \' → logprob: -6.5086565017700195

Token 68: ' half' (ID: 6375)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9740152359008789
    2. ' 
' → logprob: -1.724015235900879
    3. '
' → logprob: -2.099015235900879
    4. '       ' → logprob: -2.599015235900879
    5. '   ' → logprob: -2.724015235900879
    6. '\n' → logprob: -2.974015235900879
    7. '    ' → logprob: -3.224015235900879
    8. 'n' → logprob: -3.599015235900879
    9. '    
' → logprob: -3.849015235900879
    10. '\' → logprob: -4.849015235900879

Token 69: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3176339566707611
    2. ' =' → logprob: -1.9426339864730835
    3. '=' → logprob: -2.567633867263794
    4. '_size' → logprob: -3.692633867263794
    5. '_n' → logprob: -4.442634105682373
    6. '_length' → logprob: -5.067634105682373
    7. '_width' → logprob: -5.692634105682373
    8. '_len' → logprob: -5.942634105682373
    9. '_layer' → logprob: -6.942634105682373
    10. '_fold' → logprob: -8.067633628845215

Token 70: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4879307746887207
    2. ' n' → logprob: -1.2379307746887207
    3. '2' → logprob: -2.9879307746887207
    4. '1' → logprob: -3.6129307746887207
    5. 'n' → logprob: -3.9879307746887207
    6. ' (' → logprob: -9.237930297851562
    7. '   ' → logprob: -10.737930297851562
    8. '(' → logprob: -11.237930297851562
    9. '32' → logprob: -11.487930297851562
    10. '"' → logprob: -11.612930297851562

Token 71: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.11350159347057343
    2. '1' → logprob: -2.23850154876709
    3. ' ' → logprob: -7.61350154876709
    4. 'pow' → logprob: -9.36350154876709
    5. '(' → logprob: -9.98850154876709
    6. 'n' → logprob: -10.48850154876709
    7. '   ' → logprob: -10.86350154876709
    8. '4' → logprob: -13.48850154876709
    9. '```' → logprob: -14.36350154876709
    10. 's' → logprob: -14.48850154876709

Token 72: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.2812081277370453
    2. ' **' → logprob: -1.4062081575393677
    3. '^' → logprob: -10.906208038330078
    4. ' ' → logprob: -11.156208038330078
    5. '*n' → logprob: -12.031208038330078
    6. '*' → logprob: -12.031208038330078
    7. ' **
' → logprob: -12.156208038330078
    8. '<n' → logprob: -13.406208038330078
    9. ' *' → logprob: -13.531208038330078
    10. 'n' → logprob: -14.031208038330078

Token 73: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.05272158235311508
    2. ' (' → logprob: -3.0527215003967285
    3. '(' → logprob: -5.8027215003967285
    4. 'n' → logprob: -6.9277215003967285
    5. ' n' → logprob: -9.177721977233887
    6. '<|end|>' → logprob: -11.427721977233887
    7. ' ' → logprob: -12.052721977233887
    8. '(
' → logprob: -13.802721977233887
    9. '(N' → logprob: -14.552721977233887
    10. '<|end|>' → logprob: -14.802721977233887

Token 74: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.40022245049476624
    2. '(n' → logprob: -1.1502224206924438
    3. ' n' → logprob: -4.525222301483154
    4. ' (' → logprob: -6.150222301483154
    5. '(' → logprob: -8.275222778320312
    6. ')n' → logprob: -11.150222778320312
    7. ')' → logprob: -11.775222778320312
    8. '   ' → logprob: -12.525222778320312
    9. ' ' → logprob: -12.775222778320312
    10. '[n' → logprob: -13.025222778320312

Token 75: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.006746512372046709
    2. ' -' → logprob: -5.006746292114258
    3. ')' → logprob: -10.631746292114258
    4. '-)' → logprob: -12.756746292114258
    5. '<|end|>' → logprob: -13.631746292114258
    6. ' ' → logprob: -14.381746292114258
    7. '   ' → logprob: -14.381746292114258
    8. ')-' → logprob: -14.631746292114258
    9. ' )' → logprob: -15.506746292114258
    10. '1' → logprob: -15.631746292114258

Token 76: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.463036435074173e-05
    2. ' ' → logprob: -10.750024795532227
    3. '-' → logprob: -12.875024795532227
    4. '   ' → logprob: -14.875024795532227
    5. '```' → logprob: -16.000024795532227
    6. ')' → logprob: -16.125024795532227
    7. ' -' → logprob: -17.000024795532227
    8. '  ' → logprob: -17.500024795532227
    9. '

' → logprob: -18.187524795532227
    10. '
' → logprob: -18.312524795532227

Token 77: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.500000953674316
    3. ')' → logprob: -15.500000953674316
    4. '   ' → logprob: -16.75
    5. '```' → logprob: -17.125
    6. '2' → logprob: -18.875
    7. '<|end|>' → logprob: -19.125
    8. '

' → logprob: -19.25
    9. '１' → logprob: -19.375
    10. '  ' → logprob: -19.375

Token 78: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018986482173204422
    2. ' )' → logprob: -6.376898765563965
    3. ')
' → logprob: -9.001898765563965
    4. '   ' → logprob: -10.126898765563965
    5. '))' → logprob: -11.501898765563965
    6. '       ' → logprob: -12.376898765563965
    7. '")' → logprob: -12.626898765563965
    8. ' ' → logprob: -12.626898765563965
    9. '`)' → logprob: -13.126898765563965
    10. ' )
' → logprob: -13.376898765563965

Token 79: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2978704273700714
    2. '<|end|>' → logprob: -1.547870397567749
    3. '       ' → logprob: -4.297870635986328
    4. ' 
' → logprob: -5.047870635986328
    5. ' ' → logprob: -5.047870635986328
    6. '   ' → logprob: -5.422870635986328
    7. '    
' → logprob: -5.922870635986328
    8. ' if' → logprob: -5.922870635986328
    9. '<|end|>' → logprob: -6.172870635986328
    10. '  
' → logprob: -6.297870635986328

Token 80: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2521863877773285
    2. 'if' (adapté à ' if') → logprob: -1.6271864175796509
    3. '       ' → logprob: -4.377186298370361
    4. ' ' → logprob: -5.002186298370361
    5. '    ' → logprob: -5.752186298370361
    6. '   ' → logprob: -6.002186298370361
    7. '        ' → logprob: -7.752186298370361
    8. ' 
' → logprob: -8.50218677520752
    9. '
' → logprob: -8.75218677520752
    10. '        
' → logprob: -9.00218677520752

Token 81: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6103945374488831
    2. ' j' → logprob: -0.8603945374488831
    3. 'j' → logprob: -3.8603944778442383
    4. 'i' → logprob: -4.360394477844238
    5. ' ' → logprob: -10.860394477844238
    6. '    ' → logprob: -12.297894477844238
    7. '(' → logprob: -13.672894477844238
    8. ' n' → logprob: -13.672894477844238
    9. '   ' → logprob: -14.110394477844238
    10. ' ' → logprob: -14.172894477844238

Token 82: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6360844969749451
    2. ' <=' → logprob: -0.8860844969749451
    3. '<' → logprob: -3.13608455657959
    4. '<=' → logprob: -4.26108455657959
    5. ' >=' → logprob: -7.88608455657959
    6. ' ' → logprob: -8.38608455657959
    7. ' >' → logprob: -9.38608455657959
    8. '[' → logprob: -10.51108455657959
    9. '>=' → logprob: -10.63608455657959
    10. ' ==' → logprob: -10.88608455657959

Token 83: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.31335434317588806
    2. ' half' → logprob: -1.3133543729782104
    3. ' ' → logprob: -9.6883544921875
    4. '<|end|>' → logprob: -10.8133544921875
    5. '_half' → logprob: -12.4383544921875
    6. '   ' → logprob: -13.3133544921875
    7. '    ' → logprob: -13.9383544921875
    8. 'hal' → logprob: -14.1883544921875
    9. '  ' → logprob: -14.1883544921875
    10. '-half' → logprob: -14.3133544921875

Token 84: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02325153350830078
    2. ' :' → logprob: -3.898251533508301
    3. ' and' → logprob: -6.148251533508301
    4. ':
' → logprob: -7.648251533508301
    5. ' :
' → logprob: -10.1482515335083
    6. ':return' → logprob: -10.7732515335083
    7. '):' → logprob: -11.0232515335083
    8. 'and' → logprob: -12.1482515335083
    9. ' ' → logprob: -12.7732515335083
    10. ' ):' → logprob: -13.5232515335083

Token 85: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.10032755136489868
    2. 'j' → logprob: -2.350327491760254
    3. '    ' → logprob: -10.225327491760254
    4. '	j' → logprob: -10.600327491760254
    5. '   ' → logprob: -10.850327491760254
    6. ' ' → logprob: -10.975327491760254
    7. ' i' → logprob: -12.350327491760254
    8. '  ' → logprob: -12.600327491760254
    9. ' ' → logprob: -12.787827491760254
    10. 'i' → logprob: -13.412827491760254

Token 86: ' >' (ID: 1424)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.0023837340995669365
    2. '<=' → logprob: -6.127383708953857
    3. ' ' → logprob: -9.627384185791016
    4. ' >' → logprob: -9.627384185791016
    5. '<|end|>' → logprob: -9.877384185791016
    6. ' ==' → logprob: -12.002384185791016
    7. ' ≤' → logprob: -13.002384185791016
    8. ' <' → logprob: -13.627384185791016
    9. '<|end|>' → logprob: -13.752384185791016
    10. '   ' → logprob: -14.502384185791016

Token 87: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.008629691787064075
    2. ' half' → logprob: -4.75862979888916
    3. ' ' → logprob: -11.88362979888916
    4. 'hal' → logprob: -12.88362979888916
    5. '_half' → logprob: -13.00862979888916
    6. '   ' → logprob: -13.75862979888916
    7. '=' → logprob: -14.00862979888916
    8. '  ' → logprob: -14.63362979888916
    9. '<|end|>' → logprob: -15.00862979888916
    10. 'halb' → logprob: -15.63362979888916

Token 88: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005434861872345209
    2. ' :' → logprob: -6.005434989929199
    3. ':
' → logprob: -6.005434989929199
    4. ':return' → logprob: -8.1304349899292
    5. '<|end|>' → logprob: -10.0054349899292
    6. ' :
' → logprob: -10.1304349899292
    7. '):' → logprob: -10.2554349899292
    8. ' and' → logprob: -11.1304349899292
    9. '       ' → logprob: -11.2554349899292
    10. '<|end|>' → logprob: -11.3804349899292

Token 89: '           ' (ID: 352)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5608449578285217
    2. 'return' → logprob: -1.685844898223877
    3. '"' → logprob: -2.185844898223877
    4. '           ' → logprob: -2.685844898223877
    5. ' "' → logprob: -3.560844898223877
    6. '       ' → logprob: -4.685844898223877
    7. ' ' → logprob: -5.560844898223877
    8. ':return' → logprob: -5.685844898223877
    9. ':' → logprob: -6.060844898223877
    10. '   ' → logprob: -6.310844898223877

Token 90: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.18119539320468903
    2. 'return' → logprob: -2.3061954975128174
    3. '"' → logprob: -3.3061954975128174
    4. '           ' → logprob: -4.181195259094238
    5. ' "' → logprob: -4.556195259094238
    6. '       ' → logprob: -6.806195259094238
    7. ' ' → logprob: -7.806195259094238
    8. ''' → logprob: -8.056195259094238
    9. ' '' → logprob: -8.181195259094238
    10. ')' → logprob: -8.181195259094238

Token 91: ' mark' (ID: 1983)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5280889868736267
    2. 'return' → logprob: -0.9030889868736267
    3. '           ' → logprob: -5.5280890464782715
    4. '       ' → logprob: -9.153088569641113
    5. 'print' → logprob: -9.278088569641113
    6. ' print' → logprob: -9.278088569641113
    7. '"' → logprob: -9.278088569641113
    8. '#' → logprob: -9.278088569641113
    9. '   ' → logprob: -9.528088569641113
    10. '            ' → logprob: -9.528088569641113

Token 92: ' in' (ID: 306)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.7986016273498535
    2. ' ' → logprob: -1.7986016273498535
    3. ' the' → logprob: -2.0486016273498535
    4. 'ed' → logprob: -2.1736016273498535
    5. 'd' → logprob: -2.4236016273498535
    6. ' fold' → logprob: -2.5486016273498535
    7. ' "' → logprob: -2.6736016273498535
    8. 's' → logprob: -2.9236016273498535
    9. 'down' → logprob: -4.4236016273498535
    10. ' d' → logprob: -4.4236016273498535

Token 93: ' left' (ID: 3561)
  Prédit: ' top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.14308828115463257
    2. ' bottom' → logprob: -3.3930883407592773
    3. 'top' → logprob: -3.3930883407592773
    4. ' left' → logprob: -3.8930883407592773
    5. ' upper' → logprob: -4.518088340759277
    6. ' fold' → logprob: -4.518088340759277
    7. ' the' → logprob: -4.768088340759277
    8. ' right' → logprob: -5.393088340759277
    9. 'bottom' → logprob: -6.268088340759277
    10. 'left' → logprob: -6.518088340759277

Token 94: ' half' (ID: 6375)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3764567971229553
    2. '")' → logprob: -2.5014567375183105
    3. 'fold' → logprob: -3.1264567375183105
    4. ' fold' → logprob: -3.3764567375183105
    5. '_fold' → logprob: -3.8764567375183105
    6. ' ' → logprob: -4.0014567375183105
    7. ')' → logprob: -4.1264567375183105
    8. ' ")' → logprob: -4.7514567375183105
    9. '-fold' → logprob: -4.8764567375183105
    10. '""' → logprob: -4.8764567375183105

Token 95: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.848247766494751
    2. '           ' → logprob: -1.348247766494751
    3. 'return' → logprob: -2.473247766494751
    4. ' return' → logprob: -2.848247766494751
    5. ':' → logprob: -3.473247766494751
    6. '       ' → logprob: -4.348247528076172
    7. ' (' → logprob: -4.723247528076172
    8. ' and' → logprob: -4.723247528076172
    9. '"' → logprob: -4.848247528076172
    10. ' ")' → logprob: -4.848247528076172

Token 96: 'bottom' (ID: 29677)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.4518873691558838
    2. ')' → logprob: -1.4518873691558838
    3. '")' → logprob: -1.5768873691558838
    4. 'fold' → logprob: -2.451887369155884
    5. 'return' → logprob: -3.076887369155884
    6. '           ' → logprob: -3.576887369155884
    7. 'i' → logprob: -3.701887369155884
    8. 'left' → logprob: -3.951887369155884
    9. ' fold' → logprob: -4.076887130737305
    10. 'j' → logprob: -4.326887130737305

Token 97: ' fold' (ID: 17691)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03349676728248596
    2. ' )' → logprob: -4.283496856689453
    3. ' fold' → logprob: -5.158496856689453
    4. '),' → logprob: -6.283496856689453
    5. ' or' → logprob: -6.533496856689453
    6. '")' → logprob: -6.658496856689453
    7. ' and' → logprob: -6.658496856689453
    8. ' part' → logprob: -7.158496856689453
    9. 'fold' → logprob: -7.283496856689453
    10. ' half' → logprob: -7.408496856689453

Token 98: ' goes' (ID: 8805)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07540593296289444
    2. ' )' → logprob: -2.7004058361053467
    3. ' and' → logprob: -6.575406074523926
    4. '")' → logprob: -7.075406074523926
    5. ')
' → logprob: -7.450406074523926
    6. ' fold' → logprob: -7.825406074523926
    7. ',' → logprob: -8.200406074523926
    8. '):' → logprob: -8.200406074523926
    9. ' ")' → logprob: -8.575406074523926
    10. ' )
' → logprob: -8.575406074523926

Token 99: ' on' (ID: 402)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -1.2774598598480225
    2. 'down' → logprob: -1.2774598598480225
    3. ' to' → logprob: -1.5274598598480225
    4. ' down' → logprob: -2.1524598598480225
    5. 'up' → logprob: -2.9024598598480225
    6. ' up' → logprob: -4.152460098266602
    7. ')' → logprob: -4.277460098266602
    8. ' ' → logprob: -6.152460098266602
    9. ' downward' → logprob: -6.152460098266602
    10. 'over' → logprob: -6.277460098266602

Token 100: ' top' (ID: 2344)
  Prédit: ' top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.6300591826438904
    2. 'top' → logprob: -1.5050592422485352
    3. ' the' → logprob: -1.7550592422485352
    4. 'the' → logprob: -2.755059242248535
    5. 'right' → logprob: -6.130059242248535
    6. 'left' → logprob: -6.380059242248535
    7. ' bottom' → logprob: -6.630059242248535
    8. 'bottom' → logprob: -6.880059242248535
    9. ' left' → logprob: -7.380059242248535
    10. ' right' → logprob: -7.630059242248535

Token 101: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05807807296514511
    2. ' )' → logprob: -3.4330780506134033
    3. '           ' → logprob: -4.058078289031982
    4. ')
' → logprob: -5.558078289031982
    5. '       ' → logprob: -7.308078289031982
    6. ',' → logprob: -7.433078289031982
    7. '")' → logprob: -7.933078289031982
    8. ' )
' → logprob: -8.058077812194824
    9. '\n' → logprob: -8.933077812194824
    10. ' and' → logprob: -9.058077812194824

Token 102: '           ' (ID: 352)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.0480185747146606
    2. '           ' → logprob: -1.2980185747146606
    3. 'return' → logprob: -1.6730185747146606
    4. '       ' → logprob: -1.7980185747146606
    5. ')' → logprob: -5.548018455505371
    6. '   ' → logprob: -5.673018455505371
    7. '        ' → logprob: -5.798018455505371
    8. '            ' → logprob: -5.798018455505371
    9. ' ' → logprob: -5.923018455505371
    10. '    ' → logprob: -6.173018455505371

Token 103: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6347684860229492
    2. ' return' → logprob: -0.7597684860229492
    3. '           ' → logprob: -6.259768486022949
    4. '"' → logprob: -9.75976848602295
    5. '   ' → logprob: -9.88476848602295
    6. '       ' → logprob: -10.38476848602295
    7. '
' → logprob: -10.63476848602295
    8. '	return' → logprob: -11.00976848602295
    9. ')' → logprob: -11.50976848602295
    10. ' ' → logprob: -11.88476848602295

Token 104: ' fold' (ID: 17691)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2298317700624466
    2. ' return' → logprob: -1.6048318147659302
    3. '           ' → logprob: -5.479831695556641
    4. '   ' → logprob: -9.35483169555664
    5. '       ' → logprob: -10.22983169555664
    6. '               ' → logprob: -10.22983169555664
    7. ' ' → logprob: -10.47983169555664
    8. 'result' → logprob: -11.22983169555664
    9. '  ' → logprob: -12.10483169555664
    10. '
' → logprob: -12.35483169555664

Token 105: ' was' (ID: 673)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2721214294433594
    2. '_direction' → logprob: -1.2721214294433594
    3. 's' → logprob: -2.7721214294433594
    4. '_' → logprob: -2.7721214294433594
    5. '_line' → logprob: -3.1471214294433594
    6. '_in' → logprob: -3.7721214294433594
    7. '_str' → logprob: -3.8971214294433594
    8. 'ing' → logprob: -4.022121429443359
    9. '=' → logprob: -4.022121429443359
    10. '_string' → logprob: -4.147121429443359

Token 106: ' from' (ID: 591)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.798143208026886
    2. '"B' → logprob: -1.2981431484222412
    3. ' "' → logprob: -2.048143148422241
    4. ''' → logprob: -3.548143148422241
    5. ' B' → logprob: -3.923143148422241
    6. ' bottom' → logprob: -4.04814338684082
    7. '"L' → logprob: -4.42314338684082
    8. ' V' → logprob: -4.42314338684082
    9. 'B' → logprob: -4.79814338684082
    10. ' '' → logprob: -4.92314338684082

Token 107: ' Left' (ID: 26982)
  Prédit: ' bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bottom' → logprob: -1.4277865886688232
    2. '"' → logprob: -1.6777865886688232
    3. 'bottom' → logprob: -1.9277865886688232
    4. ' j' → logprob: -2.5527865886688232
    5. ' the' → logprob: -2.8027865886688232
    6. ' right' → logprob: -3.1777865886688232
    7. ' top' → logprob: -3.4277865886688232
    8. 'right' → logprob: -3.4277865886688232
    9. 'j' → logprob: -3.6777865886688232
    10. ' "' → logprob: -3.6777865886688232

Token 108: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.3744802474975586
    2. ')' → logprob: -1.4994802474975586
    3. ' fold' → logprob: -1.9994802474975586
    4. 'To' → logprob: -2.6244802474975586
    5. 'Fold' → logprob: -2.7494802474975586
    6. ' )' → logprob: -2.9994802474975586
    7. 'to' → logprob: -3.8744802474975586
    8. ',' → logprob: -3.8744802474975586
    9. ' Fold' → logprob: -3.9994802474975586
    10. '")' → logprob: -3.9994802474975586

Token 109: ' Right' (ID: 16354)
  Prédit: 'Right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Right' → logprob: -0.04988650605082512
    2. 'right' → logprob: -3.174886465072632
    3. ' right' → logprob: -5.174886703491211
    4. ' Right' → logprob: -6.924886703491211
    5. '_right' → logprob: -8.549886703491211
    6. '_Right' → logprob: -11.549886703491211
    7. 'ight' → logprob: -12.049886703491211
    8. '	right' → logprob: -12.799886703491211
    9. 'Rig' → logprob: -13.299886703491211
    10. 'Fold' → logprob: -13.424886703491211

Token 110: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8438404202461243
    2. ')' → logprob: -1.0938403606414795
    3. ' return' → logprob: -3.2188403606414795
    4. 'return' → logprob: -3.3438403606414795
    5. '       ' → logprob: -4.093840599060059
    6. ':' → logprob: -4.093840599060059
    7. '\n' → logprob: -4.093840599060059
    8. '               ' → logprob: -4.468840599060059
    9. ':
' → logprob: -4.593840599060059
    10. '")' → logprob: -4.593840599060059

Token 111: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.8858837485313416
    2. '"' → logprob: -1.2608838081359863
    3. '"L' → logprob: -2.3858838081359863
    4. ''' → logprob: -2.5108838081359863
    5. ' L' → logprob: -3.2608838081359863
    6. ' "' → logprob: -3.7608838081359863
    7. '")' → logprob: -4.010883808135986
    8. ' '' → logprob: -4.260883808135986
    9. ''L' → logprob: -4.260883808135986
    10. 'R' → logprob: -4.760883808135986

Token 112: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.29241302609443665
    2. 'R' → logprob: -1.5424129962921143
    3. ' )' → logprob: -3.5424129962921143
    4. '")' → logprob: -5.917413234710693
    5. 'F' → logprob: -6.167413234710693
    6. 'T' → logprob: -7.042413234710693
    7. '->' → logprob: -7.292413234710693
    8. '),' → logprob: -8.042412757873535
    9. '→' → logprob: -8.042412757873535
    10. ')")' → logprob: -8.167412757873535

Token 113: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.061805762350559235
    2. ' return' → logprob: -3.3118057250976562
    3. 'return' → logprob: -4.436805725097656
    4. '       ' → logprob: -5.561805725097656
    5. 'n' → logprob: -6.186805725097656
    6. ')' → logprob: -6.561805725097656
    7. '\n' → logprob: -6.936805725097656
    8. ' ' → logprob: -7.561805725097656
    9. '   ' → logprob: -7.561805725097656
    10. '               ' → logprob: -7.561805725097656

Token 114: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7049825191497803
    2. 'return' (adapté à ' return') → logprob: -0.8299825191497803
    3. '           ' → logprob: -2.7049825191497803
    4. '       ' → logprob: -6.079982757568359
    5. '   ' → logprob: -8.07998275756836
    6. '               ' → logprob: -9.07998275756836
    7. '
' → logprob: -9.20498275756836
    8. ' ' → logprob: -10.45498275756836
    9. '	return' → logprob: -10.82998275756836
    10. ' L' → logprob: -11.32998275756836

Token 115: ' '' (ID: 461)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -1.0726934671401978
    2. '"L' → logprob: -1.0726934671401978
    3. '"' → logprob: -1.1976934671401978
    4. ''' → logprob: -4.822693347930908
    5. ' '' → logprob: -5.322693347930908
    6. ''L' → logprob: -7.072693347930908
    7. ' L' → logprob: -10.072693824768066
    8. '"I' → logprob: -10.822693824768066
    9. '       ' → logprob: -11.197693824768066
    10. 'L' → logprob: -11.197693824768066

Token 116: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.00047202190035022795
    2. 'R' → logprob: -8.000472068786621
    3. ' L' → logprob: -9.000472068786621
    4. ''' → logprob: -12.500472068786621
    5. ''L' → logprob: -12.625472068786621
    6. 'LR' → logprob: -14.187972068786621
    7. 'F' → logprob: -14.875472068786621
    8. '')' → logprob: -14.875472068786621
    9. 'RL' → logprob: -14.937972068786621
    10. 'l' → logprob: -15.000472068786621

Token 117: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0012214169837534428
    2. '')' → logprob: -6.876221179962158
    3. ''+' → logprob: -9.376221656799316
    4. ''
' → logprob: -10.251221656799316
    5. ' '' → logprob: -10.376221656799316
    6. '"' → logprob: -10.876221656799316
    7. ')' → logprob: -11.751221656799316
    8. ')'' → logprob: -12.376221656799316
    9. '+' → logprob: -13.751221656799316
    10. '',' → logprob: -14.376221656799316

Token 118: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3497455418109894
    2. '+' → logprob: -1.224745512008667
    3. '<|end|>' → logprob: -6.849745750427246
    4. ' +
' → logprob: -9.724745750427246
    5. ')+' → logprob: -10.349745750427246
    6. ')' → logprob: -10.349745750427246
    7. '       ' → logprob: -10.599745750427246
    8. '+
' → logprob: -10.599745750427246
    9. '[::-' → logprob: -10.974745750427246
    10. '        ' → logprob: -11.724745750427246

Token 119: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.20146040618419647
    2. ' find' → logprob: -1.701460361480713
    3. 'solve' → logprob: -10.326460838317871
    4. ' solve' → logprob: -11.701460838317871
    5. '(find' → logprob: -12.201460838317871
    6. '	find' → logprob: -14.076460838317871
    7. ')find' → logprob: -16.076459884643555
    8. ' ' → logprob: -16.951459884643555
    9. '"' → logprob: -17.326459884643555
    10. '=find' → logprob: -17.326459884643555

Token 120: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -2.696889623621246e-06
    2. '_' → logprob: -13.25000286102295
    3. '_fold' → logprob: -14.62500286102295
    4. 'f' → logprob: -15.00000286102295
    5. '_s' → logprob: -17.625001907348633
    6. '_find' → logprob: -17.750001907348633
    7. '('_' → logprob: -18.125001907348633
    8. ''_' → logprob: -18.375001907348633
    9. ' _' → logprob: -18.625001907348633
    10. '(' → logprob: -18.875001907348633

Token 121: 'olds' (ID: 37608)
  Prédit: 'olds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olds' → logprob: -0.0002043748099822551
    2. 'old' → logprob: -8.750204086303711
    3. 'o' → logprob: -10.875204086303711
    4. 'ol' → logprob: -11.125204086303711
    5. '(' → logprob: -13.000204086303711
    6. 'fold' → logprob: -13.125204086303711
    7. ' folds' → logprob: -13.750204086303711
    8. '`' → logprob: -14.000204086303711
    9. 'ould' → logprob: -14.250204086303711
    10. 'ords' → logprob: -14.625204086303711

Token 122: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0003413031517993659
    2. '(' → logprob: -8.000341415405273
    3. '(
' → logprob: -12.375341415405273
    4. ' (' → logprob: -15.000341415405273
    5. 'n' → logprob: -15.000341415405273
    6. '(nx' → logprob: -15.125341415405273
    7. '```' → logprob: -15.625341415405273
    8. '<|end|>' → logprob: -16.125341415405273
    9. '(next' → logprob: -16.500341415405273
    10. '(norm' → logprob: -16.625341415405273

Token 123: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0032187069300562143
    2. ' -' → logprob: -5.878218650817871
    3. ',' → logprob: -7.878218650817871
    4. ' ,' → logprob: -11.378218650817871
    5. ' ' → logprob: -12.003218650817871
    6. ',n' → logprob: -12.378218650817871
    7. '       ' → logprob: -13.003218650817871
    8. '   ' → logprob: -13.253218650817871
    9. '	' → logprob: -13.503218650817871
    10. '```' → logprob: -14.003218650817871

Token 124: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009288526489399374
    2. ' ' → logprob: -7.00092887878418
    3. '<|end|>' → logprob: -11.12592887878418
    4. '-' → logprob: -13.87592887878418
    5. '```' → logprob: -14.75092887878418
    6. ' -' → logprob: -14.75092887878418
    7. ')' → logprob: -15.50092887878418
    8. '<|end|>' → logprob: -15.50092887878418
    9. '   ' → logprob: -15.87592887878418
    10. ',' → logprob: -16.00092887878418

Token 125: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -12.75000286102295
    3. '```' → logprob: -15.87500286102295
    4. '2' → logprob: -16.812503814697266
    5. ')' → logprob: -17.000003814697266
    6. '
' → logprob: -17.187503814697266
    7. '   ' → logprob: -17.437503814697266
    8. 'i' → logprob: -18.250003814697266
    9. 'def' → logprob: -18.250003814697266
    10. '-' → logprob: -18.937503814697266

Token 126: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03993016108870506
    2. '(i' → logprob: -3.2899301052093506
    3. ',i' → logprob: -6.41493034362793
    4. ' ,' → logprob: -8.53993034362793
    5. '(' → logprob: -9.91493034362793
    6. ')' → logprob: -13.03993034362793
    7. '   ' → logprob: -13.91493034362793
    8. '(n' → logprob: -14.53993034362793
    9. ' i' → logprob: -14.91493034362793
    10. ',
' → logprob: -15.66493034362793

Token 127: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002268731826916337
    2. ' i' → logprob: -6.1272687911987305
    3. '2' → logprob: -10.12726879119873
    4. 'half' → logprob: -10.87726879119873
    5. '   ' → logprob: -11.25226879119873
    6. ' ' → logprob: -12.25226879119873
    7. '     ' → logprob: -13.62726879119873
    8. 'n' → logprob: -14.37726879119873
    9. 'j' → logprob: -14.37726879119873
    10. ' half' → logprob: -14.50226879119873

Token 128: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012763076229020953
    2. ' ,' → logprob: -7.00127649307251
    3. '   ' → logprob: -8.501276016235352
    4. '       ' → logprob: -9.876276016235352
    5. ',j' → logprob: -10.126276016235352
    6. '           ' → logprob: -10.126276016235352
    7. '    ' → logprob: -11.251276016235352
    8. 'j' → logprob: -12.501276016235352
    9. ' ' → logprob: -12.876276016235352
    10. '  ' → logprob: -13.001276016235352

Token 129: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.05510703846812248
    2. ' j' → logprob: -2.9301071166992188
    3. '   ' → logprob: -9.680107116699219
    4. '    ' → logprob: -10.180107116699219
    5. ' ' → logprob: -10.305107116699219
    6. 'half' → logprob: -10.555107116699219
    7. '2' → logprob: -10.680107116699219
    8. '  ' → logprob: -11.555107116699219
    9. ' half' → logprob: -12.180107116699219
    10. '            ' → logprob: -12.430107116699219

Token 130: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.39551326632499695
    2. '-' → logprob: -1.1455132961273193
    3. '-half' → logprob: -4.77051305770874
    4. '-hal' → logprob: -9.395513534545898
    5. ')' → logprob: -10.645513534545898
    6. 'half' → logprob: -11.770513534545898
    7. ' half' → logprob: -11.895513534545898
    8. ' ' → logprob: -12.645513534545898
    9. '-h' → logprob: -14.020513534545898
    10. '-left' → logprob: -15.145513534545898

Token 131: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.000918008794542402
    2. ' half' → logprob: -7.000917911529541
    3. 'hal' → logprob: -12.1259183883667
    4. ' ' → logprob: -14.1259183883667
    5. '1' → logprob: -16.125917434692383
    6. 'halb' → logprob: -16.375917434692383
    7. '   ' → logprob: -17.000917434692383
    8. 'halve' → logprob: -17.000917434692383
    9. '_half' → logprob: -17.125917434692383
    10. '0' → logprob: -17.125917434692383

Token 132: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.650518920039758e-06
    2. ')
' → logprob: -12.875003814697266
    3. ' )' → logprob: -14.125003814697266
    4. '')' → logprob: -16.625003814697266
    5. '   ' → logprob: -17.250003814697266
    6. ')`' → logprob: -17.250003814697266
    7. '))' → logprob: -17.875003814697266
    8. '       ' → logprob: -18.000003814697266
    9. ')

' → logprob: -18.500003814697266
    10. ')\' → logprob: -19.250003814697266

Token 133: '       ' (ID: 309)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.3871877193450928
    2. 'else' → logprob: -1.6371877193450928
    3. '       ' → logprob: -2.5121877193450928
    4. ' else' → logprob: -3.6371877193450928
    5. ' elif' → logprob: -4.137187957763672
    6. '   ' → logprob: -6.887187957763672
    7. '<|end|>' → logprob: -7.262187957763672
    8. '
' → logprob: -7.762187957763672
    9. ')' → logprob: -7.887187957763672
    10. '	elif' → logprob: -8.012187957763672

Token 134: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.09176214784383774
    2. '       ' → logprob: -3.091762065887451
    3. 'if' → logprob: -3.341762065887451
    4. 'else' → logprob: -5.341762065887451
    5. ' elif' → logprob: -6.216762065887451
    6. ' if' → logprob: -10.34176254272461
    7. ' else' → logprob: -10.46676254272461
    8. '   ' → logprob: -10.96676254272461
    9. 'return' → logprob: -12.34176254272461
    10. '        
' → logprob: -12.34176254272461

Token 135: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07913345098495483
    2. 'i' → logprob: -2.5791335105895996
    3. ' j' → logprob: -9.079133033752441
    4. '   ' → logprob: -10.204133033752441
    5. 'j' → logprob: -10.329133033752441
    6. ' ' → logprob: -10.454133033752441
    7. ' n' → logprob: -11.954133033752441
    8. ' ' → logprob: -12.079133033752441
    9. '    ' → logprob: -12.329133033752441
    10. 'n' → logprob: -12.329133033752441

Token 136: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.013888213783502579
    2. ' >' → logprob: -4.763888359069824
    3. '<=' → logprob: -5.263888359069824
    4. '>' → logprob: -9.888888359069824
    5. ' ' → logprob: -10.763888359069824
    6. '   ' → logprob: -12.763888359069824
    7. ' ==' → logprob: -12.888888359069824
    8. ' <' → logprob: -13.013888359069824
    9. '    ' → logprob: -13.763888359069824
    10. ' ' → logprob: -14.013888359069824

Token 137: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.3132675588130951
    2. ' half' → logprob: -1.3132675886154175
    3. ' ' → logprob: -12.313267707824707
    4. 'hal' → logprob: -14.688267707824707
    5. '   ' → logprob: -14.813267707824707
    6. '_half' → logprob: -15.563267707824707
    7. 'halb' → logprob: -17.18826675415039
    8. '-half' → logprob: -17.31326675415039
    9. ' halfway' → logprob: -17.31326675415039
    10. '    ' → logprob: -17.43826675415039

Token 138: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.02412736602127552
    2. 'and' → logprob: -3.77412748336792
    3. ':' → logprob: -7.39912748336792
    4. ':
' → logprob: -9.149127006530762
    5. '   ' → logprob: -9.399127006530762
    6. ' ' → logprob: -10.399127006530762
    7. ',' → logprob: -11.149127006530762
    8. '       ' → logprob: -11.649127006530762
    9. '    ' → logprob: -11.899127006530762
    10. '        ' → logprob: -12.399127006530762

Token 139: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.1602991670370102
    2. ' j' → logprob: -1.9102991819381714
    3. '   ' → logprob: -10.285299301147461
    4. '    ' → logprob: -11.035299301147461
    5. '       ' → logprob: -12.285299301147461
    6. '	j' → logprob: -12.410299301147461
    7. 'i' → logprob: -12.660299301147461
    8. ' ' → logprob: -12.660299301147461
    9. '     ' → logprob: -12.785299301147461
    10. ' ' → logprob: -13.410299301147461

Token 140: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.22551947832107544
    2. '<=' → logprob: -1.6005194187164307
    3. ' >' → logprob: -9.475519180297852
    4. '>' → logprob: -10.850519180297852
    5. ' ' → logprob: -12.100519180297852
    6. '   ' → logprob: -13.600519180297852
    7. ' ≤' → logprob: -14.100519180297852
    8. '#' → logprob: -14.600519180297852
    9. ' ' → logprob: -14.600519180297852
    10. '==' → logprob: -14.850519180297852

Token 141: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.004081128165125847
    2. ' half' → logprob: -5.5040812492370605
    3. 'hal' → logprob: -13.004080772399902
    4. ' ' → logprob: -15.129080772399902
    5. '   ' → logprob: -16.75408172607422
    6. '_half' → logprob: -17.37908172607422
    7. ' ' → logprob: -17.62908172607422
    8. 'halb' → logprob: -17.62908172607422
    9. '  ' → logprob: -19.25408172607422
    10. 'Half' → logprob: -19.37908172607422

Token 142: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.0700291320681572
    2. ':' → logprob: -2.6950290203094482
    3. '       ' → logprob: -10.320029258728027
    4. '):
' → logprob: -10.570029258728027
    5. '           ' → logprob: -11.070029258728027
    6. ':
' → logprob: -11.820029258728027
    7. ' :
' → logprob: -12.070029258728027
    8. ':

' → logprob: -13.320029258728027
    9. ':return' → logprob: -14.070029258728027
    10. '():
' → logprob: -14.195029258728027

Token 143: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05562598258256912
    2. '       ' → logprob: -3.3056259155273438
    3. ''' → logprob: -5.180625915527344
    4. ' '' → logprob: -5.430625915527344
    5. ' return' → logprob: -5.555625915527344
    6. ''s' → logprob: -6.305625915527344
    7. 'return' → logprob: -7.055625915527344
    8. ' ' → logprob: -8.555625915527344
    9. '   ' → logprob: -8.930625915527344
    10. ' ' → logprob: -9.305625915527344

Token 144: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8632466197013855
    2. ' return' → logprob: -1.2382466793060303
    3. ' '' → logprob: -2.2382466793060303
    4. ''' → logprob: -2.3632466793060303
    5. 'return' → logprob: -2.6132466793060303
    6. '           ' → logprob: -4.738246440887451
    7. '   ' → logprob: -6.113246440887451
    8. ''s' → logprob: -6.613246440887451
    9. ' ' → logprob: -7.488246440887451
    10. ' ' → logprob: -7.988246440887451

Token 145: ' mark' (ID: 1983)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.4577066898345947
    2. ' find' → logprob: -1.5827066898345947
    3. ' return' → logprob: -1.7077066898345947
    4. ''L' → logprob: -1.8327066898345947
    5. ' '' → logprob: -2.3327066898345947
    6. 'return' → logprob: -2.4577066898345947
    7. 'find' → logprob: -3.8327066898345947
    8. ' L' → logprob: -5.332706451416016
    9. '   ' → logprob: -6.582706451416016
    10. ''T' → logprob: -6.707706451416016

Token 146: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05576411262154579
    2. 'in' → logprob: -2.9307641983032227
    3. '(n' → logprob: -7.680764198303223
    4. '('' → logprob: -8.430764198303223
    5. 'def' → logprob: -9.680764198303223
    6. '(' → logprob: -10.680764198303223
    7. '_in' → logprob: -10.805764198303223
    8. ''in' → logprob: -11.305764198303223
    9. ' =' → logprob: -11.555764198303223
    10. '=' → logprob: -11.555764198303223

Token 147: ' right' (ID: 1849)
  Prédit: ' top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.34028515219688416
    2. 'top' → logprob: -2.215285062789917
    3. ' left' → logprob: -2.215285062789917
    4. 'left' → logprob: -3.340285062789917
    5. 'i' → logprob: -3.840285062789917
    6. ' i' → logprob: -4.965285301208496
    7. ' upper' → logprob: -5.715285301208496
    8. ' bottom' → logprob: -6.840285301208496
    9. 'bottom' → logprob: -7.215285301208496
    10. 'upper' → logprob: -7.715285301208496

Token 148: ' half' (ID: 6375)
  Prédit: ' half'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' half' → logprob: -0.5643264055252075
    2. 'half' → logprob: -0.9393264055252075
    3. '_half' → logprob: -3.314326286315918
    4. '   ' → logprob: -5.814326286315918
    5. ' and' → logprob: -7.939326286315918
    6. 'fold' → logprob: -9.064326286315918
    7. '       ' → logprob: -9.314326286315918
    8. ' _' → logprob: -9.439326286315918
    9. ' ' → logprob: -9.564326286315918
    10. ' part' → logprob: -9.689326286315918

Token 149: ' (' (ID: 350)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2454899102449417
    2. '       ' → logprob: -2.1204898357391357
    3. '           ' → logprob: -2.8704898357391357
    4. '   ' → logprob: -4.745490074157715
    5. ' =' → logprob: -4.745490074157715
    6. '(n' → logprob: -4.870490074157715
    7. ':
' → logprob: -6.120490074157715
    8. '=' → logprob: -6.120490074157715
    9. ' (' → logprob: -6.245490074157715
    10. ':' → logprob: -6.245490074157715

Token 150: 'top' (ID: 8169)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1423870325088501
    2. ' i' → logprob: -2.3923869132995605
    3. 'n' → logprob: -3.7673869132995605
    4. ' n' → logprob: -5.0173869132995605
    5. 'j' → logprob: -5.6423869132995605
    6. ' j' → logprob: -6.3923869132995605
    7. 'L' → logprob: -6.5173869132995605
    8. ' L' → logprob: -7.0173869132995605
    9. '   ' → logprob: -7.3923869132995605
    10. 'return' → logprob: -7.5173869132995605

Token 151: ' fold' (ID: 17691)
  Prédit: ' fold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fold' → logprob: -0.7210139036178589
    2. 'fold' → logprob: -0.7210139036178589
    3. 'half' → logprob: -5.096014022827148
    4. ' half' → logprob: -5.346014022827148
    5. ')' → logprob: -5.471014022827148
    6. '       ' → logprob: -6.346014022827148
    7. '_fold' → logprob: -6.471014022827148
    8. ' folds' → logprob: -6.471014022827148
    9. '   ' → logprob: -6.721014022827148
    10. 'right' → logprob: -6.846014022827148

Token 152: ' goes' (ID: 8805)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7403408885002136
    2. ' goes' → logprob: -0.9903408885002136
    3. ')' → logprob: -2.7403409481048584
    4. 'go' → logprob: -2.8653409481048584
    5. '   ' → logprob: -4.615340709686279
    6. ' was' → logprob: -5.490340709686279
    7. 'was' → logprob: -5.740340709686279
    8. 's' → logprob: -6.490340709686279
    9. ' ' → logprob: -6.865340709686279
    10. '      ' → logprob: -7.115340709686279

Token 153: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.05709685757756233
    2. 'below' → logprob: -3.8070969581604004
    3. 'under' → logprob: -3.9320969581604004
    4. ' on' → logprob: -4.6820969581604
    5. 'down' → logprob: -6.5570969581604
    6. 'bottom' → logprob: -7.0570969581604
    7. ' under' → logprob: -7.4320969581604
    8. ' below' → logprob: -7.5570969581604
    9. 'above' → logprob: -8.307096481323242
    10. 'from' → logprob: -8.557096481323242

Token 154: ' bottom' (ID: 8725)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.17022071778774261
    2. 'right' → logprob: -2.4202206134796143
    3. 'left' → logprob: -3.1702206134796143
    4. ' top' → logprob: -3.9202206134796143
    5. 'bottom' → logprob: -5.420220851898193
    6. ' right' → logprob: -7.170220851898193
    7. 'i' → logprob: -8.545220375061035
    8. ' left' → logprob: -8.545220375061035
    9. 'the' → logprob: -9.545220375061035
    10. 'Right' → logprob: -9.795220375061035

Token 155: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13727585971355438
    2. '           ' → logprob: -2.8872759342193604
    3. ')
' → logprob: -3.2622759342193604
    4. '       ' → logprob: -3.6372759342193604
    5. '')' → logprob: -5.262275695800781
    6. ')L' → logprob: -6.762275695800781
    7. '):
' → logprob: -7.762275695800781
    8. '')
' → logprob: -7.887275695800781
    9. ''' → logprob: -8.387275695800781
    10. ',' → logprob: -9.762275695800781

Token 156: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5179551839828491
    2. '       ' → logprob: -1.5179551839828491
    3. ' return' → logprob: -2.1429553031921387
    4. 'return' → logprob: -3.2679553031921387
    5. ''' → logprob: -4.017955303192139
    6. ' '' → logprob: -4.892955303192139
    7. ''s' → logprob: -6.392955303192139
    8. '   ' → logprob: -7.517955303192139
    9. ' L' → logprob: -7.892955303192139
    10. ' ' → logprob: -8.39295482635498

Token 157: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.21563176810741425
    2. 'return' → logprob: -1.9656317234039307
    3. '       ' → logprob: -3.0906317234039307
    4. '           ' → logprob: -4.84063196182251
    5. '   ' → logprob: -8.965631484985352
    6. ''' → logprob: -9.465631484985352
    7. ' ' → logprob: -9.715631484985352
    8. ''s' → logprob: -9.840631484985352
    9. '	return' → logprob: -9.840631484985352
    10. ' ' → logprob: -9.965631484985352

Token 158: ' fold' (ID: 17691)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.30299127101898193
    2. ' return' → logprob: -1.677991271018982
    3. '       ' → logprob: -3.0529913902282715
    4. 'R' → logprob: -4.6779913902282715
    5. ''' → logprob: -4.9279913902282715
    6. ' R' → logprob: -5.4279913902282715
    7. '           ' → logprob: -5.4279913902282715
    8. ' '' → logprob: -7.3029913902282715
    9. '   ' → logprob: -7.8029913902282715
    10. ' ' → logprob: -8.927990913391113

Token 159: ' was' (ID: 673)
  Prédit: ' was'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' was' → logprob: -0.18019111454486847
    2. 'was' → logprob: -1.805191159248352
    3. '   ' → logprob: -9.055191040039062
    4. 'from' → logprob: -9.930191040039062
    5. '       ' → logprob: -9.930191040039062
    6. ' from' → logprob: -10.555191040039062
    7. ' is' → logprob: -10.680191040039062
    8. ' ' → logprob: -10.805191040039062
    9. '==' → logprob: -10.805191040039062
    10. '=' → logprob: -11.180191040039062

Token 160: ' from' (ID: 591)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0014548784820362926
    2. ' '' → logprob: -6.751454830169678
    3. ''U' → logprob: -9.126455307006836
    4. 'from' → logprob: -9.876455307006836
    5. '   ' → logprob: -10.001455307006836
    6. 'R' → logprob: -10.501455307006836
    7. ''L' → logprob: -11.251455307006836
    8. ' R' → logprob: -11.501455307006836
    9. ' ' → logprob: -11.501455307006836
    10. ' ' → logprob: -12.376455307006836

Token 161: ' Right' (ID: 16354)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.47693362832069397
    2. 'R' → logprob: -0.9769335985183716
    3. ' '' → logprob: -6.851933479309082
    4. ' R' → logprob: -6.976933479309082
    5. 'Right' → logprob: -7.351933479309082
    6. '"' → logprob: -9.351933479309082
    7. '`' → logprob: -9.976933479309082
    8. ' ' → logprob: -11.101933479309082
    9. 'L' → logprob: -11.476933479309082
    10. 'right' → logprob: -11.726933479309082

Token 162: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.43120118975639343
    2. 'to' → logprob: -1.4312012195587158
    3. ' (' → logprob: -2.931201219558716
    4. ''' → logprob: -3.556201219558716
    5. 'To' → logprob: -4.431200981140137
    6. '_to' → logprob: -5.431200981140137
    7. ' '' → logprob: -5.681200981140137
    8. '(' → logprob: -5.931200981140137
    9. '('' → logprob: -6.431200981140137
    10. ')' → logprob: -7.056200981140137

Token 163: ' Left' (ID: 26982)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.8332669734954834
    2. 'R' → logprob: -1.3332669734954834
    3. 'Right' → logprob: -1.8332669734954834
    4. 'Left' → logprob: -1.9582669734954834
    5. 'B' → logprob: -8.458267211914062
    6. ' Left' → logprob: -8.833267211914062
    7. ' Right' → logprob: -8.958267211914062
    8. 'Bottom' → logprob: -9.333267211914062
    9. 'left' → logprob: -9.458267211914062
    10. ' L' → logprob: -9.958267211914062

Token 164: ' (' (ID: 350)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7597168684005737
    2. '           ' → logprob: -1.0097168684005737
    3. ' '' → logprob: -2.2597169876098633
    4. ')' → logprob: -3.8847169876098633
    5. '       ' → logprob: -4.759716987609863
    6. ' (' → logprob: -5.509716987609863
    7. '('' → logprob: -5.634716987609863
    8. '')' → logprob: -5.759716987609863
    9. ''L' → logprob: -5.884716987609863
    10. ' return' → logprob: -6.259716987609863

Token 165: 'R' (ID: 49)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.022246461361646652
    2. ''L' → logprob: -4.522246360778809
    3. 'R' → logprob: -4.647246360778809
    4. ''U' → logprob: -7.522246360778809
    5. ' '' → logprob: -8.397246360778809
    6. 'L' → logprob: -8.897246360778809
    7. ''D' → logprob: -9.147246360778809
    8. ''T' → logprob: -9.647246360778809
    9. ' R' → logprob: -9.647246360778809
    10. ''N' → logprob: -9.772246360778809

Token 166: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010800912976264954
    2. '')' → logprob: -4.635800838470459
    3. ')
' → logprob: -7.010800838470459
    4. '')
' → logprob: -9.760801315307617
    5. '           ' → logprob: -10.260801315307617
    6. ''' → logprob: -11.385801315307617
    7. '       ' → logprob: -11.385801315307617
    8. '   ' → logprob: -11.760801315307617
    9. ')'' → logprob: -12.135801315307617
    10. ')

' → logprob: -12.760801315307617

Token 167: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5546914935112
    2. '       ' → logprob: -0.9296914935112
    3. ' return' → logprob: -4.554691314697266
    4. 'return' → logprob: -4.554691314697266
    5. '   ' → logprob: -5.179691314697266
    6. ':' → logprob: -7.054691314697266
    7. '<|end|>' → logprob: -7.304691314697266
    8. ')' → logprob: -7.679691314697266
    9. ',' → logprob: -8.179691314697266
    10. ''' → logprob: -8.429691314697266

Token 168: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6500380635261536
    2. ' return' → logprob: -0.7750380635261536
    3. '       ' → logprob: -4.150038242340088
    4. '           ' → logprob: -6.650038242340088
    5. '   ' → logprob: -8.65003776550293
    6. ''' → logprob: -11.40003776550293
    7. '	return' → logprob: -11.40003776550293
    8. ' ' → logprob: -11.77503776550293
    9. ' R' → logprob: -12.52503776550293
    10. ' ' → logprob: -12.77503776550293

Token 169: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.005258183926343918
    2. ' '' → logprob: -5.255258083343506
    3. '"' → logprob: -11.755258560180664
    4. ' R' → logprob: -12.130258560180664
    5. ''S' → logprob: -12.505258560180664
    6. ''r' → logprob: -13.380258560180664
    7. '('' → logprob: -13.505258560180664
    8. ' ' → logprob: -13.880258560180664
    9. ' ' → logprob: -14.130258560180664
    10. ''L' → logprob: -14.255258560180664

Token 170: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.08901624381542206
    2. ''' → logprob: -2.4640161991119385
    3. 'L' → logprob: -10.21401596069336
    4. ''L' → logprob: -10.96401596069336
    5. ' R' → logprob: -11.08901596069336
    6. ''r' → logprob: -12.83901596069336
    7. '"' → logprob: -13.83901596069336
    8. '('' → logprob: -14.46401596069336
    9. ' '' → logprob: -14.58901596069336
    10. '`' → logprob: -14.71401596069336

Token 171: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -2.5776860184123507e-06
    2. ''+' → logprob: -13.00000286102295
    3. '"' → logprob: -15.62500286102295
    4. ' +' → logprob: -17.000001907348633
    5. '+' → logprob: -17.625001907348633
    6. '')' → logprob: -17.750001907348633
    7. ' '' → logprob: -18.750001907348633
    8. ''
' → logprob: -19.125001907348633
    9. ')' → logprob: -20.000001907348633
    10. '',' → logprob: -20.250001907348633

Token 172: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12693022191524506
    2. '+' → logprob: -2.1269302368164062
    3. '(find' → logprob: -15.001930236816406
    4. 'solve' → logprob: -15.126930236816406
    5. 'find' → logprob: -15.251930236816406
    6. 'def' → logprob: -15.376930236816406
    7. ''' → logprob: -16.251930236816406
    8. ' solve' → logprob: -16.376930236816406
    9. '(' → logprob: -16.376930236816406
    10. ' ' → logprob: -16.501930236816406

Token 173: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.20143817365169525
    2. 'find' → logprob: -1.7014381885528564
    3. ' solve' → logprob: -11.076437950134277
    4. 'solve' → logprob: -11.701437950134277
    5. '(find' → logprob: -13.951437950134277
    6. '	find' → logprob: -15.201437950134277
    7. ' ' → logprob: -17.201438903808594
    8. ')find' → logprob: -18.201438903808594
    9. ' ' → logprob: -18.326438903808594
    10. '.find' → logprob: -18.701438903808594

Token 174: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -6.704273118884885e-07
    2. '_fold' → logprob: -14.750000953674316
    3. '_' → logprob: -15.750000953674316
    4. 'f' → logprob: -17.375
    5. 'fold' → logprob: -18.75
    6. '(_' → logprob: -19.5
    7. '(f' → logprob: -19.5
    8. '_code' → logprob: -19.625
    9. '\' → logprob: -20.0
    10. ' _' → logprob: -20.125

Token 175: 'olds' (ID: 37608)
  Prédit: 'olds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olds' → logprob: -0.270028680562973
    2. '_f' → logprob: -2.020028591156006
    3. 'old' → logprob: -2.395028591156006
    4. '_' → logprob: -5.395028591156006
    5. 'fold' → logprob: -5.395028591156006
    6. 'ol' → logprob: -6.645028591156006
    7. '_fold' → logprob: -7.145028591156006
    8. '_old' → logprob: -7.770028591156006
    9. '_o' → logprob: -8.020029067993164
    10. '(' → logprob: -9.020029067993164

Token 176: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.167648876318708e-05
    2. '(' → logprob: -10.125041961669922
    3. ' (' → logprob: -14.250041961669922
    4. 'n' → logprob: -14.375041961669922
    5. '(
' → logprob: -15.500041961669922
    6. '```' → logprob: -17.250041961669922
    7. '<n' → logprob: -19.375041961669922
    8. ' n' → logprob: -19.625041961669922
    9. '<|end|>' → logprob: -20.000041961669922
    10. '\(' → logprob: -20.000041961669922

Token 177: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.474092036485672
    2. ' -' → logprob: -0.9740920066833496
    3. ' ' → logprob: -11.974092483520508
    4. '   ' → logprob: -12.224092483520508
    5. '       ' → logprob: -14.349092483520508
    6. '    ' → logprob: -14.724092483520508
    7. '```' → logprob: -14.974092483520508
    8. '<|end|>' → logprob: -14.974092483520508
    9. '  ' → logprob: -15.224092483520508
    10. '           ' → logprob: -15.474092483520508

Token 178: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010032468708232045
    2. ' ' → logprob: -9.250100135803223
    3. '       ' → logprob: -13.625100135803223
    4. '   ' → logprob: -13.625100135803223
    5. '2' → logprob: -13.875100135803223
    6. '           ' → logprob: -15.125100135803223
    7. '```' → logprob: -16.12510108947754
    8. '    ' → logprob: -17.12510108947754
    9. '-' → logprob: -17.31260108947754
    10. '0' → logprob: -17.37510108947754

Token 179: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.599403423024341e-05
    2. ' ' → logprob: -9.750065803527832
    3. '2' → logprob: -12.125065803527832
    4. '-' → logprob: -14.500065803527832
    5. 'i' → logprob: -15.125065803527832
    6. '   ' → logprob: -15.312565803527832
    7. '0' → logprob: -15.625065803527832
    8. '
' → logprob: -15.875065803527832
    9. '```' → logprob: -16.31256675720215
    10. 'n' → logprob: -16.81256675720215

Token 180: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13884568214416504
    2. '(n' → logprob: -2.513845682144165
    3. '(i' → logprob: -3.388845682144165
    4. '(' → logprob: -4.263845443725586
    5. ' (' → logprob: -8.013845443725586
    6. ' ,' → logprob: -8.013845443725586
    7. ',i' → logprob: -9.013845443725586
    8. ',n' → logprob: -9.638845443725586
    9. '   ' → logprob: -12.513845443725586
    10. '(
' → logprob: -12.888845443725586

Token 181: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.012076086364686489
    2. 'half' → logprob: -5.137075901031494
    3. ' i' → logprob: -5.262075901031494
    4. '     ' → logprob: -7.887075901031494
    5. ' half' → logprob: -8.512076377868652
    6. '   ' → logprob: -8.637076377868652
    7. 'n' → logprob: -9.387076377868652
    8. ' ' → logprob: -10.512076377868652
    9. '       ' → logprob: -11.137076377868652
    10. '    ' → logprob: -11.512076377868652

Token 182: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00032509511220268905
    2. ' ,' → logprob: -8.625325202941895
    3. ',j' → logprob: -8.875325202941895
    4. '           ' → logprob: -13.500325202941895
    5. ' j' → logprob: -13.625325202941895
    6. 'j' → logprob: -13.750325202941895
    7. '   ' → logprob: -14.250325202941895
    8. '       ' → logprob: -14.375325202941895
    9. '    ' → logprob: -15.125325202941895
    10. '     ' → logprob: -15.875325202941895

Token 183: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00013214473437983543
    2. ' j' → logprob: -9.00013256072998
    3. '   ' → logprob: -12.00013256072998
    4. '           ' → logprob: -13.87513256072998
    5. '       ' → logprob: -14.50013256072998
    6. '	j' → logprob: -14.62513256072998
    7. '    ' → logprob: -15.62513256072998
    8. '     ' → logprob: -16.125131607055664
    9. ' ' → logprob: -16.250131607055664
    10. '  ' → logprob: -16.500131607055664

Token 184: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.816591434879228e-05
    2. ')
' → logprob: -10.37508773803711
    3. '<|end|>' → logprob: -10.50008773803711
    4. ',' → logprob: -11.00008773803711
    5. '),' → logprob: -12.87508773803711
    6. ' )' → logprob: -12.87508773803711
    7. ')>' → logprob: -13.12508773803711
    8. ')return' → logprob: -13.87508773803711
    9. '       ' → logprob: -14.50008773803711
    10. '<|end|>' → logprob: -14.87508773803711

Token 185: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024490492418408394
    2. '   ' → logprob: -4.6494903564453125
    3. ' else' → logprob: -5.6494903564453125
    4. 'elif' → logprob: -5.6494903564453125
    5. 'else' → logprob: -6.0244903564453125
    6. ' elif' → logprob: -6.6494903564453125
    7. '
' → logprob: -6.6494903564453125
    8. '        
' → logprob: -7.0244903564453125
    9. '<|end|>' → logprob: -7.3994903564453125
    10. '    
' → logprob: -7.6494903564453125

Token 186: ' elif' (ID: 9497)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.8022568225860596
    2. 'else' → logprob: -0.8022568225860596
    3. '       ' → logprob: -2.8022568225860596
    4. 'elif' (adapté à ' elif') → logprob: -3.9272568225860596
    5. '   ' → logprob: -4.1772565841674805
    6. ' elif' → logprob: -5.9272565841674805
    7. '
' → logprob: -6.4272565841674805
    8. '	else' → logprob: -6.6772565841674805
    9. '<|end|>' → logprob: -7.0522565841674805
    10. '        
' → logprob: -7.8022565841674805

Token 187: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.22574131190776825
    2. 'i' → logprob: -1.6007412672042847
    3. '   ' → logprob: -8.225741386413574
    4. ' ' → logprob: -10.475741386413574
    5. ' n' → logprob: -11.600741386413574
    6. 'n' → logprob: -11.975741386413574
    7. '    ' → logprob: -12.725741386413574
    8. '  ' → logprob: -12.975741386413574
    9. ' j' → logprob: -13.100741386413574
    10. '     ' → logprob: -13.475741386413574

Token 188: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.08190250396728516
    2. ' <=' → logprob: -2.581902503967285
    3. '>' → logprob: -5.956902503967285
    4. '<=' → logprob: -7.831902503967285
    5. ' ' → logprob: -11.831902503967285
    6. ' <' → logprob: -12.331902503967285
    7. '   ' → logprob: -12.331902503967285
    8. '    ' → logprob: -13.081902503967285
    9. ' >
' → logprob: -13.206902503967285
    10. ' ' → logprob: -14.206902503967285

Token 189: ' half' (ID: 6375)
  Prédit: ' half'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' half' → logprob: -0.06197015196084976
    2. 'half' → logprob: -2.8119702339172363
    3. ' ' → logprob: -13.686969757080078
    4. '_half' → logprob: -14.186969757080078
    5. ' halfway' → logprob: -15.186969757080078
    6. '0' → logprob: -15.936969757080078
    7. '   ' → logprob: -16.186969757080078
    8. ' halftime' → logprob: -16.311969757080078
    9. '=' → logprob: -18.061969757080078
    10. ',' → logprob: -18.186969757080078

Token 190: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12315011769533157
    2. ':' → logprob: -2.498150110244751
    3. '       ' → logprob: -4.24815034866333
    4. 'and' → logprob: -4.99815034866333
    5. '   ' → logprob: -5.62315034866333
    6. ':
' → logprob: -5.62315034866333
    7. '        ' → logprob: -6.87315034866333
    8. ' -' → logprob: -6.87315034866333
    9. '           ' → logprob: -6.87315034866333
    10. '-' → logprob: -7.24815034866333

Token 191: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.06661898642778397
    2. 'j' → logprob: -3.1916189193725586
    3. ' i' → logprob: -3.9416189193725586
    4. 'i' → logprob: -5.941618919372559
    5. ' n' → logprob: -7.316618919372559
    6. ' half' → logprob: -7.816618919372559
    7. 'half' → logprob: -8.941618919372559
    8. 'n' → logprob: -9.691618919372559
    9. ' ' → logprob: -11.691618919372559
    10. '   ' → logprob: -11.816618919372559

Token 192: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.10176439583301544
    2. '<=' → logprob: -2.351764440536499
    3. ' >' → logprob: -6.60176420211792
    4. '>' → logprob: -8.601764678955078
    5. ' ' → logprob: -11.976764678955078
    6. '   ' → logprob: -12.226764678955078
    7. ' ≤' → logprob: -13.601764678955078
    8. '```' → logprob: -14.851764678955078
    9. ']<=' → logprob: -15.351764678955078
    10. ')<=' → logprob: -15.351764678955078

Token 193: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.014171851798892021
    2. ' half' → logprob: -4.264172077178955
    3. ' ' → logprob: -12.764171600341797
    4. 'hal' → logprob: -12.889171600341797
    5. '_half' → logprob: -13.514171600341797
    6. 'halb' → logprob: -14.514171600341797
    7. '(' → logprob: -14.639171600341797
    8. '0' → logprob: -16.264171600341797
    9. 'Half' → logprob: -16.264171600341797
    10. '2' → logprob: -16.639171600341797

Token 194: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6934201717376709
    2. ':
' → logprob: -0.6934201717376709
    3. '       ' → logprob: -8.44342041015625
    4. '):
' → logprob: -10.94342041015625
    5. ':

' → logprob: -11.19342041015625
    6. '   ' → logprob: -11.94342041015625
    7. ':return' → logprob: -12.19342041015625
    8. '<|end|>' → logprob: -12.69342041015625
    9. '():
' → logprob: -12.94342041015625
    10. ',' → logprob: -13.19342041015625

Token 195: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005224982742220163
    2. ' return' → logprob: -6.25522518157959
    3. '           ' → logprob: -6.38022518157959
    4. 'return' → logprob: -6.63022518157959
    5. '   ' → logprob: -9.00522518157959
    6. ''' → logprob: -10.50522518157959
    7. ' '' → logprob: -10.75522518157959
    8. '#' → logprob: -11.00522518157959
    9. ',' → logprob: -11.38022518157959
    10. '<|end|>' → logprob: -11.38022518157959

Token 196: ' #' (ID: 1069)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.14308074116706848
    2. '       ' → logprob: -2.893080711364746
    3. 'return' → logprob: -3.393080711364746
    4. ' return' → logprob: -3.893080711364746
    5. ' '' → logprob: -4.268080711364746
    6. '           ' → logprob: -5.393080711364746
    7. '"' → logprob: -5.893080711364746
    8. '   ' → logprob: -7.518080711364746
    9. '        ' → logprob: -8.143080711364746
    10. ' ' → logprob: -8.518080711364746

Token 197: ' mark' (ID: 1983)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.31674280762672424
    2. ' '' → logprob: -1.6917427778244019
    3. ''D' → logprob: -3.5667428970336914
    4. 'R' → logprob: -4.316742897033691
    5. ''L' → logprob: -4.441742897033691
    6. ' R' → logprob: -5.066742897033691
    7. 'L' → logprob: -5.691742897033691
    8. ''d' → logprob: -5.691742897033691
    9. ''U' → logprob: -5.691742897033691
    10. '"' → logprob: -6.316742897033691

Token 198: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0034013327676802874
    2. 'in' → logprob: -5.753401279449463
    3. ' n' → logprob: -9.878401756286621
    4. ' i' → logprob: -10.503401756286621
    5. ' '' → logprob: -10.628401756286621
    6. 'n' → logprob: -11.003401756286621
    7. 'In' → logprob: -11.128401756286621
    8. '_in' → logprob: -11.253401756286621
    9. '   ' → logprob: -11.503401756286621
    10. ' ' → logprob: -11.753401756286621

Token 199: ' left' (ID: 3561)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.37906256318092346
    2. 'n' → logprob: -1.379062533378601
    3. ' i' → logprob: -3.7540626525878906
    4. 'i' → logprob: -4.254062652587891
    5. ' bottom' → logprob: -4.879062652587891
    6. ' half' → logprob: -5.254062652587891
    7. 'half' → logprob: -5.254062652587891
    8. 'bottom' → logprob: -5.379062652587891
    9. ' top' → logprob: -6.879062652587891
    10. ' lower' → logprob: -7.754062652587891

Token 200: ' half' (ID: 6375)
  Prédit: ' half'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' half' → logprob: -0.2515251934528351
    2. '_half' → logprob: -2.2515251636505127
    3. '_' → logprob: -2.7515251636505127
    4. 'half' → logprob: -3.0015251636505127
    5. ' ' → logprob: -6.251525402069092
    6. ' _' → logprob: -7.251525402069092
    7. 'over' → logprob: -8.626524925231934
    8. '_h' → logprob: -8.626524925231934
    9. '_f' → logprob: -9.501524925231934
    10. '_
' → logprob: -10.001524925231934

Token 201: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08349757641553879
    2. ''' → logprob: -3.7084975242614746
    3. ' '' → logprob: -3.9584975242614746
    4. '       ' → logprob: -4.833497524261475
    5. ' (' → logprob: -5.208497524261475
    6. ''s' → logprob: -5.333497524261475
    7. '   ' → logprob: -5.458497524261475
    8. ')' → logprob: -5.958497524261475
    9. ''L' → logprob: -6.333497524261475
    10. '('' → logprob: -6.333497524261475

Token 202: 'bottom' (ID: 29677)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9923194050788879
    2. 'R' → logprob: -1.6173193454742432
    3. ' n' → logprob: -1.8673193454742432
    4. 'L' → logprob: -2.617319345474243
    5. ' R' → logprob: -2.617319345474243
    6. ''' → logprob: -3.367319345474243
    7. 'i' → logprob: -3.617319345474243
    8. ' L' → logprob: -3.867319345474243
    9. ' i' → logprob: -4.242319583892822
    10. ''n' → logprob: -4.492319583892822

Token 203: ' fold' (ID: 17691)
  Prédit: ' fold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fold' → logprob: -0.27380767464637756
    2. '_fold' → logprob: -1.7738076448440552
    3. 'fold' → logprob: -3.0238077640533447
    4. '_f' → logprob: -4.773807525634766
    5. ' _' → logprob: -5.273807525634766
    6. '_' → logprob: -5.398807525634766
    7. '   ' → logprob: -6.398807525634766
    8. ')' → logprob: -7.398807525634766
    9. ' ' → logprob: -8.773807525634766
    10. '_i' → logprob: -9.523807525634766

Token 204: ' goes' (ID: 8805)
  Prédit: ' goes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' goes' → logprob: -0.009551608934998512
    2. '_go' → logprob: -4.884551525115967
    3. 'go' → logprob: -7.134551525115967
    4. '   ' → logprob: -8.009552001953125
    5. ' was' → logprob: -8.509552001953125
    6. ')' → logprob: -9.009552001953125
    7. 's' → logprob: -9.259552001953125
    8. '       ' → logprob: -9.384552001953125
    9. ' ' → logprob: -9.884552001953125
    10. 'from' → logprob: -10.134552001953125

Token 205: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.08895102888345718
    2. ' on' → logprob: -2.4639511108398438
    3. '	on' → logprob: -12.088951110839844
    4. ' ' → logprob: -12.838951110839844
    5. 'ont' → logprob: -13.588951110839844
    6. ''on' → logprob: -14.213951110839844
    7. ' ' → logprob: -14.838951110839844
    8. '   ' → logprob: -14.963951110839844
    9. '_on' → logprob: -16.713951110839844
    10. '  ' → logprob: -16.713951110839844

Token 206: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.16157618165016174
    2. ' top' → logprob: -1.9115761518478394
    3. 'Top' → logprob: -6.911576271057129
    4. 'bottom' → logprob: -8.536576271057129
    5. 'right' → logprob: -9.786576271057129
    6. 'Right' → logprob: -10.286576271057129
    7. ' bottom' → logprob: -10.911576271057129
    8. ' right' → logprob: -11.661576271057129
    9. '[top' → logprob: -11.661576271057129
    10. '	top' → logprob: -11.786576271057129

Token 207: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.536419689655304
    2. '           ' → logprob: -1.0364196300506592
    3. ')
' → logprob: -3.786419630050659
    4. '       ' → logprob: -3.911419630050659
    5. '')' → logprob: -4.411419868469238
    6. ''' → logprob: -6.536419868469238
    7. '')
' → logprob: -7.286419868469238
    8. '):
' → logprob: -7.286419868469238
    9. ')L' → logprob: -7.411419868469238
    10. '   ' → logprob: -8.411419868469238

Token 208: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22217093408107758
    2. '       ' → logprob: -1.8471709489822388
    3. ' return' → logprob: -3.847170829772949
    4. ''' → logprob: -4.847170829772949
    5. 'return' → logprob: -5.472170829772949
    6. ' L' → logprob: -6.222170829772949
    7. '   ' → logprob: -6.472170829772949
    8. ' R' → logprob: -6.597170829772949
    9. ' '' → logprob: -7.222170829772949
    10. ')' → logprob: -7.472170829772949

Token 209: ' #' (ID: 1069)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.16022838652133942
    2. ' return' → logprob: -2.2852284908294678
    3. ' L' → logprob: -3.7852284908294678
    4. 'return' → logprob: -4.285228252410889
    5. ' '' → logprob: -5.285228252410889
    6. ''L' → logprob: -6.285228252410889
    7. '   ' → logprob: -6.660228252410889
    8. '           ' → logprob: -7.910228252410889
    9. '       ' → logprob: -8.160228729248047
    10. ' ' → logprob: -8.660228729248047

Token 210: ' fold' (ID: 17691)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8769623041152954
    2. 'return' → logprob: -1.5019623041152954
    3. 'L' → logprob: -1.7519623041152954
    4. ' L' → logprob: -2.251962184906006
    5. ''' → logprob: -3.251962184906006
    6. '           ' → logprob: -4.001962184906006
    7. ''L' → logprob: -4.626962184906006
    8. ' '' → logprob: -5.126962184906006
    9. 'R' → logprob: -5.501962184906006
    10. ' R' → logprob: -6.251962184906006

Token 211: ' was' (ID: 673)
  Prédit: ' was'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' was' → logprob: -0.003767424263060093
    2. 'was' → logprob: -5.753767490386963
    3. ' from' → logprob: -7.878767490386963
    4. ' =' → logprob: -9.503767013549805
    5. 'from' → logprob: -9.628767013549805
    6. ' is' → logprob: -10.628767013549805
    7. ' '' → logprob: -11.503767013549805
    8. ''' → logprob: -11.753767013549805
    9. ' ' → logprob: -12.253767013549805
    10. '   ' → logprob: -12.628767013549805

Token 212: ' from' (ID: 591)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5317075848579407
    2. ''L' → logprob: -1.031707525253296
    3. ' '' → logprob: -2.906707525253296
    4. 'from' → logprob: -7.406707763671875
    5. 'L' → logprob: -8.281707763671875
    6. ' from' → logprob: -8.906707763671875
    7. ' L' → logprob: -9.156707763671875
    8. '   ' → logprob: -9.531707763671875
    9. ' ' → logprob: -10.781707763671875
    10. ''T' → logprob: -10.906707763671875

Token 213: ' Left' (ID: 26982)
  Prédit: 'Left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Left' → logprob: -0.6238709092140198
    2. ' Left' → logprob: -1.623870849609375
    3. 'Right' → logprob: -1.623870849609375
    4. 'L' → logprob: -3.248870849609375
    5. ' Right' → logprob: -3.623870849609375
    6. ' L' → logprob: -5.873870849609375
    7. 'R' → logprob: -6.748870849609375
    8. ' R' → logprob: -8.998870849609375
    9. 'Bottom' → logprob: -9.498870849609375
    10. ' left' → logprob: -10.123870849609375

Token 214: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.21230994164943695
    2. 'to' → logprob: -1.8373099565505981
    3. '_to' → logprob: -3.5873098373413086
    4. 'To' → logprob: -5.712309837341309
    5. ''' → logprob: -7.962309837341309
    6. '<|end|>' → logprob: -8.212309837341309
    7. '_' → logprob: -8.462309837341309
    8. ')' → logprob: -9.212309837341309
    9. ' ' → logprob: -10.462309837341309
    10. ' To' → logprob: -11.462309837341309

Token 215: ' Right' (ID: 16354)
  Prédit: 'Right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Right' → logprob: -0.004137529991567135
    2. ' Right' → logprob: -6.1291375160217285
    3. 'R' → logprob: -6.2541375160217285
    4. 'Left' → logprob: -12.004137992858887
    5. ' right' → logprob: -12.254137992858887
    6. 'Top' → logprob: -12.379137992858887
    7. 'right' → logprob: -12.379137992858887
    8. ' R' → logprob: -12.754137992858887
    9. '_Right' → logprob: -13.004137992858887
    10. '_right' → logprob: -13.629137992858887

Token 216: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.07275115698575974
    2. '(' → logprob: -4.197751045227051
    3. ''' → logprob: -4.447751045227051
    4. '('' → logprob: -4.447751045227051
    5. '(L' → logprob: -4.697751045227051
    6. '           ' → logprob: -4.822751045227051
    7. ' '' → logprob: -4.947751045227051
    8. ')' → logprob: -6.072751045227051
    9. '       ' → logprob: -6.822751045227051
    10. ' ('' → logprob: -6.947751045227051

Token 217: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.06196140870451927
    2. ''' → logprob: -3.4369614124298096
    3. ''L' → logprob: -4.0619611740112305
    4. ')' → logprob: -4.9369611740112305
    5. ' L' → logprob: -6.3119611740112305
    6. ' '' → logprob: -7.1869611740112305
    7. '')' → logprob: -7.8119611740112305
    8. ' (' → logprob: -8.43696117401123
    9. '(L' → logprob: -8.68696117401123
    10. '('' → logprob: -9.43696117401123

Token 218: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16744497418403625
    2. '')' → logprob: -1.9174449443817139
    3. '           ' → logprob: -5.542445182800293
    4. '       ' → logprob: -6.417445182800293
    5. ')
' → logprob: -7.792445182800293
    6. ''' → logprob: -7.792445182800293
    7. '')
' → logprob: -7.792445182800293
    8. '   ' → logprob: -9.042445182800293
    9. ''):
' → logprob: -9.917445182800293
    10. 'return' → logprob: -10.292445182800293

Token 219: '           ' (ID: 352)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.11130896955728531
    2. 'return' → logprob: -2.361309051513672
    3. '       ' → logprob: -5.486309051513672
    4. ''' → logprob: -5.861309051513672
    5. '           ' → logprob: -6.486309051513672
    6. ' L' → logprob: -6.986309051513672
    7. '   ' → logprob: -6.986309051513672
    8. ' '' → logprob: -7.736309051513672
    9. '	return' → logprob: -10.486309051513672
    10. ' ' → logprob: -10.611309051513672

Token 220: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5931711196899414
    2. ''' → logprob: -1.3431711196899414
    3. 'return' (adapté à ' return') → logprob: -1.9681711196899414
    4. ' L' → logprob: -3.5931711196899414
    5. ''L' → logprob: -4.343171119689941
    6. ' '' → logprob: -5.218171119689941
    7. '   ' → logprob: -8.718171119689941
    8. 'L' → logprob: -8.718171119689941
    9. ' ' → logprob: -8.843171119689941
    10. ''\' → logprob: -9.843171119689941

Token 221: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.9400168657302856
    2. ''' → logprob: -1.1900168657302856
    3. ''L' → logprob: -1.1900168657302856
    4. ' L' → logprob: -7.565016746520996
    5. 'L' → logprob: -8.690016746520996
    6. '('' → logprob: -9.815016746520996
    7. '"L' → logprob: -9.940016746520996
    8. ''S' → logprob: -10.315016746520996
    9. '"' → logprob: -10.440016746520996
    10. '`' → logprob: -10.940016746520996

Token 222: 'L' (ID: 43)
  Prédit: ''L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''L' → logprob: -0.63318932056427
    2. 'L' → logprob: -0.75818932056427
    3. ''' → logprob: -7.7581892013549805
    4. 'R' → logprob: -9.75818920135498
    5. '"L' → logprob: -9.75818920135498
    6. ' L' → logprob: -10.88318920135498
    7. ''l' → logprob: -11.50818920135498
    8. '('' → logprob: -12.50818920135498
    9. '`' → logprob: -12.88318920135498
    10. ' '' → logprob: -13.50818920135498

Token 223: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10564859211444855
    2. '(n' → logprob: -2.6056485176086426
    3. ' +' → logprob: -3.7306485176086426
    4. '+' → logprob: -6.730648517608643
    5. ''+' → logprob: -6.980648517608643
    6. ''(' → logprob: -9.1056489944458
    7. ' (' → logprob: -9.9806489944458
    8. '(' → logprob: -10.7306489944458
    9. '(i' → logprob: -10.7306489944458
    10. '"' → logprob: -10.9806489944458

Token 224: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6289003491401672
    2. '+' → logprob: -1.0039002895355225
    3. ' find' → logprob: -2.8789002895355225
    4. 'find' → logprob: -3.8789002895355225
    5. '(find' → logprob: -3.8789002895355225
    6. 'solve' → logprob: -7.253900527954102
    7. ' solve' → logprob: -7.503900527954102
    8. '(' → logprob: -7.503900527954102
    9. '(n' → logprob: -7.753900527954102
    10. 'def' → logprob: -8.503900527954102

Token 225: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.5759955644607544
    2. 'find' → logprob: -0.8259955644607544
    3. 'solve' → logprob: -10.325995445251465
    4. ' solve' → logprob: -10.825995445251465
    5. '(find' → logprob: -12.700995445251465
    6. '	find' → logprob: -15.075995445251465
    7. '_find' → logprob: -17.57599639892578
    8. '.find' → logprob: -17.57599639892578
    9. ')find' → logprob: -17.70099639892578
    10. 'def' → logprob: -17.70099639892578

Token 226: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -3.128163257315464e-07
    2. '_fold' → logprob: -15.5
    3. '```' → logprob: -18.75
    4. '_' → logprob: -19.0
    5. '_code' → logprob: -19.125
    6. '_n' → logprob: -20.125
    7. '(n' → logprob: -21.375
    8. '_codes' → logprob: -21.625
    9. 'f' → logprob: -22.0
    10. '\' → logprob: -22.125

Token 227: 'olds' (ID: 37608)
  Prédit: 'olds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olds' → logprob: -0.00895395316183567
    2. 'old' → logprob: -4.883954048156738
    3. '_' → logprob: -7.258954048156738
    4. 'ol' → logprob: -8.758954048156738
    5. '(' → logprob: -9.633954048156738
    6. '_old' → logprob: -9.633954048156738
    7. '_f' → logprob: -9.883954048156738
    8. 'o' → logprob: -10.008954048156738
    9. '`' → logprob: -10.383954048156738
    10. '_fold' → logprob: -10.383954048156738

Token 228: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.8590300139039755e-05
    2. '(' → logprob: -10.000048637390137
    3. '(
' → logprob: -13.500048637390137
    4. ' (' → logprob: -13.625048637390137
    5. '```' → logprob: -15.000048637390137
    6. 'n' → logprob: -15.625048637390137
    7. ',n' → logprob: -18.43754768371582
    8. '   ' → logprob: -18.43754768371582
    9. '(

' → logprob: -18.50004768371582
    10. '	n' → logprob: -18.56254768371582

Token 229: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0297680776566267
    2. '-' → logprob: -3.5297679901123047
    3. ' ' → logprob: -11.154767990112305
    4. '   ' → logprob: -13.529767990112305
    5. ',' → logprob: -14.779767990112305
    6. ' ' → logprob: -15.279767990112305
    7. '    ' → logprob: -15.404767990112305
    8. '```' → logprob: -15.779767990112305
    9. '  ' → logprob: -15.842267990112305
    10. '	' → logprob: -15.904767990112305

Token 230: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0037901040632277727
    2. '(n' → logprob: -5.628789901733398
    3. 'n' → logprob: -9.253789901733398
    4. '(i' → logprob: -10.128789901733398
    5. ' ' → logprob: -10.753789901733398
    6. 'i' → logprob: -11.253789901733398
    7. ' n' → logprob: -11.503789901733398
    8. '[n' → logprob: -12.503789901733398
    9. '-' → logprob: -13.503789901733398
    10. '(' → logprob: -13.628789901733398

Token 231: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9981420336989686e-05
    2. ' ' → logprob: -11.000020027160645
    3. '2' → logprob: -13.562520027160645
    4. '0' → logprob: -15.312520027160645
    5. '
' → logprob: -15.437520027160645
    6. '-' → logprob: -15.437520027160645
    7. 'n' → logprob: -15.562520027160645
    8. '

' → logprob: -15.750020027160645
    9. 'i' → logprob: -16.125019073486328
    10. '   ' → logprob: -16.125019073486328

Token 232: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4335848093032837
    2. '(i' → logprob: -1.1835848093032837
    3. '(n' → logprob: -3.183584690093994
    4. '(' → logprob: -5.558584690093994
    5. ',i' → logprob: -8.808585166931152
    6. ' (' → logprob: -9.308585166931152
    7. ',n' → logprob: -10.433585166931152
    8. ' ,' → logprob: -10.433585166931152
    9. '(
' → logprob: -10.683585166931152
    10. '   ' → logprob: -11.308585166931152

Token 233: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0017699007876217365
    2. ' i' → logprob: -6.37677001953125
    3. 'n' → logprob: -9.75177001953125
    4. '(i' → logprob: -12.62677001953125
    5. '   ' → logprob: -12.62677001953125
    6. ',' → logprob: -14.25177001953125
    7. ' ' → logprob: -14.50177001953125
    8. '```' → logprob: -15.25177001953125
    9. ')' → logprob: -15.37677001953125
    10. '[i' → logprob: -15.50177001953125

Token 234: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3304733633995056
    2. '-' → logprob: -1.3304734230041504
    3. '-half' → logprob: -4.08047342300415
    4. '>' → logprob: -10.080472946166992
    5. ',' → logprob: -10.205472946166992
    6. ' ' → logprob: -10.705472946166992
    7. '-hal' → logprob: -11.330472946166992
    8. ' half' → logprob: -11.330472946166992
    9. '
' → logprob: -11.955472946166992
    10. '<|end|>' → logprob: -12.705472946166992

Token 235: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.0052342405542731285
    2. ' half' → logprob: -5.255234241485596
    3. 'hal' → logprob: -15.130233764648438
    4. ' ' → logprob: -17.630233764648438
    5. 'halb' → logprob: -17.755233764648438
    6. '_half' → logprob: -18.380233764648438
    7. '1' → logprob: -18.505233764648438
    8. 'halve' → logprob: -18.880233764648438
    9. '-half' → logprob: -19.255233764648438
    10. '
' → logprob: -19.755233764648438

Token 236: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038086410495452583
    2. ',j' → logprob: -8.125380516052246
    3. ' ,' → logprob: -9.500380516052246
    4. '           ' → logprob: -12.000380516052246
    5. '   ' → logprob: -13.000380516052246
    6. '       ' → logprob: -14.875380516052246
    7. '               ' → logprob: -15.125380516052246
    8. '```' → logprob: -15.875380516052246
    9. '',' → logprob: -16.125381469726562
    10. 'j' → logprob: -16.375381469726562

Token 237: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.20713548362255096
    2. 'half' → logprob: -1.7071354389190674
    3. '2' → logprob: -5.3321356773376465
    4. ' j' → logprob: -7.7071356773376465
    5. '   ' → logprob: -8.582135200500488
    6. ' half' → logprob: -9.332135200500488
    7. '(' → logprob: -10.457135200500488
    8. ' ' → logprob: -10.707135200500488
    9. 'hal' → logprob: -10.832135200500488
    10. '           ' → logprob: -11.207135200500488

Token 238: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016098538413643837
    2. ')
' → logprob: -4.141098499298096
    3. ' )' → logprob: -10.391098976135254
    4. ')

' → logprob: -10.641098976135254
    5. ',' → logprob: -13.391098976135254
    6. ')
' → logprob: -13.391098976135254
    7. ' )
' → logprob: -13.516098976135254
    8. '<|end|>' → logprob: -14.266098976135254
    9. '       ' → logprob: -14.391098976135254
    10. '+' → logprob: -14.391098976135254

Token 239: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.06981471180915833
    2. '       ' → logprob: -3.319814682006836
    3. 'elif' → logprob: -3.569814682006836
    4. ' else' → logprob: -5.819814682006836
    5. '   ' → logprob: -9.069814682006836
    6. ' elif' → logprob: -10.944814682006836
    7. '```' → logprob: -11.694814682006836
    8. '	else' → logprob: -13.944814682006836
    9. '	elif' → logprob: -14.444814682006836
    10. '    
' → logprob: -14.694814682006836

Token 240: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.02383814938366413
    2. 'elif' → logprob: -3.7738380432128906
    3. ' else' → logprob: -7.523838043212891
    4. '       ' → logprob: -9.89883804321289
    5. ' elif' → logprob: -13.14883804321289
    6. '   ' → logprob: -16.64883804321289
    7. '	else' → logprob: -16.89883804321289
    8. 'elseif' → logprob: -17.52383804321289
    9. '	elif' → logprob: -18.02383804321289
    10. '        
' → logprob: -18.27383804321289

Token 241: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1448507457971573
    2. ':
' → logprob: -2.019850730895996
    3. '       ' → logprob: -6.644850730895996
    4. '   ' → logprob: -7.769850730895996
    5. '           ' → logprob: -8.144850730895996
    6. '{' → logprob: -9.644850730895996
    7. ':return' → logprob: -10.394850730895996
    8. '{
' → logprob: -11.519850730895996
    9. '#' → logprob: -11.769850730895996
    10. 'return' → logprob: -12.019850730895996

Token 242: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05385521054267883
    2. '           ' → logprob: -3.4288551807403564
    3. 'return' → logprob: -4.3038554191589355
    4. ''' → logprob: -5.4288554191589355
    5. ' return' → logprob: -6.6788554191589355
    6. '#' → logprob: -7.5538554191589355
    7. '   ' → logprob: -8.928854942321777
    8. '"' → logprob: -10.678854942321777
    9. '               ' → logprob: -10.678854942321777
    10. '        ' → logprob: -10.803854942321777

Token 243: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7768619656562805
    2. '       ' → logprob: -0.9018619656562805
    3. ''' → logprob: -2.4018619060516357
    4. '#' (adapté à ' #') → logprob: -3.6518619060516357
    5. ' return' → logprob: -4.401862144470215
    6. '           ' → logprob: -5.401862144470215
    7. '   ' → logprob: -7.651862144470215
    8. ' #' → logprob: -9.026862144470215
    9. ' '' → logprob: -9.026862144470215
    10. '"' → logprob: -9.276862144470215

Token 244: ' i' (ID: 575)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.16466139256954193
    2. 'R' → logprob: -2.539661407470703
    3. '   ' → logprob: -2.914661407470703
    4. ' return' → logprob: -4.664661407470703
    5. '#' → logprob: -5.414661407470703
    6. ' R' → logprob: -6.164661407470703
    7. ''' → logprob: -6.539661407470703
    8. '           ' → logprob: -8.039661407470703
    9. 'i' → logprob: -8.164661407470703
    10. '       ' → logprob: -8.789661407470703

Token 245: ' >' (ID: 1424)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3145720064640045
    2. ' >' → logprob: -1.3145719766616821
    3. '>' → logprob: -7.189571857452393
    4. '<=' → logprob: -7.564571857452393
    5. '   ' → logprob: -10.56457233428955
    6. ' >=' → logprob: -12.68957233428955
    7. '```' → logprob: -13.06457233428955
    8. ' ' → logprob: -13.43957233428955
    9. ' ≤' → logprob: -13.81457233428955
    10. '       ' → logprob: -14.31457233428955

Token 246: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.11286415159702301
    2. ' half' → logprob: -2.2378642559051514
    3. 'n' → logprob: -10.86286449432373
    4. '   ' → logprob: -11.86286449432373
    5. ' n' → logprob: -11.86286449432373
    6. 'i' → logprob: -12.48786449432373
    7. '_half' → logprob: -13.48786449432373
    8. ' ' → logprob: -13.86286449432373
    9. 'hal' → logprob: -14.48786449432373
    10. '半' → logprob: -15.61286449432373

Token 247: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.019178997725248337
    2. 'and' → logprob: -4.144178867340088
    3. '   ' → logprob: -6.144178867340088
    4. '           ' → logprob: -7.269178867340088
    5. ',' → logprob: -8.894179344177246
    6. '       ' → logprob: -9.269179344177246
    7. '```' → logprob: -11.144179344177246
    8. ' ' → logprob: -11.769179344177246
    9. '=' → logprob: -11.894179344177246
    10. ' n' → logprob: -12.269179344177246

Token 248: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.011056310497224331
    2. ' j' → logprob: -4.511056423187256
    3. '   ' → logprob: -12.136055946350098
    4. 'i' → logprob: -13.011055946350098
    5. '           ' → logprob: -15.011055946350098
    6. '	j' → logprob: -15.011055946350098
    7. '       ' → logprob: -16.011056900024414
    8. '    ' → logprob: -17.136056900024414
    9. '  ' → logprob: -17.386056900024414
    10. ' ' → logprob: -17.761056900024414

Token 249: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2526407539844513
    2. '>' → logprob: -1.502640724182129
    3. ' <=' → logprob: -7.377640724182129
    4. '<=' → logprob: -9.377640724182129
    5. '   ' → logprob: -13.752640724182129
    6. ' ' → logprob: -15.252640724182129
    7. '```' → logprob: -16.252641677856445
    8. '           ' → logprob: -16.252641677856445
    9. ' ' → logprob: -17.002641677856445
    10. ' >
' → logprob: -17.752641677856445

Token 250: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.08894316852092743
    2. ' half' → logprob: -2.4639432430267334
    3. '_half' → logprob: -12.963943481445312
    4. 'hal' → logprob: -15.463943481445312
    5. ' ' → logprob: -15.713943481445312
    6. '
' → logprob: -16.088943481445312
    7. '```' → logprob: -16.213943481445312
    8. 'halb' → logprob: -16.338943481445312
    9. '>' → logprob: -16.463943481445312
    10. '   ' → logprob: -16.463943481445312

Token 251: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03912309929728508
    2. 'return' → logprob: -3.289123058319092
    3. ' return' → logprob: -7.164123058319092
    4. '       ' → logprob: -8.53912353515625
    5. ':return' → logprob: -9.53912353515625
    6. '   ' → logprob: -11.41412353515625
    7. '```' → logprob: -11.78912353515625
    8. ':' → logprob: -11.78912353515625
    9. '               ' → logprob: -12.03912353515625
    10. '	return' → logprob: -13.41412353515625

Token 252: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006262339185923338
    2. 'return' → logprob: -5.756262302398682
    3. '       ' → logprob: -5.881262302398682
    4. ' return' → logprob: -8.50626277923584
    5. '   ' → logprob: -10.13126277923584
    6. ':return' → logprob: -11.63126277923584
    7. '```' → logprob: -11.75626277923584
    8. '               ' → logprob: -11.75626277923584
    9. '	       ' → logprob: -12.63126277923584
    10. '         ' → logprob: -13.13126277923584

Token 253: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.26793229579925537
    2. '       ' → logprob: -1.6429322957992554
    3. '           ' → logprob: -3.267932415008545
    4. ' return' → logprob: -5.892932415008545
    5. 'R' → logprob: -8.017931938171387
    6. '   ' → logprob: -8.017931938171387
    7. '	return' → logprob: -9.892931938171387
    8. ' ' → logprob: -11.017931938171387
    9. '               ' → logprob: -11.267931938171387
    10. '#' (adapté à ' #') → logprob: -11.392931938171387

Token 254: ' fold' (ID: 17691)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.001730987336486578
    2. '           ' → logprob: -7.376730918884277
    3. ' return' → logprob: -7.376730918884277
    4. '       ' → logprob: -7.751730918884277
    5. '   ' → logprob: -10.001730918884277
    6. '#' → logprob: -14.251730918884277
    7. '	return' → logprob: -14.751730918884277
    8. '```' → logprob: -14.876730918884277
    9. 'R' → logprob: -15.376730918884277
    10. ' ' → logprob: -15.626730918884277

Token 255: ' was' (ID: 673)
  Prédit: ' was'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' was' → logprob: -0.03830013424158096
    2. 'was' → logprob: -3.288300037384033
    3. ' =' → logprob: -9.413300514221191
    4. '   ' → logprob: -9.538300514221191
    5. 'from' → logprob: -9.538300514221191
    6. ' from' → logprob: -11.288300514221191
    7. '=' → logprob: -11.663300514221191
    8. 's' → logprob: -13.038300514221191
    9. '='' → logprob: -13.038300514221191
    10. ' is' → logprob: -13.538300514221191

Token 256: ' from' (ID: 591)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.017503071576356888
    2. 'from' → logprob: -4.892503261566162
    3. ' '' → logprob: -4.892503261566162
    4. ''L' → logprob: -6.767503261566162
    5. 'R' → logprob: -7.392503261566162
    6. ' from' → logprob: -7.892503261566162
    7. '   ' → logprob: -9.392502784729004
    8. ' R' → logprob: -9.642502784729004
    9. '"' → logprob: -11.392502784729004
    10. ''S' → logprob: -11.767502784729004

Token 257: ' Right' (ID: 16354)
  Prédit: 'Right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Right' → logprob: -0.006919138599187136
    2. ' Right' → logprob: -5.631918907165527
    3. 'Left' → logprob: -5.756918907165527
    4. 'R' → logprob: -9.256918907165527
    5. ' Left' → logprob: -10.881918907165527
    6. ''' → logprob: -11.131918907165527
    7. 'L' → logprob: -11.381918907165527
    8. 'Bottom' → logprob: -12.256918907165527
    9. '_Right' → logprob: -13.256918907165527
    10. 'Top' → logprob: -13.631918907165527

Token 258: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.1464478224515915
    2. 'to' → logprob: -2.0214478969573975
    3. 'To' → logprob: -6.271447658538818
    4. '_to' → logprob: -6.396447658538818
    5. '_' → logprob: -9.021448135375977
    6. ' To' → logprob: -10.021448135375977
    7. 't' → logprob: -11.146448135375977
    8. '-to' → logprob: -11.646448135375977
    9. ''' → logprob: -12.771448135375977
    10. ')' → logprob: -12.771448135375977

Token 259: ' Left' (ID: 26982)
  Prédit: 'Left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Left' → logprob: -0.022295664995908737
    2. 'L' → logprob: -4.0222954750061035
    3. ' Left' → logprob: -5.5222954750061035
    4. 'Right' → logprob: -9.022295951843262
    5. ' L' → logprob: -11.022295951843262
    6. 'left' → logprob: -13.647295951843262
    7. '_left' → logprob: -14.147295951843262
    8. '_Left' → logprob: -14.147295951843262
    9. ' left' → logprob: -14.522295951843262
    10. '.Left' → logprob: -16.022294998168945

Token 260: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0651819705963135
    2. '(' → logprob: -1.5651819705963135
    3. '       ' → logprob: -1.5651819705963135
    4. 'return' → logprob: -2.1901819705963135
    5. ' (' → logprob: -2.6901819705963135
    6. ')' → logprob: -4.440181732177734
    7. '(n' → logprob: -4.565181732177734
    8. ''' → logprob: -4.565181732177734
    9. '   ' → logprob: -4.940181732177734
    10. 'def' → logprob: -5.065181732177734

Token 261: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0003372502396814525
    2. ' R' → logprob: -8.625337600708008
    3. ''' → logprob: -9.000337600708008
    4. ')' → logprob: -11.000337600708008
    5. 'L' → logprob: -11.500337600708008
    6. 'n' → logprob: -12.750337600708008
    7. '   ' → logprob: -14.000337600708008
    8. '')' → logprob: -14.250337600708008
    9. ' '' → logprob: -14.500337600708008
    10. '           ' → logprob: -14.500337600708008

Token 262: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12397483736276627
    2. '           ' → logprob: -2.6239748001098633
    3. '       ' → logprob: -3.4989748001098633
    4. '')' → logprob: -4.623974800109863
    5. 'return' → logprob: -6.248974800109863
    6. ')
' → logprob: -6.748974800109863
    7. '   ' → logprob: -7.873974800109863
    8. ')return' → logprob: -8.123974800109863
    9. '')
' → logprob: -9.373974800109863
    10. '```' → logprob: -10.498974800109863

Token 263: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41130751371383667
    2. ' return' → logprob: -1.9113075733184814
    3. 'return' → logprob: -2.2863075733184814
    4. '           ' → logprob: -2.7863075733184814
    5. '   ' → logprob: -3.6613075733184814
    6. '	return' → logprob: -9.286307334899902
    7. ')' → logprob: -9.911307334899902
    8. ':return' → logprob: -9.911307334899902
    9. '```' → logprob: -10.036307334899902
    10. ')return' → logprob: -11.036307334899902

Token 264: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.018738843500614166
    2. ' return' → logprob: -4.018738746643066
    3. '           ' → logprob: -7.768738746643066
    4. '       ' → logprob: -8.768738746643066
    5. '   ' → logprob: -11.518738746643066
    6. '	return' → logprob: -15.143738746643066
    7. '               ' → logprob: -16.018739700317383
    8. '```' → logprob: -16.893739700317383
    9. ')return' → logprob: -17.643739700317383
    10. '          ' → logprob: -17.643739700317383

Token 265: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0015041481237858534
    2. ' '' → logprob: -6.501503944396973
    3. '"' → logprob: -14.376503944396973
    4. ' R' → logprob: -14.751503944396973
    5. 'R' → logprob: -15.126503944396973
    6. ''S' → logprob: -15.626503944396973
    7. '   ' → logprob: -16.25150489807129
    8. '`' → logprob: -16.25150489807129
    9. ''r' → logprob: -16.37650489807129
    10. ' ' → logprob: -17.25150489807129

Token 266: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.00043126524542458355
    2. ''' → logprob: -7.750431060791016
    3. ' R' → logprob: -14.875431060791016
    4. 'def' → logprob: -16.125431060791016
    5. '`' → logprob: -17.250431060791016
    6. 'return' → logprob: -17.500431060791016
    7. '
' → logprob: -17.875431060791016
    8. '')' → logprob: -17.875431060791016
    9. 'find' → logprob: -18.250431060791016
    10. '```' → logprob: -18.375431060791016

Token 267: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.06597717106342316
    2. ' +' → logprob: -3.190977096557617
    3. '(n' → logprob: -3.940977096557617
    4. '+' → logprob: -6.565977096557617
    5. ''+' → logprob: -6.815977096557617
    6. '(find' → logprob: -7.315977096557617
    7. ''(' → logprob: -10.565977096557617
    8. '')' → logprob: -10.815977096557617
    9. 'find' → logprob: -10.940977096557617
    10. '(' → logprob: -11.065977096557617

Token 268: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47411805391311646
    2. ' +' → logprob: -0.9741180539131165
    3. 'find' → logprob: -10.84911823272705
    4. 'solve' → logprob: -11.47411823272705
    5. '(find' → logprob: -11.97411823272705
    6. 'def' → logprob: -13.84911823272705
    7. ' find' → logprob: -13.84911823272705
    8. '```' → logprob: -14.22411823272705
    9. ' solve' → logprob: -14.34911823272705
    10. '   ' → logprob: -15.34911823272705

Token 269: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.1602308303117752
    2. ' find' → logprob: -1.9102308750152588
    3. 'solve' → logprob: -12.16023063659668
    4. ' solve' → logprob: -13.91023063659668
    5. '(find' → logprob: -14.78523063659668
    6. '	find' → logprob: -16.16023063659668
    7. '_find' → logprob: -17.78523063659668
    8. ')find' → logprob: -18.28523063659668
    9. '.find' → logprob: -18.53523063659668
    10. 'f' → logprob: -18.66023063659668

Token 270: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -1.2664456789934775e-06
    2. 'f' → logprob: -14.125000953674316
    3. 'fold' → logprob: -14.875000953674316
    4. '_fold' → logprob: -15.750000953674316
    5. '```' → logprob: -17.375001907348633
    6. 's' → logprob: -19.000001907348633
    7. ' folds' → logprob: -19.375001907348633
    8. '\' → logprob: -19.500001907348633
    9. '_' → logprob: -19.500001907348633
    10. '	f' → logprob: -19.625001907348633

Token 271: 'olds' (ID: 37608)
  Prédit: 'olds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olds' → logprob: -0.12799851596355438
    2. 'old' → logprob: -2.1279985904693604
    3. 'ol' → logprob: -8.127998352050781
    4. '_' → logprob: -8.252998352050781
    5. 'fold' → logprob: -8.627998352050781
    6. ' folds' → logprob: -9.252998352050781
    7. 'o' → logprob: -9.627998352050781
    8. '_fold' → logprob: -10.502998352050781
    9. 'ols' → logprob: -10.627998352050781
    10. '_old' → logprob: -10.752998352050781

Token 272: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00011343709047650918
    2. '(' → logprob: -9.125113487243652
    3. ' (' → logprob: -13.125113487243652
    4. '(
' → logprob: -13.625113487243652
    5. '```' → logprob: -14.250113487243652
    6. 'n' → logprob: -14.625113487243652
    7. '<|end|>' → logprob: -17.000112533569336
    8. ' n' → logprob: -18.250112533569336
    9. '<n' → logprob: -18.500112533569336
    10. 'def' → logprob: -18.500112533569336

Token 273: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4763413965702057
    2. ' -' → logprob: -0.9763413667678833
    3. '(n' → logprob: -6.101341247558594
    4. 'n' → logprob: -11.226341247558594
    5. '(' → logprob: -12.601341247558594
    6. ' ' → logprob: -13.351341247558594
    7. 'def' → logprob: -13.976341247558594
    8. ' n' → logprob: -14.226341247558594
    9. ' (' → logprob: -14.726341247558594
    10. '```' → logprob: -15.351341247558594

Token 274: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.074907287256792e-05
    2. ' ' → logprob: -9.75006103515625
    3. '   ' → logprob: -14.37506103515625
    4. '-' → logprob: -14.37506103515625
    5. '```' → logprob: -15.00006103515625
    6. 'n' → logprob: -15.37506103515625
    7. '(n' → logprob: -15.62506103515625
    8. '(' → logprob: -15.75006103515625
    9. '           ' → logprob: -16.00006103515625
    10. '       ' → logprob: -16.12506103515625

Token 275: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9504606825648807e-05
    2. '-' → logprob: -11.250019073486328
    3. ' ' → logprob: -12.250019073486328
    4. '```' → logprob: -14.250019073486328
    5. '(n' → logprob: -15.625019073486328
    6. '2' → logprob: -15.750019073486328
    7. '(' → logprob: -15.937519073486328
    8. 'n' → logprob: -16.000019073486328
    9. '   ' → logprob: -16.000019073486328
    10. 'def' → logprob: -16.375019073486328

Token 276: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.033000361174345016
    2. '(n' → logprob: -3.6580004692077637
    3. '(i' → logprob: -5.033000469207764
    4. '(' → logprob: -9.407999992370605
    5. ',i' → logprob: -10.157999992370605
    6. ',n' → logprob: -10.532999992370605
    7. '   ' → logprob: -12.032999992370605
    8. ' ,' → logprob: -13.282999992370605
    9. 'def' → logprob: -13.657999992370605
    10. ' (' → logprob: -14.032999992370605

Token 277: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004080301150679588
    2. ' i' → logprob: -5.504080295562744
    3. '   ' → logprob: -13.629080772399902
    4. '(i' → logprob: -15.254080772399902
    5. '[i' → logprob: -15.379080772399902
    6. '	i' → logprob: -15.754080772399902
    7. 'n' → logprob: -17.379079818725586
    8. '{i' → logprob: -17.379079818725586
    9. ')i' → logprob: -17.754079818725586
    10. ' ' → logprob: -17.879079818725586

Token 278: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.38718247413635254
    2. ' -' → logprob: -1.1371824741363525
    3. ',' → logprob: -9.262182235717773
    4. '-half' → logprob: -9.887182235717773
    5. '>' → logprob: -10.137182235717773
    6. ' n' → logprob: -10.512182235717773
    7. ' ' → logprob: -10.512182235717773
    8. 'n' → logprob: -10.887182235717773
    9. '[' → logprob: -11.387182235717773
    10. ')' → logprob: -11.762182235717773

Token 279: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.002477796748280525
    2. ' half' → logprob: -6.002477645874023
    3. 'hal' → logprob: -13.752477645874023
    4. '_half' → logprob: -14.752477645874023
    5. 'halve' → logprob: -15.127477645874023
    6. 'halb' → logprob: -15.252477645874023
    7. '   ' → logprob: -16.752477645874023
    8. '
' → logprob: -17.002477645874023
    9. '-half' → logprob: -17.002477645874023
    10. ' ' → logprob: -17.127477645874023

Token 280: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022501726634800434
    2. ',j' → logprob: -6.2522501945495605
    3. ' ,' → logprob: -8.752249717712402
    4. '           ' → logprob: -9.752249717712402
    5. '       ' → logprob: -10.502249717712402
    6. '   ' → logprob: -10.627249717712402
    7. '               ' → logprob: -10.877249717712402
    8. 'j' → logprob: -11.377249717712402
    9. ' ' → logprob: -11.627249717712402
    10. '                   ' → logprob: -12.627249717712402

Token 281: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0019306590547785163
    2. ' j' → logprob: -6.2519307136535645
    3. '   ' → logprob: -13.126930236816406
    4. '	j' → logprob: -17.126930236816406
    5. ' ' → logprob: -17.251930236816406
    6. '[j' → logprob: -18.001930236816406
    7. '$j' → logprob: -18.501930236816406
    8. '       ' → logprob: -18.876930236816406
    9. '  ' → logprob: -19.001930236816406
    10. '    ' → logprob: -19.626930236816406

Token 282: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.014164448715746403
    2. '-' → logprob: -4.264164447784424
    3. ' ' → logprob: -14.764164924621582
    4. '-half' → logprob: -15.264164924621582
    5. ')' → logprob: -16.014163970947266
    6. '   ' → logprob: -16.514163970947266
    7. ' -
' → logprob: -17.514163970947266
    8. '	' → logprob: -17.889163970947266
    9. ' ' → logprob: -18.264163970947266
    10. '>' → logprob: -18.264163970947266

Token 283: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.0019312551012262702
    2. ' half' → logprob: -6.251931190490723
    3. 'hal' → logprob: -13.251931190490723
    4. '_half' → logprob: -14.751931190490723
    5. 'halve' → logprob: -15.876931190490723
    6. 'halb' → logprob: -15.876931190490723
    7. ' ' → logprob: -16.12693214416504
    8. '   ' → logprob: -16.37693214416504
    9. '-half' → logprob: -17.62693214416504
    10. '>' → logprob: -17.75193214416504

Token 284: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.703443770878948e-06
    2. ')
' → logprob: -12.375007629394531
    3. '       ' → logprob: -13.250007629394531
    4. ' )' → logprob: -14.875007629394531
    5. '))' → logprob: -15.000007629394531
    6. '   ' → logprob: -15.000007629394531
    7. ')}' → logprob: -15.250007629394531
    8. '')' → logprob: -15.625007629394531
    9. '()' → logprob: -16.87500762939453
    10. ')}}' → logprob: -16.87500762939453

Token 285: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39303621649742126
    2. '<|end|>' → logprob: -1.5180362462997437
    3. 'def' → logprob: -3.518036127090454
    4. 'print' → logprob: -3.768036127090454
    5. '    
' → logprob: -4.018036365509033
    6. 'for' → logprob: -4.393036365509033
    7. 'n' → logprob: -5.143036365509033
    8. '
' → logprob: -5.268036365509033
    9. '#' → logprob: -6.018036365509033
    10. '```' → logprob: -6.143036365509033

Token 286: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.562162458896637
    2. 'n' → logprob: -1.4371623992919922
    3. 'if' → logprob: -2.437162399291992
    4. 'for' (adapté à ' for') → logprob: -2.812162399291992
    5. ' for' → logprob: -4.312162399291992
    6. 'def' → logprob: -4.562162399291992
    7. 't' → logprob: -4.812162399291992
    8. ' if' → logprob: -5.812162399291992
    9. ' n' → logprob: -6.562162399291992
    10. 'i' → logprob: -6.562162399291992

Token 287: ' line' (ID: 2543)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.004530996549874544
    2. '_' → logprob: -6.129530906677246
    3. ' line' → logprob: -6.504530906677246
    4. ' n' → logprob: -7.629530906677246
    5. ' t' → logprob: -8.004530906677246
    6. ' case' → logprob: -11.254530906677246
    7. ' T' → logprob: -12.629530906677246
    8. '_T' → logprob: -13.254530906677246
    9. '_line' → logprob: -13.379530906677246
    10. ' tc' → logprob: -13.379530906677246

Token 288: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.030418379232287407
    2. 'in' → logprob: -3.5304183959960938
    3. ' =' → logprob: -7.905418395996094
    4. '(' → logprob: -9.655418395996094
    5. '=' → logprob: -9.905418395996094
    6. '   ' → logprob: -10.405418395996094
    7. ':' → logprob: -10.530418395996094
    8. ' ' → logprob: -10.905418395996094
    9. '[' → logprob: -11.155418395996094
    10. ',' → logprob: -11.405418395996094

Token 289: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.014163863845169544
    2. ' sys' → logprob: -4.264163970947266
    3. '=sys' → logprob: -15.889163970947266
    4. '(sys' → logprob: -16.264163970947266
    5. '	sys' → logprob: -16.514163970947266
    6. 'stdin' → logprob: -19.139163970947266
    7. 'iter' → logprob: -20.639163970947266
    8. 'input' → logprob: -21.764163970947266
    9. '```' → logprob: -22.389163970947266
    10. ' iter' → logprob: -22.514163970947266

Token 290: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0003855093673337251
    2. 'stdin' → logprob: -8.000385284423828
    3. '.readline' → logprob: -10.625385284423828
    4. '(stdin' → logprob: -11.125385284423828
    5. ' stdin' → logprob: -11.875385284423828
    6. '.' → logprob: -13.250385284423828
    7. '.argv' → logprob: -14.125385284423828
    8. '.stdout' → logprob: -14.250385284423828
    9. 'input' → logprob: -15.500385284423828
    10. '```' → logprob: -16.000385284423828

Token 291: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11594070494174957
    2. '.readline' → logprob: -2.240940809249878
    3. ':
' → logprob: -6.365940570831299
    4. '.readlines' → logprob: -7.115940570831299
    5. '.' → logprob: -7.865940570831299
    6. '   ' → logprob: -10.115941047668457
    7. ' in' → logprob: -10.365941047668457
    8. '():' → logprob: -10.740941047668457
    9. '<|end|>' → logprob: -10.865941047668457
    10. '>' → logprob: -11.115941047668457

Token 292: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01126556470990181
    2. ':' → logprob: -5.636265754699707
    3. '   ' → logprob: -6.511265754699707
    4. '```' → logprob: -6.636265754699707
    5. '<|end|>' → logprob: -7.386265754699707
    6. '.rstrip' → logprob: -7.886265754699707
    7. '[' → logprob: -7.886265754699707
    8. 'n' → logprob: -7.886265754699707
    9. '        
' → logprob: -7.886265754699707
    10. '(n' → logprob: -8.011265754699707

Token 293: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.8059706687927246
    2. 'n' (adapté à ' n') → logprob: -0.9309706687927246
    3. ' line' → logprob: -2.1809706687927246
    4. ' if' → logprob: -3.8059706687927246
    5. 'line' → logprob: -4.430970668792725
    6. 'if' → logprob: -4.805970668792725
    7. '   ' → logprob: -6.055970668792725
    8. ' parts' → logprob: -6.805970668792725
    9. 'N' → logprob: -8.805971145629883
    10. 'parts' → logprob: -9.555971145629883

Token 294: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6388823986053467
    2. '=' → logprob: -1.1388823986053467
    3. ' =' → logprob: -1.8888823986053467
    4. ' ,' → logprob: -7.513882637023926
    5. ',n' → logprob: -10.263882637023926
    6. '=line' → logprob: -10.513882637023926
    7. ')' → logprob: -10.888882637023926
    8. '=int' → logprob: -11.013882637023926
    9. ' ' → logprob: -12.013882637023926
    10. 's' → logprob: -12.263882637023926

Token 295: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2838369309902191
    2. 'i' → logprob: -1.4088369607925415
    3. ' j' → logprob: -6.658836841583252
    4. ' =' → logprob: -7.908836841583252
    5. 'j' → logprob: -8.03383731842041
    6. '=' → logprob: -8.65883731842041
    7. ' m' → logprob: -8.90883731842041
    8. 'm' → logprob: -9.40883731842041
    9. ' s' → logprob: -9.53383731842041
    10. ' k' → logprob: -9.78383731842041

Token 296: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2869650721549988
    2. ',' → logprob: -1.9119651317596436
    3. ' =' → logprob: -2.2869651317596436
    4. ' ,' → logprob: -9.661965370178223
    5. '<|end|>' → logprob: -11.411965370178223
    6. ')' → logprob: -11.661965370178223
    7. ' ' → logprob: -12.911965370178223
    8. '_,' → logprob: -13.661965370178223
    9. ')=' → logprob: -13.661965370178223
    10. '<|end|>' → logprob: -14.349465370178223

Token 297: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.003601617179811001
    2. ' j' → logprob: -5.628601551055908
    3. '=' → logprob: -14.503602027893066
    4. 's' → logprob: -15.253602027893066
    5. '=j' → logprob: -15.253602027893066
    6. '*j' → logprob: -15.503602027893066
    7. ',j' → logprob: -16.12860107421875
    8. ' =' → logprob: -16.12860107421875
    9. '	j' → logprob: -16.87860107421875
    10. '   ' → logprob: -17.12860107421875

Token 298: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519296407699585
    2. ' =' → logprob: -1.5019296407699585
    3. ')' → logprob: -15.62692928314209
    4. '=line' → logprob: -15.62692928314209
    5. '＝' → logprob: -16.626930236816406
    6. ',' → logprob: -16.751930236816406
    7. ')=' → logprob: -17.501930236816406
    8. ' ' → logprob: -17.501930236816406
    9. '<|end|>' → logprob: -18.001930236816406
    10. '=int' → logprob: -18.001930236816406

Token 299: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.02982177585363388
    2. 'map' → logprob: -3.5298218727111816
    3. ' line' → logprob: -9.654821395874023
    4. 'line' → logprob: -11.904821395874023
    5. ' list' → logprob: -15.779821395874023
    6. '(map' → logprob: -15.904821395874023
    7. '	map' → logprob: -16.779821395874023
    8. '   ' → logprob: -17.279821395874023
    9. 'list' → logprob: -17.279821395874023
    10. '[' → logprob: -17.904821395874023

Token 300: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0004402055055834353
    2. '(' → logprob: -8.37544059753418
    3. '(str' → logprob: -8.87544059753418
    4. 'int' → logprob: -10.00044059753418
    5. '(lambda' → logprob: -10.75044059753418
    6. '[int' → logprob: -13.75044059753418
    7. '(input' → logprob: -14.75044059753418
    8. '<int' → logprob: -15.00044059753418
    9. 'str' → logprob: -15.12544059753418
    10. '=int' → logprob: -15.50044059753418

Token 301: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.004188567865639925
    2. ')' → logprob: -5.629188537597656
    3. '[line' → logprob: -8.254188537597656
    4. ',line' → logprob: -8.754188537597656
    5. 'line' → logprob: -9.754188537597656
    6. '=line' → logprob: -10.254188537597656
    7. '(' → logprob: -10.629188537597656
    8. '#line' → logprob: -10.629188537597656
    9. '(sys' → logprob: -11.504188537597656
    10. ',' → logprob: -12.004188537597656

Token 302: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0015034328680485487
    2. ' line' → logprob: -6.5015034675598145
    3. '(line' → logprob: -14.626502990722656
    4. '   ' → logprob: -15.126502990722656
    5. '	line' → logprob: -15.626502990722656
    6. '=line' → logprob: -16.001502990722656
    7. '[line' → logprob: -16.126502990722656
    8. '#line' → logprob: -17.626502990722656
    9. '    ' → logprob: -19.876502990722656
    10. ',line' → logprob: -20.126502990722656

Token 303: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0406651496887207
    2. '.strip' → logprob: -3.2906651496887207
    3. '.split' → logprob: -6.040665149688721
    4. '.readline' → logprob: -9.040664672851562
    5. '.rstrip' → logprob: -9.915664672851562
    6. '(strip' → logprob: -11.040664672851562
    7. '.' → logprob: -11.165664672851562
    8. ' .' → logprob: -11.540664672851562
    9. 'strip' → logprob: -11.790664672851562
    10. '   ' → logprob: -11.915664672851562

Token 304: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.07515085488557816
    2. ')' → logprob: -2.700150966644287
    3. '()' → logprob: -5.575150966644287
    4. '('' → logprob: -7.200150966644287
    5. '(' → logprob: -7.450150966644287
    6. '())
' → logprob: -10.325150489807129
    7. '(','' → logprob: -10.575150489807129
    8. '')' → logprob: -11.825150489807129
    9. '(),' → logprob: -12.575150489807129
    10. '(',' → logprob: -12.825150489807129

Token 305: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001721592154353857
    2. ' if' → logprob: -7.126721382141113
    3. 'if' → logprob: -8.001721382141113
    4. '<|end|>' → logprob: -8.126721382141113
    5. '        
' → logprob: -9.126721382141113
    6. 'print' → logprob: -9.626721382141113
    7. '```' → logprob: -10.501721382141113
    8. '   ' → logprob: -10.626721382141113
    9. 'result' → logprob: -11.376721382141113
    10. ',' → logprob: -11.501721382141113

Token 306: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02911478839814663
    2. '       ' → logprob: -4.654114723205566
    3. ' print' → logprob: -4.654114723205566
    4. 'if' (adapté à ' if') → logprob: -5.154114723205566
    5. 'result' → logprob: -5.779114723205566
    6. ' if' → logprob: -7.529114723205566
    7. 'break' → logprob: -9.154114723205566
    8. ' result' → logprob: -9.654114723205566
    9. 'res' → logprob: -10.154114723205566
    10. '   ' → logprob: -11.529114723205566

Token 307: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.061975862830877304
    2. 'n' → logprob: -2.8119759559631348
    3. '(n' → logprob: -12.061975479125977
    4. ' not' → logprob: -13.686975479125977
    5. '(' → logprob: -14.436975479125977
    6. ' (' → logprob: -14.561975479125977
    7. '	n' → logprob: -15.561975479125977
    8. 'not' → logprob: -17.811975479125977
    9. '[n' → logprob: -17.936975479125977
    10. ' ' → logprob: -17.936975479125977

Token 308: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.016052784398198128
    2. '==' → logprob: -4.141052722930908
    3. ')==' → logprob: -12.391053199768066
    4. '<|end|>' → logprob: -12.391053199768066
    5. '=' → logprob: -12.516053199768066
    6. ' =' → logprob: -13.891053199768066
    7. ')' → logprob: -14.016053199768066
    8. ' ===' → logprob: -14.016053199768066
    9. '[' → logprob: -14.141053199768066
    10. ']==' → logprob: -14.266053199768066

Token 309: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004306692280806601
    2. ' ' → logprob: -7.750430583953857
    3. '   ' → logprob: -19.375431060791016
    4. '-' → logprob: -20.375431060791016
    5. '۰' → logprob: -21.250431060791016
    6. '  ' → logprob: -21.375431060791016
    7. ' -' → logprob: -21.500431060791016
    8. '=' → logprob: -22.125431060791016
    9. '０' → logprob: -22.500431060791016
    10. '    ' → logprob: -23.125431060791016

Token 310: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.849109119386412e-06
    2. ' ' → logprob: -11.625009536743164
    3. '-' → logprob: -14.000009536743164
    4. ' -' → logprob: -18.875009536743164
    5. '=' → logprob: -19.625009536743164
    6. '۰' → logprob: -20.125009536743164
    7. 'end' → logprob: -20.875009536743164
    8. '   ' → logprob: -20.875009536743164
    9. '０' → logprob: -21.000009536743164
    10. 'o' → logprob: -21.187509536743164

Token 311: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1015225350856781
    2. ':
' → logprob: -2.601522445678711
    3. '       ' → logprob: -3.851522445678711
    4. '           ' → logprob: -7.476522445678711
    5. '   ' → logprob: -7.851522445678711
    6. ' and' → logprob: -9.351522445678711
    7. ':return' → logprob: -10.476522445678711
    8. '():
' → logprob: -10.976522445678711
    9. ',' → logprob: -11.351522445678711
    10. '):
' → logprob: -11.976522445678711

Token 312: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07889066636562347
    2. ' i' → logprob: -2.578890562057495
    3. '   ' → logprob: -14.203890800476074
    4. '	i' → logprob: -15.328890800476074
    5. ' ' → logprob: -16.953889846801758
    6. '  ' → logprob: -17.328889846801758
    7. '_i' → logprob: -20.078889846801758
    8. '    ' → logprob: -20.703889846801758
    9. 'I' → logprob: -20.828889846801758
    10. ' ' → logprob: -20.828889846801758

Token 313: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2014213353395462
    2. '==' → logprob: -1.7014213800430298
    3. ' ' → logprob: -13.076421737670898
    4. '<|end|>' → logprob: -13.451421737670898
    5. ',' → logprob: -13.576421737670898
    6. '=' → logprob: -13.951421737670898
    7. ' ' → logprob: -14.576421737670898
    8. '===' → logprob: -14.826421737670898
    9. '==
' → logprob: -15.201421737670898
    10. '```' → logprob: -15.326421737670898

Token 314: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '۰' → logprob: -21.750019073486328
    4. '  ' → logprob: -23.000019073486328
    5. '   ' → logprob: -23.250019073486328
    6. '<|end|>' → logprob: -23.875019073486328
    7. 'and' → logprob: -24.250019073486328
    8. '
' → logprob: -24.500019073486328
    9. '=' → logprob: -24.500019073486328
    10. ' ' → logprob: -24.750019073486328

Token 315: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '۰' → logprob: -21.375001907348633
    4. 'and' → logprob: -22.437501907348633
    5. '```' → logprob: -22.500001907348633
    6. '=' → logprob: -22.562501907348633
    7. '
' → logprob: -22.687501907348633
    8. '  ' → logprob: -22.687501907348633
    9. '   ' → logprob: -22.812501907348633
    10. '<|end|>' → logprob: -22.875001907348633

Token 316: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.018157435581088066
    2. 'and' → logprob: -4.018157482147217
    3. '0' → logprob: -12.518157005310059
    4. ' ' → logprob: -13.268157005310059
    5. ',' → logprob: -13.643157005310059
    6. '<|end|>' → logprob: -15.768157005310059
    7. '	and' → logprob: -15.893157005310059
    8. ' и' → logprob: -16.268157958984375
    9. '&&' → logprob: -16.518157958984375
    10. '```' → logprob: -16.643157958984375

Token 317: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.011047935113310814
    2. ' j' → logprob: -4.511047840118408
    3. '	j' → logprob: -16.38604736328125
    4. '0' → logprob: -17.63604736328125
    5. '   ' → logprob: -18.63604736328125
    6. ' ' → logprob: -19.13604736328125
    7. '  ' → logprob: -20.63604736328125
    8. '$j' → logprob: -21.88604736328125
    9. '_j' → logprob: -22.01104736328125
    10. ' ' → logprob: -22.76104736328125

Token 318: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5759801864624023
    2. '==' → logprob: -0.8259801864624023
    3. '0' → logprob: -10.700980186462402
    4. ')==' → logprob: -12.075980186462402
    5. ' ' → logprob: -12.325980186462402
    6. '==
' → logprob: -13.075980186462402
    7. '=' → logprob: -13.200980186462402
    8. ']==' → logprob: -13.825980186462402
    9. '()==' → logprob: -13.950980186462402
    10. ' ' → logprob: -14.450980186462402

Token 319: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '۰' → logprob: -19.37500762939453
    4. '   ' → logprob: -20.37500762939453
    5. '<|end|>' → logprob: -20.37500762939453
    6. '  ' → logprob: -21.12500762939453
    7. '০' → logprob: -22.06250762939453
    8. '०' → logprob: -22.31250762939453
    9. '<|end|>' → logprob: -22.31250762939453
    10. '０' → logprob: -22.68750762939453

Token 320: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '۰' → logprob: -18.500001907348633
    4. '<|end|>' → logprob: -20.375001907348633
    5. '০' → logprob: -20.875001907348633
    6. '०' → logprob: -21.187501907348633
    7. '０' → logprob: -21.562501907348633
    8. '```' → logprob: -21.625001907348633
    9. '   ' → logprob: -21.750001907348633
    10. '  ' → logprob: -22.000001907348633

Token 321: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.429871529340744
    2. ':
' → logprob: -1.0548715591430664
    3. '           ' → logprob: -7.179871559143066
    4. '       ' → logprob: -8.054871559143066
    5. ':return' → logprob: -9.929871559143066
    6. '():
' → logprob: -10.929871559143066
    7. '   ' → logprob: -11.679871559143066
    8. '):
' → logprob: -12.179871559143066
    9. ':
' → logprob: -13.054871559143066
    10. '<|end|>' → logprob: -13.179871559143066

Token 322: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.269565634895116e-05
    2. '       ' → logprob: -9.375092506408691
    3. ':' → logprob: -13.750092506408691
    4. ':
' → logprob: -13.750092506408691
    5. '<|end|>' → logprob: -14.125092506408691
    6. '
' → logprob: -14.250092506408691
    7. '	       ' → logprob: -14.500092506408691
    8. '   ' → logprob: -14.500092506408691
    9. '               ' → logprob: -14.625092506408691
    10. '		' → logprob: -14.750092506408691

Token 323: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5934208631515503
    2. 'break' (adapté à ' break') → logprob: -1.0934208631515503
    3. '           ' → logprob: -2.34342098236084
    4. ' break' → logprob: -4.34342098236084
    5. 'return' → logprob: -5.71842098236084
    6. '	break' → logprob: -9.34342098236084
    7. '
' → logprob: -10.09342098236084
    8. '               ' → logprob: -10.21842098236084
    9. ' return' → logprob: -10.71842098236084
    10. '   ' → logprob: -10.71842098236084

Token 324: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010604063980281353
    2. '
' → logprob: -5.135603904724121
    3. '   ' → logprob: -6.260603904724121
    4. '        
' → logprob: -6.885603904724121
    5. 'print' → logprob: -7.010603904724121
    6. '<|end|>' → logprob: -7.760603904724121
    7. '    
' → logprob: -8.385603904724121
    8. '  
' → logprob: -9.510603904724121
    9. ' print' → logprob: -10.135603904724121
    10. '<|end|>' → logprob: -11.135603904724121

Token 325: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001096999505534768
    2. 'print' → logprob: -8.001096725463867
    3. '<|end|>' → logprob: -8.126096725463867
    4. '   ' → logprob: -8.626096725463867
    5. '        
' → logprob: -8.876096725463867
    6. '```' → logprob: -9.251096725463867
    7. ' print' → logprob: -10.376096725463867
    8. '    
' → logprob: -12.626096725463867
    9. '
' → logprob: -12.751096725463867
    10. '<|end|>' → logprob: -13.126096725463867

Token 326: ' print' (ID: 2123)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.46551960706710815
    2. 'print' (adapté à ' print') → logprob: -1.090519666671753
    3. '       ' → logprob: -3.465519666671753
    4. 'res' → logprob: -6.215519428253174
    5. ' result' → logprob: -6.840519428253174
    6. 'answer' → logprob: -7.215519428253174
    7. 'fold' → logprob: -7.965519428253174
    8. ' print' → logprob: -8.840519905090332
    9. 'output' → logprob: -8.840519905090332
    10. 'results' → logprob: -9.340519905090332

Token 327: '(find' (ID: 60187)
  Prédit: '(find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(find' → logprob: -6.0868278524139896e-05
    2. '(' → logprob: -9.75006103515625
    3. 'find' → logprob: -13.00006103515625
    4. ' find' → logprob: -15.75006103515625
    5. '('' → logprob: -16.12506103515625
    6. '()' → logprob: -18.12506103515625
    7. '(f' → logprob: -18.62506103515625
    8. '=find' → logprob: -19.12506103515625
    9. ')find' → logprob: -19.50006103515625
    10. '("' → logprob: -20.12506103515625

Token 328: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -3.128163257315464e-07
    2. ')_' → logprob: -16.375
    3. ')' → logprob: -16.75
    4. '_' → logprob: -18.5
    5. '_find' → logprob: -18.875
    6. '_fold' → logprob: -19.0
    7. 'f' → logprob: -19.25
    8. ' _' → logprob: -19.5
    9. '_s' → logprob: -19.875
    10. '_tokens' → logprob: -20.75

Token 329: 'olds' (ID: 37608)
  Prédit: 'olds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olds' → logprob: -0.23796842992305756
    2. 'fold' → logprob: -1.6129684448242188
    3. 'old' → logprob: -4.862968444824219
    4. '_f' → logprob: -5.862968444824219
    5. 'f' → logprob: -6.612968444824219
    6. 'ould' → logprob: -8.737968444824219
    7. ' folds' → logprob: -8.737968444824219
    8. 'ol' → logprob: -9.237968444824219
    9. '_' → logprob: -10.112968444824219
    10. '_fold' → logprob: -10.612968444824219

Token 330: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00037848003557883203
    2. '(' → logprob: -8.000378608703613
    3. ')' → logprob: -10.750378608703613
    4. ')n' → logprob: -11.375378608703613
    5. ')(' → logprob: -12.500378608703613
    6. 'n' → logprob: -13.000378608703613
    7. '(
' → logprob: -13.125378608703613
    8. ',n' → logprob: -14.375378608703613
    9. ' (' → logprob: -15.125378608703613
    10. '<|end|>' → logprob: -15.250378608703613

Token 331: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008724601939320564
    2. ',i' → logprob: -5.008724689483643
    3. ' ,' → logprob: -7.008724689483643
    4. ',n' → logprob: -7.258724689483643
    5. '(i' → logprob: -8.008724212646484
    6. '(n' → logprob: -10.383724212646484
    7. ',j' → logprob: -10.508724212646484
    8. '(' → logprob: -12.258724212646484
    9. ',int' → logprob: -14.383724212646484
    10. ')' → logprob: -14.508724212646484

Token 332: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011047935113310814
    2. ' i' → logprob: -4.511047840118408
    3. '	i' → logprob: -16.88604736328125
    4. '   ' → logprob: -17.38604736328125
    5. 'I' → logprob: -19.51104736328125
    6. ')i' → logprob: -19.63604736328125
    7. ' ' → logprob: -19.88604736328125
    8. '    ' → logprob: -20.13604736328125
    9. '_i' → logprob: -20.13604736328125
    10. 'int' → logprob: -20.51104736328125

Token 333: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024550052359700203
    2. ',j' → logprob: -3.774549961090088
    3. ' ,' → logprob: -6.649549961090088
    4. 'j' → logprob: -12.899550437927246
    5. '   ' → logprob: -13.899550437927246
    6. ',
' → logprob: -13.899550437927246
    7. '       ' → logprob: -14.149550437927246
    8. ' j' → logprob: -14.149550437927246
    9. '[j' → logprob: -14.274550437927246
    10. ' ' → logprob: -14.649550437927246

Token 334: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0001398929744027555
    2. ' j' → logprob: -8.875140190124512
    3. '	j' → logprob: -17.625139236450195
    4. '   ' → logprob: -18.250139236450195
    5. '$j' → logprob: -18.250139236450195
    6. '       ' → logprob: -19.000139236450195
    7. '[j' → logprob: -19.625139236450195
    8. ')' → logprob: -19.750139236450195
    9. '    ' → logprob: -20.000139236450195
    10. ',j' → logprob: -20.250139236450195

Token 335: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.002478627720847726
    2. ')' → logprob: -6.00247859954834
    3. '))
' → logprob: -13.00247859954834
    4. ')))' → logprob: -14.75247859954834
    5. ' ))' → logprob: -16.002479553222656
    6. '()))' → logprob: -16.502479553222656
    7. '),' → logprob: -17.752479553222656
    8. ')
' → logprob: -18.002479553222656
    9. '   ' → logprob: -18.002479553222656
    10. '"))' → logprob: -19.252479553222656


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 333
Tokens correctement prédits (1ère position, stricte): 136
Tokens correctement prédits (1ère position, avec adaptation): 140
Tokens correctement prédits (top 10): 274
Précision stricte (1ère position): 40.84%
Précision adaptée (1ère position): 42.04%
Précision (top 10): 82.28%
================================================================================
