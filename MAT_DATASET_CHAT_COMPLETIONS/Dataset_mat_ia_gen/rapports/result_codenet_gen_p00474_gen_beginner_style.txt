================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:31:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N, L = map(int, input().split())
a = [int(input()) for _ in range(N)]

time = 0
while True:
    # つららが伸びるかどうか判定
    grow = [False]*N
    for i in range(N):
        if a[i] == 0:
            continue
        if i == 0:
            if a[i] > a[i+1]:
                grow[i] = True
        elif i == N-1:
            if a[i] > a[i-1]:
                grow[i] = True
        else:
            if a[i] > a[i-1] and a[i] > a[i+1]:
                grow[i] = True

    # 伸びるつららがなければ終わり
    if not any(grow):
        break

    time += 1

    # つららを伸ばす
    for i in range(N):
        if grow[i]:
            a[i] += 1

    # つららが折れる判定
    for i in range(N):
        if a[i] >= L:
            a[i] = 0

# すべて折れるまでの時間を出力
print(time)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' L' (ID: 451)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.015476388856768608
    2. ' =' → logprob: -4.515476226806641
    3. ',' → logprob: -5.515476226806641
    4. '*' → logprob: -9.64047622680664
    5. '.' → logprob: -9.76547622680664
    6. ')' → logprob: -10.01547622680664
    7. '```' → logprob: -10.01547622680664
    8. '+' → logprob: -10.14047622680664
    9. '[' → logprob: -10.51547622680664
    10. ':' → logprob: -10.76547622680664

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6363710761070251
    2. ' map' → logprob: -0.8863710761070251
    3. 'map' → logprob: -3.38637113571167
    4. '10' → logprob: -4.63637113571167
    5. ' input' → logprob: -5.13637113571167
    6. '0' → logprob: -6.13637113571167
    7. 'input' → logprob: -6.63637113571167
    8. 'range' → logprob: -6.88637113571167
    9. '50' → logprob: -7.51137113571167
    10. '20' → logprob: -7.51137113571167

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02413749136030674
    2. '<|end|>' → logprob: -4.149137496948242
    3. '(lambda' → logprob: -5.774137496948242
    4. '```' → logprob: -6.274137496948242
    5. '(int' → logprob: -6.649137496948242
    6. ')' → logprob: -7.774137496948242
    7. '<|end|>' → logprob: -7.899137496948242
    8. '(str' → logprob: -9.149137496948242
    9. '[' → logprob: -9.524137496948242
    10. '[int' → logprob: -9.774137496948242

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.06657025218009949
    2. ')' → logprob: -2.941570281982422
    3. '(' → logprob: -4.816570281982422
    4. 'input' → logprob: -6.191570281982422
    5. '```' → logprob: -7.566570281982422
    6. ')(' → logprob: -8.566570281982422
    7. '(int' → logprob: -8.691570281982422
    8. '=input' → logprob: -9.691570281982422
    9. '(str' → logprob: -9.816570281982422
    10. ' input' → logprob: -9.816570281982422

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03809163346886635
    2. ' input' → logprob: -3.2880916595458984
    3. '(input' → logprob: -10.038091659545898
    4. ')' → logprob: -12.538091659545898
    5. ',input' → logprob: -13.038091659545898
    6. '```' → logprob: -15.538091659545898
    7. '=input' → logprob: -15.663091659545898
    8. '<input' → logprob: -15.788091659545898
    9. 'str' → logprob: -16.4130916595459
    10. '[input' → logprob: -16.7880916595459

Token 8: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -1.111263394355774
    2. '('' → logprob: -1.736263394355774
    3. '()' → logprob: -1.861263394355774
    4. '(' → logprob: -1.861263394355774
    5. '(""))' → logprob: -3.1112632751464844
    6. '`()' → logprob: -3.1112632751464844
    7. ')' → logprob: -3.6112632751464844
    8. '()))' → logprob: -4.236263275146484
    9. '("' → logprob: -4.361263275146484
    10. '("("' → logprob: -4.861263275146484

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.006832825485616922
    2. 'strip' → logprob: -5.006832599639893
    3. 'rstrip' → logprob: -9.50683307647705
    4. ')' → logprob: -10.63183307647705
    5. 'read' → logprob: -11.25683307647705
    6. ' split' → logprob: -12.13183307647705
    7. '(split' → logprob: -15.38183307647705
    8. 'startswith' → logprob: -16.131832122802734
    9. 'replace' → logprob: -16.256832122802734
    10. 'spl' → logprob: -16.631832122802734

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06008055433630943
    2. '())' → logprob: -2.9350805282592773
    3. '))' → logprob: -5.810080528259277
    4. '()' → logprob: -6.310080528259277
    5. '`)' → logprob: -8.810080528259277
    6. '(' → logprob: -8.935080528259277
    7. '()))' → logprob: -10.185080528259277
    8. ')`' → logprob: -11.560080528259277
    9. '>)' → logprob: -12.185080528259277
    10. '('' → logprob: -12.435080528259277

Token 11: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5177188515663147
    2. 'for' → logprob: -2.01771879196167
    3. '#' → logprob: -2.89271879196167
    4. 'x' → logprob: -3.26771879196167
    5. '[' → logprob: -3.39271879196167
    6. '```' → logprob: -3.51771879196167
    7. '`' → logprob: -3.64271879196167
    8. ',' → logprob: -4.64271879196167
    9. 'data' → logprob: -4.89271879196167
    10. '.' → logprob: -4.89271879196167

Token 12: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009039366617798805
    2. '[a' → logprob: -5.634039402008057
    3. '[i' → logprob: -5.884039402008057
    4. '\[' → logprob: -7.884039402008057
    5. '[N' → logprob: -8.009038925170898
    6. '[]' → logprob: -8.509038925170898
    7. '[:]' → logprob: -8.509038925170898
    8. '[n' → logprob: -8.509038925170898
    9. 'a' → logprob: -8.634038925170898
    10. '[p' → logprob: -8.759038925170898

Token 13: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.8887592554092407
    2. 'list' → logprob: -0.8887592554092407
    3. ' [' → logprob: -2.763759136199951
    4. '[]' → logprob: -3.013759136199951
    5. ' []' → logprob: -3.138759136199951
    6. '[' → logprob: -4.013759136199951
    7. '[list' → logprob: -5.888759136199951
    8. '[a' → logprob: -7.763759136199951
    9. '[int' → logprob: -8.13875961303711
    10. 'a' → logprob: -8.38875961303711

Token 14: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.06365031003952026
    2. '0' → logprob: -2.813650369644165
    3. ' int' → logprob: -7.188650131225586
    4. ']int' → logprob: -7.938650131225586
    5. ']' → logprob: -8.188650131225586
    6. 'map' → logprob: -8.688650131225586
    7. 'list' → logprob: -10.188650131225586
    8. '1' → logprob: -10.813650131225586
    9. 'i' → logprob: -11.188650131225586
    10. '(int' → logprob: -11.313650131225586

Token 15: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09683769941329956
    2. '(x' → logprob: -2.7218377590179443
    3. '(input' → logprob: -3.7218377590179443
    4. '(a' → logprob: -6.846837520599365
    5. '(i' → logprob: -7.221837520599365
    6. '()]' → logprob: -8.471837997436523
    7. '()' → logprob: -9.221837997436523
    8. '(
' → logprob: -9.346837997436523
    9. '(

' → logprob: -10.221837997436523
    10. '(token' → logprob: -10.971837997436523

Token 16: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00010628487507347018
    2. '()' → logprob: -9.750105857849121
    3. '()]' → logprob: -10.125105857849121
    4. '()))' → logprob: -12.750105857849121
    5. ' ())' → logprob: -13.250105857849121
    6. ')' → logprob: -13.750105857849121
    7. '()),' → logprob: -14.250105857849121
    8. '(' → logprob: -14.750105857849121
    9. '())
' → logprob: -15.000105857849121
    10. '().' → logprob: -15.625105857849121

Token 17: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.49369439482688904
    2. '())' → logprob: -1.4936944246292114
    3. '()' → logprob: -1.8686944246292114
    4. '()]' → logprob: -4.993694305419922
    5. ')]' → logprob: -5.618694305419922
    6. ']' → logprob: -9.118694305419922
    7. '(' → logprob: -9.618694305419922
    8. 'for' → logprob: -9.868694305419922
    9. ' )' → logprob: -10.368694305419922
    10. ')])' → logprob: -11.368694305419922

Token 18: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.004104877356439829
    2. '_' → logprob: -6.129105091094971
    3. ' ' → logprob: -6.879105091094971
    4. '(' → logprob: -8.379104614257812
    5. '(range' → logprob: -8.379104614257812
    6. ' _' → logprob: -8.504104614257812
    7. ' i' → logprob: -9.004104614257812
    8. '_range' → logprob: -10.004104614257812
    9. ' in' → logprob: -10.629104614257812
    10. 'range' → logprob: -10.879104614257812

Token 19: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.17835168540477753
    2. ' in' → logprob: -1.928351640701294
    3. 'range' → logprob: -4.178351879119873
    4. '(range' → logprob: -6.428351879119873
    5. 'in' → logprob: -7.928351879119873
    6. '(' → logprob: -8.178351402282715
    7. '_range' → logprob: -9.553351402282715
    8. ' ' → logprob: -9.803351402282715
    9. '	range' → logprob: -9.803351402282715
    10. '_' → logprob: -10.053351402282715

Token 20: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005530327325686812
    2. ' range' → logprob: -7.500553131103516
    3. '(range' → logprob: -16.750553131103516
    4. '	range' → logprob: -17.750553131103516
    5. 'a' → logprob: -17.875553131103516
    6. ' ' → logprob: -19.375553131103516
    7. 'rang' → logprob: -19.500553131103516
    8. '[' → logprob: -19.500553131103516
    9. 'ran' → logprob: -19.750553131103516
    10. '```' → logprob: -20.000553131103516

Token 21: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.18565568327903748
    2. '(' → logprob: -1.9356557130813599
    3. '(L' → logprob: -3.6856555938720703
    4. '(n' → logprob: -10.93565559387207
    5. '(
' → logprob: -12.93565559387207
    6. ' (' → logprob: -13.18565559387207
    7. '(len' → logprob: -13.43565559387207
    8. '(M' → logprob: -13.43565559387207
    9. 'L' → logprob: -13.81065559387207
    10. 'N' → logprob: -13.93565559387207

Token 22: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0006794307846575975
    2. ']' → logprob: -7.8756794929504395
    3. ')' → logprob: -8.125679016113281
    4. ')])' → logprob: -13.875679016113281
    5. '')]' → logprob: -14.000679016113281
    6. '])]' → logprob: -14.375679016113281
    7. ' )' → logprob: -14.875679016113281
    8. '))' → logprob: -15.500679016113281
    9. ')],' → logprob: -15.625679016113281
    10. '])' → logprob: -16.62567901611328

Token 23: 'time' (ID: 4580)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7472538352012634
    2. 'c' → logprob: -1.8722538948059082
    3. 's' → logprob: -2.122253894805908
    4. 'b' → logprob: -2.372253894805908
    5. 'for' → logprob: -3.372253894805908
    6. 'm' → logprob: -3.872253894805908
    7. 'k' → logprob: -4.122253894805908
    8. 'd' → logprob: -4.122253894805908
    9. 'max' → logprob: -4.247253894805908
    10. 'result' → logprob: -4.622253894805908

Token 24: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07678286731243134
    2. 's' → logprob: -3.4517829418182373
    3. '=' → logprob: -3.8267829418182373
    4. ' =' → logprob: -4.201782703399658
    5. '[' → logprob: -6.201782703399658
    6. '(' → logprob: -7.076782703399658
    7. '_to' → logprob: -7.201782703399658
    8. '_taken' → logprob: -7.701782703399658
    9. '_needed' → logprob: -8.451783180236816
    10. '_required' → logprob: -9.076783180236816

Token 25: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.036925844848155975
    2. ' ' → logprob: -3.661925792694092
    3. 'a' → logprob: -5.536925792694092
    4. ' max' → logprob: -6.161925792694092
    5. ' a' → logprob: -6.536925792694092
    6. 'max' → logprob: -6.786925792694092
    7. ' L' → logprob: -6.911925792694092
    8. 'L' → logprob: -7.536925792694092
    9. '100' → logprob: -9.78692626953125
    10. ' [' → logprob: -9.91192626953125

Token 26: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.313443124294281
    2. 'max' → logprob: -1.5634431838989258
    3. '10' → logprob: -3.313443183898926
    4. 'a' → logprob: -4.938443183898926
    5. '1' → logprob: -5.188443183898926
    6. 'sum' → logprob: -5.938443183898926
    7. 'L' → logprob: -6.188443183898926
    8. '[a' → logprob: -6.313443183898926
    9. '[' → logprob: -6.688443183898926
    10. '100' → logprob: -7.313443183898926

Token 27: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 28: 'while' (ID: 7032)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014130474999547005
    2. 'while' → logprob: -5.264130592346191
    3. 'i' → logprob: -5.514130592346191
    4. 'a' → logprob: -6.639130592346191
    5. 't' → logprob: -7.139130592346191
    6. 'f' → logprob: -7.639130592346191
    7. ' for' → logprob: -7.764130592346191
    8. 'l' → logprob: -7.889130592346191
    9. 'w' → logprob: -8.139130592346191
    10. 'max' → logprob: -8.264130592346191

Token 29: ' True' (ID: 6432)
  Prédit: ' time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.17840860784053802
    2. ' a' → logprob: -2.553408622741699
    3. 'time' → logprob: -2.928408622741699
    4. ' True' → logprob: -3.928408622741699
    5. 'a' → logprob: -4.928408622741699
    6. ' L' → logprob: -5.678408622741699
    7. 'True' → logprob: -7.303408622741699
    8. ' t' → logprob: -8.0534086227417
    9. 'L' → logprob: -8.3034086227417
    10. ' not' → logprob: -8.9284086227417

Token 30: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.24179228907451e-05
    2. ' :' → logprob: -9.875061988830566
    3. '   ' → logprob: -11.875061988830566
    4. ',' → logprob: -14.000061988830566
    5. ':
' → logprob: -14.125061988830566
    6. '():' → logprob: -14.750061988830566
    7. '):' → logprob: -15.125061988830566
    8. ':**' → logprob: -15.250061988830566
    9. '```' → logprob: -16.000062942504883
    10. '  ' → logprob: -16.000062942504883

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032260194420814514
    2. '    
' → logprob: -4.907260417938232
    3. '    ' → logprob: -5.282260417938232
    4. ' if' → logprob: -5.532260417938232
    5. '<|end|>' → logprob: -5.657260417938232
    6. ' for' → logprob: -6.157260417938232
    7. 'a' → logprob: -6.532260417938232
    8. ' ' → logprob: -6.657260417938232
    9. ' time' → logprob: -7.282260417938232
    10. ' a' → logprob: -7.282260417938232

Token 32: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.770715594291687
    2. ' a' → logprob: -0.770715594291687
    3. ' if' → logprob: -4.020715713500977
    4. ' L' → logprob: -4.520715713500977
    5. ' for' → logprob: -4.645715713500977
    6. ' time' → logprob: -5.145715713500977
    7. 'if' → logprob: -5.395715713500977
    8. ' l' → logprob: -5.895715713500977
    9. ' max' → logprob: -5.895715713500977
    10. '    ' → logprob: -6.020715713500977

Token 33: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5393384695053101
    2. 'time' → logprob: -1.41433846950531
    3. 'max' → logprob: -3.2893385887145996
    4. 'if' → logprob: -3.2893385887145996
    5. 'all' → logprob: -3.4143385887145996
    6. 'True' → logprob: -4.2893385887146
    7. 'L' → logprob: -4.4143385887146
    8. 'any' → logprob: -4.6643385887146
    9. 'len' → logprob: -5.1643385887146
    10. 'min' → logprob: -5.4143385887146

Token 34: 'つ' (ID: 18290)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.6124793291091919
    2. 'max' → logprob: -1.987479329109192
    3. 'a' → logprob: -2.1124792098999023
    4. 'L' → logprob: -2.9874792098999023
    5. 'if' → logprob: -3.2374792098999023
    6. 'all' → logprob: -3.2374792098999023
    7. 'True' → logprob: -3.8624792098999023
    8. 'min' → logprob: -4.737479209899902
    9. 'len' → logprob: -4.987479209899902
    10. 'any' → logprob: -4.987479209899902

Token 35: 'ら' (ID: 8870)
  Prédit: 'づ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'づ' → logprob: -1.6872705221176147
    2. 'か' → logprob: -1.8122705221176147
    3. 'も' → logprob: -1.8122705221176147
    4. 'ぶ' → logprob: -2.0622706413269043
    5. 'れ' → logprob: -2.1872706413269043
    6. 'り' → logprob: -2.3122706413269043
    7. 'め' → logprob: -3.5622706413269043
    8. 'れて' → logprob: -3.8122706413269043
    9. 'ま' → logprob: -3.9372706413269043
    10. 'み' → logprob: -4.312270641326904

Token 36: 'ら' (ID: 8870)
  Prédit: 'い'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'い' → logprob: -0.16134044528007507
    2. 'ら' → logprob: -2.0363404750823975
    3. 'さ' → logprob: -5.036340236663818
    4. 'れ' → logprob: -5.661340236663818
    5. 'く' → logprob: -5.786340236663818
    6. 'か' → logprob: -6.161340236663818
    7. 'r' → logprob: -7.911340236663818
    8. 're' → logprob: -7.911340236663818
    9. 'いた' → logprob: -7.911340236663818
    10. '```' → logprob: -8.036340713500977

Token 37: 'が' (ID: 6632)
  Prédit: 'の'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'の' → logprob: -0.9688950777053833
    2. 'が' → logprob: -1.7188950777053833
    3. '_length' → logprob: -2.0938949584960938
    4. '=' → logprob: -2.0938949584960938
    5. '_len' → logprob: -2.7188949584960938
    6. 'length' → logprob: -2.7188949584960938
    7. ' =' → logprob: -3.9688949584960938
    8. 'len' → logprob: -4.093894958496094
    9. 'を' → logprob: -4.093894958496094
    10. '長' → logprob: -6.593894958496094

Token 38: '伸' (ID: 118578)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6162760257720947
    2. 'L' → logprob: -1.6162760257720947
    3. 'time' → logprob: -1.6162760257720947
    4. ' L' → logprob: -4.366275787353516
    5. ' a' → logprob: -4.491275787353516
    6. ' time' → logprob: -4.491275787353516
    7. '0' → logprob: -4.741275787353516
    8. 'len' → logprob: -4.991275787353516
    9. 'l' → logprob: -5.741275787353516
    10. 'all' → logprob: -6.491275787353516

Token 39: 'び' (ID: 58490)
  Prédit: 'び'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'び' → logprob: -0.0002644351334311068
    2. 'ば' → logprob: -8.500264167785645
    3. 'る' → logprob: -10.375264167785645
    4. '-' → logprob: -12.375264167785645
    5. 'し' → logprob: -12.625264167785645
    6. 'く' → logprob: -13.250264167785645
    7. 'ー' → logprob: -13.250264167785645
    8. 'れ' → logprob: -13.250264167785645
    9. 'す' → logprob: -13.375264167785645
    10. 'r' → logprob: -13.625264167785645

Token 40: 'る' (ID: 6996)
  Prédit: 'て'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'て' → logprob: -0.5577486753463745
    2. 'る' → logprob: -0.9327486753463745
    3. '続' → logprob: -3.932748794555664
    4. 'き' → logprob: -5.057748794555664
    5. 'く' → logprob: -6.057748794555664
    6. 'た' → logprob: -6.557748794555664
    7. 't' → logprob: -6.932748794555664
    8. 'a' → logprob: -7.557748794555664
    9. '```' → logprob: -7.932748794555664
    10. 'ています' → logprob: -8.057748794555664

Token 41: 'か' (ID: 7128)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9340097904205322
    2. 'if' → logprob: -1.0590097904205322
    3. 'time' → logprob: -2.1840097904205322
    4. '   ' → logprob: -2.6840097904205322
    5. 'a' → logprob: -3.6840097904205322
    6. ' for' → logprob: -3.9340097904205322
    7. ' if' → logprob: -4.309009552001953
    8. 't' → logprob: -4.684009552001953
    9. 'l' → logprob: -5.309009552001953
    10. 'length' → logprob: -6.559009552001953

Token 42: 'どう' (ID: 85545)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0881693363189697
    2. '   ' → logprob: -1.3381693363189697
    3. ' if' → logprob: -1.4631693363189697
    4. 'if' → logprob: -3.5881693363189697
    5. 'time' → logprob: -3.8381693363189697
    6. ' and' → logprob: -4.088169097900391
    7. ')' → logprob: -4.088169097900391
    8. '    ' → logprob: -4.338169097900391
    9. ' time' → logprob: -4.463169097900391
    10. ' ' → logprob: -4.588169097900391

Token 43: 'か' (ID: 7128)
  Prédit: 'す'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'す' → logprob: -0.7393038868904114
    2. 'か' → logprob: -1.8643038272857666
    3. ')' → logprob: -2.4893038272857666
    4. ' ' → logprob: -2.8643038272857666
    5. '   ' → logprob: -2.8643038272857666
    6. 'し' → logprob: -3.4893038272857666
    7. '_' → logprob: -3.4893038272857666
    8. 'して' → logprob: -3.8643038272857666
    9. ' `' → logprob: -4.239304065704346
    10. '`' → logprob: -4.864304065704346

Token 44: '判' (ID: 47257)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23025940358638763
    2. ' ' → logprob: -2.730259418487549
    3. '    ' → logprob: -2.855259418487549
    4. ' if' → logprob: -3.105259418487549
    5. ':' → logprob: -3.980259418487549
    6. '  ' → logprob: -5.730259418487549
    7. '<|end|>' → logprob: -5.730259418487549
    8. 'if' → logprob: -6.230259418487549
    9. ')' → logprob: -6.605259418487549
    10. ',' → logprob: -6.980259418487549

Token 45: '定' (ID: 8745)
  Prédit: '定'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '定' → logprob: -0.25647443532943726
    2. '断' → logprob: -1.631474494934082
    3. '別' → logprob: -4.506474494934082
    4. '```' → logprob: -4.756474494934082
    5. 'る' → logprob: -6.131474494934082
    6. '#' → logprob: -6.881474494934082
    7. 'か' → logprob: -7.131474494934082
    8. '�' → logprob: -7.506474494934082
    9. '{' → logprob: -7.631474494934082
    10. '``' → logprob: -7.756474494934082

Token 46: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020597247406840324
    2. '    ' → logprob: -4.520597457885742
    3. ' if' → logprob: -5.895597457885742
    4. ':' → logprob: -6.270597457885742
    5. ' ' → logprob: -6.645597457885742
    6. '<|end|>' → logprob: -6.770597457885742
    7. '  ' → logprob: -7.395597457885742
    8. ')' → logprob: -7.770597457885742
    9. 'if' → logprob: -8.645597457885742
    10. ',' → logprob: -8.895597457885742

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04342011734843254
    2. ':' → logprob: -4.418420314788818
    3. '    ' → logprob: -4.668420314788818
    4. ' ' → logprob: -5.543420314788818
    5. ' if' → logprob: -5.543420314788818
    6. '<|end|>' → logprob: -5.793420314788818
    7. 'i' → logprob: -6.168420314788818
    8. 'n' → logprob: -6.793420314788818
    9. '  ' → logprob: -7.043420314788818
    10. ')' → logprob: -7.043420314788818

Token 48: ' grow' (ID: 3839)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26158496737480164
    2. ' if' → logprob: -2.386584997177124
    3. 'if' → logprob: -3.511584997177124
    4. '    ' → logprob: -3.511584997177124
    5. 'a' → logprob: -4.386584758758545
    6. 't' → logprob: -4.636584758758545
    7. 'i' → logprob: -4.636584758758545
    8. ' indentation' → logprob: -4.886584758758545
    9. ' for' → logprob: -5.136584758758545
    10. 'n' → logprob: -5.136584758758545

Token 49: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.31422632932662964
    2. '_time' → logprob: -2.0642263889312744
    3. 'ing' → logprob: -2.5642263889312744
    4. ' =' → logprob: -4.189226150512695
    5. '_possible' → logprob: -4.564226150512695
    6. 's' → logprob: -4.689226150512695
    7. '=' → logprob: -4.814226150512695
    8. '_condition' → logprob: -5.689226150512695
    9. '_if' → logprob: -6.189226150512695
    10. '_ing' → logprob: -6.189226150512695

Token 50: ' [' (ID: 723)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.0060656070709229
    2. ' False' → logprob: -1.6310656070709229
    3. 'a' → logprob: -1.7560656070709229
    4. ' a' → logprob: -2.506065607070923
    5. ' any' → logprob: -2.631065607070923
    6. 'any' → logprob: -3.631065607070923
    7. ' all' → logprob: -4.131065368652344
    8. 'all' → logprob: -4.506065368652344
    9. '0' → logprob: -4.631065368652344
    10. ' True' → logprob: -4.631065368652344

Token 51: 'False' (ID: 8168)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3503064215183258
    2. 'x' → logprob: -2.350306510925293
    3. '0' → logprob: -2.475306510925293
    4. 'False' → logprob: -2.850306510925293
    5. 'i' → logprob: -3.725306510925293
    6. 'int' → logprob: -5.225306510925293
    7. 'ai' → logprob: -5.350306510925293
    8. 'max' → logprob: -5.600306510925293
    9. '(a' → logprob: -5.725306510925293
    10. '1' → logprob: -5.725306510925293

Token 52: ']*' (ID: 18579)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.32589319348335266
    2. ']' → logprob: -1.3258931636810303
    3. 'for' → logprob: -5.075893402099609
    4. ']*' → logprob: -5.700893402099609
    5. ',' → logprob: -6.325893402099609
    6. ')' → logprob: -6.950893402099609
    7. ' ]' → logprob: -9.82589340209961
    8. ' if' → logprob: -9.95089340209961
    9. ')]' → logprob: -9.95089340209961
    10. '	for' → logprob: -10.57589340209961

Token 53: 'N' (ID: 45)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.04897883161902428
    2. 'N' → logprob: -3.048978805541992
    3. '(L' → logprob: -8.173978805541992
    4. '(N' → logprob: -9.798978805541992
    5. ' L' → logprob: -10.423978805541992
    6. '(' → logprob: -10.923978805541992
    7. ' N' → logprob: -13.423978805541992
    8. ' (' → logprob: -14.048978805541992
    9. 'a' → logprob: -14.298978805541992
    10. ' ' → logprob: -14.673978805541992

Token 54: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6582255363464355
    2. '<|end|>' → logprob: -0.9082255363464355
    3. 'for' → logprob: -4.1582255363464355
    4. '   ' → logprob: -4.1582255363464355
    5. ' for' → logprob: -4.7832255363464355
    6. ' ' → logprob: -4.9082255363464355
    7. '\n' → logprob: -5.4082255363464355
    8. ' 
' → logprob: -5.4082255363464355
    9. '<|end|>' → logprob: -5.4082255363464355
    10. ' if' → logprob: -5.5332255363464355

Token 55: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2573940753936768
    2. '<|end|>' → logprob: -1.3823940753936768
    3. 'for' → logprob: -1.5073940753936768
    4. ' for' → logprob: -1.6323940753936768
    5. ' 
' → logprob: -4.257393836975098
    6. '   ' → logprob: -4.757393836975098
    7. '\n' → logprob: -5.132393836975098
    8. ' ' → logprob: -5.132393836975098
    9. '    
' → logprob: -6.257393836975098
    10. '\' → logprob: -6.382393836975098

Token 56: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.15570425987243652
    2. ' for' → logprob: -2.1557042598724365
    3. '
' → logprob: -3.7807042598724365
    4. ' 
' → logprob: -5.780704498291016
    5. '\n' → logprob: -7.530704498291016
    6. '   ' → logprob: -8.030704498291016
    7. 'if' → logprob: -8.155704498291016
    8. 'newline' → logprob: -8.405704498291016
    9. 'i' → logprob: -8.655704498291016
    10. '' → logprob: -8.780704498291016

Token 57: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.04302796721458435
    2. 'i' → logprob: -3.168027877807617
    3. '_i' → logprob: -11.293027877807617
    4. ' ' → logprob: -11.918027877807617
    5. ' range' → logprob: -12.793027877807617
    6. '_' → logprob: -12.918027877807617
    7. ' _' → logprob: -13.168027877807617
    8. '	i' → logprob: -13.543027877807617
    9. ' ' → logprob: -14.793027877807617
    10. 'range' → logprob: -15.793027877807617

Token 58: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06212228909134865
    2. 'in' → logprob: -2.812122344970703
    3. ' ' → logprob: -9.312122344970703
    4. ',' → logprob: -11.062122344970703
    5. 'range' → logprob: -11.562122344970703
    6. '0' → logprob: -12.312122344970703
    7. '　' → logprob: -12.312122344970703
    8. ' i' → logprob: -12.437122344970703
    9. '	in' → logprob: -12.562122344970703
    10. 's' → logprob: -13.124622344970703

Token 59: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1269291490316391
    2. 'range' → logprob: -2.1269290447235107
    3. '	range' → logprob: -14.62692928314209
    4. '(range' → logprob: -15.25192928314209
    5. ' ' → logprob: -15.37692928314209
    6. ' xrange' → logprob: -16.626928329467773
    7. ' ran' → logprob: -16.751928329467773
    8. ')' → logprob: -17.751928329467773
    9. '_range' → logprob: -18.001928329467773
    10. ' ra' → logprob: -18.251928329467773

Token 60: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00464776111766696
    2. '(' → logprob: -5.379647731781006
    3. '(L' → logprob: -11.129648208618164
    4. '(n' → logprob: -12.004648208618164
    5. 'N' → logprob: -12.629648208618164
    6. '(len' → logprob: -13.629648208618164
    7. ' (' → logprob: -14.004648208618164
    8. '(i' → logprob: -14.504648208618164
    9. '(
' → logprob: -15.129648208618164
    10. '1' → logprob: -15.629648208618164

Token 61: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08584374189376831
    2. '-' → logprob: -2.585843801498413
    3. '):
' → logprob: -5.335843563079834
    4. ')' → logprob: -6.835843563079834
    5. ' -' → logprob: -7.210843563079834
    6. ' ):' → logprob: -8.960844039916992
    7. ':' → logprob: -9.835844039916992
    8. '   ' → logprob: -10.085844039916992
    9. '):
' → logprob: -10.335844039916992
    10. ' ' → logprob: -10.585844039916992

Token 62: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8278316855430603
    2. ':' → logprob: -1.327831745147705
    3. ' if' → logprob: -1.327831745147705
    4. '<|end|>' → logprob: -5.077831745147705
    5. 'if' → logprob: -5.202831745147705
    6. ' ' → logprob: -5.327831745147705
    7. '    ' → logprob: -5.327831745147705
    8. '       ' → logprob: -5.702831745147705
    9. ' :' → logprob: -6.202831745147705
    10. ':
' → logprob: -6.827831745147705

Token 63: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2807850241661072
    2. ' if' → logprob: -1.905785083770752
    3. 'a' → logprob: -3.530785083770752
    4. '   ' → logprob: -3.530785083770752
    5. 'for' → logprob: -4.030785083770752
    6. 'i' → logprob: -5.155785083770752
    7. ' for' → logprob: -5.280785083770752
    8. ' a' → logprob: -5.655785083770752
    9. 'range' → logprob: -6.030785083770752
    10. ' range' → logprob: -6.905785083770752

Token 64: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7310996055603027
    2. 'a' → logprob: -1.1060996055603027
    3. ' i' → logprob: -2.3560996055603027
    4. 'i' → logprob: -3.1060996055603027
    5. ' time' → logprob: -3.4810996055603027
    6. 'time' → logprob: -4.606099605560303
    7. ' not' → logprob: -5.731099605560303
    8. ' L' → logprob: -6.231099605560303
    9. 'L' → logprob: -7.606099605560303
    10. ' ' → logprob: -7.856099605560303

Token 65: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005449305754154921
    2. '[' → logprob: -7.625545024871826
    3. ' [' → logprob: -10.625544548034668
    4. '[a' → logprob: -11.625544548034668
    5. 'i' → logprob: -11.750544548034668
    6. '[-' → logprob: -12.875544548034668
    7. '[j' → logprob: -13.000544548034668
    8. ' ' → logprob: -13.500544548034668
    9. ')' → logprob: -13.750544548034668
    10. '>' → logprob: -14.125544548034668

Token 66: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17212092876434326
    2. ' <' → logprob: -2.797121047973633
    3. '<' → logprob: -3.547121047973633
    4. ']>' → logprob: -4.172121047973633
    5. ']<' → logprob: -4.297121047973633
    6. ']>=' → logprob: -4.797121047973633
    7. '>' → logprob: -4.922121047973633
    8. '+' → logprob: -5.297121047973633
    9. ' >' → logprob: -5.297121047973633
    10. ' ]' → logprob: -5.547121047973633

Token 67: ' ==' (ID: 951)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5978499054908752
    2. '<' → logprob: -1.0978498458862305
    3. ' >' → logprob: -3.2228498458862305
    4. '>' → logprob: -3.3478498458862305
    5. ' >=' → logprob: -4.2228498458862305
    6. '+' → logprob: -4.7228498458862305
    7. '>=' → logprob: -5.0978498458862305
    8. ' <=' → logprob: -5.4728498458862305
    9. ' +' → logprob: -6.2228498458862305
    10. '==' → logprob: -6.4728498458862305

Token 68: ' ' (ID: 220)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.6387845873832703
    2. ' L' → logprob: -1.513784646987915
    3. '0' → logprob: -1.888784646987915
    4. ' ' → logprob: -2.388784646987915
    5. '1' → logprob: -5.763784408569336
    6. 'a' → logprob: -6.013784408569336
    7. 'i' → logprob: -6.263784408569336
    8. ' i' → logprob: -7.513784408569336
    9. ' a' → logprob: -7.638784408569336
    10. '-' → logprob: -9.763784408569336

Token 69: '0' (ID: 15)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.41586005687713623
    2. '0' → logprob: -1.1658600568771362
    3. 'i' → logprob: -4.915860176086426
    4. '1' → logprob: -5.040860176086426
    5. ' ' → logprob: -5.040860176086426
    6. ' L' → logprob: -5.540860176086426
    7. 'a' → logprob: -5.915860176086426
    8. '-' → logprob: -7.040860176086426
    9. '100' → logprob: -9.040860176086426
    10. 'l' → logprob: -9.415860176086426

Token 70: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14669707417488098
    2. ' and' → logprob: -2.3966970443725586
    3. ' or' → logprob: -3.3966970443725586
    4. ' :' → logprob: -4.646697044372559
    5. 'and' → logprob: -6.271697044372559
    6. ':
' → logprob: -8.271697044372559
    7. ' ' → logprob: -9.396697044372559
    8. 'or' → logprob: -10.271697044372559
    9. '：' → logprob: -10.521697044372559
    10. ':return' → logprob: -10.521697044372559

Token 71: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.33412793278694153
    2. '       ' → logprob: -2.459127902984619
    3. ' and' → logprob: -2.584127902984619
    4. ' continue' → logprob: -3.209127902984619
    5. ' or' → logprob: -3.959127902984619
    6. '   ' → logprob: -4.334127902984619
    7. ' ' → logprob: -4.334127902984619
    8. ' :' → logprob: -4.709127902984619
    9. '           ' → logprob: -5.209127902984619
    10. '
' → logprob: -5.459127902984619

Token 72: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.10835104435682297
    2. ' grow' → logprob: -2.858350992202759
    3. 'continue' (adapté à ' continue') → logprob: -3.608350992202759
    4. 'grow' → logprob: -4.358351230621338
    5. '       ' → logprob: -6.233351230621338
    6. ' True' → logprob: -6.858351230621338
    7. '   ' → logprob: -6.983351230621338
    8. ' ' → logprob: -8.10835075378418
    9. '	continue' → logprob: -8.35835075378418
    10. ' break' → logprob: -8.73335075378418

Token 73: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03264551982283592
    2. '<|end|>' → logprob: -4.5326457023620605
    3. '    
' → logprob: -4.6576457023620605
    4. ' 
' → logprob: -5.4076457023620605
    5. '  
' → logprob: -5.7826457023620605
    6. '   
' → logprob: -6.7826457023620605
    7. '   ' → logprob: -6.9076457023620605
    8. '\n' → logprob: -7.9076457023620605
    9. '        
' → logprob: -7.9076457023620605
    10. '
' → logprob: -8.157645225524902

Token 74: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1505335122346878
    2. '    
' → logprob: -3.150533437728882
    3. '   ' → logprob: -3.275533437728882
    4. '<|end|>' → logprob: -3.650533437728882
    5. ' 
' → logprob: -4.150533676147461
    6. '  
' → logprob: -5.025533676147461
    7. '   
' → logprob: -6.025533676147461
    8. '        
' → logprob: -6.275533676147461
    9. ' and' → logprob: -6.400533676147461
    10. '       ' → logprob: -6.525533676147461

Token 75: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9804642796516418
    2. '
' → logprob: -1.355464220046997
    3. ' 
' → logprob: -1.855464220046997
    4. '<|end|>' → logprob: -2.480464220046997
    5. ' and' → logprob: -3.480464220046997
    6. ' ' → logprob: -4.230464458465576
    7. ' elif' → logprob: -4.480464458465576
    8. '   ' → logprob: -4.605464458465576
    9. '    
' → logprob: -4.605464458465576
    10. 'if' (adapté à ' if') → logprob: -4.605464458465576

Token 76: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.38559672236442566
    2. 'i' → logprob: -1.385596752166748
    3. ' a' → logprob: -3.135596752166748
    4. 'a' → logprob: -3.885596752166748
    5. ' (' → logprob: -5.885596752166748
    6. ' time' → logprob: -7.135596752166748
    7. '(i' → logprob: -7.510596752166748
    8. ' any' → logprob: -7.885596752166748
    9. ' all' → logprob: -8.01059627532959
    10. ' L' → logprob: -8.38559627532959

Token 77: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.041933801025152206
    2. '>' → logprob: -3.79193377494812
    3. ' ==' → logprob: -4.291934013366699
    4. ' <' → logprob: -6.166934013366699
    5. ' ' → logprob: -6.541934013366699
    6. '==' → logprob: -6.916934013366699
    7. '+' → logprob: -9.2919340133667
    8. '-' → logprob: -9.9169340133667
    9. '0' → logprob: -9.9169340133667
    10. ' !=' → logprob: -9.9169340133667

Token 78: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011870305053889751
    2. ' ' → logprob: -4.511870384216309
    3. 'N' → logprob: -7.136870384216309
    4. ' N' → logprob: -10.636870384216309
    5. 'L' → logprob: -13.136870384216309
    6. '   ' → logprob: -15.761870384216309
    7. ' L' → logprob: -15.949370384216309
    8. '	N' → logprob: -16.511869430541992
    9. '1' → logprob: -16.636869430541992
    10. '<N' → logprob: -16.886869430541992

Token 79: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019847829826176167
    2. 'N' → logprob: -6.751984596252441
    3. ' ' → logprob: -7.126984596252441
    4. ' N' → logprob: -12.126984596252441
    5. 'L' → logprob: -12.376984596252441
    6. '1' → logprob: -15.439484596252441
    7. '(N' → logprob: -16.001985549926758
    8. '9' → logprob: -16.126985549926758
    9. '   ' → logprob: -16.376985549926758
    10. 'i' → logprob: -16.564485549926758

Token 80: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.1504456102848053
    2. 'or' → logprob: -2.6504456996917725
    3. ':' → logprob: -3.0254456996917725
    4. ' and' → logprob: -4.400445461273193
    5. 'and' → logprob: -4.900445461273193
    6. ' ' → logprob: -7.400445461273193
    7. ' :' → logprob: -9.400445938110352
    8. ':
' → logprob: -9.525445938110352
    9. '	or' → logprob: -11.275445938110352
    10. '：' → logprob: -12.400445938110352

Token 81: '           ' (ID: 352)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.03758418560028076
    2. 'or' → logprob: -3.7875843048095703
    3. ' and' → logprob: -4.66258430480957
    4. ' ' → logprob: -6.03758430480957
    5. '0' → logprob: -7.03758430480957
    6. 'and' → logprob: -7.41258430480957
    7. 'a' → logprob: -7.78758430480957
    8. ' a' → logprob: -8.53758430480957
    9. ':' → logprob: -9.28758430480957
    10. '   ' → logprob: -9.66258430480957

Token 82: ' if' (ID: 538)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -1.1016260385513306
    2. 'a' → logprob: -1.4766260385513306
    3. ' a' → logprob: -1.7266260385513306
    4. ' and' → logprob: -1.8516260385513306
    5. 'grow' → logprob: -3.351625919342041
    6. ' grow' → logprob: -4.101625919342041
    7. 'if' (adapté à ' if') → logprob: -4.226625919342041
    8. ' if' → logprob: -4.476625919342041
    9. 'and' → logprob: -4.476625919342041
    10. 'or' → logprob: -4.601625919342041

Token 83: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.18090523779392242
    2. ' a' → logprob: -1.8059052228927612
    3. 'i' → logprob: -8.55590534210205
    4. 'grow' → logprob: -8.80590534210205
    5. 'N' → logprob: -8.93090534210205
    6. 'L' → logprob: -9.05590534210205
    7. ' i' → logprob: -9.18090534210205
    8. ' grow' → logprob: -9.18090534210205
    9. 'time' → logprob: -9.43090534210205
    10. ' time' → logprob: -9.68090534210205

Token 84: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.12694406509399414
    2. '[' → logprob: -2.126944065093994
    3. 'i' → logprob: -12.376943588256836
    4. '1' → logprob: -12.626943588256836
    5. '>' → logprob: -13.501943588256836
    6. ' [' → logprob: -13.626943588256836
    7. '0' → logprob: -14.126943588256836
    8. '```' → logprob: -14.501943588256836
    9. ' ' → logprob: -14.751943588256836
    10. '
' → logprob: -14.751943588256836

Token 85: ']' (ID: 60)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.8450993299484253
    2. '>' → logprob: -1.0950993299484253
    3. ']' → logprob: -1.9700993299484253
    4. ' <' → logprob: -3.095099449157715
    5. '<' → logprob: -3.845099449157715
    6. ']>' → logprob: -4.470099449157715
    7. '-' → logprob: -4.845099449157715
    8. ' ]' → logprob: -5.845099449157715
    9. ' ' → logprob: -5.970099449157715
    10. '+' → logprob: -6.720099449157715

Token 86: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2970479130744934
    2. '>' → logprob: -1.7970478534698486
    3. ' <' → logprob: -2.6720478534698486
    4. '<' → logprob: -4.047048091888428
    5. ' >=' → logprob: -6.422048091888428
    6. ' ' → logprob: -7.047048091888428
    7. '-' → logprob: -7.547048091888428
    8. '>=' → logprob: -7.547048091888428
    9. ' <=' → logprob: -8.29704761505127
    10. ' ==' → logprob: -8.54704761505127

Token 87: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7490379810333252
    2. ' a' → logprob: -1.2490379810333252
    3. '0' → logprob: -1.9990379810333252
    4. ' ' → logprob: -2.749037981033325
    5. '1' → logprob: -3.624037981033325
    6. ' L' → logprob: -4.999037742614746
    7. 'L' → logprob: -5.249037742614746
    8. ' time' → logprob: -6.749037742614746
    9. 'time' → logprob: -7.874037742614746
    10. '=' → logprob: -8.249037742614746

Token 88: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0017070822650566697
    2. '[' → logprob: -6.376707077026367
    3. 'i' → logprob: -13.001707077026367
    4. '1' → logprob: -13.001707077026367
    5. ' [' → logprob: -15.501707077026367
    6. ' ' → logprob: -16.876707077026367
    7. '0' → logprob: -17.126707077026367
    8. '
' → logprob: -17.751707077026367
    9. '[j' → logprob: -17.751707077026367
    10. '[
' → logprob: -17.751707077026367

Token 89: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0008952628704719245
    2. ' +' → logprob: -7.2508955001831055
    3. '[' → logprob: -9.000895500183105
    4. '1' → logprob: -10.250895500183105
    5. '＋' → logprob: -11.750895500183105
    6. '+
' → logprob: -12.125895500183105
    7. '[i' → logprob: -12.750895500183105
    8. '-' → logprob: -12.750895500183105
    9. '+i' → logprob: -13.125895500183105
    10. ']' → logprob: -13.625895500183105

Token 90: '1' (ID: 16)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08253099769353867
    2. '1' → logprob: -2.832530975341797
    3. '0' → logprob: -3.957530975341797
    4. '+' → logprob: -7.832530975341797
    5. ' ' → logprob: -8.082530975341797
    6. ']+' → logprob: -8.832530975341797
    7. '-' → logprob: -9.082530975341797
    8. ' ]' → logprob: -9.582530975341797
    9. '
' → logprob: -10.457530975341797
    10. '2' → logprob: -10.832530975341797

Token 91: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12322484701871872
    2. '):' → logprob: -2.2482247352600098
    3. '+' → logprob: -5.49822473526001
    4. ' :' → logprob: -6.37322473526001
    5. '+:' → logprob: -6.87322473526001
    6. ' and' → logprob: -7.62322473526001
    7. ':
' → logprob: -7.74822473526001
    8. ')' → logprob: -7.87322473526001
    9. ' ):' → logprob: -7.99822473526001
    10. ']:' → logprob: -8.123225212097168

Token 92: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3414979577064514
    2. ' and' → logprob: -1.8414978981018066
    3. ' :' → logprob: -2.5914978981018066
    4. ':
' → logprob: -3.9664978981018066
    5. 'and' → logprob: -4.591497898101807
    6. ' :
' → logprob: -4.841497898101807
    7. ' ' → logprob: -5.091497898101807
    8. ' or' → logprob: -5.591497898101807
    9. '               ' → logprob: -6.341497898101807
    10. '           ' → logprob: -6.341497898101807

Token 93: ' grow' (ID: 3839)
  Prédit: ' grow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grow' → logprob: -0.17987866699695587
    2. 'grow' (adapté à ' grow') → logprob: -1.8048787117004395
    3. ' growth' → logprob: -9.804878234863281
    4. '
' → logprob: -11.554878234863281
    5. ' grown' → logprob: -12.054878234863281
    6. ' continue' → logprob: -12.054878234863281
    7. 'growth' → logprob: -12.054878234863281
    8. '                   ' → logprob: -12.054878234863281
    9. '               ' → logprob: -12.179878234863281
    10. '           ' → logprob: -12.179878234863281

Token 94: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.011089913547039032
    2. '[' → logprob: -4.51108980178833
    3. ' [' → logprob: -10.761090278625488
    4. '=' → logprob: -12.011090278625488
    5. ' =' → logprob: -12.386090278625488
    6. '[I' → logprob: -13.511090278625488
    7. '[
' → logprob: -13.886090278625488
    8. '[s' → logprob: -14.261090278625488
    9. '[ii' → logprob: -14.511090278625488
    10. '\[' → logprob: -14.511090278625488

Token 95: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011899515055119991
    2. ']=' → logprob: -4.636899471282959
    3. ' ]' → logprob: -6.761899471282959
    4. '=' → logprob: -7.011899471282959
    5. ' =' → logprob: -9.511899948120117
    6. ']+=' → logprob: -12.636899948120117
    7. ']==' → logprob: -13.511899948120117
    8. '=True' → logprob: -13.636899948120117
    9. ' ' → logprob: -14.386899948120117
    10. ')' → logprob: -14.386899948120117

Token 96: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693671882152557
    2. ' =' → logprob: -2.126936674118042
    3. '=True' → logprob: -11.751936912536621
    4. ' ' → logprob: -15.001936912536621
    5. ']' → logprob: -16.001935958862305
    6. '＝' → logprob: -16.126935958862305
    7. ')' → logprob: -16.626935958862305
    8. '=False' → logprob: -17.126935958862305
    9. '<|end|>' → logprob: -17.126935958862305
    10. '=

' → logprob: -17.501935958862305

Token 97: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.3132629096508026
    2. ' True' → logprob: -1.313262939453125
    3. 'False' → logprob: -13.813262939453125
    4. ' False' → logprob: -16.563262939453125
    5. ' Tru' → logprob: -17.188262939453125
    6. ' ' → logprob: -17.563262939453125
    7. '(True' → logprob: -17.688262939453125
    8. 'Tr' → logprob: -18.063262939453125
    9. 'T' → logprob: -18.938262939453125
    10. '1' → logprob: -19.438262939453125

Token 98: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01600644923746586
    2. '<|end|>' → logprob: -4.5160064697265625
    3. '\n' → logprob: -5.7660064697265625
    4. '   ' → logprob: -7.6410064697265625
    5. 'elif' → logprob: -8.141006469726562
    6. '<|end|>' → logprob: -8.891006469726562
    7. 'else' → logprob: -9.016006469726562
    8. ' else' → logprob: -9.016006469726562
    9. '
' → logprob: -9.141006469726562
    10. ' 
' → logprob: -9.391006469726562

Token 99: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.36999064683914185
    2. '<|end|>' → logprob: -2.244990587234497
    3. '   ' → logprob: -2.744990587234497
    4. '       ' → logprob: -2.869990587234497
    5. 'elif' → logprob: -3.119990587234497
    6. 'else' → logprob: -4.369990825653076
    7. ' else' → logprob: -4.494990825653076
    8. ' elif' → logprob: -5.744990825653076
    9. '\n' → logprob: -6.119990825653076
    10. ')' → logprob: -6.119990825653076

Token 100: ' elif' (ID: 9497)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6141186356544495
    2. 'else' → logprob: -1.2391185760498047
    3. 'elif' (adapté à ' elif') → logprob: -1.9891185760498047
    4. ' elif' → logprob: -3.4891185760498047
    5. '   ' → logprob: -7.489118576049805
    6. '	elif' → logprob: -7.739118576049805
    7. ' ' → logprob: -8.239118576049805
    8. '	else' → logprob: -8.364118576049805
    9. ' or' → logprob: -8.489118576049805
    10. '
' → logprob: -10.114118576049805

Token 101: ' i' (ID: 575)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.28839346766471863
    2. ' i' → logprob: -1.913393497467041
    3. 'a' → logprob: -2.663393497467041
    4. ' ' → logprob: -4.288393497467041
    5. '0' → logprob: -4.538393497467041
    6. 'i' → logprob: -4.788393497467041
    7. '1' → logprob: -8.788393020629883
    8. '   ' → logprob: -9.163393020629883
    9. '    ' → logprob: -9.913393020629883
    10. '  ' → logprob: -9.913393020629883

Token 102: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3519601821899414
    2. ' ==' → logprob: -1.3519601821899414
    3. '==' → logprob: -4.601960182189941
    4. '>' → logprob: -4.851960182189941
    5. ' <' → logprob: -4.851960182189941
    6. ' ' → logprob: -4.851960182189941
    7. '-' → logprob: -5.976960182189941
    8. ' -' → logprob: -6.476960182189941
    9. ' !=' → logprob: -8.601960182189941
    10. '   ' → logprob: -9.601960182189941

Token 103: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.17302975058555603
    2. ' N' → logprob: -2.173029661178589
    3. '0' → logprob: -3.173029661178589
    4. ' ' → logprob: -5.798029899597168
    5. '1' → logprob: -9.423029899597168
    6. '   ' → logprob: -11.048029899597168
    7. '(N' → logprob: -11.048029899597168
    8. 'n' → logprob: -11.798029899597168
    9. 'len' → logprob: -12.298029899597168
    10. 'i' → logprob: -12.423029899597168

Token 104: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01435165572911501
    2. ' -' → logprob: -4.264351844787598
    3. '1' → logprob: -9.014351844787598
    4. ' ' → logprob: -9.639351844787598
    5. '−' → logprob: -14.264351844787598
    6. '2' → logprob: -15.889351844787598
    7. '–' → logprob: -16.63935089111328
    8. '－' → logprob: -17.13935089111328
    9. '   ' → logprob: -17.13935089111328
    10. ')' → logprob: -17.26435089111328

Token 105: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.011373155459296e-05
    2. ' ' → logprob: -10.500030517578125
    3. '2' → logprob: -13.625030517578125
    4. '１' → logprob: -14.000030517578125
    5. '```' → logprob: -15.812530517578125
    6. '   ' → logprob: -16.375030517578125
    7. '0' → logprob: -16.750030517578125
    8. '`' → logprob: -17.625030517578125
    9. '  ' → logprob: -17.625030517578125
    10. 'i' → logprob: -17.687530517578125

Token 106: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013624972198158503
    2. ' :' → logprob: -6.626362323760986
    3. ':
' → logprob: -10.751362800598145
    4. ' and' → logprob: -11.626362800598145
    5. 'and' → logprob: -12.626362800598145
    6. '：' → logprob: -13.751362800598145
    7. ' ' → logprob: -14.876362800598145
    8. ' or' → logprob: -15.126362800598145
    9. 'else' → logprob: -15.501362800598145
    10. '-' → logprob: -15.626362800598145

Token 107: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8716867566108704
    2. ':' → logprob: -1.3716866970062256
    3. '           ' → logprob: -1.3716866970062256
    4. ' ' → logprob: -3.8716866970062256
    5. ' and' → logprob: -3.9966866970062256
    6. ' if' → logprob: -4.121686935424805
    7. '   ' → logprob: -4.996686935424805
    8. ':
' → logprob: -5.246686935424805
    9. '```' → logprob: -5.871686935424805
    10. '        ' → logprob: -6.871686935424805

Token 108: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5772526264190674
    2. 'if' (adapté à ' if') → logprob: -0.8272526264190674
    3. ' ' → logprob: -7.702252388000488
    4. ':' → logprob: -8.452252388000488
    5. '   ' → logprob: -8.452252388000488
    6. '       ' → logprob: -8.452252388000488
    7. '           ' → logprob: -8.577252388000488
    8. ':
' → logprob: -11.827252388000488
    9. ' and' → logprob: -12.327252388000488
    10. '```' → logprob: -12.327252388000488

Token 109: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6931991577148438
    2. ' a' → logprob: -0.6931991577148438
    3. ' ' → logprob: -11.068199157714844
    4. 'i' → logprob: -11.443199157714844
    5. ' i' → logprob: -11.943199157714844
    6. '   ' → logprob: -12.443199157714844
    7. '0' → logprob: -12.568199157714844
    8. '(a' → logprob: -12.818199157714844
    9. '	a' → logprob: -13.255699157714844
    10. ' ' → logprob: -13.318199157714844

Token 110: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.630610641877865e-06
    2. '[' → logprob: -12.000006675720215
    3. ' [' → logprob: -15.000006675720215
    4. 'i' → logprob: -17.5000057220459
    5. '[j' → logprob: -17.5000057220459
    6. '[I' → logprob: -18.5000057220459
    7. '   ' → logprob: -18.7500057220459
    8. '[ii' → logprob: -19.1250057220459
    9. '```' → logprob: -19.1250057220459
    10. '[
' → logprob: -19.2500057220459

Token 111: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007409389596432447
    2. '>' → logprob: -6.007409572601318
    3. ' ]' → logprob: -6.132409572601318
    4. ' >' → logprob: -6.882409572601318
    5. '-' → logprob: -7.007409572601318
    6. ']>' → logprob: -7.632409572601318
    7. ' ' → logprob: -8.50740909576416
    8. ' -' → logprob: -9.13240909576416
    9. ')' → logprob: -12.38240909576416
    10. ' <' → logprob: -13.00740909576416

Token 112: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5766310691833496
    2. '>' → logprob: -0.8266310691833496
    3. ' ' → logprob: -7.32663106918335
    4. '">' → logprob: -11.451631546020508
    5. '  ' → logprob: -12.701631546020508
    6. ' <' → logprob: -13.201631546020508
    7. ')' → logprob: -13.326631546020508
    8. ',' → logprob: -13.451631546020508
    9. ' ' → logprob: -13.576631546020508
    10. '   ' → logprob: -13.701631546020508

Token 113: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2519424259662628
    2. ' a' → logprob: -1.5019423961639404
    3. ' ' → logprob: -12.12694263458252
    4. '0' → logprob: -12.12694263458252
    5. '	a' → logprob: -14.00194263458252
    6. ' ' → logprob: -14.75194263458252
    7. '   ' → logprob: -14.87694263458252
    8. '_a' → logprob: -15.87694263458252
    9. '
' → logprob: -16.251941680908203
    10. '  ' → logprob: -16.314441680908203

Token 114: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.002817954868078232
    2. 'i' → logprob: -5.8778181076049805
    3. '[' → logprob: -11.37781810760498
    4. ' i' → logprob: -14.37781810760498
    5. ' [' → logprob: -14.50281810760498
    6. '-' → logprob: -15.75281810760498
    7. '[
' → logprob: -16.002817153930664
    8. 'a' → logprob: -16.627817153930664
    9. '   ' → logprob: -16.627817153930664
    10. ' ' → logprob: -16.627817153930664

Token 115: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.676981345459353e-06
    2. ' -' → logprob: -12.500005722045898
    3. ']' → logprob: -13.875005722045898
    4. '1' → logprob: -14.750005722045898
    5. '[i' → logprob: -15.875005722045898
    6. ']-' → logprob: -16.1250057220459
    7. ' ' → logprob: -16.3750057220459
    8. '−' → logprob: -16.6250057220459
    9. '2' → logprob: -16.8750057220459
    10. '[-' → logprob: -18.0000057220459

Token 116: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004092235758434981
    2. '2' → logprob: -7.875409126281738
    3. ' ' → logprob: -11.000409126281738
    4. '0' → logprob: -11.750409126281738
    5. '```' → logprob: -13.562909126281738
    6. 'i' → logprob: -14.687909126281738
    7. '１' → logprob: -15.125409126281738
    8. '
' → logprob: -15.437909126281738
    9. '   ' → logprob: -15.562909126281738
    10. '4' → logprob: -15.625409126281738

Token 117: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.2037968784570694
    2. ']:' → logprob: -1.7037968635559082
    3. ']' → logprob: -6.578796863555908
    4. ' ]' → logprob: -7.453796863555908
    5. ']+' → logprob: -8.953797340393066
    6. ']:
' → logprob: -8.953797340393066
    7. ']:

' → logprob: -9.328797340393066
    8. '+' → logprob: -10.828797340393066
    9. ']>' → logprob: -11.203797340393066
    10. ':' → logprob: -12.078797340393066

Token 118: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.786003589630127
    2. '               ' → logprob: -1.286003589630127
    3. ':
' → logprob: -2.036003589630127
    4. ':' → logprob: -2.161003589630127
    5. ' and' → logprob: -3.911003589630127
    6. 'and' → logprob: -7.036003589630127
    7. '```' → logprob: -7.286003589630127
    8. '       ' → logprob: -8.286003112792969
    9. ' :
' → logprob: -9.286003112792969
    10. ' or' → logprob: -9.911003112792969

Token 119: ' grow' (ID: 3839)
  Prédit: ' grow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grow' → logprob: -0.8749065399169922
    2. ' True' → logprob: -0.8749065399169922
    3. 'True' → logprob: -1.8749065399169922
    4. 'grow' (adapté à ' grow') → logprob: -4.374906539916992
    5. '               ' → logprob: -8.749906539916992
    6. '                   ' → logprob: -10.999906539916992
    7. '           ' → logprob: -10.999906539916992
    8. '=True' → logprob: -11.499906539916992
    9. '                ' → logprob: -11.874906539916992
    10. 'Grow' → logprob: -11.999906539916992

Token 120: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00014084660506341606
    2. '[' → logprob: -8.875141143798828
    3. ' [' → logprob: -14.625141143798828
    4. '```' → logprob: -15.750141143798828
    5. '[j' → logprob: -17.000141143798828
    6. ']' → logprob: -17.000141143798828
    7. '[
' → logprob: -17.375141143798828
    8. '[ii' → logprob: -17.375141143798828
    9. '[I' → logprob: -17.500141143798828
    10. '\[' → logprob: -17.500141143798828

Token 121: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005132370279170573
    2. ']=' → logprob: -7.625513076782227
    3. '=' → logprob: -11.125513076782227
    4. ' ]' → logprob: -11.875513076782227
    5. '[i' → logprob: -13.125513076782227
    6. ']==' → logprob: -14.125513076782227
    7. '           ' → logprob: -15.375513076782227
    8. '   ' → logprob: -15.750513076782227
    9. '[' → logprob: -15.750513076782227
    10. '       ' → logprob: -16.625513076782227

Token 122: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804275393486023
    2. ' =' → logprob: -3.2880427837371826
    3. ']' → logprob: -14.288043022155762
    4. '[' → logprob: -14.913043022155762
    5. ']=' → logprob: -15.788043022155762
    6. '=True' → logprob: -16.038042068481445
    7. '＝' → logprob: -16.538042068481445
    8. ' ' → logprob: -17.163042068481445
    9. '           ' → logprob: -18.538042068481445
    10. '=

' → logprob: -18.663042068481445

Token 123: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.3868711292743683
    2. ' True' → logprob: -1.136871099472046
    3. '(True' → logprob: -16.511871337890625
    4. '=True' → logprob: -17.136871337890625
    5. 'False' → logprob: -20.011871337890625
    6. '.True' → logprob: -20.636871337890625
    7. ' Tru' → logprob: -20.761871337890625
    8. ' ' → logprob: -21.136871337890625
    9. '1' → logprob: -22.136871337890625
    10. '_true' → logprob: -22.636871337890625

Token 124: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025236995425075293
    2. 'else' → logprob: -6.252523899078369
    3. '   ' → logprob: -7.627523899078369
    4. ' else' → logprob: -9.252523422241211
    5. '
' → logprob: -12.627523422241211
    6. '```' → logprob: -13.002523422241211
    7. '	else' → logprob: -13.252523422241211
    8. '	' → logprob: -13.502523422241211
    9. 'elif' → logprob: -13.627523422241211
    10. '           ' → logprob: -13.877523422241211

Token 125: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004373509436845779
    2. 'else' → logprob: -5.754373550415039
    3. ' else' → logprob: -7.379373550415039
    4. '   ' → logprob: -7.504373550415039
    5. '```' → logprob: -12.004373550415039
    6. '	' → logprob: -12.129373550415039
    7. '
' → logprob: -13.254373550415039
    8. '	else' → logprob: -13.254373550415039
    9. 'elif' → logprob: -13.504373550415039
    10. '           ' → logprob: -13.504373550415039

Token 126: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.050671786069869995
    2. ' else' → logprob: -3.0506718158721924
    3. '   ' → logprob: -6.675671577453613
    4. '       ' → logprob: -7.175671577453613
    5. 'elif' → logprob: -10.175671577453613
    6. '	else' → logprob: -11.425671577453613
    7. '```' → logprob: -12.800671577453613
    8. ' ' → logprob: -12.800671577453613
    9. ' elif' → logprob: -14.050671577453613
    10. ' ' → logprob: -16.05067253112793

Token 127: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31441986560821533
    2. '       ' → logprob: -1.6894198656082153
    3. ':
' → logprob: -2.814419746398926
    4. ' if' → logprob: -3.939419746398926
    5. '           ' → logprob: -5.689419746398926
    6. '   ' → logprob: -7.314419746398926
    7. ' :
' → logprob: -7.689419746398926
    8. ' :' → logprob: -7.814419746398926
    9. '        ' → logprob: -8.689419746398926
    10. 'if' → logprob: -9.064419746398926

Token 128: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2842426300048828
    2. ' if' → logprob: -1.4092426300048828
    3. 'if' → logprob: -5.909242630004883
    4. '           ' → logprob: -8.159242630004883
    5. '```' → logprob: -10.284242630004883
    6. '   ' → logprob: -10.409242630004883
    7. ' ' → logprob: -11.159242630004883
    8. '	if' → logprob: -12.909242630004883
    9. ' ' → logprob: -13.534242630004883
    10. '        
' → logprob: -13.784242630004883

Token 129: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03807660564780235
    2. ' if' → logprob: -3.288076639175415
    3. '   ' → logprob: -10.413076400756836
    4. '       ' → logprob: -12.663076400756836
    5. 'grow' → logprob: -14.038076400756836
    6. ' ' → logprob: -14.413076400756836
    7. '           ' → logprob: -14.913076400756836
    8. ' grow' → logprob: -16.413076400756836
    9. 'a' → logprob: -16.663076400756836
    10. '```' → logprob: -16.788076400756836

Token 130: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.31334543228149414
    2. 'a' → logprob: -1.3133454322814941
    3. '(a' → logprob: -9.563344955444336
    4. ' (' → logprob: -11.563344955444336
    5. '   ' → logprob: -13.563344955444336
    6. ' ' → logprob: -13.563344955444336
    7. '(' → logprob: -14.563344955444336
    8. '	a' → logprob: -15.063344955444336
    9. ' ' → logprob: -15.938344955444336
    10. ' grow' → logprob: -16.563344955444336

Token 131: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -13.375001907348633
    3. ' [' → logprob: -18.125001907348633
    4. 'i' → logprob: -18.500001907348633
    5. '   ' → logprob: -18.625001907348633
    6. '```' → logprob: -19.750001907348633
    7. '[j' → logprob: -19.875001907348633
    8. '[I' → logprob: -20.625001907348633
    9. '[a' → logprob: -20.750001907348633
    10. '       ' → logprob: -21.000001907348633

Token 132: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008139106445014477
    2. '>' → logprob: -5.133139133453369
    3. ' >' → logprob: -6.883139133453369
    4. '-' → logprob: -7.633139133453369
    5. ']>' → logprob: -8.008138656616211
    6. ' ]' → logprob: -8.133138656616211
    7. ' ' → logprob: -10.258138656616211
    8. ' -' → logprob: -10.758138656616211
    9. '   ' → logprob: -12.133138656616211
    10. ')' → logprob: -12.383138656616211

Token 133: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.20143264532089233
    2. '>' → logprob: -1.701432704925537
    3. ' ' → logprob: -10.951432228088379
    4. ' ' → logprob: -14.451432228088379
    5. ' <' → logprob: -14.701432228088379
    6. '＞' → logprob: -15.326432228088379
    7. '-' → logprob: -15.701432228088379
    8. '[' → logprob: -16.701433181762695
    9. '```' → logprob: -16.701433181762695
    10. '<' → logprob: -16.826433181762695

Token 134: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00021152703266125172
    2. ' a' → logprob: -8.875211715698242
    3. 'max' → logprob: -9.625211715698242
    4. ' max' → logprob: -12.125211715698242
    5. ' ' → logprob: -16.500211715698242
    6. '	a' → logprob: -18.750211715698242
    7. '
' → logprob: -20.375211715698242
    8. '0' → logprob: -20.875211715698242
    9. 'min' → logprob: -20.875211715698242
    10. '(max' → logprob: -21.250211715698242

Token 135: '[i' (ID: 1768)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.313411146402359
    2. '[i' → logprob: -1.3134111166000366
    3. ' i' → logprob: -9.188410758972168
    4. 'max' → logprob: -10.813410758972168
    5. '(i' → logprob: -11.188410758972168
    6. 'a' → logprob: -12.813410758972168
    7. '   ' → logprob: -13.188410758972168
    8. '1' → logprob: -13.313410758972168
    9. ' [' → logprob: -13.563410758972168
    10. '-' → logprob: -13.563410758972168

Token 136: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.008708644658327103
    2. '+' → logprob: -4.758708477020264
    3. ']' → logprob: -10.383708953857422
    4. ' -' → logprob: -10.383708953857422
    5. ']+' → logprob: -11.258708953857422
    6. '1' → logprob: -11.383708953857422
    7. '[i' → logprob: -12.383708953857422
    8. '   ' → logprob: -14.008708953857422
    9. 'i' → logprob: -14.133708953857422
    10. ' +' → logprob: -14.508708953857422

Token 137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -14.125000953674316
    3. '+' → logprob: -15.875000953674316
    4. '１' → logprob: -16.562501907348633
    5. '-' → logprob: -16.937501907348633
    6. '```' → logprob: -17.000001907348633
    7. '0' → logprob: -17.125001907348633
    8. '2' → logprob: -17.187501907348633
    9. '
' → logprob: -17.375001907348633
    10. ']' → logprob: -17.625001907348633

Token 138: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0323135107755661
    2. 'and' → logprob: -3.782313585281372
    3. ' or' → logprob: -4.782313346862793
    4. ']' → logprob: -7.407313346862793
    5. 'or' → logprob: -10.782313346862793
    6. ' ' → logprob: -12.032313346862793
    7. ')' → logprob: -12.532313346862793
    8. '）' → logprob: -12.657313346862793
    9. ' ]' → logprob: -13.282313346862793
    10. 'と' → logprob: -13.407313346862793

Token 139: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1287386417388916
    2. ' or' → logprob: -2.5037386417388916
    3. 'and' → logprob: -3.2537386417388916
    4. 'or' → logprob: -7.8787384033203125
    5. ' ' → logprob: -12.378738403320312
    6. 'また' → logprob: -13.753738403320312
    7. '   ' → logprob: -14.253738403320312
    8. ')' → logprob: -14.503738403320312
    9. '           ' → logprob: -14.628738403320312
    10. '    ' → logprob: -15.003738403320312

Token 140: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02054515667259693
    2. ' a' → logprob: -3.895545244216919
    3. '   ' → logprob: -13.14554500579834
    4. ' ' → logprob: -14.39554500579834
    5. '  ' → logprob: -15.52054500579834
    6. '           ' → logprob: -16.145545959472656
    7. '(a' → logprob: -16.270545959472656
    8. '	a' → logprob: -16.395545959472656
    9. '    ' → logprob: -16.770545959472656
    10. 'not' → logprob: -17.020545959472656

Token 141: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3663626305060461e-05
    2. 'i' → logprob: -11.75001335144043
    3. '[' → logprob: -12.75001335144043
    4. ']' → logprob: -13.87501335144043
    5. ' [' → logprob: -14.25001335144043
    6. 'a' → logprob: -15.37501335144043
    7. '```' → logprob: -15.50001335144043
    8. ')' → logprob: -15.87501335144043
    9. '[j' → logprob: -16.00001335144043
    10. '][' → logprob: -16.50001335144043

Token 142: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07505277544260025
    2. '[i' → logprob: -3.2000527381896973
    3. ']>' → logprob: -3.5750527381896973
    4. '+' → logprob: -5.950052738189697
    5. '>' → logprob: -7.700052738189697
    6. '-' → logprob: -8.075053215026855
    7. '   ' → logprob: -10.075053215026855
    8. '[' → logprob: -10.325053215026855
    9. 'i' → logprob: -11.075053215026855
    10. ']+' → logprob: -11.075053215026855

Token 143: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.08898058533668518
    2. '>' → logprob: -2.4639806747436523
    3. ' ' → logprob: -10.338980674743652
    4. ' ' → logprob: -12.838980674743652
    5. '[' → logprob: -13.088980674743652
    6. '[i' → logprob: -13.838980674743652
    7. '＞' → logprob: -14.088980674743652
    8. ' >
' → logprob: -15.088980674743652
    9. '   ' → logprob: -15.338980674743652
    10. '">' → logprob: -15.588980674743652

Token 144: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0019286326132714748
    2. ' a' → logprob: -6.251928806304932
    3. '	a' → logprob: -18.751928329467773
    4. ' ' → logprob: -19.626928329467773
    5. '[a' → logprob: -19.626928329467773
    6. '(a' → logprob: -20.251928329467773
    7. '   ' → logprob: -20.376928329467773
    8. '
' → logprob: -21.126928329467773
    9. 'а' → logprob: -22.376928329467773
    10. '[' → logprob: -22.376928329467773

Token 145: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.1689596148207784e-05
    2. 'i' → logprob: -9.875051498413086
    3. '+' → logprob: -16.375051498413086
    4. '{i' → logprob: -16.750051498413086
    5. '[' → logprob: -17.000051498413086
    6. ' i' → logprob: -17.500051498413086
    7. 'a' → logprob: -18.375051498413086
    8. '[
' → logprob: -18.500051498413086
    9. '+i' → logprob: -18.500051498413086
    10. '```' → logprob: -18.875051498413086

Token 146: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.1008713702030946e-06
    2. '1' → logprob: -14.625001907348633
    3. '[i' → logprob: -14.750001907348633
    4. '＋' → logprob: -14.750001907348633
    5. '+i' → logprob: -15.000001907348633
    6. ' +' → logprob: -15.125001907348633
    7. ']+' → logprob: -15.875001907348633
    8. '+]' → logprob: -17.500001907348633
    9. '+
' → logprob: -18.125001907348633
    10. '   ' → logprob: -18.125001907348633

Token 147: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.749814019713085e-06
    2. '+' → logprob: -12.250006675720215
    3. ' ' → logprob: -14.125006675720215
    4. '１' → logprob: -14.125006675720215
    5. '```' → logprob: -16.50000762939453
    6. '2' → logprob: -16.87500762939453
    7. ']' → logprob: -17.06250762939453
    8. ']+' → logprob: -17.31250762939453
    9. '   ' → logprob: -17.87500762939453
    10. '0' → logprob: -18.00000762939453

Token 148: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.14476482570171356
    2. ']:
' → logprob: -2.5197649002075195
    3. ':' → logprob: -3.0197649002075195
    4. ']' → logprob: -5.8947649002075195
    5. ':
' → logprob: -6.5197649002075195
    6. ']:
' → logprob: -7.8947649002075195
    7. '           ' → logprob: -8.14476490020752
    8. '       ' → logprob: -8.51976490020752
    9. '):' → logprob: -9.89476490020752
    10. '               ' → logprob: -10.14476490020752

Token 149: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02088366635143757
    2. ' grow' → logprob: -4.145883560180664
    3. 'grow' → logprob: -5.770883560180664
    4. '           ' → logprob: -6.895883560180664
    5. ':
' → logprob: -8.020883560180664
    6. '```' → logprob: -8.895883560180664
    7. '       ' → logprob: -9.020883560180664
    8. ':' → logprob: -10.770883560180664
    9. '
' → logprob: -11.020883560180664
    10. '                
' → logprob: -11.020883560180664

Token 150: ' grow' (ID: 3839)
  Prédit: 'grow'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grow' (adapté à ' grow') → logprob: -0.061983488500118256
    2. ' grow' → logprob: -2.811983585357666
    3. 'True' → logprob: -11.311983108520508
    4. 'growth' → logprob: -13.311983108520508
    5. ' True' → logprob: -13.686983108520508
    6. 'Grow' → logprob: -15.561983108520508
    7. '           ' → logprob: -16.186983108520508
    8. '               ' → logprob: -16.186983108520508
    9. ' growth' → logprob: -16.186983108520508
    10. 'true' → logprob: -16.686983108520508

Token 151: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.531315314830863e-06
    2. '[' → logprob: -12.625003814697266
    3. ' [' → logprob: -16.250003814697266
    4. 'i' → logprob: -17.875003814697266
    5. '[I' → logprob: -18.125003814697266
    6. '```' → logprob: -18.375003814697266
    7. '[
' → logprob: -18.625003814697266
    8. '[g' → logprob: -19.250003814697266
    9. '[j' → logprob: -19.375003814697266
    10. '
' → logprob: -19.500003814697266

Token 152: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00019936825265176594
    2. ']=' → logprob: -9.250199317932129
    3. '[i' → logprob: -9.250199317932129
    4. '=' → logprob: -12.125199317932129
    5. ' ]' → logprob: -14.875199317932129
    6. '[' → logprob: -15.000199317932129
    7. ']
' → logprob: -15.250199317932129
    8. ']==' → logprob: -15.750199317932129
    9. '][' → logprob: -15.875199317932129
    10. '           ' → logprob: -16.125200271606445

Token 153: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004079470410943031
    2. ' =' → logprob: -5.504079341888428
    3. '＝' → logprob: -15.129079818725586
    4. '=True' → logprob: -15.254079818725586
    5. ']' → logprob: -15.504079818725586
    6. '[' → logprob: -15.754079818725586
    7. ']=' → logprob: -15.879079818725586
    8. '                   ' → logprob: -18.379079818725586
    9. '               ' → logprob: -18.379079818725586
    10. '=
' → logprob: -19.004079818725586

Token 154: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0485873706638813
    2. ' True' → logprob: -3.0485873222351074
    3. '(True' → logprob: -17.048587799072266
    4. '=True' → logprob: -18.673587799072266
    5. '.True' → logprob: -22.048587799072266
    6. 'False' → logprob: -23.048587799072266
    7. ' Tru' → logprob: -23.298587799072266
    8. '_true' → logprob: -23.423587799072266
    9. 'Tr' → logprob: -23.673587799072266
    10. '1' → logprob: -23.798587799072266

Token 155: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5569195747375488
    2. '   ' → logprob: -1.0569195747375488
    3. '    
' → logprob: -2.806919574737549
    4. '  
' → logprob: -4.806919574737549
    5. ' 
' → logprob: -5.306919574737549
    6. '<|end|>' → logprob: -5.931919574737549
    7. '\n' → logprob: -6.556919574737549
    8. '   
' → logprob: -7.806919574737549
    9. '

' → logprob: -8.30691909790039
    10. ')' → logprob: -8.68191909790039

Token 156: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007904118858277798
    2. '    
' → logprob: -5.882904052734375
    3. ' for' → logprob: -6.007904052734375
    4. 'for' → logprob: -6.757904052734375
    5. '
' → logprob: -7.382904052734375
    6. '  
' → logprob: -8.382904052734375
    7. ' if' → logprob: -9.007904052734375
    8. 'if' → logprob: -9.257904052734375
    9. '   
' → logprob: -9.382904052734375
    10. '  ' → logprob: -9.507904052734375

Token 157: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09975708276033401
    2. 'if' → logprob: -3.349757194519043
    3. '   ' → logprob: -3.474757194519043
    4. ' for' → logprob: -3.724757194519043
    5. 'a' → logprob: -6.349757194519043
    6. '#' (adapté à ' #') → logprob: -6.349757194519043
    7. 'time' → logprob: -7.599757194519043
    8. ' if' → logprob: -8.224757194519043
    9. 'new' → logprob: -9.099757194519043
    10. '    
' → logprob: -9.474757194519043

Token 158: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8088598251342773
    2. 'if' → logprob: -1.5588598251342773
    3. 'changed' → logprob: -1.6838598251342773
    4. 'any' → logprob: -2.4338598251342773
    5. 'a' → logprob: -3.8088598251342773
    6. 'all' → logprob: -4.183859825134277
    7. 'change' → logprob: -4.433859825134277
    8. ' for' → logprob: -5.183859825134277
    9. '#' → logprob: -5.808859825134277
    10. 'grow' → logprob: -6.058859825134277

Token 159: '伸' (ID: 118578)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.15145091712474823
    2. 'changed' → logprob: -3.0264508724212646
    3. 'for' → logprob: -3.2764508724212646
    4. 'any' → logprob: -3.5264508724212646
    5. 'all' → logprob: -4.651451110839844
    6. 'a' → logprob: -4.901451110839844
    7. 'new' → logprob: -6.151451110839844
    8. 'updated' → logprob: -6.901451110839844
    9. 'change' → logprob: -6.901451110839844
    10. 'max' → logprob: -7.276451110839844

Token 160: 'び' (ID: 58490)
  Prédit: 'び'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'び' → logprob: -0.020505690947175026
    2. '   ' → logprob: -4.770505905151367
    3. 'ば' → logprob: -5.020505905151367
    4. '長' → logprob: -5.395505905151367
    5. 'ぶ' → logprob: -8.770505905151367
    6. '[' → logprob: -9.395505905151367
    7. '```' → logprob: -9.770505905151367
    8. '　' → logprob: -9.895505905151367
    9. 'length' → logprob: -9.895505905151367
    10. 'for' → logprob: -10.020505905151367

Token 161: 'る' (ID: 6996)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.385603129863739
    2. '長' → logprob: -2.135603189468384
    3. 'す' → logprob: -2.635603189468384
    4. 'length' → logprob: -2.885603189468384
    5. 'る' → logprob: -3.635603189468384
    6. 's' → logprob: -4.510602951049805
    7. 'する' → logprob: -4.635602951049805
    8. 'し' → logprob: -5.760602951049805
    9. 'した' → logprob: -5.885602951049805
    10. '続' → logprob: -5.885602951049805

Token 162: 'つ' (ID: 18290)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.034535963088274
    2. ' for' → logprob: -3.4095358848571777
    3. 'a' → logprob: -7.284535884857178
    4. '[i' → logprob: -9.534536361694336
    5. ' lengths' → logprob: -10.034536361694336
    6. 'length' → logprob: -10.284536361694336
    7. '[' → logprob: -11.909536361694336
    8. ' a' → logprob: -12.159536361694336
    9. '   ' → logprob: -12.409536361694336
    10. '#' → logprob: -12.659536361694336

Token 163: 'ら' (ID: 8870)
  Prédit: 'ら'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ら' → logprob: -1.8908587662735954e-05
    2. '   ' → logprob: -11.500019073486328
    3. ' ' → logprob: -13.625019073486328
    4. 'る' → logprob: -13.750019073486328
    5. 'a' → logprob: -14.125019073486328
    6. 'r' → logprob: -14.250019073486328
    7. 's' → logprob: -14.625019073486328
    8. 'l' → logprob: -15.125019073486328
    9. '```' → logprob: -15.125019073486328
    10. '1' → logprob: -15.375019073486328

Token 164: 'ら' (ID: 8870)
  Prédit: 'ら'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ら' → logprob: -0.00014931005716789514
    2. '   ' → logprob: -8.875149726867676
    3. 'ra' → logprob: -12.750149726867676
    4. 'a' → logprob: -13.125149726867676
    5. ' ' → logprob: -13.875149726867676
    6. 'る' → logprob: -14.000149726867676
    7. '```' → logprob: -15.000149726867676
    8. 'lar' → logprob: -15.000149726867676
    9. 'la' → logprob: -15.125149726867676
    10. 'り' → logprob: -15.375149726867676

Token 165: 'が' (ID: 6632)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5816165208816528
    2. '=' → logprob: -1.5816165208816528
    3. ' =' → logprob: -2.2066164016723633
    4. ' for' → logprob: -3.0816164016723633
    5. 'の' → logprob: -3.5816164016723633
    6. 'が' → logprob: -4.581616401672363
    7. 'を' → logprob: -4.956616401672363
    8. 'で' → logprob: -5.081616401672363
    9. '[i' → logprob: -5.206616401672363
    10. 'は' → logprob: -5.831616401672363

Token 166: 'な' (ID: 5784)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.34636643528938293
    2. 'False' → logprob: -1.5963664054870605
    3. 'all' → logprob: -2.8463664054870605
    4. 'any' → logprob: -4.8463664054870605
    5. 'not' → logprob: -4.9713664054870605
    6. '1' → logprob: -5.3463664054870605
    7. ' False' → logprob: -5.4713664054870605
    8. 'True' → logprob: -5.7213664054870605
    9. '[]' → logprob: -6.3463664054870605
    10. 'sum' → logprob: -7.2213664054870605

Token 167: 'け' (ID: 15707)
  Prédit: 'い'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'い' → logprob: -0.009299946948885918
    2. 'し' → logprob: -4.8842997550964355
    3. 'く' → logprob: -7.5092997550964355
    4. 'かった' → logprob: -7.5092997550964355
    5. 'か' → logprob: -8.259300231933594
    6. 'いた' → logprob: -9.509300231933594
    7. 'さ' → logprob: -9.884300231933594
    8. 'ら' → logprob: -10.134300231933594
    9. 'i' → logprob: -10.759300231933594
    10. 'る' → logprob: -11.009300231933594

Token 168: 'れば' (ID: 139693)
  Prédit: 'れば'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'れば' → logprob: -0.1636880338191986
    2. 'る' → logprob: -2.5386879444122314
    3. 'ら' → logprob: -2.7886879444122314
    4. 'い' → logprob: -5.2886881828308105
    5. 'あ' → logprob: -6.9136881828308105
    6. 'た' → logprob: -7.1636881828308105
    7. 'が' → logprob: -7.5386881828308105
    8. 'な' → logprob: -7.5386881828308105
    9. 'ん' → logprob: -7.6636881828308105
    10. 'れ' → logprob: -7.7886881828308105

Token 169: '終' (ID: 65491)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18740226328372955
    2. 'break' → logprob: -1.9374022483825684
    3. ' break' → logprob: -4.062402248382568
    4. '       ' → logprob: -4.687402248382568
    5. '	break' → logprob: -8.062402725219727
    6. '           ' → logprob: -10.562402725219727
    7. '    ' → logprob: -10.562402725219727
    8. '  ' → logprob: -11.812402725219727
    9. '     ' → logprob: -12.187402725219727
    10. '```' → logprob: -12.437402725219727

Token 170: 'わ' (ID: 20473)
  Prédit: 'わ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'わ' → logprob: -0.3303767442703247
    2. 'break' → logprob: -1.7053767442703247
    3. '   ' → logprob: -3.830376625061035
    4. '           ' → logprob: -4.205376625061035
    5. '       ' → logprob: -4.205376625061035
    6. 'reak' → logprob: -4.455376625061035
    7. 'り' → logprob: -4.830376625061035
    8. 'る' → logprob: -5.080376625061035
    9. 'え' → logprob: -5.205376625061035
    10. '了' → logprob: -5.330376625061035

Token 171: 'り' (ID: 7297)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.03639722242951393
    2. 'る' → logprob: -3.7863972187042236
    3. '```' → logprob: -5.286397457122803
    4. 'わ' → logprob: -5.411397457122803
    5. 'り' → logprob: -7.411397457122803
    6. ' break' → logprob: -8.161396980285645
    7. '1' → logprob: -8.161396980285645
    8. '了' → logprob: -8.286396980285645
    9. '-break' → logprob: -8.411396980285645
    10. '0' → logprob: -8.536396980285645

Token 172: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00026169343618676066
    2. '
' → logprob: -8.875261306762695
    3. '    
' → logprob: -9.125261306762695
    4. ' if' → logprob: -12.000261306762695
    5. 'if' → logprob: -12.125261306762695
    6. '    ' → logprob: -15.125261306762695
    7. '       ' → logprob: -15.250261306762695
    8. '   
' → logprob: -16.000261306762695
    9. '```' → logprob: -16.125261306762695
    10. '  
' → logprob: -16.375261306762695

Token 173: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.696077227592468e-05
    2. ' if' → logprob: -10.125077247619629
    3. 'if' → logprob: -10.500077247619629
    4. '    
' → logprob: -12.125077247619629
    5. '
' → logprob: -12.875077247619629
    6. '    ' → logprob: -14.250077247619629
    7. '       ' → logprob: -14.875077247619629
    8. 'break' → logprob: -16.000076293945312
    9. '  ' → logprob: -16.125076293945312
    10. '```' → logprob: -16.750076293945312

Token 174: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0008882334805093706
    2. '   ' → logprob: -7.500888347625732
    3. ' if' → logprob: -8.000887870788574
    4. '```' → logprob: -17.50088882446289
    5. 'break' → logprob: -17.62588882446289
    6. '    
' → logprob: -18.25088882446289
    7. '
' → logprob: -18.50088882446289
    8. 'If' → logprob: -18.62588882446289
    9. '	if' → logprob: -18.62588882446289
    10. '  ' → logprob: -19.50088882446289

Token 175: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.12694668769836426
    2. 'not' → logprob: -2.1269466876983643
    3. ' all' → logprob: -11.376946449279785
    4. 'all' → logprob: -12.376946449279785
    5. ' sum' → logprob: -13.376946449279785
    6. 'sum' → logprob: -13.876946449279785
    7. ' ' → logprob: -15.251946449279785
    8. '   ' → logprob: -16.3769474029541
    9. '	not' → logprob: -16.5019474029541
    10. ' True' → logprob: -16.7519474029541

Token 176: ' any' (ID: 1062)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.0007099286303855479
    2. ' any' → logprob: -7.2507100105285645
    3. '(any' → logprob: -17.250709533691406
    4. 'all' → logprob: -18.125709533691406
    5. ''any' → logprob: -18.875709533691406
    6. 'True' → logprob: -19.000709533691406
    7. '_any' → logprob: -19.500709533691406
    8. 'Any' → logprob: -19.625709533691406
    9. ':any' → logprob: -20.625709533691406
    10. ' True' → logprob: -22.125709533691406

Token 177: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.0
    3. 'grow' → logprob: -17.375
    4. 'g' → logprob: -18.375
    5. '(i' → logprob: -19.0
    6. '[g' → logprob: -20.125
    7. '(
' → logprob: -20.5
    8. '((' → logprob: -20.625
    9. '(x' → logprob: -20.875
    10. ' (' → logprob: -21.0

Token 178: 'row' (ID: 843)
  Prédit: 'row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.00025204161647707224
    2. 'grow' → logprob: -8.500251770019531
    3. '(row' → logprob: -10.750251770019531
    4. 'ow' → logprob: -11.375251770019531
    5. '[row' → logprob: -12.500251770019531
    6. ' row' → logprob: -13.125251770019531
    7. 'rowth' → logprob: -13.125251770019531
    8. '(g' → logprob: -13.625251770019531
    9. '[' → logprob: -13.875251770019531
    10. 'rown' → logprob: -13.875251770019531

Token 179: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02463856339454651
    2. '):
' → logprob: -3.7746386528015137
    3. '()' → logprob: -7.274638652801514
    4. ')' → logprob: -8.274638175964355
    5. '():' → logprob: -8.274638175964355
    6. ' ):' → logprob: -9.399638175964355
    7. '()):
' → logprob: -9.899638175964355
    8. '():
' → logprob: -10.274638175964355
    9. '):
' → logprob: -11.399638175964355
    10. ':' → logprob: -13.274638175964355

Token 180: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005719788023270667
    2. '   ' → logprob: -7.500572204589844
    3. ' break' → logprob: -11.000572204589844
    4. '	break' → logprob: -14.625572204589844
    5. 'break' → logprob: -14.875572204589844
    6. '           ' → logprob: -14.875572204589844
    7. ':' → logprob: -15.000572204589844
    8. '     ' → logprob: -15.375572204589844
    9. '
' → logprob: -15.750572204589844
    10. '      ' → logprob: -16.000572204589844

Token 181: ' break' (ID: 2338)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21208016574382782
    2. '       ' → logprob: -1.9620801210403442
    3. ' break' → logprob: -3.212080240249634
    4. 'break' (adapté à ' break') → logprob: -4.587080001831055
    5. '	break' → logprob: -9.587080001831055
    6. '           ' → logprob: -12.837080001831055
    7. '_break' → logprob: -13.337080001831055
    8. '```' → logprob: -13.462080001831055
    9. '    ' → logprob: -13.712080001831055
    10. ' ' → logprob: -13.712080001831055

Token 182: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4592749774456024
    2. ' for' → logprob: -1.8342750072479248
    3. '
' → logprob: -2.459275007247925
    4. 'for' → logprob: -2.459275007247925
    5. '    
' → logprob: -3.334275007247925
    6. ' 
' → logprob: -7.459274768829346
    7. '  
' → logprob: -8.084275245666504
    8. '   
' → logprob: -8.459275245666504
    9. 'time' → logprob: -8.834275245666504
    10. '    ' → logprob: -9.084275245666504

Token 183: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8627567291259766
    2. 'for' → logprob: -0.8627567291259766
    3. ' for' → logprob: -1.8627567291259766
    4. '    
' → logprob: -7.487756729125977
    5. 'new' → logprob: -10.237756729125977
    6. '
' → logprob: -10.362756729125977
    7. ' new' → logprob: -10.487756729125977
    8. '	for' → logprob: -10.737756729125977
    9. '  ' → logprob: -10.862756729125977
    10. ' 
' → logprob: -11.237756729125977

Token 184: ' time' (ID: 1058)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0016370968660339713
    2. '   ' → logprob: -7.126636981964111
    3. ' for' → logprob: -7.126636981964111
    4. 'new' → logprob: -10.50163745880127
    5. 'time' (adapté à ' time') → logprob: -14.87663745880127
    6. 'temp' → logprob: -15.12663745880127
    7. '    
' → logprob: -15.50163745880127
    8. '	for' → logprob: -15.75163745880127
    9. 'next' → logprob: -15.75163745880127
    10. 'tmp' → logprob: -16.001636505126953

Token 185: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.008616108447313309
    2. '+=' → logprob: -4.758615970611572
    3. '+' → logprob: -14.38361644744873
    4. '=' → logprob: -14.88361644744873
    5. ' -=' → logprob: -15.13361644744873
    6. ' =' → logprob: -15.75861644744873
    7. ']+=' → logprob: -16.633615493774414
    8. '   ' → logprob: -16.883615493774414
    9. ' +' → logprob: -17.883615493774414
    10. ' ' → logprob: -18.133615493774414

Token 186: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017958412354346365
    2. ' ' → logprob: -8.625179290771484
    3. '１' → logprob: -18.625179290771484
    4. '10' → logprob: -18.937679290771484
    5. '   ' → logprob: -19.125179290771484
    6. '2' → logprob: -19.437679290771484
    7. 's' → logprob: -19.812679290771484
    8. '01' → logprob: -19.812679290771484
    9. '100' → logprob: -19.812679290771484
    10. 'a' → logprob: -20.062679290771484

Token 187: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '2' → logprob: -17.250001907348633
    4. '１' → logprob: -18.062501907348633
    5. '   ' → logprob: -18.375001907348633
    6. '0' → logprob: -18.875001907348633
    7. '10' → logprob: -18.937501907348633
    8. 'a' → logprob: -19.125001907348633
    9. '```' → logprob: -19.125001907348633
    10. '3' → logprob: -19.625001907348633

Token 188: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6698040962219238
    2. ' for' → logprob: -1.2948040962219238
    3. 'for' → logprob: -1.7948040962219238
    4. '    
' → logprob: -3.419804096221924
    5. '
' → logprob: -4.419804096221924
    6. ' 
' → logprob: -6.294804096221924
    7. ' new' → logprob: -7.544804096221924
    8. 'new' → logprob: -8.544803619384766
    9. '     
' → logprob: -8.794803619384766
    10. '   
' → logprob: -9.044803619384766

Token 189: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4804295003414154
    2. ' for' → logprob: -1.1054295301437378
    3. '   ' → logprob: -3.1054294109344482
    4. 'new' → logprob: -5.730429649353027
    5. ' new' → logprob: -6.105429649353027
    6. '    
' → logprob: -10.480429649353027
    7. 'temp' → logprob: -10.730429649353027
    8. 'next' → logprob: -10.855429649353027
    9. 'b' → logprob: -10.980429649353027
    10. 'tmp' → logprob: -11.105429649353027

Token 190: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0021170699037611485
    2. 'new' → logprob: -6.877117156982422
    3. ' for' → logprob: -7.377117156982422
    4. '   ' → logprob: -7.752117156982422
    5. 'next' → logprob: -11.252117156982422
    6. 'b' → logprob: -12.002117156982422
    7. 'tmp' → logprob: -12.252117156982422
    8. 'temp' → logprob: -12.752117156982422
    9. ' new' → logprob: -13.502117156982422
    10. 'a' → logprob: -15.252117156982422

Token 191: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005220713559538126
    2. ' for' → logprob: -5.505220890045166
    3. 'new' → logprob: -6.880220890045166
    4. 'a' → logprob: -10.130220413208008
    5. 'tmp' → logprob: -10.755220413208008
    6. 'b' → logprob: -10.880220413208008
    7. ' new' → logprob: -11.255220413208008
    8. 'next' → logprob: -11.755220413208008
    9. 'temp' → logprob: -12.130220413208008
    10. '   ' → logprob: -12.130220413208008

Token 192: 'つ' (ID: 18290)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008223525248467922
    2. 'new' → logprob: -4.883223533630371
    3. 'a' → logprob: -8.133223533630371
    4. 'b' → logprob: -9.133223533630371
    5. ' for' → logprob: -9.633223533630371
    6. 'tmp' → logprob: -9.758223533630371
    7. 'temp' → logprob: -10.008223533630371
    8. 'next' → logprob: -10.008223533630371
    9. 'updated' → logprob: -14.133223533630371
    10. ' new' → logprob: -14.758223533630371

Token 193: 'ら' (ID: 8870)
  Prédit: 'ら'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ら' → logprob: -0.10079466551542282
    2. 'for' → logprob: -2.850794553756714
    3. '   ' → logprob: -4.100794792175293
    4. 'r' → logprob: -5.350794792175293
    5. 's' → logprob: -5.350794792175293
    6. ' for' → logprob: -5.475794792175293
    7. 'a' → logprob: -5.725794792175293
    8. '=' → logprob: -7.600794792175293
    9. ' =' → logprob: -7.600794792175293
    10. 'ra' → logprob: -7.725794792175293

Token 194: 'ら' (ID: 8870)
  Prédit: 'ら'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ら' → logprob: -0.010268430225551128
    2. '   ' → logprob: -4.885268211364746
    3. 'ral' → logprob: -6.885268211364746
    4. 'a' → logprob: -7.635268211364746
    5. 'r' → logprob: -7.760268211364746
    6. 'ra' → logprob: -8.135268211364746
    7. 'al' → logprob: -9.885268211364746
    8. 's' → logprob: -10.260268211364746
    9. ' ' → logprob: -10.385268211364746
    10. 'rale' → logprob: -10.510268211364746

Token 195: 'を' (ID: 7277)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2854893207550049
    2. ' =' → logprob: -1.4104893207550049
    3. 'for' → logprob: -6.035489082336426
    4. '=[' → logprob: -7.410489082336426
    5. ' for' → logprob: -8.035489082336426
    6. '＝' → logprob: -8.160489082336426
    7. '_new' → logprob: -8.785489082336426
    8. '[i' → logprob: -9.160489082336426
    9. '_=' → logprob: -9.660489082336426
    10. 'の' → logprob: -9.785489082336426

Token 196: '伸' (ID: 118578)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.16063950955867767
    2. '[' → logprob: -2.660639524459839
    3. '[g' → logprob: -3.035639524459839
    4. 'a' → logprob: -4.16063928604126
    5. '[i' → logprob: -5.16063928604126
    6. 'grow' → logprob: -5.28563928604126
    7. ' [' → logprob: -5.78563928604126
    8. '[x' → logprob: -8.910639762878418
    9. '[len' → logprob: -9.285639762878418
    10. 'g' → logprob: -9.285639762878418

Token 197: 'ば' (ID: 25540)
  Prédit: 'ば'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ば' → logprob: -0.04565669596195221
    2. 'び' → logprob: -3.420656681060791
    3. '   ' → logprob: -4.920656681060791
    4. 'a' → logprob: -6.670656681060791
    5. 'ら' → logprob: -7.170656681060791
    6. 'b' → logprob: -7.170656681060791
    7. '[i' → logprob: -8.17065715789795
    8. '[' → logprob: -8.54565715789795
    9. '長' → logprob: -8.54565715789795
    10. 'for' → logprob: -8.54565715789795

Token 198: 'す' (ID: 4868)
  Prédit: 'す'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'す' → logprob: -0.13108262419700623
    2. '[' → logprob: -2.756082534790039
    3. 'for' → logprob: -3.881082534790039
    4. 'して' → logprob: -4.131082534790039
    5. 'し' → logprob: -4.631082534790039
    6. 'ば' → logprob: -6.256082534790039
    7. '=' → logprob: -6.381082534790039
    8. 'length' → logprob: -6.506082534790039
    9. '[i' → logprob: -6.631082534790039
    10. 'a' → logprob: -6.881082534790039

Token 199: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.43885907530784607
    2. ' for' → logprob: -1.0638591051101685
    3. '   ' → logprob: -4.688858985900879
    4. '
' → logprob: -7.438858985900879
    5. '    
' → logprob: -8.563858985900879
    6. '	for' → logprob: -10.063858985900879
    7. ' 
' → logprob: -10.813858985900879
    8. '```' → logprob: -11.313858985900879
    9. '  
' → logprob: -11.688858985900879
    10. ' new' → logprob: -11.688858985900879

Token 200: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6416378617286682
    2. ' for' → logprob: -0.7666378617286682
    3. '   ' → logprob: -4.766637802124023
    4. '
' → logprob: -8.266637802124023
    5. '    
' → logprob: -9.391637802124023
    6. ' 
' → logprob: -9.766637802124023
    7. '	for' → logprob: -10.391637802124023
    8. '```' → logprob: -11.266637802124023
    9. 'a' → logprob: -11.641637802124023
    10. '[' → logprob: -12.016637802124023

Token 201: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.013721372932195663
    2. ' for' → logprob: -4.388721466064453
    3. 'new' → logprob: -6.888721466064453
    4. '   ' → logprob: -9.513721466064453
    5. ' new' → logprob: -9.513721466064453
    6. 'b' → logprob: -10.638721466064453
    7. 'a' → logprob: -12.013721466064453
    8. 'next' → logprob: -12.138721466064453
    9. 'tmp' → logprob: -12.263721466064453
    10. 'temp' → logprob: -12.763721466064453

Token 202: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.029751179739832878
    2. ' i' → logprob: -3.5297510623931885
    3. ' ' → logprob: -15.02975082397461
    4. '	i' → logprob: -15.40475082397461
    5. '   ' → logprob: -16.77975082397461
    6. '_i' → logprob: -17.27975082397461
    7. '  ' → logprob: -18.02975082397461
    8. 'j' → logprob: -18.52975082397461
    9. '(i' → logprob: -18.65475082397461
    10. '```' → logprob: -19.15475082397461

Token 203: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04860168322920799
    2. 'in' → logprob: -3.0486016273498535
    3. ' ' → logprob: -12.048602104187012
    4. ',' → logprob: -12.548602104187012
    5. '   ' → logprob: -13.923602104187012
    6. '	in' → logprob: -14.048602104187012
    7. '```' → logprob: -14.548602104187012
    8. 'In' → logprob: -14.798602104187012
    9. '  ' → logprob: -15.048602104187012
    10. 's' → logprob: -15.048602104187012

Token 204: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004883344518020749
    2. ' range' → logprob: -7.62548828125
    3. '(range' → logprob: -15.75048828125
    4. '[' → logprob: -15.87548828125
    5. '   ' → logprob: -17.25048828125
    6. '	range' → logprob: -17.25048828125
    7. 'r' → logprob: -17.50048828125
    8. '```' → logprob: -17.75048828125
    9. 'in' → logprob: -18.00048828125
    10. ' ' → logprob: -18.25048828125

Token 205: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.25196483731269836
    2. 'N' → logprob: -1.501964807510376
    3. '   ' → logprob: -11.001964569091797
    4. '(' → logprob: -11.501964569091797
    5. ' N' → logprob: -12.376964569091797
    6. '	N' → logprob: -13.501964569091797
    7. 'len' → logprob: -14.001964569091797
    8. ',N' → logprob: -14.501964569091797
    9. '
' → logprob: -14.751964569091797
    10. ')' → logprob: -14.876964569091797

Token 206: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.38721102476119995
    2. '):
' → logprob: -1.1372110843658447
    3. '):
' → logprob: -8.137210845947266
    4. ' ):' → logprob: -10.387210845947266
    5. ' ):
' → logprob: -11.262210845947266
    6. '):

' → logprob: -13.512210845947266
    7. ')' → logprob: -14.387210845947266
    8. ':' → logprob: -14.762210845947266
    9. '-' → logprob: -15.012210845947266
    10. '   ' → logprob: -15.137210845947266

Token 207: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007375073153525591
    2. '   ' → logprob: -6.007375240325928
    3. ' if' → logprob: -6.007375240325928
    4. 'a' → logprob: -6.382375240325928
    5. 'if' → logprob: -7.382375240325928
    6. ' a' → logprob: -9.25737476348877
    7. '```' → logprob: -12.13237476348877
    8. '           ' → logprob: -12.25737476348877
    9. ' ' → logprob: -13.63237476348877
    10. '        
' → logprob: -13.75737476348877

Token 208: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07593807578086853
    2. '       ' → logprob: -2.9509379863739014
    3. ' if' → logprob: -4.4509382247924805
    4. '   ' → logprob: -4.7009382247924805
    5. '           ' → logprob: -9.82593822479248
    6. '	if' → logprob: -11.20093822479248
    7. ' ' → logprob: -11.57593822479248
    8. 'a' → logprob: -13.70093822479248
    9. '  ' → logprob: -13.95093822479248
    10. '     ' → logprob: -14.57593822479248

Token 209: ' grow' (ID: 3839)
  Prédit: 'grow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grow' → logprob: -0.020549597218632698
    2. ' grow' → logprob: -3.8955495357513428
    3. '   ' → logprob: -12.395549774169922
    4. ' ' → logprob: -13.895549774169922
    5. 'growth' → logprob: -13.895549774169922
    6. 'grown' → logprob: -14.145549774169922
    7. 'g' → logprob: -15.395549774169922
    8. 'a' → logprob: -16.145549774169922
    9. 'not' → logprob: -16.520549774169922
    10. '       ' → logprob: -16.645549774169922

Token 210: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.625
    3. ' [' → logprob: -19.25
    4. 'i' → logprob: -19.25
    5. '[I' → logprob: -19.25
    6. '```' → logprob: -19.875
    7. ')[' → logprob: -20.0
    8. '[N' → logprob: -20.75
    9. '[j' → logprob: -20.75
    10. '
' → logprob: -21.375

Token 211: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.576097846031189
    2. ']:
' → logprob: -0.826097846031189
    3. ']' → logprob: -9.57609748840332
    4. ']:
' → logprob: -9.57609748840332
    5. ']:

' → logprob: -11.95109748840332
    6. ']==' → logprob: -12.07609748840332
    7. ' ]' → logprob: -12.20109748840332
    8. ']>' → logprob: -14.07609748840332
    9. ']=' → logprob: -14.57609748840332
    10. ']:


' → logprob: -14.95109748840332

Token 212: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4730921685695648
    2. 'a' → logprob: -1.4730921983718872
    3. ' a' → logprob: -2.0980920791625977
    4. '       ' → logprob: -3.7230920791625977
    5. '   ' → logprob: -7.098092079162598
    6. '	a' → logprob: -11.848092079162598
    7. '0' → logprob: -12.098092079162598
    8. ' ' → logprob: -12.973092079162598
    9. ',a' → logprob: -12.973092079162598
    10. '```' → logprob: -13.348092079162598

Token 213: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.026447756215929985
    2. ' a' → logprob: -3.6514477729797363
    3. '           ' → logprob: -9.276447296142578
    4. '   ' → logprob: -10.151447296142578
    5. '       ' → logprob: -11.651447296142578
    6. 'if' → logprob: -13.776447296142578
    7. 'L' → logprob: -13.776447296142578
    8. '	a' → logprob: -13.776447296142578
    9. ' L' → logprob: -14.151447296142578
    10. ' ' → logprob: -14.526447296142578

Token 214: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. '[' → logprob: -17.875
    3. '[a' → logprob: -18.625
    4. '```' → logprob: -19.25
    5. ' [' → logprob: -19.625
    6. '[j' → logprob: -20.0
    7. 'i' → logprob: -20.125
    8. '[I' → logprob: -21.625
    9. '[ii' → logprob: -22.0
    10. '\[' → logprob: -22.125

Token 215: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0013278567930683494
    2. ']+=' → logprob: -6.626327991485596
    3. ' ]' → logprob: -14.376327514648438
    4. ']-' → logprob: -14.626327514648438
    5. ')' → logprob: -15.501327514648438
    6. ']+' → logprob: -15.751327514648438
    7. '[i' → logprob: -15.876327514648438
    8. '[' → logprob: -16.376327514648438
    9. '```' → logprob: -16.376327514648438
    10. ']
' → logprob: -16.751327514648438

Token 216: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.24833638966083527
    2. '-=' → logprob: -1.7483364343643188
    3. ' +=' → logprob: -3.3733363151550293
    4. ' -=' → logprob: -4.498336315155029
    5. '=' → logprob: -8.248336791992188
    6. '-' → logprob: -8.748336791992188
    7. ']+=' → logprob: -11.748336791992188
    8. '*=' → logprob: -13.123336791992188
    9. '>' → logprob: -13.498336791992188
    10. ' =' → logprob: -13.623336791992188

Token 217: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.17977580428123474
    2. 'L' → logprob: -1.8047758340835571
    3. ' L' → logprob: -11.054776191711426
    4. ' ' → logprob: -11.929776191711426
    5. '2' → logprob: -12.179776191711426
    6. 'l' → logprob: -13.679776191711426
    7. 'a' → logprob: -14.554776191711426
    8. '   ' → logprob: -14.804776191711426
    9. '-' → logprob: -15.554776191711426
    10. '10' → logprob: -15.804776191711426

Token 218: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015112892724573612
    2. 'L' → logprob: -6.501511096954346
    3. '2' → logprob: -12.501511573791504
    4. ' ' → logprob: -12.501511573791504
    5. ' L' → logprob: -15.251511573791504
    6. 'l' → logprob: -15.251511573791504
    7. '10' → logprob: -15.501511573791504
    8. 'a' → logprob: -15.501511573791504
    9. '   ' → logprob: -16.126510620117188
    10. 'int' → logprob: -16.376510620117188

Token 219: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 220: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007474447484128177
    2. '<|end|>' → logprob: -7.5007476806640625
    3. ' print' → logprob: -9.625747680664062
    4. ')' → logprob: -10.375747680664062
    5. '```' → logprob: -10.500747680664062
    6. 'if' → logprob: -10.750747680664062
    7. 'for' → logprob: -10.875747680664062
    8. 'a' → logprob: -11.750747680664062
    9. '#' → logprob: -12.000747680664062
    10. '
' → logprob: -12.250747680664062

Token 221: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02683800831437111
    2. '<|end|>' → logprob: -4.5268378257751465
    3. 'if' → logprob: -5.1518378257751465
    4. 'a' → logprob: -6.0268378257751465
    5. ')' → logprob: -6.1518378257751465
    6. ' if' → logprob: -6.4018378257751465
    7. 'for' → logprob: -6.4018378257751465
    8. '#' (adapté à ' #') → logprob: -7.4018378257751465
    9. ' print' → logprob: -7.9018378257751465
    10. '```' → logprob: -8.151838302612305

Token 222: ' ' (ID: 220)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7958922982215881
    2. 'print' → logprob: -0.7958922982215881
    3. 'for' → logprob: -2.7958922386169434
    4. 'a' → logprob: -4.295892238616943
    5. 'max' → logprob: -4.795892238616943
    6. 'pass' → logprob: -5.295892238616943
    7. ' if' → logprob: -6.045892238616943
    8. 'min' → logprob: -6.545892238616943
    9. 'continue' → logprob: -6.545892238616943
    10. '#' → logprob: -6.670892238616943

Token 223: 'つ' (ID: 18290)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08785010874271393
    2. 'print' → logprob: -2.5878500938415527
    3. 'for' → logprob: -5.087850093841553
    4. 'a' → logprob: -6.212850093841553
    5. 'max' → logprob: -8.087850570678711
    6. ' if' → logprob: -8.712850570678711
    7. 'L' → logprob: -9.087850570678711
    8. '#' → logprob: -9.837850570678711
    9. '   ' → logprob: -10.212850570678711
    10. '```' → logprob: -11.212850570678711

Token 224: 'ら' (ID: 8870)
  Prédit: 'ら'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ら' → logprob: -0.7463541626930237
    2. 'a' → logprob: -1.496354103088379
    3. '   ' → logprob: -1.621354103088379
    4. 'r' → logprob: -3.371354103088379
    5. '[i' → logprob: -3.746354103088379
    6. ' a' → logprob: -4.371354103088379
    7. 'if' → logprob: -5.496354103088379
    8. ' if' → logprob: -5.621354103088379
    9. 'ラ' → logprob: -6.121354103088379
    10. 'elif' → logprob: -6.371354103088379

Token 225: 'ら' (ID: 8870)
  Prédit: 'ら'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ら' → logprob: -0.04424217343330383
    2. '   ' → logprob: -3.6692421436309814
    3. 'ラ' → logprob: -4.5442423820495605
    4. 'a' → logprob: -5.7942423820495605
    5. 'r' → logprob: -6.4192423820495605
    6. 'ra' → logprob: -6.9192423820495605
    7. 'ral' → logprob: -7.9192423820495605
    8. 'ala' → logprob: -8.669241905212402
    9. 'l' → logprob: -8.794241905212402
    10. '    ' → logprob: -9.294241905212402

Token 226: 'が' (ID: 6632)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13482411205768585
    2. ' =' → logprob: -2.13482403755188
    3. '[i' → logprob: -6.634824275970459
    4. '   ' → logprob: -6.884824275970459
    5. '.sort' → logprob: -6.884824275970459
    6. '[' → logprob: -7.134824275970459
    7. '=[' → logprob: -7.509824275970459
    8. '_lengths' → logprob: -7.509824275970459
    9. 'が' → logprob: -7.884824275970459
    10. 's' → logprob: -8.0098237991333

Token 227: '折' (ID: 65246)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' L' → logprob: -1.130474328994751
    2. '[i' → logprob: -1.380474328994751
    3. 'L' → logprob: -2.005474328994751
    4. '[' → logprob: -2.380474328994751
    5. '>' → logprob: -3.005474328994751
    6. ' i' → logprob: -3.505474328994751
    7. ' a' → logprob: -3.630474328994751
    8. 'a' → logprob: -3.755474328994751
    9. ' [' → logprob: -4.005474090576172
    10. ' ' → logprob: -4.380474090576172

Token 228: 'れる' (ID: 177495)
  Prédit: 'れる'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'れる' → logprob: -0.10021001845598221
    2. 'れ' → logprob: -2.350209951400757
    3. 'れて' → logprob: -12.975210189819336
    4. 'る' → logprob: -14.475210189819336
    5. 'け' → logprob: -15.350210189819336
    6. ' \xe3\x82' → logprob: -16.225210189819336
    7. 'ら' → logprob: -16.725210189819336
    8. '   ' → logprob: -16.850210189819336
    9. 'り' → logprob: -17.475210189819336
    10. 'える' → logprob: -18.225210189819336

Token 229: '判' (ID: 47257)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.041113950312137604
    2. ' for' → logprob: -3.29111385345459
    3. 'for' → logprob: -5.79111385345459
    4. '       ' → logprob: -12.16611385345459
    5. '	for' → logprob: -12.16611385345459
    6. ' ' → logprob: -14.16611385345459
    7. '  ' → logprob: -14.29111385345459
    8. '
' → logprob: -14.91611385345459
    9. '    
' → logprob: -15.04111385345459
    10. ' while' → logprob: -15.91611385345459

Token 230: '定' (ID: 8745)
  Prédit: '定'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '定' → logprob: -0.009164704941213131
    2. '断' → logprob: -4.759164810180664
    3. '```' → logprob: -8.759164810180664
    4. '   ' → logprob: -9.009164810180664
    5. 'break' → logprob: -9.259164810180664
    6. 'if' → logprob: -10.134164810180664
    7. '段' → logprob: -10.509164810180664
    8. '\xe6\x96' → logprob: -10.634164810180664
    9. '別' → logprob: -11.009164810180664
    10. '#' → logprob: -11.009164810180664

Token 231: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3414853513240814
    2. 'for' → logprob: -1.3414853811264038
    3. '   ' → logprob: -3.5914852619171143
    4. ' break' → logprob: -9.091485023498535
    5. 'break' → logprob: -9.466485023498535
    6. 'if' → logprob: -10.966485023498535
    7. ' if' → logprob: -11.341485023498535
    8. ' i' → logprob: -11.966485023498535
    9. '	for' → logprob: -11.966485023498535
    10. 'b' → logprob: -11.966485023498535

Token 232: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6436901688575745
    2. 'for' → logprob: -0.7686901688575745
    3. '   ' → logprob: -4.64369010925293
    4. 'break' → logprob: -7.14369010925293
    5. ' break' → logprob: -8.14369010925293
    6. 'if' → logprob: -9.01869010925293
    7. '```' → logprob: -9.76869010925293
    8. ' if' → logprob: -10.14369010925293
    9. 'b' → logprob: -11.01869010925293
    10. '	for' → logprob: -11.51869010925293

Token 233: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03988628089427948
    2. ' for' → logprob: -3.289886236190796
    3. 'break' → logprob: -6.539886474609375
    4. '   ' → logprob: -8.664886474609375
    5. 'broken' → logprob: -9.789886474609375
    6. 'b' → logprob: -10.039886474609375
    7. ' break' → logprob: -10.289886474609375
    8. 'fold' → logprob: -10.664886474609375
    9. 'breaker' → logprob: -11.414886474609375
    10. 'new' → logprob: -11.539886474609375

Token 234: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3868953287601471
    2. ' i' → logprob: -1.1368952989578247
    3. '	i' → logprob: -12.011895179748535
    4. 'range' → logprob: -12.261895179748535
    5. '_i' → logprob: -13.324395179748535
    6. '(i' → logprob: -13.699395179748535
    7. 'a' → logprob: -13.761895179748535
    8. ')' → logprob: -13.761895179748535
    9. ' ' → logprob: -13.824395179748535
    10. ' range' → logprob: -14.324395179748535

Token 235: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03368915617465973
    2. 'in' → logprob: -3.408689260482788
    3. 'range' → logprob: -11.158689498901367
    4. '   ' → logprob: -11.408689498901367
    5. ' ' → logprob: -11.658689498901367
    6. ',' → logprob: -12.408689498901367
    7. ' range' → logprob: -12.908689498901367
    8. '  ' → logprob: -14.533689498901367
    9. 'i' → logprob: -14.783689498901367
    10. ' i' → logprob: -15.533689498901367

Token 236: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.016036715358495712
    2. ' range' → logprob: -4.141036510467529
    3. '(range' → logprob: -13.516036987304688
    4. '   ' → logprob: -15.391036987304688
    5. '[' → logprob: -15.516036987304688
    6. '	range' → logprob: -15.516036987304688
    7. ' ' → logprob: -15.891036987304688
    8. ')' → logprob: -16.766036987304688
    9. '
' → logprob: -17.016036987304688
    10. 'r' → logprob: -17.141036987304688

Token 237: '(N' (ID: 10564)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04312000051140785
    2. ' range' → logprob: -3.2931199073791504
    3. 'N' → logprob: -5.66811990737915
    4. '(N' → logprob: -6.54311990737915
    5. '(range' → logprob: -8.793120384216309
    6. '   ' → logprob: -12.043120384216309
    7. ')' → logprob: -12.418120384216309
    8. 'Range' → logprob: -12.543120384216309
    9. ' N' → logprob: -13.418120384216309
    10. 'in' → logprob: -13.918120384216309

Token 238: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.19785219430923462
    2. '):' → logprob: -1.8228521347045898
    3. '-' → logprob: -4.07285213470459
    4. ' -' → logprob: -7.32285213470459
    5. '   ' → logprob: -8.82285213470459
    6. '):
' → logprob: -9.94785213470459
    7. ' ' → logprob: -11.32285213470459
    8. '):

' → logprob: -11.57285213470459
    9. '       ' → logprob: -12.19785213470459
    10. ' ):
' → logprob: -12.19785213470459

Token 239: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010010129772126675
    2. ' if' → logprob: -7.126000881195068
    3. '   ' → logprob: -9.251001358032227
    4. ':' → logprob: -10.376001358032227
    5. '```' → logprob: -10.876001358032227
    6. 'if' → logprob: -11.376001358032227
    7. ':
' → logprob: -11.626001358032227
    8. ',' → logprob: -12.126001358032227
    9. ' and' → logprob: -12.251001358032227
    10. ' ' → logprob: -12.751001358032227

Token 240: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.39716267585754395
    2. ' if' → logprob: -1.397162675857544
    3. '   ' → logprob: -2.772162675857544
    4. '       ' → logprob: -4.022162437438965
    5. '           ' → logprob: -11.522162437438965
    6. ' ' → logprob: -11.647162437438965
    7. '    ' → logprob: -12.397162437438965
    8. '
' → logprob: -12.772162437438965
    9. '	if' → logprob: -12.772162437438965
    10. '  ' → logprob: -13.022162437438965

Token 241: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.18047331273555756
    2. 'a' → logprob: -1.8054733276367188
    3. ' grow' → logprob: -8.555473327636719
    4. ' i' → logprob: -8.805473327636719
    5. ' ' → logprob: -9.430473327636719
    6. ' time' → logprob: -9.555473327636719
    7. ' not' → logprob: -9.930473327636719
    8. 'grow' → logprob: -9.930473327636719
    9. 'i' → logprob: -10.305473327636719
    10. 'time' → logprob: -10.742973327636719

Token 242: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.988221684878226e-06
    2. '[' → logprob: -12.000006675720215
    3. 'i' → logprob: -15.375006675720215
    4. ' [' → logprob: -15.875006675720215
    5. '   ' → logprob: -16.25000762939453
    6. '[
' → logprob: -16.37500762939453
    7. '[a' → logprob: -16.62500762939453
    8. ')' → logprob: -16.87500762939453
    9. '```' → logprob: -17.00000762939453
    10. ']' → logprob: -17.12500762939453

Token 243: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03269074112176895
    2. ']>=' → logprob: -4.407690525054932
    3. ']>' → logprob: -4.657690525054932
    4. ' >' → logprob: -5.657690525054932
    5. '>' → logprob: -5.657690525054932
    6. ' ]' → logprob: -7.032690525054932
    7. ']==' → logprob: -7.157690525054932
    8. ' -' → logprob: -7.407690525054932
    9. '-' → logprob: -7.782690525054932
    10. ' >=' → logprob: -8.03269100189209

Token 244: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.4897574484348297
    2. '>' → logprob: -1.1147574186325073
    3. ' >=' → logprob: -3.114757537841797
    4. '>=' → logprob: -4.239757537841797
    5. ' <' → logprob: -8.864757537841797
    6. ' ' → logprob: -9.489757537841797
    7. '<' → logprob: -9.739757537841797
    8. ' ==' → logprob: -9.739757537841797
    9. '==' → logprob: -10.239757537841797
    10. '>L' → logprob: -10.864757537841797

Token 245: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.00091217877343297
    2. ' L' → logprob: -7.000912189483643
    3. '   ' → logprob: -15.125911712646484
    4. ' ' → logprob: -16.000911712646484
    5. '	L' → logprob: -16.000911712646484
    6. '>L' → logprob: -16.750911712646484
    7. '2' → logprob: -18.000911712646484
    8. 'a' → logprob: -18.125911712646484
    9. '  ' → logprob: -18.375911712646484
    10. '[L' → logprob: -18.750911712646484

Token 246: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01666869968175888
    2. ':
' → logprob: -4.516668796539307
    3. ' and' → logprob: -5.266668796539307
    4. 'and' → logprob: -8.266668319702148
    5. '):' → logprob: -9.766668319702148
    6. ' :' → logprob: -9.766668319702148
    7. '       ' → logprob: -10.891668319702148
    8. '   ' → logprob: -11.266668319702148
    9. ' or' → logprob: -11.766668319702148
    10. '):
' → logprob: -12.266668319702148

Token 247: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13709482550621033
    2. ' a' → logprob: -2.637094736099243
    3. 'a' → logprob: -3.137094736099243
    4. '       ' → logprob: -4.387094974517822
    5. '=' → logprob: -8.887094497680664
    6. '   ' → logprob: -9.012094497680664
    7. ' =' → logprob: -9.137094497680664
    8. ' and' → logprob: -9.262094497680664
    9. '0' → logprob: -10.137094497680664
    10. '               ' → logprob: -11.012094497680664

Token 248: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.017778081819415092
    2. 'print' → logprob: -4.392777919769287
    3. 'time' → logprob: -5.642777919769287
    4. ' a' → logprob: -6.642777919769287
    5. '   ' → logprob: -8.767778396606445
    6. 'break' → logprob: -9.267778396606445
    7. 'if' → logprob: -10.392778396606445
    8. 'grow' → logprob: -10.392778396606445
    9. '           ' → logprob: -10.642778396606445
    10. ' time' → logprob: -10.767778396606445

Token 249: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.584239938296378e-06
    2. '[' → logprob: -11.875007629394531
    3. 'i' → logprob: -15.625007629394531
    4. '=' → logprob: -16.12500762939453
    5. '           ' → logprob: -16.37500762939453
    6. '       ' → logprob: -16.75000762939453
    7. ' =' → logprob: -16.87500762939453
    8. '(i' → logprob: -17.75000762939453
    9. '=i' → logprob: -17.75000762939453
    10. '[I' → logprob: -17.87500762939453

Token 250: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012619240209460258
    2. ']=' → logprob: -4.8876190185546875
    3. '[i' → logprob: -5.8876190185546875
    4. '=' → logprob: -6.6376190185546875
    5. ']==' → logprob: -7.5126190185546875
    6. ']>=' → logprob: -9.262619018554688
    7. ']+=' → logprob: -9.387619018554688
    8. ' ]' → logprob: -9.512619018554688
    9. ' =' → logprob: -10.012619018554688
    10. '[' → logprob: -10.762619018554688

Token 251: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.033651694655418396
    2. ' =' → logprob: -3.40865159034729
    3. '-=' → logprob: -12.533651351928711
    4. '＝' → logprob: -13.783651351928711
    5. ' -=' → logprob: -14.408651351928711
    6. '+=' → logprob: -16.03365135192871
    7. '//=' → logprob: -16.03365135192871
    8. ',' → logprob: -16.15865135192871
    9. '=
' → logprob: -16.40865135192871
    10. ' ' → logprob: -16.53365135192871

Token 252: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018220659694634378
    2. '-' → logprob: -9.000182151794434
    3. 'L' → logprob: -10.125182151794434
    4. ' ' → logprob: -11.250182151794434
    5. 'a' → logprob: -13.250182151794434
    6. 'float' → logprob: -14.000182151794434
    7. '100' → logprob: -14.250182151794434
    8. ' -' → logprob: -14.375182151794434
    9. '1' → logprob: -15.125182151794434
    10. '999' → logprob: -15.125182151794434

Token 253: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007514976896345615
    2. '-' → logprob: -7.875751495361328
    3. 'L' → logprob: -8.000751495361328
    4. 'a' → logprob: -11.250751495361328
    5. 'float' → logprob: -12.250751495361328
    6. ' ' → logprob: -12.500751495361328
    7. '-L' → logprob: -12.750751495361328
    8. 'time' → logprob: -12.875751495361328
    9. '100' → logprob: -13.750751495361328
    10. '1' → logprob: -13.938251495361328

Token 254: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1889655739068985
    2. '<|end|>' → logprob: -1.8139655590057373
    3. '           ' → logprob: -5.188965797424316
    4. '\n' → logprob: -5.938965797424316
    5. '   ' → logprob: -8.313965797424316
    6. ' 
' → logprob: -8.938965797424316
    7. '  
' → logprob: -9.063965797424316
    8. '<|end|>' → logprob: -9.188965797424316
    9. '```' → logprob: -9.313965797424316
    10. ')' → logprob: -9.688965797424316

Token 255: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007531386334449053
    2. 'time' → logprob: -5.88253116607666
    3. '<|end|>' → logprob: -6.38253116607666
    4. '
' → logprob: -7.00753116607666
    5. 'if' → logprob: -7.50753116607666
    6. 'continue' → logprob: -8.00753116607666
    7. 'for' → logprob: -8.13253116607666
    8. ')' → logprob: -8.38253116607666
    9. '   ' → logprob: -8.75753116607666
    10. '```' → logprob: -8.75753116607666

Token 256: ' ' (ID: 220)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.15310683415737e-05
    2. ' print' → logprob: -10.750021934509277
    3. 'for' → logprob: -18.50002098083496
    4. '
' → logprob: -18.87502098083496
    5. 'pr' → logprob: -19.25002098083496
    6. '#print' → logprob: -19.37502098083496
    7. 'time' → logprob: -19.75002098083496
    8. 'prin' → logprob: -19.87502098083496
    9. '```' → logprob: -20.12502098083496
    10. '(print' → logprob: -20.25002098083496

Token 257: 'す' (ID: 4868)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -15.875
    3. '
' → logprob: -19.375
    4. 'for' → logprob: -19.375
    5. '```' → logprob: -19.75
    6. '#print' → logprob: -20.125
    7. 'prin' → logprob: -21.0
    8. 'time' → logprob: -21.125
    9. 'pr' → logprob: -21.25
    10. '(print' → logprob: -21.75

Token 258: 'べ' (ID: 55078)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.13139906525611877
    2. 'r' → logprob: -3.131399154663086
    3. 'ys' → logprob: -3.506399154663086
    4. 'pr' → logprob: -3.881399154663086
    5. '#' → logprob: -5.381399154663086
    6. 'b' → logprob: -6.006399154663086
    7. 'ub' → logprob: -6.131399154663086
    8. '   ' → logprob: -6.506399154663086
    9. '
' → logprob: -6.756399154663086
    10. 'a' → logprob: -6.881399154663086

Token 259: 'て' (ID: 5711)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.887477695941925
    2. 'て' → logprob: -1.5124776363372803
    3. 'ん' → logprob: -2.1374776363372803
    4. 'い' → logprob: -2.3874776363372803
    5. 'print' → logprob: -2.8874776363372803
    6. 'int' → logprob: -3.5124776363372803
    7. '#' → logprob: -4.512477874755859
    8. 'd' → logprob: -4.512477874755859
    9. 'で' → logprob: -4.887477874755859
    10. 'ng' → logprob: -5.137477874755859

Token 260: '折' (ID: 65246)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0015096203424036503
    2. ' print' → logprob: -6.751509666442871
    3. '(print' → logprob: -8.626509666442871
    4. '(' → logprob: -9.876509666442871
    5. '   ' → logprob: -10.751509666442871
    6. '.print' → logprob: -11.001509666442871
    7. '_print' → logprob: -11.001509666442871
    8. '#print' → logprob: -11.876509666442871
    9. ' =' → logprob: -12.251509666442871
    10. 'for' → logprob: -12.251509666442871

Token 261: 'れる' (ID: 177495)
  Prédit: 'れ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'れ' → logprob: -0.0006598960608243942
    2. 'れる' → logprob: -7.375659942626953
    3. 'れて' → logprob: -10.500659942626953
    4. 'った' → logprob: -13.125659942626953
    5. 'け' → logprob: -13.250659942626953
    6. 'る' → logprob: -13.875659942626953
    7. 'ら' → logprob: -15.125659942626953
    8. 'り' → logprob: -15.250659942626953
    9. '```' → logprob: -15.500659942626953
    10. '``' → logprob: -16.500659942626953

Token 262: 'まで' (ID: 54342)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11480160802602768
    2. 'if' → logprob: -2.2398016452789307
    3. ' if' → logprob: -6.739801406860352
    4. 'for' → logprob: -7.364801406860352
    5. ' print' → logprob: -9.489801406860352
    6. '#print' → logprob: -10.989801406860352
    7. 'count' → logprob: -11.239801406860352
    8. ' for' → logprob: -11.614801406860352
    9. '   ' → logprob: -11.739801406860352
    10. 'while' → logprob: -11.739801406860352

Token 263: 'の' (ID: 3385)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0002649119414854795
    2. ' print' → logprob: -8.250265121459961
    3. '   ' → logprob: -12.750265121459961
    4. 'if' → logprob: -14.875265121459961
    5. '#print' → logprob: -15.625265121459961
    6. '
' → logprob: -16.25026512145996
    7. '```' → logprob: -17.00026512145996
    8. '#' → logprob: -17.50026512145996
    9. 'time' → logprob: -18.00026512145996
    10. ' ' → logprob: -18.62526512145996

Token 264: '時間' (ID: 31402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.794061770662665e-05
    2. ' print' → logprob: -9.87509822845459
    3. 'time' → logprob: -10.00009822845459
    4. '
' → logprob: -14.12509822845459
    5. ' time' → logprob: -15.37509822845459
    6. '時間' → logprob: -16.375097274780273
    7. '#print' → logprob: -18.250097274780273
    8. ' 
' → logprob: -18.250097274780273
    9. '```' → logprob: -18.750097274780273
    10. 'pr' → logprob: -19.125097274780273

Token 265: 'を' (ID: 7277)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.596781946020201e-05
    2. '
' → logprob: -10.625045776367188
    3. ' print' → logprob: -10.750045776367188
    4. '```' → logprob: -16.500045776367188
    5. '\' → logprob: -16.750045776367188
    6. '\n' → logprob: -17.500045776367188
    7. ' 
' → logprob: -18.125045776367188
    8. '
' → logprob: -18.125045776367188
    9. '#print' → logprob: -18.250045776367188
    10. '(print' → logprob: -18.250045776367188

Token 266: '出' (ID: 6390)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.320199877838604e-07
    2. ' print' → logprob: -14.75
    3. '
' → logprob: -21.125
    4. 'pr' → logprob: -22.375
    5. '#print' → logprob: -23.125
    6. '```' → logprob: -23.125
    7. 'printf' → logprob: -24.75
    8. 'prit' → logprob: -25.25
    9. 'Print' → logprob: -25.25
    10. 'prints' → logprob: -25.5

Token 267: '力' (ID: 11343)
  Prédit: '力'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '力' → logprob: -0.3922312259674072
    2. 'print' → logprob: -1.1422312259674072
    3. '```' → logprob: -5.392230987548828
    4. '印' → logprob: -8.017230987548828
    5. '``' → logprob: -8.767230987548828
    6. '#print' → logprob: -9.267230987548828
    7. 'p' → logprob: -9.517230987548828
    8. 'r' → logprob: -10.642230987548828
    9. '#' → logprob: -10.767230987548828
    10. 'は' → logprob: -11.017230987548828

Token 268: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.512236498361744e-07
    2. ' print' → logprob: -14.875000953674316
    3. '```' → logprob: -16.625
    4. '
' → logprob: -17.5
    5. ')
' → logprob: -19.25
    6. '``' → logprob: -19.5
    7. 'time' → logprob: -20.125
    8. '(print' → logprob: -21.0
    9. ')' → logprob: -22.0
    10. '.print' → logprob: -22.375

Token 269: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -15.75
    3. '```' → logprob: -18.0
    4. 'time' → logprob: -22.125
    5. '``' → logprob: -22.375
    6. '#print' → logprob: -23.25
    7. 'printf' → logprob: -23.75
    8. 'pr' → logprob: -24.25
    9. '.print' → logprob: -24.375
    10. '(print' → logprob: -24.375

Token 270: '(time' (ID: 19192)
  Prédit: '(time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(time' → logprob: -0.078987717628479
    2. '(' → logprob: -2.5789875984191895
    3. '()' → logprob: -9.578988075256348
    4. '("' → logprob: -11.578988075256348
    5. 'time' → logprob: -11.828988075256348
    6. '('' → logprob: -11.828988075256348
    7. ' (' → logprob: -12.828988075256348
    8. '(len' → logprob: -15.078988075256348
    9. '(times' → logprob: -15.078988075256348
    10. '(f' → logprob: -15.203988075256348

Token 271: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ' )' → logprob: -13.500001907348633
    3. '）' → logprob: -16.250001907348633
    4. ')
' → logprob: -16.500001907348633
    5. ')`' → logprob: -16.875001907348633
    6. '+' → logprob: -17.625001907348633
    7. '))' → logprob: -17.750001907348633
    8. '`)' → logprob: -18.625001907348633
    9. '())' → logprob: -19.125001907348633
    10. '')' → logprob: -19.250001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 269
Tokens correctement prédits (1ère position, stricte): 105
Tokens correctement prédits (1ère position, avec adaptation): 117
Tokens correctement prédits (top 10): 217
Précision stricte (1ère position): 39.03%
Précision adaptée (1ère position): 43.49%
Précision (top 10): 80.67%
================================================================================
