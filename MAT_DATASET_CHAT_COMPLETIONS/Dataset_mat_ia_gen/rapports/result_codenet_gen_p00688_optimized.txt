================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from math import gcd, isqrt

def divisors(n):
    n = abs(n)
    divs = set()
    for i in range(1, isqrt(n)+1):
        if n % i == 0:
            divs.add(i)
            divs.add(n//i)
    return divs

def try_factor(a,b,c):
    A = divisors(a)
    C = divisors(c)
    # For q and s, can be negative, so consider sign in b = ps + qr
    for p in sorted(A):
        r = a // p
        if r <= 0:
            continue
        for q_sign in [1,-1]:
            for s_sign in [1,-1]:
                for q_val in C:
                    q = q_val * q_sign
                    if q == 0:
                        continue
                    for s_val in C:
                        s = s_val * s_sign
                        if s == 0:
                            continue
                        if p*r != a:
                            continue
                        if q*s != c:
                            continue
                        if p*s + q*r == b:
                            # check uniqueness conditions:
                            # p >0 and r>0 true by construction
                            # (p > r) or (p == r and q >= s)
                            if (p > r) or (p == r and q >= s):
                                return (p,q,r,s)
    return None

for line in sys.stdin:
    if not line.strip():
        continue
    a,b,c = map(int,line.split())
    if a==0 and b==0 and c==0:
        break
    res = try_factor(a,b,c)
    if res is None:
        print("Impossible")
    else:
        print(*res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.018782595172524452
    2. 'os' → logprob: -4.143782615661621
    3. ' collections' → logprob: -7.393782615661621
    4. ' Py' → logprob: -7.768782615661621
    5. ' pathlib' → logprob: -7.768782615661621
    6. ' ' → logprob: -8.393782615661621
    7. ' math' → logprob: -8.393782615661621
    8. 'collections' → logprob: -8.893782615661621
    9. ' datetime' → logprob: -9.143782615661621
    10. ' typing' → logprob: -9.518782615661621

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.01040623802691698
    2. 'import' → logprob: -4.635406017303467
    3. ' ' → logprob: -7.510406017303467
    4. '.' → logprob: -9.635406494140625
    5. ' im' → logprob: -11.135406494140625
    6. '	import' → logprob: -11.885406494140625
    7. '<|end|>' → logprob: -12.510406494140625
    8. ' impor' → logprob: -12.885406494140625
    9. '_import' → logprob: -13.135406494140625
    10. ' ' → logprob: -13.635406494140625

Token 6: ' gcd' (ID: 106918)
  Prédit: ' sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sqrt' → logprob: -0.02880408987402916
    2. ' ' → logprob: -4.278804302215576
    3. ' pi' → logprob: -5.028804302215576
    4. ' ceil' → logprob: -6.153804302215576
    5. 'sqrt' → logprob: -6.153804302215576
    6. ' sin' → logprob: -6.528804302215576
    7. ' import' → logprob: -7.403804302215576
    8. ' pow' → logprob: -8.278803825378418
    9. ' log' → logprob: -8.278803825378418
    10. ' s' → logprob: -8.278803825378418

Token 7: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9127482771873474
    2. '\n' → logprob: -1.0377483367919922
    3. '
' → logprob: -2.412748336791992
    4. '(
' → logprob: -3.287748336791992
    5. '\' → logprob: -3.537748336791992
    6. '

' → logprob: -3.912748336791992
    7. ',' → logprob: -4.162748336791992
    8. '<|end|>' → logprob: -4.162748336791992
    9. '```' → logprob: -4.662748336791992
    10. 'import' → logprob: -4.787748336791992

Token 8: ' is' (ID: 382)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.03818470984697342
    2. ' l' → logprob: -4.663184642791748
    3. 'sqrt' → logprob: -4.663184642791748
    4. 'atan' → logprob: -4.788184642791748
    5. 'is' → logprob: -5.663184642791748
    6. 'pow' → logprob: -6.413184642791748
    7. 'ceil' → logprob: -6.538184642791748
    8. '```' → logprob: -6.663184642791748
    9. 'fabs' → logprob: -7.038184642791748
    10. 'log' → logprob: -7.663184642791748

Token 9: 'qrt' (ID: 17629)
  Prédit: 'qrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qrt' → logprob: -0.0008416688651777804
    2. 'prime' → logprob: -7.2508416175842285
    3. 'close' → logprob: -9.625842094421387
    4. 'quare' → logprob: -10.750842094421387
    5. 'q' → logprob: -11.625842094421387
    6. 'finite' → logprob: -11.625842094421387
    7. 'pi' → logprob: -12.250842094421387
    8. '```' → logprob: -12.375842094421387
    9. 'lice' → logprob: -12.750842094421387
    10. '_prime' → logprob: -13.500842094421387

Token 10: '

' (ID: 279)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5302804112434387
    2. '
' → logprob: -2.030280351638794
    3. '

' → logprob: -2.030280351638794
    4. ',' → logprob: -2.655280351638794
    5. '\n' → logprob: -3.155280351638794
    6. 'import' → logprob: -4.530280590057373
    7. '<|end|>' → logprob: -4.655280590057373
    8. '\' → logprob: -5.405280590057373
    9. '`' → logprob: -6.280280590057373
    10. '``' → logprob: -6.280280590057373

Token 11: 'def' (ID: 1314)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -1.0701370239257812
    2. '```' → logprob: -1.0701370239257812
    3. '\n' → logprob: -2.5701370239257812
    4. '
' → logprob: -2.6951370239257812
    5. '\' → logprob: -2.6951370239257812
    6. 'def' → logprob: -2.9451370239257812
    7. ',' → logprob: -4.195137023925781
    8. '`' → logprob: -4.820137023925781
    9. '``' → logprob: -5.070137023925781
    10. '(' → logprob: -5.820137023925781

Token 12: ' divis' (ID: 37826)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.008754846639931202
    2. ' gcd' → logprob: -5.258754730224609
    3. '_' → logprob: -6.633754730224609
    4. ' factor' → logprob: -7.633754730224609
    5. ' space' → logprob: -8.50875473022461
    6. ' main' → logprob: -8.50875473022461
    7. ' solve' → logprob: -8.88375473022461
    8. ' find' → logprob: -9.00875473022461
    9. ' calculate' → logprob: -9.00875473022461
    10. '_factor' → logprob: -9.25875473022461

Token 13: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.004856815095990896
    2. 'or' → logprob: -5.379856586456299
    3. 'ion' → logprob: -9.879857063293457
    4. 'is' → logprob: -10.254857063293457
    5. '_' → logprob: -10.879857063293457
    6. '```' → logprob: -10.879857063293457
    7. 'o' → logprob: -11.254857063293457
    8. 'ibility' → logprob: -11.504857063293457
    9. ' or' → logprob: -11.504857063293457
    10. 'ons' → logprob: -11.629857063293457

Token 14: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00011081460979767144
    2. '_' → logprob: -9.375110626220703
    3. '(n' → logprob: -12.125110626220703
    4. ' (' → logprob: -12.375110626220703
    5. '("("' → logprob: -12.625110626220703
    6. '_list' → logprob: -12.875110626220703
    7. '_(' → logprob: -13.375110626220703
    8. '```' → logprob: -13.875110626220703
    9. '(
' → logprob: -14.000110626220703
    10. '(

' → logprob: -14.000110626220703

Token 15: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04305114224553108
    2. ')' → logprob: -3.168051242828369
    3. ' ):' → logprob: -10.418050765991211
    4. ':' → logprob: -11.918050765991211
    5. ',' → logprob: -12.293050765991211
    6. '):
' → logprob: -12.543050765991211
    7. ')：' → logprob: -13.418050765991211
    8. ' ' → logprob: -14.168050765991211
    9. '(' → logprob: -14.293050765991211
    10. ' )' → logprob: -14.418050765991211

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26791834831237793
    2. ':' → logprob: -1.517918348312378
    3. '```' → logprob: -5.392918586730957
    4. '	yield' → logprob: -5.892918586730957
    5. ' ' → logprob: -6.392918586730957
    6. '    ' → logprob: -6.517918586730957
    7. ' :' → logprob: -7.017918586730957
    8. '[' → logprob: -7.892918586730957
    9. '**' → logprob: -8.017918586730957
    10. '	return' → logprob: -8.017918586730957

Token 17: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3691706657409668
    2. ' for' → logprob: -1.9941706657409668
    3. ' yield' → logprob: -1.9941706657409668
    4. '    ' → logprob: -4.619170665740967
    5. 'yield' → logprob: -4.619170665740967
    6. ' divis' → logprob: -5.744170665740967
    7. ' result' → logprob: -5.869170665740967
    8. 'for' → logprob: -6.244170665740967
    9. ' d' → logprob: -6.369170665740967
    10. ' div' → logprob: -6.619170665740967

Token 18: ' =' (ID: 314)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.07274095714092255
    2. '%' → logprob: -3.1977410316467285
    3. ' ' → logprob: -3.5727410316467285
    4. ' =' → logprob: -7.8227410316467285
    5. '=' → logprob: -8.19774055480957
    6. ' **' → logprob: -8.57274055480957
    7. ' %=' → logprob: -9.32274055480957
    8. '   ' → logprob: -9.57274055480957
    9. '  ' → logprob: -10.44774055480957
    10. ''' → logprob: -11.07274055480957

Token 19: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.6709204912185669
    2. ' is' → logprob: -1.670920491218567
    3. ' ' → logprob: -1.920920491218567
    4. ' int' → logprob: -3.0459203720092773
    5. '1' → logprob: -3.1709203720092773
    6. 'abs' → logprob: -3.6709203720092773
    7. '2' → logprob: -4.170920372009277
    8. 'is' → logprob: -4.920920372009277
    9. 'int' → logprob: -5.170920372009277
    10. ' n' → logprob: -5.295920372009277

Token 20: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.16022615134716034
    2. '(' → logprob: -1.9102261066436768
    3. '(
' → logprob: -13.785225868225098
    4. ' (' → logprob: -15.160225868225098
    5. 'n' → logprob: -15.410225868225098
    6. '(

' → logprob: -16.035226821899414
    7. '(num' → logprob: -16.410226821899414
    8. '((' → logprob: -16.660226821899414
    9. '(N' → logprob: -16.910226821899414
    10. '(x' → logprob: -17.160226821899414

Token 21: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011130700586363673
    2. ')
' → logprob: -6.876112937927246
    3. ' )' → logprob: -10.251112937927246
    4. ')
' → logprob: -10.376112937927246
    5. '   ' → logprob: -11.751112937927246
    6. '))' → logprob: -13.876112937927246
    7. ')

' → logprob: -14.126112937927246
    8. ' )
' → logprob: -14.876112937927246
    9. ')`' → logprob: -14.876112937927246
    10. ' ' → logprob: -15.251112937927246

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01590356044471264
    2. '
' → logprob: -4.640903472900391
    3. 'd' → logprob: -5.890903472900391
    4. '    
' → logprob: -7.515903472900391
    5. 'def' → logprob: -7.765903472900391
    6. 'div' → logprob: -8.01590347290039
    7. ' ' → logprob: -8.39090347290039
    8. ':' → logprob: -8.39090347290039
    9. '\' → logprob: -8.64090347290039
    10. '```' → logprob: -8.89090347290039

Token 23: ' div' (ID: 4223)
  Prédit: ' div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' div' → logprob: -0.9069727659225464
    2. 'div' (adapté à ' div') → logprob: -1.0319727659225464
    3. ' divis' → logprob: -1.9069727659225464
    4. ' i' → logprob: -3.281972885131836
    5. ' d' → logprob: -3.906972885131836
    6. 'd' → logprob: -4.031972885131836
    7. ' result' → logprob: -5.531972885131836
    8. '   ' → logprob: -5.656972885131836
    9. ' for' → logprob: -5.656972885131836
    10. 'i' → logprob: -6.781972885131836

Token 24: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.001476771547459066
    2. 'is' → logprob: -6.626476764678955
    3. ' =' → logprob: -9.876477241516113
    4. '   ' → logprob: -10.001477241516113
    5. '_list' → logprob: -10.876477241516113
    6. ' ' → logprob: -11.751477241516113
    7. '=' → logprob: -11.751477241516113
    8. '_set' → logprob: -12.626477241516113
    9. '    ' → logprob: -13.251477241516113
    10. '_' → logprob: -13.251477241516113

Token 25: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9248635172843933
    2. 'is' → logprob: -1.174863576889038
    3. ' =' → logprob: -1.299863576889038
    4. 's' → logprob: -4.799863338470459
    5. 'ors' → logprob: -4.924863338470459
    6. ' ' → logprob: -6.049863338470459
    7. '   ' → logprob: -6.174863338470459
    8. '=[]' → logprob: -7.424863338470459
    9. 'iors' → logprob: -8.049863815307617
    10. 'ers' → logprob: -8.049863815307617

Token 26: ' set' (ID: 920)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0313502550125122
    2. ' [' → logprob: -1.2813502550125122
    3. ' []' → logprob: -1.7813502550125122
    4. '[]' → logprob: -1.9063502550125122
    5. ' set' → logprob: -4.031350135803223
    6. '{' → logprob: -4.406350135803223
    7. ' {' → logprob: -4.531350135803223
    8. 'set' → logprob: -4.906350135803223
    9. '[n' → logprob: -8.031350135803223
    10. ' ' → logprob: -9.156350135803223

Token 27: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.013227170333266258
    2. '(' → logprob: -4.5132269859313965
    3. '([' → logprob: -6.2632269859313965
    4. '({' → logprob: -9.263227462768555
    5. '(),' → logprob: -10.388227462768555
    6. '()
' → logprob: -10.763227462768555
    7. '()

' → logprob: -10.888227462768555
    8. '(range' → logprob: -11.013227462768555
    9. '(){' → logprob: -11.263227462768555
    10. '();' → logprob: -11.388227462768555

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47854265570640564
    2. ' for' → logprob: -1.228542685508728
    3. 'for' → logprob: -3.3535425662994385
    4. ' ' → logprob: -3.4785425662994385
    5. ' 
' → logprob: -4.728542804718018
    6. '    
' → logprob: -5.603542804718018
    7. ' \' → logprob: -5.978542804718018
    8. '    ' → logprob: -6.103542804718018
    9. '	for' → logprob: -7.103542804718018
    10. ',' → logprob: -7.603542804718018

Token 29: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4755576252937317
    2. ' for' → logprob: -0.9755576252937317
    3. '   ' → logprob: -6.725557804107666
    4. 'div' → logprob: -8.600557327270508
    5. ' ' → logprob: -10.475557327270508
    6. 'if' → logprob: -10.600557327270508
    7. '	for' → logprob: -11.100557327270508
    8. ' if' → logprob: -11.600557327270508
    9. ' div' → logprob: -11.725557327270508
    10. '       ' → logprob: -12.975557327270508

Token 30: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.013164821080863476
    2. 'i' → logprob: -4.63816499710083
    3. ' d' → logprob: -5.76316499710083
    4. 'd' → logprob: -8.513164520263672
    5. ' ' → logprob: -10.138164520263672
    6. ' x' → logprob: -11.513164520263672
    7. '	i' → logprob: -12.138164520263672
    8. 'x' → logprob: -13.138164520263672
    9. ' k' → logprob: -14.013164520263672
    10. '```' → logprob: -14.388164520263672

Token 31: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014617416076362133
    2. 'in' → logprob: -4.264617443084717
    3. ' ' → logprob: -7.764617443084717
    4. '  ' → logprob: -12.264616966247559
    5. '   ' → logprob: -12.514616966247559
    6. '	in' → logprob: -12.639616966247559
    7. ',' → logprob: -13.014616966247559
    8. 'range' → logprob: -13.014616966247559
    9. '1' → logprob: -13.139616966247559
    10. '<|end|>' → logprob: -13.264616966247559

Token 32: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.011067979969084263
    2. 'range' → logprob: -4.511067867279053
    3. ' ' → logprob: -10.886068344116211
    4. '	range' → logprob: -13.886068344116211
    5. '(range' → logprob: -15.511068344116211
    6. ' xrange' → logprob: -16.51106834411621
    7. '1' → logprob: -16.88606834411621
    8. '  ' → logprob: -17.38606834411621
    9. '   ' → logprob: -17.51106834411621
    10. ' is' → logprob: -17.63606834411621

Token 33: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.353008499601856e-05
    2. ' (' → logprob: -9.375093460083008
    3. '1' → logprob: -12.375093460083008
    4. ' ' → logprob: -12.500093460083008
    5. '(i' → logprob: -14.875093460083008
    6. '(n' → logprob: -15.250093460083008
    7. '<|end|>' → logprob: -16.625093460083008
    8. '(
' → logprob: -17.250093460083008
    9. '((' → logprob: -17.375093460083008
    10. '2' → logprob: -17.375093460083008

Token 34: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.038306210190057755
    2. ' ' → logprob: -3.28830623626709
    3. '2' → logprob: -8.28830623626709
    4. '(' → logprob: -12.41330623626709
    5. ')' → logprob: -12.66330623626709
    6. '   ' → logprob: -13.28830623626709
    7. 'is' → logprob: -13.91330623626709
    8. 'n' → logprob: -14.22580623626709
    9. '```' → logprob: -14.91330623626709
    10. '0' → logprob: -15.28830623626709

Token 35: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14596489071846008
    2. ' ,' → logprob: -2.0209648609161377
    3. ',n' → logprob: -5.770965099334717
    4. '(n' → logprob: -9.645964622497559
    5. ',i' → logprob: -10.645964622497559
    6. 'n' → logprob: -10.770964622497559
    7. ' ' → logprob: -11.270964622497559
    8. ' n' → logprob: -11.395964622497559
    9. '(' → logprob: -12.020964622497559
    10. ',int' → logprob: -12.020964622497559

Token 36: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.10022187232971191
    2. 'is' → logprob: -2.350221872329712
    3. ' ' → logprob: -11.975221633911133
    4. ')is' → logprob: -12.475221633911133
    5. '	is' → logprob: -12.975221633911133
    6. ')' → logprob: -13.475221633911133
    7. ' )' → logprob: -14.975221633911133
    8. '```' → logprob: -15.350221633911133
    9. ' ' → logprob: -15.600221633911133
    10. 'n' → logprob: -15.600221633911133

Token 37: 'qrt' (ID: 17629)
  Prédit: 'qrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qrt' → logprob: -0.0027503150049597025
    2. 's' → logprob: -6.377750396728516
    3. 'sqrt' → logprob: -7.002750396728516
    4. 'r' → logprob: -9.377750396728516
    5. '_s' → logprob: -10.377750396728516
    6. '_' → logprob: -12.127750396728516
    7. 'q' → logprob: -12.502750396728516
    8. 'rt' → logprob: -13.002750396728516
    9. 'sq' → logprob: -13.127750396728516
    10. ' sqrt' → logprob: -13.252750396728516

Token 38: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.02980199083685875
    2. '(' → logprob: -3.529802083969116
    3. ' (' → logprob: -10.404802322387695
    4. ')' → logprob: -10.904802322387695
    5. '(
' → logprob: -14.029802322387695
    6. ')(' → logprob: -14.279802322387695
    7. 'n' → logprob: -15.279802322387695
    8. ')n' → logprob: -15.279802322387695
    9. ' ' → logprob: -15.404802322387695
    10. '(i' → logprob: -15.904802322387695

Token 39: ')+' (ID: 16161)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14449290931224823
    2. ')+' → logprob: -2.2694928646087646
    3. '(n' → logprob: -3.5194928646087646
    4. '(' → logprob: -6.769493103027344
    5. ' )' → logprob: -8.019493103027344
    6. ' ' → logprob: -10.394493103027344
    7. '+' → logprob: -11.144493103027344
    8. ')n' → logprob: -12.019493103027344
    9. ')+(' → logprob: -12.144493103027344
    10. '```' → logprob: -12.394493103027344

Token 40: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008045066497288644
    2. ' ' → logprob: -7.125804424285889
    3. '(' → logprob: -18.000804901123047
    4. '2' → logprob: -18.500804901123047
    5. ')' → logprob: -19.000804901123047
    6. '```' → logprob: -19.750804901123047
    7. '   ' → logprob: -20.250804901123047
    8. ' ' → logprob: -20.625804901123047
    9. '۱' → logprob: -21.125804901123047
    10. '  ' → logprob: -21.125804901123047

Token 41: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18392260372638702
    2. ':' → logprob: -1.8089226484298706
    3. ')' → logprob: -5.55892276763916
    4. ' ):' → logprob: -8.55892276763916
    5. ':)' → logprob: -10.30892276763916
    6. '):
' → logprob: -10.43392276763916
    7. ' :' → logprob: -10.68392276763916
    8. ',' → logprob: -11.43392276763916
    9. '   ' → logprob: -11.93392276763916
    10. ':**' → logprob: -11.93392276763916

Token 42: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22222666442394257
    2. '       ' → logprob: -1.847226619720459
    3. ' :' → logprob: -4.222226619720459
    4. '    ' → logprob: -4.347226619720459
    5. '   ' → logprob: -5.222226619720459
    6. ' ' → logprob: -5.472226619720459
    7. '):' → logprob: -6.097226619720459
    8. ':
' → logprob: -7.472226619720459
    9. ' if' → logprob: -7.722226619720459
    10. '        ' → logprob: -7.972226619720459

Token 43: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9914353489875793
    2. ':' → logprob: -1.2414352893829346
    3. ' :' → logprob: -2.1164352893829346
    4. ' ' → logprob: -2.1164352893829346
    5. 'if' (adapté à ' if') → logprob: -2.9914352893829346
    6. '       ' → logprob: -4.366435527801514
    7. '<|end|>' → logprob: -4.491435527801514
    8. '    ' → logprob: -5.116435527801514
    9. '):' → logprob: -5.116435527801514
    10. '   ' → logprob: -5.116435527801514

Token 44: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0011928485473617911
    2. 'n' → logprob: -6.751193046569824
    3. ' ' → logprob: -11.001193046569824
    4. ' ' → logprob: -13.126193046569824
    5. '	n' → logprob: -13.376193046569824
    6. ' (' → logprob: -13.376193046569824
    7. '(n' → logprob: -14.251193046569824
    8. ' not' → logprob: -16.626192092895508
    9. '(' → logprob: -17.126192092895508
    10. ' n't' → logprob: -17.376192092895508

Token 45: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.026497341692447662
    2. '%' → logprob: -3.6514973640441895
    3. '%i' → logprob: -8.776496887207031
    4. ' ' → logprob: -10.151496887207031
    5. ' ' → logprob: -13.526496887207031
    6. '%x' → logprob: -14.401496887207031
    7. '%s' → logprob: -15.276496887207031
    8. '%e' → logprob: -15.276496887207031
    9. '<|end|>' → logprob: -15.401496887207031
    10. ' %#' → logprob: -15.901496887207031

Token 46: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6931579113006592
    2. ' i' → logprob: -0.6931579113006592
    3. '	i' → logprob: -12.193158149719238
    4. ' ' → logprob: -12.443158149719238
    5. '<|end|>' → logprob: -13.818158149719238
    6. '(i' → logprob: -15.193158149719238
    7. '  ' → logprob: -16.193157196044922
    8. ' ' → logprob: -16.568157196044922
    9. '```' → logprob: -16.568157196044922
    10. '<|end|>' → logprob: -16.693157196044922

Token 47: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.023324089124798775
    2. '==' → logprob: -3.7733240127563477
    3. ' ' → logprob: -9.898324012756348
    4. '=' → logprob: -11.273324012756348
    5. ' =' → logprob: -11.648324012756348
    6. ')==' → logprob: -12.648324012756348
    7. ')' → logprob: -13.898324012756348
    8. '  ' → logprob: -14.273324012756348
    9. ' ===' → logprob: -14.523324012756348
    10. '===' → logprob: -14.523324012756348

Token 48: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20141352713108063
    2. ' ' → logprob: -1.7014135122299194
    3. ' ' → logprob: -16.201414108276367
    4. '<|end|>' → logprob: -17.076414108276367
    5. '```' → logprob: -17.701414108276367
    6. '۰' → logprob: -17.826414108276367
    7. '  ' → logprob: -18.451414108276367
    8. ' 
' → logprob: -18.951414108276367
    9. ' 

' → logprob: -19.076414108276367
    10. '   ' → logprob: -19.451414108276367

Token 49: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028048718813806772
    2. ' ' → logprob: -5.877804756164551
    3. '  ' → logprob: -18.877805709838867
    4. '۰' → logprob: -19.502805709838867
    5. '```' → logprob: -19.627805709838867
    6. '=' → logprob: -20.252805709838867
    7. '   ' → logprob: -20.627805709838867
    8. '٠' → logprob: -21.190305709838867
    9. ' ' → logprob: -21.315305709838867
    10. ')' → logprob: -21.440305709838867

Token 50: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00019698418327607214
    2. '):' → logprob: -9.000197410583496
    3. ':
' → logprob: -9.750197410583496
    4. ' :' → logprob: -11.625197410583496
    5. '       ' → logprob: -12.875197410583496
    6. ':**' → logprob: -13.500197410583496
    7. '           ' → logprob: -14.125197410583496
    8. ',' → logprob: -14.625197410583496
    9. ':return' → logprob: -15.750197410583496
    10. '   ' → logprob: -16.00019645690918

Token 51: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00023655613767914474
    2. '            
' → logprob: -9.750236511230469
    3. '       ' → logprob: -10.125236511230469
    4. '<|end|>' → logprob: -10.500236511230469
    5. '
' → logprob: -10.875236511230469
    6. '```' → logprob: -11.125236511230469
    7. ' ' → logprob: -11.375236511230469
    8. '            ' → logprob: -11.500236511230469
    9. 'div' → logprob: -11.750236511230469
    10. '          ' → logprob: -11.750236511230469

Token 52: ' div' (ID: 4223)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6884362697601318
    2. ' div' → logprob: -0.8134362697601318
    3. 'div' (adapté à ' div') → logprob: -3.563436269760132
    4. '       ' → logprob: -4.313436508178711
    5. '               ' → logprob: -5.313436508178711
    6. '	div' → logprob: -5.688436508178711
    7. '
' → logprob: -6.188436508178711
    8. '   ' → logprob: -6.688436508178711
    9. '```' → logprob: -7.813436508178711
    10. ' ' → logprob: -9.313436508178711

Token 53: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.9361264946837764e-07
    2. '       ' → logprob: -17.0
    3. ' s' → logprob: -17.375
    4. '   ' → logprob: -18.0
    5. ''s' → logprob: -18.5
    6. '           ' → logprob: -18.875
    7. '{s' → logprob: -19.25
    8. '	s' → logprob: -19.5
    9. 'ectors' → logprob: -20.125
    10. 'ors' → logprob: -20.375

Token 54: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.03471270948648453
    2. '.' → logprob: -3.409712791442871
    3. '.update' → logprob: -6.909712791442871
    4. ' .' → logprob: -9.909712791442871
    5. '.setdefault' → logprob: -11.284712791442871
    6. '.Add' → logprob: -13.034712791442871
    7. '.append' → logprob: -14.284712791442871
    8. '<|end|>' → logprob: -14.659712791442871
    9. 'add' → logprob: -14.909712791442871
    10. '‌.' → logprob: -15.034712791442871

Token 55: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0002614550176076591
    2. '(' → logprob: -8.250261306762695
    3. 'i' → logprob: -15.875261306762695
    4. ' (' → logprob: -17.125261306762695
    5. '(
' → logprob: -17.125261306762695
    6. ' i' → logprob: -17.250261306762695
    7. '(I' → logprob: -18.000261306762695
    8. ')' → logprob: -19.625261306762695
    9. '(

' → logprob: -19.875261306762695
    10. '(ii' → logprob: -20.375261306762695

Token 56: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6934318542480469
    2. ')
' → logprob: -0.6934318542480469
    3. ')
' → logprob: -8.943431854248047
    4. ' )
' → logprob: -9.693431854248047
    5. '           ' → logprob: -10.068431854248047
    6. '       ' → logprob: -10.568431854248047
    7. ' )' → logprob: -11.193431854248047
    8. '   ' → logprob: -12.943431854248047
    9. ')

' → logprob: -12.943431854248047
    10. '               ' → logprob: -13.318431854248047

Token 57: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012115664780139923
    2. 'div' → logprob: -5.637115478515625
    3. '       ' → logprob: -5.762115478515625
    4. '            
' → logprob: -5.762115478515625
    5. '        
' → logprob: -6.887115478515625
    6. ' div' → logprob: -7.637115478515625
    7. '    
' → logprob: -8.637115478515625
    8. ' 
' → logprob: -9.012115478515625
    9. '               ' → logprob: -10.137115478515625
    10. '  
' → logprob: -10.262115478515625

Token 58: ' div' (ID: 4223)
  Prédit: ' div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' div' → logprob: -0.023249322548508644
    2. 'div' (adapté à ' div') → logprob: -3.773249387741089
    3. '	div' → logprob: -13.023249626159668
    4. ' ' → logprob: -15.023249626159668
    5. ' divis' → logprob: -15.023249626159668
    6. '           ' → logprob: -15.398249626159668
    7. ' n' → logprob: -15.648249626159668
    8. 'n' → logprob: -15.773249626159668
    9. ' ' → logprob: -15.898249626159668
    10. ' 
' → logprob: -16.14824867248535

Token 59: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -3.4121114822482923e-06
    2. 'ors' → logprob: -13.750003814697266
    3. '   ' → logprob: -14.500003814697266
    4. '```' → logprob: -14.750003814697266
    5. 'is' → logprob: -15.000003814697266
    6. '.' → logprob: -15.750003814697266
    7. '       ' → logprob: -15.875003814697266
    8. '(s' → logprob: -16.625003814697266
    9. ' ' → logprob: -16.750003814697266
    10. ' s' → logprob: -17.000003814697266

Token 60: '.add' (ID: 1950)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.35996630787849426
    2. '.add' → logprob: -1.8599662780761719
    3. '.update' → logprob: -1.9849662780761719
    4. '.union' → logprob: -4.734966278076172
    5. '.extend' → logprob: -8.484966278076172
    6. ' .' → logprob: -9.359966278076172
    7. '.setdefault' → logprob: -9.859966278076172
    8. '.|' → logprob: -10.734966278076172
    9. '.remove' → logprob: -10.859966278076172
    10. '.
' → logprob: -10.859966278076172

Token 61: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.01815064437687397
    2. '(' → logprob: -4.018150806427002
    3. '(
' → logprob: -14.518150329589844
    4. '((' → logprob: -16.643150329589844
    5. 'n' → logprob: -16.893150329589844
    6. '/' → logprob: -17.143150329589844
    7. ' (' → logprob: -17.143150329589844
    8. '(int' → logprob: -17.643150329589844
    9. '(

' → logprob: -17.643150329589844
    10. ' n' → logprob: -18.143150329589844

Token 62: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.05544273182749748
    2. ' //' → logprob: -2.9304428100585938
    3. '/i' → logprob: -7.555442810058594
    4. '/' → logprob: -11.055442810058594
    5. ' ' → logprob: -11.430442810058594
    6. ' /' → logprob: -12.680442810058594
    7. ')' → logprob: -13.305442810058594
    8. '//=' → logprob: -13.430442810058594
    9. ' ' → logprob: -13.555442810058594
    10. 'i' → logprob: -14.055442810058594

Token 63: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.7610454708337784e-05
    2. ' i' → logprob: -10.500027656555176
    3. ' ' → logprob: -19.00002670288086
    4. '   ' → logprob: -19.37502670288086
    5. '	i' → logprob: -19.37502670288086
    6. '  ' → logprob: -21.62502670288086
    7. '```' → logprob: -22.25002670288086
    8. ')i' → logprob: -22.62502670288086
    9. ')' → logprob: -22.75002670288086
    10. '>' → logprob: -23.62502670288086

Token 64: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.719917630311102e-05
    2. ')
' → logprob: -9.500077247619629
    3. ' )' → logprob: -13.250077247619629
    4. ')

' → logprob: -15.375077247619629
    5. '   ' → logprob: -15.750077247619629
    6. ')return' → logprob: -16.250076293945312
    7. '}' → logprob: -17.500076293945312
    8. ')
' → logprob: -17.625076293945312
    9. '       ' → logprob: -17.875076293945312
    10. ' ' → logprob: -18.000076293945312

Token 65: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009408952668309212
    2. '    
' → logprob: -5.634408950805664
    3. '
' → logprob: -5.884408950805664
    4. ' return' → logprob: -6.884408950805664
    5. ' 
' → logprob: -6.884408950805664
    6. 'return' → logprob: -8.134408950805664
    7. ' ' → logprob: -8.634408950805664
    8. '       ' → logprob: -9.259408950805664
    9. '	return' → logprob: -9.259408950805664
    10. '\n' → logprob: -9.634408950805664

Token 66: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19358202815055847
    2. '
' → logprob: -2.693582057952881
    3. ' return' → logprob: -2.943582057952881
    4. 'return' (adapté à ' return') → logprob: -3.318582057952881
    5. '    
' → logprob: -4.943582057952881
    6. ' 
' → logprob: -5.318582057952881
    7. ' ' → logprob: -5.693582057952881
    8. '	return' → logprob: -6.943582057952881
    9. ':return' → logprob: -7.068582057952881
    10. '```' → logprob: -7.568582057952881

Token 67: ' div' (ID: 4223)
  Prédit: ' div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' div' → logprob: -0.07889066636562347
    2. 'div' → logprob: -2.578890562057495
    3. '(div' → logprob: -14.703890800476074
    4. '	div' → logprob: -14.953890800476074
    5. ' ' → logprob: -16.703889846801758
    6. ' divis' → logprob: -17.328889846801758
    7. ' sorted' → logprob: -18.828889846801758
    8. '   ' → logprob: -19.203889846801758
    9. 'd' → logprob: -19.453889846801758
    10. '<div' → logprob: -19.578889846801758

Token 68: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.127333340875339e-06
    2. ' s' → logprob: -13.375003814697266
    3. 'sers' → logprob: -14.125003814697266
    4. '   ' → logprob: -14.750003814697266
    5. 'rs' → logprob: -15.375003814697266
    6. 'ss' → logprob: -15.625003814697266
    7. '```' → logprob: -15.625003814697266
    8. '	s' → logprob: -15.750003814697266
    9. '{s' → logprob: -15.750003814697266
    10. '`s' → logprob: -16.750003814697266

Token 69: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4660017490386963
    2. 'def' → logprob: -1.3410017490386963
    3. '<|end|>' → logprob: -2.8410017490386963
    4. '

' → logprob: -3.2160017490386963
    5. '```' → logprob: -5.091001510620117
    6. '\n' → logprob: -6.341001510620117
    7. '<|end|>' → logprob: -7.216001510620117
    8. '\' → logprob: -7.341001510620117
    9. 'newline' → logprob: -7.341001510620117
    10. '#' → logprob: -7.841001510620117

Token 70: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011834138073027134
    2. '
' → logprob: -4.636834144592285
    3. '

' → logprob: -6.386834144592285
    4. '```' → logprob: -8.511834144592285
    5. '\' → logprob: -10.261834144592285
    6. '#' → logprob: -10.386834144592285
    7. ' def' → logprob: -10.636834144592285
    8. '
' → logprob: -10.886834144592285
    9. '<|end|>' → logprob: -11.261834144592285
    10. '\n' → logprob: -11.386834144592285

Token 71: ' try' (ID: 2075)
  Prédit: ' gcd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' gcd' → logprob: -0.4297865033149719
    2. ' ' → logprob: -1.6797864437103271
    3. ' solve' → logprob: -2.679786443710327
    4. ' find' → logprob: -3.429786443710327
    5. ' linear' → logprob: -4.054786682128906
    6. ' l' → logprob: -4.554786682128906
    7. ' main' → logprob: -5.054786682128906
    8. ' g' → logprob: -5.679786682128906
    9. ' space' → logprob: -5.804786682128906
    10. ' calculate' → logprob: -6.179786682128906

Token 72: '_factor' (ID: 43757)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04506935179233551
    2. '_:' → logprob: -3.795069456100464
    3. ':' → logprob: -4.295069217681885
    4. '_except' → logprob: -6.420069217681885
    5. 'ing' → logprob: -6.545069217681885
    6. '_to' → logprob: -6.920069217681885
    7. '_value' → logprob: -7.170069217681885
    8. '_parse' → logprob: -7.670069217681885
    9. '_values' → logprob: -7.795069217681885
    10. '_continue' → logprob: -8.170069694519043

Token 73: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25473862886428833
    2. '_' → logprob: -1.5047385692596436
    3. '(n' → logprob: -6.629738807678223
    4. '_(' → logprob: -8.004738807678223
    5. ' (' → logprob: -8.129738807678223
    6. 'ize' → logprob: -8.254738807678223
    7. 'ization' → logprob: -8.504738807678223
    8. 'izing' → logprob: -9.379738807678223
    9. 'ing' → logprob: -9.504738807678223
    10. '(_' → logprob: -9.504738807678223

Token 74: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10369167476892471
    2. ' ,' → logprob: -2.978691577911377
    3. ')' → logprob: -4.228691577911377
    4. ',b' → logprob: -4.728691577911377
    5. '(' → logprob: -4.853691577911377
    6. '(n' → logprob: -5.353691577911377
    7. '(a' → logprob: -5.728691577911377
    8. ',a' → logprob: -6.228691577911377
    9. '<|end|>' → logprob: -7.228691577911377
    10. ' ' → logprob: -7.228691577911377

Token 75: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6470121741294861
    2. ',c' → logprob: -1.0220122337341309
    3. ')' → logprob: -2.272012233734131
    4. '):' → logprob: -5.022012233734131
    5. ',n' → logprob: -6.647012233734131
    6. ',b' → logprob: -7.022012233734131
    7. ',d' → logprob: -7.522012233734131
    8. ',a' → logprob: -7.647012233734131
    9. ',k' → logprob: -7.647012233734131
    10. ',s' → logprob: -7.772012233734131

Token 76: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.019110236316919327
    2. ')' → logprob: -4.019110202789307
    3. ',' → logprob: -7.019110202789307
    4. ':' → logprob: -10.269110679626465
    5. '):
' → logprob: -11.519110679626465
    6. ' ):' → logprob: -11.644110679626465
    7. '   ' → logprob: -12.894110679626465
    8. '*' → logprob: -13.769110679626465
    9. '),' → logprob: -13.769110679626465
    10. '(' → logprob: -14.144110679626465

Token 77: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05634332448244095
    2. ':' → logprob: -3.3063433170318604
    3. '    ' → logprob: -5.1813435554504395
    4. ' ' → logprob: -5.3063435554504395
    5. '<|end|>' → logprob: -5.5563435554504395
    6. ' 
' → logprob: -6.5563435554504395
    7. '    
' → logprob: -7.0563435554504395
    8. '  ' → logprob: -8.681343078613281
    9. '
' → logprob: -8.681343078613281
    10. ':
' → logprob: -8.806343078613281

Token 78: ' A' (ID: 355)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1744409203529358
    2. '    ' → logprob: -2.424440860748291
    3. '   ' → logprob: -3.924440860748291
    4. ' 
' → logprob: -3.924440860748291
    5. '     
' → logprob: -4.799440860748291
    6. ' for' → logprob: -4.924440860748291
    7. 'for' → logprob: -5.299440860748291
    8. 'n' → logprob: -5.424440860748291
    9. ':' → logprob: -6.424440860748291
    10. ' ​' → logprob: -7.299440860748291

Token 79: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30852997303009033
    2. '=' → logprob: -1.9335299730300903
    3. ' =' → logprob: -2.183529853820801
    4. ' ,' → logprob: -5.183529853820801
    5. ')' → logprob: -7.558529853820801
    6. '_' → logprob: -7.933529853820801
    7. ',b' → logprob: -8.1835298538208
    8. 'r' → logprob: -8.3085298538208
    9. ' ' → logprob: -8.3085298538208
    10. 'a' → logprob: -8.8085298538208

Token 80: ' divis' (ID: 37826)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01653468608856201
    2. ' b' → logprob: -4.516534805297852
    3. 'a' → logprob: -5.391534805297852
    4. 'abs' → logprob: -7.516534805297852
    5. ' a' → logprob: -8.766534805297852
    6. '   ' → logprob: -9.891534805297852
    7. ' abs' → logprob: -10.016534805297852
    8. 'is' → logprob: -10.891534805297852
    9. '1' → logprob: -11.391534805297852
    10. '(' → logprob: -11.516534805297852

Token 81: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.16399909555912018
    2. '(a' → logprob: -2.163999080657959
    3. 'a' → logprob: -3.413999080657959
    4. 's' → logprob: -6.163999080657959
    5. '{' → logprob: -8.163999557495117
    6. '   ' → logprob: -8.288999557495117
    7. '[a' → logprob: -9.288999557495117
    8. 'is' → logprob: -9.538999557495117
    9. '       ' → logprob: -9.788999557495117
    10. '(' → logprob: -9.788999557495117

Token 82: '(a' (ID: 6271)
  Prédit: '(abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.04103924334049225
    2. '(b' → logprob: -3.291039228439331
    3. '(a' → logprob: -6.41603946685791
    4. '(c' → logprob: -6.79103946685791
    5. '(' → logprob: -8.79103946685791
    6. 'abs' → logprob: -9.66603946685791
    7. '(ab' → logprob: -11.54103946685791
    8. ' abs' → logprob: -12.91603946685791
    9. '(s' → logprob: -13.66603946685791
    10. '(B' → logprob: -13.66603946685791

Token 83: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023619852436240762
    2. ' )' → logprob: -8.500236511230469
    3. '())' → logprob: -11.625236511230469
    4. ')*' → logprob: -12.000236511230469
    5. ')
' → logprob: -12.125236511230469
    6. ').' → logprob: -13.000236511230469
    7. '*)' → logprob: -13.250236511230469
    8. ' ' → logprob: -13.250236511230469
    9. '),' → logprob: -13.875236511230469
    10. '*' → logprob: -14.250236511230469

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16161015629768372
    2. '<|end|>' → logprob: -2.2866101264953613
    3. ' ' → logprob: -3.7866101264953613
    4. ',' → logprob: -4.786610126495361
    5. '    
' → logprob: -5.661610126495361
    6. '<|end|>' → logprob: -5.786610126495361
    7. '    ' → logprob: -5.786610126495361
    8. '#' → logprob: -6.911610126495361
    9. ' 
' → logprob: -7.161610126495361
    10. ' ,' → logprob: -7.286610126495361

Token 85: ' C' (ID: 363)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.3627179265022278
    2. 'B' → logprob: -1.237717866897583
    3. ' ' → logprob: -4.362718105316162
    4. '  ' → logprob: -7.362718105316162
    5. '   ' → logprob: -7.487718105316162
    6. '    ' → logprob: -9.737717628479004
    7. '	B' → logprob: -10.112717628479004
    8. 'C' (adapté à ' C') → logprob: -11.237717628479004
    9. ' 
' → logprob: -11.362717628479004
    10. ' space' → logprob: -11.362717628479004

Token 86: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759395956993103
    2. ' =' → logprob: -0.8259395956993103
    3. ' ' → logprob: -16.075939178466797
    4. '＝' → logprob: -17.200939178466797
    5. '=

' → logprob: -17.325939178466797
    6. 's' → logprob: -17.575939178466797
    7. '   ' → logprob: -18.700939178466797
    8. '=}' → logprob: -18.700939178466797
    9. '  ' → logprob: -18.825939178466797
    10. '	' → logprob: -19.075939178466797

Token 87: ' divis' (ID: 37826)
  Prédit: ' divis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' divis' → logprob: -0.012529193423688412
    2. 'div' → logprob: -4.387529373168945
    3. ' ' → logprob: -12.012529373168945
    4. ' div' → logprob: -12.387529373168945
    5. '	div' → logprob: -12.637529373168945
    6. '(div' → logprob: -13.262529373168945
    7. ' divid' → logprob: -13.637529373168945
    8. ' divisible' → logprob: -13.762529373168945
    9. ' divisions' → logprob: -14.637529373168945
    10. ' divers' → logprob: -14.637529373168945

Token 88: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.002011075848713517
    2. 's' → logprob: -7.252011299133301
    3. 'tors' → logprob: -7.252011299133301
    4. 'iors' → logprob: -8.2520112991333
    5. 'is' → logprob: -9.0020112991333
    6. 'orsi' → logprob: -10.1270112991333
    7. 'vors' → logprob: -10.2520112991333
    8. '{' → logprob: -10.5020112991333
    9. 'div' → logprob: -11.1270112991333
    10. 'vars' → logprob: -11.3770112991333

Token 89: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -8.959636033978313e-05
    2. '(' → logprob: -9.750089645385742
    3. '(abs' → logprob: -10.875089645385742
    4. ' (' → logprob: -12.000089645385742
    5. 'c' → logprob: -12.750089645385742
    6. 'abs' → logprob: -13.875089645385742
    7. '<|end|>' → logprob: -14.375089645385742
    8. ')c' → logprob: -15.125089645385742
    9. '(
' → logprob: -15.250089645385742
    10. '(b' → logprob: -15.500089645385742

Token 90: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6047699318733066e-05
    2. ' )' → logprob: -11.250016212463379
    3. ')
' → logprob: -12.875016212463379
    4. '   ' → logprob: -15.625016212463379
    5. ')

' → logprob: -16.750015258789062
    6. ')a' → logprob: -17.625015258789062
    7. '())' → logprob: -17.750015258789062
    8. '}' → logprob: -17.875015258789062
    9. ')return' → logprob: -17.875015258789062
    10. ')#' → logprob: -17.875015258789062

Token 91: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.058145325630903244
    2. ' for' → logprob: -2.93314528465271
    3. '
' → logprob: -6.183145523071289
    4. 'for' → logprob: -7.308145523071289
    5. '    
' → logprob: -7.808145523071289
    6. ' ' → logprob: -10.433145523071289
    7. ' 
' → logprob: -11.058145523071289
    8. '  
' → logprob: -11.183145523071289
    9. '	for' → logprob: -11.183145523071289
    10. '<|end|>' → logprob: -11.558145523071289

Token 92: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44172507524490356
    2. 'for' → logprob: -1.1917250156402588
    3. ' for' → logprob: -2.941725015640259
    4. 'result' → logprob: -8.19172477722168
    5. ' ' → logprob: -9.31672477722168
    6. '    
' → logprob: -9.44172477722168
    7. '  ' → logprob: -10.06672477722168
    8. '    ' → logprob: -10.81672477722168
    9. ' result' → logprob: -10.81672477722168
    10. '	for' → logprob: -11.19172477722168

Token 93: ' For' (ID: 2214)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6798083782196045
    2. ' for' → logprob: -0.8048083782196045
    3. 'for' → logprob: -3.1798083782196045
    4. ' ' → logprob: -5.804808616638184
    5. '  ' → logprob: -7.304808616638184
    6. '    ' → logprob: -7.304808616638184
    7. '       ' → logprob: -10.304808616638184
    8. 'For' → logprob: -10.679808616638184
    9. '	for' → logprob: -11.054808616638184
    10. '#' → logprob: -11.054808616638184

Token 94: ' q' (ID: 2335)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.4501628875732422
    2. ' p' → logprob: -1.4501628875732422
    3. ' A' → logprob: -1.8251628875732422
    4. ' a' → logprob: -2.200162887573242
    5. ' b' → logprob: -2.700162887573242
    6. ' x' → logprob: -3.200162887573242
    7. ' r' → logprob: -3.700162887573242
    8. ' B' → logprob: -3.700162887573242
    9. ' m' → logprob: -3.700162887573242
    10. ' ac' → logprob: -4.075162887573242

Token 95: ' and' (ID: 326)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.1836870312690735
    2. ' in' → logprob: -2.4336869716644287
    3. '_' → logprob: -2.9336869716644287
    4. ' ' → logprob: -4.683687210083008
    5. 'ue' → logprob: -4.683687210083008
    6. ' u' → logprob: -6.183687210083008
    7. '  ' → logprob: -7.183687210083008
    8. '   ' → logprob: -7.183687210083008
    9. 'ual' → logprob: -7.183687210083008
    10. 'a' → logprob: -7.308687210083008

Token 96: ' s' (ID: 265)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.006513101980090141
    2. ' p' → logprob: -5.6315131187438965
    3. 'r' → logprob: -5.8815131187438965
    4. 'q' → logprob: -10.131512641906738
    5. ' r' → logprob: -10.506512641906738
    6. 'd' → logprob: -10.881512641906738
    7. 's' → logprob: -11.756512641906738
    8. 'm' → logprob: -12.131512641906738
    9. '```' → logprob: -12.381512641906738
    10. 'u' → logprob: -13.381512641906738

Token 97: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12366000562906265
    2. ' in' → logprob: -2.373660087585449
    3. ' for' → logprob: -4.998660087585449
    4. ' ' → logprob: -4.998660087585449
    5. '   ' → logprob: -6.248660087585449
    6. ':
' → logprob: -6.373660087585449
    7. ' :' → logprob: -6.873660087585449
    8. '<|end|>' → logprob: -6.873660087585449
    9. ',' → logprob: -7.123660087585449
    10. '  ' → logprob: -7.623660087585449

Token 98: ' can' (ID: 665)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6146549582481384
    2. ' ' → logprob: -1.7396550178527832
    3. '<|end|>' → logprob: -2.239655017852783
    4. 'for' → logprob: -2.614655017852783
    5. ' you' → logprob: -3.739655017852783
    6. ' we' → logprob: -3.864655017852783
    7. '    ' → logprob: -4.989655017852783
    8. ' there' → logprob: -5.114655017852783
    9. ' in' → logprob: -5.114655017852783
    10. '   ' → logprob: -5.614655017852783

Token 99: ' be' (ID: 413)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8475491404533386
    2. ':' → logprob: -1.9725492000579834
    3. 'for' → logprob: -2.8475492000579834
    4. ''s' → logprob: -2.9725492000579834
    5. ' =' → logprob: -3.0975492000579834
    6. '#' → logprob: -3.3475492000579834
    7. ' q' → logprob: -3.3475492000579834
    8. ' in' → logprob: -3.4725492000579834
    9. 'q' → logprob: -3.5975492000579834
    10. '   ' → logprob: -4.222548961639404

Token 100: ' negative' (ID: 12626)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.6964255571365356
    2. ' in' → logprob: -2.321425437927246
    3. '       ' → logprob: -2.571425437927246
    4. ' any' → logprob: -2.821425437927246
    5. 'for' → logprob: -3.071425437927246
    6. ' ' → logprob: -3.196425437927246
    7. '    ' → logprob: -3.196425437927246
    8. '  ' → logprob: -3.196425437927246
    9. 's' → logprob: -3.571425437927246
    10. ' for' → logprob: -3.571425437927246

Token 101: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23848500847816467
    2. '
' → logprob: -1.8634849786758423
    3. '    
' → logprob: -3.988485097885132
    4. ' for' → logprob: -4.488484859466553
    5. '<|end|>' → logprob: -4.863484859466553
    6. ' ' → logprob: -5.113484859466553
    7. '    ' → logprob: -5.738484859466553
    8. ' 
' → logprob: -5.988484859466553
    9. ',' → logprob: -6.238484859466553
    10. 'for' → logprob: -6.863484859466553

Token 102: ' so' (ID: 813)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.30054277181625366
    2. 'for' → logprob: -2.3005428314208984
    3. '   ' → logprob: -2.5505428314208984
    4. ' ' → logprob: -3.1755428314208984
    5. '    ' → logprob: -3.6755428314208984
    6. '-' → logprob: -4.925542831420898
    7. '#' → logprob: -6.925542831420898
    8. '    
' → logprob: -6.925542831420898
    9. ' #' → logprob: -7.050542831420898
    10. '  ' → logprob: -7.300542831420898

Token 103: ' consider' (ID: 3331)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.09152937680482864
    2. ' q' → logprob: -3.591529369354248
    3. 'for' → logprob: -3.716529369354248
    4. '   ' → logprob: -4.216529369354248
    5. '    ' → logprob: -4.591529369354248
    6. ' qs' → logprob: -5.216529369354248
    7. 'qs' → logprob: -6.591529369354248
    8. '       ' → logprob: -7.716529369354248
    9. 'q' → logprob: -7.841529369354248
    10. 's' → logprob: -7.966529369354248

Token 104: ' sign' (ID: 2232)
  Prédit: ' C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' C' → logprob: -1.541427493095398
    2. ' list' → logprob: -1.541427493095398
    3. ' both' → logprob: -2.1664276123046875
    4. ' q' → logprob: -2.2914276123046875
    5. ' range' → logprob: -2.2914276123046875
    6. ' ' → logprob: -2.6664276123046875
    7. 'C' → logprob: -3.0414276123046875
    8. ' for' → logprob: -3.9164276123046875
    9. ' [-' → logprob: -4.1664276123046875
    10. ' set' → logprob: -4.4164276123046875

Token 105: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.646173894405365
    2. '
' → logprob: -1.2711739540100098
    3. ' for' → logprob: -2.6461739540100098
    4. '<|end|>' → logprob: -3.1461739540100098
    5. '    
' → logprob: -4.27117395401001
    6. 's' → logprob: -4.27117395401001
    7. ' ' → logprob: -4.64617395401001
    8. ',' → logprob: -4.77117395401001
    9. 'for' → logprob: -4.89617395401001
    10. '    ' → logprob: -5.64617395401001

Token 106: ' b' (ID: 287)
  Prédit: ' C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.9241505861282349
    2. ' range' → logprob: -0.9241505861282349
    3. 'C' → logprob: -2.6741504669189453
    4. '[' → logprob: -3.4241504669189453
    5. ' [-' → logprob: -3.5491504669189453
    6. 'range' → logprob: -4.299150466918945
    7. ' both' → logprob: -4.424150466918945
    8. ' ' → logprob: -4.549150466918945
    9. '[-' → logprob: -4.549150466918945
    10. ' [' → logprob: -4.924150466918945

Token 107: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.046325650066137314
    2. '<|end|>' → logprob: -3.92132568359375
    3. '    ' → logprob: -4.42132568359375
    4. ' ' → logprob: -4.54632568359375
    5. ' for' → logprob: -7.17132568359375
    6. '  ' → logprob: -7.42132568359375
    7. '    
' → logprob: -8.29632568359375
    8. '<|end|>' → logprob: -8.29632568359375
    9. ',' → logprob: -8.42132568359375
    10. ')' → logprob: -8.67132568359375

Token 108: ' ps' (ID: 10942)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.44118431210517883
    2. ' q' → logprob: -1.4411842823028564
    3. ' -' → logprob: -3.0661842823028564
    4. '-' → logprob: -3.6911842823028564
    5. 'p' → logprob: -4.4411845207214355
    6. '-q' → logprob: -4.5661845207214355
    7. '-(' → logprob: -4.6911845207214355
    8. ' p' → logprob: -5.0661845207214355
    9. ' -(' → logprob: -5.9411845207214355
    10. '-s' → logprob: -6.3161845207214355

Token 109: ' +' (ID: 659)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5435495376586914
    2. 'p' → logprob: -1.6685495376586914
    3. '+' → logprob: -2.1685495376586914
    4. 'q' → logprob: -3.6685495376586914
    5. '<|end|>' → logprob: -3.7935495376586914
    6. 'r' → logprob: -4.418549537658691
    7. '-' → logprob: -4.418549537658691
    8. '*' → logprob: -5.293549537658691
    9. 'for' → logprob: -5.293549537658691
    10. 'qrt' → logprob: -5.543549537658691

Token 110: ' qr' (ID: 81178)
  Prédit: 'qr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qr' → logprob: -0.10838934779167175
    2. 'q' → logprob: -2.733389377593994
    3. 'qs' → logprob: -3.608389377593994
    4. ' qr' → logprob: -5.358389377593994
    5. ' q' → logprob: -5.858389377593994
    6. 'qt' → logprob: -6.983389377593994
    7. 'pr' → logprob: -7.358389377593994
    8. '1' → logprob: -7.733389377593994
    9. ' ' → logprob: -8.108388900756836
    10. ' qs' → logprob: -8.608388900756836

Token 111: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3255556523799896
    2. ' for' → logprob: -1.950555682182312
    3. ' ' → logprob: -2.3255555629730225
    4. '<|end|>' → logprob: -4.200555801391602
    5. 'for' → logprob: -4.575555801391602
    6. '    ' → logprob: -4.950555801391602
    7. '  ' → logprob: -6.450555801391602
    8. '
' → logprob: -7.075555801391602
    9. ' 
' → logprob: -7.325555801391602
    10. '    
' → logprob: -7.825555801391602

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011433635838329792
    2. ' for' → logprob: -4.8864336013793945
    3. 'for' → logprob: -6.3864336013793945
    4. '<|end|>' → logprob: -6.6364336013793945
    5. ' ' → logprob: -8.011433601379395
    6. '    ' → logprob: -8.761433601379395
    7. '  ' → logprob: -9.011433601379395
    8. '    
' → logprob: -9.636433601379395
    9. '       ' → logprob: -10.261433601379395
    10. '
' → logprob: -10.261433601379395

Token 113: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10609307885169983
    2. ' for' → logprob: -2.481093168258667
    3. 'for' (adapté à ' for') → logprob: -4.106092929840088
    4. '    ' → logprob: -8.606093406677246
    5. ' ' → logprob: -8.856093406677246
    6. '  ' → logprob: -9.356093406677246
    7. '       ' → logprob: -9.981093406677246
    8. '	for' → logprob: -10.231093406677246
    9. '    
' → logprob: -11.106093406677246
    10. '
' → logprob: -12.106093406677246

Token 114: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.011403233744204044
    2. 'p' → logprob: -4.5114030838012695
    3. ' ' → logprob: -8.63640308380127
    4. ' q' → logprob: -9.13640308380127
    5. '   ' → logprob: -10.88640308380127
    6. ' P' → logprob: -11.38640308380127
    7. ' (' → logprob: -11.76140308380127
    8. 'q' → logprob: -12.26140308380127
    9. ' a' → logprob: -12.63640308380127
    10. '  ' → logprob: -12.76140308380127

Token 115: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10189822316169739
    2. ' ' → logprob: -2.351898193359375
    3. 'in' → logprob: -6.476898193359375
    4. '<|end|>' → logprob: -9.226898193359375
    5. '  ' → logprob: -11.476898193359375
    6. ',' → logprob: -11.726898193359375
    7. 's' → logprob: -12.101898193359375
    8. '	in' → logprob: -12.101898193359375
    9. ' ,' → logprob: -12.914398193359375
    10. ' ' → logprob: -12.914398193359375

Token 116: ' sorted' (ID: 20099)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.38829678297042847
    2. 'A' → logprob: -1.1382968425750732
    3. 'P' → logprob: -7.388296604156494
    4. ' C' → logprob: -7.888296604156494
    5. 'C' → logprob: -8.013297080993652
    6. ' P' → logprob: -10.013297080993652
    7. ' ' → logprob: -10.513297080993652
    8. ' range' → logprob: -12.263297080993652
    9. '(A' → logprob: -12.513297080993652
    10. 'range' → logprob: -12.763297080993652

Token 117: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.005949183367192745
    2. '(C' → logprob: -5.255949020385742
    3. '(P' → logprob: -7.255949020385742
    4. '(' → logprob: -13.005949020385742
    5. '(p' → logprob: -13.380949020385742
    6. '(Q' → logprob: -13.880949020385742
    7. '(list' → logprob: -13.880949020385742
    8. 'A' → logprob: -14.130949020385742
    9. '((' → logprob: -14.380949020385742
    10. '(B' → logprob: -14.505949020385742

Token 118: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001095330691896379
    2. ' ):' → logprob: -6.876095294952393
    3. '):
' → logprob: -10.25109577178955
    4. ')' → logprob: -11.37609577178955
    5. ':' → logprob: -11.87609577178955
    6. '():' → logprob: -12.37609577178955
    7. '   ' → logprob: -13.75109577178955
    8. ' ' → logprob: -14.50109577178955
    9. '):
' → logprob: -14.50109577178955
    10. ',' → logprob: -14.62609577178955

Token 119: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3069179356098175
    2. '       ' → logprob: -2.056917905807495
    3. '<|end|>' → logprob: -2.306917905807495
    4. ' :' → logprob: -4.431918144226074
    5. ' for' → logprob: -4.556918144226074
    6. ' ' → logprob: -5.181918144226074
    7. '   ' → logprob: -5.306918144226074
    8. '<|end|>' → logprob: -6.431918144226074
    9. ':
' → logprob: -7.931918144226074
    10. '  ' → logprob: -7.931918144226074

Token 120: ' r' (ID: 428)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.25933852791786194
    2. ' ' → logprob: -1.5093384981155396
    3. 'for' → logprob: -5.25933837890625
    4. '<|end|>' → logprob: -6.38433837890625
    5. '   ' → logprob: -9.00933837890625
    6. '    ' → logprob: -9.13433837890625
    7. '       ' → logprob: -9.63433837890625
    8. '  ' → logprob: -9.75933837890625
    9. ' 
' → logprob: -10.00933837890625
    10. '	for' → logprob: -10.25933837890625

Token 121: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9791160821914673
    2. '=' → logprob: -1.3541160821914673
    3. ' in' → logprob: -1.7291160821914673
    4. ' ' → logprob: -1.9791160821914673
    5. ' for' → logprob: -3.4791159629821777
    6. 'for' → logprob: -5.104115962982178
    7. 'or' → logprob: -5.229115962982178
    8. 's' → logprob: -5.354115962982178
    9. 'in' → logprob: -6.354115962982178
    10. '  ' → logprob: -7.354115962982178

Token 122: ' a' (ID: 261)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7727674841880798
    2. 'b' → logprob: -0.8977674841880798
    3. 'a' → logprob: -2.8977675437927246
    4. ' c' → logprob: -3.3977675437927246
    5. ' b' → logprob: -4.147767543792725
    6. ' ' → logprob: -4.897767543792725
    7. ' a' → logprob: -5.772767543792725
    8. ' -' → logprob: -5.897767543792725
    9. '<|end|>' → logprob: -6.022767543792725
    10. '-' → logprob: -6.272767543792725

Token 123: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.6327104568481445
    2. '//' → logprob: -0.7577104568481445
    3. 'p' → logprob: -10.382710456848145
    4. '/p' → logprob: -10.882710456848145
    5. ' ' → logprob: -11.257710456848145
    6. '/' → logprob: -11.257710456848145
    7. ' /' → logprob: -11.507710456848145
    8. ' p' → logprob: -11.632710456848145
    9. '#' → logprob: -11.632710456848145
    10. ' ' → logprob: -12.757710456848145

Token 124: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -9.014684110297821e-06
    2. ' p' → logprob: -11.625008583068848
    3. '<p' → logprob: -19.625009536743164
    4. ' ' → logprob: -21.500009536743164
    5. '	p' → logprob: -21.875009536743164
    6. '_p' → logprob: -22.375009536743164
    7. '(p' → logprob: -22.875009536743164
    8. '<|end|>' → logprob: -23.000009536743164
    9. '*p' → logprob: -23.125009536743164
    10. '-p' → logprob: -23.125009536743164

Token 125: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6932331919670105
    2. ' for' → logprob: -0.9432331919670105
    3. 'for' → logprob: -2.4432332515716553
    4. '
' → logprob: -4.193233013153076
    5. '<|end|>' → logprob: -5.068233013153076
    6. '   ' → logprob: -6.943233013153076
    7. ':' → logprob: -8.318233489990234
    8. '        
' → logprob: -8.693233489990234
    9. ',' → logprob: -8.818233489990234
    10. '	for' → logprob: -8.943233489990234

Token 126: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028683168813586235
    2. ' for' → logprob: -4.153683185577393
    3. '<|end|>' → logprob: -4.903683185577393
    4. 'for' → logprob: -5.903683185577393
    5. '
' → logprob: -6.528683185577393
    6. '        
' → logprob: -7.528683185577393
    7. '   ' → logprob: -9.278682708740234
    8. '<|end|>' → logprob: -9.528682708740234
    9. ' 
' → logprob: -9.903682708740234
    10. ' ' → logprob: -9.903682708740234

Token 127: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.010267726145684719
    2. ' for' → logprob: -4.635267734527588
    3. '       ' → logprob: -7.635267734527588
    4. 's' → logprob: -12.01026725769043
    5. '   ' → logprob: -12.13526725769043
    6. 'if' (adapté à ' if') → logprob: -12.38526725769043
    7. 'q' → logprob: -12.51026725769043
    8. ' ' → logprob: -13.01026725769043
    9. '           ' → logprob: -13.01026725769043
    10. '        ' → logprob: -14.63526725769043

Token 128: ' r' (ID: 428)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.0471456050872803
    2. ' p' → logprob: -1.0471456050872803
    3. 'r' → logprob: -2.7971456050872803
    4. 'b' → logprob: -2.7971456050872803
    5. ' r' → logprob: -2.7971456050872803
    6. ' b' → logprob: -2.9221456050872803
    7. ' c' → logprob: -3.7971456050872803
    8. 'c' → logprob: -3.9221456050872803
    9. ' not' → logprob: -4.922145843505859
    10. ' abs' → logprob: -5.797145843505859

Token 129: ' <=' (ID: 5017)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2295362651348114
    2. ' <' → logprob: -2.604536294937134
    3. ' ' → logprob: -3.104536294937134
    4. '==' → logprob: -3.604536294937134
    5. ' >=' → logprob: -3.854536294937134
    6. ' >' → logprob: -3.979536294937134
    7. ' <=' → logprob: -5.104536056518555
    8. ')' → logprob: -5.979536056518555
    9. ' !=' → logprob: -5.979536056518555
    10. ' not' → logprob: -6.104536056518555

Token 130: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.021271424368023872
    2. ' ' → logprob: -3.8962714672088623
    3. 'p' → logprob: -7.521271228790283
    4. ' p' → logprob: -8.771271705627441
    5. '1' → logprob: -10.646271705627441
    6. '
' → logprob: -12.771271705627441
    7. '  ' → logprob: -13.521271705627441
    8. '   ' → logprob: -14.333771705627441
    9. '=' → logprob: -14.458771705627441
    10. '    ' → logprob: -15.146271705627441

Token 131: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06632117182016373
    2. 'p' → logprob: -3.1913211345672607
    3. ' ' → logprob: -3.9413211345672607
    4. ' p' → logprob: -5.69132137298584
    5. '1' → logprob: -8.31632137298584
    6. '2' → logprob: -13.56632137298584
    7. '  ' → logprob: -14.37882137298584
    8. '=' → logprob: -14.44132137298584
    9. '100' → logprob: -14.62882137298584
    10. '3' → logprob: -14.81632137298584

Token 132: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01153816282749176
    2. ':
' → logprob: -4.511538028717041
    3. ' or' → logprob: -8.0115385055542
    4. ' :' → logprob: -9.5115385055542
    5. ':return' → logprob: -10.7615385055542
    6. ' and' → logprob: -10.8865385055542
    7. '<|end|>' → logprob: -10.8865385055542
    8. '       ' → logprob: -11.3865385055542
    9. ' :
' → logprob: -12.3865385055542
    10. '   ' → logprob: -12.7615385055542

Token 133: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8683968186378479
    2. ':' → logprob: -1.2433967590332031
    3. '       ' → logprob: -1.3683967590332031
    4. ':
' → logprob: -3.743396759033203
    5. ' continue' → logprob: -4.993396759033203
    6. ' or' → logprob: -5.368396759033203
    7. 'continue' → logprob: -6.868396759033203
    8. '
' → logprob: -8.243396759033203
    9. '   ' → logprob: -8.368396759033203
    10. ' and' → logprob: -8.493396759033203

Token 134: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.5879714488983154
    2. ' continue' → logprob: -1.3379714488983154
    3. '           ' → logprob: -1.7129714488983154
    4. '	continue' → logprob: -7.3379716873168945
    5. '       ' → logprob: -7.4629716873168945
    6. '               ' → logprob: -7.8379716873168945
    7. '
' → logprob: -9.587971687316895
    8. '   ' → logprob: -9.962971687316895
    9. 'contin' → logprob: -10.587971687316895
    10. '_continue' → logprob: -10.587971687316895

Token 135: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 136: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43005338311195374
    2. '<|end|>' → logprob: -1.0550533533096313
    3. ' ' → logprob: -7.430053234100342
    4. '<|end|>' → logprob: -7.930053234100342
    5. '	' → logprob: -9.5550537109375
    6. '        
' → logprob: -9.6800537109375
    7. '   ' → logprob: -9.9300537109375
    8. ' for' → logprob: -10.0550537109375
    9. ')' → logprob: -10.6800537109375
    10. '
' → logprob: -10.6800537109375

Token 137: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5901277661323547
    2. '       ' → logprob: -1.34012770652771
    3. 'for' (adapté à ' for') → logprob: -2.21512770652771
    4. '   ' → logprob: -3.09012770652771
    5. ' ' → logprob: -4.090127944946289
    6. '<|end|>' → logprob: -5.340127944946289
    7. '	for' → logprob: -6.340127944946289
    8. '        
' → logprob: -6.590127944946289
    9. '    ' → logprob: -6.840127944946289
    10. '
' → logprob: -7.090127944946289

Token 138: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.16056875884532928
    2. ' q' → logprob: -1.9105687141418457
    3. 's' → logprob: -8.410569190979004
    4. ' s' → logprob: -9.785569190979004
    5. 'qs' → logprob: -10.410569190979004
    6. '   ' → logprob: -11.910569190979004
    7. ' ' → logprob: -12.285569190979004
    8. '#' → logprob: -12.410569190979004
    9. '	q' → logprob: -12.535569190979004
    10. '```' → logprob: -13.348069190979004

Token 139: '_sign' (ID: 24730)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004635891877114773
    2. 'in' → logprob: -5.379635810852051
    3. ' ' → logprob: -11.25463581085205
    4. 's' → logprob: -14.12963581085205
    5. ',' → logprob: -14.75463581085205
    6. '	in' → logprob: -14.75463581085205
    7. 'In' → logprob: -15.50463581085205
    8. '  ' → logprob: -15.62963581085205
    9. '<|end|>' → logprob: -15.87963581085205
    10. 'n' → logprob: -15.87963581085205

Token 140: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012942914851009846
    2. 'in' → logprob: -4.387942790985107
    3. ' ' → logprob: -8.012943267822266
    4. ',' → logprob: -10.012943267822266
    5. 's' → logprob: -10.512943267822266
    6. ' ,' → logprob: -11.387943267822266
    7. '  ' → logprob: -11.637943267822266
    8. '	in' → logprob: -13.012943267822266
    9. 'import' → logprob: -13.512943267822266
    10. '<|end|>' → logprob: -14.012943267822266

Token 141: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08648419380187988
    2. '[-' → logprob: -2.58648419380188
    3. '(' → logprob: -5.336483955383301
    4. ' [' → logprob: -6.211483955383301
    5. '(-' → logprob: -7.711483955383301
    6. ' [-' → logprob: -8.8364839553833
    7. ' (' → logprob: -9.2114839553833
    8. ' (-' → logprob: -11.3364839553833
    9. '(+' → logprob: -11.3364839553833
    10. ' [+' → logprob: -11.4614839553833

Token 142: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5245805382728577
    2. '-' → logprob: -0.8995805382728577
    3. ' ' → logprob: -7.024580478668213
    4. ' -' → logprob: -7.524580478668213
    5. '+' → logprob: -10.774580955505371
    6. '   ' → logprob: -12.649580955505371
    7. '(-' → logprob: -14.774580955505371
    8. '  ' → logprob: -14.899580955505371
    9. '-
' → logprob: -15.024580955505371
    10. 'True' → logprob: -15.274580955505371

Token 143: ',-' (ID: 8202)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00048405781853944063
    2. ',-' → logprob: -7.750483989715576
    3. ' ,' → logprob: -10.125484466552734
    4. ',q' → logprob: -12.250484466552734
    5. '-' → logprob: -12.375484466552734
    6. ',
' → logprob: -13.000484466552734
    7. ']' → logprob: -14.375484466552734
    8. ',

' → logprob: -15.250484466552734
    9. '-,' → logprob: -15.500484466552734
    10. ' -' → logprob: -15.625484466552734

Token 144: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -14.000001907348633
    3. '<|end|>' → logprob: -14.500001907348633
    4. ']' → logprob: -16.375001907348633
    5. '<|end|>' → logprob: -16.875001907348633
    6. '```' → logprob: -17.375001907348633
    7. '">' → logprob: -18.312501907348633
    8. '۱' → logprob: -18.375001907348633
    9. ')' → logprob: -18.500001907348633
    10. '１' → logprob: -18.500001907348633

Token 145: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.00089442846365273
    2. ']:
' → logprob: -7.125894546508789
    3. ']' → logprob: -9.625894546508789
    4. ',' → logprob: -11.750894546508789
    5. ']:
' → logprob: -12.000894546508789
    6. ' ]' → logprob: -12.750894546508789
    7. ']:

' → logprob: -13.000894546508789
    8. ':' → logprob: -13.500894546508789
    9. '"]:' → logprob: -14.375894546508789
    10. '']:' → logprob: -14.500894546508789

Token 146: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3022376298904419
    2. '           ' → logprob: -2.0522375106811523
    3. ' for' → logprob: -2.4272375106811523
    4. '        ' → logprob: -3.9272375106811523
    5. ' q' → logprob: -4.927237510681152
    6. ' ' → logprob: -5.302237510681152
    7. ':' → logprob: -5.552237510681152
    8. '   ' → logprob: -6.552237510681152
    9. '         ' → logprob: -6.677237510681152
    10. '               ' → logprob: -7.052237510681152

Token 147: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.21869216859340668
    2. '           ' → logprob: -1.8436921834945679
    3. '               ' → logprob: -4.718692302703857
    4. ' q' → logprob: -4.718692302703857
    5. ' ' → logprob: -4.968692302703857
    6. 'for' (adapté à ' for') → logprob: -5.218692302703857
    7. '1' → logprob: -5.843692302703857
    8. '            ' → logprob: -6.343692302703857
    9. '<|end|>' → logprob: -6.968692302703857
    10. 'q' → logprob: -7.593692302703857

Token 148: ' s' (ID: 265)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.48440006375312805
    2. ' q' → logprob: -1.2344000339508057
    3. 's' → logprob: -2.9844000339508057
    4. ' s' → logprob: -3.2344000339508057
    5. 'qs' → logprob: -6.984400272369385
    6. 'r' → logprob: -7.234400272369385
    7. ' r' → logprob: -8.109399795532227
    8. 'C' → logprob: -8.484399795532227
    9. ' qs' → logprob: -8.671899795532227
    10. ' C' → logprob: -9.046899795532227

Token 149: '_sign' (ID: 24730)
  Prédit: '_sign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sign' → logprob: -0.08253726363182068
    2. 'in' → logprob: -2.9575371742248535
    3. ' in' → logprob: -3.8325371742248535
    4. 'sign' → logprob: -5.2075371742248535
    5. ' ' → logprob: -10.332537651062012
    6. '_' → logprob: -10.707537651062012
    7. '_in' → logprob: -10.832537651062012
    8. 'Sign' → logprob: -10.957537651062012
    9. '_SIGN' → logprob: -11.082537651062012
    10. '<|end|>' → logprob: -11.707537651062012

Token 150: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008635842241346836
    2. 'in' → logprob: -4.758635997772217
    3. '<|end|>' → logprob: -11.633635520935059
    4. '[' → logprob: -11.883635520935059
    5. ' ' → logprob: -13.383635520935059
    6. 's' → logprob: -14.008635520935059
    7. '```' → logprob: -14.508635520935059
    8. '<|end|>' → logprob: -14.571135520935059
    9. ' [' → logprob: -14.883635520935059
    10. 'In' → logprob: -15.071135520935059

Token 151: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002190233441069722
    2. ' [' → logprob: -6.127190113067627
    3. '[-' → logprob: -12.627190589904785
    4. '1' → logprob: -14.252190589904785
    5. '{' → logprob: -15.252190589904785
    6. ' ' → logprob: -15.252190589904785
    7. '<|end|>' → logprob: -15.627190589904785
    8. '(' → logprob: -16.12718963623047
    9. '[
' → logprob: -16.75218963623047
    10. '   ' → logprob: -16.75218963623047

Token 152: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.500011444091797
    3. '-' → logprob: -13.500011444091797
    4. ' -' → logprob: -16.750011444091797
    5. '
' → logprob: -17.500011444091797
    6. '   ' → logprob: -18.000011444091797
    7. '```' → logprob: -18.625011444091797
    8. '<|end|>' → logprob: -18.625011444091797
    9. '  ' → logprob: -19.250011444091797
    10. '

' → logprob: -19.375011444091797

Token 153: ',-' (ID: 8202)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012093872763216496
    2. ',-' → logprob: -4.512094020843506
    3. '1' → logprob: -8.012093544006348
    4. '<|end|>' → logprob: -8.387093544006348
    5. ',
' → logprob: -9.512093544006348
    6. '-' → logprob: -9.762093544006348
    7. ']' → logprob: -9.887093544006348
    8. ' ,' → logprob: -10.137093544006348
    9. 'def' → logprob: -10.387093544006348
    10. ':' → logprob: -10.512093544006348

Token 154: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.000000953674316
    3. 'sign' → logprob: -16.875
    4. '-' → logprob: -16.875
    5. '<|end|>' → logprob: -16.875
    6. '```' → logprob: -16.9375
    7. 's' → logprob: -17.4375
    8. ']' → logprob: -17.75
    9. 'q' → logprob: -18.1875
    10. '
' → logprob: -18.6875

Token 155: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.12763471901416779
    2. ']:
' → logprob: -2.1276347637176514
    3. ']:

' → logprob: -8.12763500213623
    4. ']' → logprob: -8.62763500213623
    5. ':' → logprob: -9.12763500213623
    6. ']:
' → logprob: -9.50263500213623
    7. '           ' → logprob: -11.00263500213623
    8. '               ' → logprob: -11.37763500213623
    9. ']:


' → logprob: -11.87763500213623
    10. '       ' → logprob: -13.00263500213623

Token 156: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00272594066336751
    2. '           ' → logprob: -6.002726078033447
    3. ' for' → logprob: -9.502725601196289
    4. '       ' → logprob: -10.127725601196289
    5. '                   ' → logprob: -10.377725601196289
    6. '             ' → logprob: -11.127725601196289
    7. '<|end|>' → logprob: -11.127725601196289
    8. '                       ' → logprob: -11.252725601196289
    9. '            ' → logprob: -11.752725601196289
    10. ':' → logprob: -11.877725601196289

Token 157: ' for' (ID: 395)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07671551406383514
    2. ' q' → logprob: -3.3267154693603516
    3. ' for' → logprob: -3.8267154693603516
    4. '               ' → logprob: -4.701715469360352
    5. '                       ' → logprob: -6.076715469360352
    6. '           ' → logprob: -6.326715469360352
    7. 'q' → logprob: -6.576715469360352
    8. 'for' (adapté à ' for') → logprob: -7.576715469360352
    9. '                           ' → logprob: -8.201715469360352
    10. '                ' → logprob: -8.451715469360352

Token 158: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.7909924983978271
    2. 'p' → logprob: -1.4159924983978271
    3. ' q' → logprob: -1.5409924983978271
    4. ' p' → logprob: -2.415992498397827
    5. 's' → logprob: -9.165992736816406
    6. '   ' → logprob: -9.540992736816406
    7. ' s' → logprob: -9.665992736816406
    8. 'r' → logprob: -9.790992736816406
    9. 'c' → logprob: -10.478492736816406
    10. ' ' → logprob: -10.603492736816406

Token 159: '_val' (ID: 13694)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14289981126785278
    2. 'in' → logprob: -2.017899751663208
    3. ' ' → logprob: -8.642899513244629
    4. 'import' → logprob: -11.767899513244629
    5. ' q' → logprob: -11.892899513244629
    6. 'q' → logprob: -11.892899513244629
    7. '  ' → logprob: -12.392899513244629
    8. '_in' → logprob: -12.392899513244629
    9. 's' → logprob: -12.767899513244629
    10. ',' → logprob: -12.767899513244629

Token 160: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003561823396012187
    2. 'in' → logprob: -5.878561973571777
    3. ' ' → logprob: -7.378561973571777
    4. ',' → logprob: -9.753561973571777
    5. 's' → logprob: -10.253561973571777
    6. '<|end|>' → logprob: -11.378561973571777
    7. '  ' → logprob: -12.503561973571777
    8. '	in' → logprob: -12.691061973571777
    9. ' ,' → logprob: -12.753561973571777
    10. 'n' → logprob: -12.941061973571777

Token 161: ' C' (ID: 363)
  Prédit: ' C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.3727986812591553
    2. 'C' → logprob: -1.4977986812591553
    3. ' sorted' → logprob: -3.3727986812591553
    4. ' range' → logprob: -3.3727986812591553
    5. 'sorted' → logprob: -4.372798919677734
    6. 'range' → logprob: -5.247798919677734
    7. ' list' → logprob: -7.747798919677734
    8. ' ' → logprob: -8.122798919677734
    9. '[' → logprob: -9.122798919677734
    10. 'list' → logprob: -9.747798919677734

Token 162: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004037437494844198
    2. ':
' → logprob: -5.629037380218506
    3. '():' → logprob: -8.629037857055664
    4. '):' → logprob: -9.254037857055664
    5. '():
' → logprob: -9.629037857055664
    6. ':

' → logprob: -11.254037857055664
    7. '):
' → logprob: -11.254037857055664
    8. '{' → logprob: -11.379037857055664
    9. '*' → logprob: -11.754037857055664
    10. 's' → logprob: -11.879037857055664

Token 163: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0008784697856754065
    2. '               ' → logprob: -8.37587833404541
    3. '                       ' → logprob: -8.62587833404541
    4. '                    
' → logprob: -9.37587833404541
    5. '<|end|>' → logprob: -9.62587833404541
    6. ',' → logprob: -9.75087833404541
    7. '                  ' → logprob: -10.00087833404541
    8. '           ' → logprob: -10.12587833404541
    9. '                           ' → logprob: -10.25087833404541
    10. '                    ' → logprob: -10.75087833404541

Token 164: ' q' (ID: 2335)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.47835472226142883
    2. ' q' → logprob: -1.3533546924591064
    3. 'q' (adapté à ' q') → logprob: -2.3533546924591064
    4. '                           ' → logprob: -4.7283549308776855
    5. '                   ' → logprob: -5.2283549308776855
    6. ' for' → logprob: -5.7283549308776855
    7. '                               ' → logprob: -5.8533549308776855
    8. '                     ' → logprob: -6.4783549308776855
    9. '                      ' → logprob: -6.7283549308776855
    10. '                        ' → logprob: -6.8533549308776855

Token 165: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34861883521080017
    2. '=' → logprob: -1.2236188650131226
    3. '=q' → logprob: -9.098618507385254
    4. 'q' → logprob: -10.598618507385254
    5. '                   ' → logprob: -11.223618507385254
    6. '_val' → logprob: -12.223618507385254
    7. ' ' → logprob: -12.473618507385254
    8. '                           ' → logprob: -13.098618507385254
    9. ' q' → logprob: -13.348618507385254
    10. 's' → logprob: -13.473618507385254

Token 166: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.4740819036960602
    2. 'q' → logprob: -0.9740818738937378
    3. ' ' → logprob: -12.599081993103027
    4. '	q' → logprob: -14.474081993103027
    5. '   ' → logprob: -15.474081993103027
    6. ' ' → logprob: -15.974081993103027
    7. '  ' → logprob: -16.22408103942871
    8. '                   ' → logprob: -16.72408103942871
    9. '                    ' → logprob: -16.84908103942871
    10. '*q' → logprob: -16.84908103942871

Token 167: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.0002912486088462174
    2. '_sign' → logprob: -8.375290870666504
    3. 'val' → logprob: -9.750290870666504
    4. '*' → logprob: -13.750290870666504
    5. '[val' → logprob: -14.750290870666504
    6. 'sign' → logprob: -15.250290870666504
    7. '_' → logprob: -15.375290870666504
    8. '_sig' → logprob: -15.625290870666504
    9. '_VAL' → logprob: -15.875290870666504
    10. 'Val' → logprob: -16.62529182434082

Token 168: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6941189765930176
    2. '*' → logprob: -0.9441189765930176
    3. '*q' → logprob: -2.1941189765930176
    4. ' ' → logprob: -13.19411849975586
    5. '*p' → logprob: -13.19411849975586
    6. '*s' → logprob: -13.81911849975586
    7. ' ' → logprob: -14.31911849975586
    8. '*g' → logprob: -14.94411849975586
    9. '*object' → logprob: -15.44411849975586
    10. '**' → logprob: -16.19411849975586

Token 169: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0011703446507453918
    2. ' q' → logprob: -6.7511701583862305
    3. '	q' → logprob: -16.251171112060547
    4. '   ' → logprob: -18.126171112060547
    5. '*q' → logprob: -18.126171112060547
    6. ' ' → logprob: -18.251171112060547
    7. 'qml' → logprob: -18.251171112060547
    8. '  ' → logprob: -19.501171112060547
    9. '$q' → logprob: -20.126171112060547
    10. '?q' → logprob: -20.251171112060547

Token 170: '_sign' (ID: 24730)
  Prédit: '_sign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sign' → logprob: -2.15310683415737e-05
    2. 'sign' → logprob: -10.750021934509277
    3. '_s' → logprob: -17.12502098083496
    4. '_sig' → logprob: -18.75002098083496
    5. '_' → logprob: -18.87502098083496
    6. '_SIGN' → logprob: -19.25002098083496
    7. 's' → logprob: -19.25002098083496
    8. '```' → logprob: -20.50002098083496
    9. '.sign' → logprob: -20.75002098083496
    10. '_signal' → logprob: -20.75002098083496

Token 171: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.036072321236133575
    2. '<|end|>' → logprob: -3.411072254180908
    3. '               ' → logprob: -7.036072254180908
    4. '<|end|>' → logprob: -7.661072254180908
    5. '
' → logprob: -8.036072731018066
    6. '                    
' → logprob: -8.161072731018066
    7. '                       ' → logprob: -8.161072731018066
    8. '                        
' → logprob: -10.161072731018066
    9. ',' → logprob: -10.411072731018066
    10. '           ' → logprob: -10.786072731018066

Token 172: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.001245708903297782
    2. '               ' → logprob: -7.626245498657227
    3. '                       ' → logprob: -8.501245498657227
    4. ' for' → logprob: -8.501245498657227
    5. '<|end|>' → logprob: -8.876245498657227
    6. 'for' → logprob: -9.626245498657227
    7. '           ' → logprob: -9.876245498657227
    8. '                 ' → logprob: -11.126245498657227
    9. '                  ' → logprob: -11.626245498657227
    10. '       ' → logprob: -11.626245498657227

Token 173: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03361688181757927
    2. 's' → logprob: -4.15861701965332
    3. '                   ' → logprob: -4.65861701965332
    4. ' for' → logprob: -4.90861701965332
    5. '               ' → logprob: -8.65861701965332
    6. '   ' → logprob: -9.15861701965332
    7. ' s' → logprob: -9.78361701965332
    8. '                       ' → logprob: -10.53361701965332
    9. 'p' → logprob: -10.65861701965332
    10. '           ' → logprob: -10.90861701965332

Token 174: ' q' (ID: 2335)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.42826783657073975
    2. 'q' → logprob: -2.1782679557800293
    3. ' p' → logprob: -2.8032679557800293
    4. 'b' → logprob: -3.1782679557800293
    5. '(p' → logprob: -3.4282679557800293
    6. ' q' → logprob: -4.053267955780029
    7. 'not' → logprob: -4.303267955780029
    8. ' not' → logprob: -4.303267955780029
    9. ' b' → logprob: -4.928267955780029
    10. 'c' → logprob: -4.928267955780029

Token 175: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2301061749458313
    2. '==' → logprob: -1.6051061153411865
    3. ' *' → logprob: -6.105106353759766
    4. '*' → logprob: -7.730106353759766
    5. ' !=' → logprob: -7.730106353759766
    6. ' ' → logprob: -7.980106353759766
    7. '*q' → logprob: -8.105106353759766
    8. 's' → logprob: -8.355106353759766
    9. '=' → logprob: -8.605106353759766
    10. ' >' → logprob: -8.855106353759766

Token 176: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007105246186256409
    2. ' ' → logprob: -7.250710487365723
    3. '
' → logprob: -15.875710487365723
    4. '

' → logprob: -16.87571144104004
    5. '۰' → logprob: -17.00071144104004
    6. '   ' → logprob: -17.00071144104004
    7. 'zero' → logprob: -17.31321144104004
    8. '
' → logprob: -17.81321144104004
    9. 'r' → logprob: -17.93821144104004
    10. '<|end|>' → logprob: -18.06321144104004

Token 177: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.036524842376821e-05
    2. ' ' → logprob: -10.125040054321289
    3. '۰' → logprob: -17.25004005432129
    4. '<|end|>' → logprob: -17.62504005432129
    5. '
' → logprob: -17.75004005432129
    6. 'zero' → logprob: -18.43754005432129
    7. '00' → logprob: -18.56254005432129
    8. '  ' → logprob: -18.68754005432129
    9. '   ' → logprob: -18.87504005432129
    10. 'q' → logprob: -19.00004005432129

Token 178: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.048352621495723724
    2. ':
' → logprob: -3.5483527183532715
    3. '                       ' → logprob: -4.0483527183532715
    4. '                               ' → logprob: -7.9233527183532715
    5. ' or' → logprob: -8.048352241516113
    6. '                           ' → logprob: -8.923352241516113
    7. '                   ' → logprob: -9.923352241516113
    8. ':return' → logprob: -10.673352241516113
    9. ' continue' → logprob: -10.798352241516113
    10. '<|end|>' → logprob: -11.173352241516113

Token 179: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.008102327585220337
    2. ' continue' → logprob: -5.1331024169921875
    3. 'continue' → logprob: -6.2581024169921875
    4. '                           ' → logprob: -9.133102416992188
    5. '                               ' → logprob: -9.508102416992188
    6. '                   ' → logprob: -10.633102416992188
    7. '   ' → logprob: -11.758102416992188
    8. '                        
' → logprob: -12.008102416992188
    9. '                        ' → logprob: -12.633102416992188
    10. '					' → logprob: -12.633102416992188

Token 180: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.0642295777797699
    2. 'continue' (adapté à ' continue') → logprob: -2.8142294883728027
    3. '                           ' → logprob: -6.189229488372803
    4. '                               ' → logprob: -8.689229965209961
    5. '                       ' → logprob: -11.064229965209961
    6. '   ' → logprob: -11.189229965209961
    7. ' break' → logprob: -12.439229965209961
    8. '	continue' → logprob: -12.814229965209961
    9. '                   ' → logprob: -13.939229965209961
    10. ' ' → logprob: -14.314229965209961

Token 181: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02824821136891842
    2. '<|end|>' → logprob: -3.9032483100891113
    3. '                       ' → logprob: -5.403248310089111
    4. '
' → logprob: -6.903248310089111
    5. '               ' → logprob: -7.153248310089111
    6. '<|end|>' → logprob: -8.028247833251953
    7. '                           ' → logprob: -8.278247833251953
    8. '                    
' → logprob: -8.403247833251953
    9. '                        
' → logprob: -8.653247833251953
    10. '                               ' → logprob: -9.653247833251953

Token 182: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.001934469910338521
    2. '               ' → logprob: -6.37693452835083
    3. '                       ' → logprob: -9.126934051513672
    4. '<|end|>' → logprob: -10.376934051513672
    5. '           ' → logprob: -10.501934051513672
    6. '                 ' → logprob: -11.251934051513672
    7. '                  ' → logprob: -11.376934051513672
    8. '                    ' → logprob: -11.876934051513672
    9. '                ' → logprob: -12.001934051513672
    10. 's' → logprob: -12.126934051513672

Token 183: ' for' (ID: 395)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.39508017897605896
    2. '                   ' → logprob: -1.5200802087783813
    3. ' for' → logprob: -3.145080089569092
    4. 'for' (adapté à ' for') → logprob: -3.395080089569092
    5. ' s' → logprob: -3.645080089569092
    6. '               ' → logprob: -6.270080089569092
    7. '                       ' → logprob: -6.520080089569092
    8. '                           ' → logprob: -7.770080089569092
    9. '                               ' → logprob: -8.02008056640625
    10. '           ' → logprob: -8.27008056640625

Token 184: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.014217688702046871
    2. ' s' → logprob: -4.264217853546143
    3. 'p' → logprob: -10.389217376708984
    4. 'r' → logprob: -11.139217376708984
    5. '   ' → logprob: -13.389217376708984
    6. 'for' → logprob: -13.514217376708984
    7. ' p' → logprob: -13.639217376708984
    8. 'q' → logprob: -14.014217376708984
    9. ' ' → logprob: -14.576717376708984
    10. '_s' → logprob: -15.014217376708984

Token 185: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.004703056998550892
    2. ' in' → logprob: -6.129703044891357
    3. 'val' → logprob: -6.379703044891357
    4. 'in' → logprob: -8.004703521728516
    5. '_' → logprob: -8.254703521728516
    6. 'Val' → logprob: -9.504703521728516
    7. '<|end|>' → logprob: -9.629703521728516
    8. ' val' → logprob: -11.004703521728516
    9. '_vals' → logprob: -11.004703521728516
    10. '_VAL' → logprob: -11.379703521728516

Token 186: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03804849088191986
    2. 'in' → logprob: -3.288048505783081
    3. ' ' → logprob: -12.41304874420166
    4. 's' → logprob: -13.41304874420166
    5. '<|end|>' → logprob: -14.41304874420166
    6. 'C' → logprob: -14.66304874420166
    7. '	in' → logprob: -16.163047790527344
    8. ' C' → logprob: -16.538047790527344
    9. 'import' → logprob: -16.788047790527344
    10. '<|end|>' → logprob: -17.288047790527344

Token 187: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.009811103343963623
    2. ' C' → logprob: -4.634810924530029
    3. 'A' → logprob: -9.884811401367188
    4. 'sorted' → logprob: -13.134811401367188
    5. ' A' → logprob: -13.884811401367188
    6. ' sorted' → logprob: -15.009811401367188
    7. ' ' → logprob: -15.509811401367188
    8. 'c' → logprob: -15.822311401367188
    9. '   ' → logprob: -16.134811401367188
    10. 'div' → logprob: -16.259811401367188

Token 188: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0305535476654768
    2. ':
' → logprob: -3.6555535793304443
    3. '                       ' → logprob: -6.030553340911865
    4. '<|end|>' → logprob: -7.655553340911865
    5. '                   ' → logprob: -7.905553340911865
    6. 's' → logprob: -8.280553817749023
    7. '):
' → logprob: -9.280553817749023
    8. '                               ' → logprob: -9.280553817749023
    9. ' s' → logprob: -9.655553817749023
    10. ',' → logprob: -9.655553817749023

Token 189: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.10209393501281738
    2. ' s' → logprob: -3.2270939350128174
    3. '                               ' → logprob: -3.7270939350128174
    4. 's' → logprob: -3.7270939350128174
    5. '                           ' → logprob: -5.352093696594238
    6. '                   ' → logprob: -6.477093696594238
    7. '                                       ' → logprob: -7.102093696594238
    8. '                                   ' → logprob: -7.852093696594238
    9. '<|end|>' → logprob: -8.227093696594238
    10. '```' → logprob: -8.477093696594238

Token 190: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.19469305872917175
    2. ' s' → logprob: -2.444693088531494
    3. '                       ' → logprob: -2.694693088531494
    4. '                           ' → logprob: -4.069693088531494
    5. '                               ' → logprob: -5.319693088531494
    6. '                        ' → logprob: -8.819692611694336
    7. '                   ' → logprob: -9.319692611694336
    8. '                         ' → logprob: -9.694692611694336
    9. '                            ' → logprob: -9.944692611694336
    10. '                                   ' → logprob: -10.194692611694336

Token 191: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28220000863075256
    2. ' =' → logprob: -1.4071999788284302
    3. 's' → logprob: -7.532199859619141
    4. '_' → logprob: -8.40719985961914
    5. '=s' → logprob: -8.40719985961914
    6. '_=' → logprob: -11.15719985961914
    7. '<|end|>' → logprob: -11.78219985961914
    8. ',' → logprob: -12.15719985961914
    9. '                       ' → logprob: -12.28219985961914
    10. '_s' → logprob: -12.28219985961914

Token 192: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0699496641755104
    2. ' s' → logprob: -2.6949496269226074
    3. '                       ' → logprob: -11.694950103759766
    4. '                           ' → logprob: -13.819950103759766
    5. '   ' → logprob: -14.194950103759766
    6. 'q' → logprob: -14.444950103759766
    7. ' ' → logprob: -14.444950103759766
    8. '                   ' → logprob: -15.069950103759766
    9. '-' → logprob: -15.069950103759766
    10. '                        ' → logprob: -15.569950103759766

Token 193: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.0002788551209960133
    2. 'val' → logprob: -8.37527847290039
    3. 's' → logprob: -10.50027847290039
    4. '*' → logprob: -11.50027847290039
    5. '_sign' → logprob: -11.75027847290039
    6. 'Val' → logprob: -14.25027847290039
    7. 'sign' → logprob: -14.37527847290039
    8. ' *' → logprob: -14.62527847290039
    9. '_VAL' → logprob: -15.75027847290039
    10. '<|end|>' → logprob: -16.12527847290039

Token 194: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.002819851040840149
    2. '*' → logprob: -5.877820014953613
    3. '*s' → logprob: -11.127820014953613
    4. '                       ' → logprob: -16.127819061279297
    5. ' ' → logprob: -16.377819061279297
    6. '*q' → logprob: -16.752819061279297
    7. ' ' → logprob: -17.877819061279297
    8. 's' → logprob: -18.127819061279297
    9. '                        ' → logprob: -19.252819061279297
    10. ' *
' → logprob: -19.627819061279297

Token 195: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01603495515882969
    2. ' s' → logprob: -4.141035079956055
    3. ' ' → logprob: -15.016035079956055
    4. '   ' → logprob: -16.016035079956055
    5. '  ' → logprob: -16.766035079956055
    6. '	s' → logprob: -17.016035079956055
    7. '`s' → logprob: -17.641035079956055
    8. '           ' → logprob: -18.016035079956055
    9. 'q' → logprob: -18.203535079956055
    10. '       ' → logprob: -18.266035079956055

Token 196: '_sign' (ID: 24730)
  Prédit: '_sign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sign' → logprob: -0.00011093381908722222
    2. 'sign' → logprob: -9.125110626220703
    3. 'ign' → logprob: -13.625110626220703
    4. 'gn' → logprob: -14.625110626220703
    5. '_SIGN' → logprob: -16.375110626220703
    6. '	sign' → logprob: -16.750110626220703
    7. 'Sign' → logprob: -17.000110626220703
    8. '-sign' → logprob: -17.250110626220703
    9. '.sign' → logprob: -17.500110626220703
    10. ' sign' → logprob: -18.000110626220703

Token 197: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0005195511621423066
    2. '                        
' → logprob: -8.250519752502441
    3. '                   ' → logprob: -9.750519752502441
    4. ',' → logprob: -9.875519752502441
    5. '<|end|>' → logprob: -9.875519752502441
    6. '
' → logprob: -10.250519752502441
    7. '                        ' → logprob: -11.625519752502441
    8. '               ' → logprob: -11.750519752502441
    9. ' if' → logprob: -11.875519752502441
    10. '           ' → logprob: -12.125519752502441

Token 198: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -7.350386295001954e-05
    2. '                        
' → logprob: -10.250073432922363
    3. '<|end|>' → logprob: -10.875073432922363
    4. '                   ' → logprob: -11.750073432922363
    5. '                        ' → logprob: -12.125073432922363
    6. '               ' → logprob: -13.875073432922363
    7. '```' → logprob: -14.000073432922363
    8. '
' → logprob: -14.250073432922363
    9. '                           ' → logprob: -14.625073432922363
    10. '                      ' → logprob: -14.875073432922363

Token 199: ' if' (ID: 538)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.12255698442459106
    2. ' if' → logprob: -2.3725569248199463
    3. '                        
' → logprob: -4.622557163238525
    4. '
' → logprob: -5.122557163238525
    5. 'if' (adapté à ' if') → logprob: -5.622557163238525
    6. ' #' → logprob: -6.872557163238525
    7. '                   ' → logprob: -7.622557163238525
    8. '#' → logprob: -7.872557163238525
    9. '           ' → logprob: -8.997556686401367
    10. '                           ' → logprob: -9.372556686401367

Token 200: ' s' (ID: 265)
  Prédit: ' q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.39917880296707153
    2. 'q' → logprob: -1.6491787433624268
    3. ' p' → logprob: -2.7741787433624268
    4. 'p' → logprob: -3.5241787433624268
    5. ' s' → logprob: -3.7741787433624268
    6. 's' → logprob: -4.649178981781006
    7. '0' → logprob: -5.149178981781006
    8. ' (' → logprob: -6.149178981781006
    9. '(p' → logprob: -6.649178981781006
    10. '(q' → logprob: -6.774178981781006

Token 201: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.28118187189102173
    2. '==' → logprob: -1.406181812286377
    3. '=' → logprob: -11.781182289123535
    4. ')==' → logprob: -12.156182289123535
    5. ' !=' → logprob: -12.781182289123535
    6. '==
' → logprob: -12.781182289123535
    7. '```' → logprob: -12.906182289123535
    8. ' ' → logprob: -13.031182289123535
    9. '**' → logprob: -13.656182289123535
    10. ')' → logprob: -13.781182289123535

Token 202: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1128278374671936
    2. ' ' → logprob: -2.237827777862549
    3. '   ' → logprob: -13.112828254699707
    4. ' ' → logprob: -13.862828254699707
    5. '  ' → logprob: -14.237828254699707
    6. '<|end|>' → logprob: -15.300328254699707
    7. 's' → logprob: -16.05032730102539
    8. '00' → logprob: -16.17532730102539
    9. '```' → logprob: -16.23782730102539
    10. '                       ' → logprob: -16.23782730102539

Token 203: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013271415373310447
    2. ' ' → logprob: -6.626327037811279
    3. '   ' → logprob: -15.501327514648438
    4. '00' → logprob: -15.876327514648438
    5. '
' → logprob: -16.251327514648438
    6. '  ' → logprob: -16.501327514648438
    7. ' ' → logprob: -16.501327514648438
    8. '```' → logprob: -16.688827514648438
    9. 's' → logprob: -17.001327514648438
    10. '۰' → logprob: -17.188827514648438

Token 204: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03534119576215744
    2. '                           ' → logprob: -4.160341262817383
    3. ':
' → logprob: -4.160341262817383
    4. ' or' → logprob: -5.785341262817383
    5. '                       ' → logprob: -9.160341262817383
    6. '<|end|>' → logprob: -9.285341262817383
    7. '           ' → logprob: -9.660341262817383
    8. ',' → logprob: -9.785341262817383
    9. ' and' → logprob: -10.660341262817383
    10. '                               ' → logprob: -11.035341262817383

Token 205: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0029135269578546286
    2. '                       ' → logprob: -6.002913475036621
    3. ' continue' → logprob: -9.002913475036621
    4. ':
' → logprob: -9.377913475036621
    5. '                               ' → logprob: -9.502913475036621
    6. '           ' → logprob: -9.627913475036621
    7. 'continue' → logprob: -11.252913475036621
    8. '                   ' → logprob: -11.377913475036621
    9. ' and' → logprob: -11.627913475036621
    10. ',' → logprob: -11.627913475036621

Token 206: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.130901500582695
    2. 'continue' (adapté à ' continue') → logprob: -2.130901575088501
    3. '                           ' → logprob: -6.130901336669922
    4. '                               ' → logprob: -6.380901336669922
    5. '                                   ' → logprob: -10.130901336669922
    6. '   ' → logprob: -11.005901336669922
    7. '	continue' → logprob: -11.130901336669922
    8. '                       ' → logprob: -12.130901336669922
    9. ' break' → logprob: -12.380901336669922
    10. '           ' → logprob: -12.880901336669922

Token 207: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.06183669716119766
    2. '<|end|>' → logprob: -3.0618367195129395
    3. '
' → logprob: -4.6868367195129395
    4. '                           ' → logprob: -6.5618367195129395
    5. '                        
' → logprob: -6.9368367195129395
    6. ',' → logprob: -8.186836242675781
    7. '<|end|>' → logprob: -8.186836242675781
    8. '                               ' → logprob: -8.811836242675781
    9. '                        ' → logprob: -8.811836242675781
    10. '                            
' → logprob: -9.311836242675781

Token 208: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.006671559065580368
    2. '                        
' → logprob: -5.25667142868042
    3. '<|end|>' → logprob: -7.38167142868042
    4. '                           ' → logprob: -8.506671905517578
    5. '                   ' → logprob: -8.881671905517578
    6. '
' → logprob: -8.881671905517578
    7. '```' → logprob: -9.381671905517578
    8. '                            
' → logprob: -9.631671905517578
    9. '           ' → logprob: -9.881671905517578
    10. '                        ' → logprob: -10.256671905517578

Token 209: ' if' (ID: 538)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.02186444401741028
    2. 'if' (adapté à ' if') → logprob: -4.146864414215088
    3. ' if' → logprob: -5.521864414215088
    4. '                        
' → logprob: -6.646864414215088
    5. '                           ' → logprob: -9.146864891052246
    6. '                        ' → logprob: -9.146864891052246
    7. '#' → logprob: -9.521864891052246
    8. '                   ' → logprob: -9.771864891052246
    9. '
' → logprob: -10.146864891052246
    10. '```' → logprob: -10.396864891052246

Token 210: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.016272595152258873
    2. ' b' → logprob: -4.64127254486084
    3. 'p' → logprob: -5.26627254486084
    4. 'b' → logprob: -7.14127254486084
    5. ' (' → logprob: -8.01627254486084
    6. ' q' → logprob: -9.64127254486084
    7. ' ' → logprob: -10.01627254486084
    8. '(p' → logprob: -10.39127254486084
    9. '                           ' → logprob: -11.26627254486084
    10. '   ' → logprob: -11.39127254486084

Token 211: '*r' (ID: 92096)
  Prédit: '*s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*s' → logprob: -0.35453134775161743
    2. '*' → logprob: -1.3545312881469727
    3. ' *' → logprob: -3.2295312881469727
    4. '*q' → logprob: -7.229531288146973
    5. 's' → logprob: -9.729531288146973
    6. '**' → logprob: -10.979531288146973
    7. '*p' → logprob: -11.104531288146973
    8. '*r' → logprob: -11.479531288146973
    9. '*g' → logprob: -12.104531288146973
    10. ' ' → logprob: -12.479531288146973

Token 212: ' !=' (ID: 1666)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6497853398323059
    2. '+' → logprob: -0.7747853398323059
    3. '==' → logprob: -4.77478551864624
    4. ' ==' → logprob: -5.02478551864624
    5. '*' → logprob: -7.02478551864624
    6. '+p' → logprob: -7.02478551864624
    7. '*p' → logprob: -10.274785041809082
    8. '-' → logprob: -10.399785041809082
    9. '>' → logprob: -10.399785041809082
    10. ' *' → logprob: -10.649785041809082

Token 213: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0009131324477493763
    2. ' a' → logprob: -7.000913143157959
    3. '>a' → logprob: -14.3759126663208
    4. ')a' → logprob: -15.1259126663208
    5. 'p' → logprob: -15.6259126663208
    6. '	a' → logprob: -15.8759126663208
    7. ' ' → logprob: -16.000913619995117
    8. '0' → logprob: -16.375913619995117
    9. '```' → logprob: -16.875913619995117
    10. '   ' → logprob: -17.000913619995117

Token 214: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6503093838691711
    2. ' or' → logprob: -0.7753093838691711
    3. 'and' → logprob: -4.2753095626831055
    4. ':' → logprob: -6.0253095626831055
    5. 'or' → logprob: -7.2753095626831055
    6. '                       ' → logprob: -8.400309562683105
    7. '                           ' → logprob: -8.650309562683105
    8. ':
' → logprob: -10.025309562683105
    9. ',' → logprob: -10.650309562683105
    10. '<|end|>' → logprob: -10.775309562683105

Token 215: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.010041034780442715
    2. '                       ' → logprob: -5.385041236877441
    3. ' and' → logprob: -6.135041236877441
    4. ':' → logprob: -6.260041236877441
    5. '                               ' → logprob: -7.260041236877441
    6. ' or' → logprob: -8.260041236877441
    7. '                            ' → logprob: -9.260041236877441
    8. ':
' → logprob: -9.760041236877441
    9. ' continue' → logprob: -10.260041236877441
    10. '           ' → logprob: -10.510041236877441

Token 216: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.6232893466949463
    2. 'continue' (adapté à ' continue') → logprob: -1.1232893466949463
    3. '                           ' → logprob: -2.1232893466949463
    4. '                               ' → logprob: -3.9982893466949463
    5. 'break' → logprob: -8.748289108276367
    6. '   ' → logprob: -8.748289108276367
    7. '                       ' → logprob: -9.373289108276367
    8. ' break' → logprob: -9.498289108276367
    9. '                                   ' → logprob: -9.873289108276367
    10. '```' → logprob: -10.748289108276367

Token 217: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.015800662338733673
    2. '                        
' → logprob: -5.265800476074219
    3. '\n' → logprob: -5.515800476074219
    4. '                           ' → logprob: -6.390800476074219
    5. '<|end|>' → logprob: -6.640800476074219
    6. '
' → logprob: -7.140800476074219
    7. '                               ' → logprob: -7.265800476074219
    8. 'newline' → logprob: -7.390800476074219
    9. '```' → logprob: -7.515800476074219
    10. '\' → logprob: -8.140800476074219

Token 218: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0951017364859581
    2. '<|end|>' → logprob: -3.220101833343506
    3. '                        
' → logprob: -4.095101833343506
    4. '                           ' → logprob: -4.720101833343506
    5. '
' → logprob: -5.095101833343506
    6. '```' → logprob: -5.220101833343506
    7. 'newline' → logprob: -5.345101833343506
    8. '                               ' → logprob: -6.220101833343506
    9. '\n' → logprob: -6.345101833343506
    10. 'n' → logprob: -6.595101833343506

Token 219: ' if' (ID: 538)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.04101303964853287
    2. ' if' → logprob: -3.91601300239563
    3. 'if' (adapté à ' if') → logprob: -4.166013240814209
    4. '                        
' → logprob: -5.791013240814209
    5. '                           ' → logprob: -7.791013240814209
    6. '```' → logprob: -7.916013240814209
    7. '<|end|>' → logprob: -8.04101276397705
    8. '                        ' → logprob: -8.29101276397705
    9. '
' → logprob: -9.41601276397705
    10. ' and' → logprob: -10.16601276397705

Token 220: ' q' (ID: 2335)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5127939581871033
    2. ' p' → logprob: -1.012794017791748
    3. 'b' → logprob: -4.262794017791748
    4. ' b' → logprob: -4.762794017791748
    5. 'q' → logprob: -4.887794017791748
    6. ' q' → logprob: -5.262794017791748
    7. '(p' → logprob: -6.762794017791748
    8. ' (' → logprob: -7.012794017791748
    9. '   ' → logprob: -8.88779354095459
    10. 'ps' → logprob: -8.88779354095459

Token 221: '*s' (ID: 71191)
  Prédit: '*s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*s' → logprob: -0.47395262122154236
    2. '*' → logprob: -1.3489526510238647
    3. ' *' → logprob: -2.848952531814575
    4. ' +' → logprob: -3.223952531814575
    5. '+' → logprob: -4.098952770233154
    6. '+s' → logprob: -6.098952770233154
    7. '*r' → logprob: -7.473952770233154
    8. '*q' → logprob: -7.848952770233154
    9. 's' → logprob: -7.973952770233154
    10. ' ' → logprob: -10.473952293395996

Token 222: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.855588436126709
    2. ' !=' → logprob: -1.105588436126709
    3. '==' → logprob: -1.730588436126709
    4. ' ==' → logprob: -2.730588436126709
    5. '<|end|>' → logprob: -6.855588436126709
    6. '!=-' → logprob: -8.980588912963867
    7. '<|end|>' → logprob: -9.230588912963867
    8. '==-' → logprob: -9.355588912963867
    9. '+' → logprob: -10.480588912963867
    10. ')!=' → logprob: -10.480588912963867

Token 223: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0031784253660589457
    2. ' c' → logprob: -5.753178596496582
    3. '   ' → logprob: -14.878178596496582
    4. '  ' → logprob: -17.003177642822266
    5. ' ' → logprob: -17.128177642822266
    6. '       ' → logprob: -17.128177642822266
    7. '	c' → logprob: -17.253177642822266
    8. '```' → logprob: -17.378177642822266
    9. ')c' → logprob: -17.378177642822266
    10. '           ' → logprob: -17.753177642822266

Token 224: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7232041954994202
    2. '                           ' → logprob: -1.2232041358947754
    3. ':
' → logprob: -1.7232041358947754
    4. '                       ' → logprob: -3.3482041358947754
    5. ' and' → logprob: -5.723204135894775
    6. ' or' → logprob: -6.473204135894775
    7. '                        ' → logprob: -8.098204612731934
    8. '                            ' → logprob: -8.223204612731934
    9. ' :' → logprob: -8.473204612731934
    10. '                          ' → logprob: -8.848204612731934

Token 225: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0001899511698866263
    2. '                       ' → logprob: -9.500189781188965
    3. '                               ' → logprob: -9.875189781188965
    4. 'continue' → logprob: -10.125189781188965
    5. ' continue' → logprob: -11.375189781188965
    6. '           ' → logprob: -12.250189781188965
    7. '                            ' → logprob: -13.250189781188965
    8. '                          ' → logprob: -13.500189781188965
    9. '                   ' → logprob: -13.500189781188965
    10. '   ' → logprob: -14.625189781188965

Token 226: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.174463152885437
    2. 'continue' (adapté à ' continue') → logprob: -1.924463152885437
    3. '                           ' → logprob: -4.299463272094727
    4. '                               ' → logprob: -7.799463272094727
    5. '   ' → logprob: -9.549463272094727
    6. '                       ' → logprob: -10.174463272094727
    7. '           ' → logprob: -11.174463272094727
    8. '	continue' → logprob: -11.549463272094727
    9. '               ' → logprob: -12.549463272094727
    10. '                   ' → logprob: -12.674463272094727

Token 227: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.005162958521395922
    2. '<|end|>' → logprob: -6.005163192749023
    3. '                        
' → logprob: -6.255163192749023
    4. '```' → logprob: -7.755163192749023
    5. '                           ' → logprob: -9.005163192749023
    6. 'if' → logprob: -10.255163192749023
    7. '                            
' → logprob: -10.630163192749023
    8. '                        ' → logprob: -10.755163192749023
    9. '
' → logprob: -10.755163192749023
    10. '<|end|>' → logprob: -11.005163192749023

Token 228: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.000523842521943152
    2. '                        
' → logprob: -8.250523567199707
    3. '```' → logprob: -9.000523567199707
    4. '                           ' → logprob: -9.625523567199707
    5. 'if' → logprob: -10.125523567199707
    6. '<|end|>' → logprob: -11.750523567199707
    7. ' if' → logprob: -12.125523567199707
    8. '                        ' → logprob: -12.375523567199707
    9. '                   ' → logprob: -12.625523567199707
    10. '
' → logprob: -12.750523567199707

Token 229: ' if' (ID: 538)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.018694499507546425
    2. 'if' (adapté à ' if') → logprob: -4.1436944007873535
    3. ' if' → logprob: -6.1436944007873535
    4. '                        
' → logprob: -8.143694877624512
    5. '```' → logprob: -9.143694877624512
    6. '                           ' → logprob: -9.893694877624512
    7. '                   ' → logprob: -11.018694877624512
    8. '
' → logprob: -11.393694877624512
    9. '                        ' → logprob: -11.643694877624512
    10. '<|end|>' → logprob: -12.018694877624512

Token 230: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5832908749580383
    2. ' p' → logprob: -0.8332908749580383
    3. 'b' → logprob: -5.708291053771973
    4. ' b' → logprob: -6.583291053771973
    5. ' (' → logprob: -6.583291053771973
    6. '(p' → logprob: -6.833291053771973
    7. '(' → logprob: -9.833291053771973
    8. ' ' → logprob: -10.458291053771973
    9. '   ' → logprob: -10.583291053771973
    10. 'ps' → logprob: -10.958291053771973

Token 231: '*s' (ID: 71191)
  Prédit: '*s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*s' → logprob: -0.11366025358438492
    2. ' *' → logprob: -2.9886603355407715
    3. 's' → logprob: -3.2386603355407715
    4. '*' → logprob: -4.1136603355407715
    5. '*r' → logprob: -7.2386603355407715
    6. '<|end|>' → logprob: -7.7386603355407715
    7. ' s' → logprob: -8.738659858703613
    8. '*q' → logprob: -8.988659858703613
    9. ' ' → logprob: -11.113659858703613
    10. '*p' → logprob: -11.363659858703613

Token 232: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3871651291847229
    2. '+' → logprob: -1.1371650695800781
    3. '+p' → logprob: -8.262165069580078
    4. '<|end|>' → logprob: -10.887165069580078
    5. '+r' → logprob: -12.637165069580078
    6. ' plus' → logprob: -12.762165069580078
    7. '+s' → logprob: -13.387165069580078
    8. '<|end|>' → logprob: -13.637165069580078
    9. '+++' → logprob: -13.887165069580078
    10. '+c' → logprob: -14.137165069580078

Token 233: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.003178544342517853
    2. ' q' → logprob: -5.753178596496582
    3. 'qr' → logprob: -14.253178596496582
    4. '	q' → logprob: -15.753178596496582
    5. ' ' → logprob: -16.878177642822266
    6. 'r' → logprob: -17.128177642822266
    7. 'qrst' → logprob: -17.253177642822266
    8. '   ' → logprob: -18.253177642822266
    9. ' qr' → logprob: -18.253177642822266
    10. '
' → logprob: -18.378177642822266

Token 234: '*r' (ID: 92096)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.5041014552116394
    2. '==' → logprob: -1.6291015148162842
    3. ' !=' → logprob: -1.8791015148162842
    4. ' ==' → logprob: -3.254101514816284
    5. '<|end|>' → logprob: -5.379101276397705
    6. 'r' → logprob: -6.379101276397705
    7. '*' → logprob: -7.254101276397705
    8. ')' → logprob: -7.629101276397705
    9. '*r' → logprob: -7.879101276397705
    10. ')!=' → logprob: -9.254101753234863

Token 235: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.32225778698921204
    2. ' !=' → logprob: -1.3222577571868896
    3. '==' → logprob: -4.947257995605469
    4. ' ==' → logprob: -6.322257995605469
    5. ')!=' → logprob: -10.697257995605469
    6. ')' → logprob: -11.572257995605469
    7. '()!=' → logprob: -12.197257995605469
    8. '!=-' → logprob: -12.322257995605469
    9. ' ' → logprob: -12.947257995605469
    10. ']!=' → logprob: -13.072257995605469

Token 236: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0009405235759913921
    2. ' b' → logprob: -7.000940322875977
    3. '-b' → logprob: -10.750940322875977
    4. ' -' → logprob: -11.875940322875977
    5. '-' → logprob: -14.250940322875977
    6. '   ' → logprob: -17.250940322875977
    7. '	b' → logprob: -18.500940322875977
    8. ')b' → logprob: -19.375940322875977
    9. '    ' → logprob: -20.250940322875977
    10. '>b' → logprob: -20.875940322875977

Token 237: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004302765242755413
    2. ':
' → logprob: -5.504302978515625
    3. ':return' → logprob: -8.754302978515625
    4. ' :' → logprob: -9.879302978515625
    5. '                           ' → logprob: -12.254302978515625
    6. '                       ' → logprob: -13.004302978515625
    7. ' and' → logprob: -13.254302978515625
    8. ':
' → logprob: -13.504302978515625
    9. '):' → logprob: -13.504302978515625
    10. ' :
' → logprob: -14.129302978515625

Token 238: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.002003938192501664
    2. ' return' → logprob: -6.627004146575928
    3. '           ' → logprob: -7.627004146575928
    4. 'return' → logprob: -8.87700366973877
    5. '                               ' → logprob: -10.37700366973877
    6. '                            
' → logprob: -12.37700366973877
    7. '                       ' → logprob: -12.50200366973877
    8. '                            ' → logprob: -12.75200366973877
    9. '               ' → logprob: -13.00200366973877
    10. '```' → logprob: -13.50200366973877

Token 239: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6289037466049194
    2. ' return' → logprob: -1.0039037466049194
    3. '                               ' → logprob: -2.503903865814209
    4. '                           ' → logprob: -4.003903865814209
    5. '   ' → logprob: -9.00390338897705
    6. '       ' → logprob: -9.75390338897705
    7. '           ' → logprob: -9.87890338897705
    8. '                                   ' → logprob: -10.37890338897705
    9. '               ' → logprob: -10.75390338897705
    10. '                       ' → logprob: -10.87890338897705

Token 240: ' check' (ID: 2371)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.10484921187162399
    2. 'return' → logprob: -2.354849100112915
    3. '                           ' → logprob: -5.854849338531494
    4. '                               ' → logprob: -6.729849338531494
    5. '#' → logprob: -8.979848861694336
    6. ' #' → logprob: -8.979848861694336
    7. '   ' → logprob: -9.729848861694336
    8. '
' → logprob: -9.729848861694336
    9. '                            ' → logprob: -9.854848861694336
    10. '                             ' → logprob: -10.854848861694336

Token 241: ' uniqueness' (ID: 105230)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4366530478000641
    2. ' if' → logprob: -1.0616530179977417
    3. 'return' → logprob: -5.186653137207031
    4. ' p' → logprob: -6.686653137207031
    5. 'if' → logprob: -7.686653137207031
    6. ' gcd' → logprob: -8.311653137207031
    7. ' #' → logprob: -9.061653137207031
    8. ' for' → logprob: -9.311653137207031
    9. ' (' → logprob: -9.936653137207031
    10. '                           ' → logprob: -10.811653137207031

Token 242: ' conditions' (ID: 6409)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.018253659829497337
    2. '                               ' → logprob: -4.393253803253174
    3. '                            ' → logprob: -6.018253803253174
    4. '                            
' → logprob: -6.268253803253174
    5. ' return' → logprob: -7.518253803253174
    6. '           ' → logprob: -8.768253326416016
    7. ':' → logprob: -9.018253326416016
    8. '
' → logprob: -9.018253326416016
    9. ',' → logprob: -9.268253326416016
    10. '                       ' → logprob: -9.768253326416016

Token 243: ':
' (ID: 734)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0013057142496109009
    2. '                               ' → logprob: -7.00130558013916
    3. '           ' → logprob: -8.62630558013916
    4. ' return' → logprob: -9.75130558013916
    5. '                            ' → logprob: -10.00130558013916
    6. '                            
' → logprob: -10.00130558013916
    7. '                       ' → logprob: -11.12630558013916
    8. '
' → logprob: -11.37630558013916
    9. ',' → logprob: -11.75130558013916
    10. 'return' → logprob: -11.87630558013916

Token 244: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0017658589640632272
    2. '                               ' → logprob: -6.751765727996826
    3. ' return' → logprob: -8.001766204833984
    4. ' if' → logprob: -9.501766204833984
    5. 'return' → logprob: -9.751766204833984
    6. '                            ' → logprob: -9.876766204833984
    7. '           ' → logprob: -10.251766204833984
    8. '                       ' → logprob: -11.001766204833984
    9. 'if' → logprob: -11.626766204833984
    10. '   ' → logprob: -12.126766204833984

Token 245: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4695853590965271
    2. 'return' → logprob: -1.5945854187011719
    3. ' if' → logprob: -2.344585418701172
    4. ' return' → logprob: -2.719585418701172
    5. 'g' → logprob: -4.844585418701172
    6. 'd' → logprob: -7.844585418701172
    7. '#' (adapté à ' #') → logprob: -8.094585418701172
    8. '                           ' → logprob: -8.094585418701172
    9. '                               ' → logprob: -8.344585418701172
    10. ' g' → logprob: -8.469585418701172

Token 246: ' p' (ID: 275)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3836226165294647
    2. 'if' → logprob: -1.508622646331787
    3. ' return' → logprob: -2.633622646331787
    4. 'return' → logprob: -3.883622646331787
    5. '                           ' → logprob: -6.008622646331787
    6. ' gcd' → logprob: -6.883622646331787
    7. ' #' → logprob: -7.883622646331787
    8. '#' → logprob: -8.633622169494629
    9. 'g' → logprob: -8.633622169494629
    10. ' g' → logprob: -9.383622169494629

Token 247: ' >' (ID: 1424)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.2199649065732956
    2. ' *' → logprob: -2.5949649810791016
    3. ' <=' → logprob: -2.8449649810791016
    4. '!=' → logprob: -3.8449649810791016
    5. ' ==' → logprob: -4.094964981079102
    6. '*' → logprob: -4.219964981079102
    7. '<=' → logprob: -5.594964981079102
    8. '*r' → logprob: -5.969964981079102
    9. ' >' → logprob: -6.219964981079102
    10. ' >=' → logprob: -6.719964981079102

Token 248: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008514931425452232
    2. 'r' → logprob: -5.133514881134033
    3. ' ' → logprob: -6.008514881134033
    4. 'q' → logprob: -9.508515357971191
    5. ' r' → logprob: -10.008515357971191
    6. '   ' → logprob: -13.258515357971191
    7. 's' → logprob: -13.633515357971191
    8. ' q' → logprob: -13.883515357971191
    9. '=' → logprob: -14.633515357971191
    10. '  ' → logprob: -15.071015357971191

Token 249: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.030257759615778923
    2. '                           ' → logprob: -3.9052577018737793
    3. 'and' → logprob: -5.280257701873779
    4. ' if' → logprob: -6.155257701873779
    5. ',' → logprob: -7.280257701873779
    6. '                       ' → logprob: -7.655257701873779
    7. '<|end|>' → logprob: -7.655257701873779
    8. ' or' → logprob: -8.530258178710938
    9. '                            ' → logprob: -9.030258178710938
    10. 'if' → logprob: -9.155258178710938

Token 250: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.18863600492477417
    2. ' r' → logprob: -1.813636064529419
    3. 'q' → logprob: -6.06363582611084
    4. 'p' → logprob: -6.31363582611084
    5. ' q' → logprob: -6.93863582611084
    6. 's' → logprob: -6.93863582611084
    7. 'abs' → logprob: -7.06363582611084
    8. ' p' → logprob: -7.18863582611084
    9. ' s' → logprob: -7.56363582611084
    10. ' abs' → logprob: -7.93863582611084

Token 251: '>' (ID: 29)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.11283785104751587
    2. '>' → logprob: -2.237837791442871
    3. '<|end|>' → logprob: -12.487837791442871
    4. ' >=' → logprob: -12.737837791442871
    5. ' ' → logprob: -12.862837791442871
    6. '>=' → logprob: -13.987837791442871
    7. ' >
' → logprob: -14.112837791442871
    8. ',' → logprob: -14.237837791442871
    9. ' <' → logprob: -14.362837791442871
    10. ' !=' → logprob: -14.987837791442871

Token 252: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017249188385903835
    2. ' ' → logprob: -6.376724720001221
    3. 'p' → logprob: -11.251725196838379
    4. '>' → logprob: -12.376725196838379
    5. ' p' → logprob: -12.376725196838379
    6. ' >' → logprob: -14.876725196838379
    7. '1' → logprob: -15.126725196838379
    8. '   ' → logprob: -16.126724243164062
    9. '<|end|>' → logprob: -16.314224243164062
    10. ',' → logprob: -16.626724243164062

Token 253: ' true' (ID: 1343)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.01077366340905428
    2. ' and' → logprob: -4.885773658752441
    3. ' if' → logprob: -7.135773658752441
    4. '
' → logprob: -7.260773658752441
    5. '                            ' → logprob: -8.260773658752441
    6. 'and' → logprob: -8.385773658752441
    7. '           ' → logprob: -8.385773658752441
    8. ',' → logprob: -8.510773658752441
    9. '                       ' → logprob: -8.510773658752441
    10. '                               ' → logprob: -8.760773658752441

Token 254: ' by' (ID: 656)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.001966343028470874
    2. '
' → logprob: -7.75196647644043
    3. '                               ' → logprob: -7.87696647644043
    4. ',' → logprob: -8.00196647644043
    5. ' and' → logprob: -8.12696647644043
    6. '                            
' → logprob: -8.50196647644043
    7. '                       ' → logprob: -9.00196647644043
    8. '                            ' → logprob: -9.12696647644043
    9. '           ' → logprob: -11.00196647644043
    10. ':' → logprob: -11.25196647644043

Token 255: ' construction' (ID: 9770)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.5961552262306213
    2. 'construction' → logprob: -1.2211551666259766
    3. 'definition' → logprob: -3.3461551666259766
    4. 'the' → logprob: -3.7211551666259766
    5. ' construction' → logprob: -3.8461551666259766
    6. 'code' → logprob: -4.096155166625977
    7. 'for' → logprob: -5.096155166625977
    8. 'range' → logprob: -5.221155166625977
    9. 'continue' → logprob: -5.221155166625977
    10. 'p' → logprob: -5.346155166625977

Token 256: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0004441355704329908
    2. 'return' → logprob: -8.875444412231445
    3. '
' → logprob: -9.125444412231445
    4. ' return' → logprob: -9.625444412231445
    5. '                            
' → logprob: -10.500444412231445
    6. '                       ' → logprob: -10.625444412231445
    7. '                            ' → logprob: -10.625444412231445
    8. '                               ' → logprob: -10.750444412231445
    9. '           ' → logprob: -11.000444412231445
    10. ',' → logprob: -12.125444412231445

Token 257: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.00597667321562767
    2. '           ' → logprob: -5.255976676940918
    3. ' return' → logprob: -8.630976676940918
    4. '                               ' → logprob: -8.880976676940918
    5. '       ' → logprob: -9.380976676940918
    6. 'return' → logprob: -9.505976676940918
    7. '                       ' → logprob: -9.505976676940918
    8. '               ' → logprob: -9.630976676940918
    9. '
' → logprob: -10.505976676940918
    10. '   ' → logprob: -10.755976676940918

Token 258: ' #' (ID: 1069)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.14435021579265594
    2. 'return' → logprob: -2.519350290298462
    3. ' return' → logprob: -3.144350290298462
    4. 'if' → logprob: -5.644350051879883
    5. '           ' → logprob: -6.019350051879883
    6. ' if' → logprob: -6.269350051879883
    7. '                               ' → logprob: -6.644350051879883
    8. '                       ' → logprob: -7.144350051879883
    9. '       ' → logprob: -8.144350051879883
    10. '   ' → logprob: -8.394350051879883

Token 259: ' (' (ID: 350)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20743584632873535
    2. 'g' → logprob: -2.5824358463287354
    3. ' if' → logprob: -3.2074358463287354
    4. 'return' → logprob: -3.3324358463287354
    5. 'p' → logprob: -3.8324358463287354
    6. ' return' → logprob: -5.332435607910156
    7. ' gcd' → logprob: -5.457435607910156
    8. ' p' → logprob: -6.582435607910156
    9. '(g' → logprob: -6.957435607910156
    10. '(p' → logprob: -7.082435607910156

Token 260: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0039657242596149445
    2. 'q' → logprob: -6.003965854644775
    3. 'r' → logprob: -7.878965854644775
    4. '(p' → logprob: -7.878965854644775
    5. ' p' → logprob: -7.878965854644775
    6. 'g' → logprob: -8.378965377807617
    7. 'abs' → logprob: -9.628965377807617
    8. '   ' → logprob: -11.378965377807617
    9. ' (' → logprob: -12.253965377807617
    10. ')' → logprob: -12.503965377807617

Token 261: ' >' (ID: 1424)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.622059166431427
    2. ' <' → logprob: -1.6220591068267822
    3. ',r' → logprob: -1.9970591068267822
    4. ',' → logprob: -2.6220591068267822
    5. ' ,' → logprob: -3.6220591068267822
    6. ' >' → logprob: -4.747059345245361
    7. '!=' → logprob: -4.997059345245361
    8. '<' → logprob: -5.247059345245361
    9. ' ==' → logprob: -5.747059345245361
    10. ',q' → logprob: -6.372059345245361

Token 262: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.021904222667217255
    2. ' r' → logprob: -4.021903991699219
    3. '0' → logprob: -6.396903991699219
    4. '1' → logprob: -7.021903991699219
    5. 'q' → logprob: -7.146903991699219
    6. ' ' → logprob: -8.146903991699219
    7. ' q' → logprob: -9.896903991699219
    8. 's' → logprob: -10.396903991699219
    9. 'p' → logprob: -11.521903991699219
    10. '   ' → logprob: -12.271903991699219

Token 263: ')' (ID: 8)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.2062336504459381
    2. ')' → logprob: -1.7062336206436157
    3. 'or' → logprob: -5.581233501434326
    4. ' and' → logprob: -7.081233501434326
    5. ' )' → logprob: -8.706233978271484
    6. 'and' → logprob: -10.581233978271484
    7. ',' → logprob: -12.456233978271484
    8. ' ' → logprob: -13.206233978271484
    9. '),' → logprob: -13.331233978271484
    10. '
' → logprob: -14.456233978271484

Token 264: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.049667831510305405
    2. 'or' → logprob: -3.2996678352355957
    3. ' and' → logprob: -4.674667835235596
    4. 'and' → logprob: -6.549667835235596
    5. '                           ' → logprob: -7.174667835235596
    6. ',' → logprob: -11.299667358398438
    7. '                            ' → logprob: -12.299667358398438
    8. '<|end|>' → logprob: -12.799667358398438
    9. ')' → logprob: -13.049667358398438
    10. '                       ' → logprob: -13.299667358398438

Token 265: ' (' (ID: 350)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.4936545491218567
    2. ' (' → logprob: -1.118654489517212
    3. '(q' → logprob: -2.868654489517212
    4. '(' → logprob: -5.743654727935791
    5. '(r' → logprob: -6.368654727935791
    6. '(s' → logprob: -7.493654727935791
    7. '((' → logprob: -7.618654727935791
    8. ' ((' → logprob: -9.243654251098633
    9. '(abs' → logprob: -11.118654251098633
    10. ' q' → logprob: -11.868654251098633

Token 266: 'p' (ID: 79)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.732153058052063
    2. 'p' → logprob: -0.857153058052063
    3. ' r' → logprob: -3.4821529388427734
    4. '(p' → logprob: -3.4821529388427734
    5. ' p' → logprob: -3.8571529388427734
    6. '(r' → logprob: -5.232152938842773
    7. ' (' → logprob: -5.607152938842773
    8. 'q' → logprob: -6.107152938842773
    9. 's' → logprob: -7.607152938842773
    10. ' q' → logprob: -9.232152938842773

Token 267: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3773702085018158
    2. ' !=' → logprob: -1.3773702383041382
    3. ' <' → logprob: -3.2523701190948486
    4. '>' → logprob: -4.127370357513428
    5. '!=' → logprob: -5.377370357513428
    6. ' ' → logprob: -6.877370357513428
    7. '<' → logprob: -7.377370357513428
    8. '<|end|>' → logprob: -7.502370357513428
    9. ' ==' → logprob: -8.50236988067627
    10. ' >=' → logprob: -10.12736988067627

Token 268: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.01604328490793705
    2. ' r' → logprob: -4.141043186187744
    3. 'p' → logprob: -12.141043663024902
    4. ' p' → logprob: -14.016043663024902
    5. ' ' → logprob: -14.141043663024902
    6. '1' → logprob: -14.391043663024902
    7. '   ' → logprob: -15.391043663024902
    8. 'q' → logprob: -15.516043663024902
    9. '```' → logprob: -15.516043663024902
    10. '0' → logprob: -15.641043663024902

Token 269: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08012741059064865
    2. 'and' → logprob: -2.580127477645874
    3. ')' → logprob: -6.705127239227295
    4. '                           ' → logprob: -11.830127716064453
    5. ' )' → logprob: -13.455127716064453
    6. '<|end|>' → logprob: -14.580127716064453
    7. ' ' → logprob: -14.955127716064453
    8. '   ' → logprob: -15.080127716064453
    9. '	and' → logprob: -15.080127716064453
    10. '),' → logprob: -15.205127716064453

Token 270: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.029571007937192917
    2. ' q' → logprob: -3.654571056365967
    3. 's' → logprob: -6.279571056365967
    4. '(q' → logprob: -7.279571056365967
    5. 'p' → logprob: -7.779571056365967
    6. ' s' → logprob: -9.279570579528809
    7. 'abs' → logprob: -9.654570579528809
    8. ' (' → logprob: -10.654570579528809
    9. '(' → logprob: -11.029570579528809
    10. ' p' → logprob: -11.279570579528809

Token 271: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.35905197262763977
    2. '>' → logprob: -1.4840519428253174
    3. ' <' → logprob: -3.6090519428253174
    4. '<' → logprob: -3.9840519428253174
    5. ' !=' → logprob: -3.9840519428253174
    6. '!=' → logprob: -5.2340521812438965
    7. ' <=' → logprob: -6.4840521812438965
    8. ' >=' → logprob: -6.6090521812438965
    9. ' ' → logprob: -7.1090521812438965
    10. '<=' → logprob: -7.1090521812438965

Token 272: ' s' (ID: 265)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00499678635969758
    2. '0' → logprob: -5.3799967765808105
    3. 's' → logprob: -8.004997253417969
    4. ' q' → logprob: -10.129997253417969
    5. 'qs' → logprob: -14.379997253417969
    6. ' ' → logprob: -14.504997253417969
    7. '
' → logprob: -14.629997253417969
    8. '-q' → logprob: -15.004997253417969
    9. 'r' → logprob: -16.25499725341797
    10. ' s' → logprob: -16.37999725341797

Token 273: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8025026321411133
    2. '):
' → logprob: -1.0525026321411133
    3. ')' → logprob: -1.6775026321411133
    4. '                           ' → logprob: -4.302502632141113
    5. '):
' → logprob: -7.052502632141113
    6. '                       ' → logprob: -7.302502632141113
    7. '):

' → logprob: -7.677502632141113
    8. '                               ' → logprob: -9.052502632141113
    9. ':' → logprob: -9.552502632141113
    10. ')**' → logprob: -10.802502632141113

Token 274: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.005789077840745449
    2. '                       ' → logprob: -5.380789279937744
    3. '                               ' → logprob: -7.505789279937744
    4. ':' → logprob: -8.380788803100586
    5. ' and' → logprob: -9.380788803100586
    6. '           ' → logprob: -9.880788803100586
    7. ' if' → logprob: -9.880788803100586
    8. '):' → logprob: -10.380788803100586
    9. '                            ' → logprob: -10.505788803100586
    10. '                          ' → logprob: -10.755788803100586

Token 275: ' if' (ID: 538)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.33236339688301086
    2. ' if' → logprob: -1.7073633670806885
    3. 'if' (adapté à ' if') → logprob: -2.3323633670806885
    4. '                       ' → logprob: -5.957363605499268
    5. '           ' → logprob: -6.832363605499268
    6. '                               ' → logprob: -8.20736312866211
    7. '               ' → logprob: -8.58236312866211
    8. '       ' → logprob: -9.33236312866211
    9. '                   ' → logprob: -9.45736312866211
    10. '```' → logprob: -10.83236312866211

Token 276: ' (' (ID: 350)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.062838077545166
    2. ' (' → logprob: -1.312838077545166
    3. ' p' → logprob: -1.437838077545166
    4. 'p' → logprob: -1.937838077545166
    5. '(' → logprob: -5.562838077545166
    6. ' not' → logprob: -9.312837600708008
    7. '   ' → logprob: -10.187837600708008
    8. 'not' → logprob: -10.687837600708008
    9. ' ' → logprob: -12.062837600708008
    10. '(
' → logprob: -12.312837600708008

Token 277: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0018066724296659231
    2. ' p' → logprob: -6.501806735992432
    3. '(p' → logprob: -8.126806259155273
    4. ' (' → logprob: -11.876806259155273
    5. '(' → logprob: -14.001806259155273
    6. '   ' → logprob: -14.501806259155273
    7. ')p' → logprob: -16.001806259155273
    8. '                           ' → logprob: -16.751806259155273
    9. ')' → logprob: -16.876806259155273
    10. '(
' → logprob: -17.376806259155273

Token 278: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.0013375049456954002
    2. '>' → logprob: -6.62633752822876
    3. ' ' → logprob: -12.126337051391602
    4. ')' → logprob: -12.376337051391602
    5. ' >
' → logprob: -14.376337051391602
    6. ' )' → logprob: -14.876337051391602
    7. ' ' → logprob: -15.251337051391602
    8. ')>' → logprob: -15.751337051391602
    9. ' ==' → logprob: -16.2513370513916
    10. '   ' → logprob: -16.2513370513916

Token 279: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3868711292743683
    2. ' r' → logprob: -1.136871099472046
    3. ' ' → logprob: -17.011871337890625
    4. ')' → logprob: -17.261871337890625
    5. '                           ' → logprob: -18.636871337890625
    6. ' ' → logprob: -18.636871337890625
    7. '	r' → logprob: -19.011871337890625
    8. '_r' → logprob: -19.136871337890625
    9. 's' → logprob: -19.261871337890625
    10. ' )' → logprob: -19.886871337890625

Token 280: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018377259839326143
    2. ' or' → logprob: -6.626837730407715
    3. ' )' → logprob: -7.626837730407715
    4. 'or' → logprob: -10.626837730407715
    5. '           ' → logprob: -16.6268367767334
    6. ')\
' → logprob: -18.0018367767334
    7. '())' → logprob: -18.0018367767334
    8. '               ' → logprob: -18.2518367767334
    9. '),' → logprob: -18.2518367767334
    10. '')' → logprob: -18.3768367767334

Token 281: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0003385614836588502
    2. 'or' → logprob: -8.125338554382324
    3. '                           ' → logprob: -10.750338554382324
    4. ')' → logprob: -11.625338554382324
    5. '                               ' → logprob: -12.625338554382324
    6. ' ' → logprob: -12.625338554382324
    7. '                            ' → logprob: -13.125338554382324
    8. '                       ' → logprob: -14.125338554382324
    9. '               ' → logprob: -14.125338554382324
    10. '           ' → logprob: -14.875338554382324

Token 282: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.12692947685718536
    2. '(p' → logprob: -2.126929521560669
    3. '(' → logprob: -13.75192928314209
    4. ' ((' → logprob: -16.126930236816406
    5. '((' → logprob: -16.626930236816406
    6. ' ' → logprob: -16.751930236816406
    7. ' p' → logprob: -17.126930236816406
    8. '   ' → logprob: -17.376930236816406
    9. '(q' → logprob: -17.376930236816406
    10. '                           ' → logprob: -17.876930236816406

Token 283: 'p' (ID: 79)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.6580862998962402
    2. 'p' → logprob: -0.7830862998962402
    3. ' (' → logprob: -4.15808629989624
    4. ' p' → logprob: -4.65808629989624
    5. '(' → logprob: -10.283086776733398
    6. '   ' → logprob: -13.158086776733398
    7. '
' → logprob: -13.408086776733398
    8. '(
' → logprob: -14.033086776733398
    9. '<p' → logprob: -14.158086776733398
    10. ' ' → logprob: -14.470586776733398

Token 284: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.38691744208335876
    2. '==' → logprob: -1.1369174718856812
    3. '=' → logprob: -10.261917114257812
    4. ')' → logprob: -13.386917114257812
    5. ' >=' → logprob: -13.386917114257812
    6. '>=' → logprob: -14.011917114257812
    7. '[' → logprob: -14.011917114257812
    8. ' =' → logprob: -14.011917114257812
    9. '```' → logprob: -14.011917114257812
    10. '==
' → logprob: -14.136917114257812

Token 285: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.005233763717114925
    2. ' r' → logprob: -5.2552337646484375
    3. '
' → logprob: -18.755233764648438
    4. '	r' → logprob: -20.255233764648438
    5. '   ' → logprob: -20.505233764648438
    6. '
' → logprob: -21.630233764648438
    7. '```' → logprob: -21.630233764648438
    8. '                           ' → logprob: -21.880233764648438
    9. ' ' → logprob: -21.880233764648438
    10. '_r' → logprob: -22.005233764648438

Token 286: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.38687989115715027
    2. 'and' → logprob: -1.1368799209594727
    3. ')' → logprob: -11.761879920959473
    4. ' ' → logprob: -14.761879920959473
    5. '   ' → logprob: -15.636879920959473
    6. '                           ' → logprob: -16.136878967285156
    7. '	and' → logprob: -16.136878967285156
    8. ' ' → logprob: -17.011878967285156
    9. '```' → logprob: -17.136878967285156
    10. ' и' → logprob: -17.386878967285156

Token 287: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.16024452447891235
    2. ' q' → logprob: -1.9102444648742676
    3. '(q' → logprob: -11.160244941711426
    4. ' (' → logprob: -12.535244941711426
    5. '(' → logprob: -14.035244941711426
    6. '	q' → logprob: -14.660244941711426
    7. '                           ' → logprob: -15.410244941711426
    8. '   ' → logprob: -15.410244941711426
    9. '
' → logprob: -15.660244941711426
    10. '                               ' → logprob: -15.660244941711426

Token 288: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.6931854486465454
    2. '>=' → logprob: -0.6931854486465454
    3. ')>=' → logprob: -10.943185806274414
    4. '>' → logprob: -11.193185806274414
    5. ']>=' → logprob: -12.568185806274414
    6. ' ' → logprob: -13.568185806274414
    7. ')' → logprob: -13.818185806274414
    8. '≥' → logprob: -14.943185806274414
    9. ' >' → logprob: -15.818185806274414
    10. '```' → logprob: -16.693185806274414

Token 289: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16022513806819916
    2. ' s' → logprob: -1.9102251529693604
    3. ' ' → logprob: -14.535224914550781
    4. ' ' → logprob: -15.785224914550781
    5. '
' → logprob: -16.28522491455078
    6. '   ' → logprob: -16.78522491455078
    7. '	s' → logprob: -17.03522491455078
    8. '                       ' → logprob: -17.41022491455078
    9. '0' → logprob: -18.34772491455078
    10. '  ' → logprob: -18.41022491455078

Token 290: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.47435060143470764
    2. '):' → logprob: -0.9743505716323853
    3. '                           ' → logprob: -8.849350929260254
    4. ')' → logprob: -9.724350929260254
    5. '):
' → logprob: -10.474350929260254
    6. '                       ' → logprob: -10.974350929260254
    7. '):

' → logprob: -10.974350929260254
    8. ':' → logprob: -12.724350929260254
    9. '                               ' → logprob: -13.474350929260254
    10. ' ):
' → logprob: -14.099350929260254

Token 291: '                               ' (ID: 2419)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.6953281760215759
    2. '                               ' → logprob: -0.6953281760215759
    3. '                                   ' → logprob: -7.195328235626221
    4. '```' → logprob: -7.820328235626221
    5. '           ' → logprob: -8.070327758789062
    6. '                       ' → logprob: -8.445327758789062
    7. '):' → logprob: -9.445327758789062
    8. ':' → logprob: -9.445327758789062
    9. 'return' → logprob: -9.945327758789062
    10. ' return' → logprob: -9.945327758789062

Token 292: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.24865122139453888
    2. '                                   ' → logprob: -1.7486512660980225
    3. ' return' → logprob: -3.1236512660980225
    4. '                               ' → logprob: -6.248651027679443
    5. '                           ' → logprob: -9.623651504516602
    6. '```' → logprob: -9.873651504516602
    7. '                                       ' → logprob: -10.498651504516602
    8. '   ' → logprob: -10.873651504516602
    9. '
' → logprob: -11.123651504516602
    10. '           ' → logprob: -11.248651504516602

Token 293: ' (' (ID: 350)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.24611873924732208
    2. ' (' → logprob: -2.2461187839508057
    3. 'p' → logprob: -2.3711187839508057
    4. ' p' → logprob: -3.9961187839508057
    5. '(' → logprob: -8.746118545532227
    6. 'True' → logprob: -8.746118545532227
    7. '(True' → logprob: -9.246118545532227
    8. ' True' → logprob: -9.496118545532227
    9. '(
' → logprob: -10.246118545532227
    10. ' ' → logprob: -10.871118545532227

Token 294: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00011319868644932285
    2. ' p' → logprob: -9.250113487243652
    3. '(p' → logprob: -11.000113487243652
    4. '   ' → logprob: -16.250112533569336
    5. ' (' → logprob: -16.375112533569336
    6. ')p' → logprob: -16.500112533569336
    7. ')' → logprob: -17.500112533569336
    8. ',p' → logprob: -18.250112533569336
    9. '
' → logprob: -18.375112533569336
    10. '	p' → logprob: -18.750112533569336

Token 295: ',q' (ID: 86188)
  Prédit: ',r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',r' → logprob: -0.20199063420295715
    2. ',' → logprob: -1.7019906044006348
    3. 'r' → logprob: -7.701990604400635
    4. ' ,' → logprob: -9.326991081237793
    5. ')' → logprob: -11.576991081237793
    6. '<|end|>' → logprob: -12.076991081237793
    7. ',
' → logprob: -12.326991081237793
    8. ',q' → logprob: -12.326991081237793
    9. ' r' → logprob: -13.076991081237793
    10. '),' → logprob: -13.701991081237793

Token 296: ',r' (ID: 33654)
  Prédit: ',r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',r' → logprob: -0.011361269280314445
    2. ',' → logprob: -4.511361122131348
    3. ',s' → logprob: -8.511361122131348
    4. ' ,' → logprob: -9.261361122131348
    5. 'r' → logprob: -12.011361122131348
    6. ')' → logprob: -12.386361122131348
    7. ',
' → logprob: -12.886361122131348
    8. '),' → logprob: -13.636361122131348
    9. ',p' → logprob: -14.636361122131348
    10. 's' → logprob: -14.636361122131348

Token 297: ',s' (ID: 20379)
  Prédit: ',s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',s' → logprob: -0.00010914575977949426
    2. ',' → logprob: -9.25010871887207
    3. 's' → logprob: -11.87510871887207
    4. ' ,' → logprob: -12.25010871887207
    5. ')' → logprob: -14.25010871887207
    6. ' s' → logprob: -15.00010871887207
    7. ',c' → logprob: -17.50010871887207
    8. ')s' → logprob: -17.62510871887207
    9. ',t' → logprob: -17.75010871887207
    10. ',
' → logprob: -17.87510871887207

Token 298: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011331788846291602
    2. ')
' → logprob: -9.375113487243652
    3. '                           ' → logprob: -11.000113487243652
    4. '                       ' → logprob: -12.500113487243652
    5. ')}}' → logprob: -13.000113487243652
    6. '<|end|>' → logprob: -13.500113487243652
    7. '                               ' → logprob: -13.625113487243652
    8. ')return' → logprob: -14.375113487243652
    9. ')}' → logprob: -14.375113487243652
    10. '),' → logprob: -15.000113487243652

Token 299: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1386216878890991
    2. '<|end|>' → logprob: -1.5136216878890991
    3. '\n' → logprob: -1.8886216878890991
    4. '                        
' → logprob: -2.5136218070983887
    5. '                       ' → logprob: -3.6386218070983887
    6. '   ' → logprob: -3.6386218070983887
    7. ' 
' → logprob: -3.7636218070983887
    8. '    
' → logprob: -3.7636218070983887
    9. '                           ' → logprob: -3.7636218070983887
    10. '                               ' → logprob: -3.8886218070983887

Token 300: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.43470320105552673
    2. 'None' → logprob: -1.6847032308578491
    3. '   ' → logprob: -2.3097031116485596
    4. ' return' → logprob: -4.184703350067139
    5. '<|end|>' → logprob: -4.434703350067139
    6. 'raise' → logprob: -4.809703350067139
    7. '\n' → logprob: -5.434703350067139
    8. ' ' → logprob: -5.559703350067139
    9. '    
' → logprob: -5.684703350067139
    10. '
' → logprob: -5.934703350067139

Token 301: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.03804539144039154
    2. 'None' → logprob: -3.2880454063415527
    3. '(None' → logprob: -13.538044929504395
    4. '_None' → logprob: -13.663044929504395
    5. ' ' → logprob: -13.913044929504395
    6. '<|end|>' → logprob: -15.538044929504395
    7. '_none' → logprob: -15.663044929504395
    8. ',None' → logprob: -16.03804588317871
    9. ' 
' → logprob: -17.66304588317871
    10. '.None' → logprob: -17.78804588317871

Token 302: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 303: 'for' (ID: 1938)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22168377041816711
    2. ':' → logprob: -2.3466837406158447
    3. '<|end|>' → logprob: -2.4716837406158447
    4. '#' → logprob: -5.846683979034424
    5. 'def' → logprob: -5.971683979034424
    6. '
' → logprob: -6.096683979034424
    7. '(' → logprob: -6.346683979034424
    8. 'n' → logprob: -6.596683979034424
    9. ' ' → logprob: -6.721683979034424
    10. ',' → logprob: -6.971683979034424

Token 304: ' line' (ID: 2543)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2195724993944168
    2. ' i' → logprob: -1.7195725440979004
    3. ' x' → logprob: -4.9695725440979
    4. ' num' → logprob: -5.3445725440979
    5. 'n' → logprob: -5.9695725440979
    6. ' a' → logprob: -6.4695725440979
    7. ' _' → logprob: -7.2195725440979
    8. ' ' → logprob: -8.094572067260742
    9. 'i' → logprob: -8.094572067260742
    10. ' number' → logprob: -8.969572067260742

Token 305: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003200169885531068
    2. 'in' → logprob: -5.753200054168701
    3. ' ' → logprob: -11.25320053100586
    4. 'import' → logprob: -13.50320053100586
    5. 's' → logprob: -13.75320053100586
    6. 'line' → logprob: -13.75320053100586
    7. '[line' → logprob: -14.12820053100586
    8. '[' → logprob: -14.25320053100586
    9. ':' → logprob: -14.37820053100586
    10. ' =' → logprob: -14.62820053100586

Token 306: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0031781906727701426
    2. ' sys' → logprob: -5.753178119659424
    3. '=sys' → logprob: -15.003178596496582
    4. '	sys' → logprob: -16.378177642822266
    5. '(sys' → logprob: -16.503177642822266
    6. 'stdin' → logprob: -18.128177642822266
    7. '```' → logprob: -18.253177642822266
    8. ' ' → logprob: -19.753177642822266
    9. '   ' → logprob: -20.128177642822266
    10. 'iter' → logprob: -20.753177642822266

Token 307: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.06231899559497833
    2. 'stdin' → logprob: -2.812319040298462
    3. '(stdin' → logprob: -8.437318801879883
    4. ' stdin' → logprob: -9.687318801879883
    5. '.readline' → logprob: -9.812318801879883
    6. 'in' → logprob: -11.437318801879883
    7. 'import' → logprob: -13.187318801879883
    8. '.readlines' → logprob: -13.687318801879883
    9. '```' → logprob: -14.187318801879883
    10. 'input' → logprob: -14.312318801879883

Token 308: ':
' (ID: 734)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.3585106432437897
    2. ':' → logprob: -1.2335106134414673
    3. '.readlines' → logprob: -5.108510494232178
    4. '.strip' → logprob: -6.983510494232178
    5. ':
' → logprob: -6.983510494232178
    6. '.' → logprob: -7.108510494232178
    7. ' in' → logprob: -7.608510494232178
    8. '.rstrip' → logprob: -7.733510494232178
    9. 'rstrip' → logprob: -9.483510971069336
    10. ' readline' → logprob: -9.983510971069336

Token 309: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024464004673063755
    2. '    
' → logprob: -6.752446174621582
    3. ' line' → logprob: -6.752446174621582
    4. ' if' → logprob: -10.002446174621582
    5. ',' → logprob: -12.252446174621582
    6. ' code' → logprob: -12.377446174621582
    7. '```' → logprob: -12.377446174621582
    8. ' readline' → logprob: -12.377446174621582
    9. '.strip' → logprob: -12.502446174621582
    10. '<|end|>' → logprob: -12.627446174621582

Token 310: ' if' (ID: 538)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.5501598715782166
    2. 'line' → logprob: -0.9251598715782166
    3. '   ' → logprob: -4.800159931182861
    4. 'n' → logprob: -4.925159931182861
    5. ' n' → logprob: -5.175159931182861
    6. 'x' → logprob: -6.550159931182861
    7. ' if' → logprob: -6.925159931182861
    8. 'if' (adapté à ' if') → logprob: -6.925159931182861
    9. 'a' → logprob: -7.425159931182861
    10. ' parts' → logprob: -7.550159931182861

Token 311: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.024889765307307243
    2. 'not' → logprob: -4.399889945983887
    3. ' line' → logprob: -4.524889945983887
    4. 'line' → logprob: -6.524889945983887
    5. ' ' → logprob: -14.274889945983887
    6. '=line' → logprob: -15.024889945983887
    7. '#line' → logprob: -15.774889945983887
    8. '(line' → logprob: -16.39988899230957
    9. '[line' → logprob: -16.89988899230957
    10. ' ' → logprob: -17.02488899230957

Token 312: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.10020699352025986
    2. 'line' → logprob: -2.3502070903778076
    3. '(line' → logprob: -15.475207328796387
    4. '	line' → logprob: -16.60020637512207
    5. '#line' → logprob: -17.72520637512207
    6. '=line' → logprob: -18.60020637512207
    7. '[line' → logprob: -18.60020637512207
    8. ' ' → logprob: -19.35020637512207
    9. '_line' → logprob: -19.72520637512207
    10. ' linha' → logprob: -20.85020637512207

Token 313: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.02994578890502453
    2. '.' → logprob: -3.5299458503723145
    3. '.rstrip' → logprob: -8.904945373535156
    4. '.startswith' → logprob: -10.279945373535156
    5. ' .' → logprob: -10.904945373535156
    6. 'strip' → logprob: -12.529945373535156
    7. '.chomp' → logprob: -13.904945373535156
    8. ':
' → logprob: -14.279945373535156
    9. '.endswith' → logprob: -14.904945373535156
    10. '.readline' → logprob: -14.904945373535156

Token 314: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.5026040077209473
    2. '():' → logprob: -1.0026040077209473
    3. ':' → logprob: -3.7526040077209473
    4. ':
' → logprob: -5.377604007720947
    5. '()' → logprob: -10.377603530883789
    6. '():
' → logprob: -11.627603530883789
    7. ':return' → logprob: -13.502603530883789
    8. '):
' → logprob: -13.752603530883789
    9. ' :' → logprob: -13.877603530883789
    10. '   ' → logprob: -14.002603530883789

Token 315: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03371220454573631
    2. '   ' → logprob: -3.408712148666382
    3. ' break' → logprob: -10.158712387084961
    4. ',' → logprob: -12.283712387084961
    5. ' ' → logprob: -12.283712387084961
    6. '     ' → logprob: -12.783712387084961
    7. ':' → logprob: -13.033712387084961
    8. '<|end|>' → logprob: -13.158712387084961
    9. '   ' → logprob: -13.283712387084961
    10. '	break' → logprob: -13.408712387084961

Token 316: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.06221001222729683
    2. ' break' → logprob: -2.8122100830078125
    3. '   ' → logprob: -8.562210083007812
    4. '	break' → logprob: -10.312210083007812
    5. 'continue' (adapté à ' continue') → logprob: -11.062210083007812
    6. '       ' → logprob: -13.312210083007812
    7. ' continue' → logprob: -14.812210083007812
    8. '
' → logprob: -16.437210083007812
    9. ' ' → logprob: -16.937210083007812
    10. '           ' → logprob: -17.187210083007812

Token 317: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00011391390580683947
    2. '    
' → logprob: -9.625113487243652
    3. '
' → logprob: -10.000113487243652
    4. 'n' → logprob: -14.250113487243652
    5. 'tokens' → logprob: -14.750113487243652
    6. '```' → logprob: -15.625113487243652
    7. '  
' → logprob: -15.750113487243652
    8. 'a' → logprob: -15.750113487243652
    9. ',' → logprob: -15.875113487243652
    10. '       ' → logprob: -16.00011444091797

Token 318: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005643534241244197
    2. 'tokens' → logprob: -9.000564575195312
    3. '    
' → logprob: -9.250564575195312
    4. ' n' → logprob: -9.375564575195312
    5. 'n' → logprob: -9.500564575195312
    6. ' tokens' → logprob: -10.000564575195312
    7. 'a' → logprob: -10.125564575195312
    8. '```' → logprob: -11.000564575195312
    9. ' parts' → logprob: -11.250564575195312
    10. ' line' → logprob: -11.375564575195312

Token 319: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.24645476043224335
    2. 'n' → logprob: -1.7464547157287598
    3. 'x' → logprob: -4.12145471572876
    4. '   ' → logprob: -4.24645471572876
    5. 'try' → logprob: -5.37145471572876
    6. ' a' → logprob: -5.99645471572876
    7. 'parts' → logprob: -5.99645471572876
    8. ' parts' → logprob: -6.49645471572876
    9. ' n' → logprob: -6.74645471572876
    10. 'coeff' → logprob: -8.496455192565918

Token 320: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.5760762691497803
    2. ',' → logprob: -0.8260762691497803
    3. 'b' → logprob: -9.07607650756836
    4. ' ,' → logprob: -11.82607650756836
    5. ',int' → logprob: -12.07607650756836
    6. ',s' → logprob: -12.32607650756836
    7. ',a' → logprob: -14.20107650756836
    8. ',line' → logprob: -14.70107650756836
    9. ',n' → logprob: -14.82607650756836
    10. ',h' → logprob: -15.07607650756836

Token 321: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5496524572372437
    2. ',c' → logprob: -0.9246524572372437
    3. ' =' → logprob: -4.174652576446533
    4. '=' → logprob: -5.299652576446533
    5. ',b' → logprob: -5.299652576446533
    6. ',s' → logprob: -8.174652099609375
    7. 'c' → logprob: -8.674652099609375
    8. ',a' → logprob: -9.674652099609375
    9. ',q' → logprob: -9.799652099609375
    10. ',f' → logprob: -10.049652099609375

Token 322: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3870275616645813
    2. '=' → logprob: -1.1370275020599365
    3. '=int' → logprob: -9.262027740478516
    4. ',' → logprob: -10.012027740478516
    5. '   ' → logprob: -11.387027740478516
    6. '=line' → logprob: -13.887027740478516
    7. '    ' → logprob: -14.137027740478516
    8. ',a' → logprob: -15.012027740478516
    9. '=input' → logprob: -15.012027740478516
    10. '=
' → logprob: -15.137027740478516

Token 323: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.16022655367851257
    2. ' map' → logprob: -1.910226583480835
    3. '   ' → logprob: -14.035226821899414
    4. '(map' → logprob: -14.035226821899414
    5. 'line' → logprob: -14.410226821899414
    6. '	map' → logprob: -15.910226821899414
    7. ' line' → logprob: -17.160226821899414
    8. '  ' → logprob: -17.160226821899414
    9. ' ' → logprob: -17.785226821899414
    10. 'm' → logprob: -18.285226821899414

Token 324: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.000111768240458332
    2. 'int' → logprob: -9.62511157989502
    3. '(str' → logprob: -10.50011157989502
    4. '(' → logprob: -11.00011157989502
    5. '[int' → logprob: -14.62511157989502
    6. ' int' → logprob: -15.12511157989502
    7. '(lambda' → logprob: -15.12511157989502
    8. '<int' → logprob: -15.37511157989502
    9. '=int' → logprob: -16.500112533569336
    10. '(line' → logprob: -17.000112533569336

Token 325: ',line' (ID: 171132)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.21975088119506836
    2. ',line' → logprob: -1.7197508811950684
    3. ' line' → logprob: -4.469750881195068
    4. ',' → logprob: -5.094750881195068
    5. '=line' → logprob: -7.969750881195068
    6. 'line' → logprob: -9.469751358032227
    7. '	line' → logprob: -9.719751358032227
    8. '#line' → logprob: -10.094751358032227
    9. '[line' → logprob: -10.469751358032227
    10. ')' → logprob: -10.719751358032227

Token 326: '.split' (ID: 10347)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.08688788115978241
    2. '().' → logprob: -2.586887836456299
    3. '.split' → logprob: -4.836887836456299
    4. '.' → logprob: -10.711888313293457
    5. 'strip' → logprob: -12.086888313293457
    6. '.readline' → logprob: -13.211888313293457
    7. ' .' → logprob: -13.336888313293457
    8. '.rstrip' → logprob: -13.461888313293457
    9. '(strip' → logprob: -14.086888313293457
    10. 'split' → logprob: -14.336888313293457

Token 327: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0004886920796707273
    2. '()' → logprob: -8.37548828125
    3. ')' → logprob: -8.62548828125
    4. '())
' → logprob: -9.50048828125
    5. '(' → logprob: -13.00048828125
    6. ' ())' → logprob: -14.50048828125
    7. '())

' → logprob: -15.00048828125
    8. '())
' → logprob: -15.37548828125
    9. '()))' → logprob: -16.00048828125
    10. '(','' → logprob: -16.12548828125

Token 328: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036911141127347946
    2. '<|end|>' → logprob: -4.0369110107421875
    3. '    
' → logprob: -4.6619110107421875
    4. '
' → logprob: -5.5369110107421875
    5. '<|end|>' → logprob: -6.4119110107421875
    6. ')' → logprob: -6.9119110107421875
    7. ',' → logprob: -7.4119110107421875
    8. ':' → logprob: -8.286911010742188
    9. 'if' → logprob: -8.286911010742188
    10. 'def' → logprob: -8.411911010742188

Token 329: ' if' (ID: 538)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.7238152623176575
    2. 'result' → logprob: -1.7238152027130127
    3. '   ' → logprob: -2.0988152027130127
    4. ' res' → logprob: -2.2238152027130127
    5. 'factor' → logprob: -3.4738152027130127
    6. ' result' → logprob: -3.5988152027130127
    7. 'f' → logprob: -3.7238152027130127
    8. 'fact' → logprob: -4.348815441131592
    9. 'if' (adapté à ' if') → logprob: -5.223815441131592
    10. ' factor' → logprob: -6.473815441131592

Token 330: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4674718677997589
    2. 'a' → logprob: -1.0924718379974365
    3. ' (' → logprob: -3.9674718379974365
    4. '(a' → logprob: -4.217472076416016
    5. ' try' → logprob: -6.842472076416016
    6. '(' → logprob: -7.092472076416016
    7. ' b' → logprob: -7.342472076416016
    8. 'try' → logprob: -7.592472076416016
    9. ' abs' → logprob: -7.592472076416016
    10. 'b' → logprob: -8.217472076416016

Token 331: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06427451223134995
    2. '==' → logprob: -2.814274549484253
    3. ' <=' → logprob: -6.189274311065674
    4. '<=' → logprob: -9.064274787902832
    5. ' <' → logprob: -9.939274787902832
    6. ' !=' → logprob: -10.439274787902832
    7. ' ' → logprob: -10.939274787902832
    8. '=' → logprob: -11.189274787902832
    9. ' >' → logprob: -11.439274787902832
    10. '!=' → logprob: -12.689274787902832

Token 332: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002797153079882264
    2. ' ' → logprob: -6.7527971267700195
    3. 'b' → logprob: -7.0027971267700195
    4. '1' → logprob: -7.2527971267700195
    5. ' b' → logprob: -12.00279712677002
    6. 'c' → logprob: -14.75279712677002
    7. '   ' → logprob: -14.87779712677002
    8. '
' → logprob: -15.50279712677002
    9. '  ' → logprob: -15.50279712677002
    10. '```' → logprob: -15.50279712677002

Token 333: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10023600608110428
    2. 'and' → logprob: -2.350235939025879
    3. ' or' → logprob: -11.350235939025879
    4. ' ' → logprob: -11.850235939025879
    5. '   ' → logprob: -11.850235939025879
    6. ':' → logprob: -13.225235939025879
    7. '	and' → logprob: -14.350235939025879
    8. ':
' → logprob: -14.725235939025879
    9. '  ' → logprob: -15.850235939025879
    10. 'or' → logprob: -16.350236892700195

Token 334: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0019286326132714748
    2. ' b' → logprob: -6.251928806304932
    3. '   ' → logprob: -17.501928329467773
    4. '  ' → logprob: -19.001928329467773
    5. ' ' → logprob: -19.001928329467773
    6. '	b' → logprob: -19.376928329467773
    7. 'a' → logprob: -19.626928329467773
    8. 'c' → logprob: -20.251928329467773
    9. '0' → logprob: -21.001928329467773
    10. ',b' → logprob: -21.376928329467773

Token 335: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0008314246661029756
    2. ' ==' → logprob: -7.125831604003906
    3. '=' → logprob: -10.875831604003906
    4. '0' → logprob: -12.125831604003906
    5. ')==' → logprob: -14.500831604003906
    6. '()==' → logprob: -14.625831604003906
    7. ']==' → logprob: -14.750831604003906
    8. '===' → logprob: -14.750831604003906
    9. ' ' → logprob: -15.125831604003906
    10. '==
' → logprob: -15.250831604003906

Token 336: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '<|end|>' → logprob: -17.625017166137695
    4. '
' → logprob: -18.000017166137695
    5. '```' → logprob: -18.250017166137695
    6. '1' → logprob: -18.500017166137695
    7. '  ' → logprob: -18.625017166137695
    8. '...' → logprob: -19.875017166137695
    9. '   ' → logprob: -20.000017166137695
    10. '۰' → logprob: -20.062517166137695

Token 337: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.38688141107559204
    2. 'and' → logprob: -1.1368813514709473
    3. '0' → logprob: -12.136881828308105
    4. ' ' → logprob: -12.386881828308105
    5. '==' → logprob: -14.761881828308105
    6. '<|end|>' → logprob: -15.636881828308105
    7. '	and' → logprob: -15.761881828308105
    8. '   ' → logprob: -16.88688087463379
    9. 'c' → logprob: -17.26188087463379
    10. '```' → logprob: -17.63688087463379

Token 338: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.01120060682296753
    2. ' c' → logprob: -4.511200428009033
    3. '0' → logprob: -8.886200904846191
    4. ' ' → logprob: -11.261200904846191
    5. '   ' → logprob: -13.886200904846191
    6. '  ' → logprob: -14.136200904846191
    7. '	c' → logprob: -17.011199951171875
    8. '    ' → logprob: -19.261199951171875
    9. '
' → logprob: -19.511199951171875
    10. ' and' → logprob: -19.511199951171875

Token 339: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -7.219262624857947e-05
    2. ' ==' → logprob: -9.875072479248047
    3. '0' → logprob: -11.125072479248047
    4. '=' → logprob: -12.250072479248047
    5. '==
' → logprob: -14.750072479248047
    6. ')==' → logprob: -14.875072479248047
    7. ']==' → logprob: -16.000072479248047
    8. '()==' → logprob: -16.000072479248047
    9. '==(' → logprob: -16.375072479248047
    10. '===' → logprob: -17.000072479248047

Token 340: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -17.500003814697266
    4. '۰' → logprob: -18.000003814697266
    5. '<|end|>' → logprob: -18.187503814697266
    6. '   ' → logprob: -18.250003814697266
    7. '  ' → logprob: -19.062503814697266
    8. '1' → logprob: -19.312503814697266
    9. '০' → logprob: -19.812503814697266
    10. '=' → logprob: -19.812503814697266

Token 341: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19312839210033417
    2. ':
' → logprob: -1.9431283473968506
    3. '       ' → logprob: -3.8181283473968506
    4. '   ' → logprob: -4.56812858581543
    5. ':return' → logprob: -12.44312858581543
    6. '):
' → logprob: -12.81812858581543
    7. '.' → logprob: -12.81812858581543
    8. '	break' → logprob: -13.31812858581543
    9. '():
' → logprob: -13.44312858581543
    10. '     ' → logprob: -13.44312858581543

Token 342: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029078235384076834
    2. ':' → logprob: -6.002907752990723
    3. ':
' → logprob: -7.877907752990723
    4. '   ' → logprob: -10.377907752990723
    5. '           ' → logprob: -12.127907752990723
    6. '<|end|>' → logprob: -12.627907752990723
    7. '      ' → logprob: -12.752907752990723
    8. ',' → logprob: -13.377907752990723
    9. '):
' → logprob: -13.627907752990723
    10. '        
' → logprob: -13.752907752990723

Token 343: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41308891773223877
    2. 'break' (adapté à ' break') → logprob: -1.6630889177322388
    3. ' break' → logprob: -1.9130889177322388
    4. '   ' → logprob: -7.038088798522949
    5. '	break' → logprob: -8.03808879852295
    6. '           ' → logprob: -11.03808879852295
    7. '
' → logprob: -14.03808879852295
    8. '_break' → logprob: -14.03808879852295
    9. '     ' → logprob: -14.66308879852295
    10. '      ' → logprob: -14.91308879852295

Token 344: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021160203963518143
    2. '    
' → logprob: -4.271160125732422
    3. '
' → logprob: -5.021160125732422
    4. 'result' → logprob: -8.771160125732422
    5. '        
' → logprob: -9.396160125732422
    6. 'token' → logprob: -10.271160125732422
    7. '<|end|>' → logprob: -10.271160125732422
    8. '  
' → logprob: -11.396160125732422
    9. 'p' → logprob: -12.021160125732422
    10. 't' → logprob: -12.146160125732422

Token 345: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3278025984764099
    2. 'result' → logprob: -1.5778026580810547
    3. 'res' → logprob: -3.3278026580810547
    4. 'factor' → logprob: -3.9528026580810547
    5. ' result' → logprob: -4.327802658081055
    6. ' res' → logprob: -6.452802658081055
    7. '
' → logprob: -7.452802658081055
    8. '    
' → logprob: -7.577802658081055
    9. ' factor' → logprob: -7.577802658081055
    10. 'solution' → logprob: -7.702802658081055

Token 346: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.2685714364051819
    2. 'result' → logprob: -2.018571376800537
    3. ' res' → logprob: -2.893571376800537
    4. 'f' → logprob: -4.393571376800537
    5. 'factor' → logprob: -4.393571376800537
    6. ' result' → logprob: -4.643571376800537
    7. 'fact' → logprob: -5.018571376800537
    8. '   ' → logprob: -5.393571376800537
    9. 'fac' → logprob: -7.268571376800537
    10. ' factor' → logprob: -7.768571376800537

Token 347: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16024057567119598
    2. '=' → logprob: -1.9102405309677124
    3. 'ult' → logprob: -11.160240173339844
    4. 'ults' → logprob: -14.160240173339844
    5. '=res' → logprob: -15.160240173339844
    6. '   ' → logprob: -15.535240173339844
    7. 's' → logprob: -15.785240173339844
    8. '=

' → logprob: -16.410240173339844
    9. '=result' → logprob: -16.410240173339844
    10. ' =)' → logprob: -16.785240173339844

Token 348: ' try' (ID: 2075)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.006715370807796717
    2. ' try' → logprob: -5.006715297698975
    3. '   ' → logprob: -18.381715774536133
    4. '.try' → logprob: -19.256715774536133
    5. ' ' → logprob: -19.881715774536133
    6. '	try' → logprob: -19.881715774536133
    7. '  ' → logprob: -21.381715774536133
    8. 'tr' → logprob: -21.506715774536133
    9. '_try' → logprob: -21.881715774536133
    10. '
' → logprob: -22.006715774536133

Token 349: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -1.2664456789934775e-06
    2. 'factor' → logprob: -13.750000953674316
    3. '_fact' → logprob: -15.875000953674316
    4. '_' → logprob: -17.875001907348633
    5. '_fac' → logprob: -18.750001907348633
    6. '_f' → logprob: -19.000001907348633
    7. '_FACTOR' → logprob: -19.250001907348633
    8. '_factory' → logprob: -19.250001907348633
    9. 'Factor' → logprob: -19.500001907348633
    10. '```' → logprob: -20.000001907348633

Token 350: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -4.334533878136426e-05
    2. 'factor' → logprob: -10.750042915344238
    3. 'a' → logprob: -11.000042915344238
    4. 'f' → logprob: -13.625042915344238
    5. '_factor' → logprob: -13.625042915344238
    6. 'try' → logprob: -13.625042915344238
    7. '(' → logprob: -14.125042915344238
    8. ' (' → logprob: -14.875042915344238
    9. 'def' → logprob: -16.000043869018555
    10. 'fact' → logprob: -16.375043869018555

Token 351: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.004633164964616299
    2. ',' → logprob: -5.379632949829102
    3. ',
' → logprob: -12.004632949829102
    4. ' ,' → logprob: -12.254632949829102
    5. '   ' → logprob: -14.754632949829102
    6. 'b' → logprob: -15.004632949829102
    7. '```' → logprob: -15.629632949829102
    8. ',B' → logprob: -15.754632949829102
    9. ',int' → logprob: -15.879632949829102
    10. '`,`' → logprob: -16.0046329498291

Token 352: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -5.5027299822540954e-05
    2. ',' → logprob: -9.875055313110352
    3. 'c' → logprob: -12.625055313110352
    4. ' ,' → logprob: -15.875055313110352
    5. ',
' → logprob: -16.50005531311035
    6. '```' → logprob: -16.50005531311035
    7. ',C' → logprob: -18.50005531311035
    8. ',b' → logprob: -19.00005531311035
    9. ',res' → logprob: -19.00005531311035
    10. ')c' → logprob: -19.87505531311035

Token 353: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.02332141250371933
    2. ')' → logprob: -3.7733213901519775
    3. '   ' → logprob: -9.648321151733398
    4. ')
' → logprob: -11.773321151733398
    5. ')

' → logprob: -13.148321151733398
    6. 'if' → logprob: -13.898321151733398
    7. ' )
' → logprob: -14.898321151733398
    8. '
' → logprob: -16.1483211517334
    9. '):
' → logprob: -16.3983211517334
    10. ' if' → logprob: -16.5233211517334

Token 354: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0819152370095253
    2. '   ' → logprob: -2.7069151401519775
    3. ' if' → logprob: -4.456915378570557
    4. 'print' → logprob: -8.456914901733398
    5. '
' → logprob: -9.581914901733398
    6. '<|end|>' → logprob: -11.081914901733398
    7. '	if' → logprob: -12.706914901733398
    8. '    
' → logprob: -12.831914901733398
    9. ' ' → logprob: -13.706914901733398
    10. 'If' → logprob: -13.956914901733398

Token 355: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0016121044754981995
    2. ' if' → logprob: -6.501612186431885
    3. '   ' → logprob: -9.126611709594727
    4. 'print' → logprob: -13.876611709594727
    5. '```' → logprob: -16.876611709594727
    6. '
' → logprob: -18.126611709594727
    7. 'If' → logprob: -18.626611709594727
    8. '    
' → logprob: -18.876611709594727
    9. '	if' → logprob: -19.376611709594727
    10. ' ' → logprob: -19.376611709594727

Token 356: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.006731592118740082
    2. 'res' → logprob: -5.0067315101623535
    3. ' not' → logprob: -11.131731986999512
    4. ' ' → logprob: -14.506731986999512
    5. '(res' → logprob: -14.756731986999512
    6. ' ' → logprob: -15.381731986999512
    7. 'not' → logprob: -15.881731986999512
    8. '	res' → logprob: -16.006731033325195
    9. '   ' → logprob: -16.631731033325195
    10. 'r' → logprob: -18.506731033325195

Token 357: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.03475957736372948
    2. ':' → logprob: -3.409759521484375
    3. 'is' → logprob: -7.034759521484375
    4. '==' → logprob: -9.034759521484375
    5. ' ==' → logprob: -10.034759521484375
    6. ':
' → logprob: -10.909759521484375
    7. ' =' → logprob: -11.284759521484375
    8. '!=' → logprob: -11.284759521484375
    9. ')' → logprob: -11.659759521484375
    10. '=' → logprob: -12.034759521484375

Token 358: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.07186634838581085
    2. ' None' → logprob: -2.821866273880005
    3. ' not' → logprob: -4.821866512298584
    4. 'not' → logprob: -6.321866512298584
    5. 'Not' → logprob: -14.446866035461426
    6. '   ' → logprob: -14.696866035461426
    7. '(None' → logprob: -15.321866035461426
    8. '_None' → logprob: -15.821866035461426
    9. 'none' → logprob: -16.071866989135742
    10. '=None' → logprob: -17.446866989135742

Token 359: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1411888748407364
    2. ':
' → logprob: -2.266188859939575
    3. '       ' → logprob: -3.641188859939575
    4. '   ' → logprob: -6.516189098358154
    5. ' or' → logprob: -9.891188621520996
    6. ',' → logprob: -9.891188621520996
    7. '):
' → logprob: -10.016188621520996
    8. 'print' → logprob: -10.141188621520996
    9. '():
' → logprob: -10.641188621520996
    10. ' print' → logprob: -11.141188621520996

Token 360: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001017551330733113
    2. 'print' → logprob: -9.750102043151855
    3. ' print' → logprob: -10.750102043151855
    4. '   ' → logprob: -11.375102043151855
    5. '        
' → logprob: -13.250102043151855
    6. ',' → logprob: -13.375102043151855
    7. '
' → logprob: -13.375102043151855
    8. '```' → logprob: -13.875102043151855
    9. '<|end|>' → logprob: -14.125102043151855
    10. '           ' → logprob: -14.250102043151855

Token 361: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.09393557906150818
    2. '   ' → logprob: -2.843935489654541
    3. ' print' → logprob: -3.468935489654541
    4. '       ' → logprob: -8.0939359664917
    5. '	print' → logprob: -12.7189359664917
    6. '           ' → logprob: -13.8439359664917
    7. 'sys' → logprob: -14.0939359664917
    8. '```' → logprob: -14.0939359664917
    9. ' ' → logprob: -15.0939359664917
    10. '    
' → logprob: -15.8439359664917

Token 362: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.012441366910934448
    2. '(' → logprob: -4.762441158294678
    3. '('' → logprob: -6.887441158294678
    4. '(No' → logprob: -7.262441158294678
    5. '("(' → logprob: -7.387441158294678
    6. '(-' → logprob: -7.637441158294678
    7. '("("' → logprob: -8.637441635131836
    8. '(NO' → logprob: -8.762441635131836
    9. '(None' → logprob: -9.012441635131836
    10. '(no' → logprob: -9.137441635131836

Token 363: 'Impossible' (ID: 192245)
  Prédit: 'No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.058201346546411514
    2. 'Impossible' → logprob: -4.308201313018799
    3. 'Can't' → logprob: -4.433201313018799
    4. 'None' → logprob: -4.683201313018799
    5. 'IMP' → logprob: -5.558201313018799
    6. '0' → logprob: -5.683201313018799
    7. 'Cannot' → logprob: -5.683201313018799
    8. 'no' → logprob: -6.308201313018799
    9. 'Im' → logprob: -6.558201313018799
    10. '"No' → logprob: -6.683201313018799

Token 364: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00033677343162707984
    2. '")
' → logprob: -8.000336647033691
    3. '")
' → logprob: -14.625336647033691
    4. '"' → logprob: -14.750336647033691
    5. ')' → logprob: -15.500336647033691
    6. '!")' → logprob: -16.250337600708008
    7. ')")' → logprob: -16.500337600708008
    8. '");' → logprob: -17.250337600708008
    9. '')' → logprob: -17.500337600708008
    10. '.")' → logprob: -17.625337600708008

Token 365: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015060683712363243
    2. 'else' → logprob: -5.015060901641846
    3. '<|end|>' → logprob: -5.390060901641846
    4. ' else' → logprob: -6.015060901641846
    5. ')' → logprob: -7.140060901641846
    6. '       ' → logprob: -8.515060424804688
    7. '<|end|>' → logprob: -9.515060424804688
    8. '    
' → logprob: -10.140060424804688
    9. '                       ' → logprob: -10.390060424804688
    10. '```' → logprob: -10.640060424804688

Token 366: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25785237550735474
    2. 'else' (adapté à ' else') → logprob: -1.50785231590271
    3. ' else' → logprob: -5.132852554321289
    4. 'elif' → logprob: -12.257852554321289
    5. '	else' → logprob: -14.257852554321289
    6. ')' → logprob: -15.632852554321289
    7. ' elif' → logprob: -16.13285255432129
    8. ',' → logprob: -16.25785255432129
    9. '    
' → logprob: -16.38285255432129
    10. '       ' → logprob: -16.50785255432129

Token 367: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01529139094054699
    2. ':
' → logprob: -4.640291213989258
    3. '       ' → logprob: -5.390291213989258
    4. '   ' → logprob: -7.015291213989258
    5. ' :' → logprob: -10.890291213989258
    6. '():' → logprob: -11.765291213989258
    7. '           ' → logprob: -12.140291213989258
    8. ' print' → logprob: -12.265291213989258
    9. '{' → logprob: -12.265291213989258
    10. '    ' → logprob: -12.390291213989258

Token 368: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00029029499273747206
    2. '   ' → logprob: -8.250289916992188
    3. '(p' → logprob: -10.875289916992188
    4. 'print' → logprob: -12.750289916992188
    5. '           ' → logprob: -13.375289916992188
    6. ' p' → logprob: -13.750289916992188
    7. 'p' → logprob: -14.250289916992188
    8. '	   ' → logprob: -14.375289916992188
    9. '```' → logprob: -14.750289916992188
    10. '(' → logprob: -14.750289916992188

Token 369: ' print' (ID: 2123)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.04787614941596985
    2. 'print' (adapté à ' print') → logprob: -3.4228761196136475
    3. '       ' → logprob: -4.797876358032227
    4. ' p' → logprob: -5.172876358032227
    5. ' print' → logprob: -8.922876358032227
    6. '(p' → logprob: -9.922876358032227
    7. '   ' → logprob: -10.547876358032227
    8. '	p' → logprob: -13.297876358032227
    9. 'P' → logprob: -14.047876358032227
    10. ' ' → logprob: -14.797876358032227

Token 370: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.27781668305397034
    2. '(f' → logprob: -1.902816653251648
    3. '(res' → logprob: -2.5278167724609375
    4. '("{}' → logprob: -4.6528167724609375
    5. '("' → logprob: -6.6528167724609375
    6. '(' → logprob: -6.6528167724609375
    7. '('{}' → logprob: -7.2778167724609375
    8. '('' → logprob: -7.7778167724609375
    9. '("{' → logprob: -8.152816772460938
    10. '(*(' → logprob: -10.527816772460938

Token 371: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -3.128163257315464e-07
    2. ' res' → logprob: -15.5
    3. '(res' → logprob: -17.0
    4. 'list' → logprob: -22.375
    5. '[' → logprob: -22.5
    6. '	res' → logprob: -23.0
    7. '$res' → logprob: -23.375
    8. '
' → logprob: -23.75
    9. 'tuple' → logprob: -24.5
    10. 'map' → logprob: -24.875

Token 372: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1756367712223437e-05
    2. '<|end|>' → logprob: -12.500011444091797
    3. '())' → logprob: -13.125011444091797
    4. ')
' → logprob: -13.250011444091797
    5. ' )' → logprob: -13.625011444091797
    6. '()' → logprob: -14.125011444091797
    7. ')`' → logprob: -14.875011444091797
    8. '`)' → logprob: -14.875011444091797
    9. '```' → logprob: -15.375011444091797
    10. '))' → logprob: -15.500011444091797


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 370
Tokens correctement prédits (1ère position, stricte): 163
Tokens correctement prédits (1ère position, avec adaptation): 172
Tokens correctement prédits (top 10): 323
Précision stricte (1ère position): 44.05%
Précision adaptée (1ère position): 46.49%
Précision (top 10): 87.30%
================================================================================
