================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:02:22
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    n = int(input())
    if n == 0:
        break
    arr = [int(input()) for _ in range(n)]
    k = int(input())
    left, right = 0, n - 1
    count = 0
    while left <= right:
        mid = (left + right) // 2
        count += 1
        if arr[mid] == k:
            break
        elif arr[mid] < k:
            left = mid + 1
        else:
            right = mid - 1
    print(count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5957265496253967
    2. '\' → logprob: -2.220726490020752
    3. ' ' → logprob: -2.470726490020752
    4. '```' → logprob: -2.845726490020752
    5. '    ' → logprob: -2.970726490020752
    6. '    
' → logprob: -3.220726490020752
    7. '\n' → logprob: -3.720726490020752
    8. ' 
' → logprob: -3.845726490020752
    9. '<|end|>' → logprob: -3.970726490020752
    10. '  
' → logprob: -5.095726490020752

Token 4: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19517217576503754
    2. '    ' → logprob: -2.695172071456909
    3. ' ' → logprob: -3.070172071456909
    4. '```' → logprob: -3.195172071456909
    5. '       ' → logprob: -5.195172309875488
    6. '    
' → logprob: -5.695172309875488
    7. ' pass' → logprob: -5.945172309875488
    8. '  ' → logprob: -6.445172309875488
    9. 'pass' → logprob: -6.445172309875488
    10. ' ```' → logprob: -6.945172309875488

Token 5: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7968395352363586
    2. '=' → logprob: -1.5468394756317139
    3. 'u' → logprob: -2.046839475631714
    4. '   ' → logprob: -2.796839475631714
    5. 'o' → logprob: -3.296839475631714
    6. '+' → logprob: -3.796839475631714
    7. '>' → logprob: -4.296839714050293
    8. '_' → logprob: -4.421839714050293
    9. ' =' → logprob: -4.421839714050293
    10. '  ' → logprob: -4.796839714050293

Token 6: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3952937424182892
    2. ' input' → logprob: -1.2702937126159668
    3. 'input' → logprob: -3.395293712615967
    4. 'int' → logprob: -4.645293712615967
    5. ' n' → logprob: -6.270293712615967
    6. ' ' → logprob: -7.895293712615967
    7. 'n' → logprob: -9.395294189453125
    8. ' randint' → logprob: -9.770294189453125
    9. '```' → logprob: -11.020294189453125
    10. ' a' → logprob: -11.020294189453125

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0789412334561348
    2. '(input' → logprob: -2.5789413452148438
    3. '(n' → logprob: -10.703941345214844
    4. '()' → logprob: -11.953941345214844
    5. '(
' → logprob: -12.203941345214844
    6. '('' → logprob: -12.328941345214844
    7. '(user' → logprob: -13.203941345214844
    8. 'input' → logprob: -13.453941345214844
    9. '(range' → logprob: -13.703941345214844
    10. ' (' → logprob: -13.953941345214844

Token 8: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38052013516426086
    2. ')' → logprob: -1.8805201053619385
    3. '()' → logprob: -2.0055201053619385
    4. '())' → logprob: -3.7555201053619385
    5. '))' → logprob: -5.755520343780518
    6. '()))' → logprob: -7.005520343780518
    7. '('' → logprob: -7.880520343780518
    8. '(
' → logprob: -7.880520343780518
    9. ' ' → logprob: -8.63051986694336
    10. '(""))' → logprob: -8.75551986694336

Token 9: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5770694613456726
    2. ' if' → logprob: -1.2020695209503174
    3. '   ' → logprob: -2.9520695209503174
    4. ')' → logprob: -3.9520695209503174
    5. 'if' → logprob: -4.327069282531738
    6. '  ' → logprob: -4.452069282531738
    7. '    ' → logprob: -4.577069282531738
    8. '<|end|>' → logprob: -4.702069282531738
    9. ':' → logprob: -4.827069282531738
    10. ',' → logprob: -5.702069282531738

Token 10: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5625182390213013
    2. ' if' → logprob: -1.1875182390213013
    3. '<|end|>' → logprob: -3.4375181198120117
    4. ')' → logprob: -3.8125181198120117
    5. ' ' → logprob: -3.9375181198120117
    6. '```' → logprob: -4.187518119812012
    7. '    ' → logprob: -4.437518119812012
    8. 'if' (adapté à ' if') → logprob: -5.437518119812012
    9. '\n' → logprob: -5.937518119812012
    10. '  ' → logprob: -6.062518119812012

Token 11: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0034862698521465063
    2. ' ' → logprob: -6.003486156463623
    3. ' not' → logprob: -7.378486156463623
    4. 'n' → logprob: -7.878486156463623
    5. ' ' → logprob: -12.378486633300781
    6. 'not' → logprob: -13.628486633300781
    7. '  ' → logprob: -15.003486633300781
    8. ' (' → logprob: -15.753486633300781
    9. '(n' → logprob: -15.878486633300781
    10. '<|end|>' → logprob: -16.12848663330078

Token 12: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3223670423030853
    2. ' >' → logprob: -2.072366952896118
    3. ' <=' → logprob: -2.447366952896118
    4. ' <' → logprob: -3.572366952896118
    5. '==' → logprob: -3.822366952896118
    6. '>' → logprob: -5.197367191314697
    7. ' ' → logprob: -5.447367191314697
    8. ' >=' → logprob: -7.197367191314697
    9. '<=' → logprob: -7.197367191314697
    10. '<' → logprob: -7.447367191314697

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10021023452281952
    2. '0' → logprob: -2.350210189819336
    3. ' ' → logprob: -13.975210189819336
    4. '1' → logprob: -14.100210189819336
    5. '32' → logprob: -15.225210189819336
    6. ' -' → logprob: -15.912710189819336
    7. '  ' → logprob: -15.975210189819336
    8. ' a' → logprob: -16.225210189819336
    9. ' EOF' → logprob: -16.225210189819336
    10. '4' → logprob: -16.225210189819336

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006742842961102724
    2. ' ' → logprob: -5.00674295425415
    3. '-' → logprob: -11.131742477416992
    4. '1' → logprob: -12.631742477416992
    5. ' -' → logprob: -12.631742477416992
    6. '42' → logprob: -13.006742477416992
    7. '4' → logprob: -14.631742477416992
    8. '   ' → logprob: -14.631742477416992
    9. '    ' → logprob: -14.756742477416992
    10. 's' → logprob: -15.256742477416992

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.5491004129871726e-05
    2. ' :' → logprob: -10.875045776367188
    3. ':
' → logprob: -11.125045776367188
    4. '   ' → logprob: -12.250045776367188
    5. '):' → logprob: -13.125045776367188
    6. '       ' → logprob: -13.375045776367188
    7. ':return' → logprob: -13.625045776367188
    8. '    ' → logprob: -14.500045776367188
    9. ':\' → logprob: -14.625045776367188
    10. '():' → logprob: -14.875045776367188

Token 16: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002529952325858176
    2. '   ' → logprob: -8.875252723693848
    3. ' break' → logprob: -10.250252723693848
    4. '```' → logprob: -10.625252723693848
    5. '    ' → logprob: -11.250252723693848
    6. '      ' → logprob: -11.625252723693848
    7. '    ' → logprob: -12.500252723693848
    8. '\n' → logprob: -12.500252723693848
    9. '     ' → logprob: -12.625252723693848
    10. '           ' → logprob: -13.000252723693848

Token 17: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.0031932818237692118
    2. '       ' → logprob: -6.628193378448486
    3. 'break' (adapté à ' break') → logprob: -7.503193378448486
    4. '\n' → logprob: -8.003192901611328
    5. ' 
' → logprob: -8.253192901611328
    6. ' \' → logprob: -8.753192901611328
    7. '    ' → logprob: -9.253192901611328
    8. '	break' → logprob: -9.503192901611328
    9. '_break' → logprob: -9.503192901611328
    10. '```' → logprob: -9.503192901611328

Token 18: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15489940345287323
    2. '\n' → logprob: -3.0298993587493896
    3. '```' → logprob: -3.4048993587493896
    4. '    
' → logprob: -3.5298993587493896
    5. '\' → logprob: -4.029899597167969
    6. ':' → logprob: -5.529899597167969
    7. '
' → logprob: -6.279899597167969
    8. '\r' → logprob: -6.654899597167969
    9. 'n' → logprob: -6.779899597167969
    10. '  
' → logprob: -7.029899597167969

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7498542666435242
    2. '\n' → logprob: -1.624854326248169
    3. '<|end|>' → logprob: -1.624854326248169
    4. '    
' → logprob: -3.249854326248169
    5. '\' → logprob: -3.874854326248169
    6. '```' → logprob: -3.999854326248169
    7. '
' → logprob: -4.12485408782959
    8. '#' → logprob: -4.24985408782959
    9. ':' → logprob: -5.12485408782959
    10. ')' → logprob: -5.87485408782959

Token 20: ' arr' (ID: 1724)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3405855596065521
    2. ' ' → logprob: -2.590585470199585
    3. '<|end|>' → logprob: -2.590585470199585
    4. '\n' → logprob: -3.590585470199585
    5. ')' → logprob: -3.840585470199585
    6. 'n' → logprob: -4.215585708618164
    7. '    ' → logprob: -4.340585708618164
    8. '\' → logprob: -4.590585708618164
    9. 'print' → logprob: -4.715585708618164
    10. ':' → logprob: -5.090585708618164

Token 21: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01467145700007677
    2. '.' → logprob: -4.764671325683594
    3. '=' → logprob: -6.264671325683594
    4. '.append' → logprob: -6.764671325683594
    5. '[]' → logprob: -7.014671325683594
    6. ' =' → logprob: -7.014671325683594
    7. '[:]' → logprob: -7.639671325683594
    8. '.setdefault' → logprob: -9.139671325683594
    9. '[n' → logprob: -9.764671325683594
    10. ')' → logprob: -9.764671325683594

Token 22: ' [' (ID: 723)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.163544699549675
    2. '[]' → logprob: -2.0385446548461914
    3. ' [' → logprob: -4.413544654846191
    4. '[' → logprob: -5.288544654846191
    5. ' list' → logprob: -5.788544654846191
    6. 'list' → logprob: -7.913544654846191
    7. '[list' → logprob: -10.788544654846191
    8. '[input' → logprob: -11.538544654846191
    9. '[n' → logprob: -11.913544654846191
    10. '[int' → logprob: -12.038544654846191

Token 23: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.16201382875442505
    2. '0' → logprob: -2.6620137691497803
    3. ' int' → logprob: -2.6620137691497803
    4. ' n' → logprob: -6.162014007568359
    5. ' ]' → logprob: -6.162014007568359
    6. 'n' → logprob: -6.412014007568359
    7. 'i' → logprob: -6.537014007568359
    8. ']' → logprob: -6.912014007568359
    9. ']int' → logprob: -7.037014007568359
    10. ' i' → logprob: -8.03701400756836

Token 24: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.11923352628946304
    2. '(' → logprob: -2.2442336082458496
    3. '(x' → logprob: -5.24423360824585
    4. '(i' → logprob: -7.24423360824585
    5. '()' → logprob: -8.869233131408691
    6. ')' → logprob: -8.994233131408691
    7. 'input' → logprob: -10.119233131408691
    8. ']' → logprob: -10.744233131408691
    9. ' (' → logprob: -11.494233131408691
    10. '(a' → logprob: -11.744233131408691

Token 25: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0011304517975077033
    2. '()' → logprob: -6.8761305809021
    3. '()]' → logprob: -9.626130104064941
    4. '()),' → logprob: -10.876130104064941
    5. '()))' → logprob: -12.376130104064941
    6. ' ())' → logprob: -12.376130104064941
    7. '(' → logprob: -13.626130104064941
    8. '());' → logprob: -14.376130104064941
    9. '())
' → logprob: -14.376130104064941
    10. ')' → logprob: -15.001130104064941

Token 26: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5493175983428955
    2. ')' → logprob: -0.9243175983428955
    3. 'for' → logprob: -4.299317359924316
    4. ' for' → logprob: -5.049317359924316
    5. ')]' → logprob: -6.674317359924316
    6. '   ' → logprob: -6.924317359924316
    7. '())' → logprob: -6.924317359924316
    8. '(' → logprob: -7.674317359924316
    9. ' ()' → logprob: -8.049317359924316
    10. ' )' → logprob: -8.049317359924316

Token 27: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.47767502069473267
    2. ' ' → logprob: -0.9776750206947327
    3. ' i' → logprob: -6.602674961090088
    4. ' _' → logprob: -7.227674961090088
    5. 'range' → logprob: -7.227674961090088
    6. '_' → logprob: -8.102675437927246
    7. '(range' → logprob: -8.852675437927246
    8. ' xrange' → logprob: -9.102675437927246
    9. '	range' → logprob: -9.227675437927246
    10. '_range' → logprob: -10.227675437927246

Token 28: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4376758933067322
    2. ' range' → logprob: -1.312675952911377
    3. 'range' → logprob: -2.812675952911377
    4. 'in' → logprob: -4.062675952911377
    5. ' ' → logprob: -4.937675952911377
    6. '  ' → logprob: -8.312675476074219
    7. ' i' → logprob: -9.187675476074219
    8. '(range' → logprob: -9.437675476074219
    9. ' ran' → logprob: -9.687675476074219
    10. ' xrange' → logprob: -9.687675476074219

Token 29: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.06197104603052139
    2. 'range' → logprob: -2.8119709491729736
    3. 'arr' → logprob: -14.311970710754395
    4. '	range' → logprob: -14.311970710754395
    5. '(range' → logprob: -14.811970710754395
    6. ' ' → logprob: -14.936970710754395
    7. 'rang' → logprob: -14.936970710754395
    8. ' arr' → logprob: -15.561970710754395
    9. ' ran' → logprob: -15.561970710754395
    10. ' rang' → logprob: -15.686970710754395

Token 30: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.02348794788122177
    2. '(' → logprob: -3.7734880447387695
    3. ' (' → logprob: -8.39848804473877
    4. ' n' → logprob: -11.14848804473877
    5. 'n' → logprob: -13.39848804473877
    6. '(
' → logprob: -14.39848804473877
    7. '(len' → logprob: -15.39848804473877
    8. '(

' → logprob: -16.023487091064453
    9. ' )' → logprob: -16.148487091064453
    10. ')' → logprob: -16.398487091064453

Token 31: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0004343645414337516
    2. ']' → logprob: -8.250433921813965
    3. ')' → logprob: -8.750433921813965
    4. ' )' → logprob: -12.500433921813965
    5. '])]' → logprob: -13.000433921813965
    6. ')])' → logprob: -13.125433921813965
    7. '))' → logprob: -13.625433921813965
    8. '   ' → logprob: -13.750433921813965
    9. ')]
' → logprob: -13.875433921813965
    10. '])' → logprob: -13.875433921813965

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8223602771759033
    2. ' ' → logprob: -1.0723602771759033
    3. '<|end|>' → logprob: -2.3223602771759033
    4. '[' → logprob: -2.9473602771759033
    5. '\' → logprob: -3.9473602771759033
    6. ' 
' → logprob: -4.697360038757324
    7. ')' → logprob: -4.822360038757324
    8. '
' → logprob: -5.072360038757324
    9. '\n' → logprob: -5.447360038757324
    10. ':' → logprob: -5.822360038757324

Token 33: ' k' (ID: 372)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5298540592193604
    2. 'arr' → logprob: -2.0298540592193604
    3. ' arr' → logprob: -2.4048540592193604
    4. '   ' → logprob: -3.1548540592193604
    5. 's' → logprob: -3.6548540592193604
    6. 'sum' → logprob: -3.6548540592193604
    7. '<|end|>' → logprob: -4.279853820800781
    8. ' if' → logprob: -4.404853820800781
    9. ' 
' → logprob: -4.404853820800781
    10. '[' → logprob: -4.654853820800781

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09725389629602432
    2. '=' → logprob: -2.9722537994384766
    3. ' ' → logprob: -3.2222537994384766
    4. 'ey' → logprob: -7.222253799438477
    5. 'eys' → logprob: -8.472253799438477
    6. '_' → logprob: -8.597253799438477
    7. '  ' → logprob: -9.097253799438477
    8. 'e' → logprob: -9.972253799438477
    9. '    ' → logprob: -10.097253799438477
    10. '[' → logprob: -10.222253799438477

Token 35: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.11469564586877823
    2. 'int' → logprob: -2.2396955490112305
    3. '0' → logprob: -7.7396955490112305
    4. ' n' → logprob: -7.7396955490112305
    5. ' arr' → logprob: -7.7396955490112305
    6. ' ' → logprob: -8.23969554901123
    7. 'arr' → logprob: -8.73969554901123
    8. 'n' → logprob: -10.11469554901123
    9. '1' → logprob: -10.61469554901123
    10. ' max' → logprob: -11.11469554901123

Token 36: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.039060045033693314
    2. '(' → logprob: -3.289060115814209
    3. '()' → logprob: -6.914060115814209
    4. ' (' → logprob: -11.53905963897705
    5. '(arr' → logprob: -12.41405963897705
    6. 'input' → logprob: -12.53905963897705
    7. ' ()' → logprob: -13.28905963897705
    8. '('' → logprob: -14.03905963897705
    9. ' input' → logprob: -14.41405963897705
    10. '(inp' → logprob: -14.66405963897705

Token 37: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5928691029548645
    2. '()' → logprob: -0.8428691029548645
    3. ')' → logprob: -4.092869281768799
    4. '(' → logprob: -9.84286880493164
    5. '()
' → logprob: -11.21786880493164
    6. ' ())' → logprob: -11.84286880493164
    7. '())
' → logprob: -12.09286880493164
    8. ' )' → logprob: -12.59286880493164
    9. '()]' → logprob: -12.71786880493164
    10. '();)' → logprob: -12.96786880493164

Token 38: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8616408109664917
    2. '   ' → logprob: -1.2366408109664917
    3. '<|end|>' → logprob: -2.3616409301757812
    4. '
' → logprob: -2.4866409301757812
    5. ' 
' → logprob: -3.2366409301757812
    6. '[' → logprob: -3.7366409301757812
    7. '    ' → logprob: -4.611640930175781
    8. '    
' → logprob: -5.236640930175781
    9. '  ' → logprob: -5.486640930175781
    10. ')' → logprob: -5.611640930175781

Token 39: ' left' (ID: 3561)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -1.042359709739685
    2. 'count' → logprob: -2.4173598289489746
    3. 'result' → logprob: -2.5423598289489746
    4. ' ' → logprob: -2.6673598289489746
    5. 's' → logprob: -2.9173598289489746
    6. 'sum' → logprob: -3.0423598289489746
    7. ' arr' → logprob: -3.2923598289489746
    8. ')' → logprob: -3.6673598289489746
    9. ' count' → logprob: -4.042359828948975
    10. 'if' → logprob: -4.167359828948975

Token 40: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8029834628105164
    2. ',' → logprob: -1.1779835224151611
    3. '=' → logprob: -1.4279835224151611
    4. ' ,' → logprob: -5.927983283996582
    5. '_' → logprob: -7.802983283996582
    6. ' ' → logprob: -8.177983283996582
    7. '<|end|>' → logprob: -8.552983283996582
    8. ')' → logprob: -8.927983283996582
    9. '_idx' → logprob: -9.052983283996582
    10. '_bound' → logprob: -9.802983283996582

Token 41: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.5759653449058533
    2. 'right' → logprob: -0.8259653449058533
    3. ',right' → logprob: -11.95096492767334
    4. ' =' → logprob: -12.32596492767334
    5. '	right' → logprob: -12.45096492767334
    6. '=' → logprob: -12.95096492767334
    7. ' ' → logprob: -13.32596492767334
    8. '[right' → logprob: -13.45096492767334
    9. '```' → logprob: -14.07596492767334
    10. 'r' → logprob: -14.32596492767334

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0009119403548538685
    2. '=' → logprob: -7.000911712646484
    3. ' ' → logprob: -15.250911712646484
    4. ',' → logprob: -16.125911712646484
    5. ' =)' → logprob: -17.000911712646484
    6. ' =
' → logprob: -17.875911712646484
    7. '<|end|>' → logprob: -18.500911712646484
    8. ')' → logprob: -18.750911712646484
    9. '  ' → logprob: -18.875911712646484
    10. ' ='' → logprob: -19.625911712646484

Token 43: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2811971604824066
    2. ' ' → logprob: -1.406197190284729
    3. '1' → logprob: -11.031197547912598
    4. 'k' → logprob: -12.281197547912598
    5. ' k' → logprob: -12.281197547912598
    6. ' n' → logprob: -12.281197547912598
    7. '[' → logprob: -12.531197547912598
    8. 'arr' → logprob: -13.156197547912598
    9. 'n' → logprob: -13.218697547912598
    10. ',' → logprob: -13.843697547912598

Token 44: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0029119811952114105
    2. ' ' → logprob: -5.8779120445251465
    3. '1' → logprob: -9.502911567687988
    4. 'k' → logprob: -12.002911567687988
    5. '[' → logprob: -12.127911567687988
    6. '   ' → logprob: -12.502911567687988
    7. '-' → logprob: -12.502911567687988
    8. 'arr' → logprob: -12.627911567687988
    9. 'len' → logprob: -13.252911567687988
    10. 'n' → logprob: -13.252911567687988

Token 45: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18775834143161774
    2. '<|end|>' → logprob: -1.8127583265304565
    3. '<|end|>' → logprob: -5.437758445739746
    4. '+' → logprob: -6.687758445739746
    5. ' +' → logprob: -7.062758445739746
    6. ' ,' → logprob: -7.187758445739746
    7. '   ' → logprob: -8.437758445739746
    8. ',
' → logprob: -8.812758445739746
    9. ' ' → logprob: -8.937758445739746
    10. ',n' → logprob: -9.062758445739746

Token 46: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3341025114059448
    2. 'n' → logprob: -1.3341025114059448
    3. 'len' → logprob: -4.459102630615234
    4. ' len' → logprob: -4.709102630615234
    5. '   ' → logprob: -11.334102630615234
    6. ' ' → logprob: -11.459102630615234
    7. '	n' → logprob: -11.709102630615234
    8. 'k' → logprob: -12.709102630615234
    9. '  ' → logprob: -13.334102630615234
    10. '	len' → logprob: -13.584102630615234

Token 47: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10285022109746933
    2. ' -' → logprob: -2.3528501987457275
    3. '<|end|>' → logprob: -5.977850437164307
    4. ' ' → logprob: -9.727849960327148
    5. '```' → logprob: -11.227849960327148
    6. '<|end|>' → logprob: -11.477849960327148
    7. '   ' → logprob: -11.977849960327148
    8. '1' → logprob: -12.352849960327148
    9. ')' → logprob: -12.727849960327148
    10. '
' → logprob: -12.852849960327148

Token 48: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009756204672157764
    2. ' ' → logprob: -4.634756088256836
    3. '  ' → logprob: -15.884756088256836
    4. '<|end|>' → logprob: -16.634756088256836
    5. '```' → logprob: -17.259756088256836
    6. ' ' → logprob: -17.259756088256836
    7. '   ' → logprob: -18.134756088256836
    8. '۱' → logprob: -19.259756088256836
    9. '-' → logprob: -19.384756088256836
    10. '１' → logprob: -19.509756088256836

Token 49: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '```' → logprob: -17.750017166137695
    4. '<|end|>' → logprob: -17.750017166137695
    5. '2' → logprob: -18.500017166137695
    6. '  ' → logprob: -19.312517166137695
    7. '   ' → logprob: -19.437517166137695
    8. '۱' → logprob: -19.750017166137695
    9. '１' → logprob: -20.000017166137695
    10. ')' → logprob: -20.187517166137695

Token 50: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.953355073928833
    2. '
' → logprob: -1.203355073928833
    3. '    
' → logprob: -2.328355073928833
    4. ' 
' → logprob: -2.703355073928833
    5. '  
' → logprob: -3.328355073928833
    6. ' ' → logprob: -3.578355073928833
    7. '\n' → logprob: -3.703355073928833
    8. '<|end|>' → logprob: -3.828355073928833
    9. '   
' → logprob: -4.203354835510254
    10. '  ' → logprob: -4.828354835510254

Token 51: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8874068260192871
    2. ' ' → logprob: -1.387406826019287
    3. '
' → logprob: -2.012406826019287
    4. ' 
' → logprob: -2.637406826019287
    5. '    
' → logprob: -3.137406826019287
    6. '<|end|>' → logprob: -3.262406826019287
    7. '  
' → logprob: -4.137406826019287
    8. '  ' → logprob: -5.012406826019287
    9. '\n' → logprob: -5.137406826019287
    10. '   
' → logprob: -5.262406826019287

Token 52: ' count' (ID: 3605)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.1039470434188843
    2. ' ' → logprob: -1.3539470434188843
    3. '   ' → logprob: -1.3539470434188843
    4. ' while' → logprob: -2.228947162628174
    5. '```' → logprob: -4.978947162628174
    6. '    ' → logprob: -5.103947162628174
    7. ' 
' → logprob: -5.228947162628174
    8. 'mid' → logprob: -5.228947162628174
    9. '  ' → logprob: -5.603947162628174
    10. '<|end|>' → logprob: -6.103947162628174

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17320480942726135
    2. ' +=' → logprob: -2.5482048988342285
    3. ' ' → logprob: -2.7982048988342285
    4. '=' → logprob: -4.2982048988342285
    5. '<|end|>' → logprob: -6.4232048988342285
    6. '  ' → logprob: -6.5482048988342285
    7. '[' → logprob: -7.1732048988342285
    8. ' >' → logprob: -7.4232048988342285
    9. ' ==' → logprob: -8.17320442199707
    10. ' >=' → logprob: -8.17320442199707

Token 54: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20142406225204468
    2. '0' → logprob: -1.7014241218566895
    3. '1' → logprob: -11.701423645019531
    4. ' ' → logprob: -14.513923645019531
    5. '<|end|>' → logprob: -15.451423645019531
    6. ' k' → logprob: -15.638923645019531
    7. '    ' → logprob: -15.638923645019531
    8. ' `' → logprob: -16.01392364501953
    9. ' "' → logprob: -16.07642364501953
    10. '  ' → logprob: -16.45142364501953

Token 55: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008246336947195232
    2. ' ' → logprob: -7.125824451446533
    3. '1' → logprob: -11.250824928283691
    4. '{}' → logprob: -13.500824928283691
    5. '   ' → logprob: -13.625824928283691
    6. 'k' → logprob: -13.875824928283691
    7. '{' → logprob: -14.125824928283691
    8. 'arr' → logprob: -14.875824928283691
    9. 'abs' → logprob: -14.875824928283691
    10. '[' → logprob: -14.875824928283691

Token 56: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6987400650978088
    2. '<|end|>' → logprob: -1.698740005493164
    3. ' ' → logprob: -1.823740005493164
    4. '
' → logprob: -2.948740005493164
    5. ':' → logprob: -3.698740005493164
    6. '  ' → logprob: -4.198740005493164
    7. ' 
' → logprob: -4.323740005493164
    8. '    
' → logprob: -4.448740005493164
    9. '  
' → logprob: -4.698740005493164
    10. '   
' → logprob: -4.698740005493164

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1907968521118164
    2. ' ' → logprob: -1.3157968521118164
    3. ' 
' → logprob: -1.5657968521118164
    4. '<|end|>' → logprob: -2.3157968521118164
    5. '  
' → logprob: -3.5657968521118164
    6. ':' → logprob: -3.8157968521118164
    7. '
' → logprob: -4.315796852111816
    8. '    
' → logprob: -4.315796852111816
    9. '   
' → logprob: -4.565796852111816
    10. '\n' → logprob: -5.065796852111816

Token 58: ' while' (ID: 2049)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1170562207698822
    2. '<|end|>' → logprob: -3.242056131362915
    3. '   ' → logprob: -4.117056369781494
    4. ':' → logprob: -4.117056369781494
    5. ' 
' → logprob: -4.742056369781494
    6. '  ' → logprob: -5.117056369781494
    7. '\n' → logprob: -5.367056369781494
    8. '\' → logprob: -5.742056369781494
    9. '  
' → logprob: -6.117056369781494
    10. '```' → logprob: -6.242056369781494

Token 59: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.0013230959884822369
    2. ' ' → logprob: -7.376323223114014
    3. 'left' → logprob: -7.876323223114014
    4. ' count' → logprob: -8.626322746276855
    5. ' lef' → logprob: -9.251322746276855
    6. ' right' → logprob: -10.876322746276855
    7. ' not' → logprob: -11.376322746276855
    8. '	left' → logprob: -12.876322746276855
    9. ' ' → logprob: -13.376322746276855
    10. 'count' → logprob: -13.751322746276855

Token 60: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.6346510648727417
    2. ' <' → logprob: -0.7596510648727417
    3. ' ' → logprob: -6.509651184082031
    4. '<=' → logprob: -8.134651184082031
    5. '<' → logprob: -8.259651184082031
    6. ' ≤' → logprob: -12.509651184082031
    7. ' !=' → logprob: -13.509651184082031
    8. '  ' → logprob: -13.509651184082031
    9. ' <",' → logprob: -14.634651184082031
    10. '<|end|>' → logprob: -14.634651184082031

Token 61: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.31327328085899353
    2. ' right' → logprob: -1.313273310661316
    3. ' ' → logprob: -11.813273429870605
    4. '	right' → logprob: -12.938273429870605
    5. 'r' → logprob: -13.938273429870605
    6. 'rig' → logprob: -14.938273429870605
    7. 'ight' → logprob: -15.938273429870605
    8. '[right' → logprob: -16.06327247619629
    9. ' r' → logprob: -16.68827247619629
    10. ' rig' → logprob: -16.93827247619629

Token 62: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001488792710006237
    2. ':
' → logprob: -7.37648868560791
    3. ' and' → logprob: -7.50148868560791
    4. ' :' → logprob: -8.62648868560791
    5. '   ' → logprob: -9.62648868560791
    6. '<|end|>' → logprob: -10.37648868560791
    7. '       ' → logprob: -11.75148868560791
    8. '):' → logprob: -12.00148868560791
    9. 'and' → logprob: -12.37648868560791
    10. '<|end|>' → logprob: -12.87648868560791

Token 63: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13331279158592224
    2. '   ' → logprob: -3.008312702178955
    3. '<|end|>' → logprob: -3.633312702178955
    4. ':' → logprob: -4.008312702178955
    5. '    ' → logprob: -4.258312702178955
    6. ' ' → logprob: -4.758312702178955
    7. '<|end|>' → logprob: -7.008312702178955
    8. ':
' → logprob: -7.008312702178955
    9. '+' → logprob: -7.258312702178955
    10. '  ' → logprob: -7.383312702178955

Token 64: ' mid' (ID: 6959)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.029832124710083
    2. '   ' → logprob: -1.404832124710083
    3. ' if' → logprob: -2.029832124710083
    4. ' ' → logprob: -2.154832124710083
    5. '    ' → logprob: -2.529832124710083
    6. 'if' → logprob: -4.279831886291504
    7. ' mid' → logprob: -4.404831886291504
    8. '```' → logprob: -5.154831886291504
    9. '+' → logprob: -5.279831886291504
    10. ' sum' → logprob: -5.404831886291504

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.019987229257822037
    2. '=' → logprob: -4.144987106323242
    3. ' ' → logprob: -6.269987106323242
    4. '<|end|>' → logprob: -6.269987106323242
    5. ')' → logprob: -9.144987106323242
    6. '<|end|>' → logprob: -10.769987106323242
    7. ' =
' → logprob: -11.894987106323242
    8. ',' → logprob: -12.394987106323242
    9. '```' → logprob: -12.769987106323242
    10. '=int' → logprob: -13.269987106323242

Token 66: ' (' (ID: 350)
  Prédit: '(left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.07903333008289337
    2. ' (' → logprob: -2.579033374786377
    3. 'left' → logprob: -9.079032897949219
    4. ' left' → logprob: -11.079032897949219
    5. '[left' → logprob: -11.829032897949219
    6. '(' → logprob: -12.329032897949219
    7. ' ' → logprob: -13.704032897949219
    8. '(right' → logprob: -14.579032897949219
    9. ',left' → logprob: -15.579032897949219
    10. '(low' → logprob: -15.829032897949219

Token 67: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.002485288307070732
    2. ' left' → logprob: -6.002485275268555
    3. 'right' → logprob: -11.627485275268555
    4. ' lef' → logprob: -15.127485275268555
    5. 'lef' → logprob: -15.377485275268555
    6. '	left' → logprob: -16.377485275268555
    7. ' ' → logprob: -16.502485275268555
    8. ' right' → logprob: -18.252485275268555
    9. '(left' → logprob: -18.252485275268555
    10. 'l' → logprob: -18.377485275268555

Token 68: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.08894165605306625
    2. '+' → logprob: -2.4639415740966797
    3. ')' → logprob: -14.33894157409668
    4. '<|end|>' → logprob: -14.33894157409668
    5. ' ' → logprob: -14.46394157409668
    6. ' plus' → logprob: -16.21394157409668
    7. ' ' → logprob: -16.33894157409668
    8. '>' → logprob: -17.08894157409668
    9. ' +
' → logprob: -17.33894157409668
    10. '+k' → logprob: -17.33894157409668

Token 69: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.5759454965591431
    2. ' right' → logprob: -0.8259454965591431
    3. ' ' → logprob: -12.700945854187012
    4. '	right' → logprob: -13.075945854187012
    5. '   ' → logprob: -15.325945854187012
    6. ')' → logprob: -15.450945854187012
    7. '[right' → logprob: -15.450945854187012
    8. '_right' → logprob: -16.700944900512695
    9. '
' → logprob: -17.200944900512695
    10. 'Right' → logprob: -17.200944900512695

Token 70: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002666999935172498
    2. ')//' → logprob: -8.250267028808594
    3. ' )' → logprob: -12.125267028808594
    4. ')>>' → logprob: -17.250267028808594
    5. '）' → logprob: -19.375267028808594
    6. ')
' → logprob: -19.500267028808594
    7. ']' → logprob: -20.500267028808594
    8. ' //' → logprob: -21.250267028808594
    9. '//' → logprob: -21.625267028808594
    10. ' ' → logprob: -22.000267028808594

Token 71: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.25787192583084106
    2. ')' → logprob: -1.5078718662261963
    3. ' )' → logprob: -5.382872104644775
    4. ')//' → logprob: -7.257872104644775
    5. '//' → logprob: -8.007871627807617
    6. ' ' → logprob: -9.007871627807617
    7. '```' → logprob: -9.507871627807617
    8. '   ' → logprob: -10.632871627807617
    9. ' >>' → logprob: -10.757871627807617
    10. '2' → logprob: -11.632871627807617

Token 72: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.012509997934103012
    2. ' ' → logprob: -4.387509822845459
    3. '```' → logprob: -15.512510299682617
    4. '   ' → logprob: -16.387510299682617
    5. '  ' → logprob: -16.637510299682617
    6. '۲' → logprob: -17.012510299682617
    7. '<|end|>' → logprob: -17.137510299682617
    8. ')' → logprob: -18.450010299682617
    9. '२' → logprob: -18.637510299682617
    10. '<|end|>' → logprob: -19.075010299682617

Token 73: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '۲' → logprob: -20.625
    4. '```' → logprob: -21.25
    5. '２' → logprob: -22.25
    6. '   ' → logprob: -22.25
    7. '२' → logprob: -22.75
    8. '  ' → logprob: -23.375
    9. '٢' → logprob: -23.375
    10. '২' → logprob: -24.0

Token 74: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 75: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4219234585762024
    2. '<|end|>' → logprob: -1.1719233989715576
    3. ' ' → logprob: -4.421923637390137
    4. '   ' → logprob: -4.546923637390137
    5. '<|end|>' → logprob: -5.171923637390137
    6. ' if' → logprob: -6.171923637390137
    7. '
' → logprob: -7.296923637390137
    8. '    ' → logprob: -7.421923637390137
    9. '```' → logprob: -7.546923637390137
    10. 'if' → logprob: -7.671923637390137

Token 76: ' count' (ID: 3605)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4652770161628723
    2. 'if' → logprob: -1.3402769565582275
    3. '       ' → logprob: -2.2152769565582275
    4. '   ' → logprob: -6.965277194976807
    5. '```' → logprob: -9.840276718139648
    6. '	if' → logprob: -10.215276718139648
    7. ' ' → logprob: -10.340276718139648
    8. '    ' → logprob: -11.090276718139648
    9. '        ' → logprob: -11.840276718139648
    10. '           ' → logprob: -12.215276718139648

Token 77: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0026332074776291847
    2. '+=' → logprob: -6.127633094787598
    3. ' ==' → logprob: -8.877633094787598
    4. ' +' → logprob: -9.002633094787598
    5. '+' → logprob: -9.502633094787598
    6. ' ' → logprob: -9.752633094787598
    7. ' <=' → logprob: -11.127633094787598
    8. '   ' → logprob: -11.752633094787598
    9. ' <' → logprob: -11.877633094787598
    10. '  ' → logprob: -12.127633094787598

Token 78: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0038769119419157505
    2. ' ' → logprob: -5.628876686096191
    3. 'arr' → logprob: -8.253876686096191
    4. 'abs' → logprob: -11.503876686096191
    5. ' arr' → logprob: -13.378876686096191
    6. ' abs' → logprob: -13.628876686096191
    7. '   ' → logprob: -13.753876686096191
    8. '(arr' → logprob: -14.253876686096191
    9. '[arr' → logprob: -14.628876686096191
    10. '+' → logprob: -15.691376686096191

Token 79: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010370950913056731
    2. 'arr' → logprob: -7.251037120819092
    3. ' ' → logprob: -8.251036643981934
    4. 'abs' → logprob: -9.751036643981934
    5. '(arr' → logprob: -12.376036643981934
    6. '[arr' → logprob: -14.251036643981934
    7. '   ' → logprob: -14.501036643981934
    8. 'mid' → logprob: -14.876036643981934
    9. '(' → logprob: -14.876036643981934
    10. ' abs' → logprob: -15.063536643981934

Token 80: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11872140318155289
    2. ' if' → logprob: -3.2437214851379395
    3. '       ' → logprob: -3.3687214851379395
    4. ' ' → logprob: -3.9937214851379395
    5. '<|end|>' → logprob: -4.3687214851379395
    6. 'if' → logprob: -5.8687214851379395
    7. '
' → logprob: -6.7437214851379395
    8. '  ' → logprob: -6.7437214851379395
    9. ' 
' → logprob: -7.2437214851379395
    10. '    
' → logprob: -7.8687214851379395

Token 82: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0053306398913264275
    2. ' if' → logprob: -5.255330562591553
    3. '       ' → logprob: -9.880331039428711
    4. '   ' → logprob: -10.255331039428711
    5. '```' → logprob: -12.255331039428711
    6. ' ' → logprob: -13.505331039428711
    7. 'value' → logprob: -14.005331039428711
    8. '	if' → logprob: -14.130331039428711
    9. 'print' → logprob: -14.255331039428711
    10. 'val' → logprob: -14.505331039428711

Token 83: ' arr' (ID: 1724)
  Prédit: ' arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.06766211986541748
    2. 'arr' → logprob: -2.817662239074707
    3. ' k' → logprob: -5.817662239074707
    4. 'k' → logprob: -5.942662239074707
    5. '	arr' → logprob: -9.942662239074707
    6. ' ' → logprob: -11.442662239074707
    7. '(arr' → logprob: -11.942662239074707
    8. '[arr' → logprob: -12.817662239074707
    9. ' ' → logprob: -13.067662239074707
    10. '<arr' → logprob: -13.567662239074707

Token 84: '[mid' (ID: 82578)
  Prédit: '[mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[mid' → logprob: -7.195421494543552e-05
    2. '[' → logprob: -9.62507152557373
    3. '[m' → logprob: -12.12507152557373
    4. '[left' → logprob: -15.37507152557373
    5. ' [' → logprob: -16.250072479248047
    6. '[max' → logprob: -17.125072479248047
    7. '[
' → logprob: -17.250072479248047
    8. 'mid' → logprob: -17.375072479248047
    9. '[min' → logprob: -18.125072479248047
    10. '[mem' → logprob: -18.125072479248047

Token 85: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.024365432560443878
    2. '==' → logprob: -3.8993654251098633
    3. ' <' → logprob: -5.649365425109863
    4. ' ' → logprob: -8.774365425109863
    5. ')' → logprob: -10.274365425109863
    6. ' >=' → logprob: -10.649365425109863
    7. ' >' → logprob: -10.774365425109863
    8. '<' → logprob: -10.899365425109863
    9. '>' → logprob: -11.649365425109863
    10. '=' → logprob: -12.024365425109863

Token 86: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.15748092532157898
    2. '==' → logprob: -2.0324809551239014
    3. ' <' → logprob: -4.282480716705322
    4. '<' → logprob: -7.532480716705322
    5. ' >=' → logprob: -8.53248119354248
    6. '>=' → logprob: -10.28248119354248
    7. ' ' → logprob: -10.53248119354248
    8. ' <=' → logprob: -10.65748119354248
    9. ' >' → logprob: -11.03248119354248
    10. '=' → logprob: -11.03248119354248

Token 87: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.01251376885920763
    2. 'k' → logprob: -4.387513637542725
    3. '	k' → logprob: -12.637514114379883
    4. ' ' → logprob: -15.137514114379883
    5. '<|end|>' → logprob: -15.762514114379883
    6. ' к' → logprob: -16.137514114379883
    7. '    ' → logprob: -16.262514114379883
    8. '=k' → logprob: -16.512514114379883
    9. ' ' → logprob: -16.512514114379883
    10. ' `' → logprob: -17.762514114379883

Token 88: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000321995816193521
    2. ':
' → logprob: -8.125322341918945
    3. ' :' → logprob: -11.500322341918945
    4. '<|end|>' → logprob: -11.875322341918945
    5. ':return' → logprob: -12.750322341918945
    6. '):' → logprob: -13.500322341918945
    7. '       ' → logprob: -14.000322341918945
    8. ' and' → logprob: -14.375322341918945
    9. '.' → logprob: -14.375322341918945
    10. '   ' → logprob: -14.875322341918945

Token 89: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2040320634841919
    2. '           ' → logprob: -2.2040319442749023
    3. '       ' → logprob: -2.8290319442749023
    4. ':
' → logprob: -5.329031944274902
    5. 'break' → logprob: -6.079031944274902
    6. ' break' → logprob: -6.329031944274902
    7. '   ' → logprob: -6.454031944274902
    8. '.' → logprob: -6.454031944274902
    9. ' :' → logprob: -7.829031944274902
    10. ' left' → logprob: -8.079031944274902

Token 90: ' break' (ID: 2338)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.15428975224494934
    2. ' print' → logprob: -2.154289722442627
    3. ' break' → logprob: -4.154289722442627
    4. 'break' (adapté à ' break') → logprob: -4.654289722442627
    5. '       ' → logprob: -7.154289722442627
    6. '           ' → logprob: -7.529289722442627
    7. '        ' → logprob: -8.529290199279785
    8. '   ' → logprob: -9.154290199279785
    9. '    ' → logprob: -9.779290199279785
    10. '```' → logprob: -10.279290199279785

Token 91: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1903846263885498
    2. '<|end|>' → logprob: -2.44038462638855
    3. '
' → logprob: -3.56538462638855
    4. ' elif' → logprob: -3.94038462638855
    5. '   ' → logprob: -4.190384864807129
    6. 'elif' → logprob: -4.315384864807129
    7. '    
' → logprob: -5.690384864807129
    8. '  
' → logprob: -6.690384864807129
    9. '        
' → logprob: -6.690384864807129
    10. ' 
' → logprob: -7.065384864807129

Token 92: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17692281305789948
    2. '<|end|>' → logprob: -2.4269227981567383
    3. '   ' → logprob: -3.3019227981567383
    4. 'elif' → logprob: -4.176922798156738
    5. ' elif' → logprob: -4.301922798156738
    6. ' ' → logprob: -5.676922798156738
    7. '    ' → logprob: -6.426922798156738
    8. '  ' → logprob: -7.301922798156738
    9. ' else' → logprob: -7.676922798156738
    10. '<|end|>' → logprob: -8.051922798156738

Token 93: ' elif' (ID: 9497)
  Prédit: ' elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.4116494357585907
    2. 'elif' (adapté à ' elif') → logprob: -1.161649465560913
    3. '       ' → logprob: -3.786649465560913
    4. '<|end|>' → logprob: -7.661649227142334
    5. ' ' → logprob: -7.911649227142334
    6. '   ' → logprob: -8.036649703979492
    7. '	elif' → logprob: -8.411649703979492
    8. '    ' → logprob: -8.536649703979492
    9. 'if' → logprob: -9.786649703979492
    10. ' if' → logprob: -9.911649703979492

Token 94: ' arr' (ID: 1724)
  Prédit: ' arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.02743956260383129
    2. 'arr' → logprob: -3.652439594268799
    3. ' k' → logprob: -7.277439594268799
    4. 'k' → logprob: -8.27743911743164
    5. ' ' → logprob: -8.65243911743164
    6. ' ' → logprob: -11.40243911743164
    7. '	arr' → logprob: -12.52743911743164
    8. '<arr' → logprob: -14.02743911743164
    9. '[arr' → logprob: -14.27743911743164
    10. '  ' → logprob: -14.27743911743164

Token 95: '[mid' (ID: 82578)
  Prédit: '[mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[mid' → logprob: -0.0005580356228165329
    2. '[' → logprob: -7.500557899475098
    3. '[m' → logprob: -12.875557899475098
    4. '[left' → logprob: -13.375557899475098
    5. ' [' → logprob: -14.625557899475098
    6. '[mem' → logprob: -16.125558853149414
    7. '[
' → logprob: -16.250558853149414
    8. ' <' → logprob: -16.375558853149414
    9. '[right' → logprob: -17.000558853149414
    10. '[:' → logprob: -17.000558853149414

Token 96: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.006865390110760927
    2. ' >' → logprob: -5.381865501403809
    3. '<' → logprob: -6.256865501403809
    4. '>' → logprob: -8.756865501403809
    5. ' ' → logprob: -8.756865501403809
    6. ')' → logprob: -12.006865501403809
    7. ']' → logprob: -13.506865501403809
    8. ' ' → logprob: -14.631865501403809
    9. '<n' → logprob: -15.006865501403809
    10. ' )' → logprob: -15.131865501403809

Token 97: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.00480521097779274
    2. '<' → logprob: -6.004805088043213
    3. ' >' → logprob: -6.129805088043213
    4. '>' → logprob: -9.379805564880371
    5. ' ' → logprob: -9.754805564880371
    6. ' ' → logprob: -13.129805564880371
    7. '<|end|>' → logprob: -13.379805564880371
    8. '<int' → logprob: -14.379805564880371
    9. ' \<' → logprob: -15.254805564880371
    10. '[' → logprob: -15.254805564880371

Token 98: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.003177952254191041
    2. 'k' → logprob: -5.753178119659424
    3. '	k' → logprob: -15.753177642822266
    4. ' ' → logprob: -16.753177642822266
    5. ' к' → logprob: -17.503177642822266
    6. ' ' → logprob: -18.128177642822266
    7. '=k' → logprob: -19.378177642822266
    8. '<|end|>' → logprob: -20.503177642822266
    9. '    ' → logprob: -21.128177642822266
    10. ' क' → logprob: -21.128177642822266

Token 99: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020648043602705002
    2. ':
' → logprob: -3.8956480026245117
    3. '       ' → logprob: -9.395648002624512
    4. ':right' → logprob: -11.895648002624512
    5. ':left' → logprob: -12.270648002624512
    6. '   ' → logprob: -13.270648002624512
    7. ':

' → logprob: -13.270648002624512
    8. '<|end|>' → logprob: -13.395648002624512
    9. '           ' → logprob: -13.770648002624512
    10. ' :' → logprob: -13.895648002624512

Token 100: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2488776594400406
    2. '
' → logprob: -2.373877763748169
    3. 'right' → logprob: -3.248877763748169
    4. '           ' → logprob: -3.373877763748169
    5. ' right' → logprob: -3.373877763748169
    6. ' 
' → logprob: -5.12387752532959
    7. '<|end|>' → logprob: -5.49887752532959
    8. ' left' → logprob: -6.37387752532959
    9. '   ' → logprob: -6.49887752532959
    10. '        
' → logprob: -6.74887752532959

Token 101: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.023509841412305832
    2. 'left' (adapté à ' left') → logprob: -3.7735097408294678
    3. '	left' → logprob: -9.273509979248047
    4. ' lef' → logprob: -9.648509979248047
    5. ' right' → logprob: -9.898509979248047
    6. '[left' → logprob: -11.273509979248047
    7. '           ' → logprob: -11.398509979248047
    8. ' 
' → logprob: -11.523509979248047
    9. 'right' → logprob: -11.523509979248047
    10. '_left' → logprob: -13.148509979248047

Token 102: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0005537479883059859
    2. '=' → logprob: -7.500553607940674
    3. ' +=' → logprob: -14.125554084777832
    4. ' ' → logprob: -17.250553131103516
    5. '<|end|>' → logprob: -18.500553131103516
    6. ')' → logprob: -19.750553131103516
    7. ' =
' → logprob: -19.875553131103516
    8. '+=' → logprob: -20.375553131103516
    9. '    ' → logprob: -20.500553131103516
    10. '＝' → logprob: -20.875553131103516

Token 103: ' mid' (ID: 6959)
  Prédit: ' mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.003178901970386505
    2. 'mid' → logprob: -5.75317907333374
    3. '[mid' → logprob: -14.503178596496582
    4. '(mid' → logprob: -14.628178596496582
    5. ' midpoint' → logprob: -16.2531795501709
    6. '_mid' → logprob: -16.3781795501709
    7. ' mids' → logprob: -17.0031795501709
    8. ' ' → logprob: -18.1281795501709
    9. '.mid' → logprob: -18.2531795501709
    10. 'Mid' → logprob: -18.8781795501709

Token 104: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2519305646419525
    2. '+' → logprob: -1.501930594444275
    3. ' plus' → logprob: -14.001930236816406
    4. ' ' → logprob: -14.501930236816406
    5. '＋' → logprob: -17.501930236816406
    6. 'plus' → logprob: -17.751930236816406
    7. '1' → logprob: -17.876930236816406
    8. 's' → logprob: -19.376930236816406
    9. '<|end|>' → logprob: -19.626930236816406
    10. '```' → logprob: -19.751930236816406

Token 105: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007102862582542002
    2. ' ' → logprob: -7.250710487365723
    3. '<|end|>' → logprob: -15.125710487365723
    4. '```' → logprob: -16.125709533691406
    5. '   ' → logprob: -17.875709533691406
    6. '0' → logprob: -19.250709533691406
    7. '<|end|>' → logprob: -19.750709533691406
    8. '  ' → logprob: -20.125709533691406
    9. '       ' → logprob: -20.375709533691406
    10. '۱' → logprob: -21.188209533691406

Token 106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '```' → logprob: -17.37502098083496
    4. '   ' → logprob: -19.62502098083496
    5. '0' → logprob: -19.75002098083496
    6. '  ' → logprob: -20.50002098083496
    7. '<|end|>' → logprob: -21.06252098083496
    8. '۱' → logprob: -21.62502098083496
    9. '１' → logprob: -21.62502098083496
    10. '2' → logprob: -21.68752098083496

Token 107: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008586675859987736
    2. 'else' → logprob: -5.133586883544922
    3. ' else' → logprob: -6.008586883544922
    4. '
' → logprob: -9.383586883544922
    5. '<|end|>' → logprob: -9.383586883544922
    6. 'elif' → logprob: -11.383586883544922
    7. '	else' → logprob: -12.258586883544922
    8. '```' → logprob: -12.508586883544922
    9. '   ' → logprob: -13.008586883544922
    10. '        
' → logprob: -13.383586883544922

Token 108: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011925315484404564
    2. 'else' → logprob: -5.011925220489502
    3. ' else' → logprob: -5.261925220489502
    4. 'elif' → logprob: -12.01192569732666
    5. '<|end|>' → logprob: -13.51192569732666
    6. '	else' → logprob: -14.01192569732666
    7. '   ' → logprob: -14.26192569732666
    8. ' elif' → logprob: -14.51192569732666
    9. '```' → logprob: -14.51192569732666
    10. '
' → logprob: -14.51192569732666

Token 109: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.3137834966182709
    2. '       ' → logprob: -1.5637835264205933
    3. ' else' → logprob: -2.8137834072113037
    4. '	else' → logprob: -13.688783645629883
    5. 'right' → logprob: -14.313783645629883
    6. 'elif' → logprob: -14.563783645629883
    7. '   ' → logprob: -15.438783645629883
    8. '```' → logprob: -16.563783645629883
    9. '	' → logprob: -16.813783645629883
    10. '_else' → logprob: -17.688783645629883

Token 110: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09036289900541306
    2. ':
' → logprob: -3.090362787246704
    3. ':' → logprob: -3.215362787246704
    4. 'right' → logprob: -7.715363025665283
    5. ' right' → logprob: -8.840362548828125
    6. '       ' → logprob: -9.340362548828125
    7. '   ' → logprob: -10.590362548828125
    8. ':right' → logprob: -10.840362548828125
    9. '               ' → logprob: -11.590362548828125
    10. '	right' → logprob: -12.090362548828125

Token 111: '           ' (ID: 352)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.44723618030548096
    2. '           ' → logprob: -1.197236180305481
    3. 'right' → logprob: -2.9472360610961914
    4. '       ' → logprob: -5.322236061096191
    5. '   ' → logprob: -6.822236061096191
    6. '	right' → logprob: -9.572236061096191
    7. ' ' → logprob: -10.947236061096191
    8. '               ' → logprob: -11.697236061096191
    9. '
' → logprob: -12.322236061096191
    10. '    ' → logprob: -12.697236061096191

Token 112: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.47409987449645996
    2. 'right' (adapté à ' right') → logprob: -0.97409987449646
    3. '           ' → logprob: -11.224100112915039
    4. '	right' → logprob: -11.974100112915039
    5. '.right' → logprob: -14.474100112915039
    6. '[right' → logprob: -14.474100112915039
    7. '               ' → logprob: -14.599100112915039
    8. '   ' → logprob: -14.599100112915039
    9. 'Right' → logprob: -15.099100112915039
    10. '
' → logprob: -15.224100112915039

Token 113: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005233763717114925
    2. '=' → logprob: -5.2552337646484375
    3. ' ' → logprob: -19.005233764648438
    4. '   ' → logprob: -20.755233764648438
    5. ' =
' → logprob: -21.380233764648438
    6. '＝' → logprob: -21.380233764648438
    7. '<|end|>' → logprob: -21.380233764648438
    8. '    ' → logprob: -21.880233764648438
    9. ' -=' → logprob: -21.880233764648438
    10. ')' → logprob: -22.255233764648438

Token 114: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.20141500234603882
    2. ' mid' → logprob: -1.7014150619506836
    3. '[mid' → logprob: -13.951415061950684
    4. '(mid' → logprob: -15.326415061950684
    5. '_mid' → logprob: -15.451415061950684
    6. '   ' → logprob: -16.451414108276367
    7. ' ' → logprob: -16.451414108276367
    8. '.mid' → logprob: -16.576414108276367
    9. ' midpoint' → logprob: -17.076414108276367
    10. 'middle' → logprob: -17.826414108276367

Token 115: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2501957416534424
    2. ' -' → logprob: -1.8751957416534424
    3. 'mid' → logprob: -2.7501957416534424
    4. ' mid' → logprob: -5.750195503234863
    5. '[mid' → logprob: -7.875195503234863
    6. ' ' → logprob: -8.375195503234863
    7. '-mid' → logprob: -9.250195503234863
    8. 'id' → logprob: -9.750195503234863
    9. ' =' → logprob: -10.250195503234863
    10. '   ' → logprob: -10.250195503234863

Token 116: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003361774142831564
    2. ' ' → logprob: -8.000336647033691
    3. '<|end|>' → logprob: -14.875336647033691
    4. '```' → logprob: -15.125336647033691
    5. '   ' → logprob: -16.375335693359375
    6. '0' → logprob: -18.250335693359375
    7. '       ' → logprob: -18.500335693359375
    8. '`' → logprob: -18.625335693359375
    9. '  ' → logprob: -18.875335693359375
    10. '>' → logprob: -19.437835693359375

Token 117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.250004768371582
    3. '```' → logprob: -16.0000057220459
    4. '<|end|>' → logprob: -17.3750057220459
    5. '   ' → logprob: -19.0000057220459
    6. '`' → logprob: -20.2500057220459
    7. '  ' → logprob: -20.2500057220459
    8. '۱' → logprob: -20.5625057220459
    9. '=' → logprob: -20.6875057220459
    10. '``' → logprob: -20.6875057220459

Token 118: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48758891224861145
    2. 'print' → logprob: -1.487588882446289
    3. '<|end|>' → logprob: -2.112588882446289
    4. '
' → logprob: -3.487588882446289
    5. '```' → logprob: -5.737588882446289
    6. 'else' → logprob: -6.362588882446289
    7. ')' → logprob: -6.987588882446289
    8. 'if' → logprob: -7.737588882446289
    9. ' print' → logprob: -7.737588882446289
    10. '    
' → logprob: -7.862588882446289

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5064975023269653
    2. 'print' → logprob: -1.0064975023269653
    3. 'else' → logprob: -3.756497383117676
    4. ')' → logprob: -6.006497383117676
    5. '<|end|>' → logprob: -6.506497383117676
    6. 'if' → logprob: -6.631497383117676
    7. '```' → logprob: -6.756497383117676
    8. ' else' → logprob: -7.381497383117676
    9. ' print' → logprob: -7.506497383117676
    10. '#' → logprob: -7.881497383117676

Token 120: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0013917810283601284
    2. '   ' → logprob: -6.626391887664795
    3. 'if' → logprob: -10.376391410827637
    4. 'else' → logprob: -11.126391410827637
    5. '```' → logprob: -11.501391410827637
    6. ' print' → logprob: -11.626391410827637
    7. '    
' → logprob: -15.251391410827637
    8. '
' → logprob: -15.626391410827637
    9. '``' → logprob: -16.376392364501953
    10. '<|end|>' → logprob: -16.626392364501953

Token 121: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.002451638225466013
    2. '(' → logprob: -6.252451419830322
    3. '(f' → logprob: -7.877451419830322
    4. '("' → logprob: -9.87745189666748
    5. '(arr' → logprob: -11.00245189666748
    6. '('' → logprob: -11.12745189666748
    7. '((' → logprob: -11.25245189666748
    8. '(max' → logprob: -11.75245189666748
    9. '(c' → logprob: -11.75245189666748
    10. '(cnt' → logprob: -11.87745189666748

Token 122: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ' )' → logprob: -14.500000953674316
    3. ')`' → logprob: -14.750000953674316
    4. '))' → logprob: -15.375000953674316
    5. '`)' → logprob: -15.625000953674316
    6. ')
' → logprob: -16.750001907348633
    7. '*' → logprob: -17.875001907348633
    8. '')' → logprob: -17.875001907348633
    9. ')}' → logprob: -18.000001907348633
    10. '**' → logprob: -18.000001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 120
Tokens correctement prédits (1ère position, stricte): 64
Tokens correctement prédits (1ère position, avec adaptation): 67
Tokens correctement prédits (top 10): 109
Précision stricte (1ère position): 53.33%
Précision adaptée (1ère position): 55.83%
Précision (top 10): 90.83%
================================================================================
