================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Solution Python complète pour vérifier le théorème de Chebyshev
# Le programme lit des entiers n jusqu'à ce qu'il rencontre un zéro,
# puis pour chaque n, il compte le nombre de nombres premiers p
# tels que n < p <= 2n, et affiche ce nombre.

import sys

def sieve(max_limit):
    """
    Génère une liste de booléens indiquant si un nombre est premier jusqu'à max_limit inclus.
    Utilise le crible d'Ératosthène pour une efficacité optimale.
    """
    sieve = [True] * (max_limit + 1)
    sieve[0] = False
    sieve[1] = False
    for i in range(2, int(max_limit**0.5) + 1):
        if sieve[i]:
            for j in range(i*i, max_limit + 1, i):
                sieve[j] = False
    return sieve

def main():
    # Pour répondre au problème, le maximum 2*n peut être jusqu'à 2*123456 = 246912
    MAX_N = 246912

    # Pré-calcul des nombres premiers jusqu'à 2*123456 avec le crible d'Ératosthène
    primes = sieve(MAX_N)

    for line in sys.stdin:
        n = line.strip()
        if n == '0':
            # Fin de la lecture de données
            break
        n = int(n)
        # Compter le nombre de premiers p tels que n < p <= 2n
        count = 0
        for p in range(n+1, 2*n + 1):
            if primes[p]:
                count += 1
        print(count)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Solution' (ID: 20858)
  → Token d'amorce (pas de prédiction)

Token 2: ' Python' (ID: 26534)
  → Token d'amorce (pas de prédiction)

Token 3: ' complète' (ID: 75660)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.45217034220695496
    2. '```' → logprob: -1.0771703720092773
    3. 'def' → logprob: -5.202170372009277
    4. '\' → logprob: -5.327170372009277
    5. '#' → logprob: -5.577170372009277
    6. ':def' → logprob: -6.077170372009277
    7. '\n' → logprob: -6.202170372009277
    8. '
' → logprob: -6.452170372009277
    9. '``' → logprob: -6.702170372009277
    10. ':
' → logprob: -7.452170372009277

Token 4: ' pour' (ID: 1930)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6313254833221436
    2. '```' → logprob: -0.8813254833221436
    3. '\n' → logprob: -3.8813254833221436
    4. '#' → logprob: -4.131325721740723
    5. '\' → logprob: -4.881325721740723
    6. 'def' → logprob: -5.881325721740723
    7. '``' → logprob: -6.006325721740723
    8. ' :' → logprob: -6.881325721740723
    9. ':
' → logprob: -7.256325721740723
    10. '
' → logprob: -7.631325721740723

Token 5: ' vérifier' (ID: 93671)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.29051998257637024
    2. ' résoudre' → logprob: -1.5405199527740479
    3. ' la' → logprob: -4.040520191192627
    4. 'le' → logprob: -4.540520191192627
    5. '#' → logprob: -6.415520191192627
    6. '```' → logprob: -6.790520191192627
    7. ' l' → logprob: -7.040520191192627
    8. ' calcul' → logprob: -7.290520191192627
    9. 'l' → logprob: -7.790520191192627
    10. 'la' → logprob: -7.915520191192627

Token 6: ' le' (ID: 505)
  Prédit: ' si'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' si' → logprob: -1.227766752243042
    2. ':' → logprob: -1.352766752243042
    3. 's' → logprob: -1.977766752243042
    4. '```' → logprob: -2.227766752243042
    5. ' la' → logprob: -2.852766752243042
    6. 'si' → logprob: -3.227766752243042
    7. ' ' → logprob: -3.602766752243042
    8. ' :' → logprob: -3.852766752243042
    9. ' if' → logprob: -4.602766990661621
    10. ' que' → logprob: -4.852766990661621

Token 7: ' thé' (ID: 34740)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2651222944259644
    2. 'car' → logprob: -1.7651222944259644
    3. ' mot' → logprob: -1.8901222944259644
    4. '#' → logprob: -2.890122413635254
    5. 'mot' → logprob: -3.140122413635254
    6. 'd' → logprob: -3.515122413635254
    7. '```' → logprob: -3.640122413635254
    8. 'v' → logprob: -4.140122413635254
    9. 'm' → logprob: -4.265122413635254
    10. 'pal' → logprob: -4.265122413635254

Token 8: 'or' (ID: 267)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.08784650266170502
    2. '`' → logprob: -3.837846517562866
    3. '#' → logprob: -4.087846279144287
    4. 'â' → logprob: -4.462846279144287
    5. '``' → logprob: -4.962846279144287
    6. ' ```' → logprob: -5.462846279144287
    7. '=' → logprob: -5.587846279144287
    8. '' → logprob: -6.087846279144287
    9. 'ï' → logprob: -6.712846279144287
    10. 'è' → logprob: -6.962846279144287

Token 9: 'ème' (ID: 9767)
  Prédit: 'me'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.009866701439023018
    2. '`' → logprob: -5.634866714477539
    3. 'm' → logprob: -5.884866714477539
    4. 'ème' → logprob: -6.384866714477539
    5. '̀' → logprob: -6.759866714477539
    6. '```' → logprob: -8.509866714477539
    7. '\' → logprob: -8.759866714477539
    8. '``' → logprob: -9.884866714477539
    9. '#' → logprob: -10.009866714477539
    10. 'м' → logprob: -10.509866714477539

Token 10: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8836808204650879
    2. ' :' → logprob: -0.8836808204650879
    3. '```' → logprob: -2.633680820465088
    4. ' ' → logprob: -3.258680820465088
    5. '#' → logprob: -4.258680820465088
    6. ' de' → logprob: -4.633680820465088
    7. 's' → logprob: -4.758680820465088
    8. ''' → logprob: -5.383680820465088
    9. ''''' → logprob: -5.508680820465088
    10. ' ```' → logprob: -5.758680820465088

Token 11: ' Che' (ID: 9374)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.016645018011331558
    2. 'Th' → logprob: -4.2666449546813965
    3. ' P' → logprob: -6.7666449546813965
    4. 'l' → logprob: -7.7666449546813965
    5. 'th' → logprob: -8.516645431518555
    6. 'py' → logprob: -9.016645431518555
    7. 'F' → logprob: -9.516645431518555
    8. '#' → logprob: -9.516645431518555
    9. 'la' → logprob: -9.641645431518555
    10. ' Th' → logprob: -10.016645431518555

Token 12: 'bys' (ID: 149658)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.033382169902324677
    2. 'k' → logprob: -4.158381938934326
    3. '```' → logprob: -5.033381938934326
    4. 'q' → logprob: -5.658381938934326
    5. '#' → logprob: -5.658381938934326
    6. 'c' → logprob: -6.033381938934326
    7. '``' → logprob: -7.908381938934326
    8. 'val' → logprob: -8.658382415771484
    9. 'r' → logprob: -8.783382415771484
    10. 'bys' → logprob: -9.783382415771484

Token 13: 'hev' (ID: 115967)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.07017094641923904
    2. 'k' → logprob: -2.8201708793640137
    3. '#' → logprob: -5.570170879364014
    4. '```' → logprob: -6.195170879364014
    5. 's' → logprob: -8.070171356201172
    6. 'u' → logprob: -8.445171356201172
    7. 'e' → logprob: -8.695171356201172
    8. 'c' → logprob: -8.820171356201172
    9. 'w' → logprob: -9.070171356201172
    10. 'в' → logprob: -9.320171356201172

Token 14: '
' (ID: 198)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.7686036825180054
    2. ':' → logprob: -1.1436036825180054
    3. '```' → logprob: -2.268603801727295
    4. 'def' → logprob: -2.643603801727295
    5. ' def' → logprob: -4.643603801727295
    6. '#' → logprob: -4.643603801727295
    7. ' ```' → logprob: -4.893603801727295
    8. ' ' → logprob: -5.518603801727295
    9. ',' → logprob: -6.018603801727295
    10. 'import' → logprob: -6.018603801727295

Token 15: '#' (ID: 2)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.033918607980012894
    2. ' :' → logprob: -3.658918619155884
    3. '```' → logprob: -5.283918380737305
    4. 'def' → logprob: -6.533918380737305
    5. '#' → logprob: -8.533918380737305
    6. '.' → logprob: -8.783918380737305
    7. ',' → logprob: -9.408918380737305
    8. ''' → logprob: -9.408918380737305
    9. ':def' → logprob: -9.658918380737305
    10. '`' → logprob: -9.658918380737305

Token 16: ' Le' (ID: 2018)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3372657895088196
    2. ' def' → logprob: -1.8372657299041748
    3. ' ```' → logprob: -2.712265729904175
    4. ' import' → logprob: -3.587265729904175
    5. 'def' → logprob: -4.087265968322754
    6. '```' → logprob: -4.962265968322754
    7. 'import' → logprob: -5.212265968322754
    8. ' ' → logprob: -6.462265968322754
    9. ' d' → logprob: -7.962265968322754
    10. ' ​' → logprob: -8.087265968322754

Token 17: ' programme' (ID: 18190)
  Prédit: ' thé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' thé' → logprob: -0.3067428767681122
    2. 'th' → logprob: -2.6817429065704346
    3. ' code' → logprob: -2.9317429065704346
    4. ' import' → logprob: -3.5567429065704346
    5. ' th' → logprob: -3.6817429065704346
    6. '```' → logprob: -3.8067429065704346
    7. ' ' → logprob: -4.8067426681518555
    8. 'import' → logprob: -4.9317426681518555
    9. ' nombre' → logprob: -5.3067426681518555
    10. ' premier' → logprob: -5.7442426681518555

Token 18: ' lit' (ID: 11980)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.002007983857765794
    2. ' ' → logprob: -8.377008438110352
    3. ' )' → logprob: -8.502008438110352
    4. ' est' → logprob: -8.627008438110352
    5. '_' → logprob: -8.877008438110352
    6. ' s' → logprob: -9.002008438110352
    7. ' ]' → logprob: -9.252008438110352
    8. 'def' → logprob: -9.502008438110352
    9. ' #' → logprob: -9.627008438110352
    10. ' def' → logprob: -9.752008438110352

Token 19: ' des' (ID: 731)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.004702345468103886
    2. ' l' → logprob: -7.004702568054199
    3. 's' → logprob: -7.254702568054199
    4. ' des' → logprob: -7.254702568054199
    5. ' un' → logprob: -7.379702568054199
    6. ' une' → logprob: -7.504702568054199
    7. ' la' → logprob: -8.1297025680542
    8. ' ' → logprob: -8.3797025680542
    9. 'l' → logprob: -8.8797025680542
    10. ' les' → logprob: -9.0047025680542

Token 20: ' ent' (ID: 1121)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.017262205481529236
    2. ' ent' → logprob: -5.767261981964111
    3. ' nombre' → logprob: -6.142261981964111
    4. ' données' → logprob: -6.267261981964111
    5. ' espaces' → logprob: -6.267261981964111
    6. 'n' → logprob: -6.267261981964111
    7. 'nombre' → logprob: -6.392261981964111
    8. ' ' → logprob: -6.767261981964111
    9. ' entr' → logprob: -7.142261981964111
    10. ' ' → logprob: -7.517261981964111

Token 21: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.002038083504885435
    2. 'i' → logprob: -6.62703800201416
    3. 'r' → logprob: -8.25203800201416
    4. '```' → logprob: -8.87703800201416
    5. 'ières' → logprob: -9.50203800201416
    6. '#' → logprob: -9.62703800201416
    7. 'ires' → logprob: -10.00203800201416
    8. 'rs' → logprob: -10.62703800201416
    9. 'ers' → logprob: -10.87703800201416
    10. 'ier' → logprob: -10.87703800201416

Token 22: ' n' (ID: 297)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5886879563331604
    2. 's' → logprob: -1.0886878967285156
    3. ' ,' → logprob: -2.5886878967285156
    4. ',' → logprob: -4.338687896728516
    5. ' )' → logprob: -5.338687896728516
    6. ' ' → logprob: -5.963687896728516
    7. ' s' → logprob: -6.338687896728516
    8. 'n' → logprob: -6.338687896728516
    9. ' :' → logprob: -6.588687896728516
    10. ' n' → logprob: -6.713687896728516

Token 23: ' jusqu' (ID: 21961)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4789176285266876
    2. ',' → logprob: -1.2289175987243652
    3. ' ,' → logprob: -2.7289175987243652
    4. '_' → logprob: -4.978917598724365
    5. ' =' → logprob: -5.353917598724365
    6. 'u' → logprob: -5.478917598724365
    7. '=' → logprob: -5.853917598724365
    8. 's' → logprob: -6.978917598724365
    9. ' )' → logprob: -7.353917598724365
    10. ')' → logprob: -8.228918075561523

Token 24: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.0035677615087479353
    2. ''' → logprob: -6.253567695617676
    3. '’à' → logprob: -6.878567695617676
    4. 'à' → logprob: -8.128567695617676
    5. ''au' → logprob: -9.003567695617676
    6. ' à' → logprob: -9.878567695617676
    7. '_' → logprob: -10.003567695617676
    8. ''a' → logprob: -10.128567695617676
    9. 'a' → logprob: -11.003567695617676
    10. ' ' → logprob: -11.753567695617676

Token 25: ' ce' (ID: 2357)
  Prédit: ' EOF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' EOF' → logprob: -0.47116366028785706
    2. ' ce' → logprob: -1.7211636304855347
    3. 'EOF' → logprob: -2.596163749694824
    4. ' la' → logprob: -2.721163749694824
    5. ' ' → logprob: -3.221163749694824
    6. ' n' → logprob: -5.346163749694824
    7. ' l' → logprob: -5.346163749694824
    8. 'la' → logprob: -6.596163749694824
    9. '0' → logprob: -6.846163749694824
    10. '```' → logprob: -6.971163749694824

Token 26: ' qu' (ID: 474)
  Prédit: 'qu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qu' → logprob: -0.6999070048332214
    2. 'que' → logprob: -1.8249070644378662
    3. ' que' → logprob: -2.199907064437866
    4. ' qu' → logprob: -2.324907064437866
    5. 'u' → logprob: -3.074907064437866
    6. '```' → logprob: -3.324907064437866
    7. ' EOF' → logprob: -4.949906826019287
    8. 'à' → logprob: -5.074906826019287
    9. 'qui' → logprob: -5.199906826019287
    10. '-' → logprob: -5.324906826019287

Token 27: ''il' (ID: 14683)
  Prédit: ' ce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ce' → logprob: -0.25017330050468445
    2. ' ' → logprob: -2.750173330307007
    3. '```' → logprob: -3.375173330307007
    4. ' soit' → logprob: -3.750173330307007
    5. ' EOF' → logprob: -3.750173330307007
    6. ' n' → logprob: -3.875173330307007
    7. ''' → logprob: -4.125173091888428
    8. '_' → logprob: -5.500173091888428
    9. ' '' → logprob: -5.750173091888428
    10. '`' → logprob: -5.875173091888428

Token 28: ' rencontre' (ID: 35953)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4750370979309082
    2. 'so' → logprob: -1.8500370979309082
    3. ' soit' → logprob: -2.975037097930908
    4. 'n' → logprob: -3.225037097930908
    5. ''' → logprob: -3.850037097930908
    6. 'y' → logprob: -3.975037097930908
    7. ' ' → logprob: -4.350037097930908
    8. 's' → logprob: -4.350037097930908
    9. ' y' → logprob: -4.350037097930908
    10. ''y' → logprob: -5.225037097930908

Token 29: ' un' (ID: 537)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -1.1257930994033813
    2. ' un' → logprob: -1.5007930994033813
    3. ''' → logprob: -1.8757930994033813
    4. 'une' → logprob: -2.375792980194092
    5. ' ' → logprob: -2.750792980194092
    6. ''un' → logprob: -3.000792980194092
    7. 'un' → logprob: -3.750792980194092
    8. ''une' → logprob: -3.750792980194092
    9. ' '' → logprob: -4.750792980194092
    10. '"' → logprob: -5.000792980194092

Token 30: ' zéro' (ID: 182040)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5907394886016846
    2. '0' → logprob: -1.3407394886016846
    3. 'e' → logprob: -2.8407394886016846
    4. ' zéro' → logprob: -3.0907394886016846
    5. ' espace' → logprob: -3.5907394886016846
    6. ' nombre' → logprob: -3.8407394886016846
    7. ' entier' → logprob: -5.0907392501831055
    8. 'a' → logprob: -5.3407392501831055
    9. ' zero' → logprob: -5.4657392501831055
    10. ' EOF' → logprob: -5.9657392501831055

Token 31: ',
' (ID: 412)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8279376029968262
    2. ':' → logprob: -1.2029376029968262
    3. '```' → logprob: -2.077937602996826
    4. 'n' → logprob: -3.202937602996826
    5. '\n' → logprob: -3.452937602996826
    6. '

' → logprob: -3.827937602996826
    7. '\' → logprob: -3.952937602996826
    8. ':
' → logprob: -5.202937602996826
    9. '#' → logprob: -5.327937602996826
    10. 'def' → logprob: -5.827937602996826

Token 32: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23262155055999756
    2. ' :' → logprob: -3.107621669769287
    3. '```' → logprob: -3.357621669769287
    4. ':' → logprob: -3.607621669769287
    5. ',' → logprob: -3.732621669769287
    6. ' ,' → logprob: -3.857621669769287
    7. '.' → logprob: -4.482621669769287
    8. '\' → logprob: -4.982621669769287
    9. ' ```' → logprob: -5.607621669769287
    10. ' 
' → logprob: -5.732621669769287

Token 33: ' puis' (ID: 18766)
  Prédit: ' puis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.04116794094443321
    2. ' et' → logprob: -3.916167974472046
    3. ' ' → logprob: -5.291167736053467
    4. ' ensuite' → logprob: -5.541167736053467
    5. 'p' → logprob: -5.916167736053467
    6. 'ens' → logprob: -6.166167736053467
    7. '```' → logprob: -7.291167736053467
    8. ' en' → logprob: -7.416167736053467
    9. 'et' → logprob: -7.416167736053467
    10. ' then' → logprob: -7.416167736053467

Token 34: ' pour' (ID: 1930)
  Prédit: ' vér'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vér' → logprob: -1.2302067279815674
    2. ' affiche' → logprob: -2.1052067279815674
    3. ' calc' → logprob: -2.2302067279815674
    4. ' pour' → logprob: -2.3552067279815674
    5. ' s' → logprob: -2.9802067279815674
    6. ' ' → logprob: -2.9802067279815674
    7. ' effect' → logprob: -3.2302067279815674
    8. ' termine' → logprob: -3.3552067279815674
    9. 'pour' → logprob: -3.6052067279815674
    10. ' arr' → logprob: -3.7302067279815674

Token 35: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.008199763484299183
    2. ' each' → logprob: -5.633199691772461
    3. ' chacun' → logprob: -6.258199691772461
    4. 'cha' → logprob: -6.883199691772461
    5. ' chacune' → logprob: -7.258199691772461
    6. 'each' → logprob: -8.133199691772461
    7. 'ch' → logprob: -9.258199691772461
    8. 't' → logprob: -9.383199691772461
    9. 'Chaque' → logprob: -9.383199691772461
    10. ' n' → logprob: -9.758199691772461

Token 36: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6088146567344666
    2. 'n' → logprob: -1.1088147163391113
    3. ' ' → logprob: -2.1088147163391113
    4. ' ' → logprob: -5.733814716339111
    5. ' entier' → logprob: -7.858814716339111
    6. ' nombre' → logprob: -7.983814716339111
    7. '  ' → logprob: -9.233814239501953
    8. ' ,' → logprob: -9.483814239501953
    9. 'nombre' → logprob: -9.733814239501953
    10. ' ```' → logprob: -9.858814239501953

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0057912045158445835
    2. ' ,' → logprob: -5.380791187286377
    3. ' ' → logprob: -7.380791187286377
    4. ':' → logprob: -9.380791664123535
    5. ' il' → logprob: -10.130791664123535
    6. ' on' → logprob: -10.130791664123535
    7. ' ' → logprob: -10.130791664123535
    8. '```' → logprob: -10.130791664123535
    9. ')' → logprob: -10.630791664123535
    10. ' vér' → logprob: -10.755791664123535

Token 38: ' il' (ID: 1793)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.5094261169433594
    2. ' il' → logprob: -1.5094261169433594
    3. ' vér' → logprob: -3.2594261169433594
    4. ' ' → logprob: -3.6344261169433594
    5. ' it' → logprob: -3.6344261169433594
    6. ' ' → logprob: -3.7594261169433594
    7. 'v' → logprob: -4.259426116943359
    8. 'on' → logprob: -5.134426116943359
    9. ' vérifier' → logprob: -5.384426116943359
    10. ' calc' → logprob: -5.509426116943359

Token 39: ' compte' (ID: 19657)
  Prédit: ' vér'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' vér' → logprob: -0.08972971886396408
    2. ' affiche' → logprob: -3.4647297859191895
    3. ' calc' → logprob: -4.3397297859191895
    4. 'v' → logprob: -4.3397297859191895
    5. ' cherche' → logprob: -5.3397297859191895
    6. ' print' → logprob: -5.7147297859191895
    7. ' vérifier' → logprob: -5.8397297859191895
    8. 'cherche' → logprob: -6.5897297859191895
    9. ' recherche' → logprob: -6.5897297859191895
    10. ' imprime' → logprob: -6.7147297859191895

Token 40: ' le' (ID: 505)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.0335749387741089
    2. ' ' → logprob: -1.1585749387741089
    3. 'les' → logprob: -2.4085750579833984
    4. '<|end|>' → logprob: -2.6585750579833984
    5. 's' → logprob: -3.0335750579833984
    6. ' l' → logprob: -3.7835750579833984
    7. ' espaces' → logprob: -4.408575057983398
    8. ' le' → logprob: -4.408575057983398
    9. 'le' → logprob: -4.533575057983398
    10. ' nombre' → logprob: -4.783575057983398

Token 41: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.3268700838088989
    2. ' ' → logprob: -1.451870083808899
    3. 's' → logprob: -3.9518699645996094
    4. 'nombre' → logprob: -4.576869964599609
    5. ' nombres' → logprob: -5.576869964599609
    6. ' #' → logprob: -6.201869964599609
    7. '_' → logprob: -6.701869964599609
    8. ' espace' → logprob: -6.826869964599609
    9. ' espaces' → logprob: -7.326869964599609
    10. ' number' → logprob: -7.451869964599609

Token 42: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5473812818527222
    2. '<|end|>' → logprob: -1.9223812818527222
    3. ' de' → logprob: -2.1723814010620117
    4. ' d' → logprob: -2.4223814010620117
    5. '_' → logprob: -3.2973814010620117
    6. 's' → logprob: -4.422381401062012
    7. ' des' → logprob: -5.422381401062012
    8. '#' → logprob: -5.672381401062012
    9. '<|end|>' → logprob: -5.922381401062012
    10. ')' → logprob: -6.047381401062012

Token 43: ' nombres' (ID: 76205)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.280661940574646
    2. ' nombres' → logprob: -2.0306620597839355
    3. ' p' → logprob: -3.2806620597839355
    4. ' espaces' → logprob: -3.4056620597839355
    5. ' premiers' → logprob: -4.1556620597839355
    6. ' s' → logprob: -5.5306620597839355
    7. ' primes' → logprob: -5.6556620597839355
    8. 's' → logprob: -5.9056620597839355
    9. ' ```' → logprob: -6.2806620597839355
    10. 'div' → logprob: -6.4056620597839355

Token 44: ' premiers' (ID: 59140)
  Prédit: ' premiers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' premiers' → logprob: -0.09800025820732117
    2. 'prem' → logprob: -2.7230002880096436
    3. ' premier' → logprob: -4.8480000495910645
    4. ' ' → logprob: -6.2230000495910645
    5. ' premi' → logprob: -6.2230000495910645
    6. ' PREMI' → logprob: -6.3480000495910645
    7. ' s' → logprob: -6.5980000495910645
    8. 's' → logprob: -6.7230000495910645
    9. ' compris' → logprob: -6.8480000495910645
    10. ' Premier' → logprob: -6.8480000495910645

Token 45: ' p' (ID: 275)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01517985574901104
    2. ',' → logprob: -5.515179634094238
    3. ' ,' → logprob: -6.390179634094238
    4. '_' → logprob: -6.765179634094238
    5. 'def' → logprob: -6.765179634094238
    6. ' def' → logprob: -6.890179634094238
    7. ' ```' → logprob: -7.015179634094238
    8. '```' → logprob: -7.390179634094238
    9. 'import' → logprob: -7.765179634094238
    10. ' :' → logprob: -7.765179634094238

Token 46: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.29117393493652344
    2. ' s' → logprob: -2.6661739349365234
    3. 's' → logprob: -2.9161739349365234
    4. ' such' → logprob: -3.1661739349365234
    5. ',' → logprob: -3.9161739349365234
    6. '<|end|>' → logprob: -4.166173934936523
    7. '_' → logprob: -4.541173934936523
    8. ' ,' → logprob: -4.791173934936523
    9. '```' → logprob: -5.291173934936523
    10. ' ```' → logprob: -5.541173934936523

Token 47: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7013332843780518
    2. ',' → logprob: -2.4513332843780518
    3. ' compris' → logprob: -2.4513332843780518
    4. '<|end|>' → logprob: -2.4513332843780518
    5. ' such' → logprob: -2.7013332843780518
    6. 's' → logprob: -2.9513332843780518
    7. ' p' → logprob: -3.5763332843780518
    8. '```' → logprob: -3.5763332843780518
    9. ' entre' → logprob: -4.451333045959473
    10. ' tels' → logprob: -4.951333045959473

Token 48: ' tels' (ID: 62007)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3144083619117737
    2. ' compris' → logprob: -2.314408302307129
    3. ' p' → logprob: -3.064408302307129
    4. ' t' → logprob: -3.564408302307129
    5. ' tels' → logprob: -3.564408302307129
    6. ',' → logprob: -4.189408302307129
    7. ' entre' → logprob: -4.314408302307129
    8. ' such' → logprob: -4.314408302307129
    9. 's' → logprob: -5.689408302307129
    10. '```' → logprob: -5.814408302307129

Token 49: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.6343328952789307
    2. 'que' → logprob: -0.7593328952789307
    3. 'qu' → logprob: -7.009332656860352
    4. ' qu' → logprob: -8.009332656860352
    5. ' that' → logprob: -8.509332656860352
    6. '#' → logprob: -8.634332656860352
    7. 'that' → logprob: -10.009332656860352
    8. 'qui' → logprob: -10.884332656860352
    9. '<|end|>' → logprob: -11.634332656860352
    10. '>' → logprob: -12.009332656860352

Token 50: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.07294567674398422
    2. 'n' → logprob: -2.6979455947875977
    3. ' ' → logprob: -6.572945594787598
    4. ' p' → logprob: -6.947945594787598
    5. 'p' → logprob: -9.197945594787598
    6. ' ' → logprob: -9.322945594787598
    7. 'import' → logprob: -10.197945594787598
    8. ' (' → logprob: -10.322945594787598
    9. ' \(' → logprob: -10.322945594787598
    10. ' max' → logprob: -10.760445594787598

Token 51: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.7980644702911377
    2. ' <=' → logprob: -1.2980644702911377
    3. '<=' → logprob: -2.7980644702911377
    4. ' ≤' → logprob: -2.7980644702911377
    5. '/' → logprob: -3.0480644702911377
    6. '<' → logprob: -3.4230644702911377
    7. ' ' → logprob: -3.7980644702911377
    8. ' /' → logprob: -4.298064231872559
    9. '2' → logprob: -4.548064231872559
    10. '≤' → logprob: -4.798064231872559

Token 52: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.25262945890426636
    2. 'p' → logprob: -1.5026295185089111
    3. ' ' → logprob: -8.252629280090332
    4. '2' → logprob: -8.627629280090332
    5. '=' → logprob: -9.127629280090332
    6. '<p' → logprob: -9.502629280090332
    7. '<' → logprob: -10.877629280090332
    8. ' ' → logprob: -11.127629280090332
    9. ' <' → logprob: -11.627629280090332
    10. '=p' → logprob: -12.377629280090332

Token 53: ' <=' (ID: 5017)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -1.069476842880249
    2. '=' → logprob: -1.444476842880249
    3. '<=' → logprob: -1.819476842880249
    4. ' ' → logprob: -2.319476842880249
    5. ' <=' → logprob: -2.819476842880249
    6. '≤' → logprob: -3.444476842880249
    7. ' <' → logprob: -3.694476842880249
    8. ' ≤' → logprob: -4.069477081298828
    9. ' =' → logprob: -5.444477081298828
    10. '\' → logprob: -5.694477081298828

Token 54: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.16029834747314453
    2. ' ' → logprob: -1.9102983474731445
    3. ' ' → logprob: -10.285298347473145
    4. '<' → logprob: -12.472798347473145
    5. '  ' → logprob: -12.597798347473145
    6. '```' → logprob: -12.722798347473145
    7. '(' → logprob: -12.847798347473145
    8. '​' → logprob: -12.847798347473145
    9. '1' → logprob: -12.910298347473145
    10. 'int' → logprob: -12.972798347473145

Token 55: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005942779127508402
    2. ' ' → logprob: -5.1309428215026855
    3. ' ' → logprob: -12.130942344665527
    4. '(' → logprob: -13.318442344665527
    5. 'int' → logprob: -14.005942344665527
    6. '​' → logprob: -14.068442344665527
    7. '  ' → logprob: -14.568442344665527
    8. '<' → logprob: -14.880942344665527
    9. '```' → logprob: -15.068442344665527
    10. '   ' → logprob: -15.318442344665527

Token 56: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10648281127214432
    2. ' n' → logprob: -2.856482744216919
    3. ' *' → logprob: -3.856482744216919
    4. '*n' → logprob: -4.231482982635498
    5. '*' → logprob: -5.231482982635498
    6. ' ' → logprob: -6.356482982635498
    7. ' ' → logprob: -7.981482982635498
    8. '0' → logprob: -8.23148250579834
    9. ' `' → logprob: -11.10648250579834
    10. ' \' → logprob: -11.29398250579834

Token 57: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.40097612142562866
    2. 'n' → logprob: -1.9009761810302734
    3. '```' → logprob: -2.5259761810302734
    4. 'def' → logprob: -2.7759761810302734
    5. '#' → logprob: -4.400976181030273
    6. 'import' → logprob: -4.900976181030273
    7. ' :' → logprob: -5.275976181030273
    8. ':
' → logprob: -5.275976181030273
    9. '
' → logprob: -5.650976181030273
    10. 'd' → logprob: -6.275976181030273

Token 58: ' et' (ID: 859)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5693700909614563
    2. ' ' → logprob: -2.0693700313568115
    3. ' def' → logprob: -2.3193700313568115
    4. '```' → logprob: -2.5693700313568115
    5. 'import' → logprob: -3.3193700313568115
    6. ' ```' → logprob: -3.9443700313568115
    7. ' 
' → logprob: -4.069370269775391
    8. ' :' → logprob: -4.194370269775391
    9. '#' → logprob: -4.569370269775391
    10. ':' → logprob: -5.194370269775391

Token 59: ' affiche' (ID: 127479)
  Prédit: ' affiche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' affiche' → logprob: -0.6032179594039917
    2. 'aff' → logprob: -1.1032179594039917
    3. '#' → logprob: -2.3532180786132812
    4. ' imprime' → logprob: -4.603218078613281
    5. ' affich' → logprob: -5.603218078613281
    6. 'print' → logprob: -5.853218078613281
    7. ''aff' → logprob: -6.603218078613281
    8. ' afficher' → logprob: -6.978218078613281
    9. ' print' → logprob: -7.228218078613281
    10. ' indique' → logprob: -7.478218078613281

Token 60: ' ce' (ID: 2357)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8613755702972412
    2. ' le' → logprob: -0.8613755702972412
    3. ' la' → logprob: -2.111375570297241
    4. ' leur' → logprob: -4.48637580871582
    5. ' l' → logprob: -4.86137580871582
    6. ' p' → logprob: -5.36137580871582
    7. ' ' → logprob: -6.11137580871582
    8. ' :' → logprob: -6.11137580871582
    9. 'leur' → logprob: -6.48637580871582
    10. ' len' → logprob: -7.86137580871582

Token 61: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.2926580309867859
    2. 's' → logprob: -1.7926580905914307
    3. ' ' → logprob: -3.4176580905914307
    4. 'nombre' → logprob: -4.417657852172852
    5. ' résultat' → logprob: -4.542657852172852
    6. ' ' → logprob: -4.542657852172852
    7. 'ux' → logprob: -4.917657852172852
    8. ' compteur' → logprob: -6.417657852172852
    9. ' s' → logprob: -6.542657852172852
    10. ' code' → logprob: -6.667657852172852

Token 62: '.

' (ID: 364)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5769451260566711
    2. '```' → logprob: -1.8269450664520264
    3. '
' → logprob: -2.2019450664520264
    4. 'def' → logprob: -2.3269450664520264
    5. '#' → logprob: -3.7019450664520264
    6. 'n' → logprob: -3.7019450664520264
    7. '

' → logprob: -5.4519453048706055
    8. ':def' → logprob: -5.7019453048706055
    9. ' :' → logprob: -5.8269453048706055
    10. 'import' → logprob: -6.0769453048706055

Token 63: 'import' (ID: 561)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2181728333234787
    2. '```' → logprob: -1.8431727886199951
    3. 'import' → logprob: -4.343173027038574
    4. 'n' → logprob: -4.343173027038574
    5. '
' → logprob: -4.843173027038574
    6. '\' → logprob: -6.843173027038574
    7. ':' → logprob: -7.218173027038574
    8. '

' → logprob: -7.468173027038574
    9. '\n' → logprob: -8.343173027038574
    10. 'd' → logprob: -8.343173027038574

Token 64: ' sys' (ID: 12228)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.0016630393220111728
    2. ' sym' → logprob: -6.5016632080078125
    3. ' sys' → logprob: -8.751663208007812
    4. 'math' → logprob: -13.751663208007812
    5. ' ' → logprob: -14.876663208007812
    6. ' itertools' → logprob: -14.876663208007812
    7. ' ' → logprob: -15.251663208007812
    8. ' space' → logprob: -15.751663208007812
    9. ' bis' → logprob: -15.876663208007812
    10. '_math' → logprob: -16.501663208007812

Token 65: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.43042588233947754
    2. '
' → logprob: -1.0554258823394775
    3. 'def' → logprob: -7.055425643920898
    4. '
' → logprob: -8.680425643920898
    5. '\n' → logprob: -8.930425643920898
    6. '


' → logprob: -9.055425643920898
    7. '```' → logprob: -9.305425643920898
    8. ' 

' → logprob: -9.430425643920898
    9. 'for' → logprob: -9.555425643920898
    10. '
 
' → logprob: -9.930425643920898

Token 66: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05069829896092415
    2. 'for' → logprob: -3.0506982803344727
    3. 'import' → logprob: -6.675698280334473
    4. '```' → logprob: -7.300698280334473
    5. '
' → logprob: -9.550698280334473
    6. 'from' → logprob: -9.925698280334473
    7. '

' → logprob: -11.425698280334473
    8. ' for' → logprob: -11.800698280334473
    9. 'de' → logprob: -11.925698280334473
    10. '``' → logprob: -12.175698280334473

Token 67: ' sieve' (ID: 142781)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.05671464279294014
    2. ' compter' → logprob: -3.8067145347595215
    3. ' is' → logprob: -4.1817145347595215
    4. ' che' → logprob: -4.8067145347595215
    5. ' ' → logprob: -6.4317145347595215
    6. ' prime' → logprob: -6.5567145347595215
    7. ' compte' → logprob: -6.5567145347595215
    8. 'count' → logprob: -7.1817145347595215
    9. ' main' → logprob: -7.3067145347595215
    10. '  ' → logprob: -7.4317145347595215

Token 68: '(max' (ID: 17178)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4785505533218384
    2. '(' → logprob: -1.3535505533218384
    3. '(n' → logprob: -2.978550434112549
    4. '_of' → logprob: -2.978550434112549
    5. '_s' → logprob: -4.478550434112549
    6. '_(' → logprob: -5.478550434112549
    7. '(limit' → logprob: -6.978550434112549
    8. ' (' → logprob: -7.103550434112549
    9. '(_' → logprob: -8.353550910949707
    10. '_array' → logprob: -8.478550910949707

Token 69: '_limit' (ID: 34361)
  Prédit: '_n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.08527710288763046
    2. '_num' → logprob: -3.3352770805358887
    3. '_limit' → logprob: -3.4602770805358887
    4. '_number' → logprob: -5.210277080535889
    5. '_' → logprob: -5.960277080535889
    6. '):' → logprob: -6.210277080535889
    7. '_val' → logprob: -6.585277080535889
    8. '_prime' → logprob: -6.585277080535889
    9. ')' → logprob: -6.960277080535889
    10. '_value' → logprob: -7.585277080535889

Token 70: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012999961618334055
    2. ')' → logprob: -6.751299858093262
    3. ' ):' → logprob: -9.751299858093262
    4. '):
' → logprob: -10.001299858093262
    5. ':' → logprob: -10.751299858093262
    6. '=' → logprob: -13.501299858093262
    7. '):
' → logprob: -13.876299858093262
    8. ' :' → logprob: -14.501299858093262
    9. '_' → logprob: -14.501299858093262
    10. '):

' → logprob: -15.876299858093262

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43592819571495056
    2. ':' → logprob: -1.810928225517273
    3. ' ' → logprob: -2.9359281063079834
    4. ' sieve' → logprob: -3.8109281063079834
    5. '):' → logprob: -4.0609283447265625
    6. ' primes' → logprob: -4.1859283447265625
    7. '    ' → logprob: -4.4359283447265625
    8. '[' → logprob: -4.5609283447265625
    9. ' :' → logprob: -4.5609283447265625
    10. '<|end|>' → logprob: -4.8109283447265625

Token 72: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6849822402000427
    2. ' sieve' → logprob: -0.9349822402000427
    3. ' primes' → logprob: -2.5599822998046875
    4. ' prime' → logprob: -5.3099822998046875
    5. 'pr' → logprob: -5.5599822998046875
    6. '    ' → logprob: -5.8099822998046875
    7. 'prime' → logprob: -5.9349822998046875
    8. ' is' → logprob: -5.9349822998046875
    9. 's' → logprob: -6.4349822998046875
    10. ' ' → logprob: -6.5599822998046875

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09076282382011414
    2. 'Cr' → logprob: -2.9657628536224365
    3. ' Cr' → logprob: -3.8407628536224365
    4. ' cr' → logprob: -5.215762615203857
    5. '"""' → logprob: -5.715762615203857
    6. '#' → logprob: -7.215762615203857
    7. 'def' → logprob: -7.340762615203857
    8. '"""
' → logprob: -7.590762615203857
    9. ' ' → logprob: -7.840762615203857
    10. 'cr' → logprob: -7.840762615203857

Token 74: ' Gén' (ID: 71828)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07547325640916824
    2. ' """' → logprob: -3.5754733085632324
    3. ' sieve' → logprob: -4.075473308563232
    4. '"""' → logprob: -5.450473308563232
    5. '#' → logprob: -5.575473308563232
    6. ' primes' → logprob: -5.700473308563232
    7. ' Cr' → logprob: -5.825473308563232
    8. ' cr' → logprob: -6.200473308563232
    9. ' #' → logprob: -6.325473308563232
    10. ' max' → logprob: -6.575473308563232

Token 75: 'ère' (ID: 4346)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.020932581275701523
    2. 'ère' → logprob: -5.020932674407959
    3. 'érer' → logprob: -5.395932674407959
    4. 'èr' → logprob: -5.770932674407959
    5. '   ' → logprob: -6.520932674407959
    6. 'è' → logprob: -6.520932674407959
    7. 'def' → logprob: -7.270932674407959
    8. 'érateur' → logprob: -7.770932674407959
    9. ' er' → logprob: -7.895932674407959
    10. 'e' → logprob: -8.1459321975708

Token 76: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.18114715814590454
    2. ' une' → logprob: -1.8061470985412598
    3. ' ' → logprob: -8.306147575378418
    4. 'un' → logprob: -8.306147575378418
    5. ' la' → logprob: -8.431147575378418
    6. '   ' → logprob: -8.681147575378418
    7. ' a' → logprob: -8.681147575378418
    8. '[]' → logprob: -9.181147575378418
    9. 'une' → logprob: -10.056147575378418
    10. '[' → logprob: -10.181147575378418

Token 77: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.07181043922901154
    2. 'liste' → logprob: -2.696810483932495
    3. '[' → logprob: -7.446810245513916
    4. '[]' → logprob: -7.696810245513916
    5. 'list' → logprob: -7.821810245513916
    6. ' list' → logprob: -8.821810722351074
    7. ' [' → logprob: -9.821810722351074
    8. '   ' → logprob: -9.821810722351074
    9. 's' → logprob: -9.821810722351074
    10. 'table' → logprob: -10.446810722351074

Token 78: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5979636311531067
    2. '<|end|>' → logprob: -1.597963571548462
    3. '[]' → logprob: -1.722963571548462
    4. ' des' → logprob: -3.972963571548462
    5. ' [' → logprob: -4.222963809967041
    6. ' de' → logprob: -4.347963809967041
    7. '<bool' → logprob: -5.347963809967041
    8. ' of' → logprob: -5.347963809967041
    9. '<|end|>' → logprob: -5.347963809967041
    10. ' d' → logprob: -7.097963809967041

Token 79: ' bool' (ID: 3792)
  Prédit: ' bo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bo' → logprob: -0.5074589848518372
    2. ' bool' → logprob: -1.7574589252471924
    3. 'bool' → logprob: -1.8824589252471924
    4. 'bo' → logprob: -2.6324589252471924
    5. ' boolean' → logprob: -7.0074591636657715
    6. 'boolean' → logprob: -8.507458686828613
    7. 'True' → logprob: -9.257458686828613
    8. 'Bo' → logprob: -10.007458686828613
    9. ' True' → logprob: -10.257458686828613
    10. '<bool' → logprob: -10.507458686828613

Token 80: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0005815077456645668
    2. '[' → logprob: -8.000581741333008
    3. 'eens' → logprob: -9.375581741333008
    4. 'és' → logprob: -9.750581741333008
    5. '#' → logprob: -10.750581741333008
    6. 'e' → logprob: -11.375581741333008
    7. '__' → logprob: -11.750581741333008
    8. '|' → logprob: -11.875581741333008
    9. 'éns' → logprob: -12.000581741333008
    10. '_' → logprob: -12.125581741333008

Token 81: 'ens' (ID: 696)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.15167106688022614
    2. 'ens' → logprob: -2.0266711711883545
    3. 's' → logprob: -5.401670932769775
    4. 'ns' → logprob: -6.526670932769775
    5. 'ennes' → logprob: -7.151670932769775
    6. '```' → logprob: -7.526670932769775
    7. 'es' → logprob: -8.026671409606934
    8. 'n' → logprob: -8.651671409606934
    9. 'en' → logprob: -8.901671409606934
    10. 'an' → logprob: -9.026671409606934

Token 82: ' indiqu' (ID: 100773)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22415386140346527
    2. '  ' → logprob: -2.349153757095337
    3. '[' → logprob: -2.974153757095337
    4. ' indiqu' → logprob: -3.974153757095337
    5. '[]' → logprob: -4.099153995513916
    6. '<|end|>' → logprob: -4.974153995513916
    7. '   ' → logprob: -6.224153995513916
    8. '```' → logprob: -6.974153995513916
    9. ' representing' → logprob: -7.099153995513916
    10. ' []' → logprob: -7.349153995513916

Token 83: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.002032611286267638
    2. 'a' → logprob: -6.25203275680542
    3. 'e' → logprob: -9.502032279968262
    4. 'ent' → logprob: -11.252032279968262
    5. '```' → logprob: -12.627032279968262
    6. ''ant' → logprob: -13.002032279968262
    7. 'an' → logprob: -13.127032279968262
    8. '   ' → logprob: -13.252032279968262
    9. '#' → logprob: -13.502032279968262
    10. ' ant' → logprob: -14.127032279968262

Token 84: ' si' (ID: 1784)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01283570658415556
    2. '  ' → logprob: -5.762835502624512
    3. ' la' → logprob: -5.887835502624512
    4. ' si' → logprob: -6.137835502624512
    5. ' True' → logprob: -6.512835502624512
    6. ' ' → logprob: -7.762835502624512
    7. ' l' → logprob: -8.012835502624512
    8. ' whether' → logprob: -8.012835502624512
    9. ' if' → logprob: -8.012835502624512
    10. 's' → logprob: -8.137835502624512

Token 85: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.001444164663553238
    2. '  ' → logprob: -7.126444339752197
    3. ' True' → logprob: -8.376443862915039
    4. '   ' → logprob: -9.001443862915039
    5. 's' → logprob: -9.751443862915039
    6. ' ' → logprob: -10.376443862915039
    7. ' les' → logprob: -10.376443862915039
    8. '_' → logprob: -10.626443862915039
    9. '    ' → logprob: -10.876443862915039
    10. ' i' → logprob: -11.001443862915039

Token 86: ' nombre' (ID: 9733)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0024091850500553846
    2. '  ' → logprob: -6.752408981323242
    3. 'e' → logprob: -8.127408981323242
    4. ' nombre' → logprob: -8.127408981323242
    5. '   ' → logprob: -8.127408981323242
    6. 'n' → logprob: -9.877408981323242
    7. ' i' → logprob: -10.377408981323242
    8. ' e' → logprob: -10.377408981323242
    9. ' nombres' → logprob: -10.377408981323242
    10. 'i' → logprob: -10.877408981323242

Token 87: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02462577261030674
    2. '_' → logprob: -4.524625778198242
    3. '  ' → logprob: -5.024625778198242
    4. 's' → logprob: -5.774625778198242
    5. ' est' → logprob: -6.524625778198242
    6. ' s' → logprob: -7.649625778198242
    7. ' is' → logprob: -8.149625778198242
    8. '<|end|>' → logprob: -8.149625778198242
    9. '   ' → logprob: -8.274625778198242
    10. ' ' → logprob: -8.524625778198242

Token 88: ' premier' (ID: 15506)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.003647472243756056
    2. ' premier' → logprob: -5.753647327423096
    3. '  ' → logprob: -8.378647804260254
    4. '   ' → logprob: -9.378647804260254
    5. 'prem' → logprob: -10.253647804260254
    6. '_' → logprob: -10.628647804260254
    7. '' → logprob: -11.003647804260254
    8. '  ' → logprob: -11.378647804260254
    9. ' ' → logprob: -11.378647804260254
    10. ' p' → logprob: -11.378647804260254

Token 89: ' jusqu' (ID: 21961)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08104013651609421
    2. '   ' → logprob: -3.456040143966675
    3. '_' → logprob: -4.331039905548096
    4. '  ' → logprob: -4.706039905548096
    5. 's' → logprob: -5.081039905548096
    6. 'e' → logprob: -6.206039905548096
    7. ':' → logprob: -6.331039905548096
    8. ',' → logprob: -6.331039905548096
    9. ' True' → logprob: -6.331039905548096
    10. '.' → logprob: -6.456039905548096

Token 90: ''à' (ID: 33688)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14976367354393005
    2. ' à' → logprob: -2.524763584136963
    3. ''à' → logprob: -3.899763584136963
    4. 'à' → logprob: -4.774763584136963
    5. ' au' → logprob: -4.899763584136963
    6. 'au' → logprob: -5.149763584136963
    7. '   ' → logprob: -5.649763584136963
    8. '  ' → logprob: -5.774763584136963
    9. ' a' → logprob: -6.149763584136963
    10. ''au' → logprob: -6.274763584136963

Token 91: ' max' (ID: 2999)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.48980024456977844
    2. ' max' → logprob: -0.989800214767456
    3. 'max' → logprob: -4.489800453186035
    4. '  ' → logprob: -6.239800453186035
    5. ' `' → logprob: -6.739800453186035
    6. ' ' → logprob: -8.364800453186035
    7. '   ' → logprob: -8.489800453186035
    8. '(max' → logprob: -8.989800453186035
    9. '	max' → logprob: -9.364800453186035
    10. '[max' → logprob: -9.364800453186035

Token 92: '_limit' (ID: 34361)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0006662101950496435
    2. ' _' → logprob: -7.62566614151001
    3. '_limit' → logprob: -8.875666618347168
    4. ' ' → logprob: -11.125666618347168
    5. '_lim' → logprob: -12.500666618347168
    6. '_l' → logprob: -12.625666618347168
    7. '   ' → logprob: -12.875666618347168
    8. ''' → logprob: -13.625666618347168
    9. '_i' → logprob: -13.750666618347168
    10. '_
' → logprob: -13.875666618347168

Token 93: ' inclus' (ID: 11891)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24422672390937805
    2. '.' → logprob: -3.1192266941070557
    3. ':' → logprob: -3.1192266941070557
    4. ')' → logprob: -3.3692266941070557
    5. ' :' → logprob: -3.6192266941070557
    6. '   ' → logprob: -3.8692266941070557
    7. ',' → logprob: -4.244226932525635
    8. 'e' → logprob: -4.994226932525635
    9. '  ' → logprob: -5.119226932525635
    10. 's' → logprob: -5.244226932525635

Token 94: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5988813042640686
    2. ' :' → logprob: -1.0988812446594238
    3. '   ' → logprob: -3.223881244659424
    4. ' ' → logprob: -3.348881244659424
    5. '.' → logprob: -3.473881244659424
    6. ',' → logprob: -5.973881244659424
    7. '):' → logprob: -6.098881244659424
    8. ' :
' → logprob: -6.723881244659424
    9. '  ' → logprob: -6.973881244659424
    10. ')' → logprob: -6.973881244659424

Token 95: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18389731645584106
    2. ' 
' → logprob: -3.3088972568511963
    3. '  
' → logprob: -3.6838972568511963
    4. '
' → logprob: -3.8088972568511963
    5. '"""' → logprob: -4.183897495269775
    6. '    
' → logprob: -4.558897495269775
    7. ' """
' → logprob: -4.683897495269775
    8. '\n' → logprob: -4.683897495269775
    9. '   
' → logprob: -4.808897495269775
    10. ' """' → logprob: -5.058897495269775

Token 96: ' Util' (ID: 13564)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07630626857280731
    2. '
' → logprob: -3.2013063430786133
    3. '  
' → logprob: -5.201306343078613
    4. '"""' → logprob: -5.326306343078613
    5. '```' → logprob: -5.701306343078613
    6. ' ' → logprob: -5.826306343078613
    7. '    
' → logprob: -5.826306343078613
    8. '   
' → logprob: -5.951306343078613
    9. 'n' → logprob: -5.951306343078613
    10. ' 
' → logprob: -6.451306343078613

Token 97: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.06390430778265
    2. 'iser' → logprob: -3.563904285430908
    3. 'is' → logprob: -4.188904285430908
    4. 'isé' → logprob: -4.813904285430908
    5. 'isant' → logprob: -5.063904285430908
    6. 'isation' → logprob: -7.063904285430908
    7. '```' → logprob: -7.063904285430908
    8. 'se' → logprob: -7.563904285430908
    9. 'isez' → logprob: -7.813904285430908
    10. 'isateur' → logprob: -8.313904762268066

Token 98: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.173080325126648
    2. ' le' → logprob: -1.298080325126648
    3. ' un' → logprob: -1.548080325126648
    4. ' la' → logprob: -2.2980804443359375
    5. ' une' → logprob: -3.0480804443359375
    6. ' l' → logprob: -3.0480804443359375
    7. 'le' → logprob: -6.1730804443359375
    8. '  ' → logprob: -6.2980804443359375
    9. 'e' → logprob: -6.9230804443359375
    10. ' sieve' → logprob: -7.2980804443359375

Token 99: ' cr' (ID: 1769)
  Prédit: ' cr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cr' → logprob: -0.004246031399816275
    2. ' sieve' → logprob: -6.379246234893799
    3. ' Cr' → logprob: -7.254246234893799
    4. '   ' → logprob: -7.504246234893799
    5. 'e' → logprob: -7.754246234893799
    6. ' S' → logprob: -8.87924575805664
    7. ' crib' → logprob: -9.00424575805664
    8. 's' → logprob: -9.37924575805664
    9. ' sie' → logprob: -9.37924575805664
    10. ' ' → logprob: -9.37924575805664

Token 100: 'ible' (ID: 1430)
  Prédit: 'ible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ible' → logprob: -0.005913984961807728
    2. 'ibl' → logprob: -6.005914211273193
    3. 'i' → logprob: -6.755914211273193
    4. 'ib' → logprob: -6.755914211273193
    5. 'iv' → logprob: -8.130913734436035
    6. '   ' → logprob: -8.380913734436035
    7. '  ' → logprob: -9.005913734436035
    8. '```' → logprob: -9.505913734436035
    9. '     ' → logprob: -10.255913734436035
    10. '_' → logprob: -10.255913734436035

Token 101: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6226116418838501
    2. 'd' → logprob: -0.9976116418838501
    3. '_' → logprob: -3.2476115226745605
    4. 's' → logprob: -3.8726115226745605
    5. '_s' → logprob: -4.3726115226745605
    6. '_d' → logprob: -5.4976115226745605
    7. 'é' → logprob: -5.8726115226745605
    8. ' ' → logprob: -6.3726115226745605
    9. '_er' → logprob: -6.4976115226745605
    10. 'er' → logprob: -6.6226115226745605

Token 102: ''É' (ID: 87944)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.16438159346580505
    2. ''É' → logprob: -2.289381504058838
    3. 'É' → logprob: -3.164381504058838
    4. 'Er' → logprob: -5.789381504058838
    5. ''E' → logprob: -6.164381504058838
    6. '’É' → logprob: -6.789381504058838
    7. '```' → logprob: -7.914381504058838
    8. '埃' → logprob: -8.164381980895996
    9. 'S' → logprob: -8.539381980895996
    10. ''' → logprob: -9.164381980895996

Token 103: 'rat' (ID: 11990)
  Prédit: 'rat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rat' → logprob: -0.05059506371617317
    2. 'r' → logprob: -3.0505950450897217
    3. 'rast' → logprob: -6.675595283508301
    4. 'rats' → logprob: -8.6755952835083
    5. 'ras' → logprob: -9.0505952835083
    6. '**' → logprob: -9.1755952835083
    7. 'R' → logprob: -9.5505952835083
    8. '	r' → logprob: -9.8005952835083
    9. 'rase' → logprob: -10.5505952835083
    10. 'рат' → logprob: -10.6755952835083

Token 104: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.005459405481815338
    2. 'os' → logprob: -5.255459308624268
    3. ' ost' → logprob: -8.505459785461426
    4. 'o' → logprob: -11.630459785461426
    5. 'oste' → logprob: -12.880459785461426
    6. 'oth' → logprob: -13.255459785461426
    7. 'ostos' → logprob: -13.505459785461426
    8. 'ot' → logprob: -13.630459785461426
    9. 'othé' → logprob: -13.880459785461426
    10. 'osph' → logprob: -14.005459785461426

Token 105: 'h' (ID: 71)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.22102104127407074
    2. 'h' → logprob: -1.721021056175232
    3. 'enes' → logprob: -3.9710209369659424
    4. 'e' → logprob: -8.471020698547363
    5. 'hes' → logprob: -9.221020698547363
    6. 'eh' → logprob: -10.096020698547363
    7. 'ène' → logprob: -10.346020698547363
    8. 'ene' → logprob: -10.346020698547363
    9. 'ènes' → logprob: -10.471020698547363
    10. 'hen' → logprob: -10.471020698547363

Token 106: 'ène' (ID: 22902)
  Prédit: 'ène'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ène' → logprob: -0.09195071458816528
    2. 'ene' → logprob: -3.0919506549835205
    3. 'enes' → logprob: -3.8419506549835205
    4. 'ènes' → logprob: -3.9669506549835205
    5. 'e' → logprob: -7.3419508934021
    6. '#' → logprob: -8.091950416564941
    7. 'ене' → logprob: -8.341950416564941
    8. '`' → logprob: -8.591950416564941
    9. 'é' → logprob: -8.716950416564941
    10. 'è' → logprob: -9.591950416564941

Token 107: ' pour' (ID: 1930)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.990840494632721
    2. '   ' → logprob: -0.990840494632721
    3. ':' → logprob: -1.9908404350280762
    4. ' ' → logprob: -3.365840435028076
    5. '_' → logprob: -3.490840435028076
    6. ' (' → logprob: -4.240840435028076
    7. ' :' → logprob: -4.740840435028076
    8. '(' → logprob: -4.865840435028076
    9. ')' → logprob: -4.865840435028076
    10. ',' → logprob: -5.490840435028076

Token 108: ' une' (ID: 2463)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0695184469223022
    2. ' mar' → logprob: -1.3195184469223022
    3. ' trouver' → logprob: -1.9445184469223022
    4. ' déterminer' → logprob: -2.694518566131592
    5. ' créer' → logprob: -3.944518566131592
    6. ' ' → logprob: -3.944518566131592
    7. '    ' → logprob: -4.069518566131592
    8. ' calcul' → logprob: -4.069518566131592
    9. ' détect' → logprob: -4.694518566131592
    10. ' identifier' → logprob: -4.819518566131592

Token 109: ' efficacité' (ID: 162480)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05044671520590782
    2. 'e' → logprob: -4.425446510314941
    3. ' effic' → logprob: -4.800446510314941
    4. ' e' → logprob: -5.550446510314941
    5. ' espace' → logprob: -5.550446510314941
    6. ' efficacité' → logprob: -5.550446510314941
    7. ' space' → logprob: -6.050446510314941
    8. '   ' → logprob: -6.175446510314941
    9. '  ' → logprob: -6.175446510314941
    10. ' optimisation' → logprob: -6.300446510314941

Token 110: ' optimale' (ID: 72604)
  Prédit: ' optimale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' optimale' → logprob: -0.8628739714622498
    2. '.' → logprob: -0.9878739714622498
    3. ' optim' → logprob: -2.8628740310668945
    4. ' maximale' → logprob: -3.1128740310668945
    5. ' ' → logprob: -3.7378740310668945
    6. ':' → logprob: -3.9878740310668945
    7. ' :' → logprob: -3.9878740310668945
    8. '   ' → logprob: -4.7378740310668945
    9. ' optimal' → logprob: -4.8628740310668945
    10. '```' → logprob: -5.9878740310668945

Token 111: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5692191123962402
    2. ':' → logprob: -1.5692191123962402
    3. '.' → logprob: -1.9442191123962402
    4. ' :' → logprob: -3.5692191123962402
    5. '
' → logprob: -3.8192191123962402
    6. '\n' → logprob: -4.81921911239624
    7. ':
' → logprob: -5.06921911239624
    8. ' :
' → logprob: -5.06921911239624
    9. '.
' → logprob: -5.44421911239624
    10. ' ' → logprob: -5.94421911239624

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043785762041807175
    2. '
' → logprob: -3.918785810470581
    3. ' 
' → logprob: -5.168785572052002
    4. '    
' → logprob: -5.418785572052002
    5. '  
' → logprob: -6.043785572052002
    6. ' ' → logprob: -6.168785572052002
    7. '   
' → logprob: -6.168785572052002
    8. '"""' → logprob: -6.168785572052002
    9. '\n' → logprob: -6.668785572052002
    10. '"""
' → logprob: -7.668785572052002

Token 113: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40807822346687317
    2. '
' → logprob: -1.4080781936645508
    3. '  
' → logprob: -3.658078193664551
    4. '    
' → logprob: -4.033078193664551
    5. '   
' → logprob: -4.408078193664551
    6. '\n' → logprob: -4.533078193664551
    7. ' 
' → logprob: -4.908078193664551
    8. '```' → logprob: -5.158078193664551
    9. '"""' → logprob: -5.283078193664551
    10. '"""
' (adapté à ' """
') → logprob: -6.533078193664551

Token 114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006597544066607952
    2. 'n' → logprob: -6.131597518920898
    3. '    
' → logprob: -6.381597518920898
    4. ' sieve' → logprob: -6.881597518920898
    5. ' primes' → logprob: -8.131597518920898
    6. ' n' → logprob: -8.256597518920898
    7. ' 
' → logprob: -8.506597518920898
    8. '   
' → logprob: -8.756597518920898
    9. ' max' → logprob: -8.881597518920898
    10. '    ' → logprob: -9.131597518920898

Token 115: ' sieve' (ID: 142781)
  Prédit: ' primes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' primes' → logprob: -1.481619954109192
    2. '   ' → logprob: -1.606619954109192
    3. ' sieve' → logprob: -1.606619954109192
    4. ' is' → logprob: -1.981619954109192
    5. 'prime' → logprob: -2.1066198348999023
    6. 'is' → logprob: -2.9816198348999023
    7. ' prime' → logprob: -3.3566198348999023
    8. 'pr' → logprob: -3.7316198348999023
    9. 's' → logprob: -7.356619834899902
    10. ' limit' → logprob: -7.481619834899902

Token 116: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010931326076388359
    2. '=' → logprob: -4.885931491851807
    3. '[' → logprob: -5.885931491851807
    4. ' ' → logprob: -7.760931491851807
    5. '_' → logprob: -10.760931015014648
    6. '   ' → logprob: -10.760931015014648
    7. '=[' → logprob: -11.010931015014648
    8. 's' → logprob: -11.135931015014648
    9. ' =[' → logprob: -11.385931015014648
    10. '[]' → logprob: -11.885931015014648

Token 117: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.31326520442962646
    2. '[' → logprob: -1.3132652044296265
    3. ' ' → logprob: -13.438264846801758
    4. '   ' → logprob: -13.688264846801758
    5. '[max' → logprob: -14.938264846801758
    6. '[n' → logprob: -15.688264846801758
    7. '[s' → logprob: -16.563264846801758
    8. ' ' → logprob: -16.688264846801758
    9. '[int' → logprob: -16.813264846801758
    10. '[start' → logprob: -17.063264846801758

Token 118: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -3.8889261304575484e-06
    2. ' True' → logprob: -12.500003814697266
    3. 'False' → logprob: -16.000003814697266
    4. 'Tr' → logprob: -17.750003814697266
    5. '(True' → logprob: -18.125003814697266
    6. '1' → logprob: -23.500003814697266
    7. '   ' → logprob: -23.875003814697266
    8. '.True' → logprob: -24.125003814697266
    9. 'None' → logprob: -24.625003814697266
    10. '=True' → logprob: -24.625003814697266

Token 119: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014600618742406368
    2. ',' → logprob: -4.63960075378418
    3. ' for' → logprob: -5.76460075378418
    4. ' ]' → logprob: -6.76460075378418
    5. ']*' → logprob: -7.88960075378418
    6. ']*(' → logprob: -9.26460075378418
    7. ' ' → logprob: -11.01460075378418
    8. ']+' → logprob: -11.01460075378418
    9. 'for' → logprob: -11.51460075378418
    10. '   ' → logprob: -11.51460075378418

Token 120: ' *' (ID: 425)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2481839656829834
    2. ',' → logprob: -1.7481839656829834
    3. ' for' → logprob: -3.9981839656829834
    4. ' ' → logprob: -4.7481842041015625
    5. '   ' → logprob: -4.8731842041015625
    6. ']' → logprob: -4.8731842041015625
    7. ' [' → logprob: -7.1231842041015625
    8. ' ,' → logprob: -7.4981842041015625
    9. ' ]' → logprob: -8.248184204101562
    10. '    ' → logprob: -8.373184204101562

Token 121: ' (' (ID: 350)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -3.011373155459296e-05
    2. '(' → logprob: -10.750030517578125
    3. ' (' → logprob: -11.875030517578125
    4. 'max' → logprob: -14.250030517578125
    5. '(min' → logprob: -14.750030517578125
    6. '(m' → logprob: -15.750030517578125
    7. '((' → logprob: -15.875030517578125
    8. '[max' → logprob: -16.500030517578125
    9. '(ma' → logprob: -16.750030517578125
    10. '(MAX' → logprob: -17.125030517578125

Token 122: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -9.253090865968261e-06
    2. ' max' → logprob: -12.125009536743164
    3. '(max' → logprob: -12.500009536743164
    4. '	max' → logprob: -18.625009536743164
    5. 'ma' → logprob: -20.125009536743164
    6. '[max' → logprob: -20.250009536743164
    7. '   ' → logprob: -20.375009536743164
    8. 'm' → logprob: -20.625009536743164
    9. 'maxlength' → logprob: -20.625009536743164
    10. '=max' → logprob: -20.750009536743164

Token 123: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.02068260870873928
    2. '_' → logprob: -3.8956825733184814
    3. '+' → logprob: -9.895682334899902
    4. ' _' → logprob: -10.020682334899902
    5. '_lim' → logprob: -10.395682334899902
    6. '_LIMIT' → logprob: -12.645682334899902
    7. ' +' → logprob: -12.770682334899902
    8. '_l' → logprob: -13.020682334899902
    9. '_limits' → logprob: -13.020682334899902
    10. 'limit' → logprob: -14.645682334899902

Token 124: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023246178403496742
    2. ' +' → logprob: -3.7732462882995605
    3. ')' → logprob: -15.148245811462402
    4. ' ' → logprob: -15.898245811462402
    5. ' plus' → logprob: -16.27324676513672
    6. '+
' → logprob: -17.27324676513672
    7. '+)' → logprob: -17.27324676513672
    8. '()+' → logprob: -17.64824676513672
    9. ')+' → logprob: -17.77324676513672
    10. '1' → logprob: -17.77324676513672

Token 125: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006265374249778688
    2. ' ' → logprob: -7.375626564025879
    3. '```' → logprob: -18.000625610351562
    4. '   ' → logprob: -18.063125610351562
    5. '  ' → logprob: -18.500625610351562
    6. '１' → logprob: -19.000625610351562
    7. ')' → logprob: -19.250625610351562
    8. '2' → logprob: -19.375625610351562
    9. ' ' → logprob: -19.375625610351562
    10. '7' → logprob: -19.875625610351562

Token 126: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '```' → logprob: -19.000001907348633
    4. 'True' → logprob: -19.562501907348633
    5. '

' → logprob: -19.937501907348633
    6. '１' → logprob: -20.687501907348633
    7. '' → logprob: -20.750001907348633
    8. '   ' → logprob: -20.875001907348633
    9. '۱' → logprob: -20.937501907348633
    10. ')' → logprob: -21.187501907348633

Token 127: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005349855404347181
    2. ')
' → logprob: -5.255349636077881
    3. '   ' → logprob: -9.755350112915039
    4. '<|end|>' → logprob: -11.005350112915039
    5. '
' → logprob: -11.255350112915039
    6. ' )' → logprob: -11.505350112915039
    7. ' ' → logprob: -12.130350112915039
    8. '<|end|>' → logprob: -12.755350112915039
    9. ')
' → logprob: -13.130350112915039
    10. '#' → logprob: -13.880350112915039

Token 128: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03161454200744629
    2. 's' → logprob: -3.5316145420074463
    3. '    
' → logprob: -7.531614303588867
    4. ' sieve' → logprob: -7.906614303588867
    5. 'for' → logprob: -8.281614303588867
    6. ' ' → logprob: -8.781614303588867
    7. '[' → logprob: -9.156614303588867
    8. '  
' → logprob: -9.406614303588867
    9. '
' → logprob: -9.781614303588867
    10. '	s' → logprob: -10.156614303588867

Token 129: ' sieve' (ID: 142781)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0009570781840011477
    2. ' sieve' → logprob: -7.250957012176514
    3. '   ' → logprob: -8.375957489013672
    4. ' ' → logprob: -11.500957489013672
    5. '	s' → logprob: -13.500957489013672
    6. '  ' → logprob: -13.625957489013672
    7. 'sie' → logprob: -13.750957489013672
    8. 'for' → logprob: -14.125957489013672
    9. '       ' → logprob: -14.750957489013672
    10. '```' → logprob: -14.875957489013672

Token 130: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.531315314830863e-06
    2. ' [' → logprob: -12.875003814697266
    3. '<|end|>' → logprob: -14.500003814697266
    4. ' ' → logprob: -15.625003814697266
    5. '   ' → logprob: -16.125003814697266
    6. '[
' → logprob: -16.875003814697266
    7. '```' → logprob: -16.875003814697266
    8. '<|end|>' → logprob: -17.500003814697266
    9. 'import' → logprob: -18.250003814697266
    10. '[:' → logprob: -18.250003814697266

Token 131: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006881289882585406
    2. ' ' → logprob: -7.375688076019287
    3. '1' → logprob: -10.000688552856445
    4. 'False' → logprob: -12.500688552856445
    5. '2' → logprob: -12.875688552856445
    6. '   ' → logprob: -13.250688552856445
    7. ':' → logprob: -13.250688552856445
    8. ')' → logprob: -13.500688552856445
    9. '  ' → logprob: -14.313188552856445
    10. 'import' → logprob: -14.625688552856445

Token 132: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003045994380954653
    2. ' ]' → logprob: -8.625304222106934
    3. ']=' → logprob: -9.125304222106934
    4. ' ' → logprob: -12.125304222106934
    5. '],' → logprob: -12.250304222106934
    6. ',' → logprob: -13.375304222106934
    7. ' =' → logprob: -13.625304222106934
    8. '   ' → logprob: -14.500304222106934
    9. '=' → logprob: -14.625304222106934
    10. ':' → logprob: -14.750304222106934

Token 133: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0013926156098023057
    2. '=' → logprob: -6.626392841339111
    3. ' ' → logprob: -10.126392364501953
    4. '=False' → logprob: -11.126392364501953
    5. ' =
' → logprob: -11.751392364501953
    6. ',' → logprob: -13.376392364501953
    7. ' ==' → logprob: -13.751392364501953
    8. '   ' → logprob: -14.626392364501953
    9. ' and' → logprob: -16.126392364501953
    10. ' ,' → logprob: -16.126392364501953

Token 134: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.018164927139878273
    2. ' False' → logprob: -4.018165111541748
    3. 's' → logprob: -11.89316463470459
    4. ' sieve' → logprob: -12.64316463470459
    5. 'F' → logprob: -13.14316463470459
    6. '(False' → logprob: -13.76816463470459
    7. '=False' → logprob: -14.26816463470459
    8. '   ' → logprob: -14.64316463470459
    9. '.False' → logprob: -15.39316463470459
    10. ' ' → logprob: -16.018165588378906

Token 135: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4005941152572632
    2. 's' → logprob: -1.5255941152572632
    3. '<|end|>' → logprob: -2.4005942344665527
    4. '
' → logprob: -4.650594234466553
    5. ' ' → logprob: -5.775594234466553
    6. '    
' → logprob: -6.400594234466553
    7. ',' → logprob: -6.400594234466553
    8. ' 
' → logprob: -6.650594234466553
    9. '<|end|>' → logprob: -6.650594234466553
    10. ' sieve' → logprob: -6.900594234466553

Token 136: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32421764731407166
    2. 's' → logprob: -1.324217677116394
    3. '
' → logprob: -5.699217796325684
    4. '<|end|>' → logprob: -6.324217796325684
    5. ' 
' → logprob: -6.449217796325684
    6. ' sieve' → logprob: -6.574217796325684
    7. '  
' → logprob: -7.449217796325684
    8. '    
' → logprob: -7.574217796325684
    9. ' ' → logprob: -7.574217796325684
    10. '  ' → logprob: -7.949217796325684

Token 137: ' sieve' (ID: 142781)
  Prédit: ' sieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sieve' → logprob: -0.6340447068214417
    2. 's' → logprob: -0.8840447068214417
    3. '   ' → logprob: -2.884044647216797
    4. ' ' → logprob: -8.134044647216797
    5. '	s' → logprob: -8.884044647216797
    6. '1' → logprob: -10.509044647216797
    7. '  ' → logprob: -10.884044647216797
    8. 'sie' → logprob: -11.134044647216797
    9. '    ' → logprob: -11.509044647216797
    10. '_s' → logprob: -11.509044647216797

Token 138: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.4121114822482923e-06
    2. ' [' → logprob: -13.500003814697266
    3. '[
' → logprob: -13.875003814697266
    4. '1' → logprob: -13.875003814697266
    5. 's' → logprob: -16.625003814697266
    6. ' ' → logprob: -18.000003814697266
    7. 'def' → logprob: -18.250003814697266
    8. ' =' → logprob: -18.250003814697266
    9. '=' → logprob: -18.500003814697266
    10. '<|end|>' → logprob: -18.812503814697266

Token 139: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.506661833962426e-05
    2. ' ' → logprob: -9.37508487701416
    3. '  ' → logprob: -16.625085830688477
    4. '```' → logprob: -17.437585830688477
    5. '<|end|>' → logprob: -18.312585830688477
    6. '۱' → logprob: -18.437585830688477
    7. '0' → logprob: -18.750085830688477
    8. '2' → logprob: -18.937585830688477
    9. '१' → logprob: -19.000085830688477
    10. '   ' → logprob: -19.250085830688477

Token 140: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.49849584698677063
    2. ' =' → logprob: -0.9984958171844482
    3. '=' → logprob: -3.7484958171844482
    4. ' ]' → logprob: -8.373496055603027
    5. ']=' → logprob: -8.498496055603027
    6. ' ' → logprob: -9.748496055603027
    7. '=False' → logprob: -10.498496055603027
    8. '   ' → logprob: -10.873496055603027
    9. ')' → logprob: -11.248496055603027
    10. '<|end|>' → logprob: -12.248496055603027

Token 141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197318062186241
    2. '=' → logprob: -2.8119730949401855
    3. '=False' → logprob: -13.061973571777344
    4. ' =
' → logprob: -13.311973571777344
    5. ' ' → logprob: -13.436973571777344
    6. 'False' → logprob: -16.686973571777344
    7. '=
' → logprob: -16.936973571777344
    8. '=True' → logprob: -17.186973571777344
    9. ']' → logprob: -17.686973571777344
    10. ' =
' → logprob: -17.686973571777344

Token 142: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.04858759790658951
    2. ' False' → logprob: -3.0485875606536865
    3. '(False' → logprob: -16.298587799072266
    4. '.False' → logprob: -16.298587799072266
    5. '=False' → logprob: -16.798587799072266
    6. '_false' → logprob: -17.798587799072266
    7. 'True' → logprob: -18.548587799072266
    8. ' ' → logprob: -19.548587799072266
    9. '_FALSE' → logprob: -20.173587799072266
    10. 'F' → logprob: -20.298587799072266

Token 143: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.011644817888736725
    2. '   ' → logprob: -4.5116448402404785
    3. '    
' → logprob: -8.38664436340332
    4. ' 
' → logprob: -9.13664436340332
    5. ' for' → logprob: -9.26164436340332
    6. '<|end|>' → logprob: -9.51164436340332
    7. '  
' → logprob: -10.26164436340332
    8. 'for' → logprob: -10.38664436340332
    9. '
' → logprob: -11.63664436340332
    10. '   
' → logprob: -12.51164436340332

Token 144: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4529193043708801
    2. '   ' → logprob: -1.0779192447662354
    3. '    
' → logprob: -4.7029194831848145
    4. ' 
' → logprob: -4.9529194831848145
    5. ' for' → logprob: -5.3279194831848145
    6. '  
' → logprob: -6.7029194831848145
    7. 'for' → logprob: -6.8279194831848145
    8. '   
' → logprob: -8.077919006347656
    9. '  ' → logprob: -9.827919006347656
    10. '\n' → logprob: -10.077919006347656

Token 145: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5433452725410461
    2. ' i' → logprob: -1.4183452129364014
    3. ' 
' → logprob: -2.7933452129364014
    4. 'for' (adapté à ' for') → logprob: -2.9183452129364014
    5. ' ' → logprob: -3.4183452129364014
    6. 'i' → logprob: -4.4183454513549805
    7. '   ' → logprob: -4.4183454513549805
    8. '  
' → logprob: -6.1683454513549805
    9. '    
' → logprob: -7.0433454513549805
    10. '
' → logprob: -7.1683454513549805

Token 146: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.00023011912708170712
    2. 'i' → logprob: -8.500229835510254
    3. ' p' → logprob: -10.750229835510254
    4. ' ' → logprob: -12.500229835510254
    5. ' number' → logprob: -14.500229835510254
    6. '	i' → logprob: -14.750229835510254
    7. ' num' → logprob: -15.500229835510254
    8. '2' → logprob: -16.50023078918457
    9. ' x' → logprob: -16.62523078918457
    10. '   ' → logprob: -17.12523078918457

Token 147: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0005043004639446735
    2. 'in' → logprob: -8.125504493713379
    3. ' ' → logprob: -8.500504493713379
    4. '  ' → logprob: -13.250504493713379
    5. ' i' → logprob: -13.500504493713379
    6. '   ' → logprob: -14.250504493713379
    7. '2' → logprob: -15.000504493713379
    8. 'range' → logprob: -15.625504493713379
    9. '	in' → logprob: -15.750504493713379
    10. ',' → logprob: -16.250503540039062

Token 148: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.001179989194497466
    2. 'range' → logprob: -6.751180171966553
    3. ' ' → logprob: -11.626179695129395
    4. '2' → logprob: -14.126179695129395
    5. '	range' → logprob: -16.50118064880371
    6. '(range' → logprob: -18.00118064880371
    7. '   ' → logprob: -18.12618064880371
    8. '  ' → logprob: -18.25118064880371
    9. 'ange' → logprob: -18.87618064880371
    10. '    ' → logprob: -19.00118064880371

Token 149: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011052182875573635
    2. '2' → logprob: -4.511052131652832
    3. ' ' → logprob: -12.386052131652832
    4. ' (' → logprob: -15.511052131652832
    5. '(
' → logprob: -17.13605308532715
    6. '   ' → logprob: -18.13605308532715
    7. '[' → logprob: -19.63605308532715
    8. '  ' → logprob: -19.76105308532715
    9. '```' → logprob: -19.76105308532715
    10. '	' → logprob: -20.26105308532715

Token 150: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -18.125003814697266
    4. '  ' → logprob: -20.250003814697266
    5. '    ' → logprob: -20.875003814697266
    6. '
' → logprob: -21.000003814697266
    7. '(' → logprob: -21.500003814697266
    8. '２' → logprob: -21.500003814697266
    9. '۲' → logprob: -21.625003814697266
    10. '	' → logprob: -21.625003814697266

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016050558537244797
    2. ' ,' → logprob: -4.141050338745117
    3. ',int' → logprob: -12.016050338745117
    4. ' ' → logprob: -12.016050338745117
    5. '   ' → logprob: -14.016050338745117
    6. ',i' → logprob: -14.016050338745117
    7. ')' → logprob: -14.641050338745117
    8. ',
' → logprob: -15.016050338745117
    9. '  ' → logprob: -15.141050338745117
    10. ',n' → logprob: -15.516050338745117

Token 152: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.023251768201589584
    2. ' int' → logprob: -3.77325177192688
    3. '   ' → logprob: -12.7732515335083
    4. '(int' → logprob: -12.7732515335083
    5. '	int' → logprob: -14.2732515335083
    6. ' ' → logprob: -16.773252487182617
    7. ':int' → logprob: -17.398252487182617
    8. '  ' → logprob: -18.273252487182617
    9. '[int' → logprob: -18.273252487182617
    10. '=int' → logprob: -18.648252487182617

Token 153: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.0025009866803884506
    2. '(' → logprob: -6.252501010894775
    3. '((' → logprob: -7.877501010894775
    4. '(s' → logprob: -8.877500534057617
    5. ' (' → logprob: -10.752500534057617
    6. '(len' → logprob: -11.252500534057617
    7. '(pow' → logprob: -12.002500534057617
    8. 'max' → logprob: -12.127500534057617
    9. ' max' → logprob: -12.252500534057617
    10. '(
' → logprob: -14.002500534057617

Token 154: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.11665903031826019
    2. '(max' → logprob: -2.241658926010132
    3. '(' → logprob: -6.616659164428711
    4. '(s' → logprob: -6.991659164428711
    5. '(limit' → logprob: -7.366659164428711
    6. 'max' → logprob: -8.491659164428711
    7. '**' → logprob: -8.616659164428711
    8. ')' → logprob: -9.116659164428711
    9. 'limit' → logprob: -9.241659164428711
    10. '(math' → logprob: -9.366659164428711

Token 155: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.04324261471629143
    2. ' **' → logprob: -3.1682426929473877
    3. ' ' → logprob: -9.293242454528809
    4. '(' → logprob: -9.543242454528809
    5. '0' → logprob: -10.168242454528809
    6. '   ' → logprob: -10.918242454528809
    7. ' (' → logprob: -12.043242454528809
    8. '.sqrt' → logprob: -12.293242454528809
    9. ')' → logprob: -12.918242454528809
    10. '+' → logprob: -13.293242454528809

Token 156: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -13.12500286102295
    3. '.' → logprob: -13.75000286102295
    4. '   ' → logprob: -17.250003814697266
    5. '2' → logprob: -18.875003814697266
    6. '

' → logprob: -19.375003814697266
    7. '    ' → logprob: -19.500003814697266
    8. '```' → logprob: -19.750003814697266
    9. ' ' → logprob: -19.875003814697266
    10. '(' → logprob: -20.000003814697266

Token 157: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -7.3458322731312364e-06
    2. '0' → logprob: -12.750007629394531
    3. '5' → logprob: -12.875007629394531
    4. '2' → logprob: -14.875007629394531
    5. ' ' → logprob: -15.000007629394531
    6. ' .' → logprob: -15.250007629394531
    7. '1' → logprob: -15.375007629394531
    8. '3' → logprob: -16.12500762939453
    9. '50' → logprob: -16.25000762939453
    10. '4' → logprob: -17.12500762939453

Token 158: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -3.128163257315464e-07
    2. '

' → logprob: -16.875
    3. '   ' → logprob: -17.125
    4. '.' → logprob: -17.375
    5. '```' → logprob: -17.4375
    6. '"' → logprob: -17.5
    7. '
' → logprob: -17.5625
    8. '4' → logprob: -18.0
    9. '0' → logprob: -18.1875
    10. '6' → logprob: -18.4375

Token 159: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00414891866967082
    2. ')+' → logprob: -5.504148960113525
    3. ' )' → logprob: -10.004148483276367
    4. '()' → logprob: -11.129148483276367
    5. '+' → logprob: -11.629148483276367
    6. ' +' → logprob: -13.879148483276367
    7. ' ' → logprob: -15.504148483276367
    8. '())' → logprob: -15.879148483276367
    9. '()+' → logprob: -15.879148483276367
    10. '   ' → logprob: -16.129148483276367

Token 160: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.18648019433021545
    2. '+' → logprob: -1.811480164527893
    3. ')' → logprob: -5.1864800453186035
    4. ')+' → logprob: -7.0614800453186035
    5. ' ' → logprob: -8.311480522155762
    6. ' )' → logprob: -11.186480522155762
    7. '   ' → logprob: -13.811480522155762
    8. ' plus' → logprob: -14.061480522155762
    9. '1' → logprob: -14.561480522155762
    10. '2' → logprob: -14.811480522155762

Token 161: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019287518225610256
    2. ' ' → logprob: -6.251928806304932
    3. '  ' → logprob: -17.251928329467773
    4. '   ' → logprob: -17.376928329467773
    5. '```' → logprob: -18.001928329467773
    6. '

' → logprob: -18.251928329467773
    7. '
' → logprob: -18.501928329467773
    8. ')' → logprob: -18.626928329467773
    9. '2' → logprob: -18.876928329467773
    10. ' ' → logprob: -19.376928329467773

Token 162: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014001218369230628
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -16.250139236450195
    4. '  ' → logprob: -17.375139236450195
    5. '2' → logprob: -17.625139236450195
    6. '```' → logprob: -18.125139236450195
    7. ')' → logprob: -18.562639236450195
    8. '    ' → logprob: -18.875139236450195
    9. '
' → logprob: -19.437639236450195
    10. '

' → logprob: -19.625139236450195

Token 163: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0015168882673606277
    2. '):
' → logprob: -7.251516819000244
    3. ' ):' → logprob: -7.751516819000244
    4. ':' → logprob: -8.126517295837402
    5. ')' → logprob: -9.501517295837402
    6. '   ' → logprob: -12.751517295837402
    7. ' ):
' → logprob: -14.126517295837402
    8. ' :' → logprob: -14.126517295837402
    9. ',' → logprob: -14.626517295837402
    10. '):
' → logprob: -14.626517295837402

Token 164: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00731247290968895
    2. '):' → logprob: -5.132312297821045
    3. ' :' → logprob: -7.382312297821045
    4. '   ' → logprob: -7.507312297821045
    5. '       ' → logprob: -9.257312774658203
    6. ':
' → logprob: -9.382312774658203
    7. ')' → logprob: -11.132312774658203
    8. '):
' → logprob: -12.132312774658203
    9. '    ' → logprob: -12.632312774658203
    10. ' ):' → logprob: -13.132312774658203

Token 165: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45765581727027893
    2. ' if' → logprob: -1.8326557874679565
    3. '    ' → logprob: -2.332655906677246
    4. 'if' (adapté à ' if') → logprob: -2.832655906677246
    5. '       ' → logprob: -3.707655906677246
    6. ' ' → logprob: -4.332655906677246
    7. '    
' → logprob: -4.832655906677246
    8. '     
' → logprob: -6.582655906677246
    9. ' 
' → logprob: -6.707655906677246
    10. '  ' → logprob: -6.957655906677246

Token 166: ' sieve' (ID: 142781)
  Prédit: ' sieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sieve' → logprob: -0.03815670683979988
    2. 's' → logprob: -3.288156747817993
    3. ' ' → logprob: -9.913156509399414
    4. ' s' → logprob: -10.413156509399414
    5. '	s' → logprob: -11.538156509399414
    6. ' sie' → logprob: -11.913156509399414
    7. 'sie' → logprob: -12.288156509399414
    8. ' ' → logprob: -12.663156509399414
    9. ' not' → logprob: -12.663156509399414
    10. ' siege' → logprob: -13.600656509399414

Token 167: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0009124171338044107
    2. '[' → logprob: -7.000912189483643
    3. ' [' → logprob: -14.6259126663208
    4. '[I' → logprob: -15.2509126663208
    5. 'i' → logprob: -16.750911712646484
    6. '[
' → logprob: -17.125911712646484
    7. '[s' → logprob: -17.125911712646484
    8. '[j' → logprob: -17.750911712646484
    9. '[u' → logprob: -18.250911712646484
    10. '[a' → logprob: -18.625911712646484

Token 168: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008759216405451298
    2. '):
' → logprob: -5.383759021759033
    3. ']:' → logprob: -6.508759021759033
    4. ' ):' → logprob: -6.508759021759033
    5. ':' → logprob: -7.258759021759033
    6. ')' → logprob: -7.883759021759033
    7. '=' → logprob: -11.008759498596191
    8. ' ' → logprob: -11.258759498596191
    9. ']' → logprob: -11.758759498596191
    10. '   ' → logprob: -11.883759498596191

Token 169: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35601484775543213
    2. ':' → logprob: -1.3560148477554321
    3. '       ' → logprob: -3.7310147285461426
    4. ':
' → logprob: -4.106014728546143
    5. ' for' → logprob: -8.3560152053833
    6. '   ' → logprob: -8.7310152053833
    7. ',' → logprob: -8.8560152053833
    8. '            
' → logprob: -8.8560152053833
    9. 'for' → logprob: -9.1060152053833
    10. ' :' → logprob: -9.2310152053833

Token 170: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.01709171198308468
    2. 'for' (adapté à ' for') → logprob: -4.142091751098633
    3. '   ' → logprob: -7.142091751098633
    4. ' j' → logprob: -9.392091751098633
    5. '    ' → logprob: -9.642091751098633
    6. '       ' → logprob: -9.892091751098633
    7. ' ' → logprob: -10.142091751098633
    8. '	for' → logprob: -11.767091751098633
    9. ' 
' → logprob: -12.517091751098633
    10. ' ' → logprob: -13.017091751098633

Token 171: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.5759406089782715
    2. 'j' → logprob: -0.8259406089782715
    3. '	j' → logprob: -13.70094108581543
    4. '   ' → logprob: -16.82594108581543
    5. ' ' → logprob: -17.45094108581543
    6. ' multiple' → logprob: -17.82594108581543
    7. 'multip' → logprob: -19.82594108581543
    8. '    ' → logprob: -19.95094108581543
    9. '```' → logprob: -19.95094108581543
    10. 'multiple' → logprob: -20.07594108581543

Token 172: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01260324101895094
    2. 'in' → logprob: -4.387603282928467
    3. ' i' → logprob: -9.637602806091309
    4. '=' → logprob: -11.262602806091309
    5. ' =' → logprob: -12.512602806091309
    6. ' ' → logprob: -12.637602806091309
    7. 'i' → logprob: -12.762602806091309
    8. '=i' → logprob: -13.512602806091309
    9. '	in' → logprob: -13.887602806091309
    10. '    ' → logprob: -14.137602806091309

Token 173: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12698417901992798
    2. ' range' → logprob: -2.126984119415283
    3. 'i' → logprob: -10.126984596252441
    4. '   ' → logprob: -11.626984596252441
    5. ' i' → logprob: -12.251984596252441
    6. '	range' → logprob: -14.376984596252441
    7. '    ' → logprob: -14.501984596252441
    8. ' ' → logprob: -14.876984596252441
    9. 'r' → logprob: -15.251984596252441
    10. '(range' → logprob: -15.376984596252441

Token 174: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.006369189824908972
    2. 'i' → logprob: -5.256369113922119
    3. ' i' → logprob: -6.881369113922119
    4. '(' → logprob: -9.381369590759277
    5. ' (' → logprob: -11.256369590759277
    6. '   ' → logprob: -11.881369590759277
    7. '	i' → logprob: -13.006369590759277
    8. ')' → logprob: -14.506369590759277
    9. '(
' → logprob: -14.756369590759277
    10. ')i' → logprob: -15.381369590759277

Token 175: '*i' (ID: 51147)
  Prédit: '*i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.13053174316883087
    2. '*' → logprob: -2.1305317878723145
    3. ' *' → logprob: -5.6305317878723145
    4. 'i' → logprob: -11.505531311035156
    5. ' i' → logprob: -15.380531311035156
    6. '*j' → logprob: -15.755531311035156
    7. ' ' → logprob: -16.880531311035156
    8. '2' → logprob: -17.380531311035156
    9. '**' → logprob: -17.630531311035156
    10. '   ' → logprob: -18.130531311035156

Token 176: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008722824975848198
    2. ',max' → logprob: -5.13372278213501
    3. ' ,' → logprob: -5.88372278213501
    4. 'max' → logprob: -12.758723258972168
    5. ',len' → logprob: -13.633723258972168
    6. ',
' → logprob: -14.258723258972168
    7. ' max' → logprob: -14.758723258972168
    8. ',m' → logprob: -15.883723258972168
    9. '(max' → logprob: -16.13372230529785
    10. ':max' → logprob: -16.13372230529785

Token 177: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.1269284337759018
    2. ' max' → logprob: -2.1269283294677734
    3. '(max' → logprob: -15.376928329467773
    4. '	max' → logprob: -16.126928329467773
    5. ',max' → logprob: -18.376928329467773
    6. ' ' → logprob: -18.751928329467773
    7. '[max' → logprob: -19.376928329467773
    8. '   ' → logprob: -19.501928329467773
    9. '_max' → logprob: -19.751928329467773
    10. '
' → logprob: -21.376928329467773

Token 178: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -7.576873758807778e-05
    2. 'limit' → logprob: -9.500075340270996
    3. '-limit' → logprob: -14.875075340270996
    4. 'Limit' → logprob: -15.625075340270996
    5. '_LIMIT' → logprob: -15.750075340270996
    6. '_lim' → logprob: -16.750076293945312
    7. '(limit' → logprob: -17.000076293945312
    8. '+' → logprob: -17.375076293945312
    9. 'lim' → logprob: -17.750076293945312
    10. ' limit' → logprob: -17.875076293945312

Token 179: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00012356207298580557
    2. ' +' → logprob: -9.000123977661133
    3. '+
' → logprob: -16.000123977661133
    4. 'max' → logprob: -17.250123977661133
    5. '+i' → logprob: -18.625123977661133
    6. '+j' → logprob: -19.125123977661133
    7. ']+' → logprob: -19.500123977661133
    8. '+,' → logprob: -20.250123977661133
    9. '[' → logprob: -20.375123977661133
    10. '＋' → logprob: -20.375123977661133

Token 180: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038074489566497505
    2. ' ' → logprob: -7.875380516052246
    3. '   ' → logprob: -15.000380516052246
    4. '  ' → logprob: -16.375381469726562
    5. ',' → logprob: -16.625381469726562
    6. ')' → logprob: -16.875381469726562
    7. '```' → logprob: -17.125381469726562
    8. '
' → logprob: -17.250381469726562
    9. '    ' → logprob: -17.687881469726562
    10. '

' → logprob: -18.187881469726562

Token 181: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -16.875011444091797
    4. '```' → logprob: -17.500011444091797
    5. '  ' → logprob: -18.125011444091797
    6. ')' → logprob: -19.187511444091797
    7. '１' → logprob: -19.312511444091797
    8. '    ' → logprob: -19.375011444091797
    9. '۱' → logprob: -19.625011444091797
    10. '
' → logprob: -19.687511444091797

Token 182: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0038729929365217686
    2. ',i' → logprob: -5.628872871398926
    3. ' ,' → logprob: -8.378872871398926
    4. ',j' → logprob: -10.128872871398926
    5. ' i' → logprob: -13.878872871398926
    6. '           ' → logprob: -14.628872871398926
    7. ':i' → logprob: -14.753872871398926
    8. '(i' → logprob: -15.003872871398926
    9. '   ' → logprob: -15.128872871398926
    10. '),' → logprob: -16.003873825073242

Token 183: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01815064437687397
    2. ' i' → logprob: -4.018150806427002
    3. '	i' → logprob: -15.268150329589844
    4. ')i' → logprob: -15.393150329589844
    5. ')' → logprob: -16.143150329589844
    6. ' ' → logprob: -16.893150329589844
    7. '   ' → logprob: -16.893150329589844
    8. '*i' → logprob: -19.393150329589844
    9. ',i' → logprob: -19.768150329589844
    10. '  ' → logprob: -19.768150329589844

Token 184: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.020684830844402313
    2. '):
' → logprob: -3.8956847190856934
    3. ')' → logprob: -9.520685195922852
    4. ' ):' → logprob: -10.895685195922852
    5. ':' → logprob: -11.520685195922852
    6. ',i' → logprob: -11.770685195922852
    7. ',' → logprob: -12.020685195922852
    8. '):
' → logprob: -12.145685195922852
    9. '+i' → logprob: -12.145685195922852
    10. '*i' → logprob: -12.520685195922852

Token 185: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012785328552126884
    2. 's' → logprob: -4.3877854347229
    3. '                
' → logprob: -8.887784957885742
    4. ' sieve' → logprob: -9.887784957885742
    5. '           ' → logprob: -10.762784957885742
    6. '              ' → logprob: -11.137784957885742
    7. '                   ' → logprob: -11.637784957885742
    8. '                ' → logprob: -12.262784957885742
    9. '[s' → logprob: -12.262784957885742
    10. '	s' → logprob: -12.387784957885742

Token 186: ' sieve' (ID: 142781)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0013816634891554713
    2. ' sieve' → logprob: -6.626381874084473
    3. '               ' → logprob: -10.251381874084473
    4. '                   ' → logprob: -11.126381874084473
    5. '   ' → logprob: -13.501381874084473
    6. '           ' → logprob: -14.001381874084473
    7. '	s' → logprob: -14.126381874084473
    8. 'sie' → logprob: -14.876381874084473
    9. '                       ' → logprob: -14.876381874084473
    10. '                ' → logprob: -15.251381874084473

Token 187: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.668304245569743e-05
    2. '[' → logprob: -10.000046730041504
    3. '[js' → logprob: -14.875046730041504
    4. ' [' → logprob: -15.250046730041504
    5. '[i' → logprob: -15.375046730041504
    6. '][' → logprob: -16.500045776367188
    7. '```' → logprob: -16.750045776367188
    8. 'j' → logprob: -16.875045776367188
    9. '[
' → logprob: -17.375045776367188
    10. ']' → logprob: -17.375045776367188

Token 188: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002084277366520837
    2. ']=' → logprob: -8.750208854675293
    3. '=' → logprob: -10.250208854675293
    4. ' ]' → logprob: -11.250208854675293
    5. ' =' → logprob: -13.500208854675293
    6. ')' → logprob: -16.500207901000977
    7. '[' → logprob: -19.625207901000977
    8. ']
' → logprob: -19.625207901000977
    9. '=False' → logprob: -19.625207901000977
    10. ' ' → logprob: -19.750207901000977

Token 189: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07897207885980606
    2. ' =' → logprob: -2.578972101211548
    3. '=False' → logprob: -9.453971862792969
    4. 'False' → logprob: -13.203971862792969
    5. ']' → logprob: -13.953971862792969
    6. ']=' → logprob: -14.328971862792969
    7. '=True' → logprob: -15.078971862792969
    8. ' False' → logprob: -15.703971862792969
    9. '=
' → logprob: -16.20397186279297
    10. ')' → logprob: -17.20397186279297

Token 190: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00033546582562848926
    2. ' False' → logprob: -8.000335693359375
    3. '=False' → logprob: -19.500335693359375
    4. 'F' → logprob: -19.625335693359375
    5. '(False' → logprob: -19.625335693359375
    6. '.False' → logprob: -21.000335693359375
    7. '   ' → logprob: -21.625335693359375
    8. '_false' → logprob: -22.375335693359375
    9. 'True' → logprob: -22.500335693359375
    10. 'Fa' → logprob: -22.750335693359375

Token 191: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10046900808811188
    2. '   ' → logprob: -2.4754691123962402
    3. '    
' → logprob: -5.60046911239624
    4. '<|end|>' → logprob: -5.97546911239624
    5. '\n' → logprob: -6.60046911239624
    6. '  
' → logprob: -7.22546911239624
    7. 'return' → logprob: -7.22546911239624
    8. ' 
' → logprob: -7.60046911239624
    9. '' → logprob: -7.72546911239624
    10. ' return' → logprob: -8.100468635559082

Token 192: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01548260822892189
    2. '
' → logprob: -4.640482425689697
    3. '    
' → logprob: -6.140482425689697
    4. '\n' → logprob: -6.765482425689697
    5. '<|end|>' → logprob: -6.765482425689697
    6. 'return' → logprob: -7.890482425689697
    7. ' return' → logprob: -8.390482902526855
    8. ' 
' → logprob: -9.140482902526855
    9. '  
' → logprob: -9.640482902526855
    10. ' ' → logprob: -9.890482902526855

Token 193: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.46218422055244446
    2. '   ' → logprob: -1.212184190750122
    3. '
' → logprob: -3.337184190750122
    4. ' return' → logprob: -3.462184190750122
    5. '    
' → logprob: -5.712184429168701
    6. '  
' → logprob: -7.712184429168701
    7. ' ' → logprob: -7.712184429168701
    8. '	return' → logprob: -7.962184429168701
    9. '\n' → logprob: -8.212183952331543
    10. ' 
' → logprob: -8.712183952331543

Token 194: ' sieve' (ID: 142781)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 195: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14418087899684906
    2. '

' → logprob: -2.5191807746887207
    3. 'def' → logprob: -3.1441807746887207
    4. '<|end|>' → logprob: -5.144180774688721
    5. '```' → logprob: -7.144180774688721
    6. '    
' → logprob: -7.269180774688721
    7. '#' → logprob: -7.519180774688721
    8. '  
' → logprob: -7.644180774688721
    9. ' 
' → logprob: -7.644180774688721
    10. '\n' → logprob: -7.769180774688721

Token 196: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004895485006272793
    2. '
' → logprob: -5.6298956871032715
    3. 'for' → logprob: -7.3798956871032715
    4. '

' → logprob: -7.8798956871032715
    5. 'n' → logprob: -9.004895210266113
    6. '#' → logprob: -9.754895210266113
    7. '  
' → logprob: -10.379895210266113
    8. '```' → logprob: -10.629895210266113
    9. '    
' → logprob: -10.754895210266113
    10. 'while' → logprob: -12.129895210266113

Token 197: ' main' (ID: 2758)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.4189586639404297
    2. ' main' → logprob: -1.1689586639404297
    3. 'count' → logprob: -3.5439586639404297
    4. 'main' → logprob: -6.54395866394043
    5. ' compter' → logprob: -8.29395866394043
    6. ' primes' → logprob: -8.29395866394043
    7. ' che' → logprob: -8.54395866394043
    8. 'che' → logprob: -8.79395866394043
    9. ' prime' → logprob: -8.91895866394043
    10. ' counts' → logprob: -9.04395866394043

Token 198: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.4034345187828876e-05
    2. '()' → logprob: -11.62502384185791
    3. '():
' → logprob: -11.62502384185791
    4. ' ():' → logprob: -12.25002384185791
    5. ':' → logprob: -13.87502384185791
    6. '(' → logprob: -15.12502384185791
    7. '():
' → logprob: -16.750024795532227
    8. '():

' → logprob: -18.375024795532227
    9. '(":' → logprob: -18.750024795532227
    10. 'def' → logprob: -19.875024795532227

Token 199: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002458430244587362
    2. ' import' → logprob: -9.375246047973633
    3. ' max' → logprob: -9.750246047973633
    4. ' while' → logprob: -10.375246047973633
    5. '    
' → logprob: -10.500246047973633
    6. 'import' → logprob: -11.375246047973633
    7. ' for' → logprob: -11.375246047973633
    8. ' input' → logprob: -11.875246047973633
    9. ' n' → logprob: -12.500246047973633
    10. ' readline' → logprob: -13.250246047973633

Token 200: ' #' (ID: 1069)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.4266832172870636
    2. ' while' → logprob: -1.8016831874847412
    3. ' for' → logprob: -2.551683187484741
    4. 'max' → logprob: -3.051683187484741
    5. '   ' → logprob: -3.926683187484741
    6. 'while' → logprob: -4.17668342590332
    7. ' import' → logprob: -4.42668342590332
    8. 'for' → logprob: -4.80168342590332
    9. 'import' → logprob: -7.05168342590332
    10. ' lines' → logprob: -7.42668342590332

Token 201: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5993512272834778
    2. 'max' → logprob: -0.9743512272834778
    3. ' for' → logprob: -3.474351167678833
    4. 'import' → logprob: -3.974351167678833
    5. ' max' → logprob: -4.599351406097412
    6. 'while' → logprob: -4.974351406097412
    7. ' lines' → logprob: -6.224351406097412
    8. ' import' → logprob: -6.224351406097412
    9. 'lines' → logprob: -7.224351406097412
    10. ' while' → logprob: -7.349351406097412

Token 202: ' répondre' (ID: 53201)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.3111020028591156
    2. ' n' → logprob: -1.686102032661438
    3. ' l' → logprob: -3.1861019134521484
    4. ' ligne' → logprob: -4.311101913452148
    5. ' max' → logprob: -4.436101913452148
    6. ' ' → logprob: -4.686101913452148
    7. ' li' → logprob: -7.186101913452148
    8. ' i' → logprob: -7.311101913452148
    9. ' p' → logprob: -7.311101913452148
    10. 'line' → logprob: -7.936101913452148

Token 203: ' au' (ID: 2791)
  Prédit: ' aux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aux' → logprob: -0.2571568787097931
    2. ' ' → logprob: -1.7571568489074707
    3. ' à' → logprob: -3.0071568489074707
    4. ' au' → logprob: -6.007156848907471
    5. 'aux' → logprob: -6.757156848907471
    6. '   ' → logprob: -8.007157325744629
    7. 'au' → logprob: -8.632157325744629
    8. ' a' → logprob: -8.882157325744629
    9. 'à' → logprob: -9.007157325744629
    10. '    ' → logprob: -9.257157325744629

Token 204: ' problème' (ID: 35630)
  Prédit: ' mieux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mieux' → logprob: -1.0525166988372803
    2. ' problème' → logprob: -1.5525166988372803
    3. 'pro' → logprob: -1.8025166988372803
    4. ' besoin' → logprob: -2.0525166988372803
    5. ' input' → logprob: -3.9275166988372803
    6. ' sys' → logprob: -4.302516937255859
    7. 'plus' → logprob: -4.302516937255859
    8. ' pro' → logprob: -4.802516937255859
    9. 'input' → logprob: -5.177516937255859
    10. ' probl' → logprob: -5.302516937255859

Token 205: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006997627671808004
    2. ',' → logprob: -5.131997585296631
    3. ':' → logprob: -8.381998062133789
    4. '    
' → logprob: -8.381998062133789
    5. ' ,' → logprob: -8.506998062133789
    6. 'import' → logprob: -9.506998062133789
    7. '    ' → logprob: -9.756998062133789
    8. '       ' → logprob: -10.256998062133789
    9. ' :' → logprob: -10.256998062133789
    10. ' ' → logprob: -10.631998062133789

Token 206: ' le' (ID: 505)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.2338152974843979
    2. 'max' → logprob: -1.608815312385559
    3. '   ' → logprob: -5.4838151931762695
    4. ' primes' → logprob: -6.7338151931762695
    5. 'import' → logprob: -6.9838151931762695
    6. ' import' → logprob: -7.7338151931762695
    7. ' sieve' → logprob: -7.7338151931762695
    8. 'pr' → logprob: -7.9838151931762695
    9. ' input' → logprob: -9.10881519317627
    10. 'for' → logprob: -9.23381519317627

Token 207: ' maximum' (ID: 10562)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.24900545179843903
    2. ' max' → logprob: -1.6240054368972778
    3. 'import' → logprob: -4.749005317687988
    4. '   ' → logprob: -5.374005317687988
    5. ' input' → logprob: -5.999005317687988
    6. 'for' → logprob: -6.124005317687988
    7. 'while' → logprob: -6.499005317687988
    8. 'input' → logprob: -6.749005317687988
    9. ' for' → logprob: -6.999005317687988
    10. ' while' → logprob: -7.499005317687988

Token 208: ' ' (ID: 220)
  Prédit: '_n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.6959330439567566
    2. '_input' → logprob: -0.9459330439567566
    3. ' =' → logprob: -3.1959331035614014
    4. '_possible' → logprob: -3.4459331035614014
    5. 'n' → logprob: -4.695932865142822
    6. '=' → logprob: -5.195932865142822
    7. 'input' → logprob: -5.695932865142822
    8. '_' → logprob: -5.695932865142822
    9. '_limit' → logprob: -5.695932865142822
    10. '_max' → logprob: -5.945932865142822

Token 209: '2' (ID: 17)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.608458399772644
    2. '_n' → logprob: -1.358458399772644
    3. '=' → logprob: -2.4834585189819336
    4. '_input' → logprob: -3.2334585189819336
    5. ' =' → logprob: -3.4834585189819336
    6. 'input' → logprob: -3.9834585189819336
    7. 'des' → logprob: -4.983458518981934
    8. '_possible' → logprob: -4.983458518981934
    9. 'max' → logprob: -5.983458518981934
    10. 'est' → logprob: -6.108458518981934

Token 210: '*n' (ID: 58470)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6270240545272827
    2. '*n' → logprob: -1.8770240545272827
    3. ' *' → logprob: -2.0020241737365723
    4. '*' → logprob: -2.5020241737365723
    5. '_n' → logprob: -3.3770241737365723
    6. ' n' → logprob: -4.002024173736572
    7. '   ' → logprob: -4.502024173736572
    8. '_' → logprob: -4.502024173736572
    9. ' =' → logprob: -4.877024173736572
    10. 'max' → logprob: -5.252024173736572

Token 211: ' peut' (ID: 9216)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' possible' → logprob: -1.2111496925354004
    2. 'max' → logprob: -1.3361496925354004
    3. ' est' → logprob: -2.4611496925354004
    4. ' max' → logprob: -2.9611496925354004
    5. ' =' → logprob: -3.0861496925354004
    6. 'possible' → logprob: -3.3361496925354004
    7. ' doit' → logprob: -3.5861496925354004
    8. ' sera' → logprob: -3.7111496925354004
    9. '   ' → logprob: -3.9611496925354004
    10. ' à' → logprob: -4.0861496925354

Token 212: ' être' (ID: 9104)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 213: ' jusqu' (ID: 21961)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.4153066873550415
    2. '100' → logprob: -1.9153066873550415
    3. '10' → logprob: -2.665306568145752
    4. '2' → logprob: -3.165306568145752
    5. 'jus' → logprob: -3.540306568145752
    6. ' ' → logprob: -4.540306568145752
    7. '0' → logprob: -4.665306568145752
    8. 'au' → logprob: -4.665306568145752
    9. 'tr' → logprob: -5.665306568145752
    10. ' jusqu' → logprob: -6.040306568145752

Token 214: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.0031717719975858927
    2. 'à' → logprob: -5.878171920776367
    3. '’à' → logprob: -8.753171920776367
    4. ' à' → logprob: -9.503171920776367
    5. ''au' → logprob: -9.753171920776367
    6. '   ' → logprob: -10.378171920776367
    7. '=' → logprob: -11.128171920776367
    8. ''' → logprob: -11.128171920776367
    9. 'a' → logprob: -11.878171920776367
    10. 'au' → logprob: -12.878171920776367

Token 215: ' ' (ID: 220)
  Prédit: '123'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '123' → logprob: -0.8480286598205566
    2. '100' → logprob: -1.0980286598205566
    3. '246' → logprob: -2.2230286598205566
    4. '10' → logprob: -2.4730286598205566
    5. '200' → logprob: -4.098028659820557
    6. '150' → logprob: -4.598028659820557
    7. '500' → logprob: -4.723028659820557
    8. '124' → logprob: -6.348028659820557
    9. '250' → logprob: -6.473028659820557
    10. '120' → logprob: -6.598028659820557

Token 216: '2' (ID: 17)
  Prédit: '246'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '246' → logprob: -0.7880313396453857
    2. '100' → logprob: -1.6630313396453857
    3. '200' → logprob: -2.0380313396453857
    4. '10' → logprob: -2.1630313396453857
    5. '250' → logprob: -3.4130313396453857
    6. '2' → logprob: -3.5380313396453857
    7. '123' → logprob: -3.7880313396453857
    8. '500' → logprob: -4.538031578063965
    9. '247' → logprob: -4.538031578063965
    10. '245' → logprob: -6.663031578063965

Token 217: '*' (ID: 9)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.09592292457818985
    2. '*' → logprob: -3.0959229469299316
    3. ' *' → logprob: -3.7209229469299316
    4. '100' → logprob: -5.345922946929932
    5. '10' → logprob: -5.470922946929932
    6. ' ' → logprob: -5.720922946929932
    7. '500' → logprob: -5.845922946929932
    8. '   ' → logprob: -6.220922946929932
    9. '0' → logprob: -7.095922946929932
    10. ',' → logprob: -7.220922946929932

Token 218: '123' (ID: 7633)
  Prédit: '123'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '123' → logprob: -0.31484466791152954
    2. '10' → logprob: -1.4398446083068848
    3. '100' → logprob: -4.064844608306885
    4. '150' → logprob: -4.939844608306885
    5. ' ' → logprob: -6.064844608306885
    6. '1' → logprob: -6.189844608306885
    7. '246' → logprob: -6.814844608306885
    8. '400' → logprob: -7.189844608306885
    9. '250' → logprob: -7.939844608306885
    10. '200' → logprob: -8.314845085144043

Token 219: '456' (ID: 19354)
  Prédit: '456'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '456' → logprob: -0.021940024569630623
    2. '4' → logprob: -4.146940231323242
    3. '457' → logprob: -5.771940231323242
    4. '45' → logprob: -6.146940231323242
    5. '7' → logprob: -8.646940231323242
    6. '5' → logprob: -9.521940231323242
    7. '0' → logprob: -9.646940231323242
    8. '450' → logprob: -9.896940231323242
    9. '*' → logprob: -10.146940231323242
    10. '400' → logprob: -10.271940231323242

Token 220: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32661202549934387
    2. '7' → logprob: -1.9516119956970215
    3. '
' → logprob: -3.2016119956970215
    4. '    
' → logprob: -3.2016119956970215
    5. ',' → logprob: -3.5766119956970215
    6. '0' → logprob: -4.3266119956970215
    7. '.' → logprob: -5.7016119956970215
    8. '  
' → logprob: -6.3266119956970215
    9. '   
' → logprob: -6.7016119956970215
    10. '4' → logprob: -7.0766119956970215

Token 221: ' ' (ID: 220)
  Prédit: '246'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '246' → logprob: -0.011062555946409702
    2. '247' → logprob: -4.5110626220703125
    3. ' ' → logprob: -11.511062622070312
    4. '2' → logprob: -13.136062622070312
    5. '250' → logprob: -14.136062622070312
    6. '`' → logprob: -14.386062622070312
    7. '248' → logprob: -14.886062622070312
    8. '  ' → logprob: -15.386062622070312
    9. '```' → logprob: -15.636062622070312
    10. '24' → logprob: -15.761062622070312

Token 222: '246' (ID: 23488)
  Prédit: '246'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '246' → logprob: -0.0024780353996902704
    2. '247' → logprob: -6.002478122711182
    3. ' ' → logprob: -13.877477645874023
    4. '2' → logprob: -14.502477645874023
    5. '250' → logprob: -14.877477645874023
    6. '248' → logprob: -15.877477645874023
    7. '24' → logprob: -16.252477645874023
    8. '`' → logprob: -16.377477645874023
    9. '```' → logprob: -16.752477645874023
    10. '  ' → logprob: -16.877477645874023

Token 223: '912' (ID: 43023)
  Prédit: '912'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '912' → logprob: -0.04330722987651825
    2. '913' → logprob: -3.168307304382324
    3. '911' → logprob: -9.168307304382324
    4. '456' → logprob: -9.668307304382324
    5. '910' → logprob: -9.793307304382324
    6. '914' → logprob: -10.043307304382324
    7. '457' → logprob: -10.543307304382324
    8. '916' → logprob: -12.543307304382324
    9. '915' → logprob: -13.043307304382324
    10. '907' → logprob: -13.293307304382324

Token 224: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6794148683547974
    2. '
' → logprob: -0.8044148683547974
    3. '    
' → logprob: -3.304414749145508
    4. 'max' → logprob: -5.429414749145508
    5. ' max' → logprob: -6.679414749145508
    6. '  
' → logprob: -7.054414749145508
    7. ',' → logprob: -7.179414749145508
    8. '   
' → logprob: -7.554414749145508
    9. '
' → logprob: -7.804414749145508
    10. '

' → logprob: -8.804414749145508

Token 225: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010390433482825756
    2. '    
' → logprob: -5.260390281677246
    3. '
' → logprob: -5.760390281677246
    4. 'max' → logprob: -6.385390281677246
    5. ' max' → logprob: -8.635390281677246
    6. '
' → logprob: -10.885390281677246
    7. '   
' → logprob: -11.010390281677246
    8. '  
' → logprob: -11.385390281677246
    9. 'while' → logprob: -11.385390281677246
    10. ' while' → logprob: -11.885390281677246

Token 226: ' MAX' (ID: 16960)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.07510419934988022
    2. ' max' → logprob: -2.825104236602783
    3. '   ' → logprob: -4.700104236602783
    4. 'MAX' (adapté à ' MAX') → logprob: -5.950104236602783
    5. 'limit' → logprob: -7.325104236602783
    6. 'import' → logprob: -7.825104236602783
    7. ' MAX' → logprob: -9.450103759765625
    8. 'pr' → logprob: -9.950103759765625
    9. ' limit' → logprob: -10.075103759765625
    10. 's' → logprob: -10.325103759765625

Token 227: '_N' (ID: 3080)
  Prédit: '_LIMIT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_LIMIT' → logprob: -0.00018530222587287426
    2. ' =' → logprob: -9.500185012817383
    3. '_' → logprob: -10.000185012817383
    4. '_limit' → logprob: -10.375185012817383
    5. '_MAX' → logprob: -11.000185012817383
    6. '=' → logprob: -11.500185012817383
    7. '_SIZE' → logprob: -13.125185012817383
    8. '=_' → logprob: -13.500185012817383
    9. '_N' → logprob: -14.500185012817383
    10. ' _' → logprob: -14.500185012817383

Token 228: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12695415318012238
    2. '=' → logprob: -2.1269540786743164
    3. '   ' → logprob: -11.126954078674316
    4. ' ' → logprob: -11.876954078674316
    5. '  ' → logprob: -13.626954078674316
    6. '_' → logprob: -13.626954078674316
    7. '    ' → logprob: -14.376954078674316
    8. ',' → logprob: -15.001954078674316
    9. '_SIZE' → logprob: -15.751954078674316
    10. '_MAX' → logprob: -15.876954078674316

Token 229: ' ' (ID: 220)
  Prédit: '246'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '246' → logprob: -0.006727803498506546
    2. ' ' → logprob: -5.006727695465088
    3. '247' → logprob: -11.756728172302246
    4. '2' → logprob: -13.131728172302246
    5. '245' → logprob: -13.631728172302246
    6. '249' → logprob: -15.131728172302246
    7. '   ' → logprob: -15.506728172302246
    8. '256' → logprob: -15.506728172302246
    9. '  ' → logprob: -15.506728172302246
    10. '248' → logprob: -16.00672721862793

Token 230: '246' (ID: 23488)
  Prédit: '246'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '246' → logprob: -6.456358823925257e-05
    2. '2' → logprob: -10.750064849853516
    3. '123' → logprob: -10.750064849853516
    4. '247' → logprob: -11.000064849853516
    5. ' ' → logprob: -12.625064849853516
    6. '245' → logprob: -14.000064849853516
    7. '250' → logprob: -15.250064849853516
    8. '249' → logprob: -15.375064849853516
    9. '243' → logprob: -16.250064849853516
    10. '248' → logprob: -16.250064849853516

Token 231: '912' (ID: 43023)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 232: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.00832555815577507
    2. '   ' → logprob: -5.758325576782227
    3. '
' → logprob: -6.258325576782227
    4. '    
' → logprob: -6.508325576782227
    5. 's' → logprob: -6.758325576782227
    6. '

' → logprob: -8.133325576782227
    7. '  
' → logprob: -9.883325576782227
    8. ' sieve' → logprob: -9.883325576782227
    9. '
    
' → logprob: -10.008325576782227
    10. '   
' → logprob: -10.258325576782227

Token 233: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043853312730789185
    2. 's' → logprob: -3.543853282928467
    3. 'pr' → logprob: -4.918853282928467
    4. ' sieve' → logprob: -5.918853282928467
    5. 'prime' → logprob: -6.168853282928467
    6. '    
' → logprob: -6.543853282928467
    7. ' primes' → logprob: -9.293853759765625
    8. '
' → logprob: -9.293853759765625
    9. 'is' → logprob: -9.543853759765625
    10. '  ' → logprob: -10.043853759765625

Token 234: ' #' (ID: 1069)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.5547640323638916
    2. 'prime' → logprob: -1.0547640323638916
    3. 'is' → logprob: -2.6797640323638916
    4. 's' → logprob: -4.8047637939453125
    5. '   ' → logprob: -7.9297637939453125
    6. ' primes' → logprob: -8.929763793945312
    7. 'prim' → logprob: -9.554763793945312
    8. 'prem' → logprob: -9.804763793945312
    9. 'primer' → logprob: -10.679763793945312
    10. '#' (adapté à ' #') → logprob: -11.054763793945312

Token 235: ' Pré' (ID: 86400)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.37694743275642395
    2. 'prime' → logprob: -1.5019474029541016
    3. 'is' → logprob: -2.5019474029541016
    4. 's' → logprob: -4.751947402954102
    5. ' primes' → logprob: -8.501947402954102
    6. '   ' → logprob: -9.126947402954102
    7. 'pre' → logprob: -9.251947402954102
    8. 'prem' → logprob: -9.376947402954102
    9. 'primer' → logprob: -10.001947402954102
    10. 'prim' → logprob: -10.126947402954102

Token 236: '-cal' (ID: 84920)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.771967887878418
    2. 'cal' → logprob: -2.021967887878418
    3. 's' → logprob: -2.396967887878418
    4. 'comput' → logprob: -2.646967887878418
    5. 'computed' → logprob: -2.896967887878418
    6. 'c' → logprob: -3.646967887878418
    7. 'com' → logprob: -3.771967887878418
    8. 'fix' → logprob: -3.896967887878418
    9. 'parer' → logprob: -3.896967887878418
    10. '-cal' → logprob: -4.021967887878418

Token 237: 'cul' (ID: 2885)
  Prédit: 'ul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -0.8369208574295044
    2. 'cul' → logprob: -1.3369208574295044
    3. 'om' → logprob: -1.5869208574295044
    4. 'al' → logprob: -3.336920738220215
    5. 'ulé' → logprob: -3.711920738220215
    6. 'c' → logprob: -4.711920738220215
    7. 'culation' → logprob: -4.711920738220215
    8. 'culated' → logprob: -5.086920738220215
    9. 'ulation' → logprob: -5.211920738220215
    10. 'u' → logprob: -5.711920738220215

Token 238: ' des' (ID: 731)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -1.108034372329712
    2. 's' → logprob: -1.483034372329712
    3. ' des' → logprob: -1.733034372329712
    4. ' sieve' → logprob: -2.983034372329712
    5. 'des' → logprob: -2.983034372329712
    6. 'pr' → logprob: -3.733034372329712
    7. '   ' → logprob: -3.983034372329712
    8. ' de' → logprob: -3.983034372329712
    9. ' =' → logprob: -4.233034133911133
    10. ' primes' → logprob: -4.233034133911133

Token 239: ' nombres' (ID: 76205)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.8927068710327148
    2. 'pr' → logprob: -1.3927068710327148
    3. 'cr' → logprob: -2.517706871032715
    4. 'n' → logprob: -2.517706871032715
    5. 'is' → logprob: -2.517706871032715
    6. ' cr' → logprob: -3.017706871032715
    7. ' premiers' → logprob: -4.017706871032715
    8. 'crib' → logprob: -4.142706871032715
    9. 's' → logprob: -4.517706871032715
    10. 'prime' → logprob: -6.642706871032715

Token 240: ' premiers' (ID: 59140)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.0074279652908444405
    2. ' premiers' → logprob: -5.132428169250488
    3. 'pr' → logprob: -6.632428169250488
    4. '   ' → logprob: -9.632428169250488
    5. '_' → logprob: -9.882428169250488
    6. '_p' → logprob: -10.132428169250488
    7. ' ' → logprob: -11.757428169250488
    8. 'prim' → logprob: -13.132428169250488
    9. ' ' → logprob: -13.257428169250488
    10. '_pr' → logprob: -13.382428169250488

Token 241: ' jusqu' (ID: 21961)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.099521517753601
    2. ' sieve' → logprob: -1.099521517753601
    3. ' primes' → logprob: -1.724521517753601
    4. 's' → logprob: -2.9745216369628906
    5. 'pr' → logprob: -3.3495216369628906
    6. ' prime' → logprob: -3.5995216369628906
    7. 'prime' → logprob: -3.7245216369628906
    8. ' =' → logprob: -4.599521636962891
    9. ',' → logprob: -6.474521636962891
    10. ' is' → logprob: -6.724521636962891

Token 242: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.023287750780582428
    2. 'à' → logprob: -4.273287773132324
    3. ''au' → logprob: -4.773287773132324
    4. 'au' → logprob: -7.648287773132324
    5. '’à' → logprob: -8.898287773132324
    6. '   ' → logprob: -12.148287773132324
    7. ' à' → logprob: -12.523287773132324
    8. ''' → logprob: -12.773287773132324
    9. '’au' → logprob: -13.273287773132324
    10. 'a' → logprob: -13.898287773132324

Token 243: ' ' (ID: 220)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.0019288709154352546
    2. ' MAX' → logprob: -6.251928806304932
    3. '(MAX' → logprob: -15.37692928314209
    4. ' ' → logprob: -16.501928329467773
    5. '2' → logprob: -17.876928329467773
    6. '_MAX' → logprob: -18.126928329467773
    7. '246' → logprob: -18.251928329467773
    8. 'M' → logprob: -18.376928329467773
    9. '[MAX' → logprob: -18.751928329467773
    10. 'Max' → logprob: -18.876928329467773

Token 244: '2' (ID: 17)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -1.3856492842023727e-06
    2. ' MAX' → logprob: -13.625000953674316
    3. '(MAX' → logprob: -16.625001907348633
    4. '2' → logprob: -18.125001907348633
    5. '246' → logprob: -18.375001907348633
    6. 'MA' → logprob: -18.875001907348633
    7. 'M' → logprob: -19.625001907348633
    8. '_MAX' → logprob: -19.625001907348633
    9. 'MIN' → logprob: -20.000001907348633
    10. ' ' → logprob: -20.000001907348633

Token 245: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.07146633416414261
    2. ' *' → logprob: -2.6964664459228516
    3. 'MAX' → logprob: -7.071466445922852
    4. '_MAX' → logprob: -7.446466445922852
    5. ' ' → logprob: -10.321466445922852
    6. '   ' → logprob: -11.196466445922852
    7. '_' → logprob: -11.321466445922852
    8. 'n' → logprob: -11.821466445922852
    9. '*N' → logprob: -12.321466445922852
    10. '
' → logprob: -12.821466445922852

Token 246: '123' (ID: 7633)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 247: '456' (ID: 19354)
  Prédit: '456'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '456' → logprob: -9.729906196298543e-06
    2. '457' → logprob: -12.000009536743164
    3. '4' → logprob: -13.125009536743164
    4. '45' → logprob: -15.000009536743164
    5. ' ' → logprob: -15.437509536743164
    6. 'MAX' → logprob: -16.250009536743164
    7. '   ' → logprob: -16.375009536743164
    8. 'import' → logprob: -16.437509536743164
    9. ',' → logprob: -16.500009536743164
    10. '  ' → logprob: -16.562509536743164

Token 248: ' avec' (ID: 3937)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -1.437309741973877
    2. ' sieve' → logprob: -1.562309741973877
    3. ' primes' → logprob: -1.812309741973877
    4. 's' → logprob: -1.937309741973877
    5. 'prime' → logprob: -2.312309741973877
    6. '   ' → logprob: -2.312309741973877
    7. ' prime' → logprob: -3.812309741973877
    8. ',' → logprob: -5.437309741973877
    9. ' =' → logprob: -5.937309741973877
    10. ' ' → logprob: -6.187309741973877

Token 249: ' le' (ID: 505)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.31456008553504944
    2. 'le' → logprob: -1.939560055732727
    3. ' sieve' → logprob: -2.5645601749420166
    4. 'la' → logprob: -3.3145601749420166
    5. ' la' → logprob: -4.8145599365234375
    6. ' le' → logprob: -5.4395599365234375
    7. 'un' → logprob: -9.314559936523438
    8. 'une' → logprob: -9.814559936523438
    9. ' une' → logprob: -10.189559936523438
    10. 'l' → logprob: -10.814559936523438

Token 250: ' cr' (ID: 1769)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.029404906556010246
    2. ' sieve' → logprob: -3.654404878616333
    3. '=' → logprob: -6.529405117034912
    4. ' s' → logprob: -8.279404640197754
    5. ' sie' → logprob: -8.279404640197754
    6. 'max' → logprob: -8.529404640197754
    7. 'sie' → logprob: -8.654404640197754
    8. ' =' → logprob: -8.654404640197754
    9. '=s' → logprob: -8.779404640197754
    10. 'cr' → logprob: -9.654404640197754

Token 251: 'ible' (ID: 1430)
  Prédit: 'ible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ible' → logprob: -0.0011822503292933106
    2. 'ib' → logprob: -7.3761820793151855
    3. 'ibl' → logprob: -8.876182556152344
    4. 'i' → logprob: -9.376182556152344
    5. 'ibe' → logprob: -9.501182556152344
    6. 'ibele' → logprob: -9.501182556152344
    7. 'ibble' → logprob: -10.751182556152344
    8. 'ibile' → logprob: -10.751182556152344
    9. '   ' → logprob: -10.876182556152344
    10. ' ' → logprob: -11.126182556152344

Token 252: ' d' (ID: 272)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.031072482466697693
    2. '_pr' → logprob: -4.281072616577148
    3. 's' → logprob: -5.281072616577148
    4. '=' → logprob: -5.531072616577148
    5. 'pr' → logprob: -6.406072616577148
    6. '_prime' → logprob: -6.656072616577148
    7. '(pr' → logprob: -6.906072616577148
    8. '   ' → logprob: -7.156072616577148
    9. '_' → logprob: -7.281072616577148
    10. '_s' → logprob: -7.281072616577148

Token 253: ''É' (ID: 87944)
  Prédit: ''É'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''É' → logprob: -0.31580913066864014
    2. 'É' → logprob: -1.3158091306686401
    3. '’É' → logprob: -6.94080924987793
    4. 'E' → logprob: -7.44080924987793
    5. ' É' → logprob: -8.69080924987793
    6. ''' → logprob: -8.81580924987793
    7. ''é' → logprob: -9.06580924987793
    8. ''E' → logprob: -9.19080924987793
    9. 'erat' → logprob: -9.31580924987793
    10. 'È' → logprob: -9.69080924987793

Token 254: 'rat' (ID: 11990)
  Prédit: 'rat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rat' → logprob: -0.008735242299735546
    2. 'r' → logprob: -4.758735179901123
    3. 'rats' → logprob: -10.383735656738281
    4. 'рат' → logprob: -10.633735656738281
    5. 'rate' → logprob: -12.008735656738281
    6. 'rsat' → logprob: -12.133735656738281
    7. 'raf' → logprob: -12.383735656738281
    8. 'rast' → logprob: -12.383735656738281
    9. 'rà' → logprob: -12.508735656738281
    10. 'rá' → logprob: -12.633735656738281

Token 255: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.00012368128227535635
    2. 'st' → logprob: -10.125123977661133
    3. 'orst' → logprob: -10.125123977661133
    4. 'oth' → logprob: -10.875123977661133
    5. 'rost' → logprob: -12.125123977661133
    6. 'oste' → logprob: -12.250123977661133
    7. 'ост' → logprob: -12.625123977661133
    8. 'os' → logprob: -12.750123977661133
    9. ' ost' → logprob: -13.500123977661133
    10. 'or' → logprob: -13.500123977661133

Token 256: 'h' (ID: 71)
  Prédit: 'ène'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ène' → logprob: -0.2172485589981079
    2. 'h' → logprob: -1.967248558998108
    3. 'th' → logprob: -3.0922484397888184
    4. 'st' → logprob: -5.217248439788818
    5. 't' → logprob: -7.342248439788818
    6. 'e' → logprob: -7.467248439788818
    7. 's' → logprob: -7.967248439788818
    8. 'ost' → logprob: -7.967248439788818
    9. 'ème' → logprob: -7.967248439788818
    10. 'ene' → logprob: -8.342248916625977

Token 257: 'ène' (ID: 22902)
  Prédit: 'ène'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ène' → logprob: -0.02917499840259552
    2. 'ost' → logprob: -4.7791748046875
    3. 'ème' → logprob: -5.4041748046875
    4. 'l' → logprob: -5.4041748046875
    5. 'st' → logprob: -5.7791748046875
    6. 'h' → logprob: -6.2791748046875
    7. 't' → logprob: -7.0291748046875
    8. 'th' → logprob: -7.4041748046875
    9. 'est' → logprob: -7.6541748046875
    10. 'r' → logprob: -7.7791748046875

Token 258: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0333232544362545
    2. ' sieve' → logprob: -4.283323287963867
    3. 's' → logprob: -5.033323287963867
    4. 'pr' → logprob: -5.158323287963867
    5. 'prime' → logprob: -5.533323287963867
    6. ' primes' → logprob: -6.783323287963867
    7. ' prime' → logprob: -7.283323287963867
    8. ' =' → logprob: -8.408323287963867
    9. '(pr' → logprob: -8.783323287963867
    10. '	pr' → logprob: -9.283323287963867

Token 259: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002021070569753647
    2. 'pr' → logprob: -6.752020835876465
    3. 'prime' → logprob: -8.127020835876465
    4. ' primes' → logprob: -8.377020835876465
    5. 's' → logprob: -8.752020835876465
    6. ' sieve' → logprob: -9.502020835876465
    7. 'is' → logprob: -10.877020835876465
    8. '	pr' → logprob: -10.877020835876465
    9. ' prime' → logprob: -11.002020835876465
    10. '    
' → logprob: -11.377020835876465

Token 260: ' primes' (ID: 104042)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.5007659792900085
    2. 'prime' → logprob: -1.0007660388946533
    3. 'is' → logprob: -3.7507660388946533
    4. ' primes' → logprob: -6.250765800476074
    5. 's' → logprob: -7.625765800476074
    6. ' prime' → logprob: -8.375765800476074
    7. '   ' → logprob: -9.500765800476074
    8. ' is' → logprob: -10.250765800476074
    9. 'prim' → logprob: -10.250765800476074
    10. 'primer' → logprob: -11.250765800476074

Token 261: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14271070063114166
    2. '=' → logprob: -2.0177106857299805
    3. '_' → logprob: -10.76771068572998
    4. 's' → logprob: -11.64271068572998
    5. '_s' → logprob: -13.51771068572998
    6. '   ' → logprob: -14.39271068572998
    7. '＝' → logprob: -14.51771068572998
    8. '=s' → logprob: -14.64271068572998
    9. ' ' → logprob: -14.64271068572998
    10. '	' → logprob: -15.14271068572998

Token 262: ' sieve' (ID: 142781)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03366287425160408
    2. ' sieve' → logprob: -3.408662796020508
    3. '[s' → logprob: -11.408662796020508
    4. 'sie' → logprob: -12.783662796020508
    5. '	s' → logprob: -14.158662796020508
    6. ' ' → logprob: -14.533662796020508
    7. ' [' → logprob: -15.033662796020508
    8. ' s' → logprob: -15.158662796020508
    9. '(s' → logprob: -15.283662796020508
    10. '   ' → logprob: -15.533662796020508

Token 263: '(MAX' (ID: 129209)
  Prédit: '(MAX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(MAX' → logprob: -0.0007125511183403432
    2. '(' → logprob: -7.2507123947143555
    3. '(M' → logprob: -14.500712394714355
    4. ' (' → logprob: -14.625712394714355
    5. 'MAX' → logprob: -14.750712394714355
    6. '(
' → logprob: -14.875712394714355
    7. '(Max' → logprob: -15.000712394714355
    8. '(max' → logprob: -15.375712394714355
    9. '(NUM' → logprob: -15.625712394714355
    10. '[MAX' → logprob: -16.250713348388672

Token 264: '_N' (ID: 3080)
  Prédit: '_N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_N' → logprob: -1.1472419600977446e-06
    2. 'N' → logprob: -14.750000953674316
    3. '_' → logprob: -14.875000953674316
    4. '_n' → logprob: -16.000001907348633
    5. ')' → logprob: -16.625001907348633
    6. '_MAX' → logprob: -16.625001907348633
    7. ' _' → logprob: -18.125001907348633
    8. ' ' → logprob: -19.000001907348633
    9. '```' → logprob: -19.000001907348633
    10. '_NV' → logprob: -19.125001907348633

Token 265: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.842555426876061e-06
    2. ')
' → logprob: -12.750004768371582
    3. ' )' → logprob: -13.625004768371582
    4. ')

' → logprob: -14.250004768371582
    5. ')`' → logprob: -17.2500057220459
    6. '))' → logprob: -17.7500057220459
    7. ')
' → logprob: -18.0000057220459
    8. ')

' → logprob: -18.2500057220459
    9. '   ' → logprob: -18.3750057220459
    10. ')#' → logprob: -19.1250057220459

Token 266: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09555331617593765
    2. 'for' → logprob: -3.470553398132324
    3. '
' → logprob: -3.595553398132324
    4. 'while' → logprob: -3.595553398132324
    5. ' while' → logprob: -6.220553398132324
    6. ' for' → logprob: -6.345553398132324
    7. '    
' → logprob: -6.595553398132324
    8. '  
' → logprob: -11.470553398132324
    9. ' 
' → logprob: -12.345553398132324
    10. '
' → logprob: -12.595553398132324

Token 267: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0002111694193445146
    2. 'while' → logprob: -8.875210762023926
    3. '   ' → logprob: -10.000210762023926
    4. ' for' → logprob: -10.625210762023926
    5. 'import' → logprob: -13.625210762023926
    6. 'lines' → logprob: -15.875210762023926
    7. '    
' → logprob: -16.250211715698242
    8. '
' → logprob: -16.750211715698242
    9. 'try' → logprob: -17.250211715698242
    10. '	for' → logprob: -17.625211715698242

Token 268: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.001276545925065875
    2. ' ligne' → logprob: -7.25127649307251
    3. 'line' → logprob: -7.50127649307251
    4. '	line' → logprob: -12.001276969909668
    5. ' n' → logprob: -12.626276969909668
    6. 'ligne' → logprob: -12.876276969909668
    7. 'n' → logprob: -14.126276969909668
    8. ' linha' → logprob: -15.001276969909668
    9. ' lijn' → logprob: -15.501276969909668
    10. '```' → logprob: -15.501276969909668

Token 269: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006784170400351286
    2. 'in' → logprob: -5.006783962249756
    3. ' ' → logprob: -10.631784439086914
    4. 's' → logprob: -10.881784439086914
    5. '_' → logprob: -11.256784439086914
    6. '	in' → logprob: -13.256784439086914
    7. ' ' → logprob: -13.631784439086914
    8. 'de' → logprob: -13.631784439086914
    9. '_in' → logprob: -13.881784439086914
    10. 'en' → logprob: -14.131784439086914

Token 270: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00671584764495492
    2. ' sys' → logprob: -5.006715774536133
    3. '=sys' → logprob: -15.131715774536133
    4. '	sys' → logprob: -15.756715774536133
    5. '(sys' → logprob: -16.381715774536133
    6. 'stdin' → logprob: -18.881715774536133
    7. 'iter' → logprob: -19.631715774536133
    8. 'import' → logprob: -21.131715774536133
    9. '.sys' → logprob: -21.256715774536133
    10. '```' → logprob: -21.256715774536133

Token 271: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0005663761985488236
    2. '.' → logprob: -7.625566482543945
    3. '.readline' → logprob: -9.625566482543945
    4. 'stdin' → logprob: -11.625566482543945
    5. '.stdout' → logprob: -13.500566482543945
    6. '(stdin' → logprob: -13.750566482543945
    7. ' stdin' → logprob: -14.875566482543945
    8. '.argv' → logprob: -14.875566482543945
    9. '.std' → logprob: -15.875566482543945
    10. ' .' → logprob: -17.000566482543945

Token 272: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011303281411528587
    2. '.strip' → logprob: -5.011303424835205
    3. ':
' → logprob: -6.136303424835205
    4. ' in' → logprob: -7.386303424835205
    5. '():' → logprob: -7.636303424835205
    6. '.rstrip' → logprob: -7.636303424835205
    7. '.readline' → logprob: -8.261302947998047
    8. '():
' → logprob: -8.886302947998047
    9. '.' → logprob: -9.011302947998047
    10. 'in' → logprob: -9.886302947998047

Token 273: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00409502349793911
    2. '   ' → logprob: -5.879095077514648
    3. ':' → logprob: -7.504095077514648
    4. '    ' → logprob: -7.879095077514648
    5. '        
' → logprob: -9.379095077514648
    6. '.strip' → logprob: -10.129095077514648
    7. '    
' → logprob: -10.129095077514648
    8. '.rstrip' → logprob: -10.129095077514648
    9. '      ' → logprob: -10.754095077514648
    10. ' line' → logprob: -10.879095077514648

Token 274: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.006475202739238739
    2. '       ' → logprob: -5.25647497177124
    3. ' n' → logprob: -6.88147497177124
    4. '   ' → logprob: -8.631475448608398
    5. 'line' → logprob: -10.506475448608398
    6. '	n' → logprob: -11.881475448608398
    7. 'num' → logprob: -14.631475448608398
    8. '           ' → logprob: -15.381475448608398
    9. ' line' → logprob: -15.506475448608398
    10. 'number' → logprob: -16.5064754486084

Token 275: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196891888976097
    2. ' =' → logprob: -2.8119688034057617
    3. '=int' → logprob: -14.686968803405762
    4. ' ' → logprob: -14.936968803405762
    5. ' =
' → logprob: -15.811968803405762
    6. '=
' → logprob: -15.811968803405762
    7. '=

' → logprob: -16.311969757080078
    8. '=line' → logprob: -16.686969757080078
    9. '＝' → logprob: -17.686969757080078
    10. ')' → logprob: -18.686969757080078

Token 276: ' line' (ID: 2543)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.4021237802808173e-05
    2. ' int' → logprob: -11.250014305114746
    3. 'line' → logprob: -13.875014305114746
    4. 'in' → logprob: -18.87501335144043
    5. '(int' → logprob: -20.37501335144043
    6. '=int' → logprob: -20.75001335144043
    7. '	int' → logprob: -21.37501335144043
    8. 'i' → logprob: -21.50001335144043
    9. '   ' → logprob: -22.25001335144043
    10. ' line' → logprob: -22.50001335144043

Token 277: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.016876067966222763
    2. '.rstrip' → logprob: -4.141876220703125
    3. '.' → logprob: -7.391876220703125
    4. 'strip' → logprob: -8.516876220703125
    5. '.readline' → logprob: -11.016876220703125
    6. 'rstrip' → logprob: -12.266876220703125
    7. '.split' → logprob: -13.891876220703125
    8. '=' → logprob: -13.891876220703125
    9. ' .' → logprob: -14.641876220703125
    10. '_strip' → logprob: -14.891876220703125

Token 278: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0006566775846295059
    2. '()
' → logprob: -7.375656604766846
    3. ')' → logprob: -11.875657081604004
    4. '(' → logprob: -12.000657081604004
    5. '())' → logprob: -12.250657081604004
    6. '()

' → logprob: -12.250657081604004
    7. '()
' → logprob: -13.375657081604004
    8. '()\' → logprob: -13.750657081604004
    9. '()</' → logprob: -13.875657081604004
    10. ' ()' → logprob: -14.000657081604004

Token 279: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2021193504333496
    2. 'if' → logprob: -1.8271193504333496
    3. '
' → logprob: -2.0771193504333496
    4. ' if' → logprob: -2.0771193504333496
    5. '        
' → logprob: -2.4521193504333496
    6. ' 
' → logprob: -3.0771193504333496
    7. ' =' → logprob: -3.8271193504333496
    8. '   ' → logprob: -3.8271193504333496
    9. ' ' → logprob: -3.9521193504333496
    10. '    
' → logprob: -4.20211935043335

Token 280: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16116878390312195
    2. ' if' → logprob: -1.9111688137054443
    3. '
' → logprob: -7.411168575286865
    4. '       ' → logprob: -8.286169052124023
    5. ' 
' → logprob: -9.661169052124023
    6. '        
' → logprob: -10.786169052124023
    7. '   ' → logprob: -14.661169052124023
    8. '	if' → logprob: -14.661169052124023
    9. '        ' → logprob: -15.161169052124023
    10. 'If' → logprob: -15.286169052124023

Token 281: ' n' (ID: 297)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.486961305141449
    2. ' n' → logprob: -0.986961305141449
    3. 'n' → logprob: -4.611961364746094
    4. 'not' → logprob: -5.861961364746094
    5. ' ' → logprob: -10.861961364746094
    6. ' ' → logprob: -13.111961364746094
    7. '	n' → logprob: -13.861961364746094
    8. 'n't' → logprob: -14.111961364746094
    9. ' n't' → logprob: -14.736961364746094
    10. ' н' → logprob: -15.861961364746094

Token 282: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.062170688062906265
    2. '==' → logprob: -2.8121707439422607
    3. '=' → logprob: -8.81217098236084
    4. ' =' → logprob: -9.93717098236084
    5. ' ===' → logprob: -13.68717098236084
    6. '()==' → logprob: -13.93717098236084
    7. ' ' → logprob: -14.06217098236084
    8. '=='' → logprob: -14.06217098236084
    9. ' =="' → logprob: -14.81217098236084
    10. '=="' → logprob: -14.93717098236084

Token 283: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.011080360971391201
    2. '"' → logprob: -4.511080265045166
    3. '0' → logprob: -10.886080741882324
    4. ' '' → logprob: -11.636080741882324
    5. '''' → logprob: -12.261080741882324
    6. '""' → logprob: -16.136079788208008
    7. ' "' → logprob: -17.136079788208008
    8. ' ' → logprob: -17.511079788208008
    9. ''''' → logprob: -17.636079788208008
    10. ''\' → logprob: -18.011079788208008

Token 284: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ''' → logprob: -16.75
    3. ' ' → logprob: -19.875
    4. '':' → logprob: -21.0
    5. '۰' → logprob: -21.375
    6. '０' → logprob: -22.75
    7. '"' → logprob: -23.0
    8. ''\' → logprob: -23.125
    9. '০' → logprob: -23.5
    10. '\n' → logprob: -23.5

Token 285: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.16067951917648315
    2. '':
' → logprob: -1.910679578781128
    3. ''' → logprob: -8.410679817199707
    4. '':
' → logprob: -9.160679817199707
    5. ':' → logprob: -9.285679817199707
    6. ':
' → logprob: -11.410679817199707
    7. '\n' → logprob: -11.785679817199707
    8. ''):
' → logprob: -12.035679817199707
    9. '":' → logprob: -12.535679817199707
    10. '':

' → logprob: -13.160679817199707

Token 286: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010259009432047606
    2. '       ' → logprob: -7.376025676727295
    3. ' break' → logprob: -8.126026153564453
    4. '		' → logprob: -10.376026153564453
    5. ':' → logprob: -10.626026153564453
    6. 'break' → logprob: -10.626026153564453
    7. '          ' → logprob: -12.126026153564453
    8. '	break' → logprob: -12.251026153564453
    9. '	       ' → logprob: -12.751026153564453
    10. '               ' → logprob: -12.751026153564453

Token 287: ' #' (ID: 1069)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.3311299979686737
    2. '           ' → logprob: -1.581130027770996
    3. ' break' → logprob: -2.581130027770996
    4. '       ' → logprob: -8.081130027770996
    5. '	break' → logprob: -9.706130027770996
    6. 'return' → logprob: -9.831130027770996
    7. '               ' → logprob: -10.706130027770996
    8. '
' → logprob: -12.206130027770996
    9. '		' → logprob: -13.206130027770996
    10. '_break' → logprob: -13.581130027770996

Token 288: ' Fin' (ID: 7772)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.024492356926202774
    2. ' break' → logprob: -3.7744922637939453
    3. '       ' → logprob: -7.024492263793945
    4. 'return' → logprob: -8.274492263793945
    5. '           ' → logprob: -9.274492263793945
    6. '	break' → logprob: -12.149492263793945
    7. 'br' → logprob: -14.274492263793945
    8. ' return' → logprob: -14.274492263793945
    9. 'Break' → logprob: -14.899492263793945
    10. 'b' → logprob: -15.399492263793945

Token 289: ' de' (ID: 334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00983436219394207
    2. '       ' → logprob: -5.759834289550781
    3. '               ' → logprob: -5.759834289550781
    4. '            ' → logprob: -6.384834289550781
    5. 'break' → logprob: -7.509834289550781
    6. '          ' → logprob: -7.884834289550781
    7. '   ' → logprob: -9.134834289550781
    8. '\n' → logprob: -9.259834289550781
    9. '    ' → logprob: -9.259834289550781
    10. ' break' → logprob: -9.384834289550781

Token 290: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9187232851982117
    2. 'programme' → logprob: -0.9187232851982117
    3. 'program' → logprob: -2.4187233448028564
    4. 'le' → logprob: -3.0437233448028564
    5. 'la' → logprob: -3.2937233448028564
    6. 'lecture' → logprob: -4.418723106384277
    7. 'ex' → logprob: -4.793723106384277
    8. ' programme' → logprob: -6.168723106384277
    9. 'input' → logprob: -7.293723106384277
    10. 'exec' → logprob: -7.418723106384277

Token 291: ' lecture' (ID: 31993)
  Prédit: 'bou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bou' → logprob: -0.6085350513458252
    2. 'program' → logprob: -1.8585350513458252
    3. 'programme' → logprob: -1.8585350513458252
    4. 'break' → logprob: -2.233535051345825
    5. ' boucle' → logprob: -4.483534812927246
    6. 'b' → logprob: -4.858534812927246
    7. 'entrée' → logprob: -5.608534812927246
    8. 'programm' → logprob: -5.733534812927246
    9. 'input' → logprob: -6.358534812927246
    10. 'lecture' → logprob: -6.733534812927246

Token 292: ' de' (ID: 334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007498366758227348
    2. '       ' → logprob: -5.257498264312744
    3. '\n' → logprob: -6.507498264312744
    4. '               ' → logprob: -8.007498741149902
    5. ' break' → logprob: -8.757498741149902
    6. '		' → logprob: -9.757498741149902
    7. 'break' → logprob: -9.757498741149902
    8. '<|end|>' → logprob: -10.132498741149902
    9. '          ' → logprob: -10.507498741149902
    10. ',' → logprob: -11.007498741149902

Token 293: ' données' (ID: 30580)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.14654037356376648
    2. 'input' → logprob: -2.896540403366089
    3. 'entrée' → logprob: -3.771540403366089
    4. 'n' → logprob: -4.64654016494751
    5. ' données' → logprob: -4.77154016494751
    6. 'la' → logprob: -4.77154016494751
    7. ' l' → logprob: -4.89654016494751
    8. ' input' → logprob: -5.27154016494751
    9. 'les' → logprob: -5.77154016494751
    10. 'programme' → logprob: -5.89654016494751

Token 294: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.466968650580384e-05
    2. '		' → logprob: -10.750054359436035
    3. '       ' → logprob: -11.500054359436035
    4. '               ' → logprob: -11.500054359436035
    5. ' break' → logprob: -12.500054359436035
    6. 'break' → logprob: -12.875054359436035
    7. '          ' → logprob: -13.125054359436035
    8. '
' → logprob: -13.750054359436035
    9. '.' → logprob: -14.000054359436035
    10. ',' → logprob: -14.375054359436035

Token 295: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006341627449728549
    2. '       ' → logprob: -7.37563419342041
    3. '		' → logprob: -12.37563419342041
    4. '               ' → logprob: -13.00063419342041
    5. '          ' → logprob: -14.62563419342041
    6. '   ' → logprob: -15.12563419342041
    7. '	       ' → logprob: -16.375633239746094
    8. '         ' → logprob: -16.500633239746094
    9. ' break' → logprob: -17.000633239746094
    10. '        ' → logprob: -17.375633239746094

Token 296: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.009346721693873405
    2. '           ' → logprob: -5.0093464851379395
    3. ' break' → logprob: -6.0093464851379395
    4. '       ' → logprob: -9.009346961975098
    5. 'return' → logprob: -10.009346961975098
    6. '	break' → logprob: -12.509346961975098
    7. '               ' → logprob: -13.634346961975098
    8. '   ' → logprob: -17.00934600830078
    9. '		' → logprob: -17.25934600830078
    10. '_break' → logprob: -17.25934600830078

Token 297: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024143077433109283
    2. '
' → logprob: -3.8991429805755615
    3. '        
' → logprob: -6.024143218994141
    4. '<|end|>' → logprob: -7.024143218994141
    5. '  
' → logprob: -9.27414321899414
    6. '	' → logprob: -10.27414321899414
    7. ' 
' → logprob: -10.39914321899414
    8. '    
' → logprob: -10.39914321899414
    9. '		
' → logprob: -11.52414321899414
    10. '\n' → logprob: -11.52414321899414

Token 298: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014978413237258792
    2. '        
' → logprob: -7.126497745513916
    3. '
' → logprob: -7.751497745513916
    4. '<|end|>' → logprob: -9.251498222351074
    5. 'n' → logprob: -9.376498222351074
    6. '  
' → logprob: -11.126498222351074
    7. ',' → logprob: -11.376498222351074
    8. '	' → logprob: -11.376498222351074
    9. '   ' → logprob: -12.001498222351074
    10. ' 
' → logprob: -12.126498222351074

Token 299: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.2521255910396576
    2. ' n' → logprob: -1.50212562084198
    3. '       ' → logprob: -8.62712574005127
    4. '        
' → logprob: -12.25212574005127
    5. '   ' → logprob: -12.75212574005127
    6. '	n' → logprob: -12.87712574005127
    7. ' 
' → logprob: -13.25212574005127
    8. ')n' → logprob: -13.75212574005127
    9. '
' → logprob: -14.25212574005127
    10. ')' → logprob: -14.37712574005127

Token 300: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47412776947021484
    2. ' =' → logprob: -0.9741277694702148
    3. '=int' → logprob: -9.974127769470215
    4. '=
' → logprob: -12.849127769470215
    5. 'int' → logprob: -14.099127769470215
    6. ' =
' → logprob: -15.599127769470215
    7. ' ' → logprob: -15.974127769470215
    8. ')' → logprob: -15.974127769470215
    9. 'n' → logprob: -16.34912872314453
    10. '=

' → logprob: -16.72412872314453

Token 301: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0015023599844425917
    2. ' int' → logprob: -6.501502513885498
    3. '[int' → logprob: -22.501502990722656
    4. '<int' → logprob: -22.876502990722656
    5. '(int' → logprob: -23.001502990722656
    6. '=int' → logprob: -23.376502990722656
    7. '	int' → logprob: -24.376502990722656
    8. ' ' → logprob: -25.251502990722656
    9. ':int' → logprob: -25.501502990722656
    10. '   ' → logprob: -25.876502990722656

Token 302: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00023131117632146925
    2. '(' → logprob: -8.375231742858887
    3. 'n' → logprob: -14.375231742858887
    4. ' (' → logprob: -16.50023078918457
    5. '()' → logprob: -16.87523078918457
    6. '(
' → logprob: -17.00023078918457
    7. ')' → logprob: -19.12523078918457
    8. ')n' → logprob: -19.37523078918457
    9. ' n' → logprob: -19.75023078918457
    10. '(line' → logprob: -19.87523078918457

Token 303: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0087516784551553e-05
    2. ')
' → logprob: -11.62501049041748
    3. ' )' → logprob: -14.12501049041748
    4. '<|end|>' → logprob: -15.87501049041748
    5. ')

' → logprob: -17.000009536743164
    6. '))' → logprob: -17.875009536743164
    7. ')}' → logprob: -18.250009536743164
    8. ')#' → logprob: -18.250009536743164
    9. '<|end|>' → logprob: -18.375009536743164
    10. '   ' → logprob: -18.625009536743164

Token 304: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.032885823398828506
    2. ' count' → logprob: -4.282886028289795
    3. '   ' → logprob: -4.657886028289795
    4. 'count' → logprob: -4.782886028289795
    5. '    ' → logprob: -8.282885551452637
    6. '        
' → logprob: -8.532885551452637
    7. '    
' → logprob: -9.657885551452637
    8. ' counts' → logprob: -10.157885551452637
    9. '
' → logprob: -10.782885551452637
    10. ' counter' → logprob: -11.032885551452637

Token 305: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.00011105302110081539
    2. 'result' → logprob: -10.000110626220703
    3. 'counter' → logprob: -10.375110626220703
    4. ' count' → logprob: -11.375110626220703
    5. '   ' → logprob: -11.750110626220703
    6. 'cnt' → logprob: -12.125110626220703
    7. 'comp' → logprob: -12.375110626220703
    8. 'start' → logprob: -13.250110626220703
    9. 'answer' → logprob: -13.750110626220703
    10. 'print' → logprob: -14.250110626220703

Token 306: ' Comp' (ID: 5211)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0008878758526407182
    2. ' count' → logprob: -7.875887870788574
    3. 'result' → logprob: -8.500887870788574
    4. 'start' → logprob: -9.125887870788574
    5. '#' → logprob: -9.375887870788574
    6. 'counter' → logprob: -10.250887870788574
    7. 'cnt' → logprob: -10.625887870788574
    8. 'comp' → logprob: -11.125887870788574
    9. 'print' → logprob: -12.000887870788574
    10. 'prime' → logprob: -12.250887870788574

Token 307: 'ter' (ID: 399)
  Prédit: 'ter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ter' → logprob: -0.16801561415195465
    2. 'te' → logprob: -2.043015718460083
    3. 't' → logprob: -3.793015718460083
    4. 'teur' → logprob: -7.043015480041504
    5. 'té' → logprob: -7.668015480041504
    6. '#' → logprob: -8.168015480041504
    7. '   ' → logprob: -8.543015480041504
    8. '=' → logprob: -9.543015480041504
    9. '	' → logprob: -9.793015480041504
    10. ' ter' → logprob: -10.043015480041504

Token 308: ' le' (ID: 505)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.05785747244954109
    2. ' count' → logprob: -3.1828575134277344
    3. ' primes' → logprob: -5.807857513427734
    4. '       ' → logprob: -6.057857513427734
    5. 'counter' → logprob: -6.182857513427734
    6. 'result' → logprob: -6.682857513427734
    7. '   ' → logprob: -7.182857513427734
    8. '	count' → logprob: -7.307857513427734
    9. '=' → logprob: -7.432857513427734
    10. 'nombre' → logprob: -7.557857513427734

Token 309: ' nombre' (ID: 9733)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.013727491721510887
    2. ' count' → logprob: -5.38872766494751
    3. 'prime' → logprob: -5.76372766494751
    4. 'pr' → logprob: -5.88872766494751
    5. 'counter' → logprob: -6.63872766494751
    6. 'nombre' → logprob: -6.88872766494751
    7. 'comp' → logprob: -8.263727188110352
    8. 'cnt' → logprob: -8.388727188110352
    9. 'sum' → logprob: -9.013727188110352
    10. 'result' → logprob: -10.138727188110352

Token 310: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.246620774269104
    2. '=' → logprob: -2.9966206550598145
    3. ' of' → logprob: -3.1216206550598145
    4. ' =' → logprob: -3.3716206550598145
    5. '(' → logprob: -3.7466206550598145
    6. 'de' → logprob: -3.7466206550598145
    7. '       ' → logprob: -3.9966206550598145
    8. 'of' → logprob: -4.9966206550598145
    9. '   ' → logprob: -5.6216206550598145
    10. ' primes' → logprob: -5.9966206550598145

Token 311: ' premiers' (ID: 59140)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.097904272377491
    2. 'sum' → logprob: -3.2229042053222656
    3. 'p' → logprob: -3.8479042053222656
    4. ' primes' → logprob: -3.8479042053222656
    5. ' sum' → logprob: -5.472904205322266
    6. 'prime' → logprob: -5.722904205322266
    7. ' p' → logprob: -6.097904205322266
    8. '[' → logprob: -8.097904205322266
    9. ' prime' → logprob: -8.597904205322266
    10. '(pr' → logprob: -9.222904205322266

Token 312: ' p' (ID: 275)
  Prédit: ' entre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entre' → logprob: -1.3760994672775269
    2. ' between' → logprob: -1.6260994672775269
    3. ' p' → logprob: -1.8760994672775269
    4. 'p' → logprob: -2.1260995864868164
    5. 'between' → logprob: -2.6260995864868164
    6. ' primes' → logprob: -3.2510995864868164
    7. 'pr' → logprob: -3.8760995864868164
    8. ' dans' → logprob: -3.8760995864868164
    9. '(' → logprob: -3.8760995864868164
    10. 'entre' → logprob: -4.126099586486816

Token 313: ' tels' (ID: 62007)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -1.6140378713607788
    2. '=' → logprob: -2.2390379905700684
    3. 'p' → logprob: -2.2390379905700684
    4. '[' → logprob: -2.7390379905700684
    5. '<|end|>' → logprob: -2.7390379905700684
    6. 'i' → logprob: -2.8640379905700684
    7. 's' → logprob: -2.8640379905700684
    8. 'for' → logprob: -3.2390379905700684
    9. '[i' → logprob: -3.4890379905700684
    10. ')' → logprob: -3.4890379905700684

Token 314: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.0011224760673940182
    2. ' que' → logprob: -6.87612247467041
    3. 'qu' → logprob: -9.62612247467041
    4. '       ' → logprob: -11.37612247467041
    5. '#' → logprob: -12.50112247467041
    6. 'that' → logprob: -13.12612247467041
    7. '   ' → logprob: -13.62612247467041
    8. 'strict' → logprob: -14.12612247467041
    9. 'quel' → logprob: -14.25112247467041
    10. 'q' → logprob: -14.50112247467041

Token 315: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.349957674741745
    2. ' n' → logprob: -1.2249577045440674
    3. 'p' → logprob: -7.349957466125488
    4. ' p' → logprob: -8.349957466125488
    5. 'pr' → logprob: -8.349957466125488
    6. ' primes' → logprob: -8.349957466125488
    7. '   ' → logprob: -9.849957466125488
    8. ' ' → logprob: -10.599957466125488
    9. '(n' → logprob: -10.724957466125488
    10. '2' → logprob: -11.224957466125488

Token 316: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.011086962185800076
    2. ' <' → logprob: -4.511086940765381
    3. '<p' → logprob: -10.261087417602539
    4. ' p' → logprob: -13.011087417602539
    5. 'p' → logprob: -13.886087417602539
    6. '<n' → logprob: -14.761087417602539
    7. '<int' → logprob: -15.636087417602539
    8. '&lt' → logprob: -16.01108741760254
    9. ' ' → logprob: -16.51108741760254
    10. ')<' → logprob: -16.63608741760254

Token 317: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.023246178403496742
    2. ' p' → logprob: -3.7732462882995605
    3. '=' → logprob: -15.148245811462402
    4. '<p' → logprob: -15.398245811462402
    5. ' ' → logprob: -17.02324676513672
    6. '=p' → logprob: -17.02324676513672
    7. '2' → logprob: -17.52324676513672
    8. 'pr' → logprob: -17.52324676513672
    9. ' ' → logprob: -17.89824676513672
    10. '_p' → logprob: -18.39824676513672

Token 318: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.4298137128353119
    2. ' <=' → logprob: -1.0548137426376343
    3. 'le' → logprob: -8.304813385009766
    4. '≤' → logprob: -8.304813385009766
    5. ' ≤' → logprob: -8.679813385009766
    6. '=' → logprob: -8.679813385009766
    7. ' and' → logprob: -9.429813385009766
    8. '<|end|>' → logprob: -9.554813385009766
    9. 'and' → logprob: -10.554813385009766
    10. ' ' → logprob: -10.679813385009766

Token 319: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.023246990516781807
    2. ' ' → logprob: -3.773247003555298
    3. '   ' → logprob: -13.773246765136719
    4. '
' → logprob: -16.02324676513672
    5. ' ' → logprob: -16.64824676513672
    6. '(' → logprob: -16.89824676513672
    7. '  ' → logprob: -17.39824676513672
    8. '```' → logprob: -17.52324676513672
    9. '    ' → logprob: -17.58574676513672
    10. '`' → logprob: -17.58574676513672

Token 320: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00012368128227535635
    2. ' ' → logprob: -9.000123977661133
    3. '   ' → logprob: -16.375123977661133
    4. '(' → logprob: -17.000123977661133
    5. '
' → logprob: -17.250123977661133
    6. '```' → logprob: -18.000123977661133
    7. '0' → logprob: -18.625123977661133
    8. '[' → logprob: -19.437623977661133
    9. '２' → logprob: -19.500123977661133
    10. '  ' → logprob: -19.500123977661133

Token 321: 'n' (ID: 77)
  Prédit: '*n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*n' → logprob: -0.44136571884155273
    2. 'n' → logprob: -1.1913657188415527
    3. '*' → logprob: -3.0663657188415527
    4. ' *' → logprob: -5.066365718841553
    5. ' n' → logprob: -8.941366195678711
    6. '**' → logprob: -13.066366195678711
    7. ' ' → logprob: -13.441366195678711
    8. '
' → logprob: -14.066366195678711
    9. '_n' → logprob: -14.066366195678711
    10. '*p' → logprob: -14.191366195678711

Token 322: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027982668951153755
    2. 'count' → logprob: -3.902982711791992
    3. ',' → logprob: -5.527982711791992
    4. '
' → logprob: -6.902982711791992
    5. '        
' → logprob: -7.277982711791992
    6. ' count' → logprob: -7.527982711791992
    7. '        ' → logprob: -8.402982711791992
    8. ':' → logprob: -8.902982711791992
    9. '=' → logprob: -8.902982711791992
    10. '   ' → logprob: -9.152982711791992

Token 323: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008038586936891079
    2. 'count' → logprob: -4.883038520812988
    3. ' count' → logprob: -8.258038520812988
    4. '        
' → logprob: -9.258038520812988
    5. '
' → logprob: -10.883038520812988
    6. ',' → logprob: -11.133038520812988
    7. '   ' → logprob: -11.258038520812988
    8. '      ' → logprob: -12.383038520812988
    9. 'counter' → logprob: -12.383038520812988
    10. '        ' → logprob: -12.633038520812988

Token 324: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.0005890139145776629
    2. ' count' → logprob: -7.625588893890381
    3. 'result' → logprob: -9.875589370727539
    4. 'print' → logprob: -10.875589370727539
    5. '   ' → logprob: -11.375589370727539
    6. 'counter' → logprob: -12.000589370727539
    7. 'cnt' → logprob: -12.125589370727539
    8. 'answer' → logprob: -12.375589370727539
    9. '       ' → logprob: -13.375589370727539
    10. 'comp' → logprob: -15.000589370727539

Token 325: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.575953483581543
    2. '=' → logprob: -0.825953483581543
    3. '_' → logprob: -11.575953483581543
    4. '_=' → logprob: -13.575953483581543
    5. ' ' → logprob: -13.950953483581543
    6. ',' → logprob: -14.200953483581543
    7. '   ' → logprob: -14.200953483581543
    8. ')' → logprob: -15.450953483581543
    9. 'space' → logprob: -15.825953483581543
    10. '  ' → logprob: -15.950953483581543

Token 326: ' ' (ID: 220)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.5490419864654541
    2. '0' → logprob: -0.9240419864654541
    3. ' sum' → logprob: -3.674041986465454
    4. 'pr' → logprob: -8.924041748046875
    5. ' ' → logprob: -9.674041748046875
    6. '   ' → logprob: -12.174041748046875
    7. 'len' → logprob: -12.424041748046875
    8. '	sum' → logprob: -13.799041748046875
    9. 'prime' → logprob: -13.799041748046875
    10. 's' → logprob: -13.924041748046875

Token 327: '0' (ID: 15)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.07890520989894867
    2. '0' → logprob: -2.5789051055908203
    3. ' sum' → logprob: -11.70390510559082
    4. 'pr' → logprob: -12.45390510559082
    5. 'len' → logprob: -13.20390510559082
    6. 'prime' → logprob: -14.57890510559082
    7. 's' → logprob: -15.32890510559082
    8. '   ' → logprob: -15.70390510559082
    9. '(sum' → logprob: -15.70390510559082
    10. '1' → logprob: -16.32890510559082

Token 328: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2120996713638306
    2. ' ' → logprob: -1.3370996713638306
    3. ' for' → logprob: -1.7120996713638306
    4. '       ' → logprob: -2.712099552154541
    5. '
' → logprob: -2.962099552154541
    6. '<|end|>' → logprob: -3.087099552154541
    7. ' 
' → logprob: -3.337099552154541
    8. '    
' → logprob: -4.337099552154541
    9. '    ' → logprob: -4.712099552154541
    10. ')' → logprob: -4.837099552154541

Token 329: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17778101563453674
    2. ' for' → logprob: -2.427781105041504
    3. '   ' → logprob: -2.677781105041504
    4. 'for' → logprob: -5.427781105041504
    5. '    
' → logprob: -7.427781105041504
    6. '
' → logprob: -8.427781105041504
    7. '    ' → logprob: -9.052781105041504
    8. '<|end|>' → logprob: -9.052781105041504
    9. '        
' → logprob: -9.177781105041504
    10. ',' → logprob: -9.427781105041504

Token 330: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0008617922430858016
    2. ' for' → logprob: -7.125861644744873
    3. '       ' → logprob: -10.375862121582031
    4. '   ' → logprob: -10.625862121582031
    5. 'f' → logprob: -14.500862121582031
    6. '	for' → logprob: -14.500862121582031
    7. '```' → logprob: -14.750862121582031
    8. 'range' → logprob: -15.875862121582031
    9. 'from' → logprob: -16.12586212158203
    10. 'i' → logprob: -16.50086212158203

Token 331: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5107659101486206
    2. 'num' → logprob: -1.5107659101486206
    3. 'i' → logprob: -2.01076602935791
    4. 'x' → logprob: -3.26076602935791
    5. 'number' → logprob: -5.01076602935791
    6. ' num' → logprob: -9.13576602935791
    7. 'k' → logprob: -9.26076602935791
    8. ' i' → logprob: -10.26076602935791
    9. ' p' → logprob: -10.26076602935791
    10. ' number' → logprob: -10.51076602935791

Token 332: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07008770853281021
    2. 'in' → logprob: -2.6950876712799072
    3. 'p' → logprob: -10.070087432861328
    4. 'range' → logprob: -10.070087432861328
    5. ' ' → logprob: -10.820087432861328
    6. 'i' → logprob: -10.945087432861328
    7. 'n' → logprob: -11.445087432861328
    8. 'd' → logprob: -12.320087432861328
    9. '   ' → logprob: -12.695087432861328
    10. 's' → logprob: -13.195087432861328

Token 333: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.014684110297821e-06
    2. ' range' → logprob: -11.625008583068848
    3. '(range' → logprob: -18.000009536743164
    4. '	range' → logprob: -18.500009536743164
    5. 'r' → logprob: -18.875009536743164
    6. '   ' → logprob: -19.125009536743164
    7. 'rang' → logprob: -19.500009536743164
    8. 'Range' → logprob: -21.250009536743164
    9. 'ra' → logprob: -21.625009536743164
    10. '_range' → logprob: -21.750009536743164

Token 334: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0005070421029813588
    2. 'n' → logprob: -7.62550687789917
    3. '(' → logprob: -11.000507354736328
    4. ' n' → logprob: -13.375507354736328
    5. '   ' → logprob: -15.125507354736328
    6. ' (' → logprob: -15.750507354736328
    7. '(
' → logprob: -16.000507354736328
    8. ',n' → logprob: -16.250507354736328
    9. '	n' → logprob: -16.625507354736328
    10. ')' → logprob: -16.875507354736328

Token 335: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0036048211622983217
    2. ' +' → logprob: -5.628604888916016
    3. '+
' → logprob: -12.503604888916016
    4. ')+' → logprob: -14.753604888916016
    5. '＋' → logprob: -16.128604888916016
    6. '2' → logprob: -16.378604888916016
    7. 'plus' → logprob: -16.628604888916016
    8. '+)' → logprob: -16.753604888916016
    9. '()+' → logprob: -16.878604888916016
    10. ')' → logprob: -17.253604888916016

Token 336: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '
' → logprob: -18.437501907348633
    4. ')' → logprob: -18.562501907348633
    5. ',' → logprob: -18.875001907348633
    6. '```' → logprob: -19.312501907348633
    7. '   ' → logprob: -19.625001907348633
    8. '2' → logprob: -19.687501907348633
    9. '0' → logprob: -19.812501907348633
    10. '১' → logprob: -20.187501907348633

Token 337: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.849109119386412e-06
    2. ' ,' → logprob: -11.875009536743164
    3. '2' → logprob: -12.875009536743164
    4. ',
' → logprob: -16.250009536743164
    5. '_,' → logprob: -17.250009536743164
    6. ',

' → logprob: -18.000009536743164
    7. '

' → logprob: -18.250009536743164
    8. '   ' → logprob: -18.625009536743164
    9. '‌,' → logprob: -18.750009536743164
    10. '1' → logprob: -19.375009536743164

Token 338: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.73183855926618e-05
    2. '(' → logprob: -10.000077247619629
    3. ' ' → logprob: -10.375077247619629
    4. '   ' → logprob: -15.000077247619629
    5. ' (' → logprob: -15.375077247619629
    6. '
' → logprob: -17.000078201293945
    7. ')' → logprob: -18.000078201293945
    8. '           ' → logprob: -18.000078201293945
    9. '```' → logprob: -18.000078201293945
    10. '

' → logprob: -18.250078201293945

Token 339: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00030281138606369495
    2. '(' → logprob: -8.125303268432617
    3. ' ' → logprob: -12.000303268432617
    4. ' (' → logprob: -15.000303268432617
    5. '   ' → logprob: -16.375303268432617
    6. '
' → logprob: -17.250303268432617
    7. '[' → logprob: -18.250303268432617
    8. '```' → logprob: -18.250303268432617
    9. '２' → logprob: -18.375303268432617
    10. '

' → logprob: -18.375303268432617

Token 340: '*n' (ID: 58470)
  Prédit: '*n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*n' → logprob: -0.10061130672693253
    2. 'n' → logprob: -2.3506112098693848
    3. ' *' → logprob: -8.100611686706543
    4. '*' → logprob: -9.225611686706543
    5. ' n' → logprob: -13.225611686706543
    6. '*p' → logprob: -14.225611686706543
    7. '_n' → logprob: -16.850610733032227
    8. '	n' → logprob: -16.850610733032227
    9. '*i' → logprob: -17.600610733032227
    10. '**' → logprob: -17.725610733032227

Token 341: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005234002135694027
    2. ' +' → logprob: -5.2552337646484375
    3. ')+' → logprob: -15.755233764648438
    4. ')' → logprob: -17.630233764648438
    5. '()+' → logprob: -17.630233764648438
    6. '+)' → logprob: -18.005233764648438
    7. '+
' → logprob: -18.380233764648438
    8. '＋' → logprob: -18.880233764648438
    9. '1' → logprob: -19.380233764648438
    10. '   ' → logprob: -19.505233764648438

Token 342: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -18.0000057220459
    4. '```' → logprob: -19.1250057220459
    5. '+' → logprob: -20.6250057220459
    6. '۱' → logprob: -20.7500057220459
    7. '
' → logprob: -21.0000057220459
    8. '2' → logprob: -21.1250057220459
    9. '  ' → logprob: -21.7500057220459
    10. '       ' → logprob: -21.8125057220459

Token 343: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1756367712223437e-05
    2. ' ' → logprob: -11.375011444091797
    3. '
' → logprob: -16.250011444091797
    4. '   ' → logprob: -17.250011444091797
    5. '```' → logprob: -17.250011444091797
    6. ')' → logprob: -17.562511444091797
    7. '+' → logprob: -18.500011444091797
    8. '2' → logprob: -19.125011444091797
    9. '۱' → logprob: -19.187511444091797
    10. '

' → logprob: -19.312511444091797

Token 344: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20184752345085144
    2. '):
' → logprob: -1.7018475532531738
    3. '):
' → logprob: -8.076847076416016
    4. '       ' → logprob: -9.451847076416016
    5. ')' → logprob: -11.076847076416016
    6. '):

' → logprob: -11.701847076416016
    7. ':' → logprob: -11.701847076416016
    8. '   ' → logprob: -12.201847076416016
    9. '           ' → logprob: -12.701847076416016
    10. ' ):' → logprob: -13.076847076416016

Token 345: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01026677992194891
    2. '<|end|>' → logprob: -4.8852667808532715
    3. ' if' → logprob: -6.5102667808532715
    4. '       ' → logprob: -7.2602667808532715
    5. '   ' → logprob: -8.885266304016113
    6. '<|end|>' → logprob: -9.260266304016113
    7. ' ' → logprob: -9.760266304016113
    8. 'if' → logprob: -10.260266304016113
    9. '	       ' → logprob: -10.760266304016113
    10. '            
' → logprob: -10.760266304016113

Token 346: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.8121909499168396
    2. ' if' → logprob: -1.0621910095214844
    3. '           ' → logprob: -1.5621910095214844
    4. '       ' → logprob: -7.937191009521484
    5. '               ' → logprob: -8.312191009521484
    6. '   ' → logprob: -9.312191009521484
    7. ' ' → logprob: -11.312191009521484
    8. '          ' → logprob: -11.437191009521484
    9. '            
' → logprob: -12.562191009521484
    10. '<|end|>' → logprob: -12.687191009521484

Token 347: ' primes' (ID: 104042)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.10021906346082687
    2. ' primes' → logprob: -2.3502190113067627
    3. '	pr' → logprob: -12.475218772888184
    4. 'prime' → logprob: -12.600218772888184
    5. ' pr' → logprob: -12.975218772888184
    6. '(pr' → logprob: -14.100218772888184
    7. '   ' → logprob: -14.225218772888184
    8. 'prim' → logprob: -14.725218772888184
    9. 'p' → logprob: -14.975218772888184
    10. 'pri' → logprob: -15.100218772888184

Token 348: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -5.319370302458992e-06
    2. '[' → logprob: -12.250005722045898
    3. 'p' → logprob: -14.625005722045898
    4. ' [' → logprob: -16.8750057220459
    5. '[
' → logprob: -17.2500057220459
    6. '   ' → logprob: -20.3750057220459
    7. '[P' → logprob: -20.5000057220459
    8. '(p' → logprob: -21.2500057220459
    9. '```' → logprob: -21.2500057220459
    10. '<p' → logprob: -21.3750057220459

Token 349: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0029033010359853506
    2. ']:
' → logprob: -6.627903461456299
    3. ']' → logprob: -7.377903461456299
    4. '):' → logprob: -7.377903461456299
    5. ']==' → logprob: -8.25290298461914
    6. ':' → logprob: -10.25290298461914
    7. ']):' → logprob: -11.37790298461914
    8. ']:

' → logprob: -12.50290298461914
    9. '):
' → logprob: -12.62790298461914
    10. '==' → logprob: -13.00290298461914

Token 350: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.044983312487602234
    2. 'count' → logprob: -3.169983386993408
    3. ' count' → logprob: -6.294983386993408
    4. '	count' → logprob: -9.79498291015625
    5. '           ' → logprob: -9.91998291015625
    6. '[count' → logprob: -11.54498291015625
    7. ',count' → logprob: -11.66998291015625
    8. '	           ' → logprob: -13.29498291015625
    9. '                
' → logprob: -13.54498291015625
    10. '              ' → logprob: -13.66998291015625

Token 351: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.04092343896627426
    2. '               ' → logprob: -3.2909233570098877
    3. ' count' → logprob: -6.040923595428467
    4. '                   ' → logprob: -8.165923118591309
    5. '           ' → logprob: -9.290923118591309
    6. '	count' → logprob: -9.415923118591309
    7. '   ' → logprob: -10.290923118591309
    8. '       ' → logprob: -12.665923118591309
    9. ',count' → logprob: -13.790923118591309
    10. '[count' → logprob: -14.790923118591309

Token 352: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.02335973083972931
    2. ' +=' → logprob: -3.773359775543213
    3. '+' → logprob: -9.273359298706055
    4. ']+=' → logprob: -11.273359298706055
    5. '=' → logprob: -12.023359298706055
    6. ')' → logprob: -13.773359298706055
    7. '+='' → logprob: -15.398359298706055
    8. '+="' → logprob: -15.773359298706055
    9. '   ' → logprob: -16.398359298706055
    10. '.' → logprob: -17.523359298706055

Token 353: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -21.625009536743164
    4. '```' → logprob: -22.500009536743164
    5. '１' → logprob: -23.875009536743164
    6. '۱' → logprob: -23.875009536743164
    7. ' ' → logprob: -24.250009536743164
    8. '<|end|>' → logprob: -24.375009536743164
    9. '  ' → logprob: -24.625009536743164
    10. '
' → logprob: -25.000009536743164

Token 354: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '```' → logprob: -22.125
    4. '   ' → logprob: -22.5
    5. '１' → logprob: -23.75
    6. '۱' → logprob: -24.125
    7. '
' → logprob: -24.75
    8. '१' → logprob: -25.5625
    9. '  ' → logprob: -25.8125
    10. '' → logprob: -25.875

Token 355: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1136862114071846
    2. '
' → logprob: -2.2386863231658936
    3. '   ' → logprob: -7.3636860847473145
    4. '
' → logprob: -9.113686561584473
    5. '        
' → logprob: -9.988686561584473
    6. '    
' → logprob: -10.613686561584473
    7. 'print' → logprob: -11.113686561584473
    8. '<|end|>' → logprob: -11.113686561584473
    9. '' → logprob: -12.238686561584473
    10. '  
' → logprob: -12.613686561584473

Token 356: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011289127171039581
    2. '
' → logprob: -4.511289119720459
    3. '   ' → logprob: -8.636289596557617
    4. 'print' → logprob: -10.511289596557617
    5. '        
' → logprob: -11.136289596557617
    6. '
' → logprob: -11.636289596557617
    7. '<|end|>' → logprob: -12.261289596557617
    8. '    
' → logprob: -12.636289596557617
    9. ' print' → logprob: -13.136289596557617
    10. '' → logprob: -14.511289596557617

Token 357: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20496676862239838
    2. 'print' (adapté à ' print') → logprob: -1.7049667835235596
    3. '   ' → logprob: -5.9549665451049805
    4. ' print' → logprob: -6.9549665451049805
    5. '	print' → logprob: -15.57996654510498
    6. '```' → logprob: -16.204967498779297
    7. '           ' → logprob: -17.704967498779297
    8. ' ' → logprob: -18.329967498779297
    9. '     ' → logprob: -18.454967498779297
    10. '        
' → logprob: -18.579967498779297

Token 358: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -1.0564331205387134e-05
    2. '(' → logprob: -11.50001049041748
    3. 'count' → logprob: -15.25001049041748
    4. ' (' → logprob: -16.125011444091797
    5. '(cnt' → logprob: -18.125011444091797
    6. '(c' → logprob: -19.000011444091797
    7. '(counter' → logprob: -19.250011444091797
    8. '=count' → logprob: -20.000011444091797
    9. ' count' → logprob: -20.125011444091797
    10. '(
' → logprob: -20.125011444091797

Token 359: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -16.0
    3. ')
' → logprob: -16.625
    4. ')`' → logprob: -18.625
    5. '))' → logprob: -19.875
    6. ')}' → logprob: -20.25
    7. '')' → logprob: -20.5
    8. '),' → logprob: -20.75
    9. '`)' → logprob: -21.0
    10. '")' → logprob: -21.25

Token 360: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7998752593994141
    2. '<|end|>' → logprob: -0.9248752593994141
    3. '
' → logprob: -1.924875259399414
    4. '#' → logprob: -5.549875259399414
    5. '```' → logprob: -6.049875259399414
    6. ' if' → logprob: -6.799875259399414
    7. '<|end|>' → logprob: -8.049875259399414
    8. '\n' → logprob: -8.424875259399414
    9. '  
' → logprob: -9.924875259399414
    10. ' ' → logprob: -10.049875259399414

Token 361: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.01124694012105465
    2. '__' → logprob: -4.511247158050537
    3. '_' → logprob: -8.761246681213379
    4. ' _' → logprob: -11.636246681213379
    5. '___' → logprob: -11.636246681213379
    6. ' ___' → logprob: -11.761246681213379
    7. ' ' → logprob: -12.011246681213379
    8. '_name' → logprob: -12.136246681213379
    9. ' ' → logprob: -12.761246681213379
    10. '  ' → logprob: -15.261246681213379

Token 362: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5940827131271362
    2. ' ==' → logprob: -1.0940827131271362
    3. ' __' → logprob: -2.594082832336426
    4. '==' → logprob: -4.344082832336426
    5. '.__' → logprob: -4.719082832336426
    6. '_' → logprob: -5.344082832336426
    7. '.' → logprob: -5.719082832336426
    8. ' .' → logprob: -6.594082832336426
    9. '.name' → logprob: -6.719082832336426
    10. '=="' → logprob: -7.094082832336426

Token 363: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.7697225252486533e-06
    2. '==' → logprob: -12.875003814697266
    3. '__.__' → logprob: -13.875003814697266
    4. '___' → logprob: -17.125003814697266
    5. '=="' → logprob: -17.125003814697266
    6. ' ==' → logprob: -17.375003814697266
    7. '__('' → logprob: -17.875003814697266
    8. '__
' → logprob: -17.875003814697266
    9. '_' → logprob: -18.000003814697266
    10. '__.' → logprob: -18.125003814697266

Token 364: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.34202495217323303
    2. '==' → logprob: -1.5920249223709106
    3. ' ==' → logprob: -2.4670250415802
    4. '=="' → logprob: -6.717024803161621
    5. '=='' → logprob: -9.717024803161621
    6. '=' → logprob: -10.717024803161621
    7. '_' → logprob: -11.467024803161621
    8. '===' → logprob: -11.967024803161621
    9. ' =="' → logprob: -12.842024803161621
    10. '___' → logprob: -13.092024803161621

Token 365: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.06206851825118065
    2. ''' → logprob: -2.812068462371826
    3. ' "__' → logprob: -9.312068939208984
    4. '__' → logprob: -12.062068939208984
    5. ' '__' → logprob: -12.437068939208984
    6. '"name' → logprob: -15.062068939208984
    7. '"user' → logprob: -15.937068939208984
    8. ''"' → logprob: -16.812068939208984
    9. '"_' → logprob: -16.937068939208984
    10. ''name' → logprob: -17.062068939208984

Token 366: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -2.6656825866666622e-05
    2. '__' → logprob: -10.62502670288086
    3. 'name' → logprob: -13.75002670288086
    4. '_main' → logprob: -14.62502670288086
    5. ' main' → logprob: -15.12502670288086
    6. 'ma' → logprob: -15.75002670288086
    7. 'built' → logprob: -16.50002670288086
    8. '"' → logprob: -16.62502670288086
    9. 'py' → logprob: -17.25002670288086
    10. '	main' → logprob: -17.50002670288086

Token 367: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.2015114724636078
    2. '__' → logprob: -1.7015115022659302
    3. '_' → logprob: -9.70151138305664
    4. '__':
' → logprob: -10.57651138305664
    5. '__["' → logprob: -11.95151138305664
    6. '__:' → logprob: -13.32651138305664
    7. '__.' → logprob: -13.57651138305664
    8. '__",' → logprob: -14.20151138305664
    9. '__.__' → logprob: -14.57651138305664
    10. '_"' → logprob: -14.70151138305664

Token 368: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.043345123529434204
    2. ' main' → logprob: -3.1683452129364014
    3. '	main' → logprob: -8.16834545135498
    4. '   ' → logprob: -9.91834545135498
    5. '_main' → logprob: -12.04334545135498
    6. ' ' → logprob: -12.79334545135498
    7. '__' → logprob: -13.41834545135498
    8. '"' → logprob: -14.41834545135498
    9. '(main' → logprob: -14.66834545135498
    10. '  ' → logprob: -15.04334545135498

Token 369: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.5
    3. '	main' → logprob: -25.125
    4. '   ' → logprob: -28.0
    5. '.main' → logprob: -28.0
    6. 'ma' → logprob: -28.125
    7. 'mai' → logprob: -29.125
    8. '(main' → logprob: -29.25
    9. '_main' → logprob: -29.375
    10. 'Main' → logprob: -29.5

Token 370: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 368
Tokens correctement prédits (1ère position, stricte): 148
Tokens correctement prédits (1ère position, avec adaptation): 159
Tokens correctement prédits (top 10): 294
Précision stricte (1ère position): 40.22%
Précision adaptée (1ère position): 43.21%
Précision (top 10): 79.89%
================================================================================
