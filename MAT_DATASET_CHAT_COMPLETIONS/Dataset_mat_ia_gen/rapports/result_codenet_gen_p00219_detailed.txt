================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:19:49
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Programme pour afficher un histogramme des ventes de 10 types d'ice cream, de 0 à 9.
# Pour chaque dataset, on compte combien de fois chaque type est vendu.
# Ensuite, pour chaque type, on imprime autant d'étoiles que le nombre vendu.
# S'il n'y a aucune vente pour un type, on imprime un tiret.
# L'entrée se termine par un zéro seul.

while True:
    n = int(input())
    if n == 0:
        # Fin des entrées
        break

    # Initialisation d'une liste pour compter les ventes de chaque type (0 à 9)
    counts = [0] * 10

    # Lecture des types vendus et comptage
    for _ in range(n):
        c = int(input())
        counts[c] += 1

    # Affichage de l'histogramme selon les règles
    for count in counts:
        if count == 0:
            print("-")
        else:
            print("*" * count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Programme' (ID: 50667)
  → Token d'amorce (pas de prédiction)

Token 2: ' pour' (ID: 1930)
  → Token d'amorce (pas de prédiction)

Token 3: ' afficher' (ID: 146524)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.11888779699802399
    2. 'calcul' → logprob: -2.7438879013061523
    3. ' afficher' → logprob: -3.8688879013061523
    4. ' compter' → logprob: -5.493887901306152
    5. ' le' → logprob: -5.868887901306152
    6. ' analyser' → logprob: -5.993887901306152
    7. ' l' → logprob: -6.118887901306152
    8. ' convertir' → logprob: -6.118887901306152
    9. ' créer' → logprob: -6.368887901306152
    10. ' la' → logprob: -7.243887901306152

Token 4: ' un' (ID: 537)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8512977361679077
    2. ' ' → logprob: -0.9762977361679077
    3. ' le' → logprob: -2.7262978553771973
    4. ' un' → logprob: -3.2262978553771973
    5. ' "' → logprob: -3.8512978553771973
    6. '```' → logprob: -4.101297855377197
    7. '"' → logprob: -4.351297855377197
    8. ' l' → logprob: -4.601297855377197
    9. ' une' → logprob: -4.976297855377197
    10. ' les' → logprob: -5.101297855377197

Token 5: ' histogram' (ID: 81482)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06118867173790932
    2. 'e' → logprob: -3.3111886978149414
    3. '_' → logprob: -5.186188697814941
    4. ' espace' → logprob: -5.561188697814941
    5. ' ' → logprob: -5.811188697814941
    6. '#' → logprob: -6.311188697814941
    7. 'é' → logprob: -6.686188697814941
    8. '```' → logprob: -6.936188697814941
    9. ' #' → logprob: -7.186188697814941
    10. ' e' → logprob: -7.186188697814941

Token 6: 'me' (ID: 1047)
  Prédit: 'me'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.2050565928220749
    2. 'm' → logprob: -1.8300565481185913
    3. '_' → logprob: -3.955056667327881
    4. '#' → logprob: -6.205056667327881
    5. '```' → logprob: -6.330056667327881
    6. 'e' → logprob: -6.455056667327881
    7. '`' → logprob: -9.080056190490723
    8. '_me' → logprob: -9.205056190490723
    9. '\' → logprob: -9.955056190490723
    10. 'a' → logprob: -10.205056190490723

Token 7: ' des' (ID: 731)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.01346972119063139
    2. '\n' → logprob: -5.513469696044922
    3. '\' → logprob: -5.888469696044922
    4. '`' → logprob: -6.138469696044922
    5. '```' → logprob: -6.388469696044922
    6. ':' → logprob: -6.888469696044922
    7. 'import' → logprob: -7.763469696044922
    8. ' ' → logprob: -8.888469696044922
    9. '  
' → logprob: -9.138469696044922
    10. 'n' → logprob: -9.263469696044922

Token 8: ' ventes' (ID: 99004)
  Prédit: ' fré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fré' → logprob: -0.20447386801242828
    2. 'fr' → logprob: -2.8294739723205566
    3. 'fre' → logprob: -4.079473972320557
    4. 'val' → logprob: -4.204473972320557
    5. ' #' → logprob: -4.454473972320557
    6. 'scores' → logprob: -4.704473972320557
    7. ' fréquence' → logprob: -4.704473972320557
    8. ' données' → logprob: -5.079473972320557
    9. 'd' → logprob: -5.329473972320557
    10. ' fréquent' → logprob: -5.454473972320557

Token 9: ' de' (ID: 334)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.47718143463134766
    2. ':' → logprob: -1.4771814346313477
    3. ' ' → logprob: -2.6021814346313477
    4. '```' → logprob: -3.9771814346313477
    5. '_' → logprob: -4.227181434631348
    6. '\' → logprob: -4.727181434631348
    7. '\n' → logprob: -5.602181434631348
    8. '
' → logprob: -5.727181434631348
    9. 'd' → logprob: -5.977181434631348
    10. 'import' → logprob: -5.977181434631348

Token 10: ' ' (ID: 220)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.5676845908164978
    2. ' produits' → logprob: -1.1926846504211426
    3. ' ' → logprob: -2.3176846504211426
    4. 'produ' → logprob: -5.067684650421143
    5. ' produit' → logprob: -5.192684650421143
    6. 'l' → logprob: -5.942684650421143
    7. ' voitures' → logprob: -6.067684650421143
    8. ' produ' → logprob: -6.192684650421143
    9. ' ```' → logprob: -6.442684650421143
    10. ' fruits' → logprob: -6.442684650421143

Token 11: '10' (ID: 702)
  Prédit: 'produ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'produ' → logprob: -0.04908972233533859
    2. ' produits' → logprob: -3.1740896701812744
    3. '```' → logprob: -6.5490899085998535
    4. 'vo' → logprob: -6.9240899085998535
    5. ' ' → logprob: -7.4240899085998535
    6. ' produit' → logprob: -8.049089431762695
    7. 'mo' → logprob: -8.174089431762695
    8. 'l' → logprob: -8.174089431762695
    9. ' mois' → logprob: -8.674089431762695
    10. 'vé' → logprob: -8.799089431762695

Token 12: ' types' (ID: 6009)
  Prédit: 'produ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'produ' → logprob: -0.7359049320220947
    2. ' produits' → logprob: -1.2359049320220947
    3. 'jours' → logprob: -2.7359049320220947
    4. ' ' → logprob: -3.1109049320220947
    5. '```' → logprob: -3.6109049320220947
    6. 'articles' → logprob: -4.110904693603516
    7. '_' → logprob: -4.735904693603516
    8. ' jours' → logprob: -4.985904693603516
    9. ' produit' → logprob: -4.985904693603516
    10. ' articles' → logprob: -4.985904693603516

Token 13: ' d' (ID: 272)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5256051421165466
    2. ' ' → logprob: -1.0256052017211914
    3. 's' → logprob: -4.150605201721191
    4. ':' → logprob: -4.525605201721191
    5. ''' → logprob: -5.650605201721191
    6. ' de' → logprob: -5.775605201721191
    7. ' d' → logprob: -6.025605201721191
    8. '```' → logprob: -6.025605201721191
    9. ' :' → logprob: -6.400605201721191
    10. ',' → logprob: -6.525605201721191

Token 14: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.09710796922445297
    2. 'e' → logprob: -2.7221078872680664
    3. 'é' → logprob: -4.847107887268066
    4. ''é' → logprob: -4.972107887268066
    5. ''espace' → logprob: -5.722107887268066
    6. ''article' → logprob: -5.972107887268066
    7. 'u' → logprob: -6.847107887268066
    8. 'es' → logprob: -6.972107887268066
    9. ''esp' → logprob: -7.472107887268066
    10. ' e' → logprob: -7.722107887268066

Token 15: 'ice' (ID: 603)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08741307258605957
    2. 'produ' → logprob: -3.3374130725860596
    3. 'articles' → logprob: -4.2124128341674805
    4. 'e' → logprob: -4.8374128341674805
    5. 'a' → logprob: -5.0874128341674805
    6. ''article' → logprob: -5.5874128341674805
    7. 'article' → logprob: -5.9624128341674805
    8. 'é' → logprob: -6.2124128341674805
    9. '_' → logprob: -6.4624128341674805
    10. '```' → logprob: -7.0874128341674805

Token 16: ' cream' (ID: 15877)
  Prédit: 'cream'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cream' → logprob: -0.7090502381324768
    2. 'cre' → logprob: -2.334050178527832
    3. 'cr' → logprob: -2.459050178527832
    4. 'c' → logprob: -2.584050178527832
    5. 's' → logprob: -2.584050178527832
    6. ' cr' → logprob: -2.709050178527832
    7. ' c' → logprob: -3.209050178527832
    8. ' cream' → logprob: -3.459050178527832
    9. 'cré' → logprob: -4.834050178527832
    10. ' crème' → logprob: -4.959050178527832

Token 17: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5147674679756165
    2. 's' → logprob: -1.8897674083709717
    3. 'import' → logprob: -2.8897674083709717
    4. '```' → logprob: -3.2647674083709717
    5. ':' → logprob: -3.5147674083709717
    6. '_' → logprob: -3.5147674083709717
    7. '\' → logprob: -3.6397674083709717
    8. 'i' → logprob: -3.8897674083709717
    9. ' ' → logprob: -4.014767646789551
    10. '\n' → logprob: -4.764767646789551

Token 18: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.33819660544395447
    2. 's' → logprob: -2.3381965160369873
    3. 'import' → logprob: -2.3381965160369873
    4. '#' → logprob: -3.5881965160369873
    5. ' :' → logprob: -4.213196754455566
    6. '_' → logprob: -4.213196754455566
    7. ':' → logprob: -4.963196754455566
    8. '.' → logprob: -5.338196754455566
    9. '```' → logprob: -5.338196754455566
    10. ' import' → logprob: -5.713196754455566

Token 19: ' ' (ID: 220)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.37674370408058167
    2. ' ventes' → logprob: -1.7517436742782593
    3. ' ' → logprob: -3.376743793487549
    4. ' vente' → logprob: -4.001743793487549
    5. 'ux' → logprob: -4.751743793487549
    6. ' #' → logprob: -5.126743793487549
    7. ' s' → logprob: -5.251743793487549
    8. ' chaque' → logprob: -5.376743793487549
    9. ' types' → logprob: -5.626743793487549
    10. ' glace' → logprob: -5.876743793487549

Token 20: '0' (ID: 15)
  Prédit: 'types'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'types' → logprob: -1.2717403173446655
    2. ' chaque' → logprob: -2.396740436553955
    3. 'gl' → logprob: -2.521740436553955
    4. 'cha' → logprob: -2.521740436553955
    5. ' glace' → logprob: -2.771740436553955
    6. 'vent' → logprob: -3.146740436553955
    7. ' types' → logprob: -3.271740436553955
    8. 'vente' → logprob: -3.646740436553955
    9. ' ' → logprob: -3.771740436553955
    10. '10' → logprob: -3.896740436553955

Token 21: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.7525922060012817
    2. ' ' → logprob: -1.3775922060012817
    3. 'à' → logprob: -1.6275922060012817
    4. '0' → logprob: -3.252592086791992
    5. '1' → logprob: -5.002592086791992
    6. ' a' → logprob: -5.002592086791992
    7. ' ' → logprob: -5.127592086791992
    8. 'a' → logprob: -5.377592086791992
    9. '#' → logprob: -5.502592086791992
    10. '```' → logprob: -6.002592086791992

Token 22: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.9067298769950867
    2. '9' → logprob: -1.0317299365997314
    3. ' ' → logprob: -1.5317299365997314
    4. '100' → logprob: -4.156729698181152
    5. '20' → logprob: -5.781729698181152
    6. '50' → logprob: -6.531729698181152
    7. '5' → logprob: -6.656729698181152
    8. '99' → logprob: -7.531729698181152
    9. '1' → logprob: -8.031729698181152
    10. '15' → logprob: -8.156729698181152

Token 23: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.4036407768726349
    2. '10' → logprob: -1.1536407470703125
    3. '100' → logprob: -4.9036407470703125
    4. '20' → logprob: -5.7786407470703125
    5. '50' → logprob: -6.2786407470703125
    6. ' ' → logprob: -7.0286407470703125
    7. '1' → logprob: -7.1536407470703125
    8. '99' → logprob: -7.2786407470703125
    9. '5' → logprob: -7.4036407470703125
    10. '15' → logprob: -8.028640747070312

Token 24: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4427219033241272
    2. '#' → logprob: -1.8177218437194824
    3. 'import' → logprob: -2.5677218437194824
    4. '```' → logprob: -2.5677218437194824
    5. 'i' → logprob: -4.817721843719482
    6. '_' → logprob: -5.567721843719482
    7. '\n' → logprob: -5.567721843719482
    8. '`' → logprob: -5.567721843719482
    9. '.' → logprob: -5.692721843719482
    10. '\' → logprob: -5.692721843719482

Token 25: '#' (ID: 2)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8063340783119202
    2. '#' → logprob: -0.9313340783119202
    3. '```' → logprob: -2.9313340187072754
    4. 'i' → logprob: -3.5563340187072754
    5. '_' → logprob: -4.056334018707275
    6. 'import' → logprob: -4.181334018707275
    7. '`' → logprob: -4.556334018707275
    8. '\' → logprob: -4.681334018707275
    9. 'v' → logprob: -5.306334018707275
    10. '.' → logprob: -5.681334018707275

Token 26: ' Pour' (ID: 13931)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.48167556524276733
    2. ' ' → logprob: -2.356675624847412
    3. ' ```' → logprob: -2.356675624847412
    4. ' import' → logprob: -2.856675624847412
    5. 'i' → logprob: -3.356675624847412
    6. ' #' → logprob: -3.856675624847412
    7. '```' → logprob: -3.856675624847412
    8. 'v' → logprob: -3.981675624847412
    9. '#' → logprob: -4.106675624847412
    10. ' i' → logprob: -4.981675624847412

Token 27: ' chaque' (ID: 21194)
  Prédit: ' afficher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' afficher' → logprob: -0.4841346740722656
    2. ' l' → logprob: -1.7341346740722656
    3. 'aff' → logprob: -3.1091346740722656
    4. 'import' → logprob: -3.6091346740722656
    5. 'l' → logprob: -3.6091346740722656
    6. ' chaque' → logprob: -4.109134674072266
    7. ' import' → logprob: -4.359134674072266
    8. ' créer' → logprob: -4.859134674072266
    9. ' continuer' → logprob: -5.109134674072266
    10. ' visual' → logprob: -5.234134674072266

Token 28: ' dataset' (ID: 20830)
  Prédit: ' type'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' type' → logprob: -0.4458250105381012
    2. 'type' → logprob: -1.3208249807357788
    3. 'i' → logprob: -3.8208250999450684
    4. ' i' → logprob: -3.8208250999450684
    5. ' ice' → logprob: -4.695825099945068
    6. 't' → logprob: -5.945825099945068
    7. ' ' → logprob: -6.008325099945068
    8. ' t' → logprob: -6.133325099945068
    9. ' index' → logprob: -6.383325099945068
    10. ' bar' → logprob: -6.383325099945068

Token 29: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1179279088974
    2. ',' → logprob: -1.6179279088974
    3. '_' → logprob: -1.7429279088974
    4. ' :' → logprob: -1.8679279088974
    5. ' ' → logprob: -3.1179280281066895
    6. ' ,' → logprob: -3.4929280281066895
    7. 'import' → logprob: -3.9929280281066895
    8. '#' → logprob: -4.3679280281066895
    9. 's' → logprob: -4.3679280281066895
    10. 'data' → logprob: -5.2429280281066895

Token 30: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.3007742762565613
    2. ' ' → logprob: -2.050774335861206
    3. ' import' → logprob: -3.675774335861206
    4. ' ' → logprob: -3.800774335861206
    5. ' #' → logprob: -4.050774097442627
    6. '#' → logprob: -4.425774097442627
    7. 'import' → logprob: -4.925774097442627
    8. ' i' → logprob: -5.425774097442627
    9. ' plt' → logprob: -5.550774097442627
    10. ' l' → logprob: -5.550774097442627

Token 31: ' compte' (ID: 19657)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aff' → logprob: -1.372383713722229
    2. ' a' → logprob: -1.997383713722229
    3. 'a' → logprob: -2.2473835945129395
    4. '#' → logprob: -2.4973835945129395
    5. ' affiche' → logprob: -2.6223835945129395
    6. 'import' → logprob: -2.8723835945129395
    7. 'def' → logprob: -3.6223835945129395
    8. 'aj' → logprob: -3.7473835945129395
    9. ' ' → logprob: -3.8723835945129395
    10. 'v' → logprob: -3.8723835945129395

Token 32: ' combien' (ID: 106648)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7074664831161499
    2. 'le' → logprob: -1.83246648311615
    3. ' le' → logprob: -2.2074666023254395
    4. ' les' → logprob: -2.4574666023254395
    5. 'les' → logprob: -2.5824666023254395
    6. ' l' → logprob: -4.3324666023254395
    7. 'l' → logprob: -4.5824666023254395
    8. ' la' → logprob: -4.7074666023254395
    9. ' ' → logprob: -4.7074666023254395
    10. 's' → logprob: -5.0824666023254395

Token 33: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2546020448207855
    2. ' ' → logprob: -2.5046019554138184
    3. ' de' → logprob: -2.7546019554138184
    4. 'de' → logprob: -3.6296019554138184
    5. '#' → logprob: -4.129601955413818
    6. ' d' → logprob: -4.879601955413818
    7. 'd' → logprob: -5.004601955413818
    8. '_de' → logprob: -5.254601955413818
    9. 's' → logprob: -6.004601955413818
    10. '  ' → logprob: -6.879601955413818

Token 34: ' fois' (ID: 14697)
  Prédit: ' fois'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fois' → logprob: -1.2820731401443481
    2. ' ventes' → logprob: -1.7820731401443481
    3. 'v' → logprob: -2.0320730209350586
    4. 'vende' → logprob: -2.6570730209350586
    5. 'fois' → logprob: -2.6570730209350586
    6. '```' → logprob: -3.4070730209350586
    7. 'vent' → logprob: -3.7195730209350586
    8. ' occurrences' → logprob: -3.8445730209350586
    9. 'occ' → logprob: -3.9695730209350586
    10. '_' → logprob: -4.157073020935059

Token 35: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.10266239941120148
    2. 'cha' → logprob: -3.4776623249053955
    3. ' each' → logprob: -3.8526623249053955
    4. 'each' → logprob: -4.727662563323975
    5. ' ' → logprob: -4.852662563323975
    6. 'ch' → logprob: -5.602662563323975
    7. 'le' → logprob: -5.852662563323975
    8. ' la' → logprob: -5.977662563323975
    9. ' le' → logprob: -6.352662563323975
    10. ' l' → logprob: -6.602662563323975

Token 36: ' type' (ID: 1490)
  Prédit: ' type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' type' → logprob: -0.6114357709884644
    2. 'type' → logprob: -0.9864357709884644
    3. 'val' → logprob: -3.861435890197754
    4. ' chiffre' → logprob: -4.111435890197754
    5. ' valeur' → logprob: -4.486435890197754
    6. 'ch' → logprob: -4.736435890197754
    7. ' ' → logprob: -5.236435890197754
    8. ' nombre' → logprob: -5.361435890197754
    9. ' numéro' → logprob: -6.236435890197754
    10. 'nombre' → logprob: -6.486435890197754

Token 37: ' est' (ID: 893)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.249950110912323
    2. ' de' → logprob: -1.8749501705169678
    3. 'de' → logprob: -4.124949932098389
    4. ' ' → logprob: -4.499949932098389
    5. ' d' → logprob: -4.624949932098389
    6. 'd' → logprob: -4.999949932098389
    7. ' a' → logprob: -5.124949932098389
    8. ' apparaît' → logprob: -5.249949932098389
    9. 'a' → logprob: -6.124949932098389
    10. ' _' → logprob: -6.624949932098389

Token 38: ' vendu' (ID: 161208)
  Prédit: 'prés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prés' → logprob: -0.19438716769218445
    2. ' présent' → logprob: -2.444387197494507
    3. ' appar' → logprob: -3.194387197494507
    4. 'appar' → logprob: -4.444386959075928
    5. 'venu' → logprob: -4.569386959075928
    6. ' vendu' → logprob: -5.194386959075928
    7. 'vend' → logprob: -5.569386959075928
    8. ' rencontré' → logprob: -5.819386959075928
    9. ' ' → logprob: -6.069386959075928
    10. ' present' → logprob: -6.194386959075928

Token 39: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.035502314567566
    2. '#' → logprob: -1.160502314567566
    3. 'v' → logprob: -2.4105024337768555
    4. 'import' → logprob: -2.5355024337768555
    5. '```' → logprob: -3.1605024337768555
    6. 'd' → logprob: -3.2855024337768555
    7. 'i' → logprob: -3.9105024337768555
    8. 'from' → logprob: -4.2855024337768555
    9. '_' → logprob: -4.6605024337768555
    10. '\' → logprob: -4.7855024337768555

Token 40: '#' (ID: 2)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.0093138217926025
    2. 'd' → logprob: -1.6343138217926025
    3. 'import' → logprob: -1.8843138217926025
    4. 'i' → logprob: -2.2593138217926025
    5. '```' → logprob: -2.7593138217926025
    6. '#' → logprob: -3.0093138217926025
    7. '_' → logprob: -4.759313583374023
    8. ':' → logprob: -4.884313583374023
    9. 'data' → logprob: -4.884313583374023
    10. 'from' → logprob: -4.884313583374023

Token 41: ' Ensuite' (ID: 113884)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.0381224155426025
    2. 'v' → logprob: -1.5381224155426025
    3. '#' → logprob: -1.7881224155426025
    4. 'i' → logprob: -2.2881224155426025
    5. 'import' → logprob: -2.4131224155426025
    6. '_' → logprob: -3.9131224155426025
    7. 'from' → logprob: -4.163122177124023
    8. '```' → logprob: -4.913122177124023
    9. 'n' → logprob: -5.288122177124023
    10. ' ' → logprob: -5.788122177124023

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15893401205539703
    2. ' on' → logprob: -2.5339341163635254
    3. 'on' → logprob: -2.7839341163635254
    4. 'import' → logprob: -5.783934116363525
    5. '#' → logprob: -6.408934116363525
    6. ',on' → logprob: -7.533934116363525
    7. ' ,' → logprob: -8.533933639526367
    8. 'nous' → logprob: -9.908933639526367
    9. ' ' → logprob: -10.033933639526367
    10. ''on' → logprob: -10.033933639526367

Token 43: ' pour' (ID: 1930)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.10549682378768921
    2. 'on' → logprob: -2.355496883392334
    3. '#' → logprob: -5.855496883392334
    4. 'import' → logprob: -6.855496883392334
    5. 'for' → logprob: -7.730496883392334
    6. ' for' → logprob: -8.980496406555176
    7. 'plt' → logprob: -8.980496406555176
    8. 'aff' → logprob: -9.355496406555176
    9. ' ' → logprob: -9.605496406555176
    10. 'pour' → logprob: -10.105496406555176

Token 44: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.05700013414025307
    2. ' afficher' → logprob: -3.557000160217285
    3. 'aff' → logprob: -4.432000160217285
    4. 'cha' → logprob: -5.557000160217285
    5. '#' → logprob: -5.682000160217285
    6. ' ' → logprob: -6.182000160217285
    7. 'ch' → logprob: -6.682000160217285
    8. ' each' → logprob: -6.932000160217285
    9. ' créer' → logprob: -7.682000160217285
    10. ' construire' → logprob: -7.932000160217285

Token 45: ' type' (ID: 1490)
  Prédit: ' type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' type' → logprob: -0.36468008160591125
    2. 'type' → logprob: -1.2396800518035889
    3. ' i' → logprob: -4.989680290222168
    4. 'i' → logprob: -6.364680290222168
    5. ' ' → logprob: -6.739680290222168
    6. ' #' → logprob: -7.177180290222168
    7. ' ' → logprob: -7.489680290222168
    8. ' ice' → logprob: -7.677180290222168
    9. ' bar' → logprob: -7.927180290222168
    10. 'ligne' → logprob: -8.302180290222168

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06119203567504883
    2. ' on' → logprob: -3.686192035675049
    3. ' ,' → logprob: -4.186192035675049
    4. ' de' → logprob: -4.561192035675049
    5. 'on' → logprob: -6.061192035675049
    6. ' d' → logprob: -6.311192035675049
    7. ' ' → logprob: -6.561192035675049
    8. '#' → logprob: -6.936192035675049
    9. 'de' → logprob: -6.936192035675049
    10. 'd' → logprob: -8.31119155883789

Token 47: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.1236649602651596
    2. 'on' → logprob: -2.2486648559570312
    3. '#' → logprob: -4.748664855957031
    4. ' #' → logprob: -6.748664855957031
    5. ' ' → logprob: -7.498664855957031
    6. 'print' → logprob: -8.873664855957031
    7. ' ' → logprob: -9.373664855957031
    8. 'aff' → logprob: -10.373664855957031
    9. ' afficher' → logprob: -10.498664855957031
    10. ''on' → logprob: -10.998664855957031

Token 48: ' imprime' (ID: 195564)
  Prédit: ' affiche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' affiche' → logprob: -0.5102034211158752
    2. 'aff' → logprob: -1.1352033615112305
    3. ' calc' → logprob: -3.8852033615112305
    4. ' trace' → logprob: -4.3852033615112305
    5. 'print' → logprob: -4.5102033615112305
    6. ' print' → logprob: -5.1352033615112305
    7. ' imprime' → logprob: -5.5102033615112305
    8. 'trace' → logprob: -5.7602033615112305
    9. ' ajoute' → logprob: -6.2602033615112305
    10. ' compte' → logprob: -6.5102033615112305

Token 49: ' autant' (ID: 46683)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.8919739723205566
    2. ' un' → logprob: -1.6419739723205566
    3. 'une' → logprob: -2.3919739723205566
    4. 'un' → logprob: -2.7669739723205566
    5. ' "' → logprob: -3.0169739723205566
    6. ' une' → logprob: -3.3919739723205566
    7. ' ' → logprob: -3.7669739723205566
    8. ' le' → logprob: -4.016973972320557
    9. '(' → logprob: -4.266973972320557
    10. ' la' → logprob: -4.266973972320557

Token 50: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9173867702484131
    2. 'de' → logprob: -1.042386770248413
    3. ' d' → logprob: -2.292386770248413
    4. ' de' → logprob: -2.792386770248413
    5. ' ' → logprob: -3.667386770248413
    6. '*' → logprob: -3.667386770248413
    7. '"' → logprob: -4.667387008666992
    8. ''' → logprob: -5.167387008666992
    9. '  ' → logprob: -5.417387008666992
    10. ''d' → logprob: -6.042387008666992

Token 51: ''é' (ID: 12728)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''*' → logprob: -0.7891188859939575
    2. ''' → logprob: -1.6641188859939575
    3. 'e' → logprob: -1.6641188859939575
    4. '*' → logprob: -2.539118766784668
    5. ''é' → logprob: -4.289118766784668
    6. '`' → logprob: -4.664118766784668
    7. '#' → logprob: -4.789118766784668
    8. ' '*'' → logprob: -4.914118766784668
    9. ''espace' → logprob: -5.039118766784668
    10. ' de' → logprob: -5.039118766784668

Token 52: 'to' (ID: 935)
  Prédit: 'to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.1482943892478943
    2. '*' → logprob: -2.523294448852539
    3. '#' → logprob: -3.398294448852539
    4. ''*' → logprob: -5.273294448852539
    5. '`' → logprob: -5.523294448852539
    6. 't' → logprob: -5.648294448852539
    7. '```' → logprob: -6.023294448852539
    8. ''' → logprob: -6.023294448852539
    9. '´' → logprob: -7.273294448852539
    10. 'é' → logprob: -7.398294448852539

Token 53: 'iles' (ID: 2892)
  Prédit: 'iles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iles' → logprob: -0.3494681119918823
    2. 'i' → logprob: -1.4744681119918823
    3. 'ile' → logprob: -3.349468231201172
    4. 'il' → logprob: -3.849468231201172
    5. '*' → logprob: -4.974468231201172
    6. 'î' → logprob: -6.724468231201172
    7. '**' → logprob: -8.349468231201172
    8. 'to' → logprob: -8.474468231201172
    9. '#' → logprob: -8.599468231201172
    10. 'ì' → logprob: -9.349468231201172

Token 54: ' que' (ID: 661)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.47548019886016846
    2. ':' → logprob: -1.4754801988601685
    3. '\' → logprob: -3.475480079650879
    4. '```' → logprob: -3.850480079650879
    5. '*' → logprob: -4.225480079650879
    6. '`' → logprob: -4.600480079650879
    7. ''' → logprob: -4.725480079650879
    8. ',' → logprob: -5.100480079650879
    9. 's' → logprob: -5.350480079650879
    10. 'n' → logprob: -5.350480079650879

Token 55: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.8806097507476807
    2. ' le' → logprob: -2.0056097507476807
    3. ' la' → logprob: -2.3806097507476807
    4. ''' → logprob: -2.3806097507476807
    5. ' vendu' → logprob: -2.7556097507476807
    6. ''il' → logprob: -3.2556097507476807
    7. 'la' → logprob: -3.3806097507476807
    8. 'vend' → logprob: -3.7556097507476807
    9. ' de' → logprob: -4.130609512329102
    10. ' ' → logprob: -4.380609512329102

Token 56: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.39718833565711975
    2. 'nombre' → logprob: -1.1471883058547974
    3. '#' → logprob: -6.272188186645508
    4. ' #' → logprob: -6.647188186645508
    5. ' nombres' → logprob: -7.147188186645508
    6. 'vend' → logprob: -7.147188186645508
    7. ' compteur' → logprob: -7.272188186645508
    8. 'count' → logprob: -7.397188186645508
    9. ' ' → logprob: -7.522188186645508
    10. 'vende' → logprob: -7.772188186645508

Token 57: ' vendu' (ID: 161208)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.8131346702575684
    2. ' ' → logprob: -1.6881346702575684
    3. '#' → logprob: -2.4381346702575684
    4. ''' → logprob: -2.4381346702575684
    5. 'd' → logprob: -2.5631346702575684
    6. ' de' → logprob: -3.0631346702575684
    7. '_' → logprob: -3.3131346702575684
    8. 's' → logprob: -4.438134670257568
    9. 'de' → logprob: -5.063134670257568
    10. ' #' → logprob: -5.938134670257568

Token 58: '.
' (ID: 558)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.48089346289634705
    2. 'd' → logprob: -1.9808934926986694
    3. 'v' → logprob: -2.10589337348938
    4. 'i' → logprob: -2.98089337348938
    5. ':' → logprob: -3.98089337348938
    6. '```' → logprob: -4.605893611907959
    7. 't' → logprob: -4.855893611907959
    8. 'n' → logprob: -4.855893611907959
    9. '_' → logprob: -5.105893611907959
    10. 'import' → logprob: -5.855893611907959

Token 59: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.33196011185646057
    2. 'd' → logprob: -2.3319602012634277
    3. 'v' → logprob: -2.5819602012634277
    4. 'i' → logprob: -2.8319602012634277
    5. ':' → logprob: -3.9569602012634277
    6. '```' → logprob: -4.956960201263428
    7. 'n' → logprob: -5.331960201263428
    8. 't' → logprob: -5.456960201263428
    9. 'import' → logprob: -5.831960201263428
    10. 's' → logprob: -5.956960201263428

Token 60: ' S' (ID: 336)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9963181018829346
    2. 'd' → logprob: -1.6213181018829346
    3. 'import' → logprob: -1.8713181018829346
    4. 'v' → logprob: -2.1213181018829346
    5. 'i' → logprob: -2.7463181018829346
    6. 'data' → logprob: -3.8713181018829346
    7. 'n' → logprob: -4.3713178634643555
    8. 'types' → logprob: -4.4963178634643555
    9. '```' → logprob: -4.8713178634643555
    10. 'from' → logprob: -4.9963178634643555

Token 61: ''il' (ID: 14683)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6180550456047058
    2. '#' → logprob: -1.8680551052093506
    3. 'e' → logprob: -2.3680551052093506
    4. 'u' → logprob: -2.3680551052093506
    5. 't' → logprob: -2.9930551052093506
    6. 'p' → logprob: -3.2430551052093506
    7. 'o' → logprob: -4.8680548667907715
    8. 'i' → logprob: -5.1180548667907715
    9. 's' → logprob: -5.4930548667907715
    10. 'é' → logprob: -6.6180548667907715

Token 62: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4993952214717865
    2. ' y' → logprob: -0.9993952512741089
    3. ' manque' → logprob: -5.624395370483398
    4. ' faut' → logprob: -5.749395370483398
    5. 'y' → logprob: -5.874395370483398
    6. 'n' → logprob: -5.999395370483398
    7. ' ' → logprob: -6.124395370483398
    8. ' a' → logprob: -6.249395370483398
    9. ''y' → logprob: -6.249395370483398
    10. 'est' → logprob: -6.374395370483398

Token 63: ''y' (ID: 27913)
  Prédit: ''y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''y' → logprob: -0.015926320105791092
    2. ''est' → logprob: -5.015926361083984
    3. 'y' → logprob: -5.640926361083984
    4. ''' → logprob: -6.015926361083984
    5. ''ex' → logprob: -6.890926361083984
    6. 'é' → logprob: -7.640926361083984
    7. '’y' → logprob: -7.765926361083984
    8. 'est' → logprob: -8.015926361083984
    9. ''a' → logprob: -8.015926361083984
    10. 'e' → logprob: -8.765926361083984

Token 64: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0016541173681616783
    2. ' a' → logprob: -7.376654148101807
    3. ''a' → logprob: -7.501654148101807
    4. 'est' → logprob: -8.501653671264648
    5. 'avait' → logprob: -8.626653671264648
    6. 'pas' → logprob: -10.626653671264648
    7. 'y' → logprob: -10.751653671264648
    8. ''est' → logprob: -11.876653671264648
    9. 'ont' → logprob: -12.001653671264648
    10. '#' → logprob: -12.126653671264648

Token 65: ' aucune' (ID: 51173)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.09516514092683792
    2. ' ' → logprob: -3.220165252685547
    3. ' plus' → logprob: -4.345165252685547
    4. 'pas' → logprob: -4.345165252685547
    5. ' a' → logprob: -5.345165252685547
    6. ' une' → logprob: -5.470165252685547
    7. ' aucune' → logprob: -5.720165252685547
    8. 'plus' → logprob: -6.220165252685547
    9. ' un' → logprob: -6.345165252685547
    10. ' des' → logprob: -6.595165252685547

Token 66: ' vente' (ID: 39138)
  Prédit: 'vente'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vente' → logprob: -0.38777825236320496
    2. ' vente' → logprob: -1.2627782821655273
    3. 'vent' → logprob: -4.012778282165527
    4. ' ' → logprob: -4.637778282165527
    5. '   ' → logprob: -5.887778282165527
    6. '_' → logprob: -6.137778282165527
    7. '  ' → logprob: -7.012778282165527
    8. ' ventes' → logprob: -7.262778282165527
    9. 'vend' → logprob: -7.387778282165527
    10. 'é' → logprob: -7.887778282165527

Token 67: ' pour' (ID: 1930)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03641343489289284
    2. ' pour' → logprob: -4.036413669586182
    3. ' ,' → logprob: -4.286413669586182
    4. ' ' → logprob: -6.411413669586182
    5. ' for' → logprob: -7.286413669586182
    6. ' d' → logprob: -7.411413669586182
    7. ' de' → logprob: -7.786413669586182
    8. 'pour' → logprob: -7.786413669586182
    9. ' on' → logprob: -8.661413192749023
    10. 's' → logprob: -10.036413192749023

Token 68: ' un' (ID: 537)
  Prédit: ' ce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ce' → logprob: -0.1282256692647934
    2. ' un' → logprob: -2.503225564956665
    3. 'ce' → logprob: -3.878225564956665
    4. 'un' → logprob: -4.253225803375244
    5. 'c' → logprob: -6.878225803375244
    6. ' ' → logprob: -7.003225803375244
    7. ' le' → logprob: -7.128225803375244
    8. 'le' → logprob: -8.753225326538086
    9. ' cet' → logprob: -8.878225326538086
    10. '```' → logprob: -9.628225326538086

Token 69: ' type' (ID: 1490)
  Prédit: ' type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' type' → logprob: -0.20725224912166595
    2. 'type' → logprob: -1.7072522640228271
    3. 'certain' → logprob: -6.082252025604248
    4. ' certain' → logprob: -6.457252025604248
    5. ' ' → logprob: -7.582252025604248
    6. ' given' → logprob: -8.957252502441406
    7. '```' → logprob: -9.144752502441406
    8. ' #' → logprob: -9.144752502441406
    9. ' produit' → logprob: -9.394752502441406
    10. '#' → logprob: -9.457252502441406

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030065637081861496
    2. ' ,' → logprob: -3.6550655364990234
    3. ' ' → logprob: -7.155065536499023
    4. ':' → logprob: -7.280065536499023
    5. ''' → logprob: -7.655065536499023
    6. '.' → logprob: -8.280065536499023
    7. ' on' → logprob: -8.280065536499023
    8. ' :' → logprob: -8.280065536499023
    9. ' rien' → logprob: -9.155065536499023
    10. 'on' → logprob: -9.655065536499023

Token 71: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.08977647125720978
    2. ' ' → logprob: -2.8397765159606934
    3. 'on' → logprob: -4.464776515960693
    4. ' print' → logprob: -4.839776515960693
    5. 'print' → logprob: -6.089776515960693
    6. '   ' → logprob: -6.214776515960693
    7. ' #' → logprob: -7.464776515960693
    8. '#' → logprob: -7.589776515960693
    9. ' ' → logprob: -7.714776515960693
    10. '  ' → logprob: -7.964776515960693

Token 72: ' imprime' (ID: 195564)
  Prédit: ' affiche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' affiche' → logprob: -0.8604298830032349
    2. ' imprime' → logprob: -1.3604298830032349
    3. 'im' → logprob: -2.6104297637939453
    4. 'aff' → logprob: -2.6104297637939453
    5. 'print' → logprob: -2.8604297637939453
    6. ' n' → logprob: -3.4854297637939453
    7. 'n' → logprob: -3.7354297637939453
    8. ' print' → logprob: -3.8604297637939453
    9. ' impr' → logprob: -4.860429763793945
    10. ' met' → logprob: -5.235429763793945

Token 73: ' un' (ID: 537)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.523505687713623
    2. ' "' → logprob: -1.773505687713623
    3. ' ' → logprob: -2.148505687713623
    4. ''' → logprob: -3.398505687713623
    5. ' un' → logprob: -3.898505687713623
    6. ' '' → logprob: -4.273505687713623
    7. ' une' → logprob: -4.523505687713623
    8. '   ' → logprob: -5.023505687713623
    9. '  ' → logprob: -5.461005687713623
    10. '_' → logprob: -5.523505687713623

Token 74: ' tire' (ID: 30796)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.450397253036499
    2. '0' → logprob: -1.575397253036499
    3. '-' → logprob: -1.825397253036499
    4. '*' → logprob: -1.825397253036499
    5. '_' → logprob: -2.825397253036499
    6. ' *' → logprob: -3.575397253036499
    7. '#' → logprob: -4.075397491455078
    8. 'e' → logprob: -4.325397491455078
    9. ' #' → logprob: -4.450397491455078
    10. ' -' → logprob: -4.450397491455078

Token 75: 't' (ID: 83)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.015563379041850567
    2. 't' → logprob: -5.265563488006592
    3. ' -' → logprob: -5.640563488006592
    4. '_' → logprob: -5.890563488006592
    5. 'n' → logprob: -5.890563488006592
    6. 'u' → logprob: -7.640563488006592
    7. 's' → logprob: -7.640563488006592
    8. '#' → logprob: -10.515563011169434
    9. 'r' → logprob: -10.640563011169434
    10. ' ' → logprob: -10.890563011169434

Token 76: '.
' (ID: 558)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9531413316726685
    2. 'd' → logprob: -0.9531413316726685
    3. 'i' → logprob: -2.078141212463379
    4. ':' → logprob: -3.203141212463379
    5. 'v' → logprob: -3.328141212463379
    6. 'n' → logprob: -4.703141212463379
    7. '```' → logprob: -5.953141212463379
    8. 'import' → logprob: -6.078141212463379
    9. '[' → logprob: -6.203141212463379
    10. 's' → logprob: -6.578141212463379

Token 77: '#' (ID: 2)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.9513761401176453
    2. '#' → logprob: -1.32637619972229
    3. 'd' → logprob: -1.32637619972229
    4. 'i' → logprob: -3.07637619972229
    5. 't' → logprob: -4.826375961303711
    6. 'n' → logprob: -5.201375961303711
    7. 'import' → logprob: -5.576375961303711
    8. '```' → logprob: -5.576375961303711
    9. 's' → logprob: -6.076375961303711
    10. ':' → logprob: -6.326375961303711

Token 78: ' L' (ID: 451)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8746857643127441
    2. 'v' → logprob: -1.3746857643127441
    3. '#' → logprob: -1.6246857643127441
    4. 'i' → logprob: -2.499685764312744
    5. 't' → logprob: -3.999685764312744
    6. 'n' → logprob: -4.499685764312744
    7. 'import' → logprob: -4.999685764312744
    8. 's' → logprob: -5.749685764312744
    9. 'from' → logprob: -6.249685764312744
    10. '```' → logprob: -6.374685764312744

Token 79: ''entrée' (ID: 115820)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5866589546203613
    2. 'i' → logprob: -1.0866589546203613
    3. 'a' → logprob: -2.7116589546203613
    4. '#' → logprob: -3.5866589546203613
    5. 'iste' → logprob: -6.336658954620361
    6. 'ignes' → logprob: -6.336658954620361
    7. ''' → logprob: -6.586658954620361
    8. 'es' → logprob: -6.836658954620361
    9. 'o' → logprob: -6.961658954620361
    10. ''i' → logprob: -7.086658954620361

Token 80: ' se' (ID: 458)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5395186543464661
    2. ' ' → logprob: -2.1645185947418213
    3. 'data' → logprob: -2.4145185947418213
    4. 'n' → logprob: -3.1645185947418213
    5. 'd' → logprob: -3.5395185947418213
    6. ' =' → logprob: -3.6645185947418213
    7. ' ice' → logprob: -3.6645185947418213
    8. ' data' → logprob: -4.1645188331604
    9. '_' → logprob: -4.5395188331604
    10. '#' → logprob: -4.7895188331604

Token 81: ' termine' (ID: 76900)
  Prédit: 'ra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ra' → logprob: -0.6541652679443359
    2. 't' → logprob: -2.154165267944336
    3. 'nt' → logprob: -2.529165267944336
    4. 'ffect' → logprob: -3.029165267944336
    5. ''agit' → logprob: -3.154165267944336
    6. 'çoit' → logprob: -3.279165267944336
    7. 'r' → logprob: -4.279165267944336
    8. 'ré' → logprob: -4.404165267944336
    9. 'fait' → logprob: -4.654165267944336
    10. 'compose' → logprob: -4.779165267944336

Token 82: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.28563860058784485
    2. ' ' → logprob: -2.0356385707855225
    3. '.' → logprob: -3.5356385707855225
    4. ':' → logprob: -3.6606385707855225
    5. 'par' → logprob: -4.035638809204102
    6. ',' → logprob: -4.410638809204102
    7. 's' → logprob: -4.410638809204102
    8. ' à' → logprob: -6.285638809204102
    9. ' au' → logprob: -6.410638809204102
    10. ' (' → logprob: -6.410638809204102

Token 83: ' un' (ID: 537)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -1.3476990461349487
    2. 'une' → logprob: -2.0976991653442383
    3. 'EOF' → logprob: -2.0976991653442383
    4. '""' → logprob: -2.3476991653442383
    5. '''' → logprob: -2.4726991653442383
    6. ' un' → logprob: -2.4726991653442383
    7. ' EOF' → logprob: -2.7226991653442383
    8. 'un' → logprob: -3.0976991653442383
    9. '"' → logprob: -3.3476991653442383
    10. '```' → logprob: -3.9726991653442383

Token 84: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12602154910564423
    2. ' ' → logprob: -3.00102162361145
    3. '-' → logprob: -3.75102162361145
    4. '.' → logprob: -4.251021385192871
    5. 'EOF' → logprob: -5.126021385192871
    6. '9' → logprob: -5.251021385192871
    7. 'n' → logprob: -6.251021385192871
    8. 'z' → logprob: -6.251021385192871
    9. '```' → logprob: -6.376021385192871
    10. ' EOF' → logprob: -6.376021385192871

Token 85: ' seul' (ID: 33041)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.560585618019104
    2. 'n' → logprob: -1.810585618019104
    3. 'v' → logprob: -2.4355854988098145
    4. 'd' → logprob: -2.5605854988098145
    5. 'i' → logprob: -2.6855854988098145
    6. 't' → logprob: -4.6855854988098145
    7. '0' → logprob: -5.8105854988098145
    8. '```' → logprob: -5.8105854988098145
    9. '1' → logprob: -6.0605854988098145
    10. 's' → logprob: -6.1855854988098145

Token 86: '.

' (ID: 364)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0662442445755005
    2. 'n' → logprob: -1.5662442445755005
    3. 'd' → logprob: -1.8162442445755005
    4. 'v' → logprob: -2.191244125366211
    5. 'i' → logprob: -2.441244125366211
    6. 't' → logprob: -4.191244125366211
    7. 'data' → logprob: -4.316244125366211
    8. 's' → logprob: -4.816244125366211
    9. '```' → logprob: -4.941244125366211
    10. ':' → logprob: -5.191244125366211

Token 87: 'while' (ID: 7032)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9041341543197632
    2. '#' → logprob: -1.5291341543197632
    3. 'd' → logprob: -1.6541341543197632
    4. 'i' → logprob: -2.1541342735290527
    5. 'v' → logprob: -3.4041342735290527
    6. 't' → logprob: -4.279134273529053
    7. '```' → logprob: -4.404134273529053
    8. '1' → logprob: -5.904134273529053
    9. 'data' → logprob: -6.404134273529053
    10. 'import' → logprob: -6.529134273529053

Token 88: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.007655257824808359
    2. ' ' → logprob: -4.882655143737793
    3. 'True' → logprob: -10.382655143737793
    4. ' input' → logprob: -11.257655143737793
    5. '  ' → logprob: -13.007655143737793
    6. ' i' → logprob: -13.882655143737793
    7. '(True' → logprob: -14.382655143737793
    8. ' true' → logprob: -15.007655143737793
    9. ' ```' → logprob: -16.00765609741211
    10. '_' → logprob: -16.13265609741211

Token 89: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00320433103479445
    2. ' :' → logprob: -5.753204345703125
    3. ':
' → logprob: -10.628204345703125
    4. ',' → logprob: -14.003204345703125
    5. '():' → logprob: -14.253204345703125
    6. ' :
' → logprob: -15.128204345703125
    7. '):' → logprob: -16.128204345703125
    8. ':**' → logprob: -16.253204345703125
    9. ':

' → logprob: -16.503204345703125
    10. ' ,' → logprob: -17.378204345703125

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.568879246711731
    2. ' vente' → logprob: -1.443879246711731
    3. ' data' → logprob: -2.1938791275024414
    4. ' line' → logprob: -3.5688791275024414
    5. ' ventes' → logprob: -3.9438791275024414
    6. ' input' → logprob: -4.068879127502441
    7. ' sales' → logprob: -5.568879127502441
    8. ' s' → logprob: -6.068879127502441
    9. ' vendu' → logprob: -6.318879127502441
    10. ' ligne' → logprob: -6.443879127502441

Token 91: ' n' (ID: 297)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -1.1821848154067993
    2. ' line' → logprob: -1.8071848154067993
    3. ' data' → logprob: -1.9321848154067993
    4. 'line' → logprob: -2.0571846961975098
    5. 'vente' → logprob: -2.8071846961975098
    6. 'ligne' → logprob: -3.0571846961975098
    7. ' ligne' → logprob: -3.4321846961975098
    8. ' vente' → logprob: -3.8071846961975098
    9. 'v' → logprob: -3.8071846961975098
    10. ' ventes' → logprob: -3.8071846961975098

Token 92: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06726141273975372
    2. '=' → logprob: -2.8172614574432373
    3. '=input' → logprob: -6.067261219024658
    4. '=int' → logprob: -6.192261219024658
    5. ' ' → logprob: -7.692261219024658
    6. 'umber' → logprob: -8.817261695861816
    7. 'v' → logprob: -9.692261695861816
    8. 'ombre' → logprob: -9.692261695861816
    9. 'um' → logprob: -10.067261695861816
    10. 'vent' → logprob: -10.317261695861816

Token 93: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.0208755731582642
    2. ' int' → logprob: -1.1458755731582642
    3. ' input' → logprob: -1.5208755731582642
    4. 'input' → logprob: -2.2708754539489746
    5. ' ' → logprob: -10.645875930786133
    6. '=int' → logprob: -13.520875930786133
    7. '(int' → logprob: -13.645875930786133
    8. '	int' → logprob: -13.895875930786133
    9. '	input' → logprob: -14.270875930786133
    10. '```' → logprob: -14.270875930786133

Token 94: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.004083385691046715
    2. '(' → logprob: -5.504083156585693
    3. 'input' → logprob: -12.629083633422852
    4. '(
' → logprob: -14.379083633422852
    5. '()' → logprob: -14.504083633422852
    6. ' (' → logprob: -15.129083633422852
    7. '=input' → logprob: -15.629083633422852
    8. '(

' → logprob: -16.37908363342285
    9. '```' → logprob: -17.75408363342285
    10. ' input' → logprob: -17.87908363342285

Token 95: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0005931860650889575
    2. '()' → logprob: -7.500593185424805
    3. '())
' → logprob: -10.500593185424805
    4. '()))' → logprob: -12.750593185424805
    5. '(' → logprob: -13.000593185424805
    6. ' ())' → logprob: -13.375593185424805
    7. '("' → logprob: -13.500593185424805
    8. '()>' → logprob: -13.875593185424805
    9. '(""))' → logprob: -14.000593185424805
    10. '())

' → logprob: -14.000593185424805

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.2987729102605954e-05
    2. ' if' → logprob: -10.500042915344238
    3. '<|end|>' → logprob: -12.000042915344238
    4. 'if' → logprob: -12.625042915344238
    5. '  ' → logprob: -13.250042915344238
    6. '    
' → logprob: -13.375042915344238
    7. '    ' → logprob: -13.500042915344238
    8. ' ' → logprob: -14.625042915344238
    9. '   ' → logprob: -15.250042915344238
    10. '<|end|>' → logprob: -15.250042915344238

Token 97: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.08913325518369675
    2. 'if' (adapté à ' if') → logprob: -2.5891332626342773
    3. '   ' → logprob: -4.589133262634277
    4. '    ' → logprob: -11.589133262634277
    5. '    
' → logprob: -12.089133262634277
    6. ' ' → logprob: -12.339133262634277
    7. ' 
' → logprob: -12.464133262634277
    8. 's' → logprob: -13.089133262634277
    9. '  ' → logprob: -13.339133262634277
    10. '	if' → logprob: -14.589133262634277

Token 98: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0024768433067947626
    2. 'n' → logprob: -6.002476692199707
    3. ' not' → logprob: -14.002476692199707
    4. ' ' → logprob: -15.752476692199707
    5. '	n' → logprob: -16.377477645874023
    6. ' ' → logprob: -16.627477645874023
    7. 'not' → logprob: -18.627477645874023
    8. ' н' → logprob: -19.377477645874023
    9. '_n' → logprob: -20.502477645874023
    10. '  ' → logprob: -20.752477645874023

Token 99: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2812681496143341
    2. '==' → logprob: -1.4062681198120117
    3. '=' → logprob: -10.031268119812012
    4. ' ' → logprob: -10.156268119812012
    5. '0' → logprob: -11.031268119812012
    6. ' =' → logprob: -12.281268119812012
    7. ')' → logprob: -12.781268119812012
    8. '```' → logprob: -12.906268119812012
    9. ' ' → logprob: -13.031268119812012
    10. ')==' → logprob: -13.656268119812012

Token 100: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031777136027812958
    2. ' ' → logprob: -5.753177642822266
    3. '   ' → logprob: -17.753177642822266
    4. '  ' → logprob: -21.128177642822266
    5. '```' → logprob: -21.378177642822266
    6. '۰' → logprob: -22.003177642822266
    7. ' ' → logprob: -22.128177642822266
    8. ' ' → logprob: -23.378177642822266
    9. '٠' → logprob: -23.378177642822266
    10. '０' → logprob: -23.753177642822266

Token 101: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '۰' → logprob: -20.25002098083496
    4. '  ' → logprob: -20.62502098083496
    5. '   ' → logprob: -20.87502098083496
    6. '```' → logprob: -21.00002098083496
    7. '０' → logprob: -22.00002098083496
    8. '٠' → logprob: -22.12502098083496
    9. '০' → logprob: -22.37502098083496
    10. ')' → logprob: -22.50002098083496

Token 102: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001121999230235815
    2. ':
' → logprob: -7.126121997833252
    3. '   ' → logprob: -8.12612247467041
    4. '       ' → logprob: -11.00112247467041
    5. ' :' → logprob: -12.37612247467041
    6. '    ' → logprob: -15.87612247467041
    7. ' ' → logprob: -16.001121520996094
    8. '  ' → logprob: -16.376121520996094
    9. ':
' → logprob: -16.501121520996094
    10. '	break' → logprob: -16.501121520996094

Token 103: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022205570712685585
    2. '   ' → logprob: -6.127220630645752
    3. ' break' → logprob: -10.752220153808594
    4. 'break' → logprob: -12.877220153808594
    5. '
' → logprob: -13.002220153808594
    6. '	break' → logprob: -13.002220153808594
    7. '      ' → logprob: -13.502220153808594
    8. '     ' → logprob: -13.752220153808594
    9. '    
' → logprob: -13.752220153808594
    10. '           ' → logprob: -13.877220153808594

Token 104: ' #' (ID: 1069)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.477915495634079
    2. 'break' → logprob: -0.9779155254364014
    3. '   ' → logprob: -6.352915287017822
    4. '       ' → logprob: -6.352915287017822
    5. '	break' → logprob: -7.977915287017822
    6. ' ' → logprob: -13.60291576385498
    7. '           ' → logprob: -13.85291576385498
    8. '
' → logprob: -14.22791576385498
    9. '_break' → logprob: -14.22791576385498
    10. '```' → logprob: -15.47791576385498

Token 105: ' Fin' (ID: 7772)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.31610462069511414
    2. 'break' → logprob: -1.3161046504974365
    3. '   ' → logprob: -5.941104412078857
    4. '       ' → logprob: -9.441104888916016
    5. '	break' → logprob: -9.941104888916016
    6. ' ' → logprob: -10.316104888916016
    7. '
' → logprob: -11.066104888916016
    8. '  ' → logprob: -11.691104888916016
    9. '    ' → logprob: -12.316104888916016
    10. ' ' → logprob: -12.691104888916016

Token 106: ' des' (ID: 731)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04315881431102753
    2. '   ' → logprob: -3.168158769607544
    3. '    ' → logprob: -10.168158531188965
    4. '      ' → logprob: -10.293158531188965
    5. '           ' → logprob: -10.418158531188965
    6. '     ' → logprob: -10.418158531188965
    7. ' break' → logprob: -11.918158531188965
    8. 'break' → logprob: -12.168158531188965
    9. '	break' → logprob: -12.793158531188965
    10. '  ' → logprob: -13.043158531188965

Token 107: ' entr' (ID: 7072)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.09978114068508148
    2. 'don' → logprob: -3.349781036376953
    3. 'vent' → logprob: -3.849781036376953
    4. ' données' → logprob: -4.349781036376953
    5. 'datasets' → logprob: -4.724781036376953
    6. 'tests' → logprob: -5.724781036376953
    7. 'entr' → logprob: -6.099781036376953
    8. 'program' → logprob: -6.099781036376953
    9. ' programmes' → logprob: -6.224781036376953
    10. 'datas' → logprob: -6.599781036376953

Token 108: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.0033412138000130653
    2. 'ees' → logprob: -5.753341197967529
    3. 'ée' → logprob: -8.878341674804688
    4. 'es' → logprob: -11.753341674804688
    5. 'és' → logprob: -11.878341674804688
    6. 'é' → logprob: -12.628341674804688
    7. '```' → logprob: -13.378341674804688
    8. '#' → logprob: -14.003341674804688
    9. 'ee' → logprob: -14.128341674804688
    10. 'e' → logprob: -14.378341674804688

Token 109: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00023095356300473213
    2. '   ' → logprob: -8.50023078918457
    3. ' break' → logprob: -10.87523078918457
    4. 'break' → logprob: -13.00023078918457
    5. '	break' → logprob: -13.37523078918457
    6. '           ' → logprob: -13.62523078918457
    7. '      ' → logprob: -13.62523078918457
    8. '     ' → logprob: -14.12523078918457
    9. '
' → logprob: -14.25023078918457
    10. '    ' → logprob: -15.50023078918457

Token 110: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.110668618930504e-05
    2. '   ' → logprob: -10.37506103515625
    3. ' break' → logprob: -11.00006103515625
    4. 'break' → logprob: -11.50006103515625
    5. '	break' → logprob: -13.75006103515625
    6. '           ' → logprob: -13.87506103515625
    7. '      ' → logprob: -14.50006103515625
    8. '     ' → logprob: -15.75006103515625
    9. '
' → logprob: -16.25006103515625
    10. '        ' → logprob: -16.62506103515625

Token 111: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.018877586349844933
    2. ' break' → logprob: -4.0188775062561035
    3. '   ' → logprob: -7.6438775062561035
    4. '       ' → logprob: -8.393877983093262
    5. '	break' → logprob: -10.768877983093262
    6. '```' → logprob: -14.518877983093262
    7. '_break' → logprob: -15.643877983093262
    8. 'Break' → logprob: -16.143877029418945
    9. 'b' → logprob: -16.393877029418945
    10. '
' → logprob: -16.518877029418945

Token 112: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1492912620306015
    2. '    
' → logprob: -2.5242912769317627
    3. '
' → logprob: -2.8992912769317627
    4. 'counts' → logprob: -7.524291038513184
    5. 'data' → logprob: -7.899291038513184
    6. '  
' → logprob: -8.149291038513184
    7. '   
' → logprob: -8.274291038513184
    8. 'sales' → logprob: -8.399291038513184
    9. 'v' → logprob: -8.649291038513184
    10. 'counter' → logprob: -9.024291038513184

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014584522694349289
    2. '    
' → logprob: -4.764584541320801
    3. 'counts' → logprob: -5.764584541320801
    4. 'data' → logprob: -7.139584541320801
    5. 'sales' → logprob: -7.389584541320801
    6. 'v' → logprob: -7.889584541320801
    7. 'from' → logprob: -8.6395845413208
    8. 'types' → logprob: -9.2645845413208
    9. 'counter' → logprob: -9.5145845413208
    10. 'vent' → logprob: -9.5145845413208

Token 114: ' #' (ID: 1069)
  Prédit: 'vent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vent' → logprob: -1.013419508934021
    2. 'counts' → logprob: -1.263419508934021
    3. '   ' → logprob: -1.638419508934021
    4. 'sales' → logprob: -2.6384196281433105
    5. 'vente' → logprob: -3.8884196281433105
    6. 'data' → logprob: -4.0134196281433105
    7. '#' (adapté à ' #') → logprob: -4.7634196281433105
    8. 'count' → logprob: -4.7634196281433105
    9. 'v' → logprob: -4.8884196281433105
    10. 'vents' → logprob: -5.2634196281433105

Token 115: ' Initial' (ID: 9209)
  Prédit: 'vent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vent' → logprob: -0.6586937308311462
    2. '#' → logprob: -1.658693790435791
    3. '   ' → logprob: -2.408693790435791
    4. 'counts' → logprob: -2.658693790435791
    5. 'sales' → logprob: -3.658693790435791
    6. 'vente' → logprob: -3.783693790435791
    7. 'data' → logprob: -3.783693790435791
    8. 'v' → logprob: -4.283693790435791
    9. ' ventes' → logprob: -5.283693790435791
    10. 'votes' → logprob: -5.408693790435791

Token 116: 'isation' (ID: 6993)
  Prédit: 'iser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.20862343907356262
    2. 'al' → logprob: -2.3336234092712402
    3. 'isation' → logprob: -2.7086234092712402
    4. 'isations' → logprob: -4.58362340927124
    5. 'er' → logprob: -5.45862340927124
    6. 'ise' → logprob: -6.08362340927124
    7. 'is' → logprob: -6.45862340927124
    8. '   ' → logprob: -6.95862340927124
    9. 'izer' → logprob: -7.20862340927124
    10. 'ize' → logprob: -7.58362340927124

Token 117: ' d' (ID: 272)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.41553691029548645
    2. '   ' → logprob: -1.290536880493164
    3. 'v' → logprob: -4.165536880493164
    4. ' counts' → logprob: -4.290536880493164
    5. 'vent' → logprob: -4.665536880493164
    6. 'count' → logprob: -4.915536880493164
    7. ' ventes' → logprob: -5.040536880493164
    8. 'sales' → logprob: -5.290536880493164
    9. 'vend' → logprob: -6.540536880493164
    10. 'vente' → logprob: -7.290536880493164

Token 118: ''une' (ID: 13337)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -1.4953550100326538
    2. '   ' → logprob: -1.6203550100326538
    3. ''un' → logprob: -1.7453550100326538
    4. 'e' → logprob: -2.1203551292419434
    5. ' un' → logprob: -2.4953551292419434
    6. 'un' → logprob: -2.7453551292419434
    7. ''une' → logprob: -3.9953551292419434
    8. ' la' → logprob: -3.9953551292419434
    9. ' les' → logprob: -4.120355129241943
    10. 'les' → logprob: -4.245355129241943

Token 119: ' liste' (ID: 31719)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9855237007141113
    2. 'v' → logprob: -1.6105237007141113
    3. 'vent' → logprob: -1.6105237007141113
    4. 'vente' → logprob: -1.9855237007141113
    5. 'counts' → logprob: -2.8605237007141113
    6. 'liste' → logprob: -4.860523700714111
    7. 'vents' → logprob: -5.610523700714111
    8. 'dict' → logprob: -5.610523700714111
    9. ' ventes' → logprob: -5.860523700714111
    10. 'count' → logprob: -5.985523700714111

Token 120: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2676680088043213
    2. 'counts' → logprob: -2.2676680088043213
    3. ' des' → logprob: -2.7676680088043213
    4. '[' → logprob: -4.267667770385742
    5. 'des' → logprob: -4.267667770385742
    6. ' counts' → logprob: -4.267667770385742
    7. 'v' → logprob: -5.017667770385742
    8. 'de' → logprob: -5.392667770385742
    9. 'count' → logprob: -5.392667770385742
    10. 'vend' → logprob: -6.017667770385742

Token 121: ' compter' (ID: 81694)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.2677110433578491
    2. ' compter' → logprob: -1.7677110433578491
    3. ' stock' → logprob: -4.017711162567139
    4. 'les' → logprob: -4.017711162567139
    5. 'com' → logprob: -4.642711162567139
    6. 'stock' → logprob: -4.892711162567139
    7. ' les' → logprob: -5.642711162567139
    8. 'count' → logprob: -6.392711162567139
    9. ' compt' → logprob: -6.642711162567139
    10. 'con' → logprob: -7.142711162567139

Token 122: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.3247261345386505
    2. 'les' → logprob: -1.3247261047363281
    3. '   ' → logprob: -4.824726104736328
    4. '[' → logprob: -7.074726104736328
    5. '[]' → logprob: -7.199726104736328
    6. 'counts' → logprob: -8.074726104736328
    7. ' ' → logprob: -8.574726104736328
    8. ' la' → logprob: -9.074726104736328
    9. '    ' → logprob: -9.074726104736328
    10. ' des' → logprob: -9.324726104736328

Token 123: ' ventes' (ID: 99004)
  Prédit: 'vent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vent' → logprob: -0.010574458166956902
    2. ' ventes' → logprob: -5.3855743408203125
    3. 'vents' → logprob: -5.7605743408203125
    4. 'vente' → logprob: -7.0105743408203125
    5. 'occ' → logprob: -7.8855743408203125
    6. 'vend' → logprob: -8.385574340820312
    7. 'types' → logprob: -8.385574340820312
    8. 'quant' → logprob: -8.385574340820312
    9. 'vende' → logprob: -9.135574340820312
    10. 'votes' → logprob: -9.135574340820312

Token 124: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06111600622534752
    2. 'counts' → logprob: -3.3111159801483154
    3. ' ventes' → logprob: -5.3111162185668945
    4. 'sales' → logprob: -5.5611162185668945
    5. 'count' → logprob: -5.8111162185668945
    6. ' counts' → logprob: -5.8111162185668945
    7. 'vent' → logprob: -6.1861162185668945
    8. 'v' → logprob: -6.3111162185668945
    9. ' sales' → logprob: -6.9361162185668945
    10. 'vend' → logprob: -7.6861162185668945

Token 125: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.2110186219215393
    2. '10' → logprob: -2.7110185623168945
    3. 'types' → logprob: -2.9610185623168945
    4. 'ch' → logprob: -3.5860185623168945
    5. 'each' → logprob: -4.2110185623168945
    6. 'cha' → logprob: -4.4610185623168945
    7. ' ' → logprob: -5.3360185623168945
    8. ' each' → logprob: -5.4610185623168945
    9. ' types' → logprob: -5.7110185623168945
    10. ' chacun' → logprob: -6.7110185623168945

Token 126: ' type' (ID: 1490)
  Prédit: ' type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' type' → logprob: -0.3493286669254303
    2. 'type' → logprob: -1.224328637123108
    3. ' glace' → logprob: -8.099328994750977
    4. 'gl' → logprob: -8.599328994750977
    5. 'types' → logprob: -8.974328994750977
    6. ' ' → logprob: -9.849328994750977
    7. ' types' → logprob: -9.974328994750977
    8. ' gl' → logprob: -10.474328994750977
    9. ' ice' → logprob: -11.099328994750977
    10. '_type' → logprob: -11.099328994750977

Token 127: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17983822524547577
    2. 'counts' → logprob: -2.554838180541992
    3. ' ventes' → logprob: -3.804838180541992
    4. 'count' → logprob: -4.054838180541992
    5. ' counts' → logprob: -4.179838180541992
    6. 'sales' → logprob: -4.554838180541992
    7. ' sales' → logprob: -5.429838180541992
    8. 'v' → logprob: -5.929838180541992
    9. 'vent' → logprob: -6.304838180541992
    10. ' des' → logprob: -6.554838180541992

Token 128: '0' (ID: 15)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4240836203098297
    2. '10' → logprob: -1.2990835905075073
    3. '0' → logprob: -3.174083709716797
    4. ')' → logprob: -4.049083709716797
    5. ' ice' → logprob: -4.799083709716797
    6. '[' → logprob: -6.924083709716797
    7. ' types' → logprob: -7.174083709716797
    8. '   ' → logprob: -7.549083709716797
    9. 'types' → logprob: -7.549083709716797
    10. ' [' → logprob: -7.549083709716797

Token 129: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.6378378868103027
    2. 'à' → logprob: -0.8878378868103027
    3. ',' → logprob: -3.5128378868103027
    4. ')' → logprob: -3.6378378868103027
    5. ':' → logprob: -7.262837886810303
    6. '=' → logprob: -7.387837886810303
    7. 'À' → logprob: -7.762837886810303
    8. '```' → logprob: -8.012838363647461
    9. ''à' → logprob: -8.012838363647461
    10. '-' → logprob: -8.887838363647461

Token 130: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.00029828163678757846
    2. ' ' → logprob: -8.125298500061035
    3. '   ' → logprob: -13.125298500061035
    4. '  ' → logprob: -16.75029754638672
    5. '    ' → logprob: -17.00029754638672
    6. ' neuf' → logprob: -17.25029754638672
    7. '=' → logprob: -18.00029754638672
    8. '```' → logprob: -18.12529754638672
    9. ',' → logprob: -18.75029754638672
    10. '
' → logprob: -18.75029754638672

Token 131: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. ' neuf' → logprob: -18.37502098083496
    4. '   ' → logprob: -18.87502098083496
    5. '```' → logprob: -20.25002098083496
    6. '
' → logprob: -20.37502098083496
    7. '９' → logprob: -20.37502098083496
    8. '  ' → logprob: -20.37502098083496
    9. '۹' → logprob: -20.87502098083496
    10. ' nine' → logprob: -21.50002098083496

Token 132: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2866799831390381
    2. ')
' → logprob: -1.411679983139038
    3. '   ' → logprob: -5.286680221557617
    4. ',' → logprob: -9.286680221557617
    5. ').' → logprob: -9.536680221557617
    6. ')
' → logprob: -9.786680221557617
    7. 'counts' → logprob: -9.911680221557617
    8. ' )
' → logprob: -10.161680221557617
    9. ' )' → logprob: -10.286680221557617
    10. 'count' → logprob: -11.161680221557617

Token 133: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01885431446135044
    2. 'counts' → logprob: -5.143854141235352
    3. ' ventes' → logprob: -6.018854141235352
    4. '    
' → logprob: -6.018854141235352
    5. 'sales' → logprob: -6.143854141235352
    6. 'count' → logprob: -6.643854141235352
    7. ' counts' → logprob: -6.643854141235352
    8. 'vent' → logprob: -7.018854141235352
    9. 'v' → logprob: -7.518854141235352
    10. ' sales' → logprob: -7.643854141235352

Token 134: ' counts' (ID: 28991)
  Prédit: 'sales'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sales' → logprob: -1.1218181848526
    2. 'counts' (adapté à ' counts') → logprob: -1.3718181848526
    3. 'vent' → logprob: -1.6218181848526
    4. ' ventes' → logprob: -1.8718181848526
    5. ' sales' → logprob: -3.7468180656433105
    6. 'vente' → logprob: -4.1218180656433105
    7. 'count' → logprob: -4.6218180656433105
    8. '   ' → logprob: -5.1218180656433105
    9. ' counts' → logprob: -5.3718180656433105
    10. 'v' → logprob: -5.8718180656433105

Token 135: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859282076358795
    2. '=' → logprob: -3.0485928058624268
    3. '[' → logprob: -13.423592567443848
    4. ' ' → logprob: -13.548592567443848
    5. ')' → logprob: -14.548592567443848
    6. 's' → logprob: -14.673592567443848
    7. ']' → logprob: -14.673592567443848
    8. ' =[' → logprob: -14.798592567443848
    9. '=[' → logprob: -15.048592567443848
    10. '=[]' → logprob: -15.673592567443848

Token 136: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.061967913061380386
    2. ' [' → logprob: -2.8119678497314453
    3. ' ' → logprob: -15.811967849731445
    4. '   ' → logprob: -15.936967849731445
    5. '10' → logprob: -16.811967849731445
    6. ' ' → logprob: -17.686967849731445
    7. '[int' → logprob: -18.186967849731445
    8. '([' → logprob: -18.686967849731445
    9. '0' → logprob: -19.311967849731445
    10. '[len' → logprob: -19.936967849731445

Token 137: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -17.500003814697266
    4. '  ' → logprob: -20.750003814697266
    5. ']' → logprob: -20.750003814697266
    6. '    ' → logprob: -21.250003814697266
    7. '     ' → logprob: -21.250003814697266
    8. '```' → logprob: -21.500003814697266
    9. '000' → logprob: -22.000003814697266
    10. '       ' → logprob: -22.000003814697266

Token 138: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4033753573894501
    2. ']*' → logprob: -1.4033753871917725
    3. ' for' → logprob: -2.6533753871917725
    4. 'for' → logprob: -4.153375148773193
    5. ' ]' → logprob: -10.278375625610352
    6. ')' → logprob: -12.778375625610352
    7. '   ' → logprob: -12.903375625610352
    8. '	for' → logprob: -13.278375625610352
    9. '```' → logprob: -13.403375625610352
    10. ' ' → logprob: -13.653375625610352

Token 139: ' *' (ID: 425)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1020270586013794
    2. '*' → logprob: -1.2270270586013794
    3. ' for' → logprob: -1.2270270586013794
    4. ']*' → logprob: -2.85202693939209
    5. ']' → logprob: -3.85202693939209
    6. ' *' → logprob: -6.35202693939209
    7. '   ' → logprob: -8.22702693939209
    8. '0' → logprob: -8.72702693939209
    9. '	for' → logprob: -9.60202693939209
    10. ')' → logprob: -9.97702693939209

Token 140: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -19.8750057220459
    4. '1' → logprob: -20.6250057220459
    5. '9' → logprob: -22.1250057220459
    6. '(' → logprob: -22.1250057220459
    7. '۱۰' → logprob: -22.3750057220459
    8. '```' → logprob: -22.3750057220459
    9. '１０' → logprob: -22.7500057220459
    10. '  ' → logprob: -23.1250057220459

Token 141: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.375000953674316
    3. '1' → logprob: -16.0
    4. '9' → logprob: -21.125
    5. '(' → logprob: -22.0
    6. '۱۰' → logprob: -22.0
    7. '```' → logprob: -22.625
    8. '0' → logprob: -22.75
    9. '１０' → logprob: -22.875
    10. '   ' → logprob: -23.25

Token 142: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05261844024062157
    2. '    
' → logprob: -3.3026185035705566
    3. '
' → logprob: -4.427618503570557
    4. 'for' → logprob: -6.927618503570557
    5. ' for' → logprob: -7.302618503570557
    6. '   
' → logprob: -8.427618026733398
    7. '  
' → logprob: -8.552618026733398
    8. 'n' → logprob: -8.927618026733398
    9. '<|end|>' → logprob: -9.052618026733398
    10. '  ' → logprob: -10.302618026733398

Token 143: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010257339105010033
    2. 'for' → logprob: -5.260257244110107
    3. ' for' → logprob: -6.260257244110107
    4. '    
' → logprob: -6.385257244110107
    5. 'data' → logprob: -7.260257244110107
    6. '  ' → logprob: -8.635257720947266
    7. 'while' → logprob: -9.385257720947266
    8. '  
' → logprob: -9.510257720947266
    9. '
' → logprob: -9.635257720947266
    10. 'line' → logprob: -9.885257720947266

Token 144: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008982427418231964
    2. 'data' → logprob: -6.1339826583862305
    3. 'line' → logprob: -6.5089826583862305
    4. 'while' → logprob: -6.6339826583862305
    5. 'types' → logprob: -6.8839826583862305
    6. 'sales' → logprob: -6.8839826583862305
    7. '   ' → logprob: -7.0089826583862305
    8. 'counts' → logprob: -8.63398265838623
    9. 'numbers' → logprob: -9.00898265838623
    10. '#' (adapté à ' #') → logprob: -9.25898265838623

Token 145: ' Lecture' (ID: 106534)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01048858743160963
    2. ' for' → logprob: -5.510488510131836
    3. 'data' → logprob: -6.135488510131836
    4. '   ' → logprob: -6.260488510131836
    5. 'line' → logprob: -7.885488510131836
    6. 'sales' → logprob: -8.135488510131836
    7. 'vente' → logprob: -8.135488510131836
    8. 'v' → logprob: -8.510488510131836
    9. '#' → logprob: -8.510488510131836
    10. 'types' → logprob: -8.635488510131836

Token 146: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09950653463602066
    2. 'for' → logprob: -2.9745066165924072
    3. ' for' → logprob: -4.224506378173828
    4. 'des' → logprob: -4.224506378173828
    5. ' des' → logprob: -4.474506378173828
    6. 'de' → logprob: -7.224506378173828
    7. '  ' → logprob: -7.849506378173828
    8. ' de' → logprob: -7.974506378173828
    9. 'data' → logprob: -8.724506378173828
    10. '    ' → logprob: -8.849506378173828

Token 147: ' types' (ID: 6009)
  Prédit: ' ventes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ventes' → logprob: -0.7060824036598206
    2. 'n' → logprob: -1.2060823440551758
    3. ' n' → logprob: -2.456082344055176
    4. 'vent' → logprob: -3.206082344055176
    5. 'v' → logprob: -3.581082344055176
    6. ' données' → logprob: -4.956082344055176
    7. ' types' → logprob: -5.081082344055176
    8. ' data' → logprob: -5.331082344055176
    9. 'vente' → logprob: -5.831082344055176
    10. 'types' → logprob: -5.956082344055176

Token 148: ' vend' (ID: 10593)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0875539779663086
    2. ' de' → logprob: -3.8375539779663086
    3. 'de' → logprob: -3.9625539779663086
    4. ' for' → logprob: -4.212553977966309
    5. 'for' → logprob: -4.337553977966309
    6. ' vend' → logprob: -5.712553977966309
    7. 'vend' → logprob: -5.712553977966309
    8. 'pour' → logprob: -5.712553977966309
    9. ' pour' → logprob: -6.212553977966309
    10. ' vendu' → logprob: -6.962553977966309

Token 149: 'us' (ID: 385)
  Prédit: 'us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -2.3438327843905427e-05
    2. 'u' → logprob: -12.12502384185791
    3. '#' → logprob: -12.50002384185791
    4. 'ues' → logprob: -12.75002384185791
    5. '
' → logprob: -13.00002384185791
    6. 'es' → logprob: -13.75002384185791
    7. '```' → logprob: -13.75002384185791
    8. 'dus' → logprob: -13.87502384185791
    9. '   ' → logprob: -14.50002384185791
    10. '``' → logprob: -14.50002384185791

Token 150: ' et' (ID: 859)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6994346380233765
    2. '   ' → logprob: -1.0744346380233765
    3. ' for' → logprob: -1.8244346380233765
    4. '	for' → logprob: -9.449434280395508
    5. '    
' → logprob: -9.699434280395508
    6. 'while' → logprob: -9.824434280395508
    7. '  ' → logprob: -10.699434280395508
    8. ',' → logprob: -11.199434280395508
    9. 'types' → logprob: -11.199434280395508
    10. '    ' → logprob: -11.824434280395508

Token 151: ' compt' (ID: 39238)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7444707155227661
    2. ' for' → logprob: -1.6194707155227661
    3. '   ' → logprob: -2.2444705963134766
    4. 'count' → logprob: -2.9944705963134766
    5. ' counting' → logprob: -3.6194705963134766
    6. ' compt' → logprob: -3.8694705963134766
    7. 'while' → logprob: -4.119470596313477
    8. '#' → logprob: -4.244470596313477
    9. ' mise' → logprob: -4.369470596313477
    10. 'increment' → logprob: -4.744470596313477

Token 152: 'age' (ID: 477)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.7895997166633606
    2. 'age' → logprob: -1.0395996570587158
    3. 'e' → logprob: -1.6645996570587158
    4. 'es' → logprob: -6.914599895477295
    5. 'ine' → logprob: -7.539599895477295
    6. 'in' → logprob: -7.789599895477295
    7. 'inue' → logprob: -7.789599895477295
    8. 'ing' → logprob: -9.539599418640137
    9. 'ation' → logprob: -9.664599418640137
    10. 'é' → logprob: -9.789599418640137

Token 153: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11419564485549927
    2. ' for' → logprob: -2.6141955852508545
    3. 'for' → logprob: -3.3641955852508545
    4. '	for' → logprob: -10.114195823669434
    5. '
' → logprob: -11.114195823669434
    6. '  ' → logprob: -11.114195823669434
    7. '    
' → logprob: -11.114195823669434
    8. 'while' → logprob: -12.989195823669434
    9. '    ' → logprob: -13.239195823669434
    10. 'n' → logprob: -13.364195823669434

Token 154: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026706397533416748
    2. ' for' → logprob: -4.026706218719482
    3. 'for' → logprob: -4.776706218719482
    4. '    
' → logprob: -10.40170669555664
    5. '	for' → logprob: -10.65170669555664
    6. '  ' → logprob: -10.77670669555664
    7. '
' → logprob: -11.90170669555664
    8. '    ' → logprob: -12.27670669555664
    9. '   
' → logprob: -13.52670669555664
    10. 'while' → logprob: -13.90170669555664

Token 155: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03327309340238571
    2. 'types' → logprob: -4.408273220062256
    3. ' for' → logprob: -4.658273220062256
    4. '   ' → logprob: -5.658273220062256
    5. 'sales' → logprob: -5.783273220062256
    6. 'data' → logprob: -6.033273220062256
    7. 'v' → logprob: -8.158272743225098
    8. 'line' → logprob: -8.533272743225098
    9. 'items' → logprob: -8.658272743225098
    10. '    
' → logprob: -8.783272743225098

Token 156: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16447584331035614
    2. ' _' → logprob: -1.9144757986068726
    3. ' i' → logprob: -5.914475917816162
    4. '_i' → logprob: -6.539475917816162
    5. 'i' → logprob: -9.289475440979004
    6. ' ' → logprob: -13.914475440979004
    7. 's' → logprob: -14.414475440979004
    8. '_in' → logprob: -14.539475440979004
    9. '__' → logprob: -14.914475440979004
    10. '_j' → logprob: -15.039475440979004

Token 157: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020995385944843292
    2. 'in' → logprob: -3.8959953784942627
    3. 'range' → logprob: -8.145995140075684
    4. ' ' → logprob: -9.270995140075684
    5. ' range' → logprob: -9.645995140075684
    6. '  ' → logprob: -13.145995140075684
    7. 's' → logprob: -13.895995140075684
    8. '_' → logprob: -14.520995140075684
    9. '   ' → logprob: -15.645995140075684
    10. 'n' → logprob: -15.770995140075684

Token 158: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005929863080382347
    2. ' range' → logprob: -5.130929946899414
    3. 'rang' → logprob: -14.255929946899414
    4. '	range' → logprob: -15.755929946899414
    5. ' ' → logprob: -15.880929946899414
    6. 'r' → logprob: -16.130929946899414
    7. '(range' → logprob: -16.630929946899414
    8. 'ran' → logprob: -16.880929946899414
    9. '  ' → logprob: -17.255929946899414
    10. '   ' → logprob: -17.505929946899414

Token 159: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.062437716871500015
    2. '(n' → logprob: -2.8124377727508545
    3. ' n' → logprob: -7.687437534332275
    4. '	n' → logprob: -12.312438011169434
    5. '   ' → logprob: -12.812438011169434
    6. '(' → logprob: -13.562438011169434
    7. ' (' → logprob: -13.812438011169434
    8. '10' → logprob: -13.812438011169434
    9. ')n' → logprob: -15.062438011169434
    10. ',n' → logprob: -15.937438011169434

Token 160: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018229544162750244
    2. '):
' → logprob: -4.0182294845581055
    3. ' ):' → logprob: -10.143229484558105
    4. ')' → logprob: -11.268229484558105
    5. ':' → logprob: -11.268229484558105
    6. '   ' → logprob: -12.268229484558105
    7. '():' → logprob: -12.393229484558105
    8. '):
' → logprob: -12.893229484558105
    9. '):

' → logprob: -14.268229484558105
    10. ' ):
' → logprob: -14.518229484558105

Token 161: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017826409311965108
    2. '   ' → logprob: -6.626782417297363
    3. 'type' → logprob: -9.001782417297363
    4. 't' → logprob: -10.001782417297363
    5. ' type' → logprob: -10.001782417297363
    6. ' sold' → logprob: -10.126782417297363
    7. 'v' → logprob: -10.126782417297363
    8. '	   ' → logprob: -10.501782417297363
    9. ' t' → logprob: -10.626782417297363
    10. '    ' → logprob: -10.751782417297363

Token 162: ' c' (ID: 274)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.9170129299163818
    2. 'type' → logprob: -1.1670129299163818
    3. 'v' → logprob: -1.5420129299163818
    4. 'ice' → logprob: -3.542012929916382
    5. '   ' → logprob: -4.167013168334961
    6. 'typ' → logprob: -4.792013168334961
    7. 'sale' → logprob: -5.042013168334961
    8. 'vente' → logprob: -5.792013168334961
    9. 'val' → logprob: -6.417013168334961
    10. ' t' → logprob: -6.542013168334961

Token 163: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03370679169893265
    2. '=' → logprob: -3.5337069034576416
    3. 'type' → logprob: -6.4087066650390625
    4. 'ype' → logprob: -6.5337066650390625
    5. '=int' → logprob: -8.033706665039062
    6. ' ' → logprob: -8.658706665039062
    7. '_type' → logprob: -9.033706665039062
    8. 'v' → logprob: -10.283706665039062
    9. 'c' → logprob: -10.408706665039062
    10. 'i' → logprob: -10.533706665039062

Token 164: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00024822709383443
    2. ' int' → logprob: -8.375247955322266
    3. 'input' → logprob: -11.125247955322266
    4. '   ' → logprob: -13.375247955322266
    5. ' ' → logprob: -14.125247955322266
    6. '  ' → logprob: -14.500247955322266
    7. '	int' → logprob: -16.250247955322266
    8. '(int' → logprob: -17.375247955322266
    9. '[int' → logprob: -18.000247955322266
    10. '    ' → logprob: -18.125247955322266

Token 165: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -1.4378848391061183e-05
    2. 'input' → logprob: -11.375014305114746
    3. '(' → logprob: -12.875014305114746
    4. '()' → logprob: -15.500014305114746
    5. ' (' → logprob: -16.875015258789062
    6. '=input' → logprob: -17.125015258789062
    7. ' input' → logprob: -18.125015258789062
    8. ',input' → logprob: -18.750015258789062
    9. '<input' → logprob: -19.000015258789062
    10. '(
' → logprob: -19.375015258789062

Token 166: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.037779565900564194
    2. '())
' → logprob: -3.5377795696258545
    3. '()' → logprob: -5.037779331207275
    4. ')' → logprob: -6.537779331207275
    5. '()
' → logprob: -10.162779808044434
    6. ')
' → logprob: -11.412779808044434
    7. '(' → logprob: -12.412779808044434
    8. ' ())' → logprob: -12.787779808044434
    9. '())
' → logprob: -13.037779808044434
    10. '())

' → logprob: -13.787779808044434

Token 167: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2323572039604187
    2. 'counts' → logprob: -1.9823572635650635
    3. '   ' → logprob: -2.9823572635650635
    4. ' counts' → logprob: -3.9823572635650635
    5. '
' → logprob: -9.357357025146484
    6. 'count' → logprob: -9.607357025146484
    7. '    
' → logprob: -10.482357025146484
    8. '_counts' → logprob: -10.482357025146484
    9. '        
' → logprob: -10.982357025146484
    10. ')' → logprob: -11.357357025146484

Token 168: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' (adapté à ' counts') → logprob: -0.010322006419301033
    2. ' counts' → logprob: -4.635322093963623
    3. '   ' → logprob: -7.635322093963623
    4. 'count' → logprob: -10.135321617126465
    5. 'if' → logprob: -10.385321617126465
    6. '       ' → logprob: -11.510321617126465
    7. ' if' → logprob: -14.010321617126465
    8. '
' → logprob: -14.760321617126465
    9. ' ' → logprob: -15.010321617126465
    10. '  ' → logprob: -16.01032257080078

Token 169: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -3.2020991056924686e-05
    2. '[' → logprob: -11.000032424926758
    3. '[count' → logprob: -11.125032424926758
    4. 'c' → logprob: -14.750032424926758
    5. ' [' → logprob: -16.750032424926758
    6. '[
' → logprob: -18.375032424926758
    7. 'counts' → logprob: -18.750032424926758
    8. '[C' → logprob: -19.500032424926758
    9. '[i' → logprob: -20.250032424926758
    10. 'count' → logprob: -20.250032424926758

Token 170: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004730584099888802
    2. ']+=' → logprob: -5.379730701446533
    3. ')' → logprob: -9.754730224609375
    4. ' ]' → logprob: -10.254730224609375
    5. '+=' → logprob: -11.629730224609375
    6. '[' → logprob: -12.754730224609375
    7. ')]' → logprob: -13.629730224609375
    8. '   ' → logprob: -13.754730224609375
    9. ' +=' → logprob: -13.754730224609375
    10. ']+' → logprob: -14.004730224609375

Token 171: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0002222516923211515
    2. ']+=' → logprob: -9.250222206115723
    3. ' +=' → logprob: -9.500222206115723
    4. '=' → logprob: -10.500222206115723
    5. '+' → logprob: -10.750222206115723
    6. '+='' → logprob: -14.000222206115723
    7. '[' → logprob: -14.500222206115723
    8. '++' → logprob: -15.375222206115723
    9. '<|end|>' → logprob: -15.500222206115723
    10. '+="' → logprob: -15.750222206115723

Token 172: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023059594968799502
    2. ' ' → logprob: -8.37523078918457
    3. '   ' → logprob: -17.25023078918457
    4. '  ' → logprob: -19.87523078918457
    5. '```' → logprob: -20.00023078918457
    6. ' ' → logprob: -21.00023078918457
    7. '0' → logprob: -21.31273078918457
    8. '１' → logprob: -21.75023078918457
    9. '+' → logprob: -22.43773078918457
    10. '۱' → logprob: -22.56273078918457

Token 173: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '```' → logprob: -20.625
    4. '   ' → logprob: -20.875
    5. '`' → logprob: -23.5
    6. '１' → logprob: -23.625
    7. '  ' → logprob: -23.75
    8. '' → logprob: -24.125
    9. '0' → logprob: -24.1875
    10. '۱' → logprob: -24.1875

Token 174: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4011140763759613
    2. '   ' → logprob: -1.6511141061782837
    3. '
' → logprob: -2.151113986968994
    4. ' for' → logprob: -4.151113986968994
    5. '    
' → logprob: -5.776113986968994
    6. 'print' → logprob: -6.026113986968994
    7. '```' → logprob: -7.401113986968994
    8. '  
' → logprob: -9.151114463806152
    9. '

' → logprob: -9.276114463806152
    10. '#' → logprob: -9.651114463806152

Token 175: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06864573061466217
    2. '   ' → logprob: -2.943645715713501
    3. '
' → logprob: -5.06864595413208
    4. 'print' → logprob: -5.56864595413208
    5. ' for' → logprob: -6.31864595413208
    6. '    
' → logprob: -6.44364595413208
    7. '#' → logprob: -9.943645477294922
    8. '  
' → logprob: -10.068645477294922
    9. '
' → logprob: -10.818645477294922
    10. '

' → logprob: -11.068645477294922

Token 176: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0018017961410805583
    2. '#' (adapté à ' #') → logprob: -6.87680196762085
    3. 'print' → logprob: -8.001801490783691
    4. '   ' → logprob: -8.001801490783691
    5. ' for' → logprob: -10.001801490783691
    6. '
' → logprob: -10.126801490783691
    7. '    
' → logprob: -11.376801490783691
    8. '

' → logprob: -14.126801490783691
    9. '  
' → logprob: -15.126801490783691
    10. '
' → logprob: -15.126801490783691

Token 177: ' Aff' (ID: 13741)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0009295677882619202
    2. ' for' → logprob: -7.375929355621338
    3. '#' → logprob: -8.125929832458496
    4. 'print' → logprob: -12.125929832458496
    5. 'Pour' → logprob: -14.500929832458496
    6. 'pour' → logprob: -14.875929832458496
    7. ' #' → logprob: -15.000929832458496
    8. '   ' → logprob: -15.500929832458496
    9. 'For' → logprob: -15.625929832458496
    10. '
' → logprob: -16.25092887878418

Token 178: 'ichage' (ID: 118475)
  Prédit: 'ichage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ichage' → logprob: -0.14972589910030365
    2. '   ' → logprob: -2.399725914001465
    3. 'icher' → logprob: -3.149725914001465
    4. 'iche' → logprob: -6.274725914001465
    5. 'ich' → logprob: -6.274725914001465
    6. '#' → logprob: -6.899725914001465
    7. 'for' → logprob: -7.899725914001465
    8. 'er' → logprob: -9.524725914001465
    9. 'ic' → logprob: -9.774725914001465
    10. ' for' → logprob: -10.399725914001465

Token 179: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00024500858853571117
    2. ' for' → logprob: -9.375245094299316
    3. '
' → logprob: -9.625245094299316
    4. '    
' → logprob: -10.000245094299316
    5. 'for' → logprob: -10.000245094299316
    6. ':' → logprob: -14.125245094299316
    7. '    ' → logprob: -14.625245094299316
    8. '  ' → logprob: -14.750245094299316
    9. ' of' → logprob: -15.000245094299316
    10. ',' → logprob: -15.500245094299316

Token 180: ' l' (ID: 305)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3545844554901123
    2. ' ' → logprob: -1.8545844554901123
    3. 'range' → logprob: -1.8545844554901123
    4. ' for' → logprob: -1.9795844554901123
    5. '"' → logprob: -2.6045844554901123
    6. ' les' → logprob: -3.3545844554901123
    7. ' range' → logprob: -3.4795844554901123
    8. ' l' → logprob: -3.9795844554901123
    9. 'les' → logprob: -4.229584693908691
    10. ''' → logprob: -4.354584693908691

Token 181: ''h' (ID: 10612)
  Prédit: ''h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''h' → logprob: -0.5780864953994751
    2. ''' → logprob: -1.828086495399475
    3. 'es' → logprob: -2.2030863761901855
    4. 'e' → logprob: -2.4530863761901855
    5. 'hist' → logprob: -3.4530863761901855
    6. ' histogram' → logprob: -3.9530863761901855
    7. 'a' → logprob: -4.3280863761901855
    8. ' hist' → logprob: -6.0780863761901855
    9. ''histoire' → logprob: -6.0780863761901855
    10. '_hist' → logprob: -6.5780863761901855

Token 182: 'ist' (ID: 421)
  Prédit: 'ist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.07257024943828583
    2. 'isto' → logprob: -2.697570323944092
    3. 'istor' → logprob: -6.947570323944092
    4. 'is' → logprob: -7.322570323944092
    5. 'i' → logprob: -7.947570323944092
    6. 'istro' → logprob: -8.697569847106934
    7. 'istoire' → logprob: -9.072569847106934
    8. 'istos' → logprob: -9.072569847106934
    9. 'a' → logprob: -10.322569847106934
    10. 'ists' → logprob: -10.447569847106934

Token 183: 'ogram' (ID: 21598)
  Prédit: 'ogram'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ogram' → logprob: -0.0078281844034791
    2. '   ' → logprob: -5.632828235626221
    3. 'for' → logprob: -5.882828235626221
    4. 'rogram' → logprob: -6.757828235626221
    5. 'ographe' → logprob: -9.632827758789062
    6. 'ograma' → logprob: -10.007827758789062
    7. 'og' → logprob: -10.382827758789062
    8. 'o' → logprob: -10.382827758789062
    9. '#' → logprob: -10.632827758789062
    10. 'gram' → logprob: -11.007827758789062

Token 184: 'me' (ID: 1047)
  Prédit: 'me'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.0001777960715116933
    2. 'e' → logprob: -9.125177383422852
    3. 'mes' → logprob: -10.250177383422852
    4. '#' → logprob: -11.375177383422852
    5. '   ' → logprob: -11.500177383422852
    6. 'm' → logprob: -12.375177383422852
    7. '       ' → logprob: -13.375177383422852
    8. '```' → logprob: -14.250177383422852
    9. 'mme' → logprob: -14.375177383422852
    10. '
' → logprob: -14.500177383422852

Token 185: ' selon' (ID: 27571)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023383958265185356
    2. 'for' → logprob: -3.773383855819702
    3. ' for' → logprob: -9.648384094238281
    4. '
' → logprob: -9.773384094238281
    5. '    
' → logprob: -11.023384094238281
    6. '	for' → logprob: -15.523384094238281
    7. 'print' → logprob: -16.02338409423828
    8. '```' → logprob: -16.52338409423828
    9. '  
' → logprob: -16.64838409423828
    10. '   
' → logprob: -17.14838409423828

Token 186: ' les' (ID: 1341)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6562021970748901
    2. 'les' → logprob: -1.7812021970748901
    3. ' la' → logprob: -2.7812023162841797
    4. ' range' → logprob: -2.9062023162841797
    5. ' les' → logprob: -3.0312023162841797
    6. 'le' → logprob: -3.5312023162841797
    7. 'la' → logprob: -3.6562023162841797
    8. '   ' → logprob: -3.7812023162841797
    9. 'len' → logprob: -4.03120231628418
    10. 'counts' → logprob: -4.53120231628418

Token 187: ' règles' (ID: 67042)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.9309862852096558
    2. 'instructions' → logprob: -0.9309862852096558
    3. 'cons' → logprob: -2.4309864044189453
    4. 'spec' → logprob: -3.4309864044189453
    5. 'sp' → logprob: -3.9309864044189453
    6. 'conditions' → logprob: -4.680986404418945
    7. 'vent' → logprob: -4.680986404418945
    8. 'com' → logprob: -4.930986404418945
    9. 'types' → logprob: -4.930986404418945
    10. 'count' → logprob: -5.055986404418945

Token 188: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019584903493523598
    2. 'for' → logprob: -6.25195837020874
    3. ' for' → logprob: -10.751958847045898
    4. '
' → logprob: -11.876958847045898
    5. '    
' → logprob: -13.501958847045898
    6. '	for' → logprob: -17.2519588470459
    7. '```' → logprob: -17.7519588470459
    8. '  ' → logprob: -17.8769588470459
    9. 'print' → logprob: -18.3769588470459
    10. ' ' → logprob: -18.6269588470459

Token 189: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00021915239631198347
    2. 'for' → logprob: -8.500219345092773
    3. '
' → logprob: -11.625219345092773
    4. ' for' → logprob: -12.000219345092773
    5. '    
' → logprob: -14.500219345092773
    6. '	for' → logprob: -18.000219345092773
    7. '```' → logprob: -18.000219345092773
    8. '       ' → logprob: -18.375219345092773
    9. '  ' → logprob: -18.375219345092773
    10. 'print' → logprob: -18.875219345092773

Token 190: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07900545746088028
    2. '   ' → logprob: -2.579005479812622
    3. ' for' → logprob: -9.079005241394043
    4. '	for' → logprob: -13.704005241394043
    5. '    
' → logprob: -14.579005241394043
    6. '
' → logprob: -15.954005241394043
    7. '  ' → logprob: -17.57900619506836
    8. ' ' → logprob: -17.82900619506836
    9. 'print' → logprob: -18.57900619506836
    10. '       ' → logprob: -18.70400619506836

Token 191: ' count' (ID: 3605)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.22829630970954895
    2. 'i' → logprob: -1.6032962799072266
    3. ' type' → logprob: -6.353296279907227
    4. 'type' → logprob: -7.478296279907227
    5. ' t' → logprob: -9.228296279907227
    6. 't' → logprob: -9.478296279907227
    7. ' idx' → logprob: -9.478296279907227
    8. ' range' → logprob: -9.728296279907227
    9. 'range' → logprob: -10.603296279907227
    10. ' c' → logprob: -10.853296279907227

Token 192: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.524024486541748
    2. ' in' → logprob: -0.899024486541748
    3. ',' → logprob: -7.524024486541748
    4. ' ' → logprob: -8.149024963378906
    5. 's' → logprob: -10.774024963378906
    6. '   ' → logprob: -11.274024963378906
    7. '  ' → logprob: -11.774024963378906
    8. 'i' → logprob: -12.149024963378906
    9. 'dans' → logprob: -12.649024963378906
    10. '	in' → logprob: -13.024024963378906

Token 193: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.00033593899570405483
    2. ' counts' → logprob: -8.000335693359375
    3. 'count' → logprob: -14.500335693359375
    4. '[count' → logprob: -20.125335693359375
    5. '   ' → logprob: -20.375335693359375
    6. 'range' → logprob: -20.875335693359375
    7. '[' → logprob: -22.125335693359375
    8. ' ' → logprob: -23.125335693359375
    9. '_counts' → logprob: -23.125335693359375
    10. 'ranges' → logprob: -23.375335693359375

Token 194: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007048771250993013
    2. ':
' → logprob: -5.007048606872559
    3. '   ' → logprob: -8.382048606872559
    4. '       ' → logprob: -9.632048606872559
    5. '=' → logprob: -11.507048606872559
    6. '):' → logprob: -11.632048606872559
    7. ' :' → logprob: -11.757048606872559
    8. '):
' → logprob: -12.507048606872559
    9. ',' → logprob: -12.882048606872559
    10. '>' → logprob: -13.382048606872559

Token 195: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0177395511418581
    2. '   ' → logprob: -4.517739772796631
    3. ' if' → logprob: -5.267739772796631
    4. 'if' → logprob: -7.767739772796631
    5. '<|end|>' → logprob: -7.767739772796631
    6. '    ' → logprob: -8.642739295959473
    7. 'print' → logprob: -8.892739295959473
    8. ' print' → logprob: -9.142739295959473
    9. '    
' → logprob: -9.892739295959473
    10. ' ' → logprob: -10.142739295959473

Token 196: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4836519658565521
    2. 'if' (adapté à ' if') → logprob: -1.4836519956588745
    3. ' if' → logprob: -1.9836519956588745
    4. 'print' → logprob: -4.108652114868164
    5. ' print' → logprob: -6.483652114868164
    6. '   ' → logprob: -7.108652114868164
    7. '           ' → logprob: -8.608652114868164
    8. '        
' → logprob: -10.358652114868164
    9. '	if' → logprob: -10.483652114868164
    10. ' ' → logprob: -11.358652114868164

Token 197: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.3132631778717041
    2. 'count' → logprob: -1.313263177871704
    3. '	count' → logprob: -13.813262939453125
    4. '(count' → logprob: -16.438262939453125
    5. '   ' → logprob: -16.688262939453125
    6. ' ' → logprob: -16.688262939453125
    7. ' ' → logprob: -16.938262939453125
    8. 'Count' → logprob: -17.563262939453125
    9. '$count' → logprob: -17.813262939453125
    10. 'c' → logprob: -17.938262939453125

Token 198: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2683831453323364
    2. '>' → logprob: -1.7683831453323364
    3. ' ==' → logprob: -3.018383026123047
    4. '==' → logprob: -4.143383026123047
    5. '   ' → logprob: -12.143383026123047
    6. '=' → logprob: -12.393383026123047
    7. ' >=' → logprob: -12.518383026123047
    8. ' ' → logprob: -12.518383026123047
    9. ' ' → logprob: -13.268383026123047
    10. '>=' → logprob: -13.268383026123047

Token 199: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0059290360659360886
    2. ' ' → logprob: -5.130928993225098
    3. '   ' → logprob: -15.630928993225098
    4. '1' → logprob: -16.130929946899414
    5. '  ' → logprob: -16.755929946899414
    6. '>' → logprob: -17.255929946899414
    7. ' ' → logprob: -17.380929946899414
    8. '    ' → logprob: -18.255929946899414
    9. '```' → logprob: -18.380929946899414
    10. '=' → logprob: -19.505929946899414

Token 200: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007106438861228526
    2. ' ' → logprob: -7.250710487365723
    3. '   ' → logprob: -15.125710487365723
    4. '1' → logprob: -16.43821144104004
    5. '  ' → logprob: -16.43821144104004
    6. '>' → logprob: -16.87571144104004
    7. '```' → logprob: -17.00071144104004
    8. ' ' → logprob: -17.12571144104004
    9. '=' → logprob: -17.87571144104004
    10. '00' → logprob: -18.00071144104004

Token 201: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1216365322470665
    2. ':
' → logprob: -2.4966366291046143
    3. '           ' → logprob: -3.4966366291046143
    4. '       ' → logprob: -6.621636390686035
    5. 'print' → logprob: -7.746636390686035
    6. ' :' → logprob: -10.496636390686035
    7. ' print' → logprob: -10.746636390686035
    8. ':
' → logprob: -10.996636390686035
    9. '   ' → logprob: -11.246636390686035
    10. '=' → logprob: -12.121636390686035

Token 202: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004848153796046972
    2. 'print' → logprob: -5.754848003387451
    3. ' print' → logprob: -7.004848003387451
    4. '       ' → logprob: -7.254848003387451
    5. '-' → logprob: -10.50484848022461
    6. '   ' → logprob: -12.25484848022461
    7. '	       ' → logprob: -12.50484848022461
    8. '```' → logprob: -12.75484848022461
    9. '	print' → logprob: -13.12984848022461
    10. '          ' → logprob: -13.25484848022461

Token 203: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.6478781700134277
    2. 'print' (adapté à ' print') → logprob: -1.2728781700134277
    3. '       ' → logprob: -1.7728781700134277
    4. '   ' → logprob: -3.6478781700134277
    5. '           ' → logprob: -7.522878170013428
    6. '    ' → logprob: -8.772878646850586
    7. '	print' → logprob: -8.772878646850586
    8. '        ' → logprob: -10.397878646850586
    9. ' ' → logprob: -10.522878646850586
    10. '     ' → logprob: -12.272878646850586

Token 204: '("-' (ID: 27133)
  Prédit: '("-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("-' → logprob: -0.4462288022041321
    2. '('-' → logprob: -1.0712287425994873
    3. '("' → logprob: -5.071228981018066
    4. '(' → logprob: -5.321228981018066
    5. '('' → logprob: -5.446228981018066
    6. ''-' → logprob: -7.321228981018066
    7. '(-' → logprob: -7.821228981018066
    8. '-' → logprob: -8.071228981018066
    9. '"-' → logprob: -8.446228981018066
    10. '("-",' → logprob: -8.946228981018066

Token 205: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.020652834326028824
    2. '")
' → logprob: -3.8956527709960938
    3. '-' → logprob: -10.520652770996094
    4. '"' → logprob: -10.770652770996094
    5. ')' → logprob: -10.770652770996094
    6. '")
' → logprob: -11.020652770996094
    7. ' ")' → logprob: -11.395652770996094
    8. '*' → logprob: -12.520652770996094
    9. '')' → logprob: -12.645652770996094
    10. ')")' → logprob: -13.395652770996094

Token 206: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005188359646126628
    2. 'else' → logprob: -7.750518798828125
    3. ' else' → logprob: -9.375518798828125
    4. 'elif' → logprob: -13.375518798828125
    5. '```' → logprob: -14.500518798828125
    6. '      ' → logprob: -14.875518798828125
    7. '   ' → logprob: -15.000518798828125
    8. ' elif' → logprob: -15.875518798828125
    9. '​' → logprob: -15.875518798828125
    10. '	else' → logprob: -16.000518798828125

Token 207: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4048795998096466
    2. 'else' (adapté à ' else') → logprob: -1.1548795700073242
    3. ' else' → logprob: -4.029879570007324
    4. 'elif' → logprob: -9.779879570007324
    5. '   ' → logprob: -12.779879570007324
    6. '	else' → logprob: -12.904879570007324
    7. ' elif' → logprob: -13.154879570007324
    8. '      ' → logprob: -13.154879570007324
    9. 'print' → logprob: -13.779879570007324
    10. '        ' → logprob: -14.029879570007324

Token 208: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3983447849750519
    2. ':' → logprob: -1.1483447551727295
    3. 'print' → logprob: -5.398344993591309
    4. ' print' → logprob: -5.898344993591309
    5. ':
' → logprob: -6.273344993591309
    6. ' :' → logprob: -6.398344993591309
    7. '       ' → logprob: -8.523344993591309
    8. '            ' → logprob: -9.273344993591309
    9. ' :
' → logprob: -9.398344993591309
    10. '"' → logprob: -10.023344993591309

Token 209: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2573492228984833
    2. '           ' → logprob: -1.6323492527008057
    3. ' print' → logprob: -3.5073492527008057
    4. '       ' → logprob: -6.757349014282227
    5. '"' → logprob: -9.007349014282227
    6. '   ' → logprob: -9.007349014282227
    7. '	print' → logprob: -11.007349014282227
    8. '         ' → logprob: -11.632349014282227
    9. '          ' → logprob: -12.507349014282227
    10. '"*' → logprob: -12.882349014282227

Token 210: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.002374342642724514
    2. ' print' → logprob: -6.127374172210693
    3. '"' → logprob: -9.377374649047852
    4. '"*' → logprob: -10.002374649047852
    5. '*' → logprob: -10.502374649047852
    6. ''*' → logprob: -10.877374649047852
    7. '           ' → logprob: -12.127374649047852
    8. '   ' → logprob: -12.627374649047852
    9. '       ' → logprob: -13.752374649047852
    10. ' "*"' → logprob: -14.252374649047852

Token 211: '("*' (ID: 59145)
  Prédit: '("*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("*' → logprob: -0.025842467322945595
    2. '(' → logprob: -4.275842666625977
    3. '("' → logprob: -4.775842666625977
    4. '"' → logprob: -6.525842666625977
    5. '('*' → logprob: -6.525842666625977
    6. '"*' → logprob: -8.525842666625977
    7. ' "*"' → logprob: -10.775842666625977
    8. ' ("' → logprob: -11.650842666625977
    9. '('' → logprob: -12.400842666625977
    10. ''*' → logprob: -12.775842666625977

Token 212: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4785374104976654
    2. '*' → logprob: -0.9785374402999878
    3. '"*' → logprob: -6.478537559509277
    4. '")' → logprob: -6.978537559509277
    5. 'count' → logprob: -6.978537559509277
    6. ' *' → logprob: -7.478537559509277
    7. ''' → logprob: -8.353537559509277
    8. ')' → logprob: -9.103537559509277
    9. ' count' → logprob: -9.978537559509277
    10. ' "' → logprob: -10.228537559509277

Token 213: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.04874474182724953
    2. ' *' → logprob: -3.0487446784973145
    3. ')' → logprob: -8.798745155334473
    4. 'count' → logprob: -12.923745155334473
    5. '*)' → logprob: -13.548745155334473
    6. ')*' → logprob: -14.048745155334473
    7. '"' → logprob: -14.423745155334473
    8. '[count' → logprob: -15.173745155334473
    9. ' count' → logprob: -15.173745155334473
    10. ' ' → logprob: -15.548745155334473

Token 214: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -2.935296834039036e-06
    2. ' count' → logprob: -12.75000286102295
    3. '(count' → logprob: -22.625003814697266
    4. 'counts' → logprob: -23.125003814697266
    5. '$count' → logprob: -23.375003814697266
    6. '	count' → logprob: -24.000003814697266
    7. '[count' → logprob: -24.250003814697266
    8. '   ' → logprob: -24.875003814697266
    9. 'c' → logprob: -26.000003814697266
    10. 'code' → logprob: -26.125003814697266

Token 215: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ')
' → logprob: -14.375000953674316
    3. ' )' → logprob: -15.500000953674316
    4. '))' → logprob: -16.625001907348633
    5. '")' → logprob: -17.500001907348633
    6. '   ' → logprob: -18.375001907348633
    7. ')`' → logprob: -18.625001907348633
    8. '')' → logprob: -18.750001907348633
    9. ')#' → logprob: -18.750001907348633
    10. ')")' → logprob: -19.375001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 213
Tokens correctement prédits (1ère position, stricte): 73
Tokens correctement prédits (1ère position, avec adaptation): 78
Tokens correctement prédits (top 10): 157
Précision stricte (1ère position): 34.27%
Précision adaptée (1ère position): 36.62%
Précision (top 10): 73.71%
================================================================================
