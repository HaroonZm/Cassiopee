================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:04
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)
input = sys.stdin.readline

def main():
    while True:
        N, Q = map(int, input().split())
        if N == 0 and Q == 0:
            break

        parent = [0] * (N+1)
        parent[1] = 1
        for i in range(2, N+1):
            p = int(input())
            parent[i] = p

        # DSU structure: for each node, keep the nearest marked ancestor as its parent in DSU
        dsu = list(range(N+1))

        def find(x):
            if dsu[x] != x:
                dsu[x] = find(dsu[x])
            return dsu[x]

        def union(x):
            dsu[x] = find(parent[x])

        # Initially only root (node 1) is marked, so dsu[1] = 1
        # Unmarked nodes have dsu[x] initially pointing to themselves.

        total = 0
        for _ in range(Q):
            op, v = input().split()
            v = int(v)
            if op == 'M':
                # Mark v: union v with its parent in DSU
                union(v)
            else:
                # Q v: print the nearest marked ancestor
                ans = find(v)
                total += ans
        print(total)

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3437388837337494
    2. '.' → logprob: -1.5937389135360718
    3. '<|end|>' → logprob: -2.9687387943267822
    4. '\' → logprob: -4.468739032745361
    5. 'import' → logprob: -5.093739032745361
    6. 'newline' → logprob: -5.093739032745361
    7. '<|end|>' → logprob: -5.968739032745361
    8. '' → logprob: -5.968739032745361
    9. '\r' → logprob: -6.093739032745361
    10. '
' → logprob: -6.343739032745361

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.157039049663581e-05
    2. ' .' → logprob: -11.125051498413086
    3. '.import' → logprob: -11.750051498413086
    4. '.readline' → logprob: -12.625051498413086
    5. '[' → logprob: -12.875051498413086
    6. '.user' → logprob: -12.875051498413086
    7. '.`' → logprob: -13.250051498413086
    8. '.stdout' → logprob: -13.500051498413086
    9. '.exit' → logprob: -13.500051498413086
    10. '.next' → logprob: -13.875051498413086

Token 5: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5776441097259521
    2. '_trace' → logprob: -1.3276441097259521
    3. ' _' → logprob: -2.702644109725952
    4. '_version' → logprob: -3.577644109725952
    5. '_soft' → logprob: -4.577644348144531
    6. '_exc' → logprob: -4.702644348144531
    7. '_encoding' → logprob: -5.702644348144531
    8. '_ex' → logprob: -5.702644348144531
    9. '_exception' → logprob: -5.702644348144531
    10. '_default' → logprob: -5.827644348144531

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0014520210679620504
    2. 'ursive' → logprob: -6.7514519691467285
    3. 'ur' → logprob: -9.376452445983887
    4. 'urs' → logprob: -10.001452445983887
    5. '_' → logprob: -10.126452445983887
    6. 'limit' → logprob: -10.376452445983887
    7. '_limit' → logprob: -11.001452445983887
    8. 'urf' → logprob: -11.251452445983887
    9. 't' → logprob: -11.626452445983887
    10. 'ursor' → logprob: -11.876452445983887

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.4866597652435303
    2. 'limit' → logprob: -0.9866597652435303
    3. '_depth' → logprob: -4.486660003662109
    4. 'depth' → logprob: -7.486660003662109
    5. '_' → logprob: -8.36166000366211
    6. '_rate' → logprob: -9.98666000366211
    7. 'lim' → logprob: -10.23666000366211
    8. '(' → logprob: -10.36166000366211
    9. '_factor' → logprob: -10.36166000366211
    10. '_stack' → logprob: -10.61166000366211

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.694766489090398e-05
    2. '(
' → logprob: -10.500066757202148
    3. ' (' → logprob: -11.375066757202148
    4. '40' → logprob: -11.875066757202148
    5. '(

' → logprob: -12.500066757202148
    6. '((' → logprob: -12.750066757202148
    7. '```' → logprob: -12.750066757202148
    8. '(.' → logprob: -13.000066757202148
    9. '('' → logprob: -13.125066757202148
    10. '(()' → logprob: -13.250066757202148

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.12741151452064514
    2. '100' → logprob: -2.1274116039276123
    3. ' ' → logprob: -8.002411842346191
    4. '500' → logprob: -9.752411842346191
    5. '300' → logprob: -9.877411842346191
    6. '250' → logprob: -10.752411842346191
    7. '  ' → logprob: -12.252411842346191
    8. '   ' → logprob: -12.502411842346191
    9. '200' → logprob: -12.877411842346191
    10. '150' → logprob: -13.127411842346191

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006857931148260832
    2. '000' → logprob: -5.756857872009277
    3. '00' → logprob: -5.881857872009277
    4. '4' → logprob: -7.256857872009277
    5. '6' → logprob: -8.881857872009277
    6. '5' → logprob: -11.506857872009277
    7. '```' → logprob: -12.006857872009277
    8. ')' → logprob: -12.256857872009277
    9. '3' → logprob: -12.381857872009277
    10. '**' → logprob: -12.381857872009277

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00714417127892375
    2. '9' → logprob: -5.632143974304199
    3. '6' → logprob: -5.757143974304199
    4. '8' → logprob: -7.882143974304199
    5. '```' → logprob: -15.7571439743042
    6. ' ' → logprob: -16.507144927978516
    7. '(' → logprob: -17.132144927978516
    8. '5' → logprob: -17.757144927978516
    9. '``' → logprob: -18.257144927978516
    10. '999' → logprob: -18.382144927978516

Token 12: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3663626305060461e-05
    2. '))' → logprob: -11.75001335144043
    3. ' )' → logprob: -12.12501335144043
    4. ')
' → logprob: -15.62501335144043
    5. ')))' → logprob: -16.75001335144043
    6. ')`' → logprob: -17.00001335144043
    7. ' ' → logprob: -17.25001335144043
    8. '）' → logprob: -18.12501335144043
    9. '`)' → logprob: -18.12501335144043
    10. '```' → logprob: -18.50001335144043

Token 13: 'input' (ID: 2586)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5480534434318542
    2. '\' → logprob: -2.048053503036499
    3. 'def' → logprob: -2.423053503036499
    4. '\n' → logprob: -2.423053503036499
    5. '

' → logprob: -3.298053503036499
    6. '
' → logprob: -3.548053503036499
    7. ')' → logprob: -4.54805326461792
    8. '(' → logprob: -4.92305326461792
    9. '' → logprob: -5.04805326461792
    10. '()' → logprob: -5.29805326461792

Token 14: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.054387565702199936
    2. '()' → logprob: -3.0543875694274902
    3. '.' → logprob: -6.05438756942749
    4. ')' → logprob: -6.55438756942749
    5. '().' → logprob: -7.67938756942749
    6. '('' → logprob: -7.92938756942749
    7. '40' → logprob: -8.304387092590332
    8. '```' → logprob: -8.554387092590332
    9. '("("' → logprob: -8.929387092590332
    10. ''' → logprob: -9.429387092590332

Token 15: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2547602355480194
    2. ' input' → logprob: -1.5047602653503418
    3. ' sys' → logprob: -6.629760265350342
    4. 'sys' → logprob: -6.629760265350342
    5. 'lambda' → logprob: -10.254759788513184
    6. '=input' → logprob: -10.629759788513184
    7. ' lambda' → logprob: -10.754759788513184
    8. '```' → logprob: -10.879759788513184
    9. 'open' → logprob: -11.129759788513184
    10. ' ' → logprob: -11.379759788513184

Token 16: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.06671422719955444
    2. '.readline' → logprob: -2.941714286804199
    3. '.' → logprob: -4.566714286804199
    4. '.stdout' → logprob: -7.566714286804199
    5. ' .' → logprob: -7.941714286804199
    6. '.input' → logprob: -8.8167142868042
    7. '.read' → logprob: -9.4417142868042
    8. '.std' → logprob: -9.4417142868042
    9. '.argv' → logprob: -9.9417142868042
    10. '.setdefault' → logprob: -10.5667142868042

Token 17: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.008816298097372055
    2. '.read' → logprob: -4.883816242218018
    3. '.' → logprob: -6.758816242218018
    4. '.buffer' → logprob: -10.258816719055176
    5. '.readlines' → logprob: -11.508816719055176
    6. '.Read' → logprob: -13.383816719055176
    7. 'read' → logprob: -13.883816719055176
    8. '.stdin' → logprob: -14.883816719055176
    9. ' .' → logprob: -15.383816719055176
    10. ').' → logprob: -16.00881576538086

Token 18: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06371898949146271
    2. '()
' → logprob: -3.5637190341949463
    3. '()

' → logprob: -4.063718795776367
    4. '(' → logprob: -4.438718795776367
    5. 'def' → logprob: -6.563718795776367
    6. '()\' → logprob: -6.813718795776367
    7. '(
' → logprob: -7.313718795776367
    8. '
' → logprob: -8.563718795776367
    9. 'for' → logprob: -8.688718795776367
    10. '\n' → logprob: -9.063718795776367

Token 19: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.062080394476652145
    2. 'n' → logprob: -2.8120803833007812
    3. 'N' → logprob: -9.687080383300781
    4. 'd' → logprob: -11.062080383300781
    5. '\' → logprob: -11.812080383300781
    6. '```' → logprob: -11.812080383300781
    7. 'class' → logprob: -12.187080383300781
    8. 'a' → logprob: -12.312080383300781
    9. 'for' → logprob: -12.437080383300781
    10. 'from' → logprob: -14.062080383300781

Token 20: ' main' (ID: 2758)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.17243801057338715
    2. ' factorial' → logprob: -2.047437906265259
    3. ' main' → logprob: -4.422438144683838
    4. ' solve' → logprob: -5.047438144683838
    5. ' factor' → logprob: -5.922438144683838
    6. ' f' → logprob: -6.047438144683838
    7. ' fibonacci' → logprob: -6.297438144683838
    8. ' fib' → logprob: -6.922438144683838
    9. ' binary' → logprob: -7.672438144683838
    10. ' DFS' → logprob: -7.797438144683838

Token 21: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.039831988513469696
    2. '(' → logprob: -3.2898318767547607
    3. ':' → logprob: -6.78983211517334
    4. '(:' → logprob: -7.66483211517334
    5. ' ():' → logprob: -9.28983211517334
    6. '()' → logprob: -10.28983211517334
    7. '(":' → logprob: -10.28983211517334
    8. '):' → logprob: -11.66483211517334
    9. '(':' → logprob: -12.16483211517334
    10. '(**' → logprob: -12.91483211517334

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016845589503645897
    2. 'n' → logprob: -4.141845703125
    3. '(n' → logprob: -8.516845703125
    4. 'a' → logprob: -8.766845703125
    5. '    ' → logprob: -9.266845703125
    6. ' n' → logprob: -9.391845703125
    7. '    
' → logprob: -9.516845703125
    8. 'x' → logprob: -9.891845703125
    9. ')' → logprob: -10.141845703125
    10. ' ' → logprob: -10.766845703125

Token 23: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.585676908493042
    2. ' n' → logprob: -0.835676908493042
    3. '   ' → logprob: -5.210677146911621
    4. 'a' → logprob: -6.460677146911621
    5. '    ' → logprob: -7.835677146911621
    6. 'x' → logprob: -7.960677146911621
    7. ' pass' → logprob: -8.210677146911621
    8. ' N' → logprob: -8.585677146911621
    9. 'pass' → logprob: -8.585677146911621
    10. ' ' → logprob: -8.585677146911621

Token 24: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.002814624458551407
    2. 'True' → logprob: -5.877814769744873
    3. '(True' → logprob: -11.752814292907715
    4. ' ' → logprob: -13.502814292907715
    5. ' not' → logprob: -15.877814292907715
    6. '  ' → logprob: -16.00281524658203
    7. ' Tru' → logprob: -16.00281524658203
    8. '   ' → logprob: -16.50281524658203
    9. '1' → logprob: -17.00281524658203
    10. ' true' → logprob: -17.75281524658203

Token 25: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02101570926606655
    2. '():' → logprob: -4.271015644073486
    3. ' :' → logprob: -5.646015644073486
    4. '       ' → logprob: -6.271015644073486
    5. '):' → logprob: -7.521015644073486
    6. '   ' → logprob: -8.021016120910645
    7. '    ' → logprob: -8.646016120910645
    8. ':
' → logprob: -9.021016120910645
    9. '(' → logprob: -9.646016120910645
    10. ' ():' → logprob: -10.146016120910645

Token 26: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2056165635585785
    2. '   ' → logprob: -1.7056165933609009
    3. '    ' → logprob: -5.705616474151611
    4. ' line' → logprob: -7.830616474151611
    5. ' ' → logprob: -8.83061695098877
    6. 'line' → logprob: -9.83061695098877
    7. '    
' → logprob: -10.20561695098877
    8. 'input' → logprob: -10.33061695098877
    9. '     ' → logprob: -10.58061695098877
    10. '	   ' → logprob: -10.70561695098877

Token 27: ' N' (ID: 478)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.210676372051239
    2. 'line' → logprob: -2.335676431655884
    3. '   ' → logprob: -2.460676431655884
    4. ' s' → logprob: -6.335676193237305
    5. '    ' → logprob: -6.585676193237305
    6. ' ' → logprob: -6.835676193237305
    7. 's' → logprob: -7.335676193237305
    8. 'data' → logprob: -7.335676193237305
    9. ' try' → logprob: -7.460676193237305
    10. '       ' → logprob: -7.460676193237305

Token 28: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0022103239316493273
    2. '=' → logprob: -6.1272101402282715
    3. '=int' → logprob: -11.37721061706543
    4. ' ' → logprob: -12.00221061706543
    5. ' >' → logprob: -12.37721061706543
    6. ' ==' → logprob: -14.00221061706543
    7. ',' → logprob: -14.25221061706543
    8. '=input' → logprob: -14.50221061706543
    9. ' ,' → logprob: -15.37721061706543
    10. ' =)' → logprob: -15.50221061706543

Token 29: ' Q' (ID: 1486)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.16216355562210083
    2. 'M' → logprob: -2.037163496017456
    3. ' K' → logprob: -4.912163734436035
    4. ' ' → logprob: -5.162163734436035
    5. 'K' → logprob: -6.537163734436035
    6. ' =' → logprob: -6.787163734436035
    7. '  ' → logprob: -7.537163734436035
    8. '    ' → logprob: -7.537163734436035
    9. 'm' → logprob: -7.912163734436035
    10. '=' → logprob: -8.287163734436035

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11283113807439804
    2. '=' → logprob: -2.2378311157226562
    3. ' ' → logprob: -12.737831115722656
    4. '    ' → logprob: -13.487831115722656
    5. ')' → logprob: -13.487831115722656
    6. ',' → logprob: -13.737831115722656
    7. '=input' → logprob: -14.362831115722656
    8. '   ' → logprob: -14.987831115722656
    9. '＝' → logprob: -15.612831115722656
    10. ' ' → logprob: -15.862831115722656

Token 31: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0207426305860281
    2. 'map' → logprob: -3.895742654800415
    3. ' input' → logprob: -8.645742416381836
    4. 'input' → logprob: -11.520742416381836
    5. ' ' → logprob: -11.895742416381836
    6. ' [' → logprob: -13.145742416381836
    7. '(map' → logprob: -13.395742416381836
    8. '	map' → logprob: -13.395742416381836
    9. ' sys' → logprob: -14.145742416381836
    10. ' tuple' → logprob: -14.645742416381836

Token 32: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.08195138722658157
    2. '(' → logprob: -2.581951379776001
    3. '(input' → logprob: -6.45695161819458
    4. '(str' → logprob: -6.83195161819458
    5. '(lambda' → logprob: -8.206951141357422
    6. '(list' → logprob: -9.081951141357422
    7. '(in' → logprob: -11.706951141357422
    8. '(eval' → logprob: -12.331951141357422
    9. ' (' → logprob: -13.081951141357422
    10. '(
' → logprob: -13.206951141357422

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04862324520945549
    2. ',input' → logprob: -3.0486233234405518
    3. 'input' → logprob: -11.173623085021973
    4. '(input' → logprob: -11.173623085021973
    5. '(' → logprob: -12.923623085021973
    6. ',(' → logprob: -13.298623085021973
    7. ' ,' → logprob: -13.423623085021973
    8. ',int' → logprob: -14.548623085021973
    9. '```' → logprob: -14.798623085021973
    10. ',line' → logprob: -15.298623085021973

Token 34: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.08894425630569458
    2. 'input' → logprob: -2.46394419670105
    3. ')' → logprob: -12.963944435119629
    4. '=input' → logprob: -14.213944435119629
    5. ',input' → logprob: -14.713944435119629
    6. ' ' → logprob: -14.838944435119629
    7. ' )' → logprob: -15.088944435119629
    8. '	input' → logprob: -15.713944435119629
    9. '(input' → logprob: -15.713944435119629
    10. '<input' → logprob: -16.088943481445312

Token 35: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0002096197713399306
    2. '()' → logprob: -8.50020980834961
    3. '())' → logprob: -12.25020980834961
    4. ' ().' → logprob: -14.00020980834961
    5. '()))' → logprob: -15.50020980834961
    6. '()
' → logprob: -16.37520980834961
    7. ')' → logprob: -16.50020980834961
    8. '(' → logprob: -16.62520980834961
    9. '()

' → logprob: -18.12520980834961
    10. '   ' → logprob: -18.12520980834961

Token 36: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.08686273545026779
    2. 'strip' → logprob: -2.586862802505493
    3. 'rstrip' → logprob: -4.836862564086914
    4. 'read' → logprob: -12.086862564086914
    5. ')' → logprob: -13.711862564086914
    6. ' split' → logprob: -14.211862564086914
    7. '(split' → logprob: -14.586862564086914
    8. '().' → logprob: -14.586862564086914
    9. '```' → logprob: -15.461862564086914
    10. 'decode' → logprob: -15.961862564086914

Token 37: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007555469055660069
    2. '())' → logprob: -8.125755310058594
    3. '))' → logprob: -8.250755310058594
    4. '()' → logprob: -8.750755310058594
    5. ')
' → logprob: -10.250755310058594
    6. ')`' → logprob: -13.375755310058594
    7. '`)' → logprob: -14.500755310058594
    8. '())
' → logprob: -14.875755310058594
    9. '),' → logprob: -15.000755310058594
    10. '(' → logprob: -15.125755310058594

Token 38: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2848537564277649
    2. '<|end|>' → logprob: -1.6598536968231201
    3. ':' → logprob: -4.034853935241699
    4. '   ' → logprob: -4.409853935241699
    5. '<|end|>' → logprob: -4.784853935241699
    6. ' ' → logprob: -5.409853935241699
    7. '
' → logprob: -5.909853935241699
    8. ')' → logprob: -5.909853935241699
    9. ',' → logprob: -7.159853935241699
    10. '        
' → logprob: -7.159853935241699

Token 39: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17297260463237762
    2. ' if' → logprob: -2.2979726791381836
    3. ' ' → logprob: -3.6729726791381836
    4. '<|end|>' → logprob: -3.9229726791381836
    5. '        ' → logprob: -4.922972679138184
    6. 'if' (adapté à ' if') → logprob: -5.547972679138184
    7. '   ' → logprob: -7.422972679138184
    8. '  ' → logprob: -8.047972679138184
    9. '    ' → logprob: -8.047972679138184
    10. '<|end|>' → logprob: -8.172972679138184

Token 40: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.032123178243637085
    2. ' not' → logprob: -3.65712308883667
    3. 'N' → logprob: -5.15712308883667
    4. 'not' → logprob: -10.157123565673828
    5. ' ' → logprob: -11.782123565673828
    6. ' ' → logprob: -14.407123565673828
    7. '	N' → logprob: -15.407123565673828
    8. ' (' → logprob: -15.657123565673828
    9. ' Q' → logprob: -16.407123565673828
    10. '!' → logprob: -16.844623565673828

Token 41: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07003224641084671
    2. '==' → logprob: -2.6950323581695557
    3. ' <=' → logprob: -10.570032119750977
    4. ' ' → logprob: -10.820032119750977
    5. ' <' → logprob: -11.195032119750977
    6. ')' → logprob: -11.445032119750977
    7. '=' → logprob: -11.570032119750977
    8. '<=' → logprob: -12.445032119750977
    9. '<' → logprob: -12.570032119750977
    10. ' =' → logprob: -12.945032119750977

Token 42: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018156379461288452
    2. ' ' → logprob: -4.0181565284729
    3. '  ' → logprob: -13.205656051635742
    4. '   ' → logprob: -14.143156051635742
    5. '```' → logprob: -14.143156051635742
    6. '    ' → logprob: -14.393156051635742
    7. '=' → logprob: -15.393156051635742
    8. ' ' → logprob: -15.393156051635742
    9. 'Q' → logprob: -15.830656051635742
    10. '۰' → logprob: -15.955656051635742

Token 43: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001427538663847372
    2. ' ' → logprob: -8.875143051147461
    3. '```' → logprob: -14.187643051147461
    4. 'Q' → logprob: -14.250143051147461
    5. '-' → logprob: -15.062643051147461
    6. '   ' → logprob: -15.625143051147461
    7. '  ' → logprob: -16.06264305114746
    8. 'and' → logprob: -16.31264305114746
    9. '    ' → logprob: -16.37514305114746
    10. '０' → logprob: -16.75014305114746

Token 44: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.37254178524017334
    2. ':' → logprob: -1.2475417852401733
    3. 'and' → logprob: -3.747541904449463
    4. ' or' → logprob: -8.997541427612305
    5. ':return' → logprob: -10.122541427612305
    6. ':
' → logprob: -10.997541427612305
    7. '	and' → logprob: -11.247541427612305
    8. '   ' → logprob: -11.497541427612305
    9. ' ' → logprob: -12.122541427612305
    10. ' :' → logprob: -12.247541427612305

Token 45: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.6931538581848145
    2. ' Q' → logprob: -0.6931538581848145
    3. '	Q' → logprob: -12.068153381347656
    4. ' ' → logprob: -15.068153381347656
    5. ',Q' → logprob: -15.318153381347656
    6. '   ' → logprob: -15.693153381347656
    7. '    ' → logprob: -16.443153381347656
    8. ' ' → logprob: -16.568153381347656
    9. '  ' → logprob: -17.068153381347656
    10. '<Q' → logprob: -17.943153381347656

Token 46: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.02055683545768261
    2. '==' → logprob: -3.895556926727295
    3. '=' → logprob: -12.520556449890137
    4. ' ' → logprob: -12.645556449890137
    5. ' =' → logprob: -12.645556449890137
    6. ')==' → logprob: -13.520556449890137
    7. '0' → logprob: -14.395556449890137
    8. '<|end|>' → logprob: -14.520556449890137
    9. ')' → logprob: -14.645556449890137
    10. ':' → logprob: -14.895556449890137

Token 47: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0036003058776259422
    2. ' ' → logprob: -5.628600120544434
    3. ' ' → logprob: -16.62860107421875
    4. '<|end|>' → logprob: -16.75360107421875
    5. '۰' → logprob: -17.37860107421875
    6. '  ' → logprob: -17.37860107421875
    7. '   ' → logprob: -17.75360107421875
    8. '```' → logprob: -18.87860107421875
    9. '০' → logprob: -19.12860107421875
    10. '<|end|>' → logprob: -19.19110107421875

Token 48: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014048899174667895
    2. ' ' → logprob: -8.875140190124512
    3. '۰' → logprob: -15.500140190124512
    4. '<|end|>' → logprob: -15.875140190124512
    5. '０' → logprob: -17.000141143798828
    6. '০' → logprob: -17.000141143798828
    7. '०' → logprob: -17.000141143798828
    8. ')' → logprob: -17.312641143798828
    9. '<|end|>' → logprob: -17.750141143798828
    10. '-' → logprob: -18.250141143798828

Token 49: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005287261446937919
    2. ':
' → logprob: -7.625528812408447
    3. ':return' → logprob: -10.750528335571289
    4. '       ' → logprob: -11.250528335571289
    5. '           ' → logprob: -12.750528335571289
    6. '   ' → logprob: -13.500528335571289
    7. '):' → logprob: -14.125528335571289
    8. ' :' → logprob: -14.500528335571289
    9. '.' → logprob: -15.375528335571289
    10. ',' → logprob: -16.25052833557129

Token 50: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25223419070243835
    2. '       ' → logprob: -1.5022342205047607
    3. ' break' → logprob: -9.62723445892334
    4. '   ' → logprob: -9.87723445892334
    5. ':' → logprob: -10.00223445892334
    6. '          ' → logprob: -10.50223445892334
    7. 'break' → logprob: -11.00223445892334
    8. '		' → logprob: -11.37723445892334
    9. '\n' → logprob: -11.37723445892334
    10. '<|end|>' → logprob: -11.62723445892334

Token 51: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.44551631808280945
    2. 'break' (adapté à ' break') → logprob: -1.1955163478851318
    3. '           ' → logprob: -3.195516347885132
    4. '       ' → logprob: -4.695516109466553
    5. 'return' → logprob: -5.195516109466553
    6. ' return' → logprob: -6.820516109466553
    7. '	break' → logprob: -9.070516586303711
    8. '               ' → logprob: -9.695516586303711
    9. '   ' → logprob: -9.945516586303711
    10. '_break' → logprob: -11.820516586303711

Token 52: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 53: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08097879588603973
    2. '   ' → logprob: -2.9559788703918457
    3. '```' → logprob: -5.330978870391846
    4. '    ' → logprob: -5.955978870391846
    5. '        
' → logprob: -5.955978870391846
    6. '<|end|>' → logprob: -6.080978870391846
    7. 'query' → logprob: -6.330978870391846
    8. ')' → logprob: -6.580978870391846
    9. '        ' → logprob: -6.830978870391846
    10. '[' → logprob: -7.080978870391846

Token 54: ' parent' (ID: 5980)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.8218002319335938
    2. 'graph' → logprob: -1.9468002319335938
    3. 'tree' → logprob: -2.1968002319335938
    4. 'arr' → logprob: -2.9468002319335938
    5. ' A' → logprob: -3.0718002319335938
    6. 'a' → logprob: -3.1968002319335938
    7. 'edges' → logprob: -3.3218002319335938
    8. ' graph' → logprob: -3.4468002319335938
    9. 'nodes' → logprob: -3.5718002319335938
    10. 'parent' (adapté à ' parent') → logprob: -3.6968002319335938

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2310100495815277
    2. '=' → logprob: -1.60601007938385
    3. 's' → logprob: -5.6060099601745605
    4. ',' → logprob: -6.9810099601745605
    5. '[' → logprob: -7.7310099601745605
    6. '[]' → logprob: -8.356010437011719
    7. ']' → logprob: -10.231010437011719
    8. ')' → logprob: -10.481010437011719
    9. ' ' → logprob: -10.606010437011719
    10. '_list' → logprob: -10.731010437011719

Token 56: ' [' (ID: 723)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.12105771154165268
    2. '[' → logprob: -2.8710577487945557
    3. '[list' → logprob: -3.1210577487945557
    4. 'list' → logprob: -5.246057510375977
    5. ' [-' → logprob: -5.371057510375977
    6. ' [' → logprob: -5.996057510375977
    7. ' list' → logprob: -7.746057510375977
    8. '[i' → logprob: -8.371057510375977
    9. '[parent' → logprob: -10.496057510375977
    10. '[n' → logprob: -10.621057510375977

Token 57: '0' (ID: 15)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.26627635955810547
    2. '-' → logprob: -1.5162763595581055
    3. '-i' → logprob: -4.3912763595581055
    4. ' i' → logprob: -6.3912763595581055
    5. ' -' → logprob: -8.891276359558105
    6. '0' → logprob: -10.516276359558105
    7. ']' → logprob: -12.016276359558105
    8. '-n' → logprob: -13.016276359558105
    9. 'None' → logprob: -13.266276359558105
    10. '*i' → logprob: -13.766276359558105

Token 58: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.22635740041732788
    2. ' for' → logprob: -1.7263574600219727
    3. ']*(' → logprob: -3.8513574600219727
    4. ']*' → logprob: -6.726357460021973
    5. ' ]' → logprob: -7.101357460021973
    6. 'for' → logprob: -7.101357460021973
    7. ',' → logprob: -8.351357460021973
    8. ')' → logprob: -8.851357460021973
    9. '   ' → logprob: -9.726357460021973
    10. '	for' → logprob: -10.226357460021973

Token 59: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.25629952549934387
    2. 'for' → logprob: -2.1312994956970215
    3. ']' → logprob: -3.3812994956970215
    4. ' *' → logprob: -3.3812994956970215
    5. ']*(' → logprob: -3.7562994956970215
    6. '*' → logprob: -5.0062994956970215
    7. '*(' → logprob: -5.5062994956970215
    8. '(N' → logprob: -6.6312994956970215
    9. ')' → logprob: -6.7562994956970215
    10. ']*' → logprob: -6.8812994956970215

Token 60: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.026239687576889992
    2. 'N' → logprob: -4.02623987197876
    3. '(' → logprob: -4.90123987197876
    4. ' (' → logprob: -7.65123987197876
    5. '(n' → logprob: -10.151239395141602
    6. ' N' → logprob: -10.276239395141602
    7. '   ' → logprob: -11.026239395141602
    8. '100' → logprob: -11.526239395141602
    9. ' ' → logprob: -11.901239395141602
    10. '（' → logprob: -12.651239395141602

Token 61: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.028301632031798363
    2. '(N' → logprob: -3.65330171585083
    3. ' N' → logprob: -6.52830171585083
    4. ' (' → logprob: -8.278301239013672
    5. '(' → logprob: -8.653301239013672
    6. '   ' → logprob: -9.653301239013672
    7. ' ' → logprob: -11.278301239013672
    8. '	N' → logprob: -11.528301239013672
    9. '[N' → logprob: -12.778301239013672
    10. '    ' → logprob: -13.028301239013672

Token 62: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0010696083772927523
    2. ' +' → logprob: -7.12606954574585
    3. ')' → logprob: -8.376070022583008
    4. '+
' → logprob: -10.876070022583008
    5. ')
' → logprob: -12.001070022583008
    6. '+)' → logprob: -12.501070022583008
    7. '```' → logprob: -13.251070022583008
    8. '1' → logprob: -13.376070022583008
    9. '2' → logprob: -15.126070022583008
    10. '*' → logprob: -15.126070022583008

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014919086243025959
    2. ' ' → logprob: -8.87514877319336
    3. '2' → logprob: -11.87514877319336
    4. '   ' → logprob: -14.12514877319336
    5. '0' → logprob: -14.37514877319336
    6. '```' → logprob: -15.37514877319336
    7. '10' → logprob: -15.62514877319336
    8. ')' → logprob: -15.75014877319336
    9. '  ' → logprob: -16.18764877319336
    10. '5' → logprob: -16.68764877319336

Token 64: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06219107657670975
    2. ')
' → logprob: -2.8121910095214844
    3. ')
' → logprob: -9.187191009521484
    4. ' )' → logprob: -9.812191009521484
    5. '<|end|>' → logprob: -10.812191009521484
    6. '
' → logprob: -11.687191009521484
    7. ' )
' → logprob: -11.687191009521484
    8. ')

' → logprob: -11.812191009521484
    9. '   ' → logprob: -12.937191009521484
    10. '),' → logprob: -13.062191009521484

Token 65: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 66: ' parent' (ID: 5980)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8684864044189453
    2. 'depth' → logprob: -1.2434864044189453
    3. 'rank' → logprob: -2.1184864044189453
    4. 'children' → logprob: -2.3684864044189453
    5. 'child' → logprob: -3.9934864044189453
    6. ' for' → logprob: -4.243486404418945
    7. 'size' → logprob: -4.368486404418945
    8. 'graph' → logprob: -4.868486404418945
    9. 'tree' → logprob: -5.243486404418945
    10. ' depth' → logprob: -5.868486404418945

Token 67: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.012059125117957592
    2. ' =' → logprob: -4.887059211730957
    3. '=' → logprob: -6.137059211730957
    4. '<|end|>' → logprob: -7.262059211730957
    5. '[:]' → logprob: -7.262059211730957
    6. '<|end|>' → logprob: -8.137059211730957
    7. ')' → logprob: -9.387059211730957
    8. '[]' → logprob: -9.637059211730957
    9. ',' → logprob: -9.637059211730957
    10. '```' → logprob: -9.762059211730957

Token 68: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22721107304096222
    2. '1' → logprob: -1.6022111177444458
    3. ' ' → logprob: -6.727210998535156
    4. '2' → logprob: -8.352210998535156
    5. '-' → logprob: -8.602210998535156
    6. ']' → logprob: -9.102210998535156
    7. ')' → logprob: -10.852210998535156
    8. 'i' → logprob: -11.289710998535156
    9. ' -' → logprob: -11.789710998535156
    10. '   ' → logprob: -12.102210998535156

Token 69: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009207703173160553
    2. '=' → logprob: -5.634207725524902
    3. ']=' → logprob: -5.759207725524902
    4. ' =' → logprob: -6.384207725524902
    5. ' ]' → logprob: -7.509207725524902
    6. ')' → logprob: -8.884207725524902
    7. '[' → logprob: -10.259207725524902
    8. ',' → logprob: -11.509207725524902
    9. ']=-' → logprob: -12.384207725524902
    10. ' ' → logprob: -12.634207725524902

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34847211837768555
    2. '=' → logprob: -1.2234721183776855
    3. ',' → logprob: -11.598472595214844
    4. '=int' → logprob: -12.223472595214844
    5. ' ' → logprob: -12.348472595214844
    6. '=-' → logprob: -13.098472595214844
    7. '[' → logprob: -13.723472595214844
    8. '<|end|>' → logprob: -13.973472595214844
    9. '=None' → logprob: -14.223472595214844
    10. '＝' → logprob: -14.723472595214844

Token 71: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.027282271534204483
    2. '-' → logprob: -4.152282238006592
    3. '0' → logprob: -4.527282238006592
    4. ' ' → logprob: -8.15228271484375
    5. ' -' → logprob: -9.40228271484375
    6. 'None' → logprob: -13.15228271484375
    7. '  ' → logprob: -14.65228271484375
    8. '   ' → logprob: -15.02728271484375
    9. '2' → logprob: -15.21478271484375
    10. '−' → logprob: -16.33978271484375

Token 72: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04809645935893059
    2. '-' → logprob: -3.1730964183807373
    3. '0' → logprob: -5.298096656799316
    4. ' ' → logprob: -9.798096656799316
    5. ' -' → logprob: -10.923096656799316
    6. 'None' → logprob: -12.298096656799316
    7. '2' → logprob: -14.173096656799316
    8. '  ' → logprob: -14.985596656799316
    9. 'none' → logprob: -15.110596656799316
    10. ' itself' → logprob: -15.173096656799316

Token 73: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6334330439567566
    2. '<|end|>' → logprob: -0.7584330439567566
    3. '<|end|>' → logprob: -7.508432865142822
    4. ' ' → logprob: -10.00843334197998
    5. '
' → logprob: -10.13343334197998
    6. '```' → logprob: -10.25843334197998
    7. '       ' → logprob: -10.25843334197998
    8. ')' → logprob: -10.63343334197998
    9. '' → logprob: -10.88343334197998
    10. ' 
' → logprob: -11.00843334197998

Token 74: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 75: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.21021899580955505
    2. ' for' → logprob: -1.7102190256118774
    3. '       ' → logprob: -5.335218906402588
    4. '   ' → logprob: -5.960218906402588
    5. 'def' → logprob: -7.085218906402588
    6. '	for' → logprob: -8.585219383239746
    7. 'stack' → logprob: -9.210219383239746
    8. '<|end|>' → logprob: -9.710219383239746
    9. 'import' → logprob: -10.210219383239746
    10. '    ' → logprob: -10.585219383239746

Token 76: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4746348559856415
    2. 'i' → logprob: -0.9746348857879639
    3. '_' → logprob: -7.724634647369385
    4. ' _' → logprob: -9.349635124206543
    5. '_i' → logprob: -10.974635124206543
    6. ' ' → logprob: -11.974635124206543
    7. ' node' → logprob: -13.599635124206543
    8. '	i' → logprob: -14.349635124206543
    9. 'v' → logprob: -14.474635124206543
    10. ' v' → logprob: -14.474635124206543

Token 77: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12717819213867188
    2. 'in' → logprob: -2.127178192138672
    3. ' ' → logprob: -8.502178192138672
    4. '  ' → logprob: -10.877178192138672
    5. 'range' → logprob: -12.002178192138672
    6. '	in' → logprob: -12.127178192138672
    7. '   ' → logprob: -12.377178192138672
    8. ',' → logprob: -13.002178192138672
    9. '    ' → logprob: -13.752178192138672
    10. 'n' → logprob: -14.002178192138672

Token 78: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20141801238059998
    2. ' range' → logprob: -1.7014180421829224
    3. ' ' → logprob: -13.076417922973633
    4. '	range' → logprob: -13.201417922973633
    5. '  ' → logprob: -15.326417922973633
    6. '(range' → logprob: -15.576417922973633
    7. ' xrange' → logprob: -15.701417922973633
    8. 'rang' → logprob: -16.326417922973633
    9. '   ' → logprob: -16.701417922973633
    10. 'r' → logprob: -17.826417922973633

Token 79: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03835771232843399
    2. '2' → logprob: -3.288357734680176
    3. ' ' → logprob: -8.538357734680176
    4. '   ' → logprob: -9.788357734680176
    5. ' (' → logprob: -9.913357734680176
    6. ',' → logprob: -12.288357734680176
    7. ')' → logprob: -12.538357734680176
    8. '	' → logprob: -13.288357734680176
    9. '  ' → logprob: -13.538357734680176
    10. '
' → logprob: -14.163357734680176

Token 80: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009177703177556396
    2. ' ' → logprob: -7.000917911529541
    3. '   ' → logprob: -12.375917434692383
    4. '1' → logprob: -14.000917434692383
    5. '  ' → logprob: -14.500917434692383
    6. '    ' → logprob: -15.875917434692383
    7. ')' → logprob: -16.438417434692383
    8. '(' → logprob: -16.500917434692383
    9. '２' → logprob: -16.625917434692383
    10. '```' → logprob: -16.938417434692383

Token 81: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014526135055348277
    2. ' ,' → logprob: -6.751452445983887
    3. ',N' → logprob: -8.251452445983887
    4. ',n' → logprob: -12.126452445983887
    5. '   ' → logprob: -12.251452445983887
    6. ',
' → logprob: -12.376452445983887
    7. ',i' → logprob: -13.001452445983887
    8. ',num' → logprob: -14.376452445983887
    9. ',int' → logprob: -14.501452445983887
    10. '‌,' → logprob: -14.876452445983887

Token 82: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.02976449765264988
    2. ' N' → logprob: -3.529764413833618
    3. '   ' → logprob: -11.404764175415039
    4. '	N' → logprob: -13.779764175415039
    5. ' ' → logprob: -14.154764175415039
    6. 'n' → logprob: -14.404764175415039
    7. '  ' → logprob: -15.279764175415039
    8. '    ' → logprob: -15.779764175415039
    9. ')' → logprob: -16.40476417541504
    10. '(N' → logprob: -17.15476417541504

Token 83: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.000629279064014554
    2. ' +' → logprob: -7.375629425048828
    3. '):
' → logprob: -14.125629425048828
    4. '):' → logprob: -14.375629425048828
    5. '+
' → logprob: -14.500629425048828
    6. '   ' → logprob: -15.125629425048828
    7. '
' → logprob: -16.375629425048828
    8. ')+' → logprob: -16.375629425048828
    9. '＋' → logprob: -16.625629425048828
    10. '+i' → logprob: -16.875629425048828

Token 84: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.183501293184236e-05
    2. ' ' → logprob: -9.75007152557373
    3. '   ' → logprob: -11.50007152557373
    4. '       ' → logprob: -13.87507152557373
    5. '):
' → logprob: -14.37507152557373
    6. '```' → logprob: -14.37507152557373
    7. ')' → logprob: -15.25007152557373
    8. '           ' → logprob: -15.50007152557373
    9. '2' → logprob: -15.50007152557373
    10. '     ' → logprob: -16.250072479248047

Token 85: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4312545657157898
    2. '):
' → logprob: -1.0562546253204346
    3. ':' → logprob: -6.3062543869018555
    4. ' ):' → logprob: -8.556254386901855
    5. '):
' → logprob: -8.681254386901855
    6. ' ):
' → logprob: -9.181254386901855
    7. ':
' → logprob: -9.431254386901855
    8. '       ' → logprob: -9.431254386901855
    9. ',' → logprob: -9.806254386901855
    10. '   ' → logprob: -10.931254386901855

Token 86: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012279587797820568
    2. '       ' → logprob: -4.887279510498047
    3. 'parent' → logprob: -6.762279510498047
    4. '	       ' → logprob: -7.137279510498047
    5. ' parent' → logprob: -7.137279510498047
    6. ':' → logprob: -7.262279510498047
    7. '   ' → logprob: -8.137279510498047
    8. '<|end|>' → logprob: -8.637279510498047
    9. ',parent' → logprob: -9.387279510498047
    10. '	   ' → logprob: -9.387279510498047

Token 87: ' p' (ID: 275)
  Prédit: ' parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parent' → logprob: -0.6035669445991516
    2. 'parent' → logprob: -0.8535669445991516
    3. '           ' → logprob: -4.603567123413086
    4. 'p' (adapté à ' p') → logprob: -4.853567123413086
    5. ' p' → logprob: -4.853567123413086
    6. '	parent' → logprob: -7.853567123413086
    7. ',parent' → logprob: -7.978567123413086
    8. '       ' → logprob: -8.228567123413086
    9. '   ' → logprob: -8.603567123413086
    10. ' ' → logprob: -9.228567123413086

Token 88: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14911986887454987
    2. '=' → logprob: -2.8991198539733887
    3. '[i' → logprob: -3.1491198539733887
    4. 'ar' → logprob: -3.8991198539733887
    5. 'r' → logprob: -5.024119853973389
    6. ',' → logprob: -5.524119853973389
    7. '[int' → logprob: -5.524119853973389
    8. '=int' → logprob: -6.649119853973389
    9. '[parent' → logprob: -6.774119853973389
    10. 'ARENT' → logprob: -7.399119853973389

Token 89: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.004624749533832073
    2. ' int' → logprob: -5.379624843597412
    3. '<int' → logprob: -13.254624366760254
    4. 'i' → logprob: -13.254624366760254
    5. '(int' → logprob: -15.379624366760254
    6. '[int' → logprob: -15.379624366760254
    7. '=int' → logprob: -15.629624366760254
    8. ' ' → logprob: -15.629624366760254
    9. ' i' → logprob: -15.879624366760254
    10. '	int' → logprob: -16.62962532043457

Token 90: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -1.5048530030981055e-06
    2. '(' → logprob: -14.000001907348633
    3. 'input' → logprob: -14.750001907348633
    4. '(sys' → logprob: -16.500001907348633
    5. ' (' → logprob: -16.625001907348633
    6. '(in' → logprob: -17.500001907348633
    7. ' input' → logprob: -18.125001907348633
    8. '=input' → logprob: -18.500001907348633
    9. ',input' → logprob: -19.250001907348633
    10. '(inp' → logprob: -20.000001907348633

Token 91: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.02010466530919075
    2. '()' → logprob: -4.020104885101318
    3. '().' → logprob: -6.270104885101318
    4. '())
' → logprob: -10.64510440826416
    5. '()
' → logprob: -11.64510440826416
    6. ' ())' → logprob: -11.64510440826416
    7. '()))' → logprob: -12.27010440826416
    8. '())

' → logprob: -12.27010440826416
    9. ')' → logprob: -12.52010440826416
    10. '(' → logprob: -13.27010440826416

Token 92: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6785276532173157
    2. '           ' → logprob: -0.9285276532173157
    3. 'parent' → logprob: -2.928527593612671
    4. '   ' → logprob: -4.17852783203125
    5. ')' → logprob: -5.05352783203125
    6. '<|end|>' → logprob: -5.05352783203125
    7. ' parent' → logprob: -5.17852783203125
    8. '	parent' → logprob: -5.67852783203125
    9. '
' → logprob: -6.42852783203125
    10. ',parent' → logprob: -7.17852783203125

Token 93: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -0.4175093472003937
    2. ' parent' → logprob: -1.4175093173980713
    3. '           ' → logprob: -2.4175093173980713
    4. '       ' → logprob: -5.16750955581665
    5. '   ' → logprob: -6.04250955581665
    6. '	parent' → logprob: -6.91750955581665
    7. '[parent' → logprob: -8.792509078979492
    8. ',parent' → logprob: -8.792509078979492
    9. '.parent' → logprob: -8.917509078979492
    10. ' ' → logprob: -9.917509078979492

Token 94: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03329604119062424
    2. '[p' → logprob: -3.5332961082458496
    3. '[' → logprob: -5.65829610824585
    4. '[ip' → logprob: -11.533295631408691
    5. '[I' → logprob: -11.908295631408691
    6. '[...]' → logprob: -12.158295631408691
    7. '[int' → logprob: -12.283295631408691
    8. '[u' → logprob: -12.283295631408691
    9. '[s' → logprob: -13.033295631408691
    10. '[j' → logprob: -13.158295631408691

Token 95: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08203407377004623
    2. '=' → logprob: -3.207034111022949
    3. ' =' → logprob: -4.207034111022949
    4. ')' → logprob: -4.332034111022949
    5. ']=' → logprob: -4.707034111022949
    6. '[i' → logprob: -7.457034111022949
    7. '[' → logprob: -8.45703411102295
    8. ')=' → logprob: -8.45703411102295
    9. ' ]' → logprob: -8.83203411102295
    10. '=i' → logprob: -11.08203411102295

Token 96: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687604665756226
    2. '=' → logprob: -1.136876106262207
    3. '=p' → logprob: -12.886876106262207
    4. ' ' → logprob: -14.386876106262207
    5. '=i' → logprob: -14.636876106262207
    6. '＝' → logprob: -14.636876106262207
    7. '[' → logprob: -15.011876106262207
    8. '=s' → logprob: -16.26187515258789
    9. ' +=' → logprob: -16.51187515258789
    10. '=int' → logprob: -16.63687515258789

Token 97: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.004078639671206474
    2. ' p' → logprob: -5.5040788650512695
    3. ' ' → logprob: -16.254077911376953
    4. '	p' → logprob: -17.754077911376953
    5. '<p' → logprob: -18.629077911376953
    6. '   ' → logprob: -19.004077911376953
    7. 'i' → logprob: -19.129077911376953
    8. ' ' → logprob: -19.504077911376953
    9. 'parent' → logprob: -19.566577911376953
    10. '  ' → logprob: -20.129077911376953

Token 98: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 99: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10863234102725983
    2. '   ' → logprob: -2.6086323261260986
    3. '<|end|>' → logprob: -4.233632564544678
    4. ' for' → logprob: -5.608632564544678
    5. 'def' → logprob: -5.608632564544678
    6. '```' → logprob: -5.733632564544678
    7. '
' → logprob: -6.483632564544678
    8. 'for' → logprob: -6.483632564544678
    9. '        
' → logprob: -7.858632564544678
    10. ')' → logprob: -8.23363208770752

Token 100: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9959319829940796
    2. 'def' → logprob: -1.1209319829940796
    3. 'depth' → logprob: -1.7459319829940796
    4. ' for' → logprob: -2.870932102203369
    5. 'answers' → logprob: -4.120932102203369
    6. 'from' → logprob: -4.620932102203369
    7. 'children' → logprob: -5.245932102203369
    8. 'tree' → logprob: -5.245932102203369
    9. 'graph' → logprob: -5.370932102203369
    10. '#' (adapté à ' #') → logprob: -5.620932102203369

Token 101: ' DS' (ID: 35363)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6478679776191711
    2. ' #' → logprob: -2.1478679180145264
    3. '#' → logprob: -2.7728679180145264
    4. ' def' → logprob: -3.3978679180145264
    5. ' ans' → logprob: -3.6478679180145264
    6. 'for' → logprob: -3.7728679180145264
    7. ' answers' → logprob: -3.8978679180145264
    8. ' pass' → logprob: -3.8978679180145264
    9. ' queries' → logprob: -4.0228681564331055
    10. ' visited' → logprob: -4.1478681564331055

Token 102: 'U' (ID: 52)
  Prédit: 'U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.16787222027778625
    2. 'u' → logprob: -1.9178721904754639
    3. 'def' → logprob: -6.542872428894043
    4. 'union' → logprob: -6.542872428894043
    5. '_union' → logprob: -6.917872428894043
    6. '   ' → logprob: -7.042872428894043
    7. '

' → logprob: -7.917872428894043
    8. '_' → logprob: -8.167872428894043
    9. '
' → logprob: -8.542872428894043
    10. '[u' → logprob: -8.792872428894043

Token 103: ' structure' (ID: 8866)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23774458467960358
    2. 'class' → logprob: -1.8627445697784424
    3. ' class' → logprob: -3.6127445697784424
    4. 'parent' → logprob: -4.8627448081970215
    5. '        
' → logprob: -4.8627448081970215
    6. ' 
' → logprob: -5.3627448081970215
    7. '    
' → logprob: -6.2377448081970215
    8. 'data' → logprob: -7.2377448081970215
    9. '```' → logprob: -7.2377448081970215
    10. '   ' → logprob: -7.3627448081970215

Token 104: ':' (ID: 25)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.022105854004621506
    2. '       ' → logprob: -5.272105693817139
    3. 'class' → logprob: -5.397105693817139
    4. '        
' → logprob: -5.397105693817139
    5. 'parent' → logprob: -5.647105693817139
    6. '
' → logprob: -7.647105693817139
    7. '

' → logprob: -7.772105693817139
    8. ':' → logprob: -7.772105693817139
    9. '```' → logprob: -7.772105693817139
    10. ' 
' → logprob: -7.897105693817139

Token 105: ' for' (ID: 395)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.2514865398406982
    2. ' rank' → logprob: -2.0014865398406982
    3. 'rank' → logprob: -2.1264865398406982
    4. ' class' → logprob: -2.1264865398406982
    5. 'parent' → logprob: -2.3764865398406982
    6. ' parent' → logprob: -2.3764865398406982
    7. ' par' → logprob: -2.3764865398406982
    8. '       ' → logprob: -4.001486778259277
    9. 'par' → logprob: -4.001486778259277
    10. '   ' → logprob: -5.001486778259277

Token 106: ' each' (ID: 2454)
  Prédit: ' each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -1.1315560340881348
    2. ' i' → logprob: -1.5065560340881348
    3. 'each' → logprob: -2.2565560340881348
    4. ' find' → logprob: -2.3815560340881348
    5. 'find' → logprob: -2.6315560340881348
    6. ' union' → logprob: -3.0065560340881348
    7. ' finding' → logprob: -3.7565560340881348
    8. 'i' → logprob: -4.006556034088135
    9. 'finding' → logprob: -4.256556034088135
    10. '[]' → logprob: -4.256556034088135

Token 107: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.1862320452928543
    2. ' i' → logprob: -2.561232089996338
    3. 'node' → logprob: -2.686232089996338
    4. 'i' → logprob: -3.811232089996338
    5. ' element' → logprob: -6.686232089996338
    6. ' index' → logprob: -8.18623161315918
    7. 'index' → logprob: -8.56123161315918
    8. 'element' → logprob: -8.68623161315918
    9. 'x' → logprob: -8.93623161315918
    10. ' x' → logprob: -9.18623161315918

Token 108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022798361256718636
    2. '       ' → logprob: -5.022798538208008
    3. ' ,' → logprob: -5.647798538208008
    4. '   ' → logprob: -5.772798538208008
    5. ',parent' → logprob: -5.897798538208008
    6. ',
' → logprob: -6.272798538208008
    7. 'parent' → logprob: -6.397798538208008
    8. '
' → logprob: -6.522798538208008
    9. ':' → logprob: -8.147798538208008
    10. '```' → logprob: -8.772798538208008

Token 109: ' keep' (ID: 3357)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.1627839058637619
    2. 'find' → logprob: -2.4127838611602783
    3. ' its' → logprob: -4.162784099578857
    4. 'we' → logprob: -4.912784099578857
    5. ' parent' → logprob: -5.287784099578857
    6. ' store' → logprob: -5.287784099578857
    7. ' we' → logprob: -5.412784099578857
    8. ' the' → logprob: -5.412784099578857
    9. 'parent' → logprob: -6.037784099578857
    10. '       ' → logprob: -6.287784099578857

Token 110: ' the' (ID: 290)
  Prédit: ' its'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' its' → logprob: -0.15644191205501556
    2. 'its' → logprob: -2.6564419269561768
    3. 'a' → logprob: -4.031441688537598
    4. ' a' → logprob: -4.281441688537598
    5. 'the' → logprob: -4.281441688537598
    6. ' track' → logprob: -4.406441688537598
    7. ' the' → logprob: -5.031441688537598
    8. 'track' → logprob: -5.406441688537598
    9. 'rank' → logprob: -6.156441688537598
    10. ' an' → logprob: -6.656441688537598

Token 111: ' nearest' (ID: 35210)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.861925482749939
    2. 'represent' → logprob: -1.861925482749939
    3. ' representative' → logprob: -1.986925482749939
    4. 'ancestor' → logprob: -2.2369256019592285
    5. 'parent' → logprob: -2.7369256019592285
    6. 'leader' → logprob: -3.6119256019592285
    7. 'rank' → logprob: -3.7369256019592285
    8. ' root' → logprob: -3.9869256019592285
    9. ' parent' → logprob: -4.6119256019592285
    10. ' ancestor' → logprob: -4.7369256019592285

Token 112: ' marked' (ID: 20779)
  Prédit: 'ancestor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ancestor' → logprob: -0.362077921628952
    2. ' ancestor' → logprob: -1.2370779514312744
    3. 'parent' → logprob: -4.862077713012695
    4. ' parent' → logprob: -5.487077713012695
    5. 'anc' → logprob: -7.987077713012695
    6. '_' → logprob: -8.487077713012695
    7. ' common' → logprob: -8.487077713012695
    8. 'common' → logprob: -8.612077713012695
    9. '[parent' → logprob: -8.987077713012695
    10. ' ' → logprob: -9.487077713012695

Token 113: ' ancestor' (ID: 90832)
  Prédit: 'ancestor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ancestor' → logprob: -0.24804994463920593
    2. ' ancestor' → logprob: -1.6230499744415283
    3. ' node' → logprob: -4.873049736022949
    4. 'parent' → logprob: -5.373049736022949
    5. '[node' → logprob: -5.748049736022949
    6. 'node' → logprob: -6.248049736022949
    7. ' parent' → logprob: -6.498049736022949
    8. 'anc' → logprob: -6.748049736022949
    9. '<|end|>' → logprob: -7.248049736022949
    10. '[' → logprob: -8.49804973602295

Token 114: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6135321259498596
    2. '
' → logprob: -1.1135320663452148
    3. ',' → logprob: -2.738532066345215
    4. 'parent' → logprob: -3.863532066345215
    5. '        
' → logprob: -4.613532066345215
    6. 'marked' → logprob: -5.363532066345215
    7. '   ' → logprob: -5.613532066345215
    8. 'root' → logprob: -5.988532066345215
    9. ',
' → logprob: -6.238532066345215
    10. ' marked' → logprob: -6.238532066345215

Token 115: ' its' (ID: 1617)
  Prédit: ' itself'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itself' → logprob: -0.2508189380168915
    2. ' its' → logprob: -2.500818967819214
    3. 'parent' → logprob: -2.750818967819214
    4. 'its' → logprob: -3.625818967819214
    5. ' parent' → logprob: -4.375818729400635
    6. '-' → logprob: -4.625818729400635
    7. '   ' → logprob: -4.625818729400635
    8. 'the' → logprob: -5.375818729400635
    9. 'it' → logprob: -5.500818729400635
    10. ' the' → logprob: -6.500818729400635

Token 116: ' parent' (ID: 5980)
  Prédit: 'represent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'represent' → logprob: -0.29543089866638184
    2. ' representative' → logprob: -1.7954308986663818
    3. 'ancestor' → logprob: -2.920430898666382
    4. 'parent' → logprob: -3.545430898666382
    5. ' parent' → logprob: -6.420431137084961
    6. 'root' → logprob: -6.545431137084961
    7. ' ancestor' → logprob: -6.795431137084961
    8. 'own' → logprob: -6.920431137084961
    9. ' own' → logprob: -7.795431137084961
    10. 'leader' → logprob: -7.795431137084961

Token 117: ' in' (ID: 306)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1217089369893074
    2. '       ' → logprob: -2.496708869934082
    3. '<|end|>' → logprob: -4.371708869934082
    4. '        
' → logprob: -4.496708869934082
    5. ',' → logprob: -5.746708869934082
    6. '```' → logprob: -6.996708869934082
    7. ',
' → logprob: -7.246708869934082
    8. '
' → logprob: -7.496708869934082
    9. '\n' → logprob: -7.871708869934082
    10. '  
' → logprob: -7.996708869934082

Token 118: ' DS' (ID: 35363)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.2194101810455322
    2. 'the' → logprob: -1.4694101810455322
    3. 'ds' → logprob: -1.5944101810455322
    4. ' d' → logprob: -1.5944101810455322
    5. 'd' → logprob: -3.4694101810455322
    6. 'parent' → logprob: -4.844409942626953
    7. ' a' → logprob: -5.219409942626953
    8. '   ' → logprob: -5.344409942626953
    9. 'DS' → logprob: -5.969409942626953
    10. ' parent' → logprob: -5.969409942626953

Token 119: 'U' (ID: 52)
  Prédit: 'U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' → logprob: -2.6895233531831764e-05
    2. '
' → logprob: -12.25002670288086
    3. 'u' → logprob: -12.62502670288086
    4. '```' → logprob: -12.62502670288086
    5. '

' → logprob: -13.56252670288086
    6. '   ' → logprob: -13.75002670288086
    7. '``' → logprob: -13.81252670288086
    8. '[]' → logprob: -13.93752670288086
    9. '{
' → logprob: -14.00002670288086
    10. '{' → logprob: -14.06252670288086

Token 120: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.37547972798347473
    2. '       ' → logprob: -2.0004796981811523
    3. '```' → logprob: -2.6254796981811523
    4. '   ' → logprob: -4.000479698181152
    5. 'def' → logprob: -4.000479698181152
    6. '        
' → logprob: -4.375479698181152
    7. ',' → logprob: -4.750479698181152
    8. '\n' → logprob: -4.750479698181152
    9. ',
' → logprob: -5.000479698181152
    10. 'parent' → logprob: -5.500479698181152

Token 121: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7286683320999146
    2. '       ' → logprob: -0.7286683320999146
    3. '        
' → logprob: -3.603668212890625
    4. '   ' → logprob: -6.603668212890625
    5. '```' → logprob: -6.728668212890625
    6. '  
' → logprob: -6.978668212890625
    7. '    
' → logprob: -6.978668212890625
    8. '<|end|>' → logprob: -7.478668212890625
    9. 'def' → logprob: -7.603668212890625
    10. ',' → logprob: -7.853668212890625

Token 122: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -1.2192277908325195
    2. ' d' → logprob: -1.5942277908325195
    3. 'ds' → logprob: -1.5942277908325195
    4. 'parent' → logprob: -1.9692277908325195
    5. '   ' → logprob: -3.2192277908325195
    6. '       ' → logprob: -3.4692277908325195
    7. 'def' → logprob: -4.0942277908325195
    8. '
' → logprob: -4.5942277908325195
    9. 'par' → logprob: -4.7192277908325195
    10. 'marked' → logprob: -4.7192277908325195

Token 123: 'su' (ID: 20634)
  Prédit: 'su'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.0006339243846014142
    2. ' =' → logprob: -8.62563419342041
    3. '=' → logprob: -9.00063419342041
    4. '   ' → logprob: -9.12563419342041
    5. 's' → logprob: -9.62563419342041
    6. 'parent' → logprob: -10.12563419342041
    7. 'SU' → logprob: -10.75063419342041
    8. '```' → logprob: -11.00063419342041
    9. 'ef' → logprob: -11.12563419342041
    10. ' su' → logprob: -11.75063419342041

Token 124: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4016299843788147
    2. '=' → logprob: -1.27662992477417
    3. '_parent' → logprob: -3.02662992477417
    4. '   ' → logprob: -6.40162992477417
    5. 'parent' → logprob: -7.40162992477417
    6. '_' → logprob: -7.90162992477417
    7. '_par' → logprob: -8.026630401611328
    8. ' ' → logprob: -8.651630401611328
    9. '  ' → logprob: -10.401630401611328
    10. '_find' → logprob: -11.276630401611328

Token 125: ' list' (ID: 1562)
  Prédit: '[parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[parent' → logprob: -0.7894895672798157
    2. '[' → logprob: -1.039489507675171
    3. '[-' → logprob: -2.664489507675171
    4. 'list' → logprob: -2.789489507675171
    5. 'parent' → logprob: -3.289489507675171
    6. '[list' → logprob: -3.914489507675171
    7. ' [' → logprob: -5.78948974609375
    8. '{' → logprob: -8.03948974609375
    9. ' list' → logprob: -8.53948974609375
    10. ' [-' → logprob: -8.91448974609375

Token 126: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.00034821697045117617
    2. '(parent' → logprob: -8.000348091125488
    3. '(' → logprob: -12.125348091125488
    4. 'range' → logprob: -12.250348091125488
    5. '   ' → logprob: -14.000348091125488
    6. 'parent' → logprob: -14.375348091125488
    7. '```' → logprob: -15.000348091125488
    8. ' =' → logprob: -16.125349044799805
    9. ' (' → logprob: -16.250349044799805
    10. '_parent' → logprob: -16.375349044799805

Token 127: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0001637300301808864
    2. '(len' → logprob: -9.000164031982422
    3. '(' → logprob: -10.375164031982422
    4. '(n' → logprob: -12.500164031982422
    5. 'len' → logprob: -12.750164031982422
    6. 'N' → logprob: -13.750164031982422
    7. ')(' → logprob: -15.125164031982422
    8. '((' → logprob: -15.250164031982422
    9. ')' → logprob: -15.375164031982422
    10. '   ' → logprob: -15.500164031982422

Token 128: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.2603901015827432e-05
    2. ' +' → logprob: -10.750022888183594
    3. '+
' → logprob: -14.875022888183594
    4. '   ' → logprob: -14.875022888183594
    5. '()+' → logprob: -15.250022888183594
    6. ')+' → logprob: -16.500022888183594
    7. '
' → logprob: -17.500022888183594
    8. '1' → logprob: -17.625022888183594
    9. '(N' → logprob: -17.625022888183594
    10. '       ' → logprob: -17.875022888183594

Token 129: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006078407750464976
    2. '+' → logprob: -7.625607967376709
    3. ' ' → logprob: -9.37560749053955
    4. '(' → logprob: -11.25060749053955
    5. '   ' → logprob: -12.37560749053955
    6. '(N' → logprob: -12.37560749053955
    7. '2' → logprob: -12.75060749053955
    8. '```' → logprob: -13.37560749053955
    9. '
' → logprob: -13.50060749053955
    10. ' +' → logprob: -13.62560749053955

Token 130: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00036667886888608336
    2. '))
' → logprob: -8.5003662109375
    3. ')' → logprob: -8.7503662109375
    4. '))

' → logprob: -13.5003662109375
    5. ')))' → logprob: -13.7503662109375
    6. ' ))' → logprob: -13.7503662109375
    7. '       ' → logprob: -14.6253662109375
    8. ')
' → logprob: -15.3753662109375
    9. '   ' → logprob: -16.1253662109375
    10. '));' → logprob: -16.5003662109375

Token 131: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5220335721969604
    2. '
' → logprob: -1.6470335721969604
    3. '       ' → logprob: -2.14703369140625
    4. '        
' → logprob: -3.02203369140625
    5. '   ' → logprob: -3.64703369140625
    6. '    
' → logprob: -5.27203369140625
    7. ' def' → logprob: -5.39703369140625
    8. ')' → logprob: -5.39703369140625
    9. ' 
' → logprob: -6.02203369140625
    10. '<|end|>' → logprob: -6.27203369140625

Token 132: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0001863750658230856
    2. '       ' → logprob: -9.3751859664917
    3. '   ' → logprob: -9.5001859664917
    4. '```' → logprob: -11.5001859664917
    5. ' def' → logprob: -11.8751859664917
    6. '
' → logprob: -12.1251859664917
    7. 'for' → logprob: -13.0001859664917
    8. '        
' → logprob: -14.1251859664917
    9. 'find' → logprob: -14.2501859664917
    10. '	def' → logprob: -15.1251859664917

Token 133: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.003610878484323621
    2. 'find' → logprob: -5.628611087799072
    3. ' d' → logprob: -12.003610610961914
    4. ' ' → logprob: -13.378610610961914
    5. ' def' → logprob: -14.003610610961914
    6. '	find' → logprob: -14.128610610961914
    7. 'd' → logprob: -15.253610610961914
    8. '_find' → logprob: -15.378610610961914
    9. 'def' → logprob: -15.503610610961914
    10. '=find' → logprob: -15.628610610961914

Token 134: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.023630931973457336
    2. '(u' → logprob: -3.7736308574676514
    3. '(i' → logprob: -8.77363109588623
    4. '(a' → logprob: -8.89863109588623
    5. '(node' → logprob: -10.39863109588623
    6. '(n' → logprob: -11.02363109588623
    7. '(d' → logprob: -11.39863109588623
    8. '(k' → logprob: -11.39863109588623
    9. '(v' → logprob: -11.52363109588623
    10. '(' → logprob: -11.77363109588623

Token 135: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16026292741298676
    2. '):' → logprob: -1.910262942314148
    3. '):
' → logprob: -10.785263061523438
    4. ')' → logprob: -11.410263061523438
    5. ':' → logprob: -12.910263061523438
    6. ' ):
' → logprob: -13.410263061523438
    7. '):

' → logprob: -13.660263061523438
    8. '   ' → logprob: -14.035263061523438
    9. ':
' → logprob: -14.910263061523438
    10. ' ):' → logprob: -14.910263061523438

Token 136: '           ' (ID: 352)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.47072577476501465
    2. '       ' → logprob: -2.2207257747650146
    3. '           ' → logprob: -2.4707257747650146
    4. '):' → logprob: -2.8457257747650146
    5. ':' → logprob: -3.7207257747650146
    6. ' if' → logprob: -3.8457257747650146
    7. '):
' → logprob: -4.095726013183594
    8. ' while' → logprob: -4.720726013183594
    9. '   ' → logprob: -4.720726013183594
    10. ':
' → logprob: -4.970726013183594

Token 137: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.710878849029541
    2. ' if' → logprob: -0.710878849029541
    3. 'while' → logprob: -4.710878849029541
    4. ' while' → logprob: -4.835878849029541
    5. '           ' → logprob: -7.710878849029541
    6. '   ' → logprob: -9.085878372192383
    7. '
' → logprob: -10.335878372192383
    8. '       ' → logprob: -10.585878372192383
    9. 'return' → logprob: -12.710878372192383
    10. '            
' → logprob: -12.835878372192383

Token 138: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.0015478298300877213
    2. 'd' → logprob: -6.626547813415527
    3. ' x' → logprob: -9.251547813415527
    4. 'x' → logprob: -9.376547813415527
    5. 'ds' → logprob: -10.251547813415527
    6. '	d' → logprob: -13.626547813415527
    7. ' ' → logprob: -13.751547813415527
    8. 'DS' → logprob: -14.126547813415527
    9. 'parent' → logprob: -14.126547813415527
    10. '(d' → logprob: -14.626547813415527

Token 139: 'su' (ID: 20634)
  Prédit: 'su'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -1.0564331205387134e-05
    2. '[' → logprob: -11.87501049041748
    3. '[x' → logprob: -13.12501049041748
    4. 's' → logprob: -14.37501049041748
    5. '[s' → logprob: -15.25001049041748
    6. 'ds' → logprob: -15.50001049041748
    7. ' su' → logprob: -15.75001049041748
    8. '```' → logprob: -16.750011444091797
    9. '[u' → logprob: -16.875011444091797
    10. '(x' → logprob: -17.000011444091797

Token 140: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -13.500001907348633
    3. '[parent' → logprob: -17.375001907348633
    4. ' [' → logprob: -17.625001907348633
    5. '```' → logprob: -18.125001907348633
    6. '[user' → logprob: -18.625001907348633
    7. '[int' → logprob: -18.750001907348633
    8. 'x' → logprob: -18.750001907348633
    9. '[
' → logprob: -18.875001907348633
    10. '[next' → logprob: -19.125001907348633

Token 141: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.43294557929039
    2. '!=' → logprob: -1.1829456090927124
    3. ']!=' → logprob: -3.182945489883423
    4. ' !=' → logprob: -5.682945728302002
    5. '[x' → logprob: -9.557945251464844
    6. ')!=' → logprob: -10.057945251464844
    7. '[' → logprob: -11.182945251464844
    8. ')' → logprob: -11.432945251464844
    9. 'x' → logprob: -11.682945251464844
    10. ']==' → logprob: -12.432945251464844

Token 142: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.004201394040137529
    2. ' !=' → logprob: -5.504201412200928
    3. '==' → logprob: -9.37920093536377
    4. ']!=' → logprob: -10.62920093536377
    5. ')!=' → logprob: -11.75420093536377
    6. '=' → logprob: -13.12920093536377
    7. '!==' → logprob: -13.87920093536377
    8. '[' → logprob: -14.12920093536377
    9. '()!=' → logprob: -14.25420093536377
    10. '   ' → logprob: -14.75420093536377

Token 143: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0002613358374219388
    2. ' x' → logprob: -8.250261306762695
    3. '	x' → logprob: -20.625261306762695
    4. 'ds' → logprob: -21.375261306762695
    5. '(x' → logprob: -22.875261306762695
    6. ')x' → logprob: -23.125261306762695
    7. 'xdc' → logprob: -23.125261306762695
    8. ' ' → logprob: -23.875261306762695
    9. 'xdd' → logprob: -24.000261306762695
    10. '{x' → logprob: -24.125261306762695

Token 144: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.01220728363841772
    2. ':' → logprob: -4.637207508087158
    3. '):
' → logprob: -6.137207508087158
    4. '               ' → logprob: -9.13720703125
    5. '():
' → logprob: -9.63720703125
    6. '           ' → logprob: -10.13720703125
    7. ':return' → logprob: -10.63720703125
    8. ',' → logprob: -12.01220703125
    9. ')' → logprob: -12.01220703125
    10. ' and' → logprob: -12.13720703125

Token 145: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010868242010474205
    2. ' return' → logprob: -5.385868072509766
    3. ' d' → logprob: -5.635868072509766
    4. 'return' → logprob: -7.260868072509766
    5. '           ' → logprob: -7.260868072509766
    6. ':
' → logprob: -8.260868072509766
    7. ' ds' → logprob: -8.385868072509766
    8. '):
' → logprob: -8.885868072509766
    9. '
' → logprob: -9.260868072509766
    10. 'd' → logprob: -9.635868072509766

Token 146: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.16056449711322784
    2. 'ds' → logprob: -1.9105645418167114
    3. ' ds' → logprob: -8.535564422607422
    4. '               ' → logprob: -9.035564422607422
    5. 'dsn' → logprob: -11.660564422607422
    6. 'd' (adapté à ' d') → logprob: -11.785564422607422
    7. 'dsl' → logprob: -13.035564422607422
    8. '           ' → logprob: -13.535564422607422
    9. '	ds' → logprob: -14.035564422607422
    10. '_ds' → logprob: -14.160564422607422

Token 147: 'su' (ID: 20634)
  Prédit: 'su'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -1.8624639324116288e-06
    2. ' su' → logprob: -14.625001907348633
    3. 's' → logprob: -14.875001907348633
    4. '=' → logprob: -15.250001907348633
    5. '[' → logprob: -16.000001907348633
    6. 'sd' → logprob: -16.375001907348633
    7. 'sus' → logprob: -16.375001907348633
    8. '

' → logprob: -16.625001907348633
    9. '```' → logprob: -16.625001907348633
    10. '
' → logprob: -16.625001907348633

Token 148: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0015264061512425542
    2. '[' → logprob: -6.501526355743408
    3. 'x' → logprob: -11.501526832580566
    4. 'ds' → logprob: -12.001526832580566
    5. '[d' → logprob: -13.126526832580566
    6. '[
' → logprob: -13.501526832580566
    7. '```' → logprob: -14.501526832580566
    8. ' [' → logprob: -14.626526832580566
    9. '   ' → logprob: -14.751526832580566
    10. '
' → logprob: -14.876526832580566

Token 149: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013951580040156841
    2. '=' → logprob: -4.638951778411865
    3. ']=' → logprob: -5.888951778411865
    4. ')' → logprob: -6.763951778411865
    5. ' =' → logprob: -8.388951301574707
    6. ')=' → logprob: -11.138951301574707
    7. ' ]' → logprob: -12.013951301574707
    8. '[' → logprob: -12.388951301574707
    9. '   ' → logprob: -12.638951301574707
    10. '])' → logprob: -13.638951301574707

Token 150: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005234952084720135
    2. ' =' → logprob: -5.255234718322754
    3. '=find' → logprob: -14.255234718322754
    4. ']=' → logprob: -15.255234718322754
    5. ')=' → logprob: -15.505234718322754
    6. ']' → logprob: -16.63023567199707
    7. ')' → logprob: -16.75523567199707
    8. '=
' → logprob: -17.75523567199707
    9. '＝' → logprob: -17.75523567199707
    10. '.=' → logprob: -20.00523567199707

Token 151: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.011047935113310814
    2. ' find' → logprob: -4.511047840118408
    3. '	find' → logprob: -16.51104736328125
    4. '(find' → logprob: -16.88604736328125
    5. '=find' → logprob: -17.76104736328125
    6. ' ' → logprob: -18.63604736328125
    7. '   ' → logprob: -19.13604736328125
    8. '
' → logprob: -19.88604736328125
    9. ')find' → logprob: -20.38604736328125
    10. '  ' → logprob: -20.63604736328125

Token 152: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -3.054500666621607e-06
    2. '(' → logprob: -13.12500286102295
    3. '(ds' → logprob: -13.87500286102295
    4. '(
' → logprob: -18.750003814697266
    5. 'd' → logprob: -20.125003814697266
    6. ' (' → logprob: -20.500003814697266
    7. '```' → logprob: -20.500003814697266
    8. '((' → logprob: -21.250003814697266
    9. '(D' → logprob: -21.625003814697266
    10. '	d' → logprob: -21.750003814697266

Token 153: 'su' (ID: 20634)
  Prédit: 'su'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -7.226628895296017e-06
    2. '[' → logprob: -13.000007629394531
    3. '[x' → logprob: -13.125007629394531
    4. 's' → logprob: -13.500007629394531
    5. 'sus' → logprob: -14.625007629394531
    6. 'sf' → logprob: -15.375007629394531
    7. ' su' → logprob: -15.625007629394531
    8. 'sv' → logprob: -16.25000762939453
    9. 'sup' → logprob: -16.62500762939453
    10. '[u' → logprob: -16.62500762939453

Token 154: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.004105827305465937
    2. '[' → logprob: -5.504106044769287
    3. 'x' → logprob: -10.629105567932129
    4. 'ds' → logprob: -13.004105567932129
    5. '(x' → logprob: -14.379105567932129
    6. '[
' → logprob: -16.129106521606445
    7. ' x' → logprob: -16.379106521606445
    8. '{x' → logprob: -17.504106521606445
    9. ')x' → logprob: -17.754106521606445
    10. '```' → logprob: -17.754106521606445

Token 155: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0009525521309114993
    2. '[x' → logprob: -7.00095272064209
    3. '])
' → logprob: -10.37595272064209
    4. ']' → logprob: -12.87595272064209
    5. 'x' → logprob: -13.00095272064209
    6. ')' → logprob: -13.25095272064209
    7. ' ])' → logprob: -13.25095272064209
    8. ']))' → logprob: -15.00095272064209
    9. '[' → logprob: -15.25095272064209
    10. ')])' → logprob: -15.37595272064209

Token 156: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006453639827668667
    2. '
' → logprob: -5.881453514099121
    3. ' return' → logprob: -6.381453514099121
    4. 'return' → logprob: -6.881453514099121
    5. ')' → logprob: -8.006453514099121
    6. '       ' → logprob: -8.756453514099121
    7. '               ' → logprob: -9.256453514099121
    8. '	return' → logprob: -9.256453514099121
    9. '   ' → logprob: -10.131453514099121
    10. '            
' → logprob: -10.256453514099121

Token 157: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2573399245738983
    2. 'return' (adapté à ' return') → logprob: -2.0073399543762207
    3. ' return' → logprob: -2.3823399543762207
    4. '       ' → logprob: -9.257339477539062
    5. '	return' → logprob: -9.882339477539062
    6. '   ' → logprob: -10.632339477539062
    7. '               ' → logprob: -10.632339477539062
    8. ':return' → logprob: -12.257339477539062
    9. '
' → logprob: -12.382339477539062
    10. '		' → logprob: -13.132339477539062

Token 158: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.046674080193042755
    2. 'ds' → logprob: -3.9216740131378174
    3. '(d' → logprob: -4.0466742515563965
    4. 'd' → logprob: -4.7966742515563965
    5. '(' → logprob: -10.921673774719238
    6. 'x' → logprob: -11.046673774719238
    7. '(x' → logprob: -12.296673774719238
    8. 'dsl' → logprob: -12.296673774719238
    9. 'DS' → logprob: -12.796673774719238
    10. '(ds' → logprob: -13.421673774719238

Token 159: 'su' (ID: 20634)
  Prédit: 'su'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -8.196732960641384e-05
    2. '[x' → logprob: -10.250082015991211
    3. '(x' → logprob: -11.250082015991211
    4. 's' → logprob: -11.625082015991211
    5. 'x' → logprob: -12.375082015991211
    6. 'sx' → logprob: -12.375082015991211
    7. 'u' → logprob: -13.125082015991211
    8. '[' → logprob: -13.375082015991211
    9. 'xu' → logprob: -13.500082015991211
    10. 'sv' → logprob: -13.875082015991211

Token 160: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -5.438573680294212e-06
    2. '[' → logprob: -12.375005722045898
    3. '```' → logprob: -14.625005722045898
    4. 'x' → logprob: -14.875005722045898
    5. '[d' → logprob: -16.2500057220459
    6. ' [' → logprob: -16.3750057220459
    7. '[
' → logprob: -16.6250057220459
    8. '(x' → logprob: -17.5000057220459
    9. '[s' → logprob: -17.7500057220459
    10. ',x' → logprob: -18.1250057220459

Token 161: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.408677290892228e-05
    2. ']' → logprob: -10.3750638961792
    3. ')
' → logprob: -11.6250638961792
    4. ')]' → logprob: -11.6250638961792
    5. '])' → logprob: -11.7500638961792
    6. ' )' → logprob: -12.6250638961792
    7. '<|end|>' → logprob: -13.8750638961792
    8. '）' → logprob: -14.1250638961792
    9. '       ' → logprob: -14.8750638961792
    10. '}' → logprob: -15.0000638961792

Token 162: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31269314885139465
    2. '<|end|>' → logprob: -1.6876931190490723
    3. '   ' → logprob: -3.5626931190490723
    4. '        
' → logprob: -3.6876931190490723
    5. 'def' → logprob: -4.812693119049072
    6. '    
' → logprob: -4.937693119049072
    7. '```' → logprob: -5.187693119049072
    8. '
' → logprob: -5.562693119049072
    9. '  
' → logprob: -5.937693119049072
    10. '<|end|>' → logprob: -7.687693119049072

Token 163: ' def' (ID: 1056)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0063938298262655735
    2. '       ' → logprob: -5.756393909454346
    3. ' for' → logprob: -6.256393909454346
    4. 'def' (adapté à ' def') → logprob: -7.131393909454346
    5. 'marked' → logprob: -8.631393432617188
    6. '```' → logprob: -8.631393432617188
    7. '   ' → logprob: -9.131393432617188
    8. '	for' → logprob: -11.631393432617188
    9. 'mark' → logprob: -12.006393432617188
    10. 'while' → logprob: -12.256393432617188

Token 164: ' union' (ID: 22208)
  Prédit: 'union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'union' → logprob: -0.11223099380731583
    2. ' union' → logprob: -2.4872310161590576
    3. 'mark' → logprob: -4.4872307777404785
    4. ' unite' → logprob: -4.9872307777404785
    5. 'un' → logprob: -5.9872307777404785
    6. ' mark' → logprob: -6.3622307777404785
    7. 'merge' → logprob: -7.7372307777404785
    8. 'link' → logprob: -9.362231254577637
    9. 'l' → logprob: -9.862231254577637
    10. 'find' → logprob: -10.612231254577637

Token 165: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.6344202160835266
    2. '(a' → logprob: -0.8844202160835266
    3. '(u' → logprob: -3.384420156478882
    4. '(' → logprob: -3.884420156478882
    5. '(parent' → logprob: -6.259420394897461
    6. ' (' → logprob: -8.134420394897461
    7. '(
' → logprob: -10.134420394897461
    8. '(p' → logprob: -10.134420394897461
    9. '(d' → logprob: -10.759420394897461
    10. '(s' → logprob: -11.759420394897461

Token 166: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001645644661039114
    2. ' ,' → logprob: -8.750164985656738
    3. ',x' → logprob: -12.875164985656738
    4. ',y' → logprob: -13.125164985656738
    5. ',
' → logprob: -14.000164985656738
    6. '       ' → logprob: -15.125164985656738
    7. '   ' → logprob: -16.125164031982422
    8. ',u' → logprob: -17.250164031982422
    9. ',parent' → logprob: -17.500164031982422
    10. ',b' → logprob: -17.875164031982422

Token 167: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45348280668258667
    2. ' d' → logprob: -1.2034828662872314
    3. 'ds' → logprob: -3.8284828662872314
    4. '       ' → logprob: -4.453482627868652
    5. ' ds' → logprob: -4.453482627868652
    6. ',' → logprob: -5.703482627868652
    7. 'parent' → logprob: -5.703482627868652
    8. 'd' → logprob: -6.328482627868652
    9. ' parent' → logprob: -6.578482627868652
    10. 'x' → logprob: -6.703482627868652

Token 168: ' d' (ID: 272)
  Prédit: 'ds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ds' → logprob: -0.049178820103406906
    2. ' d' → logprob: -3.6741788387298584
    3. 'parent' → logprob: -4.799178600311279
    4. '   ' → logprob: -5.174178600311279
    5. ' ds' → logprob: -5.549178600311279
    6. 'd' (adapté à ' d') → logprob: -6.049178600311279
    7. '           ' → logprob: -7.049178600311279
    8. ' parent' → logprob: -8.299179077148438
    9. '       ' → logprob: -8.424179077148438
    10. '```' → logprob: -8.549179077148438

Token 169: 'su' (ID: 20634)
  Prédit: 'su'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -3.070975071750581e-05
    2. 's' → logprob: -11.000030517578125
    3. '[' → logprob: -12.125030517578125
    4. '   ' → logprob: -13.250030517578125
    5. '=' → logprob: -13.375030517578125
    6. ' su' → logprob: -13.625030517578125
    7. ' =' → logprob: -14.375030517578125
    8. 'sw' → logprob: -14.625030517578125
    9. 'sv' → logprob: -14.750030517578125
    10. 'sq' → logprob: -14.875030517578125

Token 170: '[x' (ID: 17295)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7084648013114929
    2. '[x' → logprob: -0.7084648013114929
    3. '[parent' → logprob: -4.583464622497559
    4. 'x' → logprob: -5.583464622497559
    5. '[df' → logprob: -8.083464622497559
    6. 'parent' → logprob: -8.333464622497559
    7. '_parent' → logprob: -8.958464622497559
    8. '[get' → logprob: -9.208464622497559
    9. '[int' → logprob: -9.458464622497559
    10. 'find' → logprob: -9.708464622497559

Token 171: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010201864643022418
    2. '=' → logprob: -7.6260199546813965
    3. ']=' → logprob: -7.7510199546813965
    4. ')' → logprob: -10.001020431518555
    5. ' =' → logprob: -10.751020431518555
    6. ' ]' → logprob: -11.001020431518555
    7. '[' → logprob: -11.251020431518555
    8. 'x' → logprob: -13.376020431518555
    9. '   ' → logprob: -14.001020431518555
    10. '[x' → logprob: -14.376020431518555

Token 172: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06197844073176384
    2. ' =' → logprob: -2.811978340148926
    3. ')' → logprob: -12.686978340148926
    4. ']' → logprob: -12.811978340148926
    5. '=find' → logprob: -13.186978340148926
    6. ']=' → logprob: -13.686978340148926
    7. ')=' → logprob: -14.936978340148926
    8. '[' → logprob: -15.061978340148926
    9. '[parent' → logprob: -15.186978340148926
    10. '=
' → logprob: -15.311978340148926

Token 173: ' find' (ID: 1646)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.014378211461007595
    2. 'find' → logprob: -4.264378070831299
    3. ' parent' → logprob: -9.139378547668457
    4. 'union' → logprob: -9.639378547668457
    5. ' find' → logprob: -10.889378547668457
    6. '[parent' → logprob: -11.389378547668457
    7. '   ' → logprob: -12.889378547668457
    8. '	parent' → logprob: -13.139378547668457
    9. '(parent' → logprob: -13.639378547668457
    10. 'paren' → logprob: -14.014378547668457

Token 174: '(parent' (ID: 24729)
  Prédit: '(parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parent' → logprob: -0.0007164848502725363
    2. 'parent' → logprob: -7.250716686248779
    3. '[parent' → logprob: -12.625716209411621
    4. '(' → logprob: -13.750716209411621
    5. '(paren' → logprob: -14.125716209411621
    6. ' parent' → logprob: -14.875716209411621
    7. ',parent' → logprob: -15.125716209411621
    8. '	parent' → logprob: -15.375716209411621
    9. ' (' → logprob: -15.875716209411621
    10. '((' → logprob: -16.000717163085938

Token 175: '[x' (ID: 17295)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.4761197865009308
    2. '[x' → logprob: -0.9761197566986084
    3. 'x' → logprob: -6.3511199951171875
    4. ')' → logprob: -9.101119995117188
    5. '[' → logprob: -9.601119995117188
    6. '(' → logprob: -10.351119995117188
    7. ' (' → logprob: -10.601119995117188
    8. '[
' → logprob: -11.851119995117188
    9. '[parent' → logprob: -11.851119995117188
    10. ' x' → logprob: -12.101119995117188

Token 176: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.011150158941745758
    2. '[x' → logprob: -4.511150360107422
    3. ')' → logprob: -10.511150360107422
    4. '])
' → logprob: -10.886150360107422
    5. 'x' → logprob: -11.136150360107422
    6. '[' → logprob: -11.511150360107422
    7. '(x' → logprob: -11.761150360107422
    8. ']' → logprob: -12.011150360107422
    9. ' ])' → logprob: -12.011150360107422
    10. ')])' → logprob: -12.136150360107422

Token 177: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 178: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013749712146818638
    2. ' for' → logprob: -4.388749599456787
    3. '       ' → logprob: -6.888749599456787
    4. '```' → logprob: -9.013750076293945
    5. '   ' → logprob: -9.388750076293945
    6. '	for' → logprob: -11.513750076293945
    7. 'marked' → logprob: -13.888750076293945
    8. '<|end|>' → logprob: -14.013750076293945
    9. 'while' → logprob: -14.263750076293945
    10. '        
' → logprob: -14.763750076293945

Token 179: ' Initially' (ID: 96924)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.39336904883384705
    2. ' for' → logprob: -1.6433690786361694
    3. 'marked' → logprob: -2.39336895942688
    4. ' marked' → logprob: -4.268369197845459
    5. '       ' → logprob: -4.393369197845459
    6. '   ' → logprob: -6.018369197845459
    7. 'answers' → logprob: -6.143369197845459
    8. 'marks' → logprob: -6.518369197845459
    9. 'queries' → logprob: -6.643369197845459
    10. ' marks' → logprob: -6.768369197845459

Token 180: ' only' (ID: 1606)
  Prédit: 'marked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'marked' → logprob: -0.6326934099197388
    2. ' marked' → logprob: -1.2576934099197388
    3. '       ' → logprob: -2.257693290710449
    4. '   ' → logprob: -3.507693290710449
    5. ',' → logprob: -3.507693290710449
    6. ' for' → logprob: -5.507693290710449
    7. 'visited' → logprob: -5.757693290710449
    8. ' marks' → logprob: -6.257693290710449
    9. 'for' → logprob: -6.257693290710449
    10. '#' → logprob: -6.507693290710449

Token 181: ' root' (ID: 6577)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.2128400057554245
    2. '1' → logprob: -2.3378400802612305
    3. ' node' → logprob: -2.8378400802612305
    4. 'root' → logprob: -4.5878400802612305
    5. 'marked' → logprob: -4.7128400802612305
    6. 'union' → logprob: -5.2128400802612305
    7. ' ' → logprob: -6.0878400802612305
    8. 'def' → logprob: -6.2128400802612305
    9. 'the' → logprob: -6.3378400802612305
    10. 'd' → logprob: -6.4628400802612305

Token 182: ' (' (ID: 350)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5576172471046448
    2. 'is' → logprob: -2.0576171875
    3. 'marked' → logprob: -2.1826171875
    4. '(' → logprob: -3.0576171875
    5. ' =' → logprob: -3.5576171875
    6. 'node' → logprob: -3.6826171875
    7. ' node' → logprob: -3.9326171875
    8. 'd' → logprob: -4.0576171875
    9. '[' → logprob: -4.4326171875
    10. '=' → logprob: -5.0576171875

Token 183: 'node' (ID: 7005)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07348189502954483
    2. ' ' → logprob: -2.948481798171997
    3. ')' → logprob: -4.698482036590576
    4. '0' → logprob: -5.073482036590576
    5. '[' → logprob: -6.948482036590576
    6. ' node' → logprob: -7.448482036590576
    7. 'node' → logprob: -7.823482036590576
    8. 'root' → logprob: -8.073481559753418
    9. '#' → logprob: -9.323481559753418
    10. '   ' → logprob: -9.448481559753418

Token 184: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3105579912662506
    2. ' ' → logprob: -2.0605580806732178
    3. '[' → logprob: -2.3105580806732178
    4. ')' → logprob: -3.3105580806732178
    5. '=' → logprob: -6.185557842254639
    6. ' =' → logprob: -7.810557842254639
    7. '#' → logprob: -8.060558319091797
    8. 'def' → logprob: -8.310558319091797
    9. ' [' → logprob: -8.435558319091797
    10. '   ' → logprob: -9.435558319091797

Token 185: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013711919309571385
    2. ')' → logprob: -7.126371383666992
    3. ' ' → logprob: -8.126371383666992
    4. '[' → logprob: -8.501371383666992
    5. '=' → logprob: -10.001371383666992
    6. '(' → logprob: -11.126371383666992
    7. '```' → logprob: -13.251371383666992
    8. ' =' → logprob: -13.876371383666992
    9. '#' → logprob: -14.126371383666992
    10. ' [' → logprob: -14.626371383666992

Token 186: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010092307347804308
    2. ' is' → logprob: -7.751009464263916
    3. ')is' → logprob: -8.376008987426758
    4. 'is' → logprob: -8.626008987426758
    5. ' )' → logprob: -9.126008987426758
    6. ')
' → logprob: -10.376008987426758
    7. ')

' → logprob: -12.626008987426758
    8. '#' → logprob: -12.626008987426758
    9. ').' → logprob: -12.876008987426758
    10. ' ' → logprob: -13.001008987426758

Token 187: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0720672532916069
    2. 'is' → logprob: -3.3220672607421875
    3. 'marked' → logprob: -3.6970672607421875
    4. ' marked' → logprob: -5.8220672607421875
    5. ')' → logprob: -6.0720672607421875
    6. '
' → logprob: -7.0720672607421875
    7. 'd' → logprob: -7.5720672607421875
    8. ' has' → logprob: -7.6970672607421875
    9. ',' → logprob: -8.197067260742188
    10. '```' → logprob: -9.009567260742188

Token 188: ' marked' (ID: 20779)
  Prédit: 'marked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'marked' → logprob: -0.02466706372797489
    2. ' marked' → logprob: -3.7746670246124268
    3. 'merged' → logprob: -7.774667263031006
    4. 'union' → logprob: -7.774667263031006
    5. ' ' → logprob: -8.649666786193848
    6. ' union' → logprob: -8.774666786193848
    7. '   ' → logprob: -10.024666786193848
    8. 'consider' → logprob: -10.774666786193848
    9. '  ' → logprob: -10.774666786193848
    10. 'visited' → logprob: -11.399666786193848

Token 189: ',' (ID: 11)
  Prédit: 'marked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'marked' → logprob: -0.12505242228507996
    2. ' marked' → logprob: -2.3750524520874023
    3. '       ' → logprob: -4.125052452087402
    4. ',' → logprob: -6.375052452087402
    5. '
' → logprob: -6.375052452087402
    6. '<|end|>' → logprob: -6.875052452087402
    7. '   ' → logprob: -7.375052452087402
    8. 'd' → logprob: -7.375052452087402
    9. 'mark' → logprob: -8.000052452087402
    10. '_mark' → logprob: -8.250052452087402

Token 190: ' so' (ID: 813)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4123845398426056
    2. 'marked' → logprob: -2.287384510040283
    3. '<|end|>' → logprob: -3.662384510040283
    4. '#' → logprob: -3.787384510040283
    5. '
' → logprob: -3.912384510040283
    6. 'union' → logprob: -3.912384510040283
    7. ' for' → logprob: -4.037384510040283
    8. 'rest' → logprob: -4.162384510040283
    9. '        
' → logprob: -4.287384510040283
    10. ' marked' → logprob: -4.287384510040283

Token 191: ' d' (ID: 272)
  Prédit: 'ds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ds' → logprob: -1.0980700254440308
    2. ' d' → logprob: -1.2230700254440308
    3. 'for' → logprob: -2.0980701446533203
    4. 'union' → logprob: -2.0980701446533203
    5. ' for' → logprob: -3.0980701446533203
    6. 'd' → logprob: -3.2230701446533203
    7. ' union' → logprob: -4.22307014465332
    8. 'marked' → logprob: -5.34807014465332
    9. '   ' → logprob: -5.59807014465332
    10. ' its' → logprob: -5.72307014465332

Token 192: 'su' (ID: 20634)
  Prédit: 'su'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -4.000763510703109e-05
    2. '[' → logprob: -11.375040054321289
    3. '```' → logprob: -12.000040054321289
    4. 's' → logprob: -12.625040054321289
    5. 'sus' → logprob: -13.125040054321289
    6. '[s' → logprob: -13.250040054321289
    7. '[u' → logprob: -13.500040054321289
    8. ' su' → logprob: -13.750040054321289
    9. 'sq' → logprob: -13.750040054321289
    10. '[i' → logprob: -14.000040054321289

Token 193: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5690089639974758e-05
    2. '```' → logprob: -12.375015258789062
    3. '\[' → logprob: -13.125015258789062
    4. ' [' → logprob: -13.500015258789062
    5. ''s' → logprob: -13.500015258789062
    6. ' =' → logprob: -14.250015258789062
    7. '1' → logprob: -14.250015258789062
    8. '[node' → logprob: -14.375015258789062
    9. '[root' → logprob: -14.500015258789062
    10. '[x' → logprob: -14.750015258789062

Token 194: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.726595241460018e-05
    2. '[' → logprob: -11.12503719329834
    3. ' ' → logprob: -11.37503719329834
    4. ']' → logprob: -12.00003719329834
    5. '
' → logprob: -13.37503719329834
    6. '   ' → logprob: -14.37503719329834
    7. '```' → logprob: -14.50003719329834
    8. '0' → logprob: -14.75003719329834
    9. ')' → logprob: -14.75003719329834
    10. '

' → logprob: -15.31253719329834

Token 195: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012341608526185155
    2. ']=' → logprob: -6.87623405456543
    3. '=' → logprob: -9.00123405456543
    4. ' ]' → logprob: -9.87623405456543
    5. ')' → logprob: -11.50123405456543
    6. ' =' → logprob: -11.62623405456543
    7. '[' → logprob: -12.50123405456543
    8. ']==' → logprob: -13.75123405456543
    9. ']
' → logprob: -13.87623405456543
    10. '   ' → logprob: -14.50123405456543

Token 196: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011049231514334679
    2. ' =' → logprob: -4.511049270629883
    3. ' remains' → logprob: -15.011049270629883
    4. ')=' → logprob: -15.136049270629883
    5. ']=' → logprob: -15.261049270629883
    6. '=
' → logprob: -16.261049270629883
    7. '=int' → logprob: -16.386049270629883
    8. ')' → logprob: -16.511049270629883
    9. '==' → logprob: -17.011049270629883
    10. ' ' → logprob: -17.136049270629883

Token 197: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -18.500003814697266
    4. '  ' → logprob: -19.000003814697266
    5. '```' → logprob: -19.625003814697266
    6. '0' → logprob: -20.375003814697266
    7. '۱' → logprob: -20.500003814697266
    8. '[' → logprob: -21.000003814697266
    9. '１' → logprob: -21.125003814697266
    10. ' ' → logprob: -21.625003814697266

Token 198: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '0' → logprob: -17.5
    4. '```' → logprob: -20.5
    5. '   ' → logprob: -20.625
    6. '  ' → logprob: -21.0
    7. '۱' → logprob: -21.75
    8. '[' → logprob: -22.25
    9. '１' → logprob: -22.25
    10. '`' → logprob: -22.875

Token 199: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 200: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 201: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11393866688013077
    2. '       ' → logprob: -2.738938570022583
    3. ' for' → logprob: -3.238938570022583
    4. 'marked' → logprob: -6.238938808441162
    5. '   ' → logprob: -6.488938808441162
    6. '```' → logprob: -8.363938331604004
    7. ' marked' → logprob: -9.863938331604004
    8. '	for' → logprob: -10.113938331604004
    9. 'answers' → logprob: -12.113938331604004
    10. 'results' → logprob: -12.238938331604004

Token 202: ' Un' (ID: 1367)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.056559085845947266
    2. ' for' → logprob: -2.9315590858459473
    3. '       ' → logprob: -6.556559085845947
    4. 'marked' → logprob: -9.556558609008789
    5. '   ' → logprob: -9.681558609008789
    6. '```' → logprob: -10.056558609008789
    7. 'import' → logprob: -10.681558609008789
    8. ' marked' → logprob: -11.181558609008789
    9. 'For' → logprob: -11.181558609008789
    10. 'Marked' → logprob: -12.431558609008789

Token 203: 'marked' (ID: 71560)
  Prédit: 'ion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ion' → logprob: -0.00573964836075902
    2. 'marked' → logprob: -5.255739688873291
    3. 'mark' → logprob: -8.255739212036133
    4. 'til' → logprob: -9.005739212036133
    5. 'ioned' → logprob: -10.630739212036133
    6. 'def' → logprob: -11.005739212036133
    7. 'comment' → logprob: -11.380739212036133
    8. 'ions' → logprob: -11.380739212036133
    9. 'io' → logprob: -11.505739212036133
    10. 'visited' → logprob: -11.505739212036133

Token 204: ' nodes' (ID: 15749)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7642838954925537
    2. 'nodes' → logprob: -1.3892838954925537
    3. ' nodes' → logprob: -1.8892838954925537
    4. '_nodes' → logprob: -2.1392838954925537
    5. '<|end|>' → logprob: -5.889284133911133
    6. 'def' → logprob: -6.014284133911133
    7. 'for' → logprob: -6.264284133911133
    8. '=' → logprob: -6.389284133911133
    9. ' for' → logprob: -6.889284133911133
    10. ' leaves' → logprob: -7.014284133911133

Token 205: ' have' (ID: 679)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.032601792365312576
    2. ' remain' → logprob: -4.282601833343506
    3. ' =' → logprob: -5.157601833343506
    4. 'are' → logprob: -5.782601833343506
    5. ' can' → logprob: -6.032601833343506
    6. ' initially' → logprob: -6.407601833343506
    7. ' have' → logprob: -6.782601833343506
    8. ' will' → logprob: -6.907601833343506
    9. '   ' → logprob: -7.532601833343506
    10. 'remain' → logprob: -7.782601833343506

Token 206: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.33543893694877625
    2. ' d' → logprob: -1.3354389667510986
    3. 'ds' → logprob: -4.9604387283325195
    4. ' themselves' → logprob: -5.0854387283325195
    5. 'their' → logprob: -5.5854387283325195
    6. ' their' → logprob: -5.7104387283325195
    7. 'parent' → logprob: -6.8354387283325195
    8. ' ' → logprob: -8.58543872833252
    9. ' parent' → logprob: -9.08543872833252
    10. 'self' → logprob: -10.21043872833252

Token 207: 'su' (ID: 20634)
  Prédit: 'su'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.00048024329589679837
    2. '[' → logprob: -9.500480651855469
    3. ' su' → logprob: -9.625480651855469
    4. 'sf' → logprob: -9.875480651855469
    5. 'fu' → logprob: -10.250480651855469
    6. '=' → logprob: -10.500480651855469
    7. 'fs' → logprob: -10.625480651855469
    8. 'ef' → logprob: -10.625480651855469
    9. 's' → logprob: -10.875480651855469
    10. 'efined' → logprob: -11.250480651855469

Token 208: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0028688274323940277
    2. '[i' → logprob: -6.00286865234375
    3. '[node' → logprob: -8.00286865234375
    4. '[' → logprob: -11.62786865234375
    5. '```' → logprob: -11.62786865234375
    6. '[value' → logprob: -11.75286865234375
    7. ' value' → logprob: -11.87786865234375
    8. '[...]' → logprob: -12.12786865234375
    9. ' equal' → logprob: -12.87786865234375
    10. ' =' → logprob: -13.25286865234375

Token 209: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23523235321044922
    2. '=' → logprob: -1.8602323532104492
    3. ']' → logprob: -2.985232353210449
    4. ' !=' → logprob: -6.360232353210449
    5. '[x' → logprob: -7.235232353210449
    6. ' ]' → logprob: -7.985232353210449
    7. '=x' → logprob: -8.36023235321045
    8. ']=' → logprob: -8.61023235321045
    9. '!=' → logprob: -9.36023235321045
    10. 'x' → logprob: -9.61023235321045

Token 210: ' initially' (ID: 25998)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.474246621131897
    2. '=' → logprob: -0.974246621131897
    3. '=x' → logprob: -8.849246978759766
    4. 'x' → logprob: -11.724246978759766
    5. ' !=' → logprob: -12.099246978759766
    6. ' x' → logprob: -12.849246978759766
    7. ' ==' → logprob: -13.099246978759766
    8. ' ' → logprob: -13.224246978759766
    9. ' equal' → logprob: -13.474246978759766
    10. '==' → logprob: -13.474246978759766

Token 211: ' pointing' (ID: 45521)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008425445295870304
    2. ' =' → logprob: -5.133425235748291
    3. '=x' → logprob: -7.133425235748291
    4. ' equal' → logprob: -7.383425235748291
    5. ' set' → logprob: -7.633425235748291
    6. ' as' → logprob: -7.758425235748291
    7. 'x' → logprob: -9.88342571258545
    8. 'equal' → logprob: -10.13342571258545
    9. 'set' → logprob: -10.63342571258545
    10. 'as' → logprob: -10.63342571258545

Token 212: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.523632287979126
    2. 'to' → logprob: -0.898632287979126
    3. 'x' → logprob: -7.773632049560547
    4. ' x' → logprob: -10.523632049560547
    5. ' at' → logprob: -10.773632049560547
    6. 'at' → logprob: -11.523632049560547
    7. ' ' → logprob: -11.648632049560547
    8. '<|end|>' → logprob: -11.898632049560547
    9. '=' → logprob: -12.773632049560547
    10. '_to' → logprob: -13.398632049560547

Token 213: ' themselves' (ID: 9247)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0011308094253763556
    2. 'the' → logprob: -7.1261305809021
    3. ' x' → logprob: -8.876131057739258
    4. 'parent' → logprob: -9.126131057739258
    5. 'self' → logprob: -10.126131057739258
    6. ' themselves' → logprob: -10.751131057739258
    7. ' itself' → logprob: -12.251131057739258
    8. 'their' → logprob: -12.251131057739258
    9. 'it' → logprob: -13.001131057739258
    10. 'd' → logprob: -13.126131057739258

Token 214: '.

' (ID: 364)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 215: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06952173262834549
    2. '```' → logprob: -3.44452166557312
    3. 'for' → logprob: -3.69452166557312
    4. ' for' → logprob: -5.069521903991699
    5. '<|end|>' → logprob: -6.319521903991699
    6. '   ' → logprob: -6.569521903991699
    7. '	for' → logprob: -7.944521903991699
    8. '        
' → logprob: -8.4445219039917
    9. '	' → logprob: -9.8195219039917
    10. '<|end|>' → logprob: -9.8195219039917

Token 216: ' total' (ID: 3609)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5099893808364868
    2. '       ' → logprob: -1.5099893808364868
    3. ' for' → logprob: -1.8849893808364868
    4. 'marked' → logprob: -3.8849892616271973
    5. '   ' → logprob: -5.884989261627197
    6. ' marked' → logprob: -6.009989261627197
    7. '```' → logprob: -8.509989738464355
    8. '        
' → logprob: -8.509989738464355
    9. 'queries' → logprob: -9.259989738464355
    10. 'answers' → logprob: -9.759989738464355

Token 217: ' =' (ID: 314)
  Prédit: '_mark'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mark' → logprob: -0.4435075521469116
    2. '_queries' → logprob: -1.9435075521469116
    3. ' =' → logprob: -2.693507671356201
    4. '_' → logprob: -2.818507671356201
    5. '_count' → logprob: -4.193507671356201
    6. '_marks' → logprob: -4.318507671356201
    7. 'marked' → logprob: -4.568507671356201
    8. '=' → logprob: -5.068507671356201
    9. '_nodes' → logprob: -5.443507671356201
    10. '_answer' → logprob: -5.568507671356201

Token 218: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08123677968978882
    2. ' ' → logprob: -2.5812368392944336
    3. ' Q' → logprob: -6.831236839294434
    4. 'Q' → logprob: -7.206236839294434
    5. ' N' → logprob: -8.206236839294434
    6. 'N' → logprob: -8.581236839294434
    7. '[]' → logprob: -10.456236839294434
    8. ' []' → logprob: -11.956236839294434
    9. 'int' → logprob: -12.081236839294434
    10. '   ' → logprob: -12.706236839294434

Token 219: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009159504435956478
    2. 'Q' → logprob: -5.259159564971924
    3. '[]' → logprob: -6.009159564971924
    4. 'N' → logprob: -7.009159564971924
    5. ' ' → logprob: -8.009159088134766
    6. 'int' → logprob: -8.884159088134766
    7. ' Q' → logprob: -11.259159088134766
    8. '{}' → logprob: -11.509159088134766
    9. 'sum' → logprob: -11.509159088134766
    10. ' []' → logprob: -12.009159088134766

Token 220: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8158516883850098
    2. '<|end|>' → logprob: -0.8158516883850098
    3. '
' → logprob: -2.5658516883850098
    4. '<|end|>' → logprob: -4.31585168838501
    5. ' for' → logprob: -4.69085168838501
    6. 'for' → logprob: -5.44085168838501
    7. '   ' → logprob: -6.19085168838501
    8. '        
' → logprob: -6.31585168838501
    9. ',' → logprob: -6.69085168838501
    10. '	' → logprob: -6.81585168838501

Token 221: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6845386028289795
    2. '<|end|>' → logprob: -1.8095386028289795
    3. ' for' → logprob: -1.9345386028289795
    4. 'for' → logprob: -2.4345386028289795
    5. '
' → logprob: -3.0595386028289795
    6. '   ' → logprob: -4.559538841247559
    7. '	for' → logprob: -4.684538841247559
    8. '        
' → logprob: -5.434538841247559
    9. '```' → logprob: -5.684538841247559
    10. '<|end|>' → logprob: -5.684538841247559

Token 222: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06547372788190842
    2. ' for' → logprob: -2.815473794937134
    3. '       ' → logprob: -5.690473556518555
    4. 'queries' → logprob: -9.815473556518555
    5. '   ' → logprob: -10.565473556518555
    6. '	for' → logprob: -11.065473556518555
    7. ' queries' → logprob: -11.565473556518555
    8. 'query' → logprob: -12.565473556518555
    9. 'answers' → logprob: -12.940473556518555
    10. 'results' → logprob: -13.565473556518555

Token 223: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.42902928590774536
    2. ' _' → logprob: -1.0540292263031006
    3. '_i' → logprob: -9.17902946472168
    4. ' i' → logprob: -9.42902946472168
    5. 'i' → logprob: -10.05402946472168
    6. ' ' → logprob: -10.42902946472168
    7. '_q' → logprob: -10.42902946472168
    8. 'q' → logprob: -11.05402946472168
    9. '_Q' → logprob: -12.17902946472168
    10. ' q' → logprob: -12.30402946472168

Token 224: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2814200222492218
    2. ' in' → logprob: -1.4064199924468994
    3. 'range' → logprob: -8.65641975402832
    4. ' ' → logprob: -9.90641975402832
    5. ')' → logprob: -12.03141975402832
    6. 'i' → logprob: -12.28141975402832
    7. '```' → logprob: -12.40641975402832
    8. '  ' → logprob: -12.78141975402832
    9. ',' → logprob: -12.90641975402832
    10. 'input' → logprob: -12.90641975402832

Token 225: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -5.3120038501219824e-05
    2. 'input' → logprob: -10.375053405761719
    3. ' range' → logprob: -11.000053405761719
    4. '(range' → logprob: -12.625053405761719
    5. '[' → logprob: -15.625053405761719
    6. 'in' → logprob: -15.875053405761719
    7. 'ange' → logprob: -16.00005340576172
    8. '	range' → logprob: -16.12505340576172
    9. 'map' → logprob: -16.37505340576172
    10. 'r' → logprob: -16.50005340576172

Token 226: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.00010747690976131707
    2. '(' → logprob: -9.375107765197754
    3. ' (' → logprob: -10.750107765197754
    4. '(int' → logprob: -15.250107765197754
    5. '(range' → logprob: -15.500107765197754
    6. ',' → logprob: -15.875107765197754
    7. '(q' → logprob: -15.875107765197754
    8. ' Q' → logprob: -16.000106811523438
    9. 'Q' → logprob: -16.125106811523438
    10. '   ' → logprob: -16.375106811523438

Token 227: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07072000205516815
    2. '):
' → logprob: -2.6957199573516846
    3. ',' → logprob: -8.070719718933105
    4. ' ):' → logprob: -8.570719718933105
    5. ':' → logprob: -8.695719718933105
    6. '       ' → logprob: -9.945719718933105
    7. '):
' → logprob: -10.695719718933105
    8. '():' → logprob: -11.070719718933105
    9. '   ' → logprob: -11.320719718933105
    10. ' ):
' → logprob: -12.320719718933105

Token 228: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.228977769613266
    2. '       ' → logprob: -2.478977680206299
    3. 'token' → logprob: -3.353977680206299
    4. 'tokens' → logprob: -3.603977680206299
    5. '```' → logprob: -4.728977680206299
    6. 'query' → logprob: -4.728977680206299
    7. 't' → logprob: -4.978977680206299
    8. 'code' → logprob: -5.228977680206299
    9. ' code' → logprob: -5.353977680206299
    10. '   ' → logprob: -5.603977680206299

Token 229: ' op' (ID: 991)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.8951613903045654
    2. 'cmd' → logprob: -1.8951613903045654
    3. 'query' → logprob: -2.0201613903045654
    4. 'c' → logprob: -2.1451613903045654
    5. 't' → logprob: -2.8951613903045654
    6. '           ' → logprob: -3.6451613903045654
    7. ' query' → logprob: -4.0201616287231445
    8. 'a' → logprob: -4.0201616287231445
    9. 'x' → logprob: -4.2701616287231445
    10. 'command' → logprob: -4.6451616287231445

Token 230: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06146201118826866
    2. '=' → logprob: -3.561461925506592
    3. ' =' → logprob: -3.686461925506592
    4. ' ,' → logprob: -5.186461925506592
    5. ' ' → logprob: -7.936461925506592
    6. '   ' → logprob: -9.68646240234375
    7. '  ' → logprob: -10.18646240234375
    8. 'type' → logprob: -10.93646240234375
    9. '    ' → logprob: -11.31146240234375
    10. ',input' → logprob: -11.56146240234375

Token 231: ' v' (ID: 323)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5097503066062927
    2. '*x' → logprob: -1.5097503662109375
    3. '*v' → logprob: -2.2597503662109375
    4. 'x' → logprob: -3.3847503662109375
    5. '*a' → logprob: -4.3847503662109375
    6. ' *' → logprob: -5.1347503662109375
    7. '*u' → logprob: -5.5097503662109375
    8. 'a' → logprob: -5.6347503662109375
    9. 'v' → logprob: -5.7597503662109375
    10. ' x' → logprob: -6.6347503662109375

Token 232: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519303858280182
    2. ' =' → logprob: -1.5019303560256958
    3. ' ' → logprob: -14.626930236816406
    4. ')' → logprob: -15.376930236816406
    5. '=input' → logprob: -15.751930236816406
    6. ')=' → logprob: -15.751930236816406
    7. '=line' → logprob: -16.501930236816406
    8. '    ' → logprob: -16.626930236816406
    9. ',' → logprob: -16.626930236816406
    10. '＝' → logprob: -17.251930236816406

Token 233: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.39464735984802246
    2. 'input' → logprob: -1.1446473598480225
    3. ' map' → logprob: -5.144647598266602
    4. 'map' → logprob: -6.269647598266602
    5. '=input' → logprob: -11.519647598266602
    6. ' =' → logprob: -12.519647598266602
    7. ' op' → logprob: -12.894647598266602
    8. 'op' → logprob: -13.019647598266602
    9. '=' → logprob: -13.894647598266602
    10. ' ' → logprob: -14.144647598266602

Token 234: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.596781946020201e-05
    2. '()' → logprob: -10.000045776367188
    3. ' ().' → logprob: -14.875045776367188
    4. '(' → logprob: -16.250045776367188
    5. '()
' → logprob: -16.500045776367188
    6. '=' → logprob: -19.000045776367188
    7. '.split' → logprob: -19.750045776367188
    8. '.' → logprob: -19.875045776367188
    9. '()

' → logprob: -20.250045776367188
    10. '   ' → logprob: -20.375045776367188

Token 235: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.06221415102481842
    2. 'strip' → logprob: -2.8122141361236572
    3. 'rstrip' → logprob: -8.312213897705078
    4. ' split' → logprob: -14.437213897705078
    5. '(split' → logprob: -14.937213897705078
    6. '```' → logprob: -16.812213897705078
    7. 'spl' → logprob: -16.937213897705078
    8. 'replace' → logprob: -17.562213897705078
    9. 'rs' → logprob: -18.687213897705078
    10. ' strip' → logprob: -18.687213897705078

Token 236: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1352548897266388
    2. ')' → logprob: -2.8852548599243164
    3. ',' → logprob: -3.3852548599243164
    4. '            
' → logprob: -4.260254859924316
    5. '<|end|>' → logprob: -4.760254859924316
    6. '
' → logprob: -6.260254859924316
    7. '            ' → logprob: -6.260254859924316
    8. '<|end|>' → logprob: -6.510254859924316
    9. ' ' → logprob: -6.635254859924316
    10. ' 
' → logprob: -6.885254859924316

Token 237: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9599147439002991
    2. '<|end|>' → logprob: -1.0849146842956543
    3. '           ' → logprob: -1.7099146842956543
    4. ' 
' → logprob: -3.7099146842956543
    5. '            
' → logprob: -4.084914684295654
    6. '<|end|>' → logprob: -4.459914684295654
    7. '\n' → logprob: -4.834914684295654
    8. '[' → logprob: -4.834914684295654
    9. '  
' → logprob: -4.959914684295654
    10. '    
' → logprob: -5.084914684295654

Token 238: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.3926433026790619
    2. ' v' → logprob: -1.2676433324813843
    3. ' 
' → logprob: -4.017643451690674
    4. ' ' → logprob: -4.642643451690674
    5. '           ' → logprob: -4.642643451690674
    6. '            
' → logprob: -6.017643451690674
    7. '	v' → logprob: -7.142643451690674
    8. ' if' → logprob: -7.392643451690674
    9. ' ' → logprob: -8.017642974853516
    10. '            ' → logprob: -8.142642974853516

Token 239: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.024389393627643585
    2. ' =' → logprob: -3.7743895053863525
    3. '=int' → logprob: -6.899389266967773
    4. '=v' → logprob: -9.649389266967773
    5. 'v' → logprob: -9.899389266967773
    6. ')' → logprob: -11.774389266967773
    7. 'int' → logprob: -12.274389266967773
    8. '=
' → logprob: -12.524389266967773
    9. '           ' → logprob: -14.024389266967773
    10. '```' → logprob: -14.149389266967773

Token 240: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -5.836499985889532e-05
    2. ' int' → logprob: -9.7500581741333
    3. '<int' → logprob: -21.375059127807617
    4. '=int' → logprob: -21.625059127807617
    5. '[int' → logprob: -22.000059127807617
    6. '(int' → logprob: -23.125059127807617
    7. ':int' → logprob: -24.250059127807617
    8. '	int' → logprob: -24.875059127807617
    9. '
' → logprob: -25.000059127807617
    10. 'intval' → logprob: -25.125059127807617

Token 241: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -3.8889261304575484e-06
    2. '(' → logprob: -12.500003814697266
    3. 'v' → logprob: -16.625003814697266
    4. ' (' → logprob: -18.500003814697266
    5. '(
' → logprob: -20.125003814697266
    6. '```' → logprob: -20.125003814697266
    7. ')v' → logprob: -20.625003814697266
    8. '((' → logprob: -21.000003814697266
    9. ')' → logprob: -21.125003814697266
    10. '	v' → logprob: -21.125003814697266

Token 242: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001705175032839179
    2. ')
' → logprob: -6.376705169677734
    3. ')

' → logprob: -13.501705169677734
    4. ' )' → logprob: -13.751705169677734
    5. ')
' → logprob: -15.501705169677734
    6. '))' → logprob: -17.001705169677734
    7. '           ' → logprob: -17.001705169677734
    8. ')`' → logprob: -17.001705169677734
    9. ')**' → logprob: -17.376705169677734
    10. '),' → logprob: -17.626705169677734

Token 243: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11225827038288116
    2. '<|end|>' → logprob: -3.112258195877075
    3. '\n' → logprob: -3.862258195877075
    4. '
' → logprob: -4.237258434295654
    5. ' 
' → logprob: -4.737258434295654
    6. '            
' → logprob: -4.987258434295654
    7. '```' → logprob: -5.612258434295654
    8. '  
' → logprob: -6.362258434295654
    9. ' if' → logprob: -6.487258434295654
    10. '<|end|>' → logprob: -6.737258434295654

Token 244: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07904599606990814
    2. ' if' → logprob: -2.8290460109710693
    3. '           ' → logprob: -4.07904577255249
    4. '            
' → logprob: -12.704046249389648
    5. '```' → logprob: -13.079046249389648
    6. '       ' → logprob: -13.454046249389648
    7. ' 
' → logprob: -14.204046249389648
    8. '	if' → logprob: -14.454046249389648
    9. '   ' → logprob: -14.579046249389648
    10. ' ' → logprob: -14.954046249389648

Token 245: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.25193241238594055
    2. 'op' → logprob: -1.5019323825836182
    3. '	op' → logprob: -13.376932144165039
    4. '           ' → logprob: -14.001932144165039
    5. '(op' → logprob: -14.626932144165039
    6. ' ' → logprob: -15.751932144165039
    7. ' ' → logprob: -16.25193214416504
    8. 'Op' → logprob: -17.00193214416504
    9. '_op' → logprob: -17.37693214416504
    10. 'opf' → logprob: -17.50193214416504

Token 246: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.18007801473140717
    2. '==' → logprob: -1.8050780296325684
    3. '[' → logprob: -8.30507755279541
    4. '=='' → logprob: -10.55507755279541
    5. '=' → logprob: -11.05507755279541
    6. '=="' → logprob: -11.43007755279541
    7. ')' → logprob: -11.80507755279541
    8. '===' → logprob: -12.30507755279541
    9. ' =='' → logprob: -12.68007755279541
    10. ']==' → logprob: -12.93007755279541

Token 247: ' '' (ID: 461)
  Prédit: '"M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"M' → logprob: -1.3104122877120972
    2. '"' → logprob: -1.8104122877120972
    3. ''M' → logprob: -1.9354122877120972
    4. ''' → logprob: -2.0604124069213867
    5. ''O' → logprob: -2.9354124069213867
    6. ''A' → logprob: -3.0604124069213867
    7. '"C' → logprob: -3.3104124069213867
    8. '"O' → logprob: -3.5604124069213867
    9. '"A' → logprob: -3.8104124069213867
    10. ''m' → logprob: -3.9354124069213867

Token 248: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.3403390347957611
    2. 'C' → logprob: -1.8403390645980835
    3. 'A' → logprob: -3.090338945388794
    4. 'U' → logprob: -3.715338945388794
    5. 'Q' → logprob: -3.840338945388794
    6. ''' → logprob: -4.590339183807373
    7. ''M' → logprob: -5.215339183807373
    8. ''C' → logprob: -5.590339183807373
    9. '"M' → logprob: -5.590339183807373
    10. 'a' → logprob: -5.965339183807373

Token 249: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.04683561995625496
    2. ''):' → logprob: -3.5468356609344482
    3. ''' → logprob: -4.796835422515869
    4. ''):
' → logprob: -5.421835422515869
    5. '':
' → logprob: -5.796835422515869
    6. '')' → logprob: -8.296835899353027
    7. 'ark' → logprob: -8.296835899353027
    8. ' '' → logprob: -8.421835899353027
    9. ' ':' → logprob: -9.046835899353027
    10. 'arked' → logprob: -9.296835899353027

Token 250: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.40496084094047546
    2. ' union' → logprob: -1.6549608707427979
    3. 'union' → logprob: -2.279960870742798
    4. ':
' → logprob: -4.279960632324219
    5. '
' → logprob: -4.404960632324219
    6. '           ' → logprob: -5.279960632324219
    7. '```' → logprob: -6.404960632324219
    8. '):
' → logprob: -6.529960632324219
    9. '.union' → logprob: -6.654960632324219
    10. ':' → logprob: -6.779960632324219

Token 251: ' #' (ID: 1069)
  Prédit: 'union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'union' → logprob: -0.013328462839126587
    2. ' union' → logprob: -4.388328552246094
    3. '               ' → logprob: -8.013328552246094
    4. '           ' → logprob: -8.763328552246094
    5. '   ' → logprob: -9.138328552246094
    6. '                   ' → logprob: -9.513328552246094
    7. '
' → logprob: -10.013328552246094
    8. '	union' → logprob: -10.388328552246094
    9. 'ds' → logprob: -10.763328552246094
    10. '.union' → logprob: -11.013328552246094

Token 252: ' Mark' (ID: 5070)
  Prédit: 'union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'union' → logprob: -0.00977497547864914
    2. ' union' → logprob: -5.009775161743164
    3. 'ds' → logprob: -5.884775161743164
    4. ' d' → logprob: -8.884775161743164
    5. 'd' → logprob: -9.634775161743164
    6. '
' → logprob: -11.134775161743164
    7. ' ds' → logprob: -11.384775161743164
    8. '   ' → logprob: -11.384775161743164
    9. 'if' → logprob: -11.509775161743164
    10. '#' → logprob: -12.384775161743164

Token 253: ' v' (ID: 323)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.4072321057319641
    2. '[v' → logprob: -1.9072320461273193
    3. 'v' → logprob: -2.6572320461273193
    4. 'union' → logprob: -2.9072320461273193
    5. '               ' → logprob: -3.0322320461273193
    6. ' v' → logprob: -5.532232284545898
    7. ' union' → logprob: -5.907232284545898
    8. 'ds' → logprob: -6.407232284545898
    9. 'd' → logprob: -6.657232284545898
    10. '           ' → logprob: -6.782232284545898

Token 254: ':' (ID: 25)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05196145176887512
    2. '               ' → logprob: -3.6769614219665527
    3. ')
' → logprob: -3.9269614219665527
    4. ')' → logprob: -6.676961421966553
    5. '
' → logprob: -7.051961421966553
    6. '                
' → logprob: -7.176961421966553
    7. ':
' → logprob: -7.676961421966553
    8. '                   ' → logprob: -7.801961421966553
    9. '           ' → logprob: -8.051961898803711
    10. ' =' → logprob: -8.801961898803711

Token 255: ' union' (ID: 22208)
  Prédit: ' union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' union' → logprob: -0.5690134763717651
    2. 'union' → logprob: -0.9440134763717651
    3. '               ' → logprob: -3.3190135955810547
    4. '           ' → logprob: -5.694013595581055
    5. ' d' → logprob: -6.319013595581055
    6. '   ' → logprob: -7.069013595581055
    7. 'd' → logprob: -7.444013595581055
    8. '
' → logprob: -7.819013595581055
    9. '```' → logprob: -7.944013595581055
    10. '                   ' → logprob: -8.319013595581055

Token 256: ' v' (ID: 323)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -5.438573680294212e-06
    2. '(' → logprob: -12.250005722045898
    3. '(
' → logprob: -15.375005722045898
    4. 'v' → logprob: -15.500005722045898
    5. ' (' → logprob: -16.0000057220459
    6. '((' → logprob: -18.3750057220459
    7. '(n' → logprob: -18.8750057220459
    8. '[v' → logprob: -19.6250057220459
    9. '(x' → logprob: -19.7500057220459
    10. '(`' → logprob: -20.3750057220459

Token 257: ' with' (ID: 483)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -6.659005157416686e-05
    2. '(' → logprob: -9.875066757202148
    3. ')' → logprob: -11.875066757202148
    4. ' (' → logprob: -13.125066757202148
    5. '(parent' → logprob: -13.250066757202148
    6. '(
' → logprob: -13.500066757202148
    7. '()' → logprob: -14.125066757202148
    8. '(x' → logprob: -14.125066757202148
    9. ',' → logprob: -15.375066757202148
    10. '((' → logprob: -15.625066757202148

Token 258: ' its' (ID: 1617)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5767064690589905
    2. 'parent' → logprob: -0.8267064690589905
    3. ' v' → logprob: -8.451706886291504
    4. '(parent' → logprob: -8.576706886291504
    5. ' parent' → logprob: -8.826706886291504
    6. ')v' → logprob: -9.451706886291504
    7. ')' → logprob: -9.826706886291504
    8. '(v' → logprob: -9.826706886291504
    9. '
' → logprob: -11.326706886291504
    10. '[parent' → logprob: -12.326706886291504

Token 259: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -9.925185440806672e-05
    2. ' parent' → logprob: -10.000099182128906
    3. '(parent' → logprob: -10.375099182128906
    4. ')' → logprob: -11.750099182128906
    5. 'v' → logprob: -11.875099182128906
    6. 'paren' → logprob: -12.750099182128906
    7. '[parent' → logprob: -13.250099182128906
    8. '	parent' → logprob: -13.625099182128906
    9. '.parent' → logprob: -14.500099182128906
    10. '_parent' → logprob: -15.250099182128906

Token 260: ' in' (ID: 306)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.13681840896606445
    2. 'union' → logprob: -3.8868184089660645
    3. '[v' → logprob: -4.1368184089660645
    4. '               ' → logprob: -4.1368184089660645
    5. '(' → logprob: -4.3868184089660645
    6. '()
' → logprob: -4.3868184089660645
    7. ')
' → logprob: -4.6368184089660645
    8. ')' → logprob: -4.6368184089660645
    9. '           ' → logprob: -4.7618184089660645
    10. '(
' → logprob: -5.5118184089660645

Token 261: ' DS' (ID: 35363)
  Prédit: 'ds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ds' → logprob: -0.18007433414459229
    2. 'parent' → logprob: -1.9300743341445923
    3. ' d' → logprob: -4.805074214935303
    4. 'd' → logprob: -5.430074214935303
    5. ')' → logprob: -6.430074214935303
    6. 'the' → logprob: -6.430074214935303
    7. 'union' → logprob: -6.430074214935303
    8. ' parent' → logprob: -6.805074214935303
    9. 'DS' → logprob: -7.805074214935303
    10. ' ds' → logprob: -8.430074691772461

Token 262: 'U' (ID: 52)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.9074687957763672
    2. 'union' → logprob: -1.4074687957763672
    3. ')
' → logprob: -1.6574687957763672
    4. ')' → logprob: -2.657468795776367
    5. 'v' → logprob: -3.032468795776367
    6. 'su' → logprob: -4.282468795776367
    7. 'U' → logprob: -4.407468795776367
    8. '       ' → logprob: -5.157468795776367
    9. '   ' → logprob: -6.282468795776367
    10. '[v' → logprob: -6.407468795776367

Token 263: '
' (ID: 198)
  Prédit: '()
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.6771146655082703
    2. '()' → logprob: -1.302114725112915
    3. '(v' → logprob: -2.927114725112915
    4. '           ' → logprob: -3.302114725112915
    5. ')' → logprob: -3.552114725112915
    6. 'union' → logprob: -3.802114725112915
    7. '               ' → logprob: -4.052114486694336
    8. ')
' → logprob: -4.052114486694336
    9. '(' → logprob: -4.302114486694336
    10. '```' → logprob: -5.302114486694336

Token 264: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5734769105911255
    2. '           ' → logprob: -1.0734769105911255
    3. '
' → logprob: -3.323476791381836
    4. 'union' → logprob: -3.698476791381836
    5. ')' → logprob: -4.823476791381836
    6. ')
' → logprob: -5.198476791381836
    7. ' union' → logprob: -5.323476791381836
    8. '                   ' → logprob: -5.823476791381836
    9. '```' → logprob: -5.823476791381836
    10. '()
' → logprob: -6.323476791381836

Token 265: ' union' (ID: 22208)
  Prédit: 'union'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'union' (adapté à ' union') → logprob: -0.11013520509004593
    2. ' union' → logprob: -2.360135316848755
    3. '               ' → logprob: -4.735135078430176
    4. '           ' → logprob: -7.235135078430176
    5. '   ' → logprob: -8.735135078430176
    6. '.union' → logprob: -9.610135078430176
    7. '
' → logprob: -9.985135078430176
    8. '	union' → logprob: -10.610135078430176
    9. '                   ' → logprob: -10.860135078430176
    10. '                
' → logprob: -11.735135078430176

Token 266: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -1.318681188422488e-05
    2. '(' → logprob: -11.25001335144043
    3. 'v' → logprob: -16.87501335144043
    4. '(
' → logprob: -17.50001335144043
    5. ')' → logprob: -18.37501335144043
    6. ')v' → logprob: -18.37501335144043
    7. '[v' → logprob: -18.62501335144043
    8. ' (' → logprob: -18.62501335144043
    9. ')(' → logprob: -18.75001335144043
    10. ',v' → logprob: -19.62501335144043

Token 267: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.227250610711053e-05
    2. ')
' → logprob: -10.125041961669922
    3. ')v' → logprob: -13.625041961669922
    4. ' )' → logprob: -14.625041961669922
    5. '))' → logprob: -16.000041961669922
    6. '())' → logprob: -16.750041961669922
    7. ')
' → logprob: -16.750041961669922
    8. ')

' → logprob: -17.375041961669922
    9. ')`' → logprob: -17.375041961669922
    10. '           ' → logprob: -17.500041961669922

Token 268: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04297817870974541
    2. 'elif' → logprob: -3.917978286743164
    3. '
' → logprob: -4.417978286743164
    4. 'else' → logprob: -5.167978286743164
    5. '<|end|>' → logprob: -6.167978286743164
    6. '```' → logprob: -6.292978286743164
    7. '\n' → logprob: -9.042978286743164
    8. ' elif' → logprob: -9.292978286743164
    9. '       ' → logprob: -9.542978286743164
    10. ' else' → logprob: -9.542978286743164

Token 269: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0257751941680908
    2. 'elif' → logprob: -1.0257751941680908
    3. 'else' (adapté à ' else') → logprob: -1.2757751941680908
    4. ' elif' → logprob: -6.150774955749512
    5. ' else' → logprob: -6.775774955749512
    6. '       ' → logprob: -7.775774955749512
    7. '```' → logprob: -9.900774955749512
    8. '               ' → logprob: -13.650774955749512
    9. '	elif' → logprob: -13.775774955749512
    10. '
' → logprob: -14.275774955749512

Token 270: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20465798676013947
    2. ':
' → logprob: -2.079658031463623
    3. ' if' → logprob: -3.454658031463623
    4. '           ' → logprob: -3.704658031463623
    5. 'if' → logprob: -6.079658031463623
    6. ' :' → logprob: -7.204658031463623
    7. ',' → logprob: -8.704657554626465
    8. ' ' → logprob: -8.829657554626465
    9. ' ==' → logprob: -8.829657554626465
    10. ' :
' → logprob: -8.954657554626465

Token 271: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2532089352607727
    2. '           ' → logprob: -1.628208875656128
    3. ' #' → logprob: -4.628209114074707
    4. ' if' → logprob: -4.878209114074707
    5. 'if' → logprob: -5.378209114074707
    6. '#' → logprob: -5.503209114074707
    7. '<|end|>' → logprob: -8.003209114074707
    8. ':' → logprob: -8.628209114074707
    9. '```' → logprob: -9.378209114074707
    10. 'v' → logprob: -9.628209114074707

Token 272: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.7332868576049805
    2. 'root' → logprob: -1.7332868576049805
    3. 'ans' → logprob: -2.2332868576049805
    4. 'res' → logprob: -2.2332868576049805
    5. ' res' → logprob: -2.8582868576049805
    6. ' ans' → logprob: -3.2332868576049805
    7. '           ' → logprob: -3.3582868576049805
    8. 'r' → logprob: -3.3582868576049805
    9. 'print' → logprob: -3.4832868576049805
    10. ' root' → logprob: -3.8582868576049805

Token 273: ' Q' (ID: 1486)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.3088148832321167
    2. 'res' → logprob: -1.9338148832321167
    3. 'ans' → logprob: -2.0588150024414062
    4. 'w' → logprob: -2.0588150024414062
    5. 'r' → logprob: -2.9338150024414062
    6. 'print' → logprob: -3.0588150024414062
    7. ' res' → logprob: -3.0588150024414062
    8. ' u' → logprob: -3.4338150024414062
    9. ' ans' → logprob: -3.6838150024414062
    10. 'root' → logprob: -3.8088150024414062

Token 274: ' v' (ID: 323)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.001797277363948524
    2. ' u' → logprob: -6.751797199249268
    3. 'ue' → logprob: -8.001797676086426
    4. 'uer' → logprob: -9.126797676086426
    5. '       ' → logprob: -9.751797676086426
    6. 'v' → logprob: -10.751797676086426
    7. '           ' → logprob: -11.001797676086426
    8. ' =' → logprob: -11.251797676086426
    9. '=' → logprob: -11.251797676086426
    10. 'uel' → logprob: -11.376797676086426

Token 275: ':' (ID: 25)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.01105300523340702
    2. ':' → logprob: -5.386053085327148
    3. ':
' → logprob: -5.761053085327148
    4. ' u' → logprob: -6.761053085327148
    5. ' =' → logprob: -7.636053085327148
    6. '=' → logprob: -7.636053085327148
    7. '
' → logprob: -7.761053085327148
    8. 'ue' → logprob: -7.886053085327148
    9. 'print' → logprob: -9.386053085327148
    10. '               ' → logprob: -9.636053085327148

Token 276: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9497212767601013
    2. 'ans' → logprob: -2.074721336364746
    3. 'root' → logprob: -2.074721336364746
    4. 'res' → logprob: -2.699721336364746
    5. 'r' → logprob: -2.949721336364746
    6. ' ans' → logprob: -3.199721336364746
    7. 'u' → logprob: -3.324721336364746
    8. '               ' → logprob: -3.324721336364746
    9. ' print' → logprob: -3.324721336364746
    10. ' root' → logprob: -4.324721336364746

Token 277: ' the' (ID: 290)
  Prédit: '(find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(find' → logprob: -0.06197250634431839
    2. 'find' → logprob: -2.8119726181030273
    3. '(' → logprob: -12.936972618103027
    4. ' find' → logprob: -14.186972618103027
    5. ')find' → logprob: -14.686972618103027
    6. '=find' → logprob: -14.686972618103027
    7. 'd' → logprob: -15.311972618103027
    8. '((' → logprob: -16.18697166442871
    9. '(found' → logprob: -16.18697166442871
    10. '	find' → logprob: -16.43697166442871

Token 278: ' nearest' (ID: 35210)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.003813376184552908
    2. '(find' → logprob: -6.12881326675415
    3. ' find' → logprob: -6.50381326675415
    4. 'ind' → logprob: -10.378813743591309
    5. 'answer' → logprob: -10.503813743591309
    6. 'parent' → logprob: -11.128813743591309
    7. 'root' → logprob: -11.628813743591309
    8. 'd' → logprob: -11.628813743591309
    9. 'ds' → logprob: -11.753813743591309
    10. '=find' → logprob: -12.128813743591309

Token 279: ' marked' (ID: 20779)
  Prédit: 'marked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'marked' → logprob: -0.11090872436761856
    2. '(find' → logprob: -2.8609087467193604
    3. 'find' → logprob: -3.9859087467193604
    4. ' marked' → logprob: -4.485908508300781
    5. '(' → logprob: -4.860908508300781
    6. 'ancestor' → logprob: -5.485908508300781
    7. '(v' → logprob: -5.985908508300781
    8. 'v' → logprob: -7.110908508300781
    9. 'parent' → logprob: -7.610908508300781
    10. ' find' → logprob: -7.735908508300781

Token 280: ' ancestor' (ID: 90832)
  Prédit: 'ancestor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ancestor' → logprob: -0.0032019545324146748
    2. ' ancestor' → logprob: -5.753201961517334
    3. 'parent' → logprob: -11.753201484680176
    4. 'anc' → logprob: -11.878201484680176
    5. 'ans' → logprob: -12.253201484680176
    6. 'ances' → logprob: -13.753201484680176
    7. 'common' → logprob: -13.878201484680176
    8. 'print' → logprob: -14.753201484680176
    9. 'Ancestor' → logprob: -14.753201484680176
    10. '(' → logprob: -15.128201484680176

Token 281: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22055666148662567
    2. '           ' → logprob: -1.720556616783142
    3. '
' → logprob: -4.595556735992432
    4. ',' → logprob: -5.220556735992432
    5. 'print' → logprob: -6.595556735992432
    6. ' print' → logprob: -7.970556735992432
    7. '       ' → logprob: -8.720556259155273
    8. '(' → logprob: -8.845556259155273
    9. '                
' → logprob: -8.970556259155273
    10. '            ' → logprob: -9.095556259155273

Token 282: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.015487778931856155
    2. 'print' → logprob: -4.5154876708984375
    3. ' print' → logprob: -6.5154876708984375
    4. '(' → logprob: -7.2654876708984375
    5. '           ' → logprob: -7.3904876708984375
    6. ',' → logprob: -7.3904876708984375
    7. '```' → logprob: -8.015487670898438
    8. '
' → logprob: -9.140487670898438
    9. '(print' → logprob: -9.640487670898438
    10. '<|end|>' → logprob: -9.640487670898438

Token 283: ' ans' (ID: 3345)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0004701146390289068
    2. ' print' → logprob: -7.750470161437988
    3. '               ' → logprob: -10.375470161437988
    4. '           ' → logprob: -12.625470161437988
    5. 'ans' (adapté à ' ans') → logprob: -13.000470161437988
    6. '
' → logprob: -13.375470161437988
    7. 'res' → logprob: -14.750470161437988
    8. 'answer' → logprob: -15.125470161437988
    9. '```' → logprob: -16.500469207763672
    10. '   ' → logprob: -16.625469207763672

Token 284: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.474091112613678
    2. ' =' → logprob: -0.974091112613678
    3. '=find' → logprob: -11.474091529846191
    4. ' ' → logprob: -13.974091529846191
    5. '=int' → logprob: -14.224091529846191
    6. '=
' → logprob: -14.474091529846191
    7. ' =
' → logprob: -15.224091529846191
    8. ')' → logprob: -15.474091529846191
    9. '＝' → logprob: -15.474091529846191
    10. '=sys' → logprob: -15.849091529846191

Token 285: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.006717147771269083
    2. ' find' → logprob: -5.006717205047607
    3. '(find' → logprob: -14.25671672821045
    4. 'str' → logprob: -14.63171672821045
    5. '   ' → logprob: -15.50671672821045
    6. '
' → logprob: -15.75671672821045
    7. 'print' → logprob: -16.256717681884766
    8. '	find' → logprob: -16.381717681884766
    9. ' ' → logprob: -17.506717681884766
    10. '  ' → logprob: -18.131717681884766

Token 286: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -2.1008713702030946e-06
    2. '(' → logprob: -13.125001907348633
    3. ' (' → logprob: -17.500001907348633
    4. '(
' → logprob: -18.250001907348633
    5. '<|end|>' → logprob: -18.250001907348633
    6. 'v' → logprob: -18.625001907348633
    7. '[v' → logprob: -19.375001907348633
    8. '(V' → logprob: -20.000001907348633
    9. '(parent' → logprob: -20.375001907348633
    10. '((' → logprob: -20.375001907348633

Token 287: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.014180435799062252
    2. ')' → logprob: -4.264180660247803
    3. ')
' → logprob: -11.639180183410645
    4. '())
' → logprob: -12.014180183410645
    5. '()
' → logprob: -13.889180183410645
    6. '()' → logprob: -14.514180183410645
    7. ' )
' → logprob: -15.139180183410645
    8. ')`
' → logprob: -16.63918113708496
    9. '       ' → logprob: -16.76418113708496
    10. ')

' → logprob: -16.76418113708496

Token 288: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.47100359201431274
    2. 'print' → logprob: -1.346003532409668
    3. '           ' → logprob: -2.221003532409668
    4. '
' → logprob: -5.471003532409668
    5. '```' → logprob: -6.346003532409668
    6. ' print' → logprob: -7.221003532409668
    7. '``' → logprob: -10.096003532409668
    8. '<|end|>' → logprob: -10.471003532409668
    9. '
' → logprob: -10.596003532409668
    10. '\' → logprob: -12.221003532409668

Token 289: ' total' (ID: 3609)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.288163083605468e-05
    2. '           ' → logprob: -10.250052452087402
    3. ' print' → logprob: -11.000052452087402
    4. '       ' → logprob: -14.250052452087402
    5. '
' → logprob: -16.00005340576172
    6. '               ' → logprob: -17.62505340576172
    7. '```' → logprob: -18.25005340576172
    8. '   ' → logprob: -18.87505340576172
    9. '	print' → logprob: -19.25005340576172
    10. 'sys' → logprob: -20.87505340576172

Token 290: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.43074503540992737
    2. '+=' → logprob: -1.055745005607605
    3. '=' → logprob: -6.9307451248168945
    4. 'print' → logprob: -7.6807451248168945
    5. ' =' → logprob: -8.430745124816895
    6. ')' → logprob: -9.430745124816895
    7. ',' → logprob: -9.555745124816895
    8. '+' → logprob: -9.555745124816895
    9. ']+=' → logprob: -9.555745124816895
    10. '   ' → logprob: -10.805745124816895

Token 291: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.131011500954628
    2. ' ans' → logprob: -2.131011486053467
    3. '1' → logprob: -5.631011486053467
    4. ' ' → logprob: -8.506011962890625
    5. '(ans' → logprob: -8.756011962890625
    6. 'int' → logprob: -9.381011962890625
    7. 'v' → logprob: -11.506011962890625
    8. ' int' → logprob: -12.006011962890625
    9. 'len' → logprob: -12.006011962890625
    10. 'find' → logprob: -12.131011962890625

Token 292: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15006780624389648
    2. '<|end|>' → logprob: -2.0250678062438965
    3. 'print' → logprob: -6.0250678062438965
    4. '<|end|>' → logprob: -6.6500678062438965
    5. '+' → logprob: -7.0250678062438965
    6. '           ' → logprob: -7.1500678062438965
    7. '\n' → logprob: -7.5250678062438965
    8. '```' → logprob: -7.6500678062438965
    9. '       ' → logprob: -8.150068283081055
    10. '
' → logprob: -8.900068283081055

Token 293: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 294: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09389683604240417
    2. '<|end|>' → logprob: -2.5938968658447266
    3. '
' → logprob: -4.718896865844727
    4. '       ' → logprob: -5.468896865844727
    5. '```' → logprob: -6.968896865844727
    6. 'print' (adapté à ' print') → logprob: -7.968896865844727
    7. '    
' → logprob: -8.843896865844727
    8. 'if' → logprob: -9.593896865844727
    9. 'return' → logprob: -9.843896865844727
    10. '#' → logprob: -10.343896865844727

Token 295: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.004644672852009535
    2. '(' → logprob: -5.504644870758057
    3. '('' → logprob: -7.879644870758057
    4. '("' → logprob: -9.254644393920898
    5. '()' → logprob: -9.754644393920898
    6. ' (' → logprob: -11.004644393920898
    7. 'total' → logprob: -11.754644393920898
    8. '(f' → logprob: -11.879644393920898
    9. ' total' → logprob: -13.504644393920898
    10. ',total' → logprob: -14.504644393920898

Token 296: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9862216504407115e-05
    2. '())' → logprob: -12.000020027160645
    3. '()' → logprob: -12.125020027160645
    4. ')
' → logprob: -12.500020027160645
    5. ' )' → logprob: -12.750020027160645
    6. ')`' → logprob: -14.625020027160645
    7. '`)' → logprob: -15.875020027160645
    8. '(' → logprob: -15.875020027160645
    9. '   ' → logprob: -16.375019073486328
    10. '+' → logprob: -16.375019073486328

Token 297: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12320418655872345
    2. '
' → logprob: -2.373204231262207
    3. '<|end|>' → logprob: -4.123204231262207
    4. 'main' → logprob: -5.748204231262207
    5. ' if' → logprob: -6.748204231262207
    6. '\n' → logprob: -7.123204231262207
    7. '```' → logprob: -7.123204231262207
    8. '  
' → logprob: -8.623204231262207
    9. '    
' → logprob: -9.248204231262207
    10. '<|end|>' → logprob: -9.748204231262207

Token 298: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.20142436027526855
    2. '__' → logprob: -1.7014243602752686
    3. 'name' → logprob: -11.701424598693848
    4. '___' → logprob: -14.076424598693848
    5. '____' → logprob: -14.701424598693848
    6. ' ' → logprob: -14.826424598693848
    7. '_name' → logprob: -14.951424598693848
    8. '(__' → logprob: -15.326424598693848
    9. ' name' → logprob: -15.451424598693848
    10. 'Name' → logprob: -16.32642364501953

Token 299: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.02142907679080963
    2. ' ==' → logprob: -4.146429061889648
    3. '==' → logprob: -5.771429061889648
    4. '__.__' → logprob: -6.771429061889648
    5. ' __' → logprob: -7.771429061889648
    6. '.__' → logprob: -7.771429061889648
    7. '__.' → logprob: -8.896429061889648
    8. '```' → logprob: -9.896429061889648
    9. '.' → logprob: -10.146429061889648
    10. '____' → logprob: -11.896429061889648

Token 300: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0008403576212003827
    2. '==' → logprob: -7.250840187072754
    3. '__.__' → logprob: -9.250840187072754
    4. ' ==' → logprob: -10.875840187072754
    5. '=="' → logprob: -12.500840187072754
    6. '__.' → logprob: -12.625840187072754
    7. '__["' → logprob: -13.000840187072754
    8. '=='' → logprob: -13.500840187072754
    9. '__('' → logprob: -13.625840187072754
    10. '___' → logprob: -14.250840187072754

Token 301: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.11938081681728363
    2. '==' → logprob: -2.6193807125091553
    3. ' ==' → logprob: -3.2443807125091553
    4. '=="' → logprob: -7.744380950927734
    5. '__.__' → logprob: -8.869380950927734
    6. '=='' → logprob: -9.994380950927734
    7. '__.' → logprob: -10.744380950927734
    8. '__["' → logprob: -11.244380950927734
    9. '__":
' → logprob: -11.744380950927734
    10. '.__' → logprob: -11.994380950927734

Token 302: ' '__' (ID: 28278)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3134046792984009
    2. '"' → logprob: -1.3134046792984009
    3. '__' → logprob: -8.93840503692627
    4. ' "__' → logprob: -12.31340503692627
    5. ' '__' → logprob: -12.56340503692627
    6. '"user' → logprob: -14.43840503692627
    7. ''user' → logprob: -14.43840503692627
    8. '('__' → logprob: -14.68840503692627
    9. '`' → logprob: -15.06340503692627
    10. '   ' → logprob: -15.06340503692627

Token 303: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.000432695698691532
    2. 'name' → logprob: -7.75043249130249
    3. '__' → logprob: -13.125432968139648
    4. ' main' → logprob: -17.12543296813965
    5. 'm' → logprob: -17.62543296813965
    6. '__':
' → logprob: -17.75043296813965
    7. '_main' → logprob: -17.87543296813965
    8. 'if' → logprob: -19.00043296813965
    9. ''' → logprob: -19.37543296813965
    10. ''name' → logprob: -19.75043296813965

Token 304: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.023513566702604294
    2. '__' → logprob: -3.8985135555267334
    3. '__":
' → logprob: -6.2735137939453125
    4. '():
' → logprob: -6.8985137939453125
    5. ':
' → logprob: -10.773513793945312
    6. '__
' → logprob: -11.273513793945312
    7. '__()
' → logprob: -11.398513793945312
    8. '__:' → logprob: -11.648513793945312
    9. ':' → logprob: -11.898513793945312
    10. '_' → logprob: -13.023513793945312

Token 305: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20345912873744965
    2. '	main' → logprob: -1.9534591436386108
    3. 'main' → logprob: -3.5784590244293213
    4. ' main' → logprob: -4.3284592628479
    5. '   ' → logprob: -8.078458786010742
    6. '_main' → logprob: -8.828458786010742
    7. ' ' → logprob: -8.828458786010742
    8. '  ' → logprob: -8.953458786010742
    9. '<|end|>' → logprob: -9.203458786010742
    10. ' ' → logprob: -9.453458786010742

Token 306: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.0280383548888494e-06
    2. ' main' → logprob: -14.500000953674316
    3. '	main' → logprob: -15.250000953674316
    4. '   ' → logprob: -15.500000953674316
    5. '_main' → logprob: -20.125001907348633
    6. '.main' → logprob: -21.875001907348633
    7. '(main' → logprob: -22.250001907348633
    8. 'import' → logprob: -24.000001907348633
    9. 'Main' → logprob: -24.125001907348633
    10. '```' → logprob: -24.125001907348633

Token 307: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 305
Tokens correctement prédits (1ère position, stricte): 132
Tokens correctement prédits (1ère position, avec adaptation): 142
Tokens correctement prédits (top 10): 239
Précision stricte (1ère position): 43.28%
Précision adaptée (1ère position): 46.56%
Précision (top 10): 78.36%
================================================================================
