================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:15:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N=int(input())
L=[int(input()) for _ in range(N)]
A=[0]*(N+1)
for i in range(N):
    A[i+1]=A[i]+L[i]
ans=float('inf')
for i in range(N):
    for j in range(i+1,N+1):
        pieces=[A[k]-A[k-1] for k in range(i+1,j+1)]
        if len(pieces)>1:
            diff=max(pieces)-min(pieces)
            if diff<ans:
                ans=diff
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: '=int' (ID: 37431)
  → Token d'amorce (pas de prédiction)

Token 2: '(input' (ID: 10054)
  → Token d'amorce (pas de prédiction)

Token 3: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3926573097705841
    2. '(' → logprob: -1.2676572799682617
    3. '()' → logprob: -3.6426572799682617
    4. '())' → logprob: -4.142657279968262
    5. '`)' → logprob: -8.142657279968262
    6. '(
' → logprob: -8.892657279968262
    7. '```' → logprob: -9.017657279968262
    8. '))' → logprob: -9.142657279968262
    9. '")' → logprob: -9.142657279968262
    10. '')' → logprob: -9.642657279968262

Token 4: 'L' (ID: 43)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20188339054584503
    2. '*' → logprob: -2.951883316040039
    3. '\n' → logprob: -3.201883316040039
    4. 'if' → logprob: -3.826883316040039
    5. '#' → logprob: -4.201883316040039
    6. ')' → logprob: -4.451883316040039
    7. ' for' → logprob: -5.701883316040039
    8. 's' → logprob: -5.701883316040039
    9. '+' → logprob: -5.701883316040039
    10. '```' → logprob: -5.701883316040039

Token 5: '=[' (ID: 13370)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6839289665222168
    2. '.' → logprob: -0.8089289665222168
    3. '=' → logprob: -3.183928966522217
    4. ' =' → logprob: -5.308928966522217
    5. '[:]' → logprob: -7.308928966522217
    6. '.append' → logprob: -7.808928966522217
    7. ',' → logprob: -7.808928966522217
    8. '_' → logprob: -8.058929443359375
    9. '[]' → logprob: -8.308929443359375
    10. '+' → logprob: -8.308929443359375

Token 6: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.001075322856195271
    2. '0' → logprob: -7.251075267791748
    3. 'i' → logprob: -8.126075744628906
    4. 'input' → logprob: -10.626075744628906
    5. ' int' → logprob: -11.001075744628906
    6. '(int' → logprob: -11.251075744628906
    7. '*' → logprob: -12.501075744628906
    8. ']' → logprob: -12.876075744628906
    9. ']int' → logprob: -13.251075744628906
    10. 'N' → logprob: -13.501075744628906

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03375174105167389
    2. '(input' → logprob: -3.4087517261505127
    3. '(x' → logprob: -10.283751487731934
    4. '()' → logprob: -11.033751487731934
    5. '(
' → logprob: -11.283751487731934
    6. '(i' → logprob: -11.408751487731934
    7. ' (' → logprob: -11.783751487731934
    8. '(

' → logprob: -11.783751487731934
    9. '(a' → logprob: -12.408751487731934
    10. '(token' → logprob: -13.158751487731934

Token 8: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0031716525554656982
    2. '()' → logprob: -5.878171443939209
    3. '()))' → logprob: -8.753171920776367
    4. '()]' → logprob: -8.753171920776367
    5. ')' → logprob: -10.378171920776367
    6. '(' → logprob: -11.878171920776367
    7. ' ())' → logprob: -12.503171920776367
    8. '());' → logprob: -12.878171920776367
    9. '();)' → logprob: -13.253171920776367
    10. '()),' → logprob: -13.628171920776367

Token 9: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04916848987340927
    2. ')]' → logprob: -3.049168586730957
    3. ']' → logprob: -7.674168586730957
    4. ')])' → logprob: -10.424168586730957
    5. '])' → logprob: -11.424168586730957
    6. '()' → logprob: -11.424168586730957
    7. ' )' → logprob: -11.924168586730957
    8. 'for' → logprob: -12.049168586730957
    9. '`)' → logprob: -12.049168586730957
    10. '())' → logprob: -12.174168586730957

Token 10: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.00038693982060067356
    2. 'range' → logprob: -7.875386714935303
    3. '(range' → logprob: -12.250387191772461
    4. '	range' → logprob: -13.750387191772461
    5. ' ' → logprob: -14.250387191772461
    6. '_range' → logprob: -16.25038719177246
    7. '_' → logprob: -16.37538719177246
    8. ' xrange' → logprob: -16.75038719177246
    9. ' i' → logprob: -17.25038719177246
    10. '  ' → logprob: -18.25038719177246

Token 11: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00033939589047804475
    2. ' range' → logprob: -8.00033950805664
    3. '	range' → logprob: -13.00033950805664
    4. '(range' → logprob: -14.12533950805664
    5. '_' → logprob: -15.50033950805664
    6. '_range' → logprob: -15.50033950805664
    7. '.range' → logprob: -15.75033950805664
    8. 'rang' → logprob: -15.75033950805664
    9. 'ange' → logprob: -15.87533950805664
    10. '```' → logprob: -16.87533950805664

Token 12: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002614550176076591
    2. ' range' → logprob: -8.250261306762695
    3. '	range' → logprob: -17.000261306762695
    4. '(range' → logprob: -18.125261306762695
    5. '```' → logprob: -18.875261306762695
    6. 'rang' → logprob: -19.000261306762695
    7. ' ' → logprob: -19.125261306762695
    8. '[' → logprob: -20.000261306762695
    9. '.range' → logprob: -20.125261306762695
    10. '_range' → logprob: -20.125261306762695

Token 13: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.023254794999957085
    2. '(' → logprob: -3.773254871368408
    3. '(n' → logprob: -12.52325439453125
    4. '(
' → logprob: -13.39825439453125
    5. ' (' → logprob: -13.64825439453125
    6. 'N' → logprob: -13.77325439453125
    7. '(len' → logprob: -14.77325439453125
    8. '(

' → logprob: -14.77325439453125
    9. '(L' → logprob: -15.52325439453125
    10. '(K' → logprob: -15.64825439453125

Token 14: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00022129806166049093
    2. ')' → logprob: -8.500221252441406
    3. ']' → logprob: -11.375221252441406
    4. '')]' → logprob: -12.750221252441406
    5. ')])' → logprob: -13.750221252441406
    6. ' )' → logprob: -14.625221252441406
    7. ')]
' → logprob: -14.750221252441406
    8. '])]' → logprob: -14.750221252441406
    9. '))' → logprob: -15.000221252441406
    10. '）' → logprob: -15.250221252441406

Token 15: 'A' (ID: 32)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.9191442131996155
    2. 's' → logprob: -1.1691441535949707
    3. 'M' → logprob: -2.5441441535949707
    4. 'max' → logprob: -3.2941441535949707
    5. 'c' → logprob: -3.4191441535949707
    6. 'd' → logprob: -4.044144153594971
    7. 'print' → logprob: -4.169144153594971
    8. 'S' → logprob: -4.169144153594971
    9. 'a' → logprob: -4.169144153594971
    10. 'm' → logprob: -4.294144153594971

Token 16: '=[' (ID: 13370)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.17144636809825897
    2. '.' → logprob: -2.1714463233947754
    3. '=' → logprob: -4.546446323394775
    4. ' =' → logprob: -4.921446323394775
    5. '[:]' → logprob: -5.796446323394775
    6. 'pp' → logprob: -6.046446323394775
    7. '_' → logprob: -6.046446323394775
    8. 'A' → logprob: -6.171446323394775
    9. 's' → logprob: -6.421446323394775
    10. ' ' → logprob: -6.546446323394775

Token 17: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016540782526135445
    2. 'L' → logprob: -4.141541004180908
    3. ']' → logprob: -8.39154052734375
    4. '1' → logprob: -9.39154052734375
    5. ' ' → logprob: -10.39154052734375
    6. 'i' → logprob: -10.51654052734375
    7. 'x' → logprob: -10.51654052734375
    8. 'max' → logprob: -10.76654052734375
    9. 'int' → logprob: -10.89154052734375
    10. '-' → logprob: -11.51654052734375

Token 18: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.39184027910232544
    2. ']*' → logprob: -1.1418402194976807
    3. ']*(' → logprob: -5.51684045791626
    4. ']+' → logprob: -7.76684045791626
    5. ' ]' → logprob: -8.266839981079102
    6. ',' → logprob: -8.641839981079102
    7. ' for' → logprob: -9.641839981079102
    8. 'for' → logprob: -11.766839981079102
    9. ')]' → logprob: -12.641839981079102
    10. ']]' → logprob: -13.891839981079102

Token 19: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.009782060980796814
    2. '100' → logprob: -5.384781837463379
    3. '2' → logprob: -6.009781837463379
    4. '10' → logprob: -6.884781837463379
    5. '101' → logprob: -7.009781837463379
    6. 'max' → logprob: -7.759781837463379
    7. 'len' → logprob: -9.384781837463379
    8. '200' → logprob: -9.509781837463379
    9. '20' → logprob: -10.634781837463379
    10. '400' → logprob: -10.884781837463379

Token 20: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001999642699956894
    2. '))' → logprob: -8.875200271606445
    3. '+' → logprob: -10.375200271606445
    4. '*' → logprob: -11.125200271606445
    5. ' )' → logprob: -12.500200271606445
    6. '-' → logprob: -12.500200271606445
    7. ')
' → logprob: -12.625200271606445
    8. ')))' → logprob: -13.875200271606445
    9. '**' → logprob: -15.000200271606445
    10. '*)' → logprob: -15.250200271606445

Token 21: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.624555291840807e-05
    2. '2' → logprob: -9.625076293945312
    3. ' ' → logprob: -12.125076293945312
    4. '10' → logprob: -12.625076293945312
    5. '5' → logprob: -14.125076293945312
    6. '3' → logprob: -15.000076293945312
    7. '100' → logprob: -16.250076293945312
    8. '4' → logprob: -16.812576293945312
    9. '  ' → logprob: -17.250076293945312
    10. '   ' → logprob: -17.250076293945312

Token 22: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.822646693966817e-06
    2. ' )' → logprob: -12.375007629394531
    3. ')
' → logprob: -13.375007629394531
    4. '*' → logprob: -14.875007629394531
    5. '`)' → logprob: -14.875007629394531
    6. '+' → logprob: -15.375007629394531
    7. '))' → logprob: -15.750007629394531
    8. '```' → logprob: -16.00000762939453
    9. ')`' → logprob: -16.00000762939453
    10. ')

' → logprob: -16.12500762939453

Token 23: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00011212585377506912
    2. ' for' → logprob: -9.625112533569336
    3. 'f' → logprob: -11.625112533569336
    4. 'i' → logprob: -11.625112533569336
    5. '```' → logprob: -11.875112533569336
    6. 's' → logprob: -12.250112533569336
    7. 'F' → logprob: -12.625112533569336
    8. 'd' → logprob: -12.750112533569336
    9. 'dp' → logprob: -13.375112533569336
    10. 'A' → logprob: -13.625112533569336

Token 24: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.007804407272487879
    2. 'i' → logprob: -5.0078043937683105
    3. '_' → logprob: -8.007804870605469
    4. ' range' → logprob: -8.132804870605469
    5. ' _' → logprob: -8.382804870605469
    6. ' ' → logprob: -8.632804870605469
    7. '_i' → logprob: -11.132804870605469
    8. 'range' → logprob: -11.632804870605469
    9. ' I' → logprob: -11.882804870605469
    10. ' N' → logprob: -12.632804870605469

Token 25: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016343673691153526
    2. 'in' → logprob: -4.141343593597412
    3. ' ' → logprob: -8.39134407043457
    4. '+' → logprob: -9.89134407043457
    5. '  ' → logprob: -11.76634407043457
    6. 'range' → logprob: -11.76634407043457
    7. '	in' → logprob: -12.26634407043457
    8. ')' → logprob: -13.26634407043457
    9. '<|end|>' → logprob: -13.76634407043457
    10. '%' → logprob: -13.89134407043457

Token 26: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.00861681904643774
    2. 'range' → logprob: -4.758616924285889
    3. ' ' → logprob: -13.50861644744873
    4. ' L' → logprob: -15.38361644744873
    5. '(range' → logprob: -15.63361644744873
    6. ' xrange' → logprob: -15.63361644744873
    7. ')' → logprob: -15.88361644744873
    8. '	range' → logprob: -15.88361644744873
    9. '  ' → logprob: -16.883617401123047
    10. 'L' → logprob: -17.383617401123047

Token 27: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06434570997953415
    2. '(N' → logprob: -2.814345598220825
    3. ' (' → logprob: -6.064345836639404
    4. ' ' → logprob: -10.814345359802246
    5. '(n' → logprob: -11.189345359802246
    6. '(i' → logprob: -11.939345359802246
    7. '(len' → logprob: -12.689345359802246
    8. '(
' → logprob: -13.564345359802246
    9. '1' → logprob: -13.689345359802246
    10. ' N' → logprob: -13.689345359802246

Token 28: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0794677734375
    2. '-' → logprob: -3.3294677734375
    3. '):
' → logprob: -3.8294677734375
    4. '+' → logprob: -4.4544677734375
    5. ')' → logprob: -4.9544677734375
    6. ' ):' → logprob: -9.9544677734375
    7. ':' → logprob: -10.5794677734375
    8. '):
' → logprob: -10.9544677734375
    9. ' ' → logprob: -11.3294677734375
    10. ' -' → logprob: -11.4544677734375

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17173777520656586
    2. ' A' → logprob: -2.4217376708984375
    3. 'A' → logprob: -3.0467376708984375
    4. ' L' → logprob: -4.6717376708984375
    5. ' ' → logprob: -6.0467376708984375
    6. 'L' → logprob: -6.1717376708984375
    7. '```' → logprob: -6.1717376708984375
    8. '	A' → logprob: -7.0467376708984375
    9. '  ' → logprob: -7.5467376708984375
    10. '``' → logprob: -7.5467376708984375

Token 30: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.6778087019920349
    2. ' A' → logprob: -0.8028087019920349
    3. ' L' → logprob: -3.9278087615966797
    4. 'L' → logprob: -4.55280876159668
    5. '   ' → logprob: -5.30280876159668
    6. ' ' → logprob: -6.30280876159668
    7. 'i' → logprob: -6.55280876159668
    8. 'for' → logprob: -6.80280876159668
    9. ' for' → logprob: -6.92780876159668
    10. 'if' → logprob: -7.55280876159668

Token 31: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0024490193463861942
    2. '[' → logprob: -6.377449035644531
    3. '[L' → logprob: -7.627449035644531
    4. '[A' → logprob: -8.502449035644531
    5. ' [' → logprob: -11.752449035644531
    6. '[min' → logprob: -11.877449035644531
    7. '[a' → logprob: -12.127449035644531
    8. '+=' → logprob: -12.252449035644531
    9. ' +=' → logprob: -12.502449035644531
    10. '+' → logprob: -12.877449035644531

Token 32: '+' (ID: 10)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.27676284313201904
    2. '+' → logprob: -2.0267629623413086
    3. ']+=' → logprob: -2.5267629623413086
    4. ']=' → logprob: -3.7767629623413086
    5. ']+' → logprob: -5.526762962341309
    6. '+]' → logprob: -6.526762962341309
    7. ' ]' → logprob: -6.651762962341309
    8. '+=' → logprob: -8.651762962341309
    9. ' +' → logprob: -9.526762962341309
    10. '++]' → logprob: -10.151762962341309

Token 33: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000206401280593127
    2. ' ' → logprob: -8.750205993652344
    3. ']' → logprob: -10.000205993652344
    4. '+' → logprob: -14.125205993652344
    5. ']+=' → logprob: -14.625205993652344
    6. '-' → logprob: -15.000205993652344
    7. ']+' → logprob: -15.125205993652344
    8. '   ' → logprob: -15.625205993652344
    9. '2' → logprob: -16.250205993652344
    10. ']=' → logprob: -16.250205993652344

Token 34: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5531893968582153
    2. ']=' → logprob: -1.5531893968582153
    3. ']+=' → logprob: -1.5531893968582153
    4. ' ]' → logprob: -6.553189277648926
    5. ')' → logprob: -9.053189277648926
    6. ')=' → logprob: -9.678189277648926
    7. ']+' → logprob: -9.803189277648926
    8. ']=(' → logprob: -10.428189277648926
    9. '=' → logprob: -10.678189277648926
    10. '+=' → logprob: -12.303189277648926

Token 35: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0010039894841611385
    2. 'max' → logprob: -7.376004219055176
    3. ' A' → logprob: -8.501004219055176
    4. 'L' → logprob: -8.876004219055176
    5. '   ' → logprob: -11.626004219055176
    6. ' ' → logprob: -11.751004219055176
    7. ' max' → logprob: -12.626004219055176
    8. '(A' → logprob: -12.626004219055176
    9. '	A' → logprob: -12.876004219055176
    10. 'a' → logprob: -13.376004219055176

Token 36: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.465036105713807e-06
    2. '[' → logprob: -12.125007629394531
    3. 'i' → logprob: -14.000007629394531
    4. '```' → logprob: -14.250007629394531
    5. '[I' → logprob: -15.500007629394531
    6. '`' → logprob: -16.62500762939453
    7. ' [' → logprob: -16.75000762939453
    8. '[
' → logprob: -17.87500762939453
    9. '[A' → logprob: -18.00000762939453
    10. '\[' → logprob: -18.37500762939453

Token 37: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0025200152304023504
    2. ' +' → logprob: -6.0025200843811035
    3. '+A' → logprob: -10.627519607543945
    4. ']+' → logprob: -11.252519607543945
    5. '+B' → logprob: -12.877519607543945
    6. ')+' → logprob: -13.127519607543945
    7. '+C' → logprob: -13.877519607543945
    8. ' plus' → logprob: -15.002519607543945
    9. '＋' → logprob: -15.002519607543945
    10. '+l' → logprob: -15.252519607543945

Token 38: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0031794982496649027
    2. ' L' → logprob: -5.753179550170898
    3. ' ' → logprob: -14.253179550170898
    4. '	L' → logprob: -15.378179550170898
    5. '   ' → logprob: -15.378179550170898
    6. '(L' → logprob: -16.1281795501709
    7. '`' → logprob: -16.2531795501709
    8. ' ' → logprob: -16.3781795501709
    9. '```' → logprob: -16.5656795501709
    10. '  ' → logprob: -16.8156795501709

Token 39: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0036045825108885765
    2. '[' → logprob: -5.628604412078857
    3. '```' → logprob: -13.628604888916016
    4. '[I' → logprob: -14.003604888916016
    5. ' [' → logprob: -14.378604888916016
    6. '\[' → logprob: -14.378604888916016
    7. '[j' → logprob: -15.253604888916016
    8. '[
' → logprob: -15.628604888916016
    9. '[N' → logprob: -16.378604888916016
    10. '[int' → logprob: -16.503604888916016

Token 40: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9385402993066236e-05
    2. ']' → logprob: -11.500019073486328
    3. ')
' → logprob: -13.125019073486328
    4. ' )' → logprob: -13.250019073486328
    5. '])' → logprob: -14.000019073486328
    6. '）' → logprob: -14.250019073486328
    7. '[' → logprob: -14.375019073486328
    8. '}' → logprob: -14.500019073486328
    9. ')`' → logprob: -14.500019073486328
    10. ')]' → logprob: -14.625019073486328

Token 41: 'ans' (ID: 616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.466802954673767
    2. 'max' → logprob: -1.966802954673767
    3. 's' → logprob: -2.3418030738830566
    4. 'Q' → logprob: -2.4668030738830566
    5. 'k' → logprob: -2.4668030738830566
    6. 'M' → logprob: -2.7168030738830566
    7. 'q' → logprob: -2.9668030738830566
    8. 'm' → logprob: -3.0918030738830566
    9. 'x' → logprob: -3.2168030738830566
    10. 'r' → logprob: -3.3418030738830566

Token 42: '=float' (ID: 80332)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28262457251548767
    2. '=' → logprob: -1.40762460231781
    3. '=[]' → logprob: -7.9076247215271
    4. '[' → logprob: -8.032624244689941
    5. '_' → logprob: -8.407624244689941
    6. '=[' → logprob: -8.657624244689941
    7. ' =[' → logprob: -8.782624244689941
    8. '[:]' → logprob: -10.032624244689941
    9. ' ' → logprob: -10.282624244689941
    10. ',' → logprob: -10.532624244689941

Token 43: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0028386341873556376
    2. ''' → logprob: -6.752838611602783
    3. '(' → logprob: -7.252838611602783
    4. ''s' → logprob: -7.627838611602783
    5. ''in' → logprob: -8.252839088439941
    6. '(in' → logprob: -10.252839088439941
    7. ''a' → logprob: -10.627839088439941
    8. '('-' → logprob: -10.627839088439941
    9. ''i' → logprob: -10.752839088439941
    10. '("' → logprob: -11.252839088439941

Token 44: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.0025653145276010036
    2. ''' → logprob: -6.502565383911133
    3. ''i' → logprob: -7.627565383911133
    4. ''in' → logprob: -8.377565383911133
    5. 'i' → logprob: -8.877565383911133
    6. '-i' → logprob: -9.502565383911133
    7. '-inf' → logprob: -10.002565383911133
    8. '"' → logprob: -10.252565383911133
    9. 'INF' → logprob: -11.252565383911133
    10. ''s' → logprob: -11.627565383911133

Token 45: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006339243846014142
    2. ' )' → logprob: -7.375633716583252
    3. '')' → logprob: -12.37563419342041
    4. ')
' → logprob: -13.25063419342041
    5. '[' → logprob: -14.62563419342041
    6. '))' → logprob: -15.87563419342041
    7. '`)' → logprob: -16.250633239746094
    8. ')`' → logprob: -16.250633239746094
    9. ' ' → logprob: -16.500633239746094
    10. ')
' → logprob: -16.500633239746094

Token 46: 'for' (ID: 1938)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8421550989151001
    2. 'for' → logprob: -0.8421550989151001
    3. ' for' → logprob: -2.0921549797058105
    4. ' 
' → logprob: -4.7171549797058105
    5. '\n' → logprob: -6.0921549797058105
    6. '<|end|>' → logprob: -7.2171549797058105
    7. '  
' → logprob: -7.4671549797058105
    8. '
' → logprob: -7.5921549797058105
    9. '

' → logprob: -7.7171549797058105
    10. '\' → logprob: -7.8421549797058105

Token 47: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.021456504240632057
    2. ' j' → logprob: -4.271456718444824
    3. ' range' → logprob: -5.021456718444824
    4. 'i' → logprob: -8.146456718444824
    5. ' k' → logprob: -9.271456718444824
    6. ' ' → logprob: -9.896456718444824
    7. 'j' → logprob: -10.271456718444824
    8. 'range' → logprob: -10.271456718444824
    9. ' s' → logprob: -10.396456718444824
    10. '_' → logprob: -10.396456718444824

Token 48: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.113472118973732
    2. 'in' → logprob: -2.2384722232818604
    3. ' ' → logprob: -7.613471984863281
    4. 'range' → logprob: -9.988471984863281
    5. '  ' → logprob: -10.738471984863281
    6. '	in' → logprob: -10.863471984863281
    7. '   ' → logprob: -11.238471984863281
    8. '(' → logprob: -11.863471984863281
    9. '_' → logprob: -11.863471984863281
    10. ' i' → logprob: -11.863471984863281

Token 49: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16023682057857513
    2. ' range' → logprob: -1.9102368354797363
    3. '(range' → logprob: -11.535236358642578
    4. '	range' → logprob: -13.660236358642578
    5. ' ' → logprob: -14.035236358642578
    6. '_range' → logprob: -15.660236358642578
    7. '  ' → logprob: -15.660236358642578
    8. '   ' → logprob: -15.660236358642578
    9. 'r' → logprob: -16.035236358642578
    10. '.range' → logprob: -16.910236358642578

Token 50: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.16965143382549286
    2. '(' → logprob: -2.169651508331299
    3. '(range' → logprob: -3.294651508331299
    4. ' range' → logprob: -5.419651508331299
    5. '(n' → logprob: -9.16965103149414
    6. 'range' → logprob: -9.29465103149414
    7. ' (' → logprob: -10.41965103149414
    8. '(len' → logprob: -11.16965103149414
    9. '(M' → logprob: -11.16965103149414
    10. '(s' → logprob: -11.66965103149414

Token 51: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.504994809627533
    2. '):' → logprob: -1.5049948692321777
    3. '+' → logprob: -2.1299948692321777
    4. '):
' → logprob: -3.0049948692321777
    5. '//' → logprob: -6.129994869232178
    6. ' -' → logprob: -6.254994869232178
    7. '):
' → logprob: -7.129994869232178
    8. ')' → logprob: -7.504994869232178
    9. '1' → logprob: -9.00499439239502
    10. ' ):' → logprob: -9.00499439239502

Token 52: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08209941536188126
    2. ' for' → logprob: -2.832099437713623
    3. ' ' → logprob: -4.207099437713623
    4. '    ' → logprob: -5.832099437713623
    5. '<|end|>' → logprob: -6.832099437713623
    6. '	for' → logprob: -8.082098960876465
    7. '    
' → logprob: -8.582098960876465
    8. 'for' → logprob: -8.832098960876465
    9. '  ' → logprob: -9.707098960876465
    10. ',' → logprob: -9.957098960876465

Token 53: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.011357495561242104
    2. 'for' (adapté à ' for') → logprob: -4.511357307434082
    3. ' ' → logprob: -8.761357307434082
    4. '   ' → logprob: -9.386357307434082
    5. ' ans' → logprob: -10.511357307434082
    6. '	for' → logprob: -11.386357307434082
    7. '    ' → logprob: -11.636357307434082
    8. ' ' → logprob: -11.886357307434082
    9. ' f' → logprob: -13.011357307434082
    10. '```' → logprob: -13.386357307434082

Token 54: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.2529238760471344
    2. 'j' → logprob: -1.502923846244812
    3. ' range' → logprob: -7.252923965454102
    4. 'range' → logprob: -8.627923965454102
    5. '_j' → logprob: -9.377923965454102
    6. ' ' → logprob: -12.002923965454102
    7. '_range' → logprob: -12.627923965454102
    8. '   ' → logprob: -13.002923965454102
    9. '	j' → logprob: -13.002923965454102
    10. '_' → logprob: -13.252923965454102

Token 55: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02157643809914589
    2. 'in' → logprob: -3.896576404571533
    3. 'range' → logprob: -7.146576404571533
    4. ' range' → logprob: -9.021576881408691
    5. ' i' → logprob: -10.521576881408691
    6. '(range' → logprob: -10.521576881408691
    7. '(i' → logprob: -10.896576881408691
    8. '<|end|>' → logprob: -11.771576881408691
    9. ' ' → logprob: -11.896576881408691
    10. 'i' → logprob: -11.896576881408691

Token 56: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4299588203430176
    2. 'range' → logprob: -1.0549588203430176
    3. '(range' → logprob: -7.179958820343018
    4. 'i' → logprob: -8.30495834350586
    5. ' i' → logprob: -8.55495834350586
    6. '_range' → logprob: -11.05495834350586
    7. '(i' → logprob: -11.30495834350586
    8. ' xrange' → logprob: -11.67995834350586
    9. '	range' → logprob: -12.05495834350586
    10. ' ' → logprob: -13.05495834350586

Token 57: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.015777897089719772
    2. '(range' → logprob: -4.515778064727783
    3. '(N' → logprob: -5.515778064727783
    4. 'range' → logprob: -8.265777587890625
    5. '(' → logprob: -8.515777587890625
    6. ' range' → logprob: -8.640777587890625
    7. '(j' → logprob: -11.640777587890625
    8. '(I' → logprob: -11.640777587890625
    9. ' (' → logprob: -11.765777587890625
    10. '[i' → logprob: -12.265777587890625

Token 58: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0026692345272749662
    2. ' +' → logprob: -6.502669334411621
    3. ',N' → logprob: -7.252669334411621
    4. ',' → logprob: -8.752669334411621
    5. '+i' → logprob: -9.127669334411621
    6. '   ' → logprob: -9.252669334411621
    7. 'N' → logprob: -10.627669334411621
    8. ' ,' → logprob: -10.877669334411621
    9. '1' → logprob: -11.127669334411621
    10. ' N' → logprob: -11.252669334411621

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002354241209104657
    2. '2' → logprob: -6.252354145050049
    3. 'N' → logprob: -8.127354621887207
    4. ' ' → logprob: -9.252354621887207
    5. '0' → logprob: -10.502354621887207
    6. ' N' → logprob: -12.877354621887207
    7. '+' → logprob: -13.127354621887207
    8. '3' → logprob: -14.127354621887207
    9. 'i' → logprob: -15.002354621887207
    10. '   ' → logprob: -15.127354621887207

Token 60: ',N' (ID: 49539)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.041753850877285004
    2. ',N' → logprob: -3.7917537689208984
    3. ',' → logprob: -4.041753768920898
    4. ' ,' → logprob: -8.291753768920898
    5. '   ' → logprob: -8.666753768920898
    6. ' +' → logprob: -9.041753768920898
    7. '+,' → logprob: -9.666753768920898
    8. 'N' → logprob: -9.916753768920898
    9. ',n' → logprob: -10.541753768920898
    10. ' N' → logprob: -10.666753768920898

Token 61: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09094320237636566
    2. '):
' → logprob: -3.0909430980682373
    3. '):' → logprob: -3.2159430980682373
    4. ':' → logprob: -7.340943336486816
    5. ' +' → logprob: -8.340943336486816
    6. ')' → logprob: -8.840943336486816
    7. '   ' → logprob: -9.215943336486816
    8. '):
' → logprob: -9.340943336486816
    9. '-' → logprob: -10.340943336486816
    10. '):

' → logprob: -11.215943336486816

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4553593695163727
    2. '+' → logprob: -1.7053593397140503
    3. '):
' → logprob: -1.9553593397140503
    4. '):' → logprob: -3.45535945892334
    5. ')' → logprob: -4.70535945892334
    6. '):

' → logprob: -7.58035945892334
    7. '   ' → logprob: -8.08035945892334
    8. ' ' → logprob: -8.70535945892334
    9. '```' → logprob: -8.83035945892334
    10. '<|end|>' → logprob: -8.83035945892334

Token 63: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010805041529238224
    2. ':' → logprob: -5.010805130004883
    3. '):
' → logprob: -5.635805130004883
    4. ')' → logprob: -7.635805130004883
    5. '   ' → logprob: -11.385805130004883
    6. '):
' → logprob: -11.510805130004883
    7. '):

' → logprob: -13.260805130004883
    8. '+' → logprob: -13.260805130004883
    9. ' ):' → logprob: -13.510805130004883
    10. ':
' → logprob: -13.885805130004883

Token 64: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07727190852165222
    2. '   ' → logprob: -2.8272719383239746
    3. '<|end|>' → logprob: -5.077271938323975
    4. ' ' → logprob: -5.827271938323975
    5. '    ' → logprob: -5.952271938323975
    6. ':' → logprob: -7.327271938323975
    7. ' if' → logprob: -7.577271938323975
    8. '
' → logprob: -7.827271938323975
    9. '    
' → logprob: -7.827271938323975
    10. '        
' → logprob: -8.577271461486816

Token 65: ' pieces' (ID: 12762)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3671994209289551
    2. ' ans' → logprob: -1.742199420928955
    3. ' ' → logprob: -2.867199420928955
    4. '           ' → logprob: -3.242199420928955
    5. ' s' → logprob: -4.867199420928955
    6. '       ' → logprob: -5.117199420928955
    7. '        ' → logprob: -5.367199420928955
    8. 'if' → logprob: -5.617199420928955
    9. ' sum' → logprob: -5.617199420928955
    10. '            ' → logprob: -6.367199420928955

Token 66: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10409421473741531
    2. ' =' → logprob: -2.3540942668914795
    3. '=len' → logprob: -6.8540940284729
    4. '=_' → logprob: -7.4790940284729
    5. '=A' → logprob: -7.6040940284729
    6. '=max' → logprob: -7.8540940284729
    7. '=sum' → logprob: -7.8540940284729
    8. '_' → logprob: -8.104094505310059
    9. '_len' → logprob: -9.229094505310059
    10. '_sum' → logprob: -9.229094505310059

Token 67: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.000701707205735147
    2. ' A' → logprob: -7.625701904296875
    3. '   ' → logprob: -9.375701904296875
    4. '0' → logprob: -10.000701904296875
    5. '           ' → logprob: -11.250701904296875
    6. 'i' → logprob: -11.625701904296875
    7. 'abs' → logprob: -11.625701904296875
    8. ']' → logprob: -12.000701904296875
    9. '(A' → logprob: -12.000701904296875
    10. 'a' → logprob: -12.500701904296875

Token 68: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.15080513060092926
    2. '[j' → logprob: -2.0258052349090576
    3. '[i' → logprob: -5.2758049964904785
    4. 'k' → logprob: -6.6508049964904785
    5. ']' → logprob: -7.7758049964904785
    6. '[' → logprob: -8.275805473327637
    7. '][' → logprob: -8.400805473327637
    8. '[l' → logprob: -8.900805473327637
    9. '[x' → logprob: -9.025805473327637
    10. '[m' → logprob: -9.025805473327637

Token 69: ']-' (ID: 27107)
  Prédit: ']-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']-' → logprob: -0.6397284865379333
    2. ']' → logprob: -0.7647284865379333
    3. '+' → logprob: -5.264728546142578
    4. '-' → logprob: -7.264728546142578
    5. ']+' → logprob: -7.639728546142578
    6. ']]' → logprob: -8.139728546142578
    7. ' ]' → logprob: -9.264728546142578
    8. ' for' → logprob: -9.264728546142578
    9. 'for' → logprob: -9.889728546142578
    10. '+k' → logprob: -10.389728546142578

Token 70: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.08439222723245621
    2. '(A' → logprob: -2.5843923091888428
    3. ' (' → logprob: -5.834392070770264
    4. ' A' → logprob: -6.584392070770264
    5. '   ' → logprob: -7.959392070770264
    6. '(' → logprob: -8.084392547607422
    7. '[A' → logprob: -8.709392547607422
    8. ' ' → logprob: -10.084392547607422
    9. '           ' → logprob: -10.209392547607422
    10. ']' → logprob: -10.896892547607422

Token 71: '[k' (ID: 14298)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0673530176281929
    2. 'i' → logprob: -2.9423530101776123
    3. '[k' → logprob: -4.817353248596191
    4. '[j' → logprob: -5.942353248596191
    5. 'k' → logprob: -7.442353248596191
    6. '[' → logprob: -8.067353248596191
    7. 'j' → logprob: -8.817353248596191
    8. 'for' → logprob: -8.942353248596191
    9. '][' → logprob: -9.317353248596191
    10. '[m' → logprob: -9.317353248596191

Token 72: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05443554371595383
    2. '[i' → logprob: -3.9294354915618896
    3. '])' → logprob: -4.554435729980469
    4. '+i' → logprob: -4.679435729980469
    5. ')' → logprob: -5.554435729980469
    6. ' for' → logprob: -6.054435729980469
    7. '+' → logprob: -6.929435729980469
    8. '-' → logprob: -6.929435729980469
    9. '<|end|>' → logprob: -7.054435729980469
    10. ')]' → logprob: -7.429435729980469

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000628683075774461
    2. '2' → logprob: -8.250628471374512
    3. ' ' → logprob: -9.375628471374512
    4. 'i' → logprob: -9.688128471374512
    5. '```' → logprob: -10.438128471374512
    6. '<|end|>' → logprob: -10.875628471374512
    7. '           ' → logprob: -11.188128471374512
    8. '   ' → logprob: -11.438128471374512
    9. '<|end|>' → logprob: -11.438128471374512
    10. 'for' → logprob: -11.688128471374512

Token 74: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.13806305825710297
    2. 'for' → logprob: -2.2630629539489746
    3. ']' → logprob: -3.7630629539489746
    4. ' ' → logprob: -6.888062953948975
    5. ')' → logprob: -8.388063430786133
    6. ' ]' → logprob: -9.263063430786133
    7. '```' → logprob: -9.638063430786133
    8. '	for' → logprob: -10.013063430786133
    9. '   ' → logprob: -10.138063430786133
    10. '
' → logprob: -10.263063430786133

Token 75: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.026659145951271057
    2. 'for' → logprob: -3.6516592502593994
    3. ' ' → logprob: -8.02665901184082
    4. '	for' → logprob: -11.65165901184082
    5. '```' → logprob: -12.27665901184082
    6. '    ' → logprob: -12.77665901184082
    7. ' ```' → logprob: -13.52665901184082
    8. '+' → logprob: -13.52665901184082
    9. '   ' → logprob: -13.65165901184082
    10. ')' → logprob: -13.65165901184082

Token 76: ' k' (ID: 372)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10031341761350632
    2. 'range' → logprob: -2.350313425064087
    3. 'k' → logprob: -9.600313186645508
    4. ' k' → logprob: -10.725313186645508
    5. '	range' → logprob: -11.350313186645508
    6. '(range' → logprob: -12.850313186645508
    7. ' xrange' → logprob: -13.100313186645508
    8. ' ' → logprob: -16.225313186645508
    9. ' ran' → logprob: -16.350313186645508
    10. '<|end|>' → logprob: -16.475313186645508

Token 77: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012589944526553154
    2. 'in' → logprob: -4.387589931488037
    3. '<|end|>' → logprob: -9.762590408325195
    4. ' ' → logprob: -11.762590408325195
    5. 'In' → logprob: -12.762590408325195
    6. 'range' → logprob: -13.262590408325195
    7. '	in' → logprob: -13.387590408325195
    8. 'to' → logprob: -13.762590408325195
    9. 'k' → logprob: -13.762590408325195
    10. '<|end|>' → logprob: -14.012590408325195

Token 78: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759509801864624
    2. ' range' → logprob: -0.8259509801864624
    3. '(range' → logprob: -11.700950622558594
    4. '	range' → logprob: -13.200950622558594
    5. '   ' → logprob: -14.700950622558594
    6. ' ' → logprob: -14.950950622558594
    7. ' xrange' → logprob: -15.450950622558594
    8. ']' → logprob: -15.950950622558594
    9. 'rang' → logprob: -16.200950622558594
    10. ' rang' → logprob: -16.825950622558594

Token 79: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.006609973032027483
    2. 'i' → logprob: -6.006609916687012
    3. '(j' → logprob: -6.131609916687012
    4. '(' → logprob: -6.756609916687012
    5. 'j' → logprob: -7.381609916687012
    6. ' i' → logprob: -9.756609916687012
    7. ' (' → logprob: -10.006609916687012
    8. '   ' → logprob: -10.256609916687012
    9. '1' → logprob: -11.631609916687012
    10. '	i' → logprob: -11.881609916687012

Token 80: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0025925389491021633
    2. ' +' → logprob: -6.25259256362915
    3. '+j' → logprob: -8.002592086791992
    4. '1' → logprob: -8.877592086791992
    5. '   ' → logprob: -9.752592086791992
    6. ' ' → logprob: -10.377592086791992
    7. '       ' → logprob: -11.252592086791992
    8. '    ' → logprob: -11.377592086791992
    9. '+k' → logprob: -11.377592086791992
    10. ',j' → logprob: -11.627592086791992

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.022155988961458206
    2. 'j' → logprob: -3.897156000137329
    3. '2' → logprob: -7.02215576171875
    4. '+' → logprob: -7.52215576171875
    5. ' ' → logprob: -9.64715576171875
    6. '   ' → logprob: -9.89715576171875
    7. 'i' → logprob: -10.77215576171875
    8. ' j' → logprob: -11.77215576171875
    9. '```' → logprob: -11.77215576171875
    10. '       ' → logprob: -12.14715576171875

Token 82: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.01878236047923565
    2. ',' → logprob: -4.143782138824463
    3. ' ,' → logprob: -6.393782138824463
    4. 'j' → logprob: -7.393782138824463
    5. ' j' → logprob: -8.393782615661621
    6. ' ' → logprob: -9.768782615661621
    7. '   ' → logprob: -9.893782615661621
    8. '    ' → logprob: -10.518782615661621
    9. '+' → logprob: -11.143782615661621
    10. '+j' → logprob: -11.143782615661621

Token 83: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.10794523358345032
    2. '+' → logprob: -2.357945203781128
    3. ')]
' → logprob: -5.857945442199707
    4. ')' → logprob: -5.982945442199707
    5. ')])' → logprob: -6.607945442199707
    6. '])' → logprob: -8.607945442199707
    7. ')]
' → logprob: -8.857945442199707
    8. ')][' → logprob: -8.857945442199707
    9. ']' → logprob: -8.982945442199707
    10. ')]

' → logprob: -9.482945442199707

Token 84: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7811785936355591
    2. ')]' → logprob: -1.156178593635559
    3. '1' → logprob: -1.656178593635559
    4. ')' → logprob: -3.6561784744262695
    5. ')]
' → logprob: -5.1561784744262695
    6. ')])' → logprob: -6.1561784744262695
    7. '2' → logprob: -6.7811784744262695
    8. ')][' → logprob: -7.9061784744262695
    9. ')],' → logprob: -8.28117847442627
    10. '])' → logprob: -8.40617847442627

Token 85: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.45500990748405457
    2. ']' → logprob: -1.080009937286377
    3. '])' → logprob: -3.830009937286377
    4. '])]' → logprob: -6.455009937286377
    5. ')])' → logprob: -6.705009937286377
    6. ')' → logprob: -7.455009937286377
    7. '       ' → logprob: -7.705009937286377
    8. ' ]' → logprob: -8.330009460449219
    9. ' ])' → logprob: -10.580009460449219
    10. ']]' → logprob: -10.705009460449219

Token 86: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31646728515625
    2. '       ' → logprob: -2.06646728515625
    3. '        
' → logprob: -2.44146728515625
    4. ' if' → logprob: -3.44146728515625
    5. '[' → logprob: -5.56646728515625
    6. 'if' → logprob: -5.94146728515625
    7. ' 
' → logprob: -5.94146728515625
    8. '        ' → logprob: -5.94146728515625
    9. '<|end|>' → logprob: -6.06646728515625
    10. '    
' → logprob: -6.31646728515625

Token 87: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.7477726936340332
    2. ' min' → logprob: -1.7477726936340332
    3. 'sum' → logprob: -1.8727726936340332
    4. '           ' → logprob: -2.372772693634033
    5. 'min' → logprob: -2.372772693634033
    6. 'max' → logprob: -2.372772693634033
    7. ' max' → logprob: -2.497772693634033
    8. '       ' → logprob: -2.997772693634033
    9. ' sum' → logprob: -3.122772693634033
    10. 'if' (adapté à ' if') → logprob: -4.372772693634033

Token 88: ' len' (ID: 4631)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.3891645669937134
    2. 'max' → logprob: -2.139164447784424
    3. ' len' → logprob: -2.514164447784424
    4. ' sum' → logprob: -2.889164447784424
    5. 'sum' → logprob: -3.639164447784424
    6. 'len' → logprob: -4.014164447784424
    7. ' min' → logprob: -4.639164447784424
    8. ' all' → logprob: -5.139164447784424
    9. 'min' → logprob: -5.389164447784424
    10. 'all' → logprob: -6.264164447784424

Token 89: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.11910517513751984
    2. '(' → logprob: -2.369105100631714
    3. '(set' → logprob: -3.994105100631714
    4. ' (' → logprob: -8.244105339050293
    5. '(piece' → logprob: -11.619105339050293
    6. '(np' → logprob: -12.244105339050293
    7. '(s' → logprob: -12.994105339050293
    8. '({' → logprob: -13.244105339050293
    9. ' ' → logprob: -13.244105339050293
    10. '(parts' → logprob: -13.369105339050293

Token 90: 'ieces' (ID: 44654)
  Prédit: 'ieces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieces' → logprob: -0.0005527943139895797
    2. '(set' → logprob: -8.500553131103516
    3. 'pieces' → logprob: -9.375553131103516
    4. '>' → logprob: -9.625553131103516
    5. '(p' → logprob: -9.750553131103516
    6. 'ices' → logprob: -10.875553131103516
    7. '(' → logprob: -11.250553131103516
    8. 'ie' → logprob: -11.625553131103516
    9. 'iece' → logprob: -11.625553131103516
    10. 'iec' → logprob: -11.625553131103516

Token 91: ')>' (ID: 37292)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.39711204171180725
    2. ' ==' → logprob: -2.1471121311187744
    3. '<=' → logprob: -2.8971121311187744
    4. '>' → logprob: -2.8971121311187744
    5. '>=' → logprob: -3.0221121311187744
    6. ' <=' → logprob: -3.7721121311187744
    7. ' >=' → logprob: -4.522111892700195
    8. ')' → logprob: -4.897111892700195
    9. ' >' → logprob: -5.022111892700195
    10. '!=' → logprob: -7.397111892700195

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10093551874160767
    2. '2' → logprob: -2.725935459136963
    3. '3' → logprob: -4.350935459136963
    4. '0' → logprob: -4.475935459136963
    5. ' ' → logprob: -5.725935459136963
    6. 'ans' → logprob: -6.225935459136963
    7. 'len' → logprob: -7.475935459136963
    8. '4' → logprob: -9.475935935974121
    9. '=' → logprob: -9.475935935974121
    10. ' ans' → logprob: -9.725935935974121

Token 93: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.233091339468956
    2. ' and' → logprob: -1.6080913543701172
    3. ':
' → logprob: -5.233091354370117
    4. 'and' → logprob: -6.108091354370117
    5. ' :' → logprob: -10.608091354370117
    6. '           ' → logprob: -11.233091354370117
    7. '       ' → logprob: -11.233091354370117
    8. '   ' → logprob: -11.483091354370117
    9. ':

' → logprob: -11.983091354370117
    10. ',' → logprob: -12.233091354370117

Token 94: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00895726028829813
    2. '<|end|>' → logprob: -5.633957386016846
    3. '            
' → logprob: -6.758957386016846
    4. '               ' → logprob: -7.133957386016846
    5. ' and' → logprob: -7.258957386016846
    6. '<|end|>' → logprob: -7.508957386016846
    7. '       ' → logprob: -7.633957386016846
    8. '
' → logprob: -8.133956909179688
    9. ':' → logprob: -8.258956909179688
    10. ',' → logprob: -8.383956909179688

Token 95: ' diff' (ID: 8868)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.787322461605072
    2. 'ans' → logprob: -1.9123225212097168
    3. ' max' → logprob: -2.412322521209717
    4. 'sum' → logprob: -2.662322521209717
    5. 'max' → logprob: -2.787322521209717
    6. ' min' → logprob: -3.287322521209717
    7. ' sum' → logprob: -3.287322521209717
    8. 'min' → logprob: -3.537322521209717
    9. 'diff' (adapté à ' diff') → logprob: -4.537322521209717
    10. 'cost' → logprob: -5.037322521209717

Token 96: '=max' (ID: 102952)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09949702769517899
    2. ' =' → logprob: -2.724497079849243
    3. '=max' → logprob: -3.599497079849243
    4. 's' → logprob: -6.849496841430664
    5. '=min' → logprob: -7.974496841430664
    6. '=sum' → logprob: -8.349496841430664
    7. '=len' → logprob: -10.349496841430664
    8. '=set' → logprob: -10.849496841430664
    9. '=int' → logprob: -10.974496841430664
    10. '_=' → logprob: -11.099496841430664

Token 97: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -3.3451433409936726e-05
    2. 'diff' → logprob: -11.625033378601074
    3. '(' → logprob: -11.875033378601074
    4. ' (' → logprob: -11.875033378601074
    5. 'pieces' → logprob: -12.250033378601074
    6. '(diff' → logprob: -13.125033378601074
    7. 'p' → logprob: -13.250033378601074
    8. '(piece' → logprob: -14.375033378601074
    9. ' pieces' → logprob: -15.125033378601074
    10. '	p' → logprob: -15.125033378601074

Token 98: 'ieces' (ID: 44654)
  Prédit: 'ieces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieces' → logprob: -0.00022082125360611826
    2. 'pieces' → logprob: -8.750221252441406
    3. 'ices' → logprob: -10.500221252441406
    4. '[' → logprob: -11.500221252441406
    5. 'i' → logprob: -12.125221252441406
    6. ')' → logprob: -13.000221252441406
    7. '[i' → logprob: -13.125221252441406
    8. '```' → logprob: -13.125221252441406
    9. 'ie' → logprob: -13.250221252441406
    10. ' pieces' → logprob: -13.500221252441406

Token 99: ')-' (ID: 14080)
  Prédit: ')-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')-' → logprob: -0.2834319770336151
    2. ')' → logprob: -1.4084320068359375
    3. ' )' → logprob: -6.7834320068359375
    4. '-' → logprob: -7.5334320068359375
    5. '-p' → logprob: -8.158432006835938
    6. ' -' → logprob: -8.283432006835938
    7. '-)' → logprob: -9.908432006835938
    8. ')-(' → logprob: -11.908432006835938
    9. '-min' → logprob: -12.658432006835938
    10. '")' → logprob: -12.783432006835938

Token 100: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -2.15310683415737e-05
    2. ' min' → logprob: -10.750021934509277
    3. '	min' → logprob: -17.50002098083496
    4. 'max' → logprob: -19.12502098083496
    5. '(min' → logprob: -19.37502098083496
    6. '-min' → logprob: -19.50002098083496
    7. '   ' → logprob: -19.75002098083496
    8. '=min' → logprob: -20.37502098083496
    9. 'mini' → logprob: -21.50002098083496
    10. ':min' → logprob: -21.62502098083496

Token 101: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -7.107425062713446e-06
    2. '(' → logprob: -11.875006675720215
    3. '(piece' → logprob: -17.37500762939453
    4. '(parts' → logprob: -17.75000762939453
    5. ' (' → logprob: -18.25000762939453
    6. '```' → logprob: -18.87500762939453
    7. '‌' → logprob: -20.00000762939453
    8. '<|end|>' → logprob: -20.12500762939453
    9. '(
' → logprob: -20.37500762939453
    10. '	p' → logprob: -20.37500762939453

Token 102: 'ieces' (ID: 44654)
  Prédit: 'ieces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieces' → logprob: -0.00018363336857873946
    2. 'pieces' → logprob: -8.625184059143066
    3. 'ices' → logprob: -12.750184059143066
    4. 'ie' → logprob: -15.000184059143066
    5. 'iec' → logprob: -15.500184059143066
    6. 'ec' → logprob: -15.750184059143066
    7. ' pieces' → logprob: -16.00018310546875
    8. 'ies' → logprob: -16.62518310546875
    9. 'e' → logprob: -16.87518310546875
    10. 'i' → logprob: -17.12518310546875

Token 103: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06629160046577454
    2. ')<=' → logprob: -3.691291570663452
    3. ')>' → logprob: -3.941291570663452
    4. '<=' → logprob: -5.191291809082031
    5. ')==' → logprob: -5.816291809082031
    6. '>' → logprob: -5.941291809082031
    7. ' <=' → logprob: -6.441291809082031
    8. ' )' → logprob: -6.441291809082031
    9. ')<' → logprob: -6.691291809082031
    10. ')
' → logprob: -7.066291809082031

Token 104: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0037528136745095253
    2. '<|end|>' → logprob: -6.128752708435059
    3. '               ' → logprob: -7.503752708435059
    4. '            
' → logprob: -7.878752708435059
    5. '       ' → logprob: -8.003752708435059
    6. '<|end|>' → logprob: -9.378752708435059
    7. '          ' → logprob: -10.503752708435059
    8. ' 
' → logprob: -10.628752708435059
    9. '
' → logprob: -11.003752708435059
    10. '   ' → logprob: -11.128752708435059

Token 105: ' if' (ID: 538)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.28365883231163025
    2. 'if' (adapté à ' if') → logprob: -1.5336588621139526
    3. ' if' → logprob: -4.158658981323242
    4. ' ans' → logprob: -4.408658981323242
    5. '           ' → logprob: -5.908658981323242
    6. '   ' → logprob: -7.783658981323242
    7. '	ans' → logprob: -9.033658981323242
    8. '       ' → logprob: -9.783658981323242
    9. ' ' → logprob: -10.033658981323242
    10. '
' → logprob: -10.658658981323242

Token 106: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.42896851897239685
    2. 'diff' → logprob: -1.0539685487747192
    3. '	diff' → logprob: -8.55396842956543
    4. '(diff' → logprob: -9.92896842956543
    5. ' ans' → logprob: -11.30396842956543
    6. 'ans' → logprob: -12.05396842956543
    7. ' ' → logprob: -12.42896842956543
    8. ' ' → logprob: -13.67896842956543
    9. '   ' → logprob: -13.67896842956543
    10. 'd' → logprob: -14.92896842956543

Token 107: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.12695182859897614
    2. ' <' → logprob: -2.1269519329071045
    3. '<int' → logprob: -12.251952171325684
    4. '<=' → logprob: -12.751952171325684
    5. ' ' → logprob: -12.876952171325684
    6. '<std' → logprob: -13.751952171325684
    7. '<
' → logprob: -13.876952171325684
    8. '<len' → logprob: -13.876952171325684
    9. ' ans' → logprob: -14.126952171325684
    10. ' <=' → logprob: -14.251952171325684

Token 108: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00023095356300473213
    2. ' ans' → logprob: -8.37523078918457
    3. '	ans' → logprob: -15.25023078918457
    4. '(ans' → logprob: -17.25023078918457
    5. '   ' → logprob: -17.37523078918457
    6. ' ' → logprob: -18.25023078918457
    7. 'answer' → logprob: -18.75023078918457
    8. '_ans' → logprob: -18.87523078918457
    9. '  ' → logprob: -19.62523078918457
    10. '```' → logprob: -19.75023078918457

Token 109: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18014730513095856
    2. ':
' → logprob: -1.8051472902297974
    3. '           ' → logprob: -8.555147171020508
    4. '               ' → logprob: -9.055147171020508
    5. '       ' → logprob: -10.555147171020508
    6. '):
' → logprob: -10.805147171020508
    7. '   ' → logprob: -11.055147171020508
    8. '                   ' → logprob: -12.055147171020508
    9. ':
' → logprob: -12.305147171020508
    10. '<|end|>' → logprob: -12.430147171020508

Token 110: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05255249887704849
    2. '           ' → logprob: -3.0525524616241455
    3. ' ans' → logprob: -6.427552700042725
    4. 'ans' → logprob: -6.927552700042725
    5. '       ' → logprob: -8.052552223205566
    6. '                   ' → logprob: -8.052552223205566
    7. '	ans' → logprob: -8.427552223205566
    8. '   ' → logprob: -8.677552223205566
    9. '
' → logprob: -9.552552223205566
    10. '<|end|>' → logprob: -9.927552223205566

Token 111: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.2961188852787018
    2. 'ans' (adapté à ' ans') → logprob: -1.7961188554763794
    3. '               ' → logprob: -2.421118974685669
    4. '                   ' → logprob: -6.92111873626709
    5. '	ans' → logprob: -7.92111873626709
    6. '           ' → logprob: -9.29611873626709
    7. '   ' → logprob: -10.29611873626709
    8. '(ans' → logprob: -11.04611873626709
    9. '                ' → logprob: -11.92111873626709
    10. 'answer' → logprob: -12.04611873626709

Token 112: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759466886520386
    2. ' =' → logprob: -0.8259466886520386
    3. '=d' → logprob: -12.075946807861328
    4. '＝' → logprob: -14.450946807861328
    5. '=

' → logprob: -15.575946807861328
    6. '=f' → logprob: -16.325946807861328
    7. '=cut' → logprob: -16.325946807861328
    8. 'diff' → logprob: -16.450946807861328
    9. '=max' → logprob: -16.575946807861328
    10. ' diff' → logprob: -16.700946807861328

Token 113: 'diff' (ID: 31460)
  Prédit: 'diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.0003362966235727072
    2. ' diff' → logprob: -8.000336647033691
    3. '	diff' → logprob: -14.000336647033691
    4. '(diff' → logprob: -17.875335693359375
    5. 'difference' → logprob: -18.250335693359375
    6. '   ' → logprob: -18.375335693359375
    7. '           ' → logprob: -18.500335693359375
    8. 'd' → logprob: -18.500335693359375
    9. 'dif' → logprob: -18.625335693359375
    10. '               ' → logprob: -20.625335693359375

Token 114: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0004413975402712822
    2. '
' → logprob: -8.000441551208496
    3. ')' → logprob: -9.625441551208496
    4. ' print' → logprob: -10.500441551208496
    5. '<|end|>' → logprob: -11.750441551208496
    6. '#print' → logprob: -13.750441551208496
    7. '```' → logprob: -14.000441551208496
    8. '(print' → logprob: -14.375441551208496
    9. ')
' → logprob: -15.250441551208496
    10. '\n' → logprob: -15.375441551208496

Token 115: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00013512482109945267
    2. ' print' → logprob: -9.50013542175293
    3. '
' → logprob: -10.25013542175293
    4. '<|end|>' → logprob: -11.25013542175293
    5. '```' → logprob: -11.75013542175293
    6. ')' → logprob: -12.87513542175293
    7. '   ' → logprob: -14.87513542175293
    8. '#print' → logprob: -15.50013542175293
    9. 'for' → logprob: -16.00013542175293
    10. '       ' → logprob: -16.25013542175293

Token 116: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -5.676981345459353e-06
    2. 'ans' → logprob: -12.250005722045898
    3. '(' → logprob: -14.125005722045898
    4. '(answer' → logprob: -17.7500057220459
    5. '(abs' → logprob: -17.7500057220459
    6. ' (' → logprob: -18.5000057220459
    7. '	ans' → logprob: -18.8750057220459
    8. '()' → logprob: -19.3750057220459
    9. '(
' → logprob: -19.6250057220459
    10. ' ans' → logprob: -20.0000057220459

Token 117: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ' )' → logprob: -14.250000953674316
    3. ')
' → logprob: -15.125000953674316
    4. '))' → logprob: -16.750001907348633
    5. ')`' → logprob: -18.375001907348633
    6. '')' → logprob: -18.625001907348633
    7. '）' → logprob: -19.000001907348633
    8. '`)' → logprob: -19.500001907348633
    9. ')}' → logprob: -19.625001907348633
    10. '+' → logprob: -19.875001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 115
Tokens correctement prédits (1ère position, stricte): 66
Tokens correctement prédits (1ère position, avec adaptation): 67
Tokens correctement prédits (top 10): 99
Précision stricte (1ère position): 57.39%
Précision adaptée (1ère position): 58.26%
Précision (top 10): 86.09%
================================================================================
