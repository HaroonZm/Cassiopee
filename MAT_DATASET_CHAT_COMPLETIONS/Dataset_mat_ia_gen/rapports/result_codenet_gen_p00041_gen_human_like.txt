================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:17:01
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from itertools import permutations, product
import sys

ops = ['+', '-', '*']

def eval_expr(expr):
    try:
        return eval(expr)
    except:
        return None

def generate_exprs(nums):
    # Generate all valid expressions with three operators and four numbers with parentheses
    a, b, c, d = nums
    op_combinations = product(ops, repeat=3)
    # Different ways to parenthesize four numbers with three operators (only 5 ways)
    patterns = [
        '(({} {} {}) {} {}) {} {}',
        '({} {} ({} {} {})) {} {}',
        '{} {} (({} {} {}) {} {})',
        '{} {} ({} {} ({} {} {}))',
        '({} {} {}) {} ({} {} {})',
    ]
    for ops_choice in op_combinations:
        for pat in patterns:
            expr = pat.format(a, ops_choice[0], b, ops_choice[1], c, ops_choice[2], d)
            if len(expr) > 1024:
                continue
            val = eval_expr(expr)
            if val == 10:
                return expr
    return None

def main():
    for line in sys.stdin:
        if not line.strip():
            continue
        parts = line.strip().split()
        if len(parts) != 4:
            continue
        nums = tuple(map(int, parts))
        if nums == (0,0,0,0):
            break
        found = None
        for perm in permutations(nums):
            res = generate_exprs(perm)
            if res is not None:
                found = res
                break
        if found:
            print(found)
        else:
            print(0)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' permutations' (ID: 174595)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.858132541179657
    2. 'per' → logprob: -1.6081326007843018
    3. 'com' → logprob: -1.8581326007843018
    4. 'count' → logprob: -2.2331326007843018
    5. 'cycle' → logprob: -3.1081326007843018
    6. 'group' → logprob: -3.2331326007843018
    7. 'chain' → logprob: -4.233132362365723
    8. ' permutations' → logprob: -5.358132362365723
    9. ' product' → logprob: -5.483132362365723
    10. ' cycle' → logprob: -6.608132362365723

Token 4: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -3.523948907968588e-05
    2. '\(' → logprob: -11.000035285949707
    3. '(
' → logprob: -12.000035285949707
    4. '.' → logprob: -12.500035285949707
    5. '```' → logprob: -13.500035285949707
    6. '`' → logprob: -13.875035285949707
    7. ''' → logprob: -14.000035285949707
    8. ' (' → logprob: -14.375035285949707
    9. '()' → logprob: -14.625035285949707
    10. 'a' → logprob: -14.875035285949707

Token 5: ' product' (ID: 1888)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.4717870354652405
    2. ' combinations' → logprob: -1.3467869758605957
    3. ' product' → logprob: -2.4717869758605957
    4. 'product' → logprob: -3.4717869758605957
    5. ' group' → logprob: -8.846787452697754
    6. '```' → logprob: -9.346787452697754
    7. '	com' → logprob: -9.471787452697754
    8. ' combination' → logprob: -9.971787452697754
    9. 'chain' → logprob: -10.221787452697754
    10. 'group' → logprob: -10.346787452697754

Token 6: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002258277963846922
    2. ' (' → logprob: -10.000226020812988
    3. '\(' → logprob: -10.125226020812988
    4. '(
' → logprob: -10.250226020812988
    5. '.' → logprob: -10.500226020812988
    6. ',' → logprob: -10.750226020812988
    7. '[' → logprob: -11.375226020812988
    8. '\' → logprob: -11.875226020812988
    9. 'a' → logprob: -12.125226020812988
    10. 'def' → logprob: -12.250226020812988

Token 7: 'import' (ID: 561)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0014460684033110738
    2. '(
' → logprob: -6.62644624710083
    3. '\(' → logprob: -9.876445770263672
    4. ',' → logprob: -11.501445770263672
    5. '```' → logprob: -11.751445770263672
    6. '\' → logprob: -11.751445770263672
    7. 'a' → logprob: -11.876445770263672
    8. '(

' → logprob: -12.376445770263672
    9. '[' → logprob: -12.626445770263672
    10. '#' → logprob: -12.626445770263672

Token 8: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -1.0886125564575195
    2. ' os' → logprob: -1.2136125564575195
    3. ' math' → logprob: -1.7136125564575195
    4. ' itertools' → logprob: -1.8386125564575195
    5. ' random' → logprob: -4.2136125564575195
    6. ' numpy' → logprob: -5.0886125564575195
    7. ' re' → logprob: -5.8386125564575195
    8. ' collections' → logprob: -6.3386125564575195
    9. ' pandas' → logprob: -7.7136125564575195
    10. 'os' → logprob: -8.33861255645752

Token 9: '

' (ID: 279)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.49193236231803894
    2. '\n' → logprob: -1.8669323921203613
    3. '
' → logprob: -2.6169323921203613
    4. '```' → logprob: -2.7419323921203613
    5. '.' → logprob: -4.116932392120361
    6. '(' → logprob: -4.116932392120361
    7. 'def' → logprob: -4.366932392120361
    8. 'for' → logprob: -4.491932392120361
    9. 'import' → logprob: -5.366932392120361
    10. 'print' → logprob: -5.366932392120361

Token 10: 'ops' (ID: 4645)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2851070165634155
    2. 'f' → logprob: -2.160107135772705
    3. 'n' → logprob: -2.160107135772705
    4. '#' → logprob: -2.410107135772705
    5. '`' → logprob: -2.660107135772705
    6. 'd' → logprob: -2.785107135772705
    7. '\' → logprob: -3.035107135772705
    8. '.' → logprob: -3.035107135772705
    9. '=' → logprob: -3.285107135772705
    10. ',' → logprob: -3.535107135772705

Token 11: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22955209016799927
    2. '=' → logprob: -1.8545520305633545
    3. '.' → logprob: -3.7295520305633545
    4. '[' → logprob: -3.8545520305633545
    5. ' ' → logprob: -6.979552268981934
    6. '_' → logprob: -7.104552268981934
    7. ')' → logprob: -7.854552268981934
    8. '(' → logprob: -7.854552268981934
    9. ' .' → logprob: -8.604552268981934
    10. '_space' → logprob: -9.354552268981934

Token 12: ' ['' (ID: 5140)
  Prédit: ' [''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ['' → logprob: -0.2883760333061218
    2. '['' → logprob: -1.4133760929107666
    3. '["' → logprob: -5.6633758544921875
    4. ' ["' → logprob: -6.2883758544921875
    5. ' [' → logprob: -7.1633758544921875
    6. '[' → logprob: -7.6633758544921875
    7. ' '' → logprob: -8.663375854492188
    8. ''' → logprob: -8.788375854492188
    9. ' ' → logprob: -9.663375854492188
    10. '"' → logprob: -9.663375854492188

Token 13: '+',' (ID: 141314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10621946305036545
    2. ''' → logprob: -3.481219530105591
    3. ''+' → logprob: -3.606219530105591
    4. '+',' → logprob: -3.856219530105591
    5. '*' → logprob: -4.856219291687012
    6. '',' → logprob: -4.981219291687012
    7. ' ',' → logprob: -6.731219291687012
    8. '+,' → logprob: -6.856219291687012
    9. ' '+' → logprob: -6.856219291687012
    10. ' +' → logprob: -7.106219291687012

Token 14: ' '-',' (ID: 124266)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.04972069337964058
    2. ' '-',' → logprob: -3.1747207641601562
    3. ' '-' → logprob: -5.424720764160156
    4. ''' → logprob: -6.549720764160156
    5. ''*' → logprob: -7.799720764160156
    6. '-' → logprob: -8.799720764160156
    7. ' '-')' → logprob: -9.174720764160156
    8. ' '-'' → logprob: -9.299720764160156
    9. ' '' → logprob: -10.049720764160156
    10. ' '*' → logprob: -10.424720764160156

Token 15: ' '*' (ID: 34958)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''*' → logprob: -0.2503667175769806
    2. ' '*' → logprob: -1.6253666877746582
    3. ''' → logprob: -4.375366687774658
    4. ' '*'' → logprob: -5.000366687774658
    5. ' '' → logprob: -5.250366687774658
    6. '*' → logprob: -10.750367164611816
    7. '"*' → logprob: -11.125367164611816
    8. ''s' → logprob: -11.625367164611816
    9. '('*' → logprob: -11.875367164611816
    10. '',' → logprob: -12.000367164611816

Token 16: '']

' (ID: 36979)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '',' → logprob: -0.04204731062054634
    2. '']' → logprob: -3.7920472621917725
    3. '/' → logprob: -4.542047500610352
    4. '/',' → logprob: -5.292047500610352
    5. ',' → logprob: -6.042047500610352
    6. '','' → logprob: -8.667047500610352
    7. '*' → logprob: -9.417047500610352
    8. ']' → logprob: -9.542047500610352
    9. ''' → logprob: -9.667047500610352
    10. ' ',' → logprob: -9.792047500610352

Token 17: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005022879224270582
    2. ' for' → logprob: -5.380023002624512
    3. '
' → logprob: -8.880023002624512
    4. '```' → logprob: -10.005023002624512
    5. '\n' → logprob: -10.130023002624512
    6. ',' → logprob: -10.255023002624512
    7. '(
' → logprob: -10.505023002624512
    8. '(' → logprob: -10.755023002624512
    9. '[' → logprob: -10.880023002624512
    10. '#' → logprob: -11.505023002624512

Token 18: ' eval' (ID: 29383)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.7095345258712769
    2. ' calc' → logprob: -1.3345345258712769
    3. ' evaluate' → logprob: -2.0845346450805664
    4. ' apply' → logprob: -2.8345346450805664
    5. ' generate' → logprob: -3.9595346450805664
    6. ' solve' → logprob: -4.209534645080566
    7. ' eval' → logprob: -4.334534645080566
    8. ' compute' → logprob: -4.834534645080566
    9. ' ' → logprob: -6.709534645080566
    10. ' main' → logprob: -6.709534645080566

Token 19: '_expr' (ID: 53654)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.15419188141822815
    2. '(' → logprob: -2.0291919708251953
    3. '_expr' → logprob: -5.154191970825195
    4. '_expression' → logprob: -6.029191970825195
    5. '_(' → logprob: -7.404191970825195
    6. '_operand' → logprob: -7.654191970825195
    7. '(expression' → logprob: -8.154191970825195
    8. 'uate' → logprob: -8.779191970825195
    9. '_e' → logprob: -8.779191970825195
    10. '_op' → logprob: -8.904191970825195

Token 20: '(expr' (ID: 78746)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20627398788928986
    2. '(expr' → logprob: -2.0812740325927734
    3. '(expression' → logprob: -2.9562740325927734
    4. ' (' → logprob: -5.331274032592773
    5. '(node' → logprob: -6.706274032592773
    6. '("("' → logprob: -7.581274032592773
    7. '(x' → logprob: -7.956274032592773
    8. '('' → logprob: -8.206274032592773
    9. '(paren' → logprob: -8.206274032592773
    10. '(token' → logprob: -8.206274032592773

Token 21: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04921172559261322
    2. ')' → logprob: -3.0492117404937744
    3. '):
' → logprob: -8.049211502075195
    4. '[' → logprob: -8.674211502075195
    5. ',' → logprob: -9.924211502075195
    6. ' ):' → logprob: -10.549211502075195
    7. '(' → logprob: -11.799211502075195
    8. '_tokens' → logprob: -12.049211502075195
    9. ''):' → logprob: -12.174211502075195
    10. '_token' → logprob: -12.424211502075195

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5011654496192932
    2. ' return' → logprob: -1.3761653900146484
    3. '(' → logprob: -2.6261653900146484
    4. 'return' → logprob: -3.0011653900146484
    5. ' (' → logprob: -5.376165390014648
    6. '    ' → logprob: -5.751165390014648
    7. ' ' → logprob: -6.126165390014648
    8. '(eval' → logprob: -6.876165390014648
    9. ')' → logprob: -7.126165390014648
    10. '):' → logprob: -7.126165390014648

Token 23: ' try' (ID: 2075)
  Prédit: ' try'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' try' → logprob: -0.10284870862960815
    2. '   ' → logprob: -2.602848768234253
    3. 'try' (adapté à ' try') → logprob: -3.977848768234253
    4. ' return' → logprob: -5.477848529815674
    5. '	try' → logprob: -7.977848529815674
    6. 'return' → logprob: -8.852849006652832
    7. '```' → logprob: -8.977849006652832
    8. ' 
' → logprob: -9.977849006652832
    9. '    
' → logprob: -10.102849006652832
    10. '
' → logprob: -10.227849006652832

Token 24: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005181243759579957
    2. ':
' → logprob: -8.125517845153809
    3. '<|end|>' → logprob: -9.250517845153809
    4. ' :' → logprob: -9.375517845153809
    5. ':return' → logprob: -10.500517845153809
    6. '):' → logprob: -12.250517845153809
    7. '<|end|>' → logprob: -12.875517845153809
    8. ':**' → logprob: -14.250517845153809
    9. ':

' → logprob: -14.250517845153809
    10. '>:' → logprob: -14.750517845153809

Token 25: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7130917906761169
    2. '       ' → logprob: -0.9630917906761169
    3. ':
' → logprob: -2.2130918502807617
    4. ':return' → logprob: -4.963091850280762
    5. '   ' → logprob: -5.088091850280762
    6. ' return' → logprob: -6.213091850280762
    7. 'return' → logprob: -6.963091850280762
    8. ' :' → logprob: -7.713091850280762
    9. '<|end|>' → logprob: -8.213091850280762
    10. '
' → logprob: -8.338091850280762

Token 26: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.10081459581851959
    2. 'return' (adapté à ' return') → logprob: -2.3508145809173584
    3. '           ' → logprob: -8.350814819335938
    4. ' eval' → logprob: -8.725814819335938
    5. '   ' → logprob: -9.725814819335938
    6. 'eval' → logprob: -9.850814819335938
    7. '       ' → logprob: -9.975814819335938
    8. '	return' → logprob: -10.850814819335938
    9. '{return' → logprob: -11.350814819335938
    10. 'result' → logprob: -12.600814819335938

Token 27: ' eval' (ID: 29383)
  Prédit: ' eval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' eval' → logprob: -0.06199771910905838
    2. 'eval' → logprob: -2.811997652053833
    3. '(eval' → logprob: -10.436997413635254
    4. ' int' → logprob: -15.311997413635254
    5. ' float' → logprob: -15.561997413635254
    6. '.eval' → logprob: -16.18699836730957
    7. ' ' → logprob: -16.93699836730957
    8. 'int' → logprob: -16.93699836730957
    9. 'float' → logprob: -17.93699836730957
    10. ' ' → logprob: -18.06199836730957

Token 28: '(expr' (ID: 78746)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08058569580316544
    2. '(expr' → logprob: -2.5805857181549072
    3. '('' → logprob: -6.830585479736328
    4. '(expression' → logprob: -8.080585479736328
    5. '("("' → logprob: -8.580585479736328
    6. '(eval' → logprob: -10.080585479736328
    7. '(
' → logprob: -10.705585479736328
    8. '(EXPR' → logprob: -11.080585479736328
    9. '(express' → logprob: -11.830585479736328
    10. 'expr' → logprob: -12.205585479736328

Token 29: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.7888184528565034e-05
    2. ' )' → logprob: -10.8750581741333
    3. '))' → logprob: -10.8750581741333
    4. ')
' → logprob: -11.3750581741333
    5. '   ' → logprob: -13.2500581741333
    6. '       ' → logprob: -13.6250581741333
    7. '`)' → logprob: -13.8750581741333
    8. ')))' → logprob: -14.0000581741333
    9. '')' → logprob: -14.1250581741333
    10. '")' → logprob: -14.5000581741333

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17131368815898895
    2. ' except' → logprob: -2.421313762664795
    3. '	except' → logprob: -3.296313762664795
    4. 'except' → logprob: -3.921313762664795
    5. '
' → logprob: -4.671313762664795
    6. '    
' → logprob: -6.421313762664795
    7. '       ' → logprob: -8.921313285827637
    8. '<|end|>' → logprob: -9.046313285827637
    9. '    ' → logprob: -9.296313285827637
    10. '\n' → logprob: -9.671313285827637

Token 31: ' except' (ID: 6384)
  Prédit: ' except'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' except' → logprob: -0.7660977244377136
    2. '   ' → logprob: -0.8910977244377136
    3. 'except' (adapté à ' except') → logprob: -2.2660977840423584
    4. '	except' → logprob: -4.391097545623779
    5. '
' → logprob: -5.266097545623779
    6. '       ' → logprob: -6.891097545623779
    7. '    
' → logprob: -7.016097545623779
    8. ' ' → logprob: -7.766097545623779
    9. '    ' → logprob: -8.016098022460938
    10. ')' → logprob: -8.266098022460938

Token 32: ':
' (ID: 734)
  Prédit: ' Exception'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Exception' → logprob: -0.004363778978586197
    2. '(Exception' → logprob: -6.379364013671875
    3. 'Exception' → logprob: -6.629364013671875
    4. ' Zero' → logprob: -7.254364013671875
    5. ':' → logprob: -8.254364013671875
    6. ' ' → logprob: -8.504364013671875
    7. ' (' → logprob: -9.129364013671875
    8. '<|end|>' → logprob: -10.629364013671875
    9. 'Zero' → logprob: -11.629364013671875
    10. '(' → logprob: -11.879364013671875

Token 33: '       ' (ID: 309)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.022522861137986183
    2. ' return' → logprob: -4.647522926330566
    3. ' ' → logprob: -5.522522926330566
    4. ' ' → logprob: -5.522522926330566
    5. '       ' → logprob: -6.397522926330566
    6. 'None' → logprob: -6.897522926330566
    7. '0' → logprob: -7.022522926330566
    8. '        ' → logprob: -8.272522926330566
    9. ' pass' → logprob: -8.397522926330566
    10. 'return' → logprob: -9.147522926330566

Token 34: ' return' (ID: 622)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.04861121252179146
    2. 'None' → logprob: -3.0486111640930176
    3. ' return' → logprob: -10.923611640930176
    4. '0' → logprob: -13.048611640930176
    5. 'return' (adapté à ' return') → logprob: -13.048611640930176
    6. ' ' → logprob: -14.298611640930176
    7. '   ' → logprob: -15.298611640930176
    8. ' pass' → logprob: -15.298611640930176
    9. '       ' → logprob: -16.04861068725586
    10. '(None' → logprob: -16.79861068725586

Token 35: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.2014244645833969
    2. 'None' → logprob: -1.701424479484558
    3. ' ' → logprob: -11.576424598693848
    4. '0' → logprob: -13.951424598693848
    5. ' float' → logprob: -15.451424598693848
    6. '_None' → logprob: -15.576424598693848
    7. 'float' → logprob: -15.701424598693848
    8. ' False' → logprob: -16.70142364501953
    9. 'False' → logprob: -16.70142364501953
    10. '   ' → logprob: -16.82642364501953

Token 36: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.016523312777280807
    2. '\n' → logprob: -5.016523361206055
    3. '

' → logprob: -5.141523361206055
    4. '<|end|>' → logprob: -6.266523361206055
    5. '
' → logprob: -7.641523361206055
    6. 'newline' → logprob: -7.891523361206055
    7. '\' → logprob: -8.266523361206055
    8. '' → logprob: -8.391523361206055
    9. '    
' → logprob: -8.891523361206055
    10. '```' → logprob: -8.891523361206055

Token 37: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0076735019683838
    2. '

' → logprob: -1.1326735019683838
    3. '
' → logprob: -1.6326735019683838
    4. 'for' → logprob: -3.007673501968384
    5. '\n' → logprob: -3.257673501968384
    6. '\' → logprob: -4.132673263549805
    7. 'expr' → logprob: -5.882673263549805
    8. ' 

' → logprob: -6.632673263549805
    9. '#' → logprob: -6.882673263549805
    10. '```' → logprob: -6.882673263549805

Token 38: ' generate' (ID: 10419)
  Prédit: ' generate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' generate' → logprob: -0.11382516473531723
    2. ' calculate' → logprob: -3.2388250827789307
    3. ' solve' → logprob: -4.61382532119751
    4. ' evaluate' → logprob: -4.73882532119751
    5. ' calc' → logprob: -4.98882532119751
    6. ' get' → logprob: -5.48882532119751
    7. ' compute' → logprob: -5.48882532119751
    8. ' perm' → logprob: -5.61382532119751
    9. ' find' → logprob: -5.73882532119751
    10. ' combine' → logprob: -5.86382532119751

Token 39: '_expr' (ID: 53654)
  Prédit: '_ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ex' → logprob: -0.7918567061424255
    2. '_per' → logprob: -1.4168567657470703
    3. '_expr' → logprob: -1.9168567657470703
    4. '_' → logprob: -2.4168567657470703
    5. '_all' → logprob: -4.54185676574707
    6. '_expression' → logprob: -4.54185676574707
    7. '(' → logprob: -4.91685676574707
    8. '_s' → logprob: -5.29185676574707
    9. '_vari' → logprob: -5.41685676574707
    10. '_com' → logprob: -5.54185676574707

Token 40: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.007290935609489679
    2. 'utations' → logprob: -5.132290840148926
    3. '(' → logprob: -7.132290840148926
    4. '(s' → logprob: -7.882290840148926
    5. 'utions' → logprob: -8.882290840148926
    6. 'urations' → logprob: -11.382290840148926
    7. 'initions' → logprob: -12.257290840148926
    8. '(expr' → logprob: -12.257290840148926
    9. 'ations' → logprob: -12.382290840148926
    10. '(express' → logprob: -13.382290840148926

Token 41: '(nums' (ID: 40372)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7703042030334473
    2. '(nums' → logprob: -1.5203042030334473
    3. '(numbers' → logprob: -1.6453042030334473
    4. '(chars' → logprob: -3.6453042030334473
    5. '(tokens' → logprob: -3.7703042030334473
    6. '(parts' → logprob: -4.520304203033447
    7. '(elements' → logprob: -4.645304203033447
    8. '(strings' → logprob: -5.020304203033447
    9. '(n' → logprob: -5.145304203033447
    10. '(number' → logprob: -5.270304203033447

Token 42: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00037442712346091866
    2. ' ,' → logprob: -8.375374794006348
    3. '):' → logprob: -8.875374794006348
    4. ',n' → logprob: -13.625374794006348
    5. ',num' → logprob: -14.125374794006348
    6. ' ):' → logprob: -14.875374794006348
    7. ')' → logprob: -14.875374794006348
    8. ':' → logprob: -15.125374794006348
    9. '‌,' → logprob: -16.12537384033203
    10. ',size' → logprob: -16.50037384033203

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002063068561255932
    2. ' for' → logprob: -6.502063274383545
    3. 'for' → logprob: -8.002062797546387
    4. ':' → logprob: -9.127062797546387
    5. '    
' → logprob: -10.377062797546387
    6. ' if' → logprob: -11.002062797546387
    7. '   ' → logprob: -11.127062797546387
    8. ',' → logprob: -11.377062797546387
    9. '```' → logprob: -12.252062797546387
    10. 'n' → logprob: -12.627062797546387

Token 44: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6186246275901794
    2. ' if' → logprob: -1.7436246871948242
    3. '   ' → logprob: -2.493624687194824
    4. 'for' → logprob: -2.743624687194824
    5. ' expr' → logprob: -3.243624687194824
    6. ' results' → logprob: -3.368624687194824
    7. ' res' → logprob: -3.618624687194824
    8. 'expr' → logprob: -4.118624687194824
    9. 'if' → logprob: -4.868624687194824
    10. 'results' → logprob: -4.993624687194824

Token 45: ' Generate' (ID: 33886)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.39102301001548767
    2. ' if' → logprob: -1.89102303981781
    3. 'for' → logprob: -2.1410229206085205
    4. 'if' → logprob: -4.5160231590271
    5. ' n' → logprob: -4.6410231590271
    6. 'n' → logprob: -5.3910231590271
    7. ' res' → logprob: -5.8910231590271
    8. ' return' → logprob: -6.0160231590271
    9. ' expr' → logprob: -6.1410231590271
    10. 'expr' → logprob: -6.2660231590271

Token 46: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.14446072280406952
    2. ' permutations' → logprob: -3.269460678100586
    3. 'from' → logprob: -3.894460678100586
    4. ' from' → logprob: -3.894460678100586
    5. 'all' → logprob: -4.394460678100586
    6. '   ' → logprob: -4.894460678100586
    7. ' ' → logprob: -5.269460678100586
    8. ' perms' → logprob: -5.394460678100586
    9. ' nums' → logprob: -5.519460678100586
    10. ' for' → logprob: -5.644460678100586

Token 47: ' valid' (ID: 4529)
  Prédit: ' permutations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.0771159827709198
    2. ' possible' → logprob: -3.327116012573242
    3. '   ' → logprob: -4.077116012573242
    4. 'possible' → logprob: -5.077116012573242
    5. 'per' → logprob: -5.327116012573242
    6. ' perm' → logprob: -6.327116012573242
    7. ' perms' → logprob: -6.577116012573242
    8. 'ops' → logprob: -6.827116012573242
    9. ' ' → logprob: -7.202116012573242
    10. ' ops' → logprob: -7.202116012573242

Token 48: ' expressions' (ID: 43578)
  Prédit: ' expressions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' expressions' → logprob: -0.7290796637535095
    2. 'express' → logprob: -0.9790796637535095
    3. ' parent' → logprob: -2.8540797233581543
    4. ' parentheses' → logprob: -3.3540797233581543
    5. ' expr' → logprob: -4.354079723358154
    6. 'expr' → logprob: -4.479079723358154
    7. 'parent' → logprob: -5.354079723358154
    8. '(express' → logprob: -5.479079723358154
    9. ' ' → logprob: -5.604079723358154
    10. ' combinations' → logprob: -5.854079723358154

Token 49: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4605565071105957
    2. '(' → logprob: -1.4605565071105957
    3. 's' → logprob: -3.5855565071105957
    4. ' for' → logprob: -3.8355565071105957
    5. ' (' → logprob: -3.9605565071105957
    6. '(nums' → logprob: -4.085556507110596
    7. '    ' → logprob: -4.585556507110596
    8. ':' → logprob: -4.835556507110596
    9. ' ' → logprob: -5.335556507110596
    10. ' with' → logprob: -5.710556507110596

Token 50: ' three' (ID: 3407)
  Prédit: ' nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nums' → logprob: -0.893347978591919
    2. 'nums' → logprob: -1.393347978591919
    3. 'ops' → logprob: -1.893347978591919
    4. ' the' → logprob: -3.143347978591919
    5. ' ops' → logprob: -3.143347978591919
    6. ' ' → logprob: -3.643347978591919
    7. ' permutations' → logprob: -4.39334774017334
    8. ' all' → logprob: -4.64334774017334
    9. ' parentheses' → logprob: -4.76834774017334
    10. 'the' → logprob: -4.89334774017334

Token 51: ' operators' (ID: 29893)
  Prédit: ' numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.2973179221153259
    2. 'numbers' → logprob: -2.0473179817199707
    3. 'nums' → logprob: -2.5473179817199707
    4. ' nums' → logprob: -3.1723179817199707
    5. ' operands' → logprob: -6.047317981719971
    6. ' tokens' → logprob: -6.422317981719971
    7. 'tokens' → logprob: -6.797317981719971
    8. ' elements' → logprob: -7.547317981719971
    9. ' ' → logprob: -8.047317504882812
    10. ' operators' → logprob: -8.172317504882812

Token 52: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.562730610370636
    2. ' and' → logprob: -1.4377305507659912
    3. ',' → logprob: -2.562730550765991
    4. '(' → logprob: -2.937730550765991
    5. 's' → logprob: -4.31273078918457
    6. ' for' → logprob: -4.43773078918457
    7. ' ' → logprob: -5.31273078918457
    8. ' (' → logprob: -5.43773078918457
    9. '(s' → logprob: -5.68773078918457
    10. ' ,' → logprob: -5.81273078918457

Token 53: ' four' (ID: 4242)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -1.1539092063903809
    2. ' two' → logprob: -1.5289092063903809
    3. ' four' → logprob: -1.5289092063903809
    4. 'four' → logprob: -2.278909206390381
    5. 'three' → logprob: -2.653909206390381
    6. ' three' → logprob: -2.778909206390381
    7. ' ' → logprob: -4.778909206390381
    8. 'nums' → logprob: -6.153909206390381
    9. 'all' → logprob: -6.653909206390381
    10. 'numbers' → logprob: -7.028909206390381

Token 54: ' numbers' (ID: 8663)
  Prédit: ' numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.2711075246334076
    2. 'numbers' → logprob: -2.1461074352264404
    3. 'nums' → logprob: -2.5211074352264404
    4. ' nums' → logprob: -3.5211074352264404
    5. ' tokens' → logprob: -5.7711076736450195
    6. ' operands' → logprob: -6.0211076736450195
    7. '<|end|>' → logprob: -6.3961076736450195
    8. 'tokens' → logprob: -6.8961076736450195
    9. '_nums' → logprob: -7.5211076736450195
    10. ' spaces' → logprob: -7.7711076736450195

Token 55: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004361283034086227
    2. ':' → logprob: -6.379361152648926
    3. '(' → logprob: -6.629361152648926
    4. '(nums' → logprob: -8.379361152648926
    5. '():' → logprob: -8.379361152648926
    6. '(n' → logprob: -8.879361152648926
    7. ',' → logprob: -8.879361152648926
    8. 's' → logprob: -9.129361152648926
    9. '(tokens' → logprob: -9.504361152648926
    10. 'def' → logprob: -10.254361152648926

Token 56: ' parentheses' (ID: 180602)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.9802224040031433
    2. ' parentheses' → logprob: -1.480222463607788
    3. ' spaces' → logprob: -2.230222463607788
    4. 'all' → logprob: -2.480222463607788
    5. 'ops' → logprob: -2.980222463607788
    6. ' the' → logprob: -3.355222463607788
    7. ' ops' → logprob: -3.480222463607788
    8. ' three' → logprob: -4.105222225189209
    9. 'out' → logprob: -4.355222225189209
    10. ' different' → logprob: -5.105222225189209

Token 57: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017605215311050415
    2. '(' → logprob: -4.892605304718018
    3. 's' → logprob: -5.892605304718018
    4. ',' → logprob: -6.267605304718018
    5. '    ' → logprob: -6.892605304718018
    6. '):' → logprob: -7.392605304718018
    7. 'def' → logprob: -7.642605304718018
    8. '(s' → logprob: -7.642605304718018
    9. '    
' → logprob: -7.767605304718018
    10. ':' → logprob: -8.14260482788086

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2986934781074524
    2. ':' → logprob: -1.5486934185028076
    3. '):' → logprob: -4.423693656921387
    4. '(' → logprob: -4.673693656921387
    5. '():' → logprob: -5.173693656921387
    6. '<|end|>' → logprob: -5.548693656921387
    7. ',' → logprob: -6.173693656921387
    8. 's' → logprob: -6.548693656921387
    9. ' for' → logprob: -6.548693656921387
    10. ' :' → logprob: -6.798693656921387

Token 59: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12616142630577087
    2. ' expressions' → logprob: -2.7511613368988037
    3. ' expr' → logprob: -4.251161575317383
    4. 'expr' → logprob: -4.501161575317383
    5. ' tokens' → logprob: -5.126161575317383
    6. ' results' → logprob: -5.751161575317383
    7. ' ' → logprob: -5.751161575317383
    8. ' for' → logprob: -5.876161575317383
    9. '    
' → logprob: -6.126161575317383
    10. ' pass' → logprob: -6.376161575317383

Token 60: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11705949902534485
    2. ',' → logprob: -2.6170594692230225
    3. ' ' → logprob: -4.617059707641602
    4. 's' → logprob: -4.742059707641602
    5. ',b' → logprob: -5.117059707641602
    6. '=' → logprob: -5.617059707641602
    7. ' ,' → logprob: -5.742059707641602
    8. 'r' → logprob: -5.992059707641602
    9. 'll' → logprob: -6.992059707641602
    10. 'rray' → logprob: -7.242059707641602

Token 61: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.4740808606147766
    2. 'b' → logprob: -0.9740808606147766
    3. ' ' → logprob: -13.349081039428711
    4. '*b' → logprob: -14.974081039428711
    5. '_b' → logprob: -15.099081039428711
    6. ' ' → logprob: -15.224081039428711
    7. ' =' → logprob: -15.349081039428711
    8. '   ' → logprob: -15.849081039428711
    9. '    ' → logprob: -15.974081039428711
    10. ',b' → logprob: -16.09908103942871

Token 62: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021968833170831203
    2. ' ,' → logprob: -6.627196788787842
    3. ' =' → logprob: -7.127196788787842
    4. '=' → logprob: -9.627197265625
    5. ',b' → logprob: -14.002197265625
    6. ',c' → logprob: -15.877197265625
    7. ' ' → logprob: -15.877197265625
    8. ')' → logprob: -16.002197265625
    9. '_,' → logprob: -16.127197265625
    10. '   ' → logprob: -16.502197265625

Token 63: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.03804366663098335
    2. 'c' → logprob: -3.288043737411499
    3. ' ' → logprob: -13.538043975830078
    4. '	c' → logprob: -14.663043975830078
    5. ',c' → logprob: -15.413043975830078
    6. ' ' → logprob: -15.788043975830078
    7. '<|end|>' → logprob: -16.288043975830078
    8. ',' → logprob: -16.788043975830078
    9. '_c' → logprob: -17.038043975830078
    10. ' =' → logprob: -17.038043975830078

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001293808571062982
    2. ' =' → logprob: -7.001293659210205
    3. ' ,' → logprob: -8.001294136047363
    4. '=' → logprob: -10.126294136047363
    5. ',d' → logprob: -12.001294136047363
    6. ' ' → logprob: -15.126294136047363
    7. 'd' → logprob: -15.251294136047363
    8. '_,' → logprob: -15.876294136047363
    9. 's' → logprob: -16.126293182373047
    10. ',b' → logprob: -17.001293182373047

Token 65: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.03364996239542961
    2. 'd' → logprob: -3.4086499214172363
    3. ' ' → logprob: -13.908650398254395
    4. ',' → logprob: -14.033650398254395
    5. ' =' → logprob: -14.283650398254395
    6. '<|end|>' → logprob: -14.533650398254395
    7. ',d' → logprob: -14.533650398254395
    8. ' ' → logprob: -15.908650398254395
    9. ' and' → logprob: -16.033649444580078
    10. '	d' → logprob: -16.158649444580078

Token 66: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008690676651895046
    2. '=' → logprob: -4.75869083404541
    3. ',' → logprob: -9.50869083404541
    4. ')' → logprob: -13.88369083404541
    5. ' ' → logprob: -14.50869083404541
    6. ' ,' → logprob: -15.88369083404541
    7. '<|end|>' → logprob: -16.633689880371094
    8. ' =
' → logprob: -16.883689880371094
    9. ' =)' → logprob: -16.883689880371094
    10. 's' → logprob: -17.258689880371094

Token 67: ' nums' (ID: 18117)
  Prédit: ' nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nums' → logprob: -0.4742673933506012
    2. 'nums' → logprob: -0.9742673635482788
    3. '   ' → logprob: -9.09926700592041
    4. '(nums' → logprob: -10.72426700592041
    5. ' ' → logprob: -11.34926700592041
    6. 'num' → logprob: -11.72426700592041
    7. '[' → logprob: -11.84926700592041
    8. '_nums' → logprob: -12.28676700592041
    9. 'Nums' → logprob: -12.28676700592041
    10. '    ' → logprob: -12.72426700592041

Token 68: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10048216581344604
    2. ' for' → logprob: -3.475482225418091
    3. '
' → logprob: -3.600482225418091
    4. ',' → logprob: -4.225481986999512
    5. 'for' → logprob: -4.725481986999512
    6. '    
' → logprob: -4.975481986999512
    7. '<|end|>' → logprob: -6.225481986999512
    8. '  
' → logprob: -7.100481986999512
    9. 'tokens' → logprob: -7.475481986999512
    10. ',
' → logprob: -8.100481986999512

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002394675277173519
    2. ' for' → logprob: -6.752394676208496
    3. '    
' → logprob: -7.377394676208496
    4. ',' → logprob: -8.752394676208496
    5. 's' → logprob: -9.502394676208496
    6. 'for' → logprob: -9.502394676208496
    7. '
' → logprob: -10.252394676208496
    8. ' tokens' → logprob: -10.252394676208496
    9. 'tokens' → logprob: -10.502394676208496
    10. '  
' → logprob: -10.877394676208496

Token 70: ' op' (ID: 991)
  Prédit: ' expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' expr' → logprob: -0.38948917388916016
    2. '   ' → logprob: -1.8894891738891602
    3. ' expressions' → logprob: -2.38948917388916
    4. ' results' → logprob: -3.26448917388916
    5. 'expr' → logprob: -3.51448917388916
    6. ' result' → logprob: -5.38948917388916
    7. ' res' → logprob: -5.88948917388916
    8. ' for' → logprob: -6.13948917388916
    9. 'express' → logprob: -7.76448917388916
    10. 'results' → logprob: -7.88948917388916

Token 71: '_com' (ID: 10828)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.009358052164316177
    2. '1' → logprob: -4.884357929229736
    3. '_choices' → logprob: -7.634357929229736
    4. '_sequences' → logprob: -8.384358406066895
    5. '_com' → logprob: -8.634358406066895
    6. 'ss' → logprob: -8.759358406066895
    7. '_lists' → logprob: -8.759358406066895
    8. 'com' → logprob: -9.009358406066895
    9. '_per' → logprob: -10.134358406066895
    10. '_pairs' → logprob: -10.384358406066895

Token 72: 'binations' (ID: 113572)
  Prédit: 'bs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bs' → logprob: -0.5041922330856323
    2. 'bos' → logprob: -1.6291922330856323
    3. 'binations' → logprob: -1.7541922330856323
    4. 'b' → logprob: -3.754192352294922
    5. 's' → logprob: -6.004192352294922
    6. 'bo' → logprob: -8.004192352294922
    7. 'ps' → logprob: -8.629192352294922
    8. 'bis' → logprob: -8.879192352294922
    9. '```' → logprob: -9.379192352294922
    10. '=' → logprob: -9.629192352294922

Token 73: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004082435742020607
    2. '=' → logprob: -5.504082202911377
    3. 's' → logprob: -13.004082679748535
    4. ' ' → logprob: -13.379082679748535
    5. ')' → logprob: -15.879082679748535
    6. ',' → logprob: -17.50408172607422
    7. '  ' → logprob: -17.75408172607422
    8. '   ' → logprob: -17.87908172607422
    9. ' =
' → logprob: -18.00408172607422
    10. ' in' → logprob: -18.12908172607422

Token 74: ' product' (ID: 1888)
  Prédit: ' product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.3008166253566742
    2. ' list' → logprob: -1.5508166551589966
    3. 'product' → logprob: -3.675816535949707
    4. 'list' → logprob: -3.800816535949707
    5. ' permutations' → logprob: -11.675816535949707
    6. ' ['' → logprob: -12.175816535949707
    7. '	product' → logprob: -12.550816535949707
    8. '['' → logprob: -12.675816535949707
    9. ' ' → logprob: -12.925816535949707
    10. '   ' → logprob: -13.300816535949707

Token 75: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.981667537620524e-06
    2. 'ops' → logprob: -13.500001907348633
    3. ' (' → logprob: -14.750001907348633
    4. '```' → logprob: -17.750001907348633
    5. ' ops' → logprob: -17.875001907348633
    6. '_ops' → logprob: -18.000001907348633
    7. '`' → logprob: -18.875001907348633
    8. '.ops' → logprob: -19.125001907348633
    9. '(
' → logprob: -19.375001907348633
    10. '((' → logprob: -19.625001907348633

Token 76: 'ops' (ID: 4645)
  Prédit: 'ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.004077332094311714
    2. '(' → logprob: -5.629077434539795
    3. ' ops' → logprob: -8.254076957702637
    4. ')(' → logprob: -9.754076957702637
    5. ')' → logprob: -9.879076957702637
    6. '.ops' → logprob: -10.254076957702637
    7. ',' → logprob: -10.504076957702637
    8. '_ops' → logprob: -10.754076957702637
    9. '[' → logprob: -12.129076957702637
    10. 'rops' → logprob: -12.754076957702637

Token 77: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006778847891837358
    2. ' ,' → logprob: -7.875678062438965
    3. 'repeat' → logprob: -8.250678062438965
    4. '',' → logprob: -10.875678062438965
    5. 'ops' → logprob: -12.000678062438965
    6. ' repeat' → logprob: -12.375678062438965
    7. '=' → logprob: -13.875678062438965
    8. 'Repeat' → logprob: -14.250678062438965
    9. '`,' → logprob: -14.250678062438965
    10. 's' → logprob: -14.500678062438965

Token 78: ' repeat' (ID: 22962)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -1.0152080059051514
    2. ' repeat' → logprob: -1.0152080059051514
    3. 'repeat' → logprob: -1.3902080059051514
    4. ' ops' → logprob: -3.6402080059051514
    5. ' ' → logprob: -10.26520824432373
    6. '  ' → logprob: -11.76520824432373
    7. '_repeat' → logprob: -12.51520824432373
    8. '   ' → logprob: -12.64020824432373
    9. '['' → logprob: -12.76520824432373
    10. 'Repeat' → logprob: -12.89020824432373

Token 79: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: 0.0
    2. '3' → logprob: -16.75
    3. ' =' → logprob: -19.375
    4. '4' → logprob: -19.5
    5. '(' → logprob: -19.875
    6. '2' → logprob: -21.125
    7. ' ' → logprob: -21.375
    8. '=
' → logprob: -21.875
    9. '=

' → logprob: -24.125
    10. '=}' → logprob: -24.5

Token 80: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.024604277219623e-05
    2. ' ' → logprob: -10.125040054321289
    3. '```' → logprob: -16.75004005432129
    4. '   ' → logprob: -17.50004005432129
    5. '  ' → logprob: -19.12504005432129
    6. ')' → logprob: -19.25004005432129
    7. '`' → logprob: -19.37504005432129
    8. ' ' → logprob: -19.75004005432129
    9. '۳' → logprob: -19.75004005432129
    10. '	' → logprob: -20.37504005432129

Token 81: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ' )' → logprob: -14.875001907348633
    3. '))' → logprob: -15.000001907348633
    4. ')
' → logprob: -15.125001907348633
    5. '')' → logprob: -15.125001907348633
    6. ')`' → logprob: -15.375001907348633
    7. '`)' → logprob: -16.125001907348633
    8. '),' → logprob: -17.750001907348633
    9. '):' → logprob: -18.125001907348633
    10. ')

' → logprob: -18.250001907348633

Token 82: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5598130822181702
    2. ')' → logprob: -2.1848130226135254
    3. '   ' → logprob: -2.3098130226135254
    4. ' ' → logprob: -2.6848130226135254
    5. ',' → logprob: -2.9348130226135254
    6. 'for' → logprob: -3.8098130226135254
    7. ' for' → logprob: -3.8098130226135254
    8. '<|end|>' → logprob: -3.8098130226135254
    9. '    
' → logprob: -4.934813022613525
    10. '):' → logprob: -5.434813022613525

Token 83: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05302676185965538
    2. ':' → logprob: -4.0530266761779785
    3. '    
' → logprob: -4.4280266761779785
    4. ')' → logprob: -5.1780266761779785
    5. ' for' → logprob: -5.6780266761779785
    6. 'for' → logprob: -5.9280266761779785
    7. ',' → logprob: -6.3030266761779785
    8. '
' → logprob: -6.3030266761779785
    9. ' ' → logprob: -6.3030266761779785
    10. '<|end|>' → logprob: -6.5530266761779785

Token 84: ' Different' (ID: 47255)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.14266212284564972
    2. 'for' → logprob: -2.3926620483398438
    3. '   ' → logprob: -4.392662048339844
    4. ' expressions' → logprob: -4.767662048339844
    5. ' result' → logprob: -5.267662048339844
    6. ' results' → logprob: -5.392662048339844
    7. ' expr' → logprob: -5.392662048339844
    8. 'expr' → logprob: -5.767662048339844
    9. 'result' → logprob: -6.642662048339844
    10. 'results' → logprob: -7.392662048339844

Token 85: ' ways' (ID: 6984)
  Prédit: ' parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parent' → logprob: -0.8461758494377136
    2. ' parentheses' → logprob: -1.4711759090423584
    3. 'parent' → logprob: -1.5961759090423584
    4. '_parent' → logprob: -3.0961759090423584
    5. '<|end|>' → logprob: -3.0961759090423584
    6. ' ways' → logprob: -4.221175670623779
    7. ' ' → logprob: -4.971175670623779
    8. ' valid' → logprob: -5.846175670623779
    9. 'layouts' → logprob: -6.096175670623779
    10. ' (' → logprob: -6.096175670623779

Token 86: ' to' (ID: 316)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11691020429134369
    2. ' to' → logprob: -3.366910219192505
    3. ' of' → logprob: -3.366910219192505
    4. 'to' → logprob: -3.616910219192505
    5. ' (' → logprob: -4.866909980773926
    6. 'of' → logprob: -5.241909980773926
    7. ')' → logprob: -7.616909980773926
    8. '   ' → logprob: -8.366909980773926
    9. '(
' → logprob: -8.741909980773926
    10. '[' → logprob: -9.241909980773926

Token 87: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.4099382162094116
    2. ' parent' → logprob: -1.5349382162094116
    3. ' place' → logprob: -2.909938335418701
    4. 'place' → logprob: -3.284938335418701
    5. 'paren' → logprob: -4.534938335418701
    6. 'combine' → logprob: -5.034938335418701
    7. ' add' → logprob: -6.284938335418701
    8. 'put' → logprob: -6.409938335418701
    9. 'write' → logprob: -6.534938335418701
    10. ' combine' → logprob: -6.534938335418701

Token 88: 'hes' (ID: 9780)
  Prédit: 'hes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hes' → logprob: -0.04417601227760315
    2. 'h' → logprob: -3.6691761016845703
    3. 'heses' → logprob: -4.04417610168457
    4. 'hesis' → logprob: -8.79417610168457
    5. '```' → logprob: -10.66917610168457
    6. 'he' → logprob: -11.66917610168457
    7. 'es' → logprob: -13.16917610168457
    8. 'esize' → logprob: -13.41917610168457
    9. 'hez' → logprob: -13.41917610168457
    10. 'hesia' → logprob: -13.54417610168457

Token 89: 'ize' (ID: 750)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.584937334060669
    2. 'ize' → logprob: -0.834937334060669
    3. 'es' → logprob: -5.58493709564209
    4. '```' → logprob: -5.95993709564209
    5. 'ze' → logprob: -7.08493709564209
    6. 'esize' → logprob: -7.95993709564209
    7. ')' → logprob: -8.70993709564209
    8. 'z' → logprob: -9.08493709564209
    9. 'ate' → logprob: -9.20993709564209
    10. 'ized' → logprob: -9.20993709564209

Token 90: ' four' (ID: 4242)
  Prédit: ' [
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [
' → logprob: -1.3086718320846558
    2. '[' → logprob: -1.4336718320846558
    3. '   ' → logprob: -2.4336719512939453
    4. '[
' → logprob: -2.4336719512939453
    5. 'expr' → logprob: -2.4336719512939453
    6. ' [' → logprob: -2.6836719512939453
    7. ':' → logprob: -3.4336719512939453
    8. ' (' → logprob: -3.4336719512939453
    9. '(' → logprob: -3.5586719512939453
    10. ' expressions' → logprob: -4.183671951293945

Token 91: ' numbers' (ID: 8663)
  Prédit: ' numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.09729034453630447
    2. 'numbers' → logprob: -2.472290277481079
    3. ' expressions' → logprob: -6.472290515899658
    4. ' elements' → logprob: -6.472290515899658
    5. ' tokens' → logprob: -6.597290515899658
    6. 'nums' → logprob: -6.972290515899658
    7. 'tokens' → logprob: -7.472290515899658
    8. ' nums' → logprob: -7.722290515899658
    9. '<|end|>' → logprob: -8.3472900390625
    10. '(numbers' → logprob: -8.5972900390625

Token 92: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5283319354057312
    2. ':' → logprob: -1.278331995010376
    3. '<|end|>' → logprob: -2.403331995010376
    4. ',' → logprob: -3.903331995010376
    5. '<|end|>' → logprob: -4.653331756591797
    6. ')' → logprob: -5.903331756591797
    7. '):' → logprob: -6.028331756591797
    8. ' ' → logprob: -6.153331756591797
    9. '    ' → logprob: -7.153331756591797
    10. ' :' → logprob: -7.528331756591797

Token 93: ' three' (ID: 3407)
  Prédit: ' parentheses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parentheses' → logprob: -0.6059204936027527
    2. ' three' → logprob: -1.2309205532073975
    3. '3' → logprob: -2.6059205532073975
    4. 'three' → logprob: -3.3559205532073975
    5. ' spaces' → logprob: -3.9809205532073975
    6. ' ' → logprob: -3.9809205532073975
    7. 'spaces' → logprob: -4.855920314788818
    8. 'parent' → logprob: -6.605920314788818
    9. ' the' → logprob: -6.980920314788818
    10. '<|end|>' → logprob: -7.105920314788818

Token 94: ' operators' (ID: 29893)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 95: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3120361566543579
    2. '   ' → logprob: -1.437036156654358
    3. '<|end|>' → logprob: -4.562036037445068
    4. '<|end|>' → logprob: -5.062036037445068
    5. '
' → logprob: -5.687036037445068
    6. ':
' → logprob: -5.812036037445068
    7. ',' → logprob: -6.187036037445068
    8. '    
' → logprob: -6.562036037445068
    9. 'def' → logprob: -7.437036037445068
    10. '):' → logprob: -7.562036037445068

Token 96: 'only' (ID: 7393)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4967939257621765
    2. '):' → logprob: -1.8717939853668213
    3. '):
' → logprob: -2.4967939853668213
    4. ' )' → logprob: -2.9967939853668213
    5. ' parentheses' → logprob: -3.2467939853668213
    6. '   ' → logprob: -3.7467939853668213
    7. ' ' → logprob: -5.371793746948242
    8. ' in' → logprob: -5.371793746948242
    9. ' ):' → logprob: -5.496793746948242
    10. '1' → logprob: -5.996793746948242

Token 97: ' ' (ID: 220)
  Prédit: ' one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -1.5559948682785034
    2. '5' → logprob: -1.8059948682785034
    3. ' ' → logprob: -1.8059948682785034
    4. ' five' → logprob: -1.9309948682785034
    5. 'five' → logprob: -2.430994987487793
    6. ')' → logprob: -2.555994987487793
    7. 'one' → logprob: -3.305994987487793
    8. '7' → logprob: -3.430994987487793
    9. ' valid' → logprob: -3.680994987487793
    10. 'valid' → logprob: -4.430994987487793

Token 98: '5' (ID: 20)
  Prédit: 'five'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'five' → logprob: -0.5167503952980042
    2. '5' → logprob: -1.6417503356933594
    3. 'one' → logprob: -2.6417503356933594
    4. ' five' → logprob: -3.3917503356933594
    5. 'binary' → logprob: -3.6417503356933594
    6. ' ' → logprob: -4.016750335693359
    7. '7' → logprob: -4.516750335693359
    8. 'valid' → logprob: -4.641750335693359
    9. ' one' → logprob: -4.766750335693359
    10. ')' → logprob: -5.266750335693359

Token 99: ' ways' (ID: 6984)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.044735413044691086
    2. ' )' → logprob: -3.2947354316711426
    3. '):' → logprob: -5.169735431671143
    4. ' ways' → logprob: -7.544735431671143
    5. ' ):' → logprob: -8.169734954833984
    6. '):

' → logprob: -10.419734954833984
    7. '):
' → logprob: -10.544734954833984
    8. ' patterns' → logprob: -11.669734954833984
    9. ')#' → logprob: -11.669734954833984
    10. ' possible' → logprob: -11.794734954833984

Token 100: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7268236875534058
    2. '):' → logprob: -0.7268236875534058
    3. '   ' → logprob: -3.9768238067626953
    4. '):
' → logprob: -4.601823806762695
    5. ':' → logprob: -6.476823806762695
    6. ' )' → logprob: -6.601823806762695
    7. ')
' → logprob: -7.726823806762695
    8. '):

' → logprob: -7.851823806762695
    9. ' ):' → logprob: -7.976823806762695
    10. '    ' → logprob: -10.226823806762695

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015923460014164448
    2. '    
' → logprob: -6.62659215927124
    3. ' for' → logprob: -9.626592636108398
    4. '
' → logprob: -9.751592636108398
    5. 'for' → logprob: -10.001592636108398
    6. '<|end|>' → logprob: -10.501592636108398
    7. ':' → logprob: -11.126592636108398
    8. '<|end|>' → logprob: -11.501592636108398
    9. 'def' → logprob: -11.876592636108398
    10. '       ' → logprob: -12.251592636108398

Token 102: ' patterns' (ID: 18587)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3820880055427551
    2. ' for' → logprob: -1.8820879459381104
    3. ' parent' → logprob: -3.3820879459381104
    4. 'expr' → logprob: -3.3820879459381104
    5. 'parent' → logprob: -3.3820879459381104
    6. ' parentheses' → logprob: -4.0070881843566895
    7. ' expr' → logprob: -4.5070881843566895
    8. 'for' → logprob: -4.5070881843566895
    9. ' expressions' → logprob: -5.0070881843566895
    10. 'express' → logprob: -5.5070881843566895

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0005549400229938328
    2. '=' → logprob: -7.500555038452148
    3. 's' → logprob: -14.375555038452148
    4. ' ' → logprob: -14.375555038452148
    5. ' =[' → logprob: -14.750555038452148
    6. '[' → logprob: -16.25055503845215
    7. ')' → logprob: -16.37555503845215
    8. '  ' → logprob: -16.87555503845215
    9. ':' → logprob: -16.87555503845215
    10. '=[
' → logprob: -17.00055503845215

Token 104: ' [
' (ID: 4240)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.5938997864723206
    2. '[' → logprob: -0.8438997864723206
    3. ' [
' → logprob: -4.468899726867676
    4. ' [' → logprob: -5.093899726867676
    5. '['' → logprob: -8.718899726867676
    6. '["' → logprob: -10.343899726867676
    7. ' ['' → logprob: -12.593899726867676
    8. ' [
' → logprob: -13.093899726867676
    9. '   ' → logprob: -13.968899726867676
    10. '[`' → logprob: -13.968899726867676

Token 105: '       ' (ID: 309)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.31443578004837036
    2. '   ' → logprob: -2.0644357204437256
    3. ''' → logprob: -2.9394357204437256
    4. ' "' → logprob: -3.1894357204437256
    5. '       ' → logprob: -3.6894357204437256
    6. ' '' → logprob: -4.439435958862305
    7. '"(' → logprob: -5.564435958862305
    8. 'f' → logprob: -5.689435958862305
    9. ' f' → logprob: -6.189435958862305
    10. ' "(' → logprob: -7.064435958862305

Token 106: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.08352915942668915
    2. ''' (adapté à ' '') → logprob: -2.708529233932495
    3. '   ' → logprob: -5.333528995513916
    4. '"(' → logprob: -5.708528995513916
    5. ' "' → logprob: -6.083528995513916
    6. 'f' → logprob: -6.333528995513916
    7. ' '' → logprob: -7.708528995513916
    8. 'lambda' → logprob: -7.958528995513916
    9. ' ' → logprob: -8.708529472351074
    10. '"{' → logprob: -9.458529472351074

Token 107: '((' (ID: 2054)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.9307228326797485
    2. '(f' → logprob: -1.1807228326797485
    3. ''' → logprob: -1.6807228326797485
    4. '((' → logprob: -2.930722713470459
    5. '({' → logprob: -3.430722713470459
    6. '"' → logprob: -3.930722713470459
    7. '(({' → logprob: -5.430722713470459
    8. ''(' → logprob: -6.430722713470459
    9. '(' → logprob: -7.555722713470459
    10. '('' → logprob: -8.680723190307617

Token 108: '{}' (ID: 12083)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06918250769376755
    2. '{}' → logprob: -2.8191823959350586
    3. '{' → logprob: -4.944182395935059
    4. '({' → logprob: -10.819182395935059
    5. '(a' → logprob: -11.069182395935059
    6. '{})' → logprob: -11.569182395935059
    7. ' a' → logprob: -11.569182395935059
    8. '(' → logprob: -13.069182395935059
    9. ' {}' → logprob: -13.694182395935059
    10. '{}_' → logprob: -13.819182395935059

Token 109: ' {}' (ID: 9902)
  Prédit: ' {}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.10066424310207367
    2. '{}' → logprob: -2.3506641387939453
    3. ' {})' → logprob: -7.975664138793945
    4. ')' → logprob: -10.100664138793945
    5. '{' → logprob: -10.725664138793945
    6. ' {' → logprob: -10.975664138793945
    7. '{})' → logprob: -11.225664138793945
    8. ' ' → logprob: -11.850664138793945
    9. '}' → logprob: -12.725664138793945
    10. '{}{' → logprob: -13.225664138793945

Token 110: ' {})' (ID: 75167)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.6978845596313477
    2. '{})' → logprob: -0.6978845596313477
    3. ' {})' → logprob: -5.447884559631348
    4. ')' → logprob: -7.947884559631348
    5. '{' → logprob: -10.072884559631348
    6. ' {}' → logprob: -10.697884559631348
    7. 'a' → logprob: -14.197884559631348
    8. '({' → logprob: -14.947884559631348
    9. '{{' → logprob: -14.947884559631348
    10. ' )' → logprob: -15.072884559631348

Token 111: ' {}' (ID: 9902)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.8408975601196289
    2. ' {})' → logprob: -1.090897560119629
    3. ')' → logprob: -2.340897560119629
    4. ' {}' → logprob: -2.465897560119629
    5. '{})' → logprob: -2.965897560119629
    6. ' )' → logprob: -9.715897560119629
    7. ' ' → logprob: -11.840897560119629
    8. '{' → logprob: -12.965897560119629
    9. '}' → logprob: -13.715897560119629
    10. ' ' → logprob: -13.965897560119629

Token 112: ' {})' (ID: 75167)
  Prédit: '{})'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{})' → logprob: -0.20260323584079742
    2. '({' → logprob: -2.202603340148926
    3. '{}' → logprob: -3.077603340148926
    4. ' {})' → logprob: -3.702603340148926
    5. ' (' → logprob: -6.577603340148926
    6. '(' → logprob: -7.577603340148926
    7. '((' → logprob: -9.952603340148926
    8. '{' → logprob: -10.077603340148926
    9. ' ' → logprob: -10.202603340148926
    10. '{{' → logprob: -10.452603340148926

Token 113: ' {}' (ID: 9902)
  Prédit: ' {}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.08300255984067917
    2. '{}' → logprob: -3.2080025672912598
    3. ' {})' → logprob: -3.8330025672912598
    4. ')' → logprob: -4.45800256729126
    5. '')' → logprob: -6.33300256729126
    6. ' )' → logprob: -6.58300256729126
    7. ' {}'.' → logprob: -6.95800256729126
    8. '{})' → logprob: -7.33300256729126
    9. ' ' → logprob: -8.333002090454102
    10. '}' → logprob: -8.458002090454102

Token 114: ' {}' (ID: 9902)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.010947131551802158
    2. '({' → logprob: -4.885947227478027
    3. ''' → logprob: -5.885947227478027
    4. ' {}' → logprob: -8.135947227478027
    5. '(' → logprob: -9.385947227478027
    6. '{}'.' → logprob: -9.760947227478027
    7. '{})' → logprob: -10.010947227478027
    8. '()' → logprob: -10.260947227478027
    9. ''''' → logprob: -11.385947227478027
    10. '('' → logprob: -11.760947227478027

Token 115: '',
' (ID: 1214)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3100895881652832
    2. '')' → logprob: -1.3100895881652832
    3. '{}' → logprob: -1.9350895881652832
    4. '(' → logprob: -2.810089588165283
    5. ''' → logprob: -3.060089588165283
    6. '({' → logprob: -3.185089588165283
    7. 'a' → logprob: -3.310089588165283
    8. '((' → logprob: -3.560089588165283
    9. ' (' → logprob: -4.060089588165283
    10. ' )' → logprob: -4.185089588165283

Token 116: '       ' (ID: 309)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.19063106179237366
    2. ' '' → logprob: -2.190631151199341
    3. '       ' → logprob: -3.440631151199341
    4. '(' → logprob: -5.440630912780762
    5. ' '('' → logprob: -5.440630912780762
    6. ')' → logprob: -5.565630912780762
    7. ' (' → logprob: -5.815630912780762
    8. '('' → logprob: -6.065630912780762
    9. '<|end|>' → logprob: -6.065630912780762
    10. '')' → logprob: -6.440630912780762

Token 117: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.14743952453136444
    2. ' '' → logprob: -2.022439479827881
    3. ''(' → logprob: -6.147439479827881
    4. '   ' → logprob: -7.272439479827881
    5. ' '{}' → logprob: -7.397439479827881
    6. '       ' → logprob: -7.522439479827881
    7. ' ' → logprob: -8.397439956665039
    8. ' '(' → logprob: -8.647439956665039
    9. '('{}' → logprob: -9.022439956665039
    10. '('' → logprob: -9.772439956665039

Token 118: '({' (ID: 3972)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00253880163654685
    2. ''(' → logprob: -7.252538681030273
    3. '('{}' → logprob: -7.377538681030273
    4. ' '' → logprob: -7.502538681030273
    5. '('' → logprob: -7.752538681030273
    6. '((' → logprob: -9.127538681030273
    7. '   ' → logprob: -10.377538681030273
    8. '({' → logprob: -10.752538681030273
    9. '"' → logprob: -11.252538681030273
    10. ' '{}' → logprob: -11.377538681030273

Token 119: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.07876540720462799
    2. '{}' → logprob: -2.828765392303467
    3. '}{' → logprob: -4.203765392303467
    4. '{' → logprob: -6.453765392303467
    5. '0' → logprob: -9.578765869140625
    6. '({' → logprob: -10.203765869140625
    7. '(' → logprob: -11.328765869140625
    8. '}(' → logprob: -11.578765869140625
    9. '{}{' → logprob: -12.203765869140625
    10. '})' → logprob: -12.953765869140625

Token 120: ' {}' (ID: 9902)
  Prédit: ' {}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.20152463018894196
    2. '{}' → logprob: -1.7015246152877808
    3. ' (' → logprob: -9.82652473449707
    4. '({' → logprob: -10.82652473449707
    5. ' {})' → logprob: -11.20152473449707
    6. ' ((' → logprob: -11.70152473449707
    7. ' ' → logprob: -12.45152473449707
    8. '((' → logprob: -12.70152473449707
    9. ' ({' → logprob: -12.82652473449707
    10. '(' → logprob: -12.95152473449707

Token 121: ' (' (ID: 350)
  Prédit: '({'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -0.15325549244880676
    2. ' (' → logprob: -2.7782554626464844
    3. ' {})' → logprob: -3.6532554626464844
    4. '((' → logprob: -3.9032554626464844
    5. '{}' → logprob: -4.153255462646484
    6. '{})' → logprob: -4.528255462646484
    7. '(' → logprob: -5.403255462646484
    8. ' ((' → logprob: -6.903255462646484
    9. ' ({' → logprob: -7.153255462646484
    10. ' {}' → logprob: -7.278255462646484

Token 122: '{}' (ID: 12083)
  Prédit: '{}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.00010044389637187123
    2. '({' → logprob: -9.375100135803223
    3. '{})' → logprob: -11.375100135803223
    4. '(' → logprob: -13.500100135803223
    5. ' {}' → logprob: -14.125100135803223
    6. '{}_' → logprob: -14.625100135803223
    7. '()' → logprob: -14.750100135803223
    8. '{{' → logprob: -14.750100135803223
    9. '{' → logprob: -15.250100135803223
    10. '{}\' → logprob: -16.12510108947754

Token 123: ' {}' (ID: 9902)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.014523330144584179
    2. ' {}' → logprob: -4.264523506164551
    3. '{})' → logprob: -8.13952350616455
    4. ' {})' → logprob: -9.76452350616455
    5. '))' → logprob: -12.51452350616455
    6. ' ' → logprob: -13.01452350616455
    7. ')' → logprob: -13.26452350616455
    8. '({' → logprob: -13.38952350616455
    9. '()' → logprob: -14.13952350616455
    10. '   ' → logprob: -16.139522552490234

Token 124: ' {}' (ID: 9902)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.006017910782247782
    2. ' {}' → logprob: -5.131017684936523
    3. '{})' → logprob: -9.631017684936523
    4. '))' → logprob: -11.381017684936523
    5. ' {})' → logprob: -11.756017684936523
    6. ' ' → logprob: -13.256017684936523
    7. '()))' → logprob: -14.256017684936523
    8. '   ' → logprob: -14.756017684936523
    9. '{' → logprob: -15.131017684936523
    10. '({' → logprob: -15.381017684936523

Token 125: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.04575907438993454
    2. ')' → logprob: -3.2957589626312256
    3. '{}' → logprob: -5.420759201049805
    4. ' ))' → logprob: -5.920759201049805
    5. ''))' → logprob: -8.420759201049805
    6. ' {}' → logprob: -8.795759201049805
    7. ' )' → logprob: -9.045759201049805
    8. '{})' → logprob: -9.920759201049805
    9. ')))' → logprob: -11.295759201049805
    10. '{' → logprob: -11.920759201049805

Token 126: ' {}' (ID: 9902)
  Prédit: ' {}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.05134513974189758
    2. '{}' → logprob: -3.176345109939575
    3. ' {})' → logprob: -5.176345348358154
    4. ')' → logprob: -6.301345348358154
    5. '')' → logprob: -8.676344871520996
    6. ' )' → logprob: -9.051344871520996
    7. ' ' → logprob: -9.051344871520996
    8. ' '{}' → logprob: -9.426344871520996
    9. ''' → logprob: -9.551344871520996
    10. '{})' → logprob: -9.676344871520996

Token 127: ' {}' (ID: 9902)
  Prédit: ' {}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.04915544018149376
    2. '{}' → logprob: -3.2991554737091064
    3. ' {})' → logprob: -4.549155235290527
    4. ' {}'.' → logprob: -7.799155235290527
    5. ''' → logprob: -10.674155235290527
    6. '{})' → logprob: -10.924155235290527
    7. ' ' → logprob: -12.174155235290527
    8. ' ' → logprob: -12.424155235290527
    9. ' {}",' → logprob: -12.424155235290527
    10. '{}'.' → logprob: -12.674155235290527

Token 128: '',
' (ID: 1214)
  Prédit: '',
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',
' → logprob: -0.29404935240745544
    2. '{}' → logprob: -2.4190492630004883
    3. ''' → logprob: -2.6690492630004883
    4. '',' → logprob: -3.1690492630004883
    5. ' {}' → logprob: -3.9190492630004883
    6. '')' → logprob: -4.169049263000488
    7. ' ',
' → logprob: -5.294049263000488
    8. ' '' → logprob: -5.669049263000488
    9. ')' → logprob: -6.169049263000488
    10. ' '}' → logprob: -6.919049263000488

Token 129: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6367841362953186
    2. ''' → logprob: -1.2617840766906738
    3. ' '' → logprob: -1.7617840766906738
    4. '   ' → logprob: -4.636784076690674
    5. ' '{}' → logprob: -6.386784076690674
    6. ' ' → logprob: -7.636784076690674
    7. '        ' → logprob: -7.636784076690674
    8. '      ' → logprob: -7.886784076690674
    9. ''s' → logprob: -7.886784076690674
    10. '    ' → logprob: -8.011784553527832

Token 130: ' '{}' (ID: 76993)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.05745652690529823
    2. ' '' → logprob: -3.0574564933776855
    3. '       ' → logprob: -5.6824564933776855
    4. ' '{}' → logprob: -6.0574564933776855
    5. '   ' → logprob: -6.4324564933776855
    6. ''(' → logprob: -7.4324564933776855
    7. '('' → logprob: -8.182456970214844
    8. '('{}' → logprob: -8.307456970214844
    9. ' ' → logprob: -9.182456970214844
    10. '"' → logprob: -9.682456970214844

Token 131: ' {}' (ID: 9902)
  Prédit: ' {}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.027606094256043434
    2. '{}' → logprob: -3.9026060104370117
    3. ' (' → logprob: -5.402606010437012
    4. ' ' → logprob: -7.527606010437012
    5. ' ({' → logprob: -7.527606010437012
    6. ' ' → logprob: -7.777606010437012
    7. ' '' → logprob: -7.902606010437012
    8. ' ((' → logprob: -8.652606010437012
    9. '({' → logprob: -8.777606010437012
    10. ' ('' → logprob: -9.402606010437012

Token 132: ' ((' (ID: 3536)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.5877666473388672
    2. '({' → logprob: -1.0877666473388672
    3. ' (' → logprob: -2.337766647338867
    4. ' ((' → logprob: -5.087766647338867
    5. ''' → logprob: -5.837766647338867
    6. '(' → logprob: -6.712766647338867
    7. '{}' → logprob: -9.087766647338867
    8. '(({' → logprob: -9.087766647338867
    9. '(()' → logprob: -9.212766647338867
    10. ' ({' → logprob: -9.462766647338867

Token 133: '{}' (ID: 12083)
  Prédit: '{}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.00375020201317966
    2. '({' → logprob: -5.753750324249268
    3. '(' → logprob: -7.503750324249268
    4. '()' → logprob: -11.75374984741211
    5. ' {}' → logprob: -12.00374984741211
    6. '{})' → logprob: -13.00374984741211
    7. '{{' → logprob: -13.87874984741211
    8. '{' → logprob: -14.25374984741211
    9. '   ' → logprob: -14.37874984741211
    10. ' (' → logprob: -14.37874984741211

Token 134: ' {}' (ID: 9902)
  Prédit: ' {}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.2519300878047943
    2. '{}' → logprob: -1.5019301176071167
    3. ' ()' → logprob: -14.876930236816406
    4. ' {})' → logprob: -15.001930236816406
    5. ' ' → logprob: -15.501930236816406
    6. '()' → logprob: -15.876930236816406
    7. ' (' → logprob: -16.751930236816406
    8. '{})' → logprob: -17.626930236816406
    9. ' ' → logprob: -17.751930236816406
    10. ')' → logprob: -18.501930236816406

Token 135: ' {})' (ID: 75167)
  Prédit: '{})'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{})' → logprob: -0.08819997310638428
    2. ' {})' → logprob: -2.838200092315674
    3. '{}' → logprob: -3.713200092315674
    4. ')' → logprob: -7.338200092315674
    5. '({' → logprob: -7.588200092315674
    6. ' (' → logprob: -9.088199615478516
    7. ' {}' → logprob: -9.713199615478516
    8. '(' → logprob: -9.713199615478516
    9. ' ' → logprob: -9.838199615478516
    10. ' ' → logprob: -10.713199615478516

Token 136: ' {}' (ID: 9902)
  Prédit: ' {}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.03823311999440193
    2. '{}' → logprob: -3.2882330417633057
    3. ' {})' → logprob: -8.788232803344727
    4. ')' → logprob: -10.663232803344727
    5. ' ' → logprob: -11.663232803344727
    6. '}' → logprob: -12.663232803344727
    7. '{})' → logprob: -13.163232803344727
    8. ' )' → logprob: -13.913232803344727
    9. ' {' → logprob: -15.038232803344727
    10. ' ' → logprob: -15.413232803344727

Token 137: ' {})' (ID: 75167)
  Prédit: ' {})'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {})' → logprob: -0.35404878854751587
    2. '{})' → logprob: -1.604048728942871
    3. '{}' → logprob: -2.854048728942871
    4. ' {}' → logprob: -3.729048728942871
    5. ')' → logprob: -4.229048728942871
    6. ' )' → logprob: -8.354048728942871
    7. ' ())' → logprob: -8.604048728942871
    8. '')' → logprob: -8.854048728942871
    9. ' ')' → logprob: -9.229048728942871
    10. ' ' → logprob: -9.854048728942871

Token 138: '',
' (ID: 1214)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.47866401076316833
    2. ' {}' → logprob: -1.2286640405654907
    3. ''' → logprob: -2.728663921356201
    4. ' '{}' → logprob: -4.603663921356201
    5. ' '' → logprob: -4.728663921356201
    6. ' '{}'' → logprob: -6.728663921356201
    7. ')' → logprob: -7.603663921356201
    8. '('{}' → logprob: -7.978663921356201
    9. ' ' → logprob: -8.22866439819336
    10. '')' → logprob: -8.35366439819336

Token 139: '       ' (ID: 309)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1811521351337433
    2. ' '' → logprob: -2.556152105331421
    3. ' '{}' → logprob: -2.556152105331421
    4. '       ' → logprob: -5.43115234375
    5. '   ' → logprob: -6.18115234375
    6. '{}' → logprob: -6.55615234375
    7. '('{}' → logprob: -6.93115234375
    8. ' '{}'' → logprob: -7.30615234375
    9. ' ' → logprob: -8.18115234375
    10. ''{' → logprob: -8.93115234375

Token 140: ' '{}' (ID: 76993)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.008012931793928146
    2. ' '' → logprob: -5.883012771606445
    3. ''(' → logprob: -6.008012771606445
    4. '   ' → logprob: -6.758012771606445
    5. ' '{}' → logprob: -7.508012771606445
    6. '('{}' → logprob: -8.008012771606445
    7. '       ' → logprob: -8.383012771606445
    8. ' ' → logprob: -8.508012771606445
    9. '('' → logprob: -8.758012771606445
    10. ''{' → logprob: -10.633012771606445

Token 141: ' {}' (ID: 9902)
  Prédit: ' {}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.013384445570409298
    2. '{}' → logprob: -4.3883843421936035
    3. ' ' → logprob: -7.1383843421936035
    4. ' []' → logprob: -9.888384819030762
    5. ' ' → logprob: -11.263384819030762
    6. ' {' → logprob: -12.888384819030762
    7. ' {}\' → logprob: -12.888384819030762
    8. '  ' → logprob: -13.263384819030762
    9. 's' → logprob: -13.263384819030762
    10. '[]' → logprob: -13.763384819030762

Token 142: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.9108206033706665
    2. '({' → logprob: -0.9108206033706665
    3. '((' → logprob: -1.6608206033706665
    4. ' ((' → logprob: -5.285820484161377
    5. '(' → logprob: -8.785820960998535
    6. ' ({' → logprob: -8.910820960998535
    7. ''' → logprob: -9.785820960998535
    8. '({},' → logprob: -9.910820960998535
    9. '(({' → logprob: -10.160820960998535
    10. '(()' → logprob: -10.285820960998535

Token 143: '{}' (ID: 12083)
  Prédit: '({'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -0.000743399141356349
    2. '((' → logprob: -7.875743389129639
    3. '{}' → logprob: -8.500743865966797
    4. '(' → logprob: -8.875743865966797
    5. ' (' → logprob: -11.375743865966797
    6. '({},' → logprob: -12.000743865966797
    7. '(()' → logprob: -13.625743865966797
    8. '('{}' → logprob: -15.125743865966797
    9. '("{}' → logprob: -15.750743865966797
    10. '({})
' → logprob: -15.750743865966797

Token 144: ' {}' (ID: 9902)
  Prédit: ' {}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.10058587789535522
    2. '{}' → logprob: -2.3505859375
    3. ' (' → logprob: -8.1005859375
    4. ' ' → logprob: -10.7255859375
    5. ' ({' → logprob: -11.1005859375
    6. ' ((' → logprob: -11.1005859375
    7. '({' → logprob: -11.3505859375
    8. '(' → logprob: -12.8505859375
    9. ' {})' → logprob: -12.8505859375
    10. ' ' → logprob: -12.9755859375

Token 145: ' (' (ID: 350)
  Prédit: '({'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -0.10467756539583206
    2. '((' → logprob: -2.354677677154541
    3. ' (' → logprob: -5.604677677154541
    4. '{}' → logprob: -7.854677677154541
    5. '(' → logprob: -8.604677200317383
    6. '{})' → logprob: -9.354677200317383
    7. '({},' → logprob: -9.479677200317383
    8. '(()' → logprob: -11.104677200317383
    9. '(({' → logprob: -11.229677200317383
    10. ' ((' → logprob: -12.104677200317383

Token 146: '{}' (ID: 12083)
  Prédit: '{}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -4.320199877838604e-07
    2. '{})' → logprob: -15.0
    3. '{}_' → logprob: -17.0
    4. '({' → logprob: -17.375
    5. '()' → logprob: -18.5
    6. ' {}' → logprob: -18.625
    7. '(' → logprob: -18.75
    8. '{' → logprob: -19.5
    9. '{}\' → logprob: -19.625
    10. '{}{' → logprob: -19.625

Token 147: ' {}' (ID: 9902)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.5759528279304504
    2. ' {}' → logprob: -0.8259528279304504
    3. ' {})' → logprob: -12.075952529907227
    4. '))' → logprob: -12.825952529907227
    5. ' ' → logprob: -13.075952529907227
    6. ')' → logprob: -13.450952529907227
    7. '{})' → logprob: -13.950952529907227
    8. 's' → logprob: -15.825952529907227
    9. ' ' → logprob: -15.950952529907227
    10. '()' → logprob: -16.575952529907227

Token 148: ' {}' (ID: 9902)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.006420713849365711
    2. '))' → logprob: -5.256420612335205
    3. ' {}' → logprob: -6.756420612335205
    4. '{})' → logprob: -10.881421089172363
    5. ')' → logprob: -13.131421089172363
    6. ' ))' → logprob: -14.506421089172363
    7. ''))' → logprob: -14.881421089172363
    8. '}))' → logprob: -15.006421089172363
    9. ' {})' → logprob: -15.006421089172363
    10. '()))' → logprob: -15.881421089172363

Token 149: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0030119342263787985
    2. ''))' → logprob: -6.378011703491211
    3. ')' → logprob: -6.753011703491211
    4. ')))' → logprob: -9.253011703491211
    5. '))
' → logprob: -10.503011703491211
    6. ' ))' → logprob: -11.378011703491211
    7. '')' → logprob: -13.503011703491211
    8. ')'' → logprob: -13.628011703491211
    9. ')'
' → logprob: -14.878011703491211
    10. ')
' → logprob: -15.003011703491211

Token 150: '',
' (ID: 1214)
  Prédit: '',
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',
' → logprob: -0.19822095334529877
    2. '',' → logprob: -2.32322096824646
    3. '{}' → logprob: -3.32322096824646
    4. ''' → logprob: -3.69822096824646
    5. ',
' → logprob: -5.198220729827881
    6. ')' → logprob: -5.698220729827881
    7. ',' → logprob: -5.948220729827881
    8. '}',
' → logprob: -6.323220729827881
    9. '}' → logprob: -6.448220729827881
    10. '')' → logprob: -6.698220729827881

Token 151: '       ' (ID: 309)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.15322808921337128
    2. '       ' → logprob: -2.2782280445098877
    3. '   ' → logprob: -3.7782280445098877
    4. ' '' → logprob: -4.653228282928467
    5. ' '{}' → logprob: -5.403228282928467
    6. ']' → logprob: -7.278228282928467
    7. ' ' → logprob: -7.778228282928467
    8. '('{}' → logprob: -7.903228282928467
    9. ')' → logprob: -8.778227806091309
    10. ''{' → logprob: -8.903227806091309

Token 152: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.012195384129881859
    2. ''(' → logprob: -4.512195587158203
    3. '((' → logprob: -7.137195587158203
    4. ' '' → logprob: -9.137195587158203
    5. '   ' → logprob: -9.637195587158203
    6. '('' → logprob: -10.012195587158203
    7. '('{}' → logprob: -10.512195587158203
    8. ' ' → logprob: -10.637195587158203
    9. '({' → logprob: -10.762195587158203
    10. '('(' → logprob: -11.387195587158203

Token 153: '({' (ID: 3972)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.017978545278310776
    2. ''(' → logprob: -4.517978668212891
    3. '((' → logprob: -5.017978668212891
    4. '('' → logprob: -8.76797866821289
    5. '({' → logprob: -10.64297866821289
    6. '('(' → logprob: -10.64297866821289
    7. '(' → logprob: -10.76797866821289
    8. '"' → logprob: -11.01797866821289
    9. ' '' → logprob: -11.14297866821289
    10. '(({' → logprob: -11.76797866821289

Token 154: '}' (ID: 92)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.1812700778245926
    2. '}' → logprob: -1.8062701225280762
    3. '({' → logprob: -6.931270122528076
    4. '{' → logprob: -8.181269645690918
    5. '(' → logprob: -8.931269645690918
    6. '}{' → logprob: -9.681269645690918
    7. '((' → logprob: -10.056269645690918
    8. '})' → logprob: -12.181269645690918
    9. '}(' → logprob: -12.431269645690918
    10. '{{' → logprob: -12.556269645690918

Token 155: ' {}' (ID: 9902)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.007159211207181215
    2. ' {}' → logprob: -5.007159233093262
    3. '(' → logprob: -8.132159233093262
    4. ' (' → logprob: -9.632159233093262
    5. '({' → logprob: -9.632159233093262
    6. '{})' → logprob: -12.007159233093262
    7. '()' → logprob: -12.757159233093262
    8. '((' → logprob: -12.757159233093262
    9. ')' → logprob: -13.132159233093262
    10. ' {})' → logprob: -13.757159233093262

Token 156: ' {})' (ID: 75167)
  Prédit: '({'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '({' → logprob: -0.3381730616092682
    2. '{}' → logprob: -1.3381730318069458
    3. '((' → logprob: -3.9631731510162354
    4. '(' → logprob: -5.338172912597656
    5. '({},' → logprob: -8.463172912597656
    6. 'a' → logprob: -8.963172912597656
    7. '{})' → logprob: -9.088172912597656
    8. ' (' → logprob: -9.213172912597656
    9. '{{' → logprob: -9.713172912597656
    10. '(a' → logprob: -10.338172912597656

Token 157: ' {}' (ID: 9902)
  Prédit: ' {}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.04859520494937897
    2. '{}' → logprob: -3.0485951900482178
    3. ' {})' → logprob: -12.048595428466797
    4. '}' → logprob: -14.048595428466797
    5. ')' → logprob: -14.548595428466797
    6. ' ' → logprob: -15.048595428466797
    7. ' ' → logprob: -15.548595428466797
    8. '={}' → logprob: -16.548595428466797
    9. '{})' → logprob: -16.923595428466797
    10. ' {}\' → logprob: -17.423595428466797

Token 158: ' (' (ID: 350)
  Prédit: ' {}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.6764055490493774
    2. '{}' → logprob: -1.0514055490493774
    3. ' (' → logprob: -2.426405429840088
    4. '({' → logprob: -3.301405429840088
    5. ' ({' → logprob: -4.301405429840088
    6. ' ((' → logprob: -6.301405429840088
    7. '(' → logprob: -7.426405429840088
    8. '((' → logprob: -7.801405429840088
    9. ' ' → logprob: -8.551405906677246
    10. ' {})' → logprob: -8.676405906677246

Token 159: '{}' (ID: 12083)
  Prédit: '{}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.16031359136104584
    2. '({' → logprob: -1.910313606262207
    3. '(' → logprob: -10.160313606262207
    4. '{})' → logprob: -10.910313606262207
    5. '({},' → logprob: -11.660313606262207
    6. '   ' → logprob: -12.285313606262207
    7. '{{' → logprob: -12.410313606262207
    8. ' (' → logprob: -12.660313606262207
    9. '  ' → logprob: -13.535313606262207
    10. '('{}' → logprob: -13.535313606262207

Token 160: ' {}' (ID: 9902)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.26591283082962036
    2. ' {}' → logprob: -1.5159127712249756
    3. ' {})' → logprob: -4.390913009643555
    4. '{})' → logprob: -6.515913009643555
    5. ' ' → logprob: -11.390913009643555
    6. ' ' → logprob: -13.390913009643555
    7. '({' → logprob: -14.015913009643555
    8. ')' → logprob: -14.265913009643555
    9. '(' → logprob: -14.390913009643555
    10. '%s' → logprob: -14.890913009643555

Token 161: ' {})' (ID: 75167)
  Prédit: '{})'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{})' → logprob: -0.003324580378830433
    2. '{}' → logprob: -5.878324508666992
    3. ' {})' → logprob: -7.753324508666992
    4. '({' → logprob: -10.003324508666992
    5. ')' → logprob: -10.128324508666992
    6. '())' → logprob: -13.253324508666992
    7. '{})
' → logprob: -14.003324508666992
    8. '{}'.' → logprob: -14.378324508666992
    9. '(' → logprob: -14.503324508666992
    10. '')' → logprob: -15.128324508666992

Token 162: '',
' (ID: 1214)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.046805016696453094
    2. '']' → logprob: -3.171804904937744
    3. '}'' → logprob: -6.796804904937744
    4. ']'' → logprob: -7.171804904937744
    5. '}' → logprob: -7.296804904937744
    6. ''}' → logprob: -7.671804904937744
    7. ''
' → logprob: -7.921804904937744
    8. ']' → logprob: -9.421805381774902
    9. ')'' → logprob: -9.796805381774902
    10. '   ' → logprob: -9.796805381774902

Token 163: '   ' (ID: 271)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6958551406860352
    2. '   ' → logprob: -0.6958551406860352
    3. ' ]' → logprob: -6.445855140686035
    4. '       ' → logprob: -7.070855140686035
    5. '}' → logprob: -8.570855140686035
    6. '']' → logprob: -9.820855140686035
    7. '`]' → logprob: -12.695855140686035
    8. '    ' → logprob: -12.945855140686035
    9. ']}' → logprob: -13.070855140686035
    10. '  ' → logprob: -13.070855140686035

Token 164: ' ]
' (ID: 10213)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0021420512348413467
    2. '   ' → logprob: -6.502141952514648
    3. '}' → logprob: -8.002141952514648
    4. ' ]' → logprob: -8.502141952514648
    5. ')' → logprob: -10.252141952514648
    6. ']
' (adapté à ' ]
') → logprob: -10.877141952514648
    7. '       ' → logprob: -11.127141952514648
    8. '']' → logprob: -11.377141952514648
    9. ',' → logprob: -12.252141952514648
    10. ')]' → logprob: -12.752141952514648

Token 165: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6021730899810791
    2. ' for' → logprob: -1.227173089981079
    3. '   ' → logprob: -2.102173089981079
    4. ' ' → logprob: -4.4771728515625
    5. ':' → logprob: -5.3521728515625
    6. ')' → logprob: -5.4771728515625
    7. '<|end|>' → logprob: -5.4771728515625
    8. '(' → logprob: -5.7271728515625
    9. 'token' → logprob: -7.1021728515625
    10. '[' → logprob: -7.3521728515625

Token 166: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4994921088218689
    2. ' for' → logprob: -0.9994921088218689
    3. '   ' → logprob: -3.9994921684265137
    4. ' ' → logprob: -6.874492168426514
    5. '(' → logprob: -7.499492168426514
    6. 'expr' → logprob: -7.499492168426514
    7. ')' → logprob: -7.499492168426514
    8. 'token' → logprob: -7.624492168426514
    9. 'tokens' → logprob: -7.624492168426514
    10. 'result' → logprob: -7.749492168426514

Token 167: ' ops' (ID: 26973)
  Prédit: ' op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.718085527420044
    2. 'op' → logprob: -1.718085527420044
    3. ' ops' → logprob: -1.968085527420044
    4. 'ops' → logprob: -2.218085527420044
    5. 'nums' → logprob: -3.218085527420044
    6. ' nums' → logprob: -3.343085527420044
    7. 'num' → logprob: -6.468085289001465
    8. 'expr' → logprob: -7.093085289001465
    9. ' num' → logprob: -7.093085289001465
    10. ' expr' → logprob: -7.343085289001465

Token 168: '_choice' (ID: 73651)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4049513041973114
    2. '_' → logprob: -2.154951333999634
    3. 'in' → logprob: -2.404951333999634
    4. '_combo' → logprob: -2.904951333999634
    5. '_comb' → logprob: -3.154951333999634
    6. '_in' → logprob: -4.529951095581055
    7. '_com' → logprob: -5.029951095581055
    8. 's' → logprob: -5.529951095581055
    9. '_tuple' → logprob: -5.904951095581055
    10. 'comb' → logprob: -6.654951095581055

Token 169: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010579879395663738
    2. 'in' → logprob: -4.635580062866211
    3. ',' → logprob: -7.135580062866211
    4. 's' → logprob: -11.135580062866211
    5. ' ,' → logprob: -11.635580062866211
    6. ' ' → logprob: -13.385580062866211
    7. ',in' → logprob: -15.010580062866211
    8. ')' → logprob: -15.135580062866211
    9. 'space' → logprob: -15.385580062866211
    10. '1' → logprob: -15.510580062866211

Token 170: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.16575148701667786
    2. 'product' → logprob: -1.9157514572143555
    3. ' op' → logprob: -5.9157514572143555
    4. ' product' → logprob: -6.0407514572143555
    5. 'ops' → logprob: -7.7907514572143555
    6. 'list' → logprob: -11.415751457214355
    7. 'prod' → logprob: -12.040751457214355
    8. ' ops' → logprob: -12.915751457214355
    9. ' ' → logprob: -14.290751457214355
    10. '(op' → logprob: -14.540751457214355

Token 171: '_com' (ID: 10828)
  Prédit: '_com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -0.0028162896633148193
    2. 's' → logprob: -5.877816200256348
    3. 'com' → logprob: -11.752816200256348
    4. '_choices' → logprob: -13.627816200256348
    5. '_comb' → logprob: -14.127816200256348
    6. '_' → logprob: -14.502816200256348
    7. '_s' → logprob: -14.752816200256348
    8. '_product' → logprob: -16.252817153930664
    9. '\' → logprob: -16.252817153930664
    10. 'es' → logprob: -16.752817153930664

Token 172: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -0.019790325313806534
    2. 'inations' → logprob: -4.394790172576904
    3. 'b' → logprob: -5.019790172576904
    4. 'product' → logprob: -8.144790649414062
    5. 'ations' → logprob: -9.019790649414062
    6. 'utations' → logprob: -10.144790649414062
    7. 'bination' → logprob: -10.644790649414062
    8. 'in' → logprob: -10.644790649414062
    9. 'r' → logprob: -10.769790649414062
    10. 't' → logprob: -11.144790649414062

Token 173: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000630947935860604
    2. ' :' → logprob: -8.000631332397461
    3. ':
' → logprob: -8.375631332397461
    4. '):' → logprob: -9.750631332397461
    5. ',' → logprob: -12.750631332397461
    6. ' :
' → logprob: -13.875631332397461
    7. '       ' → logprob: -14.375631332397461
    8. '():' → logprob: -14.625631332397461
    9. '):
' → logprob: -15.125631332397461
    10. ':
' → logprob: -15.375631332397461

Token 174: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022711048368364573
    2. ':' → logprob: -6.2522711753845215
    3. '        
' → logprob: -9.127270698547363
    4. ',' → logprob: -10.002270698547363
    5. '<|end|>' → logprob: -10.377270698547363
    6. '[' → logprob: -10.877270698547363
    7. '   ' → logprob: -10.877270698547363
    8. '    ' → logprob: -11.252270698547363
    9. ' for' → logprob: -11.252270698547363
    10. '           ' → logprob: -11.502270698547363

Token 175: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12247450649738312
    2. ' for' → logprob: -2.497474431991577
    3. 'for' (adapté à ' for') → logprob: -3.622474431991577
    4. 'yield' → logprob: -6.122474670410156
    5. ' yield' → logprob: -6.497474670410156
    6. '        
' → logprob: -6.872474670410156
    7. '        ' → logprob: -7.747474670410156
    8. '           ' → logprob: -8.247474670410156
    9. '	yield' → logprob: -8.872474670410156
    10. '   ' → logprob: -9.247474670410156

Token 176: ' pat' (ID: 2506)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.20779083669185638
    2. ' pattern' → logprob: -1.8327908515930176
    3. 'pat' → logprob: -4.207790851593018
    4. 'nums' → logprob: -4.582790851593018
    5. ' nums' → logprob: -6.832790851593018
    6. ' pat' → logprob: -7.332790851593018
    7. 'p' → logprob: -7.582790851593018
    8. ' p' → logprob: -8.95779037475586
    9. 'num' → logprob: -9.83279037475586
    10. '_pattern' → logprob: -10.70779037475586

Token 177: ' in' (ID: 306)
  Prédit: 'tern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tern' → logprob: -0.1041140928864479
    2. 't' → logprob: -2.354114055633545
    3. ':' → logprob: -6.479114055633545
    4. 'te' → logprob: -6.604114055633545
    5. 'ter' → logprob: -8.104114532470703
    6. 'ern' → logprob: -8.604114532470703
    7. 'h' → logprob: -9.729114532470703
    8. '```' → logprob: -9.854114532470703
    9. ',' → logprob: -10.354114532470703
    10. '[' → logprob: -10.479114532470703

Token 178: ' patterns' (ID: 18587)
  Prédit: 'patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'patterns' → logprob: -0.03804321587085724
    2. ' patterns' → logprob: -3.288043260574341
    3. 'pat' → logprob: -13.663043022155762
    4. 'pattern' → logprob: -14.663043022155762
    5. '_patterns' → logprob: -15.788043022155762
    6. '(pattern' → logprob: -17.038043975830078
    7. '[' → logprob: -18.788043975830078
    8. 'attern' → logprob: -19.163043975830078
    9. '   ' → logprob: -19.413043975830078
    10. '.pattern' → logprob: -19.788043975830078

Token 179: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14453913271427155
    2. ':
' → logprob: -2.1445391178131104
    3. '           ' → logprob: -4.5195393562316895
    4. '       ' → logprob: -5.8945393562316895
    5. '(' → logprob: -6.5195393562316895
    6. ' :' → logprob: -7.6445393562316895
    7. '):' → logprob: -7.8945393562316895
    8. ',' → logprob: -8.144538879394531
    9. '):
' → logprob: -8.519538879394531
    10. '():
' → logprob: -8.769538879394531

Token 180: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002361974911764264
    2. 'expr' → logprob: -6.25236177444458
    3. 'yield' → logprob: -8.627362251281738
    4. ' expr' → logprob: -9.752362251281738
    5. 'tokens' → logprob: -10.127362251281738
    6. '	       ' → logprob: -10.252362251281738
    7. '       ' → logprob: -10.252362251281738
    8. ' yield' → logprob: -11.002362251281738
    9. '            
' → logprob: -11.252362251281738
    10. '               ' → logprob: -12.002362251281738

Token 181: ' expr' (ID: 30206)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' (adapté à ' expr') → logprob: -0.01636888086795807
    2. ' expr' → logprob: -4.516368865966797
    3. 'yield' → logprob: -5.516368865966797
    4. '           ' → logprob: -7.516368865966797
    5. 'try' → logprob: -7.641368865966797
    6. '               ' → logprob: -9.266368865966797
    7. ' yield' → logprob: -9.266368865966797
    8. 'expression' → logprob: -10.391368865966797
    9. ' try' → logprob: -10.891368865966797
    10. '   ' → logprob: -11.891368865966797

Token 182: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0031818747520446777
    2. '=' → logprob: -5.7531819343566895
    3. 's' → logprob: -12.878181457519531
    4. ')' → logprob: -14.253181457519531
    5. ' ' → logprob: -15.128181457519531
    6. '_' → logprob: -16.12818145751953
    7. ' =)' → logprob: -16.25318145751953
    8. ' =
' → logprob: -16.37818145751953
    9. ' ='' → logprob: -16.62818145751953
    10. '"' → logprob: -16.87818145751953

Token 183: ' pat' (ID: 2506)
  Prédit: 'pat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pat' → logprob: -0.12695205211639404
    2. ' pat' → logprob: -2.1269521713256836
    3. '   ' → logprob: -11.751952171325684
    4. ' ' → logprob: -12.751952171325684
    5. ' patt' → logprob: -13.126952171325684
    6. 'f' → logprob: -13.501952171325684
    7. 'Pat' → logprob: -13.626952171325684
    8. 'p' → logprob: -13.626952171325684
    9. '"' → logprob: -13.939452171325684
    10. ''' → logprob: -14.189452171325684

Token 184: '.format' (ID: 12277)
  Prédit: '.format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.format' → logprob: -0.004734029993414879
    2. '.' → logprob: -5.379734039306641
    3. ' .' → logprob: -9.12973403930664
    4. 'format' → logprob: -12.62973403930664
    5. '.form' → logprob: -14.00473403930664
    6. '{}.' → logprob: -14.50473403930664
    7. '().' → logprob: -15.12973403930664
    8. ').' → logprob: -15.62973403930664
    9. '.encode' → logprob: -16.75473403930664
    10. '   ' → logprob: -16.87973403930664

Token 185: '(a' (ID: 6271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.019205082207918167
    2. '(a' → logprob: -4.019205093383789
    3. ' a' → logprob: -6.894205093383789
    4. '(' → logprob: -10.394205093383789
    5. '(
' → logprob: -12.644205093383789
    6. ' (' → logprob: -13.269205093383789
    7. ',a' → logprob: -13.644205093383789
    8. ',' → logprob: -13.894205093383789
    9. '	a' → logprob: -14.144205093383789
    10. '   ' → logprob: -14.144205093383789

Token 186: ',' (ID: 11)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ,' → logprob: -0.5240130424499512
    2. ',' → logprob: -0.8990130424499512
    3. ' ' → logprob: -7.149013042449951
    4. ')' → logprob: -11.14901351928711
    5. ' f' → logprob: -11.27401351928711
    6. '<|end|>' → logprob: -11.27401351928711
    7. ' )' → logprob: -11.39901351928711
    8. ' ,
' → logprob: -11.89901351928711
    9. ' ops' → logprob: -11.89901351928711
    10. ' ,'' → logprob: -11.89901351928711

Token 187: ' ops' (ID: 26973)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.0337141677737236
    2. ' ops' → logprob: -3.6587140560150146
    3. 'op' → logprob: -5.408714294433594
    4. 'b' → logprob: -6.533714294433594
    5. ' b' → logprob: -7.408714294433594
    6. ''' → logprob: -7.408714294433594
    7. '*' → logprob: -10.533714294433594
    8. ''op' → logprob: -10.533714294433594
    9. ' op' → logprob: -10.658714294433594
    10. ' 
' → logprob: -10.783714294433594

Token 188: '_choice' (ID: 73651)
  Prédit: '_choice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_choice' → logprob: -0.00016504127415828407
    2. 'choice' → logprob: -9.750164985656738
    3. '[' → logprob: -9.875164985656738
    4. 'Choice' → logprob: -10.375164985656738
    5. '_choices' → logprob: -11.125164985656738
    6. ')' → logprob: -13.000164985656738
    7. '   ' → logprob: -13.625164985656738
    8. ' choice' → logprob: -13.750164985656738
    9. '```' → logprob: -13.875164985656738
    10. '-choice' → logprob: -14.375164985656738

Token 189: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.054886117577552795
    2. '0' → logprob: -2.9298861026763916
    3. '```' → logprob: -13.554885864257812
    4. ' [' → logprob: -14.054885864257812
    5. '[
' → logprob: -14.929885864257812
    6. '
' → logprob: -15.054885864257812
    7. '(' → logprob: -15.304885864257812
    8. '\[' → logprob: -15.429885864257812
    9. ' ' → logprob: -16.429885864257812
    10. ',' → logprob: -16.429885864257812

Token 190: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '[' → logprob: -17.125
    4. '۰' → logprob: -19.75
    5. '<|end|>' → logprob: -21.125
    6. '1' → logprob: -21.375
    7. '   ' → logprob: -21.375
    8. '00' → logprob: -21.625
    9. ')' → logprob: -21.6875
    10. '٠' → logprob: -21.875

Token 191: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014399961801245809
    2. ' ,' → logprob: -6.626440048217773
    3. 'b' → logprob: -10.251440048217773
    4. ',b' → logprob: -10.376440048217773
    5. ')' → logprob: -10.876440048217773
    6. '),' → logprob: -11.001440048217773
    7. 'a' → logprob: -11.876440048217773
    8. ',a' → logprob: -12.751440048217773
    9. ' ' → logprob: -14.751440048217773
    10. ' b' → logprob: -14.751440048217773

Token 192: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.306760805164231e-05
    2. ' b' → logprob: -11.25001335144043
    3. '   ' → logprob: -19.37501335144043
    4. '	b' → logprob: -20.00001335144043
    5. ' ' → logprob: -20.75001335144043
    6. ')b' → logprob: -20.75001335144043
    7. '  ' → logprob: -22.37501335144043
    8. '    ' → logprob: -23.00001335144043
    9. '(b' → logprob: -24.00001335144043
    10. ' б' → logprob: -24.75001335144043

Token 193: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020926215802319348
    2. ' ,' → logprob: -8.500208854675293
    3. 'ops' → logprob: -12.250208854675293
    4. ',
' → logprob: -15.000208854675293
    5. 'op' → logprob: -15.500208854675293
    6. '_ops' → logprob: -16.12520980834961
    7. ')' → logprob: -16.25020980834961
    8. ' ops' → logprob: -16.62520980834961
    9. 'c' → logprob: -16.62520980834961
    10. 's' → logprob: -16.87520980834961

Token 194: ' ops' (ID: 26973)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07912728190422058
    2. 'ops' → logprob: -2.579127311706543
    3. ' c' → logprob: -8.704127311706543
    4. 'op' → logprob: -10.329127311706543
    5. ' ops' → logprob: -10.454127311706543
    6. '   ' → logprob: -12.329127311706543
    7. ' ' → logprob: -13.329127311706543
    8. 'opts' → logprob: -14.329127311706543
    9. '  ' → logprob: -14.579127311706543
    10. '	c' → logprob: -14.829127311706543

Token 195: '_choice' (ID: 73651)
  Prédit: '_choice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_choice' → logprob: -0.023249903693795204
    2. 'choice' → logprob: -3.773249864578247
    3. 'Choice' → logprob: -12.648249626159668
    4. '-choice' → logprob: -14.523249626159668
    5. ' choice' → logprob: -15.148249626159668
    6. '[' → logprob: -15.273249626159668
    7. '.choice' → logprob: -16.523250579833984
    8. '_choices' → logprob: -17.273250579833984
    9. 'choices' → logprob: -17.398250579833984
    10. '(choice' → logprob: -18.273250579833984

Token 196: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3425219549390022e-05
    2. '1' → logprob: -11.25001335144043
    3. '[
' → logprob: -15.00001335144043
    4. '(' → logprob: -17.25001335144043
    5. 's' → logprob: -18.12501335144043
    6. '
' → logprob: -18.50001335144043
    7. '2' → logprob: -18.62501335144043
    8. '0' → logprob: -18.75001335144043
    9. '```' → logprob: -18.87501335144043
    10. ',' → logprob: -19.25001335144043

Token 197: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -16.500001907348633
    4. '2' → logprob: -17.000001907348633
    5. '0' → logprob: -17.750001907348633
    6. '[' → logprob: -17.875001907348633
    7. '```' → logprob: -18.125001907348633
    8. '  ' → logprob: -18.562501907348633
    9. '
' → logprob: -19.187501907348633
    10. ')' → logprob: -20.000001907348633

Token 198: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20270368456840515
    2. 'c' → logprob: -1.7027037143707275
    3. ',c' → logprob: -6.827703475952148
    4. ' c' → logprob: -8.952703475952148
    5. ' ,' → logprob: -9.577703475952148
    6. ',
' → logprob: -12.452703475952148
    7. ')' → logprob: -13.452703475952148
    8. '),' → logprob: -13.452703475952148
    9. ')c' → logprob: -14.452703475952148
    10. ' ' → logprob: -16.57770347595215

Token 199: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -7.493430894101039e-05
    2. ' c' → logprob: -9.500075340270996
    3. ' ' → logprob: -19.37507438659668
    4. '   ' → logprob: -19.50007438659668
    5. '	c' → logprob: -19.87507438659668
    6. ')c' → logprob: -21.12507438659668
    7. '  ' → logprob: -21.75007438659668
    8. '
' → logprob: -22.37507438659668
    9. '_c' → logprob: -23.12507438659668
    10. '    ' → logprob: -23.50007438659668

Token 200: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.1318875446449965e-05
    2. ' ,' → logprob: -10.625041007995605
    3. 'ops' → logprob: -11.000041007995605
    4. '_ops' → logprob: -16.125041961669922
    5. ',
' → logprob: -16.625041961669922
    6. 'op' → logprob: -16.625041961669922
    7. ' ops' → logprob: -17.000041961669922
    8. '[' → logprob: -17.625041961669922
    9. ')' → logprob: -18.750041961669922
    10. '),' → logprob: -19.000041961669922

Token 201: ' ops' (ID: 26973)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.00672211404889822
    2. ' ops' → logprob: -5.0067219734191895
    3. 'op' → logprob: -12.631722450256348
    4. ' ' → logprob: -14.006722450256348
    5. '   ' → logprob: -14.006722450256348
    6. '_ops' → logprob: -14.881722450256348
    7. 'opts' → logprob: -15.006722450256348
    8. '       ' → logprob: -15.256722450256348
    9. '.ops' → logprob: -15.631722450256348
    10. '    ' → logprob: -15.881722450256348

Token 202: '_choice' (ID: 73651)
  Prédit: '_choice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_choice' → logprob: -0.0015087933279573917
    2. 'choice' → logprob: -6.501508712768555
    3. 'Choice' → logprob: -12.001508712768555
    4. '-choice' → logprob: -16.126508712768555
    5. '[' → logprob: -16.376508712768555
    6. '_choices' → logprob: -16.626508712768555
    7. ' choice' → logprob: -17.376508712768555
    8. '.choice' → logprob: -18.751508712768555
    9. 'choices' → logprob: -19.001508712768555
    10. '_' → logprob: -19.876508712768555

Token 203: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6166903151315637e-05
    2. '2' → logprob: -11.125016212463379
    3. ']' → logprob: -14.500016212463379
    4. '[
' → logprob: -14.750016212463379
    5. '(' → logprob: -15.250016212463379
    6. '0' → logprob: -15.625016212463379
    7. ' ' → logprob: -16.875015258789062
    8. '```' → logprob: -17.000015258789062
    9. ' [' → logprob: -17.250015258789062
    10. ',' → logprob: -17.500015258789062

Token 204: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -15.250000953674316
    3. '
' → logprob: -15.250000953674316
    4. '1' → logprob: -16.375001907348633
    5. ' ' → logprob: -16.375001907348633
    6. '```' → logprob: -16.750001907348633
    7. '0' → logprob: -17.125001907348633
    8. '-' → logprob: -17.375001907348633
    9. '۲' → logprob: -17.500001907348633
    10. '２' → logprob: -17.625001907348633

Token 205: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012856863031629473
    2. ' ,' → logprob: -9.500128746032715
    3. 'd' → logprob: -10.250128746032715
    4. ',d' → logprob: -11.000128746032715
    5. '),' → logprob: -14.250128746032715
    6. ')' → logprob: -14.625128746032715
    7. ' d' → logprob: -15.125128746032715
    8. '],' → logprob: -15.875128746032715
    9. ',
' → logprob: -17.2501277923584
    10. 's' → logprob: -17.8751277923584

Token 206: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0009115827269852161
    2. ' d' → logprob: -7.000911712646484
    3. ')d' → logprob: -17.125911712646484
    4. ')' → logprob: -19.250911712646484
    5. ' ' → logprob: -21.375911712646484
    6. '   ' → logprob: -22.125911712646484
    7. '	d' → logprob: -22.375911712646484
    8. '  ' → logprob: -22.875911712646484
    9. '_d' → logprob: -24.000911712646484
    10. '(d' → logprob: -24.250911712646484

Token 207: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. ')
' → logprob: -13.375001907348633
    3. ' )' → logprob: -15.250001907348633
    4. '))' → logprob: -16.500001907348633
    5. ')`' → logprob: -17.875001907348633
    6. ')#' → logprob: -18.000001907348633
    7. ')}' → logprob: -19.125001907348633
    8. '   ' → logprob: -19.125001907348633
    9. ')

' → logprob: -19.250001907348633
    10. '),' → logprob: -19.500001907348633

Token 208: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0036018555983901024
    2. 'yield' → logprob: -6.628602027893066
    3. ' yield' → logprob: -6.628602027893066
    4. '            
' → logprob: -7.628602027893066
    5. '
' → logprob: -8.378602027893066
    6. '               ' → logprob: -8.878602027893066
    7. '		' → logprob: -10.878602027893066
    8. '<|end|>' → logprob: -11.503602027893066
    9. ')' → logprob: -11.753602027893066
    10. '                        
' → logprob: -12.128602027893066

Token 209: ' if' (ID: 538)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yield' → logprob: -0.05115079879760742
    2. ' yield' → logprob: -3.0511507987976074
    3. 'if' (adapté à ' if') → logprob: -6.301150798797607
    4. '           ' → logprob: -7.926150798797607
    5. ' if' → logprob: -8.176151275634766
    6. 'result' → logprob: -10.176151275634766
    7. '	yield' → logprob: -10.551151275634766
    8. '
' → logprob: -11.801151275634766
    9. '            
' → logprob: -12.301151275634766
    10. '       ' → logprob: -13.301151275634766

Token 210: ' len' (ID: 4631)
  Prédit: 'eval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eval' → logprob: -0.34942951798439026
    2. ' eval' → logprob: -1.2244294881820679
    3. 'abs' → logprob: -7.724429607391357
    4. ' abs' → logprob: -7.724429607391357
    5. '(eval' → logprob: -9.5994291305542
    6. ' ' → logprob: -11.5994291305542
    7. ')' → logprob: -12.7244291305542
    8. 'expr' → logprob: -12.9744291305542
    9. 'evaluate' → logprob: -13.2244291305542
    10. ' ' → logprob: -13.2244291305542

Token 211: '(expr' (ID: 78746)
  Prédit: '(expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(expr' → logprob: -0.04580405727028847
    2. '(' → logprob: -3.295804023742676
    3. ' (' → logprob: -5.045804023742676
    4. '(str' → logprob: -7.670804023742676
    5. 'expr' → logprob: -7.920804023742676
    6. '(eval' → logprob: -8.045804023742676
    7. ' expr' → logprob: -9.420804023742676
    8. '(
' → logprob: -10.795804023742676
    9. '(expression' → logprob: -10.920804023742676
    10. '('' → logprob: -11.795804023742676

Token 212: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.606304943561554
    2. ' )' → logprob: -1.3563048839569092
    3. ' <=' → logprob: -1.9813048839569092
    4. ' <' → logprob: -2.981304883956909
    5. ' >' → logprob: -5.731305122375488
    6. ' ==' → logprob: -6.106305122375488
    7. ' >=' → logprob: -6.981305122375488
    8. '<=' → logprob: -7.606305122375488
    9. ')<=' → logprob: -7.981305122375488
    10. ' ' → logprob: -8.356305122375488

Token 213: ' >' (ID: 1424)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.031004425138235092
    2. ' <' → logprob: -4.531004428863525
    3. '<=' → logprob: -4.531004428863525
    4. ' ' → logprob: -5.656004428863525
    5. ' >' → logprob: -5.781004428863525
    6. '<' → logprob: -7.031004428863525
    7. ' ==' → logprob: -7.406004428863525
    8. ' >=' → logprob: -7.906004428863525
    9. '>' → logprob: -8.406003952026367
    10. ')' → logprob: -9.531003952026367

Token 214: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.44959738850593567
    2. '50' → logprob: -1.8245973587036133
    3. '100' → logprob: -1.9495973587036133
    4. ' ' → logprob: -3.5745973587036133
    5. '30' → logprob: -4.074597358703613
    6. '20' → logprob: -5.449597358703613
    7. '40' → logprob: -5.824597358703613
    8. '80' → logprob: -5.824597358703613
    9. '60' → logprob: -6.574597358703613
    10. '200' → logprob: -7.324597358703613

Token 215: '102' (ID: 7672)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.34766149520874023
    2. '50' → logprob: -1.8476614952087402
    3. '100' → logprob: -2.5976614952087402
    4. '30' → logprob: -3.0976614952087402
    5. '20' → logprob: -4.47266149520874
    6. '40' → logprob: -5.72266149520874
    7. '25' → logprob: -7.72266149520874
    8. '1' → logprob: -7.72266149520874
    9. '60' → logprob: -8.347661972045898
    10. '18' → logprob: -8.597661972045898

Token 216: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -4.4894986785948277e-05
    2. '0' → logprob: -10.125044822692871
    3. '3' → logprob: -13.750044822692871
    4. '40' → logprob: -13.750044822692871
    5. ' ' → logprob: -14.250044822692871
    6. '```' → logprob: -14.750044822692871
    7. ':' → logprob: -15.000044822692871
    8. '   ' → logprob: -15.125044822692871
    9. ')' → logprob: -15.250044822692871
    10. '  ' → logprob: -16.375045776367188

Token 217: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.37900474667549133
    2. ' and' → logprob: -1.254004716873169
    3. ' :' → logprob: -3.754004716873169
    4. '           ' → logprob: -5.754004955291748
    5. 'and' → logprob: -6.754004955291748
    6. ':
' → logprob: -7.129004955291748
    7. '            ' → logprob: -7.754004955291748
    8. '               ' → logprob: -8.00400447845459
    9. ' ' → logprob: -8.75400447845459
    10. ' or' → logprob: -8.87900447845459

Token 218: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.039108652621507645
    2. ' continue' → logprob: -3.5391087532043457
    3. 'continue' → logprob: -5.164108753204346
    4. '           ' → logprob: -5.664108753204346
    5. ':' → logprob: -11.164108276367188
    6. ' return' → logprob: -11.289108276367188
    7. '```' → logprob: -11.414108276367188
    8. ')' → logprob: -11.664108276367188
    9. 'return' → logprob: -11.789108276367188
    10. '_continue' → logprob: -11.914108276367188

Token 219: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.034463297575712204
    2. ' continue' → logprob: -3.534463405609131
    3. '               ' → logprob: -5.534463405609131
    4. '                   ' → logprob: -7.284463405609131
    5. '           ' → logprob: -10.159462928771973
    6. 'break' → logprob: -11.034462928771973
    7. '	continue' → logprob: -12.034462928771973
    8. 'return' → logprob: -12.909462928771973
    9. '                       ' → logprob: -13.034462928771973
    10. ' break' → logprob: -14.534462928771973

Token 220: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00017362393555231392
    2. '            
' → logprob: -9.250173568725586
    3. 'yield' → logprob: -10.500173568725586
    4. '```' → logprob: -11.375173568725586
    5. ' yield' → logprob: -11.500173568725586
    6. '
' → logprob: -11.500173568725586
    7. '               ' → logprob: -11.875173568725586
    8. '<|end|>' → logprob: -12.375173568725586
    9. '                
' → logprob: -13.750173568725586
    10. '       ' → logprob: -13.750173568725586

Token 221: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004421127669047564
    2. 'yield' → logprob: -8.250442504882812
    3. '            
' → logprob: -9.750442504882812
    4. '
' → logprob: -10.000442504882812
    5. ' yield' → logprob: -10.125442504882812
    6. '<|end|>' → logprob: -11.625442504882812
    7. '               ' → logprob: -11.875442504882812
    8. '```' → logprob: -12.125442504882812
    9. '       ' → logprob: -12.375442504882812
    10. '		' → logprob: -13.250442504882812

Token 222: ' val' (ID: 1459)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3836077153682709
    2. ' yield' → logprob: -1.8836077451705933
    3. 'yield' → logprob: -1.8836077451705933
    4. 'result' → logprob: -4.633607864379883
    5. ' result' → logprob: -5.883607864379883
    6. ' if' → logprob: -7.133607864379883
    7. 'if' → logprob: -8.008607864379883
    8. 'value' → logprob: -8.133607864379883
    9. ' value' → logprob: -8.383607864379883
    10. '            
' → logprob: -9.008607864379883

Token 223: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519350051879883
    2. ' =' → logprob: -1.5019350051879883
    3. 'al' → logprob: -12.376935005187988
    4. 'uate' → logprob: -15.251935005187988
    5. ' ' → logprob: -15.501935005187988
    6. ',' → logprob: -15.626935005187988
    7. '=

' → logprob: -15.626935005187988
    8. '＝' → logprob: -16.001934051513672
    9. 'alid' → logprob: -16.251934051513672
    10. ' ' → logprob: -16.376934051513672

Token 224: ' eval' (ID: 29383)
  Prédit: 'eval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eval' → logprob: -0.0007100477814674377
    2. ' eval' → logprob: -7.2507100105285645
    3. '(eval' → logprob: -16.250709533691406
    4. 'evaluate' → logprob: -18.500709533691406
    5. '   ' → logprob: -20.250709533691406
    6. 'val' → logprob: -20.375709533691406
    7. 'int' → logprob: -20.625709533691406
    8. '.eval' → logprob: -20.750709533691406
    9. 'expr' → logprob: -21.625709533691406
    10. '```' → logprob: -21.625709533691406

Token 225: '_expr' (ID: 53654)
  Prédit: '_expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expr' → logprob: -0.0008753741858527064
    2. '(expr' → logprob: -7.125875473022461
    3. 'expr' → logprob: -10.375875473022461
    4. '_' → logprob: -10.500875473022461
    5. '_EXPR' → logprob: -12.375875473022461
    6. '_(' → logprob: -12.500875473022461
    7. '(' → logprob: -12.750875473022461
    8. 'Expr' → logprob: -14.250875473022461
    9. '(EXPR' → logprob: -15.625875473022461
    10. '(_' → logprob: -15.625875473022461

Token 226: '(expr' (ID: 78746)
  Prédit: '(expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(expr' → logprob: -5.764977686339989e-05
    2. '(' → logprob: -9.875057220458984
    3. '(expression' → logprob: -12.875057220458984
    4. ' (' → logprob: -13.625057220458984
    5. 'expr' → logprob: -14.250057220458984
    6. '(express' → logprob: -14.250057220458984
    7. '(
' → logprob: -14.750057220458984
    8. '(EXPR' → logprob: -15.000057220458984
    9. '(exp' → logprob: -16.500057220458984
    10. '(eval' → logprob: -16.625057220458984

Token 227: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2519494891166687
    2. ')
' → logprob: -1.5019495487213135
    3. ')
' → logprob: -12.001949310302734
    4. ' )
' → logprob: -12.251949310302734
    5. ' )' → logprob: -12.376949310302734
    6. '           ' → logprob: -12.626949310302734
    7. ')

' → logprob: -13.751949310302734
    8. ')`
' → logprob: -15.251949310302734
    9. '               ' → logprob: -15.626949310302734
    10. '       ' → logprob: -15.626949310302734

Token 228: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00024084746837615967
    2. '<|end|>' → logprob: -8.62524127960205
    3. '            
' → logprob: -10.87524127960205
    4. '		' → logprob: -11.12524127960205
    5. '<|end|>' → logprob: -11.25024127960205
    6. '               ' → logprob: -12.12524127960205
    7. '       ' → logprob: -13.37524127960205
    8. ' ' → logprob: -13.62524127960205
    9. ' ' → logprob: -14.25024127960205
    10. '[' → logprob: -14.25024127960205

Token 229: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.22783005237579346
    2. '           ' → logprob: -1.9778300523757935
    3. 'if' (adapté à ' if') → logprob: -2.727829933166504
    4. ' ' → logprob: -12.602829933166504
    5. ' ' → logprob: -13.602829933166504
    6. ' yield' → logprob: -13.727829933166504
    7. '               ' → logprob: -14.102829933166504
    8. '```' → logprob: -14.102829933166504
    9. '		' → logprob: -14.352829933166504
    10. '          ' → logprob: -14.602829933166504

Token 230: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.011047935113310814
    2. 'val' → logprob: -4.511047840118408
    3. '(val' → logprob: -15.761048316955566
    4. ' ' → logprob: -17.88604736328125
    5. '[val' → logprob: -18.13604736328125
    6. '	val' → logprob: -18.26104736328125
    7. '    ' → logprob: -18.76104736328125
    8. 'Val' → logprob: -19.01104736328125
    9. ',val' → logprob: -19.63604736328125
    10. '_val' → logprob: -19.63604736328125

Token 231: ' ==' (ID: 951)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.24400848150253296
    2. ' ==' → logprob: -2.1190085411071777
    3. '==' → logprob: -2.3690085411071777
    4. 'is' → logprob: -6.619008541107178
    5. ' not' → logprob: -7.244008541107178
    6. '=' → logprob: -8.24400806427002
    7. '===' → logprob: -8.86900806427002
    8. ')' → logprob: -8.99400806427002
    9. '!=' → logprob: -9.24400806427002
    10. ' !=' → logprob: -10.24400806427002

Token 232: ' ' (ID: 220)
  Prédit: '24'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '24' → logprob: -0.04331910237669945
    2. ' ' → logprob: -3.1683189868927
    3. 'target' → logprob: -9.293318748474121
    4. '10' → logprob: -9.543318748474121
    5. '100' → logprob: -10.293318748474121
    6. '42' → logprob: -10.418318748474121
    7. '20' → logprob: -11.418318748474121
    8. '0' → logprob: -11.418318748474121
    9. '   ' → logprob: -11.668318748474121
    10. '```' → logprob: -11.793318748474121

Token 233: '10' (ID: 702)
  Prédit: '24'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '24' → logprob: -0.0011998742120340466
    2. 'target' → logprob: -7.376199722290039
    3. '10' → logprob: -8.376199722290039
    4. ' ' → logprob: -8.751199722290039
    5. '0' → logprob: -10.001199722290039
    6. '100' → logprob: -10.626199722290039
    7. '42' → logprob: -10.876199722290039
    8. '```' → logprob: -10.876199722290039
    9. '1' → logprob: -11.376199722290039
    10. '21' → logprob: -11.626199722290039

Token 234: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0028477907180786133
    2. ':
' → logprob: -5.877847671508789
    3. ' :' → logprob: -11.252847671508789
    4. ' and' → logprob: -11.252847671508789
    5. ':return' → logprob: -11.627847671508789
    6. '):' → logprob: -12.627847671508789
    7. ' or' → logprob: -12.877847671508789
    8. 'and' → logprob: -14.252847671508789
    9. '.' → logprob: -14.502847671508789
    10. ':
' → logprob: -14.877847671508789

Token 235: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00017755765293259174
    2. ' return' → logprob: -8.875177383422852
    3. 'return' → logprob: -10.625177383422852
    4. ' yield' → logprob: -12.625177383422852
    5. '                       ' → logprob: -12.625177383422852
    6. 'yield' → logprob: -13.125177383422852
    7. '           ' → logprob: -13.500177383422852
    8. '                   ' → logprob: -14.000177383422852
    9. '```' → logprob: -14.500177383422852
    10. '              ' → logprob: -14.750177383422852

Token 236: ' return' (ID: 622)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.042855989187955856
    2. ' return' → logprob: -3.417855978012085
    3. 'return' (adapté à ' return') → logprob: -4.792856216430664
    4. ' yield' → logprob: -7.792856216430664
    5. 'yield' → logprob: -8.167856216430664
    6. '                   ' → logprob: -8.792856216430664
    7. '                       ' → logprob: -11.292856216430664
    8. '                ' → logprob: -11.542856216430664
    9. '           ' → logprob: -13.042856216430664
    10. '              ' → logprob: -13.292856216430664

Token 237: ' expr' (ID: 30206)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.005234713666141033
    2. ' expr' → logprob: -5.255234718322754
    3. '(expr' → logprob: -14.005234718322754
    4. 'express' → logprob: -16.505233764648438
    5. 'f' → logprob: -17.505233764648438
    6. 'expression' → logprob: -17.630233764648438
    7. '.expr' → logprob: -19.380233764648438
    8. '[' → logprob: -19.505233764648438
    9. 'Expr' → logprob: -19.755233764648438
    10. ' ' → logprob: -20.130233764648438

Token 238: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6221272349357605
    2. '
' → logprob: -1.1221272945404053
    3. '<|end|>' → logprob: -2.7471272945404053
    4. '            
' → logprob: -4.122127056121826
    5. '           ' → logprob: -4.372127056121826
    6. ' 
' → logprob: -4.622127056121826
    7. '        
' → logprob: -5.247127056121826
    8. '    
' → logprob: -5.372127056121826
    9. '       ' → logprob: -5.497127056121826
    10. ' ' → logprob: -5.622127056121826

Token 239: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5138030648231506
    2. '
' → logprob: -1.3888030052185059
    3. '<|end|>' → logprob: -2.638803005218506
    4. '   ' → logprob: -3.888803005218506
    5. '    
' → logprob: -4.013803005218506
    6. '       ' → logprob: -5.013803005218506
    7. ' 
' → logprob: -5.013803005218506
    8. '           ' → logprob: -5.263803005218506
    9. '            
' → logprob: -5.263803005218506
    10. '        
' → logprob: -5.513803005218506

Token 240: ' return' (ID: 622)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.15147365629673004
    2. 'return' (adapté à ' return') → logprob: -2.1514737606048584
    3. '\n' → logprob: -4.526473522186279
    4. ' None' → logprob: -4.776473522186279
    5. '   ' → logprob: -6.651473522186279
    6. 'raise' → logprob: -6.901473522186279
    7. '
' → logprob: -7.526473522186279
    8. '    
' → logprob: -7.651473522186279
    9. ' return' → logprob: -7.651473522186279
    10. ' ' → logprob: -8.276473999023438

Token 241: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.014163628220558167
    2. ' None' → logprob: -4.264163494110107
    3. '''' → logprob: -16.639163970947266
    4. '""' → logprob: -17.264163970947266
    5. 'False' → logprob: -17.639163970947266
    6. '_None' → logprob: -17.889163970947266
    7. '(None' → logprob: -19.014163970947266
    8. '"' → logprob: -19.014163970947266
    9. 'No' → logprob: -20.139163970947266
    10. ''' → logprob: -20.389163970947266

Token 242: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 243: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 244: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.08380896598100662
    2. 'main' → logprob: -3.0838088989257812
    3. ' find' → logprob: -3.7088088989257812
    4. ' solve' → logprob: -4.833808898925781
    5. 'solve' → logprob: -6.333808898925781
    6. 'find' → logprob: -8.083808898925781
    7. ' make' → logprob: -11.958808898925781
    8. ' best' → logprob: -11.958808898925781
    9. ' ten' → logprob: -12.083808898925781
    10. ' check' → logprob: -12.333808898925781

Token 245: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -8.184812031686306e-05
    2. ' ():' → logprob: -10.125082015991211
    3. '():
' → logprob: -10.875082015991211
    4. '()' → logprob: -11.250082015991211
    5. '(' → logprob: -11.625082015991211
    6. '()>' → logprob: -15.250082015991211
    7. '():
' → logprob: -15.750082015991211
    8. '():

' → logprob: -16.25008201599121
    9. '(":' → logprob: -16.75008201599121
    10. '(:' → logprob: -17.00008201599121

Token 246: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20905885100364685
    2. ' import' → logprob: -2.7090587615966797
    3. 'import' → logprob: -3.0840587615966797
    4. ' nums' → logprob: -3.5840587615966797
    5. ' for' → logprob: -4.20905876159668
    6. ' numbers' → logprob: -4.33405876159668
    7. ' input' → logprob: -5.58405876159668
    8. ' lines' → logprob: -5.83405876159668
    9. ' inputs' → logprob: -6.08405876159668
    10. ' if' → logprob: -6.33405876159668

Token 247: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.8967100381851196
    2. ' lines' → logprob: -1.3967100381851196
    3. ' for' → logprob: -2.27170991897583
    4. 'lines' → logprob: -2.52170991897583
    5. 'input' → logprob: -2.89670991897583
    6. 'nums' → logprob: -2.89670991897583
    7. ' input' → logprob: -4.02170991897583
    8. '   ' → logprob: -4.77170991897583
    9. 'inputs' → logprob: -5.14670991897583
    10. 'line' → logprob: -5.64670991897583

Token 248: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.00031377444975078106
    2. 'line' → logprob: -8.125313758850098
    3. '	line' → logprob: -11.625313758850098
    4. '_line' → logprob: -12.750313758850098
    5. ' _' → logprob: -13.000313758850098
    6. ' nums' → logprob: -13.625313758850098
    7. '_' → logprob: -14.000313758850098
    8. '(line' → logprob: -14.750313758850098
    9. ' args' → logprob: -15.375313758850098
    10. ' ' → logprob: -16.000314712524414

Token 249: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0011761783389374614
    2. 'in' → logprob: -6.751176357269287
    3. ' ' → logprob: -13.501175880432129
    4. 'import' → logprob: -13.751175880432129
    5. 's' → logprob: -14.251175880432129
    6. ' ' → logprob: -14.751175880432129
    7. '	in' → logprob: -15.001175880432129
    8. '_' → logprob: -15.001175880432129
    9. ' =' → logprob: -15.251175880432129
    10. 'line' → logprob: -15.376175880432129

Token 250: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.6931583285331726
    2. 'sys' → logprob: -0.6931583285331726
    3. '=sys' → logprob: -11.818158149719238
    4. '(sys' → logprob: -13.068158149719238
    5. '	sys' → logprob: -13.443158149719238
    6. 'stdin' → logprob: -17.693159103393555
    7. '```' → logprob: -17.818159103393555
    8. 'in' → logprob: -18.193159103393555
    9. 'Sys' → logprob: -18.318159103393555
    10. '_sys' → logprob: -18.443159103393555

Token 251: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.006946129258722067
    2. 'stdin' → logprob: -5.006946086883545
    3. '(stdin' → logprob: -8.881946563720703
    4. '.readline' → logprob: -9.631946563720703
    5. ' stdin' → logprob: -11.256946563720703
    6. '.' → logprob: -12.631946563720703
    7. '.argv' → logprob: -12.631946563720703
    8. 'in' → logprob: -12.756946563720703
    9. '.stdout' → logprob: -12.881946563720703
    10. 'input' → logprob: -14.756946563720703

Token 252: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006429244764149189
    2. '.readline' → logprob: -5.506429195404053
    3. '.strip' → logprob: -6.881429195404053
    4. ':
' → logprob: -7.506429195404053
    5. '.readlines' → logprob: -8.131429672241211
    6. '.rstrip' → logprob: -8.756429672241211
    7. '.' → logprob: -9.006429672241211
    8. ' in' → logprob: -9.756429672241211
    9. '():' → logprob: -10.506429672241211
    10. 'rstrip' → logprob: -10.506429672241211

Token 253: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37865787744522095
    2. '       ' → logprob: -1.2536578178405762
    3. ' numbers' → logprob: -5.253657817840576
    4. ' tokens' → logprob: -5.503657817840576
    5. 'tokens' → logprob: -5.753657817840576
    6. ' line' → logprob: -6.128657817840576
    7. '    
' → logprob: -6.253657817840576
    8. '    ' → logprob: -6.253657817840576
    9. '<|end|>' → logprob: -6.378657817840576
    10. ',' → logprob: -6.753657817840576

Token 254: ' if' (ID: 538)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.5082607865333557
    2. ' nums' → logprob: -1.008260726928711
    3. 'nums' → logprob: -3.633260726928711
    4. 'line' → logprob: -5.258260726928711
    5. ' numbers' → logprob: -6.633260726928711
    6. ' tokens' → logprob: -8.133260726928711
    7. ' parts' → logprob: -9.258260726928711
    8. ' if' → logprob: -9.508260726928711
    9. '   ' → logprob: -10.008260726928711
    10. ' num' → logprob: -10.633260726928711

Token 255: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.06925703585147858
    2. 'not' → logprob: -3.0692570209503174
    3. ' line' → logprob: -4.0692572593688965
    4. 'line' → logprob: -5.6942572593688965
    5. '=line' → logprob: -13.944256782531738
    6. '#line' → logprob: -15.069256782531738
    7. ' ' → logprob: -15.194256782531738
    8. '	line' → logprob: -15.694256782531738
    9. '	not' → logprob: -15.694256782531738
    10. '(line' → logprob: -15.944256782531738

Token 256: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.01815006136894226
    2. 'line' → logprob: -4.0181498527526855
    3. '	line' → logprob: -16.393150329589844
    4. '(line' → logprob: -16.893150329589844
    5. '=line' → logprob: -18.518150329589844
    6. '#line' → logprob: -19.393150329589844
    7. ' ' → logprob: -19.768150329589844
    8. '[line' → logprob: -20.143150329589844
    9. 'ine' → logprob: -20.643150329589844
    10. '_line' → logprob: -20.768150329589844

Token 257: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.009894086048007011
    2. '.' → logprob: -4.634893894195557
    3. '.startswith' → logprob: -9.509894371032715
    4. ' .' → logprob: -10.384894371032715
    5. '.rstrip' → logprob: -10.509894371032715
    6. 'strip' → logprob: -13.259894371032715
    7. ':
' → logprob: -14.134894371032715
    8. '.readline' → logprob: -14.259894371032715
    9. '.chomp' → logprob: -14.259894371032715
    10. ' strip' → logprob: -14.384894371032715

Token 258: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.14409656822681427
    2. '():
' → logprob: -2.644096612930298
    3. ':' → logprob: -2.769096612930298
    4. ':
' → logprob: -8.394096374511719
    5. '):' → logprob: -9.769096374511719
    6. '()' → logprob: -9.894096374511719
    7. '=' → logprob: -10.519096374511719
    8. ' :' → logprob: -11.519096374511719
    9. '():
' → logprob: -11.519096374511719
    10. ':return' → logprob: -11.769096374511719

Token 259: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08068246394395828
    2. '       ' → logprob: -2.5806825160980225
    3. ' break' → logprob: -6.580682277679443
    4. '   ' → logprob: -8.580682754516602
    5. 'break' → logprob: -8.830682754516602
    6. ' continue' → logprob: -11.830682754516602
    7. '               ' → logprob: -11.830682754516602
    8. '
' → logprob: -11.955682754516602
    9. '	   ' → logprob: -11.955682754516602
    10. '	break' → logprob: -12.080682754516602

Token 260: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.3135029673576355
    2. ' break' → logprob: -1.3135030269622803
    3. '           ' → logprob: -9.43850326538086
    4. 'return' → logprob: -9.43850326538086
    5. 'continue' (adapté à ' continue') → logprob: -10.18850326538086
    6. '       ' → logprob: -10.81350326538086
    7. ' return' → logprob: -11.43850326538086
    8. '               ' → logprob: -12.06350326538086
    9. '	break' → logprob: -12.56350326538086
    10. ' continue' → logprob: -12.68850326538086

Token 261: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002003218833124265
    2. '        
' → logprob: -8.625200271606445
    3. '<|end|>' → logprob: -11.750200271606445
    4. '   ' → logprob: -12.625200271606445
    5. ',' → logprob: -12.625200271606445
    6. '
' → logprob: -13.625200271606445
    7. '           ' → logprob: -14.250200271606445
    8. '            
' → logprob: -14.625200271606445
    9. '  
' → logprob: -14.625200271606445
    10. '```' → logprob: -14.875200271606445

Token 262: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00016301481809932739
    2. '   ' → logprob: -9.250163078308105
    3. 'tokens' → logprob: -10.750163078308105
    4. '        
' → logprob: -11.125163078308105
    5. ' tokens' → logprob: -11.125163078308105
    6. '           ' → logprob: -12.625163078308105
    7. ' s' → logprob: -13.250163078308105
    8. ',' → logprob: -13.375163078308105
    9. '	' → logprob: -13.375163078308105
    10. 'token' → logprob: -13.500163078308105

Token 263: ' parts' (ID: 7881)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.1890876144170761
    2. ' nums' → logprob: -1.8140876293182373
    3. '       ' → logprob: -5.689087390899658
    4. ' parts' → logprob: -6.314087390899658
    5. 'numbers' → logprob: -6.314087390899658
    6. ' numbers' → logprob: -6.689087390899658
    7. 'parts' (adapté à ' parts') → logprob: -8.064087867736816
    8. '   ' → logprob: -8.314087867736816
    9. 'tokens' → logprob: -8.314087867736816
    10. ' tokens' → logprob: -9.189087867736816

Token 264: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011048528365790844
    2. '=' → logprob: -4.511048316955566
    3. '=line' → logprob: -14.761048316955566
    4. ')' → logprob: -16.136049270629883
    5. '＝' → logprob: -17.011049270629883
    6. '[]' → logprob: -17.511049270629883
    7. ',' → logprob: -17.886049270629883
    8. '[' → logprob: -17.886049270629883
    9. '=[]' → logprob: -18.011049270629883
    10. ' ' → logprob: -18.011049270629883

Token 265: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.048587825149297714
    2. ' line' → logprob: -3.0485877990722656
    3. 'list' → logprob: -14.673587799072266
    4. '[line' → logprob: -17.298587799072266
    5. '	line' → logprob: -18.423587799072266
    6. '=line' → logprob: -18.548587799072266
    7. '(line' → logprob: -18.923587799072266
    8. ' list' → logprob: -19.173587799072266
    9. '   ' → logprob: -20.673587799072266
    10. '_line' → logprob: -20.923587799072266

Token 266: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.012279941700398922
    2. '().' → logprob: -4.637279987335205
    3. '.split' → logprob: -6.262279987335205
    4. '.' → logprob: -7.512279987335205
    5. '.rstrip' → logprob: -10.262279510498047
    6. ' .' → logprob: -11.262279510498047
    7. 'strip' → logprob: -11.637279510498047
    8. '()' → logprob: -12.012279510498047
    9. '.readline' → logprob: -13.512279510498047
    10. '(strip' → logprob: -13.887279510498047

Token 267: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.360996485454962e-05
    2. '()' → logprob: -10.2500638961792
    3. '.split' → logprob: -10.5000638961792
    4. ' ().' → logprob: -14.8750638961792
    5. 'split' → logprob: -15.8750638961792
    6. '().'' → logprob: -16.625062942504883
    7. '.' → logprob: -17.250062942504883
    8. '(' → logprob: -17.375062942504883
    9. '()
' → logprob: -17.375062942504883
    10. '('' → logprob: -18.375062942504883

Token 268: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -17.5
    3. '(split' → logprob: -18.0
    4. 'spl' → logprob: -20.5
    5. '.split' → logprob: -21.375
    6. 'rstrip' → logprob: -22.0
    7. 'strip' → logprob: -22.25
    8. '```' → logprob: -24.25
    9. 'plit' → logprob: -25.0
    10. '_split' → logprob: -25.5

Token 269: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009226576657965779
    2. '('' → logprob: -7.625922679901123
    3. '(' → logprob: -7.875922679901123
    4. '()
' → logprob: -10.625922203063965
    5. '())' → logprob: -11.500922203063965
    6. '()]' → logprob: -12.250922203063965
    7. '(',' → logprob: -12.250922203063965
    8. '('.')' → logprob: -12.625922203063965
    9. '(','' → logprob: -13.625922203063965
    10. '()[' → logprob: -13.750922203063965

Token 270: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002423814032226801
    2. 'nums' → logprob: -7.2524237632751465
    3. '   ' → logprob: -7.6274237632751465
    4. ',' → logprob: -8.252424240112305
    5. ' nums' → logprob: -8.252424240112305
    6. ' if' → logprob: -8.627424240112305
    7. 'tokens' → logprob: -9.377424240112305
    8. '[' → logprob: -9.502424240112305
    9. '        
' → logprob: -9.752424240112305
    10. '<|end|>' → logprob: -9.877424240112305

Token 271: ' if' (ID: 538)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.127889022231102
    2. 'if' (adapté à ' if') → logprob: -2.1278889179229736
    3. 'numbers' → logprob: -7.377889156341553
    4. ' if' → logprob: -8.752888679504395
    5. '       ' → logprob: -9.627888679504395
    6. ' nums' → logprob: -9.627888679504395
    7. 'num' → logprob: -10.127888679504395
    8. 'n' → logprob: -14.002888679504395
    9. '        
' → logprob: -14.002888679504395
    10. 'try' → logprob: -14.252888679504395

Token 272: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0011703446507453918
    2. ' len' → logprob: -6.7511701583862305
    3. '(len' → logprob: -15.62617015838623
    4. '=len' → logprob: -18.751171112060547
    5. '   ' → logprob: -19.876171112060547
    6. '       ' → logprob: -20.751171112060547
    7. '	len' → logprob: -20.876171112060547
    8. 'length' → logprob: -21.251171112060547
    9. '
' → logprob: -21.876171112060547
    10. ',len' → logprob: -22.001171112060547

Token 273: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.00011832444579340518
    2. ' parts' → logprob: -9.625118255615234
    3. 'parts' → logprob: -9.875118255615234
    4. '(' → logprob: -15.000118255615234
    5. ' (' → logprob: -15.375118255615234
    6. ' <' → logprob: -16.500118255615234
    7. '==' → logprob: -17.375118255615234
    8. ' ==' → logprob: -17.375118255615234
    9. '=' → logprob: -17.875118255615234
    10. '(part' → logprob: -18.000118255615234

Token 274: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44138404726982117
    2. ' !=' → logprob: -1.3163840770721436
    3. '!=' → logprob: -3.3163840770721436
    4. '==' → logprob: -3.6913840770721436
    5. ' ==' → logprob: -4.1913838386535645
    6. '<' → logprob: -4.8163838386535645
    7. ' <' → logprob: -5.6913838386535645
    8. ')!=' → logprob: -8.191384315490723
    9. ' )' → logprob: -8.316384315490723
    10. '()' → logprob: -9.066384315490723

Token 275: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.027516795322299004
    2. ' !=' → logprob: -3.7775168418884277
    3. '<' → logprob: -5.777516841888428
    4. '==' → logprob: -6.777516841888428
    5. '()!=' → logprob: -11.65251636505127
    6. ' <' → logprob: -11.90251636505127
    7. ' ==' → logprob: -12.52751636505127
    8. '```' → logprob: -12.90251636505127
    9. '=' → logprob: -13.52751636505127
    10. '!==' → logprob: -14.02751636505127

Token 276: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '```' → logprob: -19.125019073486328
    4. '۴' → logprob: -19.500019073486328
    5. '٤' → logprob: -19.625019073486328
    6. '４' → logprob: -19.875019073486328
    7. '' → logprob: -20.125019073486328
    8. ' four' → logprob: -20.500019073486328
    9. '४' → logprob: -20.625019073486328
    10. '   ' → logprob: -21.312519073486328

Token 277: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.3544423381972592e-05
    2. ' ' → logprob: -11.25001335144043
    3. '```' → logprob: -15.87501335144043
    4. '٤' → logprob: -17.25001335144043
    5. '5' → logprob: -17.37501335144043
    6. '۴' → logprob: -17.37501335144043
    7. '４' → logprob: -17.56251335144043
    8. '४' → logprob: -17.62501335144043
    9. '7' → logprob: -17.68751335144043
    10. '   ' → logprob: -18.00001335144043

Token 278: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28135019540786743
    2. ':
' → logprob: -1.4063501358032227
    3. ' or' → logprob: -9.406350135803223
    4. ':return' → logprob: -9.531350135803223
    5. '       ' → logprob: -11.156350135803223
    6. '   ' → logprob: -11.781350135803223
    7. '):
' → logprob: -11.906350135803223
    8. '           ' → logprob: -12.281350135803223
    9. 'continue' → logprob: -12.781350135803223
    10. '):' → logprob: -13.281350135803223

Token 279: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001210114685818553
    2. ' continue' → logprob: -7.3762102127075195
    3. '       ' → logprob: -8.25121021270752
    4. 'continue' → logprob: -8.25121021270752
    5. ',' → logprob: -10.87621021270752
    6. '   ' → logprob: -10.87621021270752
    7. ' return' → logprob: -12.87621021270752
    8. ' continues' → logprob: -13.00121021270752
    9. '	       ' → logprob: -13.00121021270752
    10. '               ' → logprob: -13.12621021270752

Token 280: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8287391066551208
    2. 'continue' (adapté à ' continue') → logprob: -0.8287391066551208
    3. '       ' → logprob: -2.7037391662597656
    4. ' continue' → logprob: -2.9537391662597656
    5. 'return' → logprob: -5.328739166259766
    6. 'break' → logprob: -6.453739166259766
    7. 'print' → logprob: -7.328739166259766
    8. '               ' → logprob: -8.578739166259766
    9. ' break' → logprob: -8.828739166259766
    10. ' return' → logprob: -8.828739166259766

Token 281: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007460216875188053
    2. '        
' → logprob: -7.875746250152588
    3. '
' → logprob: -8.75074577331543
    4. '<|end|>' → logprob: -9.62574577331543
    5. ',' → logprob: -9.75074577331543
    6. '   ' → logprob: -10.12574577331543
    7. 'tokens' → logprob: -11.62574577331543
    8. '  
' → logprob: -11.87574577331543
    9. '    
' → logprob: -12.62574577331543
    10. 's' → logprob: -12.62574577331543

Token 282: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00016825977945700288
    2. '   ' → logprob: -9.625167846679688
    3. ',' → logprob: -10.500167846679688
    4. '        
' → logprob: -10.625167846679688
    5. '
' → logprob: -11.250167846679688
    6. '<|end|>' → logprob: -11.500167846679688
    7. '```' → logprob: -12.000167846679688
    8. 'tokens' → logprob: -12.375167846679688
    9. '	' → logprob: -12.625167846679688
    10. '  
' → logprob: -13.125167846679688

Token 283: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' (adapté à ' nums') → logprob: -0.00016337241686414927
    2. 'try' → logprob: -9.125163078308105
    3. ' nums' → logprob: -10.250163078308105
    4. 'numbers' → logprob: -11.125163078308105
    5. 'num' → logprob: -12.750163078308105
    6. '       ' → logprob: -14.375163078308105
    7. '        
' → logprob: -15.125163078308105
    8. '```' → logprob: -15.250163078308105
    9. 'digits' → logprob: -16.375164031982422
    10. 'n' → logprob: -16.750164031982422

Token 284: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0059287971816957
    2. '=' → logprob: -5.130928993225098
    3. ' =[' → logprob: -16.75592803955078
    4. '=[' → logprob: -18.00592803955078
    5. ')' → logprob: -18.13092803955078
    6. '=int' → logprob: -18.50592803955078
    7. 's' → logprob: -18.63092803955078
    8. '[' → logprob: -18.75592803955078
    9. '＝' → logprob: -19.13092803955078
    10. '=list' → logprob: -19.13092803955078

Token 285: ' tuple' (ID: 31311)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0356871522963047
    2. ' list' → logprob: -3.535687208175659
    3. 'tuple' → logprob: -5.28568696975708
    4. '[list' → logprob: -7.28568696975708
    5. ' tuple' → logprob: -8.785687446594238
    6. '[' → logprob: -11.160687446594238
    7. 'map' → logprob: -13.285687446594238
    8. ' [' → logprob: -13.910687446594238
    9. '(list' → logprob: -15.285687446594238
    10. '(tuple' → logprob: -15.535687446594238

Token 286: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.08550935238599777
    2. '(int' → logprob: -2.5855093002319336
    3. 'map' → logprob: -5.335509300231934
    4. 'int' → logprob: -6.335509300231934
    5. '[int' → logprob: -12.210509300231934
    6. '(' → logprob: -13.210509300231934
    7. ' map' → logprob: -13.960509300231934
    8. '(sorted' → logprob: -16.21051025390625
    9. ' int' → logprob: -16.71051025390625
    10. '.map' → logprob: -17.33551025390625

Token 287: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.014164921827614307
    2. 'int' → logprob: -4.264164924621582
    3. ' int' → logprob: -13.889164924621582
    4. '[int' → logprob: -15.889164924621582
    5. '(str' → logprob: -16.389163970947266
    6. '=int' → logprob: -16.514163970947266
    7. '<int' → logprob: -16.764163970947266
    8. '(' → logprob: -17.014163970947266
    9. 'str' → logprob: -17.139163970947266
    10. ',int' → logprob: -17.264163970947266

Token 288: ',' (ID: 11)
  Prédit: '(parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.00021807955636177212
    2. ',' → logprob: -8.750218391418457
    3. 'parts' → logprob: -10.250218391418457
    4. ' parts' → logprob: -11.250218391418457
    5. '(' → logprob: -11.625218391418457
    6. ' (' → logprob: -13.125218391418457
    7. ')' → logprob: -15.375218391418457
    8. '(part' → logprob: -16.87521743774414
    9. ' ,' → logprob: -17.50021743774414
    10. '(p' → logprob: -17.75021743774414

Token 289: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.005241702310740948
    2. ' parts' → logprob: -5.255241870880127
    3. '(parts' → logprob: -11.755241394042969
    4. '.parts' → logprob: -19.50524139404297
    5. '[' → logprob: -19.63024139404297
    6. '_parts' → logprob: -19.63024139404297
    7. '
' → logprob: -19.75524139404297
    8. ' ' → logprob: -19.88024139404297
    9. '   ' → logprob: -19.88024139404297
    10. '           ' → logprob: -21.63024139404297

Token 290: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0018129866803064942
    2. '[' → logprob: -6.501812934875488
    3. '[:' → logprob: -8.376812934875488
    4. ' ))' → logprob: -10.501812934875488
    5. ')))' → logprob: -10.501812934875488
    6. '[-' → logprob: -12.251812934875488
    7. '))
' → logprob: -12.376812934875488
    8. '));' → logprob: -12.501812934875488
    9. '[]' → logprob: -13.001812934875488
    10. '[:-' → logprob: -13.126812934875488

Token 291: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08425197750329971
    2. 'expr' → logprob: -2.584251880645752
    3. '<|end|>' → logprob: -6.084251880645752
    4. 'result' → logprob: -7.209251880645752
    5. '        
' → logprob: -7.834251880645752
    6. 'expression' → logprob: -8.20925235748291
    7. ' expr' → logprob: -8.20925235748291
    8. 'solution' → logprob: -8.58425235748291
    9. ' solution' → logprob: -8.83425235748291
    10. '```' → logprob: -8.95925235748291

Token 292: ' if' (ID: 538)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.34489521384239197
    2. ' res' → logprob: -1.8448952436447144
    3. 'expr' → logprob: -2.469895124435425
    4. 'result' → logprob: -3.344895124435425
    5. ' result' → logprob: -4.719895362854004
    6. ' expr' → logprob: -5.344895362854004
    7. '       ' → logprob: -10.094895362854004
    8. 'ans' → logprob: -10.469895362854004
    9. ' ans' → logprob: -10.719895362854004
    10. '        
' → logprob: -11.594895362854004

Token 293: ' nums' (ID: 18117)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.5999462008476257
    2. ' expr' → logprob: -1.2249462604522705
    3. 'result' → logprob: -3.0999462604522705
    4. ' result' → logprob: -3.2249462604522705
    5. 'nums' → logprob: -3.8499462604522705
    6. ' res' → logprob: -4.599946022033691
    7. 'res' → logprob: -4.849946022033691
    8. ' (' → logprob: -4.849946022033691
    9. ' nums' → logprob: -5.099946022033691
    10. ' len' → logprob: -5.474946022033691

Token 294: ' ==' (ID: 951)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6050073504447937
    2. ' not' → logprob: -1.2300074100494385
    3. ' ==' → logprob: -1.9800074100494385
    4. '==' → logprob: -4.105007171630859
    5. '[' → logprob: -5.855007171630859
    6. ')' → logprob: -6.605007171630859
    7. ' permutations' → logprob: -6.980007171630859
    8. ':' → logprob: -7.980007171630859
    9. '[::-' → logprob: -8.23000717163086
    10. 'not' → logprob: -8.35500717163086

Token 295: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009190816199406981
    2. ' (' → logprob: -7.000918865203857
    3. '()' → logprob: -11.875919342041016
    4. '(None' → logprob: -14.625919342041016
    5. '(-' → logprob: -16.250919342041016
    6. '   ' → logprob: -16.625919342041016
    7. ' ' → logprob: -16.875919342041016
    8. '('' → logprob: -17.750919342041016
    9. '0' → logprob: -17.875919342041016
    10. '()
' → logprob: -18.375919342041016

Token 296: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1235886961221695
    2. '10' → logprob: -2.498588800430298
    3. '1' → logprob: -3.498588800430298
    4. '4' → logprob: -6.498588562011719
    5. ')' → logprob: -6.748588562011719
    6. '9' → logprob: -7.623588562011719
    7. '7' → logprob: -8.748588562011719
    8. '(' → logprob: -8.998588562011719
    9. '2' → logprob: -9.248588562011719
    10. '```' → logprob: -9.873588562011719

Token 297: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.339278580620885e-06
    2. ' ,' → logprob: -13.125001907348633
    3. ',
' → logprob: -15.125001907348633
    4. ',)' → logprob: -17.250001907348633
    5. ' ' → logprob: -17.375001907348633
    6. '0' → logprob: -17.500001907348633
    7. '):' → logprob: -19.250001907348633
    8. '   ' → logprob: -19.250001907348633
    9. '):
' → logprob: -19.625001907348633
    10. ')' → logprob: -19.750001907348633

Token 298: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011703446507453918
    2. ' ' → logprob: -6.7511701583862305
    3. ')' → logprob: -15.75117015838623
    4. '  ' → logprob: -19.001171112060547
    5. '
' → logprob: -19.001171112060547
    6. ' 
' → logprob: -20.626171112060547
    7. '  
' → logprob: -20.876171112060547
    8. '))' → logprob: -21.001171112060547
    9. '   ' → logprob: -21.501171112060547
    10. ',' → logprob: -21.626171112060547

Token 299: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.3464544432936236e-05
    2. '0' → logprob: -10.250043869018555
    3. ' ,' → logprob: -11.750043869018555
    4. ',
' → logprob: -16.750043869018555
    5. ' ' → logprob: -17.250043869018555
    6. ')' → logprob: -17.750043869018555
    7. '<|end|>' → logprob: -19.250043869018555
    8. '00' → logprob: -19.750043869018555
    9. '
' → logprob: -20.125043869018555
    10. '‌,' → logprob: -20.750043869018555

Token 300: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. ')' → logprob: -19.6250057220459
    4. '۰' → logprob: -20.5000057220459
    5. '00' → logprob: -20.6250057220459
    6. ',' → logprob: -20.7500057220459
    7. '  ' → logprob: -21.2500057220459
    8. '1' → logprob: -21.2500057220459
    9. '
' → logprob: -21.7500057220459
    10. '```' → logprob: -22.3125057220459

Token 301: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000810936326161027
    2. '0' → logprob: -7.1258111000061035
    3. ' ,' → logprob: -12.000810623168945
    4. ' ' → logprob: -15.750810623168945
    5. ')' → logprob: -16.625810623168945
    6. ',
' → logprob: -17.750810623168945
    7. '
' → logprob: -21.375810623168945
    8. '   ' → logprob: -21.750810623168945
    9. '،' → logprob: -21.750810623168945
    10. '```' → logprob: -21.875810623168945

Token 302: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. ')' → logprob: -16.8750057220459
    4. '
' → logprob: -19.2500057220459
    5. '۰' → logprob: -19.6250057220459
    6. '```' → logprob: -19.8125057220459
    7. '1' → logprob: -19.8750057220459
    8. '   ' → logprob: -20.7500057220459
    9. '  ' → logprob: -21.0625057220459
    10. '))' → logprob: -21.1250057220459

Token 303: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5759543180465698
    2. '):' → logprob: -0.8259543180465698
    3. ')' → logprob: -11.70095443725586
    4. '):
' → logprob: -12.07595443725586
    5. '):

' → logprob: -14.32595443725586
    6. ':' → logprob: -15.95095443725586
    7. ':
' → logprob: -16.32595443725586
    8. ' ):
' → logprob: -16.95095443725586
    9. ' ):' → logprob: -17.32595443725586
    10. ''):
' → logprob: -17.45095443725586

Token 304: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003588224353734404
    2. '       ' → logprob: -8.000358581542969
    3. '               ' → logprob: -11.750358581542969
    4. '   ' → logprob: -12.000358581542969
    5. 'break' → logprob: -12.500358581542969
    6. '	       ' → logprob: -13.375358581542969
    7. ' break' → logprob: -13.750358581542969
    8. '		' → logprob: -14.125358581542969
    9. '
' → logprob: -14.750358581542969
    10. '          ' → logprob: -15.250358581542969

Token 305: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.08449772745370865
    2. ' break' → logprob: -2.5844976902008057
    3. 'return' → logprob: -5.334497928619385
    4. '           ' → logprob: -7.334497928619385
    5. '               ' → logprob: -9.959497451782227
    6. ' return' → logprob: -10.209497451782227
    7. '	break' → logprob: -10.459497451782227
    8. '       ' → logprob: -12.584497451782227
    9. '_break' → logprob: -14.209497451782227
    10. '   ' → logprob: -15.834497451782227

Token 306: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008102210704237223
    2. '<|end|>' → logprob: -7.875810146331787
    3. '   ' → logprob: -8.500810623168945
    4. '        
' → logprob: -8.625810623168945
    5. '<|end|>' → logprob: -11.625810623168945
    6. '
' → logprob: -11.625810623168945
    7. '    
' → logprob: -11.750810623168945
    8. '           ' → logprob: -12.375810623168945
    9. '  
' → logprob: -12.500810623168945
    10. '```' → logprob: -13.125810623168945

Token 307: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00035095500061288476
    2. 'expr' → logprob: -8.500350952148438
    3. '        
' → logprob: -9.750350952148438
    4. '   ' → logprob: -9.750350952148438
    5. '           ' → logprob: -11.625350952148438
    6. '
' → logprob: -12.125350952148438
    7. 'result' → logprob: -12.375350952148438
    8. '<|end|>' → logprob: -12.625350952148438
    9. '    
' → logprob: -13.125350952148438
    10. 'expression' → logprob: -13.625350952148438

Token 308: ' found' (ID: 2491)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.36884424090385437
    2. 'result' → logprob: -1.8688442707061768
    3. 'res' → logprob: -2.4938442707061768
    4. ' result' → logprob: -3.4938442707061768
    5. ' expr' → logprob: -4.243844032287598
    6. ' res' → logprob: -4.243844032287598
    7. '       ' → logprob: -4.493844032287598
    8. 'solution' → logprob: -7.743844032287598
    9. ' solution' → logprob: -7.868844032287598
    10. '   ' → logprob: -9.493844032287598

Token 309: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11813962459564209
    2. '=' → logprob: -2.4931397438049316
    3. '_expr' → logprob: -3.6181397438049316
    4. '_' → logprob: -6.368139743804932
    5. '_expression' → logprob: -8.618139266967773
    6. ' ' → logprob: -11.243139266967773
    7. '_=' → logprob: -11.493139266967773
    8. 'expr' → logprob: -12.243139266967773
    9. ' ' → logprob: -12.493139266967773
    10. '_eq' → logprob: -13.493139266967773

Token 310: ' None' (ID: 4662)
  Prédit: 'generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'generate' → logprob: -0.03809037432074547
    2. ' generate' → logprob: -3.288090467453003
    3. 'None' → logprob: -10.538090705871582
    4. 'False' → logprob: -11.413090705871582
    5. ' None' → logprob: -12.163090705871582
    6. '(generate' → logprob: -12.163090705871582
    7. ' False' → logprob: -14.038090705871582
    8. '   ' → logprob: -16.913089752197266
    9. '.generate' → logprob: -17.538089752197266
    10. 'gener' → logprob: -18.163089752197266

Token 311: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22245602309703827
    2. '<|end|>' → logprob: -2.5974559783935547
    3. ' =' → logprob: -2.9724559783935547
    4. '
' → logprob: -2.9724559783935547
    5. '        
' → logprob: -5.347455978393555
    6. '=' → logprob: -5.472455978393555
    7. '<|end|>' → logprob: -5.472455978393555
    8. ' if' → logprob: -5.847455978393555
    9. ' for' → logprob: -6.222455978393555
    10. '		
' → logprob: -7.472455978393555

Token 312: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09943854063749313
    2. '
' → logprob: -3.224438428878784
    3. ' for' → logprob: -3.599438428878784
    4. ' =' → logprob: -4.724438667297363
    5. ' if' → logprob: -4.849438667297363
    6. '<|end|>' → logprob: -5.724438667297363
    7. 'for' → logprob: -6.099438667297363
    8. '        
' → logprob: -6.224438667297363
    9. '=' → logprob: -7.099438667297363
    10. ' 
' → logprob: -7.724438667297363

Token 313: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.006873206235468388
    2. '       ' → logprob: -5.00687313079834
    3. 'from' → logprob: -8.88187313079834
    4. '   ' → logprob: -11.25687313079834
    5. ' for' → logprob: -12.63187313079834
    6. 'import' → logprob: -13.25687313079834
    7. 'per' → logprob: -15.13187313079834
    8. '	for' → logprob: -15.38187313079834
    9. 'perm' → logprob: -16.006874084472656
    10. 'nums' → logprob: -16.006874084472656

Token 314: ' perm' (ID: 5961)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.07102108001708984
    2. 'p' → logprob: -3.44602108001709
    3. 'nums' → logprob: -3.94602108001709
    4. 'per' → logprob: -4.57102108001709
    5. 'num' → logprob: -5.07102108001709
    6. 'seq' → logprob: -8.32102108001709
    7. 'combo' → logprob: -8.44602108001709
    8. '_' → logprob: -9.57102108001709
    9. '   ' → logprob: -10.44602108001709
    10. 'comb' → logprob: -10.57102108001709

Token 315: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020584745332598686
    2. 'utations' → logprob: -4.770584583282471
    3. 'utation' → logprob: -4.895584583282471
    4. 'in' → logprob: -5.895584583282471
    5. 'uation' → logprob: -6.770584583282471
    6. 'ution' → logprob: -8.270585060119629
    7. 'ation' → logprob: -9.895585060119629
    8. 's' → logprob: -10.020585060119629
    9. 'ination' → logprob: -10.520585060119629
    10. 'uted' → logprob: -10.645585060119629

Token 316: ' permutations' (ID: 174595)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.00023607931507285684
    2. ' permutations' → logprob: -8.375236511230469
    3. '	per' → logprob: -12.875236511230469
    4. '(per' → logprob: -13.625236511230469
    5. 'perm' → logprob: -13.625236511230469
    6. '   ' → logprob: -15.250236511230469
    7. '_per' → logprob: -15.500236511230469
    8. '.per' → logprob: -16.62523651123047
    9. '-per' → logprob: -17.00023651123047
    10. 'permissions' → logprob: -18.87523651123047

Token 317: '(nums' (ID: 40372)
  Prédit: '(nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nums' → logprob: -8.65707261255011e-06
    2. '(' → logprob: -12.375008583068848
    3. '(numbers' → logprob: -12.625008583068848
    4. 'nums' → logprob: -14.250008583068848
    5. ' (' → logprob: -15.625008583068848
    6. '(num' → logprob: -16.625009536743164
    7. ' nums' → logprob: -17.125009536743164
    8. '(parts' → logprob: -18.000009536743164
    9. '<|end|>' → logprob: -18.250009536743164
    10. '_nums' → logprob: -18.500009536743164

Token 318: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11792224645614624
    2. '):' → logprob: -2.492922306060791
    3. '(' → logprob: -4.242922306060791
    4. '):
' → logprob: -4.867922306060791
    5. ' ,' → logprob: -5.992922306060791
    6. '4' → logprob: -6.742922306060791
    7. '   ' → logprob: -7.367922306060791
    8. '```' → logprob: -7.492922306060791
    9. '       ' → logprob: -7.742922306060791
    10. '           ' → logprob: -7.867922306060791

Token 319: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009541921317577362
    2. ' found' → logprob: -5.009541988372803
    3. 'found' → logprob: -6.259541988372803
    4. '(found' → logprob: -8.134541511535645
    5. '            
' → logprob: -8.509541511535645
    6. '
' → logprob: -8.884541511535645
    7. '<|end|>' → logprob: -9.634541511535645
    8. '	found' → logprob: -10.009541511535645
    9. '   ' → logprob: -10.259541511535645
    10. '	       ' → logprob: -10.759541511535645

Token 320: ' res' (ID: 694)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.834208607673645
    2. 'found' → logprob: -0.959208607673645
    3. ' found' → logprob: -1.709208607673645
    4. '           ' → logprob: -6.9592084884643555
    5. 'expr' → logprob: -8.459208488464355
    6. '	found' → logprob: -8.709208488464355
    7. '(found' → logprob: -9.709208488464355
    8. '   ' → logprob: -9.709208488464355
    9. 'result' → logprob: -10.209208488464355
    10. '       ' → logprob: -10.959208488464355

Token 321: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22555799782276154
    2. '=' → logprob: -1.6005580425262451
    3. '=res' → logprob: -9.225558280944824
    4. '=find' → logprob: -11.100558280944824
    5. 'ult' → logprob: -12.600558280944824
    6. '           ' → logprob: -12.600558280944824
    7. '=result' → logprob: -12.725558280944824
    8. '=None' → logprob: -12.850558280944824
    9. 'found' → logprob: -13.100558280944824
    10. ' found' → logprob: -13.725558280944824

Token 322: ' generate' (ID: 10419)
  Prédit: 'generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'generate' → logprob: -0.008614808320999146
    2. ' generate' → logprob: -4.758615016937256
    3. '(generate' → logprob: -15.383614540100098
    4. '.generate' → logprob: -17.883615493774414
    5. '           ' → logprob: -18.758615493774414
    6. 'find' → logprob: -21.008615493774414
    7. '_generate' → logprob: -21.133615493774414
    8. 'enerate' → logprob: -21.508615493774414
    9. '```' → logprob: -22.883615493774414
    10. 'get' → logprob: -23.633615493774414

Token 323: '_expr' (ID: 53654)
  Prédit: '_expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expr' → logprob: -6.511406809295295e-06
    2. 'expr' → logprob: -12.000006675720215
    3. 'Expr' → logprob: -15.875006675720215
    4. '_' → logprob: -17.0000057220459
    5. '(expr' → logprob: -18.1250057220459
    6. 'express' → logprob: -18.3750057220459
    7. '```' → logprob: -18.8750057220459
    8. '_EXPR' → logprob: -18.8750057220459
    9. ''_' → logprob: -19.6250057220459
    10. '_expression' → logprob: -20.0000057220459

Token 324: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.739826181321405e-05
    2. 'expr' → logprob: -10.25004768371582
    3. 'res' → logprob: -12.12504768371582
    4. 'ss' → logprob: -12.50004768371582
    5. '_expr' → logprob: -14.37504768371582
    6. 'pressions' → logprob: -14.75004768371582
    7. 'ress' → logprob: -14.87504768371582
    8. '(expr' → logprob: -15.00004768371582
    9. 'es' → logprob: -15.25004768371582
    10. 'rs' → logprob: -16.12504768371582

Token 325: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.7697225252486533e-06
    2. '(list' → logprob: -13.375003814697266
    3. '(per' → logprob: -13.875003814697266
    4. '((' → logprob: -14.000003814697266
    5. ' (' → logprob: -15.125003814697266
    6. 'perm' → logprob: -16.500003814697266
    7. '(*' → logprob: -17.500003814697266
    8. '([' → logprob: -17.875003814697266
    9. '(res' → logprob: -18.250003814697266
    10. '```' → logprob: -18.500003814697266

Token 326: 'perm' (ID: 34794)
  Prédit: 'perm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' → logprob: -3.8889261304575484e-06
    2. ' perm' → logprob: -12.625003814697266
    3. 'per' → logprob: -14.625003814697266
    4. '(' → logprob: -18.625003814697266
    5. 'list' → logprob: -19.500003814697266
    6. 'perf' → logprob: -20.250003814697266
    7. 'pert' → logprob: -20.500003814697266
    8. '   ' → logprob: -20.750003814697266
    9. '[' → logprob: -21.000003814697266
    10. ')' → logprob: -21.750003814697266

Token 327: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.037378307431936264
    2. '(' → logprob: -3.4123783111572266
    3. ')
' → logprob: -6.162378311157227
    4. 'perm' → logprob: -7.162378311157227
    5. '(per' → logprob: -8.037378311157227
    6. '(res' → logprob: -8.162378311157227
    7. '           ' → logprob: -9.537378311157227
    8. ' perm' → logprob: -10.037378311157227
    9. '(nums' → logprob: -10.537378311157227
    10. '))' → logprob: -10.787378311157227

Token 328: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.470901229884475e-05
    2. '<|end|>' → logprob: -10.37508487701416
    3. '       ' → logprob: -11.00008487701416
    4. '```' → logprob: -11.75008487701416
    5. ' if' → logprob: -12.00008487701416
    6. '<|end|>' → logprob: -12.00008487701416
    7. '		' → logprob: -12.50008487701416
    8. '	       ' → logprob: -12.62508487701416
    9. '               ' → logprob: -13.00008487701416
    10. '[' → logprob: -13.12508487701416

Token 329: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5777636170387268
    2. 'if' (adapté à ' if') → logprob: -0.8277636170387268
    3. ' if' → logprob: -6.327763557434082
    4. '       ' → logprob: -10.452763557434082
    5. '   ' → logprob: -12.827763557434082
    6. '		' → logprob: -13.452763557434082
    7. '               ' → logprob: -13.702763557434082
    8. '	if' → logprob: -13.952763557434082
    9. '	       ' → logprob: -14.327763557434082
    10. '          ' → logprob: -14.952763557434082

Token 330: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.3868710398674011
    2. 'res' → logprob: -1.136871099472046
    3. '(res' → logprob: -17.636871337890625
    4. '	res' → logprob: -18.011871337890625
    5. '$res' → logprob: -19.386871337890625
    6. ' ' → logprob: -19.386871337890625
    7. '_res' → logprob: -20.011871337890625
    8. '=res' → logprob: -20.386871337890625
    9. 'resc' → logprob: -20.511871337890625
    10. '           ' → logprob: -20.511871337890625

Token 331: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.09323591738939285
    2. ':' → logprob: -2.468235969543457
    3. ':
' → logprob: -5.843235969543457
    4. '!=' → logprob: -7.468235969543457
    5. 'is' → logprob: -7.718235969543457
    6. '==' → logprob: -9.093235969543457
    7. ' !=' → logprob: -9.593235969543457
    8. '<|end|>' → logprob: -9.718235969543457
    9. ')' → logprob: -10.343235969543457
    10. '):
' → logprob: -10.593235969543457

Token 332: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.3868848979473114
    2. 'not' → logprob: -1.1368849277496338
    3. '               ' → logprob: -11.886884689331055
    4. '                   ' → logprob: -13.011884689331055
    5. 'Not' → logprob: -13.386884689331055
    6. '           ' → logprob: -13.761884689331055
    7. '	not' → logprob: -15.136884689331055
    8. '   ' → logprob: -15.386884689331055
    9. ' ' → logprob: -15.386884689331055
    10. '                       ' → logprob: -15.636884689331055

Token 333: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0031808018684387207
    2. ' None' → logprob: -5.753180980682373
    3. 'none' → logprob: -14.253180503845215
    4. '(None' → logprob: -14.378180503845215
    5. 'not' → logprob: -14.378180503845215
    6. '=None' → logprob: -14.753180503845215
    7. 'found' → logprob: -15.253180503845215
    8. '_None' → logprob: -15.253180503845215
    9. '_none' → logprob: -16.50318145751953
    10. 'res' → logprob: -16.75318145751953

Token 334: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38132044672966003
    2. ':
' → logprob: -1.2563204765319824
    3. '               ' → logprob: -3.5063204765319824
    4. '           ' → logprob: -6.381320476531982
    5. '):
' → logprob: -8.381319999694824
    6. ':return' → logprob: -9.506319999694824
    7. '                       ' → logprob: -9.881319999694824
    8. '                   ' → logprob: -10.006319999694824
    9. '):' → logprob: -10.381319999694824
    10. ':

' → logprob: -10.506319999694824

Token 335: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00030185774085111916
    2. 'found' → logprob: -8.6253023147583
    3. ' found' → logprob: -9.1253023147583
    4. '			' → logprob: -13.1253023147583
    5. '           ' → logprob: -13.2503023147583
    6. '                   ' → logprob: -13.3753023147583
    7. '                       ' → logprob: -13.5003023147583
    8. '(found' → logprob: -13.6253023147583
    9. '	           ' → logprob: -14.3753023147583
    10. '                
' → logprob: -14.3753023147583

Token 336: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' (adapté à ' found') → logprob: -0.27414894104003906
    2. '               ' → logprob: -1.524148941040039
    3. ' found' → logprob: -4.024148941040039
    4. 'print' → logprob: -5.899148941040039
    5. '           ' → logprob: -7.024148941040039
    6. '                   ' → logprob: -7.774148941040039
    7. '	found' → logprob: -11.274148941040039
    8. '   ' → logprob: -11.774148941040039
    9. ' print' → logprob: -11.774148941040039
    10. '       ' → logprob: -12.274148941040039

Token 337: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326448917388916
    2. ' =' → logprob: -1.3132644891738892
    3. '=True' → logprob: -13.813264846801758
    4. '<|end|>' → logprob: -14.688264846801758
    5. '=
' → logprob: -15.063264846801758
    6. '=

' → logprob: -16.063264846801758
    7. ' =
' → logprob: -16.063264846801758
    8. '＝' → logprob: -16.188264846801758
    9. '=None' → logprob: -16.688264846801758
    10. ' ' → logprob: -16.938264846801758

Token 338: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.01814994215965271
    2. ' res' → logprob: -4.0181498527526855
    3. '(res' → logprob: -18.268150329589844
    4. '	res' → logprob: -19.768150329589844
    5. '$res' → logprob: -19.893150329589844
    6. 'resc' → logprob: -20.143150329589844
    7. '_res' → logprob: -20.268150329589844
    8. 'resi' → logprob: -22.018150329589844
    9. '=res' → logprob: -22.393150329589844
    10. 'ress' → logprob: -22.393150329589844

Token 339: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -9.865583706414327e-05
    2. '			' → logprob: -10.37509822845459
    3. '<|end|>' → logprob: -10.37509822845459
    4. '		       ' → logprob: -11.50009822845459
    5. '           ' → logprob: -12.12509822845459
    6. '                
' → logprob: -12.25009822845459
    7. '	           ' → logprob: -12.87509822845459
    8. '                   ' → logprob: -13.00009822845459
    9. '
' → logprob: -13.12509822845459
    10. '              ' → logprob: -13.50009822845459

Token 340: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00010199354437645525
    2. '			' → logprob: -9.750102043151855
    3. '           ' → logprob: -11.125102043151855
    4. '		       ' → logprob: -11.875102043151855
    5. '
' → logprob: -12.125102043151855
    6. '	           ' → logprob: -12.375102043151855
    7. '                
' → logprob: -12.625102043151855
    8. '<|end|>' → logprob: -13.375102043151855
    9. '       ' → logprob: -13.750102043151855
    10. '                   ' → logprob: -13.875102043151855

Token 341: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.025472277775406837
    2. 'break' (adapté à ' break') → logprob: -3.7754721641540527
    3. ' break' → logprob: -6.400472164154053
    4. '			' → logprob: -7.775472164154053
    5. '           ' → logprob: -9.775472640991211
    6. '	break' → logprob: -10.275472640991211
    7. '                   ' → logprob: -11.025472640991211
    8. '	           ' → logprob: -11.400472640991211
    9. 'print' → logprob: -12.025472640991211
    10. '		       ' → logprob: -12.275472640991211

Token 342: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008788274135440588
    2. '   ' → logprob: -7.625878810882568
    3. '
' → logprob: -8.000879287719727
    4. '           ' → logprob: -11.000879287719727
    5. '<|end|>' → logprob: -11.500879287719727
    6. 'if' → logprob: -11.875879287719727
    7. ' if' → logprob: -12.000879287719727
    8. '        
' → logprob: -12.625879287719727
    9. '	' → logprob: -13.000879287719727
    10. '    
' → logprob: -13.000879287719727

Token 343: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020728250965476036
    2. 'if' → logprob: -6.877072811126709
    3. '   ' → logprob: -7.252072811126709
    4. ' if' → logprob: -8.502073287963867
    5. 'print' → logprob: -9.377073287963867
    6. '           ' → logprob: -10.377073287963867
    7. '```' → logprob: -12.502073287963867
    8. ' print' → logprob: -12.877073287963867
    9. '	' → logprob: -13.627073287963867
    10. '	if' → logprob: -13.877073287963867

Token 344: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1585671454668045
    2. 'if' (adapté à ' if') → logprob: -2.658567190170288
    3. '   ' → logprob: -2.658567190170288
    4. ' if' → logprob: -5.033566951751709
    5. 'print' → logprob: -11.158567428588867
    6. '           ' → logprob: -12.783567428588867
    7. '```' → logprob: -13.033567428588867
    8. '
' → logprob: -14.283567428588867
    9. '	if' → logprob: -14.283567428588867
    10. ' print' → logprob: -15.033567428588867

Token 345: ' found' (ID: 2491)
  Prédit: ' found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' found' → logprob: -0.0053594522178173065
    2. 'found' → logprob: -5.255359649658203
    3. ' not' → logprob: -9.005359649658203
    4. '	found' → logprob: -13.380359649658203
    5. '(found' → logprob: -14.255359649658203
    6. 'not' → logprob: -15.255359649658203
    7. ' ' → logprob: -16.005359649658203
    8. ' ' → logprob: -16.130359649658203
    9. '    ' → logprob: -16.505359649658203
    10. 'Found' → logprob: -16.630359649658203

Token 346: ':
' (ID: 734)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.29554760456085205
    2. ':' → logprob: -1.420547604560852
    3. ':
' → logprob: -4.5455474853515625
    4. '   ' → logprob: -6.1705474853515625
    5. '           ' → logprob: -8.170547485351562
    6. ' print' → logprob: -8.420547485351562
    7. 'is' → logprob: -8.545547485351562
    8. 'print' → logprob: -8.545547485351562
    9. '       ' → logprob: -9.045547485351562
    10. '=' → logprob: -9.045547485351562

Token 347: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017753805732354522
    2. 'print' → logprob: -6.87677526473999
    3. ' print' → logprob: -7.25177526473999
    4. '	       ' → logprob: -11.126775741577148
    5. '       ' → logprob: -11.876775741577148
    6. '		' → logprob: -13.126775741577148
    7. '```' → logprob: -13.126775741577148
    8. '               ' → logprob: -13.251775741577148
    9. '   ' → logprob: -14.001775741577148
    10. '	print' → logprob: -14.001775741577148

Token 348: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.2560017704963684
    2. ' print' → logprob: -1.5060017108917236
    3. '           ' → logprob: -5.506001949310303
    4. '	print' → logprob: -14.256001472473145
    5. '```' → logprob: -14.506001472473145
    6. '               ' → logprob: -14.756001472473145
    7. '   ' → logprob: -14.756001472473145
    8. '       ' → logprob: -15.881001472473145
    9. '.print' → logprob: -17.13100242614746
    10. ' ' → logprob: -18.50600242614746

Token 349: '(found' (ID: 105397)
  Prédit: '(found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(found' → logprob: -1.7432603272027336e-06
    2. '(' → logprob: -13.500001907348633
    3. 'found' → logprob: -15.250001907348633
    4. '(find' → logprob: -19.625001907348633
    5. ' found' → logprob: -19.625001907348633
    6. '(f' → logprob: -20.375001907348633
    7. '	found' → logprob: -20.375001907348633
    8. ' (' → logprob: -20.375001907348633
    9. '((' → logprob: -22.250001907348633
    10. 'Found' → logprob: -23.125001907348633

Token 350: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.480199954239652e-05
    2. ')
' → logprob: -10.000064849853516
    3. '())' → logprob: -11.250064849853516
    4. ' )' → logprob: -12.750064849853516
    5. '()' → logprob: -12.875064849853516
    6. '')' → logprob: -14.500064849853516
    7. '")' → logprob: -15.875064849853516
    8. '))' → logprob: -16.625064849853516
    9. ')`' → logprob: -17.375064849853516
    10. '   ' → logprob: -17.875064849853516

Token 351: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.13654941320419312
    2. '       ' → logprob: -2.761549472808838
    3. ' else' → logprob: -2.761549472808838
    4. '   ' → logprob: -7.386549472808838
    5. '<|end|>' → logprob: -7.636549472808838
    6. '	else' → logprob: -9.51154899597168
    7. '```' → logprob: -10.63654899597168
    8. '           ' → logprob: -10.88654899597168
    9. '<|end|>' → logprob: -11.88654899597168
    10. '	' → logprob: -12.26154899597168

Token 352: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.008717396296560764
    2. ' else' → logprob: -4.7587175369262695
    3. '       ' → logprob: -9.25871753692627
    4. '   ' → logprob: -12.38371753692627
    5. '	else' → logprob: -12.75871753692627
    6. '<|end|>' → logprob: -15.75871753692627
    7. 'elif' → logprob: -15.88371753692627
    8. '           ' → logprob: -16.258716583251953
    9. '```' → logprob: -16.883716583251953
    10. 'elser' → logprob: -17.883716583251953

Token 353: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01303116325289011
    2. ':
' → logprob: -4.388031005859375
    3. '           ' → logprob: -7.638031005859375
    4. ' :' → logprob: -11.513031005859375
    5. '       ' → logprob: -11.763031005859375
    6. '   ' → logprob: -12.263031005859375
    7. ':
' → logprob: -12.638031005859375
    8. '{' → logprob: -12.638031005859375
    9. '          ' → logprob: -13.638031005859375
    10. '():' → logprob: -13.763031005859375

Token 354: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16422824561595917
    2. 'print' → logprob: -2.0392282009124756
    3. ' print' → logprob: -3.9142282009124756
    4. '	       ' → logprob: -7.289228439331055
    5. '   ' → logprob: -8.039228439331055
    6. '	print' → logprob: -8.289228439331055
    7. ' ' → logprob: -10.539228439331055
    8. '<|end|>' → logprob: -10.789228439331055
    9. '       ' → logprob: -10.914228439331055
    10. '		' → logprob: -12.039228439331055

Token 355: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.7994282795116305e-05
    2. ' print' → logprob: -10.12504768371582
    3. '   ' → logprob: -12.00004768371582
    4. '           ' → logprob: -13.75004768371582
    5. '	print' → logprob: -14.25004768371582
    6. '       ' → logprob: -18.00004768371582
    7. ' ' → logprob: -18.25004768371582
    8. '```' → logprob: -18.75004768371582
    9. 'println' → logprob: -18.87504768371582
    10. 'printf' → logprob: -19.12504768371582

Token 356: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7914677262306213
    2. '("' → logprob: -0.9164677262306213
    3. '('' → logprob: -2.0414676666259766
    4. '(No' → logprob: -4.666467666625977
    5. '(None' → logprob: -5.916467666625977
    6. '(NO' → logprob: -6.291467666625977
    7. 'No' → logprob: -7.666467666625977
    8. '(-' → logprob: -7.791467666625977
    9. '(N' → logprob: -7.916467666625977
    10. '(no' → logprob: -8.041467666625977

Token 357: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.2739719152450562
    2. 'NONE' → logprob: -1.6489719152450562
    3. '"' → logprob: -1.8989719152450562
    4. 'No' → logprob: -2.0239720344543457
    5. '"No' → logprob: -2.0239720344543457
    6. 'None' → logprob: -2.6489720344543457
    7. 'NO' → logprob: -3.5239720344543457
    8. 'none' → logprob: -5.273972034454346
    9. 'no' → logprob: -6.148972034454346
    10. '10' → logprob: -6.398972034454346

Token 358: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.438573680294212e-06
    2. ')
' → logprob: -12.375005722045898
    3. '0' → logprob: -14.250005722045898
    4. ' )' → logprob: -15.500005722045898
    5. '))' → logprob: -16.2500057220459
    6. '')' → logprob: -16.5000057220459
    7. '`)' → logprob: -16.7500057220459
    8. ')`' → logprob: -16.8750057220459
    9. '<|end|>' → logprob: -17.0000057220459
    10. '")' → logprob: -18.2500057220459

Token 359: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00020771251001860946
    2. ' if' → logprob: -9.750207901000977
    3. '
' → logprob: -10.000207901000977
    4. '<|end|>' → logprob: -10.125207901000977
    5. '```' → logprob: -10.125207901000977
    6. '  
' → logprob: -11.125207901000977
    7. '    
' → logprob: -12.625207901000977
    8. ' 
' → logprob: -13.250207901000977
    9. '\n' → logprob: -14.125207901000977
    10. '        
' → logprob: -14.500207901000977

Token 360: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.38720908761024475
    2. ' __' → logprob: -1.1372090578079224
    3. 'name' → logprob: -8.887208938598633
    4. '_' → logprob: -9.887208938598633
    5. ' ' → logprob: -10.137208938598633
    6. '_name' → logprob: -10.137208938598633
    7. '___' → logprob: -10.262208938598633
    8. 'Name' → logprob: -11.637208938598633
    9. ' ' → logprob: -12.012208938598633
    10. ' ' → logprob: -12.637208938598633

Token 361: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0044279820285737514
    2. '==' → logprob: -6.254427909851074
    3. ' ==' → logprob: -6.379427909851074
    4. ' __' → logprob: -7.504427909851074
    5. '.__' → logprob: -9.504427909851074
    6. '__.__' → logprob: -9.754427909851074
    7. '_' → logprob: -10.379427909851074
    8. 'name' → logprob: -10.879427909851074
    9. '=="' → logprob: -11.129427909851074
    10. '___' → logprob: -11.879427909851074

Token 362: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.310693111619912e-05
    2. '__.__' → logprob: -10.125042915344238
    3. '==' → logprob: -13.750042915344238
    4. '__('' → logprob: -13.875042915344238
    5. '__.' → logprob: -14.500042915344238
    6. '__["' → logprob: -16.250043869018555
    7. '___' → logprob: -16.250043869018555
    8. '____' → logprob: -16.375043869018555
    9. '__
' → logprob: -16.625043869018555
    10. '=="' → logprob: -17.375043869018555

Token 363: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3547321856021881
    2. ' ==' → logprob: -1.8547321557998657
    3. '==' → logprob: -2.2297322750091553
    4. '=="' → logprob: -3.9797322750091553
    5. '=='' → logprob: -4.229732036590576
    6. '['' → logprob: -8.354732513427734
    7. '"' → logprob: -8.604732513427734
    8. '__.__' → logprob: -8.604732513427734
    9. ''' → logprob: -8.979732513427734
    10. '[' → logprob: -9.104732513427734

Token 364: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10022090375423431
    2. ''' → logprob: -2.3502209186553955
    3. ' "__' → logprob: -11.600220680236816
    4. '__' → logprob: -12.475220680236816
    5. ' '__' → logprob: -13.725220680236816
    6. ''"' → logprob: -16.225221633911133
    7. '"user' → logprob: -17.600221633911133
    8. '"'' → logprob: -17.975221633911133
    9. '"name' → logprob: -18.225221633911133
    10. '('__' → logprob: -18.350221633911133

Token 365: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.02342599257826805
    2. '__' → logprob: -3.773426055908203
    3. '"' → logprob: -9.148426055908203
    4. 'name' → logprob: -9.648426055908203
    5. ''' → logprob: -12.648426055908203
    6. '__":
' → logprob: -13.273426055908203
    7. 'python' → logprob: -13.648426055908203
    8. '___' → logprob: -14.148426055908203
    9. '_main' → logprob: -14.398426055908203
    10. 'built' → logprob: -14.523426055908203

Token 366: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.07926099002361298
    2. '__' → logprob: -2.579261064529419
    3. '__':
' → logprob: -8.20426082611084
    4. '__:' → logprob: -9.32926082611084
    5. '__.' → logprob: -12.82926082611084
    6. '__["' → logprob: -12.95426082611084
    7. '__.__' → logprob: -14.20426082611084
    8. ':' → logprob: -14.20426082611084
    9. '__
' → logprob: -14.57926082611084
    10. '.' → logprob: -14.70426082611084

Token 367: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.9402319192886353
    2. 'main' → logprob: -1.1902319192886353
    3. '	main' → logprob: -1.3152319192886353
    4. '   ' → logprob: -3.3152318000793457
    5. '_main' → logprob: -7.815231800079346
    6. '    
' → logprob: -9.565232276916504
    7. '(main' → logprob: -9.940232276916504
    8. '```' → logprob: -11.315232276916504
    9. '_MAIN' → logprob: -11.690232276916504
    10. '	Main' → logprob: -11.815232276916504

Token 368: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -7.52919222577475e-05
    2. ' main' → logprob: -9.500075340270996
    3. '	main' → logprob: -15.500075340270996
    4. '   ' → logprob: -15.750075340270996
    5. '.main' → logprob: -22.00007438659668
    6. '(main' → logprob: -22.12507438659668
    7. '_main' → logprob: -22.50007438659668
    8. ' ' → logprob: -23.50007438659668
    9. '  ' → logprob: -24.12507438659668
    10. 'import' → logprob: -24.12507438659668

Token 369: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 367
Tokens correctement prédits (1ère position, stricte): 151
Tokens correctement prédits (1ère position, avec adaptation): 165
Tokens correctement prédits (top 10): 322
Précision stricte (1ère position): 41.14%
Précision adaptée (1ère position): 44.96%
Précision (top 10): 87.74%
================================================================================
