================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:26
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math

def dist(a, b):
    return math.hypot(a[0]-b[0], a[1]-b[1])

def dot(a,b):
    return a[0]*b[0]+a[1]*b[1]

def sub(a,b):
    return (a[0]-b[0], a[1]-b[1])

def add(a,b):
    return (a[0]+b[0], a[1]+b[1])

def mul(a,s):
    return (a[0]*s, a[1]*s)

def norm(a):
    return math.hypot(a[0], a[1])

def reflect(v, n):
    # v reflected on normal n (normalized)
    d = dot(v, n)
    return sub(v, mul(n, 2*d))

def solve(D, px, py, vx, vy):
    P = (px, py)
    V = (vx, vy)
    R = 1.0
    EPS = 1e-14

    if norm(V) < 1e-12:
        # no velocity, no hits
        return None

    dist_total = 0.0
    while dist_total + EPS < D:
        # if projectile crosses origin => hits lab
        # try to find t > 0 such that P + V*t = (0,0)
        # => t = -P/V componentwise (must be same for x and y)
        # check if origin is on path segment before next reflection
        # first find intersection with circle x^2+y^2=R^2
        # line: X = P + V*t
        # solve (P_x + V_x t)^2 + (P_y + V_y t)^2 = R^2
        a = V[0]*V[0]+V[1]*V[1]
        b = 2*(P[0]*V[0]+P[1]*V[1])
        c = P[0]*P[0]+P[1]*P[1]-R*R
        disc = b*b - 4*a*c
        if disc < -EPS:
            # no intersection circle ahead, so path is line segment "as is"
            # check if hits origin on line segment
            if P == (0,0):
                return dist_total
            t0 = float('inf')
        else:
            disc = max(0.0, disc)
            t1 = (-b - math.sqrt(disc))/(2*a)
            t2 = (-b + math.sqrt(disc))/(2*a)
            # find smallest positive t for circle intersection > EPS
            ts = [t for t in [t1,t2] if t > EPS]
            if ts:
                t_circle = min(ts)
            else:
                t_circle = float('inf')

        # check if hits origin before t_circle
        # solve for t: P+tV = 0 => t_x = -P_x/V_x if V_x!=0 else None
        # same for y. If both exist and equal within EPS, and t>0 and t<t_circle:
        # hits origin
        tx = -P[0]/V[0] if abs(V[0])>EPS else None
        ty = -P[1]/V[1] if abs(V[1])>EPS else None
        if tx is not None and ty is not None:
            if abs(tx - ty) < 1e-13 and tx > EPS and tx < t_circle+EPS:
                dist_hit = dist_total + norm(mul(V, tx))
                if dist_hit <= D+EPS:
                    return dist_hit
        elif tx is not None and abs(P[1]) < EPS:
            # y is 0, check if passes origin at tx
            if tx > EPS and tx < t_circle+EPS:
                dist_hit = dist_total + norm(mul(V, tx))
                if dist_hit <= D+EPS:
                    return dist_hit
        elif ty is not None and abs(P[0]) < EPS:
            if ty > EPS and ty < t_circle+EPS:
                dist_hit = dist_total + norm(mul(V, ty))
                if dist_hit <= D+EPS:
                    return dist_hit
        elif P == (0,0):
            return dist_total

        # now move to next reflection point or until D reached
        dist_to_circle = norm(mul(V, t_circle)) if t_circle != float('inf') else float('inf')

        if dist_total + dist_to_circle > D:
            # travel max remaining distance and no hit origin, impossible
            break

        # update position and velocity at reflection
        P = add(P, mul(V, t_circle))
        dist_total += dist_to_circle

        n = (P[0]/R, P[1]/R)  # normal vector at reflection point (normalized)
        V = reflect(V, n)

    return None


for line in sys.stdin:
    D = float(line.strip())
    if D == 0.0:
        break
    px, py, vx, vy = map(float, sys.stdin.readline().strip().split())
    res = solve(D, px, py, vx, vy)
    if res is None:
        print("impossible")
    else:
        print("%.8f" % res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7367362976074219
    2. '\n' → logprob: -0.7367362976074219
    3. 'import' → logprob: -4.486736297607422
    4. 'newline' → logprob: -4.736736297607422
    5. '\' → logprob: -4.861736297607422
    6. '
' → logprob: -5.736736297607422
    7. '```' → logprob: -5.736736297607422
    8. '<|end|>' → logprob: -5.986736297607422
    9. '' → logprob: -6.486736297607422
    10. 'print' → logprob: -7.236736297607422

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020497082732617855
    2. 'os' → logprob: -8.500205039978027
    3. '"os' → logprob: -14.875205039978027
    4. ' math' → logprob: -15.000205039978027
    5. ' re' → logprob: -15.125205039978027
    6. '_os' → logprob: -15.750205039978027
    7. ' json' → logprob: -16.12520408630371
    8. '	os' → logprob: -16.37520408630371
    9. ' ' → logprob: -17.50020408630371
    10. ' ' → logprob: -17.50020408630371

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.14778776466846466
    2. '\n' → logprob: -2.8977878093719482
    3. '\' → logprob: -3.7727878093719482
    4. '
' → logprob: -3.8977878093719482
    5. 'import' → logprob: -4.147787570953369
    6. '```' → logprob: -4.397787570953369
    7. '

' → logprob: -5.772787570953369
    8. '<|end|>' → logprob: -6.147787570953369
    9. ',' → logprob: -6.272787570953369
    10. '.
' → logprob: -6.772787570953369

Token 6: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.1420094966888428
    2. '\' → logprob: -1.3920094966888428
    3. 'import' → logprob: -2.1420094966888428
    4. '\n' → logprob: -2.1420094966888428
    5. '```' → logprob: -2.3920094966888428
    6. 'def' → logprob: -3.2670094966888428
    7. '
' → logprob: -4.142009735107422
    8. ',' → logprob: -4.642009735107422
    9. '`' → logprob: -4.892009735107422
    10. '*' → logprob: -4.892009735107422

Token 7: ' dist' (ID: 3601)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.025061270222067833
    2. ' calculate' → logprob: -4.150061130523682
    3. ' factorial' → logprob: -5.775061130523682
    4. ' space' → logprob: -6.150061130523682
    5. '_' → logprob: -7.025061130523682
    6. ' math' → logprob: -7.650061130523682
    7. ' e' → logprob: -7.900061130523682
    8. ' compute' → logprob: -7.900061130523682
    9. ' my' → logprob: -8.90006160736084
    10. ' calc' → logprob: -9.02506160736084

Token 8: '(a' (ID: 6271)
  Prédit: 'ance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ance' → logprob: -0.18779349327087402
    2. '(' → logprob: -2.187793493270874
    3. '(a' → logprob: -2.937793493270874
    4. 'a' → logprob: -5.812793731689453
    5. ' an' → logprob: -6.937793731689453
    6. 'ANCE' → logprob: -7.062793731689453
    7. '_' → logprob: -7.437793731689453
    8. 'an' → logprob: -8.062793731689453
    9. 'anc' → logprob: -9.187793731689453
    10. '```' → logprob: -9.687793731689453

Token 9: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019036196172237396
    2. ' ,' → logprob: -4.019036293029785
    3. '[' → logprob: -8.394036293029785
    4. ',a' → logprob: -8.519036293029785
    5. ',b' → logprob: -8.644036293029785
    6. ')' → logprob: -8.644036293029785
    7. ' ' → logprob: -10.894036293029785
    8. ',p' → logprob: -11.144036293029785
    9. '):' → logprob: -11.144036293029785
    10. ',)' → logprob: -11.394036293029785

Token 10: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6938145756721497
    2. ' b' → logprob: -0.6938145756721497
    3. ',' → logprob: -7.568814754486084
    4. ' ,' → logprob: -9.443814277648926
    5. ' ' → logprob: -10.068814277648926
    6. ')' → logprob: -11.318814277648926
    7. ',b' → logprob: -11.818814277648926
    8. ' )' → logprob: -12.318814277648926
    9. '<|end|>' → logprob: -13.193814277648926
    10. ')b' → logprob: -14.443814277648926

Token 11: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14939936995506287
    2. ')' → logprob: -2.0243992805480957
    3. ',' → logprob: -5.024399280548096
    4. '):
' → logprob: -9.774399757385254
    5. ':' → logprob: -11.024399757385254
    6. ' ):' → logprob: -11.524399757385254
    7. '),' → logprob: -11.774399757385254
    8. '.' → logprob: -12.149399757385254
    9. '[' → logprob: -12.399399757385254
    10. 'a' → logprob: -12.649399757385254

Token 12: '   ' (ID: 271)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7064250111579895
    2. '(' → logprob: -1.8314249515533447
    3. ':' → logprob: -1.8314249515533447
    4. '(a' → logprob: -2.3314249515533447
    5. '   ' → logprob: -3.0814249515533447
    6. ' return' → logprob: -4.581425189971924
    7. ',' → logprob: -4.956425189971924
    8. ' (' → logprob: -4.956425189971924
    9. '():' → logprob: -4.956425189971924
    10. '.' → logprob: -6.081425189971924

Token 13: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6991894841194153
    2. '   ' → logprob: -1.0741894245147705
    3. 'return' (adapté à ' return') → logprob: -1.9491894245147705
    4. '    ' → logprob: -4.19918966293335
    5. ' ' → logprob: -6.07418966293335
    6. '       ' → logprob: -8.074189186096191
    7. ' math' → logprob: -8.199189186096191
    8. '```' → logprob: -8.199189186096191
    9. ')' → logprob: -8.949189186096191
    10. '  ' → logprob: -8.949189186096191

Token 14: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.31572991609573364
    2. ' ((' → logprob: -1.8157298564910889
    3. ' ' → logprob: -2.690729856491089
    4. ' (' → logprob: -3.440729856491089
    5. '(math' → logprob: -5.565730094909668
    6. 'math' → logprob: -6.065730094909668
    7. '((' → logprob: -7.065730094909668
    8. '(' → logprob: -7.190730094909668
    9. ' abs' → logprob: -8.815730094909668
    10. ' (((' → logprob: -9.315730094909668

Token 15: '.h' (ID: 1508)
  Prédit: '.sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.31427890062332153
    2. '.' → logprob: -1.3142788410186768
    3. '.dist' → logprob: -7.439279079437256
    4. '.s' → logprob: -8.439278602600098
    5. '.atan' → logprob: -9.814278602600098
    6. '.pow' → logprob: -9.814278602600098
    7. ' .' → logprob: -10.689278602600098
    8. '.h' → logprob: -10.814278602600098
    9. '.pi' → logprob: -11.064278602600098
    10. '.f' → logprob: -11.314278602600098

Token 16: 'yp' (ID: 1785)
  Prédit: 'yp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yp' → logprob: -0.00016539888747502118
    2. 'a' → logprob: -9.000164985656738
    3. 'av' → logprob: -10.625164985656738
    4. 'y' → logprob: -11.125164985656738
    5. 'hyp' → logprob: -14.000164985656738
    6. 'e' → logprob: -14.625164985656738
    7. 'sqrt' → logprob: -15.375164985656738
    8. 'ype' → logprob: -15.625164985656738
    9. 'yper' → logprob: -15.625164985656738
    10. 'avers' → logprob: -16.000165939331055

Token 17: 'ot' (ID: 346)
  Prédit: 'ot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.00014287306112237275
    2. 'o' → logprob: -9.250143051147461
    3. 'otl' → logprob: -11.125143051147461
    4. '```' → logprob: -11.750143051147461
    5. 'ots' → logprob: -12.125143051147461
    6. 'otlin' → logprob: -12.250143051147461
    7. '``' → logprob: -12.500143051147461
    8. 'otp' → logprob: -12.625143051147461
    9. 'от' → logprob: -13.250143051147461
    10. 'at' → logprob: -13.875143051147461

Token 18: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25220388174057007
    2. '(a' → logprob: -1.5022039413452148
    3. '((' → logprob: -8.377203941345215
    4. ' (' → logprob: -10.502203941345215
    5. '(abs' → logprob: -12.002203941345215
    6. '(
' → logprob: -12.502203941345215
    7. '(b' → logprob: -12.877203941345215
    8. '(x' → logprob: -13.002203941345215
    9. '(

' → logprob: -14.502203941345215
    10. '(s' → logprob: -15.252203941345215

Token 19: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.310693111619912e-05
    2. '-' → logprob: -10.625042915344238
    3. ' ' → logprob: -11.875042915344238
    4. ' -' → logprob: -12.250042915344238
    5. ')' → logprob: -13.375042915344238
    6. ',' → logprob: -13.500042915344238
    7. '.' → logprob: -13.625042915344238
    8. 'x' → logprob: -14.250042915344238
    9. '(' → logprob: -14.375042915344238
    10. '.x' → logprob: -15.125042915344238

Token 20: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.250005722045898
    3. '1' → logprob: -14.500005722045898
    4. '[' → logprob: -15.875005722045898
    5. '   ' → logprob: -17.5000057220459
    6. '  ' → logprob: -18.7500057220459
    7. '۰' → logprob: -19.3125057220459
    8. ']' → logprob: -19.7500057220459
    9. '-' → logprob: -19.8125057220459
    10. '

' → logprob: -19.9375057220459

Token 21: ']-' (ID: 27107)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2014751136302948
    2. '-' → logprob: -1.7014751434326172
    3. ' ' → logprob: -9.826475143432617
    4. '   ' → logprob: -12.951475143432617
    5. ',' → logprob: -13.326475143432617
    6. ' –' → logprob: -14.451475143432617
    7. ' ' → logprob: -14.576475143432617
    8. '  ' → logprob: -14.701475143432617
    9. '–' → logprob: -14.701475143432617
    10. '[' → logprob: -15.201475143432617

Token 22: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0011703446507453918
    2. ' b' → logprob: -6.7511701583862305
    3. ' ' → logprob: -16.251171112060547
    4. '	b' → logprob: -17.751171112060547
    5. ')b' → logprob: -18.376171112060547
    6. '<|end|>' → logprob: -18.501171112060547
    7. '  ' → logprob: -18.626171112060547
    8. '   ' → logprob: -18.626171112060547
    9. ')' → logprob: -19.626171112060547
    10. ' б' → logprob: -20.251171112060547

Token 23: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.034592388459714e-06
    2. ' [' → logprob: -12.875005722045898
    3. '0' → logprob: -13.500005722045898
    4. '1' → logprob: -13.875005722045898
    5. '][' → logprob: -15.125005722045898
    6. ' ' → logprob: -15.625005722045898
    7. '[
' → logprob: -16.0000057220459
    8. ']' → logprob: -16.4375057220459
    9. ''[' → logprob: -16.6875057220459
    10. ')' → logprob: -17.0625057220459

Token 24: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.75000286102295
    3. '1' → logprob: -16.250003814697266
    4. '۰' → logprob: -17.250003814697266
    5. '[' → logprob: -18.000003814697266
    6. '   ' → logprob: -18.437503814697266
    7. '```' → logprob: -18.625003814697266
    8. '０' → logprob: -18.687503814697266
    9. '  ' → logprob: -18.812503814697266
    10. '٠' → logprob: -20.000003814697266

Token 25: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016706773021724075
    2. ' ,' → logprob: -8.875166893005371
    3. '),' → logprob: -11.125166893005371
    4. ')' → logprob: -12.375166893005371
    5. ',
' → logprob: -12.375166893005371
    6. '   ' → logprob: -13.625166893005371
    7. ',a' → logprob: -13.875166893005371
    8. ',)' → logprob: -14.875166893005371
    9. ',

' → logprob: -15.000166893005371
    10. '],' → logprob: -15.125166893005371

Token 26: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.1802087426185608
    2. 'a' → logprob: -1.805208683013916
    3. ' ' → logprob: -8.055209159851074
    4. ' ' → logprob: -10.055209159851074
    5. '<|end|>' → logprob: -10.430209159851074
    6. 'b' → logprob: -10.555209159851074
    7. ')' → logprob: -11.680209159851074
    8. ' b' → logprob: -11.680209159851074
    9. ' (' → logprob: -12.305209159851074
    10. ' )' → logprob: -12.805209159851074

Token 27: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. '1' → logprob: -15.125000953674316
    3. ' [' → logprob: -16.75
    4. '.' → logprob: -16.875
    5. '0' → logprob: -18.375
    6. '-' → logprob: -18.625
    7. '[
' → logprob: -18.625
    8. '   ' → logprob: -18.75
    9. ')' → logprob: -18.8125
    10. '2' → logprob: -18.875

Token 28: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.5
    3. '0' → logprob: -16.75
    4. '[' → logprob: -17.0
    5. '-' → logprob: -18.25
    6. '```' → logprob: -18.625
    7. '   ' → logprob: -19.5
    8. '' → logprob: -19.875
    9. ']' → logprob: -20.0
    10. '１' → logprob: -20.5

Token 29: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.037292242050171
    2. ']' → logprob: -1.162292242050171
    3. ']-' → logprob: -1.287292242050171
    4. '[' → logprob: -3.537292242050171
    5. '])' → logprob: -3.662292242050171
    6. ' -' → logprob: -7.16229248046875
    7. ')' → logprob: -7.78729248046875
    8. '-)' → logprob: -8.28729248046875
    9. '])-' → logprob: -8.91229248046875
    10. '][' → logprob: -8.91229248046875

Token 30: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -3.130576806142926e-05
    2. ' b' → logprob: -10.375031471252441
    3. ')b' → logprob: -18.250030517578125
    4. '1' → logprob: -18.875030517578125
    5. 'a' → logprob: -19.500030517578125
    6. '	b' → logprob: -20.000030517578125
    7. ' ' → logprob: -20.375030517578125
    8. '>b' → logprob: -21.625030517578125
    9. '%b' → logprob: -22.250030517578125
    10. '   ' → logprob: -22.375030517578125

Token 31: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1767936497926712
    2. '1' → logprob: -2.1767935752868652
    3. '])' → logprob: -3.0517935752868652
    4. '-' → logprob: -6.801793575286865
    5. ']' → logprob: -8.676794052124023
    6. '][' → logprob: -10.176794052124023
    7. ')' → logprob: -11.676794052124023
    8. '])-' → logprob: -11.801794052124023
    9. ']])' → logprob: -11.926794052124023
    10. '0' → logprob: -11.926794052124023

Token 32: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '0' → logprob: -15.000000953674316
    3. '])' → logprob: -15.000000953674316
    4. ' ' → logprob: -17.625
    5. ']' → logprob: -18.25
    6. '[' → logprob: -18.5
    7. ')' → logprob: -19.75
    8. '-' → logprob: -19.875
    9. '```' → logprob: -19.875
    10. '   ' → logprob: -20.25

Token 33: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. '))' → logprob: -15.0
    3. ' )' → logprob: -17.375
    4. ')
' → logprob: -18.0
    5. ')**' → logprob: -19.875
    6. ')))' → logprob: -19.875
    7. '}' → logprob: -19.875
    8. '),' → logprob: -20.25
    9. ')

' → logprob: -20.375
    10. '）' → logprob: -20.625

Token 34: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15641430020332336
    2. '\' → logprob: -3.031414270401001
    3. 'def' → logprob: -3.156414270401001
    4. '\n' → logprob: -3.406414270401001
    5. 'd' → logprob: -4.65641450881958
    6. '

' → logprob: -5.65641450881958
    7. '```' → logprob: -5.78141450881958
    8. '#' → logprob: -7.15641450881958
    9. 'newline' → logprob: -7.28141450881958
    10. 'n' → logprob: -7.28141450881958

Token 35: ' dot' (ID: 16579)
  Prédit: ' closest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' closest' → logprob: -0.7833926677703857
    2. ' main' → logprob: -1.1583926677703857
    3. ' solve' → logprob: -2.7833926677703857
    4. ' shortest' → logprob: -3.5333926677703857
    5. ' find' → logprob: -3.6583926677703857
    6. ' calculate' → logprob: -4.158392906188965
    7. ' f' → logprob: -4.408392906188965
    8. ' centroid' → logprob: -4.533392906188965
    9. ' nearest' → logprob: -4.783392906188965
    10. ' convex' → logprob: -4.908392906188965

Token 36: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.015211095102131367
    2. ' (' → logprob: -4.26521110534668
    3. '<|end|>' → logprob: -7.64021110534668
    4. '(a' → logprob: -8.39021110534668
    5. '_product' → logprob: -9.64021110534668
    6. '_' → logprob: -9.76521110534668
    7. '<|end|>' → logprob: -10.14021110534668
    8. '(product' → logprob: -10.89021110534668
    9. ')' → logprob: -11.01521110534668
    10. ' ' → logprob: -11.14021110534668

Token 37: ',b' (ID: 17568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6514891386032104
    2. ',' → logprob: -1.6514891386032104
    3. '(a' → logprob: -1.9014891386032104
    4. ')' → logprob: -2.0264892578125
    5. ' (' → logprob: -5.9014892578125
    6. ',a' → logprob: -7.2764892578125
    7. '<|end|>' → logprob: -7.5264892578125
    8. ' )' → logprob: -7.7764892578125
    9. '[' → logprob: -8.0264892578125
    10. ' ,' → logprob: -8.1514892578125

Token 38: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5760620832443237
    2. ')' → logprob: -0.8260620832443237
    3. ' ):' → logprob: -10.076062202453613
    4. ',' → logprob: -10.701062202453613
    5. 'a' → logprob: -11.076062202453613
    6. '):
' → logprob: -11.826062202453613
    7. '(a' → logprob: -11.826062202453613
    8. ' )' → logprob: -11.826062202453613
    9. ')a' → logprob: -11.826062202453613
    10. ')=' → logprob: -13.076062202453613

Token 39: '   ' (ID: 271)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.29034918546676636
    2. 'a' → logprob: -1.6653492450714111
    3. '(a' → logprob: -3.040349245071411
    4. '(' → logprob: -4.915349006652832
    5. ' (' → logprob: -5.165349006652832
    6. ' return' → logprob: -6.540349006652832
    7. ' ' → logprob: -8.665349006652832
    8. '   ' → logprob: -8.665349006652832
    9. '    ' → logprob: -9.290349006652832
    10. ')' → logprob: -10.290349006652832

Token 40: ' return' (ID: 622)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.34345582127571106
    2. ' a' → logprob: -1.3434557914733887
    3. ' return' → logprob: -3.7184557914733887
    4. 'return' (adapté à ' return') → logprob: -5.218455791473389
    5. '   ' → logprob: -11.093456268310547
    6. ' ' → logprob: -11.218456268310547
    7. ' sum' → logprob: -11.718456268310547
    8. '    ' → logprob: -12.093456268310547
    9. 'sum' → logprob: -12.218456268310547
    10. '(a' → logprob: -12.718456268310547

Token 41: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.31326642632484436
    2. ' a' → logprob: -1.313266396522522
    3. ' sum' → logprob: -12.81326675415039
    4. '(a' → logprob: -13.68826675415039
    5. 'sum' → logprob: -14.31326675415039
    6. ' ' → logprob: -16.56326675415039
    7. ' (' → logprob: -16.68826675415039
    8. '	a' → logprob: -17.31326675415039
    9. ' ' → logprob: -18.56326675415039
    10. ' an' → logprob: -18.56326675415039

Token 42: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4498052223643754e-05
    2. '[
' → logprob: -12.000014305114746
    3. ' [' → logprob: -12.375014305114746
    4. '.' → logprob: -13.125014305114746
    5. ''[' → logprob: -15.125014305114746
    6. '0' → logprob: -15.375014305114746
    7. ')' → logprob: -15.500014305114746
    8. ' ' → logprob: -15.625014305114746
    9. ''' → logprob: -15.625014305114746
    10. '"' → logprob: -15.750014305114746

Token 43: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1637164789135568e-05
    2. '[' → logprob: -11.625011444091797
    3. ' ' → logprob: -13.000011444091797
    4. '1' → logprob: -14.750011444091797
    5. ')' → logprob: -18.000011444091797
    6. '   ' → logprob: -18.562511444091797
    7. ']' → logprob: -18.875011444091797
    8. '```' → logprob: -18.875011444091797
    9. '][' → logprob: -19.250011444091797
    10. ' [' → logprob: -19.312511444091797

Token 44: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.004870111122727394
    2. ']*' → logprob: -6.1298699378967285
    3. '*b' → logprob: -6.8798699378967285
    4. ' *' → logprob: -6.8798699378967285
    5. '*a' → logprob: -7.8798699378967285
    6. ')*' → logprob: -8.504870414733887
    7. '*)' → logprob: -11.129870414733887
    8. '**' → logprob: -11.129870414733887
    9. ']' → logprob: -12.004870414733887
    10. ')' → logprob: -13.379870414733887

Token 45: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.306760805164231e-05
    2. ' b' → logprob: -11.25001335144043
    3. ')b' → logprob: -22.12501335144043
    4. '	b' → logprob: -22.50001335144043
    5. ' ' → logprob: -23.37501335144043
    6. '*b' → logprob: -24.12501335144043
    7. '>b' → logprob: -25.37501335144043
    8. '1' → logprob: -25.50001335144043
    9. ' б' → logprob: -25.87501335144043
    10. '  ' → logprob: -26.37501335144043

Token 46: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.438573680294212e-06
    2. '0' → logprob: -12.625005722045898
    3. '[
' → logprob: -14.375005722045898
    4. '<|end|>' → logprob: -14.375005722045898
    5. '```' → logprob: -15.250005722045898
    6. ' [' → logprob: -15.875005722045898
    7. ''[' → logprob: -16.3750057220459
    8. '][' → logprob: -16.5000057220459
    9. '1' → logprob: -16.6250057220459
    10. '\[' → logprob: -17.1250057220459

Token 47: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '[' → logprob: -17.25
    3. ' ' → logprob: -18.25
    4. '1' → logprob: -19.0
    5. ']' → logprob: -19.0
    6. '<|end|>' → logprob: -20.625
    7. '۰' → logprob: -21.0
    8. '```' → logprob: -21.625
    9. '   ' → logprob: -22.125
    10. '０' → logprob: -22.875

Token 48: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12714406847953796
    2. ' +' → logprob: -2.1271440982818604
    3. '<|end|>' → logprob: -8.627143859863281
    4. '+a' → logprob: -11.127143859863281
    5. ')' → logprob: -11.377143859863281
    6. ' ' → logprob: -12.752143859863281
    7. '+)' → logprob: -13.627143859863281
    8. '+b' → logprob: -13.752143859863281
    9. ' plus' → logprob: -14.252143859863281
    10. '<|end|>' → logprob: -14.377143859863281

Token 49: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6378760933876038
    2. 'b' → logprob: -1.387876033782959
    3. ' b' → logprob: -2.137876033782959
    4. ' a' → logprob: -2.262876033782959
    5. ' ' → logprob: -10.637876510620117
    6. '<|end|>' → logprob: -14.637876510620117
    7. ' ' → logprob: -14.762876510620117
    8. '	a' → logprob: -15.137876510620117
    9. '  ' → logprob: -15.637876510620117
    10. '   ' → logprob: -16.637876510620117

Token 50: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2664456789934775e-06
    2. '1' → logprob: -13.875000953674316
    3. ' [' → logprob: -15.625000953674316
    4. '[
' → logprob: -16.875001907348633
    5. ' ' → logprob: -17.250001907348633
    6. '```' → logprob: -18.250001907348633
    7. '0' → logprob: -19.875001907348633
    8. '.' → logprob: -20.750001907348633
    9. '   ' → logprob: -21.125001907348633
    10. '  ' → logprob: -21.250001907348633

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.968312951968983e-06
    2. '[' → logprob: -11.625009536743164
    3. ' ' → logprob: -13.875009536743164
    4. '0' → logprob: -17.375009536743164
    5. '   ' → logprob: -19.250009536743164
    6. '3' → logprob: -19.250009536743164
    7. '```' → logprob: -19.750009536743164
    8. '  ' → logprob: -20.125009536743164
    9. '１' → logprob: -21.062509536743164
    10. '

' → logprob: -21.187509536743164

Token 52: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.103525310754776
    2. ']*' → logprob: -2.728525400161743
    3. ']' → logprob: -4.228525161743164
    4. '*[' → logprob: -4.728525161743164
    5. '[' → logprob: -4.978525161743164
    6. '<|end|>' → logprob: -6.603525161743164
    7. '*b' → logprob: -6.853525161743164
    8. ')*' → logprob: -8.978525161743164
    9. '*)' → logprob: -9.853525161743164
    10. '}' → logprob: -10.853525161743164

Token 53: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -2.5776860184123507e-06
    2. ' b' → logprob: -12.87500286102295
    3. ')b' → logprob: -21.750001907348633
    4. '<|end|>' → logprob: -21.875001907348633
    5. ' ' → logprob: -22.375001907348633
    6. '*b' → logprob: -23.625001907348633
    7. '	b' → logprob: -23.750001907348633
    8. '1' → logprob: -24.500001907348633
    9. 'a' → logprob: -25.000001907348633
    10. '  ' → logprob: -25.125001907348633

Token 54: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004921489744447172
    2. '1' → logprob: -7.625492095947266
    3. '][' → logprob: -13.250492095947266
    4. '[
' → logprob: -14.000492095947266
    5. ']' → logprob: -14.250492095947266
    6. ' [' → logprob: -15.000492095947266
    7. '```' → logprob: -15.875492095947266
    8. '0' → logprob: -16.625492095947266
    9. '   ' → logprob: -17.125492095947266
    10. '>[' → logprob: -17.500492095947266

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.000000953674316
    3. '0' → logprob: -16.5
    4. ']' → logprob: -17.0
    5. '```' → logprob: -20.375
    6. '[' → logprob: -20.5
    7. '   ' → logprob: -21.375
    8. '  ' → logprob: -21.5
    9. '۱' → logprob: -21.625
    10. ')' → logprob: -22.0

Token 56: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011522514978423715
    2. '}' → logprob: -9.625115394592285
    3. '<|end|>' → logprob: -10.000115394592285
    4. ')}' → logprob: -13.750115394592285
    5. ')return' → logprob: -14.000115394592285
    6. ' )' → logprob: -14.750115394592285
    7. '<|end|>' → logprob: -14.750115394592285
    8. ']' → logprob: -14.875115394592285
    9. ')
' → logprob: -15.375115394592285
    10. ')}}' → logprob: -16.37511444091797

Token 57: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.030587080866098404
    2. '
' → logprob: -3.5305871963500977
    3. '<|end|>' → logprob: -7.655587196350098
    4. '

' → logprob: -8.405587196350098
    5. '#' → logprob: -10.155587196350098
    6. ' def' → logprob: -10.405587196350098
    7. '<|end|>' → logprob: -11.155587196350098
    8. '```' → logprob: -11.280587196350098
    9. '
' → logprob: -11.530587196350098
    10. '  
' → logprob: -11.780587196350098

Token 58: ' sub' (ID: 1543)
  Prédit: ' cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cross' → logprob: -0.153276264667511
    2. ' vector' → logprob: -2.653276205062866
    3. ' project' → logprob: -3.903276205062866
    4. 'cross' → logprob: -4.278276443481445
    5. ' angle' → logprob: -5.278276443481445
    6. 'project' → logprob: -5.528276443481445
    7. ' length' → logprob: -5.653276443481445
    8. ' normalize' → logprob: -5.653276443481445
    9. ' proj' → logprob: -6.028276443481445
    10. ' projection' → logprob: -6.028276443481445

Token 59: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.016657793894410133
    2. '(' → logprob: -4.141657829284668
    3. ' (' → logprob: -7.391657829284668
    4. '(A' → logprob: -12.766657829284668
    5. '((' → logprob: -13.391657829284668
    6. 'a' → logprob: -14.391657829284668
    7. '<|end|>' → logprob: -14.641657829284668
    8. '```' → logprob: -14.891657829284668
    9. '(
' → logprob: -15.016657829284668
    10. ')' → logprob: -16.01665687561035

Token 60: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026826750487089157
    2. ',a' → logprob: -3.651826858520508
    3. ',b' → logprob: -8.276826858520508
    4. ' ,' → logprob: -9.026826858520508
    5. '(a' → logprob: -9.026826858520508
    6. 'a' → logprob: -11.526826858520508
    7. ')' → logprob: -11.651826858520508
    8. '<|end|>' → logprob: -11.901826858520508
    9. ',
' → logprob: -13.776826858520508
    10. ',A' → logprob: -14.151826858520508

Token 61: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007145775598473847
    2. ')' → logprob: -7.3757147789001465
    3. '):
' → logprob: -9.375714302062988
    4. ' ):' → logprob: -14.125714302062988
    5. '):

' → logprob: -14.125714302062988
    6. '):
' → logprob: -14.875714302062988
    7. ']:' → logprob: -15.125714302062988
    8. ')a' → logprob: -15.500714302062988
    9. '   ' → logprob: -15.750714302062988
    10. ':' → logprob: -15.875714302062988

Token 62: '   ' (ID: 271)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -1.0836541652679443
    2. '[' → logprob: -1.2086541652679443
    3. ' (' → logprob: -1.4586541652679443
    4. '[a' → logprob: -2.9586541652679443
    5. '(' → logprob: -3.2086541652679443
    6. '(a' → logprob: -3.3336541652679443
    7. ' a' → logprob: -6.958654403686523
    8. 'a' → logprob: -7.208654403686523
    9. '   ' → logprob: -7.583654403686523
    10. ')' → logprob: -9.083654403686523

Token 63: ' return' (ID: 622)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.45664647221565247
    2. ' [' → logprob: -1.70664644241333
    3. '[a' → logprob: -1.83164644241333
    4. ' (' → logprob: -4.45664644241333
    5. '(' → logprob: -4.58164644241333
    6. '(a' → logprob: -5.83164644241333
    7. '[
' → logprob: -9.081646919250488
    8. 'a' → logprob: -10.956646919250488
    9. ' a' → logprob: -11.331646919250488
    10. '   ' → logprob: -11.456646919250488

Token 64: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.1444770246744156
    2. ' (' → logprob: -2.144477128982544
    3. '[a' → logprob: -4.769476890563965
    4. '(' → logprob: -5.019476890563965
    5. '[' → logprob: -6.394476890563965
    6. ' [' → logprob: -7.394476890563965
    7. ' ' → logprob: -12.144476890563965
    8. 'a' → logprob: -12.519476890563965
    9. '(None' → logprob: -13.144476890563965
    10. ' a' → logprob: -13.769476890563965

Token 65: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0005530327325686812
    2. ' a' → logprob: -7.500553131103516
    3. '   ' → logprob: -17.500553131103516
    4. ')a' → logprob: -17.500553131103516
    5. '	a' → logprob: -18.125553131103516
    6. ' ' → logprob: -18.250553131103516
    7. '(a' → logprob: -18.250553131103516
    8. '  ' → logprob: -18.750553131103516
    9. ')' → logprob: -19.875553131103516
    10. '(' → logprob: -21.250553131103516

Token 66: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0280383548888494e-06
    2. '0' → logprob: -14.250000953674316
    3. ' [' → logprob: -16.000001907348633
    4. ')[' → logprob: -16.625001907348633
    5. '[
' → logprob: -17.000001907348633
    6. '1' → logprob: -17.250001907348633
    7. ')' → logprob: -17.750001907348633
    8. '-' → logprob: -18.750001907348633
    9. ' ' → logprob: -19.375001907348633
    10. '2' → logprob: -19.625001907348633

Token 67: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -14.375000953674316
    3. ' ' → logprob: -14.625000953674316
    4. '۰' → logprob: -18.000001907348633
    5. '   ' → logprob: -19.562501907348633
    6. '1' → logprob: -19.687501907348633
    7. '```' → logprob: -20.062501907348633
    8. '
' → logprob: -20.562501907348633
    9. '٠' → logprob: -20.687501907348633
    10. '０' → logprob: -20.937501907348633

Token 68: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08920314162969589
    2. ' -' → logprob: -2.464203119277954
    3. '-b' → logprob: -8.464202880859375
    4. ' ' → logprob: -10.464202880859375
    5. '<|end|>' → logprob: -11.964202880859375
    6. ')' → logprob: -12.089202880859375
    7. '-)' → logprob: -12.339202880859375
    8. ')-(' → logprob: -12.964202880859375
    9. ')-' → logprob: -13.714202880859375
    10. ' )' → logprob: -14.214202880859375

Token 69: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0024756586644798517
    2. ' b' → logprob: -6.002475738525391
    3. ')b' → logprob: -17.25247573852539
    4. ' ' → logprob: -18.12747573852539
    5. '	b' → logprob: -18.62747573852539
    6. ')' → logprob: -18.75247573852539
    7. '<|end|>' → logprob: -19.87747573852539
    8. '>b' → logprob: -20.75247573852539
    9. '1' → logprob: -21.00247573852539
    10. ' б' → logprob: -21.12747573852539

Token 70: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. ')' → logprob: -16.5
    3. '0' → logprob: -16.625
    4. '<|end|>' → logprob: -16.875
    5. ' [' → logprob: -17.0
    6. '[
' → logprob: -17.125
    7. '][' → logprob: -17.125
    8. ')[' → logprob: -18.25
    9. '```' → logprob: -18.375
    10. ' ' → logprob: -18.875

Token 71: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001935065840370953
    2. '[' → logprob: -6.251935005187988
    3. ' ' → logprob: -12.251935005187988
    4. '1' → logprob: -14.001935005187988
    5. ')' → logprob: -14.751935005187988
    6. ']' → logprob: -15.626935005187988
    7. '   ' → logprob: -16.876935958862305
    8. '۰' → logprob: -17.376935958862305
    9. '```' → logprob: -17.376935958862305
    10. '<|end|>' → logprob: -17.501935958862305

Token 72: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09461773931980133
    2. ')' → logprob: -2.4696178436279297
    3. ',)' → logprob: -5.21961784362793
    4. '),' → logprob: -8.46961784362793
    5. ' ,' → logprob: -11.71961784362793
    6. ',a' → logprob: -11.84461784362793
    7. '<|end|>' → logprob: -11.84461784362793
    8. '   ' → logprob: -12.34461784362793
    9. ' )' → logprob: -12.46961784362793
    10. ',
' → logprob: -13.21961784362793

Token 73: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5760748386383057
    2. ' a' → logprob: -0.8260748386383057
    3. ' b' → logprob: -10.076074600219727
    4. ')' → logprob: -10.076074600219727
    5. ' ' → logprob: -10.701074600219727
    6. 'b' → logprob: -11.951074600219727
    7. ')a' → logprob: -11.951074600219727
    8. ' )' → logprob: -12.076074600219727
    9. '<|end|>' → logprob: -12.326074600219727
    10. ' ' → logprob: -12.576074600219727

Token 74: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.848420551046729e-05
    2. '1' → logprob: -9.7500581741333
    3. ')' → logprob: -16.750059127807617
    4. ')[' → logprob: -17.625059127807617
    5. '][' → logprob: -17.875059127807617
    6. '```' → logprob: -18.375059127807617
    7. ']' → logprob: -18.375059127807617
    8. '[
' → logprob: -18.500059127807617
    9. ' ' → logprob: -18.625059127807617
    10. '<|end|>' → logprob: -19.125059127807617

Token 75: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006302326801232994
    2. '[' → logprob: -7.3756303787231445
    3. ' ' → logprob: -12.750630378723145
    4. ')' → logprob: -15.250630378723145
    5. '0' → logprob: -15.375630378723145
    6. ']' → logprob: -16.125629425048828
    7. '   ' → logprob: -16.375629425048828
    8. '```' → logprob: -17.500629425048828
    9. '])' → logprob: -17.625629425048828
    10. ' [' → logprob: -17.875629425048828

Token 76: ']-' (ID: 27107)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.43736711144447327
    2. ']-' → logprob: -1.1873670816421509
    3. '-' → logprob: -3.0623672008514404
    4. '<|end|>' → logprob: -6.687366962432861
    5. ')' → logprob: -8.06236743927002
    6. '[' → logprob: -8.18736743927002
    7. '])' → logprob: -8.68736743927002
    8. ' -' → logprob: -9.31236743927002
    9. '][' → logprob: -9.31236743927002
    10. '<|end|>' → logprob: -9.43736743927002

Token 77: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.4140441635390744e-05
    2. ' b' → logprob: -11.750014305114746
    3. ')' → logprob: -12.500014305114746
    4. ')b' → logprob: -13.250014305114746
    5. '1' → logprob: -14.625014305114746
    6. '0' → logprob: -16.00001335144043
    7. '	b' → logprob: -16.50001335144043
    8. 'a' → logprob: -17.00001335144043
    9. '[' → logprob: -17.12501335144043
    10. ' ' → logprob: -18.37501335144043

Token 78: '[' (ID: 58)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010658555664122105
    2. '[' → logprob: -4.6356587409973145
    3. ']' → logprob: -7.1356587409973145
    4. '])' → logprob: -9.760658264160156
    5. '1' → logprob: -10.135658264160156
    6. '<|end|>' → logprob: -13.135658264160156
    7. ')[' → logprob: -13.385658264160156
    8. ')])' → logprob: -13.635658264160156
    9. ')
' → logprob: -13.885658264160156
    10. ')]' → logprob: -14.260658264160156

Token 79: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021014907397329807
    2. '0' → logprob: -6.252101421356201
    3. ']' → logprob: -9.50210189819336
    4. '])' → logprob: -10.00210189819336
    5. '[' → logprob: -10.25210189819336
    6. ' ' → logprob: -11.25210189819336
    7. ']))' → logprob: -13.75210189819336
    8. '```' → logprob: -14.12710189819336
    9. ')' → logprob: -14.75210189819336
    10. '   ' → logprob: -15.00210189819336

Token 80: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ')
' → logprob: -16.625
    3. ' )' → logprob: -17.375
    4. '')' → logprob: -19.125
    5. ')`' → logprob: -19.625
    6. '))' → logprob: -20.25
    7. ')

' → logprob: -20.25
    8. '}' → logprob: -20.75
    9. '）' → logprob: -20.75
    10. ')#' → logprob: -20.75

Token 81: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1773948222398758
    2. 'd' → logprob: -1.9273948669433594
    3. '
' → logprob: -4.302394866943359
    4. '

' → logprob: -6.177394866943359
    5. '\' → logprob: -7.552394866943359
    6. '#' → logprob: -7.552394866943359
    7. 'n' → logprob: -8.55239486694336
    8. '\n' → logprob: -10.30239486694336
    9. '```' → logprob: -10.55239486694336
    10. ' def' → logprob: -11.17739486694336

Token 82: ' add' (ID: 1147)
  Prédit: ' closest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' closest' → logprob: -0.8000668287277222
    2. ' line' → logprob: -1.6750668287277222
    3. ' project' → logprob: -2.0500669479370117
    4. ' proj' → logprob: -2.9250669479370117
    5. ' length' → logprob: -3.1750669479370117
    6. 'project' → logprob: -3.5500669479370117
    7. ' segment' → logprob: -4.050066947937012
    8. 'closest' → logprob: -4.050066947937012
    9. ' projection' → logprob: -4.050066947937012
    10. ' main' → logprob: -4.300066947937012

Token 83: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006581080378964543
    2. '(a' → logprob: -7.87565803527832
    3. '<|end|>' → logprob: -8.25065803527832
    4. '("("' → logprob: -12.87565803527832
    5. '\(' → logprob: -13.12565803527832
    6. ' (' → logprob: -13.12565803527832
    7. '<|end|>' → logprob: -13.12565803527832
    8. '('' → logprob: -13.62565803527832
    9. '(
' → logprob: -13.62565803527832
    10. '(user' → logprob: -14.00065803527832

Token 84: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17208439111709595
    2. '(a' → logprob: -2.047084331512451
    3. '(' → logprob: -3.797084331512451
    4. ',a' → logprob: -5.672084331512451
    5. '<|end|>' → logprob: -6.672084331512451
    6. ')' → logprob: -7.297084331512451
    7. ',b' → logprob: -7.297084331512451
    8. ',(' → logprob: -8.67208480834961
    9. ' ,' → logprob: -9.42208480834961
    10. 'a' → logprob: -9.92208480834961

Token 85: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0070366933941841125
    2. '):' → logprob: -5.0070366859436035
    3. ',' → logprob: -8.382037162780762
    4. '),' → logprob: -9.757037162780762
    5. ')a' → logprob: -11.632037162780762
    6. '(a' → logprob: -11.882037162780762
    7. ')(' → logprob: -12.507037162780762
    8. '(' → logprob: -12.882037162780762
    9. ',a' → logprob: -13.132037162780762
    10. '):
' → logprob: -13.632037162780762

Token 86: '   ' (ID: 271)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.48046091198921204
    2. '(' → logprob: -0.9804608821868896
    3. '(a' → logprob: -5.480461120605469
    4. ' a' → logprob: -6.480461120605469
    5. 'a' → logprob: -8.105461120605469
    6. ' ' → logprob: -8.355461120605469
    7. ')' → logprob: -9.980461120605469
    8. ' (
' → logprob: -10.355461120605469
    9. '(
' → logprob: -11.855461120605469
    10. ' )' → logprob: -11.855461120605469

Token 87: ' return' (ID: 622)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.31481653451919556
    2. '(' → logprob: -1.3148164749145508
    3. ')' → logprob: -7.064816474914551
    4. '(a' → logprob: -8.18981647491455
    5. ' ' → logprob: -9.18981647491455
    6. 'a' → logprob: -9.18981647491455
    7. ' )' → logprob: -9.31481647491455
    8. ' a' → logprob: -9.43981647491455
    9. ' (
' → logprob: -10.81481647491455
    10. '(
' → logprob: -11.68981647491455

Token 88: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.013803684152662754
    2. '(' → logprob: -4.763803482055664
    3. '(a' → logprob: -5.263803482055664
    4. ' ' → logprob: -17.513803482055664
    5. ' a' → logprob: -18.138803482055664
    6. '(b' → logprob: -18.513803482055664
    7. 'a' → logprob: -18.763803482055664
    8. ' (
' → logprob: -19.138803482055664
    9. '((' → logprob: -19.263803482055664
    10. '(None' → logprob: -19.263803482055664

Token 89: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0001234428636962548
    2. ' a' → logprob: -9.000123023986816
    3. '	a' → logprob: -19.250123977661133
    4. ')a' → logprob: -20.250123977661133
    5. '(a' → logprob: -20.750123977661133
    6. 'b' → logprob: -21.250123977661133
    7. 'а' → logprob: -21.750123977661133
    8. ' ' → logprob: -22.000123977661133
    9. '_a' → logprob: -22.625123977661133
    10. ''a' → logprob: -23.000123977661133

Token 90: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.531315314830863e-06
    2. '0' → logprob: -13.250003814697266
    3. ')' → logprob: -14.500003814697266
    4. ')[' → logprob: -14.625003814697266
    5. ' [' → logprob: -14.625003814697266
    6. ' ' → logprob: -16.875003814697266
    7. '[
' → logprob: -17.000003814697266
    8. '][' → logprob: -17.125003814697266
    9. '1' → logprob: -17.250003814697266
    10. ' )[' → logprob: -18.250003814697266

Token 91: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.127333340875339e-06
    2. '[' → logprob: -12.875003814697266
    3. ' ' → logprob: -13.500003814697266
    4. '   ' → logprob: -16.375003814697266
    5. '```' → logprob: -17.125003814697266
    6. '
' → logprob: -18.000003814697266
    7. '۰' → logprob: -18.000003814697266
    8. '1' → logprob: -18.125003814697266
    9. '  ' → logprob: -18.250003814697266
    10. '][' → logprob: -18.250003814697266

Token 92: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1904575526714325
    2. ')+' → logprob: -2.315457582473755
    3. ')' → logprob: -2.815457582473755
    4. '+b' → logprob: -4.315457344055176
    5. '+)' → logprob: -7.940457344055176
    6. ']+' → logprob: -8.065457344055176
    7. ',' → logprob: -8.315457344055176
    8. '+a' → logprob: -8.940457344055176
    9. ' +' → logprob: -9.565457344055176
    10. '-' → logprob: -9.690457344055176

Token 93: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00033546582562848926
    2. ' b' → logprob: -8.000335693359375
    3. ')b' → logprob: -17.375335693359375
    4. ' ' → logprob: -20.125335693359375
    5. 'a' → logprob: -20.125335693359375
    6. ')' → logprob: -20.250335693359375
    7. '	b' → logprob: -21.000335693359375
    8. '<|end|>' → logprob: -21.125335693359375
    9. '   ' → logprob: -22.625335693359375
    10. '  ' → logprob: -22.750335693359375

Token 94: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00010545044642640278
    2. ',' → logprob: -9.500105857849121
    3. ',[' → logprob: -11.375105857849121
    4. '[
' → logprob: -11.875105857849121
    5. '<|end|>' → logprob: -11.875105857849121
    6. ')' → logprob: -12.875105857849121
    7. ')[' → logprob: -13.750105857849121
    8. '```' → logprob: -14.750105857849121
    9. 'b' → logprob: -14.875105857849121
    10. '>[' → logprob: -15.375105857849121

Token 95: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.42884406447410583
    2. '0' → logprob: -1.0538440942764282
    3. '1' → logprob: -9.428844451904297
    4. ')' → logprob: -10.678844451904297
    5. ' ' → logprob: -10.678844451904297
    6. '[
' → logprob: -12.053844451904297
    7. 'b' → logprob: -12.928844451904297
    8. '][' → logprob: -12.928844451904297
    9. ']' → logprob: -13.178844451904297
    10. ')[' → logprob: -13.803844451904297

Token 96: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04868774116039276
    2. ')' → logprob: -3.048687696456909
    3. ',)' → logprob: -10.298687934875488
    4. '),' → logprob: -11.048687934875488
    5. ',b' → logprob: -11.173687934875488
    6. '<|end|>' → logprob: -11.173687934875488
    7. ' ,' → logprob: -12.048687934875488
    8. ']' → logprob: -12.173687934875488
    9. ',a' → logprob: -12.673687934875488
    10. ',
' → logprob: -12.798687934875488

Token 97: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7492356300354004
    2. ' b' → logprob: -0.8742356300354004
    3. 'a' → logprob: -2.6242356300354004
    4. 'b' → logprob: -3.4992356300354004
    5. ' ' → logprob: -5.4992356300354
    6. ' )' → logprob: -6.4992356300354
    7. ')' → logprob: -6.4992356300354
    8. ' ' → logprob: -8.624235153198242
    9. ''' → logprob: -10.749235153198242
    10. ')a' → logprob: -10.999235153198242

Token 98: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.153795766294934e-06
    2. '[
' → logprob: -12.625005722045898
    3. ')' → logprob: -13.875005722045898
    4. '1' → logprob: -14.250005722045898
    5. '<|end|>' → logprob: -14.500005722045898
    6. ')[' → logprob: -15.250005722045898
    7. '```' → logprob: -16.3750057220459
    8. ' [' → logprob: -16.3750057220459
    9. '>[' → logprob: -16.7500057220459
    10. 'b' → logprob: -17.0000057220459

Token 99: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0031794982496649027
    2. '[' → logprob: -5.753179550170898
    3. ' ' → logprob: -13.753179550170898
    4. '```' → logprob: -15.878179550170898
    5. ')' → logprob: -16.0031795501709
    6. '   ' → logprob: -16.8781795501709
    7. '[
' → logprob: -16.8781795501709
    8. '
' → logprob: -16.8781795501709
    9. '0' → logprob: -17.1281795501709
    10. ']' → logprob: -17.5031795501709

Token 100: ']+' (ID: 15344)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.24176748096942902
    2. ')' → logprob: -1.9917675256729126
    3. '])' → logprob: -3.491767406463623
    4. ')[' → logprob: -3.741767406463623
    5. '][' → logprob: -4.116767406463623
    6. ']' → logprob: -4.866767406463623
    7. '<|end|>' → logprob: -10.491767883300781
    8. '1' → logprob: -11.241767883300781
    9. ')])' → logprob: -11.241767883300781
    10. ' )[' → logprob: -11.491767883300781

Token 101: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00026264708139933646
    2. ' b' → logprob: -8.250262260437012
    3. ')b' → logprob: -13.625262260437012
    4. ')' → logprob: -16.125263214111328
    5. '[' → logprob: -16.875263214111328
    6. '	b' → logprob: -17.625263214111328
    7. '(b' → logprob: -18.250263214111328
    8. '[b' → logprob: -18.750263214111328
    9. ' ' → logprob: -19.375263214111328
    10. '1' → logprob: -19.375263214111328

Token 102: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001183204003609717
    2. '1' → logprob: -6.751183032989502
    3. ']' → logprob: -12.37618350982666
    4. ')' → logprob: -13.25118350982666
    5. '[
' → logprob: -13.25118350982666
    6. ' [' → logprob: -13.37618350982666
    7. '][' → logprob: -13.37618350982666
    8. '```' → logprob: -14.50118350982666
    9. ' ' → logprob: -14.75118350982666
    10. ')[' → logprob: -14.87618350982666

Token 103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.0126840758603066e-05
    2. '[' → logprob: -10.375040054321289
    3. ' ' → logprob: -12.000040054321289
    4. ']' → logprob: -13.750040054321289
    5. '])' → logprob: -14.625040054321289
    6. '0' → logprob: -14.750040054321289
    7. '   ' → logprob: -15.875040054321289
    8. '```' → logprob: -16.00004005432129
    9. '
' → logprob: -16.25004005432129
    10. '	' → logprob: -16.62504005432129

Token 104: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: 0.0
    2. ' )' → logprob: -16.875
    3. ')
' → logprob: -17.875
    4. '),' → logprob: -18.875
    5. '))' → logprob: -19.25
    6. ')}' → logprob: -19.375
    7. ')`' → logprob: -20.0
    8. ')

' → logprob: -20.125
    9. '}' → logprob: -20.625
    10. '')' → logprob: -21.125

Token 105: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11332885921001434
    2. '
' → logprob: -2.4883289337158203
    3. 'd' → logprob: -4.73832893371582
    4. '

' → logprob: -5.23832893371582
    5. '\' → logprob: -5.61332893371582
    6. '\n' → logprob: -5.98832893371582
    7. '#' → logprob: -6.61332893371582
    8. ' def' → logprob: -7.73832893371582
    9. 'n' → logprob: -7.86332893371582
    10. '' → logprob: -8.23832893371582

Token 106: ' mul' (ID: 9975)
  Prédit: ' cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cross' → logprob: -0.4601229727268219
    2. ' scale' → logprob: -1.8351229429244995
    3. ' length' → logprob: -2.210123062133789
    4. ' scalar' → logprob: -3.585123062133789
    5. ' norm' → logprob: -3.835123062133789
    6. ' closest' → logprob: -4.335123062133789
    7. ' line' → logprob: -4.710123062133789
    8. ' project' → logprob: -4.835123062133789
    9. 'cross' → logprob: -5.835123062133789
    10. ' normalize' → logprob: -6.210123062133789

Token 107: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.07943297922611237
    2. '(' → logprob: -2.579432964324951
    3. ' (' → logprob: -7.954432964324951
    4. '<|end|>' → logprob: -8.82943344116211
    5. '<|end|>' → logprob: -11.07943344116211
    6. '```' → logprob: -11.95443344116211
    7. '(A' → logprob: -12.20443344116211
    8. ' ' → logprob: -12.82943344116211
    9. 'a' → logprob: -12.82943344116211
    10. '(m' → logprob: -13.70443344116211

Token 108: ',s' (ID: 20379)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23146723210811615
    2. '(a' → logprob: -1.9814672470092773
    3. ',b' → logprob: -3.3564672470092773
    4. ',a' → logprob: -3.9814672470092773
    5. ' ,' → logprob: -4.981467247009277
    6. ')' → logprob: -5.856467247009277
    7. '(' → logprob: -6.231467247009277
    8. 'a' → logprob: -6.231467247009277
    9. '(b' → logprob: -7.731467247009277
    10. ' a' → logprob: -7.981467247009277

Token 109: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7114949226379395
    2. '):' → logprob: -0.8364949226379395
    3. ',' → logprob: -2.9614949226379395
    4. 'calar' → logprob: -4.0864949226379395
    5. ' ' → logprob: -5.7114949226379395
    6. '):
' → logprob: -7.2114949226379395
    7. 't' → logprob: -7.2114949226379395
    8. ':' → logprob: -7.4614949226379395
    9. 's' → logprob: -8.211494445800781
    10. 'a' → logprob: -8.711494445800781

Token 110: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11944015324115753
    2. ' a' → logprob: -2.2444400787353516
    3. '(a' → logprob: -5.744440078735352
    4. ' (' → logprob: -6.494440078735352
    5. '   ' → logprob: -6.744440078735352
    6. 's' → logprob: -8.494440078735352
    7. '(' → logprob: -8.619440078735352
    8. ' s' → logprob: -9.119440078735352
    9. '    ' → logprob: -9.369440078735352
    10. ' ' → logprob: -10.244440078735352

Token 111: ' return' (ID: 622)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.15503957867622375
    2. '(a' → logprob: -2.6550395488739014
    3. '(' → logprob: -2.7800395488739014
    4. ' a' → logprob: -5.1550397872924805
    5. 'a' → logprob: -5.2800397872924805
    6. ' return' → logprob: -8.65503978729248
    7. '(
' → logprob: -9.40503978729248
    8. ' (
' → logprob: -9.90503978729248
    9. 'return' (adapté à ' return') → logprob: -10.28003978729248
    10. ' ' → logprob: -10.53003978729248

Token 112: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.6035580039024353
    2. ' (' → logprob: -0.8535580039024353
    3. '(' → logprob: -3.60355806350708
    4. '(s' → logprob: -11.603557586669922
    5. ' ' → logprob: -13.728557586669922
    6. '(tuple' → logprob: -14.228557586669922
    7. ' a' → logprob: -14.353557586669922
    8. '((' → logprob: -14.478557586669922
    9. 'a' → logprob: -14.478557586669922
    10. '(float' → logprob: -14.978557586669922

Token 113: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0001234428636962548
    2. ' a' → logprob: -9.000123023986816
    3. ')a' → logprob: -19.000123977661133
    4. '	a' → logprob: -19.125123977661133
    5. '(a' → logprob: -19.500123977661133
    6. '   ' → logprob: -20.250123977661133
    7. 'int' → logprob: -20.625123977661133
    8. ')' → logprob: -21.250123977661133
    9. ' ' → logprob: -21.500123977661133
    10. '  ' → logprob: -22.500123977661133

Token 114: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '0' → logprob: -14.875
    3. ' ' → logprob: -18.375
    4. ')[' → logprob: -18.5
    5. ' [' → logprob: -18.625
    6. ')' → logprob: -19.75
    7. '][' → logprob: -20.375
    8. '[
' → logprob: -20.5
    9. '1' → logprob: -21.75
    10. ',' → logprob: -21.75

Token 115: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.875000953674316
    3. '[' → logprob: -16.625
    4. '۰' → logprob: -18.0
    5. '   ' → logprob: -19.375
    6. '０' → logprob: -19.8125
    7. ')' → logprob: -20.1875
    8. '০' → logprob: -20.1875
    9. '٠' → logprob: -20.75
    10. '1' → logprob: -20.9375

Token 116: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.19088312983512878
    2. '*s' → logprob: -2.190883159637451
    3. '*,' → logprob: -3.440883159637451
    4. ')*' → logprob: -4.065883159637451
    5. ',' → logprob: -4.815883159637451
    6. ',s' → logprob: -6.315883159637451
    7. ',*' → logprob: -6.440883159637451
    8. ')' → logprob: -7.815883159637451
    9. '*)' → logprob: -8.190882682800293
    10. ']*' → logprob: -9.065882682800293

Token 117: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03804149478673935
    2. ' s' → logprob: -3.288041591644287
    3. ' ' → logprob: -19.163042068481445
    4. '	s' → logprob: -21.288042068481445
    5. '_s' → logprob: -21.538042068481445
    6. '(s' → logprob: -21.663042068481445
    7. ' ' → logprob: -22.538042068481445
    8. '
' → logprob: -23.413042068481445
    9. '<|end|>' → logprob: -23.413042068481445
    10. '`s' → logprob: -23.788042068481445

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0023876605555415154
    2. ')' → logprob: -6.127387523651123
    3. ' ,' → logprob: -9.627388000488281
    4. ',a' → logprob: -9.627388000488281
    5. ',s' → logprob: -10.377388000488281
    6. '<|end|>' → logprob: -11.252388000488281
    7. ',
' → logprob: -11.502388000488281
    8. ' )' → logprob: -13.002388000488281
    9. ',)' → logprob: -13.127388000488281
    10. ',b' → logprob: -13.627388000488281

Token 119: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.07890047132968903
    2. 'a' → logprob: -2.5789005756378174
    3. ' s' → logprob: -12.328900337219238
    4. ' ' → logprob: -12.578900337219238
    5. 's' → logprob: -13.203900337219238
    6. ' ' → logprob: -14.328900337219238
    7. '	a' → logprob: -15.953900337219238
    8. '>a' → logprob: -16.453901290893555
    9. ')a' → logprob: -16.453901290893555
    10. '<|end|>' → logprob: -16.703901290893555

Token 120: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9027791495318525e-05
    2. '1' → logprob: -11.000019073486328
    3. '[
' → logprob: -14.750019073486328
    4. 's' → logprob: -15.125019073486328
    5. ' [' → logprob: -15.125019073486328
    6. '.' → logprob: -15.375019073486328
    7. '```' → logprob: -15.687519073486328
    8. ' ' → logprob: -15.750019073486328
    9. '<|end|>' → logprob: -16.125019073486328
    10. '<|end|>' → logprob: -16.500019073486328

Token 121: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.522638169466518e-05
    2. ' ' → logprob: -11.125024795532227
    3. '[' → logprob: -11.500024795532227
    4. '0' → logprob: -15.625024795532227
    5. '۱' → logprob: -18.437524795532227
    6. '-' → logprob: -18.750024795532227
    7. '' → logprob: -19.000024795532227
    8. '(' → logprob: -19.062524795532227
    9. '
' → logprob: -19.062524795532227
    10. ']' → logprob: -19.125024795532227

Token 122: ']*' (ID: 18579)
  Prédit: '*s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*s' → logprob: -0.001705175032839179
    2. '*' → logprob: -6.376705169677734
    3. ')*' → logprob: -13.376705169677734
    4. '*)' → logprob: -14.501705169677734
    5. '<|end|>' → logprob: -16.126705169677734
    6. '*b' → logprob: -16.376705169677734
    7. ' *' → logprob: -16.501705169677734
    8. 's' → logprob: -16.501705169677734
    9. '*object' → logprob: -16.626705169677734
    10. '*q' → logprob: -16.626705169677734

Token 123: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0001234428636962548
    2. ' s' → logprob: -9.000123023986816
    3. '<|end|>' → logprob: -18.625123977661133
    4. ' ' → logprob: -18.875123977661133
    5. ')' → logprob: -20.625123977661133
    6. '
' → logprob: -21.500123977661133
    7. '	s' → logprob: -21.500123977661133
    8. ''s' → logprob: -22.875123977661133
    9. '_s' → logprob: -23.000123977661133
    10. '

' → logprob: -23.375123977661133

Token 124: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.935296834039036e-06
    2. ')
' → logprob: -12.87500286102295
    3. ' )' → logprob: -15.75000286102295
    4. ')

' → logprob: -15.87500286102295
    5. ')
' → logprob: -19.250003814697266
    6. '),' → logprob: -20.125003814697266
    7. '<|end|>' → logprob: -20.250003814697266
    8. ')`' → logprob: -20.375003814697266
    9. ')return' → logprob: -20.875003814697266
    10. '}' → logprob: -21.250003814697266

Token 125: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.055158600211143494
    2. '
' → logprob: -3.1801586151123047
    3. '

' → logprob: -4.680158615112305
    4. ' def' → logprob: -6.805158615112305
    5. '\n' → logprob: -7.305158615112305
    6. '\' → logprob: -7.930158615112305
    7. '
' → logprob: -8.680158615112305
    8. '```' → logprob: -8.805158615112305
    9. ' 

' → logprob: -9.680158615112305
    10. '


' → logprob: -10.180158615112305

Token 126: ' norm' (ID: 7882)
  Prédit: 'normalize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'normalize' → logprob: -1.189349889755249
    2. 'cross' → logprob: -1.814349889755249
    3. 'project' → logprob: -2.064349889755249
    4. ' cross' → logprob: -2.314349889755249
    5. ' length' → logprob: -3.189349889755249
    6. 'norm' → logprob: -3.189349889755249
    7. ' normalize' → logprob: -3.314349889755249
    8. 'proj' → logprob: -3.439349889755249
    9. 'closest' → logprob: -3.439349889755249
    10. ' project' → logprob: -3.689349889755249

Token 127: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.523550808429718
    2. '(' → logprob: -0.898550808429718
    3. ' (' → logprob: -8.773550987243652
    4. '<|end|>' → logprob: -9.273550987243652
    5. '((' → logprob: -9.898550987243652
    6. 'a' → logprob: -10.898550987243652
    7. '(A' → logprob: -10.898550987243652
    8. '_' → logprob: -11.023550987243652
    9. '(
' → logprob: -11.648550987243652
    10. '_mul' → logprob: -12.273550987243652

Token 128: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.015912476927042007
    2. '(a' → logprob: -4.7659125328063965
    3. ')' → logprob: -5.3909125328063965
    4. '):
' → logprob: -6.0159125328063965
    5. ' ):' → logprob: -8.515912055969238
    6. 'a' → logprob: -10.640912055969238
    7. ',' → logprob: -11.265912055969238
    8. ')a' → logprob: -12.265912055969238
    9. ',a' → logprob: -12.390912055969238
    10. '):

' → logprob: -12.390912055969238

Token 129: '   ' (ID: 271)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.01863669604063034
    2. '   ' → logprob: -5.018636703491211
    3. ' (' → logprob: -5.018636703491211
    4. ' return' → logprob: -6.268636703491211
    5. ' ' → logprob: -6.393636703491211
    6. '(math' → logprob: -7.518636703491211
    7. 'math' → logprob: -7.893636703491211
    8. '    ' → logprob: -8.643636703491211
    9. ' a' → logprob: -9.018636703491211
    10. ' 
' → logprob: -9.393636703491211

Token 130: ' return' (ID: 622)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.01521731074899435
    2. ' (' → logprob: -4.890217304229736
    3. 'math' → logprob: -5.140217304229736
    4. '(math' → logprob: -6.765217304229736
    5. ' a' → logprob: -8.640217781066895
    6. ' return' → logprob: -8.765217781066895
    7. '(' → logprob: -9.140217781066895
    8. 'a' → logprob: -9.765217781066895
    9. ' ' → logprob: -10.515217781066895
    10. '(a' → logprob: -10.640217781066895

Token 131: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.0011978477705270052
    2. ' (' → logprob: -7.126197814941406
    3. '(math' → logprob: -8.501197814941406
    4. 'math' → logprob: -9.001197814941406
    5. ' dist' → logprob: -10.251197814941406
    6. '(' → logprob: -10.751197814941406
    7. ' ' → logprob: -12.251197814941406
    8. ' ' → logprob: -13.126197814941406
    9. ' a' → logprob: -13.501197814941406
    10. ' m' → logprob: -14.626197814941406

Token 132: '.h' (ID: 1508)
  Prédit: '.sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.16193656623363495
    2. '.' → logprob: -1.9119365215301514
    3. '.h' → logprob: -6.5369367599487305
    4. '.s' → logprob: -8.41193675994873
    5. '.atan' → logprob: -10.66193675994873
    6. '.Sqrt' → logprob: -11.41193675994873
    7. '.dist' → logprob: -13.41193675994873
    8. ' .' → logprob: -14.28693675994873
    9. '.pi' → logprob: -14.66193675994873
    10. '.norm' → logprob: -14.66193675994873

Token 133: 'yp' (ID: 1785)
  Prédit: 'ot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.017730649560689926
    2. 'yp' → logprob: -4.642730712890625
    3. 'otp' → logprob: -5.392730712890625
    4. 'pot' → logprob: -6.517730712890625
    5. 'op' → logprob: -7.017730712890625
    6. 'opt' → logprob: -7.767730712890625
    7. 'at' → logprob: -8.392730712890625
    8. 'sqrt' → logprob: -8.767730712890625
    9. 'ots' → logprob: -10.142730712890625
    10. 'o' → logprob: -10.767730712890625

Token 134: 'ot' (ID: 346)
  Prédit: 'ot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -2.3319124011322856e-05
    2. 'от' → logprob: -11.625022888183594
    3. 'ots' → logprob: -12.500022888183594
    4. 'a' → logprob: -12.625022888183594
    5. 'o' → logprob: -13.125022888183594
    6. '(a' → logprob: -13.375022888183594
    7. 'at' → logprob: -14.125022888183594
    8. '```' → logprob: -14.500022888183594
    9. 'otp' → logprob: -14.750022888183594
    10. ' ot' → logprob: -15.000022888183594

Token 135: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.003604224883019924
    2. '(' → logprob: -5.628604412078857
    3. '(
' → logprob: -13.0036039352417
    4. '<|end|>' → logprob: -14.2536039352417
    5. '(*' → logprob: -14.5036039352417
    6. 'a' → logprob: -15.0036039352417
    7. '(

' → logprob: -15.5036039352417
    8. ' (' → logprob: -16.003604888916016
    9. '((' → logprob: -16.378604888916016
    10. '('' → logprob: -17.378604888916016

Token 136: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5094070477061905e-05
    2. ')' → logprob: -11.375015258789062
    3. '(' → logprob: -13.875015258789062
    4. ' [' → logprob: -14.125015258789062
    5. '[
' → logprob: -14.375015258789062
    6. '0' → logprob: -14.875015258789062
    7. ' ' → logprob: -16.000015258789062
    8. '.' → logprob: -16.000015258789062
    9. '```' → logprob: -16.125015258789062
    10. ',' → logprob: -16.312515258789062

Token 137: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.179569077678025e-05
    2. '[' → logprob: -10.250041961669922
    3. ' ' → logprob: -12.125041961669922
    4. ')' → logprob: -15.250041961669922
    5. '
' → logprob: -16.062541961669922
    6. '1' → logprob: -16.125041961669922
    7. '```' → logprob: -16.437541961669922
    8. '۰' → logprob: -16.562541961669922
    9. '<|end|>' → logprob: -17.125041961669922
    10. ']' → logprob: -17.375041961669922

Token 138: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018122320994734764
    2. ',a' → logprob: -4.14312219619751
    3. ' ,' → logprob: -6.89312219619751
    4. ')' → logprob: -7.39312219619751
    5. '),' → logprob: -8.143122673034668
    6. ')a' → logprob: -9.143122673034668
    7. 'a' → logprob: -11.268122673034668
    8. '],' → logprob: -11.768122673034668
    9. ' ' → logprob: -11.768122673034668
    10. '-,' → logprob: -12.268122673034668

Token 139: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07889275997877121
    2. ' a' → logprob: -2.578892707824707
    3. '	a' → logprob: -12.953892707824707
    4. ' ' → logprob: -15.203892707824707
    5. '   ' → logprob: -15.328892707824707
    6. '_a' → logprob: -17.078893661499023
    7. '  ' → logprob: -17.828893661499023
    8. ')a' → logprob: -17.953893661499023
    9. '-a' → logprob: -18.203893661499023
    10. '    ' → logprob: -18.203893661499023

Token 140: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5690089639974758e-05
    2. '1' → logprob: -11.125015258789062
    3. ']' → logprob: -14.875015258789062
    4. ')' → logprob: -15.125015258789062
    5. ' [' → logprob: -16.625015258789062
    6. '[
' → logprob: -17.000015258789062
    7. '<|end|>' → logprob: -17.375015258789062
    8. '][' → logprob: -17.500015258789062
    9. '])' → logprob: -18.125015258789062
    10. ' ' → logprob: -18.250015258789062

Token 141: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.6537622034084052e-05
    2. ' ' → logprob: -10.75002670288086
    3. '[' → logprob: -12.37502670288086
    4. ')' → logprob: -15.00002670288086
    5. '   ' → logprob: -15.75002670288086
    6. '  ' → logprob: -16.50002670288086
    7. '```' → logprob: -16.62502670288086
    8. '
' → logprob: -16.87502670288086
    9. ']' → logprob: -17.12502670288086
    10. '0' → logprob: -17.37502670288086

Token 142: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -15.000000953674316
    3. ')
' → logprob: -16.5
    4. '))' → logprob: -16.625
    5. '}' → logprob: -17.875
    6. ')a' → logprob: -17.875
    7. ')return' → logprob: -18.125
    8. ')#' → logprob: -19.0
    9. ')}' → logprob: -19.125
    10. ')>' → logprob: -19.75

Token 143: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1457691341638565
    2. '

' → logprob: -2.3957691192626953
    3. '
' → logprob: -3.1457691192626953
    4. '
' → logprob: -7.645769119262695
    5. '\n' → logprob: -8.895769119262695
    6. ' 

' → logprob: -8.895769119262695
    7. '\' → logprob: -8.895769119262695
    8. '' → logprob: -9.145769119262695
    9. '#' → logprob: -9.145769119262695
    10. ' def' → logprob: -9.645769119262695

Token 144: ' reflect' (ID: 12140)
  Prédit: ' project'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' project' → logprob: -0.7528150081634521
    2. ' cross' → logprob: -1.7528150081634521
    3. 'project' → logprob: -2.127815008163452
    4. ' main' → logprob: -2.252815008163452
    5. ' length' → logprob: -3.877815008163452
    6. 'cross' → logprob: -3.877815008163452
    7. ' closest' → logprob: -4.377815246582031
    8. 'proj' → logprob: -4.502815246582031
    9. ' normalize' → logprob: -4.627815246582031
    10. ' proj' → logprob: -4.752815246582031

Token 145: '(v' (ID: 6932)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.439065545797348
    2. '(' → logprob: -1.0640655755996704
    3. ' (' → logprob: -4.939065456390381
    4. '_' → logprob: -5.939065456390381
    5. '_(' → logprob: -8.814065933227539
    6. '(A' → logprob: -8.939065933227539
    7. '_point' → logprob: -9.189065933227539
    8. '_a' → logprob: -11.314065933227539
    9. '((' → logprob: -11.439065933227539
    10. '_vector' → logprob: -11.439065933227539

Token 146: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005059692775830626
    2. ' ,' → logprob: -7.8755059242248535
    3. ',a' → logprob: -9.750506401062012
    4. ',v' → logprob: -9.875506401062012
    5. ',p' → logprob: -12.000506401062012
    6. ')' → logprob: -13.375506401062012
    7. ',s' → logprob: -13.750506401062012
    8. ',u' → logprob: -14.000506401062012
    9. ',l' → logprob: -14.125506401062012
    10. ',
' → logprob: -14.125506401062012

Token 147: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4741014838218689
    2. ' n' → logprob: -0.9741014838218689
    3. 'normal' → logprob: -11.474101066589355
    4. ' normal' → logprob: -11.974101066589355
    5. '   ' → logprob: -13.099101066589355
    6. ' ' → logprob: -13.599101066589355
    7. '	n' → logprob: -13.724101066589355
    8. 'N' → logprob: -13.974101066589355
    9. 'u' → logprob: -14.599101066589355
    10. 'norm' → logprob: -14.599101066589355

Token 148: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -9.186122770188376e-05
    2. ')' → logprob: -10.125091552734375
    3. '):
' → logprob: -10.250091552734375
    4. ' ):' → logprob: -11.250091552734375
    5. ',' → logprob: -12.875091552734375
    6. ':' → logprob: -16.000091552734375
    7. ' ' → logprob: -16.000091552734375
    8. '):
' → logprob: -16.500091552734375
    9. '):

' → logprob: -16.625091552734375
    10. '   ' → logprob: -16.750091552734375

Token 149: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9441284537315369
    2. '=' → logprob: -1.0691285133361816
    3. ' =' → logprob: -1.5691285133361816
    4. ':' → logprob: -3.1941285133361816
    5. ' return' → logprob: -4.444128513336182
    6. ' :' → logprob: -6.944128513336182
    7. ' ' → logprob: -7.194128513336182
    8. ' v' → logprob: -7.569128513336182
    9. ')' → logprob: -7.694128513336182
    10. 'return' → logprob: -7.819128513336182

Token 150: ' #' (ID: 1069)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9759143590927124
    2. 'return' → logprob: -1.8509143590927124
    3. 'sub' → logprob: -1.8509143590927124
    4. 'a' → logprob: -2.350914478302002
    5. 'r' → logprob: -2.975914478302002
    6. 'mul' → logprob: -3.225914478302002
    7. 'dot' → logprob: -3.600914478302002
    8. 's' → logprob: -4.100914478302002
    9. ' ' → logprob: -4.600914478302002
    10. ' return' → logprob: -4.850914478302002

Token 151: ' v' (ID: 323)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.48590853810310364
    2. 'd' → logprob: -1.2359085083007812
    3. 'dot' → logprob: -3.8609085083007812
    4. 'dn' → logprob: -3.8609085083007812
    5. ' return' → logprob: -4.485908508300781
    6. '2' → logprob: -4.610908508300781
    7. 'proj' → logprob: -4.735908508300781
    8. 'n' → logprob: -5.110908508300781
    9. '   ' → logprob: -5.860908508300781
    10. ' d' → logprob: -5.860908508300781

Token 152: ' reflected' (ID: 45264)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.89643794298172
    2. '-' → logprob: -1.3964378833770752
    3. ' ' → logprob: -1.6464378833770752
    4. ')' → logprob: -2.271437883377075
    5. '=' → logprob: -3.521437883377075
    6. ' =' → logprob: -5.146438121795654
    7. '_' → logprob: -6.021438121795654
    8. ',' → logprob: -6.021438121795654
    9. '.' → logprob: -6.396438121795654
    10. 's' → logprob: -6.896438121795654

Token 153: ' on' (ID: 402)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34947913885116577
    2. ' =' → logprob: -1.2244791984558105
    3. ' ' → logprob: -7.8494791984558105
    4. ')' → logprob: -8.349478721618652
    5. '-' → logprob: -9.099478721618652
    6. ' -' → logprob: -9.349478721618652
    7. ',' → logprob: -9.474478721618652
    8. 'v' → logprob: -9.599478721618652
    9. 's' → logprob: -11.349478721618652
    10. '*' → logprob: -11.599478721618652

Token 154: ' normal' (ID: 6078)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.17563924193382263
    2. 'n' → logprob: -2.0506391525268555
    3. ' the' → logprob: -3.9256391525268555
    4. ' a' → logprob: -5.1756391525268555
    5. 'the' → logprob: -5.3006391525268555
    6. '"' → logprob: -7.3006391525268555
    7. 'a' → logprob: -7.8006391525268555
    8. ''' → logprob: -8.050639152526855
    9. ')' → logprob: -8.550639152526855
    10. ' ' → logprob: -9.175639152526855

Token 155: ' n' (ID: 297)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2898644208908081
    2. ')' → logprob: -2.2898645401000977
    3. '):' → logprob: -2.4148645401000977
    4. '=' → logprob: -3.1648645401000977
    5. ' ' → logprob: -4.914864540100098
    6. ':' → logprob: -5.914864540100098
    7. ' ):' → logprob: -6.539864540100098
    8. ')=' → logprob: -6.664864540100098
    9. ' *' → logprob: -6.664864540100098
    10. ' )' → logprob: -6.789864540100098

Token 156: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01582612469792366
    2. '):' → logprob: -4.390826225280762
    3. '=' → logprob: -7.015826225280762
    4. ' =' → logprob: -7.265826225280762
    5. ')' → logprob: -7.390826225280762
    6. ',' → logprob: -8.140826225280762
    7. '   ' → logprob: -8.515826225280762
    8. ' :' → logprob: -9.015826225280762
    9. '<|end|>' → logprob: -9.140826225280762
    10. ':return' → logprob: -9.265826225280762

Token 157: 'normalized' (ID: 80813)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.4998847544193268
    2. '2' → logprob: -1.9998847246170044
    3. 'v' → logprob: -1.9998847246170044
    4. ' ' → logprob: -2.624884843826294
    5. '   ' → logprob: -4.249884605407715
    6. ' n' → logprob: -4.749884605407715
    7. ' def' → logprob: -5.124884605407715
    8. 'assuming' → logprob: -5.624884605407715
    9. ' assuming' → logprob: -5.874884605407715
    10. 'normalized' → logprob: -6.124884605407715

Token 158: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44125568866729736
    2. '):' → logprob: -1.6912556886672974
    3. ' vector' → logprob: -2.316255569458008
    4. '):
' → logprob: -3.566255569458008
    5. ' )' → logprob: -3.566255569458008
    6. ' ):' → logprob: -4.691255569458008
    7. ' ):
' → logprob: -5.941255569458008
    8. '):

' → logprob: -6.566255569458008
    9. ')
' → logprob: -6.691255569458008
    10. 'v' → logprob: -6.816255569458008

Token 159: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6915459036827087
    2. '   ' → logprob: -1.0665459632873535
    3. ':
' → logprob: -2.0665459632873535
    4. ':return' → logprob: -4.9415459632873535
    5. '
' → logprob: -5.0665459632873535
    6. ' return' → logprob: -5.0665459632873535
    7. '):
' → logprob: -6.1915459632873535
    8. ')' → logprob: -6.4415459632873535
    9. '	return' → logprob: -6.8165459632873535
    10. '):' → logprob: -7.0665459632873535

Token 160: ' d' (ID: 272)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3756277561187744
    2. ' return' → logprob: -1.6256277561187744
    3. '   ' → logprob: -3.3756277561187744
    4. '-' → logprob: -4.000627517700195
    5. '=' → logprob: -4.375627517700195
    6. ')' → logprob: -4.500627517700195
    7. ' ' → logprob: -4.875627517700195
    8. 'sub' → logprob: -5.375627517700195
    9. 'r' → logprob: -5.875627517700195
    10. 'v' → logprob: -6.125627517700195

Token 161: ' =' (ID: 314)
  Prédit: 'ot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.8356520533561707
    2. '=' → logprob: -1.4606521129608154
    3. ' =' → logprob: -1.8356521129608154
    4. 'o' → logprob: -1.8356521129608154
    5. ' ' → logprob: -5.335651874542236
    6. 'ouble' → logprob: -5.585651874542236
    7. 'ef' → logprob: -6.585651874542236
    8. 'e' → logprob: -6.710651874542236
    9. 'otp' → logprob: -7.085651874542236
    10. ',' → logprob: -7.585651874542236

Token 162: ' dot' (ID: 16579)
  Prédit: ' dot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dot' → logprob: -0.8277337551116943
    2. 'dot' → logprob: -1.3277337551116943
    3. '2' → logprob: -2.4527337551116943
    4. 'mul' → logprob: -2.5777337551116943
    5. ' ' → logprob: -3.0777337551116943
    6. ' sub' → logprob: -3.2027337551116943
    7. 'sub' → logprob: -3.8277337551116943
    8. ' mul' → logprob: -4.327733993530273
    9. ' v' → logprob: -4.702733993530273
    10. '-' → logprob: -6.577733993530273

Token 163: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.008634188212454319
    2. '(' → logprob: -4.758634090423584
    3. '(
' → logprob: -11.633634567260742
    4. '<|end|>' → logprob: -12.383634567260742
    5. '(n' → logprob: -13.008634567260742
    6. '((' → logprob: -13.508634567260742
    7. '(s' → logprob: -14.633634567260742
    8. '(u' → logprob: -15.008634567260742
    9. ' (' → logprob: -15.133634567260742
    10. ')(' → logprob: -15.133634567260742

Token 164: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3274000287055969
    2. ',n' → logprob: -1.3273999691009521
    3. '(n' → logprob: -4.827400207519531
    4. ' ,' → logprob: -5.952400207519531
    5. '(' → logprob: -6.077400207519531
    6. ',v' → logprob: -6.952400207519531
    7. ',d' → logprob: -10.077400207519531
    8. ' ' → logprob: -10.202400207519531
    9. ',
' → logprob: -10.827400207519531
    10. ',m' → logprob: -11.202400207519531

Token 165: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3871380090713501
    2. ' n' → logprob: -1.13713800907135
    3. ')n' → logprob: -9.387138366699219
    4. '	n' → logprob: -9.512138366699219
    5. ')' → logprob: -10.012138366699219
    6. 'mul' → logprob: -10.387138366699219
    7. '(n' → logprob: -11.012138366699219
    8. ' mul' → logprob: -12.262138366699219
    9. '[n' → logprob: -12.762138366699219
    10. 'm' → logprob: -13.262138366699219

Token 166: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00526778819039464
    2. ')*' → logprob: -5.25526762008667
    3. ')
' → logprob: -11.005268096923828
    4. ' )' → logprob: -11.130268096923828
    5. '*' → logprob: -14.630268096923828
    6. ')`' → logprob: -15.005268096923828
    7. ')**' → logprob: -15.130268096923828
    8. ')

' → logprob: -15.255268096923828
    9. '   ' → logprob: -15.380268096923828
    10. ')n' → logprob: -15.630268096923828

Token 167: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4371165335178375
    2. ' *' → logprob: -2.1871166229248047
    3. ' n' → logprob: -2.4371166229248047
    4. ')' → logprob: -3.0621166229248047
    5. '*' → logprob: -3.3121166229248047
    6. ' v' → logprob: -4.062116622924805
    7. '   ' → logprob: -4.187116622924805
    8. 'n' → logprob: -4.812116622924805
    9. '2' → logprob: -5.062116622924805
    10. ' return' → logprob: -5.187116622924805

Token 168: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.08704010397195816
    2. 'return' (adapté à ' return') → logprob: -2.8370401859283447
    3. '   ' → logprob: -3.8370401859283447
    4. ' ' → logprob: -6.837039947509766
    5. '-' → logprob: -7.462039947509766
    6. ')' → logprob: -7.837039947509766
    7. ' r' → logprob: -7.962039947509766
    8. 'r' → logprob: -8.712039947509766
    9. ' -' → logprob: -9.087039947509766
    10. '    ' → logprob: -9.462039947509766

Token 169: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -1.1194714307785034
    2. ' (' → logprob: -1.2444714307785034
    3. '(' → logprob: -1.6194714307785034
    4. ' sub' → logprob: -2.744471549987793
    5. 'add' → logprob: -2.869471549987793
    6. ' add' → logprob: -3.119471549987793
    7. '(sub' → logprob: -4.244471549987793
    8. '(add' → logprob: -5.869471549987793
    9. 'subtract' → logprob: -6.244471549987793
    10. '(
' → logprob: -6.869471549987793

Token 170: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.03805939108133316
    2. '(' → logprob: -3.2880594730377197
    3. '(m' → logprob: -12.16305923461914
    4. '(
' → logprob: -12.16305923461914
    5. '((' → logprob: -12.53805923461914
    6. 'v' → logprob: -13.53805923461914
    7. '(a' → logprob: -14.28805923461914
    8. ' (' → logprob: -14.91305923461914
    9. '(

' → logprob: -15.16305923461914
    10. '(u' → logprob: -15.28805923461914

Token 171: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4749513864517212
    2. ',m' → logprob: -0.9749513864517212
    3. ' ,' → logprob: -7.349951267242432
    4. 'mul' → logprob: -8.47495174407959
    5. ' mul' → logprob: -11.59995174407959
    6. ',
' → logprob: -12.34995174407959
    7. '_mul' → logprob: -13.34995174407959
    8. 'm' → logprob: -13.72495174407959
    9. 'multip' → logprob: -13.97495174407959
    10. ' ' → logprob: -14.09995174407959

Token 172: ' mul' (ID: 9975)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.07006993144750595
    2. ' mul' → logprob: -2.6950700283050537
    3. ' ' → logprob: -9.820070266723633
    4. '   ' → logprob: -10.445070266723633
    5. '	m' → logprob: -11.320070266723633
    6. 'm' → logprob: -11.820070266723633
    7. ' mull' → logprob: -11.945070266723633
    8. 'multip' → logprob: -11.945070266723633
    9. '_mul' → logprob: -12.320070266723633
    10. ' multip' → logprob: -12.820070266723633

Token 173: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.1533045917749405
    2. '(' → logprob: -2.5283045768737793
    3. '(m' → logprob: -2.7783045768737793
    4. 'mul' → logprob: -9.528305053710938
    5. '(mult' → logprob: -9.778305053710938
    6. '(
' → logprob: -11.028305053710938
    7. '_mul' → logprob: -11.653305053710938
    8. '((' → logprob: -11.778305053710938
    9. '(norm' → logprob: -11.778305053710938
    10. ' (' → logprob: -12.153305053710938

Token 174: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004758699797093868
    2. ' (' → logprob: -6.004758834838867
    3. '((' → logprob: -7.129758834838867
    4. '(s' → logprob: -7.504758834838867
    5. '(m' → logprob: -8.629758834838867
    6. ')(' → logprob: -8.629758834838867
    7. '(d' → logprob: -9.129758834838867
    8. ',(' → logprob: -9.254758834838867
    9. '   ' → logprob: -9.504758834838867
    10. ',' → logprob: -9.879758834838867

Token 175: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0015937690623104572
    2. ' ' → logprob: -6.501593589782715
    3. '(' → logprob: -9.501593589782715
    4. '   ' → logprob: -11.751593589782715
    5. '  ' → logprob: -12.626593589782715
    6. ' (' → logprob: -13.376593589782715
    7. '```' → logprob: -13.751593589782715
    8. '    ' → logprob: -14.001593589782715
    9. 'd' → logprob: -14.626593589782715
    10. '
' → logprob: -15.251593589782715

Token 176: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00027968952781520784
    2. ' ' → logprob: -8.375279426574707
    3. '(' → logprob: -10.000279426574707
    4. '   ' → logprob: -13.125279426574707
    5. '  ' → logprob: -14.250279426574707
    6. '    ' → logprob: -15.000279426574707
    7. ' (' → logprob: -15.500279426574707
    8. '```' → logprob: -16.250280380249023
    9. 'd' → logprob: -16.500280380249023
    10. '[' → logprob: -17.000280380249023

Token 177: '*d' (ID: 81685)
  Prédit: '*d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*d' → logprob: -0.135402113199234
    2. '*' → logprob: -2.760402202606201
    3. ' *' → logprob: -2.760402202606201
    4. ')' → logprob: -10.135401725769043
    5. ' ' → logprob: -10.760401725769043
    6. 'd' → logprob: -10.885401725769043
    7. '*)' → logprob: -12.260401725769043
    8. ')*' → logprob: -12.260401725769043
    9. ' )' → logprob: -13.260401725769043
    10. '   ' → logprob: -13.260401725769043

Token 178: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2519329786300659
    2. '))' → logprob: -1.501932978630066
    3. ')
' → logprob: -13.626933097839355
    4. ' )' → logprob: -13.751933097839355
    5. ')))' → logprob: -13.876933097839355
    6. ' ))' → logprob: -15.126933097839355
    7. '))
' → logprob: -15.376933097839355
    8. ')}' → logprob: -16.75193214416504
    9. '),' → logprob: -17.12693214416504
    10. ')`' → logprob: -18.12693214416504

Token 179: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6535151600837708
    2. '
' → logprob: -0.7785151600837708
    3. '\n' → logprob: -5.153515338897705
    4. '

' → logprob: -5.153515338897705
    5. '<|end|>' → logprob: -5.528515338897705
    6. '\' → logprob: -6.528515338897705
    7. '#' → logprob: -7.028515338897705
    8. 'n' → logprob: -7.028515338897705
    9. '```' → logprob: -8.028514862060547
    10. '' → logprob: -8.028514862060547

Token 180: ' solve' (ID: 17722)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.014505468308925629
    2. 'main' → logprob: -5.264505386352539
    3. ' simulate' → logprob: -5.514505386352539
    4. ' solve' → logprob: -6.014505386352539
    5. ' bounce' → logprob: -6.639505386352539
    6. ' find' → logprob: -8.139505386352539
    7. 'simulate' → logprob: -8.264505386352539
    8. ' ray' → logprob: -8.639505386352539
    9. ' run' → logprob: -8.889505386352539
    10. ' trace' → logprob: -9.014505386352539

Token 181: '(D' (ID: 9908)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00011129142512800172
    2. ' ():' → logprob: -9.50011157989502
    3. '():
' → logprob: -10.25011157989502
    4. '()' → logprob: -14.00011157989502
    5. '(' → logprob: -16.125110626220703
    6. ':' → logprob: -17.875110626220703
    7. '():
' → logprob: -18.000110626220703
    8. '(":' → logprob: -19.375110626220703
    9. '():

' → logprob: -19.500110626220703
    10. ' ()' → logprob: -19.500110626220703

Token 182: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0697624608874321
    2. '):' → logprob: -3.3197624683380127
    3. ' ,' → logprob: -4.069762229919434
    4. ' ):' → logprob: -4.944762229919434
    5. ',P' → logprob: -6.444762229919434
    6. ',p' → logprob: -7.444762229919434
    7. 'ist' → logprob: -7.819762229919434
    8. ',x' → logprob: -7.819762229919434
    9. ',A' → logprob: -7.819762229919434
    10. ')' → logprob: -7.944762229919434

Token 183: ' px' (ID: 27003)
  Prédit: ' R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' R' → logprob: -1.6347051858901978
    2. ' points' → logprob: -1.7597051858901978
    3. ' P' → logprob: -2.134705066680908
    4. ' A' → logprob: -3.009705066680908
    5. ' p' → logprob: -3.509705066680908
    6. 'R' → logprob: -3.509705066680908
    7. ' obstacles' → logprob: -3.634705066680908
    8. ' W' → logprob: -3.759705066680908
    9. ' S' → logprob: -3.759705066680908
    10. 'P' → logprob: -3.759705066680908

Token 184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013638085220009089
    2. 'y' → logprob: -7.626363754272461
    3. ',y' → logprob: -8.126363754272461
    4. ' ,' → logprob: -8.626363754272461
    5. ',p' → logprob: -9.001363754272461
    6. ',
' → logprob: -10.126363754272461
    7. 's' → logprob: -10.501363754272461
    8. '):' → logprob: -10.751363754272461
    9. 'p' → logprob: -10.751363754272461
    10. 'oints' → logprob: -10.751363754272461

Token 185: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.11330960690975189
    2. ' py' → logprob: -2.238309621810913
    3. 'p' → logprob: -9.363309860229492
    4. 'dy' → logprob: -9.363309860229492
    5. '_py' → logprob: -9.863309860229492
    6. '```' → logprob: -9.988309860229492
    7. ' ' → logprob: -10.113309860229492
    8. '0' → logprob: -10.800809860229492
    9. '1' → logprob: -11.113309860229492
    10. '(py' → logprob: -11.425809860229492

Token 186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.043449342250823975
    2. '):' → logprob: -3.1684494018554688
    3. ' ,' → logprob: -8.668449401855469
    4. ')' → logprob: -9.293449401855469
    5. ' ):' → logprob: -9.293449401855469
    6. ',s' → logprob: -11.418449401855469
    7. ',p' → logprob: -11.543449401855469
    8. '):
' → logprob: -11.668449401855469
    9. ',
' → logprob: -12.043449401855469
    10. 's' → logprob: -12.043449401855469

Token 187: ' vx' (ID: 93588)
  Prédit: ' vx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vx' → logprob: -0.5857075452804565
    2. 'vx' → logprob: -2.210707664489746
    3. 'qx' → logprob: -3.585707664489746
    4. ' q' → logprob: -3.773207664489746
    5. ' tx' → logprob: -3.898207664489746
    6. ' rx' → logprob: -4.023207664489746
    7. ' cx' → logprob: -4.210707664489746
    8. ' r' → logprob: -4.335707664489746
    9. ' n' → logprob: -4.460707664489746
    10. 'rx' → logprob: -4.585707664489746

Token 188: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.618001053633634e-05
    2. ' ,' → logprob: -11.500025749206543
    3. ',v' → logprob: -11.625025749206543
    4. ',y' → logprob: -12.375025749206543
    5. '):' → logprob: -13.625025749206543
    6. '_,' → logprob: -15.125025749206543
    7. ',
' → logprob: -15.375025749206543
    8. ')' → logprob: -15.500025749206543
    9. '0' → logprob: -16.25002670288086
    10. 's' → logprob: -16.50002670288086

Token 189: ' vy' (ID: 14190)
  Prédit: 'vy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' → logprob: -0.22555960714817047
    2. ' vy' → logprob: -1.6005595922470093
    3. 'v' → logprob: -10.35055923461914
    4. ',' → logprob: -10.47555923461914
    5. ' ' → logprob: -10.60055923461914
    6. '```' → logprob: -10.97555923461914
    7. ' 
' → logprob: -12.22555923461914
    8. '    
' → logprob: -12.72555923461914
    9. '
' → logprob: -12.72555923461914
    10. '
' → logprob: -12.85055923461914

Token 190: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10086320340633392
    2. ',' → logprob: -2.350863218307495
    3. ' ):' → logprob: -7.850862979888916
    4. ')' → logprob: -8.475863456726074
    5. '):
' → logprob: -10.975863456726074
    6. ' ,' → logprob: -11.350863456726074
    7. ':' → logprob: -11.350863456726074
    8. ',p' → logprob: -12.975863456726074
    9. ',s' → logprob: -13.475863456726074
    10. ',d' → logprob: -13.600863456726074

Token 191: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030624426901340485
    2. '
' → logprob: -3.7806243896484375
    3. '    
' → logprob: -5.9056243896484375
    4. ' 
' → logprob: -6.5306243896484375
    5. '<|end|>' → logprob: -6.7806243896484375
    6. ':' → logprob: -7.9056243896484375
    7. '  
' → logprob: -8.280624389648438
    8. 'n' → logprob: -8.780624389648438
    9. ',' → logprob: -8.780624389648438
    10. '#' → logprob: -8.905624389648438

Token 192: ' P' (ID: 398)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.267231822013855
    2. ' t' → logprob: -2.2672319412231445
    3. ' #' → logprob: -2.2672319412231445
    4. ' r' → logprob: -2.3922319412231445
    5. ' v' → logprob: -2.8922319412231445
    6. 'r' → logprob: -3.0172319412231445
    7. 't' → logprob: -3.0172319412231445
    8. '#' → logprob: -3.1422319412231445
    9. ' x' → logprob: -3.6422319412231445
    10. 'v' → logprob: -3.7672319412231445

Token 193: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2525545358657837
    2. '=' → logprob: -1.5025545358657837
    3. '0' → logprob: -8.002554893493652
    4. ')' → logprob: -9.252554893493652
    5. ',' → logprob: -9.752554893493652
    6. 'x' → logprob: -10.127554893493652
    7. '=(' → logprob: -11.002554893493652
    8. ' =(' → logprob: -11.127554893493652
    9. ' ' → logprob: -11.252554893493652
    10. '   ' → logprob: -11.252554893493652

Token 194: ' (' (ID: 350)
  Prédit: '(px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(px' → logprob: -0.19809120893478394
    2. '(' → logprob: -2.3230912685394287
    3. ' (' → logprob: -2.5730912685394287
    4. '(py' → logprob: -5.44809103012085
    5. '(p' → logprob: -7.07309103012085
    6. '(x' → logprob: -8.823091506958008
    7. '[' → logprob: -9.948091506958008
    8. '[(' → logprob: -10.948091506958008
    9. '(pm' → logprob: -11.198091506958008
    10. '(mx' → logprob: -11.448091506958008

Token 195: 'px' (ID: 3207)
  Prédit: 'px'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.008686548098921776
    2. ' px' → logprob: -4.758686542510986
    3. '(px' → logprob: -9.633687019348145
    4. '   ' → logprob: -13.758687019348145
    5. 'py' → logprob: -13.758687019348145
    6. 'Px' → logprob: -13.883687019348145
    7. ':px' → logprob: -14.133687019348145
    8. '_px' → logprob: -14.258687019348145
    9. ' ' → logprob: -14.633687019348145
    10. 'vx' → logprob: -15.383687019348145

Token 196: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007274442468769848
    2. ' ,' → logprob: -7.250727653503418
    3. ',y' → logprob: -11.000727653503418
    4. ',p' → logprob: -14.625727653503418
    5. ',
' → logprob: -15.625727653503418
    6. ',v' → logprob: -16.8757266998291
    7. ' py' → logprob: -17.7507266998291
    8. 'y' → logprob: -17.8757266998291
    9. ' ' → logprob: -18.0007266998291
    10. '.py' → logprob: -18.1257266998291

Token 197: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.3133011758327484
    2. ' py' → logprob: -1.3133012056350708
    3. '_py' → logprob: -11.063301086425781
    4. '(py' → logprob: -11.188301086425781
    5. '.py' → logprob: -12.563301086425781
    6. ' ' → logprob: -13.188301086425781
    7. ' 
' → logprob: -13.313301086425781
    8. ' ' → logprob: -13.438301086425781
    9. '
' → logprob: -15.438301086425781
    10. '  
' → logprob: -15.563301086425781

Token 198: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.722539834911004e-05
    2. ')
' → logprob: -9.375097274780273
    3. ' )' → logprob: -11.375097274780273
    4. ')

' → logprob: -14.250097274780273
    5. '),' → logprob: -17.375097274780273
    6. ')
' → logprob: -17.500097274780273
    7. ')`' → logprob: -17.750097274780273
    8. ')v' → logprob: -17.750097274780273
    9. '))' → logprob: -18.125097274780273
    10. ' ' → logprob: -18.125097274780273

Token 199: '   ' (ID: 271)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.4328726828098297
    2. ' V' → logprob: -1.5578726530075073
    3. '   ' → logprob: -2.557872772216797
    4. '
' → logprob: -3.307872772216797
    5. 'v' → logprob: -4.057872772216797
    6. ' (' → logprob: -5.807872772216797
    7. '(' → logprob: -6.307872772216797
    8. ' v' → logprob: -6.682872772216797
    9. '    
' → logprob: -6.932872772216797
    10. '  
' → logprob: -7.557872772216797

Token 200: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' (adapté à ' V') → logprob: -0.1863185316324234
    2. 'D' → logprob: -2.1863186359405518
    3. 'v' → logprob: -3.6863186359405518
    4. '(' → logprob: -4.186318397521973
    5. '(D' → logprob: -4.186318397521973
    6. '(V' → logprob: -6.811318397521973
    7. ' V' → logprob: -8.436318397521973
    8. ' (' → logprob: -8.686318397521973
    9. '(v' → logprob: -8.936318397521973
    10. '   ' → logprob: -9.186318397521973

Token 201: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931586861610413
    2. ' =' → logprob: -0.6931586861610413
    3. '=(' → logprob: -11.943159103393555
    4. ' =(' → logprob: -12.943159103393555
    5. '(' → logprob: -13.318159103393555
    6. ' ' → logprob: -14.693159103393555
    7. ')' → logprob: -15.318159103393555
    8. ',' → logprob: -16.318159103393555
    9. ' (' → logprob: -16.943159103393555
    10. 'x' → logprob: -17.693159103393555

Token 202: ' (' (ID: 350)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.2525565028190613
    2. ' (' → logprob: -1.502556562423706
    3. '(' → logprob: -7.377556324005127
    4. '(x' → logprob: -14.752556800842285
    5. ' ' → logprob: -14.752556800842285
    6. '(vc' → logprob: -14.877556800842285
    7. '(vm' → logprob: -15.377556800842285
    8. '(V' → logprob: -15.752556800842285
    9. '(px' → logprob: -16.37755584716797
    10. ' vx' → logprob: -16.37755584716797

Token 203: 'vx' (ID: 96015)
  Prédit: 'vx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vx' → logprob: -2.463036435074173e-05
    2. ' vx' → logprob: -10.625024795532227
    3. '   ' → logprob: -15.625024795532227
    4. ' ' → logprob: -16.875024795532227
    5. 'x' → logprob: -17.125024795532227
    6. '
' → logprob: -18.000024795532227
    7. 'vy' → logprob: -18.375024795532227
    8. '  ' → logprob: -19.000024795532227
    9. '
' → logprob: -19.125024795532227
    10. 'px' → logprob: -19.250024795532227

Token 204: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00032235344406217337
    2. ' ,' → logprob: -8.250322341918945
    3. ',v' → logprob: -9.750322341918945
    4. ',y' → logprob: -13.375322341918945
    5. ',
' → logprob: -14.625322341918945
    6. ')' → logprob: -14.875322341918945
    7. '‌,' → logprob: -15.875322341918945
    8. ' ' → logprob: -16.625322341918945
    9. '),' → logprob: -16.625322341918945
    10. '```' → logprob: -17.000322341918945

Token 205: ' vy' (ID: 14190)
  Prédit: 'vy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' → logprob: -0.02324605919420719
    2. ' vy' → logprob: -3.7732460498809814
    3. ' ' → logprob: -14.898245811462402
    4. 'wy' → logprob: -17.14824676513672
    5. '0' → logprob: -17.39824676513672
    6. 'yv' → logprob: -17.39824676513672
    7. 'vyk' → logprob: -17.52324676513672
    8. '   ' → logprob: -18.02324676513672
    9. 'v' → logprob: -18.27324676513672
    10. 'Vy' → logprob: -18.39824676513672

Token 206: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.107425062713446e-06
    2. ')
' → logprob: -12.500006675720215
    3. ' )' → logprob: -12.750006675720215
    4. '   ' → logprob: -15.000006675720215
    5. ')#' → logprob: -16.75000762939453
    6. ')

' → logprob: -16.87500762939453
    7. ')return' → logprob: -17.25000762939453
    8. '))' → logprob: -18.25000762939453
    9. ')
' → logprob: -18.37500762939453
    10. '),' → logprob: -18.62500762939453

Token 207: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15151607990264893
    2. '
' → logprob: -2.0265159606933594
    3. '    
' → logprob: -4.901515960693359
    4. '<|end|>' → logprob: -8.02651596069336
    5. ',' → logprob: -8.52651596069336
    6. ',
' → logprob: -8.90151596069336
    7. ')' → logprob: -8.90151596069336
    8. '#' → logprob: -9.15151596069336
    9. 'def' → logprob: -9.65151596069336
    10. '  
' → logprob: -9.77651596069336

Token 208: ' R' (ID: 460)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5022239685058594
    2. 'r' → logprob: -2.1272239685058594
    3. 'walls' → logprob: -2.3772239685058594
    4. '#' → logprob: -2.5022239685058594
    5. 'R' (adapté à ' R') → logprob: -2.5022239685058594
    6. 'for' → logprob: -2.8772239685058594
    7. 'W' → logprob: -3.1272239685058594
    8. 'D' → logprob: -3.3772239685058594
    9. 'if' → logprob: -3.7522239685058594
    10. 'def' → logprob: -4.127223968505859

Token 209: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3145637512207031
    2. '=' → logprob: -1.3145637512207031
    3. 'ADIUS' → logprob: -7.439563751220703
    4. 'adius' → logprob: -8.314563751220703
    5. ' ' → logprob: -8.564563751220703
    6. ',' → logprob: -9.439563751220703
    7. '   ' → logprob: -10.314563751220703
    8. 'O' → logprob: -10.564563751220703
    9. 'E' → logprob: -10.814563751220703
    10. '0' → logprob: -10.939563751220703

Token 210: ' ' (ID: 220)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.9156169295310974
    2. ' D' → logprob: -1.5406169891357422
    3. '1' → logprob: -2.040616989135742
    4. '(D' → logprob: -2.290616989135742
    5. ' ' → logprob: -2.790616989135742
    6. '10' → logprob: -3.540616989135742
    7. '100' → logprob: -3.665616989135742
    8. '0' → logprob: -4.915616989135742
    9. ' (' → logprob: -4.915616989135742
    10. '(' → logprob: -5.165616989135742

Token 211: '1' (ID: 16)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.5075197815895081
    2. '1' → logprob: -1.3825197219848633
    3. '(D' → logprob: -2.5075197219848633
    4. '10' → logprob: -4.007519721984863
    5. '100' → logprob: -4.132519721984863
    6. '0' → logprob: -4.257519721984863
    7. '5' → logprob: -5.632519721984863
    8. '2' → logprob: -5.882519721984863
    9. '50' → logprob: -6.132519721984863
    10. '(' → logprob: -6.132519721984863

Token 212: '.' (ID: 13)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0334362983703613
    2. '0' → logprob: -1.2834362983703613
    3. '   ' → logprob: -1.6584362983703613
    4. '.' → logprob: -3.1584362983703613
    5. '    
' → logprob: -3.2834362983703613
    6. '  
' → logprob: -3.7834362983703613
    7. ' ' → logprob: -4.408436298370361
    8. '2' → logprob: -4.908436298370361
    9. 'e' → logprob: -4.908436298370361
    10. '   
' → logprob: -5.033436298370361

Token 213: '0' (ID: 15)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.5907379984855652
    2. '0' → logprob: -0.8407379984855652
    3. '2' → logprob: -4.965737819671631
    4. ' ' → logprob: -5.840737819671631
    5. '8' → logprob: -6.590737819671631
    6. '7' → logprob: -7.340737819671631
    7. '4' → logprob: -7.340737819671631
    8. '1' → logprob: -7.590737819671631
    9. '6' → logprob: -7.715737819671631
    10. '9' → logprob: -8.215738296508789

Token 214: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5517826676368713
    2. '
' → logprob: -0.9267826676368713
    3. '    
' → logprob: -3.8017826080322266
    4. '<|end|>' → logprob: -5.926782608032227
    5. ',' → logprob: -7.426782608032227
    6. ',
' → logprob: -7.676782608032227
    7. ' 
' → logprob: -8.176782608032227
    8. 'def' → logprob: -8.301782608032227
    9. '  
' → logprob: -8.426782608032227
    10. ')' → logprob: -8.676782608032227

Token 215: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003074444830417633
    2. '    
' → logprob: -6.878074645996094
    3. '
' → logprob: -7.253074645996094
    4. 'def' → logprob: -7.878074645996094
    5. '#' → logprob: -8.628074645996094
    6. ' walls' → logprob: -8.753074645996094
    7. 'n' → logprob: -9.628074645996094
    8. 'import' → logprob: -9.878074645996094
    9. 's' → logprob: -10.003074645996094
    10. ' edges' → logprob: -10.003074645996094

Token 216: ' EPS' (ID: 66979)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8457673192024231
    2. 'def' → logprob: -2.2207672595977783
    3. 'walls' → logprob: -2.2207672595977783
    4. '   ' → logprob: -2.9707672595977783
    5. 'a' → logprob: -2.9707672595977783
    6. 'A' → logprob: -3.2207672595977783
    7. 'L' → logprob: -3.7207672595977783
    8. 'res' → logprob: -3.7207672595977783
    9. 'c' → logprob: -3.9707672595977783
    10. 'w' → logprob: -4.095767498016357

Token 217: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07208089530467987
    2. '=' → logprob: -2.6970808506011963
    3. '_' → logprob: -6.197081089019775
    4. ' _' → logprob: -10.197080612182617
    5. ' ' → logprob: -10.197080612182617
    6. '_=' → logprob: -12.197080612182617
    7. ' ' → logprob: -12.322080612182617
    8. ' =)' → logprob: -12.572080612182617
    9. '  ' → logprob: -13.072080612182617
    10. '   ' → logprob: -13.197080612182617

Token 218: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03804183006286621
    2. ' ' → logprob: -3.288041830062866
    3. '   ' → logprob: -15.288042068481445
    4. '0' → logprob: -16.163042068481445
    5. '(' → logprob: -17.788042068481445
    6. ' ' → logprob: -18.038042068481445
    7. ' -' → logprob: -18.288042068481445
    8. '10' → logprob: -18.413042068481445
    9. '  ' → logprob: -18.913042068481445
    10. '    ' → logprob: -18.913042068481445

Token 219: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.75000286102295
    3. '10' → logprob: -16.375003814697266
    4. '-' → logprob: -18.000003814697266
    5. '(' → logprob: -19.250003814697266
    6. '   ' → logprob: -20.750003814697266
    7. '```' → logprob: -20.750003814697266
    8. '0' → logprob: -21.000003814697266
    9. '.' → logprob: -21.625003814697266
    10. '=' → logprob: -22.500003814697266

Token 220: 'e' (ID: 68)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02977166697382927
    2. 'e' → logprob: -3.529771566390991
    3. '-
' → logprob: -11.65477180480957
    4. ' -' → logprob: -12.40477180480957
    5. '.' → logprob: -12.65477180480957
    6. '3' → logprob: -13.52977180480957
    7. '   ' → logprob: -13.52977180480957
    8. '0' → logprob: -13.77977180480957
    9. '```' → logprob: -14.27977180480957
    10. '−' → logprob: -15.40477180480957

Token 221: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: 0.0
    2. ' -' → logprob: -17.0
    3. '9' → logprob: -17.375
    4. '3' → logprob: -17.625
    5. '6' → logprob: -17.875
    6. '
' → logprob: -17.875
    7. '   ' → logprob: -19.0
    8. '```' → logprob: -19.0
    9. '−' → logprob: -19.0
    10. '8' → logprob: -19.125

Token 222: '14' (ID: 1265)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.2979229986667633
    2. '8' → logprob: -1.672922968864441
    3. '10' → logprob: -3.1729230880737305
    4. '7' → logprob: -3.9229230880737305
    5. '12' → logprob: -5.0479230880737305
    6. '6' → logprob: -6.9229230880737305
    7. '09' → logprob: -8.17292308807373
    8. '08' → logprob: -8.42292308807373
    9. '14' → logprob: -8.54792308807373
    10. '15' → logprob: -9.67292308807373

Token 223: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16699537634849548
    2. '   ' → logprob: -2.0419952869415283
    3. '    
' → logprob: -4.916995525360107
    4. 'def' → logprob: -5.291995525360107
    5. '<|end|>' → logprob: -6.041995525360107
    6. ' 
' → logprob: -6.416995525360107
    7. ',
' → logprob: -6.541995525360107
    8. '  
' → logprob: -6.791995525360107
    9. ',' → logprob: -6.916995525360107
    10. ' while' → logprob: -7.541995525360107

Token 224: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4320882558822632
    2. 'while' → logprob: -2.6820883750915527
    3. ' while' → logprob: -2.6820883750915527
    4. 't' → logprob: -3.0570883750915527
    5. 'for' → logprob: -3.0570883750915527
    6. 'def' → logprob: -3.6820883750915527
    7. ' for' → logprob: -3.6820883750915527
    8. 'n' → logprob: -4.057088375091553
    9. ' t' → logprob: -4.432088375091553
    10. '#' → logprob: -4.932088375091553

Token 225: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7915060520172119
    2. 't' → logprob: -1.666506052017212
    3. 'while' → logprob: -2.541506052017212
    4. 'res' → logprob: -2.666506052017212
    5. 'def' → logprob: -2.791506052017212
    6. '#' → logprob: -3.291506052017212
    7. 'low' → logprob: -3.666506052017212
    8. 'ans' → logprob: -4.541505813598633
    9. 'left' → logprob: -4.541505813598633
    10. 'l' → logprob: -4.916505813598633

Token 226: ' norm' (ID: 7882)
  Prédit: ' norm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' norm' → logprob: -0.35230714082717896
    2. ' abs' → logprob: -1.9773070812225342
    3. ' V' → logprob: -2.977307081222534
    4. ' vx' → logprob: -2.977307081222534
    5. ' dist' → logprob: -3.102307081222534
    6. ' math' → logprob: -5.602307319641113
    7. 'norm' → logprob: -6.227307319641113
    8. ' ' → logprob: -6.727307319641113
    9. 'abs' → logprob: -7.227307319641113
    10. ' D' → logprob: -7.602307319641113

Token 227: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.00020914296328555793
    2. ' (' → logprob: -9.375208854675293
    3. '((' → logprob: -9.625208854675293
    4. '(P' → logprob: -9.875208854675293
    5. '(' → logprob: -12.375208854675293
    6. '(D' → logprob: -13.875208854675293
    7. '(v' → logprob: -14.250208854675293
    8. '(sub' → logprob: -14.875208854675293
    9. '(R' → logprob: -15.625208854675293
    10. 'V' → logprob: -16.50020980834961

Token 228: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006848576944321394
    2. ' )' → logprob: -5.2568488121032715
    3. ')==' → logprob: -7.1318488121032715
    4. ')<' → logprob: -7.6318488121032715
    5. ')<=' → logprob: -8.381848335266113
    6. '()' → logprob: -10.131848335266113
    7. '()<' → logprob: -11.256848335266113
    8. '())' → logprob: -11.506848335266113
    9. ' <' → logprob: -11.756848335266113
    10. ')>' → logprob: -12.381848335266113

Token 229: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.29816102981567383
    2. '<' → logprob: -1.5481610298156738
    3. '()<' → logprob: -3.173161029815674
    4. ' <=' → logprob: -6.673161029815674
    5. '()' → logprob: -6.923161029815674
    6. '<=' → logprob: -7.673161029815674
    7. '<E' → logprob: -7.673161029815674
    8. ' ()' → logprob: -9.923160552978516
    9. ' ' → logprob: -10.173160552978516
    10. '==' → logprob: -11.548160552978516

Token 230: ' ' (ID: 220)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.006718571297824383
    2. ' EPS' → logprob: -5.006718635559082
    3. 'EP' → logprob: -13.506718635559082
    4. 'E' → logprob: -14.131718635559082
    5. ' ' → logprob: -14.631718635559082
    6. '1' → logprob: -15.256718635559082
    7. 'ES' → logprob: -15.631718635559082
    8. 'ESP' → logprob: -16.006717681884766
    9. 'eps' → logprob: -16.756717681884766
    10. '   ' → logprob: -16.881717681884766

Token 231: '1' (ID: 16)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -4.632542913896032e-05
    2. ' EPS' → logprob: -10.000046730041504
    3. 'EP' → logprob: -14.875046730041504
    4. 'E' → logprob: -15.500046730041504
    5. 'ESP' → logprob: -16.250045776367188
    6. '1' → logprob: -16.375045776367188
    7. ' ' → logprob: -16.750045776367188
    8. '   ' → logprob: -16.875045776367188
    9. 'ES' → logprob: -16.875045776367188
    10. 'eps' → logprob: -17.375045776367188

Token 232: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00021366903092712164
    2. '-' → logprob: -8.500213623046875
    3. 'E' → logprob: -12.375213623046875
    4. '0' → logprob: -13.000213623046875
    5. ' -' → logprob: -13.750213623046875
    6. '
' → logprob: -14.125213623046875
    7. '6' → logprob: -14.750213623046875
    8. '-e' → logprob: -14.875213623046875
    9. '.' → logprob: -15.250213623046875
    10. '   ' → logprob: -15.250213623046875

Token 233: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.981667537620524e-06
    2. ' -' → logprob: -13.375001907348633
    3. '   ' → logprob: -15.250001907348633
    4. '
' → logprob: -16.250001907348633
    5. ' ' → logprob: -17.000001907348633
    6. '-
' → logprob: -17.375001907348633
    7. '       ' → logprob: -18.375001907348633
    8. '16' → logprob: -18.750001907348633
    9. '14' → logprob: -18.750001907348633
    10. '

' → logprob: -19.125001907348633

Token 234: '12' (ID: 899)
  Prédit: '14'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '14' → logprob: -0.05061160773038864
    2. '15' → logprob: -3.0506114959716797
    3. '12' → logprob: -7.05061149597168
    4. '20' → logprob: -7.80061149597168
    5. '16' → logprob: -8.17561149597168
    6. '10' → logprob: -8.92561149597168
    7. '-' → logprob: -9.42561149597168
    8. '100' → logprob: -9.55061149597168
    9. '50' → logprob: -9.80061149597168
    10. '30' → logprob: -9.92561149597168

Token 235: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02578473463654518
    2. ':
' → logprob: -3.900784730911255
    3. ':return' → logprob: -5.775784969329834
    4. ' :' → logprob: -6.275784969329834
    5. ' :
' → logprob: -8.525784492492676
    6. '   ' → logprob: -10.650784492492676
    7. ' or' → logprob: -11.400784492492676
    8. '       ' → logprob: -12.400784492492676
    9. ':
' → logprob: -12.650784492492676
    10. ' return' → logprob: -13.525784492492676

Token 236: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005062502343207598
    2. '
' → logprob: -5.880062580108643
    3. ':' → logprob: -7.380062580108643
    4. '\n' → logprob: -7.755062580108643
    5. ':
' → logprob: -7.755062580108643
    6. ' return' → logprob: -8.880062103271484
    7. '        
' → logprob: -8.880062103271484
    8. '0' → logprob: -9.505062103271484
    9. '   ' → logprob: -9.755062103271484
    10. ',' → logprob: -10.005062103271484

Token 237: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6254976987838745
    2. ' return' → logprob: -0.8754976987838745
    3. '   ' → logprob: -3.250497817993164
    4. '       ' → logprob: -5.000497817993164
    5. 'print' → logprob: -6.625497817993164
    6. ' print' → logprob: -6.875497817993164
    7. ' sys' → logprob: -9.375497817993164
    8. '    ' → logprob: -9.500497817993164
    9. ' if' → logprob: -9.625497817993164
    10. '0' → logprob: -9.875497817993164

Token 238: ' no' (ID: 860)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.16190971434116364
    2. 'return' → logprob: -2.286909818649292
    3. ' print' → logprob: -3.411909818649292
    4. '   ' → logprob: -4.661909580230713
    5. 'print' → logprob: -5.411909580230713
    6. ' #' → logprob: -7.536909580230713
    7. '    ' → logprob: -8.786910057067871
    8. '#' → logprob: -8.786910057067871
    9. ' if' → logprob: -10.411910057067871
    10. ' ' → logprob: -10.411910057067871

Token 239: ' velocity' (ID: 30061)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.11133702099323273
    2. 'return' → logprob: -2.6113369464874268
    3. ' ' → logprob: -4.111337184906006
    4. 't' → logprob: -5.861337184906006
    5. '   ' → logprob: -5.861337184906006
    6. ' movement' → logprob: -6.361337184906006
    7. ' collision' → logprob: -6.361337184906006
    8. 'r' → logprob: -7.111337184906006
    9. ')' → logprob: -7.111337184906006
    10. ' interaction' → logprob: -7.361337184906006

Token 240: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4833753705024719
    2. ':' → logprob: -2.733375310897827
    3. ':
' → logprob: -2.983375310897827
    4. '   ' → logprob: -3.108375310897827
    5. '       ' → logprob: -3.358375310897827
    6. ',' → logprob: -3.358375310897827
    7. ' return' → logprob: -3.358375310897827
    8. '\n' → logprob: -3.483375310897827
    9. ':return' → logprob: -3.608375310897827
    10. '    
' → logprob: -3.733375310897827

Token 241: ' no' (ID: 860)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.510172963142395
    2. 'return' → logprob: -1.010172963142395
    3. '       ' → logprob: -3.6351728439331055
    4. '   ' → logprob: -4.8851728439331055
    5. ' print' → logprob: -7.1351728439331055
    6. 'print' → logprob: -7.5101728439331055
    7. '	return' → logprob: -10.260172843933105
    8. ' if' → logprob: -10.385172843933105
    9. 'if' → logprob: -11.135172843933105
    10. ' ' → logprob: -11.135172843933105

Token 242: ' hits' (ID: 21571)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.32840797305107117
    2. 'return' → logprob: -1.8284080028533936
    3. ' collision' → logprob: -2.5784080028533936
    4. 'collision' → logprob: -3.9534080028533936
    5. ' reflection' → logprob: -4.9534077644348145
    6. '   ' → logprob: -5.9534077644348145
    7. ' output' → logprob: -6.3284077644348145
    8. ' bounce' → logprob: -6.4534077644348145
    9. ' collisions' → logprob: -6.4534077644348145
    10. ' movement' → logprob: -6.5784077644348145

Token 243: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3798762559890747
    2. '
' → logprob: -1.8798762559890747
    3. '\n' → logprob: -2.129876136779785
    4. '   ' → logprob: -3.879876136779785
    5. '0' → logprob: -5.129876136779785
    6. ' return' → logprob: -5.379876136779785
    7. '    
' → logprob: -5.754876136779785
    8. 'return' → logprob: -5.754876136779785
    9. ',' → logprob: -6.004876136779785
    10. '        
' → logprob: -6.879876136779785

Token 244: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005062383599579334
    2. 'return' → logprob: -6.130062580108643
    3. ' return' → logprob: -6.255062580108643
    4. '0' → logprob: -7.505062580108643
    5. '
' → logprob: -8.630062103271484
    6. '   ' → logprob: -9.005062103271484
    7. '	' → logprob: -11.130062103271484
    8. ',' → logprob: -11.130062103271484
    9. '\n' → logprob: -11.130062103271484
    10. '	return' → logprob: -11.380062103271484

Token 245: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.19670914113521576
    2. ' return' → logprob: -1.821709156036377
    3. '0' → logprob: -4.696709156036377
    4. '       ' → logprob: -5.071709156036377
    5. '   ' → logprob: -6.946709156036377
    6. 'print' → logprob: -8.821708679199219
    7. '[]' → logprob: -9.196708679199219
    8. ' ' → logprob: -9.321708679199219
    9. '	return' → logprob: -10.821708679199219
    10. ' print' → logprob: -11.071708679199219

Token 246: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.131705179810524
    2. ' None' → logprob: -2.2567052841186523
    3. '0' → logprob: -4.131705284118652
    4. '\n' → logprob: -6.881705284118652
    5. ' ' → logprob: -7.131705284118652
    6. '
' → logprob: -7.381705284118652
    7. ' 
' → logprob: -9.631705284118652
    8. '(None' → logprob: -11.006705284118652
    9. '    
' → logprob: -11.131705284118652
    10. '[]' → logprob: -11.256705284118652

Token 247: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16683275997638702
    2. '   ' → logprob: -2.166832685470581
    3. '    
' → logprob: -4.29183292388916
    4. '<|end|>' → logprob: -4.66683292388916
    5. '

' → logprob: -5.16683292388916
    6. ',' → logprob: -6.66683292388916
    7. '  
' → logprob: -6.79183292388916
    8. '
    
' → logprob: -6.91683292388916
    9. '\n' → logprob: -7.04183292388916
    10. ')' → logprob: -7.16683292388916

Token 248: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08911057561635971
    2. 't' → logprob: -3.7141106128692627
    3. 'res' → logprob: -3.8391106128692627
    4. 'def' → logprob: -4.714110374450684
    5. 'for' → logprob: -5.339110374450684
    6. 'x' → logprob: -5.839110374450684
    7. 'hits' → logprob: -5.964110374450684
    8. 'results' → logprob: -6.464110374450684
    9. 'while' → logprob: -6.589110374450684
    10. 's' → logprob: -6.714110374450684

Token 249: ' dist' (ID: 3601)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.09553349763154984
    2. 'pos' → logprob: -3.845533609390259
    3. 'res' → logprob: -4.09553337097168
    4. '#' → logprob: -4.47053337097168
    5. 'low' → logprob: -4.47053337097168
    6. 'def' → logprob: -4.59553337097168
    7. 'for' → logprob: -5.59553337097168
    8. 'hits' → logprob: -5.84553337097168
    9. 'time' → logprob: -6.34553337097168
    10. 'lo' → logprob: -6.84553337097168

Token 250: '_total' (ID: 23814)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.720465362071991
    2. 'ance' → logprob: -0.845465362071991
    3. '_' → logprob: -2.8454654216766357
    4. ' =' → logprob: -5.345465183258057
    5. '_from' → logprob: -5.970465183258057
    6. 'ances' → logprob: -6.220465183258057
    7. '_p' → logprob: -6.345465183258057
    8. '=' → logprob: -6.470465183258057
    9. '_line' → logprob: -6.470465183258057
    10. '_circle' → logprob: -6.470465183258057

Token 251: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47421836853027344
    2. '=' → logprob: -0.9742183685302734
    3. ',' → logprob: -8.974218368530273
    4. ' ' → logprob: -11.349218368530273
    5. '  ' → logprob: -14.099218368530273
    6. '   ' → logprob: -14.849218368530273
    7. '_' → logprob: -14.974218368530273
    8. ' ,' → logprob: -15.099218368530273
    9. ')' → logprob: -15.349218368530273
    10. ':' → logprob: -15.599218368530273

Token 252: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0041290996596217155
    2. ' ' → logprob: -5.504128932952881
    3. 'float' → logprob: -10.629129409790039
    4. 'None' → logprob: -12.129129409790039
    5. 'math' → logprob: -12.629129409790039
    6. ' float' → logprob: -12.754129409790039
    7. ' math' → logprob: -12.879129409790039
    8. '1' → logprob: -13.004129409790039
    9. '   ' → logprob: -13.566629409790039
    10. '.' → logprob: -13.941629409790039

Token 253: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00016110755677800626
    2. ' ' → logprob: -9.625161170959473
    3. 'float' → logprob: -9.875161170959473
    4. 'math' → logprob: -11.375161170959473
    5. '[]' → logprob: -11.625161170959473
    6. '1' → logprob: -12.375161170959473
    7. '-' → logprob: -12.625161170959473
    8. 'None' → logprob: -12.625161170959473
    9. 'dist' → logprob: -12.750161170959473
    10. '.' → logprob: -13.500161170959473

Token 254: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0033681849017739296
    2. '
' → logprob: -5.753368377685547
    3. '.
' → logprob: -10.378368377685547
    4. '<|end|>' → logprob: -10.378368377685547
    5. '   ' → logprob: -10.753368377685547
    6. '
' → logprob: -11.128368377685547
    7. '    
' → logprob: -11.128368377685547
    8. 'def' → logprob: -11.253368377685547
    9. '0' → logprob: -11.378368377685547
    10. '  
' → logprob: -11.503368377685547

Token 255: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018268341955263168
    2. 'def' → logprob: -9.12518310546875
    3. 'while' → logprob: -10.62518310546875
    4. ' ' → logprob: -11.25018310546875
    5. '
' → logprob: -11.62518310546875
    6. 'for' → logprob: -11.75018310546875
    7. '```' → logprob: -12.37518310546875
    8. '5' → logprob: -12.50018310546875
    9. 'x' → logprob: -13.62518310546875
    10. '   ' → logprob: -14.00018310546875

Token 256: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23462624847888947
    2. '   ' → logprob: -1.859626293182373
    3. '    
' → logprob: -3.234626293182373
    4. '  
' → logprob: -5.484626293182373
    5. ' while' → logprob: -5.984626293182373
    6. ',' → logprob: -6.359626293182373
    7. '\n' → logprob: -6.859626293182373
    8. ',
' → logprob: -6.984626293182373
    9. '   
' → logprob: -7.484626293182373
    10. ' 
' → logprob: -7.734626293182373

Token 257: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10667118430137634
    2. '
' → logprob: -3.356671094894409
    3. '<|end|>' → logprob: -4.106671333312988
    4. ',' → logprob: -4.356671333312988
    5. ' while' → logprob: -4.731671333312988
    6. ')' → logprob: -4.981671333312988
    7. 'def' → logprob: -5.231671333312988
    8. '    
' → logprob: -5.856671333312988
    9. '#' → logprob: -6.481671333312988
    10. 'while' → logprob: -6.856671333312988

Token 258: ' while' (ID: 2049)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.19560742378234863
    2. 'while' (adapté à ' while') → logprob: -2.8206074237823486
    3. 'for' → logprob: -3.3206074237823486
    4. 'hits' → logprob: -3.3206074237823486
    5. 'p' → logprob: -4.3206071853637695
    6. 'position' → logprob: -5.3206071853637695
    7. 'positions' → logprob: -5.4456071853637695
    8. 'curr' → logprob: -5.5706071853637695
    9. 'current' → logprob: -6.1956071853637695
    10. 'cur' → logprob: -6.1956071853637695

Token 259: ' dist' (ID: 3601)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.11997814476490021
    2. 'True' → logprob: -2.244978189468384
    3. ' dist' → logprob: -4.994977951049805
    4. 'dist' → logprob: -8.119977951049805
    5. '(True' → logprob: -9.744977951049805
    6. ' ' → logprob: -14.494977951049805
    7. 'true' → logprob: -15.119977951049805
    8. '(dist' → logprob: -15.494977951049805
    9. ' true' → logprob: -15.744977951049805
    10. '	dist' → logprob: -15.869977951049805

Token 260: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -8.08944896562025e-05
    2. '_' → logprob: -10.250081062316895
    3. 'total' → logprob: -11.000081062316895
    4. ' <' → logprob: -11.625081062316895
    5. ' _' → logprob: -12.000081062316895
    6. '   ' → logprob: -12.625081062316895
    7. '<' → logprob: -13.500081062316895
    8. '_tot' → logprob: -13.625081062316895
    9. '(total' → logprob: -13.750081062316895
    10. '(_' → logprob: -13.875081062316895

Token 261: ' +' (ID: 659)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.008895701728761196
    2. '<' → logprob: -4.7588958740234375
    3. ' +' → logprob: -8.883895874023438
    4. '+' → logprob: -10.008895874023438
    5. ' <=' → logprob: -10.008895874023438
    6. ' ' → logprob: -10.258895874023438
    7. ' <
' → logprob: -11.633895874023438
    8. '<R' → logprob: -12.508895874023438
    9. '[' → logprob: -13.508895874023438
    10. '<E' → logprob: -13.758895874023438

Token 262: ' EPS' (ID: 66979)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.0032412861473858356
    2. '1' → logprob: -6.628241062164307
    3. ' EPS' → logprob: -6.628241062164307
    4. '10' → logprob: -8.378241539001465
    5. '0' → logprob: -8.878241539001465
    6. '100' → logprob: -9.503241539001465
    7. 'eps' → logprob: -10.253241539001465
    8. 'R' → logprob: -10.503241539001465
    9. 'norm' → logprob: -10.878241539001465
    10. 'E' → logprob: -11.003241539001465

Token 263: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4288705587387085
    2. '<' → logprob: -1.0538705587387085
    3. ' ' → logprob: -9.42887020111084
    4. ' <=' → logprob: -10.05387020111084
    5. '<=' → logprob: -10.67887020111084
    6. ' <
' → logprob: -11.17887020111084
    7. '<
' → logprob: -12.55387020111084
    8. '[' → logprob: -14.05387020111084
    9. ')' → logprob: -14.30387020111084
    10. '
' → logprob: -14.74137020111084

Token 264: ' D' (ID: 415)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.6720492839813232
    2. 'D' → logprob: -0.9220492839813232
    3. '1' → logprob: -3.0470492839813232
    4. '10' → logprob: -3.1720492839813232
    5. 'float' → logprob: -6.797049522399902
    6. '50' → logprob: -8.172049522399902
    7. '20' → logprob: -8.672049522399902
    8. '5' → logprob: -9.172049522399902
    9. ' ' → logprob: -9.297049522399902
    10. '2' → logprob: -9.547049522399902

Token 265: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002263494301587343
    2. ':
' → logprob: -6.62726354598999
    3. ' :' → logprob: -7.00226354598999
    4. ' :
' → logprob: -11.502263069152832
    5. ' and' → logprob: -11.627263069152832
    6. '):' → logprob: -12.377263069152832
    7. 'and' → logprob: -13.127263069152832
    8. '   ' → logprob: -14.252263069152832
    9. '>:' → logprob: -14.877263069152832
    10. '():' → logprob: -15.002263069152832

Token 266: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010548277758061886
    2. 'v' → logprob: -5.260548114776611
    3. '   ' → logprob: -5.510548114776611
    4. ' v' → logprob: -8.01054859161377
    5. 'd' → logprob: -8.76054859161377
    6. 'n' → logprob: -8.88554859161377
    7. 't' → logprob: -9.38554859161377
    8. '#' → logprob: -9.63554859161377
    9. 'a' → logprob: -10.26054859161377
    10. '    
' → logprob: -10.51054859161377

Token 267: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6914832592010498
    2. '#' (adapté à ' #') → logprob: -0.9414832592010498
    3. 'A' → logprob: -3.06648325920105
    4. '       ' → logprob: -3.56648325920105
    5. '   ' → logprob: -4.191483497619629
    6. 'd' → logprob: -5.441483497619629
    7. 'c' → logprob: -5.566483497619629
    8. 'n' → logprob: -6.566483497619629
    9. 'v' → logprob: -6.566483497619629
    10. 'dx' → logprob: -6.691483497619629

Token 268: ' if' (ID: 538)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.12784452736377716
    2. '       ' → logprob: -2.7528445720672607
    3. 't' → logprob: -3.7528445720672607
    4. 'a' → logprob: -4.252844333648682
    5. 'A' → logprob: -5.252844333648682
    6. 'r' → logprob: -5.877844333648682
    7. '   ' → logprob: -5.877844333648682
    8. 'd' → logprob: -6.627844333648682
    9. 'dx' → logprob: -6.627844333648682
    10. 'c' → logprob: -7.502844333648682

Token 269: ' projectile' (ID: 99243)
  Prédit: ' norm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' norm' → logprob: -0.79776531457901
    2. 'norm' → logprob: -1.1727652549743652
    3. 'abs' → logprob: -2.2977652549743652
    4. ' abs' → logprob: -2.9227652549743652
    5. ' True' → logprob: -3.5477652549743652
    6. ' dist' → logprob: -4.422765254974365
    7. ' V' → logprob: -4.672765254974365
    8. 'dist' → logprob: -4.922765254974365
    9. ' False' → logprob: -5.047765254974365
    10. 'True' → logprob: -5.047765254974365

Token 270: ' crosses' (ID: 95853)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.8664671182632446
    2. ' is' → logprob: -1.2414671182632446
    3. 'inside' → logprob: -2.116466999053955
    4. 's' → logprob: -3.616466999053955
    5. 'at' → logprob: -3.866466999053955
    6. ' at' → logprob: -4.116466999053955
    7. ' starts' → logprob: -4.116466999053955
    8. 'starts' → logprob: -4.241466999053955
    9. 'outside' → logprob: -4.366466999053955
    10. 'hits' → logprob: -4.741466999053955

Token 271: ' origin' (ID: 12839)
  Prédit: ' circle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' circle' → logprob: -1.026363492012024
    2. 'circle' → logprob: -1.526363492012024
    3. 'y' → logprob: -2.1513633728027344
    4. 'the' → logprob: -2.2763633728027344
    5. ' the' → logprob: -2.2763633728027344
    6. 'x' → logprob: -3.0263633728027344
    7. ' y' → logprob: -3.5263633728027344
    8. '(' → logprob: -4.651363372802734
    9. ' x' → logprob: -5.401363372802734
    10. ' (' → logprob: -5.776363372802734

Token 272: ' =>' (ID: 871)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10267488658428192
    2. ',' → logprob: -2.602674961090088
    3. ':' → logprob: -4.727674961090088
    4. ' if' → logprob: -4.977674961090088
    5. ' and' → logprob: -5.977674961090088
    6. ' (' → logprob: -6.102674961090088
    7. ':
' → logprob: -7.477674961090088
    8. ' or' → logprob: -7.977674961090088
    9. '=' → logprob: -8.35267448425293
    10. '(' → logprob: -8.47767448425293

Token 273: ' hits' (ID: 21571)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.9286134243011475
    2. 'return' → logprob: -1.1786134243011475
    3. ' break' → logprob: -1.6786134243011475
    4. 'break' → logprob: -2.5536134243011475
    5. '#' → logprob: -4.428613662719727
    6. '       ' → logprob: -4.928613662719727
    7. ' True' → logprob: -4.928613662719727
    8. '           ' → logprob: -6.553613662719727
    9. ' #' → logprob: -6.678613662719727
    10. 'True' → logprob: -7.053613662719727

Token 274: ' lab' (ID: 9887)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3498882055282593
    2. ' if' → logprob: -2.474888324737549
    3. ' break' → logprob: -2.974888324737549
    4. ' (' → logprob: -2.974888324737549
    5. '(' → logprob: -3.599888324737549
    6. 'if' → logprob: -4.099888324737549
    7. 'break' → logprob: -4.099888324737549
    8. '           ' → logprob: -4.224888324737549
    9. '0' → logprob: -4.974888324737549
    10. '=' → logprob: -5.474888324737549

Token 275: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0038016228936612606
    2. '        
' → logprob: -6.7538018226623535
    3. ' if' → logprob: -7.1288018226623535
    4. ',' → logprob: -8.128801345825195
    5. 'if' → logprob: -8.378801345825195
    6. '<|end|>' → logprob: -8.628801345825195
    7. '           ' → logprob: -8.753801345825195
    8. ' (' → logprob: -8.878801345825195
    9. ' point' → logprob: -9.253801345825195
    10. 'point' → logprob: -9.253801345825195

Token 276: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015455723041668534
    2. 'v' → logprob: -7.126545429229736
    3. '        
' → logprob: -8.501545906066895
    4. ' v' → logprob: -9.251545906066895
    5. 'n' → logprob: -9.626545906066895
    6. '#' → logprob: -9.751545906066895
    7. ',' → logprob: -9.751545906066895
    8. ')' → logprob: -11.001545906066895
    9. 'pos' → logprob: -11.251545906066895
    10. '   ' → logprob: -11.376545906066895

Token 277: ' #' (ID: 1069)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -2.065369129180908
    2. 'if' → logprob: -2.065369129180908
    3. 'a' → logprob: -2.190369129180908
    4. '   ' → logprob: -2.190369129180908
    5. 'to' → logprob: -2.190369129180908
    6. 'oc' → logprob: -2.440369129180908
    7. 't' → logprob: -2.440369129180908
    8. 'vec' → logprob: -2.815369129180908
    9. 'd' → logprob: -3.065369129180908
    10. '#' (adapté à ' #') → logprob: -3.940369129180908

Token 278: ' try' (ID: 2075)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.7085596323013306
    2. 'oc' → logprob: -1.8335596323013306
    3. 'vec' → logprob: -2.083559513092041
    4. 'if' → logprob: -2.333559513092041
    5. 'to' → logprob: -2.333559513092041
    6. '   ' → logprob: -2.708559513092041
    7. 'd' → logprob: -2.708559513092041
    8. '#' → logprob: -2.708559513092041
    9. 'v' → logprob: -2.958559513092041
    10. 'OC' → logprob: -4.708559513092041

Token 279: ' to' (ID: 316)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21072861552238464
    2. ':
' → logprob: -2.460728645324707
    3. '{' → logprob: -3.085728645324707
    4. '{
' → logprob: -4.085728645324707
    5. ' to' → logprob: -4.085728645324707
    6. 'to' → logprob: -4.085728645324707
    7. '   ' → logprob: -5.210728645324707
    8. '    ' → logprob: -6.960728645324707
    9. '       ' → logprob: -7.460728645324707
    10. ' {' → logprob: -7.835728645324707

Token 280: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.4216395616531372
    2. ' find' → logprob: -1.1716395616531372
    3. 'inter' → logprob: -4.796639442443848
    4. 'compute' → logprob: -5.171639442443848
    5. 'solve' → logprob: -5.421639442443848
    6. 'break' → logprob: -5.546639442443848
    7. ' intersect' → logprob: -5.921639442443848
    8. ' compute' → logprob: -5.921639442443848
    9. 'hit' → logprob: -7.171639442443848
    10. ')' → logprob: -7.296639442443848

Token 281: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.039052825421094894
    2. ' t' → logprob: -3.289052724838257
    3. '   ' → logprob: -8.289052963256836
    4. 'a' → logprob: -9.164052963256836
    5. 's' → logprob: -9.164052963256836
    6. ' a' → logprob: -9.414052963256836
    7. ' ' → logprob: -9.539052963256836
    8. ' the' → logprob: -9.789052963256836
    9. ' intersection' → logprob: -9.914052963256836
    10. 'the' → logprob: -10.164052963256836

Token 282: ' >' (ID: 1424)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 283: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03454137220978737
    2. ' ' → logprob: -3.409541368484497
    3. 'EPS' → logprob: -7.409541606903076
    4. ' EPS' → logprob: -8.284541130065918
    5. '1' → logprob: -10.409541130065918
    6. '   ' → logprob: -12.784541130065918
    7. '=' → logprob: -13.409541130065918
    8. '  ' → logprob: -14.534541130065918
    9. 'eps' → logprob: -14.659541130065918
    10. 'E' → logprob: -15.534541130065918

Token 284: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018305277451872826
    2. 'EPS' → logprob: -4.01830530166626
    3. ' ' → logprob: -9.393304824829102
    4. '1' → logprob: -10.018304824829102
    5. ' EPS' → logprob: -10.893304824829102
    6. 'eps' → logprob: -12.643304824829102
    7. 'E' → logprob: -13.018304824829102
    8. '   ' → logprob: -13.768304824829102
    9. 'EP' → logprob: -14.518304824829102
    10. '=' → logprob: -14.518304824829102

Token 285: ' such' (ID: 2238)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7124566435813904
    2. '<|end|>' → logprob: -0.8374566435813904
    3. ' for' → logprob: -3.462456703186035
    4. ',' → logprob: -4.087456703186035
    5. ' that' → logprob: -5.212456703186035
    6. '<|end|>' → logprob: -5.462456703186035
    7. ' to' → logprob: -5.587456703186035
    8. ' with' → logprob: -6.087456703186035
    9. '        ' → logprob: -6.462456703186035
    10. ' in' → logprob: -6.462456703186035

Token 286: ' that' (ID: 484)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.15390747785568237
    2. ' that' → logprob: -2.653907537460327
    3. 'hat' → logprob: -2.778907537460327
    4. 'at' → logprob: -4.653907299041748
    5. '       ' → logprob: -8.153907775878906
    6. 'for' → logprob: -9.653907775878906
    7. 't' → logprob: -10.028907775878906
    8. '   ' → logprob: -10.153907775878906
    9. '_that' → logprob: -10.153907775878906
    10. ',' → logprob: -10.653907775878906

Token 287: ' P' (ID: 398)
  Prédit: ' dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dot' → logprob: -1.0805658102035522
    2. 'dot' → logprob: -1.3305658102035522
    3. '(px' → logprob: -2.330565929412842
    4. ' px' → logprob: -2.580565929412842
    5. ' (' → logprob: -3.080565929412842
    6. '(dot' → logprob: -3.705565929412842
    7. 'sub' → logprob: -3.830565929412842
    8. '(P' → logprob: -4.205565929412842
    9. 'dist' → logprob: -4.455565929412842
    10. 'norm' → logprob: -4.455565929412842

Token 288: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6344443559646606
    2. '[' → logprob: -1.5094443559646606
    3. ' +' → logprob: -1.5094443559646606
    4. 'x' → logprob: -5.384444236755371
    5. '+t' → logprob: -5.759444236755371
    6. '=' → logprob: -6.134444236755371
    7. '.x' → logprob: -6.384444236755371
    8. '+x' → logprob: -6.634444236755371
    9. 't' → logprob: -7.009444236755371
    10. ' ' → logprob: -7.009444236755371

Token 289: ' V' (ID: 631)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.014218159019947052
    2. ' mul' → logprob: -4.264218330383301
    3. '   ' → logprob: -11.0142183303833
    4. '(' → logprob: -11.1392183303833
    5. '    ' → logprob: -12.8892183303833
    6. ' ' → logprob: -13.1392183303833
    7. ' (' → logprob: -13.1392183303833
    8. 'm' → logprob: -13.2642183303833
    9. '_mul' → logprob: -13.2642183303833
    10. '(m' → logprob: -13.2642183303833

Token 290: '*t' (ID: 45600)
  Prédit: '*t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*t' → logprob: -0.057690709829330444
    2. '*' → logprob: -3.4326906204223633
    3. 't' → logprob: -4.182690620422363
    4. ' *' → logprob: -5.182690620422363
    5. '=' → logprob: -6.682690620422363
    6. ' =' → logprob: -6.807690620422363
    7. '*=' → logprob: -8.682690620422363
    8. ' t' → logprob: -9.432690620422363
    9. '*(' → logprob: -9.932690620422363
    10. '*m' → logprob: -10.682690620422363

Token 291: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7096189856529236
    2. ' =' → logprob: -1.5846190452575684
    3. ' ==' → logprob: -1.8346190452575684
    4. '==' → logprob: -2.9596190452575684
    5. '[' → logprob: -3.0846190452575684
    6. ')' → logprob: -3.4596190452575684
    7. ' is' → logprob: -6.084619045257568
    8. ')==' → logprob: -6.084619045257568
    9. '=(' → logprob: -6.334619045257568
    10. ' has' → logprob: -6.959619045257568

Token 292: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007037336472421885
    2. ' (' → logprob: -7.375703811645508
    3. '0' → logprob: -10.625703811645508
    4. 'mul' → logprob: -10.750703811645508
    5. '(-' → logprob: -11.250703811645508
    6. 'n' → logprob: -12.500703811645508
    7. '(n' → logprob: -12.750703811645508
    8. '(m' → logprob: -13.250703811645508
    9. ' ' → logprob: -14.000703811645508
    10. 'P' → logprob: -14.000703811645508

Token 293: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003693013568408787
    2. '(' → logprob: -8.00036907196045
    3. ' ' → logprob: -10.87536907196045
    4. ')' → logprob: -11.37536907196045
    5. ',' → logprob: -13.12536907196045
    6. ' (' → logprob: -13.87536907196045
    7. '1' → logprob: -16.125370025634766
    8. '   ' → logprob: -16.125370025634766
    9. 'x' → logprob: -16.687870025634766
    10. '  ' → logprob: -17.187870025634766

Token 294: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47489407658576965
    2. ')' → logprob: -0.9748940467834473
    3. ' )' → logprob: -8.224894523620605
    4. ',)' → logprob: -8.224894523620605
    5. '),' → logprob: -9.099894523620605
    6. ')*' → logprob: -10.349894523620605
    7. ' ,' → logprob: -10.599894523620605
    8. '0' → logprob: -10.724894523620605
    9. '[' → logprob: -10.849894523620605
    10. '<|end|>' → logprob: -10.849894523620605

Token 295: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002186426194384694
    2. ' ' → logprob: -6.127186298370361
    3. ')' → logprob: -13.75218677520752
    4. '
' → logprob: -15.87718677520752
    5. ',' → logprob: -16.877185821533203
    6. '   ' → logprob: -17.502185821533203
    7. '  ' → logprob: -17.877185821533203
    8. ' ' → logprob: -17.877185821533203
    9. ' )' → logprob: -19.502185821533203
    10. '    ' → logprob: -19.502185821533203

Token 296: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025536655448377132
    2. ')
' → logprob: -6.002553462982178
    3. '       ' → logprob: -10.002553939819336
    4. ')

' → logprob: -11.752553939819336
    5. ' )' → logprob: -12.002553939819336
    6. '   ' → logprob: -12.002553939819336
    7. '),' → logprob: -12.627553939819336
    8. ')
' → logprob: -13.127553939819336
    9. '):
' → logprob: -13.752553939819336
    10. '):' → logprob: -13.752553939819336

Token 297: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00034595211036503315
    2. '<|end|>' → logprob: -8.375346183776855
    3. '        
' → logprob: -10.125346183776855
    4. ',' → logprob: -10.375346183776855
    5. ')' → logprob: -11.625346183776855
    6. 'import' → logprob: -11.875346183776855
    7. '<|end|>' → logprob: -12.125346183776855
    8. '	' → logprob: -12.375346183776855
    9. '
' → logprob: -12.500346183776855
    10. '      ' → logprob: -13.125346183776855

Token 298: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009233224205672741
    2. ' t' → logprob: -6.509232997894287
    3. ')' → logprob: -6.634232997894287
    4. ' x' → logprob: -6.759232997894287
    5. '<|end|>' → logprob: -7.134232997894287
    6. '        
' → logprob: -7.259232997894287
    7. '        ' → logprob: -7.509232997894287
    8. 'x' → logprob: -7.634232997894287
    9. '\x' → logprob: -8.009233474731445
    10. ' ' → logprob: -8.384233474731445

Token 299: ' =>' (ID: 871)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.30683058500289917
    2. 'A' → logprob: -2.306830644607544
    3. 't' → logprob: -3.181830644607544
    4. '       ' → logprob: -3.181830644607544
    5. ' a' → logprob: -3.306830644607544
    6. '#' → logprob: -3.681830644607544
    7. '   ' → logprob: -5.306830406188965
    8. ' t' → logprob: -5.931830406188965
    9. 'c' → logprob: -6.056830406188965
    10. 'if' → logprob: -6.306830406188965

Token 300: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7238748669624329
    2. ' t' → logprob: -1.098874807357788
    3. ' -' → logprob: -2.598874807357788
    4. '-' → logprob: -3.223874807357788
    5. '-P' → logprob: -3.598874807357788
    6. '(-' → logprob: -4.848875045776367
    7. ' P' → logprob: -5.223875045776367
    8. '-dot' → logprob: -5.223875045776367
    9. 'P' → logprob: -5.473875045776367
    10. '-v' → logprob: -6.098875045776367

Token 301: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692968547344208
    2. ' =' → logprob: -2.126929759979248
    3. '=-' → logprob: -14.00192928314209
    4. '=(-' → logprob: -15.87692928314209
    5. '=}' → logprob: -16.001930236816406
    6. 's' → logprob: -16.251930236816406
    7. '*=' → logprob: -16.501930236816406
    8. ',' → logprob: -16.751930236816406
    9. '=(' → logprob: -17.001930236816406
    10. ')' → logprob: -17.251930236816406

Token 302: ' -' (ID: 533)
  Prédit: '-dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-dist' → logprob: -1.1367263793945312
    2. '-dot' → logprob: -1.3867263793945312
    3. '-m' → logprob: -1.8867263793945312
    4. '-' → logprob: -2.1367263793945312
    5. ' -' → logprob: -2.7617263793945312
    6. '-(' → logprob: -2.8867263793945312
    7. '-p' → logprob: -4.386726379394531
    8. '-P' → logprob: -4.761726379394531
    9. '-n' → logprob: -5.011726379394531
    10. '-distance' → logprob: -5.386726379394531

Token 303: 'P' (ID: 47)
  Prédit: '(px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(px' → logprob: -0.8975673913955688
    2. '(P' → logprob: -1.1475673913955688
    3. 'P' → logprob: -1.7725673913955688
    4. 'px' → logprob: -3.3975672721862793
    5. '(dot' → logprob: -3.6475672721862793
    6. 'dot' → logprob: -3.6475672721862793
    7. ' (' → logprob: -4.772567272186279
    8. 'py' → logprob: -5.772567272186279
    9. '(py' → logprob: -5.897567272186279
    10. '(' → logprob: -6.897567272186279

Token 304: '/V' (ID: 41590)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04519353806972504
    2. '(' → logprob: -4.045193672180176
    3. ' /' → logprob: -5.170193672180176
    4. ' (' → logprob: -5.670193672180176
    5. '0' → logprob: -5.920193672180176
    6. '.' → logprob: -5.920193672180176
    7. 'dot' → logprob: -6.170193672180176
    8. ' [' → logprob: -6.295193672180176
    9. ' dot' → logprob: -6.795193672180176
    10. '/' → logprob: -6.795193672180176

Token 305: ' component' (ID: 6392)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3373207449913025
    2. '   ' → logprob: -1.9623208045959473
    3. '       ' → logprob: -2.7123208045959473
    4. 'x' → logprob: -2.8373208045959473
    5. '(' → logprob: -5.462320804595947
    6. ',' → logprob: -5.587320804595947
    7. ' if' → logprob: -5.962320804595947
    8. ' ' → logprob: -6.087320804595947
    9. '0' → logprob: -6.462320804595947
    10. '  ' → logprob: -7.087320804595947

Token 306: 'wise' (ID: 7480)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0360804796218872
    2. '[' → logprob: -1.2860804796218872
    3. '       ' → logprob: -2.0360803604125977
    4. 's' → logprob: -3.1610803604125977
    5. '   ' → logprob: -3.1610803604125977
    6. ' if' → logprob: -3.2860803604125977
    7. '(' → logprob: -3.7860803604125977
    8. ',' → logprob: -3.9110803604125977
    9. ' (' → logprob: -4.161080360412598
    10. '0' → logprob: -4.536080360412598

Token 307: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004211721010506153
    2. ',' → logprob: -6.629211902618408
    3. 'x' → logprob: -7.004211902618408
    4. '[' → logprob: -7.129211902618408
    5. ' (' → logprob: -9.00421142578125
    6. '        ' → logprob: -9.00421142578125
    7. 's' → logprob: -9.37921142578125
    8. 'import' → logprob: -9.50421142578125
    9. ' if' → logprob: -9.62921142578125
    10. '   ' → logprob: -9.75421142578125

Token 308: 'must' (ID: 46036)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.968694806098938
    2. '1' → logprob: -1.968694806098938
    3. 'x' → logprob: -2.2186946868896484
    4. ' for' → logprob: -2.2186946868896484
    5. 'v' → logprob: -2.8436946868896484
    6. '0' → logprob: -3.0936946868896484
    7. ' (' → logprob: -3.3436946868896484
    8. '   ' → logprob: -3.4686946868896484
    9. '(' → logprob: -3.5936946868896484
    10. ' ' → logprob: -3.5936946868896484

Token 309: ' be' (ID: 413)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.08426753431558609
    2. ' be' → logprob: -2.7092676162719727
    3. '[' → logprob: -5.334267616271973
    4. 'be' → logprob: -5.709267616271973
    5. ' >' → logprob: -6.584267616271973
    6. ')>' → logprob: -6.584267616271973
    7. 'import' → logprob: -6.709267616271973
    8. ')' → logprob: -7.459267616271973
    9. 'def' → logprob: -7.584267616271973
    10. '=' → logprob: -7.959267616271973

Token 310: ' same' (ID: 2684)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.8666692972183228
    2. 'None' → logprob: -1.7416692972183228
    3. 'all' → logprob: -2.366669178009033
    4. 'not' → logprob: -2.616669178009033
    5. 'vx' → logprob: -3.491669178009033
    6. ' True' → logprob: -3.741669178009033
    7. '[' → logprob: -4.241669178009033
    8. '(' → logprob: -4.366669178009033
    9. 'P' → logprob: -4.616669178009033
    10. 'v' → logprob: -4.741669178009033

Token 311: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.528297483921051
    2. ' and' → logprob: -2.5282974243164062
    3. ' for' → logprob: -2.7782974243164062
    4. ' /' → logprob: -3.0282974243164062
    5. '[' → logprob: -3.2782974243164062
    6. 't' → logprob: -3.9032974243164062
    7. 'x' → logprob: -3.9032974243164062
    8. 'and' → logprob: -4.028297424316406
    9. ' time' → logprob: -4.403297424316406
    10. '0' → logprob: -4.778297424316406

Token 312: ' x' (ID: 1215)
  Prédit: 'both'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'both' → logprob: -0.4145393669605255
    2. 'x' → logprob: -1.7895393371582031
    3. ' both' → logprob: -1.7895393371582031
    4. ' x' → logprob: -5.914539337158203
    5. 'vx' → logprob: -7.039539337158203
    6. 'v' → logprob: -7.414539337158203
    7. ' vx' → logprob: -7.664539337158203
    8. 'all' → logprob: -8.664539337158203
    9. '(' → logprob: -9.164539337158203
    10. 'V' → logprob: -9.164539337158203

Token 313: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3937317728996277
    2. 'and' → logprob: -1.1437318325042725
    3. ')' → logprob: -6.018731594085693
    4. ' or' → logprob: -6.393731594085693
    5. ',' → logprob: -6.768731594085693
    6. 'or' → logprob: -6.893731594085693
    7. 'component' → logprob: -8.268732070922852
    8. '),' → logprob: -9.893732070922852
    9. 'if' → logprob: -10.268732070922852
    10. '   ' → logprob: -10.268732070922852

Token 314: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.02975292131304741
    2. ' y' → logprob: -3.5297529697418213
    3. ' ' → logprob: -13.404752731323242
    4. ',y' → logprob: -15.529752731323242
    5. '   ' → logprob: -15.779752731323242
    6. '1' → logprob: -16.029752731323242
    7. 'yv' → logprob: -16.904752731323242
    8. '0' → logprob: -17.029752731323242
    9. '    ' → logprob: -17.029752731323242
    10. ')' → logprob: -17.154752731323242

Token 315: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11584886163473129
    2. '       ' → logprob: -2.9908487796783447
    3. ' if' → logprob: -3.4908487796783447
    4. ',' → logprob: -4.615849018096924
    5. ')
' → logprob: -4.740849018096924
    6. '   ' → logprob: -5.740849018096924
    7. ' and' → logprob: -6.115849018096924
    8. ' or' → logprob: -6.615849018096924
    9. '[' → logprob: -7.490849018096924
    10. 'if' → logprob: -7.615849018096924

Token 316: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017386233957950026
    2. '        
' → logprob: -9.375173568725586
    3. ',' → logprob: -10.375173568725586
    4. '
' → logprob: -11.000173568725586
    5. '      ' → logprob: -12.125173568725586
    6. ')' → logprob: -12.500173568725586
    7. '        ' → logprob: -12.500173568725586
    8. '   ' → logprob: -12.750173568725586
    9. '<|end|>' → logprob: -12.750173568725586
    10. ':' → logprob: -13.125173568725586

Token 317: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35098063945770264
    2. 'x' → logprob: -2.475980758666992
    3. 'if' → logprob: -2.475980758666992
    4. ' if' → logprob: -2.725980758666992
    5. ' x' → logprob: -3.725980758666992
    6. 't' → logprob: -3.975980758666992
    7. ' t' → logprob: -4.850980758666992
    8. 'dx' → logprob: -6.225980758666992
    9. 'tx' → logprob: -6.600980758666992
    10. ' denom' → logprob: -6.850980758666992

Token 318: ' check' (ID: 2371)
  Prédit: 'tx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tx' → logprob: -0.41427916288375854
    2. 'if' → logprob: -1.7892792224884033
    3. 't' → logprob: -2.0392792224884033
    4. 'dx' → logprob: -4.164278984069824
    5. ' tx' → logprob: -4.914278984069824
    6. 'den' → logprob: -5.414278984069824
    7. '       ' → logprob: -5.539278984069824
    8. ' if' → logprob: -5.789278984069824
    9. ' t' → logprob: -7.039278984069824
    10. '#' → logprob: -7.039278984069824

Token 319: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6129173636436462
    2. 'if' → logprob: -0.8629173636436462
    3. ' px' → logprob: -4.487917423248291
    4. '       ' → logprob: -4.862917423248291
    5. ' vx' → logprob: -4.862917423248291
    6. 'x' → logprob: -6.362917423248291
    7. 'abs' → logprob: -6.362917423248291
    8. ' abs' → logprob: -6.862917423248291
    9. '   ' → logprob: -6.862917423248291
    10. 'vx' → logprob: -6.987917423248291

Token 320: ' origin' (ID: 12839)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.8100411891937256
    2. ' abs' → logprob: -0.8100411891937256
    3. '(abs' → logprob: -3.0600411891937256
    4. 'V' → logprob: -4.310041427612305
    5. '(V' → logprob: -4.560041427612305
    6. ' (' → logprob: -4.685041427612305
    7. ' vx' → logprob: -4.810041427612305
    8. ' V' → logprob: -5.185041427612305
    9. '(P' → logprob: -5.435041427612305
    10. 'vx' → logprob: -5.560041427612305

Token 321: ' is' (ID: 382)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.3156230449676514
    2. '[' → logprob: -1.4406230449676514
    3. ' is' → logprob: -1.4406230449676514
    4. 'in' → logprob: -2.3156230449676514
    5. ' not' → logprob: -2.4406230449676514
    6. 'is' → logprob: -4.0656232833862305
    7. ':' → logprob: -4.9406232833862305
    8. ')' → logprob: -4.9406232833862305
    9. '==' → logprob: -5.0656232833862305
    10. ',' → logprob: -5.3156232833862305

Token 322: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.18617168068885803
    2. ' on' → logprob: -2.561171770095825
    3. 'sub' → logprob: -3.061171770095825
    4. 'in' → logprob: -4.936171531677246
    5. 'between' → logprob: -5.311171531677246
    6. '(sub' → logprob: -5.436171531677246
    7. '(' → logprob: -5.686171531677246
    8. ' in' → logprob: -5.811171531677246
    9. 'within' → logprob: -5.936171531677246
    10. ' col' → logprob: -6.061171531677246

Token 323: ' path' (ID: 3104)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.0320922136306763
    2. 'the' → logprob: -1.0320922136306763
    3. ' line' → logprob: -1.7820922136306763
    4. 'line' → logprob: -2.5320920944213867
    5. 'mul' → logprob: -3.6570920944213867
    6. '   ' → logprob: -6.032092094421387
    7. 'multip' → logprob: -6.032092094421387
    8. 'sub' → logprob: -6.407092094421387
    9. 'V' → logprob: -6.657092094421387
    10. ' mul' → logprob: -6.782092094421387

Token 324: ' segment' (ID: 14806)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001963009126484394
    2. '        ' → logprob: -8.251962661743164
    3. '        
' → logprob: -8.251962661743164
    4. ' if' → logprob: -8.626962661743164
    5. ' x' → logprob: -8.876962661743164
    6. ':' → logprob: -8.876962661743164
    7. ',' → logprob: -9.001962661743164
    8. '
' → logprob: -9.251962661743164
    9. 'x' → logprob: -9.376962661743164
    10. ' (' → logprob: -9.501962661743164

Token 325: ' before' (ID: 2254)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004545350559055805
    2. ' if' → logprob: -6.754545211791992
    3. ' x' → logprob: -6.754545211791992
    4. ':' → logprob: -7.754545211791992
    5. '        
' → logprob: -7.754545211791992
    6. ',' → logprob: -7.879545211791992
    7. 'x' → logprob: -8.004545211791992
    8. '        ' → logprob: -9.254545211791992
    9. '<|end|>' → logprob: -9.754545211791992
    10. '   ' → logprob: -9.879545211791992

Token 326: ' next' (ID: 2613)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -1.5006701946258545
    2. ' continuing' → logprob: -2.0006701946258545
    3. 't' → logprob: -2.3756701946258545
    4. 'V' → logprob: -2.7506701946258545
    5. ' the' → logprob: -3.0006701946258545
    6. ' moving' → logprob: -3.1256701946258545
    7. 'next' → logprob: -3.5006701946258545
    8. 'continu' → logprob: -3.5006701946258545
    9. 'the' → logprob: -3.6256701946258545
    10. ' V' → logprob: -3.7506701946258545

Token 327: ' reflection' (ID: 39755)
  Prédit: 'collision'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collision' → logprob: -1.9737533330917358
    2. 'circle' → logprob: -2.0987534523010254
    3. 'reflection' → logprob: -2.0987534523010254
    4. ' circle' → logprob: -2.3487534523010254
    5. 'hit' → logprob: -2.8487534523010254
    6. 'ob' → logprob: -2.8487534523010254
    7. ' wall' → logprob: -2.9737534523010254
    8. ' reflection' → logprob: -2.9737534523010254
    9. 'bounce' → logprob: -3.2237534523010254
    10. 'wall' → logprob: -3.2237534523010254

Token 328: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012083302717655897
    2. '        
' → logprob: -7.376208305358887
    3. '   ' → logprob: -8.501208305358887
    4. ',' → logprob: -9.376208305358887
    5. '        ' → logprob: -9.501208305358887
    6. '           ' → logprob: -10.501208305358887
    7. '      ' → logprob: -11.126208305358887
    8. '#' → logprob: -11.126208305358887
    9. '    ' → logprob: -11.251208305358887
    10. ':' → logprob: -11.626208305358887

Token 329: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011288084089756012
    2. '   ' → logprob: -5.511288166046143
    3. ')' → logprob: -6.261288166046143
    4. ':' → logprob: -6.886288166046143
    5. '(' → logprob: -7.136288166046143
    6. ',' → logprob: -7.386288166046143
    7. 'x' → logprob: -7.761288166046143
    8. '=' → logprob: -8.511287689208984
    9. '        
' → logprob: -8.636287689208984
    10. ' ' → logprob: -8.761287689208984

Token 330: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13658621907234192
    2. ' ' → logprob: -3.5115861892700195
    3. ' 
' → logprob: -3.8865861892700195
    4. '        ' → logprob: -4.5115861892700195
    5. '\n' → logprob: -4.5115861892700195
    6. '        
' → logprob: -5.1365861892700195
    7. '<|end|>' → logprob: -5.3865861892700195
    8. '\' → logprob: -5.5115861892700195
    9. '\t' → logprob: -5.6365861892700195
    10. 't' → logprob: -5.7615861892700195

Token 331: ' first' (ID: 1577)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.5045799016952515
    2. 'if' → logprob: -2.004580020904541
    3. 'dx' → logprob: -2.254580020904541
    4. '       ' → logprob: -2.254580020904541
    5. 'tx' → logprob: -2.754580020904541
    6. ' denom' → logprob: -2.879580020904541
    7. 'vx' → logprob: -3.129580020904541
    8. ' if' → logprob: -3.129580020904541
    9. '   ' → logprob: -3.379580020904541
    10. ' vx' → logprob: -3.504580020904541

Token 332: ' find' (ID: 1646)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12284843623638153
    2. 't' → logprob: -2.9978485107421875
    3. '   ' → logprob: -3.9978485107421875
    4. ',
' → logprob: -5.1228485107421875
    5. ' t' → logprob: -5.2478485107421875
    6. 'v' → logprob: -5.3728485107421875
    7. '#' → logprob: -5.3728485107421875
    8. '
' → logprob: -6.2478485107421875
    9. ' find' → logprob: -6.2478485107421875
    10. 'vx' → logprob: -6.2478485107421875

Token 333: ' intersection' (ID: 42002)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.17028234899044037
    2. ' t' → logprob: -2.0452823638916016
    3. 'a' → logprob: -4.170282363891602
    4. 'A' → logprob: -4.795282363891602
    5. ' a' → logprob: -6.420282363891602
    6. ' A' → logprob: -7.045282363891602
    7. ' the' → logprob: -8.795282363891602
    8. '   ' → logprob: -8.920282363891602
    9. ' discrimin' → logprob: -8.920282363891602
    10. 'quadr' → logprob: -9.295282363891602

Token 334: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.9759936332702637
    2. 's' → logprob: -1.2259936332702637
    3. 'with' → logprob: -1.9759936332702637
    4. '   ' → logprob: -2.2259936332702637
    5. '(s' → logprob: -3.2259936332702637
    6. 'a' → logprob: -4.600993633270264
    7. ',' → logprob: -5.225993633270264
    8. ' =' → logprob: -5.600993633270264
    9. 'A' → logprob: -5.600993633270264
    10. '(' → logprob: -5.975993633270264

Token 335: ' circle' (ID: 22005)
  Prédit: ' circle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' circle' → logprob: -1.2013273239135742
    2. '(' → logprob: -1.3263273239135742
    3. 'circle' → logprob: -1.7013273239135742
    4. 'x' → logprob: -2.576327323913574
    5. 'the' → logprob: -2.951327323913574
    6. ' the' → logprob: -3.326327323913574
    7. 'n' → logprob: -3.451327323913574
    8. ' (' → logprob: -3.701327323913574
    9. ' x' → logprob: -5.576327323913574
    10. 'R' → logprob: -5.826327323913574

Token 336: ' x' (ID: 1215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5654874444007874
    2. '=' → logprob: -2.3154873847961426
    3. '(s' → logprob: -2.9404873847961426
    4. 's' → logprob: -3.0654873847961426
    5. ':' → logprob: -3.3154873847961426
    6. '(' → logprob: -3.4404873847961426
    7. '(cx' → logprob: -3.6904873847961426
    8. ' =' → logprob: -4.065487384796143
    9. 'R' → logprob: -4.190487384796143
    10. 'def' → logprob: -4.190487384796143

Token 337: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.008182968012988567
    2. '=' → logprob: -5.133183002471924
    3. '2' → logprob: -6.758183002471924
    4. ' =' → logprob: -7.633183002471924
    5. '0' → logprob: -8.883182525634766
    6. '*x' → logprob: -9.133182525634766
    7. '*' → logprob: -9.758182525634766
    8. '²' → logprob: -10.008182525634766
    9. '
' → logprob: -10.258182525634766
    10. '[' → logprob: -10.508182525634766

Token 338: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00015312091272789985
    2. '**' → logprob: -9.375153541564941
    3. ' ' → logprob: -10.750153541564941
    4. '
' → logprob: -10.750153541564941
    5. '```' → logprob: -12.250153541564941
    6. '=' → logprob: -12.750153541564941
    7. '0' → logprob: -12.875153541564941
    8. '[' → logprob: -12.875153541564941
    9. 'x' → logprob: -13.250153541564941
    10. '(' → logprob: -13.375153541564941

Token 339: '+y' (ID: 102753)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03444025292992592
    2. ' +' → logprob: -3.409440279006958
    3. '+y' → logprob: -7.159440040588379
    4. '+
' → logprob: -12.034440040588379
    5. '+x' → logprob: -13.034440040588379
    6. '   ' → logprob: -13.159440040588379
    7. '```' → logprob: -13.284440040588379
    8. '()+' → logprob: -13.659440040588379
    9. '+b' → logprob: -14.284440040588379
    10. '2' → logprob: -14.659440040588379

Token 340: '^' (ID: 61)
  Prédit: '^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.35704439878463745
    2. '2' → logprob: -1.2320444583892822
    3. '**' → logprob: -5.357044219970703
    4. '²' → logprob: -6.357044219970703
    5. '_^' → logprob: -6.732044219970703
    6. '```' → logprob: -8.107044219970703
    7. 's' → logprob: -8.857044219970703
    8. '_' → logprob: -9.107044219970703
    9. '*' → logprob: -9.107044219970703
    10. ' ' → logprob: -9.607044219970703

Token 341: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.56102097814437e-05
    2. ' ' → logprob: -11.125045776367188
    3. 'x' → logprob: -11.375045776367188
    4. '=' → logprob: -11.875045776367188
    5. '+' → logprob: -12.000045776367188
    6. '
' → logprob: -13.500045776367188
    7. '```' → logprob: -14.250045776367188
    8. '**' → logprob: -14.500045776367188
    9. 'y' → logprob: -15.062545776367188
    10. ',' → logprob: -15.062545776367188

Token 342: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0195808410644531
    2. ' -' → logprob: -1.0195808410644531
    3. '=' → logprob: -1.6445808410644531
    4. '-' → logprob: -3.269580841064453
    5. '   ' → logprob: -3.894580841064453
    6. ' +' → logprob: -4.394580841064453
    7. '0' → logprob: -6.269580841064453
    8. '+' → logprob: -6.394580841064453
    9. 'def' → logprob: -6.519580841064453
    10. ' ' → logprob: -6.519580841064453

Token 343: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.06431329250335693
    2. '1' → logprob: -2.8143134117126465
    3. ' R' → logprob: -6.1893134117126465
    4. ' ' → logprob: -8.189312934875488
    5. '   ' → logprob: -11.939312934875488
    6. '(R' → logprob: -13.064312934875488
    7. '
' → logprob: -13.064312934875488
    8. '```' → logprob: -14.189312934875488
    9. '	R' → logprob: -14.189312934875488
    10. '(' → logprob: -14.689312934875488

Token 344: '^' (ID: 61)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033006127923727036
    2. ',' → logprob: -5.033006191253662
    3. ':' → logprob: -5.408006191253662
    4. ')' → logprob: -5.658006191253662
    5. '
' → logprob: -5.908006191253662
    6. ',
' → logprob: -6.283006191253662
    7. '=' → logprob: -6.283006191253662
    8. 'import' → logprob: -6.658006191253662
    9. '2' → logprob: -6.783006191253662
    10. 'a' → logprob: -7.033006191253662

Token 345: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.723973582556937e-05
    2. ' ' → logprob: -11.250017166137695
    3. '**' → logprob: -13.375017166137695
    4. '²' → logprob: -14.375017166137695
    5. '=' → logprob: -14.875017166137695
    6. '```' → logprob: -15.250017166137695
    7. '   ' → logprob: -15.375017166137695
    8. '^' → logprob: -15.500017166137695
    9. '*' → logprob: -15.500017166137695
    10. ')' → logprob: -15.750017166137695

Token 346: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021015826612710953
    2. 'a' → logprob: -4.271015644073486
    3. 'A' → logprob: -6.396015644073486
    4. ' a' → logprob: -6.646015644073486
    5. 'import' → logprob: -7.146015644073486
    6. 'v' → logprob: -8.146016120910645
    7. ',' → logprob: -8.271016120910645
    8. '  ' → logprob: -8.396016120910645
    9. 'def' → logprob: -8.521016120910645
    10. '(a' → logprob: -8.646016120910645

Token 347: '       ' (ID: 309)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6033279299736023
    2. '   ' → logprob: -1.103327989578247
    3. 'A' → logprob: -2.353327989578247
    4. ' a' → logprob: -4.728327751159668
    5. 'import' → logprob: -5.228327751159668
    6. 'px' → logprob: -6.228327751159668
    7. '#' → logprob: -6.728327751159668
    8. 'p' → logprob: -6.853327751159668
    9. 'P' → logprob: -6.853327751159668
    10. 'Px' → logprob: -7.103327751159668

Token 348: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07139475643634796
    2. '   ' → logprob: -3.321394681930542
    3. 'A' → logprob: -3.571394681930542
    4. ' a' → logprob: -6.321394920349121
    5. 'px' → logprob: -6.821394920349121
    6. 'p' → logprob: -7.946394920349121
    7. '#' (adapté à ' #') → logprob: -8.196394920349121
    8. 'x' → logprob: -8.446394920349121
    9. 'vx' → logprob: -8.821394920349121
    10. 'dx' → logprob: -9.071394920349121

Token 349: ' line' (ID: 2543)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10906194150447845
    2. 'A' → logprob: -2.6090619564056396
    3. '   ' → logprob: -3.9840619564056396
    4. 'px' → logprob: -4.6090617179870605
    5. '#' → logprob: -7.9840617179870605
    6. ' a' → logprob: -8.734062194824219
    7. 'dx' → logprob: -8.734062194824219
    8. 'ox' → logprob: -9.234062194824219
    9. 'Px' → logprob: -9.359062194824219
    10. ' A' → logprob: -9.734062194824219

Token 350: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5090166926383972
    2. 'P' → logprob: -1.384016752243042
    3. 'a' → logprob: -3.509016752243042
    4. '=' → logprob: -3.634016752243042
    5. 'dx' → logprob: -3.884016752243042
    6. 'from' → logprob: -4.509016513824463
    7. 'p' → logprob: -5.009016513824463
    8. '_dx' → logprob: -5.009016513824463
    9. 'O' → logprob: -5.384016513824463
    10. 'A' → logprob: -5.509016513824463

Token 351: ' X' (ID: 2127)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.5669988989830017
    2. ' P' → logprob: -1.4419989585876465
    3. 't' → logprob: -3.0669989585876465
    4. ' t' → logprob: -3.0669989585876465
    5. '   ' → logprob: -4.4419989585876465
    6. 'a' → logprob: -4.4419989585876465
    7. ' lambda' → logprob: -4.4419989585876465
    8. 'p' → logprob: -4.8169989585876465
    9. 'lambda' → logprob: -4.8169989585876465
    10. 'x' → logprob: -4.9419989585876465

Token 352: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3025442361831665
    2. ' =' → logprob: -1.4275442361831665
    3. '0' → logprob: -4.552544116973877
    4. ',' → logprob: -5.552544116973877
    5. '=P' → logprob: -5.802544116973877
    6. '=lambda' → logprob: -6.802544116973877
    7. '(t' → logprob: -6.927544116973877
    8. '(' → logprob: -8.052544593811035
    9. 'o' → logprob: -8.177544593811035
    10. 's' → logprob: -9.052544593811035

Token 353: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.6424680352210999
    2. 'add' → logprob: -1.392467975616455
    3. '(P' → logprob: -2.392467975616455
    4. '(add' → logprob: -3.392467975616455
    5. ' P' → logprob: -3.767467975616455
    6. '(px' → logprob: -3.892467975616455
    7. ' (' → logprob: -4.017467975616455
    8. 'sub' → logprob: -4.517467975616455
    9. ' add' → logprob: -4.642467975616455
    10. '(' → logprob: -5.017467975616455

Token 354: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5825994610786438
    2. '+' → logprob: -0.8325994610786438
    3. ' plus' → logprob: -6.582599639892578
    4. ' ' → logprob: -6.582599639892578
    5. 'x' → logprob: -6.707599639892578
    6. '[' → logprob: -7.582599639892578
    7. ',' → logprob: -7.707599639892578
    8. '+x' → logprob: -7.957599639892578
    9. 'lus' → logprob: -8.457599639892578
    10. 'y' → logprob: -8.707599639892578

Token 355: ' V' (ID: 631)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.15590685606002808
    2. 'V' → logprob: -2.530906915664673
    3. ' mul' → logprob: -3.030906915664673
    4. ' V' → logprob: -4.155906677246094
    5. '   ' → logprob: -8.780906677246094
    6. ' ' → logprob: -8.905906677246094
    7. '(V' → logprob: -9.405906677246094
    8. ' (' → logprob: -9.655906677246094
    9. '(' → logprob: -9.843406677246094
    10. '	V' → logprob: -10.155906677246094

Token 356: '*t' (ID: 45600)
  Prédit: '*t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*t' → logprob: -0.01755461096763611
    2. ' *' → logprob: -4.767554759979248
    3. '*' → logprob: -5.017554759979248
    4. 't' → logprob: -6.267554759979248
    5. '   ' → logprob: -8.76755428314209
    6. '
' → logprob: -9.39255428314209
    7. '*s' → logprob: -10.64255428314209
    8. '*(' → logprob: -11.14255428314209
    9. '*time' → logprob: -11.26755428314209
    10. ' t' → logprob: -11.51755428314209

Token 357: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1887078732252121
    2. '
' → logprob: -2.0637078285217285
    3. ',
' → logprob: -4.0637078285217285
    4. ',' → logprob: -4.3137078285217285
    5. '       ' → logprob: -5.3137078285217285
    6. 'import' → logprob: -5.8137078285217285
    7. '\n' → logprob: -5.9387078285217285
    8. 't' → logprob: -7.8137078285217285
    9. ' ' → logprob: -8.313708305358887
    10. '\t' → logprob: -8.438708305358887

Token 358: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11167388409376144
    2. '   ' → logprob: -2.7366738319396973
    3. '
' → logprob: -4.361673831939697
    4. ',' → logprob: -4.611673831939697
    5. ',
' → logprob: -4.736673831939697
    6. '\n' → logprob: -5.361673831939697
    7. '        
' → logprob: -6.861673831939697
    8. '<|end|>' → logprob: -7.111673831939697
    9. '  
' → logprob: -7.486673831939697
    10. 'import' → logprob: -8.236674308776855

Token 359: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6919137835502625
    2. '   ' → logprob: -0.8169137835502625
    3. '
' → logprob: -3.1919138431549072
    4. '\n' → logprob: -5.691913604736328
    5. ',' → logprob: -5.816913604736328
    6. 'A' → logprob: -6.066913604736328
    7. ',
' → logprob: -6.691913604736328
    8. 'a' → logprob: -7.316913604736328
    9. ' A' → logprob: -7.441913604736328
    10. 'x' → logprob: -7.441913604736328

Token 360: ' solve' (ID: 17722)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09234784543514252
    2. ' a' → logprob: -3.2173478603363037
    3. 'A' → logprob: -3.5923478603363037
    4. '#' → logprob: -4.217347621917725
    5. '   ' → logprob: -5.467347621917725
    6. ' A' → logprob: -6.842347621917725
    7. ' #' → logprob: -8.967348098754883
    8. '
' → logprob: -9.342348098754883
    9. ' ' → logprob: -9.592348098754883
    10. 'ax' → logprob: -9.717348098754883

Token 361: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3271688222885132
    2. 'for' → logprob: -1.5771688222885132
    3. '(a' → logprob: -1.7021688222885132
    4. 'a' → logprob: -1.7021688222885132
    5. ' for' → logprob: -3.3271689414978027
    6. ' (' → logprob: -3.5771689414978027
    7. 't' → logprob: -4.077168941497803
    8. '(ax' → logprob: -4.327168941497803
    9. '(A' → logprob: -4.452168941497803
    10. ' a' → logprob: -4.452168941497803

Token 362: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.02274138107895851
    2. '(P' → logprob: -4.272741317749023
    3. 'px' → logprob: -5.772741317749023
    4. 'Px' → logprob: -6.147741317749023
    5. '(px' → logprob: -6.522741317749023
    6. ' P' → logprob: -7.397741317749023
    7. 'V' → logprob: -7.772741317749023
    8. ' (' → logprob: -8.272741317749023
    9. '   ' → logprob: -8.647741317749023
    10. 'PX' → logprob: -8.897741317749023

Token 363: '_x' (ID: 7054)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00018446780450176448
    2. '.' → logprob: -9.375184059143066
    3. 'x' → logprob: -10.875184059143066
    4. ')' → logprob: -10.875184059143066
    5. '.x' → logprob: -10.875184059143066
    6. ' +' → logprob: -11.125184059143066
    7. '+' → logprob: -11.500184059143066
    8. '0' → logprob: -11.625184059143066
    9. ' ' → logprob: -12.375184059143066
    10. ' [' → logprob: -13.625184059143066

Token 364: ' +' (ID: 659)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.74753338098526
    2. '+' → logprob: -0.87253338098526
    3. ' +' → logprob: -2.9975333213806152
    4. ')' → logprob: -3.1225333213806152
    5. '+t' → logprob: -5.497533321380615
    6. 'x' → logprob: -5.872533321380615
    7. '+x' → logprob: -6.122533321380615
    8. ')**' → logprob: -6.372533321380615
    9. '**' → logprob: -6.372533321380615
    10. ')^' → logprob: -7.872533321380615

Token 365: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.001040552044287324
    2. 'vx' → logprob: -7.001040458679199
    3. ' V' → logprob: -9.8760404586792
    4. 'VX' → logprob: -10.1260404586792
    5. 't' → logprob: -11.1260404586792
    6. '   ' → logprob: -11.6260404586792
    7. '(V' → logprob: -12.3760404586792
    8. 'v' → logprob: -12.8760404586792
    9. 'vt' → logprob: -13.6260404586792
    10. ' vx' → logprob: -13.7510404586792

Token 366: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.08389656245708466
    2. 'x' → logprob: -2.5838966369628906
    3. '[' → logprob: -5.333896636962891
    4. '.x' → logprob: -9.45889663696289
    5. '_' → logprob: -10.33389663696289
    6. '0' → logprob: -11.20889663696289
    7. 't' → logprob: -11.70889663696289
    8. '*_' → logprob: -12.08389663696289
    9. ' x' → logprob: -12.58389663696289
    10. ' _' → logprob: -12.70889663696289

Token 367: ' t' (ID: 260)
  Prédit: '*t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*t' → logprob: -0.0016468495596200228
    2. 't' → logprob: -6.751646995544434
    3. '*' → logprob: -8.126646995544434
    4. ' *' → logprob: -8.876646995544434
    5. ' t' → logprob: -10.626646995544434
    6. ')' → logprob: -12.751646995544434
    7. '**' → logprob: -13.126646995544434
    8. '   ' → logprob: -13.251646995544434
    9. '```' → logprob: -13.251646995544434
    10. ')*' → logprob: -13.626646995544434

Token 368: ')^' (ID: 73602)
  Prédit: ')**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.003370915539562702
    2. ')' → logprob: -6.003370761871338
    3. ')^' → logprob: -7.128370761871338
    4. ')*(' → logprob: -10.003371238708496
    5. ' )' → logprob: -10.253371238708496
    6. ')*' → logprob: -12.378371238708496
    7. '   ' → logprob: -13.003371238708496
    8. '*' → logprob: -13.128371238708496
    9. '**' → logprob: -13.378371238708496
    10. '*)' → logprob: -13.753371238708496

Token 369: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.558399319241289e-05
    2. ' ' → logprob: -10.750025749206543
    3. '20' → logprob: -13.500025749206543
    4. '22' → logprob: -14.125025749206543
    5. '**' → logprob: -15.250025749206543
    6. '
' → logprob: -15.375025749206543
    7. '24' → logprob: -15.500025749206543
    8. '```' → logprob: -15.500025749206543
    9. '23' → logprob: -15.625025749206543
    10. '21' → logprob: -15.625025749206543

Token 370: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4740966260433197
    2. '+' → logprob: -0.9740966558456421
    3. '   ' → logprob: -11.599096298217773
    4. ' ' → logprob: -13.224096298217773
    5. '+(' → logprob: -13.349096298217773
    6. '+
' → logprob: -14.224096298217773
    7. '```' → logprob: -14.224096298217773
    8. '-' → logprob: -14.349096298217773
    9. ' +
' → logprob: -14.474096298217773
    10. ',' → logprob: -14.724096298217773

Token 371: ' (' (ID: 350)
  Prédit: '(P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.01427410077303648
    2. ' (' → logprob: -4.2642741203308105
    3. '(' → logprob: -9.139273643493652
    4. '(Py' → logprob: -13.889273643493652
    5. ' ' → logprob: -14.264273643493652
    6. '   ' → logprob: -14.264273643493652
    7. '(p' → logprob: -14.514273643493652
    8. '  ' → logprob: -15.389273643493652
    9. '(V' → logprob: -16.63927459716797
    10. '(PR' → logprob: -17.01427459716797

Token 372: 'P' (ID: 47)
  Prédit: '(P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.3982626497745514
    2. 'P' → logprob: -1.898262619972229
    3. 'V' → logprob: -2.0232627391815186
    4. '(V' → logprob: -3.8982627391815186
    5. '(Py' → logprob: -4.0232625007629395
    6. 'Vy' → logprob: -5.5232625007629395
    7. 'Py' → logprob: -6.2732625007629395
    8. ' (' → logprob: -6.5232625007629395
    9. '   ' → logprob: -8.273262977600098
    10. '(' → logprob: -8.898262977600098

Token 373: '_y' (ID: 9410)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.12701557576656342
    2. '_y' → logprob: -2.1270155906677246
    3. 'x' → logprob: -9.502015113830566
    4. '_' → logprob: -11.877015113830566
    5. 'y' → logprob: -12.252015113830566
    6. '[' → logprob: -14.877015113830566
    7. '_{' → logprob: -15.502015113830566
    8. 'import' → logprob: -15.877015113830566
    9. ')' → logprob: -16.627016067504883
    10. '_z' → logprob: -16.752016067504883

Token 374: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25216785073280334
    2. '+' → logprob: -1.502167820930481
    3. '*' → logprob: -9.502167701721191
    4. '_' → logprob: -10.377167701721191
    5. ' *' → logprob: -10.502167701721191
    6. ' ' → logprob: -10.752167701721191
    7. ')' → logprob: -10.877167701721191
    8. '_x' → logprob: -10.877167701721191
    9. '_y' → logprob: -12.377167701721191
    10. '```' → logprob: -12.377167701721191

Token 375: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.00769641762599349
    2. ' V' → logprob: -4.882696628570557
    3. 'Vy' → logprob: -9.757696151733398
    4. '(V' → logprob: -11.257696151733398
    5. ')' → logprob: -12.132696151733398
    6. ')V' → logprob: -12.882696151733398
    7. ' ' → logprob: -13.132696151733398
    8. '	V' → logprob: -13.257696151733398
    9. '   ' → logprob: -13.382696151733398
    10. '(' → logprob: -14.132696151733398

Token 376: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.07891644537448883
    2. 'y' → logprob: -2.578916549682617
    3. ' y' → logprob: -11.703916549682617
    4. '.y' → logprob: -12.078916549682617
    5. '_' → logprob: -12.828916549682617
    6. '[' → logprob: -13.078916549682617
    7. '_x' → logprob: -13.578916549682617
    8. ')y' → logprob: -13.953916549682617
    9. 'yt' → logprob: -14.328916549682617
    10. ')' → logprob: -14.453916549682617

Token 377: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3133528530597687
    2. ' t' → logprob: -1.3133528232574463
    3. ' ' → logprob: -10.438352584838867
    4. ')' → logprob: -10.813352584838867
    5. ')t' → logprob: -12.063352584838867
    6. '_t' → logprob: -12.188352584838867
    7. '```' → logprob: -12.313352584838867
    8. '2' → logprob: -12.813352584838867
    9. '*t' → logprob: -12.813352584838867
    10. '`t' → logprob: -12.813352584838867

Token 378: ')^' (ID: 73602)
  Prédit: ')**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.5147458910942078
    2. ')^' → logprob: -1.1397459506988525
    3. ')' → logprob: -2.5147459506988525
    4. 't' → logprob: -6.639745712280273
    5. ' )' → logprob: -9.389745712280273
    6. '*)' → logprob: -9.889745712280273
    7. '**' → logprob: -10.764745712280273
    8. ' t' → logprob: -10.889745712280273
    9. '```' → logprob: -11.264745712280273
    10. ')
' → logprob: -11.264745712280273

Token 379: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.179569077678025e-05
    2. ' ' → logprob: -10.375041961669922
    3. '20' → logprob: -12.250041961669922
    4. '(' → logprob: -13.750041961669922
    5. '
' → logprob: -14.125041961669922
    6. '21' → logprob: -14.375041961669922
    7. '1' → logprob: -14.500041961669922
    8. '22' → logprob: -14.500041961669922
    9. '```' → logprob: -14.500041961669922
    10. '**' → logprob: -14.625041961669922

Token 380: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.251963347196579
    2. ' =' → logprob: -1.7519633769989014
    3. ' <=' → logprob: -4.376963138580322
    4. ' ==' → logprob: -4.501963138580322
    5. '==' → logprob: -4.751963138580322
    6. '<=' → logprob: -5.001963138580322
    7. '-' → logprob: -5.251963138580322
    8. ' -' → logprob: -6.126963138580322
    9. '   ' → logprob: -6.626963138580322
    10. ' ' → logprob: -7.751963138580322

Token 381: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0030702834483236074
    2. '1' → logprob: -5.87807035446167
    3. ' R' → logprob: -8.253069877624512
    4. ' ' → logprob: -13.003069877624512
    5. '(' → logprob: -13.378069877624512
    6. '   ' → logprob: -14.878069877624512
    7. '(R' → logprob: -14.878069877624512
    8. '```' → logprob: -15.503069877624512
    9. '	R' → logprob: -16.253070831298828
    10. '
' → logprob: -16.753070831298828

Token 382: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.02822665497660637
    2. '2' → logprob: -3.653226613998413
    3. '*' → logprob: -6.278226852416992
    4. '²' → logprob: -11.278226852416992
    5. '^' → logprob: -11.903226852416992
    6. '
' → logprob: -12.153226852416992
    7. ' ' → logprob: -12.403226852416992
    8. ' **' → logprob: -12.653226852416992
    9. '```' → logprob: -12.653226852416992
    10. '[' → logprob: -13.403226852416992

Token 383: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.3358446166384965e-05
    2. ' ' → logprob: -10.000053405761719
    3. '20' → logprob: -12.125053405761719
    4. '22' → logprob: -13.625053405761719
    5. '²' → logprob: -15.500053405761719
    6. '
' → logprob: -15.625053405761719
    7. '26' → logprob: -16.00005340576172
    8. '**' → logprob: -16.12505340576172
    9. '24' → logprob: -16.12505340576172
    10. '   ' → logprob: -16.37505340576172

Token 384: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32281455397605896
    2. '       ' → logprob: -2.197814464569092
    3. '
' → logprob: -2.572814464569092
    4. ':' → logprob: -3.822814464569092
    5. ',
' → logprob: -4.572814464569092
    6. ',' → logprob: -4.697814464569092
    7. '	' → logprob: -4.947814464569092
    8. '\n' → logprob: -5.072814464569092
    9. ' ' → logprob: -5.197814464569092
    10. ')' → logprob: -5.947814464569092

Token 385: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06495507061481476
    2. '\n' → logprob: -3.064954996109009
    3. '
' → logprob: -4.564955234527588
    4. '\' → logprob: -7.189955234527588
    5. '  
' → logprob: -7.314955234527588
    6. '       ' → logprob: -7.314955234527588
    7. ',
' → logprob: -7.439955234527588
    8. '    
' → logprob: -7.564955234527588
    9. 'import' → logprob: -7.939955234527588
    10. ',' → logprob: -8.18995475769043

Token 386: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.2599189281463623
    2. '   ' → logprob: -2.0099189281463623
    3. 'A' → logprob: -2.6349189281463623
    4. 'import' → logprob: -4.384919166564941
    5. ' a' → logprob: -5.009919166564941
    6. 'from' → logprob: -7.009919166564941
    7. 'v' → logprob: -7.384919166564941
    8. ' A' → logprob: -7.759919166564941
    9. ' ' → logprob: -7.759919166564941
    10. '       ' → logprob: -8.009919166564941

Token 387: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2255096584558487
    2. '=' → logprob: -1.6005096435546875
    3. ' ' → logprob: -9.475509643554688
    4. ',' → logprob: -11.350509643554688
    5. ')' → logprob: -12.850509643554688
    6. '  ' → logprob: -13.225509643554688
    7. ' =
' → logprob: -14.850509643554688
    8. '=b' → logprob: -14.975509643554688
    9. '=int' → logprob: -14.975509643554688
    10. '.' → logprob: -15.350509643554688

Token 388: ' V' (ID: 631)
  Prédit: 'vx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vx' → logprob: -0.12592612206935883
    2. 'V' → logprob: -3.0009260177612305
    3. ' vx' → logprob: -3.1259260177612305
    4. 'dot' → logprob: -3.7509260177612305
    5. ' V' → logprob: -7.3759260177612305
    6. 'VX' → logprob: -8.50092601776123
    7. ' dot' → logprob: -8.62592601776123
    8. 'v' → logprob: -9.00092601776123
    9. 'dx' → logprob: -11.37592601776123
    10. '1' → logprob: -11.87592601776123

Token 389: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.550411151489243e-05
    2. 'x' → logprob: -10.375055313110352
    3. 'a' → logprob: -11.125055313110352
    4. 'dot' → logprob: -12.125055313110352
    5. '(' → logprob: -13.125055313110352
    6. '0' → logprob: -13.625055313110352
    7. ' [' → logprob: -15.625055313110352
    8. ' ' → logprob: -16.12505531311035
    9. '2' → logprob: -16.37505531311035
    10. '.' → logprob: -16.50005531311035

Token 390: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.875000953674316
    3. '[' → logprob: -16.0
    4. '1' → logprob: -17.375
    5. '
' → logprob: -17.75
    6. '۰' → logprob: -18.5
    7. '   ' → logprob: -18.75
    8. '０' → logprob: -20.125
    9. '(' → logprob: -20.25
    10. '```' → logprob: -20.875

Token 391: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.38687559962272644
    2. '**' → logprob: -1.1368756294250488
    3. ' *' → logprob: -12.88687515258789
    4. 'V' → logprob: -14.38687515258789
    5. ']*' → logprob: -14.63687515258789
    6. '***' → logprob: -14.76187515258789
    7. '*v' → logprob: -16.01187515258789
    8. '*a' → logprob: -16.13687515258789
    9. ' **' → logprob: -16.13687515258789
    10. ']' → logprob: -16.76187515258789

Token 392: 'V' (ID: 53)
  Prédit: 'V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -4.36574100604048e-06
    2. ' V' → logprob: -12.375004768371582
    3. '2' → logprob: -16.375003814697266
    4. '
' → logprob: -17.625003814697266
    5. '	V' → logprob: -17.750003814697266
    6. ')V' → logprob: -19.375003814697266
    7. '```' → logprob: -19.500003814697266
    8. ' ' → logprob: -19.500003814697266
    9. '**' → logprob: -19.625003814697266
    10. 'v' → logprob: -20.000003814697266

Token 393: '[' (ID: 58)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2664971947669983
    2. '2' → logprob: -1.7664971351623535
    3. '[' → logprob: -2.7664971351623535
    4. ' ' → logprob: -9.766497611999512
    5. 'V' → logprob: -11.016497611999512
    6. '*' → logprob: -11.391497611999512
    7. '(' → logprob: -11.391497611999512
    8. '```' → logprob: -11.891497611999512
    9. '[
' → logprob: -12.016497611999512
    10. '1' → logprob: -12.141497611999512

Token 394: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -13.50000286102295
    3. '1' → logprob: -13.62500286102295
    4. '
' → logprob: -16.625001907348633
    5. '۰' → logprob: -17.375001907348633
    6. '[' → logprob: -17.625001907348633
    7. '   ' → logprob: -17.625001907348633
    8. 'V' → logprob: -17.875001907348633
    9. '

' → logprob: -18.437501907348633
    10. ']' → logprob: -18.437501907348633

Token 395: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4289885461330414
    2. ' +' → logprob: -1.0539885759353638
    3. '+a' → logprob: -8.553988456726074
    4. '+b' → logprob: -9.928988456726074
    5. '+
' → logprob: -11.178988456726074
    6. ')' → logprob: -12.553988456726074
    7. ')+' → logprob: -12.678988456726074
    8. '()+' → logprob: -12.678988456726074
    9. ']+' → logprob: -13.053988456726074
    10. '+A' → logprob: -13.053988456726074

Token 396: 'V' (ID: 53)
  Prédit: 'V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -4.036524842376821e-05
    2. ' V' → logprob: -10.125040054321289
    3. '	V' → logprob: -15.500040054321289
    4. '<|end|>' → logprob: -17.00004005432129
    5. '(V' → logprob: -17.75004005432129
    6. '   ' → logprob: -17.87504005432129
    7. 'v' → logprob: -17.87504005432129
    8. ')V' → logprob: -18.50004005432129
    9. '  ' → logprob: -19.25004005432129
    10. ' ' → logprob: -19.25004005432129

Token 397: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.32392441527918e-05
    2. '0' → logprob: -10.125053405761719
    3. '1' → logprob: -11.375053405761719
    4. '[
' → logprob: -14.000053405761719
    5. ' ' → logprob: -14.875053405761719
    6. '```' → logprob: -15.750053405761719
    7. 'V' → logprob: -16.87505340576172
    8. '(' → logprob: -17.00005340576172
    9. '   ' → logprob: -17.00005340576172
    10. '{' → logprob: -17.12505340576172

Token 398: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1972459852695465
    2. 'V' → logprob: -2.0722460746765137
    3. '0' → logprob: -2.9472460746765137
    4. ' ' → logprob: -8.197245597839355
    5. ' V' → logprob: -8.822245597839355
    6. '[' → logprob: -8.947245597839355
    7. 'Vy' → logprob: -10.322245597839355
    8. 'v' → logprob: -10.947245597839355
    9. '(' → logprob: -12.197245597839355
    10. '	V' → logprob: -12.322245597839355

Token 399: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.31704825162887573
    2. ']*' → logprob: -1.5670483112335205
    3. '[' → logprob: -2.8170483112335205
    4. ']' → logprob: -5.942048072814941
    5. '2' → logprob: -8.692048072814941
    6. '*[' → logprob: -8.942048072814941
    7. '```' → logprob: -9.317048072814941
    8. '()*' → logprob: -9.442048072814941
    9. '**' → logprob: -10.067048072814941
    10. '0' → logprob: -10.567048072814941

Token 400: 'V' (ID: 53)
  Prédit: 'V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -8.602024900028482e-05
    2. ' V' → logprob: -9.375085830688477
    3. '(V' → logprob: -14.625085830688477
    4. ' ' → logprob: -15.250085830688477
    5. '	V' → logprob: -15.250085830688477
    6. '2' → logprob: -16.000085830688477
    7. '0' → logprob: -17.625085830688477
    8. '(' → logprob: -17.625085830688477
    9. '1' → logprob: -17.750085830688477
    10. '
' → logprob: -17.750085830688477

Token 401: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010219813324511051
    2. '[' → logprob: -4.635220050811768
    3. '2' → logprob: -8.51021957397461
    4. '*' → logprob: -9.13521957397461
    5. '0' → logprob: -9.51021957397461
    6. ' ' → logprob: -9.88521957397461
    7. ']' → logprob: -11.76021957397461
    8. '```' → logprob: -11.76021957397461
    9. '**' → logprob: -12.88521957397461
    10. '(' → logprob: -12.88521957397461

Token 402: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -13.000003814697266
    3. '2' → logprob: -14.250003814697266
    4. '0' → logprob: -15.000003814697266
    5. '11' → logprob: -15.500003814697266
    6. '```' → logprob: -17.000003814697266
    7. '
' → logprob: -17.062503814697266
    8. '   ' → logprob: -17.312503814697266
    9. '[' → logprob: -17.375003814697266
    10. ']' → logprob: -17.375003814697266

Token 403: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.044710107147693634
    2. '<|end|>' → logprob: -3.544710159301758
    3. ']' → logprob: -4.294710159301758
    4. '<|end|>' → logprob: -7.544710159301758
    5. ' )' → logprob: -9.044710159301758
    6. '}' → logprob: -9.419710159301758
    7. '```' → logprob: -9.544710159301758
    8. ')
' → logprob: -9.794710159301758
    9. ')return' → logprob: -10.419710159301758
    10. ')]' → logprob: -10.669710159301758

Token 404: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4883885681629181
    2. '*' → logprob: -2.1133885383605957
    3. '<|end|>' → logprob: -2.7383885383605957
    4. ')' → logprob: -2.9883885383605957
    5. '   ' → logprob: -3.6133885383605957
    6. '-' → logprob: -3.8633885383605957
    7. 'b' → logprob: -4.113388538360596
    8. '**' → logprob: -4.113388538360596
    9. '```' → logprob: -4.488388538360596
    10. ' t' → logprob: -4.738388538360596

Token 405: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.09388294816017151
    2. ' b' → logprob: -2.5938830375671387
    3. '   ' → logprob: -4.218883037567139
    4. 'c' → logprob: -10.71888256072998
    5. ' ' → logprob: -10.96888256072998
    6. '2' → logprob: -11.09388256072998
    7. '	b' → logprob: -11.21888256072998
    8. ',' → logprob: -11.71888256072998
    9. '+' → logprob: -11.71888256072998
    10. ',b' → logprob: -11.84388256072998

Token 406: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06994243711233139
    2. '=' → logprob: -2.6949424743652344
    3. ',' → logprob: -13.444942474365234
    4. ')' → logprob: -13.569942474365234
    5. ' ' → logprob: -13.944942474365234
    6. ' =
' → logprob: -14.569942474365234
    7. '=-' → logprob: -15.694942474365234
    8. 's' → logprob: -15.694942474365234
    9. 'space' → logprob: -15.819942474365234
    10. '.' → logprob: -15.944942474365234

Token 407: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006076449062675238
    2. ' ' → logprob: -5.131076335906982
    3. '   ' → logprob: -8.88107681274414
    4. '  ' → logprob: -12.13107681274414
    5. '    ' → logprob: -14.00607681274414
    6. '     ' → logprob: -14.38107681274414
    7. '(' → logprob: -14.75607681274414
    8. '       ' → logprob: -15.00607681274414
    9. ' ' → logprob: -15.50607681274414
    10. 'P' → logprob: -15.63107681274414

Token 408: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0015203376533463597
    2. ' ' → logprob: -6.501520156860352
    3. '   ' → logprob: -11.126520156860352
    4. '  ' → logprob: -13.626520156860352
    5. '(' → logprob: -14.126520156860352
    6. '(P' → logprob: -14.501520156860352
    7. 'P' → logprob: -15.001520156860352
    8. '    ' → logprob: -16.00152015686035
    9. '     ' → logprob: -16.75152015686035
    10. ' ' → logprob: -17.12652015686035

Token 409: '*(' (ID: 14793)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.08079605549573898
    2. '*(' → logprob: -2.580796003341675
    3. ' *' → logprob: -6.455796241760254
    4. '*a' → logprob: -8.705796241760254
    5. '*b' → logprob: -9.830796241760254
    6. '*v' → logprob: -10.205796241760254
    7. '*p' → logprob: -11.080796241760254
    8. ' *(' → logprob: -12.080796241760254
    9. '*
' → logprob: -12.080796241760254
    10. '*[' → logprob: -12.205796241760254

Token 410: 'P' (ID: 47)
  Prédit: '(P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.002908415859565139
    2. ' (' → logprob: -6.127908229827881
    3. '(' → logprob: -8.127908706665039
    4. '(dot' → logprob: -8.377908706665039
    5. '(V' → logprob: -9.502908706665039
    6. 'dot' → logprob: -10.127908706665039
    7. '(p' → logprob: -10.502908706665039
    8. '(
' → logprob: -10.752908706665039
    9. 'P' → logprob: -10.877908706665039
    10. ')' → logprob: -12.627908706665039

Token 411: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.4894986785948277e-05
    2. '0' → logprob: -10.500044822692871
    3. '(' → logprob: -11.625044822692871
    4. ')' → logprob: -12.500044822692871
    5. ' [' → logprob: -13.625044822692871
    6. ' ' → logprob: -14.125044822692871
    7. ')[' → logprob: -14.250044822692871
    8. '[
' → logprob: -14.250044822692871
    9. '```' → logprob: -14.500044822692871
    10. '][' → logprob: -15.125044822692871

Token 412: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003864630125463009
    2. '[' → logprob: -7.8753862380981445
    3. '(' → logprob: -13.000386238098145
    4. ' ' → logprob: -13.875386238098145
    5. '   ' → logprob: -14.125386238098145
    6. '
' → logprob: -14.250386238098145
    7. '][' → logprob: -14.250386238098145
    8. ']' → logprob: -14.875386238098145
    9. '```' → logprob: -15.875386238098145
    10. ')' → logprob: -15.937886238098145

Token 413: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5770430564880371
    2. ']*' → logprob: -0.8270430564880371
    3. ')*' → logprob: -6.952043056488037
    4. '**' → logprob: -9.327043533325195
    5. ']' → logprob: -11.202043533325195
    6. '*v' → logprob: -11.452043533325195
    7. '```' → logprob: -11.952043533325195
    8. '()*' → logprob: -12.452043533325195
    9. '*b' → logprob: -12.702043533325195
    10. '*
' → logprob: -12.702043533325195

Token 414: 'V' (ID: 53)
  Prédit: 'V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -1.3856492842023727e-06
    2. ' V' → logprob: -13.625000953674316
    3. '   ' → logprob: -17.500001907348633
    4. ')V' → logprob: -17.875001907348633
    5. '	V' → logprob: -18.125001907348633
    6. '
' → logprob: -18.625001907348633
    7. 'P' → logprob: -18.750001907348633
    8. 'VX' → logprob: -19.250001907348633
    9. 'v' → logprob: -19.500001907348633
    10. '(V' → logprob: -19.875001907348633

Token 415: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.043020427227020264
    2. '0' → logprob: -3.168020486831665
    3. '[
' → logprob: -11.168020248413086
    4. ' ' → logprob: -12.418020248413086
    5. '(' → logprob: -14.043020248413086
    6. ' [' → logprob: -14.293020248413086
    7. '][' → logprob: -14.543020248413086
    8. '
' → logprob: -14.918020248413086
    9. ')' → logprob: -15.918020248413086
    10. '```' → logprob: -16.293020248413086

Token 416: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.125000953674316
    3. ' ' → logprob: -15.750000953674316
    4. '
' → logprob: -17.875
    5. '   ' → logprob: -18.625
    6. '1' → logprob: -18.75
    7. ']' → logprob: -19.25
    8. '```' → logprob: -19.75
    9. ')' → logprob: -20.75
    10. '۰' → logprob: -20.875

Token 417: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.010878502391278744
    2. ' +' → logprob: -4.635878562927246
    3. '+b' → logprob: -7.135878562927246
    4. '+
' → logprob: -8.760878562927246
    5. ')+' → logprob: -9.885878562927246
    6. '+)' → logprob: -10.135878562927246
    7. '+B' → logprob: -10.260878562927246
    8. ')' → logprob: -10.635878562927246
    9. ']+' → logprob: -11.760878562927246
    10. ')+(' → logprob: -13.135878562927246

Token 418: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -5.080963092041202e-06
    2. ' P' → logprob: -12.250004768371582
    3. '   ' → logprob: -15.750004768371582
    4. '	P' → logprob: -17.5000057220459
    5. ')' → logprob: -17.8750057220459
    6. '       ' → logprob: -18.7500057220459
    7. '(P' → logprob: -19.0000057220459
    8. '
' → logprob: -19.0000057220459
    9. 'PY' → logprob: -19.6250057220459
    10. 'Py' → logprob: -20.0000057220459

Token 419: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.176947600673884e-05
    2. '1' → logprob: -10.875021934509277
    3. '0' → logprob: -13.625021934509277
    4. '[
' → logprob: -14.625021934509277
    5. '```' → logprob: -15.250021934509277
    6. '   ' → logprob: -16.00002098083496
    7. ')' → logprob: -16.12502098083496
    8. '(' → logprob: -16.25002098083496
    9. '
' → logprob: -16.25002098083496
    10. 'def' → logprob: -16.37502098083496

Token 420: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.763666947837919e-05
    2. '[' → logprob: -10.12504768371582
    3. ' ' → logprob: -12.37504768371582
    4. '0' → logprob: -13.00004768371582
    5. '
' → logprob: -14.37504768371582
    6. '   ' → logprob: -15.62504768371582
    7. '```' → logprob: -15.87504768371582
    8. ']' → logprob: -16.25004768371582
    9. '#' → logprob: -17.31254768371582
    10. ')' → logprob: -17.43754768371582

Token 421: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0064388420432806015
    2. ']*' → logprob: -5.131438732147217
    3. ']' → logprob: -8.381439208984375
    4. ')*' → logprob: -9.131439208984375
    5. '[' → logprob: -9.381439208984375
    6. '()*' → logprob: -10.756439208984375
    7. '```' → logprob: -11.381439208984375
    8. '*[' → logprob: -11.631439208984375
    9. ''*' → logprob: -11.881439208984375
    10. ')' → logprob: -12.006439208984375

Token 422: 'V' (ID: 53)
  Prédit: 'V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -1.8624639324116288e-06
    2. ' V' → logprob: -13.500001907348633
    3. ')V' → logprob: -16.125001907348633
    4. '[' → logprob: -16.375001907348633
    5. '[V' → logprob: -16.750001907348633
    6. '	V' → logprob: -16.750001907348633
    7. '<|end|>' → logprob: -17.250001907348633
    8. 'Vy' → logprob: -17.375001907348633
    9. 'v' → logprob: -18.000001907348633
    10. ')' → logprob: -18.250001907348633

Token 423: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5251854658126831
    2. '1' → logprob: -0.9001854658126831
    3. ')' → logprob: -6.525185585021973
    4. ']' → logprob: -8.025185585021973
    5. '])' → logprob: -9.275185585021973
    6. '0' → logprob: -10.525185585021973
    7. '[
' → logprob: -10.775185585021973
    8. ' ' → logprob: -10.775185585021973
    9. '```' → logprob: -10.900185585021973
    10. '<|end|>' → logprob: -11.275185585021973

Token 424: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.750000953674316
    3. ')' → logprob: -15.625000953674316
    4. '0' → logprob: -16.75
    5. '])' → logprob: -17.125
    6. '```' → logprob: -17.5
    7. ']' → logprob: -18.0
    8. '
' → logprob: -18.125
    9. '   ' → logprob: -18.5
    10. '[' → logprob: -18.5

Token 425: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.0484450437361374e-05
    2. ')
' → logprob: -10.250040054321289
    3. ' )' → logprob: -12.750040054321289
    4. ')`' → logprob: -14.875040054321289
    5. '))' → logprob: -15.250040054321289
    6. '`)' → logprob: -15.625040054321289
    7. ')}' → logprob: -15.750040054321289
    8. ')#' → logprob: -15.875040054321289
    9. '）' → logprob: -16.00004005432129
    10. '}' → logprob: -16.00004005432129

Token 426: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12761172652244568
    2. '   ' → logprob: -3.2526116371154785
    3. ' c' → logprob: -3.2526116371154785
    4. 'c' → logprob: -3.5026116371154785
    5. '
' → logprob: -5.3776116371154785
    6. '        
' → logprob: -6.2526116371154785
    7. ' ' → logprob: -6.6276116371154785
    8. '    
' → logprob: -7.0026116371154785
    9. '<|end|>' → logprob: -7.0026116371154785
    10. '	c' → logprob: -7.8776116371154785

Token 427: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.02327948994934559
    2. ' c' → logprob: -3.7732794284820557
    3. '   ' → logprob: -11.273279190063477
    4. '	c' → logprob: -11.273279190063477
    5. 'import' → logprob: -11.773279190063477
    6. ' ' → logprob: -15.398279190063477
    7. '
' → logprob: -15.648279190063477
    8. '       ' → logprob: -15.898279190063477
    9. '_c' → logprob: -16.273279190063477
    10. '+c' → logprob: -16.773279190063477

Token 428: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02631399966776371
    2. '=' → logprob: -3.6513140201568604
    3. '   ' → logprob: -12.651313781738281
    4. ':' → logprob: -12.776313781738281
    5. ')' → logprob: -12.776313781738281
    6. '=c' → logprob: -13.651313781738281
    7. '=b' → logprob: -14.276313781738281
    8. ' ' → logprob: -14.776313781738281
    9. ' =
' → logprob: -14.901313781738281
    10. ' =(' → logprob: -15.151313781738281

Token 429: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0004282851587049663
    2. '   ' → logprob: -8.500428199768066
    3. '(P' → logprob: -8.625428199768066
    4. ' P' → logprob: -10.625428199768066
    5. '(' → logprob: -11.000428199768066
    6. '	P' → logprob: -12.875428199768066
    7. ' ' → logprob: -14.000428199768066
    8. ' (' → logprob: -14.125428199768066
    9. '  ' → logprob: -16.125429153442383
    10. '>P' → logprob: -17.750429153442383

Token 430: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.696889623621246e-06
    2. '0' → logprob: -13.00000286102295
    3. '(' → logprob: -16.625001907348633
    4. '[
' → logprob: -16.750001907348633
    5. ' [' → logprob: -17.250001907348633
    6. 'x' → logprob: -17.750001907348633
    7. '```' → logprob: -17.750001907348633
    8. 'import' → logprob: -17.875001907348633
    9. '2' → logprob: -18.375001907348633
    10. '00' → logprob: -18.750001907348633

Token 431: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20141851902008057
    2. '[' → logprob: -1.7014185190200806
    3. ']' → logprob: -13.82641887664795
    4. ' ' → logprob: -13.95141887664795
    5. '
' → logprob: -13.95141887664795
    6. '[
' → logprob: -14.45141887664795
    7. '```' → logprob: -14.82641887664795
    8. '][' → logprob: -14.95141887664795
    9. '(' → logprob: -15.70141887664795
    10. '   ' → logprob: -15.82641887664795

Token 432: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0013642854755744338
    2. '**' → logprob: -6.751364231109619
    3. ']*' → logprob: -9.251364707946777
    4. '[' → logprob: -10.251364707946777
    5. '*c' → logprob: -11.501364707946777
    6. '```' → logprob: -11.751364707946777
    7. '*C' → logprob: -12.001364707946777
    8. ' *' → logprob: -12.001364707946777
    9. 'P' → logprob: -12.126364707946777
    10. '()*' → logprob: -12.126364707946777

Token 433: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -4.167648876318708e-05
    2. '2' → logprob: -10.375041961669922
    3. ' P' → logprob: -11.875041961669922
    4. '
' → logprob: -13.500041961669922
    5. '**' → logprob: -13.625041961669922
    6. '0' → logprob: -14.875041961669922
    7. '```' → logprob: -15.125041961669922
    8. '*' → logprob: -15.875041961669922
    9. '(' → logprob: -17.500041961669922
    10. '(P' → logprob: -17.875041961669922

Token 434: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03806892782449722
    2. '0' → logprob: -3.288069009780884
    3. '```' → logprob: -11.163068771362305
    4. '2' → logprob: -12.038068771362305
    5. '*' → logprob: -13.288068771362305
    6. 'def' → logprob: -13.913068771362305
    7. '**' → logprob: -14.413068771362305
    8. '[
' → logprob: -14.413068771362305
    9. '`' → logprob: -14.663068771362305
    10. '#' → logprob: -14.913068771362305

Token 435: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2200749754119897e-06
    2. '[' → logprob: -13.500001907348633
    3. ' ' → logprob: -15.125001907348633
    4. '
' → logprob: -15.250001907348633
    5. '1' → logprob: -15.625001907348633
    6. ']' → logprob: -17.250001907348633
    7. '۰' → logprob: -17.250001907348633
    8. '```' → logprob: -17.250001907348633
    9. '

' → logprob: -18.500001907348633
    10. '-' → logprob: -18.625001907348633

Token 436: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06386382132768631
    2. '-' → logprob: -3.313863754272461
    3. ' +' → logprob: -4.063863754272461
    4. '+c' → logprob: -5.188863754272461
    5. ' -' → logprob: -6.813863754272461
    6. ')' → logprob: -7.688863754272461
    7. '+C' → logprob: -8.188863754272461
    8. ')+' → logprob: -8.563863754272461
    9. ')-' → logprob: -9.063863754272461
    10. '-R' → logprob: -9.438863754272461

Token 437: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -4.0126840758603066e-05
    2. ' P' → logprob: -10.500040054321289
    3. '(P' → logprob: -11.625040054321289
    4. '(' → logprob: -13.000040054321289
    5. '<|end|>' → logprob: -13.875040054321289
    6. '   ' → logprob: -16.50004005432129
    7. '	P' → logprob: -16.62504005432129
    8. ' ' → logprob: -16.75004005432129
    9. '```' → logprob: -17.12504005432129
    10. '[' → logprob: -17.37504005432129

Token 438: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04863937199115753
    2. '1' → logprob: -3.0486392974853516
    3. 'y' → logprob: -10.173639297485352
    4. '```' → logprob: -11.923639297485352
    5. '0' → logprob: -12.673639297485352
    6. '[
' → logprob: -13.923639297485352
    7. '{' → logprob: -14.548639297485352
    8. ' ' → logprob: -14.673639297485352
    9. 'def' → logprob: -15.298639297485352
    10. 'Y' → logprob: -15.548639297485352

Token 439: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001427538663847372
    2. '[' → logprob: -8.875143051147461
    3. ' ' → logprob: -13.250143051147461
    4. '0' → logprob: -14.375143051147461
    5. '```' → logprob: -15.375143051147461
    6. '(' → logprob: -15.750143051147461
    7. ']' → logprob: -16.75014305114746
    8. '
' → logprob: -16.81264305114746
    9. 'y' → logprob: -17.62514305114746
    10. '   ' → logprob: -17.68764305114746

Token 440: ']*' (ID: 18579)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05950115993618965
    2. '*' → logprob: -2.9345011711120605
    3. '()*' → logprob: -6.1845011711120605
    4. ']*' → logprob: -6.8095011711120605
    5. '0' → logprob: -7.4345011711120605
    6. '*[' → logprob: -8.059500694274902
    7. ']' → logprob: -9.184500694274902
    8. '<|end|>' → logprob: -9.434500694274902
    9. '```' → logprob: -9.684500694274902
    10. ')*' → logprob: -9.684500694274902

Token 441: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0005700715119019151
    2. '0' → logprob: -7.625570297241211
    3. '[' → logprob: -9.875570297241211
    4. '1' → logprob: -11.500570297241211
    5. ' P' → logprob: -11.500570297241211
    6. '(P' → logprob: -12.500570297241211
    7. '[P' → logprob: -13.375570297241211
    8. '	P' → logprob: -13.750570297241211
    9. 'Py' → logprob: -13.875570297241211
    10. '(' → logprob: -13.875570297241211

Token 442: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5232797861099243
    2. '0' → logprob: -0.8982797861099243
    3. '1' → logprob: -9.023280143737793
    4. '```' → logprob: -10.523280143737793
    5. ']' → logprob: -13.523280143737793
    6. '-' → logprob: -13.773280143737793
    7. ' ' → logprob: -14.023280143737793
    8. '(' → logprob: -14.023280143737793
    9. '[
' → logprob: -14.148280143737793
    10. '
' → logprob: -14.398280143737793

Token 443: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2522631585597992
    2. '1' → logprob: -1.5022631883621216
    3. ' ' → logprob: -8.752263069152832
    4. '[' → logprob: -9.002263069152832
    5. ']' → logprob: -10.752263069152832
    6. '```' → logprob: -11.752263069152832
    7. '2' → logprob: -11.877263069152832
    8. '   ' → logprob: -12.877263069152832
    9. '<|end|>' → logprob: -13.002263069152832
    10. '-' → logprob: -13.127263069152832

Token 444: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.25900590419769287
    2. ' -' → logprob: -1.5090059041976929
    3. ')' → logprob: -5.134006023406982
    4. '-R' → logprob: -7.384006023406982
    5. ')-' → logprob: -7.884006023406982
    6. '   ' → logprob: -10.134005546569824
    7. ' ' → logprob: -10.509005546569824
    8. ')-(' → logprob: -10.634005546569824
    9. '-)' → logprob: -11.509005546569824
    10. '<|end|>' → logprob: -11.509005546569824

Token 445: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0010030358098447323
    2. '1' → logprob: -7.251003265380859
    3. ' R' → logprob: -8.25100326538086
    4. '(R' → logprob: -10.62600326538086
    5. '(' → logprob: -12.37600326538086
    6. ' ' → logprob: -12.87600326538086
    7. ' (' → logprob: -14.75100326538086
    8. '	R' → logprob: -15.12600326538086
    9. '   ' → logprob: -16.25100326538086
    10. '<|end|>' → logprob: -16.50100326538086

Token 446: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.011446366086602211
    2. '**' → logprob: -4.886446475982666
    3. '<|end|>' → logprob: -5.761446475982666
    4. '```' → logprob: -8.136445999145508
    5. 'R' → logprob: -8.511445999145508
    6. '2' → logprob: -10.261445999145508
    7. '*object' → logprob: -10.261445999145508
    8. ' *' → logprob: -10.636445999145508
    9. '<|end|>' → logprob: -11.011445999145508
    10. '[' → logprob: -11.511445999145508

Token 447: 'R' (ID: 49)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.38770923018455505
    2. 'R' → logprob: -1.1377092599868774
    3. '*' → logprob: -7.137709140777588
    4. '1' → logprob: -11.387709617614746
    5. ' ' → logprob: -11.762709617614746
    6. '```' → logprob: -11.762709617614746
    7. ' R' → logprob: -12.012709617614746
    8. '	R' → logprob: -12.137709617614746
    9. '**' → logprob: -12.887709617614746
    10. '   ' → logprob: -14.387709617614746

Token 448: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05173948407173157
    2. '   ' → logprob: -3.176739454269409
    3. '<|end|>' → logprob: -5.926739692687988
    4. ')' → logprob: -6.176739692687988
    5. ')
' → logprob: -7.426739692687988
    6. '\n' → logprob: -7.426739692687988
    7. '    
' → logprob: -7.676739692687988
    8. '<|end|>' → logprob: -8.051739692687988
    9. 'import' → logprob: -8.301739692687988
    10. '       ' → logprob: -8.301739692687988

Token 449: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03925010934472084
    2. '\n' → logprob: -3.539250135421753
    3. '    
' → logprob: -6.039249897003174
    4. '
' → logprob: -6.164249897003174
    5. '   ' → logprob: -6.164249897003174
    6. ' 
' → logprob: -6.664249897003174
    7. '  
' → logprob: -7.289249897003174
    8. '' → logprob: -8.289250373840332
    9. '       ' → logprob: -9.039250373840332
    10. '        
' → logprob: -9.539250373840332

Token 450: ' disc' (ID: 2960)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.44230127334594727
    2. '   ' → logprob: -2.0673012733459473
    3. 'dis' → logprob: -2.4423012733459473
    4. 'delta' → logprob: -2.6923012733459473
    5. 'disc' (adapté à ' disc') → logprob: -3.1923012733459473
    6. 'D' → logprob: -3.9423012733459473
    7. 'det' → logprob: -4.942301273345947
    8. ' discrimin' → logprob: -5.692301273345947
    9. '       ' → logprob: -6.317301273345947
    10. 'Delta' → logprob: -6.567301273345947

Token 451: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2815600633621216
    2. ' =' → logprob: -1.4065600633621216
    3. 'r' → logprob: -7.906559944152832
    4. ')' → logprob: -11.156559944152832
    5. ' ' → logprob: -12.281559944152832
    6. '   ' → logprob: -12.406559944152832
    7. '=r' → logprob: -12.656559944152832
    8. '**' → logprob: -13.031559944152832
    9. '​' → logprob: -13.531559944152832
    10. '>' → logprob: -13.781559944152832

Token 452: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -9.662937372922897e-05
    2. ' b' → logprob: -9.250096321105957
    3. '   ' → logprob: -14.750096321105957
    4. ' ' → logprob: -17.750097274780273
    5. '	b' → logprob: -19.500097274780273
    6. '  ' → logprob: -22.250097274780273
    7. '(b' → logprob: -23.000097274780273
    8. '    
' → logprob: -23.000097274780273
    9. '
' → logprob: -24.000097274780273
    10. '     ' → logprob: -24.000097274780273

Token 453: '*b' (ID: 72162)
  Prédit: '*b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*b' → logprob: -0.00019662656995933503
    2. '*' → logprob: -9.00019645690918
    3. '**' → logprob: -10.12519645690918
    4. ' *' → logprob: -10.37519645690918
    5. 'b' → logprob: -13.25019645690918
    6. ' ' → logprob: -17.00019645690918
    7. ' b' → logprob: -17.25019645690918
    8. '```' → logprob: -17.87519645690918
    9. '2' → logprob: -18.75019645690918
    10. '***' → logprob: -19.25019645690918

Token 454: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.25193464756011963
    2. '-' → logprob: -1.5019346475601196
    3. '   ' → logprob: -13.376935005187988
    4. ' ' → logprob: -13.501935005187988
    5. '2' → logprob: -14.751935005187988
    6. '<|end|>' → logprob: -15.126935005187988
    7. '```' → logprob: -15.626935005187988
    8. '	' → logprob: -15.626935005187988
    9. ')' → logprob: -15.876935005187988
    10. '-m' → logprob: -16.001934051513672

Token 455: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -17.25002098083496
    4. '(' → logprob: -17.87502098083496
    5. '```' → logprob: -18.62502098083496
    6. '' → logprob: -19.12502098083496
    7. '
' → logprob: -19.37502098083496
    8. '	' → logprob: -19.37502098083496
    9. '۴' → logprob: -19.87502098083496
    10. '44' → logprob: -20.12502098083496

Token 456: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -17.875001907348633
    4. '(' → logprob: -19.625001907348633
    5. '```' → logprob: -20.500001907348633
    6. '' → logprob: -21.500001907348633
    7. '۴' → logprob: -21.875001907348633
    8. '
' → logprob: -22.125001907348633
    9. '44' → logprob: -22.250001907348633
    10. '４' → logprob: -22.250001907348633

Token 457: '*a' (ID: 78448)
  Prédit: '*a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*a' → logprob: -0.31975501775741577
    2. '*' → logprob: -1.3197550773620605
    3. 'a' → logprob: -5.0697550773620605
    4. ' *' → logprob: -8.694754600524902
    5. '**' → logprob: -11.694754600524902
    6. 'ac' → logprob: -12.069754600524902
    7. ' a' → logprob: -13.319754600524902
    8. '.' → logprob: -13.819754600524902
    9. '***' → logprob: -13.944754600524902
    10. '*object' → logprob: -14.194754600524902

Token 458: '*c' (ID: 83421)
  Prédit: '*c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*c' → logprob: -0.002512285253033042
    2. '*' → logprob: -6.127512454986572
    3. '**' → logprob: -8.502511978149414
    4. '*a' → logprob: -9.127511978149414
    5. '   ' → logprob: -12.002511978149414
    6. '***' → logprob: -12.752511978149414
    7. 'c' → logprob: -12.877511978149414
    8. ' *' → logprob: -13.127511978149414
    9. '```' → logprob: -14.502511978149414
    10. '*C' → logprob: -14.627511978149414

Token 459: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25946691632270813
    2. ' 
' → logprob: -3.0094668865203857
    3. '   ' → logprob: -3.2594668865203857
    4. ' ' → logprob: -3.8844668865203857
    5. ')' → logprob: -4.009467124938965
    6. ' if' → logprob: -4.009467124938965
    7. '  
' → logprob: -4.134467124938965
    8. '<|end|>' → logprob: -4.134467124938965
    9. '       ' → logprob: -4.384467124938965
    10. 'if' → logprob: -4.884467124938965

Token 460: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13725653290748596
    2. '<|end|>' → logprob: -2.262256622314453
    3. ' if' → logprob: -5.137256622314453
    4. '       ' → logprob: -5.387256622314453
    5. 'if' → logprob: -5.637256622314453
    6. '   ' → logprob: -5.887256622314453
    7. ' ' → logprob: -6.262256622314453
    8. '<|end|>' → logprob: -6.387256622314453
    9. ' 
' → logprob: -7.262256622314453
    10. '\n' → logprob: -7.387256622314453

Token 461: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3408203423023224
    2. ' ' → logprob: -2.0908203125
    3. '       ' → logprob: -2.4658203125
    4. ' if' → logprob: -4.2158203125
    5. '
' → logprob: -4.3408203125
    6. ' 
' → logprob: -4.5908203125
    7. '\n' → logprob: -4.8408203125
    8. '<|end|>' → logprob: -4.8408203125
    9. '  
' → logprob: -5.0908203125
    10. '    
' → logprob: -5.2158203125

Token 462: ' disc' (ID: 2960)
  Prédit: ' disc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' disc' → logprob: -0.10036248713731766
    2. 'disc' → logprob: -2.350362539291382
    3. '   ' → logprob: -9.600362777709961
    4. ' ' → logprob: -9.725362777709961
    5. '    ' → logprob: -12.225362777709961
    6. 'dis' → logprob: -12.850362777709961
    7. '_disc' → logprob: -12.850362777709961
    8. '     ' → logprob: -12.975362777709961
    9. '  ' → logprob: -12.975362777709961
    10. '<' → logprob: -12.975362777709961

Token 463: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.07893374562263489
    2. '<' → logprob: -2.5789337158203125
    3. ' <=' → logprob: -10.578933715820312
    4. '<=' → logprob: -12.203933715820312
    5. '[' → logprob: -12.328933715820312
    6. ' ' → logprob: -12.578933715820312
    7. ')' → logprob: -13.828933715820312
    8. ' <
' → logprob: -14.328933715820312
    9. ' >=' → logprob: -14.453933715820312
    10. ' >' → logprob: -14.453933715820312

Token 464: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08026878535747528
    2. '-' → logprob: -2.5802688598632812
    3. ' ' → logprob: -6.830268859863281
    4. ' -' → logprob: -8.205268859863281
    5. '-E' → logprob: -10.705268859863281
    6. '   ' → logprob: -14.955268859863281
    7. '-\' → logprob: -14.955268859863281
    8. '-s' → logprob: -16.08026885986328
    9. '\-' → logprob: -16.08026885986328
    10. '-e' → logprob: -16.45526885986328

Token 465: 'EPS' (ID: 82793)
  Prédit: 'EPS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.00774705596268177
    2. '1' → logprob: -4.882747173309326
    3. ' EPS' → logprob: -10.007746696472168
    4. 'EP' → logprob: -10.132746696472168
    5. 'E' → logprob: -10.632746696472168
    6. '0' → logprob: -11.757746696472168
    7. ' ' → logprob: -12.257746696472168
    8. 'ES' → logprob: -12.632746696472168
    9. 'ESP' → logprob: -12.757746696472168
    10. '(E' → logprob: -12.757746696472168

Token 466: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014868208207190037
    2. ':
' → logprob: -4.264868259429932
    3. ' or' → logprob: -8.264867782592773
    4. ':return' → logprob: -8.764867782592773
    5. '):' → logprob: -9.014867782592773
    6. ')' → logprob: -9.264867782592773
    7. '       ' → logprob: -10.139867782592773
    8. '):
' → logprob: -11.639867782592773
    9. ',' → logprob: -11.889867782592773
    10. '<|end|>' → logprob: -12.264867782592773

Token 467: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6846317052841187
    2. '       ' → logprob: -0.9346317052841187
    3. '\n' → logprob: -3.809631824493408
    4. ' 
' → logprob: -4.559631824493408
    5. ' ' → logprob: -4.684631824493408
    6. ' continue' → logprob: -4.934631824493408
    7. '\' → logprob: -4.934631824493408
    8. '<|end|>' → logprob: -5.059631824493408
    9. '        ' → logprob: -5.184631824493408
    10. '
' → logprob: -5.434631824493408

Token 468: ' #' (ID: 1069)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.0536093711853027
    2. '       ' → logprob: -1.6786093711853027
    3. '\n' → logprob: -1.9286093711853027
    4. '           ' → logprob: -2.0536093711853027
    5. ' return' → logprob: -2.3036093711853027
    6. ' ' → logprob: -4.053609371185303
    7. '        
' → logprob: -4.303609371185303
    8. 'return' → logprob: -4.678609371185303
    9. '        ' → logprob: -4.803609371185303
    10. '\' → logprob: -4.803609371185303

Token 469: ' no' (ID: 860)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.10215204954147339
    2. ' break' → logprob: -2.977152109146118
    3. 'return' → logprob: -3.602152109146118
    4. '       ' → logprob: -4.227151870727539
    5. 'break' → logprob: -6.102151870727539
    6. '        ' → logprob: -6.977151870727539
    7. ' raise' → logprob: -7.227151870727539
    8. 'raise' → logprob: -9.602151870727539
    9. ' ' → logprob: -9.727151870727539
    10. ' #' → logprob: -9.852151870727539

Token 470: ' intersection' (ID: 42002)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7209278345108032
    2. ' intersection' → logprob: -1.0959278345108032
    3. ' solution' → logprob: -2.2209277153015137
    4. ' t' → logprob: -4.220927715301514
    5. ' valid' → logprob: -4.345927715301514
    6. ' return' → logprob: -4.470927715301514
    7. 'intersection' → logprob: -4.845927715301514
    8. 't' → logprob: -5.845927715301514
    9. ')' → logprob: -5.845927715301514
    10. ' solutions' → logprob: -5.970927715301514

Token 471: ' circle' (ID: 22005)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3179275393486023
    2. ':
' → logprob: -1.942927598953247
    3. '       ' → logprob: -2.817927598953247
    4. ':' → logprob: -3.067927598953247
    5. '
' → logprob: -4.567927360534668
    6. '           ' → logprob: -5.942927360534668
    7. '  
' → logprob: -6.192927360534668
    8. '\' → logprob: -6.567927360534668
    9. '        
' → logprob: -7.067927360534668
    10. '   ' → logprob: -7.192927360534668

Token 472: ' ahead' (ID: 12207)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.10467273741960526
    2. '
' → logprob: -2.35467267036438
    3. '       ' → logprob: -6.479672908782959
    4. ',' → logprob: -7.604672908782959
    5. '        
' → logprob: -7.729672908782959
    6. ':' → logprob: -7.854672908782959
    7. '<|end|>' → logprob: -8.3546724319458
    8. '    
' → logprob: -8.4796724319458
    9. '  
' → logprob: -8.4796724319458
    10. '   ' → logprob: -8.8546724319458

Token 473: ',' (ID: 11)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3749711513519287
    2. '
' → logprob: -1.4999711513519287
    3. ':' → logprob: -3.3749711513519287
    4. '       ' → logprob: -3.4999711513519287
    5. ':
' → logprob: -4.999971389770508
    6. '        
' → logprob: -5.249971389770508
    7. '<|end|>' → logprob: -5.749971389770508
    8. ')' → logprob: -6.124971389770508
    9. '  
' → logprob: -6.374971389770508
    10. '    
' → logprob: -6.874971389770508

Token 474: ' so' (ID: 813)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04426611214876175
    2. '       ' → logprob: -3.5442662239074707
    3. ' break' → logprob: -5.294266223907471
    4. 'break' → logprob: -5.419266223907471
    5. 'return' → logprob: -6.044266223907471
    6. ' return' → logprob: -6.294266223907471
    7. '		' → logprob: -8.294265747070312
    8. '   ' → logprob: -9.419265747070312
    9. '        
' → logprob: -9.544265747070312
    10. '	break' → logprob: -9.544265747070312

Token 475: ' path' (ID: 3104)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.5813789963722229
    2. 'return' → logprob: -0.8313789963722229
    3. '       ' → logprob: -5.581378936767578
    4. '   ' → logprob: -7.456378936767578
    5. ' break' → logprob: -7.706378936767578
    6. ' return' → logprob: -7.831378936767578
    7. '           ' → logprob: -8.831378936767578
    8. '```' → logprob: -10.081378936767578
    9. '#' → logprob: -10.706378936767578
    10. '	break' → logprob: -11.581378936767578

Token 476: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0489856004714966
    2. '       ' → logprob: -1.7989856004714966
    3. ' ' → logprob: -2.173985481262207
    4. ' continues' → logprob: -2.298985481262207
    5. ' return' → logprob: -2.798985481262207
    6. ' break' → logprob: -3.048985481262207
    7. ' +=' → logprob: -3.798985481262207
    8. 'break' → logprob: -3.923985481262207
    9. '   ' → logprob: -4.298985481262207
    10. '=' → logprob: -4.298985481262207

Token 477: ' line' (ID: 2543)
  Prédit: ' straight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' straight' → logprob: -1.145896553993225
    2. ' None' → logprob: -1.395896553993225
    3. 'None' → logprob: -2.2708964347839355
    4. ' D' → logprob: -2.3958964347839355
    5. ' linear' → logprob: -2.3958964347839355
    6. 'D' → logprob: -3.3958964347839355
    7. 'straight' → logprob: -3.5208964347839355
    8. ' P' → logprob: -3.7708964347839355
    9. 'linear' → logprob: -4.0208964347839355
    10. 'P' → logprob: -4.5208964347839355

Token 478: ' segment' (ID: 14806)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37494948506355286
    2. ' ' → logprob: -1.7499494552612305
    3. '        
' → logprob: -3.3749494552612305
    4. ' return' → logprob: -3.8749494552612305
    5. '
' → logprob: -4.1249494552612305
    6. '        ' → logprob: -4.2499494552612305
    7. '           ' → logprob: -4.8749494552612305
    8. '   ' → logprob: -4.8749494552612305
    9. ' 
' → logprob: -5.1249494552612305
    10. ' break' → logprob: -5.3749494552612305

Token 479: ' "' (ID: 392)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0584668405354023
    2. '           ' → logprob: -3.308466911315918
    3. ' return' → logprob: -4.558466911315918
    4. '   ' → logprob: -6.308466911315918
    5. ',' → logprob: -6.683466911315918
    6. ' ' → logprob: -6.808466911315918
    7. 'return' → logprob: -6.808466911315918
    8. '               ' → logprob: -7.183466911315918
    9. '        ' → logprob: -7.433466911315918
    10. '
' → logprob: -7.933466911315918

Token 480: 'as' (ID: 288)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.0356956720352173
    2. ' until' → logprob: -1.4106956720352173
    3. ' "' → logprob: -1.6606956720352173
    4. ' to' → logprob: -2.9106955528259277
    5. '\n' → logprob: -3.5356955528259277
    6. ' ending' → logprob: -3.6606955528259277
    7. ' "\' → logprob: -4.410695552825928
    8. '"\' → logprob: -4.410695552825928
    9. ' \' → logprob: -4.535695552825928
    10. ' ' → logprob: -4.660695552825928

Token 481: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.3148629069328308
    2. 'is' → logprob: -1.3148629665374756
    3. 'length' → logprob: -7.8148627281188965
    4. 'long' → logprob: -8.189863204956055
    5. '_is' → logprob: -8.689863204956055
    6. '    ' → logprob: -9.314863204956055
    7. 'Is' → logprob: -9.814863204956055
    8. 's' → logprob: -9.939863204956055
    9. ')' → logprob: -10.064863204956055
    10. ' ' → logprob: -10.064863204956055

Token 482: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.08433054387569427
    2. '"
' → logprob: -2.5843305587768555
    3. '\n' → logprob: -5.4593305587768555
    4. ')' → logprob: -8.084330558776855
    5. ' "
' → logprob: -8.834330558776855
    6. ')"' → logprob: -8.834330558776855
    7. ' "' → logprob: -8.834330558776855
    8. '       ' → logprob: -8.959330558776855
    9. '```' → logprob: -9.459330558776855
    10. '"
' → logprob: -9.709330558776855

Token 483: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20677365362644196
    2. '\n' → logprob: -2.0817737579345703
    3. '
' → logprob: -3.5817737579345703
    4. '        
' → logprob: -4.33177375793457
    5. '           ' → logprob: -4.45677375793457
    6. '    
' → logprob: -6.45677375793457
    7. ' 
' → logprob: -6.58177375793457
    8. '   ' → logprob: -6.95677375793457
    9. ',' → logprob: -7.33177375793457
    10. '  
' → logprob: -7.45677375793457

Token 484: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6449645757675171
    2. 'return' → logprob: -1.269964575767517
    3. '           ' → logprob: -2.3949646949768066
    4. ' return' → logprob: -3.1449646949768066
    5. 'break' → logprob: -3.1449646949768066
    6. 't' → logprob: -4.769964694976807
    7. ' break' → logprob: -5.269964694976807
    8. ' t' → logprob: -6.644964694976807
    9. '   ' → logprob: -7.769964694976807
    10. 'if' → logprob: -8.269964218139648

Token 485: ' check' (ID: 2371)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.22957567870616913
    2. 'dist' → logprob: -2.4795756340026855
    3. 'break' → logprob: -3.3545756340026855
    4. '       ' → logprob: -3.3545756340026855
    5. ' return' → logprob: -3.4795756340026855
    6. 't' → logprob: -4.8545756340026855
    7. ' dist' → logprob: -5.3545756340026855
    8. '           ' → logprob: -5.8545756340026855
    9. ' break' → logprob: -6.7295756340026855
    10. 'distance' → logprob: -7.1045756340026855

Token 486: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.12628257274627686
    2. 'if' → logprob: -3.2512826919555664
    3. ' ' → logprob: -3.5012826919555664
    4. '    ' → logprob: -3.7512826919555664
    5. '   ' → logprob: -4.251282691955566
    6. '       ' → logprob: -5.501282691955566
    7. ' for' → logprob: -5.751282691955566
    8. 'for' → logprob: -6.626282691955566
    9. '  ' → logprob: -6.876282691955566
    10. '        ' → logprob: -7.251282691955566

Token 487: ' hits' (ID: 21571)
  Prédit: 'norm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'norm' → logprob: -0.8086678981781006
    2. '0' → logprob: -2.0586678981781006
    3. 'abs' → logprob: -2.5586678981781006
    4. '(' → logprob: -2.5586678981781006
    5. ' norm' → logprob: -2.5586678981781006
    6. 'P' → logprob: -2.6836678981781006
    7. ' P' → logprob: -3.5586678981781006
    8. 'False' → logprob: -3.5586678981781006
    9. 'dist' → logprob: -4.55866813659668
    10. '-' → logprob: -4.68366813659668

Token 488: ' origin' (ID: 12839)
  Prédit: ' P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' P' → logprob: -0.8043411374092102
    2. '(' → logprob: -1.3043410778045654
    3. ' (' → logprob: -1.9293410778045654
    4. 'P' → logprob: -2.8043410778045654
    5. 'abs' → logprob: -4.1793413162231445
    6. ' abs' → logprob: -4.3043413162231445
    7. ' ' → logprob: -4.5543413162231445
    8. ' dist' → logprob: -4.5543413162231445
    9. '(P' → logprob: -4.8043413162231445
    10. ' None' → logprob: -5.8043413162231445

Token 489: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03920035436749458
    2. '        
' → logprob: -4.414200305938721
    3. ' 
' → logprob: -5.164200305938721
    4. '  
' → logprob: -5.539200305938721
    5. '        ' → logprob: -6.039200305938721
    6. '
' → logprob: -6.039200305938721
    7. '   ' → logprob: -6.164200305938721
    8. ' ' → logprob: -6.164200305938721
    9. ' if' → logprob: -6.414200305938721
    10. '           ' → logprob: -6.539200305938721

Token 490: ' line' (ID: 2543)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -1.724862813949585
    2. 'line' → logprob: -2.224862813949585
    3. ' line' → logprob: -2.224862813949585
    4. 'norm' → logprob: -2.474862813949585
    5. ' any' → logprob: -2.599862813949585
    6. 'the' → logprob: -2.724862813949585
    7. 'any' → logprob: -2.974862813949585
    8. ' the' → logprob: -2.974862813949585
    9. ' segment' → logprob: -3.349862813949585
    10. 'P' → logprob: -3.474862813949585

Token 491: ' segment' (ID: 14806)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21210977435112
    2. '           ' → logprob: -2.5871098041534424
    3. '        ' → logprob: -2.9621098041534424
    4. '        
' → logprob: -4.462109565734863
    5. ' ' → logprob: -4.587109565734863
    6. ':' → logprob: -4.712109565734863
    7. '               ' → logprob: -5.087109565734863
    8. '            ' → logprob: -5.212109565734863
    9. '    ' → logprob: -5.712109565734863
    10. ' if' → logprob: -5.962109565734863

Token 492: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1601393222808838
    2. '\n' → logprob: -3.285139322280884
    3. '        
' → logprob: -3.410139322280884
    4. '  
' → logprob: -3.535139322280884
    5. ' 
' → logprob: -4.160139083862305
    6. ' ' → logprob: -4.785139083862305
    7. '           ' → logprob: -5.660139083862305
    8. '        ' → logprob: -5.785139083862305
    9. '    
' → logprob: -5.785139083862305
    10. '
' → logprob: -6.660139083862305

Token 493: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030256023164838552
    2. '        
' → logprob: -7.378025531768799
    3. '        ' → logprob: -7.503025531768799
    4. '           ' → logprob: -8.128026008605957
    5. ')' → logprob: -8.253026008605957
    6. ',' → logprob: -8.503026008605957
    7. '    ' → logprob: -8.753026008605957
    8. '   ' → logprob: -8.878026008605957
    9. '<|end|>' → logprob: -8.878026008605957
    10. ' ' → logprob: -9.003026008605957

Token 494: ' if' (ID: 538)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7616106867790222
    2. 'if' (adapté à ' if') → logprob: -1.511610746383667
    3. '       ' → logprob: -1.511610746383667
    4. ' if' → logprob: -3.136610746383667
    5. ' t' → logprob: -3.761610746383667
    6. 'tx' → logprob: -4.636610507965088
    7. 'x' → logprob: -5.261610507965088
    8. 'd' → logprob: -6.261610507965088
    9. 'dx' → logprob: -6.261610507965088
    10. 's' → logprob: -7.011610507965088

Token 495: ' P' (ID: 398)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.8414737582206726
    2. 'norm' → logprob: -1.5914738178253174
    3. ' abs' → logprob: -1.9664738178253174
    4. ' norm' → logprob: -2.3414738178253174
    5. 'P' → logprob: -3.3414738178253174
    6. ' P' → logprob: -3.4664738178253174
    7. 'dist' → logprob: -3.5914738178253174
    8. 'dot' → logprob: -4.466473579406738
    9. ' dist' → logprob: -4.716473579406738
    10. ' dot' → logprob: -5.216473579406738

Token 496: ' ==' (ID: 951)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5337296724319458
    2. ' ==' → logprob: -1.4087296724319458
    3. '==' → logprob: -1.7837296724319458
    4. '==(' → logprob: -7.158729553222656
    5. ' ' → logprob: -9.158729553222656
    6. ' [' → logprob: -10.033729553222656
    7. '==
' → logprob: -10.158729553222656
    8. '0' → logprob: -10.783729553222656
    9. '(' → logprob: -11.221229553222656
    10. ')' → logprob: -11.346229553222656

Token 497: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.988221684878226e-06
    2. ' (' → logprob: -11.875006675720215
    3. '0' → logprob: -16.87500762939453
    4. ' ' → logprob: -19.25000762939453
    5. '(-' → logprob: -20.37500762939453
    6. '(
' → logprob: -20.50000762939453
    7. 'V' → logprob: -20.87500762939453
    8. '()' → logprob: -21.00000762939453
    9. '   ' → logprob: -21.25000762939453
    10. 'Q' → logprob: -21.37500762939453

Token 498: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003207181114703417
    2. '(' → logprob: -5.753207206726074
    3. ')' → logprob: -10.878207206726074
    4. ' ' → logprob: -11.753207206726074
    5. ' (' → logprob: -13.128207206726074
    6. '),' → logprob: -15.753207206726074
    7. ',' → logprob: -16.253206253051758
    8. ')(' → logprob: -16.253206253051758
    9. '(px' → logprob: -16.378206253051758
    10. 'px' → logprob: -16.503206253051758

Token 499: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.999452772201039e-05
    2. '0' → logprob: -11.250029563903809
    3. ' ,' → logprob: -11.250029563903809
    4. ')' → logprob: -13.250029563903809
    5. '.' → logprob: -14.250029563903809
    6. ',
' → logprob: -14.375029563903809
    7. ' ' → logprob: -15.125029563903809
    8. '<|end|>' → logprob: -15.625029563903809
    9. ',

' → logprob: -16.250030517578125
    10. ',)' → logprob: -16.375030517578125

Token 500: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015860427811276168
    2. ' ' → logprob: -8.750158309936523
    3. ')' → logprob: -17.000158309936523
    4. '  ' → logprob: -19.625158309936523
    5. ' ' → logprob: -20.375158309936523
    6. '   ' → logprob: -21.125158309936523
    7. ',' → logprob: -21.250158309936523
    8. '00' → logprob: -22.125158309936523
    9. '```' → logprob: -22.625158309936523
    10. '۰' → logprob: -22.750158309936523

Token 501: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.15672244131565094
    2. ')' → logprob: -2.1567225456237793
    3. '):
' → logprob: -3.5317225456237793
    4. ' ):' → logprob: -9.906722068786621
    5. '):
' → logprob: -11.281722068786621
    6. ' )' → logprob: -11.656722068786621
    7. '       ' → logprob: -11.656722068786621
    8. ' or' → logprob: -11.906722068786621
    9. '):

' → logprob: -12.031722068786621
    10. ' ):
' → logprob: -12.781722068786621

Token 502: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4155656099319458
    2. '           ' → logprob: -1.5405656099319458
    3. '       ' → logprob: -2.9155654907226562
    4. '
' → logprob: -3.2905654907226562
    5. ':
' → logprob: -3.7905654907226562
    6. ':' → logprob: -5.165565490722656
    7. ' return' → logprob: -6.540565490722656
    8. '\n' → logprob: -7.040565490722656
    9. 'return' → logprob: -7.665565490722656
    10. ':return' → logprob: -7.790565490722656

Token 503: ' return' (ID: 622)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.9834632277488708
    2. '           ' → logprob: -1.1084632873535156
    3. '                   ' → logprob: -2.6084632873535156
    4. '
' → logprob: -2.6084632873535156
    5. '               ' → logprob: -2.9834632873535156
    6. ' return' → logprob: -3.6084632873535156
    7. '\n' → logprob: -4.233463287353516
    8. 'return' (adapté à ' return') → logprob: -4.608463287353516
    9. '            
' → logprob: -4.733463287353516
    10. ' ' → logprob: -5.108463287353516

Token 504: ' dist' (ID: 3601)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12576866149902344
    2. '(' → logprob: -3.1257686614990234
    3. 'True' → logprob: -3.5007686614990234
    4. ' ' → logprob: -4.250768661499023
    5. 'dist' → logprob: -4.625768661499023
    6. '(P' → logprob: -5.750768661499023
    7. ' (' → logprob: -5.750768661499023
    8. 'P' → logprob: -6.125768661499023
    9. '(dist' → logprob: -6.125768661499023
    10. 'D' → logprob: -6.250768661499023

Token 505: '_total' (ID: 23814)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04417772591114044
    2. ' ' → logprob: -3.419177770614624
    3. ')' → logprob: -5.419177532196045
    4. '_
' → logprob: -6.169177532196045
    5. ' 
' → logprob: -6.544177532196045
    6. '_total' → logprob: -6.919177532196045
    7. '+' → logprob: -7.919177532196045
    8. ' _' → logprob: -8.044178009033203
    9. '\' → logprob: -8.794178009033203
    10. '
' → logprob: -8.919178009033203

Token 506: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6880204677581787
    2. '       ' → logprob: -0.8130204677581787
    3. '        
' → logprob: -3.0630204677581787
    4. '\n' → logprob: -6.188020706176758
    5. '		
' → logprob: -6.813020706176758
    6. '' → logprob: -7.188020706176758
    7. '<|end|>' → logprob: -7.438020706176758
    8. '
' → logprob: -7.688020706176758
    9. '	' → logprob: -7.688020706176758
    10. '    
' → logprob: -8.063020706176758

Token 507: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2081601321697235
    2. '       ' → logprob: -2.083160161972046
    3. '        
' → logprob: -3.083160161972046
    4. '\n' → logprob: -4.583159923553467
    5. '  
' → logprob: -6.458159923553467
    6. '		
' → logprob: -6.833159923553467
    7. '    
' → logprob: -6.833159923553467
    8. '
' → logprob: -7.083159923553467
    9. ' 
' → logprob: -7.083159923553467
    10. '' → logprob: -7.958159923553467

Token 508: ' t' (ID: 260)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.49518001079559326
    2. '       ' → logprob: -1.2451800107955933
    3. '        
' → logprob: -2.870180130004883
    4. ' 
' → logprob: -4.245180130004883
    5. '  
' → logprob: -5.120180130004883
    6. '\n' → logprob: -5.495180130004883
    7. '

' → logprob: -5.870180130004883
    8. '    
' → logprob: -5.870180130004883
    9. '\
' → logprob: -5.870180130004883
    10. '' → logprob: -6.245180130004883

Token 509: '0' (ID: 15)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06040491536259651
    2. '=' → logprob: -2.9354050159454346
    3. ' ' → logprob: -5.3104047775268555
    4. '_' → logprob: -8.435404777526855
    5. 's' → logprob: -8.560404777526855
    6. '0' → logprob: -10.185404777526855
    7. '  ' → logprob: -11.060404777526855
    8. '=None' → logprob: -11.185404777526855
    9. ',' → logprob: -11.310404777526855
    10. '_space' → logprob: -11.435404777526855

Token 510: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15175814926624298
    2. '=' → logprob: -2.1517581939697266
    3. ' ' → logprob: -3.7767581939697266
    4. ',' → logprob: -6.651758193969727
    5. ' ,' → logprob: -9.151758193969727
    6. ' >' → logprob: -9.401758193969727
    7. ')' → logprob: -10.026758193969727
    8. '_' → logprob: -10.526758193969727
    9. '>' → logprob: -11.776758193969727
    10. '=None' → logprob: -11.776758193969727

Token 511: ' float' (ID: 4428)
  Prédit: '-P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-P' → logprob: -0.30818307399749756
    2. '-' → logprob: -1.9331830739974976
    3. ' -' → logprob: -2.183183193206787
    4. '-p' → logprob: -5.308183193206787
    5. '(-' → logprob: -7.058183193206787
    6. '-(' → logprob: -7.683183193206787
    7. '-dot' → logprob: -8.308182716369629
    8. '-m' → logprob: -8.558182716369629
    9. '-t' → logprob: -9.183182716369629
    10. '-n' → logprob: -9.808182716369629

Token 512: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.20482826232910156
    2. '('-' → logprob: -1.7048282623291016
    3. '("-' → logprob: -6.454828262329102
    4. '("' → logprob: -6.579828262329102
    5. 'inf' → logprob: -8.829828262329102
    6. ''-' → logprob: -9.204828262329102
    7. '(-' → logprob: -9.204828262329102
    8. '(' → logprob: -10.204828262329102
    9. '(sys' → logprob: -10.829828262329102
    10. ''' → logprob: -11.329828262329102

Token 513: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.02225940302014351
    2. '-inf' → logprob: -4.02225923538208
    3. ''in' → logprob: -5.64725923538208
    4. ''' → logprob: -8.022259712219238
    5. ''-' → logprob: -8.772259712219238
    6. 'INF' → logprob: -10.522259712219238
    7. 'in' → logprob: -11.647259712219238
    8. '-' → logprob: -11.897259712219238
    9. 'Inf' → logprob: -11.897259712219238
    10. '"' → logprob: -12.022259712219238

Token 514: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.0100624169572257e-05
    2. ' )' → logprob: -11.625020027160645
    3. ')
' → logprob: -12.125020027160645
    4. '')' → logprob: -12.625020027160645
    5. '<|end|>' → logprob: -13.750020027160645
    6. '),' → logprob: -15.625020027160645
    7. '")' → logprob: -15.750020027160645
    8. ' ' → logprob: -15.750020027160645
    9. '       ' → logprob: -16.00002098083496
    10. '   ' → logprob: -16.25002098083496

Token 515: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 516: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.22878748178482056
    2. ' else' → logprob: -1.8537874221801758
    3. '       ' → logprob: -3.353787422180176
    4. '
' → logprob: -4.978787422180176
    5. 'elif' → logprob: -5.353787422180176
    6. ' elif' → logprob: -8.603787422180176
    7. '<|end|>' → logprob: -8.728787422180176
    8. '        
' → logprob: -8.728787422180176
    9. '	else' → logprob: -8.853787422180176
    10. ' 
' → logprob: -8.978787422180176

Token 517: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.059904083609580994
    2. ':
' → logprob: -3.059904098510742
    3. '       ' → logprob: -4.934904098510742
    4. ' if' → logprob: -5.559904098510742
    5. '           ' → logprob: -9.559904098510742
    6. ' :' → logprob: -10.309904098510742
    7. 'if' → logprob: -10.309904098510742
    8. '   ' → logprob: -10.684904098510742
    9. '=' → logprob: -11.309904098510742
    10. ' :
' → logprob: -11.559904098510742

Token 518: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0075959800742566586
    2. '   ' → logprob: -6.007596015930176
    3. ' ' → logprob: -6.632596015930176
    4. '0' → logprob: -6.757596015930176
    5. ' s' → logprob: -7.007596015930176
    6. ' sqrt' → logprob: -7.882596015930176
    7. '    ' → logprob: -8.132596015930176
    8. ' import' → logprob: -8.382596015930176
    9. '        ' → logprob: -8.757596015930176
    10. '           ' → logprob: -8.882596015930176

Token 519: ' disc' (ID: 2960)
  Prédit: ' sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sqrt' → logprob: -0.6222452521324158
    2. '       ' → logprob: -2.1222453117370605
    3. ' disc' → logprob: -2.1222453117370605
    4. 'sqrt' → logprob: -2.1222453117370605
    5. 'disc' (adapté à ' disc') → logprob: -3.1222453117370605
    6. ' s' → logprob: -3.9972453117370605
    7. ' sq' → logprob: -4.7472453117370605
    8. ' d' → logprob: -4.9972453117370605
    9. 'd' → logprob: -5.1222453117370605
    10. 's' → logprob: -5.2472453117370605

Token 520: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04889380931854248
    2. ' =' → logprob: -3.048893928527832
    3. '_s' → logprob: -8.298893928527832
    4. 's' → logprob: -10.173893928527832
    5. '**' → logprob: -11.673893928527832
    6. '=s' → logprob: -12.673893928527832
    7. '_=' → logprob: -12.798893928527832
    8. 'sqrt' → logprob: -13.798893928527832
    9. '_root' → logprob: -13.923893928527832
    10. '_' → logprob: -14.548893928527832

Token 521: ' max' (ID: 2999)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.09587029367685318
    2. 'max' → logprob: -3.09587025642395
    3. ' math' → logprob: -3.09587025642395
    4. ' max' → logprob: -6.970870494842529
    5. 'disc' → logprob: -12.470870018005371
    6. '0' → logprob: -13.470870018005371
    7. '(math' → logprob: -13.845870018005371
    8. ' ' → logprob: -13.970870018005371
    9. 'min' → logprob: -15.220870018005371
    10. '   ' → logprob: -15.345870018005371

Token 522: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.062287408858537674
    2. '(d' → logprob: -2.8122873306274414
    3. '0' → logprob: -8.062287330627441
    4. '(dis' → logprob: -13.437287330627441
    5. 'disc' → logprob: -13.812287330627441
    6. '(
' → logprob: -14.187287330627441
    7. 'd' → logprob: -14.562287330627441
    8. ' (' → logprob: -15.187287330627441
    9. '(dist' → logprob: -15.687287330627441
    10. ' ' → logprob: -16.062288284301758

Token 523: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023290663957595825
    2. 'disc' → logprob: -3.7732906341552734
    3. ' ' → logprob: -10.648290634155273
    4. ' disc' → logprob: -11.898290634155273
    5. '(' → logprob: -12.023290634155273
    6. 'discard' → logprob: -13.023290634155273
    7. 'd' → logprob: -13.523290634155273
    8. 'dis' → logprob: -14.148290634155273
    9. 'dist' → logprob: -14.398290634155273
    10. ')' → logprob: -14.773290634155273

Token 524: '.' (ID: 13)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47430628538131714
    2. '.' → logprob: -0.9743062853813171
    3. ',float' → logprob: -9.349306106567383
    4. ',d' → logprob: -9.849306106567383
    5. '.,' → logprob: -10.099306106567383
    6. ' ,' → logprob: -11.224306106567383
    7. ',double' → logprob: -11.849306106567383
    8. ',
' → logprob: -11.974306106567383
    9. ')' → logprob: -12.099306106567383
    10. ',t' → logprob: -12.849306106567383

Token 525: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.5
    3. '```' → logprob: -19.875
    4. ',' → logprob: -20.0
    5. ')' → logprob: -20.625
    6. '.' → logprob: -21.25
    7. '０' → logprob: -22.5
    8. '۰' → logprob: -22.625
    9. '...' → logprob: -23.25
    10. '  ' → logprob: -23.25

Token 526: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0040364875458180904
    2. ')' → logprob: -6.2540364265441895
    3. ' ,' → logprob: -7.1290364265441895
    4. ',
' → logprob: -7.2540364265441895
    5. ',float' → logprob: -8.379036903381348
    6. ',d' → logprob: -9.004036903381348
    7. ',t' → logprob: -9.754036903381348
    8. '**' → logprob: -10.254036903381348
    9. '<|end|>' → logprob: -10.254036903381348
    10. ',b' → logprob: -10.879036903381348

Token 527: ' disc' (ID: 2960)
  Prédit: 'disc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'disc' → logprob: -0.03442862629890442
    2. 'math' → logprob: -3.409428596496582
    3. ' disc' → logprob: -7.659428596496582
    4. ' math' → logprob: -8.159428596496582
    5. '   ' → logprob: -12.284428596496582
    6. ' ' → logprob: -12.409428596496582
    7. ')' → logprob: -12.659428596496582
    8. 'dis' → logprob: -12.909428596496582
    9. 'discard' → logprob: -13.159428596496582
    10. '_disc' → logprob: -13.659428596496582

Token 528: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6998876333236694
    2. ')**' → logprob: -0.9498876333236694
    3. ')
' → logprob: -2.199887752532959
    4. '**' → logprob: -5.324887752532959
    5. '   ' → logprob: -7.449887752532959
    6. '       ' → logprob: -8.5748872756958
    7. ')
' → logprob: -10.3248872756958
    8. ' )' → logprob: -10.6998872756958
    9. ' )
' → logprob: -11.8248872756958
    10. '           ' → logprob: -12.0748872756958

Token 529: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004762261174619198
    2. '           ' → logprob: -6.254762172698975
    3. ' sqrt' → logprob: -6.254762172698975
    4. ' t' → logprob: -8.504762649536133
    5. '   ' → logprob: -8.879762649536133
    6. ' s' → logprob: -8.879762649536133
    7. 'sqrt' → logprob: -9.254762649536133
    8. 'import' → logprob: -9.504762649536133
    9. 't' → logprob: -10.129762649536133
    10. '```' → logprob: -10.379762649536133

Token 530: ' t' (ID: 260)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.09661879390478134
    2. 't' (adapté à ' t') → logprob: -2.971618890762329
    3. 's' → logprob: -3.596618890762329
    4. 'sq' → logprob: -5.34661865234375
    5. '       ' → logprob: -5.47161865234375
    6. 'root' → logprob: -5.84661865234375
    7. ' sqrt' → logprob: -7.59661865234375
    8. '           ' → logprob: -7.59661865234375
    9. '   ' → logprob: -8.72161865234375
    10. 'qrt' → logprob: -9.47161865234375

Token 531: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.170050024986267
    2. ' =' → logprob: -1.170050024986267
    3. '=' → logprob: -1.670050024986267
    4. '0' → logprob: -1.795050024986267
    5. '=(-' → logprob: -4.045050144195557
    6. '_' → logprob: -6.170050144195557
    7. 's' → logprob: -6.420050144195557
    8. '_=' → logprob: -6.545050144195557
    9. '=(' → logprob: -7.045050144195557
    10. '   ' → logprob: -8.920049667358398

Token 532: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4744369089603424
    2. '=' → logprob: -0.97443687915802
    3. '=(-' → logprob: -8.22443675994873
    4. ',' → logprob: -9.47443675994873
    5. ')' → logprob: -11.47443675994873
    6. '=(' → logprob: -13.59943675994873
    7. ')=' → logprob: -14.34943675994873
    8. '=((' → logprob: -14.84943675994873
    9. ' =(' → logprob: -14.84943675994873
    10. '=int' → logprob: -15.34943675994873

Token 533: ' (-' (ID: 21382)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -1.5690089639974758e-05
    2. '((-' → logprob: -11.375015258789062
    3. ' (-' → logprob: -12.875015258789062
    4. '(-(' → logprob: -14.000015258789062
    5. '(' → logprob: -14.500015258789062
    6. '   ' → logprob: -15.875015258789062
    7. '=(-' → logprob: -19.125015258789062
    8. ' ' → logprob: -19.375015258789062
    9. '\' → logprob: -19.375015258789062
    10. '(
' → logprob: -19.875015258789062

Token 534: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -6.611323624383658e-05
    2. ' b' → logprob: -9.625065803527832
    3. '   ' → logprob: -17.25006675720215
    4. '	b' → logprob: -17.50006675720215
    5. ' ' → logprob: -17.62506675720215
    6. ')b' → logprob: -17.87506675720215
    7. '(b' → logprob: -19.12506675720215
    8. 'B' → logprob: -19.75006675720215
    9. '_b' → logprob: -20.00006675720215
    10. '       ' → logprob: -20.37506675720215

Token 535: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5642412900924683
    2. '-' → logprob: -1.1892412900924683
    3. ' +' → logprob: -2.439241409301758
    4. '+' → logprob: -3.314241409301758
    5. '-m' → logprob: -5.939241409301758
    6. ' ' → logprob: -8.314241409301758
    7. '-s' → logprob: -8.564241409301758
    8. '-(' → logprob: -10.814241409301758
    9. '```' → logprob: -10.939241409301758
    10. '-disc' → logprob: -11.314241409301758

Token 536: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.048756323754787445
    2. ' math' → logprob: -3.0487563610076904
    3. '(math' → logprob: -9.17375659942627
    4. '<|end|>' → logprob: -9.67375659942627
    5. ' ' → logprob: -13.67375659942627
    6. ')' → logprob: -14.92375659942627
    7. 'cmath' → logprob: -15.42375659942627
    8. '/math' → logprob: -15.67375659942627
    9. '_math' → logprob: -16.173755645751953
    10. 'Math' → logprob: -16.548755645751953

Token 537: '.sqrt' (ID: 38011)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.4743064045906067
    2. '.sqrt' → logprob: -0.9743064045906067
    3. 's' → logprob: -9.724306106567383
    4. ' sqrt' → logprob: -9.849306106567383
    5. '.' → logprob: -10.099306106567383
    6. 'math' → logprob: -10.224306106567383
    7. '√' → logprob: -11.849306106567383
    8. '.Sqrt' → logprob: -11.849306106567383
    9. '<|end|>' → logprob: -11.974306106567383
    10. 'qrt' → logprob: -12.224306106567383

Token 538: '(d' (ID: 2572)
  Prédit: 'disc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'disc' → logprob: -0.25258907675743103
    2. '(d' → logprob: -1.5025891065597534
    3. '(dis' → logprob: -7.627589225769043
    4. '(' → logprob: -9.127589225769043
    5. ' disc' → logprob: -10.877589225769043
    6. ')' → logprob: -11.127589225769043
    7. 'd' → logprob: -11.252589225769043
    8. '_disc' → logprob: -12.002589225769043
    9. '(
' → logprob: -12.502589225769043
    10. 'dis' → logprob: -13.002589225769043

Token 539: 'isc' (ID: 8605)
  Prédit: 'isc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isc' → logprob: -0.0059302207082509995
    2. 'disc' → logprob: -5.380930423736572
    3. 'isk' → logprob: -8.130929946899414
    4. 'sc' → logprob: -8.255929946899414
    5. ')' → logprob: -8.380929946899414
    6. 'is' → logprob: -9.130929946899414
    7. 't' → logprob: -9.505929946899414
    8. '(' → logprob: -9.630929946899414
    9. '[' → logprob: -10.380929946899414
    10. '_disc' → logprob: -10.380929946899414

Token 540: '))/(' (ID: 181103)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08333922922611237
    2. ')/(' → logprob: -3.208339214324951
    3. ')/' → logprob: -3.708339214324951
    4. ' )' → logprob: -4.208339214324951
    5. '))' → logprob: -9.33333969116211
    6. '))/(' → logprob: -10.08333969116211
    7. '))/' → logprob: -12.83333969116211
    8. '   ' → logprob: -13.08333969116211
    9. 't' → logprob: -13.20833969116211
    10. ' ' → logprob: -13.45833969116211

Token 541: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.717296517104842e-05
    2. '(' → logprob: -10.250057220458984
    3. ' ' → logprob: -10.750057220458984
    4. '   ' → logprob: -15.500057220458984
    5. '  ' → logprob: -18.125057220458984
    6. ' (' → logprob: -18.250057220458984
    7. '.' → logprob: -19.000057220458984
    8. '```' → logprob: -20.000057220458984
    9. '۲' → logprob: -20.375057220458984
    10. '
' → logprob: -20.375057220458984

Token 542: '*a' (ID: 78448)
  Prédit: '*a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*a' → logprob: -0.0003273600013926625
    2. '*' → logprob: -8.500327110290527
    3. 'a' → logprob: -9.000327110290527
    4. ' *' → logprob: -15.250327110290527
    5. '*
' → logprob: -16.125328063964844
    6. ' a' → logprob: -16.500328063964844
    7. '**' → logprob: -17.500328063964844
    8. '*)' → logprob: -17.750328063964844
    9. '*u' → logprob: -18.125328063964844
    10. ')*' → logprob: -18.250328063964844

Token 543: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018162349238991737
    2. ')
' → logprob: -4.018162250518799
    3. ')

' → logprob: -12.643162727355957
    4. ')
' → logprob: -12.768162727355957
    5. ' )' → logprob: -12.768162727355957
    6. ')t' → logprob: -13.768162727355957
    7. '),' → logprob: -14.018162727355957
    8. '       ' → logprob: -14.518162727355957
    9. ' )
' → logprob: -15.268162727355957
    10. '   ' → logprob: -15.768162727355957

Token 544: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 545: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.5272091031074524
    2. 't' (adapté à ' t') → logprob: -0.9022091031074524
    3. '           ' → logprob: -5.902209281921387
    4. ' ' → logprob: -7.527209281921387
    5. '	t' → logprob: -8.402209281921387
    6. ' 
' → logprob: -9.152209281921387
    7. '       ' → logprob: -9.152209281921387
    8. '               ' → logprob: -9.652209281921387
    9. '		' → logprob: -9.902209281921387
    10. '            ' → logprob: -10.027209281921387

Token 546: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -14.125001907348633
    3. ' =' → logprob: -15.250001907348633
    4. '=' → logprob: -15.500001907348633
    5. '₂' → logprob: -16.000001907348633
    6. '
' → logprob: -16.750001907348633
    7. ')' → logprob: -17.000001907348633
    8. '0' → logprob: -17.625001907348633
    9. '۲' → logprob: -17.625001907348633
    10. '1' → logprob: -17.875001907348633

Token 547: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011048170737922192
    2. '=' → logprob: -4.511048316955566
    3. ' ' → logprob: -15.511048316955566
    4. '   ' → logprob: -16.26104736328125
    5. ')' → logprob: -18.01104736328125
    6. ',' → logprob: -18.13604736328125
    7. '    ' → logprob: -18.13604736328125
    8. ' =
' → logprob: -18.38604736328125
    9. '           ' → logprob: -18.88604736328125
    10. ' =(' → logprob: -18.88604736328125

Token 548: ' (-' (ID: 21382)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.0011726059019565582
    2. ' (-' → logprob: -6.7511725425720215
    3. '(' → logprob: -13.12617301940918
    4. ' ' → logprob: -15.50117301940918
    5. '   ' → logprob: -17.00117301940918
    6. ' (' → logprob: -17.87617301940918
    7. '  ' → logprob: -18.37617301940918
    8. '(
' → logprob: -18.62617301940918
    9. '((-' → logprob: -19.00117301940918
    10. '	' → logprob: -19.37617301940918

Token 549: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -2.1008713702030946e-06
    2. ' b' → logprob: -13.375001907348633
    3. '-b' → logprob: -15.125001907348633
    4. '	b' → logprob: -16.750001907348633
    5. ')b' → logprob: -17.562501907348633
    6. '>b' → logprob: -17.625001907348633
    7. '_b' → logprob: -17.812501907348633
    8. 'user' → logprob: -17.812501907348633
    9. '<|end|>' → logprob: -18.000001907348633
    10. '+b' → logprob: -18.125001907348633

Token 550: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.011353016830980778
    2. '-' → logprob: -4.511353015899658
    3. ' +' → logprob: -8.761353492736816
    4. '-b' → logprob: -9.011353492736816
    5. '+' → logprob: -10.636353492736816
    6. ' ' → logprob: -13.636353492736816
    7. 'b' → logprob: -14.636353492736816
    8. ' b' → logprob: -14.886353492736816
    9. '+b' → logprob: -14.886353492736816
    10. ' ' → logprob: -17.1363525390625

Token 551: ' math' (ID: 13324)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.6286106983898208e-05
    2. ' b' → logprob: -11.500016212463379
    3. '-b' → logprob: -12.500016212463379
    4. 'math' → logprob: -13.000016212463379
    5. ' math' → logprob: -16.500017166137695
    6. '(' → logprob: -18.125017166137695
    7. '4' → logprob: -18.250017166137695
    8. '	b' → logprob: -18.250017166137695
    9. ' ' → logprob: -18.375017166137695
    10. '(-' → logprob: -18.500017166137695

Token 552: '.sqrt' (ID: 38011)
  Prédit: '.sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.00015943869948387146
    2. 'sqrt' → logprob: -8.75015926361084
    3. '.' → logprob: -14.25015926361084
    4. '.Sqrt' → logprob: -15.37515926361084
    5. ' sqrt' → logprob: -17.000160217285156
    6. 'qrt' → logprob: -17.500160217285156
    7. '.math' → logprob: -18.000160217285156
    8. 'cmath' → logprob: -19.000160217285156
    9. '√' → logprob: -19.125160217285156
    10. '**' → logprob: -19.250160217285156

Token 553: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.00010247035970678553
    2. 'disc' → logprob: -9.250102043151855
    3. '(dis' → logprob: -12.000102043151855
    4. ' disc' → logprob: -16.625102996826172
    5. '_disc' → logprob: -17.250102996826172
    6. 'd' → logprob: -17.875102996826172
    7. '(dist' → logprob: -18.375102996826172
    8. '(' → logprob: -19.000102996826172
    9. '(
' → logprob: -19.750102996826172
    10. '(div' → logprob: -19.875102996826172

Token 554: 'isc' (ID: 8605)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.044898513704538345
    2. 'disc' → logprob: -3.669898509979248
    3. ')' → logprob: -4.419898509979248
    4. '_disc' → logprob: -6.794898509979248
    5. '1' → logprob: -7.294898509979248
    6. 'is' → logprob: -7.419898509979248
    7. '*a' → logprob: -7.544898509979248
    8. '<|end|>' → logprob: -7.794898509979248
    9. '```' → logprob: -8.044898986816406
    10. 'dis' → logprob: -8.544898986816406

Token 555: '))/(' (ID: 181103)
  Prédit: ')/('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')/(' → logprob: -0.01323235034942627
    2. '))/(' → logprob: -4.388232231140137
    3. ')' → logprob: -7.638232231140137
    4. '(' → logprob: -9.013232231140137
    5. '/(' → logprob: -10.138232231140137
    6. ')(' → logprob: -10.388232231140137
    7. '))' → logprob: -11.638232231140137
    8. 't' → logprob: -11.888232231140137
    9. '/' → logprob: -11.888232231140137
    10. '2' → logprob: -11.888232231140137

Token 556: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3869514465332031
    2. '2' → logprob: -1.1369514465332031
    3. ' ' → logprob: -9.636951446533203
    4. ' (' → logprob: -11.136951446533203
    5. '   ' → logprob: -14.511951446533203
    6. '  ' → logprob: -16.511951446533203
    7. '1' → logprob: -17.761951446533203
    8. '0' → logprob: -18.261951446533203
    9. '(
' → logprob: -18.386951446533203
    10. '     ' → logprob: -18.636951446533203

Token 557: '*a' (ID: 78448)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.60414821645827e-06
    2. ' a' → logprob: -13.000004768371582
    3. '*a' → logprob: -13.000004768371582
    4. '	a' → logprob: -17.125003814697266
    5. ')a' → logprob: -18.375003814697266
    6. 'а' → logprob: -19.125003814697266
    7. ''a' → logprob: -19.125003814697266
    8. '(a' → logprob: -19.375003814697266
    9. '>a' → logprob: -19.500003814697266
    10. '[a' → logprob: -19.500003814697266

Token 558: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002032253658398986
    2. ')
' → logprob: -6.252032279968262
    3. '       ' → logprob: -9.252032279968262
    4. '   ' → logprob: -13.002032279968262
    5. '           ' → logprob: -13.752032279968262
    6. '```' → logprob: -13.752032279968262
    7. ')

' → logprob: -14.002032279968262
    8. '
' → logprob: -15.127032279968262
    9. 'if' → logprob: -15.377032279968262
    10. ' )' → logprob: -15.377032279968262

Token 559: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 560: ' #' (ID: 1069)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.06506118923425674
    2. '       ' → logprob: -3.565061092376709
    3. 'if' → logprob: -3.940061092376709
    4. ' t' → logprob: -4.315061092376709
    5. ' if' → logprob: -6.690061092376709
    6. 'ts' → logprob: -9.065061569213867
    7. 'next' → logprob: -9.065061569213867
    8. '   ' → logprob: -9.565061569213867
    9. '
' → logprob: -9.815061569213867
    10. 's' → logprob: -10.315061569213867

Token 561: ' find' (ID: 1646)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.04398222267627716
    2. ' t' → logprob: -3.9189822673797607
    3. 'if' → logprob: -4.043982028961182
    4. '       ' → logprob: -6.293982028961182
    5. 'ts' → logprob: -6.418982028961182
    6. ' if' → logprob: -6.668982028961182
    7. ' ts' → logprob: -9.16898250579834
    8. '#' → logprob: -9.16898250579834
    9. '           ' → logprob: -9.29398250579834
    10. 'valid' → logprob: -9.29398250579834

Token 562: ' smallest' (ID: 42173)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.06596154719591141
    2. ' t' → logprob: -3.5659615993499756
    3. 'next' → logprob: -3.9409615993499756
    4. ' next' → logprob: -4.8159613609313965
    5. '       ' → logprob: -6.0659613609313965
    6. 'min' → logprob: -6.8159613609313965
    7. '   ' → logprob: -7.0659613609313965
    8. '
' → logprob: -7.1909613609313965
    9. ' smallest' → logprob: -7.3159613609313965
    10. 'the' → logprob: -7.4409613609313965

Token 563: ' positive' (ID: 8841)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.12201900035142899
    2. ' t' → logprob: -2.497019052505493
    3. ' positive' → logprob: -3.622019052505493
    4. 'positive' → logprob: -5.497018814086914
    5. '(t' → logprob: -7.247018814086914
    6. 'token' → logprob: -7.872018814086914
    7. 'pos' → logprob: -7.997018814086914
    8. '_positive' → logprob: -9.747018814086914
    9. 'tk' → logprob: -10.372018814086914
    10. '	t' → logprob: -10.497018814086914

Token 564: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0337689109146595
    2. ' t' → logprob: -3.408768892288208
    3. '(t' → logprob: -10.033768653869629
    4. 'token' → logprob: -10.283768653869629
    5. ' ' → logprob: -11.533768653869629
    6. '_t' → logprob: -11.533768653869629
    7. '	t' → logprob: -12.408768653869629
    8. '`t' → logprob: -12.658768653869629
    9. '```' → logprob: -12.783768653869629
    10. '<|end|>' → logprob: -13.033768653869629

Token 565: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 566: ' circle' (ID: 22005)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.13703171908855438
    2. ' t' → logprob: -2.6370317935943604
    3. ' intersection' → logprob: -3.7620317935943604
    4. 'intersection' → logprob: -4.012031555175781
    5. ' reflection' → logprob: -5.137031555175781
    6. 'reflection' → logprob: -5.387031555175781
    7. 'hit' → logprob: -6.887031555175781
    8. ' the' → logprob: -7.262031555175781
    9. 'the' → logprob: -7.762031555175781
    10. 'collision' → logprob: -7.887031555175781

Token 567: ' intersection' (ID: 42002)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.417771577835083
    2. ' and' → logprob: -2.167771577835083
    3. '<|end|>' → logprob: -2.292771577835083
    4. ' =' → logprob: -3.417771577835083
    5. ',' → logprob: -3.542771577835083
    6. ' that' → logprob: -4.417771339416504
    7. '<|end|>' → logprob: -4.667771339416504
    8. '           ' → logprob: -4.792771339416504
    9. ':' → logprob: -5.167771339416504
    10. '=' → logprob: -5.167771339416504

Token 568: ' >' (ID: 1424)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.9016401767730713
    2. '<|end|>' → logprob: -1.9016401767730713
    3. ',' → logprob: -2.4016401767730713
    4. ')' → logprob: -2.4016401767730713
    5. ' if' → logprob: -2.4016401767730713
    6. ' t' → logprob: -2.4016401767730713
    7. ' =' → logprob: -2.7766401767730713
    8. '       ' → logprob: -2.7766401767730713
    9. '           ' → logprob: -3.0266401767730713
    10. ' and' → logprob: -3.2766401767730713

Token 569: ' EPS' (ID: 66979)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.05873012915253639
    2. ' EPS' → logprob: -2.933730125427246
    3. '1' → logprob: -5.808730125427246
    4. ' ' → logprob: -7.433730125427246
    5. '0' → logprob: -8.558730125427246
    6. 'EP' → logprob: -10.433730125427246
    7. 'E' → logprob: -11.183730125427246
    8. '   ' → logprob: -12.558730125427246
    9. 'EPT' → logprob: -13.808730125427246
    10. 'ESP' → logprob: -13.808730125427246

Token 570: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3649009466171265
    2. '       ' → logprob: -1.3649009466171265
    3. ' and' → logprob: -2.114901065826416
    4. '<|end|>' → logprob: -2.239901065826416
    5. ' if' → logprob: -2.739901065826416
    6. ':' → logprob: -3.114901065826416
    7. ')' → logprob: -3.489901065826416
    8. '           ' → logprob: -3.739901065826416
    9. '[' → logprob: -4.364901065826416
    10. ',' → logprob: -4.864901065826416

Token 571: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7504723072052002
    2. ' ' → logprob: -1.1254723072052002
    3. '           ' → logprob: -2.7504723072052
    4. '<|end|>' → logprob: -3.2504723072052
    5. ' 
' → logprob: -4.250472068786621
    6. ' if' → logprob: -4.500472068786621
    7. ' t' → logprob: -4.500472068786621
    8. '   ' → logprob: -4.500472068786621
    9. ')' → logprob: -4.750472068786621
    10. ' and' → logprob: -5.375472068786621

Token 572: ' ts' (ID: 6601)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.5276662111282349
    2. 't' → logprob: -0.9026662111282349
    3. '       ' → logprob: -6.527666091918945
    4. ' if' → logprob: -6.902666091918945
    5. ' next' → logprob: -7.152666091918945
    6. 'next' → logprob: -7.652666091918945
    7. 'if' → logprob: -7.902666091918945
    8. '           ' → logprob: -8.152666091918945
    9. 'inf' → logprob: -9.902666091918945
    10. 'while' → logprob: -11.652666091918945

Token 573: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5771240592002869
    2. ' =' → logprob: -0.8271240592002869
    3. '=[]' → logprob: -6.827124118804932
    4. '=[' → logprob: -9.577123641967773
    5. '[' → logprob: -11.327123641967773
    6. ' =[' → logprob: -11.327123641967773
    7. '=[]
' → logprob: -13.577123641967773
    8. '[]' → logprob: -13.702123641967773
    9. '=[
' → logprob: -13.827123641967773
    10. ' ' → logprob: -14.077123641967773

Token 574: ' [' (ID: 723)
  Prédit: '[t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.015882911160588264
    2. '[i' → logprob: -4.765882968902588
    3. '[x' → logprob: -5.765882968902588
    4. '[' → logprob: -5.765882968902588
    5. '[s' → logprob: -8.26588249206543
    6. ' [' → logprob: -8.64088249206543
    7. '[]
' → logprob: -8.89088249206543
    8. '[k' → logprob: -9.26588249206543
    9. '[token' → logprob: -9.26588249206543
    10. 'sorted' → logprob: -10.14088249206543

Token 575: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00021486106561496854
    2. ' t' → logprob: -8.500214576721191
    3. 'ti' → logprob: -11.875214576721191
    4. 'tt' → logprob: -13.375214576721191
    5. '_t' → logprob: -13.750214576721191
    6. 'x' → logprob: -13.875214576721191
    7. 'tp' → logprob: -15.125214576721191
    8. '   ' → logprob: -15.500214576721191
    9. '	t' → logprob: -15.875214576721191
    10. '(t' → logprob: -16.375215530395508

Token 576: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.01121688075363636
    2. 'for' → logprob: -4.51121711730957
    3. '1' → logprob: -8.88621711730957
    4. '	for' → logprob: -10.76121711730957
    5. ' ' → logprob: -12.13621711730957
    6. 'i' → logprob: -13.51121711730957
    7. '[' → logprob: -14.01121711730957
    8. ' 
' → logprob: -14.13621711730957
    9. '>' → logprob: -15.13621711730957
    10. '_' → logprob: -15.26121711730957

Token 577: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.024821510538458824
    2. '(t' → logprob: -4.6498212814331055
    3. ' t' → logprob: -4.7748212814331055
    4. '[t' → logprob: -5.1498212814331055
    5. ' (' → logprob: -7.6498212814331055
    6. ' [' → logprob: -8.399821281433105
    7. '[' → logprob: -12.149821281433105
    8. ' ' → logprob: -13.149821281433105
    9. '	t' → logprob: -13.274821281433105
    10. '   ' → logprob: -14.649821281433105

Token 578: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004644076805561781
    2. 'in' → logprob: -5.37964391708374
    3. ' ' → logprob: -11.379644393920898
    4. 't' → logprob: -11.879644393920898
    5. ' t' → logprob: -12.254644393920898
    6. '
' → logprob: -15.129644393920898
    7. 'i' → logprob: -16.1296443939209
    8. ' 
' → logprob: -16.7546443939209
    9. '  ' → logprob: -16.8796443939209
    10. '1' → logprob: -17.1296443939209

Token 579: ' [' (ID: 723)
  Prédit: '[t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.011177030391991138
    2. '(t' → logprob: -4.511177062988281
    3. ' [' → logprob: -9.511177062988281
    4. '[' → logprob: -10.511177062988281
    5. ' (' → logprob: -10.761177062988281
    6. '(' → logprob: -12.136177062988281
    7. '{' → logprob: -15.011177062988281
    8. '[
' → logprob: -15.011177062988281
    9. 't' → logprob: -15.011177062988281
    10. '[T' → logprob: -15.261177062988281

Token 580: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0003055493871215731
    2. ' t' → logprob: -8.12530517578125
    3. '   ' → logprob: -11.75030517578125
    4. '	t' → logprob: -14.12530517578125
    5. ' ' → logprob: -15.00030517578125
    6. '(t' → logprob: -15.50030517578125
    7. '           ' → logprob: -15.87530517578125
    8. '  ' → logprob: -16.50030517578125
    9. '`t' → logprob: -17.12530517578125
    10. '
' → logprob: -17.37530517578125

Token 581: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '0' → logprob: -15.937500953674316
    3. '
' → logprob: -16.25
    4. '   ' → logprob: -16.3125
    5. '```' → logprob: -16.625
    6. '2' → logprob: -16.6875
    7. ',' → logprob: -17.25
    8. ' ' → logprob: -17.3125
    9. 'i' → logprob: -17.4375
    10. ']' → logprob: -17.625

Token 582: ',t' (ID: 26927)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38716739416122437
    2. ',t' → logprob: -1.1371674537658691
    3. ' ,' → logprob: -8.137166976928711
    4. ',
' → logprob: -12.637166976928711
    5. 't' → logprob: -14.887166976928711
    6. ' t' → logprob: -16.63716697692871
    7. '   ' → logprob: -17.01216697692871
    8. ']' → logprob: -17.26216697692871
    9. ' ' → logprob: -17.26216697692871
    10. '1' → logprob: -17.38716697692871

Token 583: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.8624639324116288e-06
    2. '```' → logprob: -15.000001907348633
    3. ' ' → logprob: -15.250001907348633
    4. ']' → logprob: -15.250001907348633
    5. '0' → logprob: -15.375001907348633
    6. '
' → logprob: -15.562501907348633
    7. '])' → logprob: -16.250001907348633
    8. ',' → logprob: -16.687501907348633
    9. '   ' → logprob: -16.812501907348633
    10. '1' → logprob: -16.875001907348633

Token 584: ']' (ID: 60)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1484682708978653
    2. ']' → logprob: -2.023468255996704
    3. 'if' → logprob: -5.273468494415283
    4. ')' → logprob: -8.398468017578125
    5. ' ' → logprob: -8.398468017578125
    6. ' ]' → logprob: -9.148468017578125
    7. '   ' → logprob: -10.773468017578125
    8. ',' → logprob: -10.898468017578125
    9. '    ' → logprob: -11.648468017578125
    10. '       ' → logprob: -11.773468017578125

Token 585: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1269647479057312
    2. 'if' → logprob: -2.126964807510376
    3. ' ' → logprob: -10.251964569091797
    4. ' 
' → logprob: -14.501964569091797
    5. '	if' → logprob: -14.751964569091797
    6. ']' → logprob: -15.876964569091797
    7. '   ' → logprob: -16.251964569091797
    8. '
' → logprob: -16.501964569091797
    9. '  ' → logprob: -16.626964569091797
    10. '    ' → logprob: -16.751964569091797

Token 586: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.38687190413475037
    2. ' t' → logprob: -1.1368719339370728
    3. '	t' → logprob: -14.511872291564941
    4. ' ' → logprob: -15.136872291564941
    5. '(t' → logprob: -16.261871337890625
    6. '   ' → logprob: -16.636871337890625
    7. '_t' → logprob: -17.386871337890625
    8. '
' → logprob: -18.636871337890625
    9. '`t' → logprob: -18.761871337890625
    10. ' ' → logprob: -19.761871337890625

Token 587: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.14273706078529358
    2. ' >' → logprob: -2.0177371501922607
    3. ' ' → logprob: -10.51773738861084
    4. '>=' → logprob: -11.14273738861084
    5. '>
' → logprob: -12.14273738861084
    6. ' >=' → logprob: -12.64273738861084
    7. '>E' → logprob: -12.64273738861084
    8. '&gt' → logprob: -12.89273738861084
    9. '   ' → logprob: -13.89273738861084
    10. '">' → logprob: -14.76773738861084

Token 588: ' EPS' (ID: 66979)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.004205070901662111
    2. ' EPS' → logprob: -5.504205226898193
    3. 'EP' → logprob: -9.629204750061035
    4. '1' → logprob: -11.004204750061035
    5. ' ' → logprob: -11.004204750061035
    6. 'ES' → logprob: -11.379204750061035
    7. 'E' → logprob: -11.504204750061035
    8. '   ' → logprob: -12.379204750061035
    9. 'ESP' → logprob: -14.379204750061035
    10. '  ' → logprob: -15.379204750061035

Token 589: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.023648271337151527
    2. ']
' → logprob: -3.773648262023926
    3. ' ]' → logprob: -8.148648262023926
    4. ']

' → logprob: -9.523648262023926
    5. ' ]
' → logprob: -10.773648262023926
    6. ']
' → logprob: -11.273648262023926
    7. '       ' → logprob: -13.773648262023926
    8. ' and' → logprob: -13.773648262023926
    9. '   ' → logprob: -14.148648262023926
    10. '<|end|>' → logprob: -14.273648262023926

Token 590: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.230164036154747
    2. ' if' → logprob: -2.730164051055908
    3. '<|end|>' → logprob: -2.855164051055908
    4. '
' → logprob: -3.730164051055908
    5. '           ' → logprob: -4.105164051055908
    6. '[' → logprob: -4.230164051055908
    7. ')' → logprob: -4.730164051055908
    8. '<|end|>' → logprob: -5.605164051055908
    9. 'if' → logprob: -5.855164051055908
    10. '        
' → logprob: -6.230164051055908

Token 591: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5334720611572266
    2. ' if' → logprob: -1.4084720611572266
    3. '       ' → logprob: -1.7834720611572266
    4. '           ' → logprob: -8.033472061157227
    5. '   ' → logprob: -8.283472061157227
    6. 't' → logprob: -8.908472061157227
    7. ' ' → logprob: -9.783472061157227
    8. ' t' → logprob: -10.908472061157227
    9. '	if' → logprob: -11.283472061157227
    10. '
' → logprob: -11.408472061157227

Token 592: ' ts' (ID: 6601)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.16325049102306366
    2. ' not' → logprob: -2.28825044631958
    3. 'len' → logprob: -3.03825044631958
    4. 'ts' → logprob: -6.91325044631958
    5. ' len' → logprob: -8.663250923156738
    6. ' ts' → logprob: -9.913250923156738
    7. '   ' → logprob: -10.663250923156738
    8. '!' → logprob: -12.038250923156738
    9. ' ' → logprob: -12.163250923156738
    10. '(not' → logprob: -13.288250923156738

Token 593: ':
' (ID: 734)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3294183015823364
    2. ':' → logprob: -1.3294183015823364
    3. ' ==' → logprob: -4.454418182373047
    4. '<|end|>' → logprob: -6.329418182373047
    5. '=' → logprob: -7.079418182373047
    6. 'and' → logprob: -7.829418182373047
    7. ']==' → logprob: -7.954418182373047
    8. ':
' → logprob: -8.454418182373047
    9. '=[]' → logprob: -8.454418182373047
    10. ')' → logprob: -8.954418182373047

Token 594: '               ' (ID: 506)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.49833962321281433
    2. 't' → logprob: -1.2483396530151367
    3. '           ' → logprob: -2.7483396530151367
    4. '               ' → logprob: -3.6233396530151367
    5. 'n' → logprob: -5.873339653015137
    6. 's' → logprob: -6.248339653015137
    7. ' s' → logprob: -6.373339653015137
    8. ',' → logprob: -6.748339653015137
    9. '[t' → logprob: -6.873339653015137
    10. '```' → logprob: -6.998339653015137

Token 595: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.48632633686065674
    2. ' t' → logprob: -0.9863263368606567
    3. 'min' → logprob: -5.111326217651367
    4. ' min' → logprob: -5.236326217651367
    5. 'm' → logprob: -7.486326217651367
    6. ' m' → logprob: -10.236326217651367
    7. '               ' → logprob: -10.486326217651367
    8. ' ti' → logprob: -10.861326217651367
    9. 'ts' → logprob: -11.111326217651367
    10. ' tt' → logprob: -11.111326217651367

Token 596: '_circle' (ID: 93883)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.553989827632904
    2. ' =' → logprob: -0.928989827632904
    3. 'min' → logprob: -3.928989887237549
    4. '=min' → logprob: -4.803989887237549
    5. 'next' → logprob: -6.928989887237549
    6. '_min' → logprob: -7.303989887237549
    7. '_next' → logprob: -8.30398941040039
    8. '0' → logprob: -8.67898941040039
    9. '[min' → logprob: -9.05398941040039
    10. '[' → logprob: -9.55398941040039

Token 597: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31331783533096313
    2. '=' → logprob: -1.3133177757263184
    3. '=min' → logprob: -9.938318252563477
    4. 'min' → logprob: -12.188318252563477
    5. '<|end|>' → logprob: -13.938318252563477
    6. ' ' → logprob: -14.188318252563477
    7. '=
' → logprob: -15.688318252563477
    8. ' =
' → logprob: -16.063318252563477
    9. ',' → logprob: -16.063318252563477
    10. '.' → logprob: -16.188318252563477

Token 598: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.07891535013914108
    2. ' min' → logprob: -2.5789153575897217
    3. 'ts' → logprob: -10.7039155960083
    4. ' ts' → logprob: -12.8289155960083
    5. 'mini' → logprob: -16.078914642333984
    6. '	min' → logprob: -16.328914642333984
    7. 'mi' → logprob: -17.078914642333984
    8. '(min' → logprob: -17.453914642333984
    9. 'm' → logprob: -17.828914642333984
    10. 'minimum' → logprob: -17.953914642333984

Token 599: '(ts' (ID: 70166)
  Prédit: '(ts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ts' → logprob: -0.0011740362970158458
    2. 'ts' → logprob: -6.751173973083496
    3. '(' → logprob: -12.751173973083496
    4. '	ts' → logprob: -14.751173973083496
    5. '(t' → logprob: -15.251173973083496
    6. ' ts' → logprob: -16.376174926757812
    7. '(
' → logprob: -16.501174926757812
    8. '_ts' → logprob: -18.626174926757812
    9. ' (' → logprob: -18.876174926757812
    10. '([' → logprob: -18.876174926757812

Token 600: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02808525785803795
    2. '<|end|>' → logprob: -3.778085231781006
    3. '<|end|>' → logprob: -5.903085231781006
    4. ')
' → logprob: -6.403085231781006
    5. '               ' → logprob: -8.903085708618164
    6. '}' → logprob: -9.653085708618164
    7. ']' → logprob: -9.778085708618164
    8. '           ' → logprob: -10.278085708618164
    9. '()' → logprob: -10.403085708618164
    10. ' )' → logprob: -10.653085708618164

Token 601: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29738160967826843
    2. '<|end|>' → logprob: -1.7973816394805908
    3. '
' → logprob: -3.172381639480591
    4. '           ' → logprob: -3.422381639480591
    5. '<|end|>' → logprob: -4.922381401062012
    6. ' else' → logprob: -5.922381401062012
    7. '  
' → logprob: -6.547381401062012
    8. '\n' → logprob: -6.797381401062012
    9. ',' → logprob: -7.297381401062012
    10. ')' → logprob: -7.547381401062012

Token 602: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7137752175331116
    2. 'else' (adapté à ' else') → logprob: -1.3387751579284668
    3. ' else' → logprob: -1.4637751579284668
    4. '           ' → logprob: -4.588775157928467
    5. ':' → logprob: -5.463775157928467
    6. '
' → logprob: -7.838775157928467
    7. '   ' → logprob: -7.963775157928467
    8. '=' → logprob: -8.213775634765625
    9. ':
' → logprob: -8.713775634765625
    10. '<|end|>' → logprob: -8.713775634765625

Token 603: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2845745086669922
    2. ':' → logprob: -2.284574508666992
    3. ':
' → logprob: -2.284574508666992
    4. '           ' → logprob: -3.159574508666992
    5. ' :
' → logprob: -7.784574508666992
    6. ' =' → logprob: -8.409574508666992
    7. ' :' → logprob: -8.659574508666992
    8. '=' → logprob: -8.784574508666992
    9. '       ' → logprob: -9.034574508666992
    10. '   ' → logprob: -9.409574508666992

Token 604: '               ' (ID: 506)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5311781764030457
    2. ' t' → logprob: -1.1561782360076904
    3. '               ' → logprob: -2.6561782360076904
    4. '           ' → logprob: -4.281177997589111
    5. 'float' → logprob: -4.656177997589111
    6. ' float' → logprob: -5.781177997589111
    7. '   ' → logprob: -7.906177997589111
    8. ' ' → logprob: -8.65617847442627
    9. '            ' → logprob: -9.78117847442627
    10. '                ' → logprob: -10.03117847442627

Token 605: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.011587428860366344
    2. ' t' → logprob: -4.511587619781494
    3. 'float' → logprob: -7.636587619781494
    4. '   ' → logprob: -10.636587142944336
    5. ' float' → logprob: -10.761587142944336
    6. '           ' → logprob: -12.136587142944336
    7. ' ' → logprob: -13.136587142944336
    8. '               ' → logprob: -13.511587142944336
    9. '	t' → logprob: -14.636587142944336
    10. '       ' → logprob: -14.886587142944336

Token 606: '_circle' (ID: 93883)
  Prédit: '_circle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_circle' → logprob: -0.00033534664544276893
    2. '0' → logprob: -8.375335693359375
    3. '=' → logprob: -10.125335693359375
    4. ' =' → logprob: -10.500335693359375
    5. 'circle' → logprob: -11.000335693359375
    6. '_' → logprob: -11.375335693359375
    7. 't' → logprob: -13.375335693359375
    8. '1' → logprob: -14.250335693359375
    9. 's' → logprob: -14.375335693359375
    10. '=_' → logprob: -14.500335693359375

Token 607: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048593275249004364
    2. ' =' → logprob: -3.048593282699585
    3. '=float' → logprob: -12.173593521118164
    4. '=None' → logprob: -14.298593521118164
    5. '=int' → logprob: -17.798593521118164
    6. '=sys' → logprob: -17.923593521118164
    7. '=}' → logprob: -18.298593521118164
    8. ',' → logprob: -18.298593521118164
    9. '＝' → logprob: -18.798593521118164
    10. '=in' → logprob: -18.798593521118164

Token 608: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -6.802049756515771e-05
    2. 'None' → logprob: -10.125067710876465
    3. ' float' → logprob: -10.500067710876465
    4. 't' → logprob: -15.375067710876465
    5. 'D' → logprob: -16.50006866455078
    6. '0' → logprob: -17.37506866455078
    7. 'f' → logprob: -17.62506866455078
    8. 'flo' → logprob: -17.62506866455078
    9. '1' → logprob: -17.75006866455078
    10. 'inf' → logprob: -18.25006866455078

Token 609: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.023338770493865013
    2. ''in' → logprob: -3.773338794708252
    3. ''' → logprob: -10.023338317871094
    4. ''inc' → logprob: -10.648338317871094
    5. 'inf' → logprob: -10.898338317871094
    6. ''ins' → logprob: -13.773338317871094
    7. ''s' → logprob: -14.023338317871094
    8. ''instant' → logprob: -14.273338317871094
    9. ''information' → logprob: -14.648338317871094
    10. '(in' → logprob: -15.148338317871094

Token 610: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.12804393470287323
    2. ''in' → logprob: -2.1280438899993896
    3. ''ex' → logprob: -7.378044128417969
    4. ''' → logprob: -8.128044128417969
    5. ''inc' → logprob: -9.753044128417969
    6. '('' → logprob: -10.878044128417969
    7. ''ap' → logprob: -11.503044128417969
    8. ''e' → logprob: -11.503044128417969
    9. ''exp' → logprob: -11.503044128417969
    10. ''op' → logprob: -11.503044128417969

Token 611: '')

' (ID: 9735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.054500666621607e-06
    2. ')
' → logprob: -13.25000286102295
    3. ' )' → logprob: -14.62500286102295
    4. '       ' → logprob: -14.87500286102295
    5. '<|end|>' → logprob: -15.50000286102295
    6. ')return' → logprob: -15.75000286102295
    7. '')' → logprob: -16.500003814697266
    8. '),' → logprob: -17.000003814697266
    9. '}' → logprob: -17.125003814697266
    10. ')}' → logprob: -18.500003814697266

Token 612: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007170335855334997
    2. '
' → logprob: -5.7571702003479
    3. '        
' → logprob: -6.2571702003479
    4. '<|end|>' → logprob: -6.5071702003479
    5. '           ' → logprob: -9.132170677185059
    6. '   ' → logprob: -9.132170677185059
    7. ',' → logprob: -9.257170677185059
    8. '  
' → logprob: -10.132170677185059
    9. ')' → logprob: -10.757170677185059
    10. '<|end|>' → logprob: -10.882170677185059

Token 613: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009356159716844559
    2. 't' → logprob: -5.7593560218811035
    3. '        
' → logprob: -6.3843560218811035
    4. ' t' → logprob: -6.5093560218811035
    5. ' if' → logprob: -6.7593560218811035
    6. '
' → logprob: -7.3843560218811035
    7. 'if' → logprob: -7.3843560218811035
    8. '#' (adapté à ' #') → logprob: -8.509356498718262
    9. '   ' → logprob: -8.884356498718262
    10. '           ' → logprob: -10.009356498718262

Token 614: ' check' (ID: 2371)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7053086757659912
    2. 't' → logprob: -0.9553086757659912
    3. '#' → logprob: -2.955308675765991
    4. 'origin' → logprob: -4.08030891418457
    5. 'try' → logprob: -4.58030891418457
    6. 'tx' → logprob: -4.83030891418457
    7. 'for' → logprob: -5.20530891418457
    8. 'ox' → logprob: -5.33030891418457
    9. 'dx' → logprob: -5.45530891418457
    10. 'den' → logprob: -5.58030891418457

Token 615: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.43217092752456665
    2. 'if' → logprob: -1.1821708679199219
    3. 'origin' → logprob: -4.432170867919922
    4. ' origin' → logprob: -4.932170867919922
    5. ' t' → logprob: -5.182170867919922
    6. ' for' → logprob: -5.182170867919922
    7. 't' → logprob: -5.307170867919922
    8. '       ' → logprob: -5.807170867919922
    9. 'for' → logprob: -6.057170867919922
    10. '   ' → logprob: -6.432170867919922

Token 616: ' hits' (ID: 21571)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.6160827279090881
    2. ' P' → logprob: -0.8660827279090881
    3. 't' → logprob: -4.991082668304443
    4. ' (' → logprob: -4.991082668304443
    5. '(P' → logprob: -5.491082668304443
    6. '0' → logprob: -5.491082668304443
    7. '(' → logprob: -5.616082668304443
    8. 'abs' → logprob: -5.866082668304443
    9. ' t' → logprob: -5.991082668304443
    10. ' abs' → logprob: -6.241082668304443

Token 617: ' origin' (ID: 12839)
  Prédit: 'origin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'origin' → logprob: -0.7104899883270264
    2. ' origin' → logprob: -1.0854899883270264
    3. '(' → logprob: -2.3354899883270264
    4. ' (' → logprob: -2.8354899883270264
    5. ' P' → logprob: -5.5854902267456055
    6. '(origin' → logprob: -5.7104902267456055
    7. ' the' → logprob: -6.0854902267456055
    8. 'P' → logprob: -6.4604902267456055
    9. '_origin' → logprob: -6.4604902267456055
    10. 'the' → logprob: -6.4604902267456055

Token 618: ' before' (ID: 2254)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.9795445849886164e-05
    2. '<|end|>' → logprob: -11.375060081481934
    3. ',' → logprob: -11.625060081481934
    4. '        
' → logprob: -11.750060081481934
    5. ' =' → logprob: -12.250060081481934
    6. ' if' → logprob: -12.375060081481934
    7. '=' → logprob: -12.500060081481934
    8. '<|end|>' → logprob: -12.750060081481934
    9. ')' → logprob: -12.875060081481934
    10. '
' → logprob: -13.250060081481934

Token 619: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6682450175285339
    2. ' t' → logprob: -0.7932450175285339
    3. ' the' → logprob: -4.2932448387146
    4. 'the' → logprob: -4.7932448387146
    5. ' next' → logprob: -5.5432448387146
    6. '_circle' → logprob: -6.2932448387146
    7. 'next' → logprob: -6.5432448387146
    8. ' circle' → logprob: -7.0432448387146
    9. 'circle' → logprob: -7.0432448387146
    10. ' any' → logprob: -7.1682448387146

Token 620: '_circle' (ID: 93883)
  Prédit: '_circle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_circle' → logprob: -0.26749667525291443
    2. ' =' → logprob: -2.7674965858459473
    3. '_origin' → logprob: -2.7674965858459473
    4. '0' → logprob: -2.8924965858459473
    5. '=' → logprob: -3.7674965858459473
    6. '_' → logprob: -4.517496585845947
    7. '_line' → logprob: -5.892496585845947
    8. 'circle' → logprob: -5.892496585845947
    9. 'origin' → logprob: -6.142496585845947
    10. '_o' → logprob: -6.142496585845947

Token 621: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002043748099822551
    2. '
' → logprob: -9.875204086303711
    3. ',' → logprob: -10.125204086303711
    4. '        
' → logprob: -10.125204086303711
    5. '<|end|>' → logprob: -10.875204086303711
    6. ' if' → logprob: -11.250204086303711
    7. ':' → logprob: -11.875204086303711
    8. '=' → logprob: -12.125204086303711
    9. '           ' → logprob: -12.375204086303711
    10. 'if' → logprob: -12.750204086303711

Token 622: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002569289645180106
    2. '
' → logprob: -8.875256538391113
    3. '        
' → logprob: -9.875256538391113
    4. '<|end|>' → logprob: -10.000256538391113
    5. ' if' → logprob: -11.625256538391113
    6. ',' → logprob: -12.875256538391113
    7. '   ' → logprob: -13.500256538391113
    8. '           ' → logprob: -13.500256538391113
    9. '  
' → logprob: -14.250256538391113
    10. 'if' → logprob: -14.250256538391113

Token 623: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.22326231002807617
    2. 't' → logprob: -1.9732623100280762
    3. '       ' → logprob: -2.973262310028076
    4. 'x' → logprob: -5.223262310028076
    5. ' if' → logprob: -5.973262310028076
    6. '   ' → logprob: -6.973262310028076
    7. 'for' → logprob: -8.223262786865234
    8. '```' → logprob: -8.598262786865234
    9. 'dx' → logprob: -8.848262786865234
    10. 'tx' → logprob: -8.973262786865234

Token 624: ' solve' (ID: 17722)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11877686530351639
    2. 't' → logprob: -2.368776798248291
    3. 'tx' → logprob: -5.368776798248291
    4. '#' → logprob: -5.743776798248291
    5. 'ox' → logprob: -5.993776798248291
    6. 'den' → logprob: -5.993776798248291
    7. 'dx' → logprob: -6.368776798248291
    8. 'origin' → logprob: -7.243776798248291
    9. '   ' → logprob: -7.743776798248291
    10. ' denom' → logprob: -7.868776798248291

Token 625: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8853623270988464
    2. ' t' → logprob: -1.7603623867034912
    3. ' for' → logprob: -1.7603623867034912
    4. 't' → logprob: -1.8853623867034912
    5. 'if' → logprob: -3.260362386703491
    6. ' if' → logprob: -3.760362386703491
    7. '       ' → logprob: -4.385362148284912
    8. '   ' → logprob: -5.260362148284912
    9. '
' → logprob: -5.760362148284912
    10. '(-' → logprob: -6.635362148284912

Token 626: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.053800083696842194
    2. ' t' → logprob: -3.178800106048584
    3. 'tx' → logprob: -5.428800106048584
    4. '-' → logprob: -5.678800106048584
    5. 'x' → logprob: -7.928800106048584
    6. 'origin' → logprob: -8.053799629211426
    7. '   ' → logprob: -8.178799629211426
    8. 'if' → logprob: -8.428799629211426
    9. ' -' → logprob: -8.553799629211426
    10. '
' → logprob: -8.928799629211426

Token 627: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5621306896209717
    2. 'x' → logprob: -1.1871306896209717
    3. ' =' → logprob: -2.3121306896209717
    4. 'if' → logprob: -4.562130928039551
    5. '       ' → logprob: -5.062130928039551
    6. ' if' → logprob: -5.187130928039551
    7. '_x' → logprob: -7.187130928039551
    8. '=-' → logprob: -7.437130928039551
    9. '0' → logprob: -7.687130928039551
    10. '        ' → logprob: -8.31213092803955

Token 628: ' P' (ID: 398)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.1561757326126099
    2. '-P' → logprob: -1.2811757326126099
    3. 't' → logprob: -2.0311756134033203
    4. ' -' → logprob: -2.2811756134033203
    5. '-t' → logprob: -3.2811756134033203
    6. 'if' → logprob: -3.6561756134033203
    7. 'for' → logprob: -3.9061756134033203
    8. 'Px' → logprob: -4.53117561340332
    9. '-x' → logprob: -4.78117561340332
    10. ' t' → logprob: -4.78117561340332

Token 629: '+t' (ID: 146668)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6138314008712769
    2. ' +' → logprob: -1.4888314008712769
    3. '+' → logprob: -1.8638314008712769
    4. '.x' → logprob: -2.8638315200805664
    5. 'x' → logprob: -4.488831520080566
    6. '_x' → logprob: -5.863831520080566
    7. '+x' → logprob: -5.988831520080566
    8. '0' → logprob: -7.113831520080566
    9. '.' → logprob: -7.738831520080566
    10. ' ' → logprob: -7.988831520080566

Token 630: 'V' (ID: 53)
  Prédit: '*(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*(-' → logprob: -1.0252392292022705
    2. '*' → logprob: -1.4002392292022705
    3. 'mul' → logprob: -1.6502392292022705
    4. '*(' → logprob: -2.7752392292022705
    5. '<|end|>' → logprob: -3.2752392292022705
    6. '_mul' → logprob: -3.7752392292022705
    7. '(' → logprob: -3.9002392292022705
    8. ' mul' → logprob: -4.275238990783691
    9. '(-' → logprob: -4.775238990783691
    10. ' *' → logprob: -5.150238990783691

Token 631: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.59592205286026
    2. 'x' → logprob: -1.8459219932556152
    3. '=' → logprob: -2.2209219932556152
    4. '[' → logprob: -2.4709219932556152
    5. ' ==' → logprob: -3.3459219932556152
    6. ' ' → logprob: -3.4709219932556152
    7. '*' → logprob: -4.970921993255615
    8. '==' → logprob: -5.095921993255615
    9. '_x' → logprob: -5.470921993255615
    10. '(' → logprob: -5.970921993255615

Token 632: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.670925358776003e-05
    2. '0' → logprob: -10.000066757202148
    3. ' (' → logprob: -11.000066757202148
    4. '(-' → logprob: -12.750066757202148
    5. 'mul' → logprob: -14.125066757202148
    6. '(m' → logprob: -15.625066757202148
    7. '((' → logprob: -16.12506675720215
    8. '(None' → logprob: -16.37506675720215
    9. ' ' → logprob: -16.62506675720215
    10. 'multip' → logprob: -16.75006675720215

Token 633: '0' (ID: 15)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.440506407059729e-05
    2. '0' → logprob: -10.50003433227539
    3. ' (' → logprob: -12.25003433227539
    4. '(-' → logprob: -13.37503433227539
    5. 'mul' → logprob: -16.25003433227539
    6. '((' → logprob: -16.25003433227539
    7. ' ' → logprob: -17.25003433227539
    8. 'multip' → logprob: -17.37503433227539
    9. '(None' → logprob: -17.50003433227539
    10. '[' → logprob: -17.62503433227539

Token 634: ' =>' (ID: 871)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22626471519470215
    2. '
' → logprob: -2.601264715194702
    3. '<|end|>' → logprob: -2.726264715194702
    4. ' if' → logprob: -4.476264953613281
    5. '<|end|>' → logprob: -4.476264953613281
    6. ',' → logprob: -4.726264953613281
    7. '   ' → logprob: -5.226264953613281
    8. '[' → logprob: -5.226264953613281
    9. ' ' → logprob: -5.726264953613281
    10. '        ' → logprob: -5.726264953613281

Token 635: ' t' (ID: 260)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.3130434453487396
    2. '-P' → logprob: -2.3130433559417725
    3. '-' → logprob: -2.8130433559417725
    4. ' -' → logprob: -3.4380433559417725
    5. '(' → logprob: -3.6880433559417725
    6. ' (-' → logprob: -4.188043594360352
    7. 'None' → logprob: -4.563043594360352
    8. ' (' → logprob: -4.938043594360352
    9. 't' → logprob: -5.063043594360352
    10. ' t' → logprob: -5.938043594360352

Token 636: '_x' (ID: 7054)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20142970979213715
    2. ' =' → logprob: -1.7014297246932983
    3. '=-' → logprob: -11.45142936706543
    4. '[' → logprob: -13.82642936706543
    5. '*' → logprob: -13.82642936706543
    6. ' ==' → logprob: -14.45142936706543
    7. '==' → logprob: -14.82642936706543
    8. ',' → logprob: -15.07642936706543
    9. '*=' → logprob: -15.07642936706543
    10. ')' → logprob: -15.07642936706543

Token 637: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932641863822937
    2. ' =' → logprob: -0.6932641863822937
    3. '=-' → logprob: -9.19326400756836
    4. ' ' → logprob: -12.81826400756836
    5. '<|end|>' → logprob: -12.81826400756836
    6. ',' → logprob: -13.06826400756836
    7. '=(-' → logprob: -13.19326400756836
    8. '*' → logprob: -13.56826400756836
    9. '=None' → logprob: -14.19326400756836
    10. '[' → logprob: -14.56826400756836

Token 638: ' -' (ID: 533)
  Prédit: '-P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-P' → logprob: -0.021726349368691444
    2. ' -' → logprob: -3.896726369857788
    3. '-' → logprob: -6.896726131439209
    4. '-p' → logprob: -9.271726608276367
    5. '(-' → logprob: -9.646726608276367
    6. '-t' → logprob: -13.146726608276367
    7. '-T' → logprob: -13.146726608276367
    8. '   ' → logprob: -13.396726608276367
    9. '-(' → logprob: -13.521726608276367
    10. '-V' → logprob: -13.521726608276367

Token 639: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0005558936391025782
    2. '(P' → logprob: -7.500555992126465
    3. ' P' → logprob: -13.250555992126465
    4. 'Px' → logprob: -14.125555992126465
    5. '(' → logprob: -15.250555992126465
    6. ' (' → logprob: -16.62555503845215
    7. 'px' → logprob: -17.12555503845215
    8. 'PX' → logprob: -17.50055503845215
    9. '	P' → logprob: -18.37555503845215
    10. '/P' → logprob: -18.87555503845215

Token 640: '_x' (ID: 7054)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -7.3458322731312364e-06
    2. '0' → logprob: -12.375007629394531
    3. '/' → logprob: -13.875007629394531
    4. 'x' → logprob: -14.000007629394531
    5. '```' → logprob: -14.625007629394531
    6. '
' → logprob: -15.625007629394531
    7. '(' → logprob: -15.875007629394531
    8. ' [' → logprob: -16.12500762939453
    9. '[
' → logprob: -16.87500762939453
    10. '`' → logprob: -17.00000762939453

Token 641: '/V' (ID: 41590)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6787735819816589
    2. '/' → logprob: -1.0537736415863037
    3. ' /' → logprob: -2.4287736415863037
    4. '/V' → logprob: -2.9287736415863037
    5. '/P' → logprob: -6.053773403167725
    6. '/v' → logprob: -9.678773880004883
    7. '/[' → logprob: -10.428773880004883
    8. '0' → logprob: -10.678773880004883
    9. '/(' → logprob: -10.678773880004883
    10. 't' → logprob: -11.303773880004883

Token 642: '_x' (ID: 7054)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0014564243610948324
    2. 'x' → logprob: -6.751456260681152
    3. '0' → logprob: -8.376456260681152
    4. '(' → logprob: -10.626456260681152
    5. '_x' → logprob: -10.876456260681152
    6. ' [' → logprob: -12.626456260681152
    7. ' ' → logprob: -12.751456260681152
    8. '_' → logprob: -13.251456260681152
    9. '[
' → logprob: -14.001456260681152
    10. '/' → logprob: -14.126456260681152

Token 643: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06089988723397255
    2. 'if' → logprob: -2.9358999729156494
    3. '[' → logprob: -5.81089973449707
    4. '
' → logprob: -6.31089973449707
    5. '       ' → logprob: -8.18589973449707
    6. ' ' → logprob: -8.31089973449707
    7. ',' → logprob: -8.43589973449707
    8. '   ' → logprob: -8.81089973449707
    9. '	if' → logprob: -9.56089973449707
    10. '0' → logprob: -10.06089973449707

Token 644: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.25336894392967224
    2. 'abs' → logprob: -1.5033689737319946
    3. ' V' → logprob: -7.378368854522705
    4. ' abs' → logprob: -7.503368854522705
    5. 'vx' → logprob: -8.753369331359863
    6. 'VX' → logprob: -9.878369331359863
    7. '(abs' → logprob: -10.378369331359863
    8. '(V' → logprob: -11.878369331359863
    9. 'v' → logprob: -12.003369331359863
    10. ' vx' → logprob: -12.878369331359863

Token 645: '_x' (ID: 7054)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04439748823642731
    2. '_x' → logprob: -3.1693975925445557
    3. 'x' → logprob: -6.669397354125977
    4. '_[' → logprob: -10.044397354125977
    5. '_' → logprob: -11.044397354125977
    6. '!=' → logprob: -11.044397354125977
    7. '[_' → logprob: -11.419397354125977
    8. '```' → logprob: -11.419397354125977
    9. '[
' → logprob: -11.794397354125977
    10. ' !=' → logprob: -12.419397354125977

Token 646: '!=' (ID: 11408)
  Prédit: '!='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.19363386929035187
    2. '[' → logprob: -1.9436339139938354
    3. ' !=' → logprob: -3.443633794784546
    4. '0' → logprob: -7.693634033203125
    5. ' ' → logprob: -8.818634033203125
    6. '[]' → logprob: -9.068634033203125
    7. '==' → logprob: -10.068634033203125
    8. ' is' → logprob: -10.318634033203125
    9. '()!=' → logprob: -10.943634033203125
    10. ' and' → logprob: -11.193634033203125

Token 647: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -18.000139236450195
    4. '
' → logprob: -18.500139236450195
    5. '=' → logprob: -18.625139236450195
    6. 'None' → logprob: -18.875139236450195
    7. '```' → logprob: -19.250139236450195
    8. '  ' → logprob: -19.375139236450195
    9. '۰' → logprob: -19.375139236450195
    10. '	' → logprob: -19.437639236450195

Token 648: ' else' (ID: 1203)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6438121795654297
    2. ' if' → logprob: -1.7688121795654297
    3. 'if' → logprob: -1.8938121795654297
    4. ',' → logprob: -2.5188121795654297
    5. ',
' → logprob: -4.14381217956543
    6. '\n' → logprob: -4.26881217956543
    7. ' and' → logprob: -4.39381217956543
    8. '[' → logprob: -4.89381217956543
    9. '       ' → logprob: -4.89381217956543
    10. 'x' → logprob: -6.01881217956543

Token 649: ' None' (ID: 4662)
  Prédit: '-P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-P' → logprob: -0.4254004657268524
    2. ' -' → logprob: -1.3004004955291748
    3. 'None' → logprob: -3.800400495529175
    4. 'float' → logprob: -3.925400495529175
    5. '-' → logprob: -4.300400257110596
    6. ' None' → logprob: -4.675400257110596
    7. ' float' → logprob: -5.550400257110596
    8. '(-' → logprob: -5.800400257110596
    9. 't' → logprob: -7.550400257110596
    10. '-t' → logprob: -8.050400733947754

Token 650: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2240337133407593
    2. '
' → logprob: -1.3490337133407593
    3. ' if' → logprob: -1.9740337133407593
    4. 'if' → logprob: -1.9740337133407593
    5. ',' → logprob: -2.849033832550049
    6. 'x' → logprob: -3.849033832550049
    7. ')' → logprob: -4.474033832550049
    8. '       ' → logprob: -4.599033832550049
    9. '\n' → logprob: -4.724033832550049
    10. '<|end|>' → logprob: -4.849033832550049

Token 651: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7895330786705017
    2. 'x' → logprob: -0.9145330786705017
    3. 't' → logprob: -3.4145331382751465
    4. '```' → logprob: -3.9145331382751465
    5. ',' → logprob: -4.2895331382751465
    6. '
' → logprob: -4.5395331382751465
    7. '(' → logprob: -4.6645331382751465
    8. '0' → logprob: -4.6645331382751465
    9. '_' → logprob: -4.9145331382751465
    10. ' t' → logprob: -5.4145331382751465

Token 652: ' #' (ID: 1069)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3701736032962799
    2. 'x' → logprob: -1.7451735734939575
    3. '       ' → logprob: -2.995173692703247
    4. ' t' → logprob: -3.620173692703247
    5. '_' → logprob: -4.495173454284668
    6. ' if' → logprob: -4.745173454284668
    7. 'v' → logprob: -4.745173454284668
    8. 'if' → logprob: -4.870173454284668
    9. ' 
' → logprob: -5.620173454284668
    10. '
' → logprob: -6.120173454284668

Token 653: ' same' (ID: 2684)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.07561197876930237
    2. 'if' → logprob: -3.5756120681762695
    3. 'tx' → logprob: -3.7006120681762695
    4. ' if' → logprob: -4.9506120681762695
    5. ' t' → logprob: -5.0756120681762695
    6. 'x' → logprob: -5.9506120681762695
    7. '       ' → logprob: -6.2006120681762695
    8. ' tx' → logprob: -6.5756120681762695
    9. '   ' → logprob: -9.07561206817627
    10. '#' → logprob: -9.32561206817627

Token 654: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2034928798675537
    2. ' for' → logprob: -1.9534928798675537
    3. '_x' → logprob: -3.4534928798675537
    4. 'x' → logprob: -4.703493118286133
    5. ' x' → logprob: -7.953493118286133
    6. '_for' → logprob: -8.078493118286133
    7. ' if' → logprob: -8.203493118286133
    8. '#' → logprob: -8.328493118286133
    9. '
' → logprob: -9.078493118286133
    10. 'if' → logprob: -9.453493118286133

Token 655: ' y' (ID: 342)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.11772636324167252
    2. 't' → logprob: -3.1177263259887695
    3. ' V' → logprob: -3.1177263259887695
    4. ' t' → logprob: -4.7427263259887695
    5. 'P' → logprob: -5.2427263259887695
    6. 'y' → logprob: -5.8677263259887695
    7. '_y' → logprob: -6.1177263259887695
    8. ' P' → logprob: -6.6177263259887695
    9. 'Vy' → logprob: -6.8677263259887695
    10. ' ' → logprob: -7.4927263259887695

Token 656: '.' (ID: 13)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8299309611320496
    2. '_x' → logprob: -0.9549309611320496
    3. '_' → logprob: -2.2049310207366943
    4. '       ' → logprob: -3.8299310207366943
    5. '=' → logprob: -4.329930782318115
    6. '   ' → logprob: -5.204930782318115
    7. '[' → logprob: -5.454930782318115
    8. '(' → logprob: -5.454930782318115
    9. 't' → logprob: -5.829930782318115
    10. '_
' → logprob: -5.954930782318115

Token 657: ' If' (ID: 1843)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7713930010795593
    2. '
' → logprob: -1.396393060684204
    3. ' 
' → logprob: -2.146393060684204
    4. ' t' → logprob: -2.771393060684204
    5. 't' → logprob: -3.146393060684204
    6. ' if' → logprob: -4.396392822265625
    7. 'if' → logprob: -4.521392822265625
    8. '\n' → logprob: -4.646392822265625
    9. '  
' → logprob: -5.271392822265625
    10. 'If' → logprob: -5.271392822265625

Token 658: ' both' (ID: 2973)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.5249534249305725
    2. ' V' → logprob: -0.8999534249305725
    3. ' (' → logprob: -7.024953365325928
    4. '(V' → logprob: -8.024953842163086
    5. '(' → logprob: -8.649953842163086
    6. ' ' → logprob: -9.149953842163086
    7. '   ' → logprob: -9.774953842163086
    8. ' None' → logprob: -10.024953842163086
    9. ' P' → logprob: -10.024953842163086
    10. 'P' → logprob: -10.399953842163086

Token 659: ' exist' (ID: 4310)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.6276569366455078
    2. ' not' → logprob: -1.7526569366455078
    3. ' are' → logprob: -2.502656936645508
    4. 'x' → logprob: -2.502656936645508
    5. 't' → logprob: -2.752656936645508
    6. 'not' → logprob: -3.752656936645508
    7. ' t' → logprob: -3.877656936645508
    8. ' is' → logprob: -5.877656936645508
    9. '_' → logprob: -5.877656936645508
    10. ' components' → logprob: -5.877656936645508

Token 660: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1386646032333374
    2. ',' → logprob: -2.263664722442627
    3. ':' → logprob: -4.388664722442627
    4. 'and' → logprob: -4.513664722442627
    5. ' ,' → logprob: -6.513664722442627
    6. ' :' → logprob: -7.638664722442627
    7. ':
' → logprob: -9.763664245605469
    8. ' or' → logprob: -10.638664245605469
    9. ' ' → logprob: -11.013664245605469
    10. ' for' → logprob: -11.388664245605469

Token 661: ' equal' (ID: 12629)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.33753734827041626
    2. ' abs' → logprob: -1.4625372886657715
    3. 't' → logprob: -3.8375372886657715
    4. ' t' → logprob: -4.2125372886657715
    5. ' math' → logprob: -4.7125372886657715
    6. 'math' → logprob: -4.9625372886657715
    7. 'V' → logprob: -6.9625372886657715
    8. '(abs' → logprob: -7.0875372886657715
    9. ' V' → logprob: -7.7125372886657715
    10. ' are' → logprob: -10.08753776550293

Token 662: ' within' (ID: 3518)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3878673017024994
    2. ' or' → logprob: -1.7628673315048218
    3. 't' → logprob: -3.6378672122955322
    4. '(t' → logprob: -4.012867450714111
    5. ' and' → logprob: -4.137867450714111
    6. ' t' → logprob: -4.262867450714111
    7. 'or' → logprob: -4.387867450714111
    8. ':' → logprob: -4.512867450714111
    9. ' to' → logprob: -4.512867450714111
    10. ' (' → logprob: -4.762867450714111

Token 663: ' EPS' (ID: 66979)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.00440614391118288
    2. '1' → logprob: -6.004405975341797
    3. ' EPS' → logprob: -6.254405975341797
    4. ' ' → logprob: -12.754405975341797
    5. 'eps' → logprob: -12.754405975341797
    6. 'E' → logprob: -14.879405975341797
    7. 'EPT' → logprob: -15.504405975341797
    8. 'EP' → logprob: -16.129405975341797
    9. '   ' → logprob: -16.379405975341797
    10. 'epsilon' → logprob: -17.504405975341797

Token 664: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5308129787445068
    2. ',' → logprob: -1.0308129787445068
    3. ' and' → logprob: -3.405812978744507
    4. ' :' → logprob: -4.155813217163086
    5. ' ,' → logprob: -5.655813217163086
    6. ',
' → logprob: -7.155813217163086
    7. ':
' → logprob: -7.405813217163086
    8. 'and' → logprob: -7.780813217163086
    9. '   ' → logprob: -8.405813217163086
    10. ' or' → logprob: -8.530813217163086

Token 665: ' and' (ID: 326)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5207153558731079
    2. ' t' → logprob: -1.020715355873108
    3. ' if' → logprob: -3.7707152366638184
    4. 'if' → logprob: -4.270715236663818
    5. '           ' → logprob: -5.270715236663818
    6. ' return' → logprob: -7.145715236663818
    7. 'return' → logprob: -7.270715236663818
    8. '       ' → logprob: -7.520715236663818
    9. ' continue' → logprob: -8.270715713500977
    10. '   ' → logprob: -8.520715713500977

Token 666: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.4751608669757843
    2. ' t' → logprob: -0.9751608371734619
    3. '0' → logprob: -7.225161075592041
    4. ' ' → logprob: -8.850160598754883
    5. ' (' → logprob: -9.475160598754883
    6. '   ' → logprob: -10.350160598754883
    7. 'abs' → logprob: -10.725160598754883
    8. '(t' → logprob: -11.225160598754883
    9. '(' → logprob: -11.475160598754883
    10. 'P' → logprob: -11.600160598754883

Token 667: '>' (ID: 29)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.967186689376831
    2. ' >' → logprob: -1.092186689376831
    3. '>' → logprob: -1.592186689376831
    4. '_x' → logprob: -3.217186689376831
    5. ' >=' → logprob: -4.09218692779541
    6. ' <' → logprob: -4.59218692779541
    7. '>=' → logprob: -5.71718692779541
    8. ' _' → logprob: -6.71718692779541
    9. '_candidate' → logprob: -6.84218692779541
    10. ' =' → logprob: -6.96718692779541

Token 668: '0' (ID: 15)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.06959479302167892
    2. '0' → logprob: -3.0695948600769043
    3. ' EPS' → logprob: -3.9445948600769043
    4. ' ' → logprob: -6.569594860076904
    5. 'EP' → logprob: -11.819594383239746
    6. '   ' → logprob: -11.944594383239746
    7. '1' → logprob: -12.194594383239746
    8. '=' → logprob: -13.819594383239746
    9. ' ' → logprob: -14.069594383239746
    10. 'ES' → logprob: -14.194594383239746

Token 669: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.49858665466308594
    2. ':' → logprob: -1.248586654663086
    3. ' and' → logprob: -2.373586654663086
    4. ' :' → logprob: -5.248586654663086
    5. ' ,' → logprob: -5.748586654663086
    6. 'and' → logprob: -6.873586654663086
    7. '=' → logprob: -7.123586654663086
    8. ':
' → logprob: -7.248586654663086
    9. ',
' → logprob: -7.248586654663086
    10. ' =' → logprob: -8.123586654663086

Token 670: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3135610818862915
    2. ' t' → logprob: -1.3135610818862915
    3. 'abs' → logprob: -9.31356143951416
    4. 'dist' → logprob: -9.43856143951416
    5. '   ' → logprob: -10.06356143951416
    6. ' dist' → logprob: -10.68856143951416
    7. ' (' → logprob: -11.06356143951416
    8. ' abs' → logprob: -11.43856143951416
    9. ' ' → logprob: -11.68856143951416
    10. '(t' → logprob: -12.43856143951416

Token 671: '<t' (ID: 141278)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3503848910331726
    2. '_x' → logprob: -1.9753849506378174
    3. '<' → logprob: -2.2253849506378174
    4. '_' → logprob: -4.600384712219238
    5. ' <=' → logprob: -4.725384712219238
    6. '<=' → logprob: -4.975384712219238
    7. ' _' → logprob: -5.225384712219238
    8. 'x' → logprob: -5.350384712219238
    9. '<_' → logprob: -5.475384712219238
    10. '<x' → logprob: -6.350384712219238

Token 672: '_circle' (ID: 93883)
  Prédit: '_circle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_circle' → logprob: -0.00015300170343834907
    2. '_' → logprob: -9.000152587890625
    3. ' _' → logprob: -12.000152587890625
    4. 'circle' → logprob: -12.250152587890625
    5. '```' → logprob: -12.625152587890625
    6. '_c' → logprob: -12.875152587890625
    7. '_origin' → logprob: -13.125152587890625
    8. '_cut' → logprob: -13.875152587890625
    9. ')_' → logprob: -14.125152587890625
    10. '__' → logprob: -14.375152587890625

Token 673: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3622421324253082
    2. ',' → logprob: -1.9872421026229858
    3. ':
' → logprob: -2.1122422218322754
    4. ' and' → logprob: -3.2372422218322754
    5. ',
' → logprob: -6.362242221832275
    6. '=' → logprob: -6.862242221832275
    7. 'and' → logprob: -6.987242221832275
    8. '       ' → logprob: -7.612242221832275
    9. '):
' → logprob: -7.612242221832275
    10. ':

' → logprob: -7.862242221832275

Token 674: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025044360663741827
    2. '        ' → logprob: -7.002504348754883
    3. 'x' → logprob: -7.252504348754883
    4. ' x' → logprob: -9.002504348754883
    5. ' ' → logprob: -9.002504348754883
    6. '        
' → logprob: -9.252504348754883
    7. '           ' → logprob: -9.502504348754883
    8. '```' → logprob: -9.627504348754883
    9. '[' → logprob: -9.877504348754883
    10. ',' → logprob: -10.252504348754883

Token 675: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.408787488937378
    2. ' if' → logprob: -1.658787488937378
    3. 'tx' → logprob: -2.033787488937378
    4. 't' → logprob: -2.158787488937378
    5. 'x' → logprob: -2.158787488937378
    6. ' tx' → logprob: -2.408787488937378
    7. 'if' → logprob: -2.658787488937378
    8. ' t' → logprob: -3.533787488937378
    9. '        ' → logprob: -5.533787727355957
    10. ' x' → logprob: -5.658787727355957

Token 676: ' hits' (ID: 21571)
  Prédit: 'tx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tx' → logprob: -0.5703803896903992
    2. 't' → logprob: -1.695380449295044
    3. 'if' → logprob: -1.820380449295044
    4. ' if' → logprob: -2.945380449295044
    5. 'x' → logprob: -4.195380210876465
    6. ' tx' → logprob: -4.570380210876465
    7. ' t' → logprob: -5.820380210876465
    8. '       ' → logprob: -6.070380210876465
    9. '   ' → logprob: -6.445380210876465
    10. 'V' → logprob: -6.445380210876465

Token 677: ' origin' (ID: 12839)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8068640828132629
    2. '_x' → logprob: -0.8068640828132629
    3. '
' → logprob: -3.056864023208618
    4. 'x' → logprob: -4.056864261627197
    5. '_t' → logprob: -4.806864261627197
    6. ' _' → logprob: -4.806864261627197
    7. '_
' → logprob: -5.306864261627197
    8. ' =' → logprob: -5.931864261627197
    9. '```' → logprob: -6.181864261627197
    10. '  
' → logprob: -6.306864261627197

Token 678: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14823682606220245
    2. '       ' → logprob: -2.8982367515563965
    3. ' 
' → logprob: -4.0232367515563965
    4. 'x' → logprob: -4.3982367515563965
    5. ':' → logprob: -4.7732367515563965
    6. '  
' → logprob: -5.0232367515563965
    7. '   ' → logprob: -5.3982367515563965
    8. '_' → logprob: -5.6482367515563965
    9. ' ' → logprob: -5.6482367515563965
    10. ',' → logprob: -5.6482367515563965

Token 679: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1798393428325653
    2. '
' → logprob: -1.9298393726348877
    3. '        
' → logprob: -5.179839134216309
    4. ' 
' → logprob: -5.304839134216309
    5. '  
' → logprob: -5.429839134216309
    6. ' ' → logprob: -7.304839134216309
    7. '        ' → logprob: -7.554839134216309
    8. '    
' → logprob: -7.679839134216309
    9. '<|end|>' → logprob: -7.679839134216309
    10. ',' → logprob: -7.804839134216309

Token 680: ' tx' (ID: 10400)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24547553062438965
    2. 'if' → logprob: -2.6204755306243896
    3. ' if' → logprob: -2.7454755306243896
    4. 'x' → logprob: -3.3704755306243896
    5. 't' → logprob: -3.7454755306243896
    6. ' vx' → logprob: -5.245475769042969
    7. 'vx' → logprob: -5.495475769042969
    8. 'v' → logprob: -5.495475769042969
    9. ' t' → logprob: -5.995475769042969
    10. '   ' → logprob: -6.620475769042969

Token 681: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740871787071228
    2. ' =' → logprob: -0.9740871787071228
    3. '=None' → logprob: -12.47408676147461
    4. ',' → logprob: -12.72408676147461
    5. ' ' → logprob: -13.22408676147461
    6. '_' → logprob: -14.97408676147461
    7. 'x' → logprob: -15.22408676147461
    8. ')' → logprob: -15.72408676147461
    9. ' =
' → logprob: -16.09908676147461
    10. ' if' → logprob: -16.09908676147461

Token 682: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2625722885131836
    2. '-' → logprob: -2.1375722885131836
    3. '-P' → logprob: -2.6375722885131836
    4. '(-' → logprob: -3.5125722885131836
    5. '-p' → logprob: -6.262572288513184
    6. '-inf' → logprob: -6.387572288513184
    7. '-f' → logprob: -6.762572288513184
    8. ' (-' → logprob: -7.012572288513184
    9. '-In' → logprob: -7.012572288513184
    10. '-INF' → logprob: -7.012572288513184

Token 683: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -1.9361264946837764e-07
    2. 'px' → logprob: -16.5
    3. 'Px' → logprob: -18.25
    4. '(P' → logprob: -18.5
    5. ' P' → logprob: -19.125
    6. 'sys' → logprob: -20.625
    7. 'PX' → logprob: -21.375
    8. 'py' → logprob: -21.5
    9. 'p' → logprob: -22.125
    10. '(' → logprob: -22.25

Token 684: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0280383548888494e-06
    2. 'x' → logprob: -14.500000953674316
    3. '(' → logprob: -14.875000953674316
    4. '```' → logprob: -16.875001907348633
    5. '0' → logprob: -17.250001907348633
    6. ' [' → logprob: -18.375001907348633
    7. '   ' → logprob: -19.125001907348633
    8. '.' → logprob: -19.375001907348633
    9. '()[' → logprob: -19.500001907348633
    10. '
' → logprob: -19.625001907348633

Token 685: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1875571544806007e-05
    2. '[' → logprob: -11.375011444091797
    3. ' ' → logprob: -15.000011444091797
    4. '```' → logprob: -17.875011444091797
    5. 'x' → logprob: -18.000011444091797
    6. '   ' → logprob: -18.375011444091797
    7. '(' → logprob: -18.375011444091797
    8. '۰' → logprob: -19.250011444091797
    9. '０' → logprob: -19.500011444091797
    10. '
' → logprob: -19.750011444091797

Token 686: ']/' (ID: 18500)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.658953070640564
    2. '/V' → logprob: -0.908953070640564
    3. ' /' → logprob: -2.5339531898498535
    4. '/
' → logprob: -9.283952713012695
    5. ')/' → logprob: -9.408952713012695
    6. '/v' → logprob: -10.033952713012695
    7. '/(' → logprob: -10.158952713012695
    8. '/P' → logprob: -10.908952713012695
    9. ')' → logprob: -11.283952713012695
    10. ']/' → logprob: -12.408952713012695

Token 687: 'V' (ID: 53)
  Prédit: 'V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -2.45848218582978e-06
    2. '(V' → logprob: -13.37500286102295
    3. '(' → logprob: -14.87500286102295
    4. ' V' → logprob: -15.25000286102295
    5. 'VX' → logprob: -16.250001907348633
    6. 'vx' → logprob: -16.625001907348633
    7. '	V' → logprob: -18.375001907348633
    8. 'v' → logprob: -20.500001907348633
    9. '[V' → logprob: -20.875001907348633
    10. '.V' → logprob: -21.625001907348633

Token 688: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.029826855286955833
    2. 'x' → logprob: -3.5298268795013428
    3. '0' → logprob: -9.529827117919922
    4. '(' → logprob: -12.529827117919922
    5. '```' → logprob: -16.029827117919922
    6. ' ' → logprob: -17.279827117919922
    7. '   ' → logprob: -18.279827117919922
    8. '{' → logprob: -18.654827117919922
    9. ' [' → logprob: -18.779827117919922
    10. '\[' → logprob: -19.029827117919922

Token 689: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '[' → logprob: -17.5
    4. '   ' → logprob: -20.0
    5. '```' → logprob: -20.125
    6. 'x' → logprob: -20.75
    7. '(' → logprob: -21.875
    8. ']' → logprob: -22.25
    9. '۰' → logprob: -22.375
    10. '０' → logprob: -23.25

Token 690: ']' (ID: 60)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.023380348458886147
    2. 'if' → logprob: -3.7733802795410156
    3. '	if' → logprob: -9.773380279541016
    4. ')' → logprob: -10.273380279541016
    5. ' ' → logprob: -10.398380279541016
    6. '       ' → logprob: -12.648380279541016
    7. '<|end|>' → logprob: -12.648380279541016
    8. '   ' → logprob: -13.023380279541016
    9. ' )' → logprob: -13.773380279541016
    10. '	' → logprob: -14.148380279541016

Token 691: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10024570673704147
    2. 'if' → logprob: -2.350245714187622
    3. ' ' → logprob: -10.975245475769043
    4. '	if' → logprob: -11.225245475769043
    5. '<|end|>' → logprob: -12.350245475769043
    6. '
' → logprob: -13.600245475769043
    7. '       ' → logprob: -14.100245475769043
    8. ' ' → logprob: -14.100245475769043
    9. '   ' → logprob: -14.725245475769043
    10. ' 
' → logprob: -15.350245475769043

Token 692: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.006735860835760832
    2. 'V' → logprob: -5.006735801696777
    3. ' abs' → logprob: -10.881735801696777
    4. '(abs' → logprob: -13.506735801696777
    5. ' V' → logprob: -15.881735801696777
    6. 'VX' → logprob: -16.756736755371094
    7. '(V' → logprob: -17.256736755371094
    8. 'vx' → logprob: -19.006736755371094
    9. 'fabs' → logprob: -19.006736755371094
    10. 'P' → logprob: -19.006736755371094

Token 693: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -9.088346359931165e-07
    2. 'V' → logprob: -14.375000953674316
    3. '(' → logprob: -15.375000953674316
    4. '(P' → logprob: -18.25
    5. '	V' → logprob: -19.125
    6. '(
' → logprob: -19.5
    7. '(v' → logprob: -19.75
    8. ' (' → logprob: -19.875
    9. '<V' → logprob: -20.375
    10. '[V' → logprob: -20.375

Token 694: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. '0' → logprob: -15.625
    3. 'x' → logprob: -16.625
    4. '[
' → logprob: -17.5
    5. '```' → logprob: -18.5
    6. ' [' → logprob: -18.625
    7. '   ' → logprob: -19.125
    8. '(' → logprob: -19.25
    9. '>' → logprob: -19.375
    10. ')>' → logprob: -19.5

Token 695: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.3319124011322856e-05
    2. '[' → logprob: -10.750022888183594
    3. ' ' → logprob: -14.125022888183594
    4. '1' → logprob: -14.625022888183594
    5. '
' → logprob: -15.000022888183594
    6. '   ' → logprob: -15.750022888183594
    7. 'x' → logprob: -16.375022888183594
    8. '```' → logprob: -17.312522888183594
    9. '(' → logprob: -17.687522888183594
    10. '	' → logprob: -18.062522888183594

Token 696: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11033913493156433
    2. ')>' → logprob: -2.3603391647338867
    3. '[' → logprob: -4.610339164733887
    4. ' )' → logprob: -9.985339164733887
    5. '）' → logprob: -10.610339164733887
    6. '])' → logprob: -10.860339164733887
    7. ')>=' → logprob: -11.360339164733887
    8. '>)' → logprob: -11.860339164733887
    9. '>' → logprob: -12.110339164733887
    10. ']>' → logprob: -12.610339164733887

Token 697: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.00020544764993246645
    2. ' >' → logprob: -8.625205039978027
    3. ')>' → logprob: -11.500205039978027
    4. '>=' → logprob: -12.250205039978027
    5. '()>' → logprob: -12.750205039978027
    6. '">' → logprob: -12.750205039978027
    7. '[' → logprob: -13.250205039978027
    8. ']>' → logprob: -14.125205039978027
    9. '```' → logprob: -14.750205039978027
    10. '&gt' → logprob: -15.000205039978027

Token 698: 'EPS' (ID: 82793)
  Prédit: 'EPS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.5760903358459473
    2. '1' → logprob: -0.8260903358459473
    3. ' EPS' → logprob: -9.076089859008789
    4. '0' → logprob: -10.826089859008789
    5. ' ' → logprob: -11.201089859008789
    6. 'EP' → logprob: -13.701089859008789
    7. 'eps' → logprob: -14.826089859008789
    8. 'E' → logprob: -15.201089859008789
    9. '   ' → logprob: -15.201089859008789
    10. 'ES' → logprob: -15.576089859008789

Token 699: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.055257417261600494
    2. 'else' → logprob: -2.9302573204040527
    3. '<|end|>' → logprob: -8.055257797241211
    4. '	else' → logprob: -10.680257797241211
    5. ' ' → logprob: -10.930257797241211
    6. ' and' → logprob: -12.180257797241211
    7. ')' → logprob: -12.180257797241211
    8. '<|end|>' → logprob: -13.180257797241211
    9. 'and' → logprob: -13.680257797241211
    10. ',' → logprob: -14.555257797241211

Token 700: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.023369167000055313
    2. ' None' → logprob: -3.773369073867798
    3. 'float' → logprob: -9.023368835449219
    4. ' float' → logprob: -12.773368835449219
    5. 'none' → logprob: -15.648368835449219
    6. '(None' → logprob: -16.64836883544922
    7. ' ' → logprob: -16.77336883544922
    8. '_None' → logprob: -18.27336883544922
    9. '  ' → logprob: -19.02336883544922
    10. 'N' → logprob: -19.14836883544922

Token 701: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5014936923980713
    2. '<|end|>' → logprob: -1.0014936923980713
    3. '       ' → logprob: -4.876493453979492
    4. ',' → logprob: -5.376493453979492
    5. '<|end|>' → logprob: -5.626493453979492
    6. '  
' → logprob: -6.001493453979492
    7. ',
' → logprob: -6.251493453979492
    8. '    
' → logprob: -7.501493453979492
    9. 'tx' → logprob: -7.626493453979492
    10. 'if' → logprob: -7.626493453979492

Token 702: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0955357626080513
    2. '<|end|>' → logprob: -2.7205357551574707
    3. 'if' → logprob: -5.220535755157471
    4. 'x' → logprob: -5.720535755157471
    5. ' if' → logprob: -5.845535755157471
    6. '\n' → logprob: -6.470535755157471
    7. ' 
' → logprob: -6.470535755157471
    8. '  
' → logprob: -6.595535755157471
    9. '\
' → logprob: -6.595535755157471
    10. 'y' → logprob: -6.845535755157471

Token 703: ' ty' (ID: 10890)
  Prédit: 'ty'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ty' (adapté à ' ty') → logprob: -0.2519378960132599
    2. ' ty' → logprob: -1.5019378662109375
    3. '_ty' → logprob: -11.876937866210938
    4. '.ty' → logprob: -14.126937866210938
    5. '   ' → logprob: -15.376937866210938
    6. 'y' → logprob: -16.126937866210938
    7. '```' → logprob: -16.251937866210938
    8. 'tx' → logprob: -16.376937866210938
    9. ' ' → logprob: -16.501937866210938
    10. 'tdy' → logprob: -16.751937866210938

Token 704: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014164566993713379
    2. ' =' → logprob: -4.264164447784424
    3. '=-' → logprob: -14.139164924621582
    4. '=None' → logprob: -14.764164924621582
    5. '=(-' → logprob: -17.264163970947266
    6. '＝' → logprob: -18.514163970947266
    7. ' ' → logprob: -18.889163970947266
    8. ')' → logprob: -19.139163970947266
    9. ' ' → logprob: -19.514163970947266
    10. '	' → logprob: -19.514163970947266

Token 705: ' -' (ID: 533)
  Prédit: '-P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-P' → logprob: -0.4758619964122772
    2. ' -' → logprob: -0.9758620262145996
    3. '-' → logprob: -6.3508620262146
    4. '-T' → logprob: -10.725861549377441
    5. '-V' → logprob: -11.725861549377441
    6. '-Y' → logprob: -13.350861549377441
    7. '(-' → logprob: -13.350861549377441
    8. '-Q' → logprob: -13.475861549377441
    9. ' ' → logprob: -13.975861549377441
    10. '-П' → logprob: -14.475861549377441

Token 706: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -1.2664456789934775e-06
    2. '(P' → logprob: -14.625000953674316
    3. ' P' → logprob: -14.625000953674316
    4. 'Py' → logprob: -15.875000953674316
    5. 'PY' → logprob: -16.375001907348633
    6. '(' → logprob: -17.375001907348633
    7. '-P' → logprob: -18.500001907348633
    8. 'py' → logprob: -19.125001907348633
    9. '.P' → logprob: -19.875001907348633
    10. '	P' → logprob: -20.250001907348633

Token 707: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '1' → logprob: -17.0
    3. '```' → logprob: -17.5
    4. '[
' → logprob: -19.125
    5. ' [' → logprob: -19.25
    6. '   ' → logprob: -19.375
    7. '0' → logprob: -19.625
    8. '
' → logprob: -20.0
    9. '{' → logprob: -20.0
    10. '(' → logprob: -20.125

Token 708: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01254991628229618
    2. '[' → logprob: -4.387549877166748
    3. '0' → logprob: -10.262550354003906
    4. '(' → logprob: -13.137550354003906
    5. ' ' → logprob: -13.637550354003906
    6. '
' → logprob: -14.012550354003906
    7. '```' → logprob: -14.887550354003906
    8. '   ' → logprob: -15.137550354003906
    9. '{' → logprob: -15.387550354003906
    10. '-' → logprob: -16.012550354003906

Token 709: ']/' (ID: 18500)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.1803084760904312
    2. '/V' → logprob: -1.80530846118927
    3. '[' → logprob: -7.6803083419799805
    4. ']/' → logprob: -9.68030834197998
    5. ' /' → logprob: -10.93030834197998
    6. ')/' → logprob: -11.30530834197998
    7. ']' → logprob: -13.30530834197998
    8. '/[' → logprob: -14.05530834197998
    9. '/
' → logprob: -14.18030834197998
    10. '/P' → logprob: -14.18030834197998

Token 710: 'V' (ID: 53)
  Prédit: 'V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -1.6240566083070007e-06
    2. ' V' → logprob: -13.625001907348633
    3. '(V' → logprob: -15.250001907348633
    4. '[' → logprob: -16.875001907348633
    5. 'abs' → logprob: -17.375001907348633
    6. '[V' → logprob: -17.375001907348633
    7. 'Vy' → logprob: -18.125001907348633
    8. ')' → logprob: -18.125001907348633
    9. ')V' → logprob: -18.250001907348633
    10. '	V' → logprob: -18.625001907348633

Token 711: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.8889261304575484e-06
    2. '0' → logprob: -12.875003814697266
    3. '/' → logprob: -15.000003814697266
    4. '][' → logprob: -15.625003814697266
    5. '```' → logprob: -15.875003814697266
    6. '>' → logprob: -16.125003814697266
    7. 'if' → logprob: -16.250003814697266
    8. '>[' → logprob: -16.375003814697266
    9. ']' → logprob: -17.000003814697266
    10. ']>' → logprob: -17.000003814697266

Token 712: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00024215869780164212
    2. '1' → logprob: -8.375242233276367
    3. '[' → logprob: -11.375242233276367
    4. ' ' → logprob: -16.125242233276367
    5. '```' → logprob: -16.875242233276367
    6. '-' → logprob: -17.625242233276367
    7. '(' → logprob: -17.750242233276367
    8. '   ' → logprob: -18.875242233276367
    9. ']' → logprob: -19.000242233276367
    10. '۰' → logprob: -19.250242233276367

Token 713: ']' (ID: 60)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.09363265335559845
    2. 'if' → logprob: -2.468632698059082
    3. ')' → logprob: -5.468632698059082
    4. ']' → logprob: -8.718632698059082
    5. ' ' → logprob: -8.718632698059082
    6. '>' → logprob: -9.593632698059082
    7. '[' → logprob: -11.218632698059082
    8. '=' → logprob: -11.218632698059082
    9. '<|end|>' → logprob: -11.843632698059082
    10. '/' → logprob: -12.093632698059082

Token 714: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07890025526285172
    2. 'if' → logprob: -2.5789003372192383
    3. '=' → logprob: -11.578900337219238
    4. ' =' → logprob: -14.578900337219238
    5. ' ' → logprob: -15.203900337219238
    6. '	if' → logprob: -15.453900337219238
    7. '<|end|>' → logprob: -16.703899383544922
    8. ';if' → logprob: -17.078899383544922
    9. 'If' → logprob: -17.203899383544922
    10. ' ' → logprob: -17.203899383544922

Token 715: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -6.217951886355877e-05
    2. ' abs' → logprob: -10.000061988830566
    3. '(abs' → logprob: -11.000061988830566
    4. '(' → logprob: -19.875062942504883
    5. ' (' → logprob: -20.625062942504883
    6. '   ' → logprob: -21.125062942504883
    7. '.abs' → logprob: -21.375062942504883
    8. ' ' → logprob: -21.750062942504883
    9. 'Abs' → logprob: -23.125062942504883
    10. ' ' → logprob: -23.125062942504883

Token 716: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: 0.0
    2. '(' → logprob: -17.375
    3. 'V' → logprob: -17.5
    4. '<V' → logprob: -19.75
    5. '[V' → logprob: -19.75
    6. ' (' → logprob: -20.375
    7. '((' → logprob: -20.375
    8. '(v' → logprob: -20.75
    9. '(abs' → logprob: -20.75
    10. '```' → logprob: -21.0

Token 717: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -14.875
    3. ')' → logprob: -17.375
    4. ' [' → logprob: -17.75
    5. '```' → logprob: -18.0
    6. '{' → logprob: -18.5
    7. '>' → logprob: -19.0
    8. '1' → logprob: -19.375
    9. '[V' → logprob: -19.375
    10. '[user' → logprob: -19.625

Token 718: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06681648641824722
    2. '[' → logprob: -2.941816568374634
    3. '1' → logprob: -4.441816329956055
    4. '(' → logprob: -9.441816329956055
    5. ']' → logprob: -13.066816329956055
    6. '```' → logprob: -13.066816329956055
    7. ' ' → logprob: -13.816816329956055
    8. ')' → logprob: -13.941816329956055
    9. '
' → logprob: -14.316816329956055
    10. '-' → logprob: -14.441816329956055

Token 719: '])' (ID: 4636)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06671099364757538
    2. ')>' → logprob: -2.816710948944092
    3. ')' → logprob: -5.441710948944092
    4. '])' → logprob: -8.19171142578125
    5. '0' → logprob: -9.81671142578125
    6. ']>' → logprob: -10.06671142578125
    7. ')[' → logprob: -11.81671142578125
    8. '）' → logprob: -12.31671142578125
    9. ')">' → logprob: -12.94171142578125
    10. ' )' → logprob: -13.44171142578125

Token 720: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -8.458980300929397e-05
    2. '>E' → logprob: -9.50008487701416
    3. ')>' → logprob: -12.75008487701416
    4. ' >' → logprob: -13.37508487701416
    5. '>P' → logprob: -13.62508487701416
    6. '()>' → logprob: -14.50008487701416
    7. ']>' → logprob: -14.75008487701416
    8. '[' → logprob: -15.00008487701416
    9. '>ID' → logprob: -15.25008487701416
    10. '>User' → logprob: -15.37508487701416

Token 721: 'EPS' (ID: 82793)
  Prédit: 'EPS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -4.036524842376821e-05
    2. ' EPS' → logprob: -10.375040054321289
    3. '0' → logprob: -12.375040054321289
    4. 'ESP' → logprob: -13.625040054321289
    5. ' ' → logprob: -14.375040054321289
    6. 'eps' → logprob: -14.500040054321289
    7. 'V' → logprob: -14.500040054321289
    8. '1' → logprob: -15.125040054321289
    9. '   ' → logprob: -15.250040054321289
    10. '>' → logprob: -15.500040054321289

Token 722: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.293589323759079
    2. ' else' → logprob: -1.4185893535614014
    3. ' is' → logprob: -4.543589115142822
    4. ' if' → logprob: -7.293589115142822
    5. 'if' → logprob: -7.418589115142822
    6. '!=' → logprob: -8.91858959197998
    7. '=' → logprob: -9.54358959197998
    8. ' ' → logprob: -9.54358959197998
    9. 'is' → logprob: -10.04358959197998
    10. ' ' → logprob: -10.79358959197998

Token 723: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.004611695650964975
    2. ' None' → logprob: -5.629611492156982
    3. 'abs' → logprob: -7.004611492156982
    4. 'tx' → logprob: -10.00461196899414
    5. 'EPS' → logprob: -10.87961196899414
    6. '-E' → logprob: -11.37961196899414
    7. '0' → logprob: -11.62961196899414
    8. '-' → logprob: -11.87961196899414
    9. ' ' → logprob: -12.12961196899414
    10. ' abs' → logprob: -13.50461196899414

Token 724: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01702139712870121
    2. ' if' → logprob: -5.017021179199219
    3. '<|end|>' → logprob: -5.642021179199219
    4. 'if' → logprob: -5.892021179199219
    5. '	' → logprob: -6.517021179199219
    6. ' ' → logprob: -7.142021179199219
    7. '
' → logprob: -8.392021179199219
    8. '        
' → logprob: -8.517021179199219
    9. '   ' → logprob: -8.642021179199219
    10. '	if' → logprob: -8.767021179199219

Token 725: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.045705560594797134
    2. '
' → logprob: -3.920705556869507
    3. ' if' → logprob: -4.670705795288086
    4. 'if' → logprob: -4.920705795288086
    5. '        
' → logprob: -6.295705795288086
    6. '\n' → logprob: -6.420705795288086
    7. '\' → logprob: -6.545705795288086
    8. '<|end|>' → logprob: -6.795705795288086
    9. '\
' → logprob: -7.920705795288086
    10. '   ' → logprob: -8.170705795288086

Token 726: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4405486285686493
    2. ' if' → logprob: -1.3155486583709717
    3. '       ' → logprob: -2.4405486583709717
    4. 'hit' → logprob: -8.06554889678955
    5. 'hits' → logprob: -8.44054889678955
    6. 't' → logprob: -8.69054889678955
    7. ' hit' → logprob: -9.69054889678955
    8. '   ' → logprob: -10.06554889678955
    9. ' t' → logprob: -10.94054889678955
    10. 'next' → logprob: -11.56554889678955

Token 727: ' tx' (ID: 10400)
  Prédit: '(tx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tx' → logprob: -0.3793094754219055
    2. 'tx' → logprob: -2.0043094158172607
    3. ' (' → logprob: -2.2543094158172607
    4. '((' → logprob: -3.3793094158172607
    5. ' tx' → logprob: -3.6293094158172607
    6. '(' → logprob: -4.87930965423584
    7. ' ((' → logprob: -5.50430965423584
    8. '   ' → logprob: -6.37930965423584
    9. '(
' → logprob: -7.00430965423584
    10. ' ' → logprob: -8.00430965423584

Token 728: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.005328150931745768
    2. 'is' → logprob: -5.255328178405762
    3. '!=' → logprob: -9.630328178405762
    4. ' ' → logprob: -11.380328178405762
    5. ' !=' → logprob: -11.380328178405762
    6. ')' → logprob: -13.380328178405762
    7. '	is' → logprob: -14.505328178405762
    8. 'if' → logprob: -14.755328178405762
    9. '[' → logprob: -14.755328178405762
    10. 'not' → logprob: -14.755328178405762

Token 729: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.011077405884861946
    2. ' not' → logprob: -4.511077404022217
    3. 'Not' → logprob: -11.011077880859375
    4. 'None' → logprob: -12.136077880859375
    5. '	not' → logprob: -13.386077880859375
    6. '```' → logprob: -13.761077880859375
    7. '!=' → logprob: -14.011077880859375
    8. 'n' → logprob: -14.386077880859375
    9. '[' → logprob: -14.511077880859375
    10. '``' → logprob: -14.636077880859375

Token 730: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0009289718000218272
    2. 'not' → logprob: -7.00092887878418
    3. ' None' → logprob: -11.00092887878418
    4. 'none' → logprob: -14.62592887878418
    5. 'Not' → logprob: -15.37592887878418
    6. '=None' → logprob: -16.50092887878418
    7. '_None' → logprob: -17.00092887878418
    8. ' not' → logprob: -17.50092887878418
    9. '(None' → logprob: -17.62592887878418
    10. '0' → logprob: -19.12592887878418

Token 731: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6931831240653992
    2. 'and' → logprob: -0.6931831240653992
    3. '           ' → logprob: -11.193182945251465
    4. '       ' → logprob: -11.568182945251465
    5. '   ' → logprob: -12.568182945251465
    6. '          ' → logprob: -12.943182945251465
    7. '        ' → logprob: -13.068182945251465
    8. '	and' → logprob: -13.818182945251465
    9. '    ' → logprob: -14.068182945251465
    10. ' ' → logprob: -14.193182945251465

Token 732: ' ty' (ID: 10890)
  Prédit: 'ty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ty' → logprob: -0.0003001888981088996
    2. ' ty' → logprob: -8.375300407409668
    3. 'abs' → logprob: -9.625300407409668
    4. ' abs' → logprob: -13.000300407409668
    5. '(' → logprob: -15.375300407409668
    6. 'typ' → logprob: -15.500300407409668
    7. '   ' → logprob: -15.750300407409668
    8. ' ' → logprob: -15.750300407409668
    9. '0' → logprob: -16.12529945373535
    10. '  ' → logprob: -16.37529945373535

Token 733: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.16025438904762268
    2. 'is' → logprob: -1.9102543592453003
    3. ')' → logprob: -11.03525447845459
    4. 'not' → logprob: -11.66025447845459
    5. ' ' → logprob: -12.78525447845459
    6. ')is' → logprob: -14.28525447845459
    7. '	is' → logprob: -14.78525447845459
    8. 'None' → logprob: -14.78525447845459
    9. ' not' → logprob: -15.16025447845459
    10. '[' → logprob: -16.160253524780273

Token 734: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.026431970298290253
    2. ' not' → logprob: -3.6514320373535156
    3. 'None' → logprob: -9.026432037353516
    4. 'Not' → logprob: -12.651432037353516
    5. '   ' → logprob: -12.901432037353516
    6. ' ' → logprob: -13.776432037353516
    7. '	not' → logprob: -13.776432037353516
    8. ' None' → logprob: -14.651432037353516
    9. '    ' → logprob: -15.026432037353516
    10. '0' → logprob: -15.401432037353516

Token 735: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.004381586331874132
    2. 'not' → logprob: -5.5043816566467285
    3. ' None' → logprob: -8.12938117980957
    4. ' not' → logprob: -12.25438117980957
    5. 'Not' → logprob: -13.25438117980957
    6. '=None' → logprob: -14.62938117980957
    7. '(None' → logprob: -14.62938117980957
    8. 'none' → logprob: -14.75438117980957
    9. '_None' → logprob: -15.75438117980957
    10. '   ' → logprob: -16.37938117980957

Token 736: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04310344159603119
    2. 'and' → logprob: -3.1681034564971924
    3. '       ' → logprob: -9.918103218078613
    4. '	and' → logprob: -10.668103218078613
    5. '   ' → logprob: -11.543103218078613
    6. '           ' → logprob: -12.043103218078613
    7. ' ' → logprob: -12.293103218078613
    8. '        ' → logprob: -12.918103218078613
    9. ':' → logprob: -13.168103218078613
    10. ',' → logprob: -13.418103218078613

Token 737: '           ' (ID: 352)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.02442651055753231
    2. '       ' → logprob: -3.8994264602661133
    3. 'and' → logprob: -5.774426460266113
    4. '           ' → logprob: -7.399426460266113
    5. '   ' → logprob: -9.524426460266113
    6. ':' → logprob: -10.274426460266113
    7. ':
' → logprob: -10.774426460266113
    8. '        ' → logprob: -12.149426460266113
    9. '```' → logprob: -12.149426460266113
    10. ' ' → logprob: -12.399426460266113

Token 738: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8081316351890564
    2. 'if' (adapté à ' if') → logprob: -0.9331316351890564
    3. 'abs' → logprob: -2.183131694793701
    4. ' abs' → logprob: -3.058131694793701
    5. '       ' → logprob: -7.183131694793701
    6. '   ' → logprob: -8.558131217956543
    7. '(abs' → logprob: -8.933131217956543
    8. '
' → logprob: -9.433131217956543
    9. '           ' → logprob: -9.433131217956543
    10. ' ' → logprob: -10.308131217956543

Token 739: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.38689208030700684
    2. ' abs' → logprob: -1.1368920803070068
    3. '   ' → logprob: -11.011892318725586
    4. ' ' → logprob: -13.136892318725586
    5. '(abs' → logprob: -13.386892318725586
    6. '  ' → logprob: -15.261892318725586
    7. 'math' → logprob: -15.386892318725586
    8. ' math' → logprob: -15.636892318725586
    9. 'tx' → logprob: -16.386892318725586
    10. '    ' → logprob: -16.761892318725586

Token 740: '(tx' (ID: 54989)
  Prédit: '(tx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tx' → logprob: -2.339278580620885e-06
    2. '(' → logprob: -13.125001907348633
    3. 'tx' → logprob: -15.375001907348633
    4. '(t' → logprob: -19.250001907348633
    5. '	tx' → logprob: -19.250001907348633
    6. '(tex' → logprob: -19.250001907348633
    7. '(tc' → logprob: -19.625001907348633
    8. '(
' → logprob: -20.000001907348633
    9. '(dx' → logprob: -20.125001907348633
    10. '((' → logprob: -20.250001907348633

Token 741: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1269393414258957
    2. ' -' → logprob: -2.126939296722412
    3. '-t' → logprob: -11.50193977355957
    4. ' ' → logprob: -14.75193977355957
    5. '-ti' → logprob: -15.25193977355957
    6. '-T' → logprob: -15.62693977355957
    7. '-
' → logprob: -16.12693977355957
    8. '-tv' → logprob: -16.62693977355957
    9. '	' → logprob: -17.25193977355957
    10. '```' → logprob: -17.75193977355957

Token 742: ' ty' (ID: 10890)
  Prédit: 'ty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ty' → logprob: -3.547789674485102e-05
    2. ' ty' → logprob: -10.250035285949707
    3. '_ty' → logprob: -20.625036239624023
    4. '[' → logprob: -21.125036239624023
    5. 'tx' → logprob: -21.500036239624023
    6. 'Ty' → logprob: -21.750036239624023
    7. ' ' → logprob: -21.750036239624023
    8. '.ty' → logprob: -21.875036239624023
    9. 'typ' → logprob: -22.000036239624023
    10. 'try' → logprob: -23.000036239624023

Token 743: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004099058452993631
    2. ')<' → logprob: -5.629098892211914
    3. ')<=' → logprob: -7.629098892211914
    4. ' )' → logprob: -11.504098892211914
    5. ')>' → logprob: -13.754098892211914
    6. '   ' → logprob: -14.004098892211914
    7. '）' → logprob: -15.754098892211914
    8. ' ' → logprob: -15.879098892211914
    9. ')>=' → logprob: -16.254098892211914
    10. '<' → logprob: -16.379098892211914

Token 744: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.009145566262304783
    2. ' <' → logprob: -4.884145736694336
    3. '<E' → logprob: -6.759145736694336
    4. '<=' → logprob: -8.134145736694336
    5. ' <=' → logprob: -10.509145736694336
    6. ')' → logprob: -10.759145736694336
    7. ')<' → logprob: -11.384145736694336
    8. '<T' → logprob: -12.009145736694336
    9. ')<=' → logprob: -12.759145736694336
    10. '()<' → logprob: -13.384145736694336

Token 745: ' ' (ID: 220)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.009617370553314686
    2. ' EPS' → logprob: -5.009617328643799
    3. '1' → logprob: -5.884617328643799
    4. ' ' → logprob: -9.259617805480957
    5. '   ' → logprob: -12.009617805480957
    6. 'EP' → logprob: -12.259617805480957
    7. 'E' → logprob: -13.009617805480957
    8. '10' → logprob: -13.009617805480957
    9. 'ES' → logprob: -13.384617805480957
    10. 'eps' → logprob: -13.384617805480957

Token 746: '1' (ID: 16)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.018696721643209457
    2. '1' → logprob: -4.0186967849731445
    3. ' EPS' → logprob: -7.6436967849731445
    4. ' ' → logprob: -10.893696784973145
    5. '10' → logprob: -11.268696784973145
    6. 'E' → logprob: -11.518696784973145
    7. 'eps' → logprob: -11.893696784973145
    8. 'EP' → logprob: -12.143696784973145
    9. 'max' → logprob: -12.768696784973145
    10. '   ' → logprob: -12.768696784973145

Token 747: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.8789383830153383e-05
    2. 'E' → logprob: -11.375019073486328
    3. '*' → logprob: -12.625019073486328
    4. '-' → logprob: -13.000019073486328
    5. '1' → logprob: -14.500019073486328
    6. '-E' → logprob: -14.500019073486328
    7. '```' → logprob: -15.125019073486328
    8. '
' → logprob: -16.125019073486328
    9. 'EPS' → logprob: -16.250019073486328
    10. '0' → logprob: -16.500019073486328

Token 748: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.822646693966817e-06
    2. '12' → logprob: -12.500007629394531
    3. '9' → logprob: -13.500007629394531
    4. '14' → logprob: -14.375007629394531
    5. '8' → logprob: -14.500007629394531
    6. '10' → logprob: -14.875007629394531
    7. ' -' → logprob: -15.375007629394531
    8. '13' → logprob: -15.500007629394531
    9. '7' → logprob: -15.625007629394531
    10. '```' → logprob: -15.875007629394531

Token 749: '13' (ID: 1311)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5779466032981873
    2. '12' → logprob: -1.577946662902832
    3. '9' → logprob: -1.952946662902832
    4. '8' → logprob: -2.827946662902832
    5. '13' → logprob: -3.952946662902832
    6. '14' → logprob: -4.952946662902832
    7. '11' → logprob: -5.452946662902832
    8. '7' → logprob: -7.077946662902832
    9. '6' → logprob: -9.327946662902832
    10. '15' → logprob: -10.640446662902832

Token 750: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03049308992922306
    2. 'and' → logprob: -3.5304930210113525
    3. '           ' → logprob: -7.280493259429932
    4. '       ' → logprob: -10.780492782592773
    5. '	and' → logprob: -11.030492782592773
    6. '               ' → logprob: -11.530492782592773
    7. '   ' → logprob: -13.405492782592773
    8. ' ' → logprob: -13.655492782592773
    9. '          ' → logprob: -13.905492782592773
    10. '            ' → logprob: -14.405492782592773

Token 751: ' tx' (ID: 10400)
  Prédit: 'tx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tx' → logprob: -0.5396663546562195
    2. 'EPS' → logprob: -0.9146663546562195
    3. '0' → logprob: -4.539666175842285
    4. ' tx' → logprob: -5.789666175842285
    5. ' EPS' → logprob: -6.789666175842285
    6. '(tx' → logprob: -7.539666175842285
    7. 'TX' → logprob: -7.539666175842285
    8. ' ' → logprob: -8.664666175842285
    9. 'eps' → logprob: -9.664666175842285
    10. '   ' → logprob: -9.789666175842285

Token 752: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.42874252796173096
    2. '>' → logprob: -1.053742527961731
    3. ' ' → logprob: -10.678742408752441
    4. '&gt' → logprob: -12.178742408752441
    5. ' >=' → logprob: -12.678742408752441
    6. '>=' → logprob: -12.928742408752441
    7. '   ' → logprob: -13.803742408752441
    8. ' is' → logprob: -13.928742408752441
    9. '<|end|>' → logprob: -13.928742408752441
    10. '*' → logprob: -14.678742408752441

Token 753: ' EPS' (ID: 66979)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.0029788874089717865
    2. '0' → logprob: -5.877978801727295
    3. ' EPS' → logprob: -9.002979278564453
    4. '1' → logprob: -10.377979278564453
    5. ' ' → logprob: -11.627979278564453
    6. 'EP' → logprob: -12.252979278564453
    7. 'eps' → logprob: -13.252979278564453
    8. '-' → logprob: -13.877979278564453
    9. '   ' → logprob: -14.127979278564453
    10. '-E' → logprob: -14.127979278564453

Token 754: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.014059260487556458
    2. 'and' → logprob: -4.389059066772461
    3. '           ' → logprob: -6.764059066772461
    4. ':' → logprob: -8.639059066772461
    5. '       ' → logprob: -9.264059066772461
    6. '               ' → logprob: -10.389059066772461
    7. '	and' → logprob: -10.389059066772461
    8. ':
' → logprob: -10.639059066772461
    9. '<|end|>' → logprob: -11.764059066772461
    10. '          ' → logprob: -12.139059066772461

Token 755: ' tx' (ID: 10400)
  Prédit: 'tx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tx' → logprob: -0.011033558286726475
    2. 'dist' → logprob: -4.761033535003662
    3. ' tx' → logprob: -6.261033535003662
    4. ' dist' → logprob: -8.51103401184082
    5. '(tx' → logprob: -8.63603401184082
    6. '   ' → logprob: -9.76103401184082
    7. '	tx' → logprob: -10.76103401184082
    8. 'txt' → logprob: -11.51103401184082
    9. 'tex' → logprob: -12.51103401184082
    10. 't' → logprob: -12.51103401184082

Token 756: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.03368430957198143
    2. '<' → logprob: -3.408684253692627
    3. ' ' → logprob: -10.783684730529785
    4. '<|end|>' → logprob: -12.033684730529785
    5. ' +' → logprob: -12.658684730529785
    6. ' and' → logprob: -13.033684730529785
    7. 'and' → logprob: -13.533684730529785
    8. '+' → logprob: -13.533684730529785
    9. ' <
' → logprob: -14.033684730529785
    10. ' ' → logprob: -14.033684730529785

Token 757: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0040269880555570126
    2. ' t' → logprob: -5.879026889801025
    3. 'min' → logprob: -7.254026889801025
    4. 'D' → logprob: -7.629026889801025
    5. ' min' → logprob: -11.504027366638184
    6. '1' → logprob: -12.504027366638184
    7. '(t' → logprob: -12.629027366638184
    8. ' D' → logprob: -13.254027366638184
    9. 'dist' → logprob: -13.379027366638184
    10. ' ' → logprob: -13.504027366638184

Token 758: '_circle' (ID: 93883)
  Prédit: '_circle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_circle' → logprob: -4.0126840758603066e-05
    2. 'circle' → logprob: -10.125040054321289
    3. '_' → logprob: -17.50004005432129
    4. 'ircle' → logprob: -18.12504005432129
    5. '_c' → logprob: -18.12504005432129
    6. '(circle' → logprob: -18.75004005432129
    7. 'Circle' → logprob: -19.00004005432129
    8. ' circle' → logprob: -19.37504005432129
    9. '_curve' → logprob: -19.50004005432129
    10. '_cube' → logprob: -19.62504005432129

Token 759: '+' (ID: 10)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24730809032917023
    2. ':
' → logprob: -2.1223080158233643
    3. ' and' → logprob: -2.3723080158233643
    4. '           ' → logprob: -5.997308254241943
    5. '       ' → logprob: -6.372308254241943
    6. 'and' → logprob: -6.497308254241943
    7. '):' → logprob: -8.497307777404785
    8. '):
' → logprob: -9.997307777404785
    9. ' :' → logprob: -10.247307777404785
    10. ':
' → logprob: -10.997307777404785

Token 760: 'EPS' (ID: 82793)
  Prédit: 'EPS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.005642327945679426
    2. '1' → logprob: -6.005642414093018
    3. '-E' → logprob: -6.505642414093018
    4. '-' → logprob: -6.880642414093018
    5. ' EPS' → logprob: -7.505642414093018
    6. ' -' → logprob: -10.38064193725586
    7. ' ' → logprob: -10.50564193725586
    8. '   ' → logprob: -11.13064193725586
    9. '0' → logprob: -12.13064193725586
    10. 'eps' → logprob: -13.38064193725586

Token 761: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1194414272904396
    2. ':
' → logprob: -2.244441509246826
    3. ' and' → logprob: -5.619441509246826
    4. '           ' → logprob: -5.994441509246826
    5. '       ' → logprob: -7.994441509246826
    6. 'and' → logprob: -9.869441032409668
    7. '):' → logprob: -10.619441032409668
    8. '):
' → logprob: -10.869441032409668
    9. ':return' → logprob: -11.619441032409668
    10. ' :' → logprob: -11.744441032409668

Token 762: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022431127727031708
    2. ':
' → logprob: -4.272430896759033
    3. ':' → logprob: -5.147430896759033
    4. '               ' → logprob: -6.647430896759033
    5. '       ' → logprob: -7.522430896759033
    6. '
' → logprob: -7.772430896759033
    7. '```' → logprob: -10.397431373596191
    8. ' and' → logprob: -10.522431373596191
    9. ',' → logprob: -11.022431373596191
    10. '):
' → logprob: -11.147431373596191

Token 763: ' dist' (ID: 3601)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1508936882019043
    2. ' return' → logprob: -2.1508936882019043
    3. '                   ' → logprob: -4.275893688201904
    4. '               ' → logprob: -4.650893688201904
    5. '   ' → logprob: -9.150894165039062
    6. '           ' → logprob: -9.650894165039062
    7. '
' → logprob: -10.650894165039062
    8. '	return' → logprob: -11.025894165039062
    9. '       ' → logprob: -11.775894165039062
    10. '                       ' → logprob: -12.150894165039062

Token 764: '_hit' (ID: 91390)
  Prédit: '_total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_total' → logprob: -7.64839569455944e-05
    2. '_' → logprob: -9.750076293945312
    3. 'total' → logprob: -12.125076293945312
    4. ' =' → logprob: -13.375076293945312
    5. '_return' → logprob: -13.625076293945312
    6. '_continue' → logprob: -13.750076293945312
    7. '_Total' → logprob: -13.750076293945312
    8. '_to' → logprob: -13.875076293945312
    9. '=' → logprob: -14.125076293945312
    10. '               ' → logprob: -14.125076293945312

Token 765: ' =' (ID: 314)
  Prédit: '_total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.6300103068351746
    2. '=' → logprob: -0.8800103068351746
    3. ' =' → logprob: -3.0050103664398193
    4. 'total' → logprob: -5.88001012802124
    5. 'otal' → logprob: -9.880010604858398
    6. 'Total' → logprob: -10.130010604858398
    7. '   ' → logprob: -10.755010604858398
    8. ' total' → logprob: -10.755010604858398
    9. '           ' → logprob: -10.880010604858398
    10. '               ' → logprob: -11.005010604858398

Token 766: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.24896761775016785
    2. ' dist' → logprob: -1.6239676475524902
    3. 'norm' → logprob: -3.9989676475524902
    4. ' norm' → logprob: -5.37396764755249
    5. '   ' → logprob: -9.123967170715332
    6. '(dist' → logprob: -9.998967170715332
    7. '(norm' → logprob: -10.373967170715332
    8. 't' → logprob: -10.748967170715332
    9. '               ' → logprob: -10.873967170715332
    10. '	dist' → logprob: -10.998967170715332

Token 767: '_total' (ID: 23814)
  Prédit: '(P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.10888533294200897
    2. '_total' → logprob: -2.3588852882385254
    3. '(' → logprob: -5.233885288238525
    4. 'Total' → logprob: -6.608885288238525
    5. 'total' → logprob: -6.733885288238525
    6. 'mul' → logprob: -8.233885765075684
    7. 'otal' → logprob: -8.983885765075684
    8. 'add' → logprob: -9.358885765075684
    9. '(m' → logprob: -9.483885765075684
    10. '(p' → logprob: -9.733885765075684

Token 768: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0234379880130291
    2. ' +' → logprob: -3.773437976837158
    3. '()+' → logprob: -9.398438453674316
    4. '+
' → logprob: -10.398438453674316
    5. '+(' → logprob: -10.648438453674316
    6. '+t' → logprob: -11.023438453674316
    7. '```' → logprob: -11.773438453674316
    8. '+=' → logprob: -12.023438453674316
    9. '(' → logprob: -12.148438453674316
    10. '               ' → logprob: -12.273438453674316

Token 769: ' norm' (ID: 7882)
  Prédit: 'norm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'norm' → logprob: -0.05101531371474266
    2. 'tx' → logprob: -3.3010153770446777
    3. '(norm' → logprob: -4.676015377044678
    4. '(tx' → logprob: -6.301015377044678
    5. ' norm' → logprob: -7.176015377044678
    6. '(V' → logprob: -8.05101490020752
    7. 'dist' → logprob: -9.05101490020752
    8. '(t' → logprob: -9.17601490020752
    9. 'abs' → logprob: -9.30101490020752
    10. '(' → logprob: -9.55101490020752

Token 770: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.001613292726688087
    2. '((' → logprob: -6.501613140106201
    3. '(V' → logprob: -9.37661361694336
    4. 'mul' → logprob: -11.12661361694336
    5. '(' → logprob: -11.62661361694336
    6. '(v' → logprob: -13.37661361694336
    7. '(M' → logprob: -14.75161361694336
    8. '	m' → logprob: -15.75161361694336
    9. '_mul' → logprob: -16.37661361694336
    10. ' mul' → logprob: -16.37661361694336

Token 771: 'ul' (ID: 361)
  Prédit: 'ul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -2.2723104848410003e-05
    2. 'mul' → logprob: -11.875022888183594
    3. '(' → logprob: -12.250022888183594
    4. '(V' → logprob: -12.875022888183594
    5. 'ult' → logprob: -13.000022888183594
    6. 'u' → logprob: -13.375022888183594
    7. '   ' → logprob: -14.750022888183594
    8. '[' → logprob: -14.875022888183594
    9. '(v' → logprob: -15.000022888183594
    10. 'ulp' → logprob: -15.250022888183594

Token 772: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -7.3458322731312364e-06
    2. 'V' → logprob: -12.000007629394531
    3. '(' → logprob: -14.875007629394531
    4. ' (' → logprob: -15.000007629394531
    5. '(v' → logprob: -15.625007629394531
    6. '   ' → logprob: -16.00000762939453
    7. '
' → logprob: -16.50000762939453
    8. ')' → logprob: -16.75000762939453
    9. '((' → logprob: -17.12500762939453
    10. '(
' → logprob: -17.25000762939453

Token 773: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028249258175492287
    2. ',V' → logprob: -3.9032492637634277
    3. ' ,' → logprob: -5.778249263763428
    4. ',v' → logprob: -6.153249263763428
    5. '(V' → logprob: -6.278249263763428
    6. '(' → logprob: -8.52824878692627
    7. '),' → logprob: -9.02824878692627
    8. ',(' → logprob: -9.40324878692627
    9. 'V' → logprob: -9.65324878692627
    10. ',t' → logprob: -10.65324878692627

Token 774: ' tx' (ID: 10400)
  Prédit: 'tx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tx' → logprob: -0.0033759113866835833
    2. '(tx' → logprob: -5.878376007080078
    3. ' tx' → logprob: -7.503376007080078
    4. '	tx' → logprob: -11.503376007080078
    5. '(' → logprob: -12.753376007080078
    6. ')' → logprob: -13.003376007080078
    7. '
' → logprob: -14.378376007080078
    8. '_tx' → logprob: -14.628376007080078
    9. 'Tx' → logprob: -14.753376007080078
    10. 't' → logprob: -14.753376007080078

Token 775: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.005065702833235264
    2. '))
' → logprob: -5.63006591796875
    3. '()))' → logprob: -7.13006591796875
    4. ' ))' → logprob: -8.13006591796875
    5. ')' → logprob: -8.38006591796875
    6. ')))' → logprob: -10.25506591796875
    7. '))

' → logprob: -10.75506591796875
    8. '()))
' → logprob: -10.88006591796875
    9. ' ))
' → logprob: -11.25506591796875
    10. '))*' → logprob: -11.25506591796875

Token 776: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -7.290784560609609e-05
    2. '           ' → logprob: -10.875072479248047
    3. '
' → logprob: -11.000072479248047
    4. '			' → logprob: -11.375072479248047
    5. 'return' → logprob: -12.250072479248047
    6. '	           ' → logprob: -12.250072479248047
    7. '		       ' → logprob: -12.500072479248047
    8. ' return' → logprob: -12.625072479248047
    9. '                   ' → logprob: -12.750072479248047
    10. '              ' → logprob: -14.250072479248047

Token 777: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0006183160003274679
    2. ' return' → logprob: -8.000617980957031
    3. '               ' → logprob: -8.250617980957031
    4. '
' → logprob: -11.625617980957031
    5. '                   ' → logprob: -11.625617980957031
    6. ':return' → logprob: -13.500617980957031
    7. '	return' → logprob: -13.750617980957031
    8. '                       ' → logprob: -15.000617980957031
    9. '   ' → logprob: -15.000617980957031
    10. '```' → logprob: -15.750617980957031

Token 778: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0019795489497482777
    2. ' dist' → logprob: -6.251979351043701
    3. '   ' → logprob: -11.37697982788086
    4. 'abs' → logprob: -11.50197982788086
    5. '           ' → logprob: -11.50197982788086
    6. '               ' → logprob: -12.12697982788086
    7. 'tx' → logprob: -12.87697982788086
    8. '       ' → logprob: -13.00197982788086
    9. '                   ' → logprob: -14.00197982788086
    10. 'not' → logprob: -14.00197982788086

Token 779: '_hit' (ID: 91390)
  Prédit: '_hit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hit' → logprob: -0.00023274161503650248
    2. '_total' → logprob: -9.000232696533203
    3. '_' → logprob: -9.875232696533203
    4. 'hit' → logprob: -11.125232696533203
    5. '_hits' → logprob: -12.375232696533203
    6. '```' → logprob: -12.500232696533203
    7. 'Hit' → logprob: -12.500232696533203
    8. '<' → logprob: -12.500232696533203
    9. '<=' → logprob: -12.625232696533203
    10. '   ' → logprob: -12.750232696533203

Token 780: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.09712570160627365
    2. '<=' → logprob: -2.472125768661499
    3. ' <' → logprob: -5.59712553024292
    4. '<' → logprob: -6.47212553024292
    5. ' ' → logprob: -6.97212553024292
    6. ' >=' → logprob: -7.09712553024292
    7. ' >' → logprob: -7.84712553024292
    8. '>' → logprob: -8.472126007080078
    9. '>=' → logprob: -8.847126007080078
    10. '<|end|>' → logprob: -9.472126007080078

Token 781: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.00043102685594931245
    2. ' D' → logprob: -7.750431060791016
    3. '   ' → logprob: -15.625431060791016
    4. '	D' → logprob: -16.625431060791016
    5. ' ' → logprob: -17.375431060791016
    6. '```' → logprob: -17.625431060791016
    7. '
' → logprob: -18.125431060791016
    8. '                   ' → logprob: -18.125431060791016
    9. ' ' → logprob: -18.500431060791016
    10. '               ' → logprob: -18.500431060791016

Token 782: '+' (ID: 10)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.09465570002794266
    2. ':' → logprob: -2.594655752182007
    3. '                   ' → logprob: -5.219655513763428
    4. ':return' → logprob: -5.344655513763428
    5. '           ' → logprob: -5.469655513763428
    6. '               ' → logprob: -7.844655513763428
    7. '                       ' → logprob: -7.969655513763428
    8. ':
' → logprob: -9.219655990600586
    9. ' :
' → logprob: -9.594655990600586
    10. '):
' → logprob: -9.719655990600586

Token 783: 'EPS' (ID: 82793)
  Prédit: 'EPS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.004651437979191542
    2. '1' → logprob: -5.3796515464782715
    3. ' EPS' → logprob: -10.629651069641113
    4. 'eps' → logprob: -13.379651069641113
    5. '   ' → logprob: -13.754651069641113
    6. 'EP' → logprob: -13.879651069641113
    7. ' ' → logprob: -14.004651069641113
    8. 'ESP' → logprob: -14.504651069641113
    9. 'E' → logprob: -14.879651069641113
    10. 'EOS' → logprob: -15.004651069641113

Token 784: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.09007598459720612
    2. ':' → logprob: -2.715075969696045
    3. '                   ' → logprob: -4.465075969696045
    4. '           ' → logprob: -5.465075969696045
    5. '               ' → logprob: -5.840075969696045
    6. ':return' → logprob: -7.090075969696045
    7. '                       ' → logprob: -8.590076446533203
    8. '):
' → logprob: -9.215076446533203
    9. ' :
' → logprob: -10.465076446533203
    10. ':

' → logprob: -10.715076446533203

Token 785: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.001496887649409473
    2. 'return' → logprob: -7.1264967918396
    3. ' return' → logprob: -8.251497268676758
    4. '
' → logprob: -8.626497268676758
    5. '           ' → logprob: -9.126497268676758
    6. '                       ' → logprob: -9.876497268676758
    7. '                  ' → logprob: -10.376497268676758
    8. '   ' → logprob: -10.876497268676758
    9. '               ' → logprob: -11.376497268676758
    10. '		           ' → logprob: -12.001497268676758

Token 786: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03961063548922539
    2. '                       ' → logprob: -3.5396106243133545
    3. '                   ' → logprob: -4.789610862731934
    4. ' return' → logprob: -6.539610862731934
    5. '	return' → logprob: -10.789610862731934
    6. '               ' → logprob: -11.539610862731934
    7. '   ' → logprob: -11.914610862731934
    8. '       ' → logprob: -12.164610862731934
    9. '
' → logprob: -12.289610862731934
    10. '           ' → logprob: -13.164610862731934

Token 787: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0004306692280806601
    2. ' dist' → logprob: -7.750430583953857
    3. '	dist' → logprob: -17.500431060791016
    4. '   ' → logprob: -18.250431060791016
    5. '(dist' → logprob: -18.375431060791016
    6. '               ' → logprob: -19.250431060791016
    7. 'int' → logprob: -19.375431060791016
    8. 'round' → logprob: -19.625431060791016
    9. 'Dist' → logprob: -20.500431060791016
    10. 'distance' → logprob: -20.875431060791016

Token 788: '_hit' (ID: 91390)
  Prédit: '_total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.07890289276838303
    2. '_hit' → logprob: -2.5789029598236084
    3. 'total' → logprob: -12.578903198242188
    4. '_' → logprob: -13.203903198242188
    5. '_hits' → logprob: -13.203903198242188
    6. 'hit' → logprob: -13.328903198242188
    7. '```' → logprob: -13.453903198242188
    8. '_tot' → logprob: -14.078903198242188
    9. '_t' → logprob: -14.703903198242188
    10. ' _' → logprob: -14.703903198242188

Token 789: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7912822961807251
    2. '       ' → logprob: -0.7912822961807251
    3. '\n' → logprob: -3.2912821769714355
    4. '        
' → logprob: -3.2912821769714355
    5. '    
' → logprob: -5.9162821769714355
    6. '  
' → logprob: -5.9162821769714355
    7. '' → logprob: -6.4162821769714355
    8. '		
' → logprob: -6.4162821769714355
    9. '               ' → logprob: -6.5412821769714355
    10. ')' → logprob: -6.6662821769714355

Token 790: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05154374614357948
    2. '        
' → logprob: -3.301543712615967
    3. '
' → logprob: -6.176543712615967
    4. ')' → logprob: -6.176543712615967
    5. '  
' → logprob: -6.301543712615967
    6. '<|end|>' → logprob: -6.801543712615967
    7. '           ' → logprob: -7.301543712615967
    8. '               ' → logprob: -7.426543712615967
    9. '\n' → logprob: -7.551543712615967
    10. '	' → logprob: -7.676543712615967

Token 791: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013296226970851421
    2. '        
' → logprob: -5.388296127319336
    3. 't' → logprob: -6.638296127319336
    4. '	' → logprob: -6.763296127319336
    5. 'else' → logprob: -6.763296127319336
    6. 'if' → logprob: -6.888296127319336
    7. ' if' → logprob: -6.888296127319336
    8. '
' → logprob: -7.013296127319336
    9. '		
' → logprob: -7.388296127319336
    10. 'elif' (adapté à ' elif') → logprob: -8.388296127319336

Token 792: ' tx' (ID: 10400)
  Prédit: 'tx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tx' → logprob: -0.1820596605539322
    2. '(tx' → logprob: -2.3070597648620605
    3. ' tx' → logprob: -2.8070597648620605
    4. ' (' → logprob: -5.8070597648620605
    5. '(' → logprob: -5.9320597648620605
    6. '   ' → logprob: -8.307059288024902
    7. '(t' → logprob: -8.807059288024902
    8. ' ' → logprob: -9.557059288024902
    9. '(V' → logprob: -9.682059288024902
    10. 'ty' → logprob: -10.182059288024902

Token 793: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.00018530222587287426
    2. 'is' → logprob: -8.750185012817383
    3. ' ' → logprob: -10.625185012817383
    4. 'and' → logprob: -14.375185012817383
    5. '	is' → logprob: -14.750185012817383
    6. '<|end|>' → logprob: -15.000185012817383
    7. ' not' → logprob: -15.250185012817383
    8. ' ' → logprob: -15.500185012817383
    9. ' and' → logprob: -15.625185012817383
    10. '<|end|>' → logprob: -16.000185012817383

Token 794: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.18518418073654175
    2. ' not' → logprob: -1.8101842403411865
    3. 'None' → logprob: -5.310184001922607
    4. ' None' → logprob: -7.685184001922607
    5. 'Not' → logprob: -10.810184478759766
    6. '	not' → logprob: -13.435184478759766
    7. ' ' → logprob: -14.185184478759766
    8. '(None' → logprob: -15.060184478759766
    9. '   ' → logprob: -15.185184478759766
    10. '_not' → logprob: -15.685184478759766

Token 795: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0038500747177749872
    2. 'not' → logprob: -5.878849983215332
    3. ' None' → logprob: -6.878849983215332
    4. 'Not' → logprob: -11.753849983215332
    5. ' not' → logprob: -12.253849983215332
    6. 'none' → logprob: -13.753849983215332
    7. '_None' → logprob: -14.378849983215332
    8. '   ' → logprob: -15.253849983215332
    9. '(None' → logprob: -15.378849983215332
    10. ' ' → logprob: -15.378849983215332

Token 796: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.012637728825211525
    2. 'and' → logprob: -4.387637615203857
    3. '           ' → logprob: -9.887638092041016
    4. '       ' → logprob: -9.887638092041016
    5. '        ' → logprob: -11.762638092041016
    6. ':
' → logprob: -12.387638092041016
    7. '	and' → logprob: -12.387638092041016
    8. ':' → logprob: -12.887638092041016
    9. '          ' → logprob: -13.137638092041016
    10. ' ' → logprob: -13.262638092041016

Token 797: ' abs' (ID: 8443)
  Prédit: 'tx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tx' → logprob: -0.07200779765844345
    2. ' tx' → logprob: -2.947007894515991
    3. '0' → logprob: -5.322007656097412
    4. 'abs' → logprob: -5.572007656097412
    5. 'EPS' → logprob: -5.697007656097412
    6. '(tx' → logprob: -6.072007656097412
    7. '-' → logprob: -6.697007656097412
    8. ' ' → logprob: -8.32200813293457
    9. ' EPS' → logprob: -8.32200813293457
    10. ' -' → logprob: -8.69700813293457

Token 798: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.1782628893852234
    2. '(tx' → logprob: -2.178262948989868
    3. '(-' → logprob: -3.803262948989868
    4. '(' → logprob: -4.178262710571289
    5. '(py' → logprob: -4.928262710571289
    6. '(V' → logprob: -5.803262710571289
    7. '(px' → logprob: -6.803262710571289
    8. '(Py' → logprob: -7.803262710571289
    9. '(T' → logprob: -8.303262710571289
    10. '((' → logprob: -8.678262710571289

Token 799: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003336777735967189
    2. 'y' → logprob: -8.750333786010742
    3. '0' → logprob: -9.500333786010742
    4. '1' → logprob: -9.750333786010742
    5. 'x' → logprob: -10.750333786010742
    6. '.y' → logprob: -12.500333786010742
    7. '.' → logprob: -12.875333786010742
    8. ')' → logprob: -13.312833786010742
    9. '```' → logprob: -13.312833786010742
    10. ' [' → logprob: -13.625333786010742

Token 800: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04501578211784363
    2. '0' → logprob: -3.295015811920166
    3. '[' → logprob: -5.045015811920166
    4. 'y' → logprob: -7.795015811920166
    5. ']' → logprob: -10.170015335083008
    6. ' ' → logprob: -10.545015335083008
    7. '(' → logprob: -12.232515335083008
    8. '```' → logprob: -12.420015335083008
    9. '   ' → logprob: -12.482515335083008
    10. 'x' → logprob: -12.920015335083008

Token 801: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11514165252447128
    2. '[' → logprob: -2.7401416301727295
    3. ')>' → logprob: -3.3651416301727295
    4. ')<' → logprob: -4.865141868591309
    5. ' )' → logprob: -6.990141868591309
    6. '])' → logprob: -8.490141868591309
    7. ')==' → logprob: -8.990141868591309
    8. '+' → logprob: -9.115141868591309
    9. ')<=' → logprob: -9.115141868591309
    10. ' +' → logprob: -9.490141868591309

Token 802: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.08560751378536224
    2. ' <' → logprob: -2.5856075286865234
    3. '>' → logprob: -5.085607528686523
    4. ' >' → logprob: -8.085607528686523
    5. '<=' → logprob: -9.210607528686523
    6. '*' → logprob: -10.210607528686523
    7. ' <=' → logprob: -11.210607528686523
    8. ')' → logprob: -11.335607528686523
    9. ')<' → logprob: -11.335607528686523
    10. '==' → logprob: -11.710607528686523

Token 803: ' EPS' (ID: 66979)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.0009431460639461875
    2. ' EPS' → logprob: -7.500943183898926
    3. '1' → logprob: -7.875943183898926
    4. ' ' → logprob: -12.000943183898926
    5. 'ESP' → logprob: -13.375943183898926
    6. '   ' → logprob: -13.500943183898926
    7. 'ES' → logprob: -15.125943183898926
    8. '  ' → logprob: -15.500943183898926
    9. 'EOS' → logprob: -15.625943183898926
    10. 'EEP' → logprob: -15.625943183898926

Token 804: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.016045628115534782
    2. 'and' → logprob: -4.391045570373535
    3. ':
' → logprob: -6.016045570373535
    4. ':' → logprob: -7.641045570373535
    5. '       ' → logprob: -7.766045570373535
    6. '           ' → logprob: -9.391045570373535
    7. '	and' → logprob: -9.891045570373535
    8. '          ' → logprob: -11.641045570373535
    9. '   ' → logprob: -11.891045570373535
    10. '	' → logprob: -12.016045570373535

Token 805: '           ' (ID: 352)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5290306210517883
    2. '           ' → logprob: -0.9040306210517883
    3. ':
' → logprob: -5.404030799865723
    4. ':' → logprob: -7.154030799865723
    5. 'and' → logprob: -8.279030799865723
    6. '       ' → logprob: -8.529030799865723
    7. '          ' → logprob: -10.404030799865723
    8. '               ' → logprob: -10.404030799865723
    9. '		' → logprob: -10.779030799865723
    10. '```' → logprob: -11.279030799865723

Token 806: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3171554207801819
    2. '           ' → logprob: -1.692155361175537
    3. 'if' → logprob: -2.442155361175537
    4. '               ' → logprob: -7.442155361175537
    5. '       ' → logprob: -9.942155838012695
    6. ' ' → logprob: -11.067155838012695
    7. '	if' → logprob: -11.817155838012695
    8. '	       ' → logprob: -12.067155838012695
    9. ' ' → logprob: -12.442155838012695
    10. '          ' → logprob: -12.942155838012695

Token 807: ' y' (ID: 342)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.163801372051239
    2. ' if' → logprob: -1.9138014316558838
    3. 't' → logprob: -6.663801193237305
    4. '           ' → logprob: -6.913801193237305
    5. ' t' → logprob: -7.288801193237305
    6. 'tx' → logprob: -8.663801193237305
    7. '       ' → logprob: -8.788801193237305
    8. 'dist' → logprob: -9.163801193237305
    9. ' dist' → logprob: -9.538801193237305
    10. ' tx' → logprob: -10.038801193237305

Token 808: ' is' (ID: 382)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8195593953132629
    2. ' ==' → logprob: -2.194559335708618
    3. '[' → logprob: -2.694559335708618
    4. '==' → logprob: -2.694559335708618
    5. ' axis' → logprob: -3.319559335708618
    6. '=' → logprob: -3.444559335708618
    7. '-axis' → logprob: -3.444559335708618
    8. ')' → logprob: -3.694559335708618
    9. ' >' → logprob: -3.819559335708618
    10. ' is' → logprob: -3.944559335708618

Token 809: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002146226615877822
    2. ' ' → logprob: -8.500214576721191
    3. 'zero' → logprob: -12.375214576721191
    4. 'close' → logprob: -13.375214576721191
    5. ' zero' → logprob: -13.375214576721191
    6. 'None' → logprob: -13.875214576721191
    7. ' close' → logprob: -13.875214576721191
    8. 'approximately' → logprob: -15.125214576721191
    9. 'abs' → logprob: -15.375214576721191
    10. '1' → logprob: -15.875214576721191

Token 810: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.75001049041748
    3. 'zero' → logprob: -13.12501049041748
    4. 'close' → logprob: -15.75001049041748
    5. ' zero' → logprob: -16.875009536743164
    6. 'abs' → logprob: -17.375009536743164
    7. '
' → logprob: -17.500009536743164
    8. 'approximately' → logprob: -17.500009536743164
    9. '   ' → logprob: -18.000009536743164
    10. '==' → logprob: -18.125009536743164

Token 811: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.019011754542589188
    2. 'and' → logprob: -4.269011974334717
    3. '           ' → logprob: -5.394011974334717
    4. ':' → logprob: -9.269011497497559
    5. ':
' → logprob: -9.269011497497559
    6. '       ' → logprob: -9.894011497497559
    7. '               ' → logprob: -10.519011497497559
    8. ',' → logprob: -12.394011497497559
    9. ' ' → logprob: -12.644011497497559
    10. '            ' → logprob: -12.769011497497559

Token 812: ' check' (ID: 2371)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.25192564725875854
    2. 'and' → logprob: -2.5019257068634033
    3. ' if' → logprob: -2.8769257068634033
    4. ' tx' → logprob: -3.5019257068634033
    5. ' t' → logprob: -3.7519257068634033
    6. '           ' → logprob: -4.376925468444824
    7. ' vx' → logprob: -4.876925468444824
    8. 'if' → logprob: -5.376925468444824
    9. 'tx' → logprob: -5.751925468444824
    10. 't' → logprob: -6.501925468444824

Token 813: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.09096583724021912
    2. 'if' → logprob: -2.715965747833252
    3. ' tx' → logprob: -3.965965747833252
    4. 'tx' → logprob: -6.465965747833252
    5. 'abs' → logprob: -8.71596622467041
    6. ' abs' → logprob: -9.09096622467041
    7. '(tx' → logprob: -11.09096622467041
    8. '   ' → logprob: -12.34096622467041
    9. ' ' → logprob: -13.09096622467041
    10. '0' → logprob: -13.34096622467041

Token 814: ' passes' (ID: 29169)
  Prédit: 'tx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tx' → logprob: -0.10882534086704254
    2. ' tx' → logprob: -2.483825445175171
    3. '0' → logprob: -3.983825445175171
    4. 'EPS' → logprob: -7.233825206756592
    5. ' ' → logprob: -9.10882568359375
    6. ' EPS' → logprob: -9.35882568359375
    7. '(tx' → logprob: -9.60882568359375
    8. '   ' → logprob: -11.10882568359375
    9. '	tx' → logprob: -11.23382568359375
    10. 'TX' → logprob: -11.35882568359375

Token 815: ' origin' (ID: 12839)
  Prédit: 'tx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tx' → logprob: -0.4249536097049713
    2. ' tx' → logprob: -1.174953579902649
    3. 'abs' → logprob: -4.549953460693359
    4. ' through' → logprob: -5.174953460693359
    5. '(tx' → logprob: -5.174953460693359
    6. ' abs' → logprob: -5.549953460693359
    7. 'through' → logprob: -5.674953460693359
    8. 'x' → logprob: -5.674953460693359
    9. 'between' → logprob: -6.299953460693359
    10. ' between' → logprob: -6.549953460693359

Token 816: ' at' (ID: 540)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32449111342430115
    2. ' and' → logprob: -1.3244911432266235
    3. '               ' → logprob: -4.824491024017334
    4. ' if' → logprob: -6.824491024017334
    5. ' ' → logprob: -7.574491024017334
    6. 'and' → logprob: -7.699491024017334
    7. ':
' → logprob: -7.949491024017334
    8. '       ' → logprob: -8.699491500854492
    9. ',' → logprob: -9.199491500854492
    10. '```' → logprob: -9.949491500854492

Token 817: ' tx' (ID: 10400)
  Prédit: 'tx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tx' → logprob: -0.7624375224113464
    2. ' tx' → logprob: -1.1374375820159912
    3. 't' → logprob: -2.262437582015991
    4. ' t' → logprob: -2.262437582015991
    5. 'x' → logprob: -6.012437343597412
    6. 'abs' → logprob: -7.887437343597412
    7. ' x' → logprob: -8.13743782043457
    8. 'distance' → logprob: -8.63743782043457
    9. ' positive' → logprob: -8.63743782043457
    10. ' vx' → logprob: -8.76243782043457

Token 818: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.036835651844739914
    2. ' and' → logprob: -3.4118356704711914
    3. '               ' → logprob: -6.036835670471191
    4. ' ' → logprob: -8.036835670471191
    5. ' if' → logprob: -8.661835670471191
    6. 'and' → logprob: -9.286835670471191
    7. '	       ' → logprob: -10.286835670471191
    8. '       ' → logprob: -10.411835670471191
    9. ' ' → logprob: -10.786835670471191
    10. '		' → logprob: -10.786835670471191

Token 819: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0022733660880476236
    2. '               ' → logprob: -6.2522735595703125
    3. ' and' → logprob: -8.377273559570312
    4. ' if' → logprob: -9.627273559570312
    5. '       ' → logprob: -11.502273559570312
    6. ' ' → logprob: -11.877273559570312
    7. '	       ' → logprob: -12.127273559570312
    8. '		' → logprob: -12.502273559570312
    9. 'and' → logprob: -12.502273559570312
    10. ' ' → logprob: -12.502273559570312

Token 820: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.11239369213581085
    2. ' if' → logprob: -2.362393617630005
    3. '           ' → logprob: -4.487393856048584
    4. 'dist' → logprob: -7.612393856048584
    5. '       ' → logprob: -8.487393379211426
    6. 't' → logprob: -9.862393379211426
    7. '               ' → logprob: -10.362393379211426
    8. ' dist' → logprob: -10.612393379211426
    9. '	if' → logprob: -11.612393379211426
    10. '   ' → logprob: -11.737393379211426

Token 821: ' tx' (ID: 10400)
  Prédit: 'tx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tx' → logprob: -0.22662754356861115
    2. ' tx' → logprob: -1.6016275882720947
    3. 'EPS' → logprob: -7.476627349853516
    4. '0' → logprob: -8.101627349853516
    5. '(tx' → logprob: -8.726627349853516
    6. ' EPS' → logprob: -9.101627349853516
    7. ' ' → logprob: -10.726627349853516
    8. 'TX' → logprob: -10.976627349853516
    9. '   ' → logprob: -11.851627349853516
    10. '	tx' → logprob: -11.976627349853516

Token 822: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.06994032114744186
    2. '>' → logprob: -2.6949403285980225
    3. ' ' → logprob: -12.694940567016602
    4. '   ' → logprob: -15.569940567016602
    5. ' ' → logprob: -15.944940567016602
    6. ' <' → logprob: -16.3199405670166
    7. ' and' → logprob: -16.5699405670166
    8. ' >
' → logprob: -16.6949405670166
    9. '()>' → logprob: -17.0699405670166
    10. '>E' → logprob: -17.0699405670166

Token 823: ' EPS' (ID: 66979)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.0009130131802521646
    2. ' EPS' → logprob: -7.000913143157959
    3. '0' → logprob: -13.7509126663208
    4. 'EP' → logprob: -15.5009126663208
    5. ' ' → logprob: -15.7509126663208
    6. 'ES' → logprob: -17.000913619995117
    7. 'EOS' → logprob: -17.000913619995117
    8. '1' → logprob: -17.250913619995117
    9. 'ESP' → logprob: -17.375913619995117
    10. 'EPT' → logprob: -17.875913619995117

Token 824: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.00462771812453866
    2. 'and' → logprob: -5.379627704620361
    3. '            ' → logprob: -12.87962818145752
    4. '           ' → logprob: -13.62962818145752
    5. '	and' → logprob: -13.87962818145752
    6. '               ' → logprob: -14.00462818145752
    7. ' ' → logprob: -14.12962818145752
    8. '                ' → logprob: -15.12962818145752
    9. '```' → logprob: -15.62962818145752
    10. ' ' → logprob: -15.75462818145752

Token 825: ' tx' (ID: 10400)
  Prédit: 'tx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tx' → logprob: -0.0028281768318265676
    2. ' tx' → logprob: -5.877828121185303
    3. '           ' → logprob: -11.002828598022461
    4. '	tx' → logprob: -13.002828598022461
    5. '(tx' → logprob: -13.252828598022461
    6. '   ' → logprob: -13.627828598022461
    7. '    ' → logprob: -15.627828598022461
    8. '            ' → logprob: -15.627828598022461
    9. '               ' → logprob: -15.627828598022461
    10. ' ' → logprob: -15.752828598022461

Token 826: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0302900318056345
    2. '<' → logprob: -3.530290126800537
    3. ' <=' → logprob: -7.655290126800537
    4. '<=' → logprob: -9.905289649963379
    5. ' ' → logprob: -11.280289649963379
    6. '+' → logprob: -13.780289649963379
    7. '```' → logprob: -14.405289649963379
    8. '<|end|>' → logprob: -14.780289649963379
    9. ' +' → logprob: -15.280289649963379
    10. '<T' → logprob: -15.655289649963379

Token 827: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.20141683518886566
    2. ' t' → logprob: -1.7014168500900269
    3. ' ' → logprob: -13.951416969299316
    4. '1' → logprob: -14.451416969299316
    5. '`t' → logprob: -14.576416969299316
    6. '	t' → logprob: -14.951416969299316
    7. '   ' → logprob: -15.201416969299316
    8. '0' → logprob: -15.951416969299316
    9. '_t' → logprob: -16.201416015625
    10. '  ' → logprob: -16.201416015625

Token 828: '_circle' (ID: 93883)
  Prédit: '_circle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_circle' → logprob: -2.4868770196917467e-05
    2. 'circle' → logprob: -10.625024795532227
    3. '_' → logprob: -16.125024795532227
    4. '_c' → logprob: -16.125024795532227
    5. 'ircle' → logprob: -16.250024795532227
    6. '_curve' → logprob: -17.375024795532227
    7. '(circle' → logprob: -18.125024795532227
    8. 'Circle' → logprob: -18.250024795532227
    9. ' circle' → logprob: -19.125024795532227
    10. '_cycle' → logprob: -19.375024795532227

Token 829: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.000629279064014554
    2. ' +' → logprob: -7.375629425048828
    3. '-' → logprob: -14.250629425048828
    4. '           ' → logprob: -14.750629425048828
    5. '   ' → logprob: -14.875629425048828
    6. '()+' → logprob: -15.375629425048828
    7. '+
' → logprob: -15.625629425048828
    8. '+\' → logprob: -15.875629425048828
    9. '       ' → logprob: -16.000629425048828
    10. ':' → logprob: -16.375629425048828

Token 830: 'EPS' (ID: 82793)
  Prédit: 'EPS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.0004898841143585742
    2. ' EPS' → logprob: -7.625489711761475
    3. ' ' → logprob: -14.125490188598633
    4. 'ESP' → logprob: -14.500490188598633
    5. '1' → logprob: -15.500490188598633
    6. 'EP' → logprob: -16.000490188598633
    7. '0' → logprob: -16.500490188598633
    8. 'EPT' → logprob: -16.500490188598633
    9. 'eps' → logprob: -17.125490188598633
    10. '
' → logprob: -17.250490188598633

Token 831: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6965938210487366
    2. ':
' → logprob: -0.6965938210487366
    3. ' and' → logprob: -6.196593761444092
    4. '               ' → logprob: -6.946593761444092
    5. '           ' → logprob: -8.07159423828125
    6. 'and' → logprob: -10.07159423828125
    7. ':

' → logprob: -10.44659423828125
    8. '):
' → logprob: -10.82159423828125
    9. ':
' → logprob: -11.69659423828125
    10. '                   ' → logprob: -12.07159423828125

Token 832: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00032354547875002027
    2. '                   ' → logprob: -9.000323295593262
    3. ' return' → logprob: -9.375323295593262
    4. 'return' → logprob: -9.875323295593262
    5. '                       ' → logprob: -10.000323295593262
    6. '```' → logprob: -11.625323295593262
    7. '           ' → logprob: -13.000323295593262
    8. '              ' → logprob: -13.250323295593262
    9. '                ' → logprob: -13.750323295593262
    10. ' ' → logprob: -14.250323295593262

Token 833: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.14310523867607117
    2. ' dist' → logprob: -2.0181052684783936
    3. '                   ' → logprob: -8.268105506896973
    4. '               ' → logprob: -8.893105506896973
    5. 'return' → logprob: -11.143105506896973
    6. '	dist' → logprob: -12.393105506896973
    7. 'distance' → logprob: -12.518105506896973
    8. ' return' → logprob: -12.768105506896973
    9. 'if' → logprob: -13.143105506896973
    10. '                       ' → logprob: -13.143105506896973

Token 834: '_hit' (ID: 91390)
  Prédit: '_hit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hit' → logprob: -0.0007136239437386394
    2. '_total' → logprob: -7.25071382522583
    3. '_hits' → logprob: -13.625713348388672
    4. 'hit' → logprob: -14.250713348388672
    5. '_return' → logprob: -15.000713348388672
    6. '_' → logprob: -15.125713348388672
    7. 'total' → logprob: -16.000713348388672
    8. '   ' → logprob: -16.000713348388672
    9. '(hit' → logprob: -16.000713348388672
    10. '           ' → logprob: -16.125713348388672

Token 835: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740811586380005
    2. ' =' → logprob: -0.9740811586380005
    3. ' +=' → logprob: -13.849081039428711
    4. '+=' → logprob: -14.099081039428711
    5. ' ' → logprob: -14.474081039428711
    6. 'return' → logprob: -14.974081039428711
    7. '   ' → logprob: -15.099081039428711
    8. ')' → logprob: -15.349081039428711
    9. '```' → logprob: -15.349081039428711
    10. ',' → logprob: -15.599081039428711

Token 836: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.31326231360435486
    2. 'dist' → logprob: -1.3132623434066772
    3. '(dist' → logprob: -15.063261985778809
    4. '	dist' → logprob: -15.313261985778809
    5. '   ' → logprob: -16.438262939453125
    6. 'd' → logprob: -17.563262939453125
    7. '_dist' → logprob: -18.063262939453125
    8. 'Dist' → logprob: -18.438262939453125
    9. '.dist' → logprob: -19.063262939453125
    10. ' ' → logprob: -19.438262939453125

Token 837: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -3.5716304410016164e-05
    2. 'total' → logprob: -10.250035285949707
    3. ' total' → logprob: -16.125036239624023
    4. 'Total' → logprob: -16.500036239624023
    5. '_' → logprob: -16.625036239624023
    6. '_tot' → logprob: -18.375036239624023
    7. '	total' → logprob: -18.500036239624023
    8. ' _' → logprob: -18.500036239624023
    9. 'otal' → logprob: -19.125036239624023
    10. '_TOTAL' → logprob: -19.875036239624023

Token 838: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12692999839782715
    2. '+' → logprob: -2.126929998397827
    3. ' ' → logprob: -14.001930236816406
    4. ' ' → logprob: -15.001930236816406
    5. '```' → logprob: -15.251930236816406
    6. '   ' → logprob: -15.626930236816406
    7. '()+' → logprob: -16.626930236816406
    8. ' +
' → logprob: -17.001930236816406
    9. '＋' → logprob: -17.001930236816406
    10. '+
' → logprob: -17.251930236816406

Token 839: ' norm' (ID: 7882)
  Prédit: 'norm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'norm' → logprob: -0.01104935072362423
    2. ' norm' → logprob: -4.511049270629883
    3. '(norm' → logprob: -13.886049270629883
    4. 'abs' → logprob: -15.261049270629883
    5. 'dist' → logprob: -15.386049270629883
    6. ' ' → logprob: -16.386049270629883
    7. '   ' → logprob: -17.386049270629883
    8. '.norm' → logprob: -17.636049270629883
    9. 'n' → logprob: -17.761049270629883
    10. 'nom' → logprob: -18.011049270629883

Token 840: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -7.941850526549388e-06
    2. '(' → logprob: -11.875007629394531
    3. 'm' → logprob: -14.375007629394531
    4. '(M' → logprob: -16.00000762939453
    5. 'M' → logprob: -16.25000762939453
    6. ' (' → logprob: -16.75000762939453
    7. '	m' → logprob: -18.87500762939453
    8. '(V' → logprob: -19.12500762939453
    9. '((' → logprob: -19.12500762939453
    10. 'mul' → logprob: -19.12500762939453

Token 841: 'ul' (ID: 361)
  Prédit: 'ul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -6.392202976712724e-06
    2. 'mul' → logprob: -12.375006675720215
    3. '(V' → logprob: -13.375006675720215
    4. 'ult' → logprob: -15.250006675720215
    5. '(' → logprob: -17.1250057220459
    6. 'V' → logprob: -17.3750057220459
    7. 'u' → logprob: -17.3750057220459
    8. ' ul' → logprob: -17.5000057220459
    9. 'ulp' → logprob: -18.2500057220459
    10. 'ol' → logprob: -18.2500057220459

Token 842: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -8.673547563375905e-05
    2. 'V' → logprob: -9.375086784362793
    3. '(' → logprob: -14.000086784362793
    4. ')' → logprob: -14.625086784362793
    5. ' (' → logprob: -15.000086784362793
    6. '```' → logprob: -16.000085830688477
    7. '
' → logprob: -17.375085830688477
    8. '(
' → logprob: -17.750085830688477
    9. '	V' → logprob: -17.875085830688477
    10. ')(' → logprob: -18.250085830688477

Token 843: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.370294846012257e-05
    2. '(' → logprob: -10.500043869018555
    3. ' ,' → logprob: -11.125043869018555
    4. ',v' → logprob: -14.625043869018555
    5. ',(' → logprob: -15.250043869018555
    6. ',m' → logprob: -15.750043869018555
    7. ',
' → logprob: -16.250043869018555
    8. ' (' → logprob: -16.250043869018555
    9. ',t' → logprob: -16.375043869018555
    10. '```' → logprob: -16.375043869018555

Token 844: ' tx' (ID: 10400)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.056849803775548935
    2. 'tx' → logprob: -3.056849718093872
    3. ' V' → logprob: -5.556849956512451
    4. '(tx' → logprob: -6.181849956512451
    5. '(V' → logprob: -7.056849956512451
    6. ' tx' → logprob: -7.181849956512451
    7. '(' → logprob: -7.806849956512451
    8. 'vx' → logprob: -8.806849479675293
    9. ' (' → logprob: -10.181849479675293
    10. 'v' → logprob: -11.056849479675293

Token 845: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3875707983970642
    2. '))
' → logprob: -1.137570858001709
    3. ' ))
' → logprob: -7.887570858001709
    4. ' ))' → logprob: -9.01257038116455
    5. '))
' → logprob: -9.13757038116455
    6. '))

' → logprob: -10.26257038116455
    7. '()))
' → logprob: -11.01257038116455
    8. '               ' → logprob: -11.26257038116455
    9. '()))' → logprob: -11.26257038116455
    10. ')' → logprob: -12.76257038116455

Token 846: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011466042138636112
    2. '                   ' → logprob: -4.511466026306152
    3. 'return' → logprob: -9.136466026306152
    4. '```' → logprob: -9.636466026306152
    5. '                       ' → logprob: -10.386466026306152
    6. ' return' → logprob: -10.386466026306152
    7. '			' → logprob: -10.511466026306152
    8. '           ' → logprob: -10.761466026306152
    9. '	               ' → logprob: -11.011466026306152
    10. '                ' → logprob: -11.261466026306152

Token 847: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04225359112024307
    2. '               ' → logprob: -3.5422534942626953
    3. 'return' → logprob: -4.542253494262695
    4. ' if' → logprob: -6.917253494262695
    5. '                   ' → logprob: -7.167253494262695
    6. ' return' → logprob: -11.542253494262695
    7. '   ' → logprob: -13.542253494262695
    8. '           ' → logprob: -13.792253494262695
    9. '                       ' → logprob: -14.417253494262695
    10. '
' → logprob: -14.917253494262695

Token 848: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.008614926598966122
    2. ' dist' → logprob: -4.758615016937256
    3. '(dist' → logprob: -15.508614540100098
    4. '	dist' → logprob: -16.508615493774414
    5. '   ' → logprob: -16.883615493774414
    6. '  ' → logprob: -19.008615493774414
    7. '               ' → logprob: -19.008615493774414
    8. 'd' → logprob: -19.008615493774414
    9. ' ' → logprob: -19.258615493774414
    10. '
' → logprob: -19.383615493774414

Token 849: '_hit' (ID: 91390)
  Prédit: '_hit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hit' → logprob: -0.00011927806917810813
    2. 'hit' → logprob: -9.87511920928955
    3. ' _' → logprob: -11.12511920928955
    4. '_' → logprob: -11.25011920928955
    5. 'Hit' → logprob: -11.62511920928955
    6. '_hits' → logprob: -11.62511920928955
    7. ' hit' → logprob: -11.75011920928955
    8. '_dist' → logprob: -12.62511920928955
    9. '_h' → logprob: -12.87511920928955
    10. '```' → logprob: -13.75011920928955

Token 850: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.06197462975978851
    2. '<=' → logprob: -2.81197452545166
    3. ')<=' → logprob: -12.56197452545166
    4. ' ' → logprob: -13.68697452545166
    5. ']<=' → logprob: -14.81197452545166
    6. '<' → logprob: -14.93697452545166
    7. '   ' → logprob: -15.18697452545166
    8. ' <' → logprob: -15.31197452545166
    9. '  ' → logprob: -15.56197452545166
    10. ')' → logprob: -15.81197452545166

Token 851: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0021855919621884823
    2. ' D' → logprob: -6.127185821533203
    3. '   ' → logprob: -15.502185821533203
    4. ' ' → logprob: -16.127185821533203
    5. '	D' → logprob: -16.752185821533203
    6. '  ' → logprob: -17.252185821533203
    7. '```' → logprob: -17.627185821533203
    8. '>D' → logprob: -18.002185821533203
    9. ' ' → logprob: -18.252185821533203
    10. '(D' → logprob: -19.127185821533203

Token 852: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00011021859245374799
    2. ' +' → logprob: -9.125110626220703
    3. '+
' → logprob: -13.875110626220703
    4. '   ' → logprob: -17.000110626220703
    5. '()+' → logprob: -17.250110626220703
    6. '+\' → logprob: -17.375110626220703
    7. ')+' → logprob: -17.625110626220703
    8. '+=' → logprob: -17.625110626220703
    9. '+A' → logprob: -17.750110626220703
    10. '+[' → logprob: -18.125110626220703

Token 853: 'EPS' (ID: 82793)
  Prédit: 'EPS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -1.1160349458805285e-05
    2. ' EPS' → logprob: -12.000011444091797
    3. 'ESP' → logprob: -12.375011444091797
    4. 'EP' → logprob: -15.250011444091797
    5. 'EOS' → logprob: -16.125011444091797
    6. 'PS' → logprob: -16.500011444091797
    7. 'eps' → logprob: -17.125011444091797
    8. ' ' → logprob: -17.375011444091797
    9. '
' → logprob: -17.500011444091797
    10. '1' → logprob: -17.500011444091797

Token 854: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7225186824798584
    2. ':' → logprob: -0.8475186824798584
    3. '                   ' → logprob: -2.4725186824798584
    4. ':return' → logprob: -6.7225189208984375
    5. '                       ' → logprob: -8.722518920898438
    6. '               ' → logprob: -9.972518920898438
    7. '):
' → logprob: -10.097518920898438
    8. '                  ' → logprob: -10.222518920898438
    9. 'return' → logprob: -10.597518920898438
    10. '           ' → logprob: -10.722518920898438

Token 855: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.009575575590133667
    2. 'return' → logprob: -4.759575366973877
    3. ' return' → logprob: -7.259575366973877
    4. '                       ' → logprob: -9.384575843811035
    5. '                    ' → logprob: -10.509575843811035
    6. '                  ' → logprob: -10.509575843811035
    7. '           ' → logprob: -10.759575843811035
    8. '	return' → logprob: -10.759575843811035
    9. '   ' → logprob: -10.884575843811035
    10. '```' → logprob: -11.134575843811035

Token 856: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.012090221047401428
    2. '                   ' → logprob: -4.51209020614624
    3. ' return' → logprob: -7.01209020614624
    4. '	return' → logprob: -9.262090682983398
    5. '                       ' → logprob: -10.887090682983398
    6. '               ' → logprob: -11.137090682983398
    7. '   ' → logprob: -11.637090682983398
    8. '           ' → logprob: -13.137090682983398
    9. '       ' → logprob: -13.762090682983398
    10. '                  ' → logprob: -14.887090682983398

Token 857: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.005234002135694027
    2. ' dist' → logprob: -5.2552337646484375
    3. '(dist' → logprob: -15.755233764648438
    4. '	dist' → logprob: -16.505233764648438
    5. '   ' → logprob: -19.005233764648438
    6. 'float' → logprob: -19.130233764648438
    7. '
' → logprob: -19.505233764648438
    8. 'Dist' → logprob: -19.630233764648438
    9. 'd' → logprob: -19.880233764648438
    10. '```' → logprob: -20.255233764648438

Token 858: '_hit' (ID: 91390)
  Prédit: '_hit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hit' → logprob: -6.64708495605737e-05
    2. 'hit' → logprob: -10.250066757202148
    3. '_' → logprob: -10.875066757202148
    4. ' _' → logprob: -12.750066757202148
    5. '_h' → logprob: -12.875066757202148
    6. 'Hit' → logprob: -13.125066757202148
    7. '_hits' → logprob: -13.375066757202148
    8. '_dist' → logprob: -14.375066757202148
    9. ' hit' → logprob: -14.625066757202148
    10. ' ' → logprob: -15.125066757202148

Token 859: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2618301510810852
    2. '
' → logprob: -1.6368300914764404
    3. '        
' → logprob: -3.5118300914764404
    4. '\n' → logprob: -6.6368303298950195
    5. 'else' → logprob: -7.2618303298950195
    6. '\
' → logprob: -7.3868303298950195
    7. '  
' → logprob: -7.7618303298950195
    8. '    
' → logprob: -7.8868303298950195
    9. '#' → logprob: -7.8868303298950195
    10. '            
' → logprob: -8.26183032989502

Token 860: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0066971308551728725
    2. 'elif' → logprob: -5.506697177886963
    3. 'else' → logprob: -6.131697177886963
    4. '```' → logprob: -8.256696701049805
    5. '               ' → logprob: -9.756696701049805
    6. '        
' → logprob: -10.881696701049805
    7. 'if' → logprob: -11.006696701049805
    8. '#' → logprob: -11.256696701049805
    9. ' else' → logprob: -11.506696701049805
    10. ' elif' → logprob: -11.506696701049805

Token 861: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.057603396475315094
    2. 'elif' (adapté à ' elif') → logprob: -3.182603359222412
    3. 'else' → logprob: -4.307603359222412
    4. ' elif' → logprob: -7.182603359222412
    5. ' else' → logprob: -8.55760383605957
    6. '```' → logprob: -10.43260383605957
    7. 'if' → logprob: -10.55760383605957
    8. '   ' → logprob: -12.05760383605957
    9. ' if' → logprob: -12.05760383605957
    10. ' ' → logprob: -12.55760383605957

Token 862: ' ty' (ID: 10890)
  Prédit: ' ty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ty' → logprob: -0.002476604888215661
    2. 'ty' → logprob: -6.002476692199707
    3. 'Ty' → logprob: -15.877476692199707
    4. ' tyl' → logprob: -15.877476692199707
    5. '.ty' → logprob: -16.00247573852539
    6. ' ' → logprob: -16.12747573852539
    7. ' tx' → logprob: -16.12747573852539
    8. '_ty' → logprob: -16.25247573852539
    9. ' Ty' → logprob: -16.75247573852539
    10. '   ' → logprob: -17.25247573852539

Token 863: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.007608635816723108
    2. 'is' → logprob: -4.882608413696289
    3. '	is' → logprob: -13.757608413696289
    4. ' ' → logprob: -14.132608413696289
    5. '<|end|>' → logprob: -15.257608413696289
    6. ' ' → logprob: -15.632608413696289
    7. '[' → logprob: -16.13260841369629
    8. '```' → logprob: -16.63260841369629
    9. '<|end|>' → logprob: -16.88260841369629
    10. 'None' → logprob: -17.63260841369629

Token 864: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0619741789996624
    2. 'not' → logprob: -2.811974287033081
    3. 'None' → logprob: -12.43697452545166
    4. ' None' → logprob: -13.06197452545166
    5. '	not' → logprob: -15.81197452545166
    6. ' ' → logprob: -15.93697452545166
    7. 'Not' → logprob: -16.311973571777344
    8. ' ' → logprob: -16.686973571777344
    9. '_not' → logprob: -17.061973571777344
    10. 'n' → logprob: -19.811973571777344

Token 865: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.20486488938331604
    2. 'not' → logprob: -1.7048648595809937
    3. ' None' → logprob: -5.954864978790283
    4. ' not' → logprob: -7.079864978790283
    5. 'Not' → logprob: -11.954864501953125
    6. '_None' → logprob: -13.079864501953125
    7. 'none' → logprob: -13.829864501953125
    8. '_none' → logprob: -15.204864501953125
    9. '(None' → logprob: -15.454864501953125
    10. '_not' → logprob: -15.579864501953125

Token 866: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.01445799507200718
    2. 'and' → logprob: -4.264458179473877
    3. ' is' → logprob: -8.139457702636719
    4. '        ' → logprob: -13.889457702636719
    5. '	and' → logprob: -15.139457702636719
    6. '           ' → logprob: -15.389457702636719
    7. 'is' → logprob: -15.514457702636719
    8. ' ' → logprob: -15.639457702636719
    9. ' и' → logprob: -15.889457702636719
    10. '```' → logprob: -16.26445770263672

Token 867: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.31326770782470703
    2. 'abs' → logprob: -1.313267707824707
    3. '(abs' → logprob: -12.063267707824707
    4. 'tx' → logprob: -16.93826675415039
    5. '   ' → logprob: -17.06326675415039
    6. '.abs' → logprob: -17.18826675415039
    7. 'Abs' → logprob: -17.43826675415039
    8. ' ' → logprob: -17.43826675415039
    9. ' tx' → logprob: -17.68826675415039
    10. '0' → logprob: -18.31326675415039

Token 868: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: 0.0
    2. '(Py' → logprob: -17.375
    3. '(' → logprob: -18.75
    4. 'P' → logprob: -19.125
    5. ' (' → logprob: -19.5
    6. '((' → logprob: -21.125
    7. '(
' → logprob: -21.125
    8. '(Q' → logprob: -21.75
    9. '(B' → logprob: -22.375
    10. '(p' → logprob: -22.375

Token 869: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. '1' → logprob: -15.000000953674316
    3. ' [' → logprob: -16.625
    4. '[
' → logprob: -17.0
    5. 'y' → logprob: -17.25
    6. '   ' → logprob: -17.375
    7. '```' → logprob: -17.75
    8. ')' → logprob: -17.875
    9. '(' → logprob: -18.25
    10. '
' → logprob: -18.375

Token 870: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.26443302631378174
    2. '0' → logprob: -1.5144330263137817
    3. '[' → logprob: -4.389432907104492
    4. '(' → logprob: -12.014432907104492
    5. ' ' → logprob: -12.389432907104492
    6. '
' → logprob: -12.764432907104492
    7. '   ' → logprob: -14.014432907104492
    8. ')' → logprob: -14.264432907104492
    9. '```' → logprob: -14.389432907104492
    10. ']' → logprob: -14.514432907104492

Token 871: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.3136745095252991
    2. ')' → logprob: -1.3136744499206543
    3. '[' → logprob: -8.188674926757812
    4. ')<' → logprob: -9.938674926757812
    5. ')>' → logprob: -10.188674926757812
    6. ')]' → logprob: -10.813674926757812
    7. '})' → logprob: -12.063674926757812
    8. ''])' → logprob: -12.313674926757812
    9. '>)' → logprob: -12.563674926757812
    10. ' )' → logprob: -12.688674926757812

Token 872: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.1002296432852745
    2. ' <' → logprob: -2.3502297401428223
    3. ')<' → logprob: -11.475229263305664
    4. '()<' → logprob: -12.225229263305664
    5. '[' → logprob: -12.975229263305664
    6. ')' → logprob: -13.600229263305664
    7. ']<' → logprob: -14.850229263305664
    8. ' ' → logprob: -14.850229263305664
    9. '<size' → logprob: -14.975229263305664
    10. '<E' → logprob: -15.100229263305664

Token 873: ' EPS' (ID: 66979)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.0011708177626132965
    2. ' EPS' → logprob: -6.751170635223389
    3. 'ESP' → logprob: -14.626171112060547
    4. '1' → logprob: -16.876171112060547
    5. 'EP' → logprob: -17.001171112060547
    6. 'EPT' → logprob: -17.251171112060547
    7. 'ES' → logprob: -17.501171112060547
    8. 'EOS' → logprob: -17.876171112060547
    9. ' ' → logprob: -19.001171112060547
    10. 'EEP' → logprob: -19.251171112060547

Token 874: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.706918478012085
    2. ':' → logprob: -1.206918478012085
    3. ':
' → logprob: -1.956918478012085
    4. 'and' → logprob: -2.831918478012085
    5. '           ' → logprob: -5.081918716430664
    6. '       ' → logprob: -7.331918716430664
    7. ':

' → logprob: -8.456918716430664
    8. '          ' → logprob: -9.206918716430664
    9. '```' → logprob: -9.706918716430664
    10. '   ' → logprob: -9.706918716430664

Token 875: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00044437398901209235
    2. ':' → logprob: -8.125444412231445
    3. '       ' → logprob: -9.750444412231445
    4. '```' → logprob: -10.125444412231445
    5. ' and' → logprob: -11.125444412231445
    6. ':
' → logprob: -11.500444412231445
    7. '          ' → logprob: -12.000444412231445
    8. '               ' → logprob: -12.000444412231445
    9. '{
' → logprob: -12.250444412231445
    10. 'and' → logprob: -13.500444412231445

Token 876: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04831252619624138
    2. ' if' → logprob: -3.1733124256134033
    3. '               ' → logprob: -6.423312664031982
    4. '#' → logprob: -6.548312664031982
    5. 'if' (adapté à ' if') → logprob: -6.548312664031982
    6. '       ' → logprob: -7.923312664031982
    7. ' #' → logprob: -8.298312187194824
    8. '```' → logprob: -9.548312187194824
    9. '          ' → logprob: -10.548312187194824
    10. '   ' → logprob: -10.673312187194824

Token 877: ' ty' (ID: 10890)
  Prédit: ' ty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ty' → logprob: -0.061968132853507996
    2. 'ty' → logprob: -2.8119680881500244
    3. '.ty' → logprob: -15.811967849731445
    4. '_ty' → logprob: -16.061967849731445
    5. ' tyl' → logprob: -16.811967849731445
    6. ' tyr' → logprob: -16.811967849731445
    7. '   ' → logprob: -17.436967849731445
    8. ' ' → logprob: -17.561967849731445
    9. 'iy' → logprob: -18.061967849731445
    10. ' ' → logprob: -18.186967849731445

Token 878: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.007619171869009733
    2. '>' → logprob: -4.882619380950928
    3. ' ' → logprob: -11.75761890411377
    4. ' is' → logprob: -12.63261890411377
    5. ' ' → logprob: -13.50761890411377
    6. '   ' → logprob: -16.507619857788086
    7. '[' → logprob: -16.882619857788086
    8. '<|end|>' → logprob: -16.882619857788086
    9. '```' → logprob: -17.007619857788086
    10. '  ' → logprob: -17.007619857788086

Token 879: ' EPS' (ID: 66979)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.10020839422941208
    2. ' EPS' → logprob: -2.350208282470703
    3. ' ' → logprob: -14.225208282470703
    4. 'ESP' → logprob: -14.225208282470703
    5. 'EP' → logprob: -16.100208282470703
    6. '0' → logprob: -16.225208282470703
    7. 'EPT' → logprob: -16.475208282470703
    8. '1' → logprob: -17.100208282470703
    9. 'ES' → logprob: -17.100208282470703
    10. 'EOS' → logprob: -17.225208282470703

Token 880: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.011051944456994534
    2. 'and' → logprob: -4.511052131652832
    3. '            ' → logprob: -13.386052131652832
    4. ' ' → logprob: -13.386052131652832
    5. '	and' → logprob: -14.511052131652832
    6. ' ' → logprob: -15.011052131652832
    7. '           ' → logprob: -15.761052131652832
    8. ' и' → logprob: -17.636051177978516
    9. ' 
' → logprob: -17.761051177978516
    10. ' và' → logprob: -17.761051177978516

Token 881: ' ty' (ID: 10890)
  Prédit: 'ty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ty' → logprob: -0.22542136907577515
    2. ' ty' → logprob: -1.60042142868042
    3. ' ' → logprob: -12.850420951843262
    4. '   ' → logprob: -13.350420951843262
    5. '  ' → logprob: -13.850420951843262
    6. ' ' → logprob: -14.100420951843262
    7. '.ty' → logprob: -14.475420951843262
    8. ' tyr' → logprob: -15.225420951843262
    9. 'typ' → logprob: -15.662920951843262
    10. 'tyw' → logprob: -15.725420951843262

Token 882: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.07889948040246964
    2. '<' → logprob: -2.578899383544922
    3. '<t' → logprob: -12.453899383544922
    4. '<T' → logprob: -12.578899383544922
    5. ' ' → logprob: -13.828899383544922
    6. '<th' → logprob: -15.078899383544922
    7. '<|end|>' → logprob: -15.453899383544922
    8. '<int' → logprob: -15.453899383544922
    9. '<td' → logprob: -16.078899383544922
    10. '<len' → logprob: -16.578899383544922

Token 883: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.20141693949699402
    2. ' t' → logprob: -1.7014169692993164
    3. '   ' → logprob: -13.951416969299316
    4. ' ' → logprob: -14.076416969299316
    5. '	t' → logprob: -15.201416969299316
    6. '1' → logprob: -15.326416969299316
    7. '(t' → logprob: -15.763916969299316
    8. '  ' → logprob: -15.888916969299316
    9. '`t' → logprob: -15.951416969299316
    10. ' ' → logprob: -16.013916015625

Token 884: '_circle' (ID: 93883)
  Prédit: '_circle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_circle' → logprob: -4.127333340875339e-06
    2. 'circle' → logprob: -12.625003814697266
    3. '_c' → logprob: -14.875003814697266
    4. 'ircle' → logprob: -16.000003814697266
    5. 'Circle' → logprob: -17.250003814697266
    6. '+' → logprob: -17.375003814697266
    7. '_' → logprob: -17.375003814697266
    8. '```' → logprob: -17.750003814697266
    9. '-circle' → logprob: -17.875003814697266
    10. 't' → logprob: -18.000003814697266

Token 885: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.45848218582978e-06
    2. ' +' → logprob: -13.00000286102295
    3. '+
' → logprob: -17.250001907348633
    4. '+C' → logprob: -17.500001907348633
    5. '+t' → logprob: -18.375001907348633
    6. '+A' → logprob: -18.500001907348633
    7. '()+' → logprob: -18.625001907348633
    8. '```' → logprob: -18.750001907348633
    9. '<|end|>' → logprob: -19.625001907348633
    10. '+B' → logprob: -19.875001907348633

Token 886: 'EPS' (ID: 82793)
  Prédit: 'EPS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.0005740015767514706
    2. 'ty' → logprob: -8.250574111938477
    3. ' EPS' → logprob: -8.625574111938477
    4. 't' → logprob: -9.250574111938477
    5. '1' → logprob: -11.125574111938477
    6. ' ' → logprob: -11.625574111938477
    7. ' t' → logprob: -12.750574111938477
    8. 'ESP' → logprob: -12.875574111938477
    9. ' ty' → logprob: -13.625574111938477
    10. 'TY' → logprob: -13.750574111938477

Token 887: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5764514803886414
    2. ':' → logprob: -0.8264514803886414
    3. '               ' → logprob: -8.201451301574707
    4. ':

' → logprob: -9.451451301574707
    5. ' and' → logprob: -9.701451301574707
    6. '           ' → logprob: -9.951451301574707
    7. 'and' → logprob: -10.951451301574707
    8. ' :
' → logprob: -11.701451301574707
    9. '```' → logprob: -12.201451301574707
    10. ':
' → logprob: -12.326451301574707

Token 888: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00015276329941116273
    2. 'dist' → logprob: -10.250152587890625
    3. '			' → logprob: -10.375152587890625
    4. '              ' → logprob: -10.500152587890625
    5. ' dist' → logprob: -11.250152587890625
    6. '                ' → logprob: -11.750152587890625
    7. '	           ' → logprob: -11.875152587890625
    8. '                   ' → logprob: -12.125152587890625
    9. '           ' → logprob: -12.250152587890625
    10. '		       ' → logprob: -12.750152587890625

Token 889: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.12766987085342407
    2. 'dist' (adapté à ' dist') → logprob: -2.1276698112487793
    3. '               ' → logprob: -7.252669811248779
    4. '                   ' → logprob: -10.502670288085938
    5. '	dist' → logprob: -12.627670288085938
    6. '                ' → logprob: -14.377670288085938
    7. '           ' → logprob: -14.627670288085938
    8. '_dist' → logprob: -14.627670288085938
    9. '(dist' → logprob: -15.127670288085938
    10. '   ' → logprob: -15.502670288085938

Token 890: '_hit' (ID: 91390)
  Prédit: '_hit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hit' → logprob: -4.036524842376821e-05
    2. '_total' → logprob: -10.375040054321289
    3. 'hit' → logprob: -12.375040054321289
    4. '_hits' → logprob: -13.375040054321289
    5. '_' → logprob: -13.875040054321289
    6. '=' → logprob: -14.250040054321289
    7. '
' → logprob: -15.250040054321289
    8. 'Hit' → logprob: -15.250040054321289
    9. 'total' → logprob: -15.500040054321289
    10. '(hit' → logprob: -15.625040054321289

Token 891: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740838408470154
    2. '=' → logprob: -0.9740838408470154
    3. '   ' → logprob: -12.84908390045166
    4. ' ' → logprob: -12.97408390045166
    5. '=
' → logprob: -14.22408390045166
    6. ' =
' → logprob: -15.72408390045166
    7. '+=' → logprob: -15.97408390045166
    8. '  ' → logprob: -16.099082946777344
    9. '    ' → logprob: -16.099082946777344
    10. '	' → logprob: -16.224082946777344

Token 892: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.126929372549057
    2. ' dist' → logprob: -2.12692928314209
    3. '   ' → logprob: -14.12692928314209
    4. '	dist' → logprob: -15.00192928314209
    5. '(dist' → logprob: -15.75192928314209
    6. '_dist' → logprob: -17.876930236816406
    7. 'Dist' → logprob: -18.001930236816406
    8. ' ' → logprob: -18.626930236816406
    9. '.dist' → logprob: -18.751930236816406
    10. '  ' → logprob: -19.376930236816406

Token 893: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.00012821101699955761
    2. 'total' → logprob: -9.000127792358398
    3. 'dist' → logprob: -12.500127792358398
    4. 'Total' → logprob: -14.750127792358398
    5. 'otal' → logprob: -15.250127792358398
    6. 'tot' → logprob: -15.500127792358398
    7. ' total' → logprob: -17.0001277923584
    8. ' dist' → logprob: -17.1251277923584
    9. '_tot' → logprob: -17.1251277923584
    10. '_dist' → logprob: -17.5001277923584

Token 894: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.016035424545407295
    2. '+' → logprob: -4.141035556793213
    3. ' ' → logprob: -14.641035079956055
    4. ' ' → logprob: -14.891035079956055
    5. '=' → logprob: -16.266035079956055
    6. '   ' → logprob: -16.266035079956055
    7. '```' → logprob: -17.141035079956055
    8. ' +=' → logprob: -17.391035079956055
    9. '()+' → logprob: -17.641035079956055
    10. '＋' → logprob: -17.891035079956055

Token 895: ' norm' (ID: 7882)
  Prédit: 'norm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'norm' → logprob: -0.3868725001811981
    2. ' norm' → logprob: -1.1368725299835205
    3. '(norm' → logprob: -13.636872291564941
    4. 'dist' → logprob: -15.761872291564941
    5. ' dist' → logprob: -16.636873245239258
    6. ' ' → logprob: -16.886873245239258
    7. 'n' → logprob: -17.636873245239258
    8. '   ' → logprob: -17.761873245239258
    9. '
' → logprob: -18.511873245239258
    10. '.norm' → logprob: -18.761873245239258

Token 896: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -1.1756367712223437e-05
    2. '(' → logprob: -11.375011444091797
    3. 'm' → logprob: -15.625011444091797
    4. '```' → logprob: -17.750011444091797
    5. ' (' → logprob: -18.250011444091797
    6. '(
' → logprob: -19.000011444091797
    7. '`' → logprob: -19.250011444091797
    8. '	m' → logprob: -20.000011444091797
    9. '(M' → logprob: -20.875011444091797
    10. '   ' → logprob: -21.125011444091797

Token 897: 'ul' (ID: 361)
  Prédit: 'ul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -1.8193366486229934e-05
    2. 'mul' → logprob: -11.000018119812012
    3. 'ult' → logprob: -14.875018119812012
    4. '(V' → logprob: -15.125018119812012
    5. '(' → logprob: -16.000019073486328
    6. ' mul' → logprob: -16.125019073486328
    7. '[' → logprob: -16.375019073486328
    8. '(P' → logprob: -16.375019073486328
    9. '(m' → logprob: -16.500019073486328
    10. 'V' → logprob: -16.500019073486328

Token 898: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.0008054602658376098
    2. 'V' → logprob: -7.125805377960205
    3. 'v' → logprob: -15.625805854797363
    4. '(' → logprob: -15.750805854797363
    5. '```' → logprob: -15.875805854797363
    6. '(v' → logprob: -16.125804901123047
    7. ' (' → logprob: -16.250804901123047
    8. ')' → logprob: -16.375804901123047
    9. 'mul' → logprob: -16.500804901123047
    10. 'm' → logprob: -17.000804901123047

Token 899: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3199920178740285e-05
    2. '(' → logprob: -11.875022888183594
    3. ',V' → logprob: -12.125022888183594
    4. ',m' → logprob: -12.375022888183594
    5. ' ,' → logprob: -13.000022888183594
    6. 'V' → logprob: -13.500022888183594
    7. 'mul' → logprob: -14.000022888183594
    8. '[' → logprob: -15.000022888183594
    9. '```' → logprob: -15.125022888183594
    10. ' (' → logprob: -15.625022888183594

Token 900: ' ty' (ID: 10890)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.0009010965004563332
    2. 'mul' → logprob: -7.125901222229004
    3. '(V' → logprob: -10.500901222229004
    4. ' V' → logprob: -11.250901222229004
    5. '(' → logprob: -11.375901222229004
    6. 'vy' → logprob: -11.750901222229004
    7. 'P' → logprob: -11.750901222229004
    8. 'ty' → logprob: -11.875901222229004
    9. 'py' → logprob: -12.000901222229004
    10. 'v' → logprob: -12.125901222229004

Token 901: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5278690457344055
    2. ')
' → logprob: -0.9028690457344055
    3. '())
' → logprob: -5.90286922454834
    4. '))
' → logprob: -7.40286922454834
    5. '))' → logprob: -7.40286922454834
    6. '())' → logprob: -7.40286922454834
    7. '()' → logprob: -9.90286922454834
    8. ')
' → logprob: -9.90286922454834
    9. '               ' → logprob: -10.15286922454834
    10. ')

' → logprob: -12.15286922454834

Token 902: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006979987490922213
    2. '                   ' → logprob: -5.131979942321777
    3. '                ' → logprob: -8.381979942321777
    4. 'return' → logprob: -8.881979942321777
    5. '```' → logprob: -9.381979942321777
    6. '           ' → logprob: -9.506979942321777
    7. '			' → logprob: -10.131979942321777
    8. '	           ' → logprob: -10.131979942321777
    9. '		           ' → logprob: -10.131979942321777
    10. '+' → logprob: -10.256979942321777

Token 903: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.007135055027902126
    2. ' if' → logprob: -5.007134914398193
    3. '               ' → logprob: -7.882134914398193
    4. '                   ' → logprob: -10.132135391235352
    5. 'return' → logprob: -13.632135391235352
    6. '                ' → logprob: -14.757135391235352
    7. '           ' → logprob: -15.757135391235352
    8. '              ' → logprob: -16.13213539123535
    9. '                 ' → logprob: -16.25713539123535
    10. '                  ' → logprob: -16.50713539123535

Token 904: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.06213920935988426
    2. ' dist' → logprob: -2.8121392726898193
    3. '(dist' → logprob: -9.437139511108398
    4. '	dist' → logprob: -9.812139511108398
    5. 'ty' → logprob: -10.437139511108398
    6. '_dist' → logprob: -12.937139511108398
    7. '   ' → logprob: -13.312139511108398
    8. '  ' → logprob: -14.187139511108398
    9. '.dist' → logprob: -14.937139511108398
    10. ' ty' → logprob: -15.062139511108398

Token 905: '_hit' (ID: 91390)
  Prédit: '_hit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hit' → logprob: -0.0007787733338773251
    2. 'hit' → logprob: -7.750778675079346
    3. '_total' → logprob: -8.375779151916504
    4. 'Hit' → logprob: -9.875779151916504
    5. '_dist' → logprob: -11.375779151916504
    6. '>' → logprob: -11.375779151916504
    7. '   ' → logprob: -12.000779151916504
    8. 'ty' → logprob: -12.500779151916504
    9. '_ty' → logprob: -13.000779151916504
    10. '(hit' → logprob: -13.000779151916504

Token 906: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.07141272723674774
    2. ' <' → logprob: -2.8214128017425537
    3. '<=' → logprob: -5.196412563323975
    4. '+' → logprob: -6.571412563323975
    5. '<' → logprob: -6.946412563323975
    6. ' +' → logprob: -7.446412563323975
    7. ' >' → logprob: -7.696412563323975
    8. ' ' → logprob: -8.821413040161133
    9. '```' → logprob: -9.321413040161133
    10. '>' → logprob: -9.321413040161133

Token 907: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.026303669437766075
    2. ' D' → logprob: -3.651303768157959
    3. '	D' → logprob: -14.0263032913208
    4. ' ' → logprob: -14.1513032913208
    5. '   ' → logprob: -14.7763032913208
    6. ' ' → logprob: -15.0263032913208
    7. '(D' → logprob: -15.9013032913208
    8. '1' → logprob: -16.026304244995117
    9. '
' → logprob: -16.276304244995117
    10. '>D' → logprob: -16.401304244995117

Token 908: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0001720742875477299
    2. ' +' → logprob: -9.000171661376953
    3. '[' → logprob: -10.500171661376953
    4. '+
' → logprob: -11.750171661376953
    5. 'EPS' → logprob: -12.000171661376953
    6. ' ' → logprob: -13.000171661376953
    7. '   ' → logprob: -13.875171661376953
    8. ' EPS' → logprob: -14.375171661376953
    9. '+D' → logprob: -15.000171661376953
    10. '+[' → logprob: -15.250171661376953

Token 909: 'EPS' (ID: 82793)
  Prédit: 'EPS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.0001984146365430206
    2. ' EPS' → logprob: -8.750198364257812
    3. ' ' → logprob: -11.000198364257812
    4. 'D' → logprob: -11.500198364257812
    5. '1' → logprob: -11.750198364257812
    6. '   ' → logprob: -13.625198364257812
    7. 'ESP' → logprob: -13.625198364257812
    8. '  ' → logprob: -14.625198364257812
    9. '0' → logprob: -14.875198364257812
    10. 'eps' → logprob: -15.000198364257812

Token 910: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.06824517995119095
    2. ':' → logprob: -3.0682451725006104
    3. '                   ' → logprob: -4.0682454109191895
    4. '               ' → logprob: -6.8182454109191895
    5. '):
' → logprob: -7.6932454109191895
    6. ':return' → logprob: -7.8182454109191895
    7. 'return' → logprob: -9.068244934082031
    8. '           ' → logprob: -9.943244934082031
    9. '```' → logprob: -10.193244934082031
    10. ' return' → logprob: -10.318244934082031

Token 911: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005198536440730095
    2. 'return' → logprob: -5.7551984786987305
    3. ' return' → logprob: -6.2551984786987305
    4. '               ' → logprob: -10.38019847869873
    5. '   ' → logprob: -10.63019847869873
    6. '                       ' → logprob: -10.88019847869873
    7. '                  ' → logprob: -11.75519847869873
    8. '                    ' → logprob: -12.63019847869873
    9. '           ' → logprob: -12.75519847869873
    10. '				' → logprob: -13.13019847869873

Token 912: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.009208764880895615
    2. ' return' → logprob: -4.759208679199219
    3. '                   ' → logprob: -7.509208679199219
    4. '                       ' → logprob: -10.759208679199219
    5. '               ' → logprob: -11.384208679199219
    6. '	return' → logprob: -11.634208679199219
    7. '   ' → logprob: -12.634208679199219
    8. '       ' → logprob: -14.384208679199219
    9. '           ' → logprob: -14.509208679199219
    10. ' ' → logprob: -16.63420867919922

Token 913: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0005530327325686812
    2. ' dist' → logprob: -7.500553131103516
    3. '(dist' → logprob: -18.500553131103516
    4. 'int' → logprob: -18.625553131103516
    5. '	dist' → logprob: -19.000553131103516
    6. 'float' → logprob: -20.250553131103516
    7. 'Dist' → logprob: -20.500553131103516
    8. 'None' → logprob: -20.750553131103516
    9. 'distance' → logprob: -21.375553131103516
    10. 'dest' → logprob: -21.375553131103516

Token 914: '_hit' (ID: 91390)
  Prédit: '_hit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hit' → logprob: -2.093505099765025e-05
    2. 'Hit' → logprob: -11.750020980834961
    3. '_total' → logprob: -11.750020980834961
    4. '_dist' → logprob: -12.875020980834961
    5. 'hit' → logprob: -14.375020980834961
    6. '_hits' → logprob: -14.500020980834961
    7. 'dist' → logprob: -14.750020980834961
    8. '_hot' → logprob: -15.500020980834961
    9. '_h' → logprob: -15.500020980834961
    10. '_hat' → logprob: -15.625020980834961

Token 915: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007898329757153988
    2. '
' → logprob: -5.007898330688477
    3. '        
' → logprob: -7.382898330688477
    4. '#' → logprob: -7.757898330688477
    5. '               ' → logprob: -10.257898330688477
    6. 'else' → logprob: -10.507898330688477
    7. '           ' → logprob: -11.132898330688477
    8. '```' → logprob: -11.257898330688477
    9. '
' → logprob: -11.382898330688477
    10. '    
' → logprob: -11.757898330688477

Token 916: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005427511874586344
    2. '
' → logprob: -5.255427360534668
    3. '        
' → logprob: -8.880427360534668
    4. 'else' → logprob: -10.130427360534668
    5. '           ' → logprob: -12.255427360534668
    6. '```' → logprob: -12.630427360534668
    7. '               ' → logprob: -13.505427360534668
    8. '#' → logprob: -13.630427360534668
    9. '    
' → logprob: -14.130427360534668
    10. '
' → logprob: -14.380427360534668

Token 917: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019367238273844123
    2. 'if' → logprob: -6.751936912536621
    3. '
' → logprob: -7.876936912536621
    4. '        
' → logprob: -8.001936912536621
    5. 'else' → logprob: -11.126936912536621
    6. '```' → logprob: -11.126936912536621
    7. '#' → logprob: -11.626936912536621
    8. ' if' → logprob: -12.126936912536621
    9. 'import' → logprob: -13.501936912536621
    10. 'elif' (adapté à ' elif') → logprob: -13.751936912536621

Token 918: ' P' (ID: 398)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.22202056646347046
    2. ' abs' → logprob: -1.8470206260681152
    3. 'False' → logprob: -4.097020626068115
    4. 'P' → logprob: -5.097020626068115
    5. 'dist' → logprob: -5.347020626068115
    6. ' P' → logprob: -5.847020626068115
    7. ' dist' → logprob: -5.847020626068115
    8. 'norm' → logprob: -5.972020626068115
    9. ' False' → logprob: -6.472020626068115
    10. '(abs' → logprob: -6.597020626068115

Token 919: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.367595374584198
    2. '==' → logprob: -1.6175954341888428
    3. '[' → logprob: -2.2425954341888428
    4. '==(' → logprob: -5.867595195770264
    5. '==
' → logprob: -9.367595672607422
    6. ' [' → logprob: -9.992595672607422
    7. ' ' → logprob: -10.617595672607422
    8. ']==' → logprob: -11.117595672607422
    9. '=' → logprob: -11.867595672607422
    10. ' ' → logprob: -12.117595672607422

Token 920: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.061967797577381134
    2. ' (' → logprob: -2.8119678497314453
    3. ' ' → logprob: -16.311967849731445
    4. '0' → logprob: -17.061967849731445
    5. '(-' → logprob: -17.811967849731445
    6. '(v' → logprob: -18.311967849731445
    7. '(V' → logprob: -18.561967849731445
    8. '(None' → logprob: -18.811967849731445
    9. '(P' → logprob: -19.311967849731445
    10. '(
' → logprob: -19.686967849731445

Token 921: '0' (ID: 15)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009832000359892845
    2. '0' → logprob: -4.63483190536499
    3. ' (' → logprob: -9.509832382202148
    4. ' ' → logprob: -13.384832382202148
    5. ')' → logprob: -15.384832382202148
    6. '   ' → logprob: -15.759832382202148
    7. '[' → logprob: -17.25983238220215
    8. '
' → logprob: -17.25983238220215
    9. '(
' → logprob: -18.13483238220215
    10. '{' → logprob: -18.13483238220215

Token 922: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.981667537620524e-06
    2. ' ,' → logprob: -13.250001907348633
    3. '0' → logprob: -16.625001907348633
    4. ',
' → logprob: -17.000001907348633
    5. ')' → logprob: -19.750001907348633
    6. ',

' → logprob: -21.125001907348633
    7. '،' → logprob: -21.125001907348633
    8. '```' → logprob: -21.125001907348633
    9. '

' → logprob: -21.375001907348633
    10. ' ' → logprob: -21.375001907348633

Token 923: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -19.625011444091797
    4. '  ' → logprob: -20.250011444091797
    5. '
' → logprob: -20.625011444091797
    6. ')' → logprob: -22.250011444091797
    7. '```' → logprob: -22.250011444091797
    8. '    ' → logprob: -22.500011444091797
    9. ' ' → logprob: -22.500011444091797
    10. '	' → logprob: -23.125011444091797

Token 924: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06227799877524376
    2. '):' → logprob: -2.8122780323028564
    3. '       ' → logprob: -8.562277793884277
    4. ')' → logprob: -9.562277793884277
    5. ' ):
' → logprob: -10.687277793884277
    6. '):
' → logprob: -11.187277793884277
    7. '):

' → logprob: -12.312277793884277
    8. '   ' → logprob: -12.687277793884277
    9. '           ' → logprob: -13.062277793884277
    10. ' ):' → logprob: -13.687277793884277

Token 925: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002755545312538743
    2. 'return' → logprob: -6.252755641937256
    3. ' return' → logprob: -7.627755641937256
    4. '               ' → logprob: -8.002755165100098
    5. '       ' → logprob: -12.752755165100098
    6. '                   ' → logprob: -14.252755165100098
    7. '		' → logprob: -14.877755165100098
    8. '
' → logprob: -15.127755165100098
    9. '   ' → logprob: -15.252755165100098
    10. '	return' → logprob: -15.752755165100098

Token 926: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0011555780656635761
    2. ' return' → logprob: -7.501155376434326
    3. '               ' → logprob: -7.751155376434326
    4. '           ' → logprob: -9.126155853271484
    5. '                   ' → logprob: -9.876155853271484
    6. '	return' → logprob: -12.251155853271484
    7. '   ' → logprob: -12.876155853271484
    8. '       ' → logprob: -13.126155853271484
    9. '0' → logprob: -13.251155853271484
    10. '                       ' → logprob: -15.001155853271484

Token 927: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.014182545244693756
    2. ' dist' → logprob: -4.2641825675964355
    3. '0' → logprob: -10.889182090759277
    4. '   ' → logprob: -16.014183044433594
    5. '(dist' → logprob: -16.639183044433594
    6. 'Dist' → logprob: -17.014183044433594
    7. '	dist' → logprob: -17.014183044433594
    8. ' ' → logprob: -17.264183044433594
    9. '```' → logprob: -18.639183044433594
    10. '    ' → logprob: -18.764183044433594

Token 928: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -9.253090865968261e-06
    2. 'total' → logprob: -11.625009536743164
    3. 'Total' → logprob: -16.000009536743164
    4. ' total' → logprob: -17.000009536743164
    5. '_tot' → logprob: -17.625009536743164
    6. '_TOTAL' → logprob: -19.500009536743164
    7. '_Total' → logprob: -19.750009536743164
    8. ' _' → logprob: -20.125009536743164
    9. 'otal' → logprob: -20.250009536743164
    10. '	total' → logprob: -20.750009536743164

Token 929: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015395039226859808
    2. '        
' → logprob: -6.626539707183838
    3. '
' → logprob: -9.25153923034668
    4. '           ' → logprob: -9.75153923034668
    5. 'if' → logprob: -11.00153923034668
    6. ' if' → logprob: -11.50153923034668
    7. '            
' → logprob: -11.50153923034668
    8. '       
' → logprob: -13.00153923034668
    9. '  
' → logprob: -13.12653923034668
    10. '#' → logprob: -13.12653923034668

Token 930: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033749574795365334
    2. 't' → logprob: -6.503375053405762
    3. 'if' → logprob: -7.003375053405762
    4. '        
' → logprob: -7.128375053405762
    5. ' if' → logprob: -9.753375053405762
    6. ' t' → logprob: -10.878375053405762
    7. '
' → logprob: -11.003375053405762
    8. '```' → logprob: -11.003375053405762
    9. 'v' → logprob: -12.003375053405762
    10. 'n' → logprob: -12.378375053405762

Token 931: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5785102248191833
    2. 'if' → logprob: -0.8285102248191833
    3. ' if' → logprob: -6.203510284423828
    4. 't' → logprob: -7.578510284423828
    5. 'd' → logprob: -11.703510284423828
    6. 'p' → logprob: -12.203510284423828
    7. '#' (adapté à ' #') → logprob: -12.453510284423828
    8. '        
' → logprob: -12.828510284423828
    9. ' t' → logprob: -13.203510284423828
    10. '   ' → logprob: -13.328510284423828

Token 932: ' now' (ID: 1954)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.285679429769516
    2. 'P' → logprob: -1.5356794595718384
    3. '       ' → logprob: -3.660679340362549
    4. 't' → logprob: -5.535679340362549
    5. ' if' → logprob: -6.285679340362549
    6. '#' → logprob: -6.535679340362549
    7. '   ' → logprob: -9.410679817199707
    8. 'dist' → logprob: -10.160679817199707
    9. ' P' → logprob: -10.535679817199707
    10. 'p' → logprob: -10.535679817199707

Token 933: ' move' (ID: 5275)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.34084171056747437
    2. '       ' → logprob: -1.3408417701721191
    3. 'if' → logprob: -3.965841770172119
    4. '#' → logprob: -5.465841770172119
    5. ' #' → logprob: -6.590841770172119
    6. ' P' → logprob: -6.590841770172119
    7. 'P' → logprob: -7.340841770172119
    8. 't' → logprob: -8.590841293334961
    9. ',' → logprob: -8.715841293334961
    10. ' t' → logprob: -8.965841293334961

Token 934: ' to' (ID: 316)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.09108686447143555
    2. '(P' → logprob: -3.3410868644714355
    3. ' =' → logprob: -3.9660868644714355
    4. ' P' → logprob: -4.2160868644714355
    5. ',' → logprob: -5.3410868644714355
    6. 'to' → logprob: -5.4660868644714355
    7. '=' → logprob: -5.7160868644714355
    8. 't' → logprob: -6.7160868644714355
    9. '   ' → logprob: -7.0910868644714355
    10. '(' → logprob: -7.5910868644714355

Token 935: ' next' (ID: 2613)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.08191842585802078
    2. 'add' → logprob: -2.831918478012085
    3. ' add' → logprob: -4.081918239593506
    4. ' mul' → logprob: -5.956918239593506
    5. 'P' → logprob: -9.331918716430664
    6. 'sub' → logprob: -9.456918716430664
    7. '(add' → logprob: -9.956918716430664
    8. '(P' → logprob: -10.956918716430664
    9. ' P' → logprob: -11.456918716430664
    10. '(m' → logprob: -11.581918716430664

Token 936: ' reflection' (ID: 39755)
  Prédit: '_point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_point' → logprob: -1.5216896533966064
    2. 'pos' → logprob: -1.6466896533966064
    3. ' point' → logprob: -1.7716896533966064
    4. ' P' → logprob: -2.0216896533966064
    5. 'point' → logprob: -2.1466896533966064
    6. 'P' → logprob: -2.6466896533966064
    7. '_pos' → logprob: -3.0216896533966064
    8. 'position' → logprob: -4.396689414978027
    9. '       ' → logprob: -4.521689414978027
    10. ' position' → logprob: -4.646689414978027

Token 937: ' point' (ID: 2438)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27395308017730713
    2. ' t' → logprob: -1.6489530801773071
    3. 't' → logprob: -3.1489529609680176
    4. '        
' → logprob: -7.023952960968018
    5. ' if' → logprob: -7.148952960968018
    6. ',' → logprob: -7.523952960968018
    7. '	' → logprob: -7.773952960968018
    8. ' P' → logprob: -7.898952960968018
    9. '	t' → logprob: -8.648953437805176
    10. 'P' → logprob: -8.773953437805176

Token 938: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018499676138162613
    2. 't' → logprob: -4.643499851226807
    3. 'P' → logprob: -5.268499851226807
    4. ' t' → logprob: -6.143499851226807
    5. ' P' → logprob: -7.518499851226807
    6. ',' → logprob: -8.393499374389648
    7. ' if' → logprob: -8.393499374389648
    8. 'if' → logprob: -9.268499374389648
    9. '        
' → logprob: -9.518499374389648
    10. 'p' → logprob: -10.768499374389648

Token 939: ' until' (ID: 4609)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.7857033014297485
    2. 'continue' → logprob: -1.5357033014297485
    3. 't' → logprob: -2.535703182220459
    4. ' continue' → logprob: -2.660703182220459
    5. 'return' → logprob: -3.910703182220459
    6. ' break' → logprob: -3.910703182220459
    7. 'distance' → logprob: -4.035703182220459
    8. 'update' → logprob: -4.160703182220459
    9. 'exit' → logprob: -4.285703182220459
    10. ' t' → logprob: -4.285703182220459

Token 940: ' D' (ID: 415)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.21076780557632446
    2. 'D' → logprob: -2.8357677459716797
    3. ' t' → logprob: -2.8357677459716797
    4. 'dist' → logprob: -2.9607677459716797
    5. ' dist' → logprob: -4.71076774597168
    6. '(t' → logprob: -5.71076774597168
    7. 'distance' → logprob: -5.71076774597168
    8. '(P' → logprob: -6.46076774597168
    9. 'P' → logprob: -6.58576774597168
    10. ' D' → logprob: -7.33576774597168

Token 941: ' reached' (ID: 15237)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31235483288764954
    2. ' if' → logprob: -1.5623548030853271
    3. 'if' → logprob: -3.187354803085327
    4. ',' → logprob: -4.937355041503906
    5. 't' → logprob: -6.312355041503906
    6. '        
' → logprob: -7.062355041503906
    7. ' t' → logprob: -7.062355041503906
    8. '=' → logprob: -7.062355041503906
    9. 'distance' → logprob: -7.062355041503906
    10. 'step' → logprob: -7.312355041503906

Token 942: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10713567584753036
    2. ' if' → logprob: -2.982135772705078
    3. 'if' → logprob: -3.982135772705078
    4. 't' → logprob: -3.982135772705078
    5. ' t' → logprob: -4.357135772705078
    6. '        
' → logprob: -7.607135772705078
    7. '	' → logprob: -9.857135772705078
    8. '```' → logprob: -9.982135772705078
    9. ',' → logprob: -10.357135772705078
    10. '
' → logprob: -10.607135772705078

Token 943: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019341122824698687
    2. ' if' → logprob: -7.251934051513672
    3. ' t' → logprob: -7.751934051513672
    4. 't' → logprob: -7.876934051513672
    5. 'if' → logprob: -8.626934051513672
    6. '	' → logprob: -9.126934051513672
    7. '        
' → logprob: -9.751934051513672
    8. '```' → logprob: -11.001934051513672
    9. '	t' → logprob: -12.001934051513672
    10. '	if' → logprob: -12.001934051513672

Token 944: ' dist' (ID: 3601)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06789205223321915
    2. 't' → logprob: -2.942892074584961
    3. '       ' → logprob: -4.442892074584961
    4. 'move' → logprob: -7.567892074584961
    5. ' if' → logprob: -7.692892074584961
    6. 'dt' → logprob: -9.442892074584961
    7. 'step' → logprob: -9.942892074584961
    8. 'travel' → logprob: -11.317892074584961
    9. 'length' → logprob: -11.942892074584961
    10. 'next' → logprob: -12.192892074584961

Token 945: '_to' (ID: 5089)
  Prédit: '_step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -0.28429025411605835
    2. '_increment' → logprob: -2.034290313720703
    3. '_move' → logprob: -3.409290313720703
    4. '_to' → logprob: -3.409290313720703
    5. '_' → logprob: -4.159290313720703
    6. '_add' → logprob: -4.659290313720703
    7. '_needed' → logprob: -4.784290313720703
    8. '_tr' → logprob: -5.784290313720703
    9. ' +=' → logprob: -5.909290313720703
    10. '_next' → logprob: -6.159290313720703

Token 946: '_circle' (ID: 93883)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.12753187119960785
    2. '_move' → logprob: -3.2525317668914795
    3. 'move' → logprob: -3.7525317668914795
    4. ' t' → logprob: -4.252532005310059
    5. 'travel' → logprob: -4.252532005310059
    6. 'reflect' → logprob: -4.627532005310059
    7. 'add' → logprob: -5.877532005310059
    8. '_tr' → logprob: -5.877532005310059
    9. '=' → logprob: -6.002532005310059
    10. 'trav' → logprob: -6.252532005310059

Token 947: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20165111124515533
    2. '=' → logprob: -1.7016510963439941
    3. ' +=' → logprob: -8.576651573181152
    4. '+=' → logprob: -9.951651573181152
    5. ' ' → logprob: -14.576651573181152
    6. '   ' → logprob: -15.326651573181152
    7. ',' → logprob: -15.576651573181152
    8. '+' → logprob: -15.826651573181152
    9. ' ' → logprob: -16.076650619506836
    10. 's' → logprob: -16.326650619506836

Token 948: ' norm' (ID: 7882)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.029709752649068832
    2. 'norm' → logprob: -4.029709815979004
    3. 'math' → logprob: -5.279709815979004
    4. ' t' → logprob: -5.529709815979004
    5. 'R' → logprob: -7.654709815979004
    6. ' math' → logprob: -7.779709815979004
    7. 'abs' → logprob: -7.779709815979004
    8. 'dist' → logprob: -7.904709815979004
    9. ' norm' → logprob: -8.404709815979004
    10. '(t' → logprob: -8.779709815979004

Token 949: '(m' (ID: 2145)
  Prédit: '(P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -1.0856339931488037
    2. '(sub' → logprob: -1.0856339931488037
    3. '(V' → logprob: -1.3356339931488037
    4. '((' → logprob: -3.4606339931488037
    5. '(m' → logprob: -3.5856339931488037
    6. '(' → logprob: -6.710634231567383
    7. 'sub' → logprob: -7.585634231567383
    8. '(add' → logprob: -7.835634231567383
    9. '(v' → logprob: -9.210634231567383
    10. 'mul' → logprob: -9.210634231567383

Token 950: 'ul' (ID: 361)
  Prédit: 'ul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -0.001838560332544148
    2. '(V' → logprob: -7.001838684082031
    3. 'mul' → logprob: -7.876838684082031
    4. 'sub' → logprob: -8.876838684082031
    5. 'V' → logprob: -9.376838684082031
    6. '(P' → logprob: -9.501838684082031
    7. '(sub' → logprob: -9.876838684082031
    8. 'ult' → logprob: -10.126838684082031
    9. ')' → logprob: -10.751838684082031
    10. '(' → logprob: -10.751838684082031

Token 951: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.00033665422233752906
    2. 'V' → logprob: -8.000336647033691
    3. ')' → logprob: -15.250336647033691
    4. '(' → logprob: -15.250336647033691
    5. ' (' → logprob: -15.625336647033691
    6. '   ' → logprob: -15.750336647033691
    7. '(P' → logprob: -16.125337600708008
    8. '	V' → logprob: -16.125337600708008
    9. '(v' → logprob: -16.625337600708008
    10. '
' → logprob: -16.750337600708008

Token 952: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004655356984585524
    2. ',t' → logprob: -5.379655361175537
    3. ' ,' → logprob: -10.504654884338379
    4. ',(' → logprob: -12.879654884338379
    5. '(' → logprob: -13.629654884338379
    6. ',m' → logprob: -14.254654884338379
    7. ',
' → logprob: -14.504654884338379
    8. '(t' → logprob: -14.629654884338379
    9. 't' → logprob: -14.879654884338379
    10. ',n' → logprob: -15.129654884338379

Token 953: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.02325025200843811
    2. ' t' → logprob: -3.7732503414154053
    3. '(t' → logprob: -13.023250579833984
    4. ' ' → logprob: -13.773250579833984
    5. '   ' → logprob: -14.273250579833984
    6. 'min' → logprob: -15.148250579833984
    7. '	t' → logprob: -15.148250579833984
    8. ')t' → logprob: -16.148250579833984
    9. '`t' → logprob: -16.523250579833984
    10. '  ' → logprob: -17.023250579833984

Token 954: '_circle' (ID: 93883)
  Prédit: '_circle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_circle' → logprob: -6.704273118884885e-07
    2. 'circle' → logprob: -14.750000953674316
    3. '_c' → logprob: -16.625
    4. '_' → logprob: -16.75
    5. ')' → logprob: -17.375
    6. '```' → logprob: -18.375
    7. '(circle' → logprob: -18.75
    8. '_cube' → logprob: -19.125
    9. ')_' → logprob: -19.25
    10. '_cycle' → logprob: -19.375

Token 955: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.002875369042158127
    2. '))
' → logprob: -6.252875328063965
    3. ' ))' → logprob: -7.002875328063965
    4. ' ))
' → logprob: -10.877875328063965
    5. ')' → logprob: -11.627875328063965
    6. '))

' → logprob: -12.627875328063965
    7. ' if' → logprob: -12.752875328063965
    8. ' ' → logprob: -13.877875328063965
    9. '))
' → logprob: -14.252875328063965
    10. 'if' → logprob: -14.252875328063965

Token 956: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09957397729158401
    2. '
' → logprob: -2.474574089050293
    3. ' if' → logprob: -4.724574089050293
    4. 'if' → logprob: -6.724574089050293
    5. '        
' → logprob: -8.974574089050293
    6. '```' → logprob: -9.849574089050293
    7. 'If' → logprob: -10.099574089050293
    8. ',' → logprob: -10.224574089050293
    9. ')
' → logprob: -10.349574089050293
    10. '   ' → logprob: -10.724574089050293

Token 957: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00011939727846765891
    2. ' t' → logprob: -9.25011920928955
    3. 'not' → logprob: -11.62511920928955
    4. 'dist' → logprob: -12.00011920928955
    5. 'abs' → logprob: -13.25011920928955
    6. 'is' → logprob: -13.37511920928955
    7. '`t' → logprob: -13.37511920928955
    8. '(t' → logprob: -13.75011920928955
    9. 'math' → logprob: -14.12511920928955
    10. '   ' → logprob: -14.75011920928955

Token 958: '_circle' (ID: 93883)
  Prédit: '_circle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_circle' → logprob: -2.1008713702030946e-06
    2. 'circle' → logprob: -13.250001907348633
    3. '_' → logprob: -15.625001907348633
    4. '_c' → logprob: -16.500001907348633
    5. 'ircle' → logprob: -17.125001907348633
    6. '(circle' → logprob: -17.500001907348633
    7. '_total' → logprob: -17.750001907348633
    8. '_cycle' → logprob: -19.250001907348633
    9. '-circle' → logprob: -19.250001907348633
    10. '_
' → logprob: -19.375001907348633

Token 959: ' !=' (ID: 1666)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.023757480084896088
    2. ' <' → logprob: -3.7737574577331543
    3. '!=' → logprob: -8.398757934570312
    4. '>' → logprob: -9.523757934570312
    5. '<=' → logprob: -9.523757934570312
    6. '+' → logprob: -10.023757934570312
    7. ' !=' → logprob: -10.273757934570312
    8. '[' → logprob: -11.398757934570312
    9. '<float' → logprob: -11.898757934570312
    10. ' >' → logprob: -12.398757934570312

Token 960: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -9.722539834911004e-05
    2. ' float' → logprob: -9.250097274780273
    3. 'inf' → logprob: -14.625097274780273
    4. '	float' → logprob: -15.000097274780273
    5. '0' → logprob: -15.500097274780273
    6. '=float' → logprob: -16.875097274780273
    7. 'flo' → logprob: -18.375097274780273
    8. '(float' → logprob: -19.000097274780273
    9. '<float' → logprob: -19.000097274780273
    10. ',float' → logprob: -19.375097274780273

Token 961: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.030224796384572983
    2. ''in' → logprob: -3.6552248001098633
    3. ''inc' → logprob: -6.655224800109863
    4. ''' → logprob: -7.155224800109863
    5. '.inf' → logprob: -8.655224800109863
    6. ''a' → logprob: -9.030224800109863
    7. '['' → logprob: -9.280224800109863
    8. ''s' → logprob: -9.280224800109863
    9. ''end' → logprob: -9.280224800109863
    10. ''e' → logprob: -9.530224800109863

Token 962: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -4.320199877838604e-07
    2. ''in' → logprob: -15.25
    3. 'in' → logprob: -16.875
    4. ' inf' → logprob: -17.0
    5. '.inf' → logprob: -17.875
    6. '')' → logprob: -18.5
    7. '_inf' → logprob: -18.875
    8. '   ' → logprob: -19.125
    9. 'inc' → logprob: -19.125
    10. ''' → logprob: -19.25

Token 963: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017382439691573381
    2. ' )' → logprob: -6.62673807144165
    3. ' else' → logprob: -8.126738548278809
    4. 'else' → logprob: -9.126738548278809
    5. '   ' → logprob: -13.126738548278809
    6. ' ' → logprob: -13.376738548278809
    7. '')' → logprob: -13.876738548278809
    8. '       ' → logprob: -14.001738548278809
    9. ')
' → logprob: -14.876738548278809
    10. '```' → logprob: -14.876738548278809

Token 964: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.35443034768104553
    2. 'else' → logprob: -1.6044303178787231
    3. '<|end|>' → logprob: -3.4794304370880127
    4. '<=' → logprob: -4.479430198669434
    5. '+' → logprob: -4.729430198669434
    6. ' +' → logprob: -4.854430198669434
    7. ' if' → logprob: -4.854430198669434
    8. ' ' → logprob: -4.854430198669434
    9. ' <=' → logprob: -4.854430198669434
    10. '       ' → logprob: -4.979430198669434

Token 965: ' float' (ID: 4428)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.02361590974032879
    2. 'float' → logprob: -4.273615837097168
    3. ' D' → logprob: -4.773615837097168
    4. ' float' → logprob: -7.023615837097168
    5. '(float' → logprob: -10.773615837097168
    6. ' ' → logprob: -11.023615837097168
    7. '(D' → logprob: -11.898615837097168
    8. '   ' → logprob: -12.273615837097168
    9. 'dist' → logprob: -12.898615837097168
    10. 'None' → logprob: -13.023615837097168

Token 966: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00028088156250305474
    2. ''in' → logprob: -8.25028133392334
    3. ''' → logprob: -11.75028133392334
    4. 'inf' → logprob: -12.62528133392334
    5. ''inc' → logprob: -12.87528133392334
    6. ''s' → logprob: -13.50028133392334
    7. '(' → logprob: -14.12528133392334
    8. ''i' → logprob: -14.25028133392334
    9. '('_' → logprob: -14.62528133392334
    10. '('-' → logprob: -14.87528133392334

Token 967: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -3.4121114822482923e-06
    2. ' inf' → logprob: -13.750003814697266
    3. '32' → logprob: -14.500003814697266
    4. ''' → logprob: -15.625003814697266
    5. '3' → logprob: -15.750003814697266
    6. '6' → logprob: -15.875003814697266
    7. '
' → logprob: -15.875003814697266
    8. '37' → logprob: -15.875003814697266
    9. '.inf' → logprob: -16.000003814697266
    10. '```' → logprob: -16.375003814697266

Token 968: '')

' (ID: 9735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00039230400579981506
    2. ' )' → logprob: -8.625391960144043
    3. ')
' → logprob: -8.750391960144043
    4. '       ' → logprob: -10.375391960144043
    5. '   ' → logprob: -11.750391960144043
    6. '):' → logprob: -12.250391960144043
    7. '):
' → logprob: -13.125391960144043
    8. '')' → logprob: -13.125391960144043
    9. ' ' → logprob: -13.625391960144043
    10. '  ' → logprob: -14.500391960144043

Token 969: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15129823982715607
    2. '
' → logprob: -2.0262982845306396
    3. '<|end|>' → logprob: -6.2762980461120605
    4. '        
' → logprob: -6.4012980461120605
    5. ' if' → logprob: -6.6512980461120605
    6. ' 
' → logprob: -6.7762980461120605
    7. '	' → logprob: -8.026298522949219
    8. '```' → logprob: -8.151298522949219
    9. '		
' → logprob: -8.276298522949219
    10. '  
' → logprob: -8.276298522949219

Token 970: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.011762751266360283
    2. '       ' → logprob: -4.511762619018555
    3. ' if' → logprob: -7.261762619018555
    4. 't' → logprob: -12.261762619018555
    5. 'move' → logprob: -13.136762619018555
    6. '```' → logprob: -13.636762619018555
    7. '	if' → logprob: -13.761762619018555
    8. 'distance' → logprob: -14.011762619018555
    9. 'step' → logprob: -14.636762619018555
    10. '#' → logprob: -14.636762619018555

Token 971: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.04860837012529373
    2. 'dist' → logprob: -3.0486083030700684
    3. '   ' → logprob: -11.548608779907227
    4. 't' → logprob: -12.173608779907227
    5. '	dist' → logprob: -12.673608779907227
    6. '(dist' → logprob: -13.173608779907227
    7. ' ' → logprob: -14.298608779907227
    8. ' t' → logprob: -15.673608779907227
    9. '  ' → logprob: -15.923608779907227
    10. 'd' → logprob: -16.548608779907227

Token 972: '_total' (ID: 23814)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.008618354797363281
    2. '_total' → logprob: -4.758618354797363
    3. 'total' → logprob: -13.758618354797363
    4. '+' → logprob: -14.008618354797363
    5. 'to' → logprob: -14.258618354797363
    6. '   ' → logprob: -15.133618354797363
    7. '_tot' → logprob: -15.633618354797363
    8. 'To' → logprob: -16.633617401123047
    9. '_dist' → logprob: -16.758617401123047
    10. '_TO' → logprob: -16.758617401123047

Token 973: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25193288922309875
    2. '+' → logprob: -1.5019328594207764
    3. ' plus' → logprob: -13.751933097839355
    4. ' +
' → logprob: -14.501933097839355
    5. ' ' → logprob: -14.626933097839355
    6. ' ' → logprob: -15.126933097839355
    7. '+D' → logprob: -15.376933097839355
    8. '+
' → logprob: -15.501933097839355
    9. '＋' → logprob: -15.751933097839355
    10. ' +=' → logprob: -15.751933097839355

Token 974: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0024762547109276056
    2. ' dist' → logprob: -6.002476215362549
    3. '	dist' → logprob: -15.127476692199707
    4. 'Dist' → logprob: -15.752476692199707
    5. 'd' → logprob: -16.25247573852539
    6. '(dist' → logprob: -17.00247573852539
    7. '_dist' → logprob: -17.87747573852539
    8. 't' → logprob: -18.00247573852539
    9. '   ' → logprob: -18.12747573852539
    10. ' ' → logprob: -18.62747573852539

Token 975: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: 0.0
    2. 'to' → logprob: -18.625
    3. 'To' → logprob: -19.0
    4. '_' → logprob: -19.25
    5. '_TO' → logprob: -21.0
    6. ' to' → logprob: -21.0
    7. '```' → logprob: -21.625
    8. '   ' → logprob: -22.875
    9. '...' → logprob: -23.0
    10. '_next' → logprob: -23.125

Token 976: '_circle' (ID: 93883)
  Prédit: '_circle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_circle' → logprob: -0.00013834332639817148
    2. 'circle' → logprob: -9.000138282775879
    3. '_' → logprob: -12.000138282775879
    4. '_to' → logprob: -12.125138282775879
    5. '_c' → logprob: -14.125138282775879
    6. 'ircle' → logprob: -15.125138282775879
    7. 'to' → logprob: -15.125138282775879
    8. 'o' → logprob: -15.125138282775879
    9. '
' → logprob: -15.375138282775879
    10. '(circle' → logprob: -15.375138282775879

Token 977: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.22815853357315063
    2. ' >' → logprob: -1.6031584739685059
    3. '+' → logprob: -6.103158473968506
    4. '>=' → logprob: -8.353158950805664
    5. ' ' → logprob: -8.978158950805664
    6. ' +' → logprob: -9.728158950805664
    7. ' >=' → logprob: -10.103158950805664
    8. '-' → logprob: -10.728158950805664
    9. '   ' → logprob: -11.478158950805664
    10. '```' → logprob: -12.603158950805664

Token 978: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.029753148555755615
    2. ' D' → logprob: -3.5297532081604004
    3. '	D' → logprob: -13.529752731323242
    4. '>D' → logprob: -13.779752731323242
    5. '   ' → logprob: -15.529752731323242
    6. '=D' → logprob: -17.154752731323242
    7. ' ' → logprob: -18.029752731323242
    8. '<D' → logprob: -18.029752731323242
    9. '  ' → logprob: -18.154752731323242
    10. '+D' → logprob: -18.654752731323242

Token 979: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13690969347953796
    2. ':
' → logprob: -2.1369097232818604
    3. '       ' → logprob: -4.761909484863281
    4. ' :' → logprob: -8.011909484863281
    5. '-' → logprob: -8.261909484863281
    6. '   ' → logprob: -8.386909484863281
    7. ' :
' → logprob: -8.886909484863281
    8. '+' → logprob: -9.261909484863281
    9. ':return' → logprob: -9.261909484863281
    10. '           ' → logprob: -9.261909484863281

Token 980: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24360772967338562
    2. '       ' → logprob: -1.743607759475708
    3. '
' → logprob: -4.618607521057129
    4. ' return' → logprob: -4.743607521057129
    5. '\n' → logprob: -5.118607521057129
    6. '        
' → logprob: -5.368607521057129
    7. ' 
' → logprob: -5.618607521057129
    8. '\' → logprob: -5.993607521057129
    9. '            
' → logprob: -6.868607521057129
    10. '  
' → logprob: -6.993607521057129

Token 981: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5863214135169983
    2. ' t' → logprob: -1.5863213539123535
    3. '           ' → logprob: -1.9613213539123535
    4. '
' → logprob: -3.4613213539123535
    5. 't' → logprob: -3.5863213539123535
    6. 'return' → logprob: -3.5863213539123535
    7. '       ' → logprob: -5.2113213539123535
    8. ' remaining' → logprob: -6.5863213539123535
    9. ' delta' → logprob: -7.0863213539123535
    10. ' diff' → logprob: -7.4613213539123535

Token 982: ' travel' (ID: 6410)
  Prédit: 'remain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'remain' → logprob: -1.2282711267471313
    2. 't' → logprob: -1.3532711267471313
    3. 'return' → logprob: -1.6032711267471313
    4. 'dist' → logprob: -2.603271007537842
    5. 'remaining' → logprob: -2.853271007537842
    6. 'rem' → logprob: -3.228271007537842
    7. '#' → logprob: -3.978271007537842
    8. 'dt' → logprob: -4.103271007537842
    9. 'diff' → logprob: -4.353271007537842
    10. 'delta' → logprob: -4.603271007537842

Token 983: ' max' (ID: 2999)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.112810730934143
    2. 't' → logprob: -2.4878106117248535
    3. 'diff' → logprob: -2.9878106117248535
    4. 'remaining' → logprob: -2.9878106117248535
    5. 's' → logprob: -3.1128106117248535
    6. 'exact' → logprob: -3.1128106117248535
    7. 'return' → logprob: -3.1128106117248535
    8. ' a' → logprob: -3.6128106117248535
    9. '           ' → logprob: -3.7378106117248535
    10. 'a' → logprob: -3.7378106117248535

Token 984: ' remaining' (ID: 15448)
  Prédit: ' D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' D' → logprob: -0.31025347113609314
    2. ' (' → logprob: -2.310253381729126
    3. ' dist' → logprob: -2.560253381729126
    4. 'D' → logprob: -3.935253381729126
    5. ' distance' → logprob: -4.060253620147705
    6. '(D' → logprob: -4.185253620147705
    7. ' V' → logprob: -4.435253620147705
    8. 'dist' → logprob: -5.560253620147705
    9. '(' → logprob: -5.810253620147705
    10. ' =' → logprob: -6.185253620147705

Token 985: ' distance' (ID: 9324)
  Prédit: ' D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' D' → logprob: -1.2244223356246948
    2. ' distance' → logprob: -1.3494223356246948
    3. ' dist' → logprob: -1.5994223356246948
    4. 'dist' → logprob: -2.4744224548339844
    5. 'D' → logprob: -2.5994224548339844
    6. 'distance' → logprob: -2.8494224548339844
    7. '_D' → logprob: -4.724422454833984
    8. '_dist' → logprob: -4.974422454833984
    9. '_distance' → logprob: -4.974422454833984
    10. '   ' → logprob: -7.349422454833984

Token 986: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07731472700834274
    2. ' t' → logprob: -3.452314615249634
    3. ' =' → logprob: -3.827314615249634
    4. ' return' → logprob: -5.077314853668213
    5. 't' → logprob: -5.327314853668213
    6. ' remaining' → logprob: -6.327314853668213
    7. ',' → logprob: -6.577314853668213
    8. '=' → logprob: -6.827314853668213
    9. '
' → logprob: -7.327314853668213
    10. ':
' → logprob: -7.452314853668213

Token 987: ' no' (ID: 860)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.23189812898635864
    2. 'break' → logprob: -1.7318980693817139
    3. ' return' → logprob: -3.606898069381714
    4. ' break' → logprob: -5.856898307800293
    5. 'stop' → logprob: -11.106898307800293
    6. '   ' → logprob: -12.231898307800293
    7. ' ' → logprob: -13.106898307800293
    8. '
' → logprob: -13.856898307800293
    9. '       ' → logprob: -14.106898307800293
    10. ' stop' → logprob: -14.231898307800293

Token 988: ' hit' (ID: 7103)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.13099876046180725
    2. 'return' → logprob: -2.3809988498687744
    3. ' more' → logprob: -3.7559988498687744
    4. 'more' → logprob: -5.505998611450195
    5. 't' → logprob: -6.630998611450195
    6. '
' → logprob: -7.880998611450195
    7. ' else' → logprob: -8.630998611450195
    8. ' need' → logprob: -8.755998611450195
    9. 'eturn' → logprob: -9.005998611450195
    10. 'else' → logprob: -9.505998611450195

Token 989: ' origin' (ID: 12839)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008746467530727386
    2. '
' → logprob: -5.63374662399292
    3. '       ' → logprob: -6.38374662399292
    4. ' return' → logprob: -6.75874662399292
    5. ' =' → logprob: -7.00874662399292
    6. ',' → logprob: -7.25874662399292
    7. ':
' → logprob: -8.883746147155762
    8. 'return' → logprob: -9.508746147155762
    9. '=' → logprob: -9.633746147155762
    10. ',
' → logprob: -10.008746147155762

Token 990: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004282111767679453
    2. '
' → logprob: -6.754281997680664
    3. '       ' → logprob: -7.129281997680664
    4. ' return' → logprob: -7.504281997680664
    5. ':
' → logprob: -7.879281997680664
    6. 'return' → logprob: -8.004281997680664
    7. '               ' → logprob: -8.504281997680664
    8. ',' → logprob: -8.504281997680664
    9. '```' → logprob: -8.504281997680664
    10. '{
' → logprob: -9.504281997680664

Token 991: ' impossible' (ID: 19786)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.9730066657066345
    2. ' return' → logprob: -1.0980067253112793
    3. ' rem' → logprob: -2.9730067253112793
    4. ' remaining' → logprob: -3.2230067253112793
    5. 'break' → logprob: -3.3480067253112793
    6. 'remaining' → logprob: -3.5980067253112793
    7. 'remain' → logprob: -3.7230067253112793
    8. ' break' → logprob: -3.9730067253112793
    9. '       ' → logprob: -3.9730067253112793
    10. 'rem' → logprob: -4.098006725311279

Token 992: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6363386511802673
    2. '       ' → logprob: -0.7613386511802673
    3. '
' → logprob: -5.886338710784912
    4. ',' → logprob: -7.886338710784912
    5. '        
' → logprob: -8.386338233947754
    6. '   ' → logprob: -9.886338233947754
    7. '	' → logprob: -10.136338233947754
    8. '               ' → logprob: -10.261338233947754
    9. '		' → logprob: -10.386338233947754
    10. ',
' → logprob: -10.761338233947754

Token 993: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0063216970302164555
    2. '       ' → logprob: -5.256321907043457
    3. ' return' → logprob: -7.131321907043457
    4. '
' → logprob: -9.256321907043457
    5. 'return' → logprob: -9.256321907043457
    6. '		' → logprob: -10.381321907043457
    7. '               ' → logprob: -10.881321907043457
    8. ',' → logprob: -11.131321907043457
    9. '	       ' → logprob: -12.506321907043457
    10. '```' → logprob: -12.506321907043457

Token 994: ' break' (ID: 2338)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.21978697180747986
    2. ' return' → logprob: -1.8447870016098022
    3. 'remaining' → logprob: -4.594787120819092
    4. 'remain' → logprob: -4.969787120819092
    5. '       ' → logprob: -5.344787120819092
    6. 'rem' → logprob: -5.344787120819092
    7. 'dist' → logprob: -5.469787120819092
    8. ' rem' → logprob: -5.969787120819092
    9. ' remaining' → logprob: -6.219787120819092
    10. 'break' (adapté à ' break') → logprob: -6.969787120819092

Token 995: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09114792197942734
    2. '
' → logprob: -2.4661478996276855
    3. '        
' → logprob: -6.7161478996276855
    4. 'return' → logprob: -7.4661478996276855
    5. '
' → logprob: -9.341148376464844
    6. '```' → logprob: -9.341148376464844
    7. '           ' → logprob: -9.841148376464844
    8. '	' → logprob: -10.716148376464844
    9. '\
' → logprob: -10.841148376464844
    10. '
' → logprob: -10.841148376464844

Token 996: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012916315346956253
    2. 'P' → logprob: -4.387916088104248
    3. 't' → logprob: -8.512916564941406
    4. '   ' → logprob: -9.637916564941406
    5. ' P' → logprob: -9.887916564941406
    6. '        
' → logprob: -10.512916564941406
    7. 'p' → logprob: -11.012916564941406
    8. '
' → logprob: -11.512916564941406
    9. '#' → logprob: -11.762916564941406
    10. 'new' → logprob: -12.262916564941406

Token 997: ' #' (ID: 1069)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.07979857176542282
    2. '#' (adapté à ' #') → logprob: -2.954798460006714
    3. 'dist' → logprob: -3.829798460006714
    4. '   ' → logprob: -6.704798698425293
    5. 'Q' → logprob: -6.829798698425293
    6. 't' → logprob: -8.579798698425293
    7. 'hit' → logprob: -8.829798698425293
    8. 'p' → logprob: -10.079798698425293
    9. '       ' → logprob: -10.204798698425293
    10. 'new' → logprob: -10.329798698425293

Token 998: ' update' (ID: 4027)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.06998078525066376
    2. '#' → logprob: -2.9449808597564697
    3. 'Q' → logprob: -4.444980621337891
    4. 't' → logprob: -7.069980621337891
    5. 'hit' → logprob: -7.069980621337891
    6. 'p' → logprob: -7.694980621337891
    7. 'pos' → logprob: -8.56998062133789
    8. 'new' → logprob: -8.81998062133789
    9. 'I' → logprob: -8.81998062133789
    10. 'dist' → logprob: -9.06998062133789

Token 999: ' position' (ID: 4010)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.35152435302734375
    2. 'dist' → logprob: -1.2265243530273438
    3. ' dist' → logprob: -6.601524353027344
    4. '   ' → logprob: -7.101524353027344
    5. ' P' → logprob: -7.476524353027344
    6. '       ' → logprob: -8.726524353027344
    7. '#' → logprob: -9.851524353027344
    8. 'pos' → logprob: -10.226524353027344
    9. 'distance' → logprob: -11.726524353027344
    10. 't' → logprob: -11.851524353027344

Token 1000: ' and' (ID: 326)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18994826078414917
    2. ' =' → logprob: -2.314948320388794
    3. 'P' → logprob: -2.939948320388794
    4. '       ' → logprob: -4.064948081970215
    5. '   ' → logprob: -6.064948081970215
    6. ' P' → logprob: -6.814948081970215
    7. ',' → logprob: -7.939948081970215
    8. '=P' → logprob: -7.939948081970215
    9. '           ' → logprob: -10.939948081970215
    10. '(P' → logprob: -11.814948081970215

Token 1001: ' velocity' (ID: 30061)
  Prédit: 'velocity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'velocity' → logprob: -0.20897065103054047
    2. 'dist' → logprob: -2.208970546722412
    3. 'P' → logprob: -3.208970546722412
    4. 'V' → logprob: -3.708970546722412
    5. 'distance' → logprob: -4.833970546722412
    6. ' velocity' → logprob: -5.583970546722412
    7. 'vector' → logprob: -7.083970546722412
    8. 'vel' → logprob: -7.583970546722412
    9. 'direction' → logprob: -7.958970546722412
    10. '   ' → logprob: -8.95897102355957

Token 1002: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5941407084465027
    2. 'P' → logprob: -0.8441407084465027
    3. ' P' → logprob: -4.844140529632568
    4. ' =' → logprob: -5.094140529632568
    5. '   ' → logprob: -5.719140529632568
    6. '=' → logprob: -8.094141006469727
    7. '(P' → logprob: -9.219141006469727
    8. ',' → logprob: -9.594141006469727
    9. '=P' → logprob: -9.719141006469727
    10. ':' → logprob: -10.094141006469727

Token 1003: ' reflection' (ID: 39755)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.7675803303718567
    2. 'mul' → logprob: -0.8925803303718567
    3. '(add' → logprob: -3.392580270767212
    4. ' add' → logprob: -3.517580270767212
    5. 'P' → logprob: -4.267580509185791
    6. 'reflect' → logprob: -4.267580509185791
    7. 'sub' → logprob: -4.767580509185791
    8. 'circle' → logprob: -5.017580509185791
    9. ' P' → logprob: -5.267580509185791
    10. ' reflect' → logprob: -6.142580509185791

Token 1004: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09072918444871902
    2. 'P' → logprob: -2.715729236602783
    3. ' P' → logprob: -4.090729236602783
    4. ',' → logprob: -7.215729236602783
    5. ':' → logprob: -7.715729236602783
    6. '```' → logprob: -7.715729236602783
    7. '   ' → logprob: -7.965729236602783
    8. ' =' → logprob: -8.090728759765625
    9. '(P' → logprob: -8.215728759765625
    10. '        
' → logprob: -8.215728759765625

Token 1005: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07761865854263306
    2. 'P' → logprob: -2.7026185989379883
    3. ' P' → logprob: -5.077618598937988
    4. 'n' → logprob: -7.827618598937988
    5. 'pos' → logprob: -8.327618598937988
    6. 'p' → logprob: -8.577618598937988
    7. '   ' → logprob: -8.827618598937988
    8. 't' → logprob: -9.827618598937988
    9. 'new' → logprob: -9.827618598937988
    10. 'point' → logprob: -10.327618598937988

Token 1006: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' (adapté à ' P') → logprob: -0.006198011338710785
    2. '       ' → logprob: -5.381197929382324
    3. '   ' → logprob: -7.506197929382324
    4. 'Q' → logprob: -7.631197929382324
    5. 't' → logprob: -8.506197929382324
    6. ' P' → logprob: -8.506197929382324
    7. 'new' → logprob: -9.631197929382324
    8. 'p' → logprob: -11.006197929382324
    9. '#' → logprob: -11.256197929382324
    10. 'hit' → logprob: -11.381197929382324

Token 1007: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00020354038861114532
    2. ' =' → logprob: -8.500203132629395
    3. ')' → logprob: -19.75020408630371
    4. ')=' → logprob: -19.75020408630371
    5. '＝' → logprob: -20.50020408630371
    6. 'add' → logprob: -20.62520408630371
    7. '=

' → logprob: -20.75020408630371
    8. '=}' → logprob: -21.00020408630371
    9. '+=' → logprob: -21.12520408630371
    10. ',' → logprob: -21.50020408630371

Token 1008: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.00044151677866466343
    2. ' add' → logprob: -7.750441551208496
    3. '(add' → logprob: -11.625441551208496
    4. 'mul' → logprob: -13.875441551208496
    5. '(' → logprob: -15.000441551208496
    6. '   ' → logprob: -15.250441551208496
    7. 'sub' → logprob: -15.375441551208496
    8. '	add' → logprob: -16.75044059753418
    9. ' ' → logprob: -17.12544059753418
    10. ' (' → logprob: -17.87544059753418

Token 1009: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -1.5570885807392187e-05
    2. 'P' → logprob: -11.875015258789062
    3. '(' → logprob: -12.250015258789062
    4. 'mul' → logprob: -13.250015258789062
    5. '(m' → logprob: -13.250015258789062
    6. '((' → logprob: -16.500015258789062
    7. ' (' → logprob: -16.750015258789062
    8. 'multip' → logprob: -16.875015258789062
    9. '(p' → logprob: -17.625015258789062
    10. '(M' → logprob: -18.125015258789062

Token 1010: ',' (ID: 11)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.1920813024044037
    2. ',' → logprob: -1.942081332206726
    3. ',m' → logprob: -3.5670812129974365
    4. 'mul' → logprob: -5.817081451416016
    5. '(' → logprob: -9.567081451416016
    6. ' ,' → logprob: -10.942081451416016
    7. ' (' → logprob: -11.067081451416016
    8. 'm' → logprob: -11.067081451416016
    9. ' mul' → logprob: -11.817081451416016
    10. ',(' → logprob: -12.192081451416016

Token 1011: ' mul' (ID: 9975)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.00033546582562848926
    2. ' mul' → logprob: -8.000335693359375
    3. '   ' → logprob: -18.625335693359375
    4. 'multip' → logprob: -19.875335693359375
    5. 'mol' → logprob: -20.125335693359375
    6. 'mu' → logprob: -21.250335693359375
    7. ' ' → logprob: -21.500335693359375
    8. '  ' → logprob: -21.875335693359375
    9. 'm' → logprob: -21.875335693359375
    10. '_mul' → logprob: -22.125335693359375

Token 1012: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -3.128163257315464e-07
    2. 'V' → logprob: -15.25
    3. '(' → logprob: -16.75
    4. '(v' → logprob: -17.625
    5. '(P' → logprob: -19.25
    6. ' (' → logprob: -19.5
    7. '(
' → logprob: -19.875
    8. '```' → logprob: -20.375
    9. '   ' → logprob: -20.5
    10. ')' → logprob: -20.875

Token 1013: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015854504890739918
    2. ',t' → logprob: -6.501585483551025
    3. ' ,' → logprob: -9.751585006713867
    4. 't' → logprob: -11.126585006713867
    5. ' t' → logprob: -12.376585006713867
    6. '(' → logprob: -12.876585006713867
    7. '(t' → logprob: -13.376585006713867
    8. '[' → logprob: -14.126585006713867
    9. '[t' → logprob: -15.251585006713867
    10. 's' → logprob: -15.626585006713867

Token 1014: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00038014890742488205
    2. ' t' → logprob: -7.875380039215088
    3. '	t' → logprob: -16.87537956237793
    4. '(t' → logprob: -17.00037956237793
    5. '   ' → logprob: -17.87537956237793
    6. '`t' → logprob: -18.00037956237793
    7. '_t' → logprob: -18.87537956237793
    8. ')t' → logprob: -19.25037956237793
    9. ' ' → logprob: -19.50037956237793
    10. '[t' → logprob: -21.12537956237793

Token 1015: '_circle' (ID: 93883)
  Prédit: '_circle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_circle' → logprob: -6.2729995988775045e-06
    2. 'circle' → logprob: -12.000006675720215
    3. 'ircle' → logprob: -16.8750057220459
    4. '(circle' → logprob: -18.1250057220459
    5. '.circle' → logprob: -19.3750057220459
    6. 'Circle' → logprob: -19.6250057220459
    7. '-circle' → logprob: -19.8750057220459
    8. '_c' → logprob: -20.1250057220459
    9. '.Circle' → logprob: -20.6250057220459
    10. ' circle' → logprob: -20.8750057220459

Token 1016: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.11346583813428879
    2. '))' → logprob: -2.2384657859802246
    3. ')' → logprob: -8.488466262817383
    4. '))
' → logprob: -8.488466262817383
    5. ')
' → logprob: -8.988466262817383
    6. '))

' → logprob: -9.363466262817383
    7. ' ))
' → logprob: -11.363466262817383
    8. '       ' → logprob: -12.488466262817383
    9. '   ' → logprob: -13.113466262817383
    10. ')))
' → logprob: -13.863466262817383

Token 1017: '       ' (ID: 309)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.8095842599868774
    2. 'n' → logprob: -0.9345842599868774
    3. '       ' → logprob: -2.434584140777588
    4. '   ' → logprob: -2.934584140777588
    5. '#' → logprob: -4.184584140777588
    6. ' N' → logprob: -6.184584140777588
    7. ' n' → logprob: -6.434584140777588
    8. 'normal' → logprob: -6.809584140777588
    9. '
' → logprob: -7.684584140777588
    10. '        
' → logprob: -8.309584617614746

Token 1018: ' dist' (ID: 3601)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.4104110598564148
    2. 'n' → logprob: -1.1604111194610596
    3. '#' → logprob: -4.1604108810424805
    4. '   ' → logprob: -5.6604108810424805
    5. 'normal' → logprob: -5.9104108810424805
    6. 'norm' → logprob: -8.16041088104248
    7. 'r' → logprob: -8.66041088104248
    8. ' N' → logprob: -8.78541088104248
    9. '
' → logprob: -9.28541088104248
    10. 'd' → logprob: -9.41041088104248

Token 1019: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -9.088346359931165e-07
    2. 'total' → logprob: -14.000000953674316
    3. 'otal' → logprob: -18.75
    4. '_to' → logprob: -19.0
    5. 'Total' → logprob: -19.375
    6. '	total' → logprob: -19.625
    7. '_tot' → logprob: -20.5
    8. ' total' → logprob: -21.125
    9. '_' → logprob: -21.375
    10. '_TOTAL' → logprob: -21.5

Token 1020: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0014739143662154675
    2. ' +=' → logprob: -6.876473903656006
    3. '+' → logprob: -8.376474380493164
    4. '=' → logprob: -8.501474380493164
    5. ']+=' → logprob: -12.001474380493164
    6. '+='' → logprob: -14.126474380493164
    7. '+="' → logprob: -15.001474380493164
    8. '+=(' → logprob: -15.251474380493164
    9. '```' → logprob: -17.126474380493164
    10. '[' → logprob: -17.126474380493164

Token 1021: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.001929228543303907
    2. ' dist' → logprob: -6.25192928314209
    3. 't' → logprob: -14.62692928314209
    4. '(dist' → logprob: -17.001928329467773
    5. '	dist' → logprob: -17.126928329467773
    6. ' t' → logprob: -17.126928329467773
    7. 'norm' → logprob: -17.376928329467773
    8. '   ' → logprob: -18.751928329467773
    9. 'd' → logprob: -19.251928329467773
    10. 'dis' → logprob: -19.751928329467773

Token 1022: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -4.008129963040119e-06
    2. '_circle' → logprob: -12.500003814697266
    3. 'circle' → logprob: -15.500003814697266
    4. 't' → logprob: -17.875003814697266
    5. 'to' → logprob: -18.125003814697266
    6. '_t' → logprob: -18.250003814697266
    7. 'To' → logprob: -19.000003814697266
    8. '   ' → logprob: -19.375003814697266
    9. '```' → logprob: -19.375003814697266
    10. '(circle' → logprob: -20.250003814697266

Token 1023: '_circle' (ID: 93883)
  Prédit: '_circle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_circle' → logprob: -0.008651918731629848
    2. 'circle' → logprob: -4.7586517333984375
    3. 'dist' → logprob: -11.008651733398438
    4. 'ircle' → logprob: -11.008651733398438
    5. 'cir' → logprob: -13.633651733398438
    6. 'circ' → logprob: -13.758651733398438
    7. 't' → logprob: -13.883651733398438
    8. 'c' → logprob: -15.383651733398438
    9. 'Circle' → logprob: -15.633651733398438
    10. '(circle' → logprob: -16.133651733398438

Token 1024: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5877993106842041
    2. 'n' → logprob: -1.212799310684204
    3. 'N' → logprob: -2.337799310684204
    4. '#' → logprob: -3.337799310684204
    5. '   ' → logprob: -4.462799072265625
    6. 'normal' → logprob: -6.337799072265625
    7. '
' → logprob: -7.587799072265625
    8. ' n' → logprob: -7.962799072265625
    9. ' N' → logprob: -8.462799072265625
    10. ' #' → logprob: -8.712799072265625

Token 1025: '       ' (ID: 309)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8690810799598694
    2. 'N' → logprob: -1.2440810203552246
    3. '   ' → logprob: -1.6190810203552246
    4. '       ' → logprob: -2.8690810203552246
    5. '#' → logprob: -3.3690810203552246
    6. 'normal' → logprob: -6.494081020355225
    7. ' N' → logprob: -8.244081497192383
    8. ' n' → logprob: -8.494081497192383
    9. ' #' → logprob: -8.744081497192383
    10. '        
' → logprob: -8.744081497192383

Token 1026: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.599766194820404
    2. 'N' → logprob: -0.849766194820404
    3. '#' → logprob: -3.849766254425049
    4. 'normal' → logprob: -6.224766254425049
    5. '   ' → logprob: -8.34976577758789
    6. 'norm' → logprob: -10.59976577758789
    7. '    
' → logprob: -12.84976577758789
    8. ' N' → logprob: -13.47476577758789
    9. ' #' → logprob: -13.47476577758789
    10. '
' → logprob: -13.72476577758789

Token 1027: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002923160558566451
    2. ' =' → logprob: -6.377923011779785
    3. 'orm' → logprob: -6.752923011779785
    4. 'ormal' → logprob: -10.627923011779785
    5. '=(' → logprob: -10.752923011779785
    6. 'or' → logprob: -12.627923011779785
    7. ')' → logprob: -13.877923011779785
    8. 'o' → logprob: -14.252923011779785
    9. '=((' → logprob: -15.127923011779785
    10. ',' → logprob: -15.377923011779785

Token 1028: ' (' (ID: 350)
  Prédit: 'norm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'norm' → logprob: -0.15071427822113037
    2. 'P' → logprob: -2.90071439743042
    3. '(P' → logprob: -3.52571439743042
    4. 'mul' → logprob: -3.52571439743042
    5. '(norm' → logprob: -3.77571439743042
    6. '(m' → logprob: -6.52571439743042
    7. 'normalize' → logprob: -6.90071439743042
    8. '(' → logprob: -7.90071439743042
    9. '(normal' → logprob: -8.900713920593262
    10. '(n' → logprob: -9.650713920593262

Token 1029: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.00026622318546287715
    2. '(P' → logprob: -8.625266075134277
    3. 'mul' → logprob: -9.750266075134277
    4. '(' → logprob: -10.750266075134277
    5. ' P' → logprob: -12.625266075134277
    6. ')' → logprob: -13.250266075134277
    7. 'normalize' → logprob: -14.375266075134277
    8. '   ' → logprob: -15.250266075134277
    9. '(m' → logprob: -15.375266075134277
    10. ' (' → logprob: -15.625266075134277

Token 1030: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.505351095460355e-05
    2. '0' → logprob: -9.875075340270996
    3. '(' → logprob: -11.250075340270996
    4. ')' → logprob: -11.500075340270996
    5. 'x' → logprob: -16.37507438659668
    6. 'def' → logprob: -16.37507438659668
    7. '#' → logprob: -17.37507438659668
    8. '
' → logprob: -17.50007438659668
    9. '1' → logprob: -17.50007438659668
    10. ' ' → logprob: -18.00007438659668

Token 1031: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -15.625
    3. '(' → logprob: -17.625
    4. '۰' → logprob: -19.0
    5. ' ' → logprob: -19.375
    6. ')' → logprob: -20.125
    7. '
' → logprob: -20.5
    8. '-' → logprob: -20.5
    9. '```' → logprob: -20.5
    10. '０' → logprob: -21.125

Token 1032: ']/' (ID: 18500)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009474978782236576
    2. ',P' → logprob: -4.759474754333496
    3. '/P' → logprob: -8.009474754333496
    4. ',
' → logprob: -8.384474754333496
    5. ' ,' → logprob: -8.759474754333496
    6. '/' → logprob: -9.259474754333496
    7. ',/' → logprob: -10.884474754333496
    8. ',R' → logprob: -11.259474754333496
    9. ' /' → logprob: -12.134474754333496
    10. '/,' → logprob: -12.634474754333496

Token 1033: 'R' (ID: 49)
  Prédit: 'norm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'norm' → logprob: -0.07949849218130112
    2. 'R' → logprob: -2.579498529434204
    3. '1' → logprob: -8.329498291015625
    4. 'dist' → logprob: -8.454498291015625
    5. 'math' → logprob: -9.329498291015625
    6. 'abs' → logprob: -9.954498291015625
    7. '(norm' → logprob: -11.704498291015625
    8. ' norm' → logprob: -11.829498291015625
    9. 'Norm' → logprob: -13.829498291015625
    10. ' R' → logprob: -15.704498291015625

Token 1034: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036587452050298452
    2. ',P' → logprob: -5.628658771514893
    3. ' ,' → logprob: -9.878658294677734
    4. ',
' → logprob: -11.878658294677734
    5. ',p' → logprob: -16.003658294677734
    6. ',\
' → logprob: -16.003658294677734
    7. ',n' → logprob: -17.003658294677734
    8. ',N' → logprob: -17.628658294677734
    9. ',R' → logprob: -18.003658294677734
    10. ',K' → logprob: -18.253658294677734

Token 1035: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -6.2729995988775045e-06
    2. ' P' → logprob: -12.000006675720215
    3. '   ' → logprob: -16.5000057220459
    4. '	P' → logprob: -18.1250057220459
    5. '(P' → logprob: -21.6250057220459
    6. '\P' → logprob: -21.6250057220459
    7. '
' → logprob: -22.1250057220459
    8. '\
' → logprob: -22.1250057220459
    9. '_P' → logprob: -22.5000057220459
    10. '"P' → logprob: -22.7500057220459

Token 1036: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0017295641591772437
    2. '1' → logprob: -6.376729488372803
    3. '0' → logprob: -10.626729965209961
    4. ')' → logprob: -13.501729965209961
    5. '(' → logprob: -13.626729965209961
    6. ',' → logprob: -15.251729965209961
    7. ' ' → logprob: -15.751729965209961
    8. '```' → logprob: -16.37672996520996
    9. ' [' → logprob: -16.87672996520996
    10. '   ' → logprob: -16.87672996520996

Token 1037: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '
' → logprob: -16.625
    3. '[' → logprob: -17.5
    4. '(' → logprob: -18.875
    5. ' ' → logprob: -18.875
    6. '```' → logprob: -19.0
    7. '0' → logprob: -19.125
    8. '
' → logprob: -20.25
    9. '

' → logprob: -20.75
    10. '１' → logprob: -20.75

Token 1038: ']/' (ID: 18500)
  Prédit: '/R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/R' → logprob: -0.03065137378871441
    2. '/' → logprob: -4.155651569366455
    3. ')' → logprob: -4.530651569366455
    4. ')/' → logprob: -6.030651569366455
    5. ' /' → logprob: -7.530651569366455
    6. '/P' → logprob: -8.530651092529297
    7. '0' → logprob: -8.655651092529297
    8. '/Re' → logprob: -8.905651092529297
    9. '[' → logprob: -10.030651092529297
    10. '/)' → logprob: -10.530651092529297

Token 1039: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -1.9361264946837764e-07
    2. ' R' → logprob: -16.0
    3. '
' → logprob: -18.5
    4. '	R' → logprob: -20.75
    5. '```' → logprob: -20.875
    6. ')' → logprob: -20.875
    7. 'abs' → logprob: -21.0
    8. '   ' → logprob: -21.75
    9. '\
' → logprob: -22.0
    10. '

' → logprob: -22.25

Token 1040: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007152927573770285
    2. ')
' → logprob: -7.250715255737305
    3. ' )' → logprob: -12.750715255737305
    4. ')

' → logprob: -13.375715255737305
    5. '   ' → logprob: -15.125715255737305
    6. ')`' → logprob: -15.125715255737305
    7. ')#' → logprob: -16.125715255737305
    8. ')
' → logprob: -17.125715255737305
    9. '),' → logprob: -17.250715255737305
    10. ')`
' → logprob: -17.250715255737305

Token 1041: ' ' (ID: 220)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.0003346314188092947
    2. '
' → logprob: -8.375334739685059
    3. ' V' → logprob: -9.500334739685059
    4. '   ' → logprob: -10.875334739685059
    5. '        
' → logprob: -12.875334739685059
    6. '    
' → logprob: -13.250334739685059
    7. 'v' → logprob: -13.375334739685059
    8. '	V' → logprob: -13.750334739685059
    9. '       ' → logprob: -13.875334739685059
    10. '```' → logprob: -14.375334739685059

Token 1042: ' #' (ID: 1069)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.11432749032974243
    2. '
' → logprob: -2.2393274307250977
    3. ' V' → logprob: -7.614327430725098
    4. '   ' → logprob: -8.239327430725098
    5. ')
' → logprob: -8.489327430725098
    6. '       ' → logprob: -9.114327430725098
    7. ')' → logprob: -9.114327430725098
    8. '        
' → logprob: -9.739327430725098
    9. '  
' → logprob: -9.864327430725098
    10. '
' → logprob: -10.114327430725098

Token 1043: ' normal' (ID: 6078)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3177231550216675
    2. '(' → logprob: -2.442723274230957
    3. '(n' → logprob: -2.817723274230957
    4. ' (' → logprob: -2.942723274230957
    5. 'reflect' → logprob: -3.567723274230957
    6. '(-' → logprob: -3.817723274230957
    7. ' n' → logprob: -4.567723274230957
    8. ' reflect' → logprob: -5.317723274230957
    9. 'normalize' → logprob: -5.567723274230957
    10. '(P' → logprob: -6.817723274230957

Token 1044: ' vector' (ID: 9727)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25544145703315735
    2. '=' → logprob: -2.380441427230835
    3. 'v' → logprob: -2.880441427230835
    4. 'V' → logprob: -3.005441427230835
    5. '
' → logprob: -4.380441665649414
    6. ')' → logprob: -5.005441665649414
    7. 'velocity' → logprob: -6.380441665649414
    8. ')
' → logprob: -6.505441665649414
    9. 'n' → logprob: -7.130441665649414
    10. '   ' → logprob: -7.505441665649414

Token 1045: ' at' (ID: 540)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.010142404586076736
    2. ' V' → logprob: -4.7601423263549805
    3. '       ' → logprob: -6.8851423263549805
    4. '
' → logprob: -7.8851423263549805
    5. '        
' → logprob: -9.76014232635498
    6. 'v' → logprob: -10.63514232635498
    7. '   ' → logprob: -11.01014232635498
    8. '=' → logprob: -12.38514232635498
    9. ' =' → logprob: -12.38514232635498
    10. ')' → logprob: -12.88514232635498

Token 1046: ' reflection' (ID: 39755)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0001126026691053994
    2. ' P' → logprob: -9.750112533569336
    3. 'point' → logprob: -10.125112533569336
    4. ' point' → logprob: -11.625112533569336
    5. 'reflection' → logprob: -12.375112533569336
    6. ' reflection' → logprob: -14.625112533569336
    7. 'the' → logprob: -15.750112533569336
    8. 'Point' → logprob: -16.125112533569336
    9. 'reflect' → logprob: -16.750112533569336
    10. ')' → logprob: -17.000112533569336

Token 1047: ' point' (ID: 2438)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.00315716490149498
    2. '
' → logprob: -6.503157138824463
    3. ' V' → logprob: -6.628157138824463
    4. '   ' → logprob: -9.128157615661621
    5. '       ' → logprob: -9.503157615661621
    6. 'v' → logprob: -9.753157615661621
    7. ')
' → logprob: -10.753157615661621
    8. '        
' → logprob: -10.878157615661621
    9. '```' → logprob: -11.253157615661621
    10. '    
' → logprob: -11.628157615661621

Token 1048: ' (' (ID: 350)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.0014414230827242136
    2. ' V' → logprob: -7.376441478729248
    3. '   ' → logprob: -7.376441478729248
    4. '
' → logprob: -9.00144100189209
    5. 'v' → logprob: -10.50144100189209
    6. '       ' → logprob: -10.87644100189209
    7. '	V' → logprob: -11.87644100189209
    8. '    
' → logprob: -13.12644100189209
    9. '```' → logprob: -13.12644100189209
    10. '        
' → logprob: -13.37644100189209

Token 1049: 'normalized' (ID: 80813)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6800421476364136
    2. 'n' → logprob: -0.8050421476364136
    3. ' )' → logprob: -4.430042266845703
    4. 'reflect' → logprob: -4.680042266845703
    5. ' n' → logprob: -5.055042266845703
    6. ')n' → logprob: -5.305042266845703
    7. ')
' → logprob: -5.555042266845703
    8. ' (' → logprob: -6.180042266845703
    9. 'P' → logprob: -6.555042266845703
    10. '
' → logprob: -7.055042266845703

Token 1050: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6933750510215759
    2. ')
' → logprob: -0.6933750510215759
    3. '   ' → logprob: -9.193374633789062
    4. ')

' → logprob: -9.193374633789062
    5. ' )
' → logprob: -11.568374633789062
    6. '       ' → logprob: -12.193374633789062
    7. ' )' → logprob: -12.568374633789062
    8. ')
' → logprob: -12.943374633789062
    9. ')n' → logprob: -14.193374633789062
    10. ')`
' → logprob: -14.443374633789062

Token 1051: '       ' (ID: 309)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.0008399999933317304
    2. ' V' → logprob: -7.250840187072754
    3. '   ' → logprob: -9.500840187072754
    4. 'v' → logprob: -10.500840187072754
    5. '
' → logprob: -11.500840187072754
    6. '       ' → logprob: -12.125840187072754
    7. '```' → logprob: -12.625840187072754
    8. '        
' → logprob: -12.875840187072754
    9. '	V' → logprob: -13.125840187072754
    10. '    
' → logprob: -13.375840187072754

Token 1052: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' (adapté à ' V') → logprob: -1.0445127372804563e-05
    2. '   ' → logprob: -12.00001049041748
    3. ' V' → logprob: -12.62501049041748
    4. 'v' → logprob: -14.12501049041748
    5. '	V' → logprob: -15.87501049041748
    6. '```' → logprob: -17.250009536743164
    7. '       ' → logprob: -17.750009536743164
    8. ')V' → logprob: -19.250009536743164
    9. '
' → logprob: -20.000009536743164
    10. '`' → logprob: -20.250009536743164

Token 1053: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00033546582562848926
    2. ' =' → logprob: -8.000335693359375
    3. '＝' → logprob: -19.375335693359375
    4. ')=' → logprob: -19.875335693359375
    5. '=}' → logprob: -20.125335693359375
    6. ',' → logprob: -20.500335693359375
    7. '_=' → logprob: -20.750335693359375
    8. ')' → logprob: -20.750335693359375
    9. '=

' → logprob: -20.750335693359375
    10. '.=' → logprob: -20.875335693359375

Token 1054: ' reflect' (ID: 12140)
  Prédit: 'reflect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reflect' → logprob: -0.00033546582562848926
    2. ' reflect' → logprob: -8.000335693359375
    3. '.reflect' → logprob: -19.500335693359375
    4. 'subtract' → logprob: -20.250335693359375
    5. 'ref' → logprob: -20.500335693359375
    6. 'Reflect' → logprob: -21.750335693359375
    7. '   ' → logprob: -22.000335693359375
    8. 'mul' → logprob: -22.250335693359375
    9. '(' → logprob: -23.125335693359375
    10. ' ' → logprob: -23.125335693359375

Token 1055: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -3.666993507067673e-05
    2. 'V' → logprob: -10.500036239624023
    3. '(' → logprob: -11.625036239624023
    4. ' (' → logprob: -16.750036239624023
    5. '(v' → logprob: -16.750036239624023
    6. '(
' → logprob: -17.375036239624023
    7. '```' → logprob: -18.250036239624023
    8. '(P' → logprob: -18.750036239624023
    9. '<V' → logprob: -19.250036239624023
    10. ',' → logprob: -19.875036239624023

Token 1056: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015727103454992175
    2. ',n' → logprob: -7.001572608947754
    3. '(' → logprob: -8.376572608947754
    4. ',V' → logprob: -8.376572608947754
    5. '(n' → logprob: -9.251572608947754
    6. ',
' → logprob: -9.876572608947754
    7. ' ,' → logprob: -10.501572608947754
    8. ',v' → logprob: -11.251572608947754
    9. '(V' → logprob: -12.001572608947754
    10. ')' → logprob: -12.376572608947754

Token 1057: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0788901224732399
    2. ' n' → logprob: -2.578890085220337
    3. '	n' → logprob: -15.453889846801758
    4. ')n' → logprob: -16.703889846801758
    5. '
' → logprob: -17.078889846801758
    6. ')' → logprob: -17.828889846801758
    7. 'norm' → logprob: -17.953889846801758
    8. '   ' → logprob: -18.328889846801758
    9. '(n' → logprob: -18.328889846801758
    10. ' 
' → logprob: -18.953889846801758

Token 1058: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01410203892737627
    2. ',' → logprob: -4.639101982116699
    3. ')
' → logprob: -5.514101982116699
    4. '   ' → logprob: -8.5141019821167
    5. ' )' → logprob: -10.1391019821167
    6. ')

' → logprob: -10.5141019821167
    7. 'return' → logprob: -11.7641019821167
    8. ',
' → logprob: -12.1391019821167
    9. ')return' → logprob: -12.3891019821167
    10. ' ' → logprob: -12.5141019821167

Token 1059: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1060: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0034268733579665422
    2. 'None' → logprob: -6.378427028656006
    3. '   ' → logprob: -6.878427028656006
    4. ' return' → logprob: -7.753427028656006
    5. '```' → logprob: -8.628426551818848
    6. '
' → logprob: -10.128426551818848
    7. '    
' → logprob: -10.753426551818848
    8. '	return' → logprob: -11.253426551818848
    9. ' None' → logprob: -13.003426551818848
    10. ' 
' → logprob: -13.003426551818848

Token 1061: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -2.3438327843905427e-05
    2. ' None' → logprob: -11.37502384185791
    3. 'float' → logprob: -11.75002384185791
    4. 'dist' → logprob: -13.25002384185791
    5. 'D' → logprob: -13.50002384185791
    6. '   ' → logprob: -15.00002384185791
    7. 'False' → logprob: -16.000022888183594
    8. 'No' → logprob: -16.125022888183594
    9. '(None' → logprob: -16.250022888183594
    10. 'N' → logprob: -16.375022888183594

Token 1062: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1063: 'for' (ID: 1938)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1064: ' line' (ID: 2543)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.17739582061767578
    2. ' line' → logprob: -2.052395820617676
    3. ' _' → logprob: -3.677395820617676
    4. ' ' → logprob: -5.552395820617676
    5. 'i' → logprob: -5.677395820617676
    6. '_' → logprob: -8.177395820617676
    7. ' l' → logprob: -8.177395820617676
    8. ' n' → logprob: -8.552395820617676
    9. ' t' → logprob: -8.927395820617676
    10. ' x' → logprob: -9.177395820617676

Token 1065: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2276662141084671
    2. 'in' → logprob: -1.6026662588119507
    3. ' =' → logprob: -6.60266637802124
    4. '=' → logprob: -7.72766637802124
    5. ' ' → logprob: -9.352665901184082
    6. 's' → logprob: -9.852665901184082
    7. '()' → logprob: -9.977665901184082
    8. '(' → logprob: -9.977665901184082
    9. 'line' → logprob: -10.102665901184082
    10. '=line' → logprob: -10.227665901184082

Token 1066: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.001502598519437015
    2. ' sys' → logprob: -6.501502513885498
    3. '=sys' → logprob: -15.501502990722656
    4. '	sys' → logprob: -17.001502990722656
    5. '(sys' → logprob: -18.376502990722656
    6. '```' → logprob: -18.626502990722656
    7. 'stdin' → logprob: -19.751502990722656
    8. '   ' → logprob: -21.501502990722656
    9. 'iter' → logprob: -21.876502990722656
    10. '
' → logprob: -21.876502990722656

Token 1067: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.005035217851400375
    2. '.' → logprob: -6.130035400390625
    3. '.readline' → logprob: -6.380035400390625
    4. 'stdin' → logprob: -7.005035400390625
    5. '(stdin' → logprob: -9.255035400390625
    6. '.readlines' → logprob: -10.380035400390625
    7. '.stdout' → logprob: -10.630035400390625
    8. '.argv' → logprob: -10.755035400390625
    9. '.setdefault' → logprob: -11.255035400390625
    10. '```' → logprob: -11.755035400390625

Token 1068: ':
' (ID: 734)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.33215034008026123
    2. ':' → logprob: -1.3321503400802612
    3. '.' → logprob: -5.332150459289551
    4. ':
' → logprob: -5.582150459289551
    5. '.readlines' → logprob: -5.707150459289551
    6. '.rstrip' → logprob: -6.207150459289551
    7. '.strip' → logprob: -6.207150459289551
    8. '   ' → logprob: -7.457150459289551
    9. ' in' → logprob: -7.457150459289551
    10. 'in' → logprob: -8.70715045928955

Token 1069: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007699632551521063
    2. 'tokens' → logprob: -8.75076961517334
    3. 'data' → logprob: -9.12576961517334
    4. '    
' → logprob: -9.12576961517334
    5. ' line' → logprob: -9.25076961517334
    6. ' if' → logprob: -9.62576961517334
    7. '```' → logprob: -9.75076961517334
    8. 'line' → logprob: -10.00076961517334
    9. 'if' → logprob: -10.12576961517334
    10. 'values' → logprob: -11.75076961517334

Token 1070: ' D' (ID: 415)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.7011964321136475
    2. 'if' → logprob: -0.9511964321136475
    3. ' if' → logprob: -3.4511964321136475
    4. ' line' → logprob: -3.8261964321136475
    5. 'l' → logprob: -4.576196670532227
    6. 'L' → logprob: -4.826196670532227
    7. 'x' → logprob: -4.826196670532227
    8. 'parts' → logprob: -5.076196670532227
    9. 'data' → logprob: -5.326196670532227
    10. 'params' → logprob: -5.326196670532227

Token 1071: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.37588566541671753
    2. ' =' → logprob: -1.2508857250213623
    3. ',' → logprob: -3.6258857250213623
    4. '=line' → logprob: -8.500885963439941
    5. ' =
' → logprob: -9.750885963439941
    6. '=
' → logprob: -9.875885963439941
    7. ' ,' → logprob: -10.250885963439941
    8. '=int' → logprob: -11.500885963439941
    9. 's' → logprob: -11.500885963439941
    10. ')' → logprob: -11.625885963439941

Token 1072: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.008672364987432957
    2. ' float' → logprob: -4.75867223739624
    3. 'int' → logprob: -10.133672714233398
    4. 'line' → logprob: -11.008672714233398
    5. ' line' → logprob: -15.008672714233398
    6. '   ' → logprob: -15.258672714233398
    7. '(float' → logprob: -15.383672714233398
    8. ' int' → logprob: -15.383672714233398
    9. '=float' → logprob: -15.383672714233398
    10. '	float' → logprob: -15.758672714233398

Token 1073: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0001593195047462359
    2. '(' → logprob: -8.75015926361084
    3. '(
' → logprob: -14.75015926361084
    4. 'line' → logprob: -15.50015926361084
    5. '=line' → logprob: -15.87515926361084
    6. '('' → logprob: -18.000160217285156
    7. ' (' → logprob: -18.000160217285156
    8. '[line' → logprob: -18.125160217285156
    9. '#line' → logprob: -18.375160217285156
    10. '()' → logprob: -18.375160217285156

Token 1074: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.4779587686061859
    2. '())' → logprob: -1.2279587984085083
    3. ')' → logprob: -2.6029586791992188
    4. '().' → logprob: -4.727958679199219
    5. '.rstrip' → logprob: -6.227958679199219
    6. '()' → logprob: -6.852958679199219
    7. '.split' → logprob: -7.352958679199219
    8. 'strip' → logprob: -8.602958679199219
    9. '.readline' → logprob: -9.102958679199219
    10. 'rstrip' → logprob: -9.477958679199219

Token 1075: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0003444024478085339
    2. '())
' → logprob: -8.250344276428223
    3. '()' → logprob: -9.750344276428223
    4. ')' → logprob: -10.625344276428223
    5. '())

' → logprob: -15.125344276428223
    6. '())
' → logprob: -16.62534523010254
    7. '()
' → logprob: -17.25034523010254
    8. '().' → logprob: -17.50034523010254
    9. ' ())' → logprob: -17.62534523010254
    10. '(' → logprob: -17.75034523010254

Token 1076: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16821090877056122
    2. 'if' → logprob: -2.418210983276367
    3. 'px' → logprob: -2.793210983276367
    4. 'x' → logprob: -6.543210983276367
    5. ' if' → logprob: -6.793210983276367
    6. ' px' → logprob: -7.418210983276367
    7. 'p' → logprob: -8.168210983276367
    8. '(px' → logprob: -8.418210983276367
    9. 'data' → logprob: -8.668210983276367
    10. 'points' → logprob: -9.293210983276367

Token 1077: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.241716668009758
    2. 'res' → logprob: -2.2417166233062744
    3. 'result' → logprob: -2.3667166233062744
    4. 'px' → logprob: -4.8667168617248535
    5. 'P' → logprob: -5.9917168617248535
    6. 'break' → logprob: -6.4917168617248535
    7. 'pos' → logprob: -7.3667168617248535
    8. 'r' → logprob: -7.3667168617248535
    9. 'answer' → logprob: -8.366716384887695
    10. 'ans' → logprob: -8.616716384887695

Token 1078: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.18249638378620148
    2. ' D' → logprob: -1.807496428489685
    3. ' not' → logprob: -5.932496547698975
    4. 'not' → logprob: -9.807496070861816
    5. ' abs' → logprob: -11.182496070861816
    6. 'abs' → logprob: -11.307496070861816
    7. ' ' → logprob: -11.432496070861816
    8. '	D' → logprob: -13.307496070861816
    9. ' ' → logprob: -13.807496070861816
    10. '  ' → logprob: -14.932496070861816

Token 1079: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1323895901441574
    2. '==' → logprob: -2.382389545440674
    3. ' <=' → logprob: -3.632389545440674
    4. '<=' → logprob: -5.382389545440674
    5. ' <' → logprob: -7.507389545440674
    6. '<' → logprob: -10.632390022277832
    7. '```' → logprob: -11.382390022277832
    8. ' ' → logprob: -11.757390022277832
    9. '0' → logprob: -11.882390022277832
    10. '=' → logprob: -11.882390022277832

Token 1080: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017958412354346365
    2. ' ' → logprob: -8.625179290771484
    3. '-' → logprob: -17.625179290771484
    4. '  ' → logprob: -18.375179290771484
    5. '   ' → logprob: -18.500179290771484
    6. '    ' → logprob: -20.250179290771484
    7. '
' → logprob: -20.500179290771484
    8. ' -' → logprob: -20.625179290771484
    9. '  
' → logprob: -21.125179290771484
    10. ' 
' → logprob: -21.250179290771484

Token 1081: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.739826181321405e-05
    2. ' ' → logprob: -10.12504768371582
    3. '-' → logprob: -11.87504768371582
    4. ' -' → logprob: -15.37504768371582
    5. '   ' → logprob: -18.56254768371582
    6. '```' → logprob: -18.68754768371582
    7. '1' → logprob: -18.75004768371582
    8. '=' → logprob: -18.93754768371582
    9. '  ' → logprob: -18.93754768371582
    10. '00' → logprob: -19.56254768371582

Token 1082: '.' (ID: 13)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6936140656471252
    2. ':
' → logprob: -0.6936140656471252
    3. ' :
' → logprob: -8.31861400604248
    4. ' :' → logprob: -8.56861400604248
    5. '   ' → logprob: -10.69361400604248
    6. ':return' → logprob: -12.31861400604248
    7. ':
' → logprob: -12.56861400604248
    8. ' ' → logprob: -14.56861400604248
    9. '.' → logprob: -14.69361400604248
    10. ':

' → logprob: -14.81861400604248

Token 1083: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13907992839813232
    2. ':
' → logprob: -2.639080047607422
    3. ':' → logprob: -3.014080047607422
    4. ':return' → logprob: -5.889080047607422
    5. '```' → logprob: -6.514080047607422
    6. ' ' → logprob: -6.639080047607422
    7. 'continue' → logprob: -7.014080047607422
    8. '00' → logprob: -7.139080047607422
    9. 'return' → logprob: -7.139080047607422
    10. '000' → logprob: -8.139080047607422

Token 1084: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1181836873292923
    2. ':
' → logprob: -2.2431836128234863
    3. '   ' → logprob: -5.243183612823486
    4. '       ' → logprob: -9.868184089660645
    5. ':
' → logprob: -12.993184089660645
    6. '.' → logprob: -13.243184089660645
    7. ':return' → logprob: -13.243184089660645
    8. '  ' → logprob: -13.868184089660645
    9. ' :' → logprob: -13.993184089660645
    10. ' :
' → logprob: -14.118184089660645

Token 1085: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11358971148729324
    2. '       ' → logprob: -2.2385897636413574
    3. '	break' → logprob: -7.488589763641357
    4. 'break' → logprob: -9.4885892868042
    5. '<|end|>' → logprob: -10.2385892868042
    6. ' break' → logprob: -10.4885892868042
    7. '```' → logprob: -10.8635892868042
    8. '	' → logprob: -11.2385892868042
    9. '   ' → logprob: -11.8635892868042
    10. '	   ' → logprob: -12.4885892868042

Token 1086: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.003605297766625881
    2. ' break' → logprob: -5.753605365753174
    3. '	break' → logprob: -8.253604888916016
    4. '   ' → logprob: -9.003604888916016
    5. '       ' → logprob: -10.378604888916016
    6. '
' → logprob: -12.003604888916016
    7. '```' → logprob: -12.378604888916016
    8. '_break' → logprob: -13.628604888916016
    9. 'b' → logprob: -15.253604888916016
    10. '    
' → logprob: -15.503604888916016

Token 1087: '
' (ID: 198)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6073641777038574
    2. '   ' → logprob: -1.2323641777038574
    3. 'res' → logprob: -2.2323641777038574
    4. 'print' → logprob: -3.8573641777038574
    5. '```' → logprob: -4.857364177703857
    6. 't' → logprob: -5.107364177703857
    7. '    
' → logprob: -5.607364177703857
    8. 'ret' → logprob: -5.982364177703857
    9. 'output' → logprob: -6.107364177703857
    10. 'hit' → logprob: -6.607364177703857

Token 1088: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.1672322005033493
    2. 'res' → logprob: -2.2922322750091553
    3. 'print' → logprob: -4.542232036590576
    4. 'distance' → logprob: -4.667232036590576
    5. 'px' → logprob: -5.167232036590576
    6. 'try' → logprob: -5.917232036590576
    7. '    
' → logprob: -6.042232036590576
    8. 'dist' → logprob: -6.167232036590576
    9. 'hit' → logprob: -6.167232036590576
    10. 'output' → logprob: -6.667232036590576

Token 1089: ' px' (ID: 27003)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' (adapté à ' px') → logprob: -0.7416777610778809
    2. 'result' → logprob: -1.1166777610778809
    3. 'res' → logprob: -2.116677761077881
    4. 'print' → logprob: -3.616677761077881
    5. 'P' → logprob: -3.991677761077881
    6. 'x' → logprob: -4.366677761077881
    7. 'Px' → logprob: -5.491677761077881
    8. '   ' → logprob: -6.116677761077881
    9. 'results' → logprob: -6.116677761077881
    10. 'answer' → logprob: -6.616677761077881

Token 1090: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003850325592793524
    2. '=' → logprob: -8.375385284423828
    3. ' ,' → logprob: -9.250385284423828
    4. ' =' → logprob: -10.375385284423828
    5. ',p' → logprob: -10.750385284423828
    6. ',v' → logprob: -13.750385284423828
    7. '‌,' → logprob: -14.625385284423828
    8. 'p' → logprob: -15.000385284423828
    9. ',y' → logprob: -15.000385284423828
    10. '_,' → logprob: -15.125385284423828

Token 1091: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.011053833179175854
    2. ' py' → logprob: -4.511054039001465
    3. 'vy' → logprob: -13.386054039001465
    4. 'px' → logprob: -13.386054039001465
    5. '_py' → logprob: -13.511054039001465
    6. '(py' → logprob: -14.386054039001465
    7. 'p' → logprob: -15.261054039001465
    8. 'Py' → logprob: -15.511054039001465
    9. '.py' → logprob: -16.01105308532715
    10. '0' → logprob: -16.26105308532715

Token 1092: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009884640574455261
    2. ',v' → logprob: -4.634884834289551
    3. '=' → logprob: -9.13488483428955
    4. ' =' → logprob: -11.50988483428955
    5. ' ,' → logprob: -11.75988483428955
    6. 'vx' → logprob: -13.38488483428955
    7. '=v' → logprob: -15.13488483428955
    8. ',float' → logprob: -15.88488483428955
    9. ' vx' → logprob: -16.009883880615234
    10. 'v' → logprob: -16.009883880615234

Token 1093: ' vx' (ID: 93588)
  Prédit: 'vx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vx' → logprob: -0.04300958290696144
    2. ' vx' → logprob: -3.1680095195770264
    3. 'v' → logprob: -13.168009757995605
    4. 'px' → logprob: -13.168009757995605
    5. 'VX' → logprob: -13.293009757995605
    6. ' ' → logprob: -14.043009757995605
    7. 'vv' → logprob: -14.293009757995605
    8. 'vz' → logprob: -14.418009757995605
    9. 'vy' → logprob: -15.043009757995605
    10. '=' → logprob: -15.043009757995605

Token 1094: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026860725483857095
    2. ',v' → logprob: -8.250268936157227
    3. '=' → logprob: -12.625268936157227
    4. 'vy' → logprob: -13.250268936157227
    5. ' ,' → logprob: -14.000268936157227
    6. ' =' → logprob: -15.000268936157227
    7. 'v' → logprob: -15.125268936157227
    8. 'vx' → logprob: -15.375268936157227
    9. ',y' → logprob: -15.625268936157227
    10. ',value' → logprob: -16.750268936157227

Token 1095: ' vy' (ID: 14190)
  Prédit: 'vy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' → logprob: -0.0009115827269852161
    2. ' vy' → logprob: -7.000911712646484
    3. 'vyk' → logprob: -17.875911712646484
    4. 'v' → logprob: -18.125911712646484
    5. 'vx' → logprob: -18.250911712646484
    6. 'vey' → logprob: -18.625911712646484
    7. ' ' → logprob: -18.625911712646484
    8. 'Vy' → logprob: -19.000911712646484
    9. ',' → logprob: -19.250911712646484
    10. '0' → logprob: -20.000911712646484

Token 1096: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029751529917120934
    2. ' =' → logprob: -3.5297515392303467
    3. '=line' → logprob: -13.904751777648926
    4. '＝' → logprob: -16.52975082397461
    5. '=sys' → logprob: -16.90475082397461
    6. '=input' → logprob: -17.65475082397461
    7. ',' → logprob: -17.90475082397461
    8. '=list' → logprob: -18.15475082397461
    9. '=float' → logprob: -18.77975082397461
    10. '=parse' → logprob: -19.02975082397461

Token 1097: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0040838588029146194
    2. ' map' → logprob: -5.504083633422852
    3. '[' → logprob: -12.629083633422852
    4. '0' → logprob: -13.379083633422852
    5. '	map' → logprob: -14.879083633422852
    6. 'list' → logprob: -15.879083633422852
    7. '   ' → logprob: -16.75408363342285
    8. '(map' → logprob: -17.12908363342285
    9. '_map' → logprob: -17.12908363342285
    10. 'sys' → logprob: -17.37908363342285

Token 1098: '(float' (ID: 17830)
  Prédit: '(float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(float' → logprob: -0.00018577903392724693
    2. 'float' → logprob: -9.0001859664917
    3. '(' → logprob: -10.0001859664917
    4. ',float' → logprob: -12.2501859664917
    5. '=float' → logprob: -12.3751859664917
    6. '(lambda' → logprob: -13.2501859664917
    7. '<float' → logprob: -13.2501859664917
    8. '(str' → logprob: -13.5001859664917
    9. '(int' → logprob: -14.0001859664917
    10. '(
' → logprob: -14.1251859664917

Token 1099: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.06095115467905998
    2. '(line' → logprob: -2.9359512329101562
    3. 'sys' → logprob: -5.435951232910156
    4. ')' → logprob: -7.310951232910156
    5. ',' → logprob: -7.935951232910156
    6. '=sys' → logprob: -8.185951232910156
    7. ',line' → logprob: -8.810951232910156
    8. ' sys' → logprob: -9.310951232910156
    9. '(' → logprob: -10.060951232910156
    10. '	sys' → logprob: -10.310951232910156

Token 1100: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -8.061054359131958e-06
    2. ' sys' → logprob: -12.000007629394531
    3. 'line' → logprob: -13.250007629394531
    4. '   ' → logprob: -18.25000762939453
    5. 'input' → logprob: -18.50000762939453
    6. '(sys' → logprob: -18.87500762939453
    7. '	sys' → logprob: -20.12500762939453
    8. '=sys' → logprob: -20.50000762939453
    9. '
' → logprob: -22.00000762939453
    10. ' line' → logprob: -23.00000762939453

Token 1101: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.25438714027404785
    2. '.readline' → logprob: -1.5043871402740479
    3. '=sys' → logprob: -7.129386901855469
    4. '(sys' → logprob: -7.879386901855469
    5. '(stdin' → logprob: -8.004386901855469
    6. 'sys' → logprob: -8.629386901855469
    7. '.' → logprob: -9.129386901855469
    8. 'stdin' → logprob: -9.129386901855469
    9. '.sys' → logprob: -9.379386901855469
    10. '[line' → logprob: -9.879386901855469

Token 1102: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -3.2378600735682994e-05
    2. ')' → logprob: -11.000032424926758
    3. '.' → logprob: -11.125032424926758
    4. '().' → logprob: -14.750032424926758
    5. '.readlines' → logprob: -15.625032424926758
    6. '.next' → logprob: -16.000032424926758
    7. '```' → logprob: -16.500032424926758
    8. ' .' → logprob: -16.750032424926758
    9. ').' → logprob: -16.750032424926758
    10. '.stdin' → logprob: -17.000032424926758

Token 1103: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.006959865801036358
    2. '())' → logprob: -5.006959915161133
    3. '()' → logprob: -8.381959915161133
    4. '.readline' → logprob: -11.506959915161133
    5. ')' → logprob: -13.131959915161133
    6. '()
' → logprob: -13.631959915161133
    7. '()[' → logprob: -14.381959915161133
    8. '(' → logprob: -14.631959915161133
    9. '();)' → logprob: -14.881959915161133
    10. '())
' → logprob: -15.256959915161133

Token 1104: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.5760601162910461
    2. 'split' → logprob: -0.8260601162910461
    3. 'rstrip' → logprob: -9.70106029510498
    4. 'read' → logprob: -9.82606029510498
    5. '(split' → logprob: -13.20106029510498
    6. ' strip' → logprob: -13.32606029510498
    7. ' split' → logprob: -14.70106029510498
    8. '.readline' → logprob: -14.95106029510498
    9. ')' → logprob: -15.07606029510498
    10. '(strip' → logprob: -15.20106029510498

Token 1105: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0009974405402317643
    2. '())' → logprob: -7.000997543334961
    3. '()' → logprob: -9.375997543334961
    4. '()
' → logprob: -14.500997543334961
    5. ')' → logprob: -15.875997543334961
    6. '(' → logprob: -15.875997543334961
    7. '()[' → logprob: -15.875997543334961
    8. '(),' → logprob: -16.25099754333496
    9. '('' → logprob: -16.75099754333496
    10. '()]' → logprob: -16.87599754333496

Token 1106: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. '(split' → logprob: -16.25
    3. ' split' → logprob: -17.125
    4. 'spl' → logprob: -18.0
    5. '.split' → logprob: -18.375
    6. ')' → logprob: -20.5
    7. 'sp' → logprob: -20.5
    8. 'rstrip' → logprob: -21.125
    9. '```' → logprob: -21.625
    10. ' ' → logprob: -21.875

Token 1107: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.02023586444556713
    2. '()' → logprob: -4.020236015319824
    3. ')' → logprob: -6.520236015319824
    4. '(' → logprob: -7.520236015319824
    5. '('' → logprob: -10.270236015319824
    6. '(','' → logprob: -11.020236015319824
    7. '())
' → logprob: -11.895236015319824
    8. '()))' → logprob: -12.520236015319824
    9. ' ())' → logprob: -12.770236015319824
    10. '(),' → logprob: -14.020236015319824

Token 1108: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.040181901305913925
    2. 'print' → logprob: -3.915181875228882
    3. 'res' → logprob: -4.165182113647461
    4. '   ' → logprob: -7.040182113647461
    5. ' result' → logprob: -7.290182113647461
    6. 'r' → logprob: -7.415182113647461
    7. 'output' → logprob: -7.915182113647461
    8. '```' → logprob: -7.915182113647461
    9. 'ret' → logprob: -8.040182113647461
    10. 'answer' → logprob: -8.665182113647461

Token 1109: ' res' (ID: 694)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5500792860984802
    2. 'res' (adapté à ' res') → logprob: -1.050079345703125
    3. 'r' → logprob: -2.675079345703125
    4. 'print' → logprob: -6.050079345703125
    5. 'ret' → logprob: -6.675079345703125
    6. 'out' → logprob: -8.175079345703125
    7. 'answer' → logprob: -9.175079345703125
    8. 'ans' → logprob: -9.425079345703125
    9. 'output' → logprob: -9.925079345703125
    10. ' result' → logprob: -10.300079345703125

Token 1110: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19814497232437134
    2. ' =' → logprob: -1.8231449127197266
    3. 'ult' → logprob: -4.323144912719727
    4. 'ults' → logprob: -5.573144912719727
    5. 'u' → logprob: -7.448144912719727
    6. 'uls' → logprob: -8.698144912719727
    7. 'ul' → logprob: -9.698144912719727
    8. 'ultat' → logprob: -10.198144912719727
    9. 'ULT' → logprob: -10.323144912719727
    10. ' ' → logprob: -10.448144912719727

Token 1111: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -5.836499985889532e-05
    2. ' solve' → logprob: -9.7500581741333
    3. '.solve' → logprob: -21.125059127807617
    4. 'sol' → logprob: -21.250059127807617
    5. '(s' → logprob: -22.375059127807617
    6. 'save' → logprob: -22.500059127807617
    7. 'solver' → logprob: -22.750059127807617
    8. '   ' → logprob: -23.375059127807617
    9. 'resolve' → logprob: -23.375059127807617
    10. '```' → logprob: -24.375059127807617

Token 1112: '(D' (ID: 9908)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5761426687240601
    2. '(D' → logprob: -0.8261426687240601
    3. '(
' → logprob: -9.451142311096191
    4. '((' → logprob: -9.826142311096191
    5. ' (' → logprob: -10.576142311096191
    6. '(distance' → logprob: -11.451142311096191
    7. '(None' → logprob: -11.451142311096191
    8. '(res' → logprob: -11.951142311096191
    9. '(dist' → logprob: -12.326142311096191
    10. '(False' → logprob: -12.826142311096191

Token 1113: ',' (ID: 11)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1114: ' px' (ID: 27003)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.0003364158037584275
    2. ' px' → logprob: -8.000336647033691
    3. 'py' → logprob: -14.250336647033691
    4. '(px' → logprob: -14.875336647033691
    5. '   ' → logprob: -18.625335693359375
    6. '_px' → logprob: -19.250335693359375
    7. ':px' → logprob: -20.500335693359375
    8. 'Px' → logprob: -20.750335693359375
    9. 'pz' → logprob: -21.125335693359375
    10. '
' → logprob: -21.375335693359375

Token 1115: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.2994620242971e-06
    2. ' ,' → logprob: -12.250008583068848
    3. ',
' → logprob: -12.625008583068848
    4. 'py' → logprob: -16.37500762939453
    5. ',y' → logprob: -17.25000762939453
    6. ',

' → logprob: -17.50000762939453
    7. ',p' → logprob: -17.62500762939453
    8. '_py' → logprob: -17.87500762939453
    9. ',
' → logprob: -18.87500762939453
    10. '_,' → logprob: -19.37500762939453

Token 1116: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.000158842682139948
    2. ' py' → logprob: -8.75015926361084
    3. '_py' → logprob: -15.75015926361084
    4. '(py' → logprob: -16.500158309936523
    5. '.py' → logprob: -16.750158309936523
    6. 'ply' → logprob: -17.875158309936523
    7. 'Py' → logprob: -18.625158309936523
    8. 'p' → logprob: -18.625158309936523
    9. 'ppy' → logprob: -18.875158309936523
    10. 'ipy' → logprob: -20.625158309936523

Token 1117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019393461989238858
    2. 'py' → logprob: -6.251939296722412
    3. ' ,' → logprob: -11.62693977355957
    4. '_py' → logprob: -13.75193977355957
    5. '_,' → logprob: -15.25193977355957
    6. '.py' → logprob: -15.62693977355957
    7. ',
' → logprob: -16.50193977355957
    8. ' py' → logprob: -16.62693977355957
    9. 'Py' → logprob: -16.62693977355957
    10. '(py' → logprob: -16.75193977355957

Token 1118: ' vx' (ID: 93588)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.011069518513977528
    2. 'vy' → logprob: -4.511069297790527
    3. ' py' → logprob: -10.886069297790527
    4. 'px' → logprob: -13.886069297790527
    5. 'pv' → logprob: -13.886069297790527
    6. ' vy' → logprob: -14.886069297790527
    7. 'vx' → logprob: -15.261069297790527
    8. 'ply' → logprob: -15.636069297790527
    9. '(py' → logprob: -15.636069297790527
    10. '_py' → logprob: -16.261070251464844

Token 1119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9623810658231378e-05
    2. ' ,' → logprob: -11.000020027160645
    3. ',y' → logprob: -13.375020027160645
    4. 'vy' → logprob: -14.250020027160645
    5. ',
' → logprob: -14.625020027160645
    6. ',v' → logprob: -15.625020027160645
    7. '```' → logprob: -18.500019073486328
    8. 'y' → logprob: -18.625019073486328
    9. ' vy' → logprob: -18.875019073486328
    10. '_,' → logprob: -19.125019073486328

Token 1120: ' vy' (ID: 14190)
  Prédit: 'vy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' → logprob: -0.06209496036171913
    2. 'py' → logprob: -2.8120949268341064
    3. ' vy' → logprob: -9.187094688415527
    4. ' py' → logprob: -11.437094688415527
    5. 'wy' → logprob: -11.562094688415527
    6. '(py' → logprob: -13.687094688415527
    7. '.py' → logprob: -14.687094688415527
    8. 'v' → logprob: -14.812094688415527
    9. '_py' → logprob: -15.062094688415527
    10. 'uy' → logprob: -15.062094688415527

Token 1121: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10021745413541794
    2. ')' → logprob: -2.350217342376709
    3. ')
' → logprob: -12.475217819213867
    4. 'if' → logprob: -12.975217819213867
    5. ')

' → logprob: -13.100217819213867
    6. ' if' → logprob: -13.850217819213867
    7. '   ' → logprob: -14.100217819213867
    8. ' )
' → logprob: -14.100217819213867
    9. ')`
' → logprob: -16.600217819213867
    10. '
' → logprob: -16.725217819213867

Token 1122: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04023902490735054
    2. 'if' → logprob: -3.415239095687866
    3. '   ' → logprob: -5.165238857269287
    4. ' print' → logprob: -8.040239334106445
    5. ' if' → logprob: -8.165239334106445
    6. '```' → logprob: -8.915239334106445
    7. '
' → logprob: -10.040239334106445
    8. '    
' → logprob: -10.790239334106445
    9. '	print' → logprob: -10.915239334106445
    10. '  
' → logprob: -11.665239334106445

Token 1123: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.000365855434210971
    2. 'print' → logprob: -8.0003662109375
    3. ' if' → logprob: -10.6253662109375
    4. '   ' → logprob: -12.2503662109375
    5. '```' → logprob: -13.6253662109375
    6. '
' → logprob: -17.2503662109375
    7. '    
' → logprob: -17.3753662109375
    8. 'i' → logprob: -18.0003662109375
    9. '``' → logprob: -18.2503662109375
    10. '	if' → logprob: -18.8753662109375

Token 1124: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.10020678490400314
    2. ' res' → logprob: -2.3502068519592285
    3. '(res' → logprob: -17.10020637512207
    4. ' ' → logprob: -17.60020637512207
    5. '   ' → logprob: -17.60020637512207
    6. '
' → logprob: -18.35020637512207
    7. '	res' → logprob: -18.47520637512207
    8. ' ' → logprob: -18.85020637512207
    9. 'r' → logprob: -19.10020637512207
    10. 're' → logprob: -19.47520637512207

Token 1125: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.00021450345229823142
    2. 'is' → logprob: -8.500214576721191
    3. ' ==' → logprob: -12.625214576721191
    4. '	is' → logprob: -12.875214576721191
    5. '==' → logprob: -13.250214576721191
    6. ' ' → logprob: -13.625214576721191
    7. ')is' → logprob: -14.500214576721191
    8. ' i' → logprob: -14.625214576721191
    9. ')' → logprob: -15.250214576721191
    10. '=' → logprob: -15.750214576721191

Token 1126: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.6993484497070312
    2. 'None' → logprob: -0.6993484497070312
    3. ' not' → logprob: -5.199348449707031
    4. 'not' → logprob: -7.324348449707031
    5. 'Not' → logprob: -14.074348449707031
    6. ' ' → logprob: -14.449348449707031
    7. '_None' → logprob: -14.949348449707031
    8. '   ' → logprob: -15.074348449707031
    9. ' ' → logprob: -15.449348449707031
    10. 'N' → logprob: -15.699348449707031

Token 1127: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09832855314016342
    2. '   ' → logprob: -3.0983285903930664
    3. 'print' → logprob: -3.4733285903930664
    4. '       ' → logprob: -4.723328590393066
    5. ':
' → logprob: -5.223328590393066
    6. ' print' → logprob: -6.973328590393066
    7. '.' → logprob: -7.348328590393066
    8. '	print' → logprob: -8.348328590393066
    9. ' or' → logprob: -8.598328590393066
    10. '=' → logprob: -8.598328590393066

Token 1128: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10362623631954193
    2. '   ' → logprob: -2.728626251220703
    3. 'print' → logprob: -3.478626251220703
    4. ' print' → logprob: -6.103626251220703
    5. '```' → logprob: -10.978626251220703
    6. '	print' → logprob: -11.603626251220703
    7. '`' → logprob: -12.478626251220703
    8. '           ' → logprob: -12.978626251220703
    9. '    
' → logprob: -13.103626251220703
    10. '	   ' → logprob: -13.228626251220703

Token 1129: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0003091254911851138
    2. '   ' → logprob: -8.250308990478516
    3. ' print' → logprob: -10.000308990478516
    4. 'pr' → logprob: -14.250308990478516
    5. '	print' → logprob: -14.375308990478516
    6. '    
' → logprob: -14.375308990478516
    7. 'printf' → logprob: -14.875308990478516
    8. '```' → logprob: -16.375308990478516
    9. '  
' → logprob: -17.125308990478516
    10. 'Print' → logprob: -17.250308990478516

Token 1130: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.6839410662651062
    2. '-' → logprob: -1.433941125869751
    3. '(-' → logprob: -2.183941125869751
    4. 'Impossible' → logprob: -2.433941125869751
    5. '"No' → logprob: -4.558940887451172
    6. '('' → logprob: -4.558940887451172
    7. 'im' → logprob: -4.683940887451172
    8. '"' → logprob: -4.933940887451172
    9. 'No' → logprob: -5.308940887451172
    10. 'NO' → logprob: -5.558940887451172

Token 1131: 'im' (ID: 321)
  Prédit: 'im'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.4910443127155304
    2. 'Impossible' → logprob: -0.991044282913208
    3. 'no' → logprob: -5.241044521331787
    4. '-' → logprob: -5.366044521331787
    5. 'No' → logprob: -5.616044521331787
    6. 'IMP' → logprob: -7.741044521331787
    7. 'NO' → logprob: -7.866044521331787
    8. 'The' → logprob: -7.991044521331787
    9. 'sorry' → logprob: -8.116044044494629
    10. 'Sorry' → logprob: -8.241044044494629

Token 1132: 'possible' (ID: 50714)
  Prédit: 'possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.00038991993642412126
    2. 'p' → logprob: -8.87539005279541
    3. 'poss' → logprob: -8.87539005279541
    4. 'pos' → logprob: -9.50039005279541
    5. 'pass' → logprob: -11.25039005279541
    6. 'Possible' → logprob: -11.50039005279541
    7. '_possible' → logprob: -12.12539005279541
    8. ' possible' → logprob: -13.37539005279541
    9. '-' → logprob: -14.12539005279541
    10. 'possibly' → logprob: -14.12539005279541

Token 1133: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00034297199454158545
    2. ')")' → logprob: -8.125343322753906
    3. ')' → logprob: -10.500343322753906
    4. '")
' → logprob: -10.875343322753906
    5. ')")
' → logprob: -15.375343322753906
    6. '"' → logprob: -15.500343322753906
    7. '}")' → logprob: -16.875343322753906
    8. '")
' → logprob: -17.500343322753906
    9. ')"' → logprob: -17.500343322753906
    10. '')' → logprob: -18.000343322753906

Token 1134: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012490586377680302
    2. 'else' → logprob: -4.512490749359131
    3. ' else' → logprob: -6.762490749359131
    4. '	else' → logprob: -8.762490272521973
    5. '<|end|>' → logprob: -9.762490272521973
    6. '       ' → logprob: -10.762490272521973
    7. ')' → logprob: -11.012490272521973
    8. '.' → logprob: -11.262490272521973
    9. ',' → logprob: -13.012490272521973
    10. 'elif' → logprob: -13.262490272521973

Token 1135: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.27996256947517395
    2. '   ' → logprob: -1.5299625396728516
    3. ' else' → logprob: -3.6549625396728516
    4. '	else' → logprob: -6.404962539672852
    5. '<|end|>' → logprob: -10.029962539672852
    6. '```' → logprob: -10.529962539672852
    7. '       ' → logprob: -11.154962539672852
    8. '    
' → logprob: -11.404962539672852
    9. 'elif' → logprob: -11.529962539672852
    10. ' ' → logprob: -12.404962539672852

Token 1136: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7491492033004761
    2. '       ' → logprob: -0.8741492033004761
    3. '   ' → logprob: -2.4991493225097656
    4. ':
' → logprob: -4.249149322509766
    5. '{' → logprob: -5.874149322509766
    6. '(' → logprob: -5.874149322509766
    7. '    ' → logprob: -6.749149322509766
    8. '():' → logprob: -6.874149322509766
    9. '        
' → logprob: -7.374149322509766
    10. ' :' → logprob: -7.624149322509766

Token 1137: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026407822966575623
    2. 'print' → logprob: -4.151407718658447
    3. ' print' → logprob: -5.151407718658447
    4. '   ' → logprob: -5.526407718658447
    5. '```' → logprob: -8.151408195495605
    6. '           ' → logprob: -9.526408195495605
    7. '        
' → logprob: -10.026408195495605
    8. '	print' → logprob: -10.276408195495605
    9. '    
' → logprob: -10.651408195495605
    10. '`' → logprob: -11.276408195495605

Token 1138: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.128163257315464e-07
    2. ' print' → logprob: -15.25
    3. 'f' → logprob: -17.375
    4. '{' → logprob: -17.5
    5. '   ' → logprob: -18.375
    6. 'printf' → logprob: -18.5
    7. '"{' → logprob: -18.875
    8. '       ' → logprob: -20.875
    9. '    
' → logprob: -22.0
    10. '	print' → logprob: -22.25

Token 1139: '("%.' (ID: 110073)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.005743325222283602
    2. '("{' → logprob: -5.505743503570557
    3. '(res' → logprob: -6.630743503570557
    4. '("%.' → logprob: -8.255743026733398
    5. '(int' → logprob: -10.005743026733398
    6. '(round' → logprob: -11.005743026733398
    7. '('{' → logprob: -11.755743026733398
    8. 'f' → logprob: -12.130743026733398
    9. '"{' → logprob: -12.255743026733398
    10. '(' → logprob: -13.130743026733398

Token 1140: '8' (ID: 23)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.0933136940002441
    2. '12' → logprob: -1.2183136940002441
    3. '10' → logprob: -2.093313694000244
    4. '15' → logprob: -2.218313694000244
    5. '6' → logprob: -3.218313694000244
    6. '8' → logprob: -3.343313694000244
    7. '7' → logprob: -3.843313694000244
    8. '13' → logprob: -3.968313694000244
    9. '11' → logprob: -4.468313694000244
    10. '14' → logprob: -4.843313694000244

Token 1141: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.306760805164231e-05
    2. 'g' → logprob: -11.25001335144043
    3. 'lf' → logprob: -17.25001335144043
    4. ' f' → logprob: -19.62501335144043
    5. '{' → logprob: -20.25001335144043
    6. '
' → logprob: -20.37501335144043
    7. '```' → logprob: -20.62501335144043
    8. 'e' → logprob: -20.75001335144043
    9. '%' → logprob: -21.25001335144043
    10. '	f' → logprob: -21.75001335144043

Token 1142: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.40832436084747314
    2. '(res' → logprob: -1.1583243608474731
    3. '(' → logprob: -4.158324241638184
    4. '"%' → logprob: -6.033324241638184
    5. '"%(' → logprob: -6.283324241638184
    6. '("' → logprob: -7.283324241638184
    7. '("%' → logprob: -8.283324241638184
    8. '%' → logprob: -8.533324241638184
    9. '%"' → logprob: -9.158324241638184
    10. '(%' → logprob: -9.783324241638184

Token 1143: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.00012856863031629473
    2. '%(' → logprob: -9.375128746032715
    3. ' %' → logprob: -10.250128746032715
    4. '%
' → logprob: -13.125128746032715
    5. '%s' → logprob: -13.500128746032715
    6. '%"' → logprob: -13.500128746032715
    7. '%i' → logprob: -13.625128746032715
    8. '%d' → logprob: -14.000128746032715
    9. '%\' → logprob: -14.625128746032715
    10. '(res' → logprob: -15.250128746032715

Token 1144: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -4.842555426876061e-06
    2. '(res' → logprob: -12.250004768371582
    3. ' res' → logprob: -17.5000057220459
    4. '	res' → logprob: -21.6250057220459
    5. '$res' → logprob: -22.7500057220459
    6. '_res' → logprob: -22.7500057220459
    7. '=res' → logprob: -25.6250057220459
    8. 'resi' → logprob: -26.0000057220459
    9. 'float' → logprob: -26.2500057220459
    10. 'resc' → logprob: -26.3750057220459

Token 1145: ')' (ID: 8)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1143
Tokens correctement prédits (1ère position, stricte): 451
Tokens correctement prédits (1ère position, avec adaptation): 482
Tokens correctement prédits (top 10): 914
Précision stricte (1ère position): 39.46%
Précision adaptée (1ère position): 42.17%
Précision (top 10): 79.97%
================================================================================
