================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:18:01
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Solution python complète avec commentaires détaillés

import sys

def main():
    input = sys.stdin.readline  # Utiliser readline pour une lecture efficace
    while True:
        n = int(input())
        if n == 0:  # Condition de fin : ligne contenant 0
            break

        times = [int(input()) for _ in range(n)]  # liste des temps par client

        # Objectif : minimiser la somme des temps d'attente cumulés
        # Approche classique : trier les temps de service par ordre croissant (SJF - Shortest Job First)
        times.sort()

        total_waiting_time = 0
        current_time = 0
        for t in times:
            # Pour chaque client, son temps d'attente est le temps cumulé avant son service
            total_waiting_time += current_time
            current_time += t

        print(total_waiting_time)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Solution' (ID: 20858)
  → Token d'amorce (pas de prédiction)

Token 2: ' python' (ID: 22752)
  → Token d'amorce (pas de prédiction)

Token 3: ' complète' (ID: 75660)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06580483913421631
    2. '```' → logprob: -2.815804958343506
    3. '#' → logprob: -6.065804958343506
    4. ':def' → logprob: -7.690804958343506
    5. '\' → logprob: -8.315804481506348
    6. 'def' → logprob: -8.315804481506348
    7. '``' → logprob: -9.065804481506348
    8. ':
' → logprob: -9.565804481506348
    9. ' :' → logprob: -10.065804481506348
    10. ''''' → logprob: -10.065804481506348

Token 4: ' avec' (ID: 3937)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2090575098991394
    2. '```' → logprob: -1.7090575695037842
    3. '#' → logprob: -5.709057331085205
    4. ' :' → logprob: -6.584057331085205
    5. '\' → logprob: -7.334057331085205
    6. '\n' → logprob: -7.459057331085205
    7. ':
' → logprob: -7.709057331085205
    8. '``' → logprob: -7.709057331085205
    9. 'def' → logprob: -8.334057807922363
    10. ':def' → logprob: -8.834057807922363

Token 5: ' commentaires' (ID: 67971)
  Prédit: ' commentaires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' commentaires' → logprob: -0.6188539862632751
    2. 'un' → logprob: -2.11885404586792
    3. ' des' → logprob: -2.86885404586792
    4. ' un' → logprob: -3.36885404586792
    5. ' une' → logprob: -3.36885404586792
    6. ' la' → logprob: -3.36885404586792
    7. ' unittest' → logprob: -3.49385404586792
    8. '```' → logprob: -4.11885404586792
    9. 'une' → logprob: -4.49385404586792
    10. '#' → logprob: -4.74385404586792

Token 6: ' déta' (ID: 99673)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.572910726070404
    2. ':' → logprob: -1.1979107856750488
    3. '#' → logprob: -2.197910785675049
    4. '\' → logprob: -5.072910785675049
    5. '\n' → logprob: -5.197910785675049
    6. ' :' → logprob: -5.447910785675049
    7. '``' → logprob: -5.822910785675049
    8. 'def' → logprob: -6.572910785675049
    9. ':
' → logprob: -7.947910785675049
    10. '
' → logprob: -8.07291030883789

Token 7: 'illés' (ID: 160970)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43330690264701843
    2. 's' → logprob: -1.5583069324493408
    3. ' :' → logprob: -2.558306932449341
    4. '#' → logprob: -3.183306932449341
    5. '```' → logprob: -4.308306694030762
    6. ' ' → logprob: -6.308306694030762
    7. 'e' → logprob: -6.433306694030762
    8. '`' → logprob: -7.183306694030762
    9. '#:' → logprob: -7.683306694030762
    10. ':#' → logprob: -7.808306694030762

Token 8: '

' (ID: 279)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7925143837928772
    2. '```' → logprob: -1.1675143241882324
    3. '#' → logprob: -1.6675143241882324
    4. '\n' → logprob: -3.7925143241882324
    5. '\' → logprob: -4.292514324188232
    6. ' :' → logprob: -5.167514324188232
    7. '``' → logprob: -6.417514324188232
    8. ':
' → logprob: -7.292514324188232
    9. '
' → logprob: -7.917514324188232
    10. ':#' → logprob: -7.917514324188232

Token 9: 'import' (ID: 561)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.32740500569343567
    2. '#' → logprob: -1.5774049758911133
    3. ':' → logprob: -2.7024049758911133
    4. 'def' → logprob: -6.202404975891113
    5. '``' → logprob: -6.702404975891113
    6. '\' → logprob: -7.327404975891113
    7. ''''
' → logprob: -8.202404975891113
    8. ' :' → logprob: -8.452404975891113
    9. '
' → logprob: -8.827404975891113
    10. ':
' → logprob: -8.827404975891113

Token 10: ' sys' (ID: 12228)
  Prédit: ' numpy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numpy' → logprob: -0.27540555596351624
    2. ' pandas' → logprob: -1.6504055261611938
    3. ' os' → logprob: -3.6504056453704834
    4. ' math' → logprob: -4.150405406951904
    5. ' sys' → logprob: -5.400405406951904
    6. 'numpy' → logprob: -6.525405406951904
    7. ' requests' → logprob: -7.775405406951904
    8. ' json' → logprob: -8.900405883789062
    9. ' tensorflow' → logprob: -9.150405883789062
    10. ' matplotlib' → logprob: -9.150405883789062

Token 11: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33709630370140076
    2. '\n' → logprob: -1.9620963335037231
    3. '<|end|>' → logprob: -2.9620962142944336
    4. '

' → logprob: -3.5870962142944336
    5. 'import' → logprob: -3.8370962142944336
    6. '\' → logprob: -3.9620962142944336
    7. '```' → logprob: -4.087096214294434
    8. '<|end|>' → logprob: -5.587096214294434
    9. '#' → logprob: -6.212096214294434
    10. '' → logprob: -7.587096214294434

Token 12: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0622657537460327
    2. '

' → logprob: -1.1872657537460327
    3. 'import' → logprob: -2.1872658729553223
    4. '\n' → logprob: -2.5622658729553223
    5. 'def' → logprob: -2.6872658729553223
    6. '#' → logprob: -3.4372658729553223
    7. '\' → logprob: -3.5622658729553223
    8. '' → logprob: -5.187265872955322
    9. '```' → logprob: -5.187265872955322
    10. ' 

' → logprob: -5.312265872955322

Token 13: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5543401837348938
    2. ' main' → logprob: -2.054340124130249
    3. ' solution' → logprob: -2.304340124130249
    4. ' calculate' → logprob: -3.054340124130249
    5. ' solve' → logprob: -3.304340124130249
    6. ' factorial' → logprob: -3.554340124130249
    7. '_' → logprob: -4.179340362548828
    8. ' process' → logprob: -4.429340362548828
    9. ' hello' → logprob: -4.554340362548828
    10. ' def' → logprob: -4.679340362548828

Token 14: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004669949412345886
    2. '():' → logprob: -5.504670143127441
    3. ':' → logprob: -8.379670143127441
    4. ' (' → logprob: -8.754670143127441
    5. '(
' → logprob: -9.129670143127441
    6. '()' → logprob: -11.254670143127441
    7. '):' → logprob: -11.379670143127441
    8. '(

' → logprob: -11.629670143127441
    9. '(`' → logprob: -12.129670143127441
    10. '_' → logprob: -12.254670143127441

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05002984032034874
    2. ':' → logprob: -3.925029754638672
    3. '    ' → logprob: -4.300029754638672
    4. '():' → logprob: -4.675029754638672
    5. '(' → logprob: -6.300029754638672
    6. '(n' → logprob: -7.300029754638672
    7. ' :' → logprob: -7.300029754638672
    8. '    
' → logprob: -7.800029754638672
    9. ' ' → logprob: -7.925029754638672
    10. 'def' → logprob: -8.300029754638672

Token 16: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0649290382862091
    2. '#' → logprob: -4.064929008483887
    3. ' #' → logprob: -4.064929008483887
    4. '    ' → logprob: -4.189929008483887
    5. ' ' → logprob: -5.689929008483887
    6. ' print' → logprob: -6.064929008483887
    7. ' input' → logprob: -6.189929008483887
    8. 'input' (adapté à ' input') → logprob: -7.314929008483887
    9. 'n' → logprob: -7.689929008483887
    10. ' pass' → logprob: -7.814929008483887

Token 17: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6009326577186584
    2. '_line' → logprob: -1.6009325981140137
    3. '_data' → logprob: -1.6009325981140137
    4. '_' → logprob: -4.225932598114014
    5. '_text' → logprob: -4.350932598114014
    6. '_str' → logprob: -4.475932598114014
    7. '(' → logprob: -5.975932598114014
    8. '_string' → logprob: -5.975932598114014
    9. '_lines' → logprob: -6.475932598114014
    10. 'data' → logprob: -7.350932598114014

Token 18: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.00819384679198265
    2. 'sys' → logprob: -5.0081939697265625
    3. ' input' → logprob: -6.6331939697265625
    4. 'input' → logprob: -9.133193969726562
    5. '(sys' → logprob: -10.633193969726562
    6. '	sys' → logprob: -11.133193969726562
    7. ' ' → logprob: -11.758193969726562
    8. '=sys' → logprob: -12.133193969726562
    9. ' open' → logprob: -14.508193969726562
    10. '   ' → logprob: -15.008193969726562

Token 19: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.024661481380462646
    2. '.' → logprob: -3.7746615409851074
    3. '.readline' → logprob: -7.024661540985107
    4. '.stdout' → logprob: -8.27466106414795
    5. '.argv' → logprob: -9.27466106414795
    6. ' .' → logprob: -9.39966106414795
    7. '.std' → logprob: -10.27466106414795
    8. '.input' → logprob: -10.52466106414795
    9. 'stdin' → logprob: -11.14966106414795
    10. '.read' → logprob: -12.52466106414795

Token 20: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.012529074214398861
    2. '.read' → logprob: -4.512528896331787
    3. '.' → logprob: -6.637528896331787
    4. '.readlines' → logprob: -8.762529373168945
    5. ' .' → logprob: -12.137529373168945
    6. '.buffer' → logprob: -12.637529373168945
    7. '.Read' → logprob: -13.387529373168945
    8. '```' → logprob: -14.012529373168945
    9. 'read' → logprob: -14.512529373168945
    10. '.write' → logprob: -14.887529373168945

Token 21: ' ' (ID: 220)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.029919417575001717
    2. '().' → logprob: -3.779919385910034
    3. '()
' → logprob: -5.029919624328613
    4. '()

' → logprob: -9.779919624328613
    5. '()\' → logprob: -10.904919624328613
    6. '(' → logprob: -11.904919624328613
    7. '())' → logprob: -12.279919624328613
    8. '
' → logprob: -12.654919624328613
    9. '()
' → logprob: -12.654919624328613
    10. ')' → logprob: -12.654919624328613

Token 22: ' #' (ID: 1069)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005485066794790328
    2. '()
' → logprob: -7.625548362731934
    3. '   ' → logprob: -11.125548362731934
    4. '()

' → logprob: -11.500548362731934
    5. '().' → logprob: -11.625548362731934
    6. '(' → logprob: -11.750548362731934
    7. '()\' → logprob: -12.250548362731934
    8. ')' → logprob: -13.125548362731934
    9. '
' → logprob: -13.250548362731934
    10. '())' → logprob: -13.500548362731934

Token 23: ' Util' (ID: 13564)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5226780772209167
    2. 'input' → logprob: -2.2726781368255615
    3. '()' → logprob: -2.8976781368255615
    4. ' ' → logprob: -3.0226781368255615
    5. ' lecture' → logprob: -3.7726781368255615
    6. ' readline' → logprob: -3.8976781368255615
    7. ' lire' → logprob: -4.022677898406982
    8. ' Lecture' → logprob: -4.147677898406982
    9. ' Lire' → logprob: -4.522677898406982
    10. ' read' → logprob: -4.772677898406982

Token 24: 'iser' (ID: 7466)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.28712576627731323
    2. 'isé' → logprob: -3.037125825881958
    3. 'ser' → logprob: -3.162125825881958
    4. 'iser' → logprob: -3.287125825881958
    5. 'se' → logprob: -3.662125825881958
    6. 'isation' → logprob: -3.787125825881958
    7. '```' → logprob: -3.787125825881958
    8. 'is' → logprob: -4.412125587463379
    9. 'isateur' → logprob: -4.787125587463379
    10. '#' → logprob: -4.787125587463379

Token 25: ' readline' (ID: 179561)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.3089885413646698
    2. ' input' → logprob: -2.308988571166992
    3. 'input' → logprob: -2.683988571166992
    4. 'l' → logprob: -3.183988571166992
    5. ' une' → logprob: -3.808988571166992
    6. ' pour' → logprob: -4.558988571166992
    7. ' la' → logprob: -5.058988571166992
    8. ' un' → logprob: -5.433988571166992
    9. ' ' → logprob: -5.933988571166992
    10. ' readline' → logprob: -6.558988571166992

Token 26: ' pour' (ID: 1930)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005470762262120843
    2. '()
' → logprob: -7.875546932220459
    3. '().' → logprob: -9.875547409057617
    4. '()

' → logprob: -9.875547409057617
    5. '()\' → logprob: -10.250547409057617
    6. '(' → logprob: -11.375547409057617
    7. ')' → logprob: -13.000547409057617
    8. '())' → logprob: -13.125547409057617
    9. '<|end|>' → logprob: -13.375547409057617
    10. ' ()' → logprob: -13.500547409057617

Token 27: ' une' (ID: 2463)
  Prédit: ' optimiser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' optimiser' → logprob: -0.6756943464279175
    2. ' une' → logprob: -2.300694465637207
    3. ' lire' → logprob: -2.300694465637207
    4. 'optim' → logprob: -2.425694465637207
    5. 'l' → logprob: -3.050694465637207
    6. 'une' → logprob: -3.175694465637207
    7. ' la' → logprob: -3.550694465637207
    8. ' améliorer' → logprob: -3.925694465637207
    9. ' optim' → logprob: -4.925694465637207
    10. 'la' → logprob: -5.050694465637207

Token 28: ' lecture' (ID: 31993)
  Prédit: ' lecture'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lecture' → logprob: -0.12818844616413116
    2. ' meilleure' → logprob: -3.003188371658325
    3. 'lecture' → logprob: -3.003188371658325
    4. ' entrée' → logprob: -4.128188610076904
    5. 'entrée' → logprob: -6.128188610076904
    6. ' sais' → logprob: -7.503188610076904
    7. 'Lecture' → logprob: -7.628188610076904
    8. ' meilleur' → logprob: -8.128188133239746
    9. ' Lecture' → logprob: -8.378188133239746
    10. ' gestion' → logprob: -8.628188133239746

Token 29: ' efficace' (ID: 54338)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -1.012933611869812
    2. ' efficace' → logprob: -1.387933611869812
    3. ' rapide' → logprob: -1.387933611869812
    4. ' optimale' → logprob: -3.0129337310791016
    5. 'plus' → logprob: -4.012933731079102
    6. '   ' → logprob: -4.137933731079102
    7. '()' → logprob: -4.137933731079102
    8. ' ' → logprob: -4.387933731079102
    9. ' optim' → logprob: -4.762933731079102
    10. ' effic' → logprob: -5.387933731079102

Token 30: '
' (ID: 198)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.5767824649810791
    2. '   ' → logprob: -1.076782464981079
    3. '  
' → logprob: -3.201782464981079
    4. '()' → logprob: -4.4517822265625
    5. '   
' → logprob: -4.5767822265625
    6. ' 
' → logprob: -5.3267822265625
    7. '\' → logprob: -5.4517822265625
    8. '(' → logprob: -5.4517822265625
    9. '
' → logprob: -5.4517822265625
    10. '  ' → logprob: -5.8267822265625

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2855106294155121
    2. '    
' → logprob: -2.160510540008545
    3. '()' → logprob: -2.285510540008545
    4. '(' → logprob: -5.285510540008545
    5. '(
' → logprob: -5.410510540008545
    6. '
' → logprob: -5.785510540008545
    7. '  
' → logprob: -5.785510540008545
    8. '   
' → logprob: -6.035510540008545
    9. '  ' → logprob: -6.160510540008545
    10. 'def' → logprob: -6.160510540008545

Token 32: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027270207181572914
    2. '    
' → logprob: -4.402270317077637
    3. 'data' → logprob: -5.402270317077637
    4. 'n' → logprob: -5.402270317077637
    5. 'user' → logprob: -6.027270317077637
    6. 'while' (adapté à ' while') → logprob: -7.527270317077637
    7. 'for' → logprob: -7.902270317077637
    8. 'query' → logprob: -8.402270317077637
    9. ' data' → logprob: -8.777270317077637
    10. ' n' → logprob: -8.777270317077637

Token 33: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.0006344011635519564
    2. 'True' → logprob: -7.37563419342041
    3. '(True' → logprob: -11.87563419342041
    4. ' ' → logprob: -14.12563419342041
    5. '=True' → logprob: -17.000635147094727
    6. '1' → logprob: -17.500635147094727
    7. '   ' → logprob: -17.875635147094727
    8. ' true' → logprob: -18.375635147094727
    9. '  ' → logprob: -18.625635147094727
    10. '    ' → logprob: -18.625635147094727

Token 34: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00017123986617662013
    2. ' :' → logprob: -8.875171661376953
    3. '():' → logprob: -11.250171661376953
    4. ':
' → logprob: -11.500171661376953
    5. ':**' → logprob: -12.750171661376953
    6. '):' → logprob: -12.875171661376953
    7. '   ' → logprob: -13.375171661376953
    8. ',' → logprob: -14.375171661376953
    9. ',:' → logprob: -16.750171661376953
    10. ':def' → logprob: -16.750171661376953

Token 35: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02668003924190998
    2. '    ' → logprob: -3.9016799926757812
    3. '        
' → logprob: -6.151679992675781
    4. ' ' → logprob: -6.401679992675781
    5. '   ' → logprob: -7.026679992675781
    6. '        ' → logprob: -7.776679992675781
    7. '      ' → logprob: -8.401679992675781
    8. '     
' → logprob: -9.276679992675781
    9. '     ' → logprob: -9.401679992675781
    10. '    
' → logprob: -9.526679992675781

Token 36: ' n' (ID: 297)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.06511558592319489
    2. 'line' → logprob: -3.5651156902313232
    3. ' ligne' → logprob: -4.190115451812744
    4. '       ' → logprob: -5.190115451812744
    5. ' data' → logprob: -5.440115451812744
    6. '   ' → logprob: -5.565115451812744
    7. 'data' → logprob: -5.690115451812744
    8. 'ligne' → logprob: -7.190115451812744
    9. '    ' → logprob: -7.690115451812744
    10. 's' → logprob: -8.065115928649902

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859963804483414
    2. '=' → logprob: -3.0485997200012207
    3. '=int' → logprob: -12.048599243164062
    4. ' ' → logprob: -12.798599243164062
    5. '=input' → logprob: -13.548599243164062
    6. '_str' → logprob: -13.673599243164062
    7. ',' → logprob: -15.548599243164062
    8. 's' → logprob: -16.048599243164062
    9. '=line' → logprob: -16.048599243164062
    10. '_input' → logprob: -16.423599243164062

Token 38: ' int' (ID: 677)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.10925079137086868
    2. ' int' → logprob: -2.984250783920288
    3. 'input' → logprob: -3.109250783920288
    4. 'int' → logprob: -4.859251022338867
    5. ' ' → logprob: -7.609251022338867
    6. ' sys' → logprob: -11.359251022338867
    7. '  ' → logprob: -12.546751022338867
    8. ' n' → logprob: -13.359251022338867
    9. '   ' → logprob: -13.484251022338867
    10. ' i' → logprob: -13.859251022338867

Token 39: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.012644199654459953
    2. '(' → logprob: -4.387644290924072
    3. 'input' → logprob: -9.012643814086914
    4. ' (' → logprob: -11.512643814086914
    5. '(
' → logprob: -14.387643814086914
    6. ' input' → logprob: -14.512643814086914
    7. '(in' → logprob: -14.887643814086914
    8. '=input' → logprob: -15.012643814086914
    9. '()' → logprob: -15.387643814086914
    10. ',input' → logprob: -15.637643814086914

Token 40: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.013253523968160152
    2. '().' → logprob: -4.513253688812256
    3. '()' → logprob: -6.138253688812256
    4. ' ())' → logprob: -10.763253211975098
    5. '()))' → logprob: -11.138253211975098
    6. '())
' → logprob: -12.513253211975098
    7. '(' → logprob: -13.138253211975098
    8. ')' → logprob: -14.013253211975098
    9. '();)' → logprob: -14.513253211975098
    10. '())

' → logprob: -14.638253211975098

Token 41: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.068514384329319
    2. '<|end|>' → logprob: -2.818514347076416
    3. '<|end|>' → logprob: -6.318514347076416
    4. ')' → logprob: -6.318514347076416
    5. '        ' → logprob: -6.818514347076416
    6. ' ' → logprob: -7.568514347076416
    7. '   ' → logprob: -7.818514347076416
    8. '()' → logprob: -8.568514823913574
    9. '    ' → logprob: -8.568514823913574
    10. '        
' → logprob: -8.693514823913574

Token 42: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47705569863319397
    2. ' if' → logprob: -1.2270556688308716
    3. '        ' → logprob: -3.352055788040161
    4. ' ' → logprob: -3.977055788040161
    5. '<|end|>' → logprob: -4.102055549621582
    6. 'if' (adapté à ' if') → logprob: -4.602055549621582
    7. '    ' → logprob: -6.102055549621582
    8. '<|end|>' → logprob: -6.977055549621582
    9. ')' → logprob: -7.352055549621582
    10. '   ' → logprob: -7.352055549621582

Token 43: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0017246805364266038
    2. 'n' → logprob: -7.001724720001221
    3. ' not' → logprob: -7.126724720001221
    4. ' ' → logprob: -12.376724243164062
    5. 'not' → logprob: -12.501724243164062
    6. '	n' → logprob: -14.126724243164062
    7. ' ' → logprob: -14.626724243164062
    8. '  ' → logprob: -16.251724243164062
    9. '   ' → logprob: -16.251724243164062
    10. ' н' → logprob: -16.376724243164062

Token 44: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.009840256534516811
    2. '==' → logprob: -4.634840488433838
    3. ' <=' → logprob: -9.50984001159668
    4. '<=' → logprob: -12.88484001159668
    5. ' <' → logprob: -13.13484001159668
    6. ' ' → logprob: -13.38484001159668
    7. '==-' → logprob: -13.88484001159668
    8. ' ===' → logprob: -14.25984001159668
    9. '()==' → logprob: -14.38484001159668
    10. ')' → logprob: -14.63484001159668

Token 45: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.007606747094541788
    2. '0' → logprob: -4.8826069831848145
    3. ' ' → logprob: -14.507606506347656
    4. '  ' → logprob: -16.132606506347656
    5. ' -' → logprob: -18.382606506347656
    6. '=' → logprob: -18.757606506347656
    7. '_' → logprob: -19.007606506347656
    8. '   ' → logprob: -19.257606506347656
    9. ' EOF' → logprob: -19.445106506347656
    10. '-' → logprob: -19.695106506347656

Token 46: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018113377154804766
    2. ' ' → logprob: -8.625181198120117
    3. '-' → logprob: -13.625181198120117
    4. ' -' → logprob: -16.000181198120117
    5. '   ' → logprob: -17.000181198120117
    6. '=' → logprob: -17.250181198120117
    7. '```' → logprob: -17.250181198120117
    8. '  ' → logprob: -18.125181198120117
    9. ')' → logprob: -18.250181198120117
    10. '    ' → logprob: -18.375181198120117

Token 47: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0037005580961704254
    2. ':
' → logprob: -5.6287007331848145
    3. '       ' → logprob: -10.503700256347656
    4. ' :' → logprob: -10.628700256347656
    5. '):' → logprob: -11.003700256347656
    6. ':return' → logprob: -11.003700256347656
    7. '   ' → logprob: -11.878700256347656
    8. '           ' → logprob: -12.503700256347656
    9. ')' → logprob: -13.753700256347656
    10. '):
' → logprob: -14.128700256347656

Token 48: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007926118560135365
    2. '       ' → logprob: -5.257925987243652
    3. ' break' → logprob: -6.007925987243652
    4. 'break' → logprob: -9.257925987243652
    5. '   ' → logprob: -10.507925987243652
    6. '          ' → logprob: -10.632925987243652
    7. '            ' → logprob: -10.757925987243652
    8. '        ' → logprob: -11.132925987243652
    9. '	break' → logprob: -11.382925987243652
    10. '\n' → logprob: -12.007925987243652

Token 49: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05240284651517868
    2. 'break' → logprob: -3.9274027347564697
    3. '       ' → logprob: -4.052402973175049
    4. ' break' → logprob: -4.302402973175049
    5. '
' → logprob: -8.92740249633789
    6. '   ' → logprob: -9.42740249633789
    7. '	break' → logprob: -9.92740249633789
    8. '```' → logprob: -10.17740249633789
    9. '\n' → logprob: -10.30240249633789
    10. 'return' → logprob: -10.42740249633789

Token 50: ' Condition' (ID: 30255)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04445689171552658
    2. ' break' → logprob: -3.294456958770752
    3. '       ' → logprob: -5.794456958770752
    4. '        ' → logprob: -6.669456958770752
    5. '            ' → logprob: -6.794456958770752
    6. 'break' → logprob: -7.794456958770752
    7. ' ' → logprob: -8.544456481933594
    8. ' ' → logprob: -9.544456481933594
    9. '   ' → logprob: -9.669456481933594
    10. '          ' → logprob: -10.419456481933594

Token 51: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.5704598426818848
    2. '    ' → logprob: -1.5704598426818848
    3. '       ' → logprob: -1.5704598426818848
    4. ' de' → logprob: -2.0704598426818848
    5. '   ' → logprob: -2.4454598426818848
    6. ':' → logprob: -3.1954598426818848
    7. '<|end|>' → logprob: -3.4454598426818848
    8. '        ' → logprob: -4.195459842681885
    9. ' :' → logprob: -4.320459842681885
    10. ' break' → logprob: -4.445459842681885

Token 52: ' fin' (ID: 2131)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.965407133102417
    2. ' sortie' → logprob: -1.965407133102417
    3. ' fin' → logprob: -2.090407133102417
    4. ' break' → logprob: -2.215407133102417
    5. ' arrêt' → logprob: -2.715407133102417
    6. 'fin' → logprob: -2.840407133102417
    7. 'rupt' → logprob: -3.215407133102417
    8. 'arr' → logprob: -3.965407133102417
    9. 'stop' → logprob: -4.340407371520996
    10. 'sort' → logprob: -4.715407371520996

Token 53: ' :' (ID: 712)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4802473187446594
    2. '       ' → logprob: -1.2302472591400146
    3. ':' → logprob: -2.6052472591400146
    4. '
' → logprob: -5.605247497558594
    5. '   ' → logprob: -5.730247497558594
    6. '\n' → logprob: -5.855247497558594
    7. ' :' → logprob: -6.980247497558594
    8. '        ' → logprob: -6.980247497558594
    9. '    ' → logprob: -7.605247497558594
    10. ':
' → logprob: -7.730247497558594

Token 54: ' ligne' (ID: 19583)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.02402973361313343
    2. ' ' → logprob: -4.774029731750488
    3. '    ' → logprob: -5.024029731750488
    4. 'break' → logprob: -5.524029731750488
    5. ' ' → logprob: -5.649029731750488
    6. '        ' → logprob: -8.024029731750488
    7. '   ' → logprob: -8.274029731750488
    8. '       ' → logprob: -8.399029731750488
    9. '	break' → logprob: -8.524029731750488
    10. '    ' → logprob: -10.024029731750488

Token 55: ' contenant' (ID: 131049)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2831491231918335
    2. 'vide' → logprob: -1.6581491231918335
    3. ' vide' → logprob: -2.158149242401123
    4. ' ==' → logprob: -2.533149242401123
    5. '<|end|>' → logprob: -3.033149242401123
    6. ' de' → logprob: -3.408149242401123
    7. '\n' → logprob: -3.408149242401123
    8. ' ' → logprob: -3.658149242401123
    9. ' is' → logprob: -4.033149242401123
    10. 'n' → logprob: -4.033149242401123

Token 56: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1913529485464096
    2. '0' → logprob: -1.8163529634475708
    3. ' un' → logprob: -5.566352844238281
    4. ' uniquement' → logprob: -5.691352844238281
    5. '  ' → logprob: -7.316352844238281
    6. '<|end|>' → logprob: -7.441352844238281
    7. '   ' → logprob: -7.566352844238281
    8. '```' → logprob: -7.566352844238281
    9. ' a' → logprob: -7.941352844238281
    10. ' only' → logprob: -8.066352844238281

Token 57: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013496380997821689
    2. ' ' → logprob: -6.626349449157715
    3. '"' → logprob: -11.751349449157715
    4. '`' → logprob: -11.876349449157715
    5. ''' → logprob: -13.126349449157715
    6. 'un' → logprob: -13.626349449157715
    7. ' uniquement' → logprob: -13.626349449157715
    8. '```' → logprob: -14.001349449157715
    9. '  ' → logprob: -14.501349449157715
    10. ' zéro' → logprob: -14.751349449157715

Token 58: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05794893205165863
    2. '           ' → logprob: -3.1829488277435303
    3. ':' → logprob: -4.557949066162109
    4. '\n' → logprob: -7.057949066162109
    5. '
' → logprob: -7.307949066162109
    6. ':
' → logprob: -7.307949066162109
    7. '<|end|>' → logprob: -7.432949066162109
    8. ' break' → logprob: -7.932949066162109
    9. '   ' → logprob: -8.05794906616211
    10. '<|end|>' → logprob: -8.68294906616211

Token 59: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04334193468093872
    2. '           ' → logprob: -3.168341875076294
    3. '
' → logprob: -8.668341636657715
    4. '<|end|>' → logprob: -10.668341636657715
    5. '        
' → logprob: -10.918341636657715
    6. '        ' → logprob: -10.918341636657715
    7. '      ' → logprob: -11.043341636657715
    8. ':' → logprob: -11.168341636657715
    9. ' break' → logprob: -11.168341636657715
    10. '   ' → logprob: -11.168341636657715

Token 60: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7452128529548645
    2. ' break' → logprob: -0.9952128529548645
    3. 'break' (adapté à ' break') → logprob: -1.8702127933502197
    4. '           ' → logprob: -6.870213031768799
    5. '	break' → logprob: -7.870213031768799
    6. 'return' → logprob: -9.49521255493164
    7. '   ' → logprob: -9.87021255493164
    8. ' return' → logprob: -10.74521255493164
    9. '_break' → logprob: -11.12021255493164
    10. '        
' → logprob: -11.37021255493164

Token 61: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14195561408996582
    2. '
' → logprob: -2.141955614089966
    3. '<|end|>' → logprob: -4.766955375671387
    4. '        
' → logprob: -5.766955375671387
    5. '   ' → logprob: -7.266955375671387
    6. '\n' → logprob: -7.516955375671387
    7. '        ' → logprob: -7.766955375671387
    8. '<|end|>' → logprob: -7.891955375671387
    9. '    ' → logprob: -8.141955375671387
    10. ')' → logprob: -8.516955375671387

Token 62: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.868182361125946
    2. '       ' → logprob: -1.1181824207305908
    3. '<|end|>' → logprob: -1.4931824207305908
    4. '        
' → logprob: -4.118182182312012
    5. '<|end|>' → logprob: -5.243182182312012
    6. '        ' → logprob: -6.243182182312012
    7. '   ' → logprob: -6.743182182312012
    8. '    ' → logprob: -6.868182182312012
    9. '    
' → logprob: -7.118182182312012
    10. '```' → logprob: -7.493182182312012

Token 63: ' times' (ID: 4238)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08523835241794586
    2. ' numbers' → logprob: -3.835238456726074
    3. ' lines' → logprob: -4.210238456726074
    4. '        
' → logprob: -4.960238456726074
    5. 'numbers' → logprob: -5.460238456726074
    6. '   ' → logprob: -5.960238456726074
    7. ' data' → logprob: -6.085238456726074
    8. 's' → logprob: -6.335238456726074
    9. 'stack' → logprob: -6.335238456726074
    10. ' squares' → logprob: -6.710238456726074

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014271167106926441
    2. '=' → logprob: -4.264271259307861
    3. '=[]' → logprob: -10.389270782470703
    4. '[]' → logprob: -11.014270782470703
    5. 's' → logprob: -11.014270782470703
    6. '_' → logprob: -11.139270782470703
    7. '[' → logprob: -12.264270782470703
    8. ' ' → logprob: -12.764270782470703
    9. ')' → logprob: -12.889270782470703
    10. '_per' → logprob: -13.389270782470703

Token 65: ' [' (ID: 723)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.5066444873809814
    2. '[]' → logprob: -1.5066444873809814
    3. ' [' → logprob: -2.1316444873809814
    4. ' list' → logprob: -3.5066444873809814
    5. 'list' → logprob: -3.8816444873809814
    6. '[' → logprob: -5.506644248962402
    7. '[list' → logprob: -6.131644248962402
    8. '[input' → logprob: -9.881644248962402
    9. ' []
' → logprob: -10.381644248962402
    10. '[List' → logprob: -10.506644248962402

Token 66: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.046047911047935486
    2. '0' → logprob: -3.6710479259490967
    3. ' int' → logprob: -4.296047687530518
    4. 'float' → logprob: -6.046047687530518
    5. ']' → logprob: -6.296047687530518
    6. ']int' → logprob: -6.921047687530518
    7. 'tuple' → logprob: -8.296048164367676
    8. 'list' → logprob: -9.296048164367676
    9. '(int' → logprob: -9.546048164367676
    10. '   ' → logprob: -9.546048164367676

Token 67: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.002055692719295621
    2. '(' → logprob: -6.377055644989014
    3. 'input' → logprob: -8.377056121826172
    4. ')' → logprob: -10.252056121826172
    5. '(x' → logprob: -10.627056121826172
    6. ']' → logprob: -11.002056121826172
    7. ' (' → logprob: -11.377056121826172
    8. '(i' → logprob: -11.627056121826172
    9. '()' → logprob: -12.002056121826172
    10. '()]' → logprob: -12.377056121826172

Token 68: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.001177608733996749
    2. '()' → logprob: -7.251177787780762
    3. '().' → logprob: -7.751177787780762
    4. ')' → logprob: -11.501177787780762
    5. '()]' → logprob: -11.501177787780762
    6. ' ())' → logprob: -12.126177787780762
    7. '()),' → logprob: -12.376177787780762
    8. '())
' → logprob: -12.751177787780762
    9. '()))' → logprob: -13.501177787780762
    10. '(' → logprob: -13.751177787780762

Token 69: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08250366896390915
    2. ')' → logprob: -3.0825035572052
    3. ' for' → logprob: -3.7075035572052
    4. 'for' → logprob: -5.957503795623779
    5. '()]' → logprob: -5.957503795623779
    6. '())' → logprob: -7.207503795623779
    7. '(' → logprob: -7.207503795623779
    8. ' ()' → logprob: -7.332503795623779
    9. '       ' → logprob: -7.957503795623779
    10. ']' → logprob: -8.082503318786621

Token 70: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.06942331790924072
    2. ' range' → logprob: -3.194423198699951
    3. '_' → logprob: -4.444423198699951
    4. ' ' → logprob: -4.694423198699951
    5. ' in' → logprob: -5.569423198699951
    6. 'range' → logprob: -7.194423198699951
    7. '_range' → logprob: -7.944423198699951
    8. ' i' → logprob: -8.44442367553711
    9. '(range' → logprob: -10.94442367553711
    10. '	range' → logprob: -11.44442367553711

Token 71: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6064541339874268
    2. 'range' → logprob: -0.8564541339874268
    3. 'in' → logprob: -3.8564541339874268
    4. ' range' → logprob: -4.731453895568848
    5. ' ' → logprob: -9.856453895568848
    6. '  ' → logprob: -11.481453895568848
    7. '```' → logprob: -11.856453895568848
    8. '   ' → logprob: -12.231453895568848
    9. '(range' → logprob: -12.356453895568848
    10. '	range' → logprob: -12.981453895568848

Token 72: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0028246084693819284
    2. ' range' → logprob: -5.877824783325195
    3. '   ' → logprob: -11.377824783325195
    4. '(range' → logprob: -12.877824783325195
    5. ' ' → logprob: -13.627824783325195
    6. '  ' → logprob: -14.002824783325195
    7. '	range' → logprob: -14.002824783325195
    8. ')' → logprob: -14.002824783325195
    9. '    ' → logprob: -14.502824783325195
    10. '       ' → logprob: -14.877824783325195

Token 73: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00011093381908722222
    2. '(' → logprob: -9.125110626220703
    3. ' (' → logprob: -13.375110626220703
    4. 'n' → logprob: -15.375110626220703
    5. ' n' → logprob: -16.500110626220703
    6. ')n' → logprob: -16.625110626220703
    7. '	n' → logprob: -17.000110626220703
    8. '   ' → logprob: -17.125110626220703
    9. '(
' → logprob: -17.375110626220703
    10. ')' → logprob: -18.125110626220703

Token 74: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0001410850090906024
    2. ')' → logprob: -9.750141143798828
    3. ' )' → logprob: -9.750141143798828
    4. ']' → logprob: -11.125141143798828
    5. ')]
' → logprob: -12.750141143798828
    6. '       ' → logprob: -13.250141143798828
    7. '   ' → logprob: -13.375141143798828
    8. ' ]' → logprob: -13.625141143798828
    9. ')])' → logprob: -14.875141143798828
    10. ')]
' → logprob: -15.000141143798828

Token 75: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13263683021068573
    2. '       ' → logprob: -2.382636785507202
    3. '<|end|>' → logprob: -3.882636785507202
    4. '        
' → logprob: -4.882637023925781
    5. '        ' → logprob: -7.007637023925781
    6. ' 
' → logprob: -7.507637023925781
    7. '    
' → logprob: -8.007637023925781
    8. ' times' → logprob: -8.007637023925781
    9. ' ' → logprob: -8.132637023925781
    10. '
' → logprob: -8.382637023925781

Token 76: ' #' (ID: 1069)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.20272724330425262
    2. ' times' → logprob: -2.4527273178100586
    3. '       ' → logprob: -2.8277273178100586
    4. '
' → logprob: -3.8277273178100586
    5. '   ' → logprob: -4.702727317810059
    6. '<|end|>' → logprob: -5.452727317810059
    7. '    
' → logprob: -7.577727317810059
    8. '        
' → logprob: -7.702727317810059
    9. '(times' → logprob: -7.827727317810059
    10. '#' → logprob: -8.327727317810059

Token 77: ' liste' (ID: 31719)
  Prédit: ' times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' times' → logprob: -0.7348352074623108
    2. ' Trier' → logprob: -0.9848352074623108
    3. ' sorted' → logprob: -2.484835147857666
    4. 'times' → logprob: -3.609835147857666
    5. ' Trie' → logprob: -4.859835147857666
    6. 'sorted' → logprob: -4.984835147857666
    7. ' tr' → logprob: -6.234835147857666
    8. ' R' → logprob: -6.234835147857666
    9. '#' → logprob: -6.359835147857666
    10. ' trie' → logprob: -6.359835147857666

Token 78: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.9382523894309998
    2. '<|end|>' → logprob: -0.9382523894309998
    3. '(' → logprob: -2.5632524490356445
    4. 'des' → logprob: -3.3132524490356445
    5. 'times' → logprob: -3.8132524490356445
    6. '()' → logprob: -3.9382524490356445
    7. '<|end|>' → logprob: -4.4382524490356445
    8. ' times' → logprob: -4.8132524490356445
    9. ' of' → logprob: -5.0632524490356445
    10. ')' → logprob: -5.1882524490356445

Token 79: ' temps' (ID: 11160)
  Prédit: ' temps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temps' → logprob: -0.5700638890266418
    2. 'temps' → logprob: -1.070063829421997
    3. 'dur' → logprob: -2.570063829421997
    4. ' dur' → logprob: -5.320064067840576
    5. 'times' → logprob: -5.945064067840576
    6. 'd' → logprob: -6.070064067840576
    7. ' délais' → logprob: -6.445064067840576
    8. 't' → logprob: -6.570064067840576
    9. ' times' → logprob: -7.570064067840576
    10. 'élé' → logprob: -8.820063591003418

Token 80: ' par' (ID: 686)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.07121413946151733
    2. 'times' → logprob: -3.696214199066162
    3. '<|end|>' → logprob: -3.696214199066162
    4. 'sort' → logprob: -5.571214199066162
    5. ' times' → logprob: -5.696214199066162
    6. ')' → logprob: -5.696214199066162
    7. '       ' → logprob: -6.071214199066162
    8. 's' → logprob: -7.071214199066162
    9. '<|end|>' → logprob: -7.196214199066162
    10. '.' → logprob: -7.196214199066162

Token 81: ' client' (ID: 3054)
  Prédit: ' jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' jour' → logprob: -1.4430915117263794
    2. ' tâche' → logprob: -2.56809139251709
    3. 'participant' → logprob: -2.69309139251709
    4. 'jour' → logprob: -2.81809139251709
    5. ' participants' → logprob: -2.81809139251709
    6. ' participant' → logprob: -2.81809139251709
    7. ' joueur' → logprob: -3.06809139251709
    8. 'participants' → logprob: -3.44309139251709
    9. ' niveau' → logprob: -3.56809139251709
    10. 'jours' → logprob: -4.06809139251709

Token 82: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20802904665470123
    2. ' times' → logprob: -2.33302903175354
    3. 'times' → logprob: -2.58302903175354
    4. '
' → logprob: -5.083029270172119
    5. '<|end|>' → logprob: -5.458029270172119
    6. '   ' → logprob: -6.208029270172119
    7. '        
' → logprob: -6.583029270172119
    8. '<|end|>' → logprob: -8.208028793334961
    9. ')' → logprob: -8.583028793334961
    10. '    
' → logprob: -8.833028793334961

Token 83: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1280081868171692
    2. 'times' → logprob: -2.5030081272125244
    3. ' times' → logprob: -3.6280081272125244
    4. '
' → logprob: -5.6280083656311035
    5. '   ' → logprob: -5.6280083656311035
    6. '        
' → logprob: -5.8780083656311035
    7. '    
' → logprob: -7.1280083656311035
    8. 'total' → logprob: -9.253007888793945
    9. 'sorted' → logprob: -9.253007888793945
    10. '<|end|>' → logprob: -9.253007888793945

Token 84: ' #' (ID: 1069)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.008618593215942383
    2. '       ' → logprob: -5.883618354797363
    3. ' times' → logprob: -6.133618354797363
    4. 'total' → logprob: -6.258618354797363
    5. '   ' → logprob: -7.258618354797363
    6. 'sorted' → logprob: -8.133618354797363
    7. '#' (adapté à ' #') → logprob: -8.883618354797363
    8. '        
' → logprob: -9.258618354797363
    9. 'time' → logprob: -9.258618354797363
    10. 'sum' → logprob: -9.383618354797363

Token 85: ' Object' (ID: 4677)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.15852412581443787
    2. ' times' → logprob: -2.0335240364074707
    3. '#' → logprob: -4.533524036407471
    4. '       ' → logprob: -6.283524036407471
    5. 'sorted' → logprob: -7.533524036407471
    6. 'temps' → logprob: -7.658524036407471
    7. '```' → logprob: -8.283524513244629
    8. 'total' → logprob: -8.283524513244629
    9. ' #' → logprob: -8.658524513244629
    10. 'sort' → logprob: -8.658524513244629

Token 86: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.010491054505109787
    2. '   ' → logprob: -4.760490894317627
    3. ' if' → logprob: -6.885490894317627
    4. '#' → logprob: -7.760490894317627
    5. ':' → logprob: -9.260491371154785
    6. '```' → logprob: -9.885491371154785
    7. 'ive' → logprob: -10.010491371154785
    8. '       ' → logprob: -10.260491371154785
    9. ' =' → logprob: -10.760491371154785
    10. '    ' → logprob: -10.885491371154785

Token 87: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08205372840166092
    2. 'times' → logprob: -3.4570536613464355
    3. '       ' → logprob: -3.8320536613464355
    4. ' times' → logprob: -4.5820536613464355
    5. ' :' → logprob: -5.5820536613464355
    6. '.sort' → logprob: -6.2070536613464355
    7. '=' → logprob: -6.2070536613464355
    8. '#' → logprob: -6.3320536613464355
    9. '   ' → logprob: -6.8320536613464355
    10. '(times' → logprob: -7.0820536613464355

Token 88: ' minim' (ID: 23874)
  Prédit: ' times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' times' → logprob: -0.26069799065589905
    2. 'times' → logprob: -2.260698080062866
    3. '   ' → logprob: -3.385698080062866
    4. ' Trier' → logprob: -3.510698080062866
    5. ' tr' → logprob: -3.760698080062866
    6. '       ' → logprob: -4.510697841644287
    7. 'tr' → logprob: -4.510697841644287
    8. '#' → logprob: -5.010697841644287
    9. ' #' → logprob: -6.260697841644287
    10. ' trie' → logprob: -6.385697841644287

Token 89: 'iser' (ID: 7466)
  Prédit: 'ser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ser' → logprob: -9.305326966568828e-05
    2. 'iser' → logprob: -11.125093460083008
    3. ' ser' → logprob: -11.500093460083008
    4. 's' → logprob: -11.500093460083008
    5. '   ' → logprob: -11.625093460083008
    6. 'se' → logprob: -11.875093460083008
    7. 'user' → logprob: -12.125093460083008
    8. 'm' → logprob: -12.250093460083008
    9. '```' → logprob: -12.375093460083008
    10. '#' → logprob: -12.375093460083008

Token 90: ' la' (ID: 557)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.22079318761825562
    2. 'le' → logprob: -2.0957932472229004
    3. ' la' → logprob: -2.8457932472229004
    4. 'la' → logprob: -4.4707932472229
    5. '   ' → logprob: -6.4707932472229
    6. 'l' → logprob: -6.4707932472229
    7. ' l' → logprob: -6.9707932472229
    8. ' ' → logprob: -7.7207932472229
    9. ' les' → logprob: -8.220792770385742
    10. '       ' → logprob: -8.470792770385742

Token 91: ' somme' (ID: 64484)
  Prédit: ' somme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somme' → logprob: -0.6108702421188354
    2. 's' → logprob: -0.9858702421188354
    3. 'temps' → logprob: -2.735870361328125
    4. ' temps' → logprob: -4.985870361328125
    5. '   ' → logprob: -5.485870361328125
    6. ' ' → logprob: -5.985870361328125
    7. ' attente' → logprob: -6.735870361328125
    8. 'sum' → logprob: -7.110870361328125
    9. '    ' → logprob: -7.610870361328125
    10. '  ' → logprob: -7.735870361328125

Token 92: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.2413300722837448
    2. 'des' → logprob: -1.6163300275802612
    3. '(' → logprob: -4.491330146789551
    4. '_des' → logprob: -7.241330146789551
    5. '   ' → logprob: -7.491330146789551
    6. ' totale' → logprob: -7.991330146789551
    7. 'de' → logprob: -7.991330146789551
    8. ' de' → logprob: -8.11633014678955
    9. '()' → logprob: -8.11633014678955
    10. ' (' → logprob: -8.36633014678955

Token 93: ' temps' (ID: 11160)
  Prédit: ' temps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temps' → logprob: -0.062227264046669006
    2. 'temps' → logprob: -2.937227249145508
    3. ' attentes' → logprob: -5.187227249145508
    4. ' délais' → logprob: -7.437227249145508
    5. ' waiting' → logprob: -7.937227249145508
    6. ' produits' → logprob: -7.937227249145508
    7. ' ' → logprob: -9.437227249145508
    8. ' coûts' → logprob: -10.062227249145508
    9. 't' → logprob: -10.437227249145508
    10. ' times' → logprob: -10.562227249145508

Token 94: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.2700428068637848
    2. 'd' → logprob: -2.520042896270752
    3. '       ' → logprob: -2.770042896270752
    4. 'de' → logprob: -4.145042896270752
    5. ' de' → logprob: -4.270042896270752
    6. ' cumul' → logprob: -4.270042896270752
    7. 'att' → logprob: -4.395042896270752
    8. '   ' → logprob: -4.770042896270752
    9. ' attend' → logprob: -5.520042896270752
    10. 'c' → logprob: -5.520042896270752

Token 95: ''att' (ID: 50189)
  Prédit: 'att'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'att' → logprob: -0.6365920901298523
    2. ''att' → logprob: -0.8865920901298523
    3. ' attente' → logprob: -3.011592149734497
    4. '_att' → logprob: -5.011591911315918
    5. '’att' → logprob: -6.386591911315918
    6. 'éc' → logprob: -8.011591911315918
    7. '-att' → logprob: -8.886591911315918
    8. '```' → logprob: -8.886591911315918
    9. '   ' → logprob: -9.261591911315918
    10. ' attentes' → logprob: -9.511591911315918

Token 96: 'ente' (ID: 1576)
  Prédit: 'ente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ente' → logprob: -0.0008305939263664186
    2. 'ent' → logprob: -7.12583065032959
    3. '#' → logprob: -12.25083065032959
    4. '

' → logprob: -13.00083065032959
    5. '</' → logprob: -13.12583065032959
    6. '
' → logprob: -13.12583065032959
    7. 'end' → logprob: -13.37583065032959
    8. 'entes' → logprob: -13.75083065032959
    9. 'ende' → logprob: -13.75083065032959
    10. '<' → logprob: -14.00083065032959

Token 97: ' cumul' (ID: 163119)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04196740686893463
    2. '.' → logprob: -4.416967391967773
    3. '   ' → logprob: -5.041967391967773
    4. '        
' → logprob: -5.041967391967773
    5. 'times' → logprob: -5.291967391967773
    6. ' times' → logprob: -5.916967391967773
    7. '.sort' → logprob: -6.166967391967773
    8. 's' → logprob: -6.916967391967773
    9. '        

' → logprob: -7.041967391967773
    10. ',' → logprob: -7.291967391967773

Token 98: 'és' (ID: 1756)
  Prédit: 'ul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -0.6065521836280823
    2. 'ulat' → logprob: -1.7315521240234375
    3. 'és' → logprob: -1.7315521240234375
    4. 'érés' → logprob: -3.8565521240234375
    5. 'ative' → logprob: -3.9815521240234375
    6. 'ulative' → logprob: -4.2315521240234375
    7. 'atifs' → logprob: -4.4815521240234375
    8. 'at' → logprob: -4.7315521240234375
    9. 'ulé' → logprob: -4.7315521240234375
    10. 't' → logprob: -5.6065521240234375

Token 99: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02950364351272583
    2. '        
' → logprob: -4.02950382232666
    3. '
' → logprob: -5.27950382232666
    4. '<|end|>' → logprob: -5.65450382232666
    5. '<|end|>' → logprob: -7.27950382232666
    6. '   ' → logprob: -7.65450382232666
    7. '        ' → logprob: -8.52950382232666
    8. '        

' → logprob: -8.52950382232666
    9. '    
' → logprob: -8.65450382232666
    10. ',' → logprob: -8.65450382232666

Token 100: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04045221954584122
    2. '
' → logprob: -3.540452241897583
    3. '        
' → logprob: -5.415452003479004
    4. 'times' → logprob: -5.415452003479004
    5. ' times' → logprob: -7.165452003479004
    6. '   ' → logprob: -7.540452003479004
    7. '    
' → logprob: -8.665452003479004
    8. ' 
' → logprob: -10.290452003479004
    9. '  
' → logprob: -10.415452003479004
    10. ',' → logprob: -11.040452003479004

Token 101: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11597605049610138
    2. '
' → logprob: -2.865976095199585
    3. 'times' → logprob: -3.615976095199585
    4. '        
' → logprob: -3.990976095199585
    5. ' times' → logprob: -5.115975856781006
    6. '    
' → logprob: -7.990975856781006
    7. '   ' → logprob: -8.115976333618164
    8. ' 
' → logprob: -8.990976333618164
    9. '  
' → logprob: -9.240976333618164
    10. '#' (adapté à ' #') → logprob: -9.615976333618164

Token 102: ' Appro' (ID: 24145)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.7536141276359558
    2. ' times' → logprob: -0.8786141276359558
    3. '       ' → logprob: -2.8786141872406006
    4. '#' → logprob: -3.3786141872406006
    5. '
' → logprob: -4.7536139488220215
    6. ' #' → logprob: -4.8786139488220215
    7. '        
' → logprob: -5.8786139488220215
    8. ' 
' → logprob: -6.3786139488220215
    9. '   ' → logprob: -7.0036139488220215
    10. ' sorted' → logprob: -7.7536139488220215

Token 103: 'che' (ID: 926)
  Prédit: 'cher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cher' → logprob: -0.22704274952411652
    2. 'che' → logprob: -1.9770427942276
    3. 'ch' → logprob: -3.2270426750183105
    4. '#' → logprob: -4.7270426750183105
    5. 'acher' → logprob: -4.7270426750183105
    6. 'ach' → logprob: -5.1020426750183105
    7. 'ches' → logprob: -8.477043151855469
    8. 'visionnement' → logprob: -8.977043151855469
    9. 'achment' → logprob: -9.477043151855469
    10. '```' → logprob: -9.727043151855469

Token 104: ' classique' (ID: 76895)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3955036401748657
    2. ' :' → logprob: -1.1455036401748657
    3. ' =' → logprob: -6.395503520965576
    4. '   ' → logprob: -6.645503520965576
    5. ':
' → logprob: -6.645503520965576
    6. ' tri' → logprob: -6.770503520965576
    7. ' :
' → logprob: -6.770503520965576
    8. '=' → logprob: -7.270503520965576
    9. '#' → logprob: -8.520503997802734
    10. '.sort' → logprob: -8.770503997802734

Token 105: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16516511142253876
    2. ' :' → logprob: -2.5401651859283447
    3. 'times' → logprob: -3.0401651859283447
    4. ' times' → logprob: -3.9151651859283447
    5. '       ' → logprob: -5.790164947509766
    6. ':
' → logprob: -7.415164947509766
    7. '   ' → logprob: -7.915164947509766
    8. ' tri' → logprob: -8.165164947509766
    9. ' :
' → logprob: -8.165164947509766
    10. '(times' → logprob: -8.540164947509766

Token 106: ' tr' (ID: 498)
  Prédit: ' times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' times' → logprob: -0.43111592531204224
    2. 'times' → logprob: -1.0561158657073975
    3. 'tr' → logprob: -7.306116104125977
    4. ' tr' → logprob: -7.556116104125977
    5. ' tri' → logprob: -7.806116104125977
    6. 'tri' → logprob: -8.556116104125977
    7. 'sort' → logprob: -9.056116104125977
    8. '   ' → logprob: -9.056116104125977
    9. ' Trier' → logprob: -9.681116104125977
    10. '       ' → logprob: -9.806116104125977

Token 107: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.43763813376426697
    2. 'i' → logprob: -1.0626381635665894
    3. 'ié' → logprob: -5.187638282775879
    4. 'iangle' → logprob: -6.687638282775879
    5. 'ie' → logprob: -7.187638282775879
    6. 'ies' → logprob: -7.687638282775879
    7. 'iable' → logprob: -9.312638282775879
    8. 'iers' → logprob: -9.312638282775879
    9. 'iez' → logprob: -9.937638282775879
    10. 'is' → logprob: -9.937638282775879

Token 108: ' les' (ID: 1341)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.11352086067199707
    2. '(times' → logprob: -2.613520860671997
    3. ' times' → logprob: -3.988520860671997
    4. 'les' → logprob: -4.363520622253418
    5. ' les' → logprob: -6.738520622253418
    6. 'le' → logprob: -8.363520622253418
    7. '()' → logprob: -8.488520622253418
    8. '(' → logprob: -8.738520622253418
    9. 'des' → logprob: -8.863520622253418
    10. ' des' → logprob: -8.863520622253418

Token 109: ' temps' (ID: 11160)
  Prédit: ' times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' times' → logprob: -0.4796552360057831
    2. 'times' → logprob: -0.9796552658081055
    3. 'temps' → logprob: -5.7296552658081055
    4. ' temps' → logprob: -6.3546552658081055
    5. ' ' → logprob: -8.979655265808105
    6. ' tiempos' → logprob: -9.229655265808105
    7. '(times' → logprob: -9.792155265808105
    8. 'time' → logprob: -10.229655265808105
    9. ' clients' → logprob: -10.479655265808105
    10. '_times' → logprob: -10.667155265808105

Token 110: ' de' (ID: 334)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.23529992997646332
    2. ' times' → logprob: -1.6102999448776245
    3. '.sort' → logprob: -6.235300064086914
    4. '_times' → logprob: -6.360300064086914
    5. '   ' → logprob: -6.860300064086914
    6. 's' → logprob: -6.985300064086914
    7. '(times' → logprob: -7.235300064086914
    8. 'imes' → logprob: -7.360300064086914
    9. '       ' → logprob: -7.360300064086914
    10. '.' → logprob: -7.860300064086914

Token 111: ' service' (ID: 2570)
  Prédit: 'att'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'att' → logprob: -0.06790519505739212
    2. ' attente' → logprob: -4.067905426025391
    3. 'la' → logprob: -4.942905426025391
    4. 'service' → logprob: -5.067905426025391
    5. 'tri' → logprob: -5.317905426025391
    6. 'l' → logprob: -5.817905426025391
    7. 'trait' → logprob: -6.067905426025391
    8. ' la' → logprob: -6.442905426025391
    9. 's' → logprob: -6.567905426025391
    10. 'cha' → logprob: -6.692905426025391

Token 112: ' par' (ID: 686)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.14836889505386353
    2. ' times' → logprob: -2.0233688354492188
    3. 's' → logprob: -6.398368835449219
    4. '(times' → logprob: -6.773368835449219
    5. 'imes' → logprob: -7.273368835449219
    6. '   ' → logprob: -7.398368835449219
    7. ' par' → logprob: -8.023368835449219
    8. '_times' → logprob: -8.148368835449219
    9. '       ' → logprob: -9.023368835449219
    10. 'sorted' → logprob: -9.398368835449219

Token 113: ' ordre' (ID: 103061)
  Prédit: 'ordre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ordre' → logprob: -0.036287903785705566
    2. 'temps' → logprob: -3.786287784576416
    3. ' ordre' → logprob: -4.411287784576416
    4. 'cro' → logprob: -8.286288261413574
    5. 't' → logprob: -9.411288261413574
    6. ' temps' → logprob: -9.536288261413574
    7. '```' → logprob: -9.661288261413574
    8. ''ordre' → logprob: -9.786288261413574
    9. 'l' → logprob: -9.911288261413574
    10. '_' → logprob: -10.411288261413574

Token 114: ' cro' (ID: 11270)
  Prédit: 'cro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cro' → logprob: -0.40036576986312866
    2. ' cro' → logprob: -1.1503658294677734
    3. 'asc' → logprob: -4.900365829467773
    4. ' asc' → logprob: -5.900365829467773
    5. ' ascending' → logprob: -7.025365829467773
    6. '=' → logprob: -7.650365829467773
    7. 's' → logprob: -7.650365829467773
    8. ' crescente' → logprob: -8.025365829467773
    9. 'ascending' → logprob: -8.650365829467773
    10. ' increasing' → logprob: -8.650365829467773

Token 115: 'issant' (ID: 31359)
  Prédit: 'issant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issant' → logprob: -0.0009389739134348929
    2. 'issent' → logprob: -7.750938892364502
    3. 'ss' → logprob: -8.75093936920166
    4. 'issante' → logprob: -8.87593936920166
    5. 'issa' → logprob: -9.62593936920166
    6. '#' → logprob: -10.37593936920166
    7. 'issance' → logprob: -10.50093936920166
    8. 'is' → logprob: -11.37593936920166
    9. '```' → logprob: -11.75093936920166
    10. 'i' → logprob: -11.87593936920166

Token 116: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01740889810025692
    2. 'times' → logprob: -4.767408847808838
    3. '        
' → logprob: -6.142408847808838
    4. '
' → logprob: -6.517408847808838
    5. ' times' → logprob: -6.517408847808838
    6. '   ' → logprob: -6.642408847808838
    7. ',' → logprob: -7.392408847808838
    8. '.' → logprob: -8.142409324645996
    9. ')' → logprob: -8.267409324645996
    10. '    
' → logprob: -9.017409324645996

Token 117: 'S' (ID: 50)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1597442477941513
    2. ' )' → logprob: -2.1597442626953125
    3. ')
' → logprob: -4.2847442626953125
    4. ' )
' → logprob: -4.7847442626953125
    5. ' afin' → logprob: -5.4097442626953125
    6. 'times' → logprob: -6.0347442626953125
    7. ' pour' → logprob: -6.6597442626953125
    8. ' times' → logprob: -7.4097442626953125
    9. 't' → logprob: -8.409744262695312
    10. 'temps' → logprob: -8.659744262695312

Token 118: 'JF' (ID: 105640)
  Prédit: 'orted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orted' → logprob: -1.2399282455444336
    2. 'JF' → logprob: -1.3649282455444336
    3. 'hort' → logprob: -1.9899282455444336
    4. '=' → logprob: -3.1149282455444336
    5. ')' → logprob: -3.3649282455444336
    6. 'T' → logprob: -3.4899282455444336
    7. 'ort' → logprob: -3.8649282455444336
    8. 'PT' → logprob: -4.239928245544434
    9. 'S' → logprob: -4.239928245544434
    10. '```' → logprob: -4.364928245544434

Token 119: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021142163313925266
    2. ')
' → logprob: -6.627114295959473
    3. ' )' → logprob: -7.377114295959473
    4. ').' → logprob: -9.377114295959473
    5. '))' → logprob: -11.127114295959473
    6. ']' → logprob: -11.752114295959473
    7. ' )
' → logprob: -11.877114295959473
    8. ')`' → logprob: -12.252114295959473
    9. ')
' → logprob: -12.377114295959473
    10. ')

' → logprob: -12.502114295959473

Token 120: ' Short' (ID: 15362)
  Prédit: 'Shortest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Shortest' → logprob: -0.3749765157699585
    2. ' Short' → logprob: -1.2499765157699585
    3. 'Short' → logprob: -4.374976634979248
    4. ' shortest' → logprob: -4.499976634979248
    5. 'short' → logprob: -6.249976634979248
    6. ')' → logprob: -9.24997615814209
    7. 'S' → logprob: -9.24997615814209
    8. ' short' → logprob: -9.49997615814209
    9. '"' → logprob: -9.87497615814209
    10. ' S' → logprob: -10.37497615814209

Token 121: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.0004666577442549169
    2. 'esting' → logprob: -9.500466346740723
    3. 'Job' → logprob: -9.875466346740723
    4. ' est' → logprob: -10.125466346740723
    5. 'job' → logprob: -10.250466346740723
    6. 'e' → logprob: -10.375466346740723
    7. ' ' → logprob: -10.500466346740723
    8. ' job' → logprob: -10.625466346740723
    9. '-' → logprob: -10.625466346740723
    10. 't' → logprob: -10.750466346740723

Token 122: ' Job' (ID: 15736)
  Prédit: ' Job'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Job' → logprob: -0.6021117568016052
    2. 'Job' → logprob: -0.8521117568016052
    3. ' job' → logprob: -4.22711181640625
    4. '-' → logprob: -5.10211181640625
    5. 'Processing' → logprob: -6.72711181640625
    6. '_job' → logprob: -6.85211181640625
    7. 'job' → logprob: -7.35211181640625
    8. ' ' → logprob: -7.85211181640625
    9. '  ' → logprob: -7.97711181640625
    10. ' Processing' → logprob: -8.47711181640625

Token 123: ' First' (ID: 8338)
  Prédit: 'First'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'First' → logprob: -0.06581443548202515
    2. 'first' → logprob: -3.44081449508667
    3. ')' → logprob: -4.19081449508667
    4. ' first' → logprob: -4.69081449508667
    5. ' First' → logprob: -5.19081449508667
    6. '_first' → logprob: -6.94081449508667
    7. '-first' → logprob: -7.56581449508667
    8. '_First' → logprob: -9.940814018249512
    9. 'Prem' → logprob: -10.565814018249512
    10. 't' → logprob: -10.940814018249512

Token 124: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009962485637515783
    2. ')
' → logprob: -7.375996112823486
    3. ' )' → logprob: -8.125996589660645
    4. ').' → logprob: -10.750996589660645
    5. '')' → logprob: -11.375996589660645
    6. '")' → logprob: -11.875996589660645
    7. ')

' → logprob: -12.000996589660645
    8. '`)' → logprob: -12.250996589660645
    9. ']' → logprob: -12.625996589660645
    10. ' pour' → logprob: -12.875996589660645

Token 125: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7719370722770691
    2. 'times' → logprob: -1.2719371318817139
    3. '       ' → logprob: -1.6469371318817139
    4. '        
' → logprob: -3.396937131881714
    5. ' times' → logprob: -3.896937131881714
    6. '   ' → logprob: -5.521936893463135
    7. '    
' → logprob: -5.896936893463135
    8. '<|end|>' → logprob: -7.271936893463135
    9. '  
' → logprob: -7.646936893463135
    10. 's' → logprob: -7.771936893463135

Token 126: ' times' (ID: 4238)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' (adapté à ' times') → logprob: -0.018586967140436172
    2. '
' → logprob: -4.643587112426758
    3. '       ' → logprob: -5.518587112426758
    4. ' times' → logprob: -5.643587112426758
    5. 's' → logprob: -7.893587112426758
    6. '        
' → logprob: -8.143587112426758
    7. '   ' → logprob: -9.018587112426758
    8. ')' → logprob: -9.518587112426758
    9. '    
' → logprob: -10.143587112426758
    10. 't' → logprob: -10.143587112426758

Token 127: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0619802325963974
    2. '.' → logprob: -2.8119802474975586
    3. ' .' → logprob: -12.311980247497559
    4. '.s' → logprob: -12.811980247497559
    5. '=' → logprob: -13.061980247497559
    6. '.sorted' → logprob: -13.311980247497559
    7. '_sorted' → logprob: -14.936980247497559
    8. ').' → logprob: -15.061980247497559
    9. ' =' → logprob: -15.436980247497559
    10. '.Sort' → logprob: -15.561980247497559

Token 128: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0002028251619776711
    2. '(' → logprob: -9.000203132629395
    3. '()
' → logprob: -9.500203132629395
    4. '()

' → logprob: -13.250203132629395
    5. '(
' → logprob: -13.875203132629395
    6. '       ' → logprob: -14.625203132629395
    7. '()`' → logprob: -14.750203132629395
    8. ')' → logprob: -15.375203132629395
    9. '())' → logprob: -16.000202178955078
    10. '();' → logprob: -16.000202178955078

Token 129: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17575062811374664
    2. '        
' → logprob: -2.425750732421875
    3. 'total' → logprob: -3.175750732421875
    4. '
' → logprob: -4.675750732421875
    5. '    
' → logprob: -5.300750732421875
    6. ' cumulative' → logprob: -5.425750732421875
    7. ' total' → logprob: -5.550750732421875
    8. ' 
' → logprob: -6.050750732421875
    9. '  
' → logprob: -6.300750732421875
    10. '   ' → logprob: -7.050750732421875

Token 130: ' total' (ID: 3609)
  Prédit: 'waiting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'waiting' → logprob: -0.42835521697998047
    2. 'c' → logprob: -2.0533552169799805
    3. 'wait' → logprob: -2.0533552169799805
    4. 'total' (adapté à ' total') → logprob: -2.5533552169799805
    5. 'acc' → logprob: -5.3033552169799805
    6. 'cum' → logprob: -5.6783552169799805
    7. ' waiting' → logprob: -6.1783552169799805
    8. '       ' → logprob: -6.4283552169799805
    9. 'sum' → logprob: -7.5533552169799805
    10. 'result' → logprob: -8.42835521697998

Token 131: '_wait' (ID: 44250)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.3291795551776886
    2. '_wait' → logprob: -1.3291795253753662
    3. '_' → logprob: -4.329179763793945
    4. '_t' → logprob: -6.204179763793945
    5. '_times' → logprob: -8.329179763793945
    6. '_sum' → logprob: -8.954179763793945
    7. ' =' → logprob: -9.204179763793945
    8. '=' → logprob: -10.579179763793945
    9. '_w' → logprob: -10.829179763793945
    10. '_att' → logprob: -10.954179763793945

Token 132: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.047391485422849655
    2. '_time' → logprob: -3.672391414642334
    3. '=' → logprob: -3.922391414642334
    4. ' =' → logprob: -7.172391414642334
    5. 'time' → logprob: -8.172391891479492
    6. 'ime' → logprob: -11.797391891479492
    7. '```' → logprob: -12.672391891479492
    8. '=sum' → logprob: -12.672391891479492
    9. 'ingt' → logprob: -12.922391891479492
    10. '=time' → logprob: -12.922391891479492

Token 133: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.0017146894242614508
    2. '=' → logprob: -6.876714706420898
    3. ' =' → logprob: -7.501714706420898
    4. 'time' → logprob: -9.501714706420898
    5. '_' → logprob: -9.876714706420898
    6. 'Time' → logprob: -14.126714706420898
    7. 'ime' → logprob: -14.126714706420898
    8. ' time' → logprob: -14.251714706420898
    9. '_times' → logprob: -15.001714706420898
    10. '_TIME' → logprob: -15.376714706420898

Token 134: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014163863845169544
    2. '=' → logprob: -4.264163970947266
    3. ' ' → logprob: -15.639163970947266
    4. ',' → logprob: -16.389163970947266
    5. ' +=' → logprob: -17.264163970947266
    6. 's' → logprob: -17.889163970947266
    7. ' ' → logprob: -18.389163970947266
    8. '  ' → logprob: -18.764163970947266
    9. '   ' → logprob: -18.889163970947266
    10. ' ,' → logprob: -19.264163970947266

Token 135: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026441611349582672
    2. ' ' → logprob: -3.6514415740966797
    3. 'sum' → logprob: -9.02644157409668
    4. ' sum' → logprob: -11.27644157409668
    5. 'times' → logprob: -12.77644157409668
    6. '   ' → logprob: -13.15144157409668
    7. ' times' → logprob: -13.96394157409668
    8. 's' → logprob: -14.40144157409668
    9. '  ' → logprob: -14.46394157409668
    10. ' ' → logprob: -15.08894157409668

Token 136: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00043376852408982813
    2. 'sum' → logprob: -8.000433921813965
    3. ' ' → logprob: -9.250433921813965
    4. ' sum' → logprob: -14.250433921813965
    5. '   ' → logprob: -14.500433921813965
    6. 's' → logprob: -14.750433921813965
    7. 'times' → logprob: -16.43793296813965
    8. '```' → logprob: -16.56293296813965
    9. 'total' → logprob: -16.75043296813965
    10. 'acc' → logprob: -17.25043296813965

Token 137: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47435784339904785
    2. ' cumulative' → logprob: -1.7243578433990479
    3. 'waiting' → logprob: -2.599357843399048
    4. 'current' → logprob: -2.974357843399048
    5. ' current' → logprob: -3.349357843399048
    6. ' waiting' → logprob: -3.724357843399048
    7. ' accumulated' → logprob: -5.849357604980469
    8. '        
' → logprob: -5.974357604980469
    9. ' cum' → logprob: -6.724357604980469
    10. 'acc' → logprob: -7.224357604980469

Token 138: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4043448865413666
    2. ' current' → logprob: -2.2793447971343994
    3. ' cumulative' → logprob: -2.2793447971343994
    4. 'waiting' → logprob: -3.1543447971343994
    5. ' waiting' → logprob: -3.2793447971343994
    6. 'current' → logprob: -3.2793447971343994
    7. ' accumulated' → logprob: -5.9043450355529785
    8. ' previous' → logprob: -6.6543450355529785
    9. '        
' → logprob: -6.6543450355529785
    10. ' cum' → logprob: -7.1543450355529785

Token 139: ' current' (ID: 2208)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.724162220954895
    2. 'current' (adapté à ' current') → logprob: -0.974162220954895
    3. 'acc' → logprob: -2.7241621017456055
    4. 'waiting' → logprob: -3.2241621017456055
    5. 'elapsed' → logprob: -3.4741621017456055
    6. 'cum' → logprob: -6.8491621017456055
    7. 'curr' → logprob: -9.599162101745605
    8. ' cumulative' → logprob: -9.849162101745605
    9. ' elapsed' → logprob: -9.974162101745605
    10. 'previous' → logprob: -10.224162101745605

Token 140: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.008882349357008934
    2. '_wait' → logprob: -5.383882522583008
    3. '_' → logprob: -5.508882522583008
    4. '_sum' → logprob: -8.633882522583008
    5. '_total' → logprob: -11.758882522583008
    6. ' _' → logprob: -12.258882522583008
    7. '_acc' → logprob: -13.008882522583008
    8. '=' → logprob: -13.258882522583008
    9. ' =' → logprob: -13.383882522583008
    10. '_t' → logprob: -14.008882522583008

Token 141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018153805285692215
    2. '=' → logprob: -4.018153667449951
    3. '<|end|>' → logprob: -12.64315414428711
    4. ' ' → logprob: -15.26815414428711
    5. ' +=' → logprob: -15.39315414428711
    6. '  ' → logprob: -15.89315414428711
    7. '<|end|>' → logprob: -16.89315414428711
    8. 's' → logprob: -17.01815414428711
    9. '   ' → logprob: -17.89315414428711
    10. ' ' → logprob: -18.01815414428711

Token 142: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02975071594119072
    2. ' ' → logprob: -3.5297508239746094
    3. '<|end|>' → logprob: -16.15475082397461
    4. ' ' → logprob: -16.52975082397461
    5. '  ' → logprob: -17.27975082397461
    6. '   ' → logprob: -17.40475082397461
    7. '۰' → logprob: -19.40475082397461
    8. '1' → logprob: -20.27975082397461
    9. 'times' → logprob: -20.27975082397461
    10. 's' → logprob: -20.52975082397461

Token 143: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -19.250009536743164
    4. '-' → logprob: -19.750009536743164
    5. '۰' → logprob: -20.250009536743164
    6. '  ' → logprob: -20.750009536743164
    7. '<|end|>' → logprob: -20.750009536743164
    8. ' ' → logprob: -21.437509536743164
    9. '```' → logprob: -21.687509536743164
    10. 's' → logprob: -21.812509536743164

Token 144: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7680870294570923
    2. 'for' → logprob: -1.3930870294570923
    3. '
' → logprob: -1.5180870294570923
    4. '   ' → logprob: -3.7680869102478027
    5. ' 
' → logprob: -4.143086910247803
    6. '       ' → logprob: -4.768086910247803
    7. '    
' → logprob: -5.018086910247803
    8. '<|end|>' → logprob: -5.268086910247803
    9. '  
' → logprob: -5.268086910247803
    10. '\n' → logprob: -6.893086910247803

Token 145: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.3740938901901245
    2. '
' → logprob: -1.4990938901901245
    3. '       ' → logprob: -1.6240938901901245
    4. '   ' → logprob: -2.374094009399414
    5. 'for' → logprob: -2.874094009399414
    6. '<|end|>' → logprob: -2.999094009399414
    7. '  
' → logprob: -3.124094009399414
    8. ' 
' → logprob: -3.249094009399414
    9. '    
' → logprob: -3.499094009399414
    10. '        
' → logprob: -5.249094009399414

Token 146: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2044510394334793
    2. ' for' → logprob: -1.704451084136963
    3. '       ' → logprob: -6.704451084136963
    4. '
' → logprob: -6.954451084136963
    5. ' 
' → logprob: -7.954451084136963
    6. '   ' → logprob: -8.329450607299805
    7. '	for' → logprob: -9.204450607299805
    8. '<|end|>' → logprob: -9.954450607299805
    9. '    
' → logprob: -10.204450607299805
    10. '  
' → logprob: -10.704450607299805

Token 147: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5316817164421082
    2. ' t' → logprob: -1.031681776046753
    3. 'time' → logprob: -3.406681776046753
    4. ' time' → logprob: -3.781681776046753
    5. ' service' → logprob: -11.031682014465332
    6. 'service' → logprob: -11.656682014465332
    7. ' client' → logprob: -12.781682014465332
    8. 'ti' → logprob: -13.031682014465332
    9. '	t' → logprob: -13.281682014465332
    10. 'client' → logprob: -13.406682014465332

Token 148: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04307261481881142
    2. 'in' → logprob: -3.1680727005004883
    3. ' ' → logprob: -10.293072700500488
    4. 'i' → logprob: -11.168072700500488
    5. 'n' → logprob: -11.668072700500488
    6. ' i' → logprob: -12.793072700500488
    7. 'ine' → logprob: -13.293072700500488
    8. '_in' → logprob: -13.418072700500488
    9. 'ime' → logprob: -13.543072700500488
    10. '  ' → logprob: -13.543072700500488

Token 149: ' times' (ID: 4238)
  Prédit: ' times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' times' → logprob: -0.029751529917120934
    2. 'times' → logprob: -3.5297515392303467
    3. 'imes' → logprob: -14.029751777648926
    4. '_times' → logprob: -15.904751777648926
    5. ' ' → logprob: -16.52975082397461
    6. '(times' → logprob: -17.27975082397461
    7. '.times' → logprob: -18.27975082397461
    8. 'Times' → logprob: -18.52975082397461
    9. 'time' → logprob: -19.65475082397461
    10. 't' → logprob: -19.77975082397461

Token 150: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020680272951722145
    2. ':
' → logprob: -3.8956801891326904
    3. '   ' → logprob: -9.27068042755127
    4. '+' → logprob: -11.14568042755127
    5. '):
' → logprob: -12.02068042755127
    6. '=' → logprob: -12.14568042755127
    7. ' :' → logprob: -12.64568042755127
    8. '):' → logprob: -12.64568042755127
    9. ',' → logprob: -13.02068042755127
    10. '<|end|>' → logprob: -13.02068042755127

Token 151: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5376691818237305
    2. '       ' → logprob: -1.2876691818237305
    3. '   ' → logprob: -2.5376691818237305
    4. '<|end|>' → logprob: -4.0376691818237305
    5. ' current' → logprob: -4.4126691818237305
    6. '    
' → logprob: -4.6626691818237305
    7. '
' → logprob: -5.5376691818237305
    8. 'current' → logprob: -5.5376691818237305
    9. ' 
' → logprob: -6.2876691818237305
    10. ':' → logprob: -6.5376691818237305

Token 152: ' #' (ID: 1069)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.12977120280265808
    2. ' current' → logprob: -2.1297712326049805
    3. '           ' → logprob: -6.1297712326049805
    4. '   ' → logprob: -7.5047712326049805
    5. 'total' → logprob: -10.50477123260498
    6. '               ' → logprob: -10.62977123260498
    7. '       ' → logprob: -10.62977123260498
    8. '	current' → logprob: -10.75477123260498
    9. '
' → logprob: -12.50477123260498
    10. '+' → logprob: -12.87977123260498

Token 153: ' Pour' (ID: 13931)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.20187218487262726
    2. ' current' → logprob: -1.7018722295761108
    3. 'total' → logprob: -7.8268723487854
    4. ' total' → logprob: -10.326871871948242
    5. '           ' → logprob: -11.201871871948242
    6. '   ' → logprob: -11.326871871948242
    7. '	current' → logprob: -14.076871871948242
    8. '       ' → logprob: -16.326871871948242
    9. ' ' → logprob: -16.326871871948242
    10. '            
' → logprob: -16.701871871948242

Token 154: ' chaque' (ID: 21194)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.1672569066286087
    2. 't' → logprob: -2.2922568321228027
    3. ' current' → logprob: -3.7922568321228027
    4. ' each' → logprob: -4.042256832122803
    5. ' chaque' → logprob: -5.667256832122803
    6. ' _' → logprob: -5.917256832122803
    7. '_' → logprob: -6.542256832122803
    8. 'current' → logprob: -6.542256832122803
    9. 'each' → logprob: -6.792256832122803
    10. '_each' → logprob: -7.542256832122803

Token 155: ' client' (ID: 3054)
  Prédit: ' client'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' client' → logprob: -0.8658600449562073
    2. ' t' → logprob: -1.2408599853515625
    3. ' tâche' → logprob: -2.1158599853515625
    4. 'client' → logprob: -2.6158599853515625
    5. 't' → logprob: -3.6158599853515625
    6. ' temps' → logprob: -3.8658599853515625
    7. ' service' → logprob: -4.2408599853515625
    8. 'temps' → logprob: -4.4908599853515625
    9. ' job' → logprob: -5.2408599853515625
    10. ' travail' → logprob: -5.4908599853515625

Token 156: ',' (ID: 11)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.6372090578079224
    2. ' current' → logprob: -1.1372090578079224
    3. '           ' → logprob: -2.262208938598633
    4. '   ' → logprob: -3.262208938598633
    5. '               ' → logprob: -5.637208938598633
    6. 'total' → logprob: -6.512208938598633
    7. '       ' → logprob: -7.262208938598633
    8. '
' → logprob: -7.762208938598633
    9. '	current' → logprob: -7.762208938598633
    10. ' total' → logprob: -8.387208938598633

Token 157: ' son' (ID: 2391)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.4746829867362976
    2. ' current' → logprob: -0.9746829867362976
    3. 'total' → logprob: -7.599682807922363
    4. ' total' → logprob: -9.849682807922363
    5. '           ' → logprob: -9.974682807922363
    6. '	current' → logprob: -12.849682807922363
    7. '   ' → logprob: -13.349682807922363
    8. '               ' → logprob: -14.349682807922363
    9. '            ' → logprob: -14.849682807922363
    10. 'urrent' → logprob: -15.349682807922363

Token 158: ' temps' (ID: 11160)
  Prédit: ' temps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temps' → logprob: -0.5522655844688416
    2. 'temps' → logprob: -0.9272655844688416
    3. ' waiting' → logprob: -4.802265644073486
    4. 'waiting' → logprob: -5.177265644073486
    5. ' délai' → logprob: -5.927265644073486
    6. ' time' → logprob: -5.927265644073486
    7. ' current' → logprob: -6.177265644073486
    8. 'time' → logprob: -6.302265644073486
    9. 'current' → logprob: -6.552265644073486
    10. ' attente' → logprob: -6.552265644073486

Token 159: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.11470340192317963
    2. ' d' → logprob: -2.489703416824341
    3. '_d' → logprob: -3.864703416824341
    4. ' +=' → logprob: -7.114703178405762
    5. '_' → logprob: -7.364703178405762
    6. 'att' → logprob: -7.614703178405762
    7. '_wait' → logprob: -7.864703178405762
    8. '_att' → logprob: -8.239703178405762
    9. 'de' → logprob: -8.364703178405762
    10. '+' → logprob: -8.489703178405762

Token 160: ''att' (ID: 50189)
  Prédit: 'att'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'att' → logprob: -0.18039587140083313
    2. ''att' → logprob: -1.9303958415985107
    3. 'éc' → logprob: -5.05539608001709
    4. ' attente' → logprob: -5.05539608001709
    5. 'é' → logprob: -5.93039608001709
    6. 'ex' → logprob: -6.80539608001709
    7. ''arrivée' → logprob: -6.93039608001709
    8. 'él' → logprob: -8.05539608001709
    9. '_att' → logprob: -8.05539608001709
    10. 'service' → logprob: -8.30539608001709

Token 161: 'ente' (ID: 1576)
  Prédit: 'ente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ente' → logprob: -0.0010761572048068047
    2. 'ent' → logprob: -6.8760762214660645
    3. 'nte' → logprob: -10.876075744628906
    4. 't' → logprob: -12.251075744628906
    5. 'te' → logprob: -12.376075744628906
    6. 'e' → logprob: -12.626075744628906
    7. 'et' → logprob: -12.876075744628906
    8. 'ete' → logprob: -13.376075744628906
    9. 'ende' → logprob: -13.751075744628906
    10. 'enta' → logprob: -13.876075744628906

Token 162: ' est' (ID: 893)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2626318633556366
    2. '+=' → logprob: -2.012631893157959
    3. ' =' → logprob: -3.012631893157959
    4. '=' → logprob: -3.137631893157959
    5. '            ' → logprob: -6.262631893157959
    6. '           ' → logprob: -6.512631893157959
    7. 'current' → logprob: -7.637631893157959
    8. ' ' → logprob: -8.2626314163208
    9. '+' → logprob: -8.5126314163208
    10. ' current' → logprob: -9.5126314163208

Token 163: ' le' (ID: 505)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.12693189084529877
    2. ' current' → logprob: -2.12693190574646
    3. '(current' → logprob: -14.001932144165039
    4. '	current' → logprob: -14.376932144165039
    5. '[current' → logprob: -14.501932144165039
    6. '=current' → logprob: -14.751932144165039
    7. 'urrent' → logprob: -14.751932144165039
    8. '$current' → logprob: -14.876932144165039
    9. '+' → logprob: -15.251932144165039
    10. '_current' → logprob: -15.501932144165039

Token 164: ' temps' (ID: 11160)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.02975083328783512
    2. ' current' → logprob: -3.5297508239746094
    3. ' ' → logprob: -16.02975082397461
    4. '	current' → logprob: -16.65475082397461
    5. 'urrent' → logprob: -16.77975082397461
    6. ' courant' → logprob: -17.02975082397461
    7. '   ' → logprob: -17.77975082397461
    8. '```' → logprob: -18.02975082397461
    9. ' actuel' → logprob: -18.27975082397461
    10. 'curr' → logprob: -18.40475082397461

Token 165: ' cum' (ID: 10023)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.45443278551101685
    2. ' actuel' → logprob: -1.579432725906372
    3. ' courant' → logprob: -2.704432725906372
    4. ' current' → logprob: -3.079432725906372
    5. 'avant' → logprob: -4.204432964324951
    6. 'act' → logprob: -4.954432964324951
    7. '           ' → logprob: -5.329432964324951
    8. ' avant' → logprob: -5.704432964324951
    9. '_current' → logprob: -6.079432964324951
    10. 'd' → logprob: -6.329432964324951

Token 166: 'ulé' (ID: 147268)
  Prédit: 'ulé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulé' → logprob: -0.00023810577113181353
    2. 'ul' → logprob: -9.375238418579102
    3. 'ulated' → logprob: -10.000238418579102
    4. 'ule' → logprob: -10.375238418579102
    5. '   ' → logprob: -11.125238418579102
    6. 'u' → logprob: -11.125238418579102
    7. '+' → logprob: -11.250238418579102
    8. 'mul' → logprob: -11.875238418579102
    9. 'current' → logprob: -12.125238418579102
    10. 'ulent' → logprob: -12.625238418579102

Token 167: ' avant' (ID: 13339)
  Prédit: ' actuel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' actuel' → logprob: -0.8903148174285889
    2. ' current' → logprob: -1.6403148174285889
    3. 'current' → logprob: -1.6403148174285889
    4. ' avant' → logprob: -2.390314817428589
    5. ' courant' → logprob: -3.140314817428589
    6. 'avant' → logprob: -4.015315055847168
    7. '           ' → logprob: -4.515315055847168
    8. '+' → logprob: -4.515315055847168
    9. '            ' → logprob: -5.515315055847168
    10. ' ' → logprob: -5.640315055847168

Token 168: ' son' (ID: 2391)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7473726272583008
    2. 'le' → logprob: -1.4973726272583008
    3. 'd' → logprob: -1.9973726272583008
    4. 'l' → logprob: -2.872372627258301
    5. 'son' → logprob: -3.372372627258301
    6. ' son' → logprob: -3.872372627258301
    7. 'de' → logprob: -4.497372627258301
    8. ' d' → logprob: -4.497372627258301
    9. 'serv' → logprob: -5.872372627258301
    10. ' qu' → logprob: -5.872372627258301

Token 169: ' service' (ID: 2570)
  Prédit: 'service'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'service' → logprob: -0.9714933037757874
    2. 'trait' → logprob: -1.0964932441711426
    3. 'ex' → logprob: -2.3464932441711426
    4. 't' → logprob: -2.4714932441711426
    5. ' service' → logprob: -3.7214932441711426
    6. ' traitement' → logprob: -3.7214932441711426
    7. 's' → logprob: -4.596493244171143
    8. '+' → logprob: -4.971493244171143
    9. 'execution' → logprob: -5.471493244171143
    10. 'dé' → logprob: -5.596493244171143

Token 170: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5434649586677551
    2. '           ' → logprob: -1.4184648990631104
    3. ' +' → logprob: -1.9184648990631104
    4. ' +=' → logprob: -4.7934651374816895
    5. '   ' → logprob: -5.5434651374816895
    6. '            
' → logprob: -5.7934651374816895
    7. ' ' → logprob: -5.9184651374816895
    8. 'current' → logprob: -5.9184651374816895
    9. ' 
' → logprob: -5.9184651374816895
    10. '+=' → logprob: -6.0434651374816895

Token 171: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5066139101982117
    2. '   ' → logprob: -2.0066139698028564
    3. ' 
' → logprob: -2.8816139698028564
    4. ' ' → logprob: -2.8816139698028564
    5. '       ' → logprob: -3.0066139698028564
    6. '+' → logprob: -3.5066139698028564
    7. '    
' → logprob: -4.006613731384277
    8. 'current' → logprob: -4.131613731384277
    9. '            
' → logprob: -4.881613731384277
    10. ' current' → logprob: -4.881613731384277

Token 172: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.2623191177845001
    2. ' total' → logprob: -1.5123190879821777
    3. '       ' → logprob: -5.762319087982178
    4. '           ' → logprob: -6.012319087982178
    5. 'current' → logprob: -6.012319087982178
    6. ' current' → logprob: -6.887319087982178
    7. '   ' → logprob: -7.637319087982178
    8. ' ' → logprob: -8.137319564819336
    9. '(total' → logprob: -8.887319564819336
    10. ' 
' → logprob: -9.887319564819336

Token 173: '_wait' (ID: 44250)
  Prédit: '_wait'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_wait' → logprob: -4.4656579120783135e-05
    2. '_' → logprob: -10.250044822692871
    3. '_time' → logprob: -12.250044822692871
    4. '_WAIT' → logprob: -13.500044822692871
    5. '_w' → logprob: -14.875044822692871
    6. ' _' → logprob: -15.000044822692871
    7. 'waiting' → logprob: -15.000044822692871
    8. '_current' → logprob: -15.125044822692871
    9. 'Waiting' → logprob: -15.500044822692871
    10. '_follow' → logprob: -15.625044822692871

Token 174: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -4.3822154111694545e-05
    2. 'iting' → logprob: -11.375043869018555
    3. 'ining' → logprob: -11.625043869018555
    4. 'ait' → logprob: -12.500043869018555
    5. 'ng' → logprob: -12.750043869018555
    6. '_' → logprob: -12.875043869018555
    7. 'in' → logprob: -13.250043869018555
    8. 'ating' → logprob: -13.375043869018555
    9. 'ting' → logprob: -13.500043869018555
    10. '_wait' → logprob: -13.750043869018555

Token 175: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -3.368984107510187e-05
    2. '_' → logprob: -10.500033378601074
    3. ' _' → logprob: -13.250033378601074
    4. '_t' → logprob: -13.375033378601074
    5. '_times' → logprob: -13.375033378601074
    6. 'time' → logprob: -15.125033378601074
    7. '_wait' → logprob: -15.750033378601074
    8. 't' → logprob: -16.12503433227539
    9. 's' → logprob: -16.25003433227539
    10. '+' → logprob: -16.50003433227539

Token 176: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.08902104198932648
    2. '+=' → logprob: -2.4640209674835205
    3. '+' → logprob: -9.589020729064941
    4. '   ' → logprob: -11.964020729064941
    5. ']+=' → logprob: -13.589020729064941
    6. ' +' → logprob: -13.839020729064941
    7. '	' → logprob: -13.964020729064941
    8. '+=(' → logprob: -14.214020729064941
    9. ' ' → logprob: -14.339020729064941
    10. '=' → logprob: -14.589020729064941

Token 177: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.6931471824645996
    2. 'current' → logprob: -0.6931471824645996
    3. '(current' → logprob: -17.693147659301758
    4. ' ' → logprob: -18.318147659301758
    5. 'urrent' → logprob: -18.443147659301758
    6. '   ' → logprob: -19.068147659301758
    7. '	current' → logprob: -19.193147659301758
    8. '_current' → logprob: -19.318147659301758
    9. '[current' → logprob: -19.818147659301758
    10. '$current' → logprob: -19.943147659301758

Token 178: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -5.676981345459353e-06
    2. '_token' → logprob: -12.375005722045898
    3. '_' → logprob: -14.125005722045898
    4. 'time' → logprob: -15.375005722045898
    5. '_times' → logprob: -15.500005722045898
    6. ' _' → logprob: -16.1250057220459
    7. '_space' → logprob: -16.3750057220459
    8. '_t' → logprob: -16.6250057220459
    9. '._' → logprob: -18.2500057220459
    10. '_code' → logprob: -19.0000057220459

Token 179: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2371816486120224
    2. '+' → logprob: -2.6121816635131836
    3. '           ' → logprob: -2.6121816635131836
    4. ' 
' → logprob: -3.4871816635131836
    5. '    
' → logprob: -5.112181663513184
    6. '       ' → logprob: -5.112181663513184
    7. ' +' → logprob: -5.237181663513184
    8. '            
' → logprob: -5.612181663513184
    9. '  
' → logprob: -5.862181663513184
    10. '   
' → logprob: -6.487181663513184

Token 180: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04188212379813194
    2. 'current' → logprob: -3.541882038116455
    3. ' current' → logprob: -5.041882038116455
    4. '            
' → logprob: -6.416882038116455
    5. '    
' → logprob: -6.791882038116455
    6. '   ' → logprob: -6.916882038116455
    7. '       ' → logprob: -6.916882038116455
    8. ' 
' → logprob: -8.291882514953613
    9. '        
' → logprob: -8.666882514953613
    10. '
' → logprob: -8.791882514953613

Token 181: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.014378449879586697
    2. ' current' → logprob: -4.264378547668457
    3. '   ' → logprob: -9.014378547668457
    4. '           ' → logprob: -9.389378547668457
    5. '	current' → logprob: -11.889378547668457
    6. '       ' → logprob: -13.139378547668457
    7. ' ' → logprob: -15.264378547668457
    8. ',current' → logprob: -15.639378547668457
    9. '_current' → logprob: -16.88937759399414
    10. '.current' → logprob: -17.13937759399414

Token 182: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -2.9040898880339228e-05
    2. '_' → logprob: -10.750028610229492
    3. 'time' → logprob: -12.500028610229492
    4. '_token' → logprob: -12.875028610229492
    5. '_times' → logprob: -14.500028610229492
    6. '_t' → logprob: -15.875028610229492
    7. '_space' → logprob: -16.125028610229492
    8. '_code' → logprob: -16.500028610229492
    9. ' _' → logprob: -16.625028610229492
    10. '=' → logprob: -17.375028610229492

Token 183: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3162597417831421
    2. '+=' → logprob: -1.316259741783142
    3. '+' → logprob: -5.816259860992432
    4. ' +' → logprob: -11.316259384155273
    5. '=' → logprob: -14.066259384155273
    6. ']+=' → logprob: -14.691259384155273
    7. ' ' → logprob: -15.066259384155273
    8. '+="' → logprob: -15.066259384155273
    9. '+='' → logprob: -15.066259384155273
    10. '   ' → logprob: -15.941259384155273

Token 184: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0485873706638813
    2. ' t' → logprob: -3.0485873222351074
    3. '	t' → logprob: -18.173587799072266
    4. '_t' → logprob: -19.673587799072266
    5. '`t' → logprob: -19.798587799072266
    6. ' ' → logprob: -20.048587799072266
    7. ' ' → logprob: -20.798587799072266
    8. '   ' → logprob: -22.298587799072266
    9. '(t' → logprob: -22.548587799072266
    10. ')t' → logprob: -22.673587799072266

Token 185: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.051201194524765015
    2. '       ' → logprob: -3.301201105117798
    3. '    
' → logprob: -5.176201343536377
    4. '   ' → logprob: -5.926201343536377
    5. '        
' → logprob: -6.051201343536377
    6. '  
' → logprob: -6.926201343536377
    7. 'print' → logprob: -7.176201343536377
    8. '\n' → logprob: -8.301200866699219
    9. '<|end|>' → logprob: -8.801200866699219
    10. '
' → logprob: -8.926200866699219

Token 186: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3159167468547821
    2. '
' → logprob: -2.0659167766571045
    3. 'print' → logprob: -2.3159167766571045
    4. '   ' → logprob: -3.5659167766571045
    5. '    
' → logprob: -5.065916538238525
    6. '        
' → logprob: -5.190916538238525
    7. '  
' → logprob: -6.315916538238525
    8. '<|end|>' → logprob: -6.315916538238525
    9. ' print' → logprob: -6.565916538238525
    10. ' 
' → logprob: -9.190917015075684

Token 187: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.008753431029617786
    2. '       ' → logprob: -5.383753299713135
    3. 'average' → logprob: -5.883753299713135
    4. ' print' → logprob: -6.758753299713135
    5. '
' → logprob: -9.758753776550293
    6. 'avg' → logprob: -10.008753776550293
    7. ' average' → logprob: -10.758753776550293
    8. '        
' → logprob: -11.008753776550293
    9. 'm' → logprob: -11.508753776550293
    10. '   ' → logprob: -12.008753776550293

Token 188: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.00249289907515049
    2. '(' → logprob: -6.002492904663086
    3. 'total' → logprob: -11.877492904663086
    4. ' (' → logprob: -12.502492904663086
    5. '(f' → logprob: -12.502492904663086
    6. '((' → logprob: -13.877492904663086
    7. '(round' → logprob: -14.377492904663086
    8. '(int' → logprob: -15.127492904663086
    9. '()' → logprob: -15.127492904663086
    10. ' total' → logprob: -15.877492904663086

Token 189: '_wait' (ID: 44250)
  Prédit: '_wait'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_wait' → logprob: -2.339278580620885e-06
    2. 'waiting' → logprob: -13.125001907348633
    3. '_WAIT' → logprob: -16.000001907348633
    4. 'wait' → logprob: -16.625001907348633
    5. '_' → logprob: -17.500001907348633
    6. 'Waiting' → logprob: -17.625001907348633
    7. '_time' → logprob: -18.250001907348633
    8. '_w' → logprob: -19.375001907348633
    9. ' waiting' → logprob: -19.500001907348633
    10. '(wait' → logprob: -19.625001907348633

Token 190: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -4.596781946020201e-05
    2. 'ng' → logprob: -10.000045776367188
    3. 'in' → logprob: -16.375045776367188
    4. 'ING' → logprob: -16.500045776367188
    5. 'ving' → logprob: -16.625045776367188
    6. '_ing' → logprob: -16.750045776367188
    7. '   ' → logprob: -17.250045776367188
    8. 'ating' → logprob: -17.500045776367188
    9. 'ting' → logprob: -17.500045776367188
    10. 'ingt' → logprob: -17.500045776367188

Token 191: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -3.619311974034645e-05
    2. 'time' → logprob: -10.875036239624023
    3. '_t' → logprob: -11.250036239624023
    4. '_' → logprob: -13.375036239624023
    5. ' _' → logprob: -13.625036239624023
    6. 't' → logprob: -14.875036239624023
    7. '_type' → logprob: -15.000036239624023
    8. '_times' → logprob: -15.375036239624023
    9. ')' → logprob: -15.625036239624023
    10. 'e' → logprob: -16.375036239624023

Token 192: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.7697225252486533e-06
    2. ' )' → logprob: -13.250003814697266
    3. '())' → logprob: -13.875003814697266
    4. ')
' → logprob: -14.625003814697266
    5. '()' → logprob: -15.250003814697266
    6. '*' → logprob: -16.500003814697266
    7. ')}' → logprob: -17.250003814697266
    8. ')`' → logprob: -17.250003814697266
    9. '*)' → logprob: -17.500003814697266
    10. '))' → logprob: -17.750003814697266

Token 193: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 194: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.18003152310848236
    2. '__' → logprob: -1.8050315380096436
    3. '_' → logprob: -9.180031776428223
    4. ' ' → logprob: -9.305031776428223
    5. '___' → logprob: -10.180031776428223
    6. '_name' → logprob: -10.555031776428223
    7. 'name' → logprob: -11.305031776428223
    8. '  ' → logprob: -12.180031776428223
    9. ' ' → logprob: -12.430031776428223
    10. ' ' → logprob: -13.430031776428223

Token 195: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.004830361343920231
    2. ' __' → logprob: -6.004830360412598
    3. '.__' → logprob: -6.754830360412598
    4. '__.__' → logprob: -7.004830360412598
    5. '__.' → logprob: -8.754830360412598
    6. ' ==' → logprob: -10.254830360412598
    7. '____' → logprob: -10.754830360412598
    8. '==' → logprob: -11.004830360412598
    9. '___' → logprob: -11.379830360412598
    10. '```' → logprob: -12.254830360412598

Token 196: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.774276774493046e-05
    2. '__.__' → logprob: -10.375038146972656
    3. '==' → logprob: -12.375038146972656
    4. '___' → logprob: -14.125038146972656
    5. '____' → logprob: -14.625038146972656
    6. '=="' → logprob: -15.375038146972656
    7. '__["' → logprob: -15.500038146972656
    8. '_' → logprob: -15.500038146972656
    9. '__.' → logprob: -15.625038146972656
    10. '__('' → logprob: -16.500038146972656

Token 197: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4359562397003174
    2. '__' → logprob: -1.5609562397003174
    3. '==' → logprob: -2.1859562397003174
    4. '=="' → logprob: -3.5609562397003174
    5. '.__' → logprob: -7.185956001281738
    6. '=='' → logprob: -7.435956001281738
    7. '[' → logprob: -7.935956001281738
    8. '["' → logprob: -8.185956001281738
    9. '"' → logprob: -8.560956001281738
    10. '['' → logprob: -9.185956001281738

Token 198: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00862521305680275
    2. ''' → logprob: -4.758625030517578
    3. ' "__' → logprob: -11.508625030517578
    4. '__' → logprob: -14.508625030517578
    5. ' '__' → logprob: -16.508625030517578
    6. '"user' → logprob: -16.883625030517578
    7. '"name' → logprob: -17.633625030517578
    8. ' "' → logprob: -18.633625030517578
    9. ''"' → logprob: -19.133625030517578
    10. '("__' → logprob: -19.258625030517578

Token 199: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.625
    3. 'name' → logprob: -17.0
    4. '_main' → logprob: -19.5
    5. '	main' → logprob: -19.875
    6. '__' → logprob: -20.25
    7. 'ma' → logprob: -20.5
    8. '-main' → logprob: -21.0
    9. '"' → logprob: -21.125
    10. 'mp' → logprob: -22.25

Token 200: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.07892393320798874
    2. '__' → logprob: -2.5789239406585693
    3. '__':
' → logprob: -10.328924179077148
    4. '__["' → logprob: -13.828924179077148
    5. '"' → logprob: -15.828924179077148
    6. '__("' → logprob: -15.828924179077148
    7. '```' → logprob: -16.45392417907715
    8. '__",' → logprob: -16.70392417907715
    9. '__:' → logprob: -16.95392417907715
    10. '__.' → logprob: -17.45392417907715

Token 201: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.10706264525651932
    2. 'main' → logprob: -2.982062578201294
    3. '	main' → logprob: -2.982062578201294
    4. '   ' → logprob: -8.857062339782715
    5. '_main' → logprob: -11.857062339782715
    6. '	Main' → logprob: -13.482062339782715
    7. '(main' → logprob: -14.232062339782715
    8. ' ' → logprob: -14.357062339782715
    9. '.main' → logprob: -14.982062339782715
    10. ' ' → logprob: -15.107062339782715

Token 202: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -3.128163257315464e-07
    2. ' main' → logprob: -15.5
    3. '	main' → logprob: -21.5
    4. 'mai' → logprob: -23.625
    5. 'ma' → logprob: -24.0
    6. '_main' → logprob: -24.375
    7. '.main' → logprob: -25.375
    8. '   ' → logprob: -25.5
    9. '(main' → logprob: -25.75
    10. 'Main' → logprob: -25.875

Token 203: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 201
Tokens correctement prédits (1ère position, stricte): 79
Tokens correctement prédits (1ère position, avec adaptation): 85
Tokens correctement prédits (top 10): 151
Précision stricte (1ère position): 39.30%
Précision adaptée (1ère position): 42.29%
Précision (top 10): 75.12%
================================================================================
