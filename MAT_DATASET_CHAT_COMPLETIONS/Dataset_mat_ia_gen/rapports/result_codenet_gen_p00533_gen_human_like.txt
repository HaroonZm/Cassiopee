================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:27:26
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
H, W = map(int, input().split())
grid = [input() for _ in range(H)]

result = [[-1]*W for _ in range(H)]

for i in range(H):
    last_cloud = -1
    for j in range(W):
        if grid[i][j] == 'c':
            result[i][j] = 0
            last_cloud = j
        elif last_cloud != -1:
            result[i][j] = j - last_cloud

for row in result:
    print(*row)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'H' (ID: 39)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' W' (ID: 486)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5428072214126587
    2. ',' → logprob: -0.9178072214126587
    3. ' =' → logprob: -4.542807102203369
    4. '*' → logprob: -5.542807102203369
    5. ')' → logprob: -6.667807102203369
    6. '.' → logprob: -7.042807102203369
    7. ':' → logprob: -7.167807102203369
    8. '```' → logprob: -7.542807102203369
    9. '#' → logprob: -7.917807102203369
    10. ';' → logprob: -8.292807579040527

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02370345965027809
    2. '32' → logprob: -5.273703575134277
    3. ' map' → logprob: -5.898703575134277
    4. '100' → logprob: -6.273703575134277
    5. ' img' → logprob: -6.398703575134277
    6. ' image' → logprob: -6.523703575134277
    7. '224' → logprob: -6.773703575134277
    8. '128' → logprob: -6.898703575134277
    9. '256' → logprob: -6.898703575134277
    10. '64' → logprob: -6.898703575134277

Token 5: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.5490038990974426
    2. '(' → logprob: -0.9240038990974426
    3. '(str' → logprob: -3.924003839492798
    4. '(lambda' → logprob: -6.049004077911377
    5. '(input' → logprob: -6.549004077911377
    6. '[int' → logprob: -6.924004077911377
    7. 'int' → logprob: -7.424004077911377
    8. '<int' → logprob: -9.799003601074219
    9. '```' → logprob: -9.799003601074219
    10. '(eval' → logprob: -10.299003601074219

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00732631329447031
    2. ')' → logprob: -5.757326126098633
    3. 'input' → logprob: -6.257326126098633
    4. '(' → logprob: -6.257326126098633
    5. '[input' → logprob: -9.882326126098633
    6. '(int' → logprob: -10.007326126098633
    7. '(str' → logprob: -10.257326126098633
    8. '(raw' → logprob: -10.632326126098633
    9. ' input' → logprob: -10.757326126098633
    10. '```' → logprob: -11.007326126098633

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.01818951405584812
    2. ' input' → logprob: -4.018189430236816
    3. '(input' → logprob: -10.268189430236816
    4. ')' → logprob: -12.643189430236816
    5. ',input' → logprob: -13.643189430236816
    6. '```' → logprob: -15.518189430236816
    7. '<input' → logprob: -15.643189430236816
    8. '[input' → logprob: -16.143190383911133
    9. '=input' → logprob: -16.768190383911133
    10. '	input' → logprob: -17.393190383911133

Token 8: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6399929523468018
    2. '())' → logprob: -1.0149929523468018
    3. '().' → logprob: -3.0149929523468018
    4. '(' → logprob: -3.5149929523468018
    5. ')' → logprob: -4.764992713928223
    6. '()>' → logprob: -4.889992713928223
    7. '`()' → logprob: -5.764992713928223
    8. '('' → logprob: -5.764992713928223
    9. '(()' → logprob: -6.264992713928223
    10. '```' → logprob: -6.639992713928223

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0004436587623786181
    2. 'strip' → logprob: -7.750443458557129
    3. 'rstrip' → logprob: -12.375443458557129
    4. ')' → logprob: -12.625443458557129
    5. ' split' → logprob: -12.750443458557129
    6. 'read' → logprob: -13.250443458557129
    7. '(split' → logprob: -14.375443458557129
    8. 'startswith' → logprob: -17.000444412231445
    9. '_split' → logprob: -17.375444412231445
    10. 'spl' → logprob: -17.500444412231445

Token 10: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.30600786209106445
    2. ')' → logprob: -1.4310078620910645
    3. '))' → logprob: -4.1810078620910645
    4. '()))' → logprob: -5.0560078620910645
    5. '()' → logprob: -5.9310078620910645
    6. '(' → logprob: -9.306007385253906
    7. '`)' → logprob: -10.306007385253906
    8. '('' → logprob: -10.556007385253906
    9. ' ())' → logprob: -10.806007385253906
    10. '```' → logprob: -11.931007385253906

Token 11: 'grid' (ID: 7886)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7380810379981995
    2. '\n' → logprob: -1.6130809783935547
    3. 'a' → logprob: -2.2380809783935547
    4. 'for' → logprob: -3.1130809783935547
    5. '#' → logprob: -3.7380809783935547
    6. ',' → logprob: -3.8630809783935547
    7. '\' → logprob: -4.113080978393555
    8. ')' → logprob: -4.113080978393555
    9. '`' → logprob: -4.238080978393555
    10. '```' → logprob: -4.738080978393555

Token 12: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004745772108435631
    2. '=' → logprob: -6.629745960235596
    3. ' =' → logprob: -6.754745960235596
    4. '[:]' → logprob: -7.254745960235596
    5. '\[' → logprob: -8.129745483398438
    6. '[i' → logprob: -8.129745483398438
    7. '[]' → logprob: -8.254745483398438
    8. '.' → logprob: -8.879745483398438
    9. '[int' → logprob: -9.754745483398438
    10. '_' → logprob: -9.754745483398438

Token 13: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3571655750274658
    2. ' [' → logprob: -1.7321655750274658
    3. '[]' → logprob: -2.982165575027466
    4. ' []' → logprob: -3.357165575027466
    5. '[input' → logprob: -4.107165336608887
    6. '[list' → logprob: -4.232165336608887
    7. '[int' → logprob: -6.232165336608887
    8. '[str' → logprob: -6.482165336608887
    9. '[['' → logprob: -6.607165336608887
    10. ' [['' → logprob: -7.857165336608887

Token 14: 'input' (ID: 2586)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.005791919771581888
    2. 'input' → logprob: -5.255792140960693
    3. ' list' → logprob: -7.505792140960693
    4. 'map' → logprob: -12.255791664123535
    5. ' input' → logprob: -13.255791664123535
    6. '[list' → logprob: -14.505791664123535
    7. 'tuple' → logprob: -15.005791664123535
    8. '   ' → logprob: -15.255791664123535
    9. '[input' → logprob: -15.255791664123535
    10. 'str' → logprob: -15.755791664123535

Token 15: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.40863505005836487
    2. '()' → logprob: -1.4086350202560425
    3. '())' → logprob: -2.408635139465332
    4. '().' → logprob: -7.033635139465332
    5. '());' → logprob: -10.658635139465332
    6. '()].' → logprob: -11.033635139465332
    7. '()][' → logprob: -11.033635139465332
    8. '()),' → logprob: -11.033635139465332
    9. '()>' → logprob: -11.283635139465332
    10. '()+' → logprob: -11.533635139465332

Token 16: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.047188762575387955
    2. ')' → logprob: -3.1721887588500977
    3. '())' → logprob: -5.547188758850098
    4. '()]' → logprob: -8.797188758850098
    5. 'for' → logprob: -9.922188758850098
    6. '().' → logprob: -10.172188758850098
    7. '(' → logprob: -11.672188758850098
    8. ')]' → logprob: -11.797188758850098
    9. ' for' → logprob: -12.172188758850098
    10. ']' → logprob: -12.297188758850098

Token 17: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.01133415661752224
    2. ' ' → logprob: -5.13633394241333
    3. ' _' → logprob: -5.88633394241333
    4. '_' → logprob: -6.63633394241333
    5. ' i' → logprob: -7.26133394241333
    6. '(' → logprob: -8.511334419250488
    7. 'range' → logprob: -8.761334419250488
    8. '(range' → logprob: -9.761334419250488
    9. '	range' → logprob: -10.011334419250488
    10. ' in' → logprob: -10.011334419250488

Token 18: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08407367765903473
    2. ' range' → logprob: -2.959073781967163
    3. 'range' → logprob: -3.959073781967163
    4. 'in' → logprob: -5.334073543548584
    5. '_' → logprob: -5.584073543548584
    6. ' ' → logprob: -7.709073543548584
    7. '(' → logprob: -8.709074020385742
    8. 's' → logprob: -8.959074020385742
    9. '(range' → logprob: -9.209074020385742
    10. '_range' → logprob: -9.709074020385742

Token 19: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009115827269852161
    2. ' range' → logprob: -7.000911712646484
    3. '	range' → logprob: -16.875911712646484
    4. '(range' → logprob: -17.500911712646484
    5. '.range' → logprob: -19.625911712646484
    6. ' ' → logprob: -19.625911712646484
    7. 'rang' → logprob: -19.750911712646484
    8. ')' → logprob: -20.125911712646484
    9. 'ran' → logprob: -20.125911712646484
    10. 'rage' → logprob: -20.250911712646484

Token 20: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.007616444956511259
    2. '(' → logprob: -4.8826165199279785
    3. '(W' → logprob: -12.38261604309082
    4. 'H' → logprob: -12.63261604309082
    5. '(
' → logprob: -14.50761604309082
    6. ' (' → logprob: -14.50761604309082
    7. ')' → logprob: -14.63261604309082
    8. '(I' → logprob: -15.88261604309082
    9. '(A' → logprob: -15.88261604309082
    10. '(len' → logprob: -15.88261604309082

Token 21: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00025287605240009725
    2. ')' → logprob: -8.375252723693848
    3. ']' → logprob: -10.750252723693848
    4. ')]
' → logprob: -15.250252723693848
    5. ' )' → logprob: -15.500252723693848
    6. '')]' → logprob: -16.000253677368164
    7. '))' → logprob: -16.375253677368164
    8. ')],' → logprob: -16.750253677368164
    9. ')
' → logprob: -17.000253677368164
    10. ')].' → logprob: -17.125253677368164

Token 22: 'result' (ID: 2521)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22309784591197968
    2. 'r' → logprob: -2.473097801208496
    3. 'max' → logprob: -3.973097801208496
    4. 'm' → logprob: -4.473097801208496
    5. 'c' → logprob: -4.598097801208496
    6. '#' → logprob: -4.598097801208496
    7. 'dp' → logprob: -4.723097801208496
    8. '.' → logprob: -4.848097801208496
    9. 's' → logprob: -5.223097801208496
    10. 'h' → logprob: -5.348097801208496

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16871272027492523
    2. '=' → logprob: -1.9187127351760864
    3. '_' → logprob: -4.918712615966797
    4. '[' → logprob: -7.543712615966797
    5. 's' → logprob: -8.293712615966797
    6. '=[]' → logprob: -9.168712615966797
    7. '[:]' → logprob: -9.543712615966797
    8. '[]' → logprob: -9.918712615966797
    9. ' ' → logprob: -10.043712615966797
    10. '.' → logprob: -10.293712615966797

Token 24: ' [[' (ID: 9237)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1033293008804321
    2. ' []' → logprob: -1.4783293008804321
    3. ' ' → logprob: -1.6033293008804321
    4. '[]' → logprob: -1.9783293008804321
    5. '[' → logprob: -3.2283291816711426
    6. '"' → logprob: -3.8533291816711426
    7. ' [' → logprob: -4.478329181671143
    8. 'set' → logprob: -4.478329181671143
    9. ' [[' → logprob: -5.853329181671143
    10. ''' → logprob: -6.353329181671143

Token 25: '-' (ID: 12)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17496827244758606
    2. ''' → logprob: -2.1749682426452637
    3. 'False' → logprob: -3.4249682426452637
    4. ''.' → logprob: -4.674968242645264
    5. '"' → logprob: -6.049968242645264
    6. 'None' → logprob: -7.799968242645264
    7. '''' → logprob: -7.924968242645264
    8. ''H' → logprob: -8.424968719482422
    9. ' ' → logprob: -8.549968719482422
    10. '-' → logprob: -8.674968719482422

Token 26: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.1080467781284824e-05
    2. 'float' → logprob: -10.250041007995605
    3. '(' → logprob: -12.625041007995605
    4. '10' → logprob: -13.750041007995605
    5. '-' → logprob: -15.125041007995605
    6. '100' → logprob: -15.375041007995605
    7. 'int' → logprob: -15.625041007995605
    8. '999' → logprob: -15.750041007995605
    9. '(-' → logprob: -16.000041961669922
    10. '2' → logprob: -16.000041961669922

Token 27: ']*' (ID: 18579)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03441941738128662
    2. ']' → logprob: -4.159419536590576
    3. 'for' → logprob: -4.159419536590576
    4. ' ]' → logprob: -6.534419536590576
    5. ']*' → logprob: -7.034419536590576
    6. ' ' → logprob: -9.284419059753418
    7. ' if' → logprob: -9.659419059753418
    8. ')' → logprob: -10.159419059753418
    9. ',' → logprob: -10.534419059753418
    10. 'if' → logprob: -11.159419059753418

Token 28: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -9.674858301877975e-05
    2. ' W' → logprob: -9.250096321105957
    3. '(W' → logprob: -14.500096321105957
    4. 'H' → logprob: -16.875097274780273
    5. '	W' → logprob: -17.625097274780273
    6. '```' → logprob: -18.125097274780273
    7. '<W' → logprob: -18.375097274780273
    8. '(' → logprob: -19.125097274780273
    9. ' ' → logprob: -19.125097274780273
    10. ')' → logprob: -19.375097274780273

Token 29: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.09040961414575577
    2. 'for' → logprob: -2.465409517288208
    3. ']' → logprob: -6.590409755706787
    4. ')' → logprob: -9.965409278869629
    5. ' ]' → logprob: -10.215409278869629
    6. '	for' → logprob: -12.090409278869629
    7. ')]' → logprob: -12.840409278869629
    8. ' ' → logprob: -13.590409278869629
    9. '<|end|>' → logprob: -14.340409278869629
    10. '   ' → logprob: -14.590409278869629

Token 30: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.048137594014406204
    2. '_' → logprob: -3.673137664794922
    3. ' _' → logprob: -4.923137664794922
    4. '<|end|>' → logprob: -5.173137664794922
    5. 'range' → logprob: -5.298137664794922
    6. '_range' → logprob: -5.923137664794922
    7. ' xrange' → logprob: -8.048137664794922
    8. '(range' → logprob: -8.423137664794922
    9. ' ' → logprob: -8.548137664794922
    10. '<|end|>' → logprob: -9.548137664794922

Token 31: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.030231280252337456
    2. 'in' → logprob: -3.530231237411499
    3. 'range' → logprob: -7.780231475830078
    4. ' range' → logprob: -10.280231475830078
    5. ' ' → logprob: -10.905231475830078
    6. '_' → logprob: -12.155231475830078
    7. '<|end|>' → logprob: -12.780231475830078
    8. '  ' → logprob: -15.030231475830078
    9. ' _' → logprob: -15.280231475830078
    10. '<|end|>' → logprob: -15.530231475830078

Token 32: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759401321411133
    2. ' range' → logprob: -0.8259401321411133
    3. '	range' → logprob: -14.950940132141113
    4. '(range' → logprob: -15.075940132141113
    5. '_range' → logprob: -16.825939178466797
    6. '.range' → logprob: -17.575939178466797
    7. ' xrange' → logprob: -17.575939178466797
    8. ' ' → logprob: -17.825939178466797
    9. ')' → logprob: -18.700939178466797
    10. 'Range' → logprob: -18.950939178466797

Token 33: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.00010998018842656165
    2. '(' → logprob: -9.125109672546387
    3. ' (' → logprob: -15.125109672546387
    4. '(range' → logprob: -15.500109672546387
    5. ')' → logprob: -15.750109672546387
    6. '(W' → logprob: -16.000110626220703
    7. '(
' → logprob: -16.375110626220703
    8. '((' → logprob: -16.875110626220703
    9. '(S' → logprob: -17.375110626220703
    10. '(I' → logprob: -17.500110626220703

Token 34: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00018113377154804766
    2. ')' → logprob: -8.875181198120117
    3. ']' → logprob: -10.125181198120117
    4. ' )' → logprob: -15.125181198120117
    5. ')])' → logprob: -15.625181198120117
    6. ')],' → logprob: -15.875181198120117
    7. '])]' → logprob: -16.250181198120117
    8. '')]' → logprob: -16.250181198120117
    9. ')][' → logprob: -16.375181198120117
    10. '))' → logprob: -16.500181198120117

Token 35: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06831800192594528
    2. ' for' → logprob: -2.8183178901672363
    3. '
' → logprob: -5.193317890167236
    4. '<|end|>' → logprob: -8.068318367004395
    5. '' → logprob: -8.943318367004395
    6. '#' → logprob: -8.943318367004395
    7. ' 
' → logprob: -9.943318367004395
    8. ' ' → logprob: -10.818318367004395
    9. '

' → logprob: -10.818318367004395
    10. '```' → logprob: -10.943318367004395

Token 36: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03259555622935295
    2. ' ' → logprob: -3.532595634460449
    3. ' h' → logprob: -6.032595634460449
    4. 'i' → logprob: -8.15759563446045
    5. ' _' → logprob: -9.40759563446045
    6. ' r' → logprob: -10.53259563446045
    7. '_' → logprob: -10.90759563446045
    8. ' y' → logprob: -11.40759563446045
    9. ' H' → logprob: -12.03259563446045
    10. ' ' → logprob: -12.03259563446045

Token 37: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.019643159583210945
    2. 'in' → logprob: -4.144643306732178
    3. ' ' → logprob: -5.644643306732178
    4. '	in' → logprob: -10.76964282989502
    5. 'n' → logprob: -11.01964282989502
    6. '<|end|>' → logprob: -11.76964282989502
    7. '  ' → logprob: -12.14464282989502
    8. ' i' → logprob: -12.39464282989502
    9. ' n' → logprob: -13.01964282989502
    10. ')' → logprob: -13.14464282989502

Token 38: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.16022545099258423
    2. 'range' → logprob: -1.9102253913879395
    3. ' ' → logprob: -14.285225868225098
    4. '(range' → logprob: -15.410225868225098
    5. ' xrange' → logprob: -15.660225868225098
    6. '	range' → logprob: -16.03522491455078
    7. '_range' → logprob: -17.16022491455078
    8. ')' → logprob: -18.03522491455078
    9. ' in' → logprob: -18.16022491455078
    10. ' H' → logprob: -18.53522491455078

Token 39: '(H' (ID: 20904)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08232671767473221
    2. '(H' → logprob: -2.582326650619507
    3. ' (' → logprob: -5.832326889038086
    4. ' ' → logprob: -7.707326889038086
    5. ' H' → logprob: -10.582326889038086
    6. '(
' → logprob: -11.582326889038086
    7. ')' → logprob: -12.332326889038086
    8. '(space' → logprob: -13.207326889038086
    9. 'H' → logprob: -13.332326889038086
    10. '(W' → logprob: -13.582326889038086

Token 40: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00885541271418333
    2. ')' → logprob: -4.75885534286499
    3. ')]' → logprob: -9.008855819702148
    4. '):
' → logprob: -9.633855819702148
    5. ' ):' → logprob: -10.633855819702148
    6. ':' → logprob: -11.383855819702148
    7. ']:' → logprob: -11.508855819702148
    8. '+' → logprob: -13.133855819702148
    9. '-' → logprob: -13.258855819702148
    10. ' ' → logprob: -14.383855819702148

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4395650029182434
    2. ' for' → logprob: -1.0645649433135986
    3. ' ' → logprob: -4.939565181732178
    4. 'for' → logprob: -5.814565181732178
    5. '	for' → logprob: -8.06456470489502
    6. '<|end|>' → logprob: -8.56456470489502
    7. '  ' → logprob: -9.56456470489502
    8. ':' → logprob: -11.31456470489502
    9. '   ' → logprob: -11.43956470489502
    10. '    ' → logprob: -11.43956470489502

Token 42: ' last' (ID: 2174)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11754133552312851
    2. ' for' → logprob: -2.2425413131713867
    3. '   ' → logprob: -5.367541313171387
    4. ' ' → logprob: -10.867541313171387
    5. 'range' → logprob: -11.242541313171387
    6. ' range' → logprob: -12.742541313171387
    7. '```' → logprob: -12.742541313171387
    8. '	for' → logprob: -13.617541313171387
    9. '    ' → logprob: -13.992541313171387
    10. 'j' → logprob: -14.117541313171387

Token 43: '_cloud' (ID: 83382)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04844336956739426
    2. ' =' → logprob: -4.67344331741333
    3. '_seen' → logprob: -4.79844331741333
    4. '_j' → logprob: -5.54844331741333
    5. '_pos' → logprob: -5.54844331741333
    6. '_space' → logprob: -5.92344331741333
    7. '=' → logprob: -6.17344331741333
    8. '_position' → logprob: -6.42344331741333
    9. ' ' → logprob: -6.54844331741333
    10. '_c' → logprob: -6.67344331741333

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.032674241811037064
    2. '=' → logprob: -3.6576743125915527
    3. '=-' → logprob: -5.782674312591553
    4. '_pos' → logprob: -6.157674312591553
    5. '_index' → logprob: -8.032673835754395
    6. '_position' → logprob: -8.407673835754395
    7. '_idx' → logprob: -8.782673835754395
    8. '=i' → logprob: -9.157673835754395
    9. '_' → logprob: -9.532673835754395
    10. '=j' → logprob: -9.532673835754395

Token 45: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.016256174072623253
    2. ' -' → logprob: -4.141256332397461
    3. '-W' → logprob: -8.641256332397461
    4. '-i' → logprob: -11.141256332397461
    5. '-H' → logprob: -12.516256332397461
    6. '-j' → logprob: -12.516256332397461
    7. ' ' → logprob: -12.891256332397461
    8. '-w' → logprob: -12.891256332397461
    9. 'None' → logprob: -13.016256332397461
    10. '-inf' → logprob: -13.016256332397461

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1054253011243418e-05
    2. '2' → logprob: -11.375020980834961
    3. '-' → logprob: -12.000020980834961
    4. '100' → logprob: -13.625020980834961
    5. '10' → logprob: -13.875020980834961
    6. ' ' → logprob: -15.250020980834961
    7. ' -' → logprob: -15.500020980834961
    8. 'i' → logprob: -15.875020980834961
    9. '999' → logprob: -16.00002098083496
    10. '5' → logprob: -16.12502098083496

Token 47: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49065861105918884
    2. '
' → logprob: -1.1156586408615112
    3. '    
' → logprob: -3.6156585216522217
    4. ' ' → logprob: -4.865658760070801
    5. '<|end|>' → logprob: -4.865658760070801
    6. '  
' → logprob: -5.490658760070801
    7. ' for' → logprob: -5.490658760070801
    8. '   
' → logprob: -6.240658760070801
    9. ':' → logprob: -6.240658760070801
    10. ' 
' → logprob: -6.490658760070801

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6309658885002136
    2. '
' → logprob: -0.8809658885002136
    3. '    
' → logprob: -3.7559659481048584
    4. ' ' → logprob: -5.130965709686279
    5. '  
' → logprob: -5.505965709686279
    6. ' for' → logprob: -5.505965709686279
    7. '   
' → logprob: -5.630965709686279
    8. '<|end|>' → logprob: -5.630965709686279
    9. ':' → logprob: -6.005965709686279
    10. ' 
' → logprob: -6.880965709686279

Token 49: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6413040161132812
    2. 'for' (adapté à ' for') → logprob: -0.8913040161132812
    3. '   ' → logprob: -2.7663040161132812
    4. ' ' → logprob: -8.891304016113281
    5. '	for' → logprob: -9.141304016113281
    6. '```' → logprob: -9.641304016113281
    7. '  ' → logprob: -10.016304016113281
    8. '    ' → logprob: -12.016304016113281
    9. '<|end|>' → logprob: -12.516304016113281
    10. '       ' → logprob: -12.766304016113281

Token 50: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6395378708839417
    2. ' j' → logprob: -1.2645378112792969
    3. ' range' → logprob: -2.139537811279297
    4. 'range' → logprob: -2.639537811279297
    5. ' W' → logprob: -7.764537811279297
    6. 'W' → logprob: -8.014537811279297
    7. 'w' → logprob: -9.639537811279297
    8. ' ' → logprob: -9.639537811279297
    9. '   ' → logprob: -10.264537811279297
    10. ' w' → logprob: -10.639537811279297

Token 51: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03371785581111908
    2. 'in' → logprob: -3.4087178707122803
    3. ' ' → logprob: -10.15871810913086
    4. ',' → logprob: -11.28371810913086
    5. ')' → logprob: -12.40871810913086
    6. '+' → logprob: -12.53371810913086
    7. 'range' → logprob: -12.78371810913086
    8. '   ' → logprob: -13.40871810913086
    9. '	in' → logprob: -13.53371810913086
    10. '```' → logprob: -13.78371810913086

Token 52: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20165911316871643
    2. ' range' → logprob: -1.701659083366394
    3. '(range' → logprob: -8.326659202575684
    4. '   ' → logprob: -13.201659202575684
    5. '	range' → logprob: -14.701659202575684
    6. ')' → logprob: -15.076659202575684
    7. '(' → logprob: -15.201659202575684
    8. '(W' → logprob: -15.451659202575684
    9. '.range' → logprob: -16.326658248901367
    10. 'in' → logprob: -16.576658248901367

Token 53: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.007302883081138134
    2. '(' → logprob: -5.507302761077881
    3. '(H' → logprob: -5.757302761077881
    4. ' (' → logprob: -10.632303237915039
    5. '(range' → logprob: -10.757303237915039
    6. '(
' → logprob: -13.007303237915039
    7. '(J' → logprob: -13.632303237915039
    8. '(I' → logprob: -13.882303237915039
    9. 'range' → logprob: -13.882303237915039
    10. ' range' → logprob: -14.007303237915039

Token 54: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00640804274007678
    2. '):
' → logprob: -5.881408214569092
    3. ')' → logprob: -6.256408214569092
    4. '+' → logprob: -6.756408214569092
    5. ' ):' → logprob: -8.256407737731934
    6. ':' → logprob: -8.881407737731934
    7. '   ' → logprob: -9.506407737731934
    8. '-' → logprob: -12.131407737731934
    9. ' +' → logprob: -12.381407737731934
    10. '):
' → logprob: -12.756407737731934

Token 55: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17385220527648926
    2. ':' → logprob: -2.0488522052764893
    3. '   ' → logprob: -4.42385196685791
    4. '<|end|>' → logprob: -5.04885196685791
    5. ' ' → logprob: -5.42385196685791
    6. ' :' → logprob: -6.04885196685791
    7. ' if' → logprob: -6.17385196685791
    8. '    ' → logprob: -7.04885196685791
    9. ',' → logprob: -7.42385196685791
    10. '):' → logprob: -7.67385196685791

Token 56: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7198491096496582
    2. ' if' → logprob: -1.3448491096496582
    3. 'if' (adapté à ' if') → logprob: -1.8448491096496582
    4. ' ' → logprob: -3.469849109649658
    5. '   ' → logprob: -3.594849109649658
    6. ':' → logprob: -3.719849109649658
    7. '<|end|>' → logprob: -5.594849109649658
    8. '           ' → logprob: -5.844849109649658
    9. '    ' → logprob: -6.719849109649658
    10. '        ' → logprob: -7.094849109649658

Token 57: ' grid' (ID: 10586)
  Prédit: ' grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.029835760593414307
    2. 'grid' → logprob: -3.5298357009887695
    3. '   ' → logprob: -10.15483570098877
    4. '(grid' → logprob: -10.90483570098877
    5. '	grid' → logprob: -11.02983570098877
    6. ' ' → logprob: -13.15483570098877
    7. ':grid' → logprob: -13.27983570098877
    8. '.grid' → logprob: -13.65483570098877
    9. '    ' → logprob: -13.65483570098877
    10. ' grids' → logprob: -14.02983570098877

Token 58: '[i' (ID: 1768)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.09126228839159012
    2. '[i' → logprob: -2.4662623405456543
    3. '[' → logprob: -6.091262340545654
    4. '[I' → logprob: -10.341261863708496
    5. '```' → logprob: -12.466261863708496
    6. '[C' → logprob: -12.966261863708496
    7. '[J' → logprob: -13.091261863708496
    8. '][' → logprob: -13.091261863708496
    9. '[h' → logprob: -13.216261863708496
    10. '[A' → logprob: -13.716261863708496

Token 59: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.03009224124252796
    2. '][' → logprob: -3.530092239379883
    3. ']' → logprob: -8.655092239379883
    4. '[' → logprob: -9.405092239379883
    5. '[i' → logprob: -10.280092239379883
    6. '```' → logprob: -11.405092239379883
    7. '[
' → logprob: -12.030092239379883
    8. '[J' → logprob: -12.155092239379883
    9. '"][' → logprob: -12.280092239379883
    10. ' ][' → logprob: -12.405092239379883

Token 60: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.816093228830141e-06
    2. ']' → logprob: -13.50000286102295
    3. ' j' → logprob: -13.62500286102295
    4. '```' → logprob: -16.875001907348633
    5. '   ' → logprob: -17.250001907348633
    6. ' ' → logprob: -17.750001907348633
    7. ':j' → logprob: -17.750001907348633
    8. '	j' → logprob: -17.875001907348633
    9. '[j' → logprob: -18.125001907348633
    10. ')' → logprob: -19.000001907348633

Token 61: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00974888727068901
    2. ']==' → logprob: -4.759748935699463
    3. '==' → logprob: -7.384748935699463
    4. ' ==' → logprob: -8.384748458862305
    5. ' ]' → logprob: -8.509748458862305
    6. ']=='' → logprob: -9.884748458862305
    7. '   ' → logprob: -11.009748458862305
    8. ':]' → logprob: -12.384748458862305
    9. '=' → logprob: -13.384748458862305
    10. ' ' → logprob: -13.634748458862305

Token 62: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3641047477722168
    2. ' ==' → logprob: -1.2391047477722168
    3. '=='' → logprob: -4.239104747772217
    4. '=' → logprob: -7.489104747772217
    5. '=="' → logprob: -8.739105224609375
    6. ']' → logprob: -9.489105224609375
    7. 's' → logprob: -9.989105224609375
    8. ' ' → logprob: -10.239105224609375
    9. ']==' → logprob: -10.239105224609375
    10. ' =='' → logprob: -10.489105224609375

Token 63: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.48859748244285583
    2. ''C' → logprob: -1.1135975122451782
    3. ''#' → logprob: -3.2385973930358887
    4. ''.' → logprob: -4.863597393035889
    5. ''S' → logprob: -5.613597393035889
    6. ''o' → logprob: -5.863597393035889
    7. '"C' → logprob: -6.488597393035889
    8. ''O' → logprob: -7.738597393035889
    9. ''L' → logprob: -7.863597393035889
    10. '"' → logprob: -7.863597393035889

Token 64: 'c' (ID: 66)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.30351969599723816
    2. '.' → logprob: -1.5535197257995605
    3. 'c' → logprob: -3.5535197257995605
    4. 'cloud' → logprob: -5.1785197257995605
    5. ''#' → logprob: -5.3035197257995605
    6. '.#' → logprob: -5.6785197257995605
    7. ''' → logprob: -5.9285197257995605
    8. '.')' → logprob: -6.8035197257995605
    9. 'C' → logprob: -7.0535197257995605
    10. '.'' → logprob: -7.0535197257995605

Token 65: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.0014837936032563448
    2. ''' → logprob: -7.126483917236328
    3. '':
' → logprob: -7.376483917236328
    4. ''):' → logprob: -10.376483917236328
    5. '':
' → logprob: -12.001483917236328
    6. '':

' → logprob: -12.501483917236328
    7. 'l' → logprob: -12.751483917236328
    8. ''):
' → logprob: -13.001483917236328
    9. ' ':' → logprob: -13.876483917236328
    10. '':'' → logprob: -13.876483917236328

Token 66: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.047294165939092636
    2. ':' → logprob: -3.7972941398620605
    3. ' last' → logprob: -3.7972941398620605
    4. '               ' → logprob: -7.6722941398620605
    5. 'last' → logprob: -8.422294616699219
    6. ':last' → logprob: -8.672294616699219
    7. ':
' → logprob: -8.797294616699219
    8. '       ' → logprob: -9.172294616699219
    9. '            
' → logprob: -10.547294616699219
    10. ' ' → logprob: -10.672294616699219

Token 67: ' result' (ID: 1534)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.1544068306684494
    2. ' last' → logprob: -2.154406785964966
    3. '           ' → logprob: -3.654406785964966
    4. '               ' → logprob: -7.029407024383545
    5. '   ' → logprob: -8.779406547546387
    6. '	last' → logprob: -9.529406547546387
    7. ' ' → logprob: -10.154406547546387
    8. '```' → logprob: -11.029406547546387
    9. '[last' → logprob: -11.279406547546387
    10. ':last' → logprob: -11.279406547546387

Token 68: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.988221684878226e-06
    2. '[j' → logprob: -12.750006675720215
    3. '[' → logprob: -13.125006675720215
    4. '][' → logprob: -14.000006675720215
    5. '[I' → logprob: -14.000006675720215
    6. '```' → logprob: -16.25000762939453
    7. 'i' → logprob: -17.25000762939453
    8. '[int' → logprob: -17.25000762939453
    9. '[row' → logprob: -17.50000762939453
    10. ' [' → logprob: -17.62500762939453

Token 69: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.010270788334310055
    2. ']' → logprob: -5.010270595550537
    3. '[j' → logprob: -5.885270595550537
    4. ']=' → logprob: -8.010271072387695
    5. '=' → logprob: -8.760271072387695
    6. ' ][' → logprob: -9.010271072387695
    7. '   ' → logprob: -10.635271072387695
    8. '[' → logprob: -10.635271072387695
    9. '       ' → logprob: -10.885271072387695
    10. ' ' → logprob: -11.135271072387695

Token 70: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -7.183501293184236e-05
    2. ' j' → logprob: -10.12507152557373
    3. '0' → logprob: -11.25007152557373
    4. '<|end|>' → logprob: -12.12507152557373
    5. ']' → logprob: -12.50007152557373
    6. '_j' → logprob: -13.50007152557373
    7. '   ' → logprob: -13.62507152557373
    8. ' ' → logprob: -13.75007152557373
    9. '	j' → logprob: -13.75007152557373
    10. '[j' → logprob: -14.37507152557373

Token 71: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0023123843129724264
    2. ']=' → logprob: -6.127312183380127
    3. '=' → logprob: -9.127312660217285
    4. ' ]' → logprob: -11.377312660217285
    5. ' =' → logprob: -12.002312660217285
    6. ')' → logprob: -15.377312660217285
    7. '0' → logprob: -15.752312660217285
    8. ' ' → logprob: -15.752312660217285
    9. '']' → logprob: -16.12731170654297
    10. ']+=' → logprob: -16.25231170654297

Token 72: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687199354171753
    2. ' =' → logprob: -1.1368720531463623
    3. '0' → logprob: -14.761872291564941
    4. ' ' → logprob: -14.886872291564941
    5. ',' → logprob: -15.636872291564941
    6. '<|end|>' → logprob: -17.636871337890625
    7. '.=' → logprob: -17.761871337890625
    8. '＝' → logprob: -18.136871337890625
    9. ')' → logprob: -18.261871337890625
    10. '=end' → logprob: -18.386871337890625

Token 73: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.56102097814437e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -16.500045776367188
    4. '`' → logprob: -19.625045776367188
    5. 'j' → logprob: -20.125045776367188
    6. '00' → logprob: -20.250045776367188
    7. '  ' → logprob: -20.250045776367188
    8. '۰' → logprob: -20.250045776367188
    9. '000' → logprob: -21.000045776367188
    10. '    ' → logprob: -21.125045776367188

Token 74: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. 'last' → logprob: -20.000001907348633
    4. 'c' → logprob: -20.125001907348633
    5. '۰' → logprob: -20.125001907348633
    6. '00' → logprob: -20.125001907348633
    7. '-' → logprob: -20.125001907348633
    8. '=' → logprob: -20.750001907348633
    9. '`' → logprob: -20.750001907348633
    10. '000' → logprob: -20.812501907348633

Token 75: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7627256512641907
    2. '<|end|>' → logprob: -1.637725591659546
    3. '       ' → logprob: -1.762725591659546
    4. '
' → logprob: -2.137725591659546
    5. 'elif' → logprob: -4.387725830078125
    6. '   ' → logprob: -4.887725830078125
    7. ' else' → logprob: -5.137725830078125
    8. '               ' → logprob: -5.137725830078125
    9. 'else' → logprob: -5.137725830078125
    10. ' elif' → logprob: -6.012725830078125

Token 76: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0964793786406517
    2. '       ' → logprob: -3.0964794158935547
    3. '<|end|>' → logprob: -4.096479415893555
    4. 'else' → logprob: -4.971479415893555
    5. ' else' → logprob: -5.221479415893555
    6. ' last' → logprob: -5.596479415893555
    7. ' ' → logprob: -5.971479415893555
    8. 'elif' → logprob: -6.096479415893555
    9. '               ' → logprob: -6.096479415893555
    10. 'last' → logprob: -6.596479415893555

Token 77: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' (adapté à ' last') → logprob: -0.006074672099202871
    2. '           ' → logprob: -5.131074905395508
    3. ' last' → logprob: -8.881074905395508
    4. '	last' → logprob: -12.881074905395508
    5. 'for' → logprob: -13.756074905395508
    6. '   ' → logprob: -14.006074905395508
    7. '       ' → logprob: -14.131074905395508
    8. '               ' → logprob: -14.381074905395508
    9. '                   ' → logprob: -15.006074905395508
    10. 'else' → logprob: -15.631074905395508

Token 78: '_cloud' (ID: 83382)
  Prédit: '_cloud'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cloud' → logprob: -0.00014418430509977043
    2. '_' → logprob: -9.500144004821777
    3. '_cl' → logprob: -11.000144004821777
    4. '=' → logprob: -11.250144004821777
    5. '=_' → logprob: -11.375144004821777
    6. '_c' → logprob: -12.375144004821777
    7. ' _' → logprob: -12.375144004821777
    8. ' =' → logprob: -12.500144004821777
    9. '_cov' → logprob: -12.750144004821777
    10. 'cloud' → logprob: -13.250144004821777

Token 79: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06203826516866684
    2. '=' → logprob: -2.8120381832122803
    3. '=j' → logprob: -9.56203842163086
    4. ' ' → logprob: -16.18703842163086
    5. '=i' → logprob: -16.43703842163086
    6. '＝' → logprob: -16.93703842163086
    7. 'j' → logprob: -17.18703842163086
    8. 's' → logprob: -17.31203842163086
    9. ',' → logprob: -17.56203842163086
    10. '    ' → logprob: -18.31203842163086

Token 80: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.020542705431580544
    2. ' j' → logprob: -3.895542621612549
    3. ' ' → logprob: -15.020543098449707
    4. '	j' → logprob: -15.520543098449707
    5. '   ' → logprob: -15.770543098449707
    6. '0' → logprob: -17.02054214477539
    7. '```' → logprob: -17.14554214477539
    8. '_j' → logprob: -17.39554214477539
    9. '$j' → logprob: -17.52054214477539
    10. ' ' → logprob: -17.64554214477539

Token 81: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04151212051510811
    2. '   ' → logprob: -4.1665120124816895
    3. ' elif' → logprob: -5.0415120124816895
    4. 'elif' → logprob: -5.2915120124816895
    5. ' else' → logprob: -5.4165120124816895
    6. 'else' → logprob: -5.6665120124816895
    7. '<|end|>' → logprob: -5.6665120124816895
    8. '	elif' → logprob: -6.7915120124816895
    9. ' ' → logprob: -8.166512489318848
    10. '      ' → logprob: -8.416512489318848

Token 82: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033847738057374954
    2. '   ' → logprob: -3.9088478088378906
    3. 'elif' → logprob: -5.158847808837891
    4. ' elif' → logprob: -5.783847808837891
    5. ' else' → logprob: -6.533847808837891
    6. '<|end|>' → logprob: -6.533847808837891
    7. 'else' → logprob: -6.783847808837891
    8. '```' → logprob: -9.53384780883789
    9. '      ' → logprob: -10.03384780883789
    10. ' ' → logprob: -10.15884780883789

Token 83: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.13964222371578217
    2. '       ' → logprob: -2.8896422386169434
    3. '   ' → logprob: -3.2646422386169434
    4. 'else' → logprob: -3.3896422386169434
    5. ' elif' → logprob: -6.014642238616943
    6. '	elif' → logprob: -8.639641761779785
    7. ' else' → logprob: -8.889641761779785
    8. '```' → logprob: -10.639641761779785
    9. '  ' → logprob: -11.389641761779785
    10. ' ' → logprob: -12.764641761779785

Token 84: ' last' (ID: 2174)
  Prédit: ' last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' last' → logprob: -0.3132794201374054
    2. 'last' → logprob: -1.313279390335083
    3. ' ' → logprob: -11.313279151916504
    4. '   ' → logprob: -12.938279151916504
    5. '	last' → logprob: -13.688279151916504
    6. '(last' → logprob: -14.563279151916504
    7. '0' → logprob: -15.188279151916504
    8. '`' → logprob: -16.31328010559082
    9. 'lasti' → logprob: -16.31328010559082
    10. 'las' → logprob: -16.43828010559082

Token 85: '_cloud' (ID: 83382)
  Prédit: '_cloud'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cloud' → logprob: -0.012579585425555706
    2. '_' → logprob: -4.387579441070557
    3. '_cl' → logprob: -11.012579917907715
    4. '_c' → logprob: -11.762579917907715
    5. 'cloud' → logprob: -11.762579917907715
    6. '!=' → logprob: -12.012579917907715
    7. '!=-' → logprob: -12.012579917907715
    8. '>' → logprob: -12.387579917907715
    9. '```' → logprob: -12.637579917907715
    10. ' _' → logprob: -13.137579917907715

Token 86: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.10682697594165802
    2. '!=-' → logprob: -2.4818270206451416
    3. '==' → logprob: -4.7318267822265625
    4. ' !=' → logprob: -5.1068267822265625
    5. '==-' → logprob: -6.1068267822265625
    6. '=' → logprob: -7.9818267822265625
    7. '>=' → logprob: -8.481826782226562
    8. '!==' → logprob: -10.856826782226562
    9. ' ==' → logprob: -11.356826782226562
    10. ']!=' → logprob: -11.356826782226562

Token 87: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004078997299075127
    2. ' -' → logprob: -5.5040788650512695
    3. ' ' → logprob: -15.37907886505127
    4. '   ' → logprob: -16.129079818725586
    5. '	' → logprob: -16.629079818725586
    6. '−' → logprob: -17.129079818725586
    7. '  ' → logprob: -17.379079818725586
    8. '```' → logprob: -18.004079818725586
    9. '1' → logprob: -18.629079818725586
    10. '-
' → logprob: -18.754079818725586

Token 88: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.87500286102295
    3. '```' → logprob: -15.12500286102295
    4. '-' → logprob: -15.68750286102295
    5. '   ' → logprob: -15.87500286102295
    6. '<|end|>' → logprob: -16.062501907348633
    7. '2' → logprob: -16.187501907348633
    8. ')' → logprob: -16.812501907348633
    9. '১' → logprob: -17.375001907348633
    10. '  ' → logprob: -17.687501907348633

Token 89: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08941888064146042
    2. ':
' → logprob: -2.464418888092041
    3. '       ' → logprob: -8.839418411254883
    4. '           ' → logprob: -9.214418411254883
    5. '   ' → logprob: -9.589418411254883
    6. '):
' → logprob: -10.339418411254883
    7. 'result' → logprob: -10.714418411254883
    8. ')' → logprob: -11.089418411254883
    9. ',' → logprob: -11.214418411254883
    10. ' :' → logprob: -11.464418411254883

Token 90: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5160525441169739
    2. '       ' → logprob: -1.766052484512329
    3. 'result' → logprob: -2.016052484512329
    4. ' result' → logprob: -2.391052484512329
    5. '               ' → logprob: -5.766052722930908
    6. '   ' → logprob: -6.766052722930908
    7. '            
' → logprob: -6.766052722930908
    8. '        
' → logprob: -7.516052722930908
    9. '
' → logprob: -8.39105224609375
    10. '                   ' → logprob: -8.76605224609375

Token 91: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.5809597373008728
    2. ' result' → logprob: -0.8309597373008728
    3. '           ' → logprob: -5.580959796905518
    4. '   ' → logprob: -7.455959796905518
    5. ' j' → logprob: -8.83095932006836
    6. '    ' → logprob: -8.95595932006836
    7. '            ' → logprob: -9.20595932006836
    8. '               ' → logprob: -9.58095932006836
    9. '       ' → logprob: -9.95595932006836
    10. ' ' → logprob: -9.95595932006836

Token 92: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.8497312895488e-05
    2. '[' → logprob: -9.750068664550781
    3. 'i' → logprob: -12.250068664550781
    4. '[I' → logprob: -13.000068664550781
    5. '][' → logprob: -13.625068664550781
    6. '[j' → logprob: -14.625068664550781
    7. '```' → logprob: -15.000068664550781
    8. '[
' → logprob: -15.750068664550781
    9. '<|end|>' → logprob: -15.750068664550781
    10. '[int' → logprob: -16.25006866455078

Token 93: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.10216905176639557
    2. '[i' → logprob: -2.7271690368652344
    3. '[j' → logprob: -3.6021690368652344
    4. '[' → logprob: -5.602169036865234
    5. ')[' → logprob: -8.102169036865234
    6. ']' → logprob: -8.227169036865234
    7. '[I' → logprob: -10.102169036865234
    8. ' ][' → logprob: -10.727169036865234
    9. '```' → logprob: -11.102169036865234
    10. ''][' → logprob: -11.477169036865234

Token 94: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00031282080453820527
    2. ' j' → logprob: -9.000312805175781
    3. ']' → logprob: -9.500312805175781
    4. ' ' → logprob: -10.500312805175781
    5. 'i' → logprob: -10.625312805175781
    6. '[j' → logprob: -11.500312805175781
    7. '   ' → logprob: -11.500312805175781
    8. '-' → logprob: -11.875312805175781
    9. ')' → logprob: -12.562812805175781
    10. '```' → logprob: -12.750312805175781

Token 95: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6978551745414734
    2. ' =' → logprob: -0.8228551745414734
    3. ']' → logprob: -2.822855234146118
    4. ')' → logprob: -5.697854995727539
    5. ']=' → logprob: -8.322854995727539
    6. '-' → logprob: -10.447854995727539
    7. '   ' → logprob: -10.822854995727539
    8. ')=' → logprob: -10.822854995727539
    9. ' -' → logprob: -10.947854995727539
    10. ' ' → logprob: -11.197854995727539

Token 96: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.474078506231308
    2. ' =' → logprob: -0.9740785360336304
    3. '-' → logprob: -14.724078178405762
    4. '-=' → logprob: -14.849078178405762
    5. ' -' → logprob: -15.599078178405762
    6. ' -=' → logprob: -15.724078178405762
    7. ' ' → logprob: -16.474079132080078
    8. '+=' → logprob: -16.599079132080078
    9. '＝' → logprob: -17.099079132080078
    10. '   ' → logprob: -17.474079132080078

Token 97: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.1797538846731186
    2. ' j' → logprob: -1.8047538995742798
    3. '   ' → logprob: -12.679754257202148
    4. ' ' → logprob: -13.054754257202148
    5. 'result' → logprob: -13.679754257202148
    6. '	j' → logprob: -14.304754257202148
    7. '  ' → logprob: -15.304754257202148
    8. '1' → logprob: -15.429754257202148
    9. ' result' → logprob: -15.429754257202148
    10. '(j' → logprob: -15.679754257202148

Token 98: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.08122678101062775
    2. '-' → logprob: -2.5812268257141113
    3. '-last' → logprob: -6.081226825714111
    4. ' ' → logprob: -11.206226348876953
    5. '-LAST' → logprob: -11.581226348876953
    6. '   ' → logprob: -11.581226348876953
    7. ' -
' → logprob: -12.706226348876953
    8. '<|end|>' → logprob: -12.956226348876953
    9. ' ' → logprob: -13.206226348876953
    10. '```' → logprob: -13.206226348876953

Token 99: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.004078758880496025
    2. ' last' → logprob: -5.5040788650512695
    3. '	last' → logprob: -15.50407886505127
    4. '[last' → logprob: -16.379077911376953
    5. '   ' → logprob: -16.629077911376953
    6. '_last' → logprob: -17.254077911376953
    7. '(last' → logprob: -17.379077911376953
    8. ' ' → logprob: -17.504077911376953
    9. ':last' → logprob: -18.129077911376953
    10. 'lasti' → logprob: -18.879077911376953

Token 100: '_cloud' (ID: 83382)
  Prédit: '_cloud'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cloud' → logprob: -1.676292231422849e-05
    2. '_' → logprob: -11.250017166137695
    3. '_c' → logprob: -13.500017166137695
    4. '_cl' → logprob: -13.500017166137695
    5. 'cloud' → logprob: -14.375017166137695
    6. ' _' → logprob: -16.125017166137695
    7. '_chat' → logprob: -17.375017166137695
    8. '_cov' → logprob: -17.500017166137695
    9. '<|end|>' → logprob: -18.000017166137695
    10. 'Cloud' → logprob: -18.125017166137695

Token 101: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6351214051246643
    2. '<|end|>' → logprob: -0.8851214051246643
    3. '\n' → logprob: -3.7601213455200195
    4. '
' → logprob: -4.1351213455200195
    5. 'for' → logprob: -4.7601213455200195
    6. '```' → logprob: -6.0101213455200195
    7. ')' → logprob: -6.2601213455200195
    8. '#' → logprob: -6.6351213455200195
    9. ' for' → logprob: -7.0101213455200195
    10. ' ' → logprob: -7.0101213455200195

Token 102: 'for' (ID: 1938)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 103: ' row' (ID: 5225)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.22636927664279938
    2. 'i' → logprob: -1.6013692617416382
    3. '_' → logprob: -7.476369380950928
    4. ' _' → logprob: -8.22636890411377
    5. ' ' → logprob: -10.10136890411377
    6. '_i' → logprob: -10.10136890411377
    7. ' j' → logprob: -10.85136890411377
    8. ' H' → logprob: -12.35136890411377
    9. ' row' → logprob: -12.72636890411377
    10. 'j' → logprob: -12.97636890411377

Token 104: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004089678172022104
    2. 'in' → logprob: -5.504089832305908
    3. '<|end|>' → logprob: -11.75408935546875
    4. '	in' → logprob: -14.00408935546875
    5. '   ' → logprob: -14.00408935546875
    6. ':' → logprob: -14.50408935546875
    7. '_in' → logprob: -15.00408935546875
    8. ' ' → logprob: -15.12908935546875
    9. '  ' → logprob: -15.50408935546875
    10. '<|end|>' → logprob: -16.00408935546875

Token 105: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.029761601239442825
    2. ' result' → logprob: -3.529761552810669
    3. 'range' → logprob: -11.52976131439209
    4. '(result' → logprob: -14.02976131439209
    5. ' range' → logprob: -15.02976131439209
    6. ' ' → logprob: -17.029762268066406
    7. '_result' → logprob: -17.904762268066406
    8. 'results' → logprob: -18.029762268066406
    9. '	result' → logprob: -19.154762268066406
    10. 'Result' → logprob: -19.404762268066406

Token 106: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006288022268563509
    2. ':
' → logprob: -8.125628471374512
    3. '):' → logprob: -8.375628471374512
    4. '<|end|>' → logprob: -10.375628471374512
    5. 'print' → logprob: -10.750628471374512
    6. ':**' → logprob: -11.250628471374512
    7. ')' → logprob: -11.375628471374512
    8. '<|end|>' → logprob: -12.500628471374512
    9. '):
' → logprob: -13.000628471374512
    10. ' :' → logprob: -13.000628471374512

Token 107: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02996719628572464
    2. 'print' → logprob: -3.5299673080444336
    3. ' print' → logprob: -8.654967308044434
    4. '<|end|>' → logprob: -10.529967308044434
    5. '```' → logprob: -12.279967308044434
    6. ' ' → logprob: -12.404967308044434
    7. '	print' → logprob: -12.904967308044434
    8. '       ' → logprob: -13.029967308044434
    9. '    
' → logprob: -14.404967308044434
    10. '
' → logprob: -14.404967308044434

Token 108: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0031992164440453053
    2. ' print' → logprob: -5.753199100494385
    3. '   ' → logprob: -10.753199577331543
    4. '	print' → logprob: -17.378198623657227
    5. 'for' → logprob: -17.753198623657227
    6. '    ' → logprob: -18.128198623657227
    7. '```' → logprob: -19.253198623657227
    8. '<|end|>' → logprob: -19.253198623657227
    9. '    
' → logprob: -19.378198623657227
    10. ' ' → logprob: -19.503198623657227

Token 109: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.0032684993930161
    2. '(' → logprob: -5.753268718719482
    3. '('' → logprob: -9.378268241882324
    4. '("' → logprob: -12.253268241882324
    5. '(*)' → logprob: -14.003268241882324
    6. '(*(' → logprob: -15.253268241882324
    7. ' (*' → logprob: -15.378268241882324
    8. '()' → logprob: -16.25326919555664
    9. '*' → logprob: -17.37826919555664
    10. '((*' → logprob: -17.62826919555664

Token 110: 'row' (ID: 843)
  Prédit: 'row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -5.512236498361744e-07
    2. ' row' → logprob: -14.500000953674316
    3. '(row' → logprob: -21.375
    4. '	row' → logprob: -22.5
    5. '[row' → logprob: -22.625
    6. '$row' → logprob: -23.375
    7. ')' → logprob: -24.625
    8. '_row' → logprob: -25.25
    9. '=row' → logprob: -25.875
    10. ',row' → logprob: -26.25

Token 111: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ')
' → logprob: -14.125001907348633
    3. '<|end|>' → logprob: -15.250001907348633
    4. ' )' → logprob: -15.375001907348633
    5. '),' → logprob: -16.375001907348633
    6. ')}' → logprob: -17.125001907348633
    7. ')`' → logprob: -17.125001907348633
    8. '())' → logprob: -17.625001907348633
    9. '```' → logprob: -17.875001907348633
    10. '))' → logprob: -18.000001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 109
Tokens correctement prédits (1ère position, stricte): 49
Tokens correctement prédits (1ère position, avec adaptation): 53
Tokens correctement prédits (top 10): 96
Précision stricte (1ère position): 44.95%
Précision adaptée (1ère position): 48.62%
Précision (top 10): 88.07%
================================================================================
