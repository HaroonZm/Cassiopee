================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:17:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
for _ in range(n):
    line = input()
    print(line.replace("Hoshino", "Hoshina"))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -9.996708104154095e-05
    2. ''' → logprob: -10.625100135803223
    3. '('' → logprob: -11.125100135803223
    4. '(
' → logprob: -11.125100135803223
    5. '`' → logprob: -11.625100135803223
    6. '(n' → logprob: -11.625100135803223
    7. '()' → logprob: -12.000100135803223
    8. '```' → logprob: -12.250100135803223
    9. '("("' → logprob: -12.250100135803223
    10. '[' → logprob: -13.250100135803223

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0733630508184433
    2. ')' → logprob: -2.8233630657196045
    3. '()' → logprob: -4.698362827301025
    4. '())' → logprob: -6.948362827301025
    5. '```' → logprob: -8.198363304138184
    6. '(
' → logprob: -8.448363304138184
    7. '('' → logprob: -8.948363304138184
    8. '(()' → logprob: -9.073363304138184
    9. '`' → logprob: -9.198363304138184
    10. '("("' → logprob: -9.698363304138184

Token 5: 'for' (ID: 1938)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6515942215919495
    2. 'for' → logprob: -1.4015941619873047
    3. 'i' → logprob: -2.1515941619873047
    4. 's' → logprob: -2.7765941619873047
    5. 'x' → logprob: -4.651594161987305
    6. ')' → logprob: -5.151594161987305
    7. '*' → logprob: -5.401594161987305
    8. 'a' → logprob: -5.401594161987305
    9. ' ' → logprob: -5.651594161987305
    10. 'f' → logprob: -5.901594161987305

Token 6: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04206651449203491
    2. ' i' → logprob: -3.6670665740966797
    3. '  ' → logprob: -4.41706657409668
    4. ' n' → logprob: -5.66706657409668
    5. 'i' → logprob: -10.04206657409668
    6. ' ‌' → logprob: -11.91706657409668
    7. ' ' → logprob: -12.04206657409668
    8. '_' → logprob: -12.04206657409668
    9. ' )' → logprob: -12.16706657409668
    10. ' ,' → logprob: -12.54206657409668

Token 7: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006499601062387228
    2. 'in' → logprob: -5.131499767303467
    3. ' ' → logprob: -7.506499767303467
    4. '  ' → logprob: -11.881499290466309
    5. 'n' → logprob: -12.256499290466309
    6. ',' → logprob: -13.006499290466309
    7. ' n' → logprob: -13.381499290466309
    8. 'range' → logprob: -13.631499290466309
    9. ' ,' → logprob: -13.881499290466309
    10. ' i' → logprob: -14.131499290466309

Token 8: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3868841528892517
    2. ' range' → logprob: -1.1368842124938965
    3. '	range' → logprob: -12.636883735656738
    4. '_range' → logprob: -13.136883735656738
    5. ' ' → logprob: -13.136883735656738
    6. 'n' → logprob: -13.261883735656738
    7. 'in' → logprob: -13.886883735656738
    8. '(range' → logprob: -14.011883735656738
    9. '_' → logprob: -14.511883735656738
    10. ' n' → logprob: -14.761883735656738

Token 9: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04863937199115753
    2. '(n' → logprob: -3.0486392974853516
    3. ' (' → logprob: -9.923639297485352
    4. '(range' → logprob: -13.548639297485352
    5. '(
' → logprob: -14.423639297485352
    6. '((' → logprob: -15.298639297485352
    7. '(in' → logprob: -15.798639297485352
    8. '(`' → logprob: -15.798639297485352
    9. '(len' → logprob: -16.54863929748535
    10. '(m' → logprob: -16.79863929748535

Token 10: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18614575266838074
    2. ')' → logprob: -1.8111457824707031
    3. ':' → logprob: -5.061145782470703
    4. ' ):' → logprob: -11.561145782470703
    5. ':)' → logprob: -11.686145782470703
    6. ' )' → logprob: -12.186145782470703
    7. '):
' → logprob: -12.311145782470703
    8. '+' → logprob: -12.936145782470703
    9. ' :' → logprob: -13.436145782470703
    10. ''):' → logprob: -13.561145782470703

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006164124235510826
    2. '    
' → logprob: -5.381164073944092
    3. ' print' → logprob: -7.256164073944092
    4. ' input' → logprob: -8.13116455078125
    5. '    ' → logprob: -8.75616455078125
    6. 'print' → logprob: -9.25616455078125
    7. '```' → logprob: -9.25616455078125
    8. ' 
' → logprob: -10.00616455078125
    9. ' ' → logprob: -10.38116455078125
    10. 'input' → logprob: -10.63116455078125

Token 12: ' line' (ID: 2543)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15531079471111298
    2. 'print' → logprob: -3.030310869216919
    3. 'x' → logprob: -4.03031063079834
    4. 'name' → logprob: -4.03031063079834
    5. 'data' → logprob: -4.28031063079834
    6. 'a' → logprob: -4.53031063079834
    7. 'line' (adapté à ' line') → logprob: -4.78031063079834
    8. 's' → logprob: -5.28031063079834
    9. 'text' → logprob: -5.40531063079834
    10. 'input' → logprob: -5.90531063079834

Token 13: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.031074101105332375
    2. '=' → logprob: -3.531074047088623
    3. 's' → logprob: -6.781074047088623
    4. ')' → logprob: -10.406074523925781
    5. '   ' → logprob: -10.656074523925781
    6. '_input' → logprob: -10.656074523925781
    7. '_' → logprob: -10.906074523925781
    8. '=line' → logprob: -11.156074523925781
    9. ',' → logprob: -11.281074523925781
    10. ' ' → logprob: -11.406074523925781

Token 14: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.026306800544261932
    2. 'input' → logprob: -3.6513068675994873
    3. ' int' → logprob: -12.526307106018066
    4. '=input' → logprob: -13.526307106018066
    5. 'int' → logprob: -14.151307106018066
    6. ' ' → logprob: -15.151307106018066
    7. '(input' → logprob: -15.651307106018066
    8. '   ' → logprob: -16.15130615234375
    9. ' list' → logprob: -16.52630615234375
    10. '	input' → logprob: -16.77630615234375

Token 15: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2816172242164612
    2. '(' → logprob: -1.4066171646118164
    3. '('' → logprob: -8.531617164611816
    4. ')' → logprob: -9.281617164611816
    5. '().' → logprob: -10.531617164611816
    6. '("("' → logprob: -10.656617164611816
    7. '   ' → logprob: -11.156617164611816
    8. ' ' → logprob: -11.281617164611816
    9. '```' → logprob: -11.281617164611816
    10. ' ()' → logprob: -11.406617164611816

Token 16: '   ' (ID: 271)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6446959376335144
    2. '.split' → logprob: -1.2696959972381592
    3. '   ' → logprob: -2.269695997238159
    4. ' ' → logprob: -3.269695997238159
    5. ' if' → logprob: -4.39469575881958
    6. '.strip' → logprob: -4.76969575881958
    7. ')' → logprob: -5.01969575881958
    8. '    ' → logprob: -5.14469575881958
    9. '[' → logprob: -5.76969575881958
    10. '[:]' → logprob: -5.89469575881958

Token 17: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8291416764259338
    2. ' if' → logprob: -1.079141616821289
    3. 'if' → logprob: -2.079141616821289
    4. 'words' → logprob: -3.454141616821289
    5. 'tokens' → logprob: -4.329141616821289
    6. ' words' → logprob: -4.329141616821289
    7. '    ' → logprob: -4.954141616821289
    8. 'print' (adapté à ' print') → logprob: -5.329141616821289
    9. 'i' → logprob: -5.579141616821289
    10. 's' → logprob: -5.829141616821289

Token 18: '(line' (ID: 18178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1610167771577835
    2. '(line' → logprob: -1.911016821861267
    3. '(len' → logprob: -7.411016941070557
    4. '()' → logprob: -8.911016464233398
    5. '('' → logprob: -10.286016464233398
    6. '("("' → logprob: -12.036016464233398
    7. '(f' → logprob: -12.411016464233398
    8. '("' → logprob: -12.911016464233398
    9. '(
' → logprob: -13.911016464233398
    10. '[line' → logprob: -14.036016464233398

Token 19: '.replace' (ID: 12804)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.421908958349377e-05
    2. '))' → logprob: -9.62507438659668
    3. '`)' → logprob: -12.25007438659668
    4. '')' → logprob: -13.50007438659668
    5. ' )' → logprob: -14.00007438659668
    6. ')`' → logprob: -14.87507438659668
    7. '()' → logprob: -15.00007438659668
    8. '())' → logprob: -15.75007438659668
    9. '")' → logprob: -16.00007438659668
    10. ')))' → logprob: -16.25007438659668

Token 20: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6596536040306091
    2. '('' → logprob: -1.409653663635254
    3. '("' → logprob: -1.909653663635254
    4. '("("' → logprob: -2.409653663635254
    5. '("(' → logprob: -8.159653663635254
    6. '("'"' → logprob: -9.284653663635254
    7. '("'' → logprob: -9.784653663635254
    8. '('(' → logprob: -10.034653663635254
    9. '("."' → logprob: -10.284653663635254
    10. '("""' → logprob: -10.534653663635254

Token 21: 'H' (ID: 39)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.22566626965999603
    2. ''' → logprob: -3.2256662845611572
    3. 'a' → logprob: -3.2256662845611572
    4. '(' → logprob: -3.3506662845611572
    5. '_' → logprob: -4.350666046142578
    6. '"a' → logprob: -5.038166046142578
    7. '("' → logprob: -5.475666046142578
    8. ''a' → logprob: -5.538166046142578
    9. '#' → logprob: -5.913166046142578
    10. '?' → logprob: -5.913166046142578

Token 22: 'osh' (ID: 12601)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -1.367616057395935
    2. 'EL' → logprob: -1.867616057395935
    3. 'H' → logprob: -1.992616057395935
    4. 'E' → logprob: -2.2426161766052246
    5. 'e' → logprob: -2.7426161766052246
    6. 'APPY' → logprob: -2.7426161766052246
    7. 'ello' → logprob: -2.9926161766052246
    8. 'I' → logprob: -3.6176161766052246
    9. 'appy' → logprob: -3.8676161766052246
    10. 'a' → logprob: -4.555116176605225

Token 23: 'ino' (ID: 2081)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04167095571756363
    2. '```' → logprob: -4.541670799255371
    3. 'in' → logprob: -4.916670799255371
    4. 'a' → logprob: -4.916670799255371
    5. 'u' → logprob: -5.541670799255371
    6. '   ' → logprob: -5.916670799255371
    7. 'I' → logprob: -7.041670799255371
    8. 'ino' → logprob: -7.166670799255371
    9. '!' → logprob: -7.416670799255371
    10. 'im' → logprob: -7.416670799255371

Token 24: '",' (ID: 672)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.850884735584259
    2. ' ' → logprob: -0.850884735584259
    3. ' "' → logprob: -3.8508846759796143
    4. ' M' → logprob: -4.225884914398193
    5. '")' → logprob: -4.475884914398193
    6. '   ' → logprob: -4.600884914398193
    7. ''' → logprob: -4.850884914398193
    8. ''s' → logprob: -4.975884914398193
    9. ' Mi' → logprob: -4.975884914398193
    10. 'M' → logprob: -5.350884914398193

Token 25: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1363610476255417
    2. '"H' → logprob: -2.3863611221313477
    3. '"K' → logprob: -4.511361122131348
    4. ' "' → logprob: -5.136361122131348
    5. '""' → logprob: -5.386361122131348
    6. '"M' → logprob: -5.636361122131348
    7. '"S' → logprob: -6.011361122131348
    8. '"A' → logprob: -6.386361122131348
    9. '"T' → logprob: -6.636361122131348
    10. '"I' → logprob: -7.261361122131348

Token 26: 'H' (ID: 39)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -1.4692105054855347
    2. 'H' → logprob: -1.5942105054855347
    3. 'M' → logprob: -2.844210624694824
    4. 'Min' → logprob: -2.969210624694824
    5. 'Hin' → logprob: -2.969210624694824
    6. 'E' → logprob: -3.094210624694824
    7. 'A' → logprob: -3.719210624694824
    8. '"' → logprob: -3.969210624694824
    9. 'Meg' → logprob: -3.969210624694824
    10. 'Y' → logprob: -3.969210624694824

Token 27: 'osh' (ID: 12601)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.467262625694275
    2. 'osh' → logprob: -1.467262625694275
    3. 'ar' → logprob: -2.7797627449035645
    4. 'sh' → logprob: -3.0922627449035645
    5. 'os' → logprob: -3.0922627449035645
    6. ' at' → logprob: -3.4047627449035645
    7. 'a' → logprob: -3.5297627449035645
    8. 'o' → logprob: -3.6547627449035645
    9. 'ina' → logprob: -3.9047627449035645
    10. 'k' → logprob: -4.2797627449035645

Token 28: 'ina' (ID: 1522)
  Prédit: 'ino'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ino' → logprob: -0.06017573922872543
    2. 'i' → logprob: -3.310175657272339
    3. 'in' → logprob: -4.810175895690918
    4. ' ino' → logprob: -5.435175895690918
    5. 'o' → logprob: -5.810175895690918
    6. '```' → logprob: -6.185175895690918
    7. '   ' → logprob: -7.310175895690918
    8. '_' → logprob: -7.935175895690918
    9. 'ina' → logprob: -8.497675895690918
    10. '``' → logprob: -8.685175895690918

Token 29: '"))' (ID: 5063)
  Prédit: '"))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"))' → logprob: -0.0007657911046408117
    2. '")' → logprob: -7.500765800476074
    3. '"))
' → logprob: -9.250765800476074
    4. ' "))' → logprob: -10.375765800476074
    5. 'o' → logprob: -10.500765800476074
    6. 'n' → logprob: -10.875765800476074
    7. '"' → logprob: -11.000765800476074
    8. '))' → logprob: -11.625765800476074
    9. ')' → logprob: -12.750765800476074
    10. 'i' → logprob: -13.750765800476074


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 27
Tokens correctement prédits (1ère position, stricte): 5
Tokens correctement prédits (1ère position, avec adaptation): 5
Tokens correctement prédits (top 10): 19
Précision stricte (1ère position): 18.52%
Précision adaptée (1ère position): 18.52%
Précision (top 10): 70.37%
================================================================================
