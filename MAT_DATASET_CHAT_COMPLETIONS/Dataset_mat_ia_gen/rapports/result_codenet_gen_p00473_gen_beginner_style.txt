================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:14:09
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
t = [int(input()) for _ in range(N-1)]

half = N // 2
min_sum = None

for i in range(1, N):
    for j in range(i+1, N):
        length1 = i
        length2 = j - i
        length3 = N - j
        if length1 == half and length2 == half:
            # Only two pieces in total, so third partition length3==0, check only two cuts here
            cost = t[i-1] + t[j-1]
            if min_sum is None or cost < min_sum:
                min_sum = cost
        elif length1 == half and length3 == half:
            cost = t[i-1] + t[j-1]
            if min_sum is None or cost < min_sum:
                min_sum = cost
        elif length2 == half and length3 == half:
            cost = t[i-1] + t[j-1]
            if min_sum is None or cost < min_sum:
                min_sum = cost

if min_sum is not None:
    print(min_sum)
else:
    # Try just one cut (can that happen? if N/2 is one of the cut positions)
    for i in range(1, N):
        if i == half or N - i == half:
            cost = t[i-1]
            if min_sum is None or cost < min_sum:
                min_sum = cost
    if min_sum is not None:
        print(min_sum)
    else:
        # try all cuts of size half with more cuts, brute force approach
        # try all combinations of cuts that split the candy into pieces of size N/2
        # since problem is beginner level, just output sum of min two cuts for safety
        print(min(t))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003037650021724403
    2. '('' → logprob: -8.500304222106934
    3. '(N' → logprob: -10.000304222106934
    4. '(
' → logprob: -10.875304222106934
    5. '(input' → logprob: -11.250304222106934
    6. ''' → logprob: -12.125304222106934
    7. '("("' → logprob: -12.375304222106934
    8. '```' → logprob: -12.375304222106934
    9. '`' → logprob: -12.750304222106934
    10. '(`' → logprob: -13.000304222106934

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2372170090675354
    2. ')' → logprob: -1.7372169494628906
    3. '()' → logprob: -3.4872169494628906
    4. '())' → logprob: -5.737216949462891
    5. '```' → logprob: -7.987216949462891
    6. '(
' → logprob: -8.23721694946289
    7. '`' → logprob: -9.61221694946289
    8. '(()' → logprob: -9.61221694946289
    9. '("("' → logprob: -9.61221694946289
    10. '")' → logprob: -9.73721694946289

Token 5: 't' (ID: 83)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.477544367313385
    2. 'if' → logprob: -2.3525443077087402
    3. 's' → logprob: -2.7275443077087402
    4. 'a' → logprob: -2.8525443077087402
    5. 'x' → logprob: -3.7275443077087402
    6. 'i' → logprob: -3.7275443077087402
    7. 'f' → logprob: -4.10254430770874
    8. ' ' → logprob: -4.35254430770874
    9. '[' → logprob: -4.47754430770874
    10. ' for' → logprob: -4.85254430770874

Token 6: ' =' (ID: 314)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -1.0188608169555664
    2. '=' → logprob: -1.2688608169555664
    3. 'r' → logprob: -2.0188608169555664
    4. ' =' → logprob: -2.8938608169555664
    5. 'ime' → logprob: -3.2688608169555664
    6. 'imes' → logprob: -3.7688608169555664
    7. 'e' → logprob: -3.8938608169555664
    8. 'i' → logprob: -4.268860816955566
    9. ')' → logprob: -4.268860816955566
    10. 'est' → logprob: -4.393860816955566

Token 7: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.40814146399497986
    2. 'int' → logprob: -2.2831413745880127
    3. ' ' → logprob: -2.4081413745880127
    4. 'input' → logprob: -3.1581413745880127
    5. ' int' → logprob: -3.4081413745880127
    6. ' N' → logprob: -3.7831413745880127
    7. '1' → logprob: -4.158141613006592
    8. 'N' → logprob: -4.158141613006592
    9. ' input' → logprob: -4.908141613006592
    10. '[]' → logprob: -6.158141613006592

Token 8: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.060290224850177765
    2. '0' → logprob: -3.1852903366088867
    3. ']' → logprob: -4.310290336608887
    4. ']int' → logprob: -6.310290336608887
    5. '(int' → logprob: -7.310290336608887
    6. 'i' → logprob: -7.560290336608887
    7. 'input' → logprob: -8.435290336608887
    8. ')' → logprob: -8.560290336608887
    9. '()]' → logprob: -9.060290336608887
    10. ' int' → logprob: -9.310290336608887

Token 9: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21084311604499817
    2. '(input' → logprob: -1.7108430862426758
    3. '(x' → logprob: -4.835843086242676
    4. '()' → logprob: -7.460843086242676
    5. '(i' → logprob: -7.835843086242676
    6. '()]' → logprob: -8.085843086242676
    7. '(a' → logprob: -9.710843086242676
    8. '(
' → logprob: -10.210843086242676
    9. ']' → logprob: -11.085843086242676
    10. '(

' → logprob: -11.460843086242676

Token 10: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0001234428636962548
    2. '()' → logprob: -10.125123023986816
    3. '()))' → logprob: -10.125123023986816
    4. '()]' → logprob: -10.250123023986816
    5. '()),' → logprob: -12.625123023986816
    6. ' ())' → logprob: -13.375123023986816
    7. ')' → logprob: -13.875123023986816
    8. '())
' → logprob: -14.125123023986816
    9. '());' → logprob: -14.625123023986816
    10. '(' → logprob: -15.500123023986816

Token 11: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12191357463598251
    2. ')]' → logprob: -2.2469136714935303
    3. ']' → logprob: -4.746913433074951
    4. '])' → logprob: -9.24691390991211
    5. ')])' → logprob: -9.87191390991211
    6. '`]' → logprob: -10.12191390991211
    7. '']' → logprob: -10.37191390991211
    8. ')
' → logprob: -10.62191390991211
    9. '`)' → logprob: -10.74691390991211
    10. ' )' → logprob: -11.24691390991211

Token 12: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -7.493430894101039e-05
    2. 'range' → logprob: -9.625075340270996
    3. ' ' → logprob: -12.250075340270996
    4. '(range' → logprob: -12.750075340270996
    5. '	range' → logprob: -14.625075340270996
    6. ' xrange' → logprob: -15.125075340270996
    7. ' i' → logprob: -15.750075340270996
    8. '_range' → logprob: -17.00007438659668
    9. ' in' → logprob: -17.25007438659668
    10. ' rango' → logprob: -18.50007438659668

Token 13: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.524411678314209
    2. ' range' → logprob: -1.024411678314209
    3. ' in' → logprob: -3.024411678314209
    4. 'in' → logprob: -7.649411678314209
    5. '	range' → logprob: -11.149412155151367
    6. '(range' → logprob: -12.399412155151367
    7. ' ' → logprob: -12.774412155151367
    8. ' xrange' → logprob: -13.774412155151367
    9. 'ran' → logprob: -14.524412155151367
    10. 'rang' → logprob: -14.649412155151367

Token 14: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02324547804892063
    2. ' range' → logprob: -3.7732455730438232
    3. '	range' → logprob: -17.273244857788086
    4. '(range' → logprob: -17.398244857788086
    5. '_range' → logprob: -19.148244857788086
    6. '.range' → logprob: -19.398244857788086
    7. 'rang' → logprob: -19.648244857788086
    8. '```' → logprob: -19.648244857788086
    9. 'r' → logprob: -20.023244857788086
    10. ' ' → logprob: -21.023244857788086

Token 15: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.018169373273849487
    2. '(' → logprob: -4.018169403076172
    3. '(n' → logprob: -11.143169403076172
    4. '(
' → logprob: -13.018169403076172
    5. '(len' → logprob: -13.643169403076172
    6. 'N' → logprob: -14.018169403076172
    7. ' (' → logprob: -15.518169403076172
    8. ')' → logprob: -15.643169403076172
    9. '(

' → logprob: -16.768169403076172
    10. '(M' → logprob: -17.018169403076172

Token 16: '-' (ID: 12)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00024608144303783774
    2. ')' → logprob: -8.500246047973633
    3. ']' → logprob: -10.375246047973633
    4. ')])' → logprob: -12.375246047973633
    5. '')]' → logprob: -13.000246047973633
    6. ' )' → logprob: -13.375246047973633
    7. '])]' → logprob: -13.500246047973633
    8. '])' → logprob: -14.375246047973633
    9. ')]
' → logprob: -15.000246047973633
    10. '))' → logprob: -15.125246047973633

Token 17: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.983476436696947e-05
    2. ' ' → logprob: -9.375089645385742
    3. ')' → logprob: -12.750089645385742
    4. ')]' → logprob: -13.625089645385742
    5. '2' → logprob: -14.625089645385742
    6. '+' → logprob: -15.750089645385742
    7. '0' → logprob: -16.875089645385742
    8. '))' → logprob: -17.375089645385742
    9. '```' → logprob: -18.375089645385742
    10. ' )' → logprob: -18.375089645385742

Token 18: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0017349174013361335
    2. ']' → logprob: -7.001734733581543
    3. ')' → logprob: -7.126734733581543
    4. ')])' → logprob: -12.126734733581543
    5. '])' → logprob: -12.501734733581543
    6. ' )' → logprob: -12.626734733581543
    7. '])]' → logprob: -12.751734733581543
    8. ')],' → logprob: -13.876734733581543
    9. '')]' → logprob: -14.251734733581543
    10. '`]' → logprob: -14.626734733581543

Token 19: 'half' (ID: 52836)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.250657320022583
    2. 's' → logprob: -1.500657320022583
    3. 't' → logprob: -1.625657320022583
    4. 'print' → logprob: -3.375657320022583
    5. 'c' → logprob: -3.500657320022583
    6. 'for' → logprob: -3.500657320022583
    7. 'm' → logprob: -3.625657320022583
    8. 'a' → logprob: -3.750657320022583
    9. 'x' → logprob: -3.875657320022583
    10. 'p' → logprob: -3.875657320022583

Token 20: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20184890925884247
    2. ' =' → logprob: -1.8268488645553589
    3. '=' → logprob: -4.451848983764648
    4. '_sum' → logprob: -5.701848983764648
    5. '_size' → logprob: -6.201848983764648
    6. '_len' → logprob: -6.576848983764648
    7. '_length' → logprob: -6.701848983764648
    8. 's' → logprob: -7.326848983764648
    9. '_n' → logprob: -8.576848983764648
    10. 'sum' → logprob: -8.701848983764648

Token 21: ' N' (ID: 478)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.5209203362464905
    2. ' (' → logprob: -2.0209202766418457
    3. ' sum' → logprob: -2.0209202766418457
    4. 'len' → logprob: -3.0209202766418457
    5. ' ' → logprob: -3.6459202766418457
    6. '(len' → logprob: -3.6459202766418457
    7. ' N' → logprob: -4.145920276641846
    8. 'sum' → logprob: -4.395920276641846
    9. '(sum' → logprob: -5.520920276641846
    10. ' max' → logprob: -5.520920276641846

Token 22: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.34900107979774475
    2. '//' → logprob: -1.2240010499954224
    3. '#' → logprob: -8.099000930786133
    4. '/' → logprob: -9.724000930786133
    5. ' ' → logprob: -10.224000930786133
    6. '```' → logprob: -10.224000930786133
    7. '`' → logprob: -10.474000930786133
    8. ')' → logprob: -10.849000930786133
    9. ' #' → logprob: -10.974000930786133
    10. ' /' → logprob: -11.849000930786133

Token 23: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.848420551046729e-05
    2. ' ' → logprob: -9.7500581741333
    3. '```' → logprob: -17.000059127807617
    4. '3' → logprob: -17.125059127807617
    5. '   ' → logprob: -18.375059127807617
    6. '  ' → logprob: -18.500059127807617
    7. '=' → logprob: -19.750059127807617
    8. '>' → logprob: -19.875059127807617
    9. '4' → logprob: -20.625059127807617
    10. '２' → logprob: -21.250059127807617

Token 24: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '3' → logprob: -16.125011444091797
    4. '```' → logprob: -18.000011444091797
    5. '  ' → logprob: -18.750011444091797
    6. '1' → logprob: -19.125011444091797
    7. '4' → logprob: -19.500011444091797
    8. '   ' → logprob: -19.625011444091797
    9. '２' → logprob: -20.875011444091797
    10. '10' → logprob: -21.375011444091797

Token 25: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22066441178321838
    2. '+' → logprob: -2.7206645011901855
    3. ' 
' → logprob: -2.9706645011901855
    4. 'for' → logprob: -4.3456645011901855
    5. ' ' → logprob: -4.3456645011901855
    6. '\n' → logprob: -4.8456645011901855
    7. '<|end|>' → logprob: -5.0956645011901855
    8. ')' → logprob: -5.4706645011901855
    9. 'if' → logprob: -5.4706645011901855
    10. ' for' → logprob: -5.5956645011901855

Token 26: 'min' (ID: 1493)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8641824722290039
    2. 'sum' → logprob: -2.239182472229004
    3. 'if' → logprob: -2.489182472229004
    4. 'ans' → logprob: -3.114182472229004
    5. 'count' → logprob: -3.239182472229004
    6. 'result' → logprob: -3.239182472229004
    7. 's' → logprob: -3.364182472229004
    8. ' for' → logprob: -3.614182472229004
    9. 'dp' → logprob: -3.989182472229004
    10. 'min' → logprob: -4.489182472229004

Token 27: '_sum' (ID: 29859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5341469645500183
    2. '_val' → logprob: -1.284147024154663
    3. '_time' → logprob: -3.034147024154663
    4. '_value' → logprob: -3.659147024154663
    5. '_t' → logprob: -3.909147024154663
    6. '_diff' → logprob: -4.409146785736084
    7. '_cost' → logprob: -4.659146785736084
    8. '_sum' → logprob: -5.534146785736084
    9. '_idx' → logprob: -5.534146785736084
    10. 's' → logprob: -5.909146785736084

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.017910165712237358
    2. '=' → logprob: -4.267910003662109
    3. '_' → logprob: -5.642910003662109
    4. ' ' → logprob: -9.39291000366211
    5. ',' → logprob: -9.89291000366211
    6. ' _' → logprob: -10.64291000366211
    7. '_=' → logprob: -11.14291000366211
    8. '_idx' → logprob: -12.01791000366211
    9. 's' → logprob: -12.64291000366211
    10. ')' → logprob: -13.01791000366211

Token 29: ' None' (ID: 4662)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.5153883695602417
    2. ' float' → logprob: -1.2653883695602417
    3. '10' → logprob: -2.7653884887695312
    4. ' ' → logprob: -3.8903884887695312
    5. 'sum' → logprob: -4.015388488769531
    6. ' sum' → logprob: -5.515388488769531
    7. '0' → logprob: -5.640388488769531
    8. 'min' → logprob: -5.890388488769531
    9. ' min' → logprob: -5.890388488769531
    10. '100' → logprob: -6.515388488769531

Token 30: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2546354830265045
    2. '
' → logprob: -2.0046355724334717
    3. ' for' → logprob: -2.7546355724334717
    4. ' ' → logprob: -5.129635334014893
    5. '=' → logprob: -5.629635334014893
    6. 'sum' → logprob: -5.754635334014893
    7. '<|end|>' → logprob: -5.879635334014893
    8. ' 
' → logprob: -6.004635334014893
    9. '\n' → logprob: -6.379635334014893
    10. ' =' → logprob: -6.629635334014893

Token 31: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013054460287094116
    2. ' for' → logprob: -4.388054370880127
    3. 'sum' → logprob: -7.888054370880127
    4. '
' → logprob: -9.763054847717285
    5. 'total' → logprob: -10.388054847717285
    6. 's' → logprob: -10.638054847717285
    7. '```' → logprob: -11.263054847717285
    8. 'current' → logprob: -11.888054847717285
    9. 'if' → logprob: -12.013054847717285
    10. 'result' → logprob: -12.138054847717285

Token 32: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0024754200130701065
    2. 'i' → logprob: -6.627475261688232
    3. ' _' → logprob: -7.127475261688232
    4. '_' → logprob: -9.25247573852539
    5. ' ' → logprob: -9.50247573852539
    6. ' d' → logprob: -9.87747573852539
    7. ' x' → logprob: -10.50247573852539
    8. ' j' → logprob: -11.50247573852539
    9. '_i' → logprob: -11.62747573852539
    10. ' a' → logprob: -11.75247573852539

Token 33: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0706731379032135
    2. 'in' → logprob: -2.6956732273101807
    3. 'n' → logprob: -7.695672988891602
    4. ' ' → logprob: -8.320672988891602
    5. ' n' → logprob: -11.195672988891602
    6. '  ' → logprob: -12.320672988891602
    7. '	in' → logprob: -12.320672988891602
    8. ' i' → logprob: -13.070672988891602
    9. ')' → logprob: -13.070672988891602
    10. '0' → logprob: -13.445672988891602

Token 34: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0013742801966145635
    2. 'range' → logprob: -6.626374244689941
    3. ' ' → logprob: -10.751374244689941
    4. '	range' → logprob: -12.001374244689941
    5. ' ran' → logprob: -12.126374244689941
    6. ' ra' → logprob: -12.751374244689941
    7. ' t' → logprob: -13.126374244689941
    8. ' xrange' → logprob: -13.251374244689941
    9. ' r' → logprob: -13.501374244689941
    10. 't' → logprob: -13.626374244689941

Token 35: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02936508134007454
    2. '(N' → logprob: -3.654365062713623
    3. ' (' → logprob: -6.029365062713623
    4. ' half' → logprob: -8.029365539550781
    5. '(n' → logprob: -9.154365539550781
    6. ' ' → logprob: -9.654365539550781
    7. '(i' → logprob: -10.029365539550781
    8. ' N' → logprob: -10.404365539550781
    9. '(len' → logprob: -10.404365539550781
    10. '(range' → logprob: -11.029365539550781

Token 36: '1' (ID: 16)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.5289745330810547
    2. 'N' → logprob: -1.0289745330810547
    3. '1' → logprob: -3.1539745330810547
    4. ' half' → logprob: -5.278974533081055
    5. ' N' → logprob: -6.028974533081055
    6. 'len' → logprob: -7.028974533081055
    7. '0' → logprob: -7.153974533081055
    8. '2' → logprob: -7.528974533081055
    9. 'hal' → logprob: -7.903974533081055
    10. ')' → logprob: -8.403974533081055

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023454055190086365
    2. ' ,' → logprob: -3.773453950881958
    3. ',N' → logprob: -8.523453712463379
    4. ' ' → logprob: -12.648453712463379
    5. ' N' → logprob: -12.898453712463379
    6. 'N' → logprob: -13.398453712463379
    7. ',len' → logprob: -14.273453712463379
    8. '+' → logprob: -14.898453712463379
    9. ' +' → logprob: -15.148453712463379
    10. '

' → logprob: -15.273453712463379

Token 38: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5480475425720215
    2. 'half' → logprob: -1.0480475425720215
    3. ' N' → logprob: -3.2980475425720215
    4. ' half' → logprob: -3.4230475425720215
    5. 'len' → logprob: -6.6730475425720215
    6. 'hal' → logprob: -8.79804801940918
    7. ' len' → logprob: -9.04804801940918
    8. ' ' → logprob: -10.04804801940918
    9. '   ' → logprob: -10.79804801940918
    10. ')' → logprob: -10.92304801940918

Token 39: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006402238737791777
    2. '):
' → logprob: -5.506402015686035
    3. '-' → logprob: -6.631402015686035
    4. ' ):' → logprob: -7.381402015686035
    5. '+' → logprob: -8.131402015686035
    6. ')' → logprob: -10.256402015686035
    7. ' -' → logprob: -10.756402015686035
    8. '//' → logprob: -11.381402015686035
    9. '):
' → logprob: -11.881402015686035
    10. ':' → logprob: -13.256402015686035

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11987346410751343
    2. ' sum' → logprob: -2.869873523712158
    3. ' ' → logprob: -4.119873523712158
    4. '<|end|>' → logprob: -4.119873523712158
    5. ' if' → logprob: -4.744873523712158
    6. ' s' → logprob: -4.869873523712158
    7. 'sum' → logprob: -6.119873523712158
    8. ' for' → logprob: -6.994873523712158
    9. '    ' → logprob: -7.494873523712158
    10. '  ' → logprob: -7.619873523712158

Token 41: ' for' (ID: 395)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9442095160484314
    2. ' sum' → logprob: -1.1942095756530762
    3. ' current' → logprob: -2.569209575653076
    4. ' s' → logprob: -2.569209575653076
    5. 'sum' → logprob: -3.069209575653076
    6. ' for' → logprob: -3.444209575653076
    7. ' total' → logprob: -3.819209575653076
    8. ' min' → logprob: -4.444209575653076
    9. '   ' → logprob: -4.444209575653076
    10. 'if' → logprob: -4.819209575653076

Token 42: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.03295018523931503
    2. ' range' → logprob: -3.6579501628875732
    3. 'j' → logprob: -6.032950401306152
    4. ' r' → logprob: -6.282950401306152
    5. ' ' → logprob: -6.907950401306152
    6. 'range' → logprob: -7.907950401306152
    7. ' s' → logprob: -8.407950401306152
    8. ' i' → logprob: -8.907950401306152
    9. ' N' → logprob: -9.032950401306152
    10. ' t' → logprob: -9.407950401306152

Token 43: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0005888947052881122
    2. 'in' → logprob: -7.500588893890381
    3. ' ' → logprob: -10.750589370727539
    4. 'range' → logprob: -12.625589370727539
    5. '(' → logprob: -13.125589370727539
    6. '   ' → logprob: -13.250589370727539
    7. '    ' → logprob: -13.500589370727539
    8. ' i' → logprob: -13.750589370727539
    9. ' range' → logprob: -13.875589370727539
    10. '<|end|>' → logprob: -14.375589370727539

Token 44: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.00864175520837307
    2. 'range' → logprob: -4.758641719818115
    3. ' ' → logprob: -11.508642196655273
    4. '(range' → logprob: -12.383642196655273
    5. ' i' → logprob: -12.633642196655273
    6. ' ran' → logprob: -12.758642196655273
    7. '  ' → logprob: -13.008642196655273
    8. '   ' → logprob: -14.258642196655273
    9. '	range' → logprob: -14.258642196655273
    10. ' r' → logprob: -14.383642196655273

Token 45: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.07042574137449265
    2. '(' → logprob: -2.6954257488250732
    3. '(N' → logprob: -8.445425987243652
    4. '(range' → logprob: -8.820425987243652
    5. '(j' → logprob: -9.445425987243652
    6. '((' → logprob: -11.570425987243652
    7. ')' → logprob: -12.070425987243652
    8. '(I' → logprob: -12.320425987243652
    9. 'range' → logprob: -12.445425987243652
    10. '(s' → logprob: -12.695425987243652

Token 46: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3607523441314697
    2. ',' → logprob: -1.6107523441314697
    3. ' +' → logprob: -2.3607523441314697
    4. ' ,' → logprob: -4.985752105712891
    5. ',N' → logprob: -6.860752105712891
    6. '+,' → logprob: -7.360752105712891
    7. '   ' → logprob: -9.73575210571289
    8. '+i' → logprob: -10.23575210571289
    9. '1' → logprob: -10.36075210571289
    10. ',n' → logprob: -10.86075210571289

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002969703928101808
    2. ' ' → logprob: -8.125296592712402
    3. '   ' → logprob: -14.875296592712402
    4. ',' → logprob: -15.000296592712402
    5. 'N' → logprob: -16.62529754638672
    6. '<|end|>' → logprob: -16.75029754638672
    7. '  ' → logprob: -17.00029754638672
    8. ')' → logprob: -17.25029754638672
    9. '+' → logprob: -17.37529754638672
    10. ' N' → logprob: -17.62529754638672

Token 48: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008280907059088349
    2. ' ,' → logprob: -7.125828266143799
    3. ',N' → logprob: -11.25082778930664
    4. '(),' → logprob: -11.62582778930664
    5. '(N' → logprob: -15.37582778930664
    6. ',n' → logprob: -15.50082778930664
    7. '‌,' → logprob: -15.50082778930664
    8. '<|end|>' → logprob: -15.50082778930664
    9. '`,' → logprob: -15.75082778930664
    10. '```' → logprob: -16.37582778930664

Token 49: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.6327531337738037
    2. 'N' → logprob: -0.7577531337738037
    3. '   ' → logprob: -9.757753372192383
    4. ' ' → logprob: -9.757753372192383
    5. '    ' → logprob: -10.632753372192383
    6. ')' → logprob: -12.507753372192383
    7. '	N' → logprob: -12.632753372192383
    8. '  ' → logprob: -13.507753372192383
    9. '+' → logprob: -13.632753372192383
    10. 'n' → logprob: -14.320253372192383

Token 50: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3008798062801361
    2. '+' → logprob: -1.5508798360824585
    3. '):
' → logprob: -3.050879716873169
    4. ' +' → logprob: -8.67587947845459
    5. ' ):' → logprob: -9.05087947845459
    6. ':' → logprob: -9.67587947845459
    7. '   ' → logprob: -10.30087947845459
    8. '):
' → logprob: -10.80087947845459
    9. ')' → logprob: -10.92587947845459
    10. '+:' → logprob: -11.05087947845459

Token 51: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2854556143283844
    2. '<|end|>' → logprob: -2.5354557037353516
    3. ':' → logprob: -2.7854557037353516
    4. ' ' → logprob: -2.9104557037353516
    5. '    ' → logprob: -3.2854557037353516
    6. '   ' → logprob: -5.160455703735352
    7. '        ' → logprob: -6.160455703735352
    8. ')' → logprob: -6.285455703735352
    9. '        
' → logprob: -6.910455703735352
    10. ' 
' → logprob: -7.035455703735352

Token 52: ' length' (ID: 5517)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1229798793792725
    2. ' if' → logprob: -1.1229798793792725
    3. ' ' → logprob: -1.3729798793792725
    4. '       ' → logprob: -3.7479798793792725
    5. 'if' → logprob: -4.497980117797852
    6. '   ' → logprob: -4.622980117797852
    7. ' s' → logprob: -4.622980117797852
    8. '    ' → logprob: -4.872980117797852
    9. ' sum' → logprob: -4.872980117797852
    10. '<|end|>' → logprob: -4.997980117797852

Token 53: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1294880509376526
    2. '=' → logprob: -2.379487991333008
    3. 's' → logprob: -4.004487991333008
    4. '_' → logprob: -4.879487991333008
    5. '_sum' → logprob: -6.254487991333008
    6. '   ' → logprob: -8.254487991333008
    7. '1' → logprob: -8.629487991333008
    8. '_s' → logprob: -8.879487991333008
    9. ')' → logprob: -9.129487991333008
    10. ' ' → logprob: -9.254487991333008

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016110146418213844
    2. '=' → logprob: -4.141109943389893
    3. ' ' → logprob: -10.01611042022705
    4. 's' → logprob: -11.51611042022705
    5. ',' → logprob: -11.51611042022705
    6. '_' → logprob: -12.51611042022705
    7. ')' → logprob: -13.01611042022705
    8. '_sum' → logprob: -13.26611042022705
    9. '1' → logprob: -14.51611042022705
    10. '   ' → logprob: -15.01611042022705

Token 55: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.0463404655456543
    2. 't' → logprob: -1.1713404655456543
    3. ' t' → logprob: -1.7963404655456543
    4. ' j' → logprob: -2.1713404655456543
    5. 'i' → logprob: -3.9213404655456543
    6. 'sum' → logprob: -3.9213404655456543
    7. ' sum' → logprob: -5.046340465545654
    8. ' i' → logprob: -5.171340465545654
    9. 'abs' → logprob: -5.296340465545654
    10. ' abs' → logprob: -6.546340465545654

Token 56: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 58: ' length' (ID: 5517)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.029270052909851
    2. '+' → logprob: -1.404270052909851
    3. 'length' (adapté à ' length') → logprob: -1.654270052909851
    4. '<|end|>' → logprob: -2.0292701721191406
    5. ' length' → logprob: -3.4042701721191406
    6. '-length' → logprob: -4.404270172119141
    7. ' -' → logprob: -4.654270172119141
    8. '<|end|>' → logprob: -5.404270172119141
    9. '       ' → logprob: -5.904270172119141
    10. ')' → logprob: -6.154270172119141

Token 59: '2' (ID: 17)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3291129767894745
    2. '2' → logprob: -1.8291130065917969
    3. '1' → logprob: -3.329113006591797
    4. '+' → logprob: -3.829113006591797
    5. ' =' → logprob: -3.954113006591797
    6. '-' → logprob: -3.954113006591797
    7. '=' → logprob: -4.079113006591797
    8. ' +' → logprob: -5.204113006591797
    9. ' ' → logprob: -7.579113006591797
    10. '   ' → logprob: -8.704113006591797

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0032116996590048075
    2. '=' → logprob: -5.753211498260498
    3. ' ' → logprob: -10.628211975097656
    4. ' -' → logprob: -11.878211975097656
    5. '    ' → logprob: -14.503211975097656
    6. '=j' → logprob: -14.503211975097656
    7. '-' → logprob: -14.753211975097656
    8. '   ' → logprob: -14.753211975097656
    9. ')' → logprob: -15.253211975097656
    10. '<|end|>' → logprob: -15.378211975097656

Token 61: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.2543891966342926
    2. 'j' → logprob: -1.5043891668319702
    3. ' N' → logprob: -6.37938928604126
    4. 'N' → logprob: -7.75438928604126
    5. ' ' → logprob: -9.379388809204102
    6. '   ' → logprob: -10.004388809204102
    7. ' (' → logprob: -10.254388809204102
    8. '    ' → logprob: -10.254388809204102
    9. '	j' → logprob: -10.629388809204102
    10. '[j' → logprob: -11.316888809204102

Token 62: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.8108354210853577
    2. '<|end|>' → logprob: -0.8108354210853577
    3. '-' → logprob: -2.560835361480713
    4. '       ' → logprob: -4.060835361480713
    5. ' ' → logprob: -4.560835361480713
    6. '<|end|>' → logprob: -6.185835361480713
    7. '   ' → logprob: -6.560835361480713
    8. '        ' → logprob: -7.685835361480713
    9. ')' → logprob: -8.060835838317871
    10. '
' → logprob: -8.560835838317871

Token 63: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.000593543634749949
    2. ' i' → logprob: -7.500593662261963
    3. 'length' → logprob: -10.375593185424805
    4. '<|end|>' → logprob: -11.875593185424805
    5. '<|end|>' → logprob: -14.250593185424805
    6. '1' → logprob: -14.375593185424805
    7. ' length' → logprob: -14.625593185424805
    8. ' ' → logprob: -15.375593185424805
    9. '	i' → logprob: -15.750593185424805
    10. 'user' → logprob: -16.375593185424805

Token 64: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 65: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 66: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.24082301557064056
    2. 'length' (adapté à ' length') → logprob: -1.6158230304718018
    3. '       ' → logprob: -4.990822792053223
    4. 'rest' → logprob: -5.990822792053223
    5. ' rest' → logprob: -6.115822792053223
    6. ' sum' → logprob: -7.365822792053223
    7. 'sum' → logprob: -7.865822792053223
    8. ' remainder' → logprob: -7.865822792053223
    9. 'remaining' → logprob: -8.240822792053223
    10. ' if' → logprob: -8.240822792053223

Token 67: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0009933913825079799
    2. ' =' → logprob: -7.500993251800537
    3. 's' → logprob: -8.625993728637695
    4. '=' → logprob: -9.250993728637695
    5. ' ' → logprob: -9.750993728637695
    6. '2' → logprob: -10.625993728637695
    7. '<|end|>' → logprob: -11.250993728637695
    8. '1' → logprob: -11.500993728637695
    9. '_' → logprob: -11.500993728637695
    10. '   ' → logprob: -11.750993728637695

Token 68: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008620131760835648
    2. '=' → logprob: -4.758620262145996
    3. ' ' → logprob: -12.758620262145996
    4. '<|end|>' → logprob: -13.383620262145996
    5. '   ' → logprob: -15.133620262145996
    6. ')' → logprob: -15.258620262145996
    7. '```' → logprob: -16.00861930847168
    8. 's' → logprob: -16.00861930847168
    9. '<|end|>' → logprob: -16.13361930847168
    10. ',' → logprob: -16.88361930847168

Token 69: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.4287691116333008
    2. ' N' → logprob: -1.0537691116333008
    3. ' ' → logprob: -10.3037691116333
    4. '`' → logprob: -11.5537691116333
    5. '	N' → logprob: -12.0537691116333
    6. '   ' → logprob: -12.0537691116333
    7. ' ' → logprob: -13.0537691116333
    8. '>N' → logprob: -13.0537691116333
    9. '    ' → logprob: -13.4287691116333
    10. '       ' → logprob: -13.6787691116333

Token 70: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07942923903465271
    2. '-' → logprob: -2.5794291496276855
    3. '-j' → logprob: -7.5794291496276855
    4. '<|end|>' → logprob: -11.204429626464844
    5. ' ' → logprob: -12.204429626464844
    6. '<|end|>' → logprob: -13.454429626464844
    7. '   ' → logprob: -13.704429626464844
    8. '−' → logprob: -13.829429626464844
    9. ' –' → logprob: -13.954429626464844
    10. '-i' → logprob: -14.454429626464844

Token 71: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.005258303135633469
    2. ' j' → logprob: -5.255258083343506
    3. '<|end|>' → logprob: -11.380258560180664
    4. '	j' → logprob: -11.755258560180664
    5. '   ' → logprob: -13.630258560180664
    6. '<|end|>' → logprob: -14.380258560180664
    7. '$j' → logprob: -14.880258560180664
    8. '       ' → logprob: -15.005258560180664
    9. '/j' → logprob: -15.130258560180664
    10. '    ' → logprob: -15.255258560180664

Token 72: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1649983525276184
    2. '<|end|>' → logprob: -2.9149982929229736
    3. '       ' → logprob: -3.1649982929229736
    4. ' 
' → logprob: -3.7899982929229736
    5. '        
' → logprob: -3.9149982929229736
    6. '  
' → logprob: -5.289998531341553
    7. ' ' → logprob: -6.414998531341553
    8. '    
' → logprob: -6.664998531341553
    9. '   ' → logprob: -6.789998531341553
    10. '<|end|>' → logprob: -7.289998531341553

Token 73: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9262566566467285
    2. 'sum' → logprob: -1.5512566566467285
    3. '        
' → logprob: -1.8012566566467285
    4. '       ' → logprob: -2.4262566566467285
    5. ' if' → logprob: -3.3012566566467285
    6. 'if' (adapté à ' if') → logprob: -3.4262566566467285
    7. ' 
' → logprob: -4.3012566566467285
    8. ' sum' → logprob: -4.5512566566467285
    9. 'total' → logprob: -5.3012566566467285
    10. 's' → logprob: -5.3012566566467285

Token 75: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.05410663038492203
    2. ' min' → logprob: -3.3041067123413086
    3. ' abs' → logprob: -4.929106712341309
    4. 'length' → logprob: -5.554106712341309
    5. ' t' → logprob: -6.804106712341309
    6. ' half' → logprob: -6.929106712341309
    7. ' (' → logprob: -7.054106712341309
    8. ' max' → logprob: -7.679106712341309
    9. ' not' → logprob: -7.929106712341309
    10. '(length' → logprob: -8.179106712341309

Token 76: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0014436879428103566
    2. '3' → logprob: -7.626443862915039
    3. ' ' → logprob: -7.626443862915039
    4. '2' → logprob: -9.501443862915039
    5. ' >' → logprob: -9.501443862915039
    6. ' ==' → logprob: -9.751443862915039
    7. ' >=' → logprob: -9.813943862915039
    8. '>' → logprob: -10.001443862915039
    9. '_' → logprob: -10.563943862915039
    10. '```' → logprob: -10.751443862915039

Token 77: ' ==' (ID: 951)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.061316728591919
    2. ' ==' → logprob: -1.561316728591919
    3. ' >' → logprob: -2.186316728591919
    4. ' <=' → logprob: -2.186316728591919
    5. ' >=' → logprob: -2.436316728591919
    6. '+' → logprob: -3.061316728591919
    7. '==' → logprob: -3.436316728591919
    8. '>' → logprob: -3.686316728591919
    9. '>=' → logprob: -4.81131649017334
    10. '<=' → logprob: -5.06131649017334

Token 78: ' half' (ID: 6375)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.350067138671875
    2. 'length' → logprob: -1.600067138671875
    3. ' half' → logprob: -2.475067138671875
    4. 'half' → logprob: -4.850067138671875
    5. ' ' → logprob: -6.850067138671875
    6. '0' → logprob: -9.225067138671875
    7. '1' → logprob: -9.600067138671875
    8. 'hal' → logprob: -10.287567138671875
    9. 'ength' → logprob: -10.412567138671875
    10. '2' → logprob: -10.412567138671875

Token 79: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.28972870111465454
    2. ' or' → logprob: -1.4147286415100098
    3. 'and' → logprob: -5.16472864151001
    4. ':' → logprob: -6.41472864151001
    5. '<|end|>' → logprob: -6.91472864151001
    6. ' ' → logprob: -9.289729118347168
    7. 'or' → logprob: -9.664729118347168
    8. '<|end|>' → logprob: -10.664729118347168
    9. ':
' → logprob: -12.789729118347168
    10. '    ' → logprob: -13.289729118347168

Token 80: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.034892551600933075
    2. 'length' → logprob: -3.5348925590515137
    3. ' (' → logprob: -5.659892559051514
    4. '(length' → logprob: -6.659892559051514
    5. ' ' → logprob: -9.034892082214355
    6. ' not' → logprob: -9.909892082214355
    7. '(' → logprob: -10.159892082214355
    8. ' max' → logprob: -10.409892082214355
    9. '    ' → logprob: -10.659892082214355
    10. ' abs' → logprob: -10.784892082214355

Token 81: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03921239823102951
    2. '3' → logprob: -3.289212465286255
    3. '1' → logprob: -7.664212226867676
    4. ' ' → logprob: -8.414212226867676
    5. '_sum' → logprob: -8.914212226867676
    6. '_' → logprob: -9.664212226867676
    7. '```' → logprob: -10.601712226867676
    8. 's' → logprob: -10.601712226867676
    9. '   ' → logprob: -10.664212226867676
    10. 'sum' → logprob: -10.789212226867676

Token 82: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.05506158247590065
    2. '==' → logprob: -2.9300615787506104
    3. ' ' → logprob: -9.680061340332031
    4. ' >=' → logprob: -9.805061340332031
    5. ' <=' → logprob: -10.680061340332031
    6. '<|end|>' → logprob: -10.680061340332031
    7. '>=' → logprob: -12.680061340332031
    8. '<|end|>' → logprob: -13.305061340332031
    9. ' >' → logprob: -13.680061340332031
    10. '=' → logprob: -13.805061340332031

Token 83: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.22762584686279297
    2. ' half' → logprob: -1.602625846862793
    3. 'length' → logprob: -6.602625846862793
    4. ' length' → logprob: -7.352625846862793
    5. 'hal' → logprob: -8.977625846862793
    6. ' ' → logprob: -10.227625846862793
    7. '1' → logprob: -11.477625846862793
    8. '_half' → logprob: -12.352625846862793
    9. 'halb' → logprob: -12.415125846862793
    10. 'h' → logprob: -12.915125846862793

Token 84: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08719569444656372
    2. 'and' → logprob: -2.837195634841919
    3. ':' → logprob: -4.087195873260498
    4. ' or' → logprob: -4.962195873260498
    5. '<|end|>' → logprob: -7.587195873260498
    6. ' ' → logprob: -8.83719539642334
    7. ':
' → logprob: -9.21219539642334
    8. 'or' → logprob: -9.58719539642334
    9. '<|end|>' → logprob: -9.96219539642334
    10. ' :' → logprob: -10.08719539642334

Token 85: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22751761972904205
    2. ' and' → logprob: -2.227517604827881
    3. ' or' → logprob: -2.852517604827881
    4. ':' → logprob: -3.602517604827881
    5. '       ' → logprob: -5.102517604827881
    6. '               ' → logprob: -6.727517604827881
    7. '   ' → logprob: -6.977517604827881
    8. 'and' → logprob: -7.352517604827881
    9. ' ' → logprob: -7.977517604827881
    10. ' :' → logprob: -8.602518081665039

Token 86: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.158225417137146
    2. ' min' → logprob: -1.658225417137146
    3. ' continue' → logprob: -1.783225417137146
    4. 'continue' → logprob: -1.783225417137146
    5. 'min' → logprob: -2.7832255363464355
    6. 'sum' → logprob: -3.6582255363464355
    7. ' if' → logprob: -4.1582255363464355
    8. '   ' → logprob: -4.2832255363464355
    9. ' sum' → logprob: -4.4082255363464355
    10. 'if' → logprob: -4.7832255363464355

Token 87: ' Only' (ID: 12817)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.14435423910617828
    2. 'min' → logprob: -2.6443543434143066
    3. ' continue' → logprob: -3.5193543434143066
    4. '           ' → logprob: -4.769354343414307
    5. 'continue' → logprob: -4.894354343414307
    6. ' if' → logprob: -5.269354343414307
    7. ' pass' → logprob: -5.394354343414307
    8. ' sum' → logprob: -6.269354343414307
    9. '   ' → logprob: -6.769354343414307
    10. 'if' → logprob: -7.144354343414307

Token 88: ' two' (ID: 1920)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.4945043921470642
    2. 'continue' → logprob: -1.619504451751709
    3. ' if' → logprob: -2.994504451751709
    4. 'print' → logprob: -3.619504451751709
    5. 'if' → logprob: -3.869504451751709
    6. ' check' → logprob: -4.494504451751709
    7. ' print' → logprob: -4.619504451751709
    8. 'length' → logprob: -4.994504451751709
    9. 'consider' → logprob: -4.994504451751709
    10. ' update' → logprob: -5.119504451751709

Token 89: ' pieces' (ID: 12762)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.1119502782821655
    2. '           ' → logprob: -1.4869502782821655
    3. 'continue' → logprob: -1.9869502782821655
    4. ' parts' → logprob: -2.361950397491455
    5. '               ' → logprob: -2.486950397491455
    6. ' segments' → logprob: -2.736950397491455
    7. ' break' → logprob: -4.361950397491455
    8. ' continues' → logprob: -4.861950397491455
    9. 'segments' → logprob: -4.861950397491455
    10. ' lengths' → logprob: -5.236950397491455

Token 90: ' in' (ID: 306)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.30300694704055786
    2. '               ' → logprob: -1.428006887435913
    3. '       ' → logprob: -4.303007125854492
    4. ':' → logprob: -5.678007125854492
    5. ' continue' → logprob: -6.678007125854492
    6. '<|end|>' → logprob: -6.928007125854492
    7. ',' → logprob: -7.428007125854492
    8. 'continue' → logprob: -7.553007125854492
    9. '   ' → logprob: -8.303007125854492
    10. '<|end|>' → logprob: -8.428007125854492

Token 91: ' total' (ID: 3609)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.1346935033798218
    2. 'the' → logprob: -1.5096935033798218
    3. ' total' → logprob: -2.1346936225891113
    4. 'this' → logprob: -2.2596936225891113
    5. ' this' → logprob: -2.3846936225891113
    6. 'total' → logprob: -2.3846936225891113
    7. 't' → logprob: -4.259693622589111
    8. 'length' → logprob: -4.384693622589111
    9. ' length' → logprob: -5.384693622589111
    10. ' t' → logprob: -6.134693622589111

Token 92: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09832692891359329
    2. '               ' → logprob: -2.9733269214630127
    3. '       ' → logprob: -4.223327159881592
    4. ':' → logprob: -4.723327159881592
    5. ' continue' → logprob: -4.848327159881592
    6. 'continue' → logprob: -5.223327159881592
    7. '   ' → logprob: -5.848327159881592
    8. ',' → logprob: -7.473327159881592
    9. ' continues' → logprob: -7.848327159881592
    10. '.' → logprob: -7.848327159881592

Token 93: ' so' (ID: 813)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.4429164528846741
    2. '               ' → logprob: -1.9429163932800293
    3. 'continue' → logprob: -2.4429163932800293
    4. '           ' → logprob: -2.4429163932800293
    5. ' break' → logprob: -3.4429163932800293
    6. '   ' → logprob: -5.192916393280029
    7. '       ' → logprob: -6.817916393280029
    8. 'break' → logprob: -7.317916393280029
    9. '	continue' → logprob: -7.942916393280029
    10. ' ' → logprob: -8.442916870117188

Token 94: ' third' (ID: 6914)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.1313491016626358
    2. 'continue' → logprob: -3.1313490867614746
    3. ' break' → logprob: -3.6313490867614746
    4. '           ' → logprob: -4.131349086761475
    5. '               ' → logprob: -4.381349086761475
    6. ' min' → logprob: -4.506349086761475
    7. ' length' → logprob: -5.006349086761475
    8. '   ' → logprob: -6.256349086761475
    9. ' minimum' → logprob: -7.756349086761475
    10. ' the' → logprob: -7.881349086761475

Token 95: ' partition' (ID: 31512)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.672646701335907
    2. ' continue' → logprob: -1.5476467609405518
    3. ' continues' → logprob: -2.1726467609405518
    4. 'continue' → logprob: -3.0476467609405518
    5. '==' → logprob: -3.2976467609405518
    6. ' is' → logprob: -3.5476467609405518
    7. '=' → logprob: -3.9226467609405518
    8. ' =' → logprob: -4.797646522521973
    9. ' ' → logprob: -4.922646522521973
    10. '           ' → logprob: -6.172646522521973

Token 96: ' length' (ID: 5517)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4105219841003418
    2. ' is' → logprob: -2.160521984100342
    3. ' continue' → logprob: -2.660521984100342
    4. ' ==' → logprob: -3.160521984100342
    5. ' =' → logprob: -3.285521984100342
    6. '=' → logprob: -4.035521984100342
    7. ' continues' → logprob: -4.160521984100342
    8. '               ' → logprob: -4.660521984100342
    9. ' ' → logprob: -4.785521984100342
    10. 'continue' → logprob: -4.785521984100342

Token 97: '3' (ID: 18)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4352613389492035
    2. '==' → logprob: -1.1852613687515259
    3. ' !=' → logprob: -4.060261249542236
    4. '=' → logprob: -5.060261249542236
    5. ' is' → logprob: -5.060261249542236
    6. ' must' → logprob: -5.310261249542236
    7. '           ' → logprob: -5.560261249542236
    8. '!=' → logprob: -5.935261249542236
    9. ' =' → logprob: -6.435261249542236
    10. ' ' → logprob: -6.935261249542236

Token 98: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4944843053817749
    2. '           ' → logprob: -1.744484305381775
    3. ' is' → logprob: -2.4944844245910645
    4. '==' → logprob: -3.2444844245910645
    5. '=' → logprob: -3.4944844245910645
    6. ' continue' → logprob: -3.9944844245910645
    7. ' =' → logprob: -3.9944844245910645
    8. ' ' → logprob: -4.9944844245910645
    9. ' continues' → logprob: -5.1194844245910645
    10. ' !=' → logprob: -5.9944844245910645

Token 99: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14279711246490479
    2. ' ' → logprob: -2.0177969932556152
    3. ' ' → logprob: -10.642797470092773
    4. '=' → logprob: -11.205297470092773
    5. '```' → logprob: -11.205297470092773
    6. '           ' → logprob: -11.642797470092773
    7. ' N' → logprob: -11.955297470092773
    8. '   ' → logprob: -11.955297470092773
    9. '1' → logprob: -12.205297470092773
    10. ' None' → logprob: -12.642797470092773

Token 100: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03211405500769615
    2. ' continue' → logprob: -4.407114028930664
    3. ':' → logprob: -4.657114028930664
    4. '       ' → logprob: -5.657114028930664
    5. 'continue' → logprob: -6.407114028930664
    6. '   ' → logprob: -6.782114028930664
    7. '               ' → logprob: -6.782114028930664
    8. ' or' → logprob: -7.282114028930664
    9. ':
' → logprob: -7.782114028930664
    10. '	continue' → logprob: -8.032114028930664

Token 101: ' check' (ID: 2371)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.6736522316932678
    2. '           ' → logprob: -1.048652172088623
    3. 'continue' → logprob: -2.673652172088623
    4. '               ' → logprob: -2.673652172088623
    5. '	continue' → logprob: -7.923652172088623
    6. '   ' → logprob: -8.548652648925781
    7. ' or' → logprob: -8.548652648925781
    8. ' continues' → logprob: -8.548652648925781
    9. ' if' → logprob: -8.673652648925781
    10. '       ' → logprob: -8.798652648925781

Token 102: ' only' (ID: 1606)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0744229108095169
    2. '           ' → logprob: -4.074422836303711
    3. ' continue' → logprob: -4.074422836303711
    4. ' and' → logprob: -4.949422836303711
    5. '               ' → logprob: -5.074422836303711
    6. 'continue' → logprob: -5.074422836303711
    7. 'if' → logprob: -5.324422836303711
    8. ' ' → logprob: -5.574422836303711
    9. '       ' → logprob: -6.324422836303711
    10. '   ' → logprob: -6.699422836303711

Token 103: ' two' (ID: 1920)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5639568567276001
    2. ' and' → logprob: -1.9389568567276
    3. ' ' → logprob: -2.0639567375183105
    4. ' or' → logprob: -3.6889567375183105
    5. ' continue' → logprob: -3.6889567375183105
    6. ' length' → logprob: -3.8139567375183105
    7. 'if' → logprob: -4.3139567375183105
    8. ' that' → logprob: -4.4389567375183105
    9. ' for' → logprob: -4.5639567375183105
    10. 'length' → logprob: -5.0639567375183105

Token 104: ' cuts' (ID: 29505)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.2803912162780762
    2. ' ' → logprob: -1.5303912162780762
    3. '           ' → logprob: -1.5303912162780762
    4. ':' → logprob: -1.9053912162780762
    5. '   ' → logprob: -3.530391216278076
    6. '
' → logprob: -4.280391216278076
    7. ' or' → logprob: -4.405391216278076
    8. '==' → logprob: -4.405391216278076
    9. '       ' → logprob: -4.655391216278076
    10. '               ' → logprob: -4.905391216278076

Token 105: ' here' (ID: 2105)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1726921945810318
    2. '       ' → logprob: -2.54769229888916
    3. '           ' → logprob: -3.54769229888916
    4. '   ' → logprob: -4.04769229888916
    5. '<|end|>' → logprob: -4.54769229888916
    6. ' ' → logprob: -5.29769229888916
    7. ' and' → logprob: -5.42269229888916
    8. ':
' → logprob: -5.92269229888916
    9. ')' → logprob: -6.04769229888916
    10. '
' → logprob: -6.42269229888916

Token 106: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7804343700408936
    2. '           ' → logprob: -0.7804343700408936
    3. 'continue' → logprob: -3.9054343700408936
    4. ' continue' → logprob: -4.030434608459473
    5. '               ' → logprob: -4.405434608459473
    6. ' and' → logprob: -4.905434608459473
    7. '       ' → logprob: -5.155434608459473
    8. ' or' → logprob: -5.280434608459473
    9. '<|end|>' → logprob: -6.280434608459473
    10. ':
' → logprob: -6.280434608459473

Token 107: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4987868368625641
    2. ':' → logprob: -1.1237868070602417
    3. '       ' → logprob: -3.9987869262695312
    4. ':
' → logprob: -4.748786926269531
    5. '               ' → logprob: -4.873786926269531
    6. ' and' → logprob: -4.998786926269531
    7. ' continue' → logprob: -5.123786926269531
    8. '<|end|>' → logprob: -5.748786926269531
    9. ' if' → logprob: -5.873786926269531
    10. ',' → logprob: -5.873786926269531

Token 108: ' cost' (ID: 3097)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.1615819931030273
    2. '           ' → logprob: -1.2865819931030273
    3. ' if' → logprob: -1.9115819931030273
    4. 'continue' → logprob: -1.9115819931030273
    5. ' min' → logprob: -2.6615819931030273
    6. 'if' → logprob: -3.9115819931030273
    7. 'min' → logprob: -4.161581993103027
    8. '               ' → logprob: -5.286581993103027
    9. '   ' → logprob: -6.536581993103027
    10. ' pass' → logprob: -7.161581993103027

Token 109: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003990184981375933
    2. '=' → logprob: -5.628990173339844
    3. ' +=' → logprob: -8.253990173339844
    4. ' ' → logprob: -10.128990173339844
    5. 's' → logprob: -10.128990173339844
    6. '_sum' → logprob: -11.253990173339844
    7. '1' → logprob: -11.253990173339844
    8. '_' → logprob: -11.503990173339844
    9. '=sum' → logprob: -13.378990173339844
    10. ')' → logprob: -13.503990173339844

Token 110: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.4668487310409546
    2. ' t' → logprob: -1.2168487310409546
    3. 'sum' → logprob: -3.966848850250244
    4. ' sum' → logprob: -4.216848850250244
    5. 'abs' → logprob: -4.466848850250244
    6. ' max' → logprob: -4.716848850250244
    7. 'max' → logprob: -4.841848850250244
    8. ' abs' → logprob: -4.966848850250244
    9. ' min' → logprob: -6.091848850250244
    10. 'min' → logprob: -6.591848850250244

Token 111: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.004415636416524649
    2. '[length' → logprob: -5.629415512084961
    3. '[' → logprob: -7.254415512084961
    4. '[j' → logprob: -10.129415512084961
    5. 'length' → logprob: -11.004415512084961
    6. 'i' → logprob: -11.254415512084961
    7. '[:' → logprob: -11.629415512084961
    8. '[-' → logprob: -12.004415512084961
    9. '[len' → logprob: -12.379415512084961
    10. '[l' → logprob: -12.629415512084961

Token 112: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10429400950670242
    2. '-' → logprob: -2.3542940616607666
    3. ' -' → logprob: -5.8542938232421875
    4. ']+' → logprob: -6.9792938232421875
    5. ' ]' → logprob: -8.604293823242188
    6. ']-' → logprob: -10.979293823242188
    7. ']*' → logprob: -11.229293823242188
    8. '[' → logprob: -11.479293823242188
    9. ']
' → logprob: -11.604293823242188
    10. '+' → logprob: -11.604293823242188

Token 113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001261845463886857
    2. ']' → logprob: -9.750125885009766
    3. ' ' → logprob: -9.750125885009766
    4. '2' → logprob: -12.000125885009766
    5. ']+' → logprob: -14.125125885009766
    6. '0' → logprob: -14.250125885009766
    7. '-' → logprob: -14.875125885009766
    8. '   ' → logprob: -15.187625885009766
    9. '  ' → logprob: -15.250125885009766
    10. '])' → logprob: -15.750125885009766

Token 114: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08325202018022537
    2. ' +' → logprob: -3.208251953125
    3. ' ]' → logprob: -4.083251953125
    4. ']+' → logprob: -4.083251953125
    5. '+' → logprob: -5.208251953125
    6. '+]' → logprob: -8.958251953125
    7. ')' → logprob: -9.458251953125
    8. '']' → logprob: -11.083251953125
    9. ' ' → logprob: -11.333251953125
    10. '[' → logprob: -11.833251953125

Token 115: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06996966898441315
    2. '+' → logprob: -2.694969654083252
    3. ' *' → logprob: -11.69497013092041
    4. '+t' → logprob: -11.94497013092041
    5. '*' → logprob: -12.06997013092041
    6. '<|end|>' → logprob: -12.56997013092041
    7. ' ' → logprob: -13.19497013092041
    8. ' +
' → logprob: -13.19497013092041
    9. ')' → logprob: -14.06997013092041
    10. ' ' → logprob: -14.19497013092041

Token 116: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.20154646039009094
    2. 't' → logprob: -1.7015464305877686
    3. '+' → logprob: -10.201546669006348
    4. '+t' → logprob: -10.826546669006348
    5. ' ' → logprob: -10.951546669006348
    6. ' +' → logprob: -11.076546669006348
    7. ''t' → logprob: -12.201546669006348
    8. '(t' → logprob: -12.326546669006348
    9. ' (' → logprob: -12.451546669006348
    10. '   ' → logprob: -12.826546669006348

Token 117: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.0280383548888494e-06
    2. '[t' → logprob: -15.250000953674316
    3. '[' → logprob: -15.375000953674316
    4. '```' → logprob: -16.375001907348633
    5. '[i' → logprob: -16.500001907348633
    6. ' [' → logprob: -16.750001907348633
    7. '
' → logprob: -17.250001907348633
    8. '   ' → logprob: -17.375001907348633
    9. '[
' → logprob: -17.375001907348633
    10. 'j' → logprob: -17.375001907348633

Token 118: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0003601336502470076
    2. ' -' → logprob: -8.000360488891602
    3. '[' → logprob: -11.000360488891602
    4. '[-' → logprob: -12.500360488891602
    5. ']-' → logprob: -13.625360488891602
    6. ']' → logprob: -14.125360488891602
    7. '<|end|>' → logprob: -14.500360488891602
    8. '1' → logprob: -15.125360488891602
    9. ''-' → logprob: -15.375360488891602
    10. '2' → logprob: -15.500360488891602

Token 119: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.500000953674316
    3. '2' → logprob: -14.875000953674316
    4. '0' → logprob: -18.75
    5. ')' → logprob: -19.625
    6. 'i' → logprob: -19.6875
    7. '3' → logprob: -19.9375
    8. '```' → logprob: -19.9375
    9. '۱' → logprob: -20.1875
    10. 't' → logprob: -20.1875

Token 120: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002201047958806157
    2. ' ]' → logprob: -6.752201080322266
    3. ')' → logprob: -7.252201080322266
    4. ')]' → logprob: -8.502201080322266
    5. '])' → logprob: -10.002201080322266
    6. ']
' → logprob: -10.252201080322266
    7. '']' → logprob: -11.002201080322266
    8. '+' → logprob: -12.752201080322266
    9. ']+' → logprob: -13.252201080322266
    10. ']

' → logprob: -13.377201080322266

Token 121: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 122: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1971309930086136
    2. '           ' → logprob: -1.9471310377120972
    3. ' if' → logprob: -3.3221309185028076
    4. '       ' → logprob: -9.072131156921387
    5. '               ' → logprob: -11.197131156921387
    6. 'min' → logprob: -11.322131156921387
    7. '   ' → logprob: -12.322131156921387
    8. '```' → logprob: -12.947131156921387
    9. '          ' → logprob: -12.947131156921387
    10. '
' → logprob: -13.072131156921387

Token 123: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.043016545474529266
    2. 'min' → logprob: -3.1680164337158203
    3. '(min' → logprob: -11.16801643371582
    4. ' (' → logprob: -13.16801643371582
    5. '	min' → logprob: -14.29301643371582
    6. '(' → logprob: -15.66801643371582
    7. ' cost' → logprob: -15.79301643371582
    8. ' ' → logprob: -16.04301643371582
    9. '[min' → logprob: -17.04301643371582
    10. ' ' → logprob: -17.16801643371582

Token 124: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -2.9040898880339228e-05
    2. '_cost' → logprob: -10.625028610229492
    3. '_' → logprob: -12.750028610229492
    4. '_min' → logprob: -14.125028610229492
    5. '_s' → logprob: -14.750028610229492
    6. 'sum' → logprob: -16.000028610229492
    7. ' _' → logprob: -16.250028610229492
    8. '__' → logprob: -17.000028610229492
    9. '_val' → logprob: -17.250028610229492
    10. '_set' → logprob: -17.250028610229492

Token 125: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.014164221473038197
    2. 'is' → logprob: -4.264164447784424
    3. '==' → logprob: -14.889163970947266
    4. ' ' → logprob: -15.764163970947266
    5. 'or' → logprob: -16.389163970947266
    6. ' ==' → logprob: -17.014163970947266
    7. '	is' → logprob: -17.264163970947266
    8. '   ' → logprob: -17.389163970947266
    9. 'in' → logprob: -17.764163970947266
    10. '[' → logprob: -18.264163970947266

Token 126: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.16022422909736633
    2. 'None' → logprob: -1.910224199295044
    3. '   ' → logprob: -18.53522491455078
    4. ' ' → logprob: -18.91022491455078
    5. '(None' → logprob: -19.53522491455078
    6. '=None' → logprob: -20.16022491455078
    7. ' not' → logprob: -20.53522491455078
    8. '_None' → logprob: -20.53522491455078
    9. 'none' → logprob: -20.66022491455078
    10. ' none' → logprob: -20.91022491455078

Token 127: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.02983645536005497
    2. 'or' → logprob: -3.529836416244507
    3. '           ' → logprob: -9.904836654663086
    4. '               ' → logprob: -10.404836654663086
    5. '	or' → logprob: -12.529836654663086
    6. '            ' → logprob: -14.029836654663086
    7. '          ' → logprob: -15.029836654663086
    8. '              ' → logprob: -15.154836654663086
    9. '   ' → logprob: -16.029836654663086
    10. ' ' → logprob: -16.154836654663086

Token 128: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.693162202835083
    2. 'cost' → logprob: -0.693162202835083
    3. '               ' → logprob: -11.943161964416504
    4. '           ' → logprob: -12.068161964416504
    5. '   ' → logprob: -13.318161964416504
    6. '_cost' → logprob: -15.318161964416504
    7. '(cost' → logprob: -15.568161964416504
    8. '                   ' → logprob: -15.693161964416504
    9. 'Cost' → logprob: -16.44316291809082
    10. '       ' → logprob: -16.56816291809082

Token 129: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6931536197662354
    2. ' <' → logprob: -0.6931536197662354
    3. '<int' → logprob: -13.818153381347656
    4. '<size' → logprob: -14.193153381347656
    5. '<t' → logprob: -14.318153381347656
    6. '<num' → logprob: -14.943153381347656
    7. ' ' → logprob: -14.943153381347656
    8. '<len' → logprob: -14.943153381347656
    9. '<com' → logprob: -15.068153381347656
    10. '<const' → logprob: -15.443153381347656

Token 130: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.00861468818038702
    2. ' min' → logprob: -4.758614540100098
    3. '	min' → logprob: -15.633614540100098
    4. '_min' → logprob: -16.883615493774414
    5. '=min' → logprob: -18.508615493774414
    6. '.min' → logprob: -19.008615493774414
    7. ':min' → logprob: -19.258615493774414
    8. 'max' → logprob: -19.758615493774414
    9. '(min' → logprob: -20.008615493774414
    10. '   ' → logprob: -20.008615493774414

Token 131: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -3.128163257315464e-07
    2. '_cost' → logprob: -15.75
    3. 'sum' → logprob: -16.125
    4. 'Sum' → logprob: -20.0
    5. '_set' → logprob: -20.25
    6. '_s' → logprob: -20.375
    7. '_SUM' → logprob: -20.75
    8. '_cut' → logprob: -21.125
    9. '_split' → logprob: -21.25
    10. '_score' → logprob: -22.0

Token 132: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25768113136291504
    2. ':
' → logprob: -1.507681131362915
    3. '               ' → logprob: -5.382680892944336
    4. '):
' → logprob: -7.382680892944336
    5. '           ' → logprob: -8.007680892944336
    6. '):' → logprob: -9.132680892944336
    7. '():
' → logprob: -11.257680892944336
    8. '       ' → logprob: -11.257680892944336
    9. ':
' → logprob: -11.257680892944336
    10. '<|end|>' → logprob: -11.632680892944336

Token 133: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00020139472326263785
    2. ':
' → logprob: -9.500201225280762
    3. ' min' → logprob: -9.500201225280762
    4. '           ' → logprob: -11.125201225280762
    5. ':' → logprob: -11.375201225280762
    6. '                   ' → logprob: -11.750201225280762
    7. '):
' → logprob: -12.250201225280762
    8. '```' → logprob: -12.875201225280762
    9. 'min' → logprob: -13.000201225280762
    10. '                       ' → logprob: -13.125201225280762

Token 134: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.48868611454963684
    2. 'min' (adapté à ' min') → logprob: -0.9886860847473145
    3. '               ' → logprob: -4.2386860847473145
    4. '                   ' → logprob: -9.738686561584473
    5. '   ' → logprob: -12.113686561584473
    6. '           ' → logprob: -12.238686561584473
    7. '	min' → logprob: -12.738686561584473
    8. '```' → logprob: -13.863686561584473
    9. '       ' → logprob: -14.613686561584473
    10. '(min' → logprob: -14.613686561584473

Token 135: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -6.704273118884885e-07
    2. 'sum' → logprob: -14.750000953674316
    3. '_s' → logprob: -16.625
    4. '_cost' → logprob: -17.375
    5. '_' → logprob: -18.125
    6. 'Sum' → logprob: -18.75
    7. '_split' → logprob: -18.75
    8. '_set' → logprob: -18.875
    9. '_min' → logprob: -18.875
    10. ' _' → logprob: -19.375

Token 136: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759420990943909
    2. '=' → logprob: -0.8259420990943909
    3. '＝' → logprob: -13.950942039489746
    4. '                ' → logprob: -14.950942039489746
    5. '               ' → logprob: -15.075942039489746
    6. '<|end|>' → logprob: -15.325942039489746
    7. ' ' → logprob: -15.825942039489746
    8. '                   ' → logprob: -16.325942993164062
    9. '```' → logprob: -16.450942993164062
    10. '=None' → logprob: -16.450942993164062

Token 137: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.16022443771362305
    2. ' cost' → logprob: -1.910224437713623
    3. '_cost' → logprob: -16.66022491455078
    4. '(cost' → logprob: -17.03522491455078
    5. '               ' → logprob: -17.41022491455078
    6. 'Cost' → logprob: -17.66022491455078
    7. '   ' → logprob: -18.03522491455078
    8. 'c' → logprob: -18.78522491455078
    9. '           ' → logprob: -19.16022491455078
    10. '.cost' → logprob: -19.41022491455078

Token 138: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2353009432554245
    2. '<|end|>' → logprob: -1.860300898551941
    3. '       ' → logprob: -4.1103010177612305
    4. 'elif' → logprob: -4.4853010177612305
    5. 'continue' → logprob: -4.8603010177612305
    6. '
' → logprob: -5.8603010177612305
    7. ')' → logprob: -6.1103010177612305
    8. '           ' → logprob: -6.3603010177612305
    9. '        ' → logprob: -6.3603010177612305
    10. '#' → logprob: -6.6103010177612305

Token 139: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 140: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38668182492256165
    2. 'elif' (adapté à ' elif') → logprob: -1.3866817951202393
    3. 'else' → logprob: -2.7616817951202393
    4. ' elif' → logprob: -5.761682033538818
    5. ' else' → logprob: -5.886682033538818
    6. '   ' → logprob: -7.136682033538818
    7. '           ' → logprob: -7.761682033538818
    8. '               ' → logprob: -9.13668155670166
    9. '<|end|>' → logprob: -9.26168155670166
    10. '	elif' → logprob: -9.63668155670166

Token 141: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.07971823215484619
    2. 'length' → logprob: -2.5797181129455566
    3. '(length' → logprob: -8.079718589782715
    4. ' (' → logprob: -8.579718589782715
    5. ' abs' → logprob: -9.454718589782715
    6. ' j' → logprob: -9.954718589782715
    7. ' ' → logprob: -9.954718589782715
    8. ' i' → logprob: -10.079718589782715
    9. '   ' → logprob: -10.329718589782715
    10. ' max' → logprob: -10.954718589782715

Token 142: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015590138733386993
    2. '2' → logprob: -4.515590190887451
    3. '3' → logprob: -6.015590190887451
    4. ' ==' → logprob: -7.265590190887451
    5. '==' → logprob: -7.640590190887451
    6. ' ' → logprob: -7.765590190887451
    7. '_' → logprob: -7.890590190887451
    8. '```' → logprob: -9.765589714050293
    9. ' _' → logprob: -10.890589714050293
    10. '   ' → logprob: -11.765589714050293

Token 143: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.25519683957099915
    2. '==' → logprob: -1.5051968097686768
    3. ' >' → logprob: -6.880197048187256
    4. ' <' → logprob: -7.255197048187256
    5. '>' → logprob: -8.130196571350098
    6. ' <=' → logprob: -8.380196571350098
    7. ' >=' → logprob: -8.505196571350098
    8. ' ' → logprob: -8.630196571350098
    9. ' +' → logprob: -8.755196571350098
    10. '+' → logprob: -8.880196571350098

Token 144: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.5938421487808228
    2. 'length' → logprob: -0.8438421487808228
    3. ' length' → logprob: -4.593842029571533
    4. ' half' → logprob: -4.968842029571533
    5. 'j' → logprob: -7.968842029571533
    6. '0' → logprob: -9.093842506408691
    7. ' j' → logprob: -9.968842506408691
    8. '(length' → logprob: -10.343842506408691
    9. ' ' → logprob: -10.593842506408691
    10. '1' → logprob: -10.968842506408691

Token 145: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08335752785205841
    2. 'and' → logprob: -2.958357572555542
    3. ' or' → logprob: -3.583357572555542
    4. 'or' → logprob: -8.833357810974121
    5. ' ' → logprob: -8.958357810974121
    6. '   ' → logprob: -11.458357810974121
    7. '    ' → logprob: -13.083357810974121
    8. '  ' → logprob: -14.083357810974121
    9. ')' → logprob: -14.583357810974121
    10. ' ' → logprob: -14.833357810974121

Token 146: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.014169861562550068
    2. ' length' → logprob: -4.264169692993164
    3. '(length' → logprob: -12.889169692993164
    4. '   ' → logprob: -13.639169692993164
    5. ' ' → logprob: -14.014169692993164
    6. '0' → logprob: -14.514169692993164
    7. ' (' → logprob: -15.264169692993164
    8. '  ' → logprob: -15.389169692993164
    9. '	length' → logprob: -15.764169692993164
    10. 'ength' → logprob: -16.014169692993164

Token 147: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002045817207545042
    2. '3' → logprob: -6.377045631408691
    3. ' ' → logprob: -9.502045631408691
    4. ' ==' → logprob: -9.627045631408691
    5. '==' → logprob: -9.752045631408691
    6. '1' → logprob: -10.002045631408691
    7. 'elif' → logprob: -10.252045631408691
    8. '```' → logprob: -10.752045631408691
    9. '-' → logprob: -11.627045631408691
    10. ' -' → logprob: -11.877045631408691

Token 148: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04860689491033554
    2. '==' → logprob: -3.0486068725585938
    3. ' ' → logprob: -11.298606872558594
    4. ' >' → logprob: -12.798606872558594
    5. ' >=' → logprob: -13.423606872558594
    6. '=' → logprob: -14.423606872558594
    7. '>' → logprob: -14.673606872558594
    8. ' =' → logprob: -15.173606872558594
    9. ')==' → logprob: -15.423606872558594
    10. ' ' → logprob: -15.548606872558594

Token 149: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.043072037398815155
    2. ' half' → logprob: -3.168071985244751
    3. 'hal' → logprob: -10.043071746826172
    4. ' ' → logprob: -11.793071746826172
    5. '0' → logprob: -12.043071746826172
    6. '1' → logprob: -13.230571746826172
    7. 'h' → logprob: -13.480571746826172
    8. '6' → logprob: -13.980571746826172
    9. '_half' → logprob: -13.980571746826172
    10. '   ' → logprob: -14.043071746826172

Token 150: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014209493529051542
    2. ':
' → logprob: -6.626420974731445
    3. ' and' → logprob: -9.501420974731445
    4. '       ' → logprob: -11.751420974731445
    5. '           ' → logprob: -12.626420974731445
    6. '):' → logprob: -13.376420974731445
    7. '   ' → logprob: -13.626420974731445
    8. ' :' → logprob: -13.626420974731445
    9. ' or' → logprob: -13.626420974731445
    10. 'and' → logprob: -13.751420974731445

Token 151: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010763956233859062
    2. ':' → logprob: -7.1260762214660645
    3. ' and' → logprob: -9.626076698303223
    4. ':
' → logprob: -10.126076698303223
    5. '       ' → logprob: -10.376076698303223
    6. '               ' → logprob: -10.376076698303223
    7. ' cost' → logprob: -11.001076698303223
    8. '<|end|>' → logprob: -11.001076698303223
    9. ',' → logprob: -11.501076698303223
    10. '	       ' → logprob: -11.626076698303223

Token 152: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.44100651144981384
    2. '           ' → logprob: -1.3160065412521362
    3. 'cost' (adapté à ' cost') → logprob: -2.4410064220428467
    4. '               ' → logprob: -7.191006660461426
    5. '       ' → logprob: -8.691006660461426
    6. '```' → logprob: -9.066006660461426
    7. '   ' → logprob: -9.566006660461426
    8. ' if' → logprob: -9.691006660461426
    9. 'if' → logprob: -10.441006660461426
    10. ' continue' → logprob: -11.066006660461426

Token 153: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931484341621399
    2. ' =' → logprob: -0.6931484341621399
    3. ' ' → logprob: -14.693148612976074
    4. ' +=' → logprob: -15.568148612976074
    5. 's' → logprob: -15.693148612976074
    6. ' ' → logprob: -15.818148612976074
    7. '+=' → logprob: -16.443147659301758
    8. 't' → logprob: -16.443147659301758
    9. '＝' → logprob: -16.693147659301758
    10. '   ' → logprob: -17.443147659301758

Token 154: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.11310818791389465
    2. ' t' → logprob: -2.2381081581115723
    3. '   ' → logprob: -8.48810863494873
    4. '           ' → logprob: -10.11310863494873
    5. '       ' → logprob: -11.48810863494873
    6. ' ' → logprob: -11.48810863494873
    7. '  ' → logprob: -12.73810863494873
    8. '    ' → logprob: -12.73810863494873
    9. '               ' → logprob: -13.23810863494873
    10. '	t' → logprob: -13.23810863494873

Token 155: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005353979649953544
    2. '[j' → logprob: -7.625535488128662
    3. 'i' → logprob: -10.000535011291504
    4. 'j' → logprob: -14.250535011291504
    5. '[' → logprob: -14.875535011291504
    6. '[length' → logprob: -15.125535011291504
    7. '(i' → logprob: -16.25053596496582
    8. '[l' → logprob: -16.50053596496582
    9. '{i' → logprob: -16.50053596496582
    10. ' [' → logprob: -16.75053596496582

Token 156: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00023691373644396663
    2. '[' → logprob: -9.125236511230469
    3. ' -' → logprob: -9.125236511230469
    4. ']' → logprob: -11.500236511230469
    5. '[-' → logprob: -12.750236511230469
    6. '[i' → logprob: -12.875236511230469
    7. ']-' → logprob: -13.500236511230469
    8. '[j' → logprob: -14.375236511230469
    9. '   ' → logprob: -15.500236511230469
    10. ' ' → logprob: -15.750236511230469

Token 157: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -13.00000286102295
    3. '-' → logprob: -15.12500286102295
    4. '2' → logprob: -15.93750286102295
    5. '```' → logprob: -17.000001907348633
    6. '   ' → logprob: -17.750001907348633
    7. '
' → logprob: -18.000001907348633
    8. 'j' → logprob: -18.500001907348633
    9. '{' → logprob: -18.687501907348633
    10. 'user' → logprob: -18.812501907348633

Token 158: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00016885579680092633
    2. ' ]' → logprob: -9.000168800354004
    3. ']+' → logprob: -10.125168800354004
    4. '+' → logprob: -12.875168800354004
    5. ' +' → logprob: -13.625168800354004
    6. '']' → logprob: -14.250168800354004
    7. '"]' → logprob: -14.875168800354004
    8. ')' → logprob: -15.250168800354004
    9. ']
' → logprob: -16.25016975402832
    10. '+]' → logprob: -16.62516975402832

Token 159: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.05488318204879761
    2. '+' → logprob: -2.9298832416534424
    3. '+t' → logprob: -14.554883003234863
    4. ' ' → logprob: -15.804883003234863
    5. ' +
' → logprob: -16.42988395690918
    6. ' ' → logprob: -16.55488395690918
    7. '+
' → logprob: -17.05488395690918
    8. '＋' → logprob: -18.05488395690918
    9. ' plus' → logprob: -18.42988395690918
    10. '
' → logprob: -18.42988395690918

Token 160: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.07012248784303665
    2. ' t' → logprob: -2.695122480392456
    3. '   ' → logprob: -9.570122718811035
    4. ' ' → logprob: -10.445122718811035
    5. '(t' → logprob: -10.695122718811035
    6. 'j' → logprob: -11.445122718811035
    7. '       ' → logprob: -11.570122718811035
    8. '`t' → logprob: -12.070122718811035
    9. '           ' → logprob: -12.195122718811035
    10. '  ' → logprob: -12.445122718811035

Token 161: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0015408077742904425
    2. 'j' → logprob: -6.501540660858154
    3. '[' → logprob: -10.751541137695312
    4. '[i' → logprob: -11.626541137695312
    5. '[t' → logprob: -12.501541137695312
    6. 't' → logprob: -14.001541137695312
    7. '-' → logprob: -14.126541137695312
    8. '(j' → logprob: -14.501541137695312
    9. ' j' → logprob: -14.626541137695312
    10. '[s' → logprob: -15.126541137695312

Token 162: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.8325677703833207e-05
    2. ' -' → logprob: -11.125028610229492
    3. '[' → logprob: -11.375028610229492
    4. ']' → logprob: -13.875028610229492
    5. '```' → logprob: -15.250028610229492
    6. '<|end|>' → logprob: -15.875028610229492
    7. '[-' → logprob: -16.000028610229492
    8. '<|end|>' → logprob: -16.000028610229492
    9. ']-' → logprob: -16.125028610229492
    10. '   ' → logprob: -16.125028610229492

Token 163: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00021807955636177212
    2. '-' → logprob: -8.500218391418457
    3. '2' → logprob: -11.875218391418457
    4. ' ' → logprob: -12.500218391418457
    5. '```' → logprob: -13.500218391418457
    6. '   ' → logprob: -14.125218391418457
    7. 'j' → logprob: -14.250218391418457
    8. 'i' → logprob: -14.625218391418457
    9. '
' → logprob: -16.00021743774414
    10. '           ' → logprob: -16.75021743774414

Token 164: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.029981648549437523
    2. ')' → logprob: -4.15498161315918
    3. '<|end|>' → logprob: -5.02998161315918
    4. '           ' → logprob: -5.40498161315918
    5. '       ' → logprob: -7.02998161315918
    6. ' ]' → logprob: -7.52998161315918
    7. '               ' → logprob: -8.02998161315918
    8. '}' → logprob: -8.40498161315918
    9. '<|end|>' → logprob: -8.90498161315918
    10. '```' → logprob: -9.15498161315918

Token 165: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.028875093907117844
    2. '<|end|>' → logprob: -3.6538751125335693
    3. '       ' → logprob: -6.65387487411499
    4. '               ' → logprob: -7.15387487411499
    5. ' if' → logprob: -8.403875350952148
    6. '<|end|>' → logprob: -8.903875350952148
    7. 'if' → logprob: -10.653875350952148
    8. '          ' → logprob: -10.653875350952148
    9. '		' → logprob: -10.653875350952148
    10. ')' → logprob: -11.028875350952148

Token 166: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3492121696472168
    2. ' if' → logprob: -1.4742121696472168
    3. '           ' → logprob: -2.724212169647217
    4. '       ' → logprob: -9.099212646484375
    5. '               ' → logprob: -9.599212646484375
    6. '   ' → logprob: -11.474212646484375
    7. ' ' → logprob: -12.724212646484375
    8. 'elif' → logprob: -13.224212646484375
    9. '```' → logprob: -13.849212646484375
    10. '	if' → logprob: -14.099212646484375

Token 167: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.020618263632059097
    2. 'min' → logprob: -3.895618200302124
    3. ' cost' → logprob: -9.895618438720703
    4. '(min' → logprob: -11.145618438720703
    5. 'cost' → logprob: -11.520618438720703
    6. ' not' → logprob: -15.145618438720703
    7. '_min' → logprob: -15.270618438720703
    8. ' (' → logprob: -15.395618438720703
    9. '	min' → logprob: -15.395618438720703
    10. ' ' → logprob: -15.770618438720703

Token 168: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -6.869017852295656e-06
    2. '_min' → logprob: -12.125006675720215
    3. 'min' → logprob: -14.500006675720215
    4. 'sum' → logprob: -14.500006675720215
    5. ' _' → logprob: -16.00000762939453
    6. '_' → logprob: -16.87500762939453
    7. '_s' → logprob: -17.50000762939453
    8. 'elif' → logprob: -17.75000762939453
    9. ' sum' → logprob: -17.75000762939453
    10. '\' → logprob: -18.62500762939453

Token 169: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0022050936240702868
    2. 'is' → logprob: -6.127204895019531
    3. ' ' → logprob: -10.877204895019531
    4. ' None' → logprob: -15.627204895019531
    5. '	is' → logprob: -15.627204895019531
    6. '==' → logprob: -15.752204895019531
    7. ' ==' → logprob: -15.752204895019531
    8. ' ' → logprob: -15.877204895019531
    9. ')' → logprob: -16.00220489501953
    10. 'None' → logprob: -16.62720489501953

Token 170: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.038042180240154266
    2. 'None' → logprob: -3.2880420684814453
    3. '(None' → logprob: -15.288042068481445
    4. ' ' → logprob: -15.663042068481445
    5. '_None' → logprob: -16.413042068481445
    6. '   ' → logprob: -16.913042068481445
    7. '  ' → logprob: -17.038042068481445
    8. '=None' → logprob: -17.163042068481445
    9. ' none' → logprob: -17.913042068481445
    10. '0' → logprob: -18.413042068481445

Token 171: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.00015514736878685653
    2. 'or' → logprob: -9.000155448913574
    3. '           ' → logprob: -10.625155448913574
    4. '               ' → logprob: -12.125155448913574
    5. '            ' → logprob: -14.125155448913574
    6. '	or' → logprob: -14.750155448913574
    7. '          ' → logprob: -15.625155448913574
    8. '              ' → logprob: -15.875155448913574
    9. ' ' → logprob: -16.125154495239258
    10. '   ' → logprob: -16.375154495239258

Token 172: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.10021507740020752
    2. 'cost' → logprob: -2.350214958190918
    3. ' t' → logprob: -12.350214958190918
    4. '   ' → logprob: -13.725214958190918
    5. 't' → logprob: -13.850214958190918
    6. '(cost' → logprob: -13.975214958190918
    7. '    ' → logprob: -15.600214958190918
    8. ' ' → logprob: -15.600214958190918
    9. '               ' → logprob: -15.725214958190918
    10. '_cost' → logprob: -15.725214958190918

Token 173: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.08647327125072479
    2. ' <' → logprob: -2.586473226547241
    3. '>' → logprob: -4.96147346496582
    4. '<' → logprob: -7.58647346496582
    5. ' ' → logprob: -10.46147346496582
    6. '   ' → logprob: -11.58647346496582
    7. '    ' → logprob: -13.46147346496582
    8. ' >
' → logprob: -13.58647346496582
    9. '  ' → logprob: -13.96147346496582
    10. '           ' → logprob: -14.08647346496582

Token 174: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.25193965435028076
    2. 'min' → logprob: -1.5019396543502808
    3. '           ' → logprob: -12.25193977355957
    4. '	min' → logprob: -13.62693977355957
    5. '_min' → logprob: -13.75193977355957
    6. '               ' → logprob: -14.25193977355957
    7. '   ' → logprob: -14.75193977355957
    8. 'm' → logprob: -14.75193977355957
    9. ' cost' → logprob: -15.00193977355957
    10. 'cost' → logprob: -15.37693977355957

Token 175: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -7.3458322731312364e-06
    2. '_min' → logprob: -12.375007629394531
    3. 'sum' → logprob: -12.875007629394531
    4. 'min' → logprob: -14.625007629394531
    5. 'Sum' → logprob: -18.37500762939453
    6. '_s' → logprob: -18.87500762939453
    7. ' sum' → logprob: -18.87500762939453
    8. '_' → logprob: -19.37500762939453
    9. '(min' → logprob: -19.37500762939453
    10. '_cost' → logprob: -19.50000762939453

Token 176: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002903062617406249
    2. '               ' → logprob: -6.752902984619141
    3. ':
' → logprob: -6.752902984619141
    4. '):' → logprob: -7.877902984619141
    5. '           ' → logprob: -9.00290298461914
    6. ' :' → logprob: -10.87790298461914
    7. ':
' → logprob: -11.00290298461914
    8. '=' → logprob: -12.50290298461914
    9. ')' → logprob: -12.50290298461914
    10. '       ' → logprob: -12.62790298461914

Token 177: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006940090097486973
    2. ' min' → logprob: -5.256939888000488
    3. 'min' → logprob: -6.631939888000488
    4. '           ' → logprob: -8.756939888000488
    5. ' cost' → logprob: -8.756939888000488
    6. 'cost' → logprob: -10.131939888000488
    7. '              ' → logprob: -11.381939888000488
    8. '                   ' → logprob: -12.131939888000488
    9. '```' → logprob: -12.256939888000488
    10. '   ' → logprob: -12.756939888000488

Token 178: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.25193482637405396
    2. ' min' → logprob: -1.5019347667694092
    3. '               ' → logprob: -12.501935005187988
    4. 'cost' → logprob: -14.501935005187988
    5. '                   ' → logprob: -14.626935005187988
    6. '   ' → logprob: -15.001935005187988
    7. '           ' → logprob: -15.001935005187988
    8. '	min' → logprob: -15.501935005187988
    9. ' cost' → logprob: -15.751935005187988
    10. '_min' → logprob: -17.126934051513672

Token 179: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -7.896309739408025e-07
    2. 'sum' → logprob: -14.625000953674316
    3. '_s' → logprob: -15.875000953674316
    4. '_' → logprob: -16.125
    5. '_cost' → logprob: -17.125
    6. '_min' → logprob: -17.25
    7. '_set' → logprob: -19.25
    8. 'Sum' → logprob: -19.25
    9. ' _' → logprob: -19.25
    10. '\' → logprob: -19.875

Token 180: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008614926598966122
    2. ' =' → logprob: -4.758615016937256
    3. '=

' → logprob: -16.383615493774414
    4. '=None' → logprob: -17.008615493774414
    5. '=
' → logprob: -17.383615493774414
    6. '=min' → logprob: -17.508615493774414
    7. '=s' → logprob: -17.633615493774414
    8. '＝' → logprob: -18.008615493774414
    9. '=int' → logprob: -18.383615493774414
    10. '+=' → logprob: -18.383615493774414

Token 181: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.16044144332408905
    2. ' cost' → logprob: -1.9104413986206055
    3. 't' → logprob: -9.035441398620605
    4. ' t' → logprob: -9.285441398620605
    5. '   ' → logprob: -13.160441398620605
    6. 'c' → logprob: -14.160441398620605
    7. '(cost' → logprob: -14.785441398620605
    8. ' ' → logprob: -14.910441398620605
    9. ' costs' → logprob: -15.410441398620605
    10. '               ' → logprob: -15.410441398620605

Token 182: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10474283993244171
    2. '<|end|>' → logprob: -2.3547427654266357
    3. ')' → logprob: -6.729743003845215
    4. 'elif' → logprob: -7.229743003845215
    5. 'else' → logprob: -7.604743003845215
    6. '   ' → logprob: -7.604743003845215
    7. ' else' → logprob: -7.854743003845215
    8. '<|end|>' → logprob: -8.229743003845215
    9. '
' → logprob: -8.604743003845215
    10. '               ' → logprob: -8.854743003845215

Token 183: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0374373197555542
    2. 'elif' → logprob: -3.7874374389648438
    3. 'else' → logprob: -4.412437438964844
    4. ' else' → logprob: -6.787437438964844
    5. ' elif' → logprob: -7.912437438964844
    6. '           ' → logprob: -8.787437438964844
    7. '   ' → logprob: -9.162437438964844
    8. '               ' → logprob: -9.662437438964844
    9. '<|end|>' → logprob: -9.662437438964844
    10. ')' → logprob: -10.537437438964844

Token 184: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35438627004623413
    2. 'elif' (adapté à ' elif') → logprob: -1.229386329650879
    3. 'else' → logprob: -5.729386329650879
    4. ' elif' → logprob: -5.979386329650879
    5. ' else' → logprob: -9.854386329650879
    6. '           ' → logprob: -10.354386329650879
    7. '   ' → logprob: -10.479386329650879
    8. '               ' → logprob: -11.604386329650879
    9. 'continue' → logprob: -11.854386329650879
    10. '	elif' → logprob: -11.979386329650879

Token 185: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.10022176057100296
    2. 'length' → logprob: -2.350221872329712
    3. ' abs' → logprob: -11.600221633911133
    4. '    ' → logprob: -13.350221633911133
    5. 'abs' → logprob: -13.350221633911133
    6. '   ' → logprob: -13.725221633911133
    7. '(length' → logprob: -13.850221633911133
    8. ' ' → logprob: -15.850221633911133
    9. '	length' → logprob: -15.975221633911133
    10. ' j' → logprob: -16.100221633911133

Token 186: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1631595641374588
    2. '1' → logprob: -2.2881596088409424
    3. '3' → logprob: -3.0381596088409424
    4. '==' → logprob: -7.538159370422363
    5. ' ==' → logprob: -7.913159370422363
    6. '```' → logprob: -8.538159370422363
    7. ' ' → logprob: -10.163159370422363
    8. '_' → logprob: -11.288159370422363
    9. '   ' → logprob: -12.475659370422363
    10. 's' → logprob: -13.288159370422363

Token 187: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.026325495913624763
    2. '==' → logprob: -3.6513254642486572
    3. ' ' → logprob: -11.026325225830078
    4. ' =' → logprob: -13.276325225830078
    5. ' ' → logprob: -13.276325225830078
    6. '=' → logprob: -13.401325225830078
    7. '<|end|>' → logprob: -13.526325225830078
    8. ']==' → logprob: -14.151325225830078
    9. ')==' → logprob: -14.526325225830078
    10. '()==' → logprob: -15.651325225830078

Token 188: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.11283029615879059
    2. ' half' → logprob: -2.237830400466919
    3. 'hal' → logprob: -12.48783016204834
    4. '_half' → logprob: -13.48783016204834
    5. ' ' → logprob: -14.11283016204834
    6. '-half' → logprob: -14.86283016204834
    7. 'Half' → logprob: -15.73783016204834
    8. 'halb' → logprob: -15.92533016204834
    9. '   ' → logprob: -16.112831115722656
    10. '```' → logprob: -16.300331115722656

Token 189: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.026605522260069847
    2. ' ==' → logprob: -3.9016056060791016
    3. 'and' → logprob: -5.776605606079102
    4. '==' → logprob: -6.026605606079102
    5. ':' → logprob: -8.026605606079102
    6. ' ' → logprob: -8.901605606079102
    7. '   ' → logprob: -10.026605606079102
    8. '    ' → logprob: -11.651605606079102
    9. ':
' → logprob: -11.776605606079102
    10. ' :' → logprob: -13.276605606079102

Token 190: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.47408318519592285
    2. ' length' → logprob: -0.9740831851959229
    3. '   ' → logprob: -13.224082946777344
    4. '(length' → logprob: -13.474082946777344
    5. ' ' → logprob: -14.099082946777344
    6. '    ' → logprob: -14.849082946777344
    7. 'abs' → logprob: -14.974082946777344
    8. ' abs' → logprob: -15.224082946777344
    9. '	length' → logprob: -15.349082946777344
    10. 'leng' → logprob: -15.724082946777344

Token 191: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0543997660279274
    2. ' ' → logprob: -3.4293997287750244
    3. ' t' → logprob: -4.9293999671936035
    4. ' ==' → logprob: -5.4293999671936035
    5. '```' → logprob: -5.9293999671936035
    6. 't' → logprob: -6.6793999671936035
    7. '2' → logprob: -6.8043999671936035
    8. '==' → logprob: -6.8043999671936035
    9. ' j' → logprob: -7.4293999671936035
    10. '  ' → logprob: -7.8043999671936035

Token 192: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.029761601239442825
    2. '==' → logprob: -3.529761552810669
    3. ' ' → logprob: -11.90476131439209
    4. '```' → logprob: -12.90476131439209
    5. ' ' → logprob: -14.65476131439209
    6. ']==' → logprob: -15.15476131439209
    7. ')==' → logprob: -15.40476131439209
    8. ' ==
' → logprob: -15.52976131439209
    9. '==-' → logprob: -15.65476131439209
    10. '==(' → logprob: -16.029762268066406

Token 193: ' half' (ID: 6375)
  Prédit: ' half'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' half' → logprob: -0.6931691765785217
    2. 'half' → logprob: -0.6931691765785217
    3. 'hal' → logprob: -11.193169593811035
    4. ' ' → logprob: -12.818169593811035
    5. '_half' → logprob: -13.318169593811035
    6. 'Half' → logprob: -14.568169593811035
    7. '-half' → logprob: -14.693169593811035
    8. '0' → logprob: -14.693169593811035
    9. ' hal' → logprob: -14.818169593811035
    10. ' ' → logprob: -15.255669593811035

Token 194: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10080134868621826
    2. ':
' → logprob: -2.350801467895508
    3. '           ' → logprob: -7.475801467895508
    4. '       ' → logprob: -11.850801467895508
    5. '=' → logprob: -11.975801467895508
    6. ' and' → logprob: -12.600801467895508
    7. '):
' → logprob: -12.975801467895508
    8. ' :
' → logprob: -13.100801467895508
    9. '   ' → logprob: -13.225801467895508
    10. ':

' → logprob: -13.725801467895508

Token 195: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00011403311509639025
    2. ' cost' → logprob: -9.750114440917969
    3. 'cost' → logprob: -10.500114440917969
    4. '               ' → logprob: -11.250114440917969
    5. '```' → logprob: -11.375114440917969
    6. '       ' → logprob: -13.875114440917969
    7. '          ' → logprob: -13.875114440917969
    8. '            ' → logprob: -15.250114440917969
    9. '		' → logprob: -15.250114440917969
    10. '                   ' → logprob: -15.375114440917969

Token 196: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.19592154026031494
    2. ' cost' → logprob: -1.820921540260315
    3. '           ' → logprob: -4.195921421051025
    4. '       ' → logprob: -7.695921421051025
    5. '   ' → logprob: -7.820921421051025
    6. '               ' → logprob: -9.570921897888184
    7. '```' → logprob: -10.445921897888184
    8. '
' → logprob: -11.195921897888184
    9. ' ' → logprob: -12.320921897888184
    10. 'code' → logprob: -12.695921897888184

Token 197: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029750604182481766
    2. '=' → logprob: -3.5297505855560303
    3. ' ' → logprob: -16.65475082397461
    4. ' ' → logprob: -18.77975082397461
    5. 's' → logprob: -19.27975082397461
    6. ' +=' → logprob: -19.90475082397461
    7. '＝' → logprob: -19.90475082397461
    8. 't' → logprob: -20.02975082397461
    9. '```' → logprob: -20.15475082397461
    10. ')' → logprob: -20.27975082397461

Token 198: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.10022446513175964
    2. 't' → logprob: -2.350224494934082
    3. '   ' → logprob: -12.100224494934082
    4. '           ' → logprob: -12.725224494934082
    5. ' ' → logprob: -12.850224494934082
    6. ' ' → logprob: -13.100224494934082
    7. '	t' → logprob: -13.850224494934082
    8. '       ' → logprob: -14.225224494934082
    9. '    ' → logprob: -14.475224494934082
    10. '`t' → logprob: -14.475224494934082

Token 199: '[i' (ID: 1768)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.038144998252391815
    2. '[i' → logprob: -3.288145065307617
    3. 'j' → logprob: -9.663145065307617
    4. '[' → logprob: -10.913145065307617
    5. '[t' → logprob: -11.163145065307617
    6. 'i' → logprob: -12.538145065307617
    7. ' [' → logprob: -13.288145065307617
    8. ' j' → logprob: -14.163145065307617
    9. '[s' → logprob: -14.913145065307617
    10. '```' → logprob: -15.163145065307617

Token 200: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00020520923135336488
    2. '[j' → logprob: -9.125205039978027
    3. '[' → logprob: -9.750205039978027
    4. 'j' → logprob: -11.000205039978027
    5. ' -' → logprob: -11.125205039978027
    6. '-j' → logprob: -12.875205039978027
    7. ']' → logprob: -13.750205039978027
    8. '[-' → logprob: -14.250205039978027
    9. '[i' → logprob: -15.000205039978027
    10. '   ' → logprob: -15.250205039978027

Token 201: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.465036105713807e-06
    2. ' ' → logprob: -12.500007629394531
    3. '-' → logprob: -13.125007629394531
    4. '2' → logprob: -14.250007629394531
    5. '```' → logprob: -15.437507629394531
    6. '   ' → logprob: -16.00000762939453
    7. '[' → logprob: -16.25000762939453
    8. 'j' → logprob: -16.87500762939453
    9. '{' → logprob: -17.00000762939453
    10. 'user' → logprob: -17.25000762939453

Token 202: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0020234507974237204
    2. ' ]' → logprob: -7.127023220062256
    3. ' +' → logprob: -7.377023220062256
    4. ']+' → logprob: -7.877023220062256
    5. '+' → logprob: -8.627023696899414
    6. '']' → logprob: -11.252023696899414
    7. ')' → logprob: -11.627023696899414
    8. '"]' → logprob: -11.752023696899414
    9. '[' → logprob: -13.502023696899414
    10. ' ' → logprob: -14.377023696899414

Token 203: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.038043100386857986
    2. '+' → logprob: -3.2880430221557617
    3. ' ' → logprob: -15.163043022155762
    4. ' +
' → logprob: -15.288043022155762
    5. ' ' → logprob: -15.413043022155762
    6. ' plus' → logprob: -15.788043022155762
    7. '<|end|>' → logprob: -15.788043022155762
    8. ')' → logprob: -15.913043022155762
    9. '[' → logprob: -16.038043975830078
    10. '```' → logprob: -16.663043975830078

Token 204: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.34844863414764404
    2. ' t' → logprob: -1.223448634147644
    3. '   ' → logprob: -13.598448753356934
    4. '`t' → logprob: -14.223448753356934
    5. ' ' → logprob: -14.598448753356934
    6. '           ' → logprob: -14.723448753356934
    7. '       ' → logprob: -15.348448753356934
    8. '	t' → logprob: -15.598448753356934
    9. 'j' → logprob: -15.848448753356934
    10. '```' → logprob: -15.848448753356934

Token 205: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.000763510703109e-05
    2. 'j' → logprob: -10.250040054321289
    3. '-' → logprob: -12.625040054321289
    4. '[' → logprob: -14.625040054321289
    5. '(j' → logprob: -15.250040054321289
    6. ' j' → logprob: -15.750040054321289
    7. '[i' → logprob: -16.25004005432129
    8. '-j' → logprob: -16.37504005432129
    9. '```' → logprob: -17.37504005432129
    10. '[t' → logprob: -17.75004005432129

Token 206: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.5941604690160602e-05
    2. '[' → logprob: -10.625025749206543
    3. ' -' → logprob: -14.375025749206543
    4. '[j' → logprob: -14.750025749206543
    5. '[-' → logprob: -15.500025749206543
    6. 'j' → logprob: -15.750025749206543
    7. ']' → logprob: -16.12502670288086
    8. '```' → logprob: -16.37502670288086
    9. ']-' → logprob: -18.00002670288086
    10. '-user' → logprob: -18.25002670288086

Token 207: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038407891406677663
    2. '-' → logprob: -7.8753838539123535
    3. ' ' → logprob: -13.125384330749512
    4. 'j' → logprob: -14.000384330749512
    5. '   ' → logprob: -15.250384330749512
    6. '```' → logprob: -15.375384330749512
    7. '[' → logprob: -15.625384330749512
    8. ']' → logprob: -15.875384330749512
    9. '2' → logprob: -16.375383377075195
    10. ' j' → logprob: -17.375383377075195

Token 208: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08163072913885117
    2. ']
' → logprob: -2.5816307067871094
    3. '           ' → logprob: -6.081630706787109
    4. '               ' → logprob: -8.58163070678711
    5. ']
' → logprob: -9.20663070678711
    6. ')' → logprob: -9.95663070678711
    7. ' ]' → logprob: -10.58163070678711
    8. '       ' → logprob: -10.70663070678711
    9. ']

' → logprob: -11.20663070678711
    10. '<|end|>' → logprob: -11.58163070678711

Token 209: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009152670972980559
    2. '               ' → logprob: -7.125915050506592
    3. '
' → logprob: -10.62591552734375
    4. 'if' → logprob: -10.75091552734375
    5. ' if' → logprob: -11.00091552734375
    6. '<|end|>' → logprob: -11.62591552734375
    7. '       ' → logprob: -11.75091552734375
    8. '            
' → logprob: -11.87591552734375
    9. '          ' → logprob: -12.25091552734375
    10. '```' → logprob: -12.37591552734375

Token 210: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5131889581680298
    2. ' if' → logprob: -1.0131889581680298
    3. '           ' → logprob: -3.2631888389587402
    4. '               ' → logprob: -9.638189315795898
    5. '       ' → logprob: -11.013189315795898
    6. '   ' → logprob: -12.138189315795898
    7. '          ' → logprob: -13.763189315795898
    8. '
' → logprob: -14.138189315795898
    9. '         ' → logprob: -14.763189315795898
    10. '            ' → logprob: -14.888189315795898

Token 211: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.1602294147014618
    2. 'min' → logprob: -1.9102294445037842
    3. '(min' → logprob: -12.285229682922363
    4. 'cost' → logprob: -15.285229682922363
    5. ' cost' → logprob: -15.660229682922363
    6. ' not' → logprob: -16.160228729248047
    7. '[min' → logprob: -16.660228729248047
    8. 'not' → logprob: -17.410228729248047
    9. '	min' → logprob: -17.535228729248047
    10. '_min' → logprob: -18.160228729248047

Token 212: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0001745775662129745
    2. '_min' → logprob: -9.000174522399902
    3. ' min' → logprob: -10.500174522399902
    4. 'min' → logprob: -11.250174522399902
    5. ' sum' → logprob: -12.000174522399902
    6. ' _' → logprob: -13.875174522399902
    7. ' t' → logprob: -14.125174522399902
    8. 'sum' → logprob: -14.125174522399902
    9. '(min' → logprob: -14.625174522399902
    10. '_' → logprob: -14.750174522399902

Token 213: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0009159822366200387
    2. 'is' → logprob: -7.000916004180908
    3. ' None' → logprob: -13.00091552734375
    4. 'None' → logprob: -13.75091552734375
    5. ' ' → logprob: -14.00091552734375
    6. '   ' → logprob: -15.75091552734375
    7. '           ' → logprob: -16.25091552734375
    8. '```' → logprob: -17.50091552734375
    9. '	is' → logprob: -17.75091552734375
    10. '=None' → logprob: -17.87591552734375

Token 214: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.16023346781730652
    2. 'None' → logprob: -1.910233497619629
    3. '(None' → logprob: -11.660233497619629
    4. ' ' → logprob: -15.410233497619629
    5. '_None' → logprob: -15.410233497619629
    6. ' not' → logprob: -16.160232543945312
    7. '=None' → logprob: -17.160232543945312
    8. '_none' → logprob: -17.285232543945312
    9. ' (' → logprob: -17.535232543945312
    10. '.None' → logprob: -17.785232543945312

Token 215: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.003652456682175398
    2. 'or' → logprob: -5.628652572631836
    3. '           ' → logprob: -10.128652572631836
    4. '               ' → logprob: -12.378652572631836
    5. '          ' → logprob: -13.003652572631836
    6. '	or' → logprob: -13.753652572631836
    7. ' ' → logprob: -13.878652572631836
    8. '            ' → logprob: -14.128652572631836
    9. '              ' → logprob: -14.253652572631836
    10. ':' → logprob: -14.503652572631836

Token 216: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.2519806921482086
    2. 'cost' → logprob: -1.5019806623458862
    3. '(cost' → logprob: -10.001980781555176
    4. 't' → logprob: -12.876980781555176
    5. ' t' → logprob: -13.376980781555176
    6. 'min' → logprob: -15.001980781555176
    7. ' min' → logprob: -15.001980781555176
    8. ' (' → logprob: -15.001980781555176
    9. ' ' → logprob: -15.126980781555176
    10. ' kost' → logprob: -15.751980781555176

Token 217: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.016427751630544662
    2. ' is' → logprob: -4.391427516937256
    3. '<' → logprob: -5.641427516937256
    4. 'is' → logprob: -9.016427993774414
    5. ' <=' → logprob: -9.516427993774414
    6. ' ' → logprob: -9.641427993774414
    7. ' >' → logprob: -10.516427993774414
    8. '```' → logprob: -10.641427993774414
    9. '   ' → logprob: -11.516427993774414
    10. ')' → logprob: -11.641427993774414

Token 218: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.006742373108863831
    2. ' min' → logprob: -5.006742477416992
    3. 'cost' → logprob: -10.881742477416992
    4. 't' → logprob: -12.131742477416992
    5. ' t' → logprob: -14.006742477416992
    6. ' cost' → logprob: -14.006742477416992
    7. '_min' → logprob: -14.256742477416992
    8. 'max' → logprob: -14.756742477416992
    9. 'm' → logprob: -16.131742477416992
    10. 'sum' → logprob: -16.881742477416992

Token 219: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0005128794582560658
    2. 'sum' → logprob: -7.625513076782227
    3. 'min' → logprob: -11.000513076782227
    4. '_min' → logprob: -12.375513076782227
    5. 'Sum' → logprob: -14.250513076782227
    6. '_' → logprob: -14.625513076782227
    7. '_cost' → logprob: -14.875513076782227
    8. 'cost' → logprob: -15.000513076782227
    9. ' sum' → logprob: -15.250513076782227
    10. 't' → logprob: -15.500513076782227

Token 220: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16255292296409607
    2. '               ' → logprob: -2.287552833557129
    3. ':
' → logprob: -3.412552833557129
    4. '           ' → logprob: -4.287552833557129
    5. '              ' → logprob: -7.537552833557129
    6. '          ' → logprob: -7.787552833557129
    7. '):' → logprob: -8.662552833557129
    8. '       ' → logprob: -8.662552833557129
    9. '=' → logprob: -9.162552833557129
    10. '):
' → logprob: -9.662552833557129

Token 221: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002363755600526929
    2. '           ' → logprob: -6.252363681793213
    3. 'if' → logprob: -8.377364158630371
    4. ' if' → logprob: -9.627364158630371
    5. '```' → logprob: -9.877364158630371
    6. '              ' → logprob: -10.377364158630371
    7. '                   ' → logprob: -10.627364158630371
    8. '   ' → logprob: -12.002364158630371
    9. ':
' → logprob: -12.252364158630371
    10. '                ' → logprob: -12.752364158630371

Token 222: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.16022808849811554
    2. ' min' → logprob: -1.9102281332015991
    3. 'cost' → logprob: -12.66022777557373
    4. ' cost' → logprob: -14.66022777557373
    5. '               ' → logprob: -15.53522777557373
    6. '           ' → logprob: -16.035228729248047
    7. '   ' → logprob: -17.285228729248047
    8. '	min' → logprob: -17.410228729248047
    9. '                   ' → logprob: -18.035228729248047
    10. '_min' → logprob: -18.660228729248047

Token 223: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -8.895480277715251e-06
    2. 'sum' → logprob: -12.250008583068848
    3. '_min' → logprob: -12.750008583068848
    4. '_s' → logprob: -14.625008583068848
    5. '_cost' → logprob: -15.375008583068848
    6. '_' → logprob: -15.625008583068848
    7. '_max' → logprob: -16.250009536743164
    8. '_set' → logprob: -17.500009536743164
    9. 'Sum' → logprob: -17.500009536743164
    10. '_split' → logprob: -18.000009536743164

Token 224: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804987296462059
    2. ' =' → logprob: -3.2880499362945557
    3. ' is' → logprob: -13.288049697875977
    4. 'is' → logprob: -13.413049697875977
    5. '=None' → logprob: -13.413049697875977
    6. '=min' → logprob: -14.288049697875977
    7. '>' → logprob: -14.413049697875977
    8. '<' → logprob: -14.788049697875977
    9. ')' → logprob: -14.788049697875977
    10. ' ' → logprob: -15.288049697875977

Token 225: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.07889077812433243
    2. ' cost' → logprob: -2.578890800476074
    3. 't' → logprob: -15.703890800476074
    4. '(cost' → logprob: -15.703890800476074
    5. '   ' → logprob: -15.828890800476074
    6. '_cost' → logprob: -15.953890800476074
    7. ' ' → logprob: -16.203889846801758
    8. 'Cost' → logprob: -16.578889846801758
    9. 'c' → logprob: -16.828889846801758
    10. '```' → logprob: -17.328889846801758

Token 226: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014572301879525185
    2. '       ' → logprob: -5.1395721435546875
    3. ')' → logprob: -6.0145721435546875
    4. 'if' → logprob: -6.1395721435546875
    5. '           ' → logprob: -6.7645721435546875
    6. 'continue' → logprob: -7.0145721435546875
    7. ' print' → logprob: -7.7645721435546875
    8. '   ' → logprob: -8.139572143554688
    9. 'else' → logprob: -8.764572143554688
    10. '               ' → logprob: -8.889572143554688

Token 227: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007461408386006951
    2. 'if' → logprob: -7.250746250152588
    3. '
' → logprob: -10.50074577331543
    4. ' print' → logprob: -12.12574577331543
    5. '```' → logprob: -13.25074577331543
    6. 'else' → logprob: -14.00074577331543
    7. ' if' → logprob: -15.25074577331543
    8. 'elif' → logprob: -15.87574577331543
    9. 'for' → logprob: -16.00074577331543
    10. '   ' → logprob: -17.37574577331543

Token 228: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.3868716359138489
    2. 'min' → logprob: -1.136871576309204
    3. ' ' → logprob: -16.261871337890625
    4. '	min' → logprob: -16.261871337890625
    5. '(min' → logprob: -16.386871337890625
    6. 'm' → logprob: -16.636871337890625
    7. ' ' → logprob: -17.386871337890625
    8. '__' → logprob: -17.511871337890625
    9. '[min' → logprob: -17.636871337890625
    10. '_min' → logprob: -17.636871337890625

Token 229: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -6.392202976712724e-06
    2. '_min' → logprob: -12.125006675720215
    3. '_s' → logprob: -15.000006675720215
    4. 'sum' → logprob: -15.500006675720215
    5. '_' → logprob: -15.750006675720215
    6. '_cost' → logprob: -16.5000057220459
    7. ' _' → logprob: -18.1250057220459
    8. '_max' → logprob: -18.3750057220459
    9. '>' → logprob: -18.6250057220459
    10. '\' → logprob: -18.6250057220459

Token 230: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.00529933487996459
    2. 'is' → logprob: -5.2552995681762695
    3. ' ==' → logprob: -10.00529956817627
    4. '==' → logprob: -11.00529956817627
    5. '>' → logprob: -13.88029956817627
    6. ' !=' → logprob: -14.13029956817627
    7. ' >' → logprob: -14.38029956817627
    8. ' ' → logprob: -14.50529956817627
    9. '   ' → logprob: -15.38029956817627
    10. '!=' → logprob: -15.50529956817627

Token 231: ' not' (ID: 625)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.24148570001125336
    2. 'None' → logprob: -1.6164857149124146
    3. ' not' → logprob: -4.241485595703125
    4. 'not' → logprob: -6.491485595703125
    5. '0' → logprob: -10.616485595703125
    6. ' ' → logprob: -11.241485595703125
    7. '   ' → logprob: -13.616485595703125
    8. '  ' → logprob: -14.616485595703125
    9. '(None' → logprob: -14.616485595703125
    10. '_None' → logprob: -14.741485595703125

Token 232: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.3132629096508026
    2. ' None' → logprob: -1.313262939453125
    3. '_None' → logprob: -14.188262939453125
    4. '(None' → logprob: -14.938262939453125
    5. '=None' → logprob: -16.313262939453125
    6. ' ' → logprob: -17.188262939453125
    7. '0' → logprob: -17.438262939453125
    8. ' ' → logprob: -17.563262939453125
    9. '```' → logprob: -17.813262939453125
    10. '_none' → logprob: -18.813262939453125

Token 233: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06998701393604279
    2. ':
' → logprob: -2.6949870586395264
    3. 'print' → logprob: -10.319987297058105
    4. '   ' → logprob: -11.569987297058105
    5. ':

' → logprob: -12.819987297058105
    6. ' print' → logprob: -13.069987297058105
    7. '=' → logprob: -14.319987297058105
    8. '):
' → logprob: -14.569987297058105
    9. ':
' → logprob: -14.694987297058105
    10. ' :' → logprob: -15.194987297058105

Token 234: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07183440774679184
    2. 'print' → logprob: -2.9468343257904053
    3. ':
' → logprob: -4.821834564208984
    4. ':' → logprob: -4.946834564208984
    5. ' print' → logprob: -6.446834564208984
    6. '
' → logprob: -10.821834564208984
    7. '```' → logprob: -10.946834564208984
    8. '	print' → logprob: -11.071834564208984
    9. '):
' → logprob: -12.446834564208984
    10. '       ' → logprob: -13.196834564208984

Token 235: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.3063827157020569
    2. ' print' → logprob: -1.806382656097412
    3. '   ' → logprob: -2.306382656097412
    4. '```' → logprob: -11.30638313293457
    5. '	print' → logprob: -11.80638313293457
    6. '
' → logprob: -12.05638313293457
    7. '.print' → logprob: -15.05638313293457
    8. ' ' → logprob: -15.43138313293457
    9. '``' → logprob: -15.68138313293457
    10. '    
' → logprob: -15.93138313293457

Token 236: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.00026205103495158255
    2. '(' → logprob: -8.250262260437012
    3. 'min' → logprob: -14.875262260437012
    4. '(max' → logprob: -15.250262260437012
    5. ' (' → logprob: -15.750262260437012
    6. '(m' → logprob: -16.875261306762695
    7. '(f' → logprob: -18.625261306762695
    8. '(abs' → logprob: -18.750261306762695
    9. ' min' → logprob: -18.875261306762695
    10. '()' → logprob: -19.250261306762695

Token 237: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -4.723352049040841e-06
    2. 'sum' → logprob: -12.500004768371582
    3. '(sum' → logprob: -14.500004768371582
    4. ')' → logprob: -15.875004768371582
    5. '_' → logprob: -15.875004768371582
    6. 'Sum' → logprob: -16.875003814697266
    7. '_min' → logprob: -17.125003814697266
    8. '(min' → logprob: -17.500003814697266
    9. ' sum' → logprob: -18.250003814697266
    10. '_str' → logprob: -18.625003814697266

Token 238: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004388942907098681
    2. ')
' → logprob: -7.750438690185547
    3. 'else' → logprob: -11.875438690185547
    4. '+' → logprob: -14.625438690185547
    5. ' )' → logprob: -15.750438690185547
    6. '())' → logprob: -15.875438690185547
    7. '```' → logprob: -16.000438690185547
    8. '   ' → logprob: -16.500438690185547
    9. '+)' → logprob: -17.000438690185547
    10. ' else' → logprob: -17.000438690185547

Token 239: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.00028171599842607975
    2. ' else' → logprob: -8.37528133392334
    3. '<|end|>' → logprob: -10.12528133392334
    4. 'elif' → logprob: -12.00028133392334
    5. '```' → logprob: -12.37528133392334
    6. '#else' → logprob: -15.25028133392334
    7. ')' → logprob: -16.000282287597656
    8. '
' → logprob: -16.125282287597656
    9. '<|end|>' → logprob: -16.500282287597656
    10. '_else' → logprob: -16.875282287597656

Token 240: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026777999475598335
    2. ':
' → logprob: -3.651777982711792
    3. '   ' → logprob: -7.651778221130371
    4. ':
' → logprob: -14.026778221130371
    5. ' :' → logprob: -15.026778221130371
    6. 'print' → logprob: -15.526778221130371
    7. '():
' → logprob: -15.651778221130371
    8. ':

' → logprob: -15.651778221130371
    9. '=' → logprob: -16.151777267456055
    10. ' :
' → logprob: -16.276777267456055

Token 241: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01354664284735918
    2. 'print' → logprob: -4.888546466827393
    3. ' print' → logprob: -5.138546466827393
    4. '```' → logprob: -10.01354694366455
    5. '#' → logprob: -12.76354694366455
    6. '
' → logprob: -13.26354694366455
    7. '    ' → logprob: -13.63854694366455
    8. '	print' → logprob: -13.76354694366455
    9. '   ' → logprob: -13.76354694366455
    10. '``' → logprob: -14.13854694366455

Token 242: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00041756415157578886
    2. '0' → logprob: -8.250417709350586
    3. ' print' → logprob: -9.625417709350586
    4. '   ' → logprob: -10.250417709350586
    5. 'pass' → logprob: -10.625417709350586
    6. '#' (adapté à ' #') → logprob: -11.875417709350586
    7. 'if' → logprob: -11.875417709350586
    8. 'for' → logprob: -12.125417709350586
    9. '-' → logprob: -13.250417709350586
    10. 't' → logprob: -13.375417709350586

Token 243: ' Try' (ID: 14720)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05676499009132385
    2. ' print' → logprob: -2.931765079498291
    3. '#' → logprob: -7.056765079498291
    4. '   ' → logprob: -8.181764602661133
    5. 'if' → logprob: -8.306764602661133
    6. ' if' → logprob: -8.931764602661133
    7. 'pass' → logprob: -9.306764602661133
    8. ' #' → logprob: -9.556764602661133
    9. 'for' → logprob: -9.931764602661133
    10. 'length' → logprob: -10.806764602661133

Token 244: ' just' (ID: 1327)
  Prédit: 'single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'single' → logprob: -1.1409037113189697
    2. 'for' → logprob: -1.7659037113189697
    3. 'cut' → logprob: -1.7659037113189697
    4. 'to' → logprob: -2.2659037113189697
    5. 'half' → logprob: -2.8909037113189697
    6. 'one' → logprob: -3.0159037113189697
    7. 'all' → logprob: -3.3909037113189697
    8. 'spl' → logprob: -3.7659037113189697
    9. 'if' → logprob: -4.140903472900391
    10. 'a' → logprob: -4.765903472900391

Token 245: ' one' (ID: 1001)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0676458552479744
    2. 't' → logprob: -3.942645788192749
    3. '   ' → logprob: -4.442646026611328
    4. 'cut' → logprob: -4.567646026611328
    5. ' print' → logprob: -4.817646026611328
    6. 'min' → logprob: -5.192646026611328
    7. 'one' → logprob: -6.317646026611328
    8. 'printing' → logprob: -6.317646026611328
    9. '
' → logprob: -6.692646026611328
    10. ' printing' → logprob: -6.817646026611328

Token 246: ' cut' (ID: 6092)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cut' → logprob: -0.02853371948003769
    2. ' cut' → logprob: -3.653533697128296
    3. 'cost' → logprob: -7.403533935546875
    4. 'if' → logprob: -8.153533935546875
    5. 'print' → logprob: -8.403533935546875
    6. 't' → logprob: -8.653533935546875
    7. 'half' → logprob: -8.778533935546875
    8. 'piece' → logprob: -8.903533935546875
    9. 'for' → logprob: -9.028533935546875
    10. '
' → logprob: -9.028533935546875

Token 247: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7299510836601257
    2. 'cost' → logprob: -1.8549511432647705
    3. ' for' → logprob: -2.2299511432647705
    4. 'min' → logprob: -2.7299511432647705
    5. ':
' → logprob: -2.7299511432647705
    6. ':' → logprob: -2.8549511432647705
    7. '   ' → logprob: -3.2299511432647705
    8. 'if' → logprob: -4.354950904846191
    9. '
' → logprob: -5.229950904846191
    10. ' cost' → logprob: -5.854950904846191

Token 248: 'can' (ID: 6929)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3868131637573242
    2. 'if' → logprob: -1.2618131637573242
    3. 'for' → logprob: -4.011813163757324
    4. ' print' → logprob: -5.011813163757324
    5. ' if' → logprob: -5.386813163757324
    6. '   ' → logprob: -6.136813163757324
    7. 'cut' → logprob: -6.636813163757324
    8. '
' → logprob: -6.886813163757324
    9. '#' → logprob: -7.011813163757324
    10. ')' → logprob: -7.136813163757324

Token 249: ' that' (ID: 484)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -1.2912347316741943
    2. 'print' → logprob: -1.4162347316741943
    3. 'N' → logprob: -1.7912347316741943
    4. ' N' → logprob: -2.0412347316741943
    5. ' be' → logprob: -2.1662347316741943
    6. 'be' → logprob: -3.2912347316741943
    7. ' only' → logprob: -4.916234970092773
    8. ' cut' → logprob: -5.166234970092773
    9. ' split' → logprob: -5.541234970092773
    10. 'split' → logprob: -5.541234970092773

Token 250: ' happen' (ID: 5659)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.7334666848182678
    2. 'be' → logprob: -0.8584666848182678
    3. ' happen' → logprob: -3.108466625213623
    4. 'h' → logprob: -4.358466625213623
    5. ')' → logprob: -4.858466625213623
    6. 'split' → logprob: -4.983466625213623
    7. 'cut' → logprob: -5.108466625213623
    8. 'N' → logprob: -5.608466625213623
    9. 'break' → logprob: -5.858466625213623
    10. 'print' → logprob: -6.108466625213623

Token 251: '?' (ID: 30)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.66525799036026
    2. '):' → logprob: -1.2902579307556152
    3. '):
' → logprob: -2.5402579307556152
    4. '?' → logprob: -2.6652579307556152
    5. '?)' → logprob: -3.4152579307556152
    6. '?):' → logprob: -4.165257930755615
    7. ')?' → logprob: -5.165257930755615
    8. '   ' → logprob: -6.415257930755615
    9. ' at' → logprob: -6.790257930755615
    10. 'print' → logprob: -6.915257930755615

Token 252: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015220485627651215
    2. '   ' → logprob: -4.390220642089844
    3. ')
' → logprob: -6.140220642089844
    4. '):' → logprob: -8.015220642089844
    5. '):
' → logprob: -9.515220642089844
    6. '    
' → logprob: -10.140220642089844
    7. '
' → logprob: -10.765220642089844
    8. '```' → logprob: -11.390220642089844
    9. '#' → logprob: -11.515220642089844
    10. '  
' → logprob: -11.640220642089844

Token 253: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.11558564752340317
    2. ' N' → logprob: -2.7405855655670166
    3. 'half' → logprob: -3.2405855655670166
    4. ' half' → logprob: -5.240585803985596
    5. ' ' → logprob: -9.990585327148438
    6. 'hal' → logprob: -11.115585327148438
    7. ')' → logprob: -11.115585327148438
    8. 'True' → logprob: -11.115585327148438
    9. 'not' → logprob: -11.490585327148438
    10. '2' → logprob: -11.615585327148438

Token 254: '/' (ID: 14)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.09277079254388809
    2. '%' → logprob: -3.34277081489563
    3. '==' → logprob: -3.46777081489563
    4. ' >' → logprob: -4.592770576477051
    5. '>=' → logprob: -4.717770576477051
    6. ' ==' → logprob: -6.342770576477051
    7. '<=' → logprob: -7.342770576477051
    8. ' >=' → logprob: -8.46777057647705
    9. ' %' → logprob: -8.84277057647705
    10. '```' → logprob: -9.84277057647705

Token 255: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003160393098369241
    2. ' ' → logprob: -8.12531566619873
    3. '=' → logprob: -11.62531566619873
    4. '```' → logprob: -12.00031566619873
    5. '
' → logprob: -13.12531566619873
    6. ')' → logprob: -14.25031566619873
    7. '4' → logprob: -14.37531566619873
    8. '>' → logprob: -14.50031566619873
    9. '   ' → logprob: -14.75031566619873
    10. '  ' → logprob: -15.75031566619873

Token 256: ' is' (ID: 382)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.18647830188274384
    2. ' %' → logprob: -1.8114782571792603
    3. '>' → logprob: -5.561478137969971
    4. ')' → logprob: -6.686478137969971
    5. '==' → logprob: -7.686478137969971
    6. ' >' → logprob: -7.811478137969971
    7. ' ==' → logprob: -8.436478614807129
    8. ' ' → logprob: -8.811478614807129
    9. '>=' → logprob: -9.436478614807129
    10. ' !=' → logprob: -10.061478614807129

Token 257: ' one' (ID: 1001)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3304842412471771
    2. '1' → logprob: -1.8304842710494995
    3. 'int' → logprob: -2.33048415184021
    4. 'N' → logprob: -4.330484390258789
    5. '2' → logprob: -5.830484390258789
    6. 'not' → logprob: -6.080484390258789
    7. 't' → logprob: -6.455484390258789
    8. 'exact' → logprob: -7.080484390258789
    9. 'half' → logprob: -7.455484390258789
    10. 'even' → logprob: -7.955484390258789

Token 258: ' of' (ID: 328)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -1.2397754192352295
    2. '):' → logprob: -1.2397754192352295
    3. ')' → logprob: -1.3647754192352295
    4. '?' → logprob: -2.3647754192352295
    5. ':' → logprob: -3.6147754192352295
    6. ' and' → logprob: -3.9897754192352295
    7. ':
' → logprob: -5.114775657653809
    8. '?
' → logprob: -5.239775657653809
    9. ',' → logprob: -5.614775657653809
    10. ')
' → logprob: -5.614775657653809

Token 259: ' the' (ID: 290)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.4067581295967102
    2. '[t' → logprob: -1.5317580699920654
    3. '[' → logprob: -2.6567580699920654
    4. ' t' → logprob: -3.9067580699920654
    5. 'range' → logprob: -4.9067583084106445
    6. '(t' → logprob: -5.1567583084106445
    7. '{' → logprob: -5.2817583084106445
    8. 'the' → logprob: -6.1567583084106445
    9. ' range' → logprob: -6.2817583084106445
    10. ' [' → logprob: -6.4067583084106445

Token 260: ' cut' (ID: 6092)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.17257574200630188
    2. 'length' → logprob: -3.2975757122039795
    3. 'cuts' → logprob: -3.9225757122039795
    4. 'cut' → logprob: -3.9225757122039795
    5. 'half' → logprob: -4.172575950622559
    6. '[t' → logprob: -4.422575950622559
    7. 'inputs' → logprob: -4.547575950622559
    8. 'input' → logprob: -4.547575950622559
    9. '[' → logprob: -5.047575950622559
    10. ' lengths' → logprob: -5.672575950622559

Token 261: ' positions' (ID: 15897)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.35848888754844666
    2. '_' → logprob: -2.3584887981414795
    3. '_point' → logprob: -3.2334887981414795
    4. 'point' → logprob: -3.3584887981414795
    5. '?' → logprob: -3.7334887981414795
    6. '#' → logprob: -3.7334887981414795
    7. ':' → logprob: -4.233489036560059
    8. ')' → logprob: -4.483489036560059
    9. '_points' → logprob: -4.858489036560059
    10. '_line' → logprob: -4.983489036560059

Token 262: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21672214567661285
    2. '):' → logprob: -2.341722249984741
    3. ':' → logprob: -2.841722249984741
    4. '):
' → logprob: -3.716722249984741
    5. ')' → logprob: -4.466722011566162
    6. ':
' → logprob: -6.216722011566162
    7. '?' → logprob: -6.841722011566162
    8. ',' → logprob: -7.466722011566162
    9. 'if' → logprob: -8.84172248840332
    10. ')
' → logprob: -8.96672248840332

Token 263: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.911425769329071
    2. ' for' → logprob: -1.6614258289337158
    3. ' cut' → logprob: -1.7864258289337158
    4. 'cut' → logprob: -2.036425828933716
    5. 'pos' → logprob: -3.411425828933716
    6. 'for' → logprob: -3.411425828933716
    7. ' if' → logprob: -4.911425590515137
    8. 'if' → logprob: -4.911425590515137
    9. ' pos' → logprob: -4.911425590515137
    10. ' i' → logprob: -5.661425590515137

Token 264: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.10563229769468307
    2. 'half' → logprob: -2.7306323051452637
    3. 'if' → logprob: -3.6056323051452637
    4. 'cut' → logprob: -4.980632305145264
    5. 'pos' → logprob: -7.355632305145264
    6. 'idx' → logprob: -9.480631828308105
    7. 'i' → logprob: -9.605631828308105
    8. 'possible' → logprob: -9.980631828308105
    9. '```' → logprob: -9.980631828308105
    10. 'cuts' → logprob: -10.230631828308105

Token 265: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011419019661843777
    2. 'k' → logprob: -5.01141881942749
    3. ' i' → logprob: -5.51141881942749
    4. 'cut' → logprob: -7.51141881942749
    5. 'x' → logprob: -10.386419296264648
    6. 'pos' → logprob: -10.511419296264648
    7. ' k' → logprob: -11.011419296264648
    8. 'idx' → logprob: -11.386419296264648
    9. ' cut' → logprob: -11.386419296264648
    10. 'length' → logprob: -13.386419296264648

Token 266: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003625247161835432
    2. 'in' → logprob: -5.628625392913818
    3. ' ' → logprob: -10.75362491607666
    4. '  ' → logprob: -13.87862491607666
    5. '   ' → logprob: -14.00362491607666
    6. 'range' → logprob: -14.87862491607666
    7. '1' → logprob: -15.00362491607666
    8. '    ' → logprob: -15.37862491607666
    9. 'n' → logprob: -15.50362491607666
    10. '_' → logprob: -15.62862491607666

Token 267: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07889044284820557
    2. ' range' → logprob: -2.578890323638916
    3. '(range' → logprob: -15.203890800476074
    4. '[' → logprob: -15.953890800476074
    5. ' ' → logprob: -16.453889846801758
    6. '1' → logprob: -16.453889846801758
    7. '   ' → logprob: -16.703889846801758
    8. '	range' → logprob: -16.703889846801758
    9. 'in' → logprob: -16.953889846801758
    10. '  ' → logprob: -17.828889846801758

Token 268: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00014406509581021965
    2. '(N' → logprob: -9.375144004821777
    3. '1' → logprob: -9.750144004821777
    4. 'N' → logprob: -14.500144004821777
    5. ' (' → logprob: -15.500144004821777
    6. ' ' → logprob: -15.750144004821777
    7. '   ' → logprob: -17.250144958496094
    8. '(n' → logprob: -18.125144958496094
    9. '(len' → logprob: -18.750144958496094
    10. '(
' → logprob: -19.000144958496094

Token 269: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015104549238458276
    2. 'N' → logprob: -6.5015106201171875
    3. ' ' → logprob: -12.251510620117188
    4. '(' → logprob: -13.376510620117188
    5. '0' → logprob: -14.626510620117188
    6. '2' → logprob: -14.876510620117188
    7. ' N' → logprob: -15.001510620117188
    8. '   ' → logprob: -15.126510620117188
    9. 'half' → logprob: -16.001510620117188
    10. 'len' → logprob: -16.001510620117188

Token 270: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026753442944027483
    2. ' ,' → logprob: -8.25026798248291
    3. ',N' → logprob: -12.12526798248291
    4. 'N' → logprob: -14.50026798248291
    5. '   ' → logprob: -15.75026798248291
    6. '(N' → logprob: -16.250267028808594
    7. ' N' → logprob: -17.375267028808594
    8. '1' → logprob: -17.500267028808594
    9. '(' → logprob: -17.500267028808594
    10. ',n' → logprob: -17.750267028808594

Token 271: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.7610454708337784e-05
    2. ' N' → logprob: -10.500027656555176
    3. '   ' → logprob: -18.00002670288086
    4. '	N' → logprob: -19.87502670288086
    5. 'Ｎ' → logprob: -21.25002670288086
    6. 'len' → logprob: -22.12502670288086
    7. 'n' → logprob: -23.37502670288086
    8. ' ' → logprob: -23.50002670288086
    9. '>N' → logprob: -23.50002670288086
    10. '```' → logprob: -23.75002670288086

Token 272: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16294355690479279
    2. '):' → logprob: -2.0379436016082764
    3. '+' → logprob: -3.9129436016082764
    4. '):
' → logprob: -10.787943840026855
    5. '-' → logprob: -11.287943840026855
    6. '   ' → logprob: -11.537943840026855
    7. ' ):
' → logprob: -11.537943840026855
    8. '()):
' → logprob: -11.912943840026855
    9. '):

' → logprob: -12.662943840026855
    10. '():
' → logprob: -12.662943840026855

Token 273: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026023797690868378
    2. '       ' → logprob: -3.7760238647460938
    3. ' if' → logprob: -6.026023864746094
    4. 'if' → logprob: -8.026023864746094
    5. '<|end|>' → logprob: -11.651023864746094
    6. ':' → logprob: -12.151023864746094
    7. '```' → logprob: -12.151023864746094
    8. '    ' → logprob: -12.651023864746094
    9. '	if' → logprob: -13.026023864746094
    10. ',' → logprob: -13.901023864746094

Token 274: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.01962142065167427
    2. 'length' → logprob: -4.8946213722229
    3. '       ' → logprob: -5.1446213722229
    4. '   ' → logprob: -5.5196213722229
    5. ' if' → logprob: -6.2696213722229
    6. '```' → logprob: -9.644621849060059
    7. 'cost' → logprob: -9.894621849060059
    8. '           ' → logprob: -9.894621849060059
    9. ' length' → logprob: -11.269621849060059
    10. 'half' → logprob: -11.394621849060059

Token 275: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.017118429765105247
    2. ' i' → logprob: -4.392118453979492
    3. 't' → logprob: -5.892118453979492
    4. '(i' → logprob: -6.517118453979492
    5. ' (' → logprob: -9.142118453979492
    6. ' t' → logprob: -9.267118453979492
    7. '   ' → logprob: -9.642118453979492
    8. 'half' → logprob: -10.892118453979492
    9. 'length' → logprob: -10.892118453979492
    10. '(' → logprob: -11.267118453979492

Token 276: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6932612657546997
    2. ' ==' → logprob: -0.6932612657546997
    3. '*' → logprob: -9.81826114654541
    4. '=' → logprob: -10.44326114654541
    5. ' *' → logprob: -11.56826114654541
    6. ')==' → logprob: -11.69326114654541
    7. ' ' → logprob: -12.94326114654541
    8. '==
' → logprob: -12.94326114654541
    9. '+' → logprob: -13.06826114654541
    10. ']==' → logprob: -13.69326114654541

Token 277: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.0002973280206788331
    2. ' half' → logprob: -8.125297546386719
    3. 'hal' → logprob: -13.875297546386719
    4. 'N' → logprob: -16.12529754638672
    5. '   ' → logprob: -17.00029754638672
    6. ' ' → logprob: -17.37529754638672
    7. '_half' → logprob: -17.50029754638672
    8. 'halve' → logprob: -17.75029754638672
    9. 'Half' → logprob: -18.75029754638672
    10. '-half' → logprob: -19.00029754638672

Token 278: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.48721885681152344
    2. ':
' → logprob: -0.9872188568115234
    3. ' and' → logprob: -4.737218856811523
    4. '       ' → logprob: -6.612218856811523
    5. ' or' → logprob: -6.737218856811523
    6. '           ' → logprob: -6.987218856811523
    7. 'and' → logprob: -7.862218856811523
    8. '   ' → logprob: -8.112218856811523
    9. '):
' → logprob: -9.737218856811523
    10. ':
' → logprob: -10.737218856811523

Token 279: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3600699305534363
    2. 'i' → logprob: -1.235069990158081
    3. ' i' → logprob: -5.735069751739502
    4. ' N' → logprob: -5.860069751739502
    5. '(i' → logprob: -6.235069751739502
    6. '   ' → logprob: -6.860069751739502
    7. '(N' → logprob: -6.860069751739502
    8. 'j' → logprob: -7.235069751739502
    9. '       ' → logprob: -8.48507022857666
    10. '(' → logprob: -8.98507022857666

Token 280: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6406806707382202
    2. '-' → logprob: -0.7656806707382202
    3. '-i' → logprob: -4.89068078994751
    4. '//' → logprob: -8.265680313110352
    5. ' ' → logprob: -9.265680313110352
    6. '-half' → logprob: -10.140680313110352
    7. '-user' → logprob: -10.890680313110352
    8. 'i' → logprob: -11.015680313110352
    9. '-input' → logprob: -11.515680313110352
    10. '   ' → logprob: -11.515680313110352

Token 281: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002851729223039001
    2. ' i' → logprob: -8.375285148620605
    3. 'half' → logprob: -9.875285148620605
    4. '   ' → logprob: -13.625285148620605
    5. ' half' → logprob: -13.750285148620605
    6. '	i' → logprob: -15.000285148620605
    7. ' ' → logprob: -15.000285148620605
    8. '  ' → logprob: -16.125286102294922
    9. '```' → logprob: -17.000286102294922
    10. '(i' → logprob: -17.625286102294922

Token 282: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5759760141372681
    2. ' ==' → logprob: -0.8259760141372681
    3. ')==' → logprob: -10.575976371765137
    4. ']==' → logprob: -12.200976371765137
    5. ')' → logprob: -13.075976371765137
    6. ' ' → logprob: -13.325976371765137
    7. '=' → logprob: -14.200976371765137
    8. '==
' → logprob: -14.575976371765137
    9. '===' → logprob: -14.575976371765137
    10. '()==' → logprob: -15.075976371765137

Token 283: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.0007151735480874777
    2. ' half' → logprob: -7.250715255737305
    3. 'hal' → logprob: -12.250715255737305
    4. 'halb' → logprob: -15.750715255737305
    5. '_half' → logprob: -16.500715255737305
    6. ' ' → logprob: -17.375715255737305
    7. 'halve' → logprob: -17.375715255737305
    8. '   ' → logprob: -17.875715255737305
    9. '-half' → logprob: -18.125715255737305
    10. '  ' → logprob: -19.750715255737305

Token 284: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.048887789249420166
    2. ':
' → logprob: -3.0488877296447754
    3. '):
' → logprob: -8.798888206481934
    4. '):' → logprob: -9.048888206481934
    5. '       ' → logprob: -11.173888206481934
    6. ':

' → logprob: -12.673888206481934
    7. '           ' → logprob: -12.673888206481934
    8. ' :' → logprob: -12.673888206481934
    9. ' and' → logprob: -13.548888206481934
    10. '():
' → logprob: -13.548888206481934

Token 285: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0018696174956858158
    2. '       ' → logprob: -7.2518696784973145
    3. '```' → logprob: -8.001869201660156
    4. 'print' → logprob: -8.126869201660156
    5. ' print' → logprob: -8.501869201660156
    6. '   ' → logprob: -8.751869201660156
    7. '
' → logprob: -10.251869201660156
    8. ':
' → logprob: -10.501869201660156
    9. ':' → logprob: -10.626869201660156
    10. '<|end|>' → logprob: -11.126869201660156

Token 286: ' cost' (ID: 3097)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.017830075696110725
    2. 'cost' (adapté à ' cost') → logprob: -4.642829895019531
    3. '           ' → logprob: -5.767829895019531
    4. ' print' → logprob: -6.392829895019531
    5. '   ' → logprob: -6.392829895019531
    6. 'if' → logprob: -7.392829895019531
    7. 'min' → logprob: -8.142829895019531
    8. ' cost' → logprob: -8.267829895019531
    9. '       ' → logprob: -8.392829895019531
    10. '               ' → logprob: -9.392829895019531

Token 287: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889033854007721
    2. '=' → logprob: -2.578890323638916
    3. ' +=' → logprob: -14.578890800476074
    4. ' ' → logprob: -16.453889846801758
    5. '+=' → logprob: -17.203889846801758
    6. ' =
' → logprob: -18.203889846801758
    7. ' ' → logprob: -18.828889846801758
    8. '   ' → logprob: -18.953889846801758
    9. '＝' → logprob: -19.578889846801758
    10. '=
' → logprob: -19.828889846801758

Token 288: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.10021044313907623
    2. ' t' → logprob: -2.350210428237915
    3. '           ' → logprob: -13.100210189819336
    4. '   ' → logprob: -13.850210189819336
    5. '	t' → logprob: -15.475210189819336
    6. '`t' → logprob: -15.475210189819336
    7. ' ' → logprob: -16.350210189819336
    8. '       ' → logprob: -16.350210189819336
    9. ' ' → logprob: -16.350210189819336
    10. '    ' → logprob: -17.725210189819336

Token 289: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.451116051815916e-05
    2. 'i' → logprob: -10.625024795532227
    3. '[' → logprob: -15.625024795532227
    4. '[t' → logprob: -17.250024795532227
    5. ' [' → logprob: -17.375024795532227
    6. '[
' → logprob: -17.750024795532227
    7. '(i' → logprob: -19.000024795532227
    8. '{i' → logprob: -19.000024795532227
    9. ' i' → logprob: -19.125024795532227
    10. '   ' → logprob: -19.375024795532227

Token 290: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00018399098189547658
    2. ' -' → logprob: -8.625184059143066
    3. '[' → logprob: -12.875184059143066
    4. ']' → logprob: -14.750184059143066
    5. '1' → logprob: -15.375184059143066
    6. ']-' → logprob: -15.375184059143066
    7. '[i' → logprob: -15.500184059143066
    8. '   ' → logprob: -15.625184059143066
    9. 'i' → logprob: -15.750184059143066
    10. '       ' → logprob: -16.12518310546875

Token 291: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. '```' → logprob: -16.875001907348633
    4. '   ' → logprob: -17.125001907348633
    5. '2' → logprob: -18.625001907348633
    6. '
' → logprob: -18.750001907348633
    7. '-' → logprob: -19.125001907348633
    8. '１' → logprob: -19.437501907348633
    9. 'i' → logprob: -19.500001907348633
    10. '  ' → logprob: -19.562501907348633

Token 292: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.16175994277000427
    2. ']' → logprob: -1.9117599725723267
    3. '           ' → logprob: -6.786759853363037
    4. ')
' → logprob: -8.661760330200195
    5. ']
' → logprob: -9.286760330200195
    6. ')' → logprob: -10.161760330200195
    7. '       ' → logprob: -10.161760330200195
    8. ' ]
' → logprob: -10.661760330200195
    9. '               ' → logprob: -10.911760330200195
    10. ' ]' → logprob: -12.286760330200195

Token 293: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002779014757834375
    2. ' if' → logprob: -8.875277519226074
    3. 'if' → logprob: -9.250277519226074
    4. '   ' → logprob: -11.000277519226074
    5. '       ' → logprob: -11.250277519226074
    6. '
' → logprob: -11.625277519226074
    7. '               ' → logprob: -13.875277519226074
    8. '            
' → logprob: -14.125277519226074
    9. '```' → logprob: -14.875277519226074
    10. 'print' → logprob: -15.000277519226074

Token 294: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.002364467130973935
    2. '           ' → logprob: -6.252364635467529
    3. ' if' → logprob: -7.752364635467529
    4. '       ' → logprob: -12.627364158630371
    5. '   ' → logprob: -12.877364158630371
    6. '               ' → logprob: -15.127364158630371
    7. '```' → logprob: -17.377365112304688
    8. '	if' → logprob: -17.627365112304688
    9. '
' → logprob: -18.502365112304688
    10. ' ' → logprob: -18.752365112304688

Token 295: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.4740966856479645
    2. ' min' → logprob: -0.9740966558456421
    3. '(min' → logprob: -11.224096298217773
    4. '           ' → logprob: -12.349096298217773
    5. '[min' → logprob: -14.599096298217773
    6. '	min' → logprob: -14.849096298217773
    7. ' (' → logprob: -14.974096298217773
    8. '_min' → logprob: -15.349096298217773
    9. '=min' → logprob: -16.224096298217773
    10. '(' → logprob: -16.224096298217773

Token 296: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.5332478142227046e-05
    2. 'sum' → logprob: -11.250015258789062
    3. '_cost' → logprob: -13.500015258789062
    4. '_' → logprob: -15.125015258789062
    5. '_s' → logprob: -15.125015258789062
    6. '_min' → logprob: -16.625015258789062
    7. 'cost' → logprob: -17.250015258789062
    8. 'Sum' → logprob: -17.500015258789062
    9. '_cut' → logprob: -17.875015258789062
    10. '=' → logprob: -18.125015258789062

Token 297: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.023245826363563538
    2. 'is' → logprob: -3.7732458114624023
    3. ' None' → logprob: -16.39824676513672
    4. '==' → logprob: -16.64824676513672
    5. '	is' → logprob: -17.14824676513672
    6. 'None' → logprob: -17.52324676513672
    7. '            ' → logprob: -18.02324676513672
    8. ' ==' → logprob: -18.39824676513672
    9. '           ' → logprob: -18.52324676513672
    10. '        ' → logprob: -18.52324676513672

Token 298: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.029750604182481766
    2. ' None' → logprob: -3.5297505855560303
    3. '(None' → logprob: -16.27975082397461
    4. '=None' → logprob: -19.15475082397461
    5. '           ' → logprob: -19.40475082397461
    6. 'none' → logprob: -19.52975082397461
    7. '   ' → logprob: -19.52975082397461
    8. 'is' → logprob: -20.40475082397461
    9. '_None' → logprob: -20.52975082397461
    10. '               ' → logprob: -21.52975082397461

Token 299: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.004723703023046255
    2. 'or' → logprob: -5.37972354888916
    3. '           ' → logprob: -9.50472354888916
    4. '               ' → logprob: -11.25472354888916
    5. '            ' → logprob: -12.00472354888916
    6. '	or' → logprob: -12.37972354888916
    7. '              ' → logprob: -13.62972354888916
    8. ' ' → logprob: -13.87972354888916
    9. '          ' → logprob: -14.25472354888916
    10. '                ' → logprob: -14.75472354888916

Token 300: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.2519505023956299
    2. 'cost' → logprob: -1.5019505023956299
    3. '               ' → logprob: -11.25195026397705
    4. '           ' → logprob: -12.00195026397705
    5. '   ' → logprob: -14.37695026397705
    6. '(cost' → logprob: -14.50195026397705
    7. '_cost' → logprob: -15.62695026397705
    8. ' ' → logprob: -15.75195026397705
    9. '            ' → logprob: -16.126951217651367
    10. 'Cost' → logprob: -16.126951217651367

Token 301: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.20307546854019165
    2. '>' → logprob: -1.7030754089355469
    3. ' <' → logprob: -6.578075408935547
    4. '<' → logprob: -8.453075408935547
    5. '   ' → logprob: -10.703075408935547
    6. ' is' → logprob: -11.078075408935547
    7. ' ' → logprob: -11.703075408935547
    8. '           ' → logprob: -13.078075408935547
    9. '```' → logprob: -13.078075408935547
    10. ' >
' → logprob: -13.328075408935547

Token 302: ' min' (ID: 1349)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.12797482311725616
    2. ' cost' → logprob: -2.62797474861145
    3. 'min' → logprob: -3.12797474861145
    4. ' min' → logprob: -5.502974987030029
    5. '   ' → logprob: -11.627974510192871
    6. 't' → logprob: -12.127974510192871
    7. ' t' → logprob: -13.127974510192871
    8. '    ' → logprob: -14.627974510192871
    9. '           ' → logprob: -14.627974510192871
    10. ' ' → logprob: -15.377974510192871

Token 303: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0004834617720916867
    2. 'min' → logprob: -8.625483512878418
    3. 'sum' → logprob: -8.750483512878418
    4. '_min' → logprob: -8.875483512878418
    5. ' sum' → logprob: -13.125483512878418
    6. ' min' → logprob: -13.375483512878418
    7. '_s' → logprob: -14.375483512878418
    8. '_' → logprob: -14.625483512878418
    9. ' _' → logprob: -14.625483512878418
    10. '   ' → logprob: -15.875483512878418

Token 304: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4961516559123993
    2. '               ' → logprob: -1.3711516857147217
    3. ':' → logprob: -1.9961516857147217
    4. '):
' → logprob: -7.371151447296143
    5. '           ' → logprob: -8.2461519241333
    6. '=' → logprob: -8.2461519241333
    7. ' :
' → logprob: -9.3711519241333
    8. ' =' → logprob: -10.4961519241333
    9. '=min' → logprob: -10.6211519241333
    10. '              ' → logprob: -10.7461519241333

Token 305: '               ' (ID: 506)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.662334144115448
    2. ' min' → logprob: -1.1623342037200928
    3. '               ' → logprob: -1.7873342037200928
    4. '           ' → logprob: -5.537333965301514
    5. ' cost' → logprob: -9.162334442138672
    6. 'cost' → logprob: -9.287334442138672
    7. '   ' → logprob: -10.412334442138672
    8. '       ' → logprob: -12.287334442138672
    9. '	min' → logprob: -12.537334442138672
    10. '              ' → logprob: -12.537334442138672

Token 306: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.0003357006062287837
    2. ' min' → logprob: -8.000335693359375
    3. '               ' → logprob: -15.125335693359375
    4. '   ' → logprob: -18.625335693359375
    5. '	min' → logprob: -19.125335693359375
    6. '           ' → logprob: -19.500335693359375
    7. '                   ' → logprob: -19.750335693359375
    8. '```' → logprob: -20.500335693359375
    9. 'max' → logprob: -21.500335693359375
    10. ' ' → logprob: -22.500335693359375

Token 307: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.9361264946837764e-07
    2. 'sum' → logprob: -17.125
    3. '_' → logprob: -17.625
    4. '_min' → logprob: -17.75
    5. '_s' → logprob: -18.25
    6. '_cost' → logprob: -19.875
    7. '_max' → logprob: -20.875
    8. ' _' → logprob: -21.0
    9. '_sub' → logprob: -21.5
    10. '_set' → logprob: -21.5

Token 308: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759401917457581
    2. '=' → logprob: -0.8259401917457581
    3. ' ' → logprob: -14.700940132141113
    4. ' =
' → logprob: -16.20094108581543
    5. '=cut' → logprob: -16.82594108581543
    6. ' cost' → logprob: -16.95094108581543
    7. 'cost' → logprob: -17.07594108581543
    8. '=c' → logprob: -17.07594108581543
    9. '=
' → logprob: -17.45094108581543
    10. '=None' → logprob: -17.57594108581543

Token 309: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.05109722167253494
    2. ' cost' → logprob: -3.0510971546173096
    3. 't' → logprob: -6.051097393035889
    4. ' t' → logprob: -8.80109691619873
    5. '   ' → logprob: -15.05109691619873
    6. 'c' → logprob: -15.80109691619873
    7. '(cost' → logprob: -16.551097869873047
    8. '               ' → logprob: -16.676097869873047
    9. '           ' → logprob: -16.801097869873047
    10. ' ' → logprob: -17.301097869873047

Token 310: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3872950077056885
    2. 'if' → logprob: -1.1372950077056885
    3. '   ' → logprob: -8.51229476928711
    4. '```' → logprob: -9.13729476928711
    5. ' if' → logprob: -10.13729476928711
    6. '
' → logprob: -10.26229476928711
    7. '    
' → logprob: -10.63729476928711
    8. ' print' → logprob: -11.88729476928711
    9. '            
' → logprob: -12.63729476928711
    10. '  
' → logprob: -13.01229476928711

Token 311: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.030423477292060852
    2. 'if' → logprob: -3.530423402786255
    3. '
' → logprob: -7.655423641204834
    4. '   ' → logprob: -9.030423164367676
    5. ' print' → logprob: -10.780423164367676
    6. '```' → logprob: -10.780423164367676
    7. ' if' → logprob: -11.030423164367676
    8. '    
' → logprob: -11.030423164367676
    9. '  
' → logprob: -13.405423164367676
    10. '            
' → logprob: -13.530423164367676

Token 312: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.20141996443271637
    2. 'print' → logprob: -1.7014199495315552
    3. ' if' → logprob: -12.701419830322266
    4. '   ' → logprob: -13.451419830322266
    5. '
' → logprob: -13.951419830322266
    6. '```' → logprob: -14.076419830322266
    7. '    
' → logprob: -15.076419830322266
    8. ' print' → logprob: -15.451419830322266
    9. '            
' → logprob: -18.076419830322266
    10. '  
' → logprob: -18.326419830322266

Token 313: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.01815006136894226
    2. ' min' → logprob: -4.0181498527526855
    3. 'm' → logprob: -16.768150329589844
    4. '	min' → logprob: -17.268150329589844
    5. '   ' → logprob: -17.768150329589844
    6. ' ' → logprob: -18.768150329589844
    7. '(min' → logprob: -18.893150329589844
    8. 'max' → logprob: -19.393150329589844
    9. '  ' → logprob: -20.143150329589844
    10. 'mi' → logprob: -20.143150329589844

Token 314: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -9.088346359931165e-07
    2. 'sum' → logprob: -14.125000953674316
    3. '_' → logprob: -16.625
    4. '_min' → logprob: -17.0
    5. '_s' → logprob: -18.0
    6. ' sum' → logprob: -19.25
    7. '__' → logprob: -20.75
    8. 'Sum' → logprob: -20.875
    9. '_set' → logprob: -21.0
    10. '_split' → logprob: -21.125

Token 315: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0006267757853493094
    2. 'is' → logprob: -7.375626564025879
    3. ' ' → logprob: -15.875626564025879
    4. '	is' → logprob: -16.125627517700195
    5. '   ' → logprob: -18.000627517700195
    6. ':' → logprob: -18.875627517700195
    7. ')' → logprob: -19.000627517700195
    8. 'Is' → logprob: -19.250627517700195
    9. ')is' → logprob: -19.625627517700195
    10. ' ' → logprob: -19.750627517700195

Token 316: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.34413179755210876
    2. 'None' → logprob: -1.3441318273544312
    3. ' not' → logprob: -3.5941317081451416
    4. ' None' → logprob: -5.844131946563721
    5. 'Not' → logprob: -11.844131469726562
    6. 'none' → logprob: -12.094131469726562
    7. '   ' → logprob: -13.344131469726562
    8. '	not' → logprob: -14.344131469726562
    9. '0' → logprob: -14.844131469726562
    10. '```' → logprob: -15.219131469726562

Token 317: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00015860427811276168
    2. ' None' → logprob: -8.750158309936523
    3. '   ' → logprob: -16.500158309936523
    4. ' ' → logprob: -18.125158309936523
    5. '  ' → logprob: -19.750158309936523
    6. '(None' → logprob: -19.750158309936523
    7. '_None' → logprob: -19.875158309936523
    8. '    ' → logprob: -20.500158309936523
    9. 'none' → logprob: -20.625158309936523
    10. '       ' → logprob: -21.000158309936523

Token 318: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.049969516694545746
    2. ':
' → logprob: -3.049969434738159
    3. '       ' → logprob: -7.174969673156738
    4. '   ' → logprob: -7.424969673156738
    5. 'print' → logprob: -11.924969673156738
    6. ' :' → logprob: -13.049969673156738
    7. '):
' → logprob: -13.299969673156738
    8. ' print' → logprob: -13.549969673156738
    9. '==' → logprob: -13.674969673156738
    10. ' :
' → logprob: -13.674969673156738

Token 319: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003074566484428942
    2. 'print' → logprob: -8.375307083129883
    3. '   ' → logprob: -9.875307083129883
    4. ' print' → logprob: -10.625307083129883
    5. '```' → logprob: -14.000307083129883
    6. '           ' → logprob: -15.500307083129883
    7. '	print' → logprob: -17.375307083129883
    8. '	   ' → logprob: -18.125307083129883
    9. '
' → logprob: -18.750307083129883
    10. '	' → logprob: -18.750307083129883

Token 320: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0052392068319022655
    2. ' print' → logprob: -5.255239009857178
    3. '   ' → logprob: -12.255239486694336
    4. '       ' → logprob: -14.505239486694336
    5. '```' → logprob: -15.755239486694336
    6. '	print' → logprob: -17.505239486694336
    7. '           ' → logprob: -19.380239486694336
    8. ' ' → logprob: -19.880239486694336
    9. '.print' → logprob: -20.255239486694336
    10. '``' → logprob: -20.380239486694336

Token 321: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.250000953674316
    3. 'min' → logprob: -15.875000953674316
    4. '(max' → logprob: -18.625
    5. ',min' → logprob: -21.5
    6. '(m' → logprob: -21.625
    7. ' min' → logprob: -22.125
    8. '=min' → logprob: -22.5
    9. ' (' → logprob: -23.25
    10. '_min' → logprob: -24.0

Token 322: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -4.246537173457909e-06
    2. 'sum' → logprob: -12.500003814697266
    3. '_' → logprob: -16.125003814697266
    4. '_min' → logprob: -16.250003814697266
    5. ')' → logprob: -16.625003814697266
    6. ' _' → logprob: -16.625003814697266
    7. '_s' → logprob: -16.750003814697266
    8. 'Sum' → logprob: -18.000003814697266
    9. '_cost' → logprob: -18.375003814697266
    10. ' sum' → logprob: -18.625003814697266

Token 323: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.4034345187828876e-05
    2. '())' → logprob: -11.62502384185791
    3. ')
' → logprob: -12.25002384185791
    4. ' )' → logprob: -12.37502384185791
    5. '()' → logprob: -13.25002384185791
    6. '<|end|>' → logprob: -13.25002384185791
    7. '```' → logprob: -14.62502384185791
    8. '   ' → logprob: -14.75002384185791
    9. '(' → logprob: -14.87502384185791
    10. 'else' → logprob: -15.00002384185791

Token 324: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 325: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0011741555063053966
    2. ' else' → logprob: -7.501173973083496
    3. '<|end|>' → logprob: -8.001173973083496
    4. '```' → logprob: -8.251173973083496
    5. '   ' → logprob: -11.376173973083496
    6. 'elif' → logprob: -12.001173973083496
    7. 'print' → logprob: -12.376173973083496
    8. 'endif' → logprob: -14.001173973083496
    9. '...' → logprob: -14.501173973083496
    10. '#' → logprob: -14.876173973083496

Token 326: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6220328211784363
    2. ':
' → logprob: -0.8720328211784363
    3. '       ' → logprob: -3.122032880783081
    4. '   ' → logprob: -7.372032642364502
    5. '():
' → logprob: -8.62203311920166
    6. 'print' → logprob: -8.99703311920166
    7. ' print' → logprob: -11.87203311920166
    8. '           ' → logprob: -11.99703311920166
    9. '():' → logprob: -12.49703311920166
    10. '(' → logprob: -12.62203311920166

Token 327: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004979832097887993
    2. '   ' → logprob: -5.504979610443115
    3. ' print' → logprob: -8.004980087280273
    4. '       ' → logprob: -8.004980087280273
    5. '```' → logprob: -8.379980087280273
    6. 'pass' → logprob: -13.254980087280273
    7. 'raise' → logprob: -13.629980087280273
    8. '``' → logprob: -15.004980087280273
    9. '	print' → logprob: -15.004980087280273
    10. ' ' → logprob: -16.254980087280273

Token 328: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -15.625
    3. '```' → logprob: -18.375
    4. '   ' → logprob: -18.5
    5. '       ' → logprob: -18.75
    6. 'pass' → logprob: -19.125
    7. 'raise' → logprob: -20.75
    8. '	print' → logprob: -21.375
    9. '#' (adapté à ' #') → logprob: -23.125
    10. '#print' → logprob: -23.75

Token 329: ' try' (ID: 2075)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.368984107510187e-05
    2. 'pass' → logprob: -10.750033378601074
    3. '#' → logprob: -11.625033378601074
    4. ' print' → logprob: -13.000033378601074
    5. 'raise' → logprob: -15.250033378601074
    6. '#print' → logprob: -15.250033378601074
    7. '   ' → logprob: -15.500033378601074
    8. '       ' → logprob: -16.37503433227539
    9. 'min' → logprob: -16.50003433227539
    10. '```' → logprob: -16.87503433227539

Token 330: ' all' (ID: 722)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24986860156059265
    2. 'for' → logprob: -1.999868631362915
    3. ' for' → logprob: -3.749868631362915
    4. ' N' → logprob: -3.999868631362915
    5. 'N' → logprob: -4.374868392944336
    6. ':' → logprob: -5.124868392944336
    7. 't' → logprob: -5.249868392944336
    8. 'pass' → logprob: -5.374868392944336
    9. '0' → logprob: -5.624868392944336
    10. 'print' → logprob: -5.749868392944336

Token 331: ' cuts' (ID: 29505)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.053252723067998886
    2. ':' → logprob: -3.053252696990967
    3. ':
' → logprob: -6.053252696990967
    4. ' for' → logprob: -6.303252696990967
    5. '   ' → logprob: -7.803252696990967
    6. 'range' → logprob: -10.303253173828125
    7. '#' → logprob: -11.553253173828125
    8. '```' → logprob: -11.678253173828125
    9. 'else' → logprob: -12.178253173828125
    10. '       ' → logprob: -13.303253173828125

Token 332: ' of' (ID: 328)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09302359074354172
    2. ' for' → logprob: -2.9680235385894775
    3. '   ' → logprob: -3.7180235385894775
    4. ':' → logprob: -4.843023777008057
    5. ':
' → logprob: -6.218023777008057
    6. '       ' → logprob: -6.718023777008057
    7. '
' → logprob: -6.843023777008057
    8. 'print' → logprob: -7.968023777008057
    9. '```' → logprob: -8.718023300170898
    10. '...' → logprob: -9.218023300170898

Token 333: ' size' (ID: 2349)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.0888571739196777
    2. 't' → logprob: -1.2138571739196777
    3. '3' → logprob: -1.7138571739196777
    4. 'range' → logprob: -3.2138571739196777
    5. 'three' → logprob: -3.4638571739196777
    6. ' t' → logprob: -3.8388571739196777
    7. 'the' → logprob: -3.8388571739196777
    8. 'length' → logprob: -4.213857173919678
    9. ' N' → logprob: -4.463857173919678
    10. '1' → logprob: -5.088857173919678

Token 334: ' half' (ID: 6375)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.8094550371170044
    2. ' N' → logprob: -1.4344550371170044
    3. 'half' → logprob: -1.9344550371170044
    4. ' half' → logprob: -2.684454917907715
    5. '1' → logprob: -3.059454917907715
    6. '3' → logprob: -3.559454917907715
    7. ' ' → logprob: -4.684454917907715
    8. '0' → logprob: -5.434454917907715
    9. 't' → logprob: -6.184454917907715
    10. '```' → logprob: -6.309454917907715

Token 335: ' with' (ID: 483)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25190794467926025
    2. ' for' → logprob: -1.6269079446792603
    3. '
' → logprob: -4.501907825469971
    4. '   ' → logprob: -4.876907825469971
    5. ':' → logprob: -5.501907825469971
    6. ':
' → logprob: -6.626907825469971
    7. '```' → logprob: -6.876907825469971
    8. '       ' → logprob: -7.876907825469971
    9. '    
' → logprob: -9.626908302307129
    10. '#' → logprob: -9.626908302307129

Token 336: ' more' (ID: 945)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.116198182106018
    2. 'N' → logprob: -1.366198182106018
    3. 'print' → logprob: -2.7411980628967285
    4. 'for' → logprob: -2.9911980628967285
    5. 'cost' → logprob: -3.3661980628967285
    6. ' N' → logprob: -3.4911980628967285
    7. 'length' → logprob: -3.4911980628967285
    8. 'i' → logprob: -3.6161980628967285
    9. ' t' → logprob: -3.7411980628967285
    10. 'None' → logprob: -3.9911980628967285

Token 337: ' cuts' (ID: 29505)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5156558156013489
    2. ' for' → logprob: -2.140655755996704
    3. 't' → logprob: -3.265655755996704
    4. '   ' → logprob: -3.390655755996704
    5. ' than' → logprob: -3.515655755996704
    6. 'break' → logprob: -3.765655755996704
    7. '...' → logprob: -4.515655994415283
    8. ' loops' → logprob: -4.515655994415283
    9. ' code' → logprob: -4.640655994415283
    10. 'complex' → logprob: -4.640655994415283

Token 338: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3330502510070801
    2. 'for' → logprob: -1.70805025100708
    3. ' for' → logprob: -2.58305025100708
    4. '   ' → logprob: -4.70805025100708
    5. '           ' → logprob: -4.83305025100708
    6. '#' → logprob: -6.08305025100708
    7. ':' → logprob: -6.45805025100708
    8. '<|end|>' → logprob: -6.70805025100708
    9. '```' → logprob: -6.95805025100708
    10. '
' → logprob: -7.33305025100708

Token 339: ' brute' (ID: 128602)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.37257587909698486
    2. 'for' → logprob: -1.4975758790969849
    3. ' pass' → logprob: -3.1225757598876953
    4. 'pass' → logprob: -4.247575759887695
    5. '       ' → logprob: -4.747575759887695
    6. '#' → logprob: -5.497575759887695
    7. ' min' → logprob: -5.497575759887695
    8. 'print' → logprob: -5.747575759887695
    9. 'min' → logprob: -5.997575759887695
    10. '   ' → logprob: -6.747575759887695

Token 340: ' force' (ID: 9578)
  Prédit: ' force'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' force' → logprob: -0.5716916918754578
    2. 'for' → logprob: -1.0716917514801025
    3. 'force' → logprob: -3.0716917514801025
    4. '   ' → logprob: -3.4466917514801025
    5. ' for' → logprob: -5.696691513061523
    6. '-force' → logprob: -5.821691513061523
    7. '_force' → logprob: -5.946691513061523
    8. '    ' → logprob: -6.071691513061523
    9. '       ' → logprob: -6.821691513061523
    10. 'f' → logprob: -6.946691513061523

Token 341: ' approach' (ID: 7139)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 342: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 343: '       ' (ID: 309)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4809668958187103
    2. ' from' → logprob: -2.230966806411743
    3. '<|end|>' → logprob: -2.730966806411743
    4. 'import' → logprob: -2.855966806411743
    5. '       ' → logprob: -3.230966806411743
    6. ' for' → logprob: -3.480966806411743
    7. '#' → logprob: -3.855966806411743
    8. 'for' → logprob: -4.230967044830322
    9. '```' → logprob: -4.230967044830322
    10. '   ' → logprob: -4.480967044830322

Token 344: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.10440827161073685
    2. 'import' → logprob: -2.6044082641601562
    3. 'for' → logprob: -4.104408264160156
    4. ' from' → logprob: -5.479408264160156
    5. 'pass' → logprob: -5.979408264160156
    6. '#' (adapté à ' #') → logprob: -6.604408264160156
    7. ' for' → logprob: -8.604408264160156
    8. 'def' → logprob: -8.854408264160156
    9. 'print' → logprob: -8.979408264160156
    10. '...' → logprob: -9.479408264160156

Token 345: ' try' (ID: 2075)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.11624957621097565
    2. 'import' → logprob: -2.7412495613098145
    3. 'pass' → logprob: -4.1162495613098145
    4. ' from' → logprob: -4.3662495613098145
    5. '#' → logprob: -4.9912495613098145
    6. 'for' → logprob: -4.9912495613098145
    7. ' pass' → logprob: -7.2412495613098145
    8. '...' → logprob: -7.6162495613098145
    9. 'print' → logprob: -7.6162495613098145
    10. ' for' → logprob: -7.7412495613098145

Token 346: ' all' (ID: 722)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.08745446801185608
    2. 'import' → logprob: -3.0874545574188232
    3. ' from' → logprob: -4.087454319000244
    4. 'for' → logprob: -4.212454319000244
    5. ' for' → logprob: -6.212454319000244
    6. '   ' → logprob: -6.337454319000244
    7. ' combinations' → logprob: -6.587454319000244
    8. ':
' → logprob: -8.712454795837402
    9. ':' → logprob: -9.087454795837402
    10. '```' → logprob: -9.212454795837402

Token 347: ' combinations' (ID: 43835)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5165677070617676
    2. ' from' → logprob: -1.8915677070617676
    3. ' combinations' → logprob: -2.6415677070617676
    4. 'for' → logprob: -3.0165677070617676
    5. ' for' → logprob: -3.1415677070617676
    6. 'com' → logprob: -3.3915677070617676
    7. 'import' → logprob: -3.8915677070617676
    8. ' i' → logprob: -4.516567707061768
    9. '   ' → logprob: -5.391567707061768
    10. 'i' → logprob: -5.516567707061768

Token 348: ' of' (ID: 328)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6630765199661255
    2. 'import' → logprob: -1.5380765199661255
    3. ' from' → logprob: -1.6630765199661255
    4. '<|end|>' → logprob: -3.538076400756836
    5. ':' → logprob: -3.913076400756836
    6. ' for' → logprob: -4.788076400756836
    7. ' import' → logprob: -4.913076400756836
    8. '       ' → logprob: -5.788076400756836
    9. ' of' → logprob: -6.038076400756836
    10. 'for' → logprob: -6.038076400756836

Token 349: ' cuts' (ID: 29505)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.09353223443031311
    2. '[i' → logprob: -3.5935323238372803
    3. '[' → logprob: -4.093532085418701
    4. 'i' → logprob: -4.218532085418701
    5. ' range' → logprob: -4.218532085418701
    6. '(range' → logprob: -4.718532085418701
    7. 'cuts' → logprob: -6.593532085418701
    8. '[j' → logprob: -6.968532085418701
    9. 't' → logprob: -7.718532085418701
    10. 'r' → logprob: -7.718532085418701

Token 350: ' that' (ID: 484)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7834047079086304
    2. ' from' → logprob: -1.1584047079086304
    3. 'import' → logprob: -2.28340482711792
    4. ':' → logprob: -2.53340482711792
    5. '<|end|>' → logprob: -3.28340482711792
    6. ',' → logprob: -6.28340482711792
    7. ' import' → logprob: -6.53340482711792
    8. ' for' → logprob: -6.65840482711792
    9. ':
' → logprob: -6.78340482711792
    10. ' :' → logprob: -7.03340482711792

Token 351: ' split' (ID: 12648)
  Prédit: ' cover'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cover' → logprob: -1.047516107559204
    2. 'split' → logprob: -1.547516107559204
    3. ' sum' → logprob: -1.672516107559204
    4. 'sum' → logprob: -2.047516107559204
    5. ' split' → logprob: -3.297516107559204
    6. 'cover' → logprob: -3.672516107559204
    7. 'from' → logprob: -4.797515869140625
    8. ' divide' → logprob: -4.922515869140625
    9. ' can' → logprob: -5.297515869140625
    10. ' create' → logprob: -5.547515869140625

Token 352: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.700221598148346
    2. 'the' → logprob: -1.0752215385437012
    3. 'N' → logprob: -1.9502215385437012
    4. ' N' → logprob: -4.700221538543701
    5. 's' → logprob: -6.450221538543701
    6. ' into' → logprob: -6.825221538543701
    7. 't' → logprob: -6.950221538543701
    8. 'range' → logprob: -6.950221538543701
    9. ' pieces' → logprob: -7.200221538543701
    10. 'pieces' → logprob: -7.325221538543701

Token 353: ' candy' (ID: 42573)
  Prédit: 'cake'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cake' → logprob: -0.714806318283081
    2. 'stick' → logprob: -1.714806318283081
    3. 'N' → logprob: -2.339806318283081
    4. 'rope' → logprob: -2.714806318283081
    5. 'length' → logprob: -3.714806318283081
    6. 'log' → logprob: -3.714806318283081
    7. 'array' → logprob: -3.714806318283081
    8. 't' → logprob: -4.46480655670166
    9. 'list' → logprob: -4.58980655670166
    10. 'string' → logprob: -4.71480655670166

Token 354: ' into' (ID: 1511)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.3621559143066406
    2. 's' → logprob: -2.2371559143066406
    3. 'from' → logprob: -2.2371559143066406
    4. '<|end|>' → logprob: -2.3621559143066406
    5. '   ' → logprob: -2.4871559143066406
    6. 'pieces' → logprob: -3.1121559143066406
    7. ',' → logprob: -3.2371559143066406
    8. ' pieces' → logprob: -3.4871559143066406
    9. ' from' → logprob: -3.8621559143066406
    10. 'sizes' → logprob: -3.8621559143066406

Token 355: ' pieces' (ID: 12762)
  Prédit: 'three'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'three' → logprob: -0.5568245053291321
    2. 'half' → logprob: -1.5568244457244873
    3. '3' → logprob: -2.0568244457244873
    4. ' three' → logprob: -3.6818244457244873
    5. 'parts' → logprob: -4.306824684143066
    6. 'pieces' → logprob: -4.806824684143066
    7. '[' → logprob: -5.306824684143066
    8. 'equal' → logprob: -5.306824684143066
    9. 'segments' → logprob: -5.431824684143066
    10. ' ' → logprob: -5.431824684143066

Token 356: ' of' (ID: 328)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.4792504608631134
    2. 'from' → logprob: -1.104250431060791
    3. '<|end|>' → logprob: -3.479250431060791
    4. 'import' → logprob: -4.229250431060791
    5. ',' → logprob: -6.729250431060791
    6. '       ' → logprob: -7.354250431060791
    7. ' at' → logprob: -7.854250431060791
    8. '<|end|>' → logprob: -8.47925090789795
    9. '   ' → logprob: -8.72925090789795
    10. ' ' → logprob: -8.85425090789795

Token 357: ' size' (ID: 2349)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.401593416929245
    2. 'size' → logprob: -2.1515934467315674
    3. 'length' → logprob: -2.6515934467315674
    4. 'sizes' → logprob: -2.9015934467315674
    5. 'equal' → logprob: -3.2765934467315674
    6. ' half' → logprob: -3.4015934467315674
    7. ' size' → logprob: -5.276593208312988
    8. '```' → logprob: -6.026593208312988
    9. ' equal' → logprob: -6.151593208312988
    10. '[' → logprob: -6.651593208312988

Token 358: ' N' (ID: 478)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.31588083505630493
    2. ' half' → logprob: -1.3158807754516602
    3. '1' → logprob: -6.81588077545166
    4. '```' → logprob: -7.06588077545166
    5. ' ' → logprob: -8.19088077545166
    6. ' N' → logprob: -9.56588077545166
    7. '2' → logprob: -10.06588077545166
    8. 'hal' → logprob: -10.31588077545166
    9. '[' → logprob: -10.31588077545166
    10. '_half' → logprob: -10.56588077545166

Token 359: '/' (ID: 14)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.7543193697929382
    2. '//' → logprob: -2.004319429397583
    3. ')' → logprob: -2.254319429397583
    4. '```' → logprob: -2.629319429397583
    5. ' ' → logprob: -2.754319429397583
    6. ' -' → logprob: -3.129319429397583
    7. '-' → logprob: -3.504319429397583
    8. '#' → logprob: -4.004319190979004
    9. ' )' → logprob: -4.254319190979004
    10. ' #' → logprob: -4.504319190979004

Token 360: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.1928003813372925e-05
    2. ' ' → logprob: -9.875051498413086
    3. '```' → logprob: -15.750051498413086
    4. '6' → logprob: -16.125051498413086
    5. '4' → logprob: -16.750051498413086
    6. '3' → logprob: -16.750051498413086
    7. '1' → logprob: -17.500051498413086
    8. '２' → logprob: -18.437551498413086
    9. '...' → logprob: -18.625051498413086
    10. '
' → logprob: -18.687551498413086

Token 361: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2643732726573944
    2. '<|end|>' → logprob: -2.014373302459717
    3. 'import' → logprob: -3.764373302459717
    4. 'from' → logprob: -3.889373302459717
    5. ')' → logprob: -4.639373302459717
    6. ']' → logprob: -4.889373302459717
    7. ',' → logprob: -4.889373302459717
    8. '):' → logprob: -5.264373302459717
    9. '   ' → logprob: -5.639373302459717
    10. ':
' → logprob: -5.639373302459717

Token 362: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 363: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5647194385528564
    2. ' from' → logprob: -1.0647194385528564
    3. 'import' → logprob: -2.5647194385528564
    4. ' pass' → logprob: -5.314719200134277
    5. ' import' → logprob: -6.189719200134277
    6. 'pass' → logprob: -7.064719200134277
    7. '<|end|>' → logprob: -7.314719200134277
    8. ' for' → logprob: -7.439719200134277
    9. 'for' → logprob: -8.439719200134277
    10. '
' → logprob: -9.189719200134277

Token 364: ' since' (ID: 3630)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5252775549888611
    2. ' from' → logprob: -1.0252776145935059
    3. 'import' → logprob: -3.025277614593506
    4. ' import' → logprob: -7.400277614593506
    5. '<|end|>' → logprob: -7.900277614593506
    6. ' for' → logprob: -9.025277137756348
    7. ' pass' → logprob: -9.275277137756348
    8. 'for' → logprob: -9.900277137756348
    9. '```' → logprob: -10.025277137756348
    10. 'pass' → logprob: -10.900277137756348

Token 365: ' problem' (ID: 4792)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.4943901598453522
    2. 'half' → logprob: -1.2443901300430298
    3. ' N' → logprob: -2.8693902492523193
    4. ' half' → logprob: -3.1193902492523193
    5. '(' → logprob: -8.369390487670898
    6. 'not' → logprob: -9.119390487670898
    7. ' (' → logprob: -9.494390487670898
    8. '(N' → logprob: -9.619390487670898
    9. ' not' → logprob: -9.744390487670898
    10. ' ' → logprob: -9.744390487670898

Token 366: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.17426539957523346
    2. 'is' → logprob: -2.4242653846740723
    3. ' constraints' → logprob: -3.5492653846740723
    4. ' description' → logprob: -5.174265384674072
    5. ' not' → logprob: -5.299265384674072
    6. '#' → logprob: -5.424265384674072
    7. 'constraints' → logprob: -5.799265384674072
    8. 'description' → logprob: -6.174265384674072
    9. 'not' → logprob: -6.299265384674072
    10. ' continues' → logprob: -6.549265384674072

Token 367: ' beginner' (ID: 57062)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.9116954803466797
    2. 'not' → logprob: -1.4116954803466797
    3. 'unfinished' → logprob: -1.6616954803466797
    4. 'cut' → logprob: -3.4116954803466797
    5. ' incomplete' → logprob: -3.4116954803466797
    6. 'hard' → logprob: -3.9116954803466797
    7. 'about' → logprob: -4.16169548034668
    8. 'NP' → logprob: -4.53669548034668
    9. 'complex' → logprob: -5.03669548034668
    10. ' unfinished' → logprob: -5.41169548034668

Token 368: ' level' (ID: 3211)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6796008348464966
    2. ',' → logprob: -1.1796008348464966
    3. ':
' → logprob: -2.804600715637207
    4. '   ' → logprob: -3.304600715637207
    5. '           ' → logprob: -3.304600715637207
    6. '       ' → logprob: -3.554600715637207
    7. 'import' → logprob: -4.304600715637207
    8. ' and' → logprob: -6.679600715637207
    9. ' for' → logprob: -7.304600715637207
    10. '<|end|>' → logprob: -7.304600715637207

Token 369: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6659230589866638
    2. '<|end|>' → logprob: -0.9159230589866638
    3. ' pass' → logprob: -4.165923118591309
    4. 'pass' → logprob: -4.290923118591309
    5. ':
' → logprob: -4.415923118591309
    6. '       ' → logprob: -4.665923118591309
    7. '   ' → logprob: -4.790923118591309
    8. '<|end|>' → logprob: -5.040923118591309
    9. 'import' → logprob: -5.540923118591309
    10. ' for' → logprob: -5.790923118591309

Token 370: ' just' (ID: 1327)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.014445070177316666
    2. 'pass' → logprob: -4.2644453048706055
    3. ' break' → logprob: -8.514445304870605
    4. ' #' → logprob: -10.889445304870605
    5. '#' → logprob: -11.014445304870605
    6. 'break' → logprob: -11.264445304870605
    7. ' print' → logprob: -11.389445304870605
    8. '   ' → logprob: -12.139445304870605
    9. 'import' → logprob: -12.264445304870605
    10. ' continue' → logprob: -12.389445304870605

Token 371: ' output' (ID: 4733)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.4960058927536011
    2. 'pass' → logprob: -1.621005892753601
    3. ' continue' → logprob: -2.6210060119628906
    4. 'print' → logprob: -2.8710060119628906
    5. ' print' → logprob: -3.3710060119628906
    6. 'continue' → logprob: -4.121006011962891
    7. ' break' → logprob: -5.621006011962891
    8. '   ' → logprob: -6.246006011962891
    9. 'break' → logprob: -6.246006011962891
    10. ' for' → logprob: -6.246006011962891

Token 372: ' sum' (ID: 4215)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4725038707256317
    2. '0' → logprob: -1.222503900527954
    3. 'print' → logprob: -3.347503900527954
    4. 'min' → logprob: -4.222503662109375
    5. '-N' → logprob: -4.472503662109375
    6. 'N' → logprob: -4.597503662109375
    7. '-min' → logprob: -5.597503662109375
    8. 'half' → logprob: -6.222503662109375
    9. '-half' → logprob: -6.972503662109375
    10. 'sum' → logprob: -7.222503662109375

Token 373: ' of' (ID: 328)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004347517620772123
    2. '(' → logprob: -6.379347324371338
    3. '0' → logprob: -6.754347324371338
    4. 'sum' → logprob: -7.879347324371338
    5. '=' → logprob: -8.004347801208496
    6. '   ' → logprob: -8.379347801208496
    7. '(sum' → logprob: -9.129347801208496
    8. '(print' → logprob: -9.629347801208496
    9. ' print' → logprob: -9.754347801208496
    10. '()' → logprob: -9.879347801208496

Token 374: ' min' (ID: 1349)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.008986089378595352
    2. ' t' → logprob: -6.258985996246338
    3. 'sorted' → logprob: -6.258985996246338
    4. 'all' → logprob: -6.633985996246338
    5. 'min' → logprob: -7.008985996246338
    6. '0' → logprob: -7.133985996246338
    7. '[t' → logprob: -7.383985996246338
    8. '[' → logprob: -7.633985996246338
    9. 'half' → logprob: -8.133986473083496
    10. '[min' → logprob: -8.758986473083496

Token 375: ' two' (ID: 1920)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.24419209361076355
    2. '(' → logprob: -2.619192123413086
    3. 't' → logprob: -3.369192123413086
    4. 'sum' → logprob: -3.869192123413086
    5. '()' → logprob: -3.994192123413086
    6. '(min' → logprob: -4.369192123413086
    7. '_sum' → logprob: -4.744192123413086
    8. 'print' → logprob: -4.869192123413086
    9. ')' → logprob: -4.994192123413086
    10. '([' → logprob: -5.119192123413086

Token 376: ' cuts' (ID: 29505)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.265201449394226
    2. 't' → logprob: -1.515201449394226
    3. '=' → logprob: -2.1402015686035156
    4. ']' → logprob: -2.5152015686035156
    5. '   ' → logprob: -2.7652015686035156
    6. ' =' → logprob: -3.0152015686035156
    7. ':' → logprob: -3.3902015686035156
    8. ':
' → logprob: -3.6402015686035156
    9. ' t' → logprob: -4.015201568603516
    10. 's' → logprob: -4.015201568603516

Token 377: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06846161186695099
    2. '       ' → logprob: -2.8184616565704346
    3. '   ' → logprob: -5.4434614181518555
    4. ' print' → logprob: -6.6934614181518555
    5. '```' → logprob: -7.3184614181518555
    6. 'cuts' → logprob: -10.068461418151855
    7. 'if' → logprob: -10.318461418151855
    8. 'sum' → logprob: -10.568461418151855
    9. '``' → logprob: -10.693461418151855
    10. '
' → logprob: -10.818461418151855

Token 378: ' safety' (ID: 9246)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3354592025279999
    2. 'N' → logprob: -3.2104592323303223
    3. 'min' → logprob: -3.3354592323303223
    4. '0' → logprob: -3.4604592323303223
    5. 't' → logprob: -3.5854592323303223
    6. 'half' → logprob: -3.7104592323303223
    7. ' i' → logprob: -3.8354592323303223
    8. '2' → logprob: -4.210459232330322
    9. 'now' → logprob: -4.335459232330322
    10. '1' → logprob: -4.585459232330322

Token 379: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006831637118011713
    2. '   ' → logprob: -5.631831645965576
    3. '
' → logprob: -6.506831645965576
    4. '       ' → logprob: -7.256831645965576
    5. ' print' → logprob: -7.631831645965576
    6. '<|end|>' → logprob: -8.631831169128418
    7. '```' → logprob: -8.631831169128418
    8. ')' → logprob: -10.006831169128418
    9. ')
' → logprob: -10.631831169128418
    10. ':
' → logprob: -10.881831169128418

Token 380: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4756719470024109
    2. 'print' → logprob: -0.9756719470024109
    3. '   ' → logprob: -6.975671768188477
    4. ' print' → logprob: -7.475671768188477
    5. '```' → logprob: -9.725671768188477
    6. '           ' → logprob: -11.350671768188477
    7. 'if' → logprob: -11.850671768188477
    8. '        
' → logprob: -13.100671768188477
    9. '#' → logprob: -13.225671768188477
    10. '``' → logprob: -13.350671768188477

Token 381: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0011202149325981736
    2. '       ' → logprob: -7.001120090484619
    3. ' print' → logprob: -9.001120567321777
    4. '   ' → logprob: -9.876120567321777
    5. 'if' → logprob: -10.876120567321777
    6. 'cuts' → logprob: -12.501120567321777
    7. 'min' → logprob: -12.751120567321777
    8. '           ' → logprob: -13.251120567321777
    9. 'cut' → logprob: -13.626120567321777
    10. 'cost' → logprob: -13.751120567321777

Token 382: '(min' (ID: 26035)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3586672842502594
    2. 't' → logprob: -1.233667254447937
    3. ' min' → logprob: -5.358667373657227
    4. 'sum' → logprob: -5.733667373657227
    5. '(min' → logprob: -6.733667373657227
    6. ' t' → logprob: -7.358667373657227
    7. '0' → logprob: -8.233667373657227
    8. '(t' → logprob: -9.358667373657227
    9. 'max' → logprob: -10.483667373657227
    10. 'sorted' → logprob: -11.858667373657227

Token 383: '(t' (ID: 2025)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0003517894074320793
    2. '(t' → logprob: -8.250351905822754
    3. '(' → logprob: -9.625351905822754
    4. '(min' → logprob: -11.625351905822754
    5. '(sum' → logprob: -12.500351905822754
    6. '(_' → logprob: -12.625351905822754
    7. 'sum' → logprob: -12.750351905822754
    8. '_min' → logprob: -13.500351905822754
    9. '()' → logprob: -14.000351905822754
    10. 'Sum' → logprob: -14.125351905822754

Token 384: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8799785375595093
    2. '))' → logprob: -1.5049785375595093
    3. '[:' → logprob: -1.6299785375595093
    4. '[i' → logprob: -2.629978656768799
    5. '(t' → logprob: -3.504978656768799
    6. '[' → logprob: -3.629978656768799
    7. 't' → logprob: -4.004978656768799
    8. ')+' → logprob: -4.629978656768799
    9. ')]' → logprob: -6.004978656768799
    10. '[t' → logprob: -6.629978656768799


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 382
Tokens correctement prédits (1ère position, stricte): 158
Tokens correctement prédits (1ère position, avec adaptation): 173
Tokens correctement prédits (top 10): 291
Précision stricte (1ère position): 41.36%
Précision adaptée (1ère position): 45.29%
Précision (top 10): 76.18%
================================================================================
