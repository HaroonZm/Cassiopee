================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def sum_proper_divisors(n):
    if n == 1:
        return 0
    total = 1
    i = 2
    while i * i <= n:
        if n % i == 0:
            total += i
            if i != n // i:
                total += n // i
        i += 1
    return total

while True:
    N = int(input())
    if N == 0:
        break
    S = sum_proper_divisors(N)
    if N == S:
        print("perfect number")
    elif N > S:
        print("deficient number")
    else:
        print("abundant number")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' sum' (ID: 4215)
  → Token d'amorce (pas de prédiction)

Token 2: '_pro' (ID: 4617)
  → Token d'amorce (pas de prédiction)

Token 3: 'per' (ID: 543)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.1915827989578247
    2. 'd' → logprob: -1.9415827989578247
    3. 'duct' → logprob: -4.191582679748535
    4. 'b' → logprob: -4.816582679748535
    5. 'def' → logprob: -6.191582679748535
    6. '_' → logprob: -7.191582679748535
    7. '(' → logprob: -7.566582679748535
    8. 'c' → logprob: -7.691582679748535
    9. 'duce' → logprob: -7.691582679748535
    10. 'm' → logprob: -8.066582679748535

Token 4: '_div' (ID: 36926)
  Prédit: 'ty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ty' → logprob: -0.6083410978317261
    2. '_' → logprob: -1.233341097831726
    3. '_t' → logprob: -2.4833412170410156
    4. '_ty' → logprob: -2.6083412170410156
    5. '(' → logprob: -5.483341217041016
    6. '```' → logprob: -7.483341217041016
    7. 'ties' → logprob: -7.983341217041016
    8. 'ti' → logprob: -8.108341217041016
    9. 'ly' → logprob: -8.358341217041016
    10. 'y' → logprob: -8.358341217041016

Token 5: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.00197395752184093
    2. 'iders' → logprob: -6.876974105834961
    3. 'idors' → logprob: -7.626974105834961
    4. 's' → logprob: -9.126974105834961
    5. 'id' → logprob: -9.501974105834961
    6. '_' → logprob: -9.751974105834961
    7. '```' → logprob: -10.001974105834961
    8. '_id' → logprob: -10.126974105834961
    9. '_sum' → logprob: -10.626974105834961
    10. 'isor' → logprob: -10.751974105834961

Token 6: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.00044663884909823537
    2. 'or' → logprob: -8.125446319580078
    3. '```' → logprob: -9.000446319580078
    4. '   ' → logprob: -11.875446319580078
    5. 'def' → logprob: -12.625446319580078
    6. '\' → logprob: -12.875446319580078
    7. '`' → logprob: -13.125446319580078
    8. '``' → logprob: -13.250446319580078
    9. '#' → logprob: -13.875446319580078
    10. '**' → logprob: -14.000446319580078

Token 7: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001975802006199956
    2. '_' → logprob: -9.500197410583496
    3. '(:' → logprob: -10.875197410583496
    4. '```' → logprob: -11.125197410583496
    5. '(_:' → logprob: -11.250197410583496
    6. '(def' → logprob: -11.500197410583496
    7. ':' → logprob: -11.625197410583496
    8. ' (' → logprob: -11.750197410583496
    9. '(_' → logprob: -11.875197410583496
    10. '(user' → logprob: -12.375197410583496

Token 8: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012807102873921394
    2. ')' → logprob: -4.5128068923950195
    3. ':' → logprob: -6.3878068923950195
    4. '):
' → logprob: -11.38780689239502
    5. '():' → logprob: -11.38780689239502
    6. ''):' → logprob: -11.51280689239502
    7. '```' → logprob: -12.01280689239502
    8. ':)' → logprob: -12.38780689239502
    9. '**' → logprob: -12.76280689239502
    10. '   ' → logprob: -13.01280689239502

Token 9: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004035418387502432
    2. '():' → logprob: -6.254035472869873
    3. '   ' → logprob: -6.754035472869873
    4. '```' → logprob: -8.379034996032715
    5. ' :' → logprob: -8.629034996032715
    6. '":' → logprob: -9.129034996032715
    7. '_:' → logprob: -9.504034996032715
    8. '(' → logprob: -9.629034996032715
    9. '':' → logprob: -9.754034996032715
    10. '):' → logprob: -10.004034996032715

Token 10: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6024134755134583
    2. '   ' → logprob: -0.9774134755134583
    3. '    ' → logprob: -3.8524134159088135
    4. '```' → logprob: -3.8524134159088135
    5. ''' → logprob: -5.227413654327393
    6. ':' → logprob: -5.727413654327393
    7. '"' → logprob: -5.852413654327393
    8. '_' → logprob: -5.852413654327393
    9. ' :' → logprob: -5.977413654327393
    10. ' 
' → logprob: -6.102413654327393

Token 11: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.007584151811897755
    2. ' ' → logprob: -5.382584095001221
    3. 'n' → logprob: -6.257584095001221
    4. ' not' → logprob: -6.882584095001221
    5. ' ‌' → logprob: -12.382584571838379
    6. 'not' → logprob: -13.257584571838379
    7. '  ' → logprob: -13.382584571838379
    8. ' ' → logprob: -13.507584571838379
    9. ' isinstance' → logprob: -13.632584571838379
    10. ' space' → logprob: -13.757584571838379

Token 12: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.4977004826068878
    2. ' ==' → logprob: -1.3727004528045654
    3. ' <=' → logprob: -2.2477004528045654
    4. '>' → logprob: -3.9977004528045654
    5. '==' → logprob: -5.1227006912231445
    6. ' ' → logprob: -5.7477006912231445
    7. ' %' → logprob: -5.8727006912231445
    8. ' <' → logprob: -6.6227006912231445
    9. '<=' → logprob: -7.9977006912231445
    10. ' !=' → logprob: -8.122700691223145

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03278038650751114
    2. '1' → logprob: -3.782780408859253
    3. '0' → logprob: -4.657780170440674
    4. '2' → logprob: -14.157780647277832
    5. ' ' → logprob: -14.282780647277832
    6. '```' → logprob: -14.782780647277832
    7. '   ' → logprob: -16.157779693603516
    8. '' → logprob: -17.782779693603516
    9. '	' → logprob: -18.032779693603516
    10. '6' → logprob: -18.032779693603516

Token 14: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.028003539890050888
    2. '0' → logprob: -3.653003454208374
    3. ' ' → logprob: -6.403003692626953
    4. '2' → logprob: -10.153003692626953
    5. '   ' → logprob: -12.653003692626953
    6. '```' → logprob: -13.028003692626953
    7. '<' → logprob: -15.528003692626953
    8. '>' → logprob: -16.278003692626953
    9. '' → logprob: -16.403003692626953
    10. '``' → logprob: -16.528003692626953

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015774748753756285
    2. ':return' → logprob: -6.626577377319336
    3. ' :' → logprob: -8.751577377319336
    4. ':
' → logprob: -9.376577377319336
    5. '):' → logprob: -12.876577377319336
    6. '   ' → logprob: -13.501577377319336
    7. ':**' → logprob: -13.751577377319336
    8. ':def' → logprob: -14.126577377319336
    9. '':' → logprob: -14.376577377319336
    10. ' :
' → logprob: -14.876577377319336

Token 16: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14742276072502136
    2. '       ' → logprob: -2.3974227905273438
    3. ':return' → logprob: -3.7724227905273438
    4. ':
' → logprob: -4.397422790527344
    5. ' return' → logprob: -5.522422790527344
    6. '0' → logprob: -5.897422790527344
    7. ' :' → logprob: -6.397422790527344
    8. ',' → logprob: -7.647422790527344
    9. 'return' → logprob: -7.647422790527344
    10. '   ' → logprob: -7.772422790527344

Token 17: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.06004633381962776
    2. 'return' (adapté à ' return') → logprob: -3.185046434402466
    3. '0' → logprob: -4.310046195983887
    4. '    ' → logprob: -6.060046195983887
    5. '   ' → logprob: -7.185046195983887
    6. ' ' → logprob: -8.685046195983887
    7. '       ' → logprob: -8.935046195983887
    8. '	return' → logprob: -10.685046195983887
    9. ':return' → logprob: -10.685046195983887
    10. '1' → logprob: -11.685046195983887

Token 18: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.009814530611038208
    2. '0' → logprob: -4.634814739227295
    3. '1' → logprob: -9.759814262390137
    4. ' ' → logprob: -14.259814262390137
    5. '    ' → logprob: -16.384815216064453
    6. ' None' → logprob: -17.822315216064453
    7. '```' → logprob: -18.009815216064453
    8. '<|end|>' → logprob: -18.197315216064453
    9. '​' → logprob: -18.509815216064453
    10. '  ' → logprob: -18.572315216064453

Token 19: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021318255458027124
    2. ' ' → logprob: -6.252131938934326
    3. '1' → logprob: -8.502131462097168
    4. '   ' → logprob: -17.314632415771484
    5. '`' → logprob: -17.752132415771484
    6. '```' → logprob: -17.752132415771484
    7. '۰' → logprob: -18.627132415771484
    8. '[]' → logprob: -18.627132415771484
    9. '000' → logprob: -18.877132415771484
    10. '    ' → logprob: -19.002132415771484

Token 20: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9071474671363831
    2. '   ' → logprob: -1.2821474075317383
    3. '\n' → logprob: -1.2821474075317383
    4. '    
' → logprob: -3.7821474075317383
    5. '```' → logprob: -5.282147407531738
    6. '  
' → logprob: -5.532147407531738
    7. '\' → logprob: -5.657147407531738
    8. '   
' → logprob: -6.282147407531738
    9. ' 
' → logprob: -6.657147407531738
    10. '
' → logprob: -7.157147407531738

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4496385157108307
    2. '\n' → logprob: -1.5746384859085083
    3. '
' → logprob: -2.199638605117798
    4. '```' → logprob: -3.949638605117798
    5. '    
' → logprob: -4.324638366699219
    6. '\' → logprob: -5.324638366699219
    7. '  
' → logprob: -6.324638366699219
    8. '   
' → logprob: -6.824638366699219
    9. '``' → logprob: -7.199638366699219
    10. ' 
' → logprob: -7.324638366699219

Token 22: ' total' (ID: 3609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21507449448108673
    2. ' s' → logprob: -2.8400745391845703
    3. ' ' → logprob: -3.2150745391845703
    4. 's' → logprob: -4.09007453918457
    5. '    
' → logprob: -4.46507453918457
    6. ' 
' → logprob: -4.71507453918457
    7. ' result' → logprob: -4.96507453918457
    8. 'def' → logprob: -5.21507453918457
    9. ' return' → logprob: -5.34007453918457
    10. '   
' → logprob: -5.34007453918457

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05652381479740143
    2. ' +=' → logprob: -3.5565237998962402
    3. '=' → logprob: -3.6815237998962402
    4. ' ' → logprob: -6.93152379989624
    5. '    ' → logprob: -10.056524276733398
    6. '_' → logprob: -10.056524276733398
    7. ' -=' → logprob: -10.056524276733398
    8. '   ' → logprob: -10.931524276733398
    9. ' )' → logprob: -11.306524276733398
    10. ' =)' → logprob: -11.306524276733398

Token 24: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05490688979625702
    2. '1' → logprob: -2.9299068450927734
    3. '0' → logprob: -10.804906845092773
    4. ' sum' → logprob: -12.679906845092773
    5. 'sum' → logprob: -15.054906845092773
    6. ' ' → logprob: -15.429906845092773
    7. '2' → logprob: -15.554906845092773
    8. ' n' → logprob: -15.679906845092773
    9. '    ' → logprob: -16.179906845092773
    10. '  ' → logprob: -16.679906845092773

Token 25: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001280714524909854
    2. ' ' → logprob: -6.751280784606934
    3. '0' → logprob: -9.126280784606934
    4. 'sum' → logprob: -14.126280784606934
    5. ' sum' → logprob: -14.126280784606934
    6. '2' → logprob: -16.251279830932617
    7. '   ' → logprob: -17.001279830932617
    8. '```' → logprob: -17.563779830932617
    9. '=' → logprob: -17.813779830932617
    10. 'n' → logprob: -18.188779830932617

Token 26: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32655131816864014
    2. '    
' → logprob: -2.5765514373779297
    3. 'for' → logprob: -2.7015514373779297
    4. ' for' → logprob: -3.5765514373779297
    5. ' 
' → logprob: -3.5765514373779297
    6. '<|end|>' → logprob: -3.9515514373779297
    7. '  
' → logprob: -4.20155143737793
    8. ' ' → logprob: -4.57655143737793
    9. '   
' → logprob: -4.70155143737793
    10. '' → logprob: -4.95155143737793

Token 27: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2181163877248764
    2. '   ' → logprob: -2.343116283416748
    3. ' for' → logprob: -2.968116283416748
    4. 'for' → logprob: -4.468116283416748
    5. '    
' → logprob: -4.593116283416748
    6. '<|end|>' → logprob: -4.593116283416748
    7. '\n' → logprob: -4.843116283416748
    8. ' ' → logprob: -6.343116283416748
    9. '<|end|>' → logprob: -6.718116283416748
    10. '  
' → logprob: -6.843116283416748

Token 28: ' i' (ID: 575)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.31560033559799194
    2. 'for' → logprob: -1.3156003952026367
    3. ' ' → logprob: -6.940600395202637
    4. ' i' → logprob: -7.690600395202637
    5. ',' → logprob: -7.815600395202637
    6. ')' → logprob: -9.565600395202637
    7. '=' → logprob: -9.690600395202637
    8. 'i' (adapté à ' i') → logprob: -9.815600395202637
    9. 'import' → logprob: -9.940600395202637
    10. ':' → logprob: -9.940600395202637

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05130290240049362
    2. '=' → logprob: -3.426302909851074
    3. ' ' → logprob: -4.051302909851074
    4. ' +=' → logprob: -9.926302909851074
    5. ' space' → logprob: -11.301302909851074
    6. ' ,' → logprob: -11.801302909851074
    7. ' in' → logprob: -12.051302909851074
    8. '  ' → logprob: -12.301302909851074
    9. ' ﻿' → logprob: -12.301302909851074
    10. ',' → logprob: -12.801302909851074

Token 30: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.474078506231308
    2. '2' → logprob: -0.9740785360336304
    3. '  ' → logprob: -14.099078178405762
    4. ' ' → logprob: -14.349078178405762
    5. '   ' → logprob: -17.224079132080078
    6. '    ' → logprob: -17.599079132080078
    7. '```' → logprob: -17.786579132080078
    8. '1' → logprob: -18.474079132080078
    9. ' two' → logprob: -18.786579132080078
    10. ')' → logprob: -18.911579132080078

Token 31: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002614550176076591
    2. ' ' → logprob: -8.250261306762695
    3. '   ' → logprob: -16.250261306762695
    4. '  ' → logprob: -16.750261306762695
    5. '    ' → logprob: -18.375261306762695
    6. '２' → logprob: -18.875261306762695
    7. '```' → logprob: -19.125261306762695
    8. '۲' → logprob: -19.375261306762695
    9. '1' → logprob: -20.312761306762695
    10. '     ' → logprob: -20.625261306762695

Token 32: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 33: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8318386077880859
    2. '<|end|>' → logprob: -1.456838607788086
    3. ':' → logprob: -1.581838607788086
    4. ' while' → logprob: -3.581838607788086
    5. 'while' → logprob: -3.956838607788086
    6. '
' → logprob: -4.706838607788086
    7. ' 
' → logprob: -4.706838607788086
    8. '  ' → logprob: -4.831838607788086
    9. '<|end|>' → logprob: -5.081838607788086
    10. '.' → logprob: -5.081838607788086

Token 34: ' while' (ID: 2049)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.36855438351631165
    2. ' while' → logprob: -1.7435543537139893
    3. ':' → logprob: -3.3685543537139893
    4. 'while' (adapté à ' while') → logprob: -3.6185543537139893
    5. '    ' → logprob: -4.243554592132568
    6. '<|end|>' → logprob: -4.368554592132568
    7. '.' → logprob: -4.868554592132568
    8. '   ' → logprob: -4.993554592132568
    9. ' ,' → logprob: -5.118554592132568
    10. ',' → logprob: -5.243554592132568

Token 35: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0030106266494840384
    2. 'i' → logprob: -5.8780107498168945
    3. ' ' → logprob: -8.503010749816895
    4. '	i' → logprob: -13.878010749816895
    5. ' ' → logprob: -13.878010749816895
    6. ' (' → logprob: -14.753010749816895
    7. '<|end|>' → logprob: -16.253009796142578
    8. '(i' → logprob: -16.503009796142578
    9. '  ' → logprob: -16.753009796142578
    10. ' n' → logprob: -16.753009796142578

Token 36: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.10028915852308273
    2. '*i' → logprob: -2.4752891063690186
    3. ' <=' → logprob: -4.725289344787598
    4. '*' → logprob: -6.100289344787598
    5. ' **' → logprob: -9.475289344787598
    6. ' ' → logprob: -9.975289344787598
    7. '**' → logprob: -10.600289344787598
    8. '<=' → logprob: -11.225289344787598
    9. ' i' → logprob: -11.975289344787598
    10. ' ' → logprob: -12.975289344787598

Token 37: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.012522606179118156
    2. ' i' → logprob: -4.3875226974487305
    3. '	i' → logprob: -12.26252269744873
    4. '<|end|>' → logprob: -12.51252269744873
    5. ' ' → logprob: -12.76252269744873
    6. '*i' → logprob: -13.88752269744873
    7. '2' → logprob: -14.76252269744873
    8. '<|end|>' → logprob: -15.88752269744873
    9. '_i' → logprob: -16.262521743774414
    10. 'I' → logprob: -17.387521743774414

Token 38: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.002071633003652096
    2. '<=' → logprob: -6.252071857452393
    3. '<|end|>' → logprob: -9.627071380615234
    4. ' <' → logprob: -10.002071380615234
    5. ' ' → logprob: -11.002071380615234
    6. '<' → logprob: -11.877071380615234
    7. ' <<=' → logprob: -13.002071380615234
    8. ' <=",' → logprob: -13.127071380615234
    9. ' ≤' → logprob: -14.127071380615234
    10. ')<=' → logprob: -14.502071380615234

Token 39: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2519311308860779
    2. 'n' → logprob: -1.5019311904907227
    3. '	n' → logprob: -13.751931190490723
    4. ' ' → logprob: -14.501931190490723
    5. ' ' → logprob: -15.001931190490723
    6. '_n' → logprob: -18.001930236816406
    7. ')n' → logprob: -18.001930236816406
    8. '```' → logprob: -18.064430236816406
    9. '   ' → logprob: -19.126930236816406
    10. '(n' → logprob: -19.189430236816406

Token 40: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01610744744539261
    2. ' :' → logprob: -4.141107559204102
    3. ' and' → logprob: -10.516107559204102
    4. ':**' → logprob: -10.641107559204102
    5. ':
' → logprob: -11.641107559204102
    6. '):' → logprob: -11.766107559204102
    7. '+:' → logprob: -14.016107559204102
    8. 'and' → logprob: -14.016107559204102
    9. '<|end|>' → logprob: -14.391107559204102
    10. ' :
' → logprob: -14.391107559204102

Token 41: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0042462656274437904
    2. ' :' → logprob: -5.504246234893799
    3. ':
' → logprob: -9.129246711730957
    4. '       ' → logprob: -10.754246711730957
    5. '):' → logprob: -11.379246711730957
    6. ':**' → logprob: -12.129246711730957
    7. '   ' → logprob: -12.504246711730957
    8. '    ' → logprob: -12.629246711730957
    9. ' :
' → logprob: -12.879246711730957
    10. ' ' → logprob: -13.129246711730957

Token 42: ' if' (ID: 538)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -1.0547946691513062
    2. ':' → logprob: -1.1797946691513062
    3. ' ' → logprob: -1.1797946691513062
    4. '<|end|>' → logprob: -3.9297947883605957
    5. '    ' → logprob: -5.304794788360596
    6. '  ' → logprob: -5.929794788360596
    7. '<|end|>' → logprob: -6.054794788360596
    8. ' :
' → logprob: -6.304794788360596
    9. '   ' → logprob: -6.429794788360596
    10. '       ' → logprob: -7.179794788360596

Token 43: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0007194612408056855
    2. 'n' → logprob: -7.2507195472717285
    3. ' (' → logprob: -12.00071907043457
    4. ' ' → logprob: -13.62571907043457
    5. ' ' → logprob: -13.87571907043457
    6. '	n' → logprob: -14.50071907043457
    7. '(n' → logprob: -14.62571907043457
    8. '(' → logprob: -16.00071907043457
    9. ' `' → logprob: -17.25071907043457
    10. '_n' → logprob: -17.62571907043457

Token 44: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.038069721311330795
    2. '%' → logprob: -3.288069725036621
    3. ' ' → logprob: -10.788069725036621
    4. '%i' → logprob: -12.413069725036621
    5. ' ' → logprob: -12.663069725036621
    6. ' %
' → logprob: -16.288068771362305
    7. '<|end|>' → logprob: -16.413068771362305
    8. ' %#' → logprob: -17.413068771362305
    9. '%x' → logprob: -17.413068771362305
    10. '％' → logprob: -17.413068771362305

Token 45: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4745059609413147
    2. ' i' → logprob: -0.9745059609413147
    3. '<|end|>' → logprob: -7.84950590133667
    4. ' ' → logprob: -10.599506378173828
    5. '	i' → logprob: -11.849506378173828
    6. '<|end|>' → logprob: -12.349506378173828
    7. ' ' → logprob: -13.974506378173828
    8. '  ' → logprob: -14.099506378173828
    9. ' ‌' → logprob: -15.974506378173828
    10. '   ' → logprob: -16.099506378173828

Token 46: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.00685236556455493
    2. '==' → logprob: -5.006852149963379
    3. ' ' → logprob: -9.131852149963379
    4. '=' → logprob: -11.506852149963379
    5. ' =' → logprob: -11.631852149963379
    6. ' ===' → logprob: -12.756852149963379
    7. ' ' → logprob: -13.506852149963379
    8. '<|end|>' → logprob: -13.631852149963379
    9. ')==' → logprob: -13.756852149963379
    10. ')' → logprob: -13.881852149963379

Token 47: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1002068892121315
    2. ' ' → logprob: -2.3502068519592285
    3. '<|end|>' → logprob: -16.47520637512207
    4. '  ' → logprob: -16.85020637512207
    5. ' ' → logprob: -17.10020637512207
    6. '   ' → logprob: -17.85020637512207
    7. '```' → logprob: -17.85020637512207
    8. '۰' → logprob: -18.10020637512207
    9. '=' → logprob: -19.10020637512207
    10. 's' → logprob: -19.35020637512207

Token 48: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '۰' → logprob: -19.125024795532227
    4. '   ' → logprob: -20.625024795532227
    5. '<|end|>' → logprob: -20.625024795532227
    6. '٠' → logprob: -20.750024795532227
    7. '```' → logprob: -20.937524795532227
    8. '  ' → logprob: -21.000024795532227
    9. '00' → logprob: -21.187524795532227
    10. '=' → logprob: -21.375024795532227

Token 49: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002695608709473163
    2. ' :' → logprob: -8.375269889831543
    3. ':
' → logprob: -11.125269889831543
    4. '):' → logprob: -11.500269889831543
    5. ' and' → logprob: -11.750269889831543
    6. ':**' → logprob: -12.625269889831543
    7. ':return' → logprob: -13.625269889831543
    8. '       ' → logprob: -14.375269889831543
    9. 'and' → logprob: -15.125269889831543
    10. ',' → logprob: -15.750269889831543

Token 50: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.795985758304596
    2. '           ' → logprob: -1.1709856986999512
    3. ' :' → logprob: -2.420985698699951
    4. ' ' → logprob: -2.670985698699951
    5. '       ' → logprob: -3.295985698699951
    6. '        ' → logprob: -4.170985698699951
    7. '            ' → logprob: -4.420985698699951
    8. ':
' → logprob: -5.670985698699951
    9. '\' → logprob: -6.795985698699951
    10. '    ' → logprob: -6.795985698699951

Token 51: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.39726272225379944
    2. 'total' (adapté à ' total') → logprob: -1.522262692451477
    3. ' ' → logprob: -2.2722628116607666
    4. ' 
' → logprob: -5.1472625732421875
    5. ' if' → logprob: -7.8972625732421875
    6. '            ' → logprob: -9.397262573242188
    7. ' ' → logprob: -10.022262573242188
    8. '           ' → logprob: -10.147262573242188
    9. '(total' → logprob: -10.522262573242188
    10. '	total' → logprob: -10.522262573242188

Token 52: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.000627610192168504
    2. '+=' → logprob: -7.375627517700195
    3. ' +' → logprob: -14.750627517700195
    4. '+' → logprob: -15.125627517700195
    5. ' ' → logprob: -15.625627517700195
    6. ' *=' → logprob: -16.500627517700195
    7. ']+=' → logprob: -18.375627517700195
    8. ' -=' → logprob: -18.375627517700195
    9. '+=(' → logprob: -18.375627517700195
    10. ' ' → logprob: -19.000627517700195

Token 53: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5759422779083252
    2. 'i' → logprob: -0.8259422779083252
    3. ' ' → logprob: -13.700942039489746
    4. '	i' → logprob: -14.950942039489746
    5. ' ' → logprob: -15.200942039489746
    6. 'n' → logprob: -15.450942039489746
    7. '(i' → logprob: -15.700942039489746
    8. ' (' → logprob: -15.700942039489746
    9. '```' → logprob: -15.700942039489746
    10. ' 
' → logprob: -16.450942993164062

Token 54: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 55: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9906628727912903
    2. ' if' → logprob: -1.3656628131866455
    3. ' +' → logprob: -2.1156628131866455
    4. ' and' → logprob: -2.7406628131866455
    5. ' ' → logprob: -2.9906628131866455
    6. 'if' → logprob: -3.2406628131866455
    7. '+' → logprob: -3.6156628131866455
    8. '<|end|>' → logprob: -3.6156628131866455
    9. '            ' → logprob: -4.615663051605225
    10. '               ' → logprob: -5.115663051605225

Token 56: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6101285219192505
    2. 'if' (adapté à ' if') → logprob: -1.7351285219192505
    3. ' ' → logprob: -2.485128402709961
    4. '           ' → logprob: -2.735128402709961
    5. ' 
' → logprob: -3.235128402709961
    6. '            ' → logprob: -3.360128402709961
    7. ' (' → logprob: -3.860128402709961
    8. ' total' → logprob: -4.235128402709961
    9. 'total' → logprob: -4.360128402709961
    10. '            
' → logprob: -6.485128402709961

Token 57: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.006062225438654423
    2. 'i' → logprob: -5.131062030792236
    3. ' ' → logprob: -9.756062507629395
    4. ' (' → logprob: -10.006062507629395
    5. ' n' → logprob: -10.881062507629395
    6. '(' → logprob: -12.631062507629395
    7. '	i' → logprob: -13.006062507629395
    8. '    ' → logprob: -13.256062507629395
    9. 'n' → logprob: -13.881062507629395
    10. '```' → logprob: -14.006062507629395

Token 58: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.03113141655921936
    2. '!=' → logprob: -3.5311315059661865
    3. ' ' → logprob: -6.781131267547607
    4. '*' → logprob: -8.906131744384766
    5. ' ' → logprob: -10.531131744384766
    6. ' *' → logprob: -11.406131744384766
    7. ']!=' → logprob: -11.531131744384766
    8. '```' → logprob: -11.656131744384766
    9. ' !==' → logprob: -11.781131744384766
    10. ')!=' → logprob: -11.781131744384766

Token 59: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.018179088830947876
    2. 'n' → logprob: -4.018178939819336
    3. '(n' → logprob: -11.268178939819336
    4. '	n' → logprob: -11.768178939819336
    5. ' ' → logprob: -11.893178939819336
    6. ' (' → logprob: -13.518178939819336
    7. '/n' → logprob: -15.893178939819336
    8. '```' → logprob: -16.018178939819336
    9. '(' → logprob: -16.143178939819336
    10. ' ' → logprob: -16.393178939819336

Token 60: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.2817007601261139
    2. ' //' → logprob: -1.4067007303237915
    3. '/i' → logprob: -8.15670108795166
    4. '/' → logprob: -9.03170108795166
    5. ' ' → logprob: -9.78170108795166
    6. ' ' → logprob: -9.90670108795166
    7. ' /' → logprob: -10.65670108795166
    8. '```' → logprob: -11.78170108795166
    9. '`' → logprob: -13.78170108795166
    10. 'i' → logprob: -14.28170108795166

Token 61: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0003360582049936056
    2. ' i' → logprob: -8.000335693359375
    3. '	i' → logprob: -15.125335693359375
    4. ' ' → logprob: -15.375335693359375
    5. '   ' → logprob: -17.750335693359375
    6. '<|end|>' → logprob: -17.875335693359375
    7. '_i' → logprob: -18.125335693359375
    8. '  ' → logprob: -18.375335693359375
    9. '```' → logprob: -19.375335693359375
    10. '<|end|>' → logprob: -19.750335693359375

Token 62: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001081279362551868
    2. ' and' → logprob: -7.251081466674805
    3. ':
' → logprob: -8.251081466674805
    4. ' :' → logprob: -9.626081466674805
    5. '):' → logprob: -10.876081466674805
    6. '           ' → logprob: -11.626081466674805
    7. 'and' → logprob: -11.626081466674805
    8. '               ' → logprob: -13.751081466674805
    9. ':

' → logprob: -14.126081466674805
    10. '<|end|>' → logprob: -14.251081466674805

Token 63: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001570683903992176
    2. '           ' → logprob: -7.001570701599121
    3. ' total' → logprob: -7.876570701599121
    4. 'total' → logprob: -8.626570701599121
    5. ' ' → logprob: -10.876570701599121
    6. '            ' → logprob: -11.376570701599121
    7. '                ' → logprob: -11.376570701599121
    8. '                   ' → logprob: -11.501570701599121
    9. '              ' → logprob: -11.876570701599121
    10. ' ' → logprob: -12.376570701599121

Token 64: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.01113164983689785
    2. 'total' (adapté à ' total') → logprob: -4.511131763458252
    3. '                   ' → logprob: -10.261131286621094
    4. '                ' → logprob: -11.136131286621094
    5. '               ' → logprob: -11.261131286621094
    6. '	total' → logprob: -11.886131286621094
    7. ' ' → logprob: -12.261131286621094
    8. '            ' → logprob: -13.386131286621094
    9. '_total' → logprob: -13.636131286621094
    10. ' 
' → logprob: -13.761131286621094

Token 65: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0182197168469429
    2. '+=' → logprob: -4.018219947814941
    3. ' +' → logprob: -9.893219947814941
    4. '+' → logprob: -11.518219947814941
    5. ' ' → logprob: -12.143219947814941
    6. '    ' → logprob: -13.643219947814941
    7. ']+=' → logprob: -14.393219947814941
    8. ' ' → logprob: -14.393219947814941
    9. '	' → logprob: -14.643219947814941
    10. '+='' → logprob: -15.018219947814941

Token 66: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0003663212701212615
    2. 'n' → logprob: -8.0003662109375
    3. ' ' → logprob: -11.1253662109375
    4. ' (' → logprob: -11.3753662109375
    5. '(n' → logprob: -12.5003662109375
    6. ' ' → logprob: -14.2503662109375
    7. '	n' → logprob: -15.6253662109375
    8. '(' → logprob: -16.8753662109375
    9. ' "' → logprob: -17.8753662109375
    10. ' н' → logprob: -18.1253662109375

Token 67: ' //' (ID: 602)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.23866285383701324
    2. '//' → logprob: -1.613662838935852
    3. ' //' → logprob: -5.6136627197265625
    4. '/i' → logprob: -5.6136627197265625
    5. '<|end|>' → logprob: -6.7386627197265625
    6. '`' → logprob: -6.9886627197265625
    7. ' /' → logprob: -7.1136627197265625
    8. '```' → logprob: -7.3636627197265625
    9. '/usr' → logprob: -8.238662719726562

Token 68: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.024604277219623e-05
    2. ' i' → logprob: -10.125040054321289
    3. '	i' → logprob: -16.62504005432129
    4. ' ' → logprob: -18.62504005432129
    5. '_i' → logprob: -19.12504005432129
    6. '<|end|>' → logprob: -19.62504005432129
    7. '  ' → logprob: -20.00004005432129
    8. '   ' → logprob: -20.25004005432129
    9. '(i' → logprob: -20.37504005432129
    10. '*i' → logprob: -20.50004005432129

Token 69: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004809364676475525
    2. '
' → logprob: -5.504809379577637
    3. '   ' → logprob: -8.129809379577637
    4. '```' → logprob: -8.254809379577637
    5. '        
' → logprob: -9.129809379577637
    6. '    
' → logprob: -10.254809379577637
    7. 'i' → logprob: -11.754809379577637
    8. '\n' → logprob: -12.004809379577637
    9. 'n' → logprob: -12.879809379577637
    10. '<|end|>' → logprob: -13.004809379577637

Token 70: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009839191101491451
    2. '   ' → logprob: -5.759839057922363
    3. '```' → logprob: -5.759839057922363
    4. '
' → logprob: -6.259839057922363
    5. 'i' → logprob: -7.259839057922363
    6. ' i' → logprob: -7.634839057922363
    7. '        
' → logprob: -8.884839057922363
    8. '    
' → logprob: -9.134839057922363
    9. '\n' → logprob: -9.884839057922363
    10. '``' → logprob: -10.384839057922363

Token 71: ' i' (ID: 575)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02412678487598896
    2. '   ' → logprob: -4.024127006530762
    3. 'i' (adapté à ' i') → logprob: -5.899127006530762
    4. ' i' → logprob: -5.899127006530762
    5. '
' → logprob: -8.399127006530762
    6. '    
' → logprob: -9.649127006530762
    7. '        
' → logprob: -10.149127006530762
    8. '	' → logprob: -10.274127006530762
    9. '	i' → logprob: -10.649127006530762
    10. '    ' → logprob: -10.899127006530762

Token 72: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.23659534752368927
    2. '+=' → logprob: -1.9865953922271729
    3. '+' → logprob: -2.611595392227173
    4. '++' → logprob: -9.861595153808594
    5. ' +' → logprob: -10.111595153808594
    6. '=' → logprob: -11.861595153808594
    7. ' ' → logprob: -12.986595153808594
    8. '+="' → logprob: -12.986595153808594
    9. '<|end|>' → logprob: -13.486595153808594
    10. '+='' → logprob: -13.611595153808594

Token 73: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -18.500003814697266
    4. '```' → logprob: -20.125003814697266
    5. '  ' → logprob: -21.000003814697266
    6. '2' → logprob: -21.500003814697266
    7. '１' → logprob: -22.250003814697266
    8. '    ' → logprob: -22.375003814697266
    9. '<|end|>' → logprob: -22.500003814697266
    10. '۱' → logprob: -22.625003814697266

Token 74: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '```' → logprob: -21.375
    4. '   ' → logprob: -22.25
    5. '１' → logprob: -22.625
    6. '  ' → logprob: -23.0
    7. '۱' → logprob: -23.125
    8. '<|end|>' → logprob: -23.375
    9. '१' → logprob: -23.5
    10. '2' → logprob: -23.9375

Token 75: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08156151324510574
    2. '
' → logprob: -2.58156156539917
    3. '    
' → logprob: -6.70656156539917
    4. ' return' → logprob: -7.33156156539917
    5. 'return' → logprob: -7.33156156539917
    6. '```' → logprob: -10.081561088562012
    7. '	return' → logprob: -10.331561088562012
    8. ' ' → logprob: -11.081561088562012
    9. '  
' → logprob: -11.331561088562012
    10. '
' → logprob: -11.831561088562012

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004808295983821154
    2. 'return' → logprob: -5.87980842590332
    3. ' return' → logprob: -6.62980842590332
    4. '
' → logprob: -7.50480842590332
    5. '    
' → logprob: -9.12980842590332
    6. '```' → logprob: -11.75480842590332
    7. '	return' → logprob: -11.87980842590332
    8. ' ' → logprob: -12.62980842590332
    9. ':return' → logprob: -13.37980842590332
    10. '       ' → logprob: -14.37980842590332

Token 77: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10085458308458328
    2. 'return' (adapté à ' return') → logprob: -2.3508546352386475
    3. ' return' → logprob: -7.350854396820068
    4. '    
' → logprob: -13.100854873657227
    5. '```' → logprob: -13.600854873657227
    6. '	return' → logprob: -13.725854873657227
    7. '
' → logprob: -14.600854873657227
    8. ' ' → logprob: -15.100854873657227
    9. ':return' → logprob: -15.475854873657227
    10. '       ' → logprob: -16.100854873657227

Token 78: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.12692873179912567
    2. 'total' → logprob: -2.1269288063049316
    3. ' tot' → logprob: -14.751928329467773
    4. ' tota' → logprob: -16.126928329467773
    5. '(total' → logprob: -16.376928329467773
    6. 'tot' → logprob: -16.626928329467773
    7. '	total' → logprob: -17.501928329467773
    8. ' totals' → logprob: -17.626928329467773
    9. ' ' → logprob: -18.001928329467773
    10. ' ' → logprob: -18.251928329467773

Token 79: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4148794710636139
    2. '<|end|>' → logprob: -1.1648794412612915
    3. '```' → logprob: -4.414879322052002
    4. '\n' → logprob: -5.039879322052002
    5. '

' → logprob: -6.039879322052002
    6. '#' → logprob: -6.414879322052002
    7. 'def' → logprob: -6.539879322052002
    8. '\' → logprob: -6.664879322052002
    9. '<|end|>' → logprob: -6.914879322052002
    10. 'n' → logprob: -7.789879322052002

Token 80: 'while' (ID: 7032)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.189573273062706
    2. 'def' → logprob: -2.189573287963867
    3. '

' → logprob: -4.189573287963867
    4. 'a' → logprob: -4.314573287963867
    5. '```' → logprob: -4.814573287963867
    6. '<|end|>' → logprob: -4.814573287963867
    7. '\' → logprob: -5.064573287963867
    8. '#' → logprob: -5.564573287963867
    9. '\n' → logprob: -5.689573287963867
    10. '  
' → logprob: -7.314573287963867

Token 81: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.00020616286201402545
    2. ' ' → logprob: -9.375205993652344
    3. ' n' → logprob: -9.625205993652344
    4. 'True' → logprob: -9.875205993652344
    5. ' input' → logprob: -12.875205993652344
    6. '  ' → logprob: -15.125205993652344
    7. ' i' → logprob: -15.250205993652344
    8. ' not' → logprob: -15.375205993652344
    9. '(True' → logprob: -16.500205993652344
    10. ' user' → logprob: -17.000205993652344

Token 82: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003003081073984504
    2. '():' → logprob: -8.250300407409668
    3. ' :' → logprob: -11.125300407409668
    4. ':**' → logprob: -11.875300407409668
    5. ':
' → logprob: -12.125300407409668
    6. '):' → logprob: -12.625300407409668
    7. ':def' → logprob: -13.625300407409668
    8. '(' → logprob: -13.750300407409668
    9. '(:' → logprob: -14.000300407409668
    10. '<|end|>' → logprob: -14.125300407409668

Token 83: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2650783360004425
    2. ' ' → logprob: -2.39007830619812
    3. ' input' → logprob: -2.89007830619812
    4. ' n' → logprob: -3.51507830619812
    5. 'n' → logprob: -4.015078544616699
    6. ' 
' → logprob: -4.390078544616699
    7. '    
' → logprob: -5.265078544616699
    8. '    ' → logprob: -5.265078544616699
    9. 'input' → logprob: -5.765078544616699
    10. ' )' → logprob: -5.765078544616699

Token 84: ' N' (ID: 478)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.8019903302192688
    2. 'n' → logprob: -1.301990270614624
    3. ' number' → logprob: -2.301990270614624
    4. '   ' → logprob: -3.301990270614624
    5. ' num' → logprob: -3.426990270614624
    6. 'number' → logprob: -3.426990270614624
    7. 'num' → logprob: -3.426990270614624
    8. ' user' → logprob: -3.926990270614624
    9. ' try' → logprob: -4.301990509033203
    10. 'user' → logprob: -5.051990509033203

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002812005812302232
    2. '=' → logprob: -5.877811908721924
    3. ' ' → logprob: -12.127812385559082
    4. '=input' → logprob: -14.377812385559082
    5. '=int' → logprob: -14.877812385559082
    6. '  ' → logprob: -15.252812385559082
    7. ',' → logprob: -16.002811431884766
    8. ' >' → logprob: -16.502811431884766
    9. 'space' → logprob: -16.627811431884766
    10. '.' → logprob: -16.752811431884766

Token 86: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.058095160871744156
    2. 'int' → logprob: -2.9330952167510986
    3. ' input' → logprob: -5.8080949783325195
    4. 'input' → logprob: -8.93309497833252
    5. ' ' → logprob: -9.68309497833252
    6. '=int' → logprob: -12.05809497833252
    7. '[int' → logprob: -13.80809497833252
    8. '<int' → logprob: -13.93309497833252
    9. '(int' → logprob: -14.05809497833252
    10. ' ' → logprob: -14.93309497833252

Token 87: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.10021281987428665
    2. '(' → logprob: -2.350212812423706
    3. 'input' → logprob: -12.225213050842285
    4. '(
' → logprob: -14.725213050842285
    5. ' (' → logprob: -15.100213050842285
    6. '()' → logprob: -15.225213050842285
    7. '=input' → logprob: -16.35021209716797
    8. ' input' → logprob: -16.47521209716797
    9. '(

' → logprob: -17.10021209716797
    10. '(in' → logprob: -17.22521209716797

Token 88: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04669136926531792
    2. '())' → logprob: -3.546691417694092
    3. '(' → logprob: -4.671691417694092
    4. '('' → logprob: -5.546691417694092
    5. '("("' → logprob: -6.421691417694092
    6. '("' → logprob: -6.546691417694092
    7. '("")' → logprob: -9.296690940856934
    8. '()>' → logprob: -9.421690940856934
    9. '(">' → logprob: -9.671690940856934
    10. '(""))' → logprob: -9.796690940856934

Token 89: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2738131880760193
    2. '<|end|>' → logprob: -1.523813247680664
    3. ' ' → logprob: -4.523813247680664
    4. '   ' → logprob: -5.648813247680664
    5. 'if' → logprob: -5.773813247680664
    6. '    ' → logprob: -6.398813247680664
    7. '<|end|>' → logprob: -6.398813247680664
    8. ')' → logprob: -8.273813247680664
    9. '```' → logprob: -8.773813247680664
    10. '  ' → logprob: -9.273813247680664

Token 90: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.033358655869960785
    2. '<|end|>' → logprob: -4.033358573913574
    3. ' ' → logprob: -5.158358573913574
    4. 'if' (adapté à ' if') → logprob: -5.283358573913574
    5. '   ' → logprob: -5.658358573913574
    6. '    ' → logprob: -7.658358573913574
    7. '<|end|>' → logprob: -9.158358573913574
    8. '  ' → logprob: -9.658358573913574
    9. ' 
' → logprob: -9.908358573913574
    10. ' If' → logprob: -10.533358573913574

Token 91: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.00010425841173855588
    2. 'N' → logprob: -9.250103950500488
    3. ' ' → logprob: -12.000103950500488
    4. ' ' → logprob: -13.750103950500488
    5. ' not' → logprob: -14.000103950500488
    6. '	N' → logprob: -19.000104904174805
    7. '<|end|>' → logprob: -19.500104904174805
    8. ' n' → logprob: -20.125104904174805
    9. ' ‌' → logprob: -20.375104904174805
    10. ' \(' → logprob: -20.500104904174805

Token 92: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.029320750385522842
    2. ' <=' → logprob: -4.02932071685791
    3. '==' → logprob: -4.52932071685791
    4. '<=' → logprob: -8.15432071685791
    5. ' <' → logprob: -11.02932071685791
    6. ' ' → logprob: -12.40432071685791
    7. '<|end|>' → logprob: -12.52932071685791
    8. ' ' → logprob: -13.40432071685791
    9. ')==' → logprob: -13.52932071685791
    10. '0' → logprob: -14.02932071685791

Token 93: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12692853808403015
    2. ' ' → logprob: -2.1269285678863525
    3. '  ' → logprob: -16.251928329467773
    4. '   ' → logprob: -16.376928329467773
    5. ' ' → logprob: -16.501928329467773
    6. ' -' → logprob: -16.501928329467773
    7. '    ' → logprob: -17.376928329467773
    8. '```' → logprob: -17.814428329467773
    9. '۰' → logprob: -17.876928329467773
    10. '-' → logprob: -18.126928329467773

Token 94: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011705794604495168
    2. ' ' → logprob: -6.751170635223389
    3. '-' → logprob: -15.25117015838623
    4. '```' → logprob: -16.501171112060547
    5. '   ' → logprob: -17.376171112060547
    6. ' -' → logprob: -17.376171112060547
    7. '  ' → logprob: -17.501171112060547
    8. ')' → logprob: -18.063671112060547
    9. '    ' → logprob: -18.313671112060547
    10. '۰' → logprob: -18.563671112060547

Token 95: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001725511101540178
    2. ':
' → logprob: -8.75017261505127
    3. ' :' → logprob: -11.37517261505127
    4. ':return' → logprob: -13.37517261505127
    5. ' break' → logprob: -15.37517261505127
    6. '   ' → logprob: -15.37517261505127
    7. '):' → logprob: -16.000171661376953
    8. '.' → logprob: -16.250171661376953
    9. '	break' → logprob: -16.750171661376953
    10. ' :
' → logprob: -17.000171661376953

Token 96: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003615631954744458
    2. '   ' → logprob: -5.628615856170654
    3. ' break' → logprob: -12.503615379333496
    4. '	break' → logprob: -13.003615379333496
    5. 'break' → logprob: -13.003615379333496
    6. ':' → logprob: -13.378615379333496
    7. '      ' → logprob: -13.878615379333496
    8. '<|end|>' → logprob: -14.253615379333496
    9. '     ' → logprob: -14.378615379333496
    10. '   ' → logprob: -14.503615379333496

Token 97: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.18492382764816284
    2. 'break' (adapté à ' break') → logprob: -2.1849238872528076
    3. '       ' → logprob: -3.0599238872528076
    4. '   ' → logprob: -4.8099236488342285
    5. '	break' → logprob: -6.6849236488342285
    6. 'b' → logprob: -10.684924125671387
    7. '```' → logprob: -11.559924125671387
    8. '_break' → logprob: -11.934924125671387
    9. '           ' → logprob: -12.809924125671387
    10. '    ' → logprob: -13.059924125671387

Token 98: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26147380471229553
    2. '   ' → logprob: -2.0114738941192627
    3. '<|end|>' → logprob: -2.7614738941192627
    4. '    
' → logprob: -4.636473655700684
    5. ' 
' → logprob: -4.886473655700684
    6. '  
' → logprob: -5.886473655700684
    7. '<|end|>' → logprob: -6.011473655700684
    8. ' ' → logprob: -6.011473655700684
    9. '```' → logprob: -6.136473655700684
    10. 'print' → logprob: -6.261473655700684

Token 99: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.078336477279663
    2. '   ' → logprob: -1.203336477279663
    3. ' 
' → logprob: -2.203336477279663
    4. '    
' → logprob: -2.703336477279663
    5. ' ' → logprob: -3.203336477279663
    6. '<|end|>' → logprob: -3.328336477279663
    7. '```' → logprob: -4.078336715698242
    8. '    ' → logprob: -4.078336715698242
    9. '  ' → logprob: -4.328336715698242
    10. '  
' → logprob: -4.453336715698242

Token 100: ' S' (ID: 336)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.8148351907730103
    2. ' ' → logprob: -1.9398351907730103
    3. ' s' → logprob: -2.1898350715637207
    4. 'result' → logprob: -2.6898350715637207
    5. ' 
' → logprob: -2.9398350715637207
    6. ' a' → logprob: -3.6898350715637207
    7. ' total' → logprob: -3.8148350715637207
    8. 's' → logprob: -3.8148350715637207
    9. '   ' → logprob: -3.9398350715637207
    10. ' if' → logprob: -3.9398350715637207

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14828945696353912
    2. '=' → logprob: -2.398289442062378
    3. 'um' → logprob: -3.148289442062378
    4. '_' → logprob: -6.148289680480957
    5. 'u' → logprob: -6.523289680480957
    6. ' ' → logprob: -9.148289680480957
    7. '=sum' → logprob: -10.023289680480957
    8. '   ' → logprob: -10.148289680480957
    9. '_um' → logprob: -10.398289680480957
    10. ',' → logprob: -10.523289680480957

Token 102: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.011049704626202583
    2. 'sum' → logprob: -4.511049747467041
    3. ' ' → logprob: -13.761049270629883
    4. '(sum' → logprob: -15.011049270629883
    5. '"' → logprob: -15.386049270629883
    6. '	sum' → logprob: -15.886049270629883
    7. '    ' → logprob: -16.261049270629883
    8. '  ' → logprob: -17.011049270629883
    9. '=sum' → logprob: -17.636049270629883
    10. ',sum' → logprob: -18.011049270629883

Token 103: '_pro' (ID: 4617)
  Prédit: '_pro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pro' → logprob: -0.0005542247672565281
    2. '_' → logprob: -7.500554084777832
    3. '_p' → logprob: -13.875554084777832
    4. '_pr' → logprob: -15.750554084777832
    5. '_prof' → logprob: -16.37555503845215
    6. '_PRO' → logprob: -18.12555503845215
    7. '_per' → logprob: -18.12555503845215
    8. '_pres' → logprob: -18.25055503845215
    9. '_possible' → logprob: -18.87555503845215
    10. ' _' → logprob: -19.12555503845215

Token 104: 'per' (ID: 543)
  Prédit: 'per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.08883868902921677
    2. 'r' → logprob: -2.588838577270508
    3. 'div' → logprob: -5.588838577270508
    4. 'pers' → logprob: -5.713838577270508
    5. 'rs' → logprob: -6.588838577270508
    6. 'pr' → logprob: -7.713838577270508
    7. 'er' → logprob: -7.838838577270508
    8. 'proper' → logprob: -8.588838577270508
    9. '_div' → logprob: -9.713838577270508
    10. 'ers' → logprob: -9.838838577270508

Token 105: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -0.04884010925889015
    2. '_' → logprob: -3.048840045928955
    3. 'div' → logprob: -8.423840522766113
    4. '<|end|>' → logprob: -11.423840522766113
    5. ' ' → logprob: -12.298840522766113
    6. ' divis' → logprob: -12.548840522766113
    7. ' _' → logprob: -12.548840522766113
    8. '_DIV' → logprob: -12.673840522766113
    9. '	div' → logprob: -13.673840522766113
    10. ')' → logprob: -13.923840522766113

Token 106: 'is' (ID: 276)
  Prédit: 'ors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.024043578654527664
    2. 's' → logprob: -4.274043560028076
    3. 'is' → logprob: -4.649043560028076
    4. 'iors' → logprob: -8.649044036865234
    5. 'o' → logprob: -11.149044036865234
    6. 'orsi' → logprob: -11.399044036865234
    7. 'itors' → logprob: -11.524044036865234
    8. 'rors' → logprob: -12.024044036865234
    9. 'os' → logprob: -12.524044036865234
    10. '   ' → logprob: -12.649044036865234

Token 107: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.07059026509523392
    2. 's' → logprob: -2.6955902576446533
    3. 'tors' → logprob: -8.445590019226074
    4. 'd' → logprob: -8.570590019226074
    5. 'rors' → logprob: -9.945590019226074
    6. 'or' → logprob: -10.070590019226074
    7. 'rs' → logprob: -10.320590019226074
    8. 'so' → logprob: -10.695590019226074
    9. '   ' → logprob: -10.695590019226074
    10. 'ds' → logprob: -11.070590019226074

Token 108: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.07892283797264099
    2. '(' → logprob: -2.578922748565674
    3. '(
' → logprob: -11.453923225402832
    4. '(n' → logprob: -11.578923225402832
    5. ' (' → logprob: -11.703923225402832
    6. '(S' → logprob: -12.828923225402832
    7. '(`' → logprob: -14.328923225402832
    8. '(

' → logprob: -14.578923225402832
    9. '((' → logprob: -15.078923225402832
    10. '```' → logprob: -15.953923225402832

Token 109: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002655079588294029
    2. ')
' → logprob: -8.250265121459961
    3. ' )' → logprob: -13.000265121459961
    4. '   ' → logprob: -13.500265121459961
    5. ')
' → logprob: -15.500265121459961
    6. ')

' → logprob: -16.25026512145996
    7. ')`' → logprob: -16.37526512145996
    8. '))' → logprob: -16.87526512145996
    9. '()' → logprob: -17.00026512145996
    10. '`)' → logprob: -18.00026512145996

Token 110: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03940024971961975
    2. '
' → logprob: -3.539400339126587
    3. ' if' → logprob: -5.289400100708008
    4. '    
' → logprob: -6.664400100708008
    5. '<|end|>' → logprob: -7.039400100708008
    6. ' ' → logprob: -7.289400100708008
    7. '  
' → logprob: -7.789400100708008
    8. ' 
' → logprob: -7.914400100708008
    9. 'if' → logprob: -8.789400100708008
    10. '  ' → logprob: -8.914400100708008

Token 111: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.024570178240537643
    2. 'print' → logprob: -3.7745702266693115
    3. ' if' → logprob: -7.024569988250732
    4. '   ' → logprob: -7.774569988250732
    5. ' print' → logprob: -12.27457046508789
    6. 'i' → logprob: -12.64957046508789
    7. ' ' → logprob: -13.64957046508789
    8. '    
' → logprob: -13.64957046508789
    9. 'p' → logprob: -13.89957046508789
    10. '```' → logprob: -14.02457046508789

Token 112: ' N' (ID: 478)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.0019914438016712666
    2. 'S' → logprob: -6.751991271972656
    3. ' ' → logprob: -7.126991271972656
    4. ' N' → logprob: -11.376991271972656
    5. ' ' → logprob: -12.501991271972656
    6. '    ' → logprob: -13.126991271972656
    7. '  ' → logprob: -14.751991271972656
    8. 'N' → logprob: -17.251991271972656
    9. ' s' → logprob: -17.501991271972656
    10. '   ' → logprob: -17.501991271972656

Token 113: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.18010149896144867
    2. '==' → logprob: -1.8051015138626099
    3. ' <' → logprob: -8.93010139465332
    4. '=' → logprob: -9.43010139465332
    5. ' >' → logprob: -9.93010139465332
    6. '>' → logprob: -10.05510139465332
    7. '<' → logprob: -10.55510139465332
    8. ' ' → logprob: -11.05510139465332
    9. ' =' → logprob: -12.55510139465332
    10. ' !=' → logprob: -12.68010139465332

Token 114: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.026313764974474907
    2. ' S' → logprob: -3.6513137817382812
    3. ' ' → logprob: -11.401313781738281
    4. 's' → logprob: -14.026313781738281
    5. '  ' → logprob: -15.026313781738281
    6. '1' → logprob: -15.901313781738281
    7. '	S' → logprob: -15.901313781738281
    8. '   ' → logprob: -16.15131378173828
    9. ''S' → logprob: -16.15131378173828
    10. '"S' → logprob: -16.15131378173828

Token 115: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4818331301212311
    2. ' and' → logprob: -0.9818331003189087
    3. 'and' → logprob: -5.231832981109619
    4. ' :' → logprob: -6.106832981109619
    5. '   ' → logprob: -10.231833457946777
    6. ',' → logprob: -10.606833457946777
    7. ':
' → logprob: -10.731833457946777
    8. '.' → logprob: -11.231833457946777
    9. ' ' → logprob: -11.606833457946777
    10. '    ' → logprob: -11.606833457946777

Token 116: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0953587144613266
    2. '"' → logprob: -2.7203586101531982
    3. '    ' → logprob: -5.095358848571777
    4. ' print' → logprob: -5.220358848571777
    5. '   ' → logprob: -5.595358848571777
    6. 'print' → logprob: -5.845358848571777
    7. ' "' → logprob: -5.970358848571777
    8. ''' → logprob: -6.095358848571777
    9. ' '' → logprob: -7.095358848571777
    10. ' ' → logprob: -8.345358848571777

Token 117: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.6932203769683838
    2. '   ' → logprob: -1.0682203769683838
    3. 'print' (adapté à ' print') → logprob: -1.9432203769683838
    4. '       ' → logprob: -4.443220138549805
    5. '
' → logprob: -7.193220138549805
    6. '	print' → logprob: -8.193220138549805
    7. '    ' → logprob: -9.068220138549805
    8. '    
' → logprob: -9.193220138549805
    9. ' 
' → logprob: -10.068220138549805
    10. '  ' → logprob: -10.693220138549805

Token 118: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.08986581861972809
    2. '(f' → logprob: -2.5898659229278564
    3. '(' → logprob: -4.589865684509277
    4. '('' → logprob: -7.214865684509277
    5. 'f' → logprob: -11.964865684509277
    6. '()' → logprob: -12.464865684509277
    7. '("")' → logprob: -12.964865684509277
    8. '(N' → logprob: -13.214865684509277
    9. '(F' → logprob: -13.214865684509277
    10. '"' → logprob: -13.339865684509277

Token 119: 'perfect' (ID: 97534)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.8171530961990356
    2. '   ' → logprob: -1.6921530961990356
    3. 'Perfect' → logprob: -1.9421530961990356
    4. 'PER' → logprob: -2.942152976989746
    5. ' ' → logprob: -3.192152976989746
    6. 'We' → logprob: -3.317152976989746
    7. 'perfect' → logprob: -3.817152976989746
    8. '`' → logprob: -4.192152976989746
    9. '``' → logprob: -4.817152976989746
    10. '{}' → logprob: -5.317152976989746

Token 120: ' number' (ID: 2086)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.006034854333847761
    2. ' number' → logprob: -5.381034851074219
    3. '")
' → logprob: -7.006034851074219
    4. ' ")' → logprob: -7.756034851074219
    5. '"' → logprob: -10.256034851074219
    6. 'number' → logprob: -11.256034851074219
    7. ')' → logprob: -12.006034851074219
    8. ' ' → logprob: -12.006034851074219
    9. '")
' → logprob: -12.506034851074219
    10. '")

' → logprob: -12.756034851074219

Token 121: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.05072209611535072
    2. ')' → logprob: -3.050722122192383
    3. '"' → logprob: -6.675722122192383
    4. 's' → logprob: -7.425722122192383
    5. '")
' → logprob: -8.800722122192383
    6. '')' → logprob: -10.675722122192383
    7. ')
' → logprob: -10.800722122192383
    8. '!' → logprob: -11.050722122192383
    9. '!")' → logprob: -11.050722122192383
    10. '\n' → logprob: -12.050722122192383

Token 122: '   ' (ID: 271)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.2860552668571472
    2. '   ' → logprob: -1.786055326461792
    3. ' elif' → logprob: -2.536055326461792
    4. '<|end|>' → logprob: -7.036055088043213
    5. '	elif' → logprob: -7.161055088043213
    6. '  ' → logprob: -9.411055564880371
    7. 'else' → logprob: -9.411055564880371
    8. ' else' → logprob: -9.786055564880371
    9. ' ' → logprob: -10.161055564880371
    10. '    
' → logprob: -11.036055564880371

Token 123: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.1621532142162323
    2. ' elif' → logprob: -2.2871532440185547
    3. '   ' → logprob: -3.0371532440185547
    4. '	elif' → logprob: -9.412153244018555
    5. 'else' → logprob: -10.162153244018555
    6. '  ' → logprob: -11.037153244018555
    7. ' ' → logprob: -11.287153244018555
    8. ' else' → logprob: -11.662153244018555
    9. '<|end|>' → logprob: -13.037153244018555
    10. '    ' → logprob: -13.662153244018555

Token 124: ' N' (ID: 478)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.03281925618648529
    2. 'S' → logprob: -3.7828192710876465
    3. ' N' → logprob: -5.1578192710876465
    4. ' ' → logprob: -5.6578192710876465
    5. 'N' → logprob: -8.782818794250488
    6. '  ' → logprob: -9.407818794250488
    7. '   ' → logprob: -11.282818794250488
    8. ' abs' → logprob: -11.657818794250488
    9. ' ' → logprob: -12.032818794250488
    10. '    ' → logprob: -12.407818794250488

Token 125: ' >' (ID: 1424)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.26171019673347473
    2. ' >' → logprob: -1.6367101669311523
    3. ' ' → logprob: -3.5117101669311523
    4. ' ==' → logprob: -6.136710166931152
    5. '>' → logprob: -6.261710166931152
    6. '<' → logprob: -7.011710166931152
    7. '==' → logprob: -8.761710166931152
    8. 's' → logprob: -9.261710166931152
    9. '<|end|>' → logprob: -9.261710166931152
    10. '  ' → logprob: -10.136710166931152

Token 126: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.22553317248821259
    2. ' S' → logprob: -1.600533127784729
    3. ' ' → logprob: -9.350533485412598
    4. '0' → logprob: -11.100533485412598
    5. 's' → logprob: -12.225533485412598
    6. '   ' → logprob: -12.350533485412598
    7. '  ' → logprob: -12.975533485412598
    8. '	S' → logprob: -12.975533485412598
    9. '>S' → logprob: -14.225533485412598
    10. '1' → logprob: -14.350533485412598

Token 127: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005810309085063636
    2. ':
' → logprob: -8.375580787658691
    3. ' and' → logprob: -8.375580787658691
    4. ' :' → logprob: -9.375580787658691
    5. 'and' → logprob: -11.750580787658691
    6. '<|end|>' → logprob: -11.875580787658691
    7. '   ' → logprob: -12.125580787658691
    8. '       ' → logprob: -12.500580787658691
    9. '):' → logprob: -12.750580787658691
    10. ',' → logprob: -13.000580787658691

Token 128: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02253381535410881
    2. ':' → logprob: -4.272533893585205
    3. '   ' → logprob: -5.272533893585205
    4. ':
' → logprob: -6.022533893585205
    5. 'print' → logprob: -8.397533416748047
    6. '
' → logprob: -8.522533416748047
    7. ' print' → logprob: -9.022533416748047
    8. '<|end|>' → logprob: -10.397533416748047
    9. '     ' → logprob: -10.522533416748047
    10. '        
' → logprob: -10.772533416748047

Token 129: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.07138797640800476
    2. '       ' → logprob: -3.071388006210327
    3. 'print' (adapté à ' print') → logprob: -3.946388006210327
    4. '   ' → logprob: -6.196387767791748
    5. ' ' → logprob: -7.321387767791748
    6. '    ' → logprob: -8.446388244628906
    7. '"' → logprob: -8.946388244628906
    8. '	print' → logprob: -9.946388244628906
    9. '        ' → logprob: -10.696388244628906
    10. '     ' → logprob: -11.071388244628906

Token 130: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0002700377081055194
    2. '(' → logprob: -8.250269889831543
    3. '("("' → logprob: -11.750269889831543
    4. '"' → logprob: -15.250269889831543
    5. '("(' → logprob: -15.375269889831543
    6. ' ("' → logprob: -15.625269889831543
    7. '(
' → logprob: -16.37527084350586
    8. '('' → logprob: -17.12527084350586
    9. '("")' → logprob: -17.62527084350586
    10. '(":' → logprob: -18.37527084350586

Token 131: 'def' (ID: 1314)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.08906564116477966
    2. 'def' → logprob: -2.4640655517578125
    3. ' deficient' → logprob: -9.964065551757812
    4. '   ' → logprob: -10.339065551757812
    5. 'ab' → logprob: -11.839065551757812
    6. '"d' → logprob: -11.964065551757812
    7. ':def' → logprob: -12.089065551757812
    8. '“' → logprob: -12.839065551757812
    9. ''ab' → logprob: -12.964065551757812
    10. '"a' → logprob: -13.089065551757812

Token 132: 'icient' (ID: 6995)
  Prédit: 'icient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icient' → logprob: -6.885492621222511e-05
    2. 'iciency' → logprob: -10.250068664550781
    3. 'ic' → logprob: -11.625068664550781
    4. 'ective' → logprob: -11.750068664550781
    5. '```' → logprob: -12.125068664550781
    6. 'ect' → logprob: -12.125068664550781
    7. 'icit' → logprob: -12.500068664550781
    8. 'icients' → logprob: -14.625068664550781
    9. 'iciente' → logprob: -14.750068664550781
    10. 'icent' → logprob: -15.000068664550781

Token 133: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.0010454319417476654
    2. 'number' → logprob: -7.126045227050781
    3. ' ' → logprob: -8.376045227050781
    4. '_number' → logprob: -13.001045227050781
    5. '	number' → logprob: -13.001045227050781
    6. ')' → logprob: -13.251045227050781
    7. '  ' → logprob: -13.501045227050781
    8. 'umber' → logprob: -13.626045227050781
    9. ' amount' → logprob: -15.001045227050781
    10. 'Number' → logprob: -15.501045227050781

Token 134: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.04905068501830101
    2. '")
' → logprob: -3.0490505695343018
    3. '   ' → logprob: -7.924050807952881
    4. '")
' → logprob: -9.924050331115723
    5. '"' → logprob: -10.549050331115723
    6. ' ")' → logprob: -11.674050331115723
    7. '")

' → logprob: -12.049050331115723
    8. 'else' → logprob: -12.799050331115723
    9. 's' → logprob: -13.049050331115723
    10. ')' → logprob: -13.049050331115723

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.79811754100956e-05
    2. 'else' → logprob: -11.375038146972656
    3. '    
' → logprob: -11.375038146972656
    4. ' else' → logprob: -11.500038146972656
    5. '<|end|>' → logprob: -12.875038146972656
    6. '
' → logprob: -14.375038146972656
    7. 'elif' → logprob: -14.500038146972656
    8. '	else' → logprob: -15.375038146972656
    9. '  
' → logprob: -15.500038146972656
    10. '   
' → logprob: -15.625038146972656

Token 136: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16113074123859406
    2. 'else' (adapté à ' else') → logprob: -1.9111307859420776
    3. ' else' → logprob: -7.036130905151367
    4. 'elif' → logprob: -10.661130905151367
    5. '	else' → logprob: -13.036130905151367
    6. ' ' → logprob: -15.161130905151367
    7. '  ' → logprob: -15.286130905151367
    8. '    
' → logprob: -15.911130905151367
    9. '```' → logprob: -16.161130905151367
    10. 'e' → logprob: -16.286130905151367

Token 137: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015158714726567268
    2. ':
' → logprob: -4.765158653259277
    3. '       ' → logprob: -5.140158653259277
    4. '   ' → logprob: -7.390158653259277
    5. ' :' → logprob: -10.390158653259277
    6. ' :
' → logprob: -12.265158653259277
    7. '    ' → logprob: -13.390158653259277
    8. 'print' → logprob: -13.390158653259277
    9. '           ' → logprob: -13.640158653259277
    10. '        ' → logprob: -13.765158653259277

Token 138: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09067519754171371
    2. '   ' → logprob: -2.590675115585327
    3. ' print' → logprob: -4.590675354003906
    4. 'print' → logprob: -6.465675354003906
    5. '	print' → logprob: -11.840675354003906
    6. '   ' → logprob: -13.965675354003906
    7. ' ' → logprob: -14.090675354003906
    8. '    ' → logprob: -14.340675354003906
    9. '    
' → logprob: -14.340675354003906
    10. '     ' → logprob: -14.465675354003906

Token 139: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.5459764003753662
    2. ' print' → logprob: -0.9209764003753662
    3. '       ' → logprob: -4.170976638793945
    4. '"' → logprob: -5.170976638793945
    5. '   ' → logprob: -6.670976638793945
    6. '	print' → logprob: -9.920976638793945
    7. ' ' → logprob: -10.045976638793945
    8. '        ' → logprob: -10.920976638793945
    9. ' "' → logprob: -10.920976638793945
    10. '.print' → logprob: -11.170976638793945

Token 140: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.04858771339058876
    2. '(' → logprob: -3.0485877990722656
    3. '("("' → logprob: -15.298587799072266
    4. '('' → logprob: -17.048587799072266
    5. '(
' → logprob: -17.048587799072266
    6. '"' → logprob: -17.548587799072266
    7. '("(' → logprob: -17.673587799072266
    8. '(""' → logprob: -18.173587799072266
    9. '("")' → logprob: -19.048587799072266
    10. '("""' → logprob: -19.548587799072266

Token 141: 'ab' (ID: 378)
  Prédit: 'ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -2.5941604690160602e-05
    2. ' abundant' → logprob: -11.000025749206543
    3. 'amic' → logprob: -12.500025749206543
    4. '"' → logprob: -12.625025749206543
    5. '   ' → logprob: -13.875025749206543
    6. 'ex' → logprob: -14.250025749206543
    7. ''ab' → logprob: -14.750025749206543
    8. 'Ab' → logprob: -16.12502670288086
    9. 'perfect' → logprob: -16.62502670288086
    10. ' ' → logprob: -17.00002670288086

Token 142: 'undant' (ID: 170136)
  Prédit: 'undant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'undant' → logprob: -0.02355908788740635
    2. 'und' → logprob: -3.773559093475342
    3. 'undance' → logprob: -8.273558616638184
    4. 'un' → logprob: -10.523558616638184
    5. 'undan' → logprob: -10.898558616638184
    6. '   ' → logprob: -12.523558616638184
    7. 'ud' → logprob: -13.023558616638184
    8. '           ' → logprob: -13.648558616638184
    9. 'unda' → logprob: -13.648558616638184
    10. 'unden' → logprob: -14.398558616638184

Token 143: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.002384091727435589
    2. 'number' → logprob: -6.127384185791016
    3. ' ' → logprob: -8.627384185791016
    4. ' ' → logprob: -11.877384185791016
    5. '	number' → logprob: -12.127384185791016
    6. ')' → logprob: -12.877384185791016
    7. '_number' → logprob: -13.002384185791016
    8. '  ' → logprob: -13.127384185791016
    9. '   ' → logprob: -15.877384185791016
    10. 'umber' → logprob: -16.002384185791016

Token 144: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.006736691575497389
    2. ')' → logprob: -5.006736755371094
    3. ')")' → logprob: -11.131736755371094
    4. '")
' → logprob: -12.256736755371094
    5. '')' → logprob: -13.756736755371094
    6. ')
' → logprob: -15.381736755371094
    7. '```' → logprob: -15.506736755371094
    8. '}")' → logprob: -15.881736755371094
    9. ' )' → logprob: -16.256736755371094
    10. '`)' → logprob: -16.381736755371094


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 142
Tokens correctement prédits (1ère position, stricte): 78
Tokens correctement prédits (1ère position, avec adaptation): 81
Tokens correctement prédits (top 10): 129
Précision stricte (1ère position): 54.93%
Précision adaptée (1ère position): 57.04%
Précision (top 10): 90.85%
================================================================================
