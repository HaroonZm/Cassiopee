================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:12
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from collections import deque
input=sys.stdin.readline

N,M,W,T=map(int,input().split())
items=dict()
for _ in range(M):
    s,v,p=input().split()
    v=int(v)
    p=int(p)
    items[s]=(v,p)
markets=[]
for _ in range(N):
    L,x,y=map(int,input().split())
    goods=dict()
    for __ in range(L):
        r,q=input().split()
        q=int(q)
        goods[r]=q
    markets.append((x,y,goods))

def dist(a,b):
    return abs(a[0]-b[0])+abs(a[1]-b[1])

dp=[[-1]*(1<<N) for _ in range(N+1)]
# dp[i][S]: max profit ending at position i(0:market, 1~N:city i-1), visited cities S bitmask 
dp[0][0]=0

pos=[(0,0)]+[(m[0],m[1]) for m in markets]

# Precompute profit for each subset of cities and the best set of items buyable within W
from itertools import combinations,product

# For each city, compute profit per item: buy_price - market_price
profit_per_city=[dict() for _ in range(N)]
for i,(x,y,goods) in enumerate(markets):
    for s,v_p in items.items():
        if s in goods:
            buy_p=goods[s]
            sell_p=v_p[1]
            prof=sell_p - buy_p
            if prof>0:
                profit_per_city[i][s]=prof
        # else no profit; ignore

# For each subset of cities, compute:
# total_profit and minimal weight packing of items (knapsack)
# As unlimited items, do unbounded knapsack over union of items in those cities

# To accelerate, for each city subset:
# collect all items available, with their weight (v), profit (sum of city profits)
# Because multiple cities may sell same item at different prices, pick best profit per item among those cities

def best_profit_for_subset(city_subset):
    # city_subset: tuple of city indices
    goods=dict()
    for c in city_subset:
        for s,p in profit_per_city[c].items():
            if s not in goods or goods[s]<p:
                goods[s]=p
    if not goods:
        return 0
    # dp knapsack: max profit with weight limit W, unlimited items
    dp_knap=[0]*(W+1)
    for s,p in goods.items():
        w=items[s][0]
        for weight in range(w,W+1):
            val=dp_knap[weight-w]+p
            if val>dp_knap[weight]:
                dp_knap[weight]=val
    return max(dp_knap)

from itertools import combinations
subset_profit=dict()
# generate all subsets of cities (non-empty)
for l in range(1,N+1):
    for comb in combinations(range(N),l):
        subset_profit[comb]=best_profit_for_subset(comb)

# Precompute travel time between nodes
dist_map=[[0]*(N+1) for _ in range(N+1)]
for i in range(N+1):
    for j in range(N+1):
        dist_map[i][j]=dist(pos[i],pos[j])

from itertools import chain
for visited in range(1<<N):
    for last in range(N+1):
        if dp[last][visited]<0:
            continue
        # Try to add a subset of unvisited cities and go back to market
        unvisited=[i for i in range(N) if not (visited>>i)&1]
        # Enumerate subsets of unvisited cities
        # To speed up, enumerate subsets by bitmask of unvisited only
        if not unvisited:
            continue
        u_len=len(unvisited)
        for submask in range(1,1<<u_len):
            subset=[]
            for idx in range(u_len):
                if (submask>>idx)&1:
                    subset.append(unvisited[idx])
            # time cost:
            # from pos[last] to first city in subset, go through subset in any order? To minimize time, we can consider:
            # Since we always must go market->cities->market for each purchase set, we consider trip as:
            # from current last to cities subset in any order, then back to market(0)
            # We'll approximate as:
            # The shortest route visiting all cities in subset starting at pos[last], ending at market(0)
            # N is small; do tsp for subset + start,last
            # But number of subsets and tsp is heavy, so we approximate:
            # time = dist(last,cities1)+sum dist between cities in any order + dist(last city,market)
            # But complicated; better to fix order: so we treat subset as one "trip": market -> set of cities -> market
            # So must go from market(0) to each city and back. Since trade happens by going market->cities->market cycles.
            # So from last to market, + from market to cities + from cities to market
            # So cost = dist(last,0) + TSP(market->subset cities->market)
            # Let's approximate by sum of distances to/from market:
            # The minimal route visiting all cities from market and returning market is at least:
            # minimal spanning: 2*sum dist between market and those cities in worst case (go and return city by city)
            # To estimate tight travel time, we calculate TSP starting and ending at market(0)

            # To keep it simple and acceptable:
            # Approximate travel time = dist(last,0) + 2 * sum of dist between market(0) and cities
            # Actually find min of: TSP starting/ending at 0 over subset
            subset_points=[0]+[i+1 for i in subset]
            tsp_dp=[ [float('inf')]*(len(subset_points)) for _ in range(1<<len(subset_points))]
            tsp_dp[1][0]=0
            for s in range(1<<len(subset_points)):
                for u in range(len(subset_points)):
                    if tsp_dp[s][u]==float('inf'):
                        continue
                    for v in range(1,len(subset_points)):
                        if (s>>v)&1==0:
                            cost=dist_map[subset_points[u]][subset_points[v]]
                            ns=s|(1<<v)
                            if tsp_dp[ns][v]>tsp_dp[s][u]+cost:
                                tsp_dp[ns][v]=tsp_dp[s][u]+cost
            full=(1<<len(subset_points))-1
            min_tsp=float('inf')
            for u in range(1,len(subset_points)):
                cost=tsp_dp[full][u]+dist_map[subset_points[u]][0]
                if cost<min_tsp:
                    min_tsp=cost
            travel_time=dist_map[last][0]+min_tsp
            if travel_time>T:
                continue
            p=dp[last][visited]+subset_profit[tuple(sorted(subset))]
            if dp[0][visited|sum(1<<x for x in subset)]<p:
                dp[0][visited|sum(1<<x for x in subset)]=p

ans=max(dp[0])
print(ans if ans>=0 else 0)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29731935262680054
    2. '\n' → logprob: -1.5473194122314453
    3. '<|end|>' → logprob: -3.7973194122314453
    4. '\' → logprob: -4.922319412231445
    5. 'newline' → logprob: -5.672319412231445
    6. 'import' → logprob: -5.672319412231445
    7. '<|end|>' → logprob: -6.047319412231445
    8. '
' → logprob: -6.922319412231445
    9. '```' → logprob: -6.922319412231445
    10. '' → logprob: -7.672319412231445

Token 4: ' collections' (ID: 22690)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.010235155932605267
    2. 'os' → logprob: -4.76023530960083
    3. ' collections' → logprob: -7.76023530960083
    4. ' pathlib' → logprob: -7.76023530960083
    5. ' Py' → logprob: -8.885234832763672
    6. ' math' → logprob: -9.010234832763672
    7. 'collections' → logprob: -9.385234832763672
    8. ' datetime' → logprob: -9.760234832763672
    9. ' import' → logprob: -9.885234832763672
    10. ' typing' → logprob: -9.885234832763672

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.47534993290901184
    2. 'import' → logprob: -1.1003499031066895
    3. '.' → logprob: -3.1003499031066895
    4. ' ' → logprob: -8.725350379943848
    5. '```' → logprob: -9.100350379943848
    6. '.import' → logprob: -9.600350379943848
    7. '<|end|>' → logprob: -9.725350379943848
    8. '_' → logprob: -10.100350379943848
    9. '	import' → logprob: -10.725350379943848
    10. '_import' → logprob: -11.475350379943848

Token 6: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.58138507604599
    2. ' deque' → logprob: -0.95638507604599
    3. 'deque' → logprob: -2.9563851356506348
    4. ' abc' → logprob: -5.706385135650635
    5. ' named' → logprob: -7.706385135650635
    6. 'abc' → logprob: -7.956385135650635
    7. ' Counter' → logprob: -8.831384658813477
    8. 'named' → logprob: -8.831384658813477
    9. 'default' → logprob: -9.081384658813477
    10. 'Counter' → logprob: -10.706384658813477

Token 7: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.9286866784095764
    2. '\n' → logprob: -1.0536866188049316
    3. '
' → logprob: -1.9286866188049316
    4. 'import' → logprob: -3.1786866188049316
    5. '```' → logprob: -3.3036866188049316
    6. '\' → logprob: -3.8036866188049316
    7. '<|end|>' → logprob: -5.803686618804932
    8. 'newline' → logprob: -6.178686618804932
    9. '' → logprob: -6.928686618804932
    10. '<|end|>' → logprob: -7.053686618804932

Token 8: 'input' (ID: 2586)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5088411569595337
    2. 'import' → logprob: -2.008841037750244
    3. '\n' → logprob: -2.258841037750244
    4. '```' → logprob: -2.633841037750244
    5. '
' → logprob: -3.008841037750244
    6. '\' → logprob: -3.758841037750244
    7. 'def' → logprob: -6.008841037750244
    8. ',' → logprob: -6.133841037750244
    9. '<|end|>' → logprob: -6.258841037750244
    10. '`' → logprob: -6.383841037750244

Token 9: '=sys' (ID: 149200)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003019422059878707
    2. '.' → logprob: -5.878019332885742
    3. '()' → logprob: -9.503019332885742
    4. ' (' → logprob: -9.878019332885742
    5. ')' → logprob: -11.003019332885742
    6. '=' → logprob: -11.128019332885742
    7. '(.)' → logprob: -11.503019332885742
    8. '('' → logprob: -12.128019332885742
    9. ''' → logprob: -12.253019332885742
    10. '(
' → logprob: -12.753019332885742

Token 10: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0002547832846175879
    2. '[' → logprob: -8.87525463104248
    3. '.readline' → logprob: -9.62525463104248
    4. ' .' → logprob: -10.50025463104248
    5. '.
' → logprob: -12.37525463104248
    6. '.stdin' → logprob: -13.00025463104248
    7. '```' → logprob: -13.00025463104248
    8. '['' → logprob: -13.50025463104248
    9. '.[' → logprob: -13.87525463104248
    10. '[
' → logprob: -13.87525463104248

Token 11: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.4354115426540375
    2. '.' → logprob: -1.0604115724563599
    3. '.read' → logprob: -5.06041145324707
    4. '.Read' → logprob: -8.56041145324707
    5. 'read' → logprob: -9.81041145324707
    6. '.Reader' → logprob: -10.68541145324707
    7. '.readlines' → logprob: -10.68541145324707
    8. '```' → logprob: -11.68541145324707
    9. '.READ' → logprob: -11.93541145324707
    10. '.​' → logprob: -12.18541145324707

Token 12: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.48965418338775635
    2. '(' → logprob: -0.9896541833877563
    3. '(
' → logprob: -4.614654064178467
    4. '()
' → logprob: -6.364654064178467
    5. '
' → logprob: -6.989654064178467
    6. '(

' → logprob: -7.114654064178467
    7. '()

' → logprob: -7.239654064178467
    8. '\(' → logprob: -8.364654541015625
    9. '

' → logprob: -8.864654541015625
    10. ')' → logprob: -8.989654541015625

Token 13: 'N' (ID: 45)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02973880246281624
    2. 'def' → logprob: -4.654738903045654
    3. 'd' → logprob: -4.779738903045654
    4. '(n' → logprob: -5.404738903045654
    5. '(' → logprob: -6.029738903045654
    6. 'q' → logprob: -6.654738903045654
    7. 'N' → logprob: -6.779738903045654
    8. 'b' → logprob: -7.904738903045654
    9. 'queue' → logprob: -8.279738426208496
    10. '()' → logprob: -8.529738426208496

Token 14: ',M' (ID: 54127)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8462023735046387
    2. ' ' → logprob: -1.2212023735046387
    3. ' =' → logprob: -1.4712023735046387
    4. ')' → logprob: -3.3462023735046387
    5. '<|end|>' → logprob: -5.846202373504639
    6. ',' → logprob: -6.346202373504639
    7. '>' → logprob: -6.346202373504639
    8. ' )' → logprob: -6.471202373504639
    9. '  ' → logprob: -7.221202373504639
    10. '[' → logprob: -7.971202373504639

Token 15: ',W' (ID: 117252)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5846806764602661
    2. '=' → logprob: -0.8346806764602661
    3. ',' → logprob: -4.959680557250977
    4. ' ' → logprob: -7.209680557250977
    5. ' ,' → logprob: -7.209680557250977
    6. ')' → logprob: -9.584680557250977
    7. ' =
' → logprob: -10.584680557250977
    8. '<|end|>' → logprob: -10.584680557250977
    9. '=int' → logprob: -11.459680557250977
    10. '=input' → logprob: -11.709680557250977

Token 16: ',T' (ID: 44428)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0014288094826042652
    2. ' =' → logprob: -6.751428604125977
    3. ',' → logprob: -8.876428604125977
    4. '=input' → logprob: -9.251428604125977
    5. '=int' → logprob: -11.501428604125977
    6. '=

' → logprob: -12.126428604125977
    7. '=list' → logprob: -13.626428604125977
    8. '=N' → logprob: -14.376428604125977
    9. '=line' → logprob: -14.376428604125977
    10. '=sys' → logprob: -14.501428604125977

Token 17: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03384244441986084
    2. ' =' → logprob: -3.4088425636291504
    3. '=input' → logprob: -9.283842086791992
    4. ',' → logprob: -9.408842086791992
    5. '=int' → logprob: -11.658842086791992
    6. '=

' → logprob: -12.658842086791992
    7. '=[' → logprob: -13.283842086791992
    8. '[' → logprob: -14.033842086791992
    9. ' =[' → logprob: -14.033842086791992
    10. '=list' → logprob: -14.158842086791992

Token 18: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.474087119102478
    2. ' map' → logprob: -0.974087119102478
    3. 'list' → logprob: -11.97408676147461
    4. ' list' → logprob: -13.09908676147461
    5. 'input' → logprob: -14.09908676147461
    6. '	map' → logprob: -14.59908676147461
    7. '(map' → logprob: -15.34908676147461
    8. '[' → logprob: -15.97408676147461
    9. ' ' → logprob: -16.72408676147461
    10. ' input' → logprob: -16.84908676147461

Token 19: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19132685661315918
    2. '(int' → logprob: -1.8163268566131592
    3. '(lambda' → logprob: -4.566327095031738
    4. '(str' → logprob: -7.691327095031738
    5. '(input' → logprob: -8.066327095031738
    6. '<|end|>' → logprob: -9.566327095031738
    7. '[int' → logprob: -9.816327095031738
    8. '(
' → logprob: -9.941327095031738
    9. 'int' → logprob: -10.566327095031738
    10. '(len' → logprob: -10.816327095031738

Token 20: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.5223209857940674
    2. ',' → logprob: -1.2723209857940674
    3. '(input' → logprob: -2.2723209857940674
    4. '(' → logprob: -4.147320747375488
    5. ')' → logprob: -6.022320747375488
    6. '(sys' → logprob: -6.147320747375488
    7. 'input' → logprob: -6.397320747375488
    8. ',int' → logprob: -7.022320747375488
    9. '(int' → logprob: -8.897320747375488
    10. '),' → logprob: -9.022320747375488

Token 21: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0005089493934065104
    2. '())' → logprob: -8.125509262084961
    3. '()' → logprob: -8.625509262084961
    4. ')' → logprob: -11.125509262084961
    5. '()))' → logprob: -11.125509262084961
    6. '(' → logprob: -13.625509262084961
    7. ' ().' → logprob: -14.375509262084961
    8. '('' → logprob: -15.375509262084961
    9. '))' → logprob: -15.500509262084961
    10. '.readline' → logprob: -15.625509262084961

Token 22: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.014253887347877026
    2. 'strip' → logprob: -4.264254093170166
    3. 'rstrip' → logprob: -9.514253616333008
    4. '().' → logprob: -11.389253616333008
    5. ' split' → logprob: -13.014253616333008
    6. ')' → logprob: -13.264253616333008
    7. '(split' → logprob: -14.014253616333008
    8. 'spl' → logprob: -15.889253616333008
    9. '.split' → logprob: -16.139253616333008
    10. ' strip' → logprob: -16.139253616333008

Token 23: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00468240724876523
    2. '))' → logprob: -5.504682540893555
    3. '())' → logprob: -7.629682540893555
    4. '()' → logprob: -9.254682540893555
    5. '),' → logprob: -11.754682540893555
    6. '`)' → logprob: -12.754682540893555
    7. '(' → logprob: -13.254682540893555
    8. ')))' → logprob: -13.379682540893555
    9. ')`' → logprob: -13.504682540893555
    10. '()))' → logprob: -14.004682540893555

Token 24: 'items' (ID: 6918)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.022914765402674675
    2. 'graph' → logprob: -4.272914886474609
    3. '\n' → logprob: -6.147914886474609
    4. '
' → logprob: -6.272914886474609
    5. ' graph' → logprob: -6.647914886474609
    6. ' 
' → logprob: -6.772914886474609
    7. 'data' → logprob: -7.022914886474609
    8. '' → logprob: -8.27291488647461
    9. 'dp' → logprob: -8.52291488647461
    10. '

' → logprob: -8.89791488647461

Token 25: '=dict' (ID: 91391)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14209865033626556
    2. ' =' → logprob: -2.5170986652374268
    3. '=[]' → logprob: -3.3920986652374268
    4. '[' → logprob: -4.767098426818848
    5. '.' → logprob: -5.642098426818848
    6. ',' → logprob: -6.142098426818848
    7. '[:]' → logprob: -7.392098426818848
    8. '=[' → logprob: -7.517098426818848
    9. ')' → logprob: -8.142098426818848
    10. '_' → logprob: -8.267098426818848

Token 26: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023197369650006294
    2. '()' → logprob: -3.8981974124908447
    3. '([(' → logprob: -7.398197174072266
    4. '_items' → logprob: -7.648197174072266
    5. '<|end|>' → logprob: -7.648197174072266
    6. '[' → logprob: -8.398197174072266
    7. '.setdefault' → logprob: -9.023197174072266
    8. '<|end|>' → logprob: -9.273197174072266
    9. ' (' → logprob: -9.523197174072266
    10. '(items' → logprob: -9.773197174072266

Token 27: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3454136848449707
    2. '
' → logprob: -1.5954136848449707
    3. ' for' → logprob: -2.9704136848449707
    4. '\n' → logprob: -4.220413684844971
    5. ' 
' → logprob: -4.345413684844971
    6. '[' → logprob: -5.470413684844971
    7. '<|end|>' → logprob: -6.220413684844971
    8. '' → logprob: -6.970413684844971
    9. '[
' → logprob: -7.720413684844971
    10. ' ' → logprob: -7.845413684844971

Token 28: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.32117223739624023
    2. ' _' → logprob: -1.3211722373962402
    3. ' i' → logprob: -4.94617223739624
    4. ' range' → logprob: -7.57117223739624
    5. '_i' → logprob: -8.821172714233398
    6. ' ' → logprob: -10.071172714233398
    7. 'range' → logprob: -10.571172714233398
    8. 'i' → logprob: -11.071172714233398
    9. '_range' → logprob: -11.071172714233398
    10. ' ' → logprob: -12.571172714233398

Token 29: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09076239168643951
    2. 'in' → logprob: -2.4657623767852783
    3. ' ' → logprob: -6.715762615203857
    4. 'n' → logprob: -8.5907621383667
    5. 'i' → logprob: -9.5907621383667
    6. ' i' → logprob: -9.8407621383667
    7. '	in' → logprob: -9.9657621383667
    8. 'import' → logprob: -10.0907621383667
    9. '  ' → logprob: -10.2157621383667
    10. '```' → logprob: -10.7157621383667

Token 30: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10022079944610596
    2. ' range' → logprob: -2.3502206802368164
    3. '(range' → logprob: -11.350220680236816
    4. '	range' → logprob: -13.725220680236816
    5. 'rang' → logprob: -15.725220680236816
    6. '_range' → logprob: -15.850220680236816
    7. 'ran' → logprob: -15.975220680236816
    8. ' ' → logprob: -16.350221633911133
    9. 'ange' → logprob: -16.350221633911133
    10. '.range' → logprob: -16.475221633911133

Token 31: '(M' (ID: 6103)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.28574931621551514
    2. '(' → logprob: -1.4107493162155151
    3. '(int' → logprob: -5.910749435424805
    4. '(M' → logprob: -6.910749435424805
    5. ' (' → logprob: -7.285749435424805
    6. '(range' → logprob: -9.035749435424805
    7. 'N' → logprob: -10.910749435424805
    8. '(n' → logprob: -11.660749435424805
    9. '(
' → logprob: -11.660749435424805
    10. '(W' → logprob: -11.785749435424805

Token 32: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0019418458687141538
    2. ')' → logprob: -6.501941680908203
    3. ' ):' → logprob: -8.001941680908203
    4. '):
' → logprob: -10.126941680908203
    5. ':' → logprob: -10.126941680908203
    6. ',' → logprob: -11.001941680908203
    7. '+' → logprob: -13.001941680908203
    8. ' )' → logprob: -13.376941680908203
    9. '),' → logprob: -14.001941680908203
    10. ' ' → logprob: -14.751941680908203

Token 33: '   ' (ID: 271)
  Prédit: ' items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' items' → logprob: -0.818433940410614
    2. ' item' → logprob: -1.6934340000152588
    3. '   ' → logprob: -2.318434000015259
    4. ' 
' → logprob: -2.568434000015259
    5. 'item' → logprob: -2.818434000015259
    6. '<|end|>' → logprob: -3.193434000015259
    7. 'items' → logprob: -3.443434000015259
    8. '_items' → logprob: -4.56843376159668
    9. ' ' → logprob: -4.81843376159668
    10. '    
' → logprob: -5.06843376159668

Token 34: ' s' (ID: 265)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.1640394926071167
    2. 'a' → logprob: -1.4140394926071167
    3. 'x' → logprob: -2.0390396118164062
    4. ' u' → logprob: -2.2890396118164062
    5. ' a' → logprob: -3.1640396118164062
    6. ' x' → logprob: -3.2890396118164062
    7. ' item' → logprob: -3.9140396118164062
    8. 'w' → logprob: -4.539039611816406
    9. 's' (adapté à ' s') → logprob: -4.539039611816406
    10. ' w' → logprob: -4.664039611816406

Token 35: ',v' (ID: 30680)
  Prédit: ',item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',item' → logprob: -1.3675086498260498
    2. ',' → logprob: -1.4925086498260498
    3. ',input' → logprob: -1.8675086498260498
    4. ',i' → logprob: -2.36750864982605
    5. ',w' → logprob: -2.61750864982605
    6. '=input' → logprob: -2.61750864982605
    7. ',t' → logprob: -3.11750864982605
    8. '=' → logprob: -3.74250864982605
    9. 'items' → logprob: -4.867508888244629
    10. ',p' → logprob: -4.867508888244629

Token 36: ',p' (ID: 14835)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05533919483423233
    2. '=input' → logprob: -3.6803390979766846
    3. ',w' → logprob: -4.930339336395264
    4. ',v' → logprob: -5.055339336395264
    5. ' =' → logprob: -5.055339336395264
    6. ',i' → logprob: -5.555339336395264
    7. ',input' → logprob: -6.680339336395264
    8. ',a' → logprob: -6.930339336395264
    9. ',' → logprob: -7.430339336395264
    10. ',p' → logprob: -7.930339336395264

Token 37: '=input' (ID: 87911)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002762675518169999
    2. '=input' → logprob: -6.252762794494629
    3. ' =' → logprob: -7.377762794494629
    4. '=line' → logprob: -9.627762794494629
    5. '=list' → logprob: -10.127762794494629
    6. '=item' → logprob: -10.752762794494629
    7. '=s' → logprob: -10.877762794494629
    8. '=i' → logprob: -11.377762794494629
    9. '=sys' → logprob: -11.877762794494629
    10. '=int' → logprob: -12.127762794494629

Token 38: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.019237768370658e-05
    2. '()' → logprob: -9.500090599060059
    3. '.' → logprob: -12.000090599060059
    4. '.split' → logprob: -12.125090599060059
    5. ' ().' → logprob: -12.875090599060059
    6. '()
' → logprob: -14.875090599060059
    7. 'split' → logprob: -15.000090599060059
    8. '.readline' → logprob: -15.875090599060059
    9. '(' → logprob: -16.500089645385742
    10. '()
' → logprob: -17.000089645385742

Token 39: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00691937655210495
    2. 'strip' → logprob: -5.0069193840026855
    3. 'rstrip' → logprob: -8.506918907165527
    4. 'spl' → logprob: -14.006918907165527
    5. ' split' → logprob: -14.256918907165527
    6. 'rs' → logprob: -14.881918907165527
    7. 'sp' → logprob: -16.506919860839844
    8. '(split' → logprob: -17.506919860839844
    9. '_split' → logprob: -18.381919860839844
    10. '.split' → logprob: -18.631919860839844

Token 40: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05726167559623718
    2. '(' → logprob: -2.9322617053985596
    3. ',' → logprob: -6.9322614669799805
    4. ')' → logprob: -7.5572614669799805
    5. '()
' → logprob: -8.55726146697998
    6. '(),' → logprob: -8.93226146697998
    7. '<|end|>' → logprob: -9.30726146697998
    8. '('' → logprob: -9.55726146697998
    9. '(
' → logprob: -10.05726146697998
    10. '(','' → logprob: -10.30726146697998

Token 41: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: ' v' (ID: 323)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 43: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4353228509426117
    2. '=int' → logprob: -1.060322880744934
    3. ' =' → logprob: -5.1853227615356445
    4. ',' → logprob: -7.0603227615356445
    5. ',int' → logprob: -9.810322761535645
    6. 'int' → logprob: -10.560322761535645
    7. '=
' → logprob: -10.560322761535645
    8. '<|end|>' → logprob: -11.810322761535645
    9. '=

' → logprob: -11.810322761535645
    10. '=v' → logprob: -12.560322761535645

Token 44: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.17981135845184326
    2. '(' → logprob: -1.8048113584518433
    3. '(p' → logprob: -10.679811477661133
    4. 'v' → logprob: -11.804811477661133
    5. '(value' → logprob: -11.929811477661133
    6. ')' → logprob: -12.054811477661133
    7. ' (' → logprob: -12.179811477661133
    8. '(
' → logprob: -12.679811477661133
    9. ' ' → logprob: -12.679811477661133
    10. '(`' → logprob: -13.429811477661133

Token 45: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002981744706630707
    2. ')
' → logprob: -6.002981662750244
    3. '<|end|>' → logprob: -8.252982139587402
    4. ' )' → logprob: -8.752982139587402
    5. ')v' → logprob: -10.127982139587402
    6. ',' → logprob: -11.502982139587402
    7. ')

' → logprob: -11.502982139587402
    8. ')#' → logprob: -12.252982139587402
    9. '<|end|>' → logprob: -12.502982139587402
    10. ' )
' → logprob: -13.002982139587402

Token 46: '   ' (ID: 271)
  Prédit: ',p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',p' → logprob: -0.9060056805610657
    2. '<|end|>' → logprob: -1.156005620956421
    3. ' p' → logprob: -1.781005620956421
    4. ' ' → logprob: -3.531005620956421
    5. '   ' → logprob: -3.531005620956421
    6. 'p' → logprob: -4.156005859375
    7. '	p' → logprob: -4.156005859375
    8. ',' → logprob: -4.406005859375
    9. ' 
' → logprob: -6.031005859375
    10. '<|end|>' → logprob: -6.531005859375

Token 47: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.0025615072809159756
    2. ' p' → logprob: -6.002561569213867
    3. 'w' → logprob: -10.002561569213867
    4. 'W' → logprob: -11.002561569213867
    5. 's' → logprob: -12.252561569213867
    6. '   ' → logprob: -12.377561569213867
    7. ' ' → logprob: -12.627561569213867
    8. '<|end|>' → logprob: -12.877561569213867
    9. '  ' → logprob: -13.377561569213867
    10. ',' → logprob: -13.627561569213867

Token 48: '=int' (ID: 37431)
  Prédit: '=int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=int' → logprob: -0.004121261648833752
    2. '=' → logprob: -5.50412130355835
    3. 'int' → logprob: -10.754120826721191
    4. ' =' → logprob: -11.379120826721191
    5. ',int' → logprob: -12.754120826721191
    6. '=float' → logprob: -13.379120826721191
    7. '[int' → logprob: -13.879120826721191
    8. ':int' → logprob: -13.879120826721191
    9. '==' → logprob: -14.129120826721191
    10. '*=' → logprob: -14.254120826721191

Token 49: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0008171311928890646
    2. 'p' → logprob: -7.75081729888916
    3. ')' → logprob: -8.75081729888916
    4. '(' → logprob: -8.87581729888916
    5. ')p' → logprob: -10.12581729888916
    6. ')(' → logprob: -10.62581729888916
    7. ' (' → logprob: -11.50081729888916
    8. '```' → logprob: -12.37581729888916
    9. ' p' → logprob: -12.62581729888916
    10. ' ' → logprob: -13.37581729888916

Token 50: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.460291767027229e-05
    2. ')
' → logprob: -10.000094413757324
    3. ' )' → logprob: -10.125094413757324
    4. '<|end|>' → logprob: -12.250094413757324
    5. ' ' → logprob: -14.000094413757324
    6. '+' → logprob: -15.000094413757324
    7. '   ' → logprob: -15.125094413757324
    8. ',' → logprob: -15.125094413757324
    9. ')#' → logprob: -15.375094413757324
    10. '<|end|>' → logprob: -15.375094413757324

Token 51: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18468628823757172
    2. ' items' → logprob: -2.4346861839294434
    3. 'items' → logprob: -2.5596861839294434
    4. '	items' → logprob: -6.309686183929443
    5. '<|end|>' → logprob: -7.559686183929443
    6. ' if' → logprob: -7.559686183929443
    7. '_items' → logprob: -8.559686660766602
    8. 'if' → logprob: -8.934686660766602
    9. ' ' → logprob: -9.309686660766602
    10. ',' → logprob: -9.434686660766602

Token 52: ' items' (ID: 4732)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' (adapté à ' items') → logprob: -0.3981817066669464
    2. ' items' → logprob: -1.148181676864624
    3. 'if' → logprob: -5.273181915283203
    4. ' if' → logprob: -5.648181915283203
    5. '   ' → logprob: -6.273181915283203
    6. '	items' → logprob: -8.148181915283203
    7. '<|end|>' → logprob: -9.148181915283203
    8. '_items' → logprob: -9.398181915283203
    9. '.items' → logprob: -9.648181915283203
    10. 's' → logprob: -10.398181915283203

Token 53: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.03527606278657913
    2. '[(' → logprob: -3.410276174545288
    3. '[' → logprob: -6.660275936126709
    4. '[p' → logprob: -8.410276412963867
    5. '.setdefault' → logprob: -9.410276412963867
    6. '[v' → logprob: -11.285276412963867
    7. '[...]' → logprob: -11.410276412963867
    8. 's' → logprob: -12.660276412963867
    9. '[i' → logprob: -13.035276412963867
    10. '[
' → logprob: -13.410276412963867

Token 54: ']=(' (ID: 138510)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7675606608390808
    2. ']=' → logprob: -0.7675606608390808
    3. ']=(' → logprob: -2.6425607204437256
    4. ']={' → logprob: -8.642560958862305
    5. ']='' → logprob: -9.017560958862305
    6. '=' → logprob: -9.642560958862305
    7. '[' → logprob: -9.767560958862305
    8. '=[' → logprob: -11.142560958862305
    9. '']=' → logprob: -11.392560958862305
    10. ']+=' → logprob: -11.517560958862305

Token 55: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.008147139102220535
    2. '(v' → logprob: -5.508147239685059
    3. ' v' → logprob: -6.008147239685059
    4. '[v' → logprob: -6.633147239685059
    5. ' (' → logprob: -9.133147239685059
    6. '   ' → logprob: -10.133147239685059
    7. 's' → logprob: -10.508147239685059
    8. ')' → logprob: -10.758147239685059
    9. ')v' → logprob: -10.883147239685059
    10. 'p' → logprob: -11.133147239685059

Token 56: ',p' (ID: 14835)
  Prédit: ',p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',p' → logprob: -0.25400644540786743
    2. ',' → logprob: -1.5040063858032227
    3. ' ,' → logprob: -6.254006385803223
    4. ',w' → logprob: -9.379006385803223
    5. ',v' → logprob: -10.754006385803223
    6. ' p' → logprob: -11.629006385803223
    7. ',W' → logprob: -11.754006385803223
    8. 'p' → logprob: -11.879006385803223
    9. ',
' → logprob: -12.629006385803223
    10. ',n' → logprob: -13.504006385803223

Token 57: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8624639324116288e-06
    2. ')
' → logprob: -13.625001907348633
    3. ' )' → logprob: -14.625001907348633
    4. '))' → logprob: -16.875001907348633
    5. '),' → logprob: -17.500001907348633
    6. ')

' → logprob: -18.250001907348633
    7. ')`' → logprob: -18.375001907348633
    8. ')return' → logprob: -18.625001907348633
    9. ')
' → logprob: -19.000001907348633
    10. '}' → logprob: -19.000001907348633

Token 58: 'markets' (ID: 86830)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.13829459249973297
    2. 'bag' → logprob: -4.013294696807861
    3. 'graph' → logprob: -4.388294696807861
    4. 'q' → logprob: -4.638294696807861
    5. 'DP' → logprob: -4.638294696807861
    6. 'bags' → logprob: -4.638294696807861
    7. 'dist' → logprob: -4.763294696807861
    8. 'queue' → logprob: -4.888294696807861
    9. 'ans' → logprob: -4.888294696807861
    10. 'Q' → logprob: -5.513294696807861

Token 59: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1883983612060547
    2. ' =' → logprob: -2.0633983612060547
    3. '=[]' → logprob: -3.5633983612060547
    4. '={}' → logprob: -4.438398361206055
    5. '=dict' → logprob: -6.188398361206055
    6. '=[' → logprob: -7.438398361206055
    7. '=list' → logprob: -7.438398361206055
    8. '=set' → logprob: -8.438398361206055
    9. '[' → logprob: -8.688398361206055
    10. 's' → logprob: -8.813398361206055

Token 60: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005947406403720379
    2. ' for' → logprob: -5.380947589874268
    3. 'deque' → logprob: -6.880947589874268
    4. '[' → logprob: -8.50594711303711
    5. '[]' → logprob: -9.63094711303711
    6. '[
' → logprob: -12.13094711303711
    7. ' deque' → logprob: -13.00594711303711
    8. '
' → logprob: -13.13094711303711
    9. '[]
' → logprob: -13.13094711303711
    10. '	for' → logprob: -13.13094711303711

Token 61: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.05446207895874977
    2. '_' → logprob: -3.054462194442749
    3. ' i' → logprob: -5.17946195602417
    4. ' ' → logprob: -9.054462432861328
    5. ' range' → logprob: -9.679462432861328
    6. ' in' → logprob: -11.054462432861328
    7. '_i' → logprob: -11.429462432861328
    8. '_range' → logprob: -11.429462432861328
    9. 'range' → logprob: -12.679462432861328
    10. 'i' → logprob: -13.054462432861328

Token 62: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2048066109418869
    2. 'in' → logprob: -2.3298065662384033
    3. ' range' → logprob: -3.0798065662384033
    4. 'range' → logprob: -3.3298065662384033
    5. '_' → logprob: -5.329806804656982
    6. ' _' → logprob: -6.954806804656982
    7. ' ' → logprob: -8.329806327819824
    8. '_range' → logprob: -10.329806327819824
    9. '	range' → logprob: -11.454806327819824
    10. '_in' → logprob: -12.079806327819824

Token 63: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023248739540576935
    2. ' range' → logprob: -3.7732486724853516
    3. '(range' → logprob: -13.273248672485352
    4. '_range' → logprob: -14.398248672485352
    5. '	range' → logprob: -14.648248672485352
    6. 'ran' → logprob: -15.148248672485352
    7. 'rang' → logprob: -16.02324867248535
    8. '.range' → logprob: -16.77324867248535
    9. '_' → logprob: -16.77324867248535
    10. 'in' → logprob: -17.64824867248535

Token 64: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.006561310030519962
    2. '(W' → logprob: -6.131561279296875
    3. '(T' → logprob: -6.256561279296875
    4. ' (' → logprob: -6.756561279296875
    5. '(' → logprob: -7.756561279296875
    6. '(M' → logprob: -8.006561279296875
    7. ' N' → logprob: -8.256561279296875
    8. 'N' → logprob: -8.381561279296875
    9. '(int' → logprob: -11.256561279296875
    10. ' W' → logprob: -12.131561279296875

Token 65: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011674613691866398
    2. ')' → logprob: -4.511674404144287
    3. '):
' → logprob: -7.636674404144287
    4. ' ):' → logprob: -9.011674880981445
    5. ':' → logprob: -11.511674880981445
    6. '):
' → logprob: -12.761674880981445
    7. ')：' → logprob: -13.136674880981445
    8. ',' → logprob: -13.261674880981445
    9. ' )' → logprob: -13.386674880981445
    10. '):

' → logprob: -14.386674880981445

Token 66: '   ' (ID: 271)
  Prédit: ' markets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' markets' → logprob: -0.6234574913978577
    2. 'markets' → logprob: -0.9984574913978577
    3. '   ' → logprob: -2.623457431793213
    4. ' market' → logprob: -5.498457431793213
    5. ' line' → logprob: -5.748457431793213
    6. 'x' → logprob: -6.373457431793213
    7. '```' → logprob: -6.623457431793213
    8. 'market' → logprob: -6.748457431793213
    9. ' input' → logprob: -6.873457431793213
    10. 'input' → logprob: -6.873457431793213

Token 67: ' L' (ID: 451)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.762930154800415
    2. 'markets' → logprob: -1.387930154800415
    3. 'x' → logprob: -1.637930154800415
    4. 'd' → logprob: -4.137929916381836
    5. '_' → logprob: -4.262929916381836
    6. ' markets' → logprob: -4.887929916381836
    7. 'a' → logprob: -4.887929916381836
    8. 'L' (adapté à ' L') → logprob: -5.012929916381836
    9. 'data' → logprob: -5.387929916381836
    10. 'market' → logprob: -5.512929916381836

Token 68: ',x' (ID: 29748)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7105767130851746
    2. '=int' → logprob: -1.2105767726898193
    3. ',l' → logprob: -2.9605767726898193
    4. '=list' → logprob: -3.2105767726898193
    5. ',v' → logprob: -3.5855767726898193
    6. ',p' → logprob: -3.5855767726898193
    7. ' =' → logprob: -4.96057653427124
    8. ',P' → logprob: -4.96057653427124
    9. ',' → logprob: -5.08557653427124
    10. '=input' → logprob: -5.21057653427124

Token 69: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.005164377856999636
    2. ',v' → logprob: -6.50516414642334
    3. ',p' → logprob: -6.63016414642334
    4. ',' → logprob: -7.13016414642334
    5. '=' → logprob: -7.63016414642334
    6. ',x' → logprob: -8.25516414642334
    7. 'y' → logprob: -8.50516414642334
    8. ',w' → logprob: -8.75516414642334
    9. ',t' → logprob: -10.00516414642334
    10. ',a' → logprob: -10.13016414642334

Token 70: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.028425268828868866
    2. '=input' → logprob: -3.9034252166748047
    3. ',p' → logprob: -6.153425216674805
    4. ' =' → logprob: -6.653425216674805
    5. ',w' → logprob: -7.153425216674805
    6. ',v' → logprob: -7.153425216674805
    7. '=int' → logprob: -8.028425216674805
    8. ',x' → logprob: -8.153425216674805
    9. ',W' → logprob: -8.278425216674805
    10. '=p' → logprob: -8.653425216674805

Token 71: 'map' (ID: 3726)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5162017941474915
    2. 'map' → logprob: -1.0162017345428467
    3. ' input' → logprob: -3.7662017345428467
    4. ' map' → logprob: -4.016201972961426
    5. 'int' → logprob: -10.141201972961426
    6. 'list' → logprob: -11.391201972961426
    7. '	map' → logprob: -11.891201972961426
    8. '=input' → logprob: -12.516201972961426
    9. ' ' → logprob: -12.578701972961426
    10. '   ' → logprob: -12.766201972961426

Token 72: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -7.779520092299208e-05
    2. ',int' → logprob: -10.000078201293945
    3. 'int' → logprob: -10.750078201293945
    4. '=int' → logprob: -12.250078201293945
    5. '[int' → logprob: -13.000078201293945
    6. ' int' → logprob: -13.625078201293945
    7. ']int' → logprob: -14.000078201293945
    8. '<int' → logprob: -14.125078201293945
    9. '```' → logprob: -14.750078201293945
    10. '(' → logprob: -15.125078201293945

Token 73: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.008603109046816826
    2. ',' → logprob: -5.258603096008301
    3. ',int' → logprob: -6.258603096008301
    4. 'input' → logprob: -7.508603096008301
    5. '(input' → logprob: -7.508603096008301
    6. ')' → logprob: -8.8836030960083
    7. '<|end|>' → logprob: -9.3836030960083
    8. ' input' → logprob: -9.8836030960083
    9. '(' → logprob: -10.6336030960083
    10. '```' → logprob: -11.7586030960083

Token 74: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.248469718324486e-05
    2. '()' → logprob: -10.875022888183594
    3. '.' → logprob: -13.250022888183594
    4. '(' → logprob: -14.250022888183594
    5. ')' → logprob: -14.500022888183594
    6. ' ().' → logprob: -15.125022888183594
    7. '())' → logprob: -15.625022888183594
    8. '.readline' → logprob: -16.625022888183594
    9. ' .' → logprob: -17.250022888183594
    10. 'split' → logprob: -17.500022888183594

Token 75: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.512236498361744e-07
    2. 'strip' → logprob: -15.250000953674316
    3. ' split' → logprob: -15.500000953674316
    4. 'spl' → logprob: -17.625
    5. '(split' → logprob: -18.125
    6. ')' → logprob: -19.0
    7. 's' → logprob: -19.375
    8. 'rstrip' → logprob: -19.5
    9. '```' → logprob: -20.0
    10. ' ' → logprob: -20.75

Token 76: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010968804126605392
    2. '())' → logprob: -7.501096725463867
    3. '()' → logprob: -8.001096725463867
    4. ')
' → logprob: -8.626096725463867
    5. ' )' → logprob: -11.751096725463867
    6. '`)' → logprob: -12.001096725463867
    7. ',' → logprob: -13.251096725463867
    8. '))' → logprob: -13.376096725463867
    9. ')`' → logprob: -13.376096725463867
    10. '())
' → logprob: -13.626096725463867

Token 77: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5920002460479736
    2. 'markets' → logprob: -1.0920002460479736
    3. '<|end|>' → logprob: -2.5920002460479736
    4. '\n' → logprob: -4.8420000076293945
    5. '
' → logprob: -4.9670000076293945
    6. ')' → logprob: -5.0920000076293945
    7. ' markets' → logprob: -5.0920000076293945
    8. '    
' → logprob: -6.2170000076293945
    9. ',' → logprob: -6.2170000076293945
    10. '\t' → logprob: -6.8420000076293945

Token 78: ' goods' (ID: 14854)
  Prédit: 'markets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'markets' → logprob: -0.023406894877552986
    2. ' markets' → logprob: -3.773406982421875
    3. 'market' → logprob: -8.898406982421875
    4. '   ' → logprob: -11.148406982421875
    5. 'items' → logprob: -12.773406982421875
    6. ' market' → logprob: -13.773406982421875
    7. 'Markets' → logprob: -13.898406982421875
    8. 'marks' → logprob: -14.023406982421875
    9. 'mark' → logprob: -14.523406982421875
    10. 'for' → logprob: -14.648406982421875

Token 79: '=dict' (ID: 91391)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08464167267084122
    2. '=[]' → logprob: -2.709641695022583
    3. ',' → logprob: -4.834641456604004
    4. ' =' → logprob: -5.834641456604004
    5. '=list' → logprob: -6.584641456604004
    6. '.append' → logprob: -7.334641456604004
    7. '=[' → logprob: -8.459641456604004
    8. '=int' → logprob: -8.459641456604004
    9. '=input' → logprob: -8.959641456604004
    10. '={}' → logprob: -9.084641456604004

Token 80: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -8.184812031686306e-05
    2. '()]' → logprob: -10.250082015991211
    3. '()
' → logprob: -11.500082015991211
    4. '())' → logprob: -11.875082015991211
    5. '()<' → logprob: -12.250082015991211
    6. '()\' → logprob: -12.250082015991211
    7. '()>' → logprob: -12.375082015991211
    8. '()</' → logprob: -12.500082015991211
    9. '()

' → logprob: -12.625082015991211
    10. ' ()' → logprob: -13.625082015991211

Token 81: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05739113688468933
    2. 'for' → logprob: -3.1823911666870117
    3. ' for' → logprob: -4.307391166687012
    4. '<|end|>' → logprob: -7.182391166687012
    5. '	for' → logprob: -10.432391166687012
    6. '<|end|>' → logprob: -11.682391166687012
    7. ' ' → logprob: -12.432391166687012
    8. '  ' → logprob: -13.057391166687012
    9. 'while' → logprob: -13.057391166687012
    10. '   ' → logprob: -13.182391166687012

Token 82: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0008708444074727595
    2. ' for' → logprob: -7.250870704650879
    3. '   ' → logprob: -8.750870704650879
    4. '	for' → logprob: -13.000870704650879
    5. ' ' → logprob: -15.750870704650879
    6. 'while' → logprob: -17.000871658325195
    7. '```' → logprob: -17.750871658325195
    8. '  ' → logprob: -18.625871658325195
    9. 'line' → logprob: -18.750871658325195
    10. '
' → logprob: -18.750871658325195

Token 83: ' __' (ID: 2516)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12329862266778946
    2. '__' → logprob: -2.7482986450195312
    3. ' _' → logprob: -3.4982986450195312
    4. '___' → logprob: -4.498298645019531
    5. ' __' → logprob: -4.623298645019531
    6. '_i' → logprob: -7.873298645019531
    7. '_j' → logprob: -8.498298645019531
    8. ' ___' → logprob: -9.748298645019531
    9. ' ' → logprob: -11.123298645019531
    10. ' i' → logprob: -11.123298645019531

Token 84: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003116633975878358
    2. 'in' → logprob: -5.878116607666016
    3. '_' → logprob: -8.378116607666016
    4. 'range' → logprob: -10.003116607666016
    5. ' range' → logprob: -10.628116607666016
    6. ' _' → logprob: -11.878116607666016
    7. ' ' → logprob: -12.753116607666016
    8. ' i' → logprob: -14.128116607666016
    9. ' ' → logprob: -14.878116607666016
    10. '___' → logprob: -15.003116607666016

Token 85: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3484932482242584
    2. ' range' → logprob: -1.223493218421936
    3. 'rang' → logprob: -10.723493576049805
    4. '_' → logprob: -11.598493576049805
    5. 'ran' → logprob: -12.223493576049805
    6. '	range' → logprob: -12.348493576049805
    7. '_range' → logprob: -13.098493576049805
    8. '(range' → logprob: -13.973493576049805
    9. 'r' → logprob: -13.973493576049805
    10. '0' → logprob: -13.973493576049805

Token 86: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.00035751116229221225
    2. 'L' → logprob: -8.125357627868652
    3. '(' → logprob: -10.375357627868652
    4. ' L' → logprob: -11.000357627868652
    5. ' (' → logprob: -11.750357627868652
    6. '	L' → logprob: -12.375357627868652
    7. '   ' → logprob: -14.125357627868652
    8. '(M' → logprob: -15.875357627868652
    9. '    ' → logprob: -16.500356674194336
    10. '  ' → logprob: -16.500356674194336

Token 87: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006538204033859074
    2. '):
' → logprob: -7.5006537437438965
    3. ')' → logprob: -9.875654220581055
    4. ' ):' → logprob: -11.000654220581055
    5. '   ' → logprob: -11.250654220581055
    6. ':' → logprob: -11.250654220581055
    7. '):
' → logprob: -13.375654220581055
    8. '       ' → logprob: -13.750654220581055
    9. ' ' → logprob: -13.875654220581055
    10. ',' → logprob: -14.375654220581055

Token 88: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5681521892547607
    2. '   ' → logprob: -1.1931521892547607
    3. 's' → logprob: -2.1931521892547607
    4. ' s' → logprob: -4.19315242767334
    5. '<|end|>' → logprob: -7.06815242767334
    6. ' ' → logprob: -7.56815242767334
    7. '        
' → logprob: -8.19315242767334
    8. 't' → logprob: -8.69315242767334
    9. 'n' → logprob: -8.69315242767334
    10. '  ' → logprob: -8.81815242767334

Token 89: ' r' (ID: 428)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.8253433704376221
    2. 's' → logprob: -1.575343370437622
    3. ' s' → logprob: -1.950343370437622
    4. ' g' → logprob: -1.950343370437622
    5. 'a' → logprob: -3.575343370437622
    6. ' a' → logprob: -5.075343132019043
    7. 't' → logprob: -5.075343132019043
    8. ' t' → logprob: -5.450343132019043
    9. 'l' → logprob: -6.075343132019043
    10. 'i' → logprob: -6.200343132019043

Token 90: ',q' (ID: 86188)
  Prédit: ',p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',p' → logprob: -1.0290597677230835
    2. ' p' → logprob: -1.9040597677230835
    3. 'p' → logprob: -2.029059886932373
    4. ' s' → logprob: -2.279059886932373
    5. 's' → logprob: -2.529059886932373
    6. ',' → logprob: -2.654059886932373
    7. ',s' → logprob: -2.779059886932373
    8. ',k' → logprob: -4.779059886932373
    9. ',q' → logprob: -5.529059886932373
    10. ',w' → logprob: -5.654059886932373

Token 91: '=input' (ID: 87911)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3342515230178833
    2. '=input' → logprob: -1.9592515230178833
    3. ',s' → logprob: -2.5842514038085938
    4. ',input' → logprob: -3.5842514038085938
    5. ',' → logprob: -4.459251403808594
    6. ' =' → logprob: -4.959251403808594
    7. ',q' → logprob: -5.209251403808594
    8. ',p' → logprob: -5.334251403808594
    9. ',v' → logprob: -6.084251403808594
    10. 'input' → logprob: -6.209251403808594

Token 92: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0004905993700958788
    2. '()' → logprob: -8.625490188598633
    3. ' ().' → logprob: -8.875490188598633
    4. '=' → logprob: -9.000490188598633
    5. 'split' → logprob: -11.250490188598633
    6. '.' → logprob: -11.375490188598633
    7. ')' → logprob: -12.250490188598633
    8. '.split' → logprob: -12.250490188598633
    9. ' =' → logprob: -12.750490188598633
    10. ' .' → logprob: -12.750490188598633

Token 93: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0032749217934906483
    2. 'strip' → logprob: -5.753274917602539
    3. 'rstrip' → logprob: -9.753274917602539
    4. ' split' → logprob: -10.378274917602539
    5. 'spl' → logprob: -12.503274917602539
    6. 'plit' → logprob: -13.753274917602539
    7. 'rs' → logprob: -14.253274917602539
    8. '(split' → logprob: -14.378274917602539
    9. 's' → logprob: -14.503274917602539
    10. 'sp' → logprob: -14.753274917602539

Token 94: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.050119876861572266
    2. '()
' → logprob: -3.0501198768615723
    3. '<|end|>' → logprob: -7.300119876861572
    4. '()
' → logprob: -8.425119400024414
    5. '(' → logprob: -9.050119400024414
    6. ' ()' → logprob: -9.175119400024414
    7. '
' → logprob: -9.175119400024414
    8. ')' → logprob: -9.300119400024414
    9. '()

' → logprob: -9.800119400024414
    10. '()\' → logprob: -10.425119400024414

Token 95: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 96: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.035294704139232635
    2. ' q' → logprob: -3.410294771194458
    3. '   ' → logprob: -7.535294532775879
    4. '       ' → logprob: -7.910294532775879
    5. 'goods' → logprob: -8.285294532775879
    6. ' goods' → logprob: -8.410294532775879
    7. '	q' → logprob: -8.660294532775879
    8. '           ' → logprob: -10.285294532775879
    9. 'r' → logprob: -10.535294532775879
    10. ' ' → logprob: -11.035294532775879

Token 97: '=int' (ID: 37431)
  Prédit: '=int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=int' → logprob: -0.005279888398945332
    2. '=' → logprob: -5.255280017852783
    3. ' =' → logprob: -10.130279541015625
    4. '=
' → logprob: -12.130279541015625
    5. '=

' → logprob: -15.130279541015625
    6. 'int' → logprob: -15.255279541015625
    7. '=float' → logprob: -17.005279541015625
    8. '=in' → logprob: -17.505279541015625
    9. '=input' → logprob: -17.505279541015625
    10. '＝' → logprob: -17.505279541015625

Token 98: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -4.842555426876061e-06
    2. '(' → logprob: -12.375004768371582
    3. ' (' → logprob: -15.250004768371582
    4. 'q' → logprob: -15.500004768371582
    5. ')' → logprob: -16.2500057220459
    6. '	q' → logprob: -17.6250057220459
    7. '(
' → logprob: -18.2500057220459
    8. '()' → logprob: -19.1250057220459
    9. ',q' → logprob: -19.1250057220459
    10. ')(' → logprob: -19.3750057220459

Token 99: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012635251507163048
    2. ')
' → logprob: -4.387635231018066
    3. ')
' → logprob: -9.387635231018066
    4. '<|end|>' → logprob: -11.262635231018066
    5. '       ' → logprob: -11.637635231018066
    6. ' )' → logprob: -12.512635231018066
    7. '<|end|>' → logprob: -12.762635231018066
    8. '   ' → logprob: -12.762635231018066
    9. ')

' → logprob: -13.012635231018066
    10. ')return' → logprob: -13.012635231018066

Token 100: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009889844805002213
    2. '   ' → logprob: -7.000988960266113
    3. '<|end|>' → logprob: -10.625988960266113
    4. ',' → logprob: -11.000988960266113
    5. ')' → logprob: -11.500988960266113
    6. ' goods' → logprob: -12.125988960266113
    7. 'goods' → logprob: -12.375988960266113
    8. '        
' → logprob: -12.750988960266113
    9. '      ' → logprob: -13.000988960266113
    10. '     ' → logprob: -13.250988960266113

Token 101: ' goods' (ID: 14854)
  Prédit: 'goods'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goods' (adapté à ' goods') → logprob: -0.32997608184814453
    2. ' goods' → logprob: -1.3299760818481445
    3. '       ' → logprob: -4.2049760818481445
    4. '   ' → logprob: -6.8299760818481445
    5. 'good' → logprob: -8.454976081848145
    6. '
' → logprob: -9.329976081848145
    7. '_goods' → logprob: -10.329976081848145
    8. 'go' → logprob: -10.454976081848145
    9. 'if' → logprob: -10.454976081848145
    10. ' ' → logprob: -10.454976081848145

Token 102: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.1501682549715042
    2. '[q' → logprob: -2.0251681804656982
    3. '[' → logprob: -4.900168418884277
    4. '[s' → logprob: -13.025168418884277
    5. '```' → logprob: -13.400168418884277
    6. ' [' → logprob: -13.650168418884277
    7. '.setdefault' → logprob: -13.650168418884277
    8. '[p' → logprob: -13.900168418884277
    9. '[a' → logprob: -14.150168418884277
    10. '   ' → logprob: -14.275168418884277

Token 103: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.2550058960914612
    2. ']' → logprob: -1.5050058364868164
    3. ')=' → logprob: -6.380005836486816
    4. ')' → logprob: -7.255005836486816
    5. ']+=' → logprob: -8.005005836486816
    6. ' ]' → logprob: -9.005005836486816
    7. ']=(' → logprob: -9.505005836486816
    8. ')]' → logprob: -9.880005836486816
    9. '=' → logprob: -10.130005836486816
    10. '])' → logprob: -11.505005836486816

Token 104: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0015059324214234948
    2. ' q' → logprob: -6.5015058517456055
    3. '	q' → logprob: -13.876505851745605
    4. 'int' → logprob: -14.126505851745605
    5. '   ' → logprob: -14.751505851745605
    6. '(q' → logprob: -14.876505851745605
    7. 'max' → logprob: -15.126505851745605
    8. ' ' → logprob: -15.251505851745605
    9. '[q' → logprob: -16.314006805419922
    10. '  ' → logprob: -16.626506805419922

Token 105: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0579368881881237
    2. 'markets' → logprob: -3.182936906814575
    3. '<|end|>' → logprob: -4.932936668395996
    4. '
' → logprob: -5.307936668395996
    5. ')' → logprob: -6.807936668395996
    6. ' markets' → logprob: -7.057936668395996
    7. ')
' → logprob: -8.432936668395996
    8. ',' → logprob: -8.682936668395996
    9. '```' → logprob: -9.807936668395996
    10. 'market' → logprob: -9.932936668395996

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24053822457790375
    2. 'markets' → logprob: -1.615538239479065
    3. ' markets' → logprob: -4.365538120269775
    4. '
' → logprob: -6.615538120269775
    5. '<|end|>' → logprob: -8.490538597106934
    6. 'market' → logprob: -8.490538597106934
    7. ',' → logprob: -8.740538597106934
    8. '```' → logprob: -9.115538597106934
    9. '    
' → logprob: -9.865538597106934
    10. '  ' → logprob: -9.990538597106934

Token 107: ' markets' (ID: 15577)
  Prédit: 'markets'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'markets' (adapté à ' markets') → logprob: -0.03081764280796051
    2. '   ' → logprob: -4.03081750869751
    3. ' markets' → logprob: -4.40581750869751
    4. 'market' → logprob: -8.655817985534668
    5. 'marks' → logprob: -10.405817985534668
    6. 'markers' → logprob: -11.030817985534668
    7. ' ' → logprob: -11.218317985534668
    8. '
' → logprob: -11.280817985534668
    9. 'mark' → logprob: -11.468317985534668
    10. ')' → logprob: -11.593317985534668

Token 108: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.931863051955588e-05
    2. '.' → logprob: -9.750059127807617
    3. ' .' → logprob: -14.875059127807617
    4. 'append' → logprob: -16.000059127807617
    5. '.Append' → logprob: -16.125059127807617
    6. '.ap' → logprob: -16.375059127807617
    7. '.app' → logprob: -16.500059127807617
    8. ').' → logprob: -16.500059127807617
    9. '.push' → logprob: -17.125059127807617
    10. '​.' → logprob: -17.125059127807617

Token 109: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.05237274616956711
    2. '({'' → logprob: -3.302372694015503
    3. '(goods' → logprob: -4.552372932434082
    4. '({"' → logprob: -6.052372932434082
    5. '({' → logprob: -7.052372932434082
    6. '({
' → logprob: -8.427372932434082
    7. '(' → logprob: -9.052372932434082
    8. '(dict' → logprob: -9.677372932434082
    9. '(({' → logprob: -9.802372932434082
    10. '(('' → logprob: -12.427372932434082

Token 110: 'x' (ID: 87)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.2266540378332138
    2. 'x' → logprob: -1.601654052734375
    3. 'goods' → logprob: -7.351654052734375
    4. ' L' → logprob: -8.351654052734375
    5. '(x' → logprob: -8.851654052734375
    6. '(L' → logprob: -9.226654052734375
    7. ' x' → logprob: -10.101654052734375
    8. ' goods' → logprob: -10.601654052734375
    9. 'items' → logprob: -10.726654052734375
    10. '   ' → logprob: -11.351654052734375

Token 111: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.10029660165309906
    2. ',' → logprob: -2.3502964973449707
    3. ' ,' → logprob: -9.350296974182129
    4. ',Y' → logprob: -13.100296974182129
    5. ',
' → logprob: -14.975296974182129
    6. ',user' → logprob: -16.475296020507812
    7. ',z' → logprob: -16.725296020507812
    8. ',x' → logprob: -16.725296020507812
    9. ',\
' → logprob: -16.725296020507812
    10. '<|end|>' → logprob: -16.850296020507812

Token 112: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013095269969198853
    2. ' ,' → logprob: -9.000130653381348
    3. '   ' → logprob: -12.875130653381348
    4. '),' → logprob: -13.875130653381348
    5. ',
' → logprob: -13.875130653381348
    6. ',{
' → logprob: -14.125130653381348
    7. '))' → logprob: -14.375130653381348
    8. ')' → logprob: -14.625130653381348
    9. ',exports' → logprob: -15.125130653381348
    10. ' goods' → logprob: -15.250130653381348

Token 113: 'goods' (ID: 43046)
  Prédit: 'goods'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goods' → logprob: -0.0011378349736332893
    2. 'L' → logprob: -7.501137733459473
    3. ' goods' → logprob: -7.501137733459473
    4. 'good' → logprob: -10.751137733459473
    5. 'go' → logprob: -12.876137733459473
    6. 'Goods' → logprob: -13.751137733459473
    7. 'len' → logprob: -14.001137733459473
    8. '   ' → logprob: -14.126137733459473
    9. '(goods' → logprob: -14.126137733459473
    10. ' L' → logprob: -14.376137733459473

Token 114: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2014232873916626
    2. ')' → logprob: -1.7014232873916626
    3. '))
' → logprob: -12.201423645019531
    4. ')
' → logprob: -12.826423645019531
    5. ')))' → logprob: -13.701423645019531
    6. '),' → logprob: -14.826423645019531
    7. ' ))' → logprob: -15.076423645019531
    8. ' )' → logprob: -15.701423645019531
    9. '));' → logprob: -16.57642364501953
    10. ')}' → logprob: -16.82642364501953

Token 115: 'def' (ID: 1314)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3269590437412262
    2. 'dist' → logprob: -1.5769590139389038
    3. 'visited' → logprob: -3.9519591331481934
    4. 'def' → logprob: -4.826959133148193
    5. 'from' → logprob: -5.326959133148193
    6. 'import' → logprob: -5.576959133148193
    7. 'dx' → logprob: -5.826959133148193
    8. 'DP' → logprob: -5.826959133148193
    9. 'q' → logprob: -6.076959133148193
    10. 'INF' → logprob: -6.076959133148193

Token 116: ' dist' (ID: 3601)
  Prédit: ' bfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bfs' → logprob: -1.09137761592865
    2. ' dfs' → logprob: -1.71637761592865
    3. ' solve' → logprob: -1.84137761592865
    4. ' max' → logprob: -2.0913777351379395
    5. ' shortest' → logprob: -3.3413777351379395
    6. ' can' → logprob: -3.4663777351379395
    7. ' dp' → logprob: -4.0913777351379395
    8. ' best' → logprob: -4.3413777351379395
    9. ' ' → logprob: -4.4663777351379395
    10. ' calculate' → logprob: -4.7163777351379395

Token 117: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.328125923871994
    2. '(x' → logprob: -1.4531259536743164
    3. '(' → logprob: -3.2031259536743164
    4. '(p' → logprob: -5.828125953674316
    5. '((' → logprob: -6.703125953674316
    6. '(i' → logprob: -8.203125953674316
    7. ' (' → logprob: -8.203125953674316
    8. '(A' → logprob: -8.453125953674316
    9. '(u' → logprob: -8.828125953674316
    10. '(_' → logprob: -9.828125953674316

Token 118: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6937057375907898
    2. ',b' → logprob: -0.6937057375907898
    3. ' ,' → logprob: -7.9437055587768555
    4. ',a' → logprob: -8.568705558776855
    5. ',d' → logprob: -12.318705558776855
    6. 'b' → logprob: -12.318705558776855
    7. ',B' → logprob: -13.693705558776855
    8. '1' → logprob: -14.943705558776855
    9. ',c' → logprob: -15.193705558776855
    10. ',(' → logprob: -15.193705558776855

Token 119: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2921260893344879
    2. ',' → logprob: -1.6671260595321655
    3. ',a' → logprob: -2.792126178741455
    4. ',b' → logprob: -6.292126178741455
    5. '):
' → logprob: -6.792126178741455
    6. '(a' → logprob: -9.917125701904297
    7. ' ,' → logprob: -9.917125701904297
    8. 'a' → logprob: -10.167125701904297
    9. ' ):' → logprob: -10.167125701904297
    10. ')' → logprob: -10.292125701904297

Token 120: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.9169405698776245
    2. '   ' → logprob: -1.1669405698776245
    3. ' return' → logprob: -1.2919405698776245
    4. 'x' → logprob: -6.041940689086914
    5. '(' → logprob: -6.291940689086914
    6. 'import' → logprob: -6.666940689086914
    7. ')' → logprob: -6.666940689086914
    8. '(x' → logprob: -6.791940689086914
    9. '    
' → logprob: -6.916940689086914
    10. 'abs' → logprob: -7.541940689086914

Token 121: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04170777648687363
    2. 'abs' → logprob: -3.791707754135132
    3. '   ' → logprob: -4.041707992553711
    4. 'import' → logprob: -8.041707992553711
    5. ' return' → logprob: -8.416707992553711
    6. '(abs' → logprob: -8.791707992553711
    7. 'from' → logprob: -11.791707992553711
    8. '((' → logprob: -11.916707992553711
    9. ' abs' → logprob: -12.041707992553711
    10. 'x' → logprob: -12.916707992553711

Token 122: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.5679565668106079
    2. ' abs' → logprob: -1.317956566810608
    3. '(abs' → logprob: -1.817956566810608
    4. '((' → logprob: -5.942956447601318
    5. ' ((' → logprob: -7.942956447601318
    6. ' (' → logprob: -8.192956924438477
    7. '(' → logprob: -11.192956924438477
    8. '(max' → logprob: -12.942956924438477
    9. ' ' → logprob: -13.067956924438477
    10. '   ' → logprob: -13.192956924438477

Token 123: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -7.910643762443215e-05
    2. 'a' → logprob: -9.500079154968262
    3. '(' → logprob: -12.375079154968262
    4. '(x' → logprob: -19.000078201293945
    5. '((' → logprob: -19.125078201293945
    6. ')a' → logprob: -19.250078201293945
    7. '<|end|>' → logprob: -19.375078201293945
    8. '(
' → logprob: -19.500078201293945
    9. ' a' → logprob: -19.750078201293945
    10. '	a' → logprob: -19.875078201293945

Token 124: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.080963092041202e-06
    2. '-' → logprob: -12.625004768371582
    3. '-[' → logprob: -13.625004768371582
    4. '0' → logprob: -16.1250057220459
    5. ' -' → logprob: -16.2500057220459
    6. '-b' → logprob: -16.5000057220459
    7. 'a' → logprob: -17.6250057220459
    8. '   ' → logprob: -17.7500057220459
    9. ' ' → logprob: -17.8750057220459
    10. 'x' → logprob: -17.8750057220459

Token 125: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.080963092041202e-06
    2. '[' → logprob: -13.125004768371582
    3. '1' → logprob: -14.000004768371582
    4. '
' → logprob: -14.250004768371582
    5. ' ' → logprob: -14.687504768371582
    6. '

' → logprob: -14.750004768371582
    7. '   ' → logprob: -16.2500057220459
    8. '```' → logprob: -16.6875057220459
    9. ']' → logprob: -16.8125057220459
    10. '#' → logprob: -17.4375057220459

Token 126: ']-' (ID: 27107)
  Prédit: ']-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']-' → logprob: -0.2818104028701782
    2. ']' → logprob: -1.6568104028701782
    3. '-' → logprob: -3.0318102836608887
    4. '[' → logprob: -5.656810283660889
    5. ' -' → logprob: -6.281810283660889
    6. '-b' → logprob: -6.781810283660889
    7. ']+' → logprob: -9.906810760498047
    8. ' ]' → logprob: -11.031810760498047
    9. '0' → logprob: -11.031810760498047
    10. '])-' → logprob: -12.031810760498047

Token 127: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -3.130576806142926e-05
    2. ' b' → logprob: -10.375031471252441
    3. '   ' → logprob: -17.000030517578125
    4. ')b' → logprob: -17.875030517578125
    5. ' ' → logprob: -19.000030517578125
    6. '  ' → logprob: -19.250030517578125
    7. '	b' → logprob: -19.500030517578125
    8. ')' → logprob: -19.625030517578125
    9. '<|end|>' → logprob: -19.750030517578125
    10. 'a' → logprob: -20.000030517578125

Token 128: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.8889261304575484e-06
    2. '0' → logprob: -13.375003814697266
    3. ' [' → logprob: -14.625003814697266
    4. '1' → logprob: -14.875003814697266
    5. '][' → logprob: -15.250003814697266
    6. ')' → logprob: -15.250003814697266
    7. '])' → logprob: -15.750003814697266
    8. '(' → logprob: -15.875003814697266
    9. '[
' → logprob: -15.875003814697266
    10. '   ' → logprob: -16.125003814697266

Token 129: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.8802491215174086e-05
    2. '1' → logprob: -10.625028610229492
    3. '[' → logprob: -12.750028610229492
    4. ' ' → logprob: -14.000028610229492
    5. '])' → logprob: -15.125028610229492
    6. '   ' → logprob: -16.687528610229492
    7. ']' → logprob: -16.687528610229492
    8. '#' → logprob: -16.750028610229492
    9. ')' → logprob: -16.875028610229492
    10. '```' → logprob: -16.875028610229492

Token 130: '])+' (ID: 119485)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.016393860802054405
    2. '])+' → logprob: -4.266393661499023
    3. '[' → logprob: -6.266393661499023
    4. ')' → logprob: -8.766393661499023
    5. '])
' → logprob: -9.516393661499023
    6. ']+' → logprob: -10.141393661499023
    7. ']' → logprob: -10.266393661499023
    8. ' ])' → logprob: -11.641393661499023
    9. '])*' → logprob: -12.516393661499023
    10. '])-' → logprob: -12.641393661499023

Token 131: 'abs' (ID: 6071)
  Prédit: 'abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.001170225441455841
    2. ' abs' → logprob: -6.7511701583862305
    3. '(abs' → logprob: -17.626171112060547
    4. '   ' → logprob: -18.626171112060547
    5. 'a' → logprob: -18.876171112060547
    6. '  ' → logprob: -19.376171112060547
    7. '.abs' → logprob: -20.126171112060547
    8. '    ' → logprob: -20.626171112060547
    9. ' ' → logprob: -20.626171112060547
    10. 'b' → logprob: -21.251171112060547

Token 132: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0004172065819147974
    2. '(b' → logprob: -8.25041675567627
    3. '(abs' → logprob: -8.87541675567627
    4. '(' → logprob: -11.12541675567627
    5. '((' → logprob: -14.50041675567627
    6. 'abs' → logprob: -14.75041675567627
    7. 'a' → logprob: -14.87541675567627
    8. 'b' → logprob: -17.250417709350586
    9. ' (' → logprob: -17.625417709350586
    10. '(
' → logprob: -18.250417709350586

Token 133: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. '][' → logprob: -15.875000953674316
    3. ' [' → logprob: -16.375
    4. '(' → logprob: -16.5
    5. 'b' → logprob: -16.5
    6. '{' → logprob: -17.375
    7. '1' → logprob: -17.5
    8. 'a' → logprob: -17.625
    9. '   ' → logprob: -18.375
    10. '```' → logprob: -18.375

Token 134: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.15322072803974152
    2. '[' → logprob: -2.1532206535339355
    3. '0' → logprob: -3.6532206535339355
    4. '   ' → logprob: -11.778221130371094
    5. ' ' → logprob: -11.778221130371094
    6. '(' → logprob: -12.028221130371094
    7. '][' → logprob: -12.278221130371094
    8. ']' → logprob: -12.403221130371094
    9. '```' → logprob: -13.028221130371094
    10. '
' → logprob: -13.028221130371094

Token 135: ']-' (ID: 27107)
  Prédit: ']-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']-' → logprob: -0.351906418800354
    2. '])' → logprob: -1.476906418800354
    3. ']' → logprob: -2.9769062995910645
    4. '])-' → logprob: -4.7269062995910645
    5. '[' → logprob: -5.3519062995910645
    6. '-' → logprob: -5.7269062995910645
    7. '][' → logprob: -8.976906776428223
    8. ')-' → logprob: -8.976906776428223
    9. ')' → logprob: -9.726906776428223
    10. '],' → logprob: -10.351906776428223

Token 136: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -4.596781946020201e-05
    2. ' b' → logprob: -10.000045776367188
    3. 'a' → logprob: -15.125045776367188
    4. '   ' → logprob: -16.000045776367188
    5. ')b' → logprob: -16.000045776367188
    6. ')' → logprob: -17.250045776367188
    7. '  ' → logprob: -17.500045776367188
    8. ' ' → logprob: -18.000045776367188
    9. '0' → logprob: -18.125045776367188
    10. '(b' → logprob: -18.250045776367188

Token 137: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10483955591917038
    2. '1' → logprob: -2.604839563369751
    3. '])' → logprob: -3.729839563369751
    4. '0' → logprob: -6.854839324951172
    5. ']' → logprob: -8.354839324951172
    6. ')' → logprob: -8.979839324951172
    7. '][' → logprob: -9.354839324951172
    8. ' ' → logprob: -10.229839324951172
    9. '   ' → logprob: -11.229839324951172
    10. '])-' → logprob: -11.479839324951172

Token 138: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08051871508359909
    2. '1' → logprob: -2.5805187225341797
    3. '])' → logprob: -6.45551872253418
    4. '[' → logprob: -10.95551872253418
    5. ' ' → logprob: -11.70551872253418
    6. ']' → logprob: -11.95551872253418
    7. ')' → logprob: -12.58051872253418
    8. '   ' → logprob: -12.70551872253418
    9. '```' → logprob: -12.70551872253418
    10. '-' → logprob: -13.20551872253418

Token 139: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.1801244169473648
    2. ')' → logprob: -1.8051244020462036
    3. '})' → logprob: -8.555124282836914
    4. '))' → logprob: -9.555124282836914
    5. ')])' → logprob: -10.180124282836914
    6. ']' → logprob: -10.680124282836914
    7. ')]' → logprob: -11.055124282836914
    8. ''])' → logprob: -11.180124282836914
    9. '>)' → logprob: -11.930124282836914
    10. '）' → logprob: -12.430124282836914

Token 140: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.15926027297973633
    2. 'def' → logprob: -2.1592602729797363
    3. 'best' → logprob: -5.409260272979736
    4. 'answer' → logprob: -5.909260272979736
    5. 'current' → logprob: -6.034260272979736
    6. 'result' → logprob: -6.034260272979736
    7. 'DP' → logprob: -6.034260272979736
    8. 'ans' → logprob: -6.159260272979736
    9. 'visited' → logprob: -6.159260272979736
    10. 'queue' → logprob: -6.409260272979736

Token 141: '=[' (ID: 13370)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13027895987033844
    2. '=' → logprob: -2.380279064178467
    3. '=[' → logprob: -3.755279064178467
    4. '={}' → logprob: -6.380279064178467
    5. '=[[' → logprob: -6.505279064178467
    6. '[' → logprob: -6.505279064178467
    7. '=[]' → logprob: -6.880279064178467
    8. ' =[' → logprob: -7.880279064178467
    9. ' ' → logprob: -10.505278587341309
    10. '={' → logprob: -10.755278587341309

Token 142: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.7785950303077698
    2. '[' → logprob: -1.778594970703125
    3. '[[' → logprob: -1.778594970703125
    4. '{}' → logprob: -2.278594970703125
    5. '0' → logprob: -2.778594970703125
    6. '-' → logprob: -3.528594970703125
    7. '{' → logprob: -6.278594970703125
    8. '[(' → logprob: -6.528594970703125
    9. 'float' → logprob: -6.653594970703125
    10. '-[' → logprob: -7.153594970703125

Token 143: '1' (ID: 16)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.5806409120559692
    2. '1' → logprob: -1.5806409120559692
    3. '10' → logprob: -2.2056407928466797
    4. '(' → logprob: -2.2056407928466797
    5. '100' → logprob: -4.83064079284668
    6. '((' → logprob: -6.70564079284668
    7. 'int' → logprob: -6.70564079284668
    8. '(float' → logprob: -6.83064079284668
    9. '-' → logprob: -7.58064079284668
    10. '(-' → logprob: -7.70564079284668

Token 144: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.6815527677536011
    2. ']' → logprob: -1.181552767753601
    3. ' for' → logprob: -2.0565528869628906
    4. 'for' → logprob: -3.0565528869628906
    5. ']*' → logprob: -4.431552886962891
    6. ',' → logprob: -8.93155288696289
    7. ' ]' → logprob: -9.05655288696289
    8. ']+' → logprob: -9.18155288696289
    9. '][' → logprob: -10.30655288696289
    10. ')' → logprob: -10.43155288696289

Token 145: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9367640018463135
    2. '1' → logprob: -0.9367640018463135
    3. 'T' → logprob: -2.4367640018463135
    4. '101' → logprob: -3.1867640018463135
    5. '(T' → logprob: -3.6867640018463135
    6. 'W' → logprob: -4.311763763427734
    7. '(W' → logprob: -4.311763763427734
    8. '100' → logprob: -4.936763763427734
    9. '102' → logprob: -4.936763763427734
    10. '2' → logprob: -5.311763763427734

Token 146: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.011379537172615528
    2. '<<(' → logprob: -4.511379718780518
    3. ' <<' → logprob: -8.01137924194336
    4. '<<<' → logprob: -17.51137924194336
    5. '1' → logprob: -18.76137924194336
    6. '<<"' → logprob: -18.76137924194336
    7. '<<<<' → logprob: -19.51137924194336
    8. '   ' → logprob: -19.76137924194336
    9. '```' → logprob: -19.76137924194336
    10. '(' → logprob: -20.13637924194336

Token 147: 'N' (ID: 45)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0005865143029950559
    2. 'W' → logprob: -8.12558650970459
    3. 'N' → logprob: -8.37558650970459
    4. ' M' → logprob: -11.12558650970459
    5. '20' → logprob: -11.62558650970459
    6. '10' → logprob: -11.75058650970459
    7. '(M' → logprob: -11.87558650970459
    8. '15' → logprob: -12.25058650970459
    9. 'len' → logprob: -13.25058650970459
    10. 'T' → logprob: -13.37558650970459

Token 148: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002956591488327831
    2. ')]' → logprob: -8.375295639038086
    3. ' )' → logprob: -10.000295639038086
    4. ')
' → logprob: -11.625295639038086
    5. '))' → logprob: -13.125295639038086
    6. 'for' → logprob: -13.250295639038086
    7. '+' → logprob: -13.750295639038086
    8. ']' → logprob: -14.000295639038086
    9. ')])' → logprob: -14.000295639038086
    10. ')][' → logprob: -14.250295639038086

Token 149: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06197440251708031
    2. 'for' → logprob: -2.811974287033081
    3. '[' → logprob: -12.93697452545166
    4. ']' → logprob: -13.31197452545166
    5. ' ' → logprob: -13.93697452545166
    6. ']*(' → logprob: -14.31197452545166
    7. '	for' → logprob: -15.43697452545166
    8. '   ' → logprob: -15.56197452545166
    9. ']*' → logprob: -15.68697452545166
    10. '+[' → logprob: -15.93697452545166

Token 150: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4311005175113678
    2. '_' → logprob: -1.1811004877090454
    3. 'range' → logprob: -3.181100606918335
    4. ' _' → logprob: -7.306100368499756
    5. ' in' → logprob: -7.306100368499756
    6. '_range' → logprob: -8.431100845336914
    7. ' i' → logprob: -9.556100845336914
    8. 'in' → logprob: -10.431100845336914
    9. '(range' → logprob: -10.431100845336914
    10. '_in' → logprob: -11.306100845336914

Token 151: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5267652273178101
    2. 'range' → logprob: -1.65176522731781
    3. 'in' → logprob: -1.77676522731781
    4. ' range' → logprob: -3.0267653465270996
    5. '(' → logprob: -10.151764869689941
    6. '_' → logprob: -10.401764869689941
    7. '(range' → logprob: -11.026764869689941
    8. ' ' → logprob: -11.401764869689941
    9. 'i' → logprob: -11.401764869689941
    10. ' i' → logprob: -13.026764869689941

Token 152: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25482499599456787
    2. ' range' → logprob: -1.5048249959945679
    3. '(range' → logprob: -5.879825115203857
    4. '(' → logprob: -10.3798246383667
    5. '(N' → logprob: -10.5048246383667
    6. '[' → logprob: -11.0048246383667
    7. '(M' → logprob: -12.3798246383667
    8. '   ' → logprob: -12.6298246383667
    9. 'N' → logprob: -13.0048246383667
    10. '[N' → logprob: -13.3798246383667

Token 153: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.3632902204990387
    2. '(M' → logprob: -2.238290309906006
    3. '(T' → logprob: -2.363290309906006
    4. '(W' → logprob: -2.738290309906006
    5. 'N' → logprob: -3.738290309906006
    6. '(' → logprob: -5.363290309906006
    7. '(K' → logprob: -5.738290309906006
    8. 'M' → logprob: -5.988290309906006
    9. 'W' → logprob: -6.113290309906006
    10. 'T' → logprob: -6.738290309906006

Token 154: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0032190645579248667
    2. '+' → logprob: -5.753219127655029
    3. ')]
' → logprob: -10.753218650817871
    4. ')' → logprob: -11.378218650817871
    5. ' )' → logprob: -12.628218650817871
    6. ')][' → logprob: -13.003218650817871
    7. ')]

' → logprob: -13.628218650817871
    8. ')])' → logprob: -14.253218650817871
    9. ')]
' → logprob: -15.628218650817871
    10. ')],' → logprob: -15.628218650817871

Token 155: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003714688355103135
    2. '2' → logprob: -5.628714561462402
    3. '3' → logprob: -10.128714561462402
    4. ' ' → logprob: -10.878714561462402
    5. '10' → logprob: -11.378714561462402
    6. '5' → logprob: -11.378714561462402
    7. 'T' → logprob: -12.128714561462402
    8. '4' → logprob: -12.503714561462402
    9. 'W' → logprob: -12.503714561462402
    10. 'M' → logprob: -12.628714561462402

Token 156: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.4121114822482923e-06
    2. ')' → logprob: -13.375003814697266
    3. ' )' → logprob: -13.750003814697266
    4. ')]
' → logprob: -15.125003814697266
    5. ']' → logprob: -15.375003814697266
    6. '+' → logprob: -15.875003814697266
    7. ')]

' → logprob: -17.125003814697266
    8. ')],' → logprob: -17.250003814697266
    9. ')][' → logprob: -17.750003814697266
    10. ')].' → logprob: -18.125003814697266

Token 157: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0008467909647151828
    2. 'for' → logprob: -8.125846862792969
    3. '0' → logprob: -8.500846862792969
    4. 'import' → logprob: -9.000846862792969
    5. 'from' → logprob: -9.250846862792969
    6. 'print' → logprob: -9.500846862792969
    7. 'queue' → logprob: -11.000846862792969
    8. 'def' → logprob: -11.375846862792969
    9. 'deque' → logprob: -11.625846862792969
    10. 'dq' → logprob: -12.250846862792969

Token 158: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03710426017642021
    2. 'from' → logprob: -3.662104368209839
    3. 'def' → logprob: -5.16210412979126
    4. 'import' → logprob: -5.53710412979126
    5. 'for' → logprob: -7.28710412979126
    6. 'queue' → logprob: -8.037104606628418
    7. '0' → logprob: -10.787104606628418
    8. 'answer' → logprob: -11.287104606628418
    9. 'ans' → logprob: -11.912104606628418
    10. 'dq' → logprob: -12.287104606628418

Token 159: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0010036318562924862
    2. ' =' → logprob: -7.626003742218018
    3. 'dp' → logprob: -8.87600326538086
    4. '0' → logprob: -9.37600326538086
    5. '=' → logprob: -9.62600326538086
    6. 'def' → logprob: -9.87600326538086
    7. '[N' → logprob: -10.37600326538086
    8. 'import' → logprob: -10.75100326538086
    9. '][' → logprob: -11.12600326538086
    10. ']' → logprob: -11.25100326538086

Token 160: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.009551020339131355
    2. ']' → logprob: -4.759551048278809
    3. '[' → logprob: -8.009551048278809
    4. ' ][' → logprob: -8.009551048278809
    5. '[i' → logprob: -9.634551048278809
    6. ']=' → logprob: -10.009551048278809
    7. '][-' → logprob: -10.009551048278809
    8. '][]' → logprob: -11.259551048278809
    9. ']
' → logprob: -11.509551048278809
    10. 'def' → logprob: -11.759551048278809

Token 161: 'S' (ID: 50)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.34236055612564087
    2. 'b' → logprob: -2.217360496520996
    3. 'mask' → logprob: -2.217360496520996
    4. 's' → logprob: -2.967360496520996
    5. 'state' → logprob: -5.467360496520996
    6. 'bit' → logprob: -5.842360496520996
    7. 'S' → logprob: -5.842360496520996
    8. 'k' → logprob: -5.842360496520996
    9. '0' → logprob: -6.342360496520996
    10. 'i' → logprob: -6.842360496520996

Token 162: ']:' (ID: 12433)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00043233807082287967
    2. ']=' → logprob: -8.000432014465332
    3. ']:' → logprob: -10.625432014465332
    4. ' ]' → logprob: -10.750432014465332
    5. '][' → logprob: -11.125432014465332
    6. ']
' → logprob: -11.875432014465332
    7. '=' → logprob: -12.000432014465332
    8. ']=-' → logprob: -12.250432014465332
    9. ']+=' → logprob: -12.375432014465332
    10. '],' → logprob: -12.750432014465332

Token 163: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.402703881263733
    2. 'maximum' → logprob: -1.402703881263733
    3. ' maximum' → logprob: -1.527703881263733
    4. '#' → logprob: -2.7777037620544434
    5. '-' → logprob: -2.7777037620544434
    6. ' max' → logprob: -3.4027037620544434
    7. '0' → logprob: -3.5277037620544434
    8. 'the' → logprob: -3.7777037620544434
    9. 'Maximum' → logprob: -4.027703762054443
    10. 'The' → logprob: -4.277703762054443

Token 164: ' profit' (ID: 15971)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.26696521043777466
    2. ' value' → logprob: -1.8919651508331299
    3. 'profit' → logprob: -2.76696515083313
    4. ' profit' → logprob: -5.016965389251709
    5. 'points' → logprob: -5.141965389251709
    6. '_value' → logprob: -6.266965389251709
    7. ' points' → logprob: -6.391965389251709
    8. 'items' → logprob: -7.516965389251709
    9. '_profit' → logprob: -7.516965389251709
    10. 'score' → logprob: -7.766965389251709

Token 165: ' ending' (ID: 22013)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.179073691368103
    2. '=' → logprob: -1.304073691368103
    3. 'for' → logprob: -1.554073691368103
    4. ' =' → logprob: -2.5540738105773926
    5. ' for' → logprob: -2.9290738105773926
    6. ']' → logprob: -4.179073810577393
    7. '[' → logprob: -4.429073810577393
    8. '[i' → logprob: -4.554073810577393
    9. ',' → logprob: -5.179073810577393
    10. '(' → logprob: -5.304073810577393

Token 166: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.5261846780776978
    2. 'at' → logprob: -0.9011846780776978
    3. '_at' → logprob: -6.526184558868408
    4. 'with' → logprob: -7.276184558868408
    5. ' with' → logprob: -7.901184558868408
    6. ' =' → logprob: -9.401185035705566
    7. 'in' → logprob: -9.651185035705566
    8. '_' → logprob: -9.776185035705566
    9. ' in' → logprob: -10.026185035705566
    10. '[i' → logprob: -10.151185035705566

Token 167: ' position' (ID: 4010)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2337953895330429
    2. ' i' → logprob: -1.733795404434204
    3. 'market' → logprob: -3.608795404434204
    4. ' market' → logprob: -6.358795166015625
    5. 'location' → logprob: -6.983795166015625
    6. 'city' → logprob: -7.108795166015625
    7. ' city' → logprob: -8.108795166015625
    8. 'node' → logprob: -8.108795166015625
    9. ' location' → logprob: -8.358795166015625
    10. 'markets' → logprob: -8.858795166015625

Token 168: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4307093918323517
    2. ' i' → logprob: -1.0557093620300293
    3. ' with' → logprob: -7.055709362030029
    4. '[i' → logprob: -8.180709838867188
    5. 'with' → logprob: -8.680709838867188
    6. ' at' → logprob: -8.930709838867188
    7. '[' → logprob: -9.430709838867188
    8. '0' → logprob: -9.680709838867188
    9. '(i' → logprob: -9.680709838867188
    10. 's' → logprob: -10.055709838867188

Token 169: '(' (ID: 7)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.2268692255020142
    2. ' for' → logprob: -1.3518692255020142
    3. 'for' → logprob: -1.4768692255020142
    4. '[' → logprob: -2.6018691062927246
    5. '][' → logprob: -3.3518691062927246
    6. ',' → logprob: -3.4768691062927246
    7. ' with' → logprob: -3.7268691062927246
    8. ']' → logprob: -4.226869106292725
    9. '0' → logprob: -4.226869106292725
    10. ' dp' → logprob: -5.226869106292725

Token 170: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32473093271255493
    2. ',' → logprob: -1.5747308731079102
    3. ' with' → logprob: -3.44973087310791
    4. 'S' → logprob: -4.57473087310791
    5. 's' → logprob: -4.82473087310791
    6. '[' → logprob: -4.94973087310791
    7. 'with' → logprob: -5.57473087310791
    8. ' S' → logprob: -6.19973087310791
    9. '][' → logprob: -6.57473087310791
    10. ' )' → logprob: -6.82473087310791

Token 171: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1338791400194168
    2. ',' → logprob: -2.1338791847229004
    3. ')[' → logprob: -5.8838791847229
    4. '),' → logprob: -6.7588791847229
    5. '][' → logprob: -7.3838791847229
    6. ' )' → logprob: -7.5088791847229
    7. ')+' → logprob: -8.258878707885742
    8. ')][' → logprob: -8.508878707885742
    9. '[' → logprob: -9.008878707885742
    10. ' ,' → logprob: -9.133878707885742

Token 172: 'market' (ID: 27236)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.024491194635629654
    2. 'starting' → logprob: -4.399491310119629
    3. 'market' → logprob: -5.524491310119629
    4. 'home' → logprob: -5.649491310119629
    5. 'outside' → logprob: -6.899491310119629
    6. 'warehouse' → logprob: -7.399491310119629
    7. ' start' → logprob: -7.649491310119629
    8. 'N' → logprob: -7.774491310119629
    9. 'source' → logprob: -8.899491310119629
    10. 'initial' → logprob: -9.024491310119629

Token 173: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022632062435150146
    2. ',' → logprob: -4.147632122039795
    3. '0' → logprob: -5.647632122039795
    4. '),' → logprob: -6.772632122039795
    5. 's' → logprob: -7.647632122039795
    6. '[' → logprob: -7.647632122039795
    7. ' )' → logprob: -8.772631645202637
    8. ']' → logprob: -9.147631645202637
    9. ')]' → logprob: -9.397631645202637
    10. '+' → logprob: -9.772631645202637

Token 174: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38924506306648254
    2. 'S' → logprob: -1.8892450332641602
    3. ' S' → logprob: -2.13924503326416
    4. ' ' → logprob: -3.51424503326416
    5. ')' → logprob: -4.51424503326416
    6. ',' → logprob: -6.51424503326416
    7. '0' → logprob: -6.51424503326416
    8. ' space' → logprob: -6.76424503326416
    9. 'space' → logprob: -6.88924503326416
    10. ' mask' → logprob: -6.88924503326416

Token 175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9302555918693542
    2. 'S' → logprob: -1.055255651473999
    3. '#' → logprob: -1.805255651473999
    4. 'N' → logprob: -3.430255651473999
    5. ')' → logprob: -4.18025541305542
    6. ' S' → logprob: -4.68025541305542
    7. 'T' → logprob: -5.05525541305542
    8. 'M' → logprob: -5.68025541305542
    9. ' ' → logprob: -6.05525541305542
    10. '0' → logprob: -6.18025541305542

Token 176: '~' (ID: 93)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7128872275352478
    2. '<<' → logprob: -1.8378872871398926
    3. '...' → logprob: -2.5878872871398926
    4. ':' → logprob: -2.8378872871398926
    5. ',' → logprob: -2.8378872871398926
    6. '):' → logprob: -2.9628872871398926
    7. ')-' → logprob: -3.5878872871398926
    8. ')<<' → logprob: -4.087887287139893
    9. ',...' → logprob: -4.337887287139893
    10. ':N' → logprob: -4.712887287139893

Token 177: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0004237627435941249
    2. 'M' → logprob: -8.000423431396484
    3. 'W' → logprob: -10.125423431396484
    4. ' N' → logprob: -10.750423431396484
    5. ')' → logprob: -10.875423431396484
    6. '
' → logprob: -12.625423431396484
    7. 'T' → logprob: -14.000423431396484
    8. '(' → logprob: -14.125423431396484
    9. '...' → logprob: -14.250423431396484
    10. '(N' → logprob: -14.375423431396484

Token 178: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18539465963840485
    2. ')]' → logprob: -1.8103946447372437
    3. '])' → logprob: -6.060394763946533
    4. ']' → logprob: -6.935394763946533
    5. ')])' → logprob: -6.935394763946533
    6. ')],' → logprob: -8.685394287109375
    7. ')][' → logprob: -8.685394287109375
    8. '):' → logprob: -8.685394287109375
    9. ' )' → logprob: -8.935394287109375
    10. '),' → logprob: -9.060394287109375

Token 179: 'city' (ID: 17500)
  Prédit: 'home'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'home' → logprob: -0.810368537902832
    2. 'market' → logprob: -1.935368537902832
    3. 'start' → logprob: -2.060368537902832
    4. 'starting' → logprob: -2.935368537902832
    5. 'warehouse' → logprob: -2.935368537902832
    6. 'user' → logprob: -3.185368537902832
    7. 'player' → logprob: -3.310368537902832
    8. 'customer' → logprob: -3.685368537902832
    9. 'items' → logprob: -4.685368537902832
    10. 'item' → logprob: -4.935368537902832

Token 180: ' i' (ID: 575)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.3560302257537842
    2. ')' → logprob: -1.2310302257537842
    3. ']' → logprob: -5.231030464172363
    4. 's' → logprob: -7.731030464172363
    5. '])' → logprob: -7.981030464172363
    6. ')]
' → logprob: -8.106030464172363
    7. '#' → logprob: -8.356030464172363
    8. ')])' → logprob: -8.856030464172363
    9. ',' → logprob: -9.356030464172363
    10. ')]

' → logprob: -9.481030464172363

Token 181: '-' (ID: 12)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18452394008636475
    2. ')]' → logprob: -1.8095239400863647
    3. 's' → logprob: -6.559524059295654
    4. ' )' → logprob: -7.059524059295654
    5. ')]
' → logprob: -7.684524059295654
    6. ']' → logprob: -7.809524059295654
    7. '])' → logprob: -8.309523582458496
    8. ')
' → logprob: -8.309523582458496
    9. ')])' → logprob: -8.309523582458496
    10. '+' → logprob: -8.434523582458496

Token 182: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4198472797870636
    2. '1' → logprob: -1.2948472499847412
    3. 'nd' → logprob: -3.669847249984741
    4. ')]' → logprob: -4.29484748840332
    5. 'dx' → logprob: -4.91984748840332
    6. 's' → logprob: -4.91984748840332
    7. 'x' → logprob: -5.91984748840332
    8. 'n' → logprob: -6.04484748840332
    9. ']' → logprob: -6.41984748840332
    10. 'd' → logprob: -6.91984748840332

Token 183: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3512825667858124
    2. ')]' → logprob: -1.3512825965881348
    3. ']' → logprob: -3.3512825965881348
    4. '])' → logprob: -6.726282596588135
    5. ' )' → logprob: -7.226282596588135
    6. ')])' → logprob: -9.101282119750977
    7. '])]' → logprob: -9.601282119750977
    8. ' ]' → logprob: -10.101282119750977
    9. '#' → logprob: -10.851282119750977
    10. ',' → logprob: -11.226282119750977

Token 184: ' visited' (ID: 18416)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4928232431411743
    2. 'for' → logprob: -1.7428232431411743
    3. ' for' → logprob: -2.1178231239318848
    4. ')' → logprob: -2.3678231239318848
    5. ']' → logprob: -2.6178231239318848
    6. ' ' → logprob: -2.6178231239318848
    7. '#' → logprob: -2.7428231239318848
    8. '
' → logprob: -3.1178231239318848
    9. 'range' → logprob: -3.8678231239318848
    10. ' range' → logprob: -3.9928231239318848

Token 185: ' cities' (ID: 15636)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.6160002946853638
    2. 'markets' → logprob: -1.7410002946853638
    3. 'all' → logprob: -2.366000175476074
    4. 'states' → logprob: -2.616000175476074
    5. ')' → logprob: -2.741000175476074
    6. '[' → logprob: -2.866000175476074
    7. 'set' → logprob: -2.866000175476074
    8. '][' → logprob: -3.116000175476074
    9. 's' → logprob: -3.491000175476074
    10. 'market' → logprob: -3.616000175476074

Token 186: ' S' (ID: 336)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.367363303899765
    2. ')' → logprob: -1.9923633337020874
    3. '
' → logprob: -2.617363214492798
    4. '[' → logprob: -3.117363214492798
    5. '[
' → logprob: -3.992363214492798
    6. ' =' → logprob: -4.992363452911377
    7. '<|end|>' → logprob: -4.992363452911377
    8. '=' → logprob: -5.367363452911377
    9. ' ]' → logprob: -5.742363452911377
    10. '][' → logprob: -6.367363452911377

Token 187: ' bit' (ID: 3546)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.1638017892837524
    2. ')' → logprob: -1.7888017892837524
    3. 'dp' → logprob: -2.163801670074463
    4. 'for' → logprob: -2.413801670074463
    5. '
' → logprob: -2.538801670074463
    6. '<|end|>' → logprob: -2.788801670074463
    7. ' for' → logprob: -3.163801670074463
    8. ' ]' → logprob: -3.288801670074463
    9. '[' → logprob: -3.663801670074463
    10. ' 
' → logprob: -4.163801670074463

Token 188: 'mask' (ID: 22527)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0653492212295532
    2. '[' → logprob: -1.8153492212295532
    3. ' =' → logprob: -1.8153492212295532
    4. '0' → logprob: -2.0653491020202637
    5. '=' → logprob: -2.0653491020202637
    6. 'for' → logprob: -4.440349102020264
    7. '][' → logprob: -4.565349102020264
    8. '[
' → logprob: -4.940349102020264
    9. ')' → logprob: -5.065349102020264
    10. 's' → logprob: -5.440349102020264

Token 189: ' 
' (ID: 793)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8803349137306213
    2. '<|end|>' → logprob: -1.2553348541259766
    3. ')' → logprob: -1.8803348541259766
    4. 'for' → logprob: -3.1303348541259766
    5. ' for' → logprob: -3.3803348541259766
    6. ']' → logprob: -3.3803348541259766
    7. '
' → logprob: -4.380334854125977
    8. ' dp' → logprob: -5.005334854125977
    9. ' 
' → logprob: -6.005334854125977
    10. 'def' → logprob: -6.255334854125977

Token 190: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.39179539680480957
    2. 'for' → logprob: -1.8917953968048096
    3. ')' → logprob: -2.3917953968048096
    4. ' for' → logprob: -3.6417953968048096
    5. ' dp' → logprob: -4.0167951583862305
    6. ']' → logprob: -4.3917951583862305
    7. '0' → logprob: -5.1417951583862305
    8. 'def' → logprob: -5.6417951583862305
    9. ' =' → logprob: -5.7667951583862305
    10. ' ' → logprob: -6.1417951583862305

Token 191: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004219316877424717
    2. '<|end|>' → logprob: -5.5042195320129395
    3. '<|end|>' → logprob: -11.004219055175781
    4. '[
' → logprob: -11.379219055175781
    5. '=' → logprob: -11.504219055175781
    6. ')' → logprob: -11.504219055175781
    7. '\[' → logprob: -11.754219055175781
    8. '[len' → logprob: -12.129219055175781
    9. '[user' → logprob: -12.129219055175781
    10. '[-' → logprob: -12.129219055175781

Token 192: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009543364867568016
    2. '-' → logprob: -7.6259541511535645
    3. 'N' → logprob: -8.875954627990723
    4. '][' → logprob: -9.125954627990723
    5. '1' → logprob: -9.500954627990723
    6. ' ' → logprob: -10.000954627990723
    7. '(' → logprob: -10.250954627990723
    8. ']' → logprob: -10.500954627990723
    9. '[' → logprob: -11.375954627990723
    10. 'i' → logprob: -12.000954627990723

Token 193: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0006089136004447937
    2. ']' → logprob: -7.500608921051025
    3. ' ][' → logprob: -11.000608444213867
    4. '[' → logprob: -11.250608444213867
    5. '][-' → logprob: -11.375608444213867
    6. ']=' → logprob: -11.875608444213867
    7. ']][' → logprob: -13.750608444213867
    8. '])' → logprob: -14.000608444213867
    9. ')][' → logprob: -14.125608444213867
    10. '0' → logprob: -14.375608444213867

Token 194: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2233183042553719e-05
    2. '1' → logprob: -11.625012397766113
    3. '(' → logprob: -13.000012397766113
    4. ' ' → logprob: -14.125012397766113
    5. '000' → logprob: -16.500011444091797
    6. ')' → logprob: -17.625011444091797
    7. ' (' → logprob: -17.875011444091797
    8. '```' → logprob: -17.937511444091797
    9. '۰' → logprob: -18.437511444091797
    10. '2' → logprob: -18.500011444091797

Token 195: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.25372326374053955
    2. ']' → logprob: -1.5037232637405396
    3. ']=-' → logprob: -6.75372314453125
    4. '=' → logprob: -7.87872314453125
    5. ']+=' → logprob: -8.37872314453125
    6. ' ]' → logprob: -12.00372314453125
    7. ']+' → logprob: -13.00372314453125
    8. ']={' → logprob: -13.25372314453125
    9. ']=(' → logprob: -13.50372314453125
    10. ']==' → logprob: -13.62872314453125

Token 196: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012475410767365247
    2. 'T' → logprob: -9.12512493133545
    3. 'W' → logprob: -11.50012493133545
    4. ' ' → logprob: -12.12512493133545
    5. ' T' → logprob: -16.750123977661133
    6. ' W' → logprob: -17.750123977661133
    7. '   ' → logprob: -17.875123977661133
    8. '-' → logprob: -17.875123977661133
    9. '000' → logprob: -18.187623977661133
    10. '(' → logprob: -18.250123977661133

Token 197: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00044890373828820884
    2. ' for' → logprob: -8.375449180603027
    3. 'from' → logprob: -8.625449180603027
    4. 'queue' → logprob: -10.875449180603027
    5. ')' → logprob: -11.375449180603027
    6. 'max' → logprob: -12.750449180603027
    7. 'import' → logprob: -13.500449180603027
    8. 'stack' → logprob: -13.625449180603027
    9. 'def' → logprob: -14.375449180603027
    10. ']' → logprob: -14.625449180603027

Token 198: 'pos' (ID: 1103)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00018399098189547658
    2. 'from' → logprob: -9.000184059143066
    3. ' for' → logprob: -9.750184059143066
    4. ')' → logprob: -13.375184059143066
    5. 'queue' → logprob: -14.875184059143066
    6. 'stack' → logprob: -15.750184059143066
    7. 'import' → logprob: -16.37518310546875
    8. ']' → logprob: -17.37518310546875
    9. '<|end|>' → logprob: -17.50018310546875
    10. 'max' → logprob: -17.75018310546875

Token 199: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5786017775535583
    2. 's' → logprob: -1.5786018371582031
    3. '=[' → logprob: -1.9536018371582031
    4. '=(' → logprob: -2.953601837158203
    5. '=[]' → logprob: -3.828601837158203
    6. ' =' → logprob: -4.578601837158203
    7. 'itions' → logprob: -5.203601837158203
    8. '=s' → logprob: -7.953601837158203
    9. '=[]
' → logprob: -8.203601837158203
    10. '=[[' → logprob: -8.828601837158203

Token 200: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001613459608051926
    2. ']' → logprob: -9.500161170959473
    3. '0' → logprob: -10.250161170959473
    4. ' (' → logprob: -10.750161170959473
    5. '(-' → logprob: -11.250161170959473
    6. '[' → logprob: -12.125161170959473
    7. '(x' → logprob: -12.750161170959473
    8. '[(' → logprob: -13.125161170959473
    9. ')' → logprob: -13.375161170959473
    10. '](' → logprob: -14.000161170959473

Token 201: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004071513190865517
    2. '(' → logprob: -6.6290717124938965
    3. 'W' → logprob: -6.8790717124938965
    4. ')' → logprob: -7.0040717124938965
    5. '-' → logprob: -8.254071235656738
    6. '(W' → logprob: -9.004071235656738
    7. 'markets' → logprob: -9.254071235656738
    8. 'x' → logprob: -9.629071235656738
    9. 'items' → logprob: -9.629071235656738
    10. '100' → logprob: -10.504071235656738

Token 202: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002976633608341217
    2. '0' → logprob: -6.002976417541504
    3. ' ,' → logprob: -7.627976417541504
    4. ')]' → logprob: -12.252976417541504
    5. ',
' → logprob: -13.002976417541504
    6. ' ' → logprob: -13.127976417541504
    7. ')' → logprob: -13.377976417541504
    8. '```' → logprob: -14.440476417541504
    9. '00' → logprob: -14.815476417541504
    10. '
' → logprob: -14.877976417541504

Token 203: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00043341092532500625
    2. ' ' → logprob: -7.750433444976807
    3. ')' → logprob: -13.875432968139648
    4. '(' → logprob: -14.500432968139648
    5. ')]' → logprob: -15.000432968139648
    6. '-' → logprob: -15.125432968139648
    7. '1' → logprob: -15.375432968139648
    8. '
' → logprob: -15.875432968139648
    9. '100' → logprob: -16.12543296813965
    10. '  ' → logprob: -16.12543296813965

Token 204: ')' (ID: 8)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.026533549651503563
    2. ')' → logprob: -3.651533603668213
    3. ')]
' → logprob: -9.276533126831055
    4. ' )' → logprob: -10.151533126831055
    5. ')+(' → logprob: -10.151533126831055
    6. ']' → logprob: -10.526533126831055
    7. ')+' → logprob: -11.401533126831055
    8. '),' → logprob: -12.401533126831055
    9. ')
' → logprob: -12.526533126831055
    10. '),(' → logprob: -12.651533126831055

Token 205: ']+' (ID: 15344)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0857381671667099
    2. ']+' → logprob: -2.710738182067871
    3. ')' → logprob: -4.460738182067871
    4. ')]' → logprob: -5.835738182067871
    5. ')+(' → logprob: -7.585738182067871
    6. ')+' → logprob: -8.835738182067871
    7. ']*(' → logprob: -8.835738182067871
    8. ']
' → logprob: -9.335738182067871
    9. '(' → logprob: -9.585738182067871
    10. ',' → logprob: -9.710738182067871

Token 206: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.022609688341617584
    2. '[' → logprob: -4.022609710693359
    3. 'markets' → logprob: -5.897609710693359
    4. '[m' → logprob: -7.022609710693359
    5. '[x' → logprob: -7.772609710693359
    6. '[pos' → logprob: -8.89760971069336
    7. ' [(' → logprob: -8.89760971069336
    8. '[((' → logprob: -10.27260971069336
    9. ' [' → logprob: -10.64760971069336
    10. 'market' → logprob: -11.27260971069336

Token 207: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.9506109356880188
    2. 'x' → logprob: -1.200610876083374
    3. 'markets' → logprob: -1.575610876083374
    4. 'market' → logprob: -2.575610876083374
    5. 'mx' → logprob: -3.575610876083374
    6. 'xm' → logprob: -8.200611114501953
    7. ' markets' → logprob: -8.325611114501953
    8. '(x' → logprob: -9.075611114501953
    9. 'mk' → logprob: -9.450611114501953
    10. ')' → logprob: -9.575611114501953

Token 208: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13591493666172028
    2. 'ark' → logprob: -2.2609150409698486
    3. 'arket' → logprob: -3.8859150409698486
    4. 'arks' → logprob: -6.1359148025512695
    5. 'ar' → logprob: -10.13591480255127
    6. '[i' → logprob: -10.88591480255127
    7. 'x' → logprob: -11.13591480255127
    8. 'arked' → logprob: -11.63591480255127
    9. 'markets' → logprob: -11.88591480255127
    10. 'arker' → logprob: -12.01091480255127

Token 209: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4288223385810852
    2. '1' → logprob: -1.0538222789764404
    3. 'x' → logprob: -9.42882251739502
    4. ' ' → logprob: -11.05382251739502
    5. '   ' → logprob: -11.55382251739502
    6. 'i' → logprob: -12.17882251739502
    7. '
' → logprob: -12.30382251739502
    8. '```' → logprob: -13.17882251739502
    9. '[' → logprob: -14.61632251739502
    10. ':' → logprob: -14.67882251739502

Token 210: '],' (ID: 2155)
  Prédit: ',m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',m' → logprob: -0.055443067103624344
    2. ',' → logprob: -2.930443048477173
    3. '],' → logprob: -7.930443286895752
    4. ' ,' → logprob: -8.805442810058594
    5. 'm' → logprob: -10.680442810058594
    6. '),' → logprob: -11.180442810058594
    7. '],[' → logprob: -13.305442810058594
    8. '1' → logprob: -13.680442810058594
    9. '_,' → logprob: -13.680442810058594
    10. ',b' → logprob: -14.055442810058594

Token 211: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.002186307217925787
    2. ' m' → logprob: -6.127186298370361
    3. '   ' → logprob: -14.87718677520752
    4. '	m' → logprob: -15.00218677520752
    5. ' ' → logprob: -15.12718677520752
    6. '  ' → logprob: -15.75218677520752
    7. ')m' → logprob: -16.127185821533203
    8. '    ' → logprob: -16.627185821533203
    9. ',m' → logprob: -17.127185821533203
    10. ')' → logprob: -17.377185821533203

Token 212: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012661826331168413
    2. '[' → logprob: -6.751266002655029
    3. '
' → logprob: -11.001266479492188
    4. ' ' → logprob: -11.001266479492188
    5. '][' → logprob: -11.251266479492188
    6. 'm' → logprob: -11.376266479492188
    7. ',' → logprob: -11.751266479492188
    8. '),' → logprob: -12.001266479492188
    9. '],' → logprob: -12.001266479492188
    10. ')' → logprob: -12.251266479492188

Token 213: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. '2' → logprob: -13.125004768371582
    3. ' ' → logprob: -14.125004768371582
    4. ']' → logprob: -15.125004768371582
    5. '   ' → logprob: -15.375004768371582
    6. '```' → logprob: -15.375004768371582
    7. '-' → logprob: -15.937504768371582
    8. 'i' → logprob: -16.125003814697266
    9. '[' → logprob: -16.250003814697266
    10. '][' → logprob: -16.312503814697266

Token 214: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.394135612528771e-05
    2. ' )' → logprob: -10.500043869018555
    3. '])' → logprob: -11.875043869018555
    4. ')]' → logprob: -12.125043869018555
    5. ')m' → logprob: -13.000043869018555
    6. '）' → logprob: -15.125043869018555
    7. ')
' → logprob: -15.250043869018555
    8. '   ' → logprob: -15.500043869018555
    9. 'm' → logprob: -15.875043869018555
    10. '`)' → logprob: -16.000043869018555

Token 215: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10021400451660156
    2. 'for' → logprob: -2.3502140045166016
    3. ')' → logprob: -13.100214004516602
    4. '	for' → logprob: -13.225214004516602
    5. '   ' → logprob: -13.350214004516602
    6. ' ' → logprob: -13.600214004516602
    7. ']' → logprob: -14.975214004516602
    8. '  ' → logprob: -16.3502140045166
    9. '    ' → logprob: -16.4752140045166
    10. ',' → logprob: -17.8502140045166

Token 216: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.01883150264620781
    2. ' m' → logprob: -4.643831729888916
    3. 'markets' → logprob: -4.768831729888916
    4. ' markets' → logprob: -7.643831729888916
    5. 'market' → logprob: -9.768831253051758
    6. '(m' → logprob: -13.268831253051758
    7. '	m' → logprob: -13.393831253051758
    8. ' market' → logprob: -13.768831253051758
    9. 'mark' → logprob: -14.706331253051758
    10. '_' → logprob: -14.956331253051758

Token 217: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20148281753063202
    2. 'in' → logprob: -1.7014827728271484
    3. 'm' → logprob: -9.701482772827148
    4. 'markets' → logprob: -12.201482772827148
    5. 'market' → logprob: -13.576482772827148
    6. ' markets' → logprob: -14.201482772827148
    7. ' m' → logprob: -14.201482772827148
    8. ' ' → logprob: -15.326482772827148
    9. ')' → logprob: -15.951482772827148
    10. ']' → logprob: -16.20148277282715

Token 218: ' markets' (ID: 15577)
  Prédit: 'markets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'markets' → logprob: -0.002819851040840149
    2. ' markets' → logprob: -5.877820014953613
    3. 'market' → logprob: -11.127820014953613
    4. 'marks' → logprob: -16.002819061279297
    5. 'markers' → logprob: -16.377819061279297
    6. ')' → logprob: -17.127819061279297
    7. '   ' → logprob: -17.627819061279297
    8. '```' → logprob: -18.002819061279297
    9. 'm' → logprob: -18.377819061279297
    10. '
' → logprob: -18.377819061279297

Token 219: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -5.438573680294212e-06
    2. ' ]' → logprob: -12.625005722045898
    3. ')]' → logprob: -13.500005722045898
    4. ']
' → logprob: -14.500005722045898
    5. '])' → logprob: -16.1250057220459
    6. '()]' → logprob: -16.2500057220459
    7. ']

' → logprob: -17.3750057220459
    8. '`]' → logprob: -17.6250057220459
    9. ']]' → logprob: -17.8750057220459
    10. ']}' → logprob: -18.3750057220459

Token 220: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0021954562980681658
    2. 'from' → logprob: -6.127195358276367
    3. ' for' → logprob: -11.877195358276367
    4. 'import' → logprob: -13.252195358276367
    5. ')' → logprob: -14.252195358276367
    6. 'queue' → logprob: -14.752195358276367
    7. '```' → logprob: -16.002195358276367
    8. 'def' → logprob: -16.002195358276367
    9. 'stack' → logprob: -16.627195358276367
    10. 'max' → logprob: -17.002195358276367

Token 221: ' Pre' (ID: 4659)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.062382057309150696
    2. 'from' → logprob: -2.8123819828033447
    3. 'import' → logprob: -7.812382221221924
    4. 'def' → logprob: -12.062381744384766
    5. 'queue' → logprob: -13.062381744384766
    6. ' for' → logprob: -14.312381744384766
    7. '#' → logprob: -14.812381744384766
    8. '```' → logprob: -15.937381744384766
    9. 'stack' → logprob: -16.562381744384766
    10. 'q' → logprob: -16.562381744384766

Token 222: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.0111002866178751
    2. 'calculate' → logprob: -5.2611002922058105
    3. 'computed' → logprob: -6.5111002922058105
    4. 'calc' → logprob: -6.8861002922058105
    5. 'sum' → logprob: -6.8861002922058105
    6. 'comput' → logprob: -7.5111002922058105
    7. 'pare' → logprob: -7.7611002922058105
    8. 'c' → logprob: -7.7611002922058105
    9. 'process' → logprob: -8.761099815368652
    10. '#' → logprob: -9.011099815368652

Token 223: ' profit' (ID: 15971)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.05297520384192467
    2. 'd' → logprob: -3.5529751777648926
    3. 'cost' → logprob: -4.552975177764893
    4. 'time' → logprob: -5.927975177764893
    5. 'for' → logprob: -6.302975177764893
    6. 'travel' → logprob: -6.302975177764893
    7. 'move' → logprob: -6.552975177764893
    8. 'distance' → logprob: -6.927975177764893
    9. 'all' → logprob: -7.427975177764893
    10. 'dis' → logprob: -7.427975177764893

Token 224: ' for' (ID: 395)
  Prédit: 'profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'profit' → logprob: -0.41184210777282715
    2. 'profits' → logprob: -1.5368421077728271
    3. 'for' → logprob: -2.911842107772827
    4. 'prof' → logprob: -4.161842346191406
    5. 'max' → logprob: -4.411842346191406
    6. ' =' → logprob: -4.911842346191406
    7. 'pre' → logprob: -5.161842346191406
    8. 'potential' → logprob: -5.411842346191406
    9. '_profit' → logprob: -6.036842346191406
    10. '=' → logprob: -6.161842346191406

Token 225: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.46241623163223267
    2. 'all' → logprob: -1.337416172027588
    3. ' each' → logprob: -3.462416172027588
    4. ' all' → logprob: -3.837416172027588
    5. 'mask' → logprob: -4.212416172027588
    6. 'subset' → logprob: -4.712416172027588
    7. 'buy' → logprob: -4.962416172027588
    8. 'p' → logprob: -5.837416172027588
    9. 'every' → logprob: -6.587416172027588
    10. ' subset' → logprob: -6.712416172027588

Token 226: ' subset' (ID: 58845)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.4911438524723053
    2. 'mask' → logprob: -1.491143822669983
    3. 'market' → logprob: -2.2411439418792725
    4. 'state' → logprob: -3.8661439418792725
    5. ' subset' → logprob: -4.616143703460693
    6. 'city' → logprob: -5.366143703460693
    7. 'comb' → logprob: -6.116143703460693
    8. 'item' → logprob: -6.116143703460693
    9. 'bit' → logprob: -6.366143703460693
    10. 'sub' → logprob: -6.616143703460693

Token 227: ' of' (ID: 328)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9023059606552124
    2. ',' → logprob: -2.402306079864502
    3. ' of' → logprob: -2.402306079864502
    4. 'subset' → logprob: -2.777306079864502
    5. 'for' → logprob: -2.902306079864502
    6. 'from' → logprob: -3.402306079864502
    7. 'of' → logprob: -3.527306079864502
    8. ')' → logprob: -3.777306079864502
    9. 'sub' → logprob: -3.902306079864502
    10. 'goods' → logprob: -3.902306079864502

Token 228: ' cities' (ID: 15636)
  Prédit: 'markets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'markets' → logprob: -0.5586544275283813
    2. 'goods' → logprob: -2.058654308319092
    3. 'items' → logprob: -2.308654308319092
    4. ' markets' → logprob: -2.308654308319092
    5. 'cities' → logprob: -3.308654308319092
    6. ' items' → logprob: -3.683654308319092
    7. ' goods' → logprob: -3.808654308319092
    8. ' cities' → logprob: -5.183654308319092
    9. 'market' → logprob: -5.683654308319092
    10. 'range' → logprob: -5.808654308319092

Token 229: ' and' (ID: 326)
  Prédit: 'profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'profit' → logprob: -0.8903782963752747
    2. 'profits' → logprob: -1.0153782367706299
    3. 'for' → logprob: -2.89037823677063
    4. 'subset' → logprob: -3.39037823677063
    5. ' profit' → logprob: -3.76537823677063
    6. 'from' → logprob: -3.76537823677063
    7. ' profits' → logprob: -4.015378475189209
    8. ',' → logprob: -4.265378475189209
    9. ' for' → logprob: -4.515378475189209
    10. 'sub' → logprob: -4.640378475189209

Token 230: ' the' (ID: 290)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.7789621353149414
    2. 'each' → logprob: -1.6539621353149414
    3. 'goods' → logprob: -2.4039621353149414
    4. 'for' → logprob: -3.0289621353149414
    5. ' items' → logprob: -3.0289621353149414
    6. 'market' → logprob: -3.1539621353149414
    7. '#' → logprob: -3.4039621353149414
    8. ' each' → logprob: -3.7789621353149414
    9. 'markets' → logprob: -4.278962135314941
    10. ' goods' → logprob: -4.653962135314941

Token 231: ' best' (ID: 1636)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'items' → logprob: -1.1613669395446777
    2. ' items' → logprob: -1.5363669395446777
    3. 'ir' → logprob: -1.9113669395446777
    4. 'goods' → logprob: -2.2863669395446777
    5. ' goods' → logprob: -2.5363669395446777
    6. ' corresponding' → logprob: -3.4113669395446777
    7. 'ms' → logprob: -4.786366939544678
    8. '#' → logprob: -4.911366939544678
    9. 'market' → logprob: -5.161366939544678
    10. ' subset' → logprob: -5.286366939544678

Token 232: ' set' (ID: 920)
  Prédit: 'purchase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'purchase' → logprob: -1.3211688995361328
    2. 'profit' → logprob: -1.5711688995361328
    3. 'price' → logprob: -2.321168899536133
    4. ' profit' → logprob: -3.196168899536133
    5. 'comb' → logprob: -3.446168899536133
    6. 'buy' → logprob: -3.696168899536133
    7. 'plan' → logprob: -3.821168899536133
    8. ' purchase' → logprob: -3.821168899536133
    9. ' subset' → logprob: -3.821168899536133
    10. 'subset' → logprob: -3.946168899536133

Token 233: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.5853627324104309
    2. 'of' → logprob: -1.7103626728057861
    3. 'for' → logprob: -2.585362672805786
    4. 'items' → logprob: -2.710362672805786
    5. 's' → logprob: -3.085362672805786
    6. ' for' → logprob: -3.835362672805786
    7. 'goods' → logprob: -5.085362911224365
    8. 'from' → logprob: -5.210362911224365
    9. 'profits' → logprob: -5.460362911224365
    10. ' items' → logprob: -5.585362911224365

Token 234: ' items' (ID: 4732)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.12581458687782288
    2. ' items' → logprob: -2.62581467628479
    3. 'goods' → logprob: -3.25081467628479
    4. ' goods' → logprob: -5.250814437866211
    5. 'market' → logprob: -8.250814437866211
    6. 'products' → logprob: -8.375814437866211
    7. 'markets' → logprob: -8.375814437866211
    8. '```' → logprob: -8.500814437866211
    9. 'item' → logprob: -9.000814437866211
    10. 'p' → logprob: -9.000814437866211

Token 235: ' buy' (ID: 3877)
  Prédit: 'profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'profit' → logprob: -0.6292338371276855
    2. 'profits' → logprob: -1.1292338371276855
    3. 'subset' → logprob: -3.6292338371276855
    4. ' profit' → logprob: -3.7542338371276855
    5. 'for' → logprob: -3.8792338371276855
    6. 'from' → logprob: -4.1292338371276855
    7. ' subsets' → logprob: -4.5042338371276855
    8. '_profit' → logprob: -4.5042338371276855
    9. ' for' → logprob: -4.7542338371276855
    10. ' profits' → logprob: -4.8792338371276855

Token 236: 'able' (ID: 562)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2870732545852661
    2. 'ing' → logprob: -1.4120732545852661
    3. 'for' → logprob: -1.6620732545852661
    4. 'able' → logprob: -2.0370731353759766
    5. ' for' → logprob: -3.6620731353759766
    6. ' subsets' → logprob: -3.9120731353759766
    7. '_subset' → logprob: -4.162073135375977
    8. 'from' → logprob: -4.162073135375977
    9. 'subset' → logprob: -4.162073135375977
    10. 'in' → logprob: -4.537073135375977

Token 237: ' within' (ID: 3518)
  Prédit: 'profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'profit' → logprob: -0.8212680816650391
    2. 'for' → logprob: -1.821268081665039
    3. 'profits' → logprob: -1.821268081665039
    4. 'from' → logprob: -2.821268081665039
    5. ' for' → logprob: -3.071268081665039
    6. ' profit' → logprob: -3.571268081665039
    7. 'subset' → logprob: -3.821268081665039
    8. ' subsets' → logprob: -4.071268081665039
    9. '_profit' → logprob: -4.446268081665039
    10. ',' → logprob: -4.696268081665039

Token 238: ' W' (ID: 486)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -1.3336372375488281
    2. 'each' → logprob: -1.3336372375488281
    3. 'T' → logprob: -1.7086372375488281
    4. 'W' → logprob: -2.083637237548828
    5. 'the' → logprob: -2.208637237548828
    6. 'budget' → logprob: -3.583637237548828
    7. ' each' → logprob: -5.333637237548828
    8. ' time' → logprob: -5.583637237548828
    9. 'limit' → logprob: -5.708637237548828
    10. ' the' → logprob: -6.208637237548828

Token 239: '
' (ID: 198)
  Prédit: 'profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'profit' → logprob: -0.3732408285140991
    2. 'profits' → logprob: -1.9982408285140991
    3. 'from' → logprob: -2.8732409477233887
    4. 'subset' → logprob: -3.1232409477233887
    5. ' profit' → logprob: -4.248240947723389
    6. '_profit' → logprob: -4.373240947723389
    7. ']' → logprob: -4.748240947723389
    8. 'max' → logprob: -4.873240947723389
    9. ' subsets' → logprob: -5.498240947723389
    10. ' profits' → logprob: -5.623240947723389

Token 240: 'from' (ID: 2845)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.2278163433074951
    2. 'from' → logprob: -1.4778163433074951
    3. 'for' → logprob: -1.7278163433074951
    4. '<|end|>' → logprob: -2.102816343307495
    5. ')' → logprob: -2.977816343307495
    6. ' for' → logprob: -3.477816343307495
    7. 'subset' → logprob: -4.102816581726074
    8. ' subsets' → logprob: -4.352816581726074
    9. ',' → logprob: -4.602816581726074
    10. 'def' → logprob: -4.852816581726074

Token 241: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.014867378398776054
    2. 'it' → logprob: -4.264867305755615
    3. 'math' → logprob: -8.264867782592773
    4. 'collections' → logprob: -8.514867782592773
    5. ' math' → logprob: -9.139867782592773
    6. 'heap' → logprob: -9.389867782592773
    7. '_it' → logprob: -11.139867782592773
    8. ' collections' → logprob: -12.014867782592773
    9. ' ' → logprob: -12.014867782592773
    10. ' functools' → logprob: -12.264867782592773

Token 242: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.4291682243347168
    2. 'import' → logprob: -1.0541682243347168
    3. '	import' → logprob: -8.554168701171875
    4. '```' → logprob: -9.804168701171875
    5. 'ertools' → logprob: -9.929168701171875
    6. ' itertools' → logprob: -9.929168701171875
    7. '_import' → logprob: -10.429168701171875
    8. 'from' → logprob: -10.929168701171875
    9. '.import' → logprob: -11.304168701171875
    10. '.' → logprob: -11.679168701171875

Token 243: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.0002751598076429218
    2. ' combinations' → logprob: -8.250275611877441
    3. 'chain' → logprob: -11.375275611877441
    4. 'product' → logprob: -13.250275611877441
    5. 'comb' → logprob: -15.000275611877441
    6. 'compress' → logprob: -15.500275611877441
    7. '	com' → logprob: -16.500274658203125
    8. '_com' → logprob: -17.000274658203125
    9. ' chain' → logprob: -18.125274658203125
    10. '(com' → logprob: -18.375274658203125

Token 244: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0352466106414795
    2. ',' → logprob: -1.1602466106414795
    3. 'from' → logprob: -2.1602466106414795
    4. '<|end|>' → logprob: -2.5352466106414795
    5. 'for' → logprob: -2.9102466106414795
    6. 'import' → logprob: -3.1602466106414795
    7. ',
' → logprob: -4.285246849060059
    8. ' for' → logprob: -5.535246849060059
    9. '<|end|>' → logprob: -5.660246849060059
    10. 'com' → logprob: -5.785246849060059

Token 245: 'product' (ID: 5260)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.48704421520233154
    2. 'product' → logprob: -0.9870442152023315
    3. 'com' → logprob: -4.612044334411621
    4. ' chain' → logprob: -6.237044334411621
    5. 'per' → logprob: -7.237044334411621
    6. ' product' → logprob: -8.737044334411621
    7. ' permutations' → logprob: -9.487044334411621
    8. 'acc' → logprob: -10.862044334411621
    9. 'compress' → logprob: -11.737044334411621
    10. ' accumulate' → logprob: -12.987044334411621

Token 246: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3841004371643066
    2. 'import' → logprob: -1.6341004371643066
    3. 'from' → logprob: -1.7591004371643066
    4. ',' → logprob: -1.7591004371643066
    5. 'for' → logprob: -1.8841004371643066
    6. 'def' → logprob: -3.8841004371643066
    7. ',
' → logprob: -5.134100437164307
    8. '\n' → logprob: -5.259100437164307
    9. '

' → logprob: -5.884100437164307
    10. ':' → logprob: -6.259100437164307

Token 247: '#' (ID: 2)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8337534666061401
    2. 'for' → logprob: -1.2087534666061401
    3. 'def' → logprob: -2.5837535858154297
    4. 'profit' → logprob: -3.2087535858154297
    5. 'profits' → logprob: -3.7087535858154297
    6. 'best' → logprob: -3.9587535858154297
    7. ')' → logprob: -4.58375358581543
    8. 'import' → logprob: -4.70875358581543
    9. '(' → logprob: -4.70875358581543
    10. 'subset' → logprob: -4.70875358581543

Token 248: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25039735436439514
    2. 'def' → logprob: -2.2503974437713623
    3. 'profit' → logprob: -3.5003974437713623
    4. 'all' → logprob: -4.250397205352783
    5. 'city' → logprob: -4.250397205352783
    6. 'from' → logprob: -4.250397205352783
    7. 'max' → logprob: -4.500397205352783
    8. 'items' → logprob: -5.125397205352783
    9. 'best' → logprob: -5.250397205352783
    10. '#' → logprob: -5.375397205352783

Token 249: ' each' (ID: 2454)
  Prédit: ' subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' subset' → logprob: -1.1656458377838135
    2. 'subset' → logprob: -1.1656458377838135
    3. 'mask' → logprob: -2.4156458377838135
    4. ' s' → logprob: -3.0406458377838135
    5. ' mask' → logprob: -3.1656458377838135
    6. 's' → logprob: -3.2906458377838135
    7. ' city' → logprob: -3.6656458377838135
    8. 'city' → logprob: -4.290645599365234
    9. 'S' → logprob: -4.290645599365234
    10. ' size' → logprob: -4.540645599365234

Token 250: ' city' (ID: 5030)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.6559723019599915
    2. ' subset' → logprob: -1.0309722423553467
    3. 'S' → logprob: -3.6559722423553467
    4. 'mask' → logprob: -3.6559722423553467
    5. ' city' → logprob: -4.280972480773926
    6. 'city' → logprob: -4.780972480773926
    7. 's' → logprob: -4.905972480773926
    8. ' mask' → logprob: -5.155972480773926
    9. 'size' → logprob: -5.155972480773926
    10. 'cities' → logprob: -5.155972480773926

Token 251: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8480533361434937
    2. ' in' → logprob: -1.2230533361434937
    3. 'subset' → logprob: -2.098053455352783
    4. ' subset' → logprob: -2.723053455352783
    5. '_subset' → logprob: -3.848053455352783
    6. 's' → logprob: -4.098053455352783
    7. 'in' → logprob: -4.223053455352783
    8. ' s' → logprob: -5.473053455352783
    9. 'c' → logprob: -5.598053455352783
    10. 'S' → logprob: -5.723053455352783

Token 252: ' compute' (ID: 23864)
  Prédit: ' city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' city' → logprob: -0.7419076561927795
    2. 'city' → logprob: -1.6169075965881348
    3. ' best' → logprob: -2.9919075965881348
    4. 'best' → logprob: -3.3669075965881348
    5. ' items' → logprob: -3.8669075965881348
    6. 'items' → logprob: -3.9919075965881348
    7. ' buy' → logprob: -4.116907596588135
    8. 'buy' → logprob: -4.241907596588135
    9. 'max' → logprob: -4.491907596588135
    10. ' can' → logprob: -4.491907596588135

Token 253: ' profit' (ID: 15971)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -1.2899339199066162
    2. ' best' → logprob: -1.6649339199066162
    3. ' the' → logprob: -1.7899339199066162
    4. ' all' → logprob: -2.539933919906616
    5. 'max' → logprob: -3.039933919906616
    6. 'all' → logprob: -3.164933919906616
    7. 'the' → logprob: -3.289933919906616
    8. ' max' → logprob: -3.414933919906616
    9. 'profit' → logprob: -3.539933919906616
    10. ' profit' → logprob: -4.039934158325195

Token 254: ' per' (ID: 777)
  Prédit: 'profits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'profits' → logprob: -0.6641005873680115
    2. 'city' → logprob: -1.0391006469726562
    3. 'profit' → logprob: -2.4141006469726562
    4. 'for' → logprob: -4.039100646972656
    5. 'per' → logprob: -5.414100646972656
    6. 'prof' → logprob: -5.789100646972656
    7. 'buy' → logprob: -5.789100646972656
    8. 'purchase' → logprob: -5.914100646972656
    9. 'pro' → logprob: -6.539100646972656
    10. 'and' → logprob: -6.664100646972656

Token 255: ' item' (ID: 2169)
  Prédit: 'item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -1.0280265808105469
    2. 'city' → logprob: -1.5280265808105469
    3. 'subset' → logprob: -1.9030265808105469
    4. 'market' → logprob: -2.403026580810547
    5. 'items' → logprob: -2.653026580810547
    6. ' city' → logprob: -4.153026580810547
    7. ' item' → logprob: -4.403026580810547
    8. ' subset' → logprob: -4.403026580810547
    9. 'goods' → logprob: -4.653026580810547
    10. 'unit' → logprob: -4.653026580810547

Token 256: ':' (ID: 25)
  Prédit: 'profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'profit' → logprob: -0.766792356967926
    2. 'profits' → logprob: -0.891792356967926
    3. 'city' → logprob: -2.2667922973632812
    4. 'per' → logprob: -5.016792297363281
    5. 'for' → logprob: -5.891792297363281
    6. 'prof' → logprob: -6.016792297363281
    7. ' profits' → logprob: -6.141792297363281
    8. 'item' → logprob: -6.266792297363281
    9. 'purchase' → logprob: -7.016792297363281
    10. ' profit' → logprob: -7.016792297363281

Token 257: ' buy' (ID: 3877)
  Prédit: 'profits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'profits' → logprob: -0.9335888028144836
    2. 'city' → logprob: -1.8085887432098389
    3. ' profits' → logprob: -1.9335887432098389
    4. 'profit' → logprob: -1.9335887432098389
    5. ' city' → logprob: -2.683588743209839
    6. ' profit' → logprob: -3.058588743209839
    7. 'for' → logprob: -4.558588981628418
    8. 'prof' → logprob: -4.683588981628418
    9. ' for' → logprob: -5.183588981628418
    10. 'pro' → logprob: -6.433588981628418

Token 258: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -1.0653488636016846
    2. 'price' → logprob: -2.1903488636016846
    3. '_prices' → logprob: -2.8153488636016846
    4. ',' → logprob: -2.9403488636016846
    5. '=' → logprob: -2.9403488636016846
    6. 'ing' → logprob: -3.3153488636016846
    7. ' =' → logprob: -3.3153488636016846
    8. 's' → logprob: -3.4403488636016846
    9. 'prices' → logprob: -3.5653488636016846
    10. 'able' → logprob: -3.6903488636016846

Token 259: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9946659207344055
    2. ',' → logprob: -1.3696658611297607
    3. '=' → logprob: -1.7446658611297607
    4. ' =' → logprob: -2.3696658611297607
    5. 's' → logprob: -3.8696658611297607
    6. ' -' → logprob: -4.24466609954834
    7. ')' → logprob: -4.74466609954834
    8. '-cost' → logprob: -4.74466609954834
    9. ',p' → logprob: -5.36966609954834
    10. 'for' → logprob: -5.49466609954834

Token 260: ' market' (ID: 2910)
  Prédit: 'sell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sell' → logprob: -0.7364157438278198
    2. 'items' → logprob: -0.8614157438278198
    3. ' items' → logprob: -2.8614158630371094
    4. ' sell' → logprob: -3.4864158630371094
    5. 'p' → logprob: -5.486415863037109
    6. '(items' → logprob: -6.236415863037109
    7. 'selling' → logprob: -7.111415863037109
    8. 'price' → logprob: -7.486415863037109
    9. ' p' → logprob: -7.611415863037109
    10. 'sale' → logprob: -7.986415863037109

Token 261: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -0.38683637976646423
    2. 'price' → logprob: -1.5118364095687866
    3. ')' → logprob: -2.886836290359497
    4. '[' → logprob: -4.761836528778076
    5. 's' → logprob: -5.011836528778076
    6. 'p' → logprob: -5.511836528778076
    7. ' price' → logprob: -5.761836528778076
    8. '_s' → logprob: -6.136836528778076
    9. '_prices' → logprob: -6.386836528778076
    10. '_sell' → logprob: -6.386836528778076

Token 262: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3838670551776886
    2. ' for' → logprob: -2.383867025375366
    3. 'prices' → logprob: -2.633867025375366
    4. ',' → logprob: -3.508867025375366
    5. 'items' → logprob: -3.883867025375366
    6. '<|end|>' → logprob: -4.008867263793945
    7. '#' → logprob: -4.133867263793945
    8. '
' → logprob: -4.508867263793945
    9. 'price' → logprob: -4.633867263793945
    10. 'profit' → logprob: -4.883867263793945

Token 263: 'profit' (ID: 40796)
  Prédit: 'profits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'profits' → logprob: -0.8247985243797302
    2. ')' → logprob: -1.824798583984375
    3. 'profit' → logprob: -1.824798583984375
    4. 'for' → logprob: -2.824798583984375
    5. '<|end|>' → logprob: -3.199798583984375
    6. '_profit' → logprob: -3.574798583984375
    7. ']' → logprob: -3.699798583984375
    8. ' profits' → logprob: -3.949798583984375
    9. 'prices' → logprob: -4.574798583984375
    10. 's' → logprob: -4.574798583984375

Token 264: '_per' (ID: 10938)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07693883776664734
    2. 's' → logprob: -3.7019388675689697
    3. '_per' → logprob: -4.076938629150391
    4. ' =' → logprob: -4.326938629150391
    5. '={}' → logprob: -4.701938629150391
    6. '=[]' → logprob: -5.076938629150391
    7. '=[' → logprob: -6.326938629150391
    8. 'per' → logprob: -7.076938629150391
    9. '_=' → logprob: -8.20193862915039
    10. '={' → logprob: -8.57693862915039

Token 265: '_city' (ID: 60413)
  Prédit: 'item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -0.9596724510192871
    2. '_item' → logprob: -1.334672451019287
    3. '=' → logprob: -1.959672451019287
    4. 'city' → logprob: -2.209672451019287
    5. '_city' → logprob: -2.834672451019287
    6. '=item' → logprob: -3.834672451019287
    7. ' =' → logprob: -4.209672451019287
    8. ' item' → logprob: -6.209672451019287
    9. '_' → logprob: -6.709672451019287
    10. 's' → logprob: -6.834672451019287

Token 266: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.054996930062770844
    2. ' =' → logprob: -3.929996967315674
    3. '=[]' → logprob: -3.929996967315674
    4. '={}' → logprob: -4.679996967315674
    5. '=[' → logprob: -5.429996967315674
    6. '={' → logprob: -8.304996490478516
    7. '=[]
' → logprob: -9.429996490478516
    8. '={}
' → logprob: -9.804996490478516
    9. '=[[' → logprob: -10.304996490478516
    10. '[' → logprob: -10.429996490478516

Token 267: 'dict' (ID: 20993)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.43210887908935547
    2. '[]' → logprob: -2.1821088790893555
    3. '[' → logprob: -2.5571088790893555
    4. '0' → logprob: -2.6821088790893555
    5. 'dict' → logprob: -3.1821088790893555
    6. '{' → logprob: -3.6821088790893555
    7. 'items' → logprob: -4.9321088790893555
    8. '[-' → logprob: -5.3071088790893555
    9. '{})' → logprob: -5.6821088790893555
    10. '[p' → logprob: -6.4321088790893555

Token 268: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3612102270126343
    2. '()]' → logprob: -1.2362102270126343
    3. ']' → logprob: -4.861210346221924
    4. '()]
' → logprob: -6.361210346221924
    5. 'for' → logprob: -6.736210346221924
    6. '()
' → logprob: -7.236210346221924
    7. '((' → logprob: -7.861210346221924
    8. '(zip' → logprob: -8.236209869384766
    9. ']()' → logprob: -8.986209869384766
    10. '(s' → logprob: -9.236209869384766

Token 269: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7614430785179138
    2. ' for' → logprob: -1.0114431381225586
    3. ']' → logprob: -2.0114431381225586
    4. '()' → logprob: -3.5114431381225586
    5. ')' → logprob: -5.886443138122559
    6. ']
' → logprob: -6.636443138122559
    7. '   ' → logprob: -7.636443138122559
    8. '()]' → logprob: -7.761443138122559
    9. ']

' → logprob: -8.261443138122559
    10. '	for' → logprob: -9.511443138122559

Token 270: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.025054877623915672
    2. ' in' → logprob: -4.275054931640625
    3. ' range' → logprob: -5.525054931640625
    4. '_city' → logprob: -5.900054931640625
    5. ' _' → logprob: -6.150054931640625
    6. 'in' → logprob: -7.275054931640625
    7. '_range' → logprob: -7.275054931640625
    8. '_c' → logprob: -8.900054931640625
    9. '_i' → logprob: -8.900054931640625
    10. '_in' → logprob: -9.025054931640625

Token 271: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06199883669614792
    2. ' range' → logprob: -2.8119988441467285
    3. 'in' → logprob: -10.68699836730957
    4. '_' → logprob: -12.06199836730957
    5. ' in' → logprob: -13.43699836730957
    6. '(range' → logprob: -14.31199836730957
    7. '_range' → logprob: -14.93699836730957
    8. ' ' → logprob: -16.31199836730957
    9. ')' → logprob: -17.93699836730957
    10. 'N' → logprob: -18.18699836730957

Token 272: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004078401252627373
    2. ' range' → logprob: -5.504078388214111
    3. '_' → logprob: -17.504077911376953
    4. '(range' → logprob: -17.504077911376953
    5. '_range' → logprob: -18.129077911376953
    6. '   ' → logprob: -20.004077911376953
    7. ']' → logprob: -20.129077911376953
    8. '	range' → logprob: -20.129077911376953
    9. 'in' → logprob: -20.254077911376953
    10. 'N' → logprob: -20.379077911376953

Token 273: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.04067429527640343
    2. 'N' → logprob: -3.6656742095947266
    3. 'range' → logprob: -4.415674209594727
    4. ' range' → logprob: -6.290674209594727
    5. '(M' → logprob: -9.165674209594727
    6. ' (' → logprob: -9.540674209594727
    7. ' N' → logprob: -9.665674209594727
    8. '(range' → logprob: -9.665674209594727
    9. '(' → logprob: -11.415674209594727
    10. 'M' → logprob: -12.040674209594727

Token 274: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.024070000275969505
    2. ')]
' → logprob: -3.7740700244903564
    3. '+' → logprob: -8.274069786071777
    4. ')]
' → logprob: -8.274069786071777
    5. ')]

' → logprob: -8.524069786071777
    6. ' )' → logprob: -9.274069786071777
    7. ')' → logprob: -11.024069786071777
    8. ')])' → logprob: -13.524069786071777
    9. ')][' → logprob: -13.899069786071777
    10. ']' → logprob: -14.524069786071777

Token 275: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4260243773460388
    2. ' for' → logprob: -1.1760244369506836
    3. ')' → logprob: -3.5510244369506836
    4. '<|end|>' → logprob: -5.426024436950684
    5. ']' → logprob: -5.801024436950684
    6. '
' → logprob: -7.676024436950684
    7. ' 
' → logprob: -8.051024436950684
    8. ' ' → logprob: -8.926024436950684
    9. '   ' → logprob: -8.926024436950684
    10. '_' → logprob: -9.051024436950684

Token 276: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.057844869792461395
    2. ' i' → logprob: -3.057844877243042
    3. ' city' → logprob: -5.432844638824463
    4. 'city' → logprob: -5.432844638824463
    5. 'c' → logprob: -8.432845115661621
    6. 'idx' → logprob: -9.557845115661621
    7. '_i' → logprob: -9.682845115661621
    8. ' idx' → logprob: -10.432845115661621
    9. '_city' → logprob: -10.432845115661621
    10. ' c' → logprob: -10.932845115661621

Token 277: ',(' (ID: 27243)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07906505465507507
    2. 'in' → logprob: -2.5790650844573975
    3. ',' → logprob: -8.704065322875977
    4. 'range' → logprob: -12.954065322875977
    5. ' ' → logprob: -13.329065322875977
    6. 's' → logprob: -14.329065322875977
    7. '```' → logprob: -14.329065322875977
    8. '_' → logprob: -14.579065322875977
    9. ',_' → logprob: -14.579065322875977
    10. ' ,' → logprob: -14.579065322875977

Token 278: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5527268052101135
    2. '_,' → logprob: -0.9277268052101135
    3. '_' → logprob: -4.802726745605469
    4. '_x' → logprob: -4.927726745605469
    5. 'm' → logprob: -5.552726745605469
    6. 's' → logprob: -5.802726745605469
    7. 'items' → logprob: -6.177726745605469
    8. 'markets' → logprob: -7.427726745605469
    9. '_m' → logprob: -8.052726745605469
    10. 'market' → logprob: -8.302726745605469

Token 279: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.007856338284909725
    2. ',' → logprob: -4.882856369018555
    3. ',p' → logprob: -9.132856369018555
    4. ',v' → logprob: -10.257856369018555
    5. ',w' → logprob: -10.507856369018555
    6. '_,' → logprob: -10.757856369018555
    7. ',m' → logprob: -11.007856369018555
    8. ' ,' → logprob: -11.382856369018555
    9. ',s' → logprob: -11.757856369018555
    10. 'y' → logprob: -12.882856369018555

Token 280: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00030721822986379266
    2. '_,' → logprob: -9.500307083129883
    3. ',g' → logprob: -10.250307083129883
    4. ',_' → logprob: -10.250307083129883
    5. ',v' → logprob: -10.500307083129883
    6. ',r' → logprob: -10.500307083129883
    7. ',p' → logprob: -10.625307083129883
    8. ',item' → logprob: -10.875307083129883
    9. ',)' → logprob: -11.500307083129883
    10. ',a' → logprob: -11.500307083129883

Token 281: 'goods' (ID: 43046)
  Prédit: 'goods'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goods' → logprob: -0.0024210833944380283
    2. ' goods' → logprob: -6.502420902252197
    3. 'items' → logprob: -7.502420902252197
    4. 'g' → logprob: -8.002421379089355
    5. 'markets' → logprob: -11.502421379089355
    6. 'd' → logprob: -11.877421379089355
    7. 'market' → logprob: -12.502421379089355
    8. 'm' → logprob: -13.502421379089355
    9. 'dict' → logprob: -13.502421379089355
    10. '_goods' → logprob: -13.627421379089355

Token 282: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011105302110081539
    2. 'in' → logprob: -9.250110626220703
    3. ' )' → logprob: -11.750110626220703
    4. 'items' → logprob: -12.750110626220703
    5. ' in' → logprob: -14.000110626220703
    6. ')=' → logprob: -14.625110626220703
    7. ')
' → logprob: -14.750110626220703
    8. '   ' → logprob: -15.000110626220703
    9. ',)' → logprob: -15.250110626220703
    10. '_)' → logprob: -15.375110626220703

Token 283: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2255505919456482
    2. ' in' → logprob: -1.600550651550293
    3. ')' → logprob: -9.225550651550293
    4. '   ' → logprob: -10.975550651550293
    5. '	in' → logprob: -11.725550651550293
    6. '
' → logprob: -12.975550651550293
    7. ',in' → logprob: -12.975550651550293
    8. '_in' → logprob: -13.350550651550293
    9. 'In' → logprob: -13.850550651550293
    10. '  ' → logprob: -13.850550651550293

Token 284: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0002683688362594694
    2. ' enumerate' → logprob: -8.25026798248291
    3. 'range' → logprob: -12.00026798248291
    4. 'items' → logprob: -14.87526798248291
    5. '   ' → logprob: -15.50026798248291
    6. '
' → logprob: -16.125268936157227
    7. 'markets' → logprob: -16.250268936157227
    8. 'en' → logprob: -17.250268936157227
    9. 'zip' → logprob: -17.375268936157227
    10. ' ' → logprob: -17.750268936157227

Token 285: '(mark' (ID: 126438)
  Prédit: 'markets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'markets' → logprob: -0.0939330905675888
    2. ' markets' → logprob: -2.59393310546875
    3. 'enumer' → logprob: -5.09393310546875
    4. 'range' → logprob: -5.96893310546875
    5. '(mark' → logprob: -6.21893310546875
    6. ')' → logprob: -6.46893310546875
    7. ' enumerate' → logprob: -6.84393310546875
    8. 'market' → logprob: -7.59393310546875
    9. ' range' → logprob: -8.71893310546875
    10. 'items' → logprob: -8.96893310546875

Token 286: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.0004960790392942727
    2. ')' → logprob: -9.000495910644531
    3. 's' → logprob: -9.000495910644531
    4. 'et' → logprob: -9.375495910644531
    5. 'markets' → logprob: -10.375495910644531
    6. 'items' → logprob: -11.000495910644531
    7. 'arks' → logprob: -11.125495910644531
    8. 'sets' → logprob: -11.250495910644531
    9. ')
' → logprob: -11.625495910644531
    10. 'ts' → logprob: -12.000495910644531

Token 287: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1604532152414322
    2. '):' → logprob: -1.910453200340271
    3. '   ' → logprob: -9.285452842712402
    4. '):
' → logprob: -9.410452842712402
    5. ':' → logprob: -10.160452842712402
    6. ':
' → logprob: -11.785452842712402
    7. ')' → logprob: -12.910452842712402
    8. '):

' → logprob: -13.285452842712402
    9. ' ):
' → logprob: -13.285452842712402
    10. ' ' → logprob: -13.785452842712402

Token 288: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034370917826890945
    2. ' for' → logprob: -3.4093708992004395
    3. 'for' → logprob: -7.2843708992004395
    4. '   ' → logprob: -11.284371376037598
    5. ':' → logprob: -11.534371376037598
    6. '	for' → logprob: -12.034371376037598
    7. ' ' → logprob: -12.784371376037598
    8. ',' → logprob: -13.034371376037598
    9. '
' → logprob: -13.534371376037598
    10. '#' → logprob: -14.034371376037598

Token 289: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04364883899688721
    2. ' for' → logprob: -3.5436487197875977
    3. '   ' → logprob: -4.293648719787598
    4. 'profit' → logprob: -9.793648719787598
    5. ' profit' → logprob: -10.668648719787598
    6. 'city' → logprob: -10.668648719787598
    7. ' ' → logprob: -11.293648719787598
    8. ' city' → logprob: -11.918648719787598
    9. 'dp' → logprob: -11.918648719787598
    10. '	for' → logprob: -12.793648719787598

Token 290: ' s' (ID: 265)
  Prédit: 'item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -0.47150081396102905
    2. 'r' → logprob: -1.4715008735656738
    3. ' item' → logprob: -2.346500873565674
    4. 's' → logprob: -3.471500873565674
    5. ' r' → logprob: -4.346500873565674
    6. ' s' → logprob: -5.846500873565674
    7. 'k' → logprob: -6.596500873565674
    8. 'g' → logprob: -7.596500873565674
    9. 'it' → logprob: -7.846500873565674
    10. 'itm' → logprob: -7.971500873565674

Token 291: ',v' (ID: 30680)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.16614986956119537
    2. ' in' → logprob: -2.041149854660034
    3. ',v' → logprob: -4.791150093078613
    4. ',p' → logprob: -5.041150093078613
    5. ',' → logprob: -5.166150093078613
    6. ',in' → logprob: -6.666150093078613
    7. ',val' → logprob: -7.916150093078613
    8. ',value' → logprob: -8.041150093078613
    9. ',item' → logprob: -8.541150093078613
    10. ',t' → logprob: -9.416150093078613

Token 292: '_p' (ID: 1359)
  Prédit: ',p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',p' → logprob: -0.009766360744833946
    2. ',' → logprob: -4.759766578674316
    3. 'p' → logprob: -7.884766578674316
    4. 'in' → logprob: -8.259766578674316
    5. ' in' → logprob: -8.384766578674316
    6. ' ,' → logprob: -8.884766578674316
    7. ',_' → logprob: -9.259766578674316
    8. ',q' → logprob: -11.634766578674316
    9. ',in' → logprob: -11.759766578674316
    10. ',v' → logprob: -12.009766578674316

Token 293: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.20196248590946198
    2. ' in' → logprob: -1.7019624710083008
    3. 's' → logprob: -8.2019624710083
    4. ',' → logprob: -8.9519624710083
    5. ',p' → logprob: -10.4519624710083
    6. ',v' → logprob: -10.8269624710083
    7. 'p' → logprob: -11.3269624710083
    8. '_in' → logprob: -11.4519624710083
    9. ',in' → logprob: -11.4519624710083
    10. 'inp' → logprob: -11.5769624710083

Token 294: ' items' (ID: 4732)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.0006790731567889452
    2. ' items' → logprob: -7.750679016113281
    3. 'enumer' → logprob: -8.375679016113281
    4. '.items' → logprob: -11.750679016113281
    5. ' enumerate' → logprob: -12.875679016113281
    6. '(items' → logprob: -13.500679016113281
    7. '[' → logprob: -13.625679016113281
    8. 'range' → logprob: -14.125679016113281
    9. 'zip' → logprob: -14.125679016113281
    10. '[(' → logprob: -14.375679016113281

Token 295: '.items' (ID: 19607)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.04022436589002609
    2. '.items' → logprob: -3.915224313735962
    3. 'items' → logprob: -4.290224552154541
    4. '(i' → logprob: -6.040224552154541
    5. '[s' → logprob: -6.790224552154541
    6. 's' → logprob: -6.915224552154541
    7. '   ' → logprob: -8.290224075317383
    8. '():
' → logprob: -8.790224075317383
    9. '```' → logprob: -8.790224075317383
    10. ':
' → logprob: -8.915224075317383

Token 296: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.31343868374824524
    2. '():' → logprob: -1.3134386539459229
    3. '()' → logprob: -9.438438415527344
    4. '():
' → logprob: -10.063438415527344
    5. '()):
' → logprob: -10.188438415527344
    6. '():

' → logprob: -11.813438415527344
    7. ':' → logprob: -12.438438415527344
    8. '):' → logprob: -12.813438415527344
    9. '):
' → logprob: -13.438438415527344
    10. '(' → logprob: -14.438438415527344

Token 297: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06355410814285278
    2. ':' → logprob: -3.813554048538208
    3. '   ' → logprob: -4.188554286956787
    4. ',' → logprob: -4.688554286956787
    5. ':
' → logprob: -5.938554286956787
    6. 'v' → logprob: -6.438554286956787
    7. '
' → logprob: -6.438554286956787
    8. '):
' → logprob: -6.563554286956787
    9. '[' → logprob: -6.688554286956787
    10. '        
' → logprob: -6.688554286956787

Token 298: ' if' (ID: 538)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.8138478398323059
    2. '           ' → logprob: -2.063847780227661
    3. '(v' → logprob: -2.563847780227661
    4. 'profit' → logprob: -2.563847780227661
    5. '       ' → logprob: -2.938847780227661
    6. 'if' (adapté à ' if') → logprob: -3.063847780227661
    7. '   ' → logprob: -3.188847780227661
    8. ' v' → logprob: -3.563847780227661
    9. 's' → logprob: -3.813847780227661
    10. 'items' → logprob: -4.31384801864624

Token 299: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0052360063418745995
    2. ' s' → logprob: -5.2552361488342285
    3. '_s' → logprob: -14.13023567199707
    4. '(s' → logprob: -14.25523567199707
    5. '	s' → logprob: -15.75523567199707
    6. '   ' → logprob: -15.88023567199707
    7. 'items' → logprob: -16.25523567199707
    8. 'v' → logprob: -16.38023567199707
    9. 'goods' → logprob: -16.50523567199707
    10. '{s' → logprob: -16.63023567199707

Token 300: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5248171091079712
    2. ' in' → logprob: -0.8998171091079712
    3. ' not' → logprob: -6.774816989898682
    4. 'not' → logprob: -8.14981746673584
    5. 's' → logprob: -8.77481746673584
    6. '[' → logprob: -10.64981746673584
    7. ' ' → logprob: -10.64981746673584
    8. '   ' → logprob: -11.14981746673584
    9. ')' → logprob: -11.52481746673584
    10. ' s' → logprob: -12.27481746673584

Token 301: ' goods' (ID: 14854)
  Prédit: 'goods'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goods' → logprob: -3.7146746763028204e-05
    2. ' goods' → logprob: -10.25003719329834
    3. 'profit' → logprob: -14.00003719329834
    4. 'profits' → logprob: -14.87503719329834
    5. 'items' → logprob: -15.12503719329834
    6. 'go' → logprob: -15.62503719329834
    7. 'foods' → logprob: -16.875036239624023
    8. 'good' → logprob: -17.125036239624023
    9. '   ' → logprob: -18.000036239624023
    10. '(goods' → logprob: -18.125036239624023

Token 302: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8010413646697998
    2. ':' → logprob: -1.4260413646697998
    3. ':
' → logprob: -1.4260413646697998
    4. 'and' → logprob: -2.6760413646698
    5. '           ' → logprob: -6.926041603088379
    6. '       ' → logprob: -8.176041603088379
    7. '):
' → logprob: -8.551041603088379
    8. '   ' → logprob: -9.676041603088379
    9. '):' → logprob: -9.801041603088379
    10. ',' → logprob: -10.051041603088379

Token 303: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5328305959701538
    2. ':' → logprob: -1.5328305959701538
    3. ' and' → logprob: -2.2828307151794434
    4. ':
' → logprob: -2.4078307151794434
    5. ',' → logprob: -6.407830715179443
    6. '       ' → logprob: -6.657830715179443
    7. 'and' → logprob: -6.907830715179443
    8. '):
' → logprob: -8.282830238342285
    9. '   ' → logprob: -8.657830238342285
    10. ' =' → logprob: -9.282830238342285

Token 304: ' buy' (ID: 3877)
  Prédit: 'profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'profit' → logprob: -0.08679989725351334
    2. ' profit' → logprob: -2.9617998600006104
    3. 'buy' (adapté à ' buy') → logprob: -4.4618000984191895
    4. 'cost' → logprob: -5.0868000984191895
    5. '           ' → logprob: -5.3368000984191895
    6. 'price' → logprob: -5.7118000984191895
    7. 'p' → logprob: -6.0868000984191895
    8. '   ' → logprob: -6.9618000984191895
    9. ' buy' → logprob: -7.0868000984191895
    10. ' cost' → logprob: -8.211799621582031

Token 305: '_p' (ID: 1359)
  Prédit: '_price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -0.0015134313143789768
    2. '_p' → logprob: -6.876513481140137
    3. 'price' → logprob: -8.001513481140137
    4. '=_' → logprob: -10.376513481140137
    5. 'p' → logprob: -10.751513481140137
    6. '=' → logprob: -11.001513481140137
    7. '_prices' → logprob: -11.001513481140137
    8. ',_' → logprob: -11.626513481140137
    9. '```' → logprob: -11.626513481140137
    10. 's' → logprob: -12.251513481140137

Token 306: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09987359493970871
    2. ' =' → logprob: -3.0998735427856445
    3. 'rice' → logprob: -3.2248735427856445
    4. '=item' → logprob: -6.2248735427856445
    5. '=s' → logprob: -6.3498735427856445
    6. 'rices' → logprob: -6.7248735427856445
    7. ',' → logprob: -6.8498735427856445
    8. '=p' → logprob: -6.8498735427856445
    9. '=int' → logprob: -6.8498735427856445
    10. '_price' → logprob: -7.0998735427856445

Token 307: 'goods' (ID: 43046)
  Prédit: 'goods'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goods' → logprob: -0.006415147799998522
    2. ' goods' → logprob: -5.131415367126465
    3. 'items' → logprob: -7.881415367126465
    4. 'int' → logprob: -10.256415367126465
    5. 'profit' → logprob: -10.881415367126465
    6. 'markets' → logprob: -11.006415367126465
    7. 'v' → logprob: -11.756415367126465
    8. 'p' → logprob: -12.131415367126465
    9. 'profits' → logprob: -12.381415367126465
    10. 'go' → logprob: -12.381415367126465

Token 308: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -4.47757811343763e-05
    2. 's' → logprob: -10.125044822692871
    3. '[' → logprob: -12.875044822692871
    4. '[p' → logprob: -14.875044822692871
    5. '
' → logprob: -15.375044822692871
    6. '[r' → logprob: -15.375044822692871
    7. 'p' → logprob: -15.375044822692871
    8. ' s' → logprob: -16.000043869018555
    9. '(s' → logprob: -16.000043869018555
    10. ' [' → logprob: -16.000043869018555

Token 309: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.12750039994716644
    2. ']' → logprob: -2.127500295639038
    3. ']-' → logprob: -7.877500534057617
    4. '[' → logprob: -9.752500534057617
    5. ']

' → logprob: -10.127500534057617
    6. ']
' → logprob: -10.377500534057617
    7. '][' → logprob: -10.752500534057617
    8. ' ]
' → logprob: -11.627500534057617
    9. ']>' → logprob: -12.502500534057617
    10. ')
' → logprob: -12.502500534057617

Token 310: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17997607588768005
    2. '
' → logprob: -2.054975986480713
    3. '            
' → logprob: -4.554975986480713
    4. '-' → logprob: -5.054975986480713
    5. '       ' → logprob: -5.929975986480713
    6. ',' → logprob: -6.054975986480713
    7. 'profit' → logprob: -6.179975986480713
    8. '```' → logprob: -6.179975986480713
    9. '<|end|>' → logprob: -6.304975986480713
    10. '   ' → logprob: -6.554975986480713

Token 311: ' sell' (ID: 7437)
  Prédit: 'profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'profit' → logprob: -0.0437198132276535
    2. 'sell' (adapté à ' sell') → logprob: -4.16871976852417
    3. ' profit' → logprob: -4.66871976852417
    4. '           ' → logprob: -5.54371976852417
    5. 'prof' → logprob: -5.54371976852417
    6. 'if' → logprob: -5.54371976852417
    7. '               ' → logprob: -7.04371976852417
    8. 'cost' → logprob: -7.16871976852417
    9. 'price' → logprob: -7.54371976852417
    10. 'val' → logprob: -7.54371976852417

Token 312: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -7.052377623040229e-05
    2. '_price' → logprob: -10.375070571899414
    3. 'p' → logprob: -10.750070571899414
    4. '_v' → logprob: -11.500070571899414
    5. 'price' → logprob: -13.000070571899414
    6. '=' → logprob: -13.000070571899414
    7. 'v' → logprob: -14.375070571899414
    8. '```' → logprob: -14.750070571899414
    9. '=_' → logprob: -14.875070571899414
    10. '_' → logprob: -15.250070571899414

Token 313: '=v' (ID: 89140)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0005838918150402606
    2. '=item' → logprob: -8.25058364868164
    3. ' =' → logprob: -8.62558364868164
    4. ',' → logprob: -9.37558364868164
    5. '=v' → logprob: -11.00058364868164
    6. '=p' → logprob: -11.25058364868164
    7. '=w' → logprob: -11.87558364868164
    8. '=int' → logprob: -13.00058364868164
    9. '=_' → logprob: -13.00058364868164
    10. '=W' → logprob: -13.37558364868164

Token 314: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.007527243811637163
    2. '=v' → logprob: -6.6325273513793945
    3. 'p' → logprob: -6.8825273513793945
    4. '=' → logprob: -7.1325273513793945
    5. ',p' → logprob: -7.2575273513793945
    6. ' =' → logprob: -7.2575273513793945
    7. '[v' → logprob: -7.5075273513793945
    8. ',v' → logprob: -7.6325273513793945
    9. 'items' → logprob: -7.6325273513793945
    10. '[p' → logprob: -8.007527351379395

Token 315: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001790374517440796
    2. '-' → logprob: -6.626790523529053
    3. '=' → logprob: -7.751790523529053
    4. ' =' → logprob: -11.751790046691895
    5. '
' → logprob: -12.126790046691895
    6. ' -' → logprob: -12.501790046691895
    7. '#' → logprob: -12.876790046691895
    8. '```' → logprob: -12.876790046691895
    9. '   ' → logprob: -13.501790046691895
    10. '=[' → logprob: -13.501790046691895

Token 316: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017146894242614508
    2. '1' → logprob: -6.376714706420898
    3. '[' → logprob: -12.501714706420898
    4. ' ' → logprob: -13.001714706420898
    5. '
' → logprob: -13.251714706420898
    6. ')' → logprob: -13.751714706420898
    7. '][' → logprob: -14.189214706420898
    8. ']' → logprob: -14.314214706420898
    9. '   ' → logprob: -14.501714706420898
    10. '```' → logprob: -15.189214706420898

Token 317: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8639969825744629
    2. '-' → logprob: -0.9889969825744629
    3. ' -' → logprob: -2.113996982574463
    4. ')' → logprob: -3.363996982574463
    5. ']-' → logprob: -3.613996982574463
    6. '-p' → logprob: -5.363996982574463
    7. ' ]' → logprob: -5.863996982574463
    8. '-W' → logprob: -5.988996982574463
    9. '
' → logprob: -6.238996982574463
    10. '-s' → logprob: -6.738996982574463

Token 318: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18354515731334686
    2. '
' → logprob: -1.8085451126098633
    3. '            
' → logprob: -6.933545112609863
    4. 'profit' → logprob: -7.183545112609863
    5. ' profit' → logprob: -7.683545112609863
    6. ',' → logprob: -8.058545112609863
    7. '=' → logprob: -8.308545112609863
    8. '
' → logprob: -9.058545112609863
    9. '<|end|>' → logprob: -9.433545112609863
    10. '[' → logprob: -9.683545112609863

Token 319: ' prof' (ID: 1915)
  Prédit: 'profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'profit' → logprob: -0.008348612114787102
    2. 'if' → logprob: -5.38334846496582
    3. ' profit' → logprob: -6.00834846496582
    4. 'prof' (adapté à ' prof') → logprob: -7.13334846496582
    5. 'diff' → logprob: -8.50834846496582
    6. 'p' → logprob: -8.88334846496582
    7. ' if' → logprob: -10.63334846496582
    8. '           ' → logprob: -11.00834846496582
    9. 'pro' → logprob: -11.63334846496582
    10. 'val' → logprob: -11.75834846496582

Token 320: '=s' (ID: 32455)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0015873430529609323
    2. '=' → logprob: -6.501587390899658
    3. 'its' → logprob: -10.2515869140625
    4. ' =' → logprob: -11.2515869140625
    5. '=s' → logprob: -11.8765869140625
    6. '=item' → logprob: -12.0015869140625
    7. '_it' → logprob: -12.2515869140625
    8. '[it' → logprob: -12.7515869140625
    9. '   ' → logprob: -13.2515869140625
    10. '               ' → logprob: -13.6265869140625

Token 321: 'ell' (ID: 596)
  Prédit: 'ell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ell' → logprob: -0.12787191569805145
    2. '=' → logprob: -3.1278719902038574
    3. 'it' → logprob: -3.5028719902038574
    4. '_per' → logprob: -4.377871990203857
    5. 'sell' → logprob: -4.502871990203857
    6. ' =' → logprob: -5.127871990203857
    7. 'elling' → logprob: -6.127871990203857
    8. '=s' → logprob: -6.377871990203857
    9. 'ells' → logprob: -6.627871990203857
    10. 'el' → logprob: -6.627871990203857

Token 322: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.08014985173940659
    2. 'it' → logprob: -2.5801498889923096
    3. '_t' → logprob: -8.45514965057373
    4. '_' → logprob: -8.45514965057373
    5. 'itable' → logprob: -9.20514965057373
    6. '-p' → logprob: -9.70514965057373
    7. 'its' → logprob: -9.83014965057373
    8. '-' → logprob: -9.95514965057373
    9. '=' → logprob: -9.95514965057373
    10. '_it' → logprob: -9.95514965057373

Token 323: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6159607768058777
    2. ' -' → logprob: -0.8659607768058777
    3. '-buy' → logprob: -3.3659608364105225
    4. '-b' → logprob: -5.990960597991943
    5. '-p' → logprob: -6.740960597991943
    6. '-v' → logprob: -7.115960597991943
    7. '-w' → logprob: -9.115961074829102
    8. '-profit' → logprob: -10.740961074829102
    9. '-pro' → logprob: -10.865961074829102
    10. '-win' → logprob: -11.990961074829102

Token 324: ' buy' (ID: 3877)
  Prédit: 'buy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buy' → logprob: -0.0011718906462192535
    2. ' buy' → logprob: -6.751172065734863
    3. 'b' → logprob: -14.876172065734863
    4. '```' → logprob: -15.751172065734863
    5. '   ' → logprob: -16.001171112060547
    6. ' ' → logprob: -16.376171112060547
    7. '_buy' → logprob: -16.376171112060547
    8. '
' → logprob: -16.376171112060547
    9. 'profit' → logprob: -16.501171112060547
    10. ' ' → logprob: -16.626171112060547

Token 325: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -1.4974866644479334e-05
    2. 'p' → logprob: -12.000015258789062
    3. '_' → logprob: -12.625015258789062
    4. '_t' → logprob: -14.500015258789062
    5. ' _' → logprob: -14.812515258789062
    6. 'prof' → logprob: -14.875015258789062
    7. '_i' → logprob: -15.000015258789062
    8. '_prof' → logprob: -15.187515258789062
    9. '_q' → logprob: -15.250015258789062
    10. 'profit' → logprob: -15.437515258789062

Token 326: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0020810244604945183
    2. '
' → logprob: -6.877080917358398
    3. ' if' → logprob: -7.127080917358398
    4. 'if' → logprob: -9.377080917358398
    5. '<|end|>' → logprob: -9.752080917358398
    6. '               ' → logprob: -10.627080917358398
    7. '       ' → logprob: -11.127080917358398
    8. ',' → logprob: -11.252080917358398
    9. '            
' → logprob: -12.127080917358398
    10. '   ' → logprob: -12.252080917358398

Token 327: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00040576665196567774
    2. ' if' → logprob: -8.375405311584473
    3. '<|end|>' → logprob: -9.250405311584473
    4. ',' → logprob: -10.625405311584473
    5. 'if' → logprob: -10.875405311584473
    6. '               ' → logprob: -11.625405311584473
    7. '
' → logprob: -11.750405311584473
    8. '       ' → logprob: -12.375405311584473
    9. '<|end|>' → logprob: -12.625405311584473
    10. '                   ' → logprob: -13.500405311584473

Token 328: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.642875075340271
    2. '           ' → logprob: -0.892875075340271
    3. ' if' → logprob: -2.7678751945495605
    4. 'profit' → logprob: -6.5178751945495605
    5. ' profit' → logprob: -7.7678751945495605
    6. 'prof' → logprob: -10.517874717712402
    7. '               ' → logprob: -12.267874717712402
    8. 'profits' → logprob: -12.892874717712402
    9. '   ' → logprob: -13.142874717712402
    10. '       ' → logprob: -13.517874717712402

Token 329: ' prof' (ID: 1915)
  Prédit: 'prof'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prof' → logprob: -0.08894437551498413
    2. ' prof' → logprob: -2.463944435119629
    3. 'pro' → logprob: -13.463944435119629
    4. '	pro' → logprob: -14.213944435119629
    5. 's' → logprob: -14.338944435119629
    6. '_prof' → logprob: -14.588944435119629
    7. 'Prof' → logprob: -14.713944435119629
    8. ' ' → logprob: -14.838944435119629
    9. 'profit' → logprob: -15.588944435119629
    10. 'p' → logprob: -16.088943481445312

Token 330: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.014175145886838436
    2. ' >' → logprob: -4.264174938201904
    3. '>=' → logprob: -12.139175415039062
    4. '>
' → logprob: -12.639175415039062
    5. ')>' → logprob: -13.889175415039062
    6. '=' → logprob: -14.889175415039062
    7. '<=' → logprob: -15.139175415039062
    8. ' >
' → logprob: -15.514175415039062
    9. '>

' → logprob: -15.764175415039062
    10. '[' → logprob: -15.764175415039062

Token 331: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001964082010090351
    2. ' ' → logprob: -6.251964092254639
    3. '=' → logprob: -10.25196361541748
    4. '>' → logprob: -17.126964569091797
    5. ' =' → logprob: -18.126964569091797
    6. '```' → logprob: -18.314464569091797
    7. '۰' → logprob: -18.314464569091797
    8. '1' → logprob: -18.564464569091797
    9. 's' → logprob: -18.689464569091797
    10. '

' → logprob: -18.876964569091797

Token 332: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.10031407326459885
    2. ':' → logprob: -2.600314140319824
    3. '               ' → logprob: -3.975314140319824
    4. '           ' → logprob: -6.350314140319824
    5. '):
' → logprob: -7.850314140319824
    6. ',' → logprob: -9.100314140319824
    7. ' and' → logprob: -9.600314140319824
    8. ' :
' → logprob: -10.100314140319824
    9. ':

' → logprob: -11.225314140319824
    10. '       ' → logprob: -11.600314140319824

Token 333: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002775039756670594
    2. ' profit' → logprob: -6.002775192260742
    3. '           ' → logprob: -8.502775192260742
    4. 'profit' → logprob: -10.002775192260742
    5. ',' → logprob: -10.877775192260742
    6. '                   ' → logprob: -12.252775192260742
    7. '   ' → logprob: -12.252775192260742
    8. '	           ' → logprob: -12.377775192260742
    9. '              ' → logprob: -12.752775192260742
    10. '	       ' → logprob: -13.252775192260742

Token 334: ' profit' (ID: 15971)
  Prédit: ' profit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' profit' → logprob: -0.6347257494926453
    2. 'profit' (adapté à ' profit') → logprob: -0.7597257494926453
    3. '               ' → logprob: -6.259725570678711
    4. '   ' → logprob: -9.384725570678711
    5. '           ' → logprob: -9.384725570678711
    6. 'prof' → logprob: -11.259725570678711
    7. '                   ' → logprob: -11.509725570678711
    8. '	pro' → logprob: -11.634725570678711
    9. '
' → logprob: -12.759725570678711
    10. '_profit' → logprob: -12.884725570678711

Token 335: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -1.8624639324116288e-06
    2. '_for' → logprob: -15.250001907348633
    3. 's' → logprob: -15.375001907348633
    4. '=' → logprob: -15.625001907348633
    5. '
' → logprob: -15.625001907348633
    6. 'per' → logprob: -15.750001907348633
    7. '_pro' → logprob: -15.875001907348633
    8. ' _' → logprob: -15.875001907348633
    9. '_PER' → logprob: -16.500001907348633
    10. '   ' → logprob: -16.625001907348633

Token 336: '_city' (ID: 60413)
  Prédit: '_city'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_city' → logprob: -9.698698704596609e-05
    2. 'city' → logprob: -9.250097274780273
    3. ' city' → logprob: -14.875097274780273
    4. '_c' → logprob: -16.250097274780273
    5. '_CITY' → logprob: -16.625097274780273
    6. '[i' → logprob: -16.750097274780273
    7. '_country' → logprob: -16.875097274780273
    8. '_profit' → logprob: -17.000097274780273
    9. '[' → logprob: -17.125097274780273
    10. '_' → logprob: -17.375097274780273

Token 337: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.319370302458992e-06
    2. '][' → logprob: -13.250005722045898
    3. '[' → logprob: -13.500005722045898
    4. '[I' → logprob: -14.250005722045898
    5. ' [' → logprob: -14.375005722045898
    6. '[s' → logprob: -15.125005722045898
    7. ')[' → logprob: -15.250005722045898
    8. 'i' → logprob: -16.3750057220459
    9. '
' → logprob: -16.8750057220459
    10. '\[' → logprob: -16.8750057220459

Token 338: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0023775463923811913
    2. '[s' → logprob: -6.127377510070801
    3. ']' → logprob: -9.5023775100708
    4. ' ][' → logprob: -10.1273775100708
    5. '[' → logprob: -10.5023775100708
    6. '].' → logprob: -10.6273775100708
    7. ']=' → logprob: -12.1273775100708
    8. ')[' → logprob: -12.6273775100708
    9. '   ' → logprob: -12.7523775100708
    10. 's' → logprob: -12.8773775100708

Token 339: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -8.637786231702194e-05
    2. ' s' → logprob: -9.375086784362793
    3. '(s' → logprob: -13.500086784362793
    4. '(' → logprob: -16.500085830688477
    5. '_s' → logprob: -17.125085830688477
    6. ' (' → logprob: -17.750085830688477
    7. ']' → logprob: -18.375085830688477
    8. '
' → logprob: -18.500085830688477
    9. '{s' → logprob: -18.500085830688477
    10. '   ' → logprob: -18.875085830688477

Token 340: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.31371966004371643
    2. ']' → logprob: -1.313719630241394
    3. ']+=' → logprob: -7.938719749450684
    4. ']=(' → logprob: -9.438719749450684
    5. ' ]' → logprob: -11.313719749450684
    6. '=' → logprob: -12.438719749450684
    7. ']={' → logprob: -13.438719749450684
    8. ']=-' → logprob: -14.188719749450684
    9. ']]=' → logprob: -14.313719749450684
    10. ']='' → logprob: -14.438719749450684

Token 341: 'prof' (ID: 30733)
  Prédit: 'prof'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prof' → logprob: -0.00037132782745175064
    2. '(pro' → logprob: -8.000370979309082
    3. ' prof' → logprob: -10.875370979309082
    4. 'pro' → logprob: -11.875370979309082
    5. '(' → logprob: -12.125370979309082
    6. 'profit' → logprob: -12.875370979309082
    7. '(s' → logprob: -14.875370979309082
    8. 'prob' → logprob: -14.875370979309082
    9. ' (' → logprob: -15.250370979309082
    10. 'prot' → logprob: -15.375370979309082

Token 342: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 343: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 344: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 345: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 346: ' no' (ID: 860)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.31310707330703735
    2. 'continue' → logprob: -1.6881070137023926
    3. ' pass' → logprob: -3.5631070137023926
    4. '   ' → logprob: -4.188107013702393
    5. '<|end|>' → logprob: -4.438107013702393
    6. '           ' → logprob: -5.188107013702393
    7. ':' → logprob: -5.313107013702393
    8. '	continue' → logprob: -5.563107013702393
    9. 'pass' → logprob: -5.938107013702393
    10. ' else' → logprob: -5.938107013702393

Token 347: ' profit' (ID: 15971)
  Prédit: 'profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'profit' → logprob: -0.8205907344818115
    2. ' profit' → logprob: -2.0705907344818115
    3. 'continue' → logprob: -2.0705907344818115
    4. '<|end|>' → logprob: -2.5705907344818115
    5. 'pass' → logprob: -2.8205907344818115
    6. 't' → logprob: -3.0705907344818115
    7. ' continue' → logprob: -3.3205907344818115
    8. '...' → logprob: -4.070590972900391
    9. ' pass' → logprob: -4.195590972900391
    10. '#' → logprob: -4.820590972900391

Token 348: ';' (ID: 26)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 349: ' ignore' (ID: 17887)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 350: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 351: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 352: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16676989197731018
    2. 'from' → logprob: -2.2917699813842773
    3. '#' → logprob: -4.041769981384277
    4. 'def' → logprob: -4.541769981384277
    5. 'max' → logprob: -4.666769981384277
    6. 'all' → logprob: -5.666769981384277
    7. 'best' → logprob: -5.791769981384277
    8. 'dp' → logprob: -6.041769981384277
    9. 'profit' → logprob: -7.166769981384277
    10. 'subset' → logprob: -7.291769981384277

Token 353: ' each' (ID: 2454)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.4629358053207397
    2. 'subset' → logprob: -1.7129358053207397
    3. 'mask' → logprob: -1.8379358053207397
    4. ' subset' → logprob: -2.7129359245300293
    5. ' city' → logprob: -2.8379359245300293
    6. 'i' → logprob: -2.9629359245300293
    7. ' mask' → logprob: -2.9629359245300293
    8. 'city' → logprob: -3.3379359245300293
    9. 's' → logprob: -3.5879359245300293
    10. ' S' → logprob: -3.5879359245300293

Token 354: ' subset' (ID: 58845)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -1.0377326011657715
    2. 'i' → logprob: -1.7877326011657715
    3. 'mask' → logprob: -1.7877326011657715
    4. 'city' → logprob: -1.9127326011657715
    5. ' city' → logprob: -2.6627326011657715
    6. ' subset' → logprob: -2.7877326011657715
    7. 'S' → logprob: -4.9127326011657715
    8. ' mask' → logprob: -5.0377326011657715
    9. ' i' → logprob: -5.0377326011657715
    10. 's' → logprob: -5.9127326011657715

Token 355: ' of' (ID: 328)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31532102823257446
    2. 'S' → logprob: -2.5653209686279297
    3. ' of' → logprob: -2.6903209686279297
    4. ' S' → logprob: -3.1903209686279297
    5. 'of' → logprob: -3.1903209686279297
    6. 's' → logprob: -4.44032096862793
    7. 'in' → logprob: -4.44032096862793
    8. '_mask' → logprob: -5.81532096862793
    9. 'size' → logprob: -6.19032096862793
    10. 'subset' → logprob: -6.44032096862793

Token 356: ' cities' (ID: 15636)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6413974165916443
    2. ' range' → logprob: -0.7663974165916443
    3. ' cities' → logprob: -5.391397476196289
    4. 'cities' → logprob: -5.516397476196289
    5. '(range' → logprob: -10.016397476196289
    6. '```' → logprob: -10.641397476196289
    7. 'r' → logprob: -10.891397476196289
    8. 'N' → logprob: -10.891397476196289
    9. 'ranges' → logprob: -11.016397476196289
    10. 'from' → logprob: -11.516397476196289

Token 357: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5573744177818298
    2. 'from' → logprob: -1.6823744773864746
    3. ',' → logprob: -2.8073744773864746
    4. 'subset' → logprob: -2.8073744773864746
    5. '
' → logprob: -3.1823744773864746
    6. 'profit' → logprob: -3.6823744773864746
    7. 'range' → logprob: -4.807374477386475
    8. ' for' → logprob: -4.932374477386475
    9. 'all' → logprob: -4.932374477386475
    10. 'profits' → logprob: -5.057374477386475

Token 358: ' compute' (ID: 23864)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1971230506896973
    2. 'from' → logprob: -1.9471230506896973
    3. 'best' → logprob: -2.1971230506896973
    4. 'subset' → logprob: -2.1971230506896973
    5. 'max' → logprob: -2.8221230506896973
    6. ' subset' → logprob: -3.1971230506896973
    7. 'sub' → logprob: -3.3221230506896973
    8. ' for' → logprob: -3.3221230506896973
    9. ' best' → logprob: -3.4471230506896973
    10. ' from' → logprob: -3.8221230506896973

Token 359: ':
' (ID: 734)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.0717356204986572
    2. ' max' → logprob: -1.1967356204986572
    3. ' best' → logprob: -2.1967356204986572
    4. 'best' → logprob: -2.8217356204986572
    5. 'profit' → logprob: -3.4467356204986572
    6. 'subset' → logprob: -3.9467356204986572
    7. ' profit' → logprob: -4.071735382080078
    8. 'dp' → logprob: -4.321735382080078
    9. ' subset' → logprob: -4.321735382080078
    10. ' range' → logprob: -4.321735382080078

Token 360: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.0617148876190186
    2. ' from' → logprob: -1.8117148876190186
    3. ' for' → logprob: -2.1867148876190186
    4. 'for' → logprob: -2.8117148876190186
    5. ' max' → logprob: -3.3117148876190186
    6. 'subset' → logprob: -3.4367148876190186
    7. 'dp' → logprob: -3.5617148876190186
    8. 'max' → logprob: -3.8117148876190186
    9. '```' → logprob: -4.061715126037598
    10. 'profit' → logprob: -4.061715126037598

Token 361: ' total' (ID: 3609)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.6977344751358032
    2. 'from' → logprob: -1.8227344751358032
    3. 'best' → logprob: -1.8227344751358032
    4. 'subset' → logprob: -1.9477344751358032
    5. 'for' → logprob: -2.3227343559265137
    6. ' max' → logprob: -3.0727343559265137
    7. ' best' → logprob: -3.6977343559265137
    8. 'dp' → logprob: -3.6977343559265137
    9. 'sub' → logprob: -3.8227343559265137
    10. 'profit' → logprob: -3.8227343559265137

Token 362: '_profit' (ID: 186239)
  Prédit: '_profit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_profit' → logprob: -0.511284351348877
    2. 'profit' → logprob: -1.011284351348877
    3. 'profits' → logprob: -4.636284351348877
    4. '_sub' → logprob: -5.386284351348877
    5. 'sub' → logprob: -5.511284351348877
    6. '_prof' → logprob: -5.886284351348877
    7. '_pro' → logprob: -6.011284351348877
    8. 'prof' → logprob: -6.261284351348877
    9. '_items' → logprob: -6.761284351348877
    10. ' profit' → logprob: -6.761284351348877

Token 363: ' and' (ID: 326)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6541075706481934
    2. '=' → logprob: -1.5291075706481934
    3. '_per' → logprob: -1.7791075706481934
    4. 's' → logprob: -3.4041075706481934
    5. '_for' → logprob: -4.654107570648193
    6. 'for' → logprob: -4.904107570648193
    7. '_sub' → logprob: -4.904107570648193
    8. '_subset' → logprob: -4.904107570648193
    9. '_' → logprob: -5.029107570648193
    10. ',' → logprob: -5.029107570648193

Token 364: ' minimal' (ID: 19957)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.5031308531761169
    2. ' best' → logprob: -2.0031309127807617
    3. 'max' → logprob: -2.1281309127807617
    4. ' max' → logprob: -3.0031309127807617
    5. 'buy' → logprob: -4.628130912780762
    6. 'items' → logprob: -4.753130912780762
    7. ' min' → logprob: -4.878130912780762
    8. 'min' → logprob: -5.003130912780762
    9. 'def' → logprob: -5.128130912780762
    10. 'dp' → logprob: -5.378130912780762

Token 365: ' weight' (ID: 6049)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -1.284303903579712
    2. '_weight' → logprob: -1.659303903579712
    3. '_cost' → logprob: -1.909303903579712
    4. '_time' → logprob: -2.284303903579712
    5. 'weight' → logprob: -2.284303903579712
    6. ' cost' → logprob: -3.034303903579712
    7. 'time' → logprob: -3.034303903579712
    8. '_tr' → logprob: -4.159303665161133
    9. ' weight' → logprob: -4.409303665161133
    10. '_items' → logprob: -4.784303665161133

Token 366: ' packing' (ID: 44562)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.9635393619537354
    2. '_per' → logprob: -2.0885393619537354
    3. ',' → logprob: -2.2135393619537354
    4. 's' → logprob: -2.5885393619537354
    5. '_subset' → logprob: -2.5885393619537354
    6. '_sub' → logprob: -2.7135393619537354
    7. ' =' → logprob: -2.9635393619537354
    8. ' for' → logprob: -3.0885393619537354
    9. '_possible' → logprob: -3.4635393619537354
    10. '_' → logprob: -3.5885393619537354

Token 367: ' of' (ID: 328)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5254795551300049
    2. '
' → logprob: -2.525479555130005
    3. 'dp' → logprob: -2.775479555130005
    4. 'for' → logprob: -2.775479555130005
    5. ' from' → logprob: -3.525479555130005
    6. 'subset' → logprob: -3.650479555130005
    7. '#' → logprob: -4.275479316711426
    8. 'profit' → logprob: -4.275479316711426
    9. '_subset' → logprob: -4.525479316711426
    10. '_profit' → logprob: -4.525479316711426

Token 368: ' items' (ID: 4732)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.31122416257858276
    2. 'cities' → logprob: -2.3112242221832275
    3. ' items' → logprob: -3.0612242221832275
    4. 'the' → logprob: -3.3112242221832275
    5. 'goods' → logprob: -3.6862242221832275
    6. 'subset' → logprob: -4.061223983764648
    7. 'each' → logprob: -4.936223983764648
    8. 'sub' → logprob: -5.311223983764648
    9. 'all' → logprob: -5.561223983764648
    10. 'selected' → logprob: -5.811223983764648

Token 369: ' (' (ID: 350)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.1271655559539795
    2. 'dp' → logprob: -1.5021655559539795
    3. 'subset' → logprob: -2.1271655559539795
    4. ' from' → logprob: -2.8771655559539795
    5. '
' → logprob: -3.0021655559539795
    6. 'for' → logprob: -3.1271655559539795
    7. ',' → logprob: -3.2521655559539795
    8. 'profits' → logprob: -4.252165794372559
    9. 'sub' → logprob: -4.377165794372559
    10. ' subsets' → logprob: -4.377165794372559

Token 370: 'kn' (ID: 5068)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5532156229019165
    2. '#' → logprob: -1.4282156229019165
    3. ' all' → logprob: -3.178215503692627
    4. ')
' → logprob: -4.428215503692627
    5. 'def' → logprob: -4.428215503692627
    6. 'for' → logprob: -4.428215503692627
    7. 'all' → logprob: -4.553215503692627
    8. 'items' → logprob: -4.553215503692627
    9. ' items' → logprob: -4.553215503692627
    10. 'from' → logprob: -4.803215503692627

Token 371: 'apsack' (ID: 178559)
  Prédit: 'apsack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apsack' → logprob: -5.7530574849806726e-05
    2. 'ap' → logprob: -10.250057220458984
    3. 'aps' → logprob: -10.750057220458984
    4. '```' → logprob: -14.875057220458984
    5. '``' → logprob: -16.250057220458984
    6. 'n' → logprob: -17.500057220458984
    7. '[' → logprob: -17.750057220458984
    8. 'ight' → logprob: -18.000057220458984
    9. '
' → logprob: -18.125057220458984
    10. 'ps' → logprob: -18.500057220458984

Token 372: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05695429816842079
    2. ')
' → logprob: -3.6819543838500977
    3. '#' → logprob: -4.931954383850098
    4. ' for' → logprob: -5.806954383850098
    5. 'from' → logprob: -5.806954383850098
    6. 'dp' → logprob: -5.931954383850098
    7. 'for' → logprob: -6.181954383850098
    8. ',' → logprob: -6.181954383850098
    9. 'def' → logprob: -6.306954383850098
    10. ')

' → logprob: -6.556954383850098

Token 373: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6106709837913513
    2. 'dp' → logprob: -1.485671043395996
    3. 'for' → logprob: -2.235671043395996
    4. 'subset' → logprob: -2.610671043395996
    5. 'sub' → logprob: -3.485671043395996
    6. 'profit' → logprob: -5.360671043395996
    7. 'max' → logprob: -5.485671043395996
    8. 'def' → logprob: -6.110671043395996
    9. 'best' → logprob: -6.235671043395996
    10. 'profits' → logprob: -7.110671043395996

Token 374: ' As' (ID: 1877)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.078400731086731
    2. 'subset' → logprob: -1.453400731086731
    3. 'dp' → logprob: -1.703400731086731
    4. 'sub' → logprob: -2.2034006118774414
    5. 'max' → logprob: -3.3284006118774414
    6. 'best' → logprob: -3.3284006118774414
    7. 'profit' → logprob: -3.7034006118774414
    8. 'for' → logprob: -4.828400611877441
    9. 'total' → logprob: -4.828400611877441
    10. 'profits' → logprob: -4.828400611877441

Token 375: ' unlimited' (ID: 34136)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.8708435297012329
    2. 'for' → logprob: -1.370843529701233
    3. ' for' → logprob: -2.1208434104919434
    4. ' from' → logprob: -2.6208434104919434
    5. ' all' → logprob: -3.7458434104919434
    6. ' the' → logprob: -4.245843410491943
    7. ' N' → logprob: -4.245843410491943
    8. 'all' → logprob: -4.370843410491943
    9. 'dp' → logprob: -4.870843410491943
    10. 'N' → logprob: -4.995843410491943

Token 376: ' items' (ID: 4732)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3428913354873657
    2. 'from' → logprob: -2.092891216278076
    3. ' for' → logprob: -2.967891216278076
    4. 'range' → logprob: -3.092891216278076
    5. 'items' → logprob: -3.842891216278076
    6. ' range' → logprob: -4.342891216278076
    7. '#' → logprob: -5.592891216278076
    8. 'ranges' → logprob: -5.842891216278076
    9. '<|end|>' → logprob: -5.967891216278076
    10. '_range' → logprob: -6.092891216278076

Token 377: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08207569271326065
    2. 'from' → logprob: -3.082075595855713
    3. 'dp' → logprob: -3.957075595855713
    4. ' for' → logprob: -4.957075595855713
    5. '
' → logprob: -6.582075595855713
    6. 'sub' → logprob: -6.707075595855713
    7. '#' → logprob: -7.207075595855713
    8. 'subset' → logprob: -7.332075595855713
    9. 'max' → logprob: -7.582075595855713
    10. 'def' → logprob: -7.707075595855713

Token 378: ' do' (ID: 621)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24959203600883484
    2. '#' → logprob: -2.1245920658111572
    3. 'from' → logprob: -2.6245920658111572
    4. ' for' → logprob: -4.374591827392578
    5. 'dp' → logprob: -5.249591827392578
    6. 'def' → logprob: -5.749591827392578
    7. 'pass' → logprob: -6.124591827392578
    8. 'continue' → logprob: -6.499591827392578
    9. ' from' → logprob: -7.249591827392578
    10. 'we' → logprob: -7.499591827392578

Token 379: ' un' (ID: 537)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1259879320859909
    2. 'uble' → logprob: -3.500988006591797
    3. 'r' → logprob: -3.625988006591797
    4. 'it' → logprob: -4.250988006591797
    5. 'f' → logprob: -5.000988006591797
    6. '
' → logprob: -5.125988006591797
    7. 'w' → logprob: -5.375988006591797
    8. 's' → logprob: -5.375988006591797
    9. ' for' → logprob: -5.750988006591797
    10. 'ws' → logprob: -6.000988006591797

Token 380: 'bounded' (ID: 135171)
  Prédit: 'bounded'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bounded' → logprob: -0.0010081578511744738
    2. ' bounded' → logprob: -7.001008033752441
    3. 'p' → logprob: -10.501008033752441
    4. 'bound' → logprob: -10.751008033752441
    5. 'limited' → logprob: -11.876008033752441
    6. '01' → logprob: -12.376008033752441
    7. 'r' → logprob: -12.626008033752441
    8. 'b' → logprob: -12.626008033752441
    9. '
' → logprob: -12.751008033752441
    10. '```' → logprob: -12.876008033752441

Token 381: ' kn' (ID: 1313)
  Prédit: 'kn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kn' → logprob: -0.3146781921386719
    2. ' kn' → logprob: -1.3146781921386719
    3. '_kn' → logprob: -6.814678192138672
    4. '0' → logprob: -8.314678192138672
    5. '-kn' → logprob: -10.689678192138672
    6. 'dp' → logprob: -11.189678192138672
    7. 'Kn' → logprob: -11.314678192138672
    8. 'for' → logprob: -11.689678192138672
    9. '(kn' → logprob: -12.689678192138672
    10. '_' → logprob: -13.189678192138672

Token 382: 'apsack' (ID: 178559)
  Prédit: 'apsack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apsack' → logprob: -5.796184723294573e-06
    2. 'ap' → logprob: -12.250005722045898
    3. 'aps' → logprob: -14.000005722045898
    4. '```' → logprob: -16.8750057220459
    5. 'ps' → logprob: -18.6250057220459
    6. 'n' → logprob: -18.8750057220459
    7. '``' → logprob: -20.3750057220459
    8. '[' → logprob: -20.5000057220459
    9. 'ап' → logprob: -20.7500057220459
    10. '#' → logprob: -20.8750057220459

Token 383: ' over' (ID: 1072)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.945769190788269
    2. '
' → logprob: -1.070769190788269
    3. 'dp' → logprob: -1.695769190788269
    4. 'from' → logprob: -3.8207693099975586
    5. ' for' → logprob: -4.070769309997559
    6. 'max' → logprob: -4.195769309997559
    7. '#' → logprob: -4.570769309997559
    8. 'profit' → logprob: -5.070769309997559
    9. 'import' → logprob: -6.320769309997559
    10. '
' → logprob: -6.445769309997559

Token 384: ' union' (ID: 22208)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.8485615253448486
    2. 'W' → logprob: -0.9735615253448486
    3. 'range' → logprob: -2.8485615253448486
    4. 'the' → logprob: -3.0985615253448486
    5. ' items' → logprob: -3.8485615253448486
    6. ' range' → logprob: -4.7235612869262695
    7. 'weights' → logprob: -4.7235612869262695
    8. 'all' → logprob: -4.8485612869262695
    9. 'profit' → logprob: -5.0985612869262695
    10. ' W' → logprob: -5.2235612869262695

Token 385: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.054869294166565
    2. '_' → logprob: -1.429869294166565
    3. '_items' → logprob: -2.0548691749572754
    4. 'items' → logprob: -2.6798691749572754
    5. '<|end|>' → logprob: -2.6798691749572754
    6. 'of' → logprob: -2.8048691749572754
    7. 's' → logprob: -4.054869174957275
    8. ' items' → logprob: -4.304869174957275
    9. ' _' → logprob: -4.429869174957275
    10. '_of' → logprob: -4.929869174957275

Token 386: ' items' (ID: 4732)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.11441531777381897
    2. ' items' → logprob: -3.239415407180786
    3. 'all' → logprob: -3.614415407180786
    4. 'cities' → logprob: -4.239415168762207
    5. ' all' → logprob: -4.864415168762207
    6. 'prof' → logprob: -4.989415168762207
    7. 'profits' → logprob: -5.739415168762207
    8. 'profit' → logprob: -5.739415168762207
    9. ' profitable' → logprob: -6.114415168762207
    10. 'goods' → logprob: -7.364415168762207

Token 387: ' in' (ID: 306)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9289668202400208
    2. '
' → logprob: -1.678966760635376
    3. 'for' → logprob: -1.678966760635376
    4. 'from' → logprob: -2.678966760635376
    5. 'max' → logprob: -3.053966760635376
    6. 'profit' → logprob: -3.553966760635376
    7. 'subset' → logprob: -4.178966999053955
    8. 'profits' → logprob: -4.178966999053955
    9. 'total' → logprob: -4.303966999053955
    10. ' for' → logprob: -5.178966999053955

Token 388: ' those' (ID: 2617)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.35248512029647827
    2. 'the' → logprob: -1.977485179901123
    3. 'cities' → logprob: -2.102485179901123
    4. 'all' → logprob: -3.852485179901123
    5. 'sub' → logprob: -5.477485179901123
    6. 'that' → logprob: -6.477485179901123
    7. 'selected' → logprob: -6.477485179901123
    8. ' subset' → logprob: -6.602485179901123
    9. 'each' → logprob: -7.102485179901123
    10. 'those' → logprob: -7.477485179901123

Token 389: ' cities' (ID: 15636)
  Prédit: 'cities'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cities' → logprob: -0.12237568199634552
    2. 'subset' → logprob: -2.747375726699829
    3. 'range' → logprob: -3.997375726699829
    4. '#' → logprob: -5.12237548828125
    5. ')' → logprob: -5.87237548828125
    6. 'markets' → logprob: -5.99737548828125
    7. 'sub' → logprob: -5.99737548828125
    8. ' cities' → logprob: -5.99737548828125
    9. 's' → logprob: -6.12237548828125
    10. '
' → logprob: -6.62237548828125

Token 390: '

' (ID: 279)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6128522157669067
    2. 'for' → logprob: -2.237852096557617
    3. 'max' → logprob: -2.487852096557617
    4. 'from' → logprob: -2.737852096557617
    5. 'sub' → logprob: -3.112852096557617
    6. 'subset' → logprob: -3.237852096557617
    7. 'best' → logprob: -3.487852096557617
    8. 'res' → logprob: -3.612852096557617
    9. 'profits' → logprob: -4.112852096557617
    10. 'profit' → logprob: -4.362852096557617

Token 391: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.356769323348999
    2. 'from' → logprob: -2.231769323348999
    3. 'max' → logprob: -2.481769323348999
    4. 'subset' → logprob: -3.481769323348999
    5. 'total' → logprob: -3.856769323348999
    6. 'for' → logprob: -4.231769561767578
    7. 'profit' → logprob: -5.356769561767578
    8. 'sub' → logprob: -5.356769561767578
    9. 'res' → logprob: -5.481769561767578
    10. 'best' → logprob: -5.606769561767578

Token 392: ' To' (ID: 2514)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.258699893951416
    2. 'from' → logprob: -1.258699893951416
    3. 'dp' → logprob: -1.383699893951416
    4. 'max' → logprob: -3.133699893951416
    5. 'sub' → logprob: -3.133699893951416
    6. 'all' → logprob: -3.758699893951416
    7. 'subset' → logprob: -3.758699893951416
    8. 'def' → logprob: -4.383699893951416
    9. '#' → logprob: -5.258699893951416
    10. 'city' → logprob: -5.508699893951416

Token 393: ' accelerate' (ID: 63339)
  Prédit: 'complete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'complete' → logprob: -1.1360373497009277
    2. 'do' → logprob: -1.5110373497009277
    3. 'continue' → logprob: -1.5110373497009277
    4. ' complete' → logprob: -3.2610373497009277
    5. ' continue' → logprob: -3.6360373497009277
    6. 'calculate' → logprob: -3.8860373497009277
    7. 'compute' → logprob: -3.8860373497009277
    8. 'solve' → logprob: -4.011037349700928
    9. 'import' → logprob: -4.511037349700928
    10. '_continue' → logprob: -4.636037349700928

Token 394: ',' (ID: 11)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.07059907913208
    2. 'for' → logprob: -1.19559907913208
    3. 'dp' → logprob: -2.44559907913208
    4. 'sub' → logprob: -2.69559907913208
    5. 'subset' → logprob: -2.69559907913208
    6. ' subsets' → logprob: -3.57059907913208
    7. 'the' → logprob: -3.94559907913208
    8. 'items' → logprob: -4.07059907913208
    9. '#' → logprob: -4.19559907913208
    10. '...' → logprob: -5.07059907913208

Token 395: ' for' (ID: 395)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6605750322341919
    2. 'item' → logprob: -1.785575032234192
    3. 'city' → logprob: -2.5355749130249023
    4. 'all' → logprob: -2.9105749130249023
    5. 'items' → logprob: -3.0355749130249023
    6. 'import' → logprob: -3.2855749130249023
    7. '#' → logprob: -4.285574913024902
    8. 'for' → logprob: -4.535574913024902
    9. 'we' → logprob: -4.535574913024902
    10. 'profit' → logprob: -4.535574913024902

Token 396: ' each' (ID: 2454)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.8895077705383301
    2. ' subset' → logprob: -2.01450777053833
    3. 's' → logprob: -2.26450777053833
    4. 'each' → logprob: -2.76450777053833
    5. 'mask' → logprob: -2.88950777053833
    6. '_subset' → logprob: -3.63950777053833
    7. 'sub' → logprob: -3.63950777053833
    8. 'bit' → logprob: -3.63950777053833
    9. ' s' → logprob: -3.76450777053833
    10. 'i' → logprob: -3.76450777053833

Token 397: ' city' (ID: 5030)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.3009215295314789
    2. ' subset' → logprob: -1.4259215593338013
    3. 'mask' → logprob: -5.425921440124512
    4. 'size' → logprob: -5.550921440124512
    5. 's' → logprob: -5.925921440124512
    6. '_subset' → logprob: -6.050921440124512
    7. 'city' → logprob: -6.550921440124512
    8. ' city' → logprob: -6.550921440124512
    9. ' size' → logprob: -7.300921440124512
    10. 'item' → logprob: -7.800921440124512

Token 398: ' subset' (ID: 58845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04016872122883797
    2. 's' → logprob: -4.915168762207031
    3. 'and' → logprob: -4.915168762207031
    4. 'items' → logprob: -4.915168762207031
    5. 'in' → logprob: -5.665168762207031
    6. ''s' → logprob: -5.790168762207031
    7. 'for' → logprob: -6.290168762207031
    8. '#' → logprob: -6.415168762207031
    9. 'i' → logprob: -6.790168762207031
    10. ',i' → logprob: -7.165168762207031

Token 399: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.40138742327690125
    2. 'subset' → logprob: -1.4013874530792236
    3. 's' → logprob: -3.9013874530792236
    4. 'size' → logprob: -4.7763872146606445
    5. 'items' → logprob: -4.7763872146606445
    6. 'mask' → logprob: -4.7763872146606445
    7. 'sub' → logprob: -5.4013872146606445
    8. 'all' → logprob: -5.5263872146606445
    9. 'for' → logprob: -5.5263872146606445
    10. 'city' → logprob: -5.6513872146606445

Token 400: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7925655245780945
    2. ' for' → logprob: -1.4175655841827393
    3. 'from' → logprob: -1.9175655841827393
    4. 'dp' → logprob: -3.4175655841827393
    5. ' from' → logprob: -3.5425655841827393
    6. 'subset' → logprob: -4.54256534576416
    7. 'next' → logprob: -4.79256534576416
    8. ' next' → logprob: -4.91756534576416
    9. 'continue' → logprob: -5.04256534576416
    10. ' dp' → logprob: -5.04256534576416

Token 401: ' collect' (ID: 7916)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7478936314582825
    2. 'dp' → logprob: -1.7478935718536377
    3. 'for' → logprob: -1.8728935718536377
    4. 'def' → logprob: -3.2478935718536377
    5. 'best' → logprob: -3.8728935718536377
    6. 'subset' → logprob: -4.247893810272217
    7. 'city' → logprob: -4.372893810272217
    8. 'profit' → logprob: -4.372893810272217
    9. 'sub' → logprob: -4.497893810272217
    10. ' from' → logprob: -4.622893810272217

Token 402: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.25434815883636475
    2. 'items' → logprob: -1.7543481588363647
    3. ' all' → logprob: -3.5043482780456543
    4. 'the' → logprob: -4.754348278045654
    5. 'available' → logprob: -5.379348278045654
    6. ' items' → logprob: -5.504348278045654
    7. 'cities' → logprob: -7.004348278045654
    8. 'possible' → logprob: -7.254348278045654
    9. 'item' → logprob: -7.754348278045654
    10. 'c' → logprob: -7.754348278045654

Token 403: ' items' (ID: 4732)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.032432153820991516
    2. ' items' → logprob: -4.2824320793151855
    3. 'prof' → logprob: -4.5324320793151855
    4. 'possible' → logprob: -5.2824320793151855
    5. ' profitable' → logprob: -7.7824320793151855
    6. 'unique' → logprob: -7.9074320793151855
    7. 'cities' → logprob: -8.157432556152344
    8. 'available' → logprob: -8.282432556152344
    9. 'candidate' → logprob: -8.782432556152344
    10. 'item' → logprob: -8.782432556152344

Token 404: ' available' (ID: 2839)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.2854870557785034
    2. 'from' → logprob: -1.5354870557785034
    3. '_in' → logprob: -1.7854870557785034
    4. 's' → logprob: -2.160487174987793
    5. ' =' → logprob: -2.535487174987793
    6. 'for' → logprob: -3.160487174987793
    7. '=' → logprob: -3.285487174987793
    8. 'sets' → logprob: -4.785487174987793
    9. 'included' → logprob: -4.785487174987793
    10. 'cities' → logprob: -5.035487174987793

Token 405: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.8178484439849854
    2. 'cities' → logprob: -1.9428484439849854
    3. ' =' → logprob: -2.0678484439849854
    4. 'for' → logprob: -2.6928484439849854
    5. '=' → logprob: -2.6928484439849854
    6. 'from' → logprob: -2.8178484439849854
    7. ' in' → logprob: -4.067848205566406
    8. '_in' → logprob: -4.067848205566406
    9. 'city' → logprob: -4.942848205566406
    10. ',' → logprob: -5.067848205566406

Token 406: ' with' (ID: 483)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.7317628860473633
    2. 'all' → logprob: -1.7317628860473633
    3. 'items' → logprob: -1.7317628860473633
    4. 'weights' → logprob: -1.8567628860473633
    5. 'dp' → logprob: -2.6067628860473633
    6. 'item' → logprob: -2.7317628860473633
    7. 'from' → logprob: -4.231762886047363
    8. 'c' → logprob: -4.231762886047363
    9. 'unique' → logprob: -4.481762886047363
    10. 'their' → logprob: -4.731762886047363

Token 407: ' their' (ID: 1043)
  Prédit: 'their'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'their' → logprob: -1.1150939464569092
    2. 'min' → logprob: -1.4900939464569092
    3. 'max' → logprob: -2.115093946456909
    4. 'profit' → logprob: -2.615093946456909
    5. 'profits' → logprob: -2.865093946456909
    6. 'best' → logprob: -2.865093946456909
    7. 'prices' → logprob: -3.365093946456909
    8. 'weights' → logprob: -3.615093946456909
    9. 'minimal' → logprob: -4.365094184875488
    10. 'weight' → logprob: -4.490094184875488

Token 408: ' weight' (ID: 6049)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.3735672235488892
    2. 'weights' → logprob: -1.7485672235488892
    3. 'best' → logprob: -1.8735672235488892
    4. 'profits' → logprob: -2.1235671043395996
    5. 'profit' → logprob: -2.2485671043395996
    6. 'weight' → logprob: -2.6235671043395996
    7. 'values' → logprob: -3.7485671043395996
    8. 'value' → logprob: -3.8735671043395996
    9. 'min' → logprob: -3.8735671043395996
    10. 'total' → logprob: -4.3735671043396

Token 409: ' (' (ID: 350)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5196830034255981
    2. 'and' → logprob: -1.0196830034255981
    3. ',' → logprob: -4.019682884216309
    4. ' and' → logprob: -4.644682884216309
    5. '=' → logprob: -5.144682884216309
    6. 'for' → logprob: -6.769682884216309
    7. ' =' → logprob: -6.769682884216309
    8. '=[]' → logprob: -6.894682884216309
    9. 'from' → logprob: -7.144682884216309
    10. '#' → logprob: -7.269682884216309

Token 410: 'v' (ID: 85)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8138756155967712
    2. '),' → logprob: -1.938875675201416
    3. 'and' → logprob: -2.313875675201416
    4. ',' → logprob: -2.438875675201416
    5. 'v' → logprob: -2.563875675201416
    6. ' and' → logprob: -2.813875675201416
    7. ')v' → logprob: -4.313875675201416
    8. ' )' → logprob: -4.438875675201416
    9. 'items' → logprob: -4.563875675201416
    10. ' v' → logprob: -4.938875675201416

Token 411: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.7912282347679138
    2. ')' → logprob: -0.9162282347679138
    3. ',' → logprob: -2.5412282943725586
    4. 's' → logprob: -3.9162282943725586
    5. ')s' → logprob: -4.166228294372559
    6. '=' → logprob: -4.791228294372559
    7. '[s' → logprob: -4.916228294372559
    8. '),
' → logprob: -5.541228294372559
    9. ',s' → logprob: -5.791228294372559
    10. ')
' → logprob: -6.291228294372559

Token 412: ' profit' (ID: 15971)
  Prédit: 'profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'profit' → logprob: -0.27632156014442444
    2. 'price' → logprob: -1.901321530342102
    3. ' profit' → logprob: -2.7763216495513916
    4. 'p' → logprob: -5.0263214111328125
    5. 'and' → logprob: -5.2763214111328125
    6. 'profits' → logprob: -5.5263214111328125
    7. ' price' → logprob: -5.6513214111328125
    8. 'prof' → logprob: -5.7763214111328125
    9. ' and' → logprob: -6.1513214111328125
    10. 'prices' → logprob: -6.1513214111328125

Token 413: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.389037549495697
    2. 'and' → logprob: -2.389037609100342
    3. ')' → logprob: -3.014037609100342
    4. 's' → logprob: -3.139037609100342
    5. '=' → logprob: -3.639037609100342
    6. ' =' → logprob: -3.639037609100342
    7. 'for' → logprob: -4.264037609100342
    8. '#' → logprob: -4.514037609100342
    9. ' and' → logprob: -5.014037609100342
    10. ',total' → logprob: -5.389037609100342

Token 414: 'sum' (ID: 12298)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.042237021028995514
    2. ' p' → logprob: -3.4172370433807373
    3. ',' → logprob: -6.042236804962158
    4. ')' → logprob: -6.292236804962158
    5. 's' → logprob: -6.792236804962158
    6. 'w' → logprob: -7.042236804962158
    7. ',p' → logprob: -7.667236804962158
    8. ')p' → logprob: -7.667236804962158
    9. '),' → logprob: -8.417237281799316
    10. ' s' → logprob: -8.542237281799316

Token 415: ' of' (ID: 328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0267791748046875
    2. 's' → logprob: -2.0267791748046875
    3. '=' → logprob: -2.2767791748046875
    4. 'of' → logprob: -2.4017791748046875
    5. ' of' → logprob: -2.9017791748046875
    6. '(s' → logprob: -3.0267791748046875
    7. ',' → logprob: -3.2767791748046875
    8. 'for' → logprob: -4.0267791748046875
    9. '),' → logprob: -4.5267791748046875
    10. ')
' → logprob: -4.7767791748046875

Token 416: ' city' (ID: 5030)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 417: ' profits' (ID: 32798)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.33376413583755493
    2. '[' → logprob: -3.45876407623291
    3. '[s' → logprob: -3.45876407623291
    4. 'profits' → logprob: -3.58376407623291
    5. 'counts' → logprob: -3.70876407623291
    6. '_counts' → logprob: -3.70876407623291
    7. '[i' → logprob: -4.20876407623291
    8. 'for' → logprob: -4.20876407623291
    9. 'items' → logprob: -4.20876407623291
    10. 'values' → logprob: -4.58376407623291

Token 418: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18755240738391876
    2. 's' → logprob: -3.3125524520874023
    3. '),' → logprob: -3.3125524520874023
    4. 'for' → logprob: -3.4375524520874023
    5. ')
' → logprob: -3.8125524520874023
    6. '[s' → logprob: -4.062552452087402
    7. ')s' → logprob: -4.562552452087402
    8. ' for' → logprob: -5.187552452087402
    9. ',' → logprob: -5.562552452087402
    10. ')

' → logprob: -6.687552452087402

Token 419: '#' (ID: 2)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -1.4429473876953125
    2. '#' → logprob: -1.8179473876953125
    3. 'from' → logprob: -1.9429473876953125
    4. 'for' → logprob: -2.3179473876953125
    5. ',' → logprob: -2.6929473876953125
    6. '
' → logprob: -2.8179473876953125
    7. 'all' → logprob: -2.9429473876953125
    8. 'cities' → logprob: -3.4429473876953125
    9. 'available' → logprob: -3.8179473876953125
    10. ',
' → logprob: -3.8179473876953125

Token 420: ' Because' (ID: 13602)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.8877184391021729
    2. '#' → logprob: -1.7627184391021729
    3. 'from' → logprob: -2.262718439102173
    4. '
' → logprob: -2.637718439102173
    5. 'for' → logprob: -2.637718439102173
    6. ' items' → logprob: -3.762718439102173
    7. 'all' → logprob: -3.762718439102173
    8. 'subset' → logprob: -4.137718200683594
    9. ' for' → logprob: -4.387718200683594
    10. ',' → logprob: -4.387718200683594

Token 421: ' multiple' (ID: 7598)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.6498118042945862
    2. 'each' → logprob: -1.5248117446899414
    3. 'the' → logprob: -3.1498117446899414
    4. 'we' → logprob: -3.2748117446899414
    5. 'profit' → logprob: -3.6498117446899414
    6. 'profits' → logprob: -3.6498117446899414
    7. ' items' → logprob: -3.7748117446899414
    8. 'some' → logprob: -4.274811744689941
    9. ' each' → logprob: -4.774811744689941
    10. 'for' → logprob: -4.899811744689941

Token 422: ' cities' (ID: 15636)
  Prédit: 'cities'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cities' → logprob: -0.14087454974651337
    2. ' cities' → logprob: -2.2658746242523193
    3. 'items' → logprob: -4.26587438583374
    4. 'markets' → logprob: -4.76587438583374
    5. 'city' → logprob: -6.26587438583374
    6. ' items' → logprob: -7.26587438583374
    7. ' markets' → logprob: -7.39087438583374
    8. 's' → logprob: -8.390874862670898
    9. ' city' → logprob: -8.515874862670898
    10. 'for' → logprob: -8.515874862670898

Token 423: ' may' (ID: 1340)
  Prédit: 'may'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'may' → logprob: -0.5859346389770508
    2. 'have' → logprob: -1.8359346389770508
    3. 'can' → logprob: -2.335934638977051
    4. ' may' → logprob: -2.960934638977051
    5. 'in' → logprob: -3.460934638977051
    6. 'for' → logprob: -3.960934638977051
    7. '#' → logprob: -4.335934638977051
    8. 'might' → logprob: -4.585934638977051
    9. ' can' → logprob: -4.710934638977051
    10. 'offer' → logprob: -5.210934638977051

Token 424: ' sell' (ID: 7437)
  Prédit: 'sell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sell' → logprob: -0.658892035484314
    2. 'offer' → logprob: -1.033892035484314
    3. 'have' → logprob: -2.2838921546936035
    4. 'carry' → logprob: -5.0338921546936035
    5. ' sell' → logprob: -5.1588921546936035
    6. ' offer' → logprob: -5.6588921546936035
    7. ' have' → logprob: -5.7838921546936035
    8. 's' → logprob: -6.0338921546936035
    9. 'provide' → logprob: -6.0338921546936035
    10. 'be' → logprob: -7.7838921546936035

Token 425: ' same' (ID: 2684)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.450125515460968
    2. ' the' → logprob: -1.0751254558563232
    3. 'same' → logprob: -4.950125694274902
    4. ' same' → logprob: -5.575125694274902
    5. 'items' → logprob: -6.200125694274902
    6. 'an' → logprob: -6.325125694274902
    7. 's' → logprob: -6.450125694274902
    8. ' items' → logprob: -6.825125694274902
    9. ' an' → logprob: -6.950125694274902
    10. 'each' → logprob: -7.575125694274902

Token 426: ' item' (ID: 2169)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.42128807306289673
    2. ' items' → logprob: -1.671288013458252
    3. 'item' → logprob: -2.171288013458252
    4. 's' → logprob: -3.671288013458252
    5. ' item' → logprob: -4.296288013458252
    6. ' s' → logprob: -6.796288013458252
    7. ')' → logprob: -8.17128849029541
    8. 'token' → logprob: -8.29628849029541
    9. '_items' → logprob: -8.54628849029541
    10. 'tokens' → logprob: -9.17128849029541

Token 427: ' at' (ID: 540)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16917917132377625
    2. ',
' → logprob: -2.0441792011260986
    3. 'for' → logprob: -5.1691789627075195
    4. '#' → logprob: -5.1691789627075195
    5. ' for' → logprob: -5.9191789627075195
    6. 's' → logprob: -6.2941789627075195
    7. ' ,' → logprob: -6.7941789627075195
    8. 'with' → logprob: -7.0441789627075195
    9. 'in' → logprob: -7.2941789627075195
    10. ' in' → logprob: -7.2941789627075195

Token 428: ' different' (ID: 2647)
  Prédit: 'different'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'different' → logprob: -0.007193292491137981
    2. 'lower' → logprob: -5.257193088531494
    3. 'multiple' → logprob: -6.882193088531494
    4. '```' → logprob: -8.507193565368652
    5. 'better' → logprob: -8.882193565368652
    6. ' different' → logprob: -9.132193565368652
    7. 'same' → logprob: -9.382193565368652
    8. 'diff' → logprob: -9.507193565368652
    9. 'che' → logprob: -9.507193565368652
    10. 'the' → logprob: -9.882193565368652

Token 429: ' prices' (ID: 8451)
  Prédit: 'prices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prices' → logprob: -0.028766095638275146
    2. 'price' → logprob: -3.77876615524292
    3. ' prices' → logprob: -5.52876615524292
    4. 'p' → logprob: -8.153765678405762
    5. '```' → logprob: -8.278765678405762
    6. ' price' → logprob: -8.278765678405762
    7. '#' → logprob: -8.653765678405762
    8. 'places' → logprob: -9.028765678405762
    9. 'cost' → logprob: -9.653765678405762
    10. 'points' → logprob: -9.653765678405762

Token 430: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7476990818977356
    2. '#' → logprob: -0.8726990818977356
    3. 'from' → logprob: -3.122699022293091
    4. ',
' → logprob: -3.747699022293091
    5. 'items' → logprob: -4.74769926071167
    6. 'for' → logprob: -4.87269926071167
    7. '
' → logprob: -5.12269926071167
    8. 'available' → logprob: -5.62269926071167
    9. 'in' → logprob: -5.87269926071167
    10. 'and' → logprob: -5.99769926071167

Token 431: ' pick' (ID: 5230)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.09643141180276871
    2. 'we' → logprob: -2.9714314937591553
    3. 'continue' → logprob: -3.9714314937591553
    4. ' we' → logprob: -5.471431255340576
    5. 'best' → logprob: -5.846431255340576
    6. 'for' → logprob: -5.846431255340576
    7. ' continue' → logprob: -6.221431255340576
    8. 'consider' → logprob: -6.221431255340576
    9. 'choose' → logprob: -6.596431255340576
    10. 'the' → logprob: -6.971431255340576

Token 432: ' best' (ID: 1636)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.30799317359924316
    2. ' the' → logprob: -1.8079931735992432
    3. 'only' → logprob: -3.432993173599243
    4. 'lowest' → logprob: -3.557993173599243
    5. ' only' → logprob: -3.932993173599243
    6. ' cheapest' → logprob: -4.682992935180664
    7. 'best' → logprob: -5.557992935180664
    8. ' lowest' → logprob: -6.432992935180664
    9. '
' → logprob: -6.557992935180664
    10. 'che' → logprob: -7.182992935180664

Token 433: ' profit' (ID: 15971)
  Prédit: 'price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'price' → logprob: -1.189599633216858
    2. ' price' → logprob: -1.564599633216858
    3. ' option' → logprob: -2.8145995140075684
    4. ' (' → logprob: -3.0645995140075684
    5. ' available' → logprob: -3.4395995140075684
    6. ' city' → logprob: -3.4395995140075684
    7. 'available' → logprob: -3.5645995140075684
    8. 's' → logprob: -3.5645995140075684
    9. 'prices' → logprob: -3.5645995140075684
    10. '(s' → logprob: -3.6895995140075684

Token 434: ' per' (ID: 777)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.702984094619751
    2. 'per' → logprob: -1.827984094619751
    3. 's' → logprob: -1.952984094619751
    4. ' for' → logprob: -2.077984094619751
    5. '_per' → logprob: -2.077984094619751
    6. '(s' → logprob: -2.577984094619751
    7. ' per' → logprob: -3.077984094619751
    8. '
' → logprob: -4.327983856201172
    9. 'token' → logprob: -4.327983856201172
    10. 'available' → logprob: -4.577983856201172

Token 435: ' item' (ID: 2169)
  Prédit: 'city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'city' → logprob: -0.4851486384868622
    2. 'item' → logprob: -0.9851486682891846
    3. 'unit' → logprob: -5.9851484298706055
    4. ' city' → logprob: -5.9851484298706055
    5. 'subset' → logprob: -6.2351484298706055
    6. ' item' → logprob: -6.9851484298706055
    7. 's' → logprob: -7.2351484298706055
    8. 'weight' → logprob: -7.9851484298706055
    9. 'token' → logprob: -8.110148429870605
    10. 'price' → logprob: -8.360148429870605

Token 436: ' among' (ID: 6200)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0763707160949707
    2. 'from' → logprob: -1.3263707160949707
    3. '#' → logprob: -2.9513707160949707
    4. 'profit' → logprob: -3.2013707160949707
    5. 'dp' → logprob: -3.3263707160949707
    6. '
' → logprob: -3.3263707160949707
    7. 'per' → logprob: -3.4513707160949707
    8. 'items' → logprob: -3.5763707160949707
    9. 'available' → logprob: -3.7013707160949707
    10. 'city' → logprob: -3.8263707160949707

Token 437: ' those' (ID: 2617)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.1182446479797363
    2. 'cities' → logprob: -1.3682446479797363
    3. 'those' → logprob: -1.4932446479797363
    4. 'all' → logprob: -2.4932446479797363
    5. 'subset' → logprob: -2.8682446479797363
    6. 'sub' → logprob: -4.118244647979736
    7. ' those' → logprob: -4.618244647979736
    8. 'that' → logprob: -5.368244647979736
    9. 'these' → logprob: -5.368244647979736
    10. ' the' → logprob: -5.618244647979736

Token 438: ' cities' (ID: 15636)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.5729838609695435
    2. 'subset' → logprob: -1.6979838609695435
    3. 's' → logprob: -2.072983741760254
    4. '#' → logprob: -2.197983741760254
    5. 'cities' → logprob: -2.197983741760254
    6. 'from' → logprob: -3.072983741760254
    7. 'available' → logprob: -3.322983741760254
    8. 'city' → logprob: -3.447983741760254
    9. 'items' → logprob: -3.697983741760254
    10. 'in' → logprob: -4.322983741760254

Token 439: '

' (ID: 279)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.411284327507019
    2. 'subset' → logprob: -1.536284327507019
    3. 'items' → logprob: -1.911284327507019
    4. 'dp' → logprob: -2.0362844467163086
    5. 'all' → logprob: -2.9112844467163086
    6. 'for' → logprob: -3.0362844467163086
    7. 'best' → logprob: -3.1612844467163086
    8. 'sub' → logprob: -3.7862844467163086
    9. '#' → logprob: -3.9112844467163086
    10. 'city' → logprob: -4.661284446716309

Token 440: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5175771713256836
    2. 'dp' → logprob: -2.0175771713256836
    3. 'subset' → logprob: -2.1425771713256836
    4. 'from' → logprob: -2.2675771713256836
    5. 'items' → logprob: -4.017577171325684
    6. 'mask' → logprob: -5.017577171325684
    7. ' for' → logprob: -5.142577171325684
    8. 'next' → logprob: -5.392577171325684
    9. 'best' → logprob: -5.642577171325684
    10. 'sub' → logprob: -6.142577171325684

Token 441: ' best' (ID: 1636)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -1.2086665630340576
    2. 'best' → logprob: -1.7086665630340576
    3. 'calc' → logprob: -1.9586665630340576
    4. 'compute' → logprob: -2.7086665630340576
    5. ' solve' → logprob: -2.8336665630340576
    6. ' best' → logprob: -3.2086665630340576
    7. ' calc' → logprob: -3.4586665630340576
    8. 'calculate' → logprob: -3.5836665630340576
    9. ' main' → logprob: -3.9586665630340576
    10. 'main' → logprob: -4.083666801452637

Token 442: '_profit' (ID: 186239)
  Prédit: '_subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_subset' → logprob: -0.02803947404026985
    2. '_comb' → logprob: -4.653039455413818
    3. '_pack' → logprob: -5.403039455413818
    4. '_set' → logprob: -5.528039455413818
    5. '_items' → logprob: -5.903039455413818
    6. '_choice' → logprob: -6.528039455413818
    7. 'subset' → logprob: -7.278039455413818
    8. '_p' → logprob: -7.278039455413818
    9. '_selection' → logprob: -7.778039455413818
    10. '_solution' → logprob: -7.778039455413818

Token 443: '_for' (ID: 11903)
  Prédit: '(sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sub' → logprob: -0.5744671821594238
    2. '(' → logprob: -1.1994671821594238
    3. '(S' → logprob: -2.699467182159424
    4. '_for' → logprob: -4.199467182159424
    5. '(s' → logprob: -4.449467182159424
    6. '_subset' → logprob: -4.449467182159424
    7. '(mask' → logprob: -5.074467182159424
    8. '_per' → logprob: -5.199467182159424
    9. '(items' → logprob: -5.949467182159424
    10. 'subset' → logprob: -6.574467182159424

Token 444: '_subset' (ID: 162934)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.014729490503668785
    2. '_subset' → logprob: -4.5147294998168945
    3. ' subset' → logprob: -6.6397294998168945
    4. 'sub' → logprob: -7.1397294998168945
    5. 'cities' → logprob: -7.2647294998168945
    6. 'S' → logprob: -7.8897294998168945
    7. 's' → logprob: -9.014729499816895
    8. '_sub' → logprob: -9.764729499816895
    9. 'all' → logprob: -10.014729499816895
    10. 'size' → logprob: -10.264729499816895

Token 445: '(city' (ID: 84604)
  Prédit: '(sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sub' → logprob: -0.07944950461387634
    2. '(S' → logprob: -2.954449415206909
    3. '(c' → logprob: -3.954449415206909
    4. '(s' → logprob: -6.079449653625488
    5. '(' → logprob: -6.704449653625488
    6. 'subset' → logprob: -6.954449653625488
    7. '(mask' → logprob: -9.079449653625488
    8. ' (' → logprob: -9.454449653625488
    9. '(substr' → logprob: -9.704449653625488
    10. '(size' → logprob: -9.829449653625488

Token 446: '_subset' (ID: 162934)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2015794962644577
    2. '_subset' → logprob: -1.8265794515609741
    3. 'subset' → logprob: -3.9515795707702637
    4. '_s' → logprob: -7.326579570770264
    5. '_set' → logprob: -7.951579570770264
    6. 'set' → logprob: -7.951579570770264
    7. ' s' → logprob: -8.451579093933105
    8. ' subset' → logprob: -8.451579093933105
    9. ')' → logprob: -8.826579093933105
    10. '):
' → logprob: -8.951579093933105

Token 447: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.13330841064453125
    2. '):
' → logprob: -2.1333084106445312
    3. '(city' → logprob: -5.883308410644531
    4. ',' → logprob: -6.133308410644531
    5. ' ):' → logprob: -7.633308410644531
    6. '):
' → logprob: -8.508308410644531
    7. '(s' → logprob: -8.758308410644531
    8. ')' → logprob: -9.008308410644531
    9. '):

' → logprob: -9.258308410644531
    10. '   ' → logprob: -9.508308410644531

Token 448: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038031688891351223
    2. '    
' → logprob: -6.378803253173828
    3. ' items' → logprob: -7.378803253173828
    4. '
' → logprob: -7.753803253173828
    5. 'items' → logprob: -8.003803253173828
    6. '  
' → logprob: -9.128803253173828
    7. '   ' → logprob: -9.378803253173828
    8. '```' → logprob: -9.628803253173828
    9. '    ' → logprob: -10.003803253173828
    10. '	items' → logprob: -10.378803253173828

Token 449: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.627770721912384
    2. 'items' → logprob: -0.877770721912384
    3. 'weights' → logprob: -3.8777706623077393
    4. 'from' → logprob: -4.752770900726318
    5. 'item' → logprob: -5.002770900726318
    6. 'weight' → logprob: -5.752770900726318
    7. 'available' → logprob: -6.002770900726318
    8. 'all' → logprob: -6.127770900726318
    9. ' items' → logprob: -6.377770900726318
    10. 'dp' → logprob: -6.752770900726318

Token 450: ' city' (ID: 5030)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39751216769218445
    2. 'items' → logprob: -1.8975121974945068
    3. 'weights' → logprob: -3.022512197494507
    4. ' items' → logprob: -3.897512197494507
    5. 'weight' → logprob: -3.897512197494507
    6. 'goods' → logprob: -4.022511959075928
    7. 'from' → logprob: -4.397511959075928
    8. 'item' → logprob: -4.522511959075928
    9. 'w' → logprob: -4.647511959075928
    10. 'available' → logprob: -5.022511959075928

Token 451: '_subset' (ID: 162934)
  Prédit: '_subset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_subset' → logprob: -0.07960506528615952
    2. 's' → logprob: -3.3296051025390625
    3. '_items' → logprob: -4.3296051025390625
    4. '_set' → logprob: -4.4546051025390625
    5. '_' → logprob: -5.0796051025390625
    6. '_sub' → logprob: -6.0796051025390625
    7. 'subset' → logprob: -6.2046051025390625
    8. '_mask' → logprob: -6.7046051025390625
    9. '_s' → logprob: -7.2046051025390625
    10. '_list' → logprob: -7.3296051025390625

Token 452: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20143350958824158
    2. ':' → logprob: -2.4514334201812744
    3. '=' → logprob: -2.7014334201812744
    4. '):
' → logprob: -3.9514334201812744
    5. ' =' → logprob: -5.0764336585998535
    6. ')' → logprob: -7.0764336585998535
    7. '=set' → logprob: -7.4514336585998535
    8. '   ' → logprob: -7.7014336585998535
    9. ')=' → logprob: -8.201433181762695
    10. ' ):' → logprob: -8.326433181762695

Token 453: ' tuple' (ID: 31311)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.5692805647850037
    2. 'list' → logprob: -1.5692806243896484
    3. 'int' → logprob: -1.8192806243896484
    4. 'List' → logprob: -3.4442806243896484
    5. ' list' → logprob: -3.8192806243896484
    6. ' set' → logprob: -5.694280624389648
    7. ' List' → logprob: -5.819280624389648
    8. ' int' → logprob: -6.694280624389648
    9. 'tuple' → logprob: -6.944280624389648
    10. '   ' → logprob: -7.444280624389648

Token 454: ' of' (ID: 328)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6662461161613464
    2. ')' → logprob: -1.6662461757659912
    3. '):' → logprob: -2.041246175765991
    4. '   ' → logprob: -2.166246175765991
    5. ',' → logprob: -4.166245937347412
    6. '<|end|>' → logprob: -5.041245937347412
    7. '
' → logprob: -5.291245937347412
    8. ' of' → logprob: -5.416245937347412
    9. ' or' → logprob: -5.916245937347412
    10. '[int' → logprob: -6.291245937347412

Token 455: ' city' (ID: 5030)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.048915036022663116
    2. 'ints' → logprob: -3.173915147781372
    3. 'cities' → logprob: -6.173914909362793
    4. 'city' → logprob: -6.298914909362793
    5. '[int' → logprob: -7.048914909362793
    6. 'inte' → logprob: -7.798914909362793
    7. 'indices' → logprob: -7.923914909362793
    8. ' ints' → logprob: -8.673914909362793
    9. ' int' → logprob: -8.923914909362793
    10. ' city' → logprob: -11.673914909362793

Token 456: ' indices' (ID: 30378)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5652568936347961
    2. 'indices' → logprob: -1.0652568340301514
    3. 'indexes' → logprob: -3.3152568340301514
    4. '_indexes' → logprob: -3.8152568340301514
    5. '_indices' → logprob: -4.4402570724487305
    6. ' indices' → logprob: -4.8152570724487305
    7. ')' → logprob: -5.3152570724487305
    8. '...' → logprob: -7.0652570724487305
    9. ' indexes' → logprob: -7.3152570724487305
    10. '_idxs' → logprob: -8.06525707244873

Token 457: '
' (ID: 198)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4831472635269165
    2. '):
' → logprob: -1.2331472635269165
    3. '   ' → logprob: -2.483147144317627
    4. ')' → logprob: -4.983147144317627
    5. ':' → logprob: -7.233147144317627
    6. ':
' → logprob: -8.483147621154785
    7. ',' → logprob: -9.108147621154785
    8. '
' → logprob: -9.108147621154785
    9. '):
' → logprob: -9.483147621154785
    10. '    
' → logprob: -9.608147621154785

Token 458: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012168419547379017
    2. '    
' → logprob: -4.8871684074401855
    3. '
' → logprob: -5.6371684074401855
    4. ')' → logprob: -7.8871684074401855
    5. 'items' → logprob: -8.762168884277344
    6. 'tokens' → logprob: -9.887168884277344
    7. '```' → logprob: -10.012168884277344
    8. '  
' → logprob: -10.262168884277344
    9. ' items' → logprob: -10.387168884277344
    10. ':' → logprob: -10.387168884277344

Token 459: ' goods' (ID: 14854)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12733814120292664
    2. 'items' → logprob: -2.752338171005249
    3. 'weights' → logprob: -3.377338171005249
    4. 'weight' → logprob: -5.00233793258667
    5. 'item' → logprob: -5.75233793258667
    6. '
' → logprob: -6.12733793258667
    7. 'total' → logprob: -6.75233793258667
    8. ' items' → logprob: -6.75233793258667
    9. '    
' → logprob: -6.75233793258667
    10. 'all' → logprob: -7.00233793258667

Token 460: '=dict' (ID: 91391)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17240941524505615
    2. '_items' → logprob: -3.0474095344543457
    3. ' =' → logprob: -3.2974095344543457
    4. '={}' → logprob: -3.5474095344543457
    5. '={}
' → logprob: -4.297409534454346
    6. '=set' → logprob: -4.547409534454346
    7. '_available' → logprob: -4.797409534454346
    8. '=dict' → logprob: -5.797409534454346
    9. '_set' → logprob: -6.172409534454346
    10. '   ' → logprob: -6.297409534454346

Token 461: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.524316132068634
    2. '()
' → logprob: -0.899316132068634
    3. '   ' → logprob: -6.899316310882568
    4. '()

' → logprob: -9.02431583404541
    5. '()
' → logprob: -10.52431583404541
    6. '()\' → logprob: -11.14931583404541
    7. 'for' → logprob: -12.02431583404541
    8. '(items' → logprob: -12.89931583404541
    9. '(' → logprob: -13.52431583404541
    10. '())' → logprob: -13.77431583404541

Token 462: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028676390647888184
    2. ' for' → logprob: -6.252867698669434
    3. 'for' → logprob: -7.127867698669434
    4. '    
' → logprob: -9.377867698669434
    5. '<|end|>' → logprob: -11.627867698669434
    6. ')' → logprob: -11.877867698669434
    7. ',' → logprob: -12.002867698669434
    8. '
' → logprob: -12.127867698669434
    9. '    ' → logprob: -12.252867698669434
    10. ' tokens' → logprob: -12.752867698669434

Token 463: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.35290879011154175
    2. '   ' → logprob: -1.2279088497161865
    3. ' for' → logprob: -5.477908611297607
    4. '
' → logprob: -8.477909088134766
    5. 'weight' → logprob: -10.852909088134766
    6. '    
' → logprob: -10.852909088134766
    7. 'weights' → logprob: -11.352909088134766
    8. 'items' → logprob: -12.602909088134766
    9. '  ' → logprob: -12.602909088134766
    10. ' ' → logprob: -13.477909088134766

Token 464: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.09757324308156967
    2. 'i' → logprob: -2.8475732803344727
    3. 'city' → logprob: -3.8475732803344727
    4. ' c' → logprob: -4.847573280334473
    5. 'ci' → logprob: -5.347573280334473
    6. ' city' → logprob: -7.722573280334473
    7. ' i' → logprob: -8.097573280334473
    8. ' ci' → logprob: -8.597573280334473
    9. 'idx' → logprob: -9.472573280334473
    10. 'cid' → logprob: -10.722573280334473

Token 465: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06168517842888832
    2. 'city' → logprob: -3.936685085296631
    3. ' city' → logprob: -3.936685085296631
    4. '_city' → logprob: -5.061685085296631
    5. 'in' → logprob: -5.311685085296631
    6. '   ' → logprob: -5.311685085296631
    7. '_' → logprob: -6.436685085296631
    8. '(city' → logprob: -7.061685085296631
    9. '_subset' → logprob: -7.061685085296631
    10. 's' → logprob: -8.311685562133789

Token 466: ' city' (ID: 5030)
  Prédit: 'city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'city' → logprob: -8.876193169271573e-05
    2. ' city' → logprob: -9.375088691711426
    3. '   ' → logprob: -12.750088691711426
    4. '(city' → logprob: -15.125088691711426
    5. '
' → logprob: -15.625088691711426
    6. 'subset' → logprob: -16.000089645385742
    7. ' ' → logprob: -16.250089645385742
    8. '  ' → logprob: -16.875089645385742
    9. 'set' → logprob: -17.500089645385742
    10. '.city' → logprob: -17.500089645385742

Token 467: '_subset' (ID: 162934)
  Prédit: '_subset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_subset' → logprob: -0.0009171743295155466
    2. 'subset' → logprob: -7.000916957855225
    3. 's' → logprob: -12.625917434692383
    4. '   ' → logprob: -14.750917434692383
    5. ' subset' → logprob: -14.875917434692383
    6. '
' → logprob: -14.875917434692383
    7. '\' → logprob: -15.250917434692383
    8. 'Subset' → logprob: -15.625917434692383
    9. '```' → logprob: -16.000917434692383
    10. '_subplot' → logprob: -16.125917434692383

Token 468: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.24817921221256256
    2. ':' → logprob: -1.7481791973114014
    3. '       ' → logprob: -3.6231791973114014
    4. '   ' → logprob: -4.3731794357299805
    5. '):
' → logprob: -5.1231794357299805
    6. ',' → logprob: -8.24817943572998
    7. '):' → logprob: -9.49817943572998
    8. ':
' → logprob: -9.99817943572998
    9. ':

' → logprob: -11.49817943572998
    10. '():
' → logprob: -11.99817943572998

Token 469: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029347948729991913
    2. ' for' → logprob: -6.00293493270874
    3. 'for' → logprob: -8.252934455871582
    4. '   ' → logprob: -8.627934455871582
    5. '        
' → logprob: -12.627934455871582
    6. ',' → logprob: -12.752934455871582
    7. '           ' → logprob: -12.877934455871582
    8. '
' → logprob: -13.127934455871582
    9. '	   ' → logprob: -13.502934455871582
    10. '     ' → logprob: -13.752934455871582

Token 470: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6500076055526733
    2. '   ' → logprob: -0.7750076055526733
    3. ' for' → logprob: -4.150007724761963
    4. '       ' → logprob: -6.775007724761963
    5. 'goods' → logprob: -8.400007247924805
    6. '	for' → logprob: -10.025007247924805
    7. ' goods' → logprob: -10.400007247924805
    8. 'items' → logprob: -10.775007247924805
    9. '           ' → logprob: -11.400007247924805
    10. 'market' → logprob: -12.275007247924805

Token 471: ' s' (ID: 265)
  Prédit: 'item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -0.5332257747650146
    2. 'k' → logprob: -1.2832257747650146
    3. 's' → logprob: -2.0332257747650146
    4. ' item' → logprob: -5.783226013183594
    5. ' s' → logprob: -7.033226013183594
    6. ' k' → logprob: -7.533226013183594
    7. 'key' → logprob: -7.908226013183594
    8. 'it' → logprob: -8.408226013183594
    9. 'itm' → logprob: -9.158226013183594
    10. ' itm' → logprob: -11.158226013183594

Token 472: ',p' (ID: 14835)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5016676783561707
    2. 'in' → logprob: -1.3766677379608154
    3. ' in' → logprob: -2.0016677379608154
    4. ',in' → logprob: -5.501667499542236
    5. '   ' → logprob: -6.876667499542236
    6. ' ,' → logprob: -7.751667499542236
    7. ',s' → logprob: -8.001667976379395
    8. ',p' → logprob: -8.376667976379395
    9. ',val' → logprob: -8.501667976379395
    10. ',v' → logprob: -8.751667976379395

Token 473: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2636072635650635
    2. ' in' → logprob: -1.5136072635650635
    3. 'ro' → logprob: -4.888607025146484
    4. 'rof' → logprob: -5.763607025146484
    5. '   ' → logprob: -7.263607025146484
    6. ' ' → logprob: -10.138607025146484
    7. 'profit' → logprob: -10.888607025146484
    8. 's' → logprob: -10.888607025146484
    9. '       ' → logprob: -11.263607025146484
    10. 'to' → logprob: -11.263607025146484

Token 474: ' profit' (ID: 15971)
  Prédit: 'profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'profit' → logprob: -0.00020067949662916362
    2. 'items' → logprob: -9.125200271606445
    3. ' profit' → logprob: -9.375200271606445
    4. 'prof' → logprob: -13.125200271606445
    5. 'profits' → logprob: -13.375200271606445
    6. 'pro' → logprob: -14.875200271606445
    7. 'prob' → logprob: -15.000200271606445
    8. ')' → logprob: -15.125200271606445
    9. '
' → logprob: -15.125200271606445
    10. '{' → logprob: -15.125200271606445

Token 475: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -8.2994620242971e-06
    2. 'per' → logprob: -12.375008583068848
    3. '_city' → logprob: -12.750008583068848
    4. 's' → logprob: -15.750008583068848
    5. '[' → logprob: -15.875008583068848
    6. 'items' → logprob: -16.25000762939453
    7. '   ' → logprob: -16.37500762939453
    8. 'Per' → logprob: -16.50000762939453
    9. '_PER' → logprob: -16.75000762939453
    10. '_for' → logprob: -16.75000762939453

Token 476: '_city' (ID: 60413)
  Prédit: 'city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'city' → logprob: -0.5760560035705566
    2. '_city' → logprob: -0.8260560035705566
    3. '[' → logprob: -10.076055526733398
    4. 'cities' → logprob: -11.201055526733398
    5. 's' → logprob: -11.951055526733398
    6. 'items' → logprob: -11.951055526733398
    7. 'c' → logprob: -11.951055526733398
    8. 'profit' → logprob: -12.326055526733398
    9. 'dict' → logprob: -12.326055526733398
    10. 'City' → logprob: -12.826055526733398

Token 477: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -3.607391408877447e-05
    2. 'c' → logprob: -10.250036239624023
    3. '[
' → logprob: -16.000036239624023
    4. '[' → logprob: -16.125036239624023
    5. '[s' → logprob: -16.250036239624023
    6. '```' → logprob: -16.250036239624023
    7. '
' → logprob: -16.750036239624023
    8. '   ' → logprob: -17.250036239624023
    9. ' [' → logprob: -17.375036239624023
    10. '<c' → logprob: -17.500036239624023

Token 478: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.2548457980155945
    2. '.items' → logprob: -1.5048458576202393
    3. 'items' → logprob: -6.87984561920166
    4. '().' → logprob: -7.12984561920166
    5. ''].' → logprob: -8.12984561920166
    6. 's' → logprob: -8.37984561920166
    7. '   ' → logprob: -8.75484561920166
    8. '.' → logprob: -9.00484561920166
    9. '}.' → logprob: -9.75484561920166
    10. '       ' → logprob: -10.00484561920166

Token 479: 'items' (ID: 6918)
  Prédit: 'items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -9.088346359931165e-07
    2. '.items' → logprob: -14.375000953674316
    3. ' items' → logprob: -15.375000953674316
    4. 'get' → logprob: -18.875
    5. '```' → logprob: -19.125
    6. '	items' → logprob: -20.125
    7. '_items' → logprob: -20.75
    8. 's' → logprob: -21.0
    9. 'update' → logprob: -21.125
    10. 'keys' → logprob: -21.375

Token 480: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.024974416941404343
    2. '():' → logprob: -3.7749743461608887
    3. '()' → logprob: -6.524974346160889
    4. '():
' → logprob: -9.274974822998047
    5. '()):
' → logprob: -9.399974822998047
    6. '():

' → logprob: -10.024974822998047
    7. '       ' → logprob: -10.649974822998047
    8. '(),' → logprob: -12.274974822998047
    9. '()`' → logprob: -13.024974822998047
    10. '   ' → logprob: -13.274974822998047

Token 481: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01717609167098999
    2. '       ' → logprob: -4.267176151275635
    3. ',' → logprob: -6.267176151275635
    4. '   ' → logprob: -8.267175674438477
    5. ' if' → logprob: -8.517175674438477
    6. '
' → logprob: -9.017175674438477
    7. '	       ' → logprob: -9.517175674438477
    8. '               ' → logprob: -9.767175674438477
    9. '            
' → logprob: -9.892175674438477
    10. '        
' → logprob: -10.392175674438477

Token 482: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6556172966957092
    2. ' if' → logprob: -1.1556172370910645
    3. '           ' → logprob: -2.4056172370910645
    4. '               ' → logprob: -2.6556172370910645
    5. '   ' → logprob: -5.9056172370910645
    6. 'goods' → logprob: -6.1556172370910645
    7. ' goods' → logprob: -7.6556172370910645
    8. '                   ' → logprob: -9.780617713928223
    9. 'prev' → logprob: -10.655617713928223
    10. 'current' → logprob: -10.780617713928223

Token 483: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.005044948309659958
    2. ' s' → logprob: -5.505044937133789
    3. '(s' → logprob: -7.130044937133789
    4. ' (' → logprob: -9.880044937133789
    5. '   ' → logprob: -10.005044937133789
    6. '(p' → logprob: -10.880044937133789
    7. 'p' → logprob: -11.130044937133789
    8. 'items' → logprob: -11.880044937133789
    9. '(' → logprob: -12.005044937133789
    10. '(not' → logprob: -12.255044937133789

Token 484: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.20509281754493713
    2. 'not' → logprob: -1.7050927877426147
    3. ' in' → logprob: -5.955092906951904
    4. 'in' → logprob: -6.955092906951904
    5. 's' → logprob: -9.455092430114746
    6. '	not' → logprob: -10.455092430114746
    7. ')' → logprob: -11.705092430114746
    8. ' s' → logprob: -11.955092430114746
    9. ']' → logprob: -13.705092430114746
    10. '           ' → logprob: -14.580092430114746

Token 485: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.33462849259376526
    2. 'in' → logprob: -1.3346284627914429
    3. 'goods' → logprob: -4.584628582000732
    4. ' or' → logprob: -5.084628582000732
    5. 'or' → logprob: -6.084628582000732
    6. ' goods' → logprob: -6.584628582000732
    7. '(goods' → logprob: -7.584628582000732
    8. '           ' → logprob: -7.959628582000732
    9. '_goods' → logprob: -9.334628105163574
    10. '   ' → logprob: -10.334628105163574

Token 486: ' goods' (ID: 14854)
  Prédit: 'goods'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goods' → logprob: -9.491498531133402e-06
    2. 'profit' → logprob: -12.375009536743164
    3. ' goods' → logprob: -12.625009536743164
    4. 'profits' → logprob: -14.125009536743164
    5. '
' → logprob: -14.250009536743164
    6. 'good' → logprob: -15.875009536743164
    7. 'items' → logprob: -16.250009536743164
    8. 'prof' → logprob: -17.000009536743164
    9. '(goods' → logprob: -17.125009536743164
    10. '   ' → logprob: -17.125009536743164

Token 487: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.018080757930874825
    2. 'or' → logprob: -4.143080711364746
    3. '               ' → logprob: -6.518080711364746
    4. '           ' → logprob: -7.643080711364746
    5. ')' → logprob: -10.643080711364746
    6. ',' → logprob: -11.268080711364746
    7. '```' → logprob: -11.268080711364746
    8. '	or' → logprob: -11.768080711364746
    9. '                   ' → logprob: -12.268080711364746
    10. '              ' → logprob: -12.393080711364746

Token 488: ' goods' (ID: 14854)
  Prédit: 'goods'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goods' → logprob: -0.02975928969681263
    2. 'p' → logprob: -4.029759407043457
    3. ' goods' → logprob: -4.654759407043457
    4. 'profit' → logprob: -7.279759407043457
    5. 'profits' → logprob: -7.279759407043457
    6. ' p' → logprob: -8.279759407043457
    7. 'prof' → logprob: -8.404759407043457
    8. '   ' → logprob: -9.529759407043457
    9. 'good' → logprob: -10.154759407043457
    10. '(goods' → logprob: -11.279759407043457

Token 489: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -1.1637164789135568e-05
    2. 's' → logprob: -12.125011444091797
    3. '<s' → logprob: -12.625011444091797
    4. '[' → logprob: -13.625011444091797
    5. '][' → logprob: -14.625011444091797
    6. '[c' → logprob: -15.500011444091797
    7. '[
' → logprob: -15.875011444091797
    8. '>s' → logprob: -15.875011444091797
    9. '```' → logprob: -15.875011444091797
    10. ')[' → logprob: -16.125011444091797

Token 490: ']<' (ID: 80424)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.579258143901825
    2. ']<' → logprob: -0.954258143901825
    3. ']' → logprob: -3.2042582035064697
    4. '<p' → logprob: -4.579257965087891
    5. ' <' → logprob: -5.954257965087891
    6. '<s' → logprob: -7.329257965087891
    7. '[' → logprob: -8.57925796508789
    8. 's' → logprob: -9.82925796508789
    9. '][' → logprob: -10.70425796508789
    10. ')<' → logprob: -10.95425796508789

Token 491: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00035274302354082465
    2. ' p' → logprob: -8.00035285949707
    3. 'profit' → logprob: -11.25035285949707
    4. 'prof' → logprob: -13.25035285949707
    5. 'profits' → logprob: -14.12535285949707
    6. '   ' → logprob: -14.87535285949707
    7. 'pro' → logprob: -15.75035285949707
    8. ' ' → logprob: -15.81285285949707
    9. ' profit' → logprob: -16.06285285949707
    10. ' profits' → logprob: -16.06285285949707

Token 492: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.612285315990448
    2. '               ' → logprob: -1.4872853755950928
    3. ':
' → logprob: -2.4872853755950928
    4. '           ' → logprob: -3.1122853755950928
    5. '):' → logprob: -3.4872853755950928
    6. '):
' → logprob: -3.7372853755950928
    7. 'p' → logprob: -3.9872853755950928
    8. '       ' → logprob: -5.237285137176514
    9. 's' → logprob: -5.612285137176514
    10. '=' → logprob: -5.987285137176514

Token 493: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06935557723045349
    2. ' p' → logprob: -3.8193554878234863
    3. ' goods' → logprob: -3.8193554878234863
    4. 'p' → logprob: -4.194355487823486
    5. 'goods' → logprob: -4.944355487823486
    6. '           ' → logprob: -7.819355487823486
    7. '                   ' → logprob: -9.444355964660645
    8. 's' → logprob: -9.694355964660645
    9. ' s' → logprob: -9.819355964660645
    10. '                       ' → logprob: -10.069355964660645

Token 494: ' goods' (ID: 14854)
  Prédit: 'goods'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goods' (adapté à ' goods') → logprob: -0.14510513842105865
    2. ' goods' → logprob: -2.0201051235198975
    3. '                   ' → logprob: -6.395105361938477
    4. '               ' → logprob: -7.395105361938477
    5. '           ' → logprob: -9.770105361938477
    6. '                ' → logprob: -11.020105361938477
    7. '   ' → logprob: -11.020105361938477
    8. '_goods' → logprob: -11.520105361938477
    9. '                       ' → logprob: -11.895105361938477
    10. '(goods' → logprob: -11.895105361938477

Token 495: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.005601311102509499
    2. '=s' → logprob: -5.755601406097412
    3. '=' → logprob: -6.130601406097412
    4. ' =' → logprob: -9.005600929260254
    5. 's' → logprob: -9.880600929260254
    6. '[' → logprob: -11.005600929260254
    7. '               ' → logprob: -11.505600929260254
    8. '                   ' → logprob: -11.505600929260254
    9. '[p' → logprob: -11.505600929260254
    10. '           ' → logprob: -11.630600929260254

Token 496: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.06184117868542671
    2. '=p' → logprob: -3.5618412494659424
    3. '=' → logprob: -3.6868412494659424
    4. ']' → logprob: -5.061841011047363
    5. ' =' → logprob: -8.811841011047363
    6. ')=' → logprob: -11.061841011047363
    7. '=s' → logprob: -12.186841011047363
    8. '}=' → logprob: -12.436841011047363
    9. '=g' → logprob: -12.436841011047363
    10. 'p' → logprob: -12.561841011047363

Token 497: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.2664456789934775e-06
    2. ' p' → logprob: -13.625000953674316
    3. 'profit' → logprob: -17.250001907348633
    4. 'prof' → logprob: -18.875001907348633
    5. '           ' → logprob: -20.625001907348633
    6. 'profits' → logprob: -21.125001907348633
    7. '               ' → logprob: -21.250001907348633
    8. '   ' → logprob: -21.250001907348633
    9. 'pro' → logprob: -21.625001907348633
    10. '<p' → logprob: -22.375001907348633

Token 498: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002941686660051346
    2. '
' → logprob: -6.127941608428955
    3. '    
' → logprob: -8.627942085266113
    4. '<|end|>' → logprob: -9.127942085266113
    5. 'return' → logprob: -9.252942085266113
    6. ',' → logprob: -9.502942085266113
    7. 'tokens' → logprob: -10.252942085266113
    8. 'def' → logprob: -10.252942085266113
    9. '       ' → logprob: -10.502942085266113
    10. ')' → logprob: -10.502942085266113

Token 499: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001158438972197473
    2. '    
' → logprob: -7.876158237457275
    3. '
' → logprob: -8.376158714294434
    4. '<|end|>' → logprob: -8.751158714294434
    5. ',' → logprob: -9.001158714294434
    6. 'return' → logprob: -9.876158714294434
    7. 'tokens' → logprob: -10.251158714294434
    8. '<|end|>' → logprob: -10.751158714294434
    9. ')' → logprob: -10.876158714294434
    10. '       ' → logprob: -11.001158714294434

Token 500: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05296344682574272
    2. 'items' → logprob: -4.6779632568359375
    3. 'weights' → logprob: -4.8029632568359375
    4. '    
' → logprob: -4.9279632568359375
    5. ' items' → logprob: -5.1779632568359375
    6. 'return' → logprob: -5.9279632568359375
    7. '
' → logprob: -6.0529632568359375
    8. 'v' → logprob: -6.0529632568359375
    9. ' weights' → logprob: -6.3029632568359375
    10. 'weight' → logprob: -6.3029632568359375

Token 501: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0022034284193068743
    2. ' not' → logprob: -6.752203464508057
    3. 'len' → logprob: -6.877203464508057
    4. 'goods' → logprob: -13.877202987670898
    5. '
' → logprob: -15.127202987670898
    6. 'W' → logprob: -16.7522029876709
    7. '	not' → logprob: -16.7522029876709
    8. ' len' → logprob: -16.8772029876709
    9. '!' → logprob: -16.8772029876709
    10. 'no' → logprob: -17.0022029876709

Token 502: ' goods' (ID: 14854)
  Prédit: 'goods'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goods' → logprob: -0.001502717612311244
    2. ' goods' → logprob: -6.501502513885498
    3. '(goods' → logprob: -16.001502990722656
    4. 'go' → logprob: -16.251502990722656
    5. 'foods' → logprob: -16.626502990722656
    6. 'g' → logprob: -17.251502990722656
    7. 'items' → logprob: -17.376502990722656
    8. '
' → logprob: -17.376502990722656
    9. '.goods' → logprob: -17.501502990722656
    10. '   ' → logprob: -17.626502990722656

Token 503: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005241702310740948
    2. ':
' → logprob: -5.630241870880127
    3. ':return' → logprob: -6.505241870880127
    4. '):' → logprob: -9.255241394042969
    5. '   ' → logprob: -10.130241394042969
    6. 'return' → logprob: -12.755241394042969
    7. ' :' → logprob: -13.255241394042969
    8. ')' → logprob: -13.755241394042969
    9. '):
' → logprob: -14.255241394042969
    10. '       ' → logprob: -14.380241394042969

Token 504: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00444578193128109
    2. ' return' → logprob: -6.004445552825928
    3. 'return' → logprob: -6.879445552825928
    4. '   ' → logprob: -7.129445552825928
    5. ',' → logprob: -9.629446029663086
    6. '
' → logprob: -10.629446029663086
    7. '        
' → logprob: -11.629446029663086
    8. '	return' → logprob: -12.379446029663086
    9. '           ' → logprob: -12.379446029663086
    10. '     ' → logprob: -12.504446029663086

Token 505: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.009957832284271717
    2. ' return' → logprob: -5.259957790374756
    3. '   ' → logprob: -5.384957790374756
    4. '       ' → logprob: -9.009958267211914
    5. '	return' → logprob: -13.134958267211914
    6. '0' → logprob: -13.509958267211914
    7. ' ' → logprob: -13.634958267211914
    8. '  ' → logprob: -14.384958267211914
    9. '
' → logprob: -16.259958267211914
    10. '    ' → logprob: -16.259958267211914

Token 506: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11408514529466629
    2. ' ' → logprob: -2.2390851974487305
    3. ' (' → logprob: -6.9890851974487305
    4. '(' → logprob: -8.61408519744873
    5. ' None' → logprob: -9.61408519744873
    6. 'None' → logprob: -10.73908519744873
    7. '
' → logprob: -10.86408519744873
    8. '   ' → logprob: -11.11408519744873
    9. 'return' → logprob: -11.61408519744873
    10. ' return' → logprob: -12.48908519744873

Token 507: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01645202562212944
    2. '(' → logprob: -4.141451835632324
    3. '-' → logprob: -8.391451835632324
    4. '(-' → logprob: -9.266451835632324
    5. '[' → logprob: -10.016451835632324
    6. 'float' → logprob: -11.016451835632324
    7. '-(' → logprob: -11.266451835632324
    8. ' (' → logprob: -12.141451835632324
    9. '(float' → logprob: -12.266451835632324
    10. ' ' → logprob: -12.391451835632324

Token 508: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25823503732681274
    2. '   ' → logprob: -2.008234977722168
    3. '    
' → logprob: -2.508234977722168
    4. ',' → logprob: -5.508234977722168
    5. '  
' → logprob: -5.508234977722168
    6. '   
' → logprob: -7.008234977722168
    7. '
' → logprob: -7.383234977722168
    8. ' 
' → logprob: -8.008234977722168
    9. '        
' → logprob: -8.383234977722168
    10. ',
' → logprob: -8.508234977722168

Token 509: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8696194887161255
    2. '   ' → logprob: -0.8696194887161255
    3. '    
' → logprob: -1.9946194887161255
    4. ',' → logprob: -4.994619369506836
    5. '  
' → logprob: -5.119619369506836
    6. 'dp' → logprob: -5.244619369506836
    7. '        
' → logprob: -6.869619369506836
    8. ' 
' → logprob: -6.994619369506836
    9. '   
' → logprob: -7.244619369506836
    10. ' dp' → logprob: -7.494619369506836

Token 510: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.785440981388092
    2. 'dp' → logprob: -1.2854409217834473
    3. ' W' → logprob: -2.7854409217834473
    4. ' dp' → logprob: -2.7854409217834473
    5. 'weights' → logprob: -3.5354409217834473
    6. 'W' → logprob: -3.5354409217834473
    7. ' max' → logprob: -3.6604409217834473
    8. 'max' → logprob: -3.7854409217834473
    9. 'items' → logprob: -4.910440921783447
    10. ' from' → logprob: -5.160440921783447

Token 511: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6393808722496033
    2. '   ' → logprob: -1.514380931854248
    3. 'weights' → logprob: -1.514380931854248
    4. 'items' → logprob: -4.139380931854248
    5. ' dp' → logprob: -5.889380931854248
    6. 'w' → logprob: -5.889380931854248
    7. 'weight' → logprob: -6.264380931854248
    8. 'from' → logprob: -6.514380931854248
    9. 'wt' → logprob: -6.514380931854248
    10. 'max' → logprob: -6.514380931854248

Token 512: ' kn' (ID: 1313)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5757463574409485
    2. ' =' → logprob: -0.9507463574409485
    3. '=[' → logprob: -3.7007462978363037
    4. 'dp' → logprob: -4.450746536254883
    5. '=[]' → logprob: -5.450746536254883
    6. 'w' → logprob: -5.825746536254883
    7. '=max' → logprob: -5.950746536254883
    8. '_dp' → logprob: -6.575746536254883
    9. 'max' → logprob: -7.325746536254883
    10. 'W' → logprob: -8.075746536254883

Token 513: 'apsack' (ID: 178559)
  Prédit: 'apsack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apsack' → logprob: -0.01845051907002926
    2. 'ap' → logprob: -4.018450736999512
    3. 'aps' → logprob: -8.893450736999512
    4. 'p' → logprob: -9.393450736999512
    5. 'dp' → logprob: -11.018450736999512
    6. ' =' → logprob: -11.143450736999512
    7. '[' → logprob: -11.268450736999512
    8. 'n' → logprob: -11.518450736999512
    9. 'w' → logprob: -12.018450736999512
    10. '   ' → logprob: -12.518450736999512

Token 514: ':' (ID: 25)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.28962093591690063
    2. ' =' → logprob: -2.289620876312256
    3. ' dp' → logprob: -3.289620876312256
    4. '=' → logprob: -3.789620876312256
    5. 'max' → logprob: -4.039620876312256
    6. 'W' → logprob: -4.164620876312256
    7. '   ' → logprob: -4.789620876312256
    8. 'capacity' → logprob: -4.914620876312256
    9. '=W' → logprob: -4.914620876312256
    10. ',' → logprob: -5.164620876312256

Token 515: ' max' (ID: 2999)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11329704523086548
    2. ' dp' → logprob: -2.6132969856262207
    3. 'max' → logprob: -3.8632969856262207
    4. ' max' → logprob: -5.113296985626221
    5. 'kn' → logprob: -5.738296985626221
    6. ' kn' → logprob: -7.238296985626221
    7. 'W' → logprob: -7.613296985626221
    8. 'weight' → logprob: -7.988296985626221
    9. 'capacity' → logprob: -8.113297462463379
    10. '   ' → logprob: -8.238297462463379

Token 516: ' profit' (ID: 15971)
  Prédit: 'profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'profit' → logprob: -0.7022383213043213
    2. '_profit' → logprob: -0.7022383213043213
    3. '_value' → logprob: -6.077238082885742
    4. ' profit' → logprob: -6.577238082885742
    5. 'dp' → logprob: -6.702238082885742
    6. 'value' → logprob: -6.702238082885742
    7. 'prof' → logprob: -7.452238082885742
    8. 'v' → logprob: -7.952238082885742
    9. '_prof' → logprob: -7.952238082885742
    10. '_val' → logprob: -8.077238082885742

Token 517: ' with' (ID: 483)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0247788429260254
    2. ' =' → logprob: -1.3997788429260254
    3. '+' → logprob: -1.7747788429260254
    4. '   ' → logprob: -2.2747788429260254
    5. 'dp' → logprob: -2.7747788429260254
    6. '=W' → logprob: -4.524778842926025
    7. '=max' → logprob: -4.899778842926025
    8. ',' → logprob: -5.024778842926025
    9. 'max' → logprob: -5.649778842926025
    10. 'import' → logprob: -5.774778842926025

Token 518: ' weight' (ID: 6049)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.43891337513923645
    2. 'W' → logprob: -1.688913345336914
    3. 'capacity' → logprob: -3.063913345336914
    4. ' weight' → logprob: -3.188913345336914
    5. 'dp' → logprob: -4.063913345336914
    6. 'weights' → logprob: -4.438913345336914
    7. ' W' → logprob: -4.438913345336914
    8. ' capacity' → logprob: -4.688913345336914
    9. 'items' → logprob: -4.813913345336914
    10. '[' → logprob: -5.063913345336914

Token 519: ' limit' (ID: 5967)
  Prédit: '=W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=W' → logprob: -0.7834564447402954
    2. '=' → logprob: -0.9084564447402954
    3. 'W' → logprob: -2.908456325531006
    4. ' =' → logprob: -3.283456325531006
    5. '=[' → logprob: -4.158456325531006
    6. 'capacity' → logprob: -4.908456325531006
    7. '0' → logprob: -5.408456325531006
    8. 'dp' → logprob: -5.658456325531006
    9. '   ' → logprob: -5.783456325531006
    10. 'limit' → logprob: -5.908456325531006

Token 520: ' W' (ID: 486)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.37865251302719116
    2. ' dp' → logprob: -2.253652572631836
    3. ' =' → logprob: -2.628652572631836
    4. '=' → logprob: -3.128652572631836
    5. 'W' → logprob: -3.878652572631836
    6. ' W' → logprob: -4.003652572631836
    7. ',' → logprob: -4.003652572631836
    8. '   ' → logprob: -4.378652572631836
    9. '_dp' → logprob: -5.878652572631836
    10. '=W' → logprob: -5.878652572631836

Token 521: ',' (ID: 11)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3025043308734894
    2. '   ' → logprob: -1.427504301071167
    3. ' dp' → logprob: -3.927504301071167
    4. '
' → logprob: -7.927504539489746
    5. 'max' → logprob: -7.927504539489746
    6. ',' → logprob: -8.302504539489746
    7. '```' → logprob: -9.302504539489746
    8. 'import' → logprob: -9.802504539489746
    9. '	dp' → logprob: -9.927504539489746
    10. '    
' → logprob: -9.927504539489746

Token 522: ' unlimited' (ID: 34136)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.09169036149978638
    2. ' dp' → logprob: -2.7166903018951416
    3. '   ' → logprob: -5.091690540313721
    4. 'max' → logprob: -5.216690540313721
    5. 'profit' → logprob: -5.591690540313721
    6. 'kn' → logprob: -6.466690540313721
    7. ' max' → logprob: -6.716690540313721
    8. ' profit' → logprob: -7.091690540313721
    9. ' kn' → logprob: -7.716690540313721
    10. 'weight' → logprob: -7.716690540313721

Token 523: ' items' (ID: 4732)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.412789911031723
    2. '_items' → logprob: -1.7877899408340454
    3. 'goods' → logprob: -3.412789821624756
    4. 'tokens' → logprob: -3.537789821624756
    5. ' =' → logprob: -3.912789821624756
    6. ' items' → logprob: -3.912789821624756
    7. '   ' → logprob: -4.037789821624756
    8. '_goods' → logprob: -4.662789821624756
    9. 'for' → logprob: -4.787789821624756
    10. '
' → logprob: -5.162789821624756

Token 524: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1692924052476883
    2. '
' → logprob: -2.794292449951172
    3. 'dp' → logprob: -2.794292449951172
    4. ' dp' → logprob: -3.544292449951172
    5. ',' → logprob: -6.294292449951172
    6. '    
' → logprob: -7.044292449951172
    7. '	dp' → logprob: -7.669292449951172
    8. 'max' → logprob: -8.419292449951172
    9. ',
' → logprob: -8.544292449951172
    10. '(dp' → logprob: -8.794292449951172

Token 525: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13723449409008026
    2. ' dp' → logprob: -2.5122344493865967
    3. 'dp' → logprob: -3.1372344493865967
    4. '
' → logprob: -5.762234687805176
    5. '    
' → logprob: -8.387234687805176
    6. '	dp' → logprob: -8.887234687805176
    7. ' max' → logprob: -10.012234687805176
    8. '```' → logprob: -10.262234687805176
    9. 'max' → logprob: -10.387234687805176
    10. '_dp' → logprob: -11.387234687805176

Token 526: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.018327748402953148
    2. ' dp' → logprob: -4.143327713012695
    3. '   ' → logprob: -6.268327713012695
    4. 'max' → logprob: -8.018327713012695
    5. 'kn' → logprob: -10.643327713012695
    6. 'profit' → logprob: -11.393327713012695
    7. ' max' → logprob: -11.893327713012695
    8. '	dp' → logprob: -12.518327713012695
    9. 'capacity' → logprob: -13.143327713012695
    10. '```' → logprob: -13.143327713012695

Token 527: '_kn' (ID: 155966)
  Prédit: '=['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -1.0007864236831665
    2. '=' → logprob: -1.2507864236831665
    3. ' =' → logprob: -2.375786304473877
    4. '_' → logprob: -2.500786304473877
    5. 'w' → logprob: -2.625786304473877
    6. '_=' → logprob: -2.875786304473877
    7. '_w' → logprob: -4.625786304473877
    8. '_kn' → logprob: -4.625786304473877
    9. '0' → logprob: -5.000786304473877
    10. '_profit' → logprob: -5.125786304473877

Token 528: 'ap' (ID: 403)
  Prédit: 'apsack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apsack' → logprob: -0.010353615507483482
    2. 'ap' → logprob: -5.1353535652160645
    3. 'aps' → logprob: -5.5103535652160645
    4. '[' → logprob: -8.385354042053223
    5. '=[' → logprob: -9.385354042053223
    6. '=' → logprob: -11.385354042053223
    7. '=[]' → logprob: -11.385354042053223
    8. 'a' → logprob: -11.635354042053223
    9. 'p' → logprob: -12.260354042053223
    10. '=[]
' → logprob: -12.760354042053223

Token 529: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.042147304862737656
    2. ' =' → logprob: -3.542147397994995
    3. '=' → logprob: -4.542147159576416
    4. '=[[' → logprob: -6.542147159576416
    5. 'w' → logprob: -9.542147636413574
    6. ' =[' → logprob: -9.917147636413574
    7. '[' → logprob: -10.167147636413574
    8. '=[]' → logprob: -10.917147636413574
    9. '=[
' → logprob: -11.292147636413574
    10. ']=' → logprob: -11.917147636413574

Token 530: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021993827540427446
    2. '-' → logprob: -6.127199172973633
    3. '[' → logprob: -11.502199172973633
    4. '[-' → logprob: -13.252199172973633
    5. '-(' → logprob: -14.002199172973633
    6. '-[' → logprob: -14.127199172973633
    7. ' ' → logprob: -14.502199172973633
    8. ' -' → logprob: -16.752199172973633
    9. '-w' → logprob: -16.752199172973633
    10. 'float' → logprob: -16.752199172973633

Token 531: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.017549337819218636
    2. ']+' → logprob: -4.392549514770508
    3. ']' → logprob: -5.392549514770508
    4. ']*' → logprob: -8.392549514770508
    5. 'for' → logprob: -8.517549514770508
    6. ' for' → logprob: -10.267549514770508
    7. '*(' → logprob: -11.142549514770508
    8. ' ]' → logprob: -15.642549514770508
    9. ')*(' → logprob: -15.767549514770508
    10. '```' → logprob: -15.892549514770508

Token 532: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -5.512236498361744e-07
    2. ' W' → logprob: -15.000000953674316
    3. '(W' → logprob: -16.125
    4. '   ' → logprob: -17.25
    5. '	W' → logprob: -20.75
    6. '(' → logprob: -21.375
    7. ' ' → logprob: -21.625
    8. ')' → logprob: -21.75
    9. '[' → logprob: -22.125
    10. '```' → logprob: -22.5

Token 533: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.306760805164231e-05
    2. ' +' → logprob: -11.25001335144043
    3. '+
' → logprob: -19.00001335144043
    4. ')+' → logprob: -19.25001335144043
    5. '＋' → logprob: -21.12501335144043
    6. '+)' → logprob: -21.75001335144043
    7. '*' → logprob: -22.00001335144043
    8. '```' → logprob: -22.00001335144043
    9. '+[' → logprob: -22.12501335144043
    10. '[' → logprob: -22.87501335144043

Token 534: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '+' → logprob: -18.5000057220459
    4. '   ' → logprob: -18.7500057220459
    5. '```' → logprob: -21.5000057220459
    6. '  ' → logprob: -22.3750057220459
    7. '１' → logprob: -22.7500057220459
    8. ' +' → logprob: -23.0000057220459
    9. '    ' → logprob: -23.0000057220459
    10. ')' → logprob: -23.2500057220459

Token 535: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06198415905237198
    2. ')
' → logprob: -2.811984062194824
    3. ')
' → logprob: -11.436984062194824
    4. ')

' → logprob: -12.311984062194824
    5. ' )' → logprob: -14.311984062194824
    6. ' )
' → logprob: -15.811984062194824
    7. '   ' → logprob: -16.18698501586914
    8. '
' → logprob: -16.56198501586914
    9. '),' → logprob: -16.68698501586914
    10. '<|end|>' → logprob: -17.06198501586914

Token 536: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4280400276184082
    2. 'for' → logprob: -1.4280400276184082
    3. '   ' → logprob: -2.303040027618408
    4. '	for' → logprob: -5.303040027618408
    5. '<|end|>' → logprob: -6.303040027618408
    6. '
' → logprob: -6.678040027618408
    7. '  
' → logprob: -9.30303955078125
    8. ' 
' → logprob: -9.30303955078125
    9. ' ' → logprob: -9.55303955078125
    10. '    
' → logprob: -9.80303955078125

Token 537: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0030030198395252228
    2. '   ' → logprob: -6.503003120422363
    3. ' for' → logprob: -6.503003120422363
    4. '	for' → logprob: -14.253003120422363
    5. '
' → logprob: -17.753002166748047
    6. '    
' → logprob: -17.878002166748047
    7. ' ' → logprob: -18.378002166748047
    8. '```' → logprob: -18.378002166748047
    9. '  ' → logprob: -19.128002166748047
    10. '  
' → logprob: -20.003002166748047

Token 538: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08999373763799667
    2. 'w' → logprob: -3.214993715286255
    3. 'item' → logprob: -3.214993715286255
    4. ' s' → logprob: -5.964993953704834
    5. 'weight' → logprob: -6.214993953704834
    6. 'wt' → logprob: -7.339993953704834
    7. ' item' → logprob: -8.589993476867676
    8. ' w' → logprob: -8.714993476867676
    9. 'name' → logprob: -9.214993476867676
    10. '(s' → logprob: -10.964993476867676

Token 539: ',p' (ID: 14835)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3574000597000122
    2. 'in' → logprob: -1.2324000597000122
    3. ',' → logprob: -5.607399940490723
    4. ',v' → logprob: -5.982399940490723
    5. '   ' → logprob: -6.232399940490723
    6. '_in' → logprob: -7.982399940490723
    7. ' ,' → logprob: -9.232399940490723
    8. ',in' → logprob: -9.857399940490723
    9. '    ' → logprob: -9.982399940490723
    10. ' ' → logprob: -9.982399940490723

Token 540: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22571666538715363
    2. 'in' → logprob: -1.6007167100906372
    3. '   ' → logprob: -8.850716590881348
    4. ',' → logprob: -9.225716590881348
    5. '  ' → logprob: -11.350716590881348
    6. '_in' → logprob: -11.725716590881348
    7. 'for' → logprob: -11.975716590881348
    8. 's' → logprob: -12.100716590881348
    9. 'n' → logprob: -12.225716590881348
    10. ' ' → logprob: -12.600716590881348

Token 541: ' goods' (ID: 14854)
  Prédit: 'goods'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goods' → logprob: -0.07140595465898514
    2. 'items' → logprob: -2.8214058876037598
    3. 'profit' → logprob: -4.94640588760376
    4. ' goods' → logprob: -6.19640588760376
    5. 'profits' → logprob: -8.946406364440918
    6. ' items' → logprob: -9.821406364440918
    7. ' profit' → logprob: -11.071406364440918
    8. 'prof' → logprob: -11.446406364440918
    9. 'products' → logprob: -11.571406364440918
    10. '(goods' → logprob: -12.196406364440918

Token 542: '.items' (ID: 19607)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007090907543897629
    2. ':
' → logprob: -5.007091045379639
    3. '):' → logprob: -9.00709056854248
    4. 'items' → logprob: -9.38209056854248
    5. ',' → logprob: -9.50709056854248
    6. '.items' → logprob: -10.00709056854248
    7. ' items' → logprob: -11.63209056854248
    8. '):
' → logprob: -11.75709056854248
    9. 'in' → logprob: -11.88209056854248
    10. ' in' → logprob: -12.00709056854248

Token 543: '():
' (ID: 8595)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023337023332715034
    2. ':
' → logprob: -3.7733371257781982
    3. '   ' → logprob: -10.398337364196777
    4. '):' → logprob: -10.648337364196777
    5. '):
' → logprob: -10.898337364196777
    6. ',' → logprob: -11.273337364196777
    7. ' :' → logprob: -13.273337364196777
    8. ':
' → logprob: -13.398337364196777
    9. '       ' → logprob: -13.773337364196777
    10. '():
' → logprob: -14.773337364196777

Token 544: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08291587978601456
    2. '   ' → logprob: -2.582915782928467
    3. ' for' → logprob: -6.582915782928467
    4. ' v' → logprob: -7.457915782928467
    5. '    ' → logprob: -7.832915782928467
    6. 'v' → logprob: -7.832915782928467
    7. ',' → logprob: -7.832915782928467
    8. '	   ' → logprob: -8.457916259765625
    9. ',v' → logprob: -9.082916259765625
    10. '     ' → logprob: -9.207916259765625

Token 545: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' (adapté à ' w') → logprob: -0.6037061810493469
    2. 'weight' → logprob: -1.2287061214447021
    3. 'v' → logprob: -2.103706121444702
    4. 'wt' → logprob: -4.228706359863281
    5. '   ' → logprob: -4.728706359863281
    6. '       ' → logprob: -4.978706359863281
    7. 'for' → logprob: -5.228706359863281
    8. '           ' → logprob: -6.728706359863281
    9. ' w' → logprob: -7.228706359863281
    10. 'wv' → logprob: -7.853706359863281

Token 546: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -5.848420551046729e-05
    2. ' =' → logprob: -10.2500581741333
    3. '=v' → logprob: -10.8750581741333
    4. 'v' → logprob: -13.1250581741333
    5. 'items' → logprob: -14.6250581741333
    6. ',' → logprob: -14.6250581741333
    7. '=item' → logprob: -14.6250581741333
    8. ',v' → logprob: -15.2500581741333
    9. '=
' → logprob: -16.000059127807617
    10. '=int' → logprob: -16.125059127807617

Token 547: 'items' (ID: 6918)
  Prédit: 'items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.0002967320033349097
    2. ' items' → logprob: -8.125296592712402
    3. '	items' → logprob: -15.500296592712402
    4. 'p' → logprob: -15.875296592712402
    5. '(items' → logprob: -16.12529754638672
    6. '   ' → logprob: -16.12529754638672
    7. 'v' → logprob: -16.50029754638672
    8. '[' → logprob: -18.00029754638672
    9. '.items' → logprob: -18.00029754638672
    10. '
' → logprob: -18.12529754638672

Token 548: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.00014025058771949261
    2. 's' → logprob: -8.875140190124512
    3. '{s' → logprob: -16.625141143798828
    4. '[' → logprob: -16.875141143798828
    5. '(s' → logprob: -17.125141143798828
    6. '=s' → logprob: -17.125141143798828
    7. ' [' → logprob: -17.750141143798828
    8. '	s' → logprob: -17.875141143798828
    9. ' s' → logprob: -18.000141143798828
    10. '```' → logprob: -18.250141143798828

Token 549: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.007975318469107151
    2. '[' → logprob: -5.132975101470947
    3. '0' → logprob: -6.257975101470947
    4. 's' → logprob: -10.257975578308105
    5. ']' → logprob: -11.132975578308105
    6. '"][' → logprob: -11.132975578308105
    7. ''][' → logprob: -11.382975578308105
    8. ' ][' → logprob: -11.507975578308105
    9. 'def' → logprob: -11.882975578308105
    10. ')[' → logprob: -12.007975578308105

Token 550: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.750000953674316
    3. '1' → logprob: -15.937500953674316
    4. 'v' → logprob: -17.1875
    5. '```' → logprob: -17.5
    6. '[' → logprob: -17.5625
    7. '   ' → logprob: -17.75
    8. '۰' → logprob: -17.8125
    9. ']' → logprob: -18.8125
    10. ')' → logprob: -18.8125

Token 551: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6191753149032593
    2. ')' → logprob: -0.9941753149032593
    3. ']
' → logprob: -2.994175434112549
    4. ')
' → logprob: -3.744175434112549
    5. '<|end|>' → logprob: -4.369175434112549
    6. '   ' → logprob: -6.369175434112549
    7. '
' → logprob: -6.994175434112549
    8. '<|end|>' → logprob: -7.244175434112549
    9. '       ' → logprob: -7.619175434112549
    10. ')]' → logprob: -8.36917495727539

Token 552: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19635078310966492
    2. ' for' → logprob: -1.8213508129119873
    3. '
' → logprob: -4.696350574493408
    4. '    
' → logprob: -6.446350574493408
    5. 'for' → logprob: -6.446350574493408
    6. ' 
' → logprob: -6.946350574493408
    7. '	for' → logprob: -7.071350574493408
    8. '<|end|>' → logprob: -7.821350574493408
    9. ' ' → logprob: -7.946350574493408
    10. '  
' → logprob: -8.196351051330566

Token 553: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00033760786755010486
    2. ' for' → logprob: -8.000337600708008
    3. '   ' → logprob: -13.125337600708008
    4. '       ' → logprob: -16.375337600708008
    5. 'if' → logprob: -18.250337600708008
    6. '	for' → logprob: -20.375337600708008
    7. '           ' → logprob: -20.500337600708008
    8. '```' → logprob: -21.125337600708008
    9. 'p' → logprob: -21.500337600708008
    10. '    ' → logprob: -21.750337600708008

Token 554: ' weight' (ID: 6049)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.019389240071177483
    2. 'wt' → logprob: -4.3943891525268555
    3. 'j' → logprob: -5.2693891525268555
    4. 'w' → logprob: -7.5193891525268555
    5. 'cap' → logprob: -7.6443891525268555
    6. 'wei' → logprob: -8.394389152526855
    7. 'ww' → logprob: -8.519389152526855
    8. ' weight' → logprob: -9.019389152526855
    9. 'capacity' → logprob: -10.144389152526855
    10. 'cost' → logprob: -10.769389152526855

Token 555: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03816875442862511
    2. 'in' → logprob: -3.2881686687469482
    3. 'w' → logprob: -9.038168907165527
    4. '_in' → logprob: -13.288168907165527
    5. 's' → logprob: -13.538168907165527
    6. ' ' → logprob: -13.663168907165527
    7. 'range' → logprob: -14.288168907165527
    8. 'i' → logprob: -14.538168907165527
    9. '   ' → logprob: -14.913168907165527
    10. 'In' → logprob: -15.038168907165527

Token 556: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4740773141384125
    2. ' range' → logprob: -0.9740773439407349
    3. '(range' → logprob: -15.974077224731445
    4. 'w' → logprob: -16.099077224731445
    5. ' w' → logprob: -18.224077224731445
    6. '_range' → logprob: -18.474077224731445
    7. '	range' → logprob: -18.474077224731445
    8. 'r' → logprob: -18.599077224731445
    9. 'rang' → logprob: -18.849077224731445
    10. '   ' → logprob: -18.974077224731445

Token 557: '(w' (ID: 7420)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -7.896309739408025e-07
    2. ' w' → logprob: -14.125000953674316
    3. '	w' → logprob: -18.5
    4. '[w' → logprob: -19.25
    5. '(w' → logprob: -20.25
    6. '=w' → logprob: -20.375
    7. '_w' → logprob: -20.75
    8. '   ' → logprob: -21.25
    9. '*w' → logprob: -21.25
    10. '>w' → logprob: -21.625

Token 558: ',W' (ID: 117252)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5928268432617188
    2. ',w' → logprob: -0.8428268432617188
    3. ',W' → logprob: -4.092826843261719
    4. ' ,' → logprob: -10.092826843261719
    5. 'w' → logprob: -12.467826843261719
    6. ',len' → logprob: -12.842826843261719
    7. ',
' → logprob: -13.342826843261719
    8. ',m' → logprob: -14.467826843261719
    9. ',p' → logprob: -14.717826843261719
    10. '       ' → logprob: -14.967826843261719

Token 559: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.028899164870381355
    2. '-w' → logprob: -3.9038991928100586
    3. ' +' → logprob: -5.403899192810059
    4. ' -' → logprob: -6.653899192810059
    5. '+w' → logprob: -6.653899192810059
    6. 'w' → logprob: -7.153899192810059
    7. ',w' → logprob: -8.653899192810059
    8. ',' → logprob: -9.028899192810059
    9. '   ' → logprob: -9.278899192810059
    10. '-' → logprob: -10.653899192810059

Token 560: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -12.75000286102295
    3. '+' → logprob: -15.25000286102295
    4. '   ' → logprob: -16.000003814697266
    5. '
' → logprob: -18.000003814697266
    6. '=' → logprob: -18.125003814697266
    7. ')' → logprob: -18.125003814697266
    8. 'w' → logprob: -18.250003814697266
    9. '{' → logprob: -19.125003814697266
    10. '```' → logprob: -19.375003814697266

Token 561: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.01004068087786436
    2. '):' → logprob: -4.635040760040283
    3. '):
' → logprob: -8.635040283203125
    4. '   ' → logprob: -9.635040283203125
    5. ',' → logprob: -11.260040283203125
    6. '       ' → logprob: -11.760040283203125
    7. '):

' → logprob: -11.760040283203125
    8. ',w' → logprob: -11.760040283203125
    9. ')' → logprob: -13.385040283203125
    10. ' ):
' → logprob: -13.635040283203125

Token 562: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004735326394438744
    2. ' dp' → logprob: -6.004735469818115
    3. 'dp' → logprob: -7.004735469818115
    4. '	dp' → logprob: -7.629735469818115
    5. '	       ' → logprob: -8.004734992980957
    6. '   ' → logprob: -8.504734992980957
    7. '               ' → logprob: -9.379734992980957
    8. '(dp' → logprob: -9.379734992980957
    9. ' if' → logprob: -9.754734992980957
    10. '       ' → logprob: -11.129734992980957

Token 563: ' val' (ID: 1459)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.01622135005891323
    2. ' dp' → logprob: -4.391221523284912
    3. '           ' → logprob: -6.016221523284912
    4. 'if' → logprob: -7.516221523284912
    5. 'new' → logprob: -8.516221046447754
    6. '               ' → logprob: -8.891221046447754
    7. '   ' → logprob: -8.891221046447754
    8. ' if' → logprob: -8.891221046447754
    9. '	dp' → logprob: -9.516221046447754
    10. ' new' → logprob: -11.891221046447754

Token 564: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18573804199695587
    2. '=max' → logprob: -2.4357380867004395
    3. ' =' → logprob: -3.1857380867004395
    4. '_dp' → logprob: -4.1857380867004395
    5. 'dp' → logprob: -4.5607380867004395
    6. 'max' → logprob: -5.4357380867004395
    7. '   ' → logprob: -5.6857380867004395
    8. '_max' → logprob: -6.9357380867004395
    9. '                   ' → logprob: -7.1857380867004395
    10. 's' → logprob: -7.3107380867004395

Token 565: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07008259743452072
    2. 'max' → logprob: -2.695082664489746
    3. ' dp' → logprob: -9.195082664489746
    4. ' max' → logprob: -10.570082664489746
    5. '   ' → logprob: -11.695082664489746
    6. '(dp' → logprob: -13.195082664489746
    7. '	dp' → logprob: -13.320082664489746
    8. 'val' → logprob: -13.445082664489746
    9. 'weight' → logprob: -13.570082664489746
    10. 'min' → logprob: -13.945082664489746

Token 566: '_kn' (ID: 155966)
  Prédit: '_kn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_kn' → logprob: -2.2200749754119897e-06
    2. 'kn' → logprob: -13.250001907348633
    3. '[' → logprob: -16.000001907348633
    4. '_' → logprob: -16.500001907348633
    5. 'Kn' → logprob: -16.625001907348633
    6. '_k' → logprob: -18.125001907348633
    7. '```' → logprob: -18.500001907348633
    8. '   ' → logprob: -18.750001907348633
    9. '
' → logprob: -18.875001907348633
    10. '_kw' → logprob: -19.125001907348633

Token 567: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.003123287111520767
    2. 'kn' → logprob: -6.1281232833862305
    3. '_kn' → logprob: -7.2531232833862305
    4. 'ak' → logprob: -9.75312328338623
    5. 'apsack' → logprob: -9.87812328338623
    6. '[' → logprob: -10.25312328338623
    7. 'p' → logprob: -10.62812328338623
    8. 'ck' → logprob: -11.37812328338623
    9. 'dp' → logprob: -11.37812328338623
    10. 'k' → logprob: -12.12812328338623

Token 568: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0802738870552275e-05
    2. 'weight' → logprob: -11.50001049041748
    3. '   ' → logprob: -15.75001049041748
    4. '               ' → logprob: -16.125011444091797
    5. '[
' → logprob: -16.125011444091797
    6. '                   ' → logprob: -16.625011444091797
    7. '           ' → logprob: -16.625011444091797
    8. '```' → logprob: -17.125011444091797
    9. '
' → logprob: -17.750011444091797
    10. ' [' → logprob: -18.000011444091797

Token 569: 'weight' (ID: 8250)
  Prédit: 'weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -5.037835580878891e-05
    2. '[' → logprob: -10.12505054473877
    3. ' weight' → logprob: -11.62505054473877
    4. '(weight' → logprob: -14.37505054473877
    5. '   ' → logprob: -14.50005054473877
    6. '
' → logprob: -16.125049591064453
    7. 'weig' → logprob: -16.250049591064453
    8. 'weights' → logprob: -18.000049591064453
    9. '    ' → logprob: -18.125049591064453
    10. ' ' → logprob: -18.125049591064453

Token 570: '-w' (ID: 4450)
  Prédit: '-weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-weight' → logprob: -0.45476099848747253
    2. '-' → logprob: -1.829761028289795
    3. '[' → logprob: -2.079761028289795
    4. ' -' → logprob: -2.829761028289795
    5. 'weight' → logprob: -4.579761028289795
    6. '   ' → logprob: -5.204761028289795
    7. '-w' → logprob: -5.954761028289795
    8. ']' → logprob: -6.204761028289795
    9. '[w' → logprob: -8.829760551452637
    10. '           ' → logprob: -9.579760551452637

Token 571: ']+' (ID: 15344)
  Prédit: '+p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+p' → logprob: -0.09538038074970245
    2. ' +' → logprob: -2.9703803062438965
    3. ']+' → logprob: -3.7203803062438965
    4. '+' → logprob: -4.2203803062438965
    5. ')+' → logprob: -7.5953803062438965
    6. ']' → logprob: -8.470380783081055
    7. '+w' → logprob: -11.095380783081055
    8. '}+' → logprob: -11.095380783081055
    9. ')' → logprob: -12.720380783081055
    10. '+s' → logprob: -12.845380783081055

Token 572: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -2.696889623621246e-06
    2. ' p' → logprob: -12.87500286102295
    3. '           ' → logprob: -19.000001907348633
    4. '   ' → logprob: -20.750001907348633
    5. '               ' → logprob: -21.750001907348633
    6. '	p' → logprob: -21.875001907348633
    7. '<p' → logprob: -22.125001907348633
    8. '       ' → logprob: -22.125001907348633
    9. '$p' → logprob: -22.375001907348633
    10. '*p' → logprob: -22.625001907348633

Token 573: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3047797977924347
    2. 'if' → logprob: -1.5547797679901123
    3. '
' → logprob: -3.6797797679901123
    4. ' if' → logprob: -4.054780006408691
    5. 'dp' → logprob: -5.679780006408691
    6. '       ' → logprob: -5.804780006408691
    7. '               ' → logprob: -7.179780006408691
    8. ')
' → logprob: -7.429780006408691
    9. ')' → logprob: -7.804780006408691
    10. '   ' → logprob: -8.429780006408691

Token 574: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10282235592603683
    2. 'if' → logprob: -2.8528223037719727
    3. '
' → logprob: -3.6028223037719727
    4. ' if' → logprob: -4.602822303771973
    5. 'dp' → logprob: -6.227822303771973
    6. '       ' → logprob: -8.727822303771973
    7. '               ' → logprob: -8.727822303771973
    8. ';if' → logprob: -9.602822303771973
    9. '=' → logprob: -9.852822303771973
    10. ')
' → logprob: -9.977822303771973

Token 575: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04351724684238434
    2. ' if' → logprob: -3.5435173511505127
    3. '           ' → logprob: -4.293517112731934
    4. '   ' → logprob: -11.793517112731934
    5. '       ' → logprob: -12.418517112731934
    6. '               ' → logprob: -13.543517112731934
    7. '	if' → logprob: -13.668517112731934
    8. 'dp' → logprob: -14.168517112731934
    9. '```' → logprob: -14.543517112731934
    10. '            
' → logprob: -15.918517112731934

Token 576: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0004790512612089515
    2. ' val' → logprob: -7.875479221343994
    3. 'dp' → logprob: -9.250478744506836
    4. '   ' → logprob: -13.375478744506836
    5. ' dp' → logprob: -14.375478744506836
    6. '	val' → logprob: -14.500478744506836
    7. '  ' → logprob: -17.125478744506836
    8. ' ' → logprob: -17.375478744506836
    9. '           ' → logprob: -17.750478744506836
    10. '```' → logprob: -17.875478744506836

Token 577: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.004219316877424717
    2. ' >' → logprob: -5.5042195320129395
    3. 'dp' → logprob: -9.504219055175781
    4. '(dp' → logprob: -10.629219055175781
    5. '[' → logprob: -11.504219055175781
    6. '_dp' → logprob: -11.504219055175781
    7. ']>' → logprob: -12.004219055175781
    8. '>
' → logprob: -12.629219055175781
    9. ')>' → logprob: -13.504219055175781
    10. '	dp' → logprob: -13.629219055175781

Token 578: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -3.173704271830502e-06
    2. ' dp' → logprob: -12.75000286102295
    3. '	dp' → logprob: -15.87500286102295
    4. '_dp' → logprob: -18.375003814697266
    5. '(dp' → logprob: -18.500003814697266
    6. '   ' → logprob: -20.250003814697266
    7. '
' → logprob: -21.625003814697266
    8. '           ' → logprob: -21.750003814697266
    9. '.dp' → logprob: -22.750003814697266
    10. 'd' → logprob: -23.000003814697266

Token 579: '_kn' (ID: 155966)
  Prédit: '_kn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_kn' → logprob: 0.0
    2. 'kn' → logprob: -16.875
    3. '_' → logprob: -17.75
    4. '_k' → logprob: -19.75
    5. 'Kn' → logprob: -20.875
    6. '
' → logprob: -21.25
    7. '```' → logprob: -21.625
    8. '[' → logprob: -21.75
    9. '.kn' → logprob: -22.0
    10. '_
' → logprob: -22.25

Token 580: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.000633566698525101
    2. 'ak' → logprob: -7.500633716583252
    3. '_kn' → logprob: -9.875633239746094
    4. 'kn' → logprob: -10.750633239746094
    5. '_ap' → logprob: -13.125633239746094
    6. 'p' → logprob: -14.000633239746094
    7. 'k' → logprob: -14.250633239746094
    8. '[' → logprob: -14.375633239746094
    9. 'ack' → logprob: -14.500633239746094
    10. 'a' → logprob: -14.625633239746094

Token 581: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.896309739408025e-07
    2. 'weight' → logprob: -14.375000953674316
    3. '[
' → logprob: -15.625000953674316
    4. '   ' → logprob: -17.625
    5. '
' → logprob: -18.5
    6. ' [' → logprob: -18.875
    7. '=' → logprob: -19.375
    8. '_weight' → logprob: -19.625
    9. '```' → logprob: -20.125
    10. '[word' → logprob: -20.625

Token 582: 'weight' (ID: 8250)
  Prédit: 'weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -9.088346359931165e-07
    2. ' weight' → logprob: -14.000000953674316
    3. '[' → logprob: -19.75
    4. '_weight' → logprob: -22.375
    5. '(weight' → logprob: -22.5
    6. 'weights' → logprob: -23.125
    7. '   ' → logprob: -23.5
    8. 'Weight' → logprob: -23.625
    9. 'weig' → logprob: -23.75
    10. '.weight' → logprob: -24.5

Token 583: ']:
' (ID: 22152)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4637497067451477
    2. 'weight' → logprob: -1.088749647140503
    3. '_weight' → logprob: -3.463749647140503
    4. '-weight' → logprob: -6.963749885559082
    5. ' weight' → logprob: -7.338749885559082
    6. '):' → logprob: -7.963749885559082
    7. ']' → logprob: -8.213749885559082
    8. '-' → logprob: -8.338749885559082
    9. '(weight' → logprob: -8.838749885559082
    10. '   ' → logprob: -9.213749885559082

Token 584: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009072950924746692
    2. ' dp' → logprob: -8.000906944274902
    3. 'dp' → logprob: -8.125906944274902
    4. '                   ' → logprob: -9.500906944274902
    5. '                       ' → logprob: -9.625906944274902
    6. '(dp' → logprob: -9.625906944274902
    7. '           ' → logprob: -11.125906944274902
    8. '	dp' → logprob: -11.250906944274902
    9. '_dp' → logprob: -11.250906944274902
    10. '```' → logprob: -11.375906944274902

Token 585: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.07912717014551163
    2. ' dp' → logprob: -2.579127073287964
    3. '                   ' → logprob: -8.829127311706543
    4. '               ' → logprob: -9.454127311706543
    5. '                       ' → logprob: -12.329127311706543
    6. '	dp' → logprob: -12.329127311706543
    7. '_dp' → logprob: -13.329127311706543
    8. '(dp' → logprob: -13.329127311706543
    9. '           ' → logprob: -16.079126358032227
    10. '                           ' → logprob: -16.454126358032227

Token 586: '_kn' (ID: 155966)
  Prédit: '_kn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_kn' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -14.000000953674316
    3. 'kn' → logprob: -16.250001907348633
    4. '_k' → logprob: -17.125001907348633
    5. '[' → logprob: -18.375001907348633
    6. '```' → logprob: -19.125001907348633
    7. '
' → logprob: -19.750001907348633
    8. 'Kn' → logprob: -19.750001907348633
    9. '.kn' → logprob: -20.000001907348633
    10. '   ' → logprob: -20.250001907348633

Token 587: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.00043984793592244387
    2. 'kn' → logprob: -8.625439643859863
    3. '_kn' → logprob: -8.875439643859863
    4. 'ak' → logprob: -9.375439643859863
    5. 'apsack' → logprob: -11.375439643859863
    6. 'p' → logprob: -12.125439643859863
    7. '[' → logprob: -12.750439643859863
    8. 'nap' → logprob: -13.000439643859863
    9. '```' → logprob: -13.000439643859863
    10. 'ck' → logprob: -13.125439643859863

Token 588: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. 'weight' → logprob: -15.375000953674316
    3. '=' → logprob: -16.5
    4. '[
' → logprob: -16.75
    5. '
' → logprob: -17.625
    6. '[val' → logprob: -17.625
    7. '```' → logprob: -18.5
    8. ' [' → logprob: -18.75
    9. '_weight' → logprob: -18.875
    10. '[word' → logprob: -18.875

Token 589: 'weight' (ID: 8250)
  Prédit: 'weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -6.704273118884885e-07
    2. ' weight' → logprob: -14.375000953674316
    3. '[' → logprob: -18.0
    4. 'weig' → logprob: -20.0
    5. '_weight' → logprob: -20.25
    6. '(weight' → logprob: -20.75
    7. '   ' → logprob: -21.5
    8. '```' → logprob: -21.5
    9. 'weights' → logprob: -22.0
    10. 'Weight' → logprob: -22.0

Token 590: ']=' (ID: 9539)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.018816055729985237
    2. '=' → logprob: -4.143815994262695
    3. 'weight' → logprob: -6.518815994262695
    4. ']=' → logprob: -7.893815994262695
    5. ']' → logprob: -8.393815994262695
    6. '[
' → logprob: -8.768815994262695
    7. '[w' → logprob: -9.268815994262695
    8. '][' → logprob: -9.768815994262695
    9. '_weight' → logprob: -10.018815994262695
    10. 's' → logprob: -10.018815994262695

Token 591: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -5.512236498361744e-07
    2. ' val' → logprob: -14.500000953674316
    3. '	val' → logprob: -22.5
    4. '(val' → logprob: -22.75
    5. '[val' → logprob: -23.125
    6. 'va' → logprob: -23.75
    7. 'v' → logprob: -24.375
    8. '_val' → logprob: -24.375
    9. '.val' → logprob: -25.375
    10. 'Val' → logprob: -26.0

Token 592: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04506250098347664
    2. 'return' → logprob: -3.79506254196167
    3. '    
' → logprob: -4.42006254196167
    4. ' return' → logprob: -5.67006254196167
    5. '
' → logprob: -5.92006254196167
    6. ')' → logprob: -7.17006254196167
    7. '<|end|>' → logprob: -8.045062065124512
    8. '  
' → logprob: -8.295062065124512
    9. ' 
' → logprob: -8.795062065124512
    10. 'for' → logprob: -8.795062065124512

Token 593: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000947545631788671
    2. 'return' → logprob: -7.00094747543335
    3. ' return' → logprob: -10.500947952270508
    4. 'for' → logprob: -12.625947952270508
    5. '```' → logprob: -13.750947952270508
    6. '    
' → logprob: -14.000947952270508
    7. '	return' → logprob: -14.375947952270508
    8. '       ' → logprob: -14.625947952270508
    9. ' for' → logprob: -15.000947952270508
    10. '[' → logprob: -15.000947952270508

Token 594: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16091783344745636
    2. 'return' (adapté à ' return') → logprob: -1.91091787815094
    3. ' return' → logprob: -7.53591775894165
    4. '
' → logprob: -8.910918235778809
    5. '    
' → logprob: -11.410918235778809
    6. '```' → logprob: -11.535918235778809
    7. '	return' → logprob: -14.160918235778809
    8. '0' → logprob: -14.660918235778809
    9. 'for' → logprob: -14.785918235778809
    10. '       ' → logprob: -14.785918235778809

Token 595: ' max' (ID: 2999)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0021112398244440556
    2. ' dp' → logprob: -6.252111434936523
    3. 'max' → logprob: -8.627111434936523
    4. ' max' → logprob: -12.627111434936523
    5. '(dp' → logprob: -16.002111434936523
    6. '	dp' → logprob: -16.752111434936523
    7. '   ' → logprob: -17.002111434936523
    8. ' ' → logprob: -18.252111434936523
    9. '_dp' → logprob: -18.752111434936523
    10. '0' → logprob: -18.877111434936523

Token 596: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.00026205103495158255
    2. 'dp' → logprob: -8.250262260437012
    3. '(' → logprob: -14.250262260437012
    4. ' dp' → logprob: -16.750261306762695
    5. '_dp' → logprob: -17.125261306762695
    6. '	dp' → logprob: -18.875261306762695
    7. '(
' → logprob: -19.375261306762695
    8. '_' → logprob: -21.375261306762695
    9. '(d' → logprob: -21.500261306762695
    10. '(_' → logprob: -21.625261306762695

Token 597: '_kn' (ID: 155966)
  Prédit: '_kn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_kn' → logprob: -1.6240566083070007e-06
    2. 'kn' → logprob: -13.625001907348633
    3. '_dp' → logprob: -15.375001907348633
    4. 'Kn' → logprob: -15.625001907348633
    5. '_' → logprob: -18.500001907348633
    6. 'dp' → logprob: -19.250001907348633
    7. '_k' → logprob: -19.500001907348633
    8. '[' → logprob: -19.750001907348633
    9. '-kn' → logprob: -19.875001907348633
    10. '.kn' → logprob: -20.000001907348633

Token 598: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.0008183232857845724
    2. '_kn' → logprob: -7.875818252563477
    3. 'kn' → logprob: -8.250818252563477
    4. 'ak' → logprob: -9.875818252563477
    5. 'Kn' → logprob: -10.500818252563477
    6. 'dp' → logprob: -10.500818252563477
    7. '[' → logprob: -10.500818252563477
    8. 'p' → logprob: -10.750818252563477
    9. 'ап' → logprob: -12.750818252563477
    10. '_k' → logprob: -12.750818252563477

Token 599: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.080963092041202e-06
    2. ')
' → logprob: -13.250004768371582
    3. '())' → logprob: -13.875004768371582
    4. '))' → logprob: -14.500004768371582
    5. '[])' → logprob: -14.500004768371582
    6. '[' → logprob: -15.250004768371582
    7. ' )' → logprob: -15.625004768371582
    8. ')}}' → logprob: -16.1250057220459
    9. ')+' → logprob: -16.2500057220459
    10. '])' → logprob: -16.3750057220459

Token 600: 'from' (ID: 2845)
  Prédit: 'from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.023999478667974472
    2. 'subset' → logprob: -5.1489996910095215
    3. 'for' → logprob: -5.2739996910095215
    4. 'max' → logprob: -6.2739996910095215
    5. 'best' → logprob: -6.2739996910095215
    6. 'all' → logprob: -6.3989996910095215
    7. 'full' → logprob: -6.6489996910095215
    8. 'ans' → logprob: -6.7739996910095215
    9. 'memo' → logprob: -6.7739996910095215
    10. 'answer' → logprob: -6.8989996910095215

Token 601: ' itertools' (ID: 103178)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.16788218915462494
    2. 'math' → logprob: -2.417882204055786
    3. 'collections' → logprob: -2.917882204055786
    4. ' itertools' → logprob: -5.417881965637207
    5. 'sys' → logprob: -5.542881965637207
    6. 'heap' → logprob: -6.167881965637207
    7. 'copy' → logprob: -7.917881965637207
    8. '_it' → logprob: -8.042881965637207
    9. 'operator' → logprob: -8.917881965637207
    10. 'fun' → logprob: -9.542881965637207

Token 602: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.045662518590688705
    2. ' import' → logprob: -3.1706624031066895
    3. '	import' → logprob: -6.6706624031066895
    4. '_import' → logprob: -7.1706624031066895
    5. '(import' → logprob: -9.045662879943848
    6. '```' → logprob: -9.170662879943848
    7. '<|end|>' → logprob: -9.420662879943848
    8. '_IMPORT' → logprob: -9.795662879943848
    9. '-import' → logprob: -9.795662879943848
    10. '.import' → logprob: -9.795662879943848

Token 603: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.031762249767780304
    2. 'product' → logprob: -3.5317623615264893
    3. 'chain' → logprob: -6.28176212310791
    4. 'per' → logprob: -8.90676212310791
    5. 'comb' → logprob: -13.65676212310791
    6. 'acc' → logprob: -14.03176212310791
    7. 'compress' → logprob: -14.40676212310791
    8. ' combinations' → logprob: -14.40676212310791
    9. 'products' → logprob: -15.15676212310791
    10. 'sub' → logprob: -15.28176212310791

Token 604: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013687161728739738
    2. 'all' → logprob: -5.1386871337890625
    3. 'range' → logprob: -5.7636871337890625
    4. 'def' → logprob: -6.3886871337890625
    5. 'ranges' → logprob: -7.2636871337890625
    6. 'city' → logprob: -7.5136871337890625
    7. ',' → logprob: -7.5136871337890625
    8. 'from' → logprob: -8.013687133789062
    9. '
' → logprob: -8.388687133789062
    10. 'results' → logprob: -9.513687133789062

Token 605: 'subset' (ID: 163297)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5400617718696594
    2. 'all' → logprob: -2.5400617122650146
    3. 'max' → logprob: -2.6650617122650146
    4. 'subset' → logprob: -2.6650617122650146
    5. 'profit' → logprob: -3.2900617122650146
    6. 'best' → logprob: -3.4150617122650146
    7. 'profits' → logprob: -3.6650617122650146
    8. 'res' → logprob: -3.7900617122650146
    9. 'sub' → logprob: -3.9150617122650146
    10. 'city' → logprob: -4.290061950683594

Token 606: '_profit' (ID: 186239)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.009464818052947521
    2. '_s' → logprob: -5.009464740753174
    3. '_sub' → logprob: -7.259464740753174
    4. '=' → logprob: -7.509464740753174
    5. '_sizes' → logprob: -7.634464740753174
    6. '_list' → logprob: -8.384465217590332
    7. 'for' → logprob: -8.509465217590332
    8. '_ranges' → logprob: -9.009465217590332
    9. ' =' → logprob: -9.509465217590332
    10. '=sub' → logprob: -9.634465217590332

Token 607: '=dict' (ID: 91391)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11021464318037033
    2. '={}' → logprob: -2.4852147102355957
    3. '=[' → logprob: -4.235214710235596
    4. 's' → logprob: -5.735214710235596
    5. '={' → logprob: -6.735214710235596
    6. '=[]' → logprob: -6.860214710235596
    7. '=dict' → logprob: -7.610214710235596
    8. ' =' → logprob: -8.735214233398438
    9. '=sub' → logprob: -8.860214233398438
    10. '={}
' → logprob: -9.110214233398438

Token 608: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03463614359498024
    2. '=' → logprob: -3.6596362590789795
    3. '()
' → logprob: -5.0346360206604
    4. '={}' → logprob: -6.5346360206604
    5. '()

' → logprob: -9.784636497497559
    6. '(' → logprob: -9.909636497497559
    7. ' =' → logprob: -10.284636497497559
    8. '={}
' → logprob: -10.409636497497559
    9. '={' → logprob: -10.409636497497559
    10. '=[]' → logprob: -10.534636497497559

Token 609: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.8624639324116288e-06
    2. ' for' → logprob: -13.375001907348633
    3. '```' → logprob: -15.875001907348633
    4. 'range' → logprob: -16.625001907348633
    5. 'from' → logprob: -17.000001907348633
    6. 'all' → logprob: -20.750001907348633
    7. '_for' → logprob: -21.125001907348633
    8. '	for' → logprob: -21.125001907348633
    9. 'ranges' → logprob: -21.500001907348633
    10. '<|end|>' → logprob: -21.625001907348633

Token 610: ' generate' (ID: 10419)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.9361264946837764e-07
    2. 'from' → logprob: -16.5
    3. ' for' → logprob: -17.25
    4. 'def' → logprob: -19.125
    5. '```' → logprob: -19.75
    6. '   ' → logprob: -21.125
    7. '#' → logprob: -21.375
    8. '
' → logprob: -21.875
    9. 'all' → logprob: -22.0
    10. 'range' → logprob: -22.25

Token 611: ' all' (ID: 722)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0073654912412166595
    2. 'range' → logprob: -5.382365703582764
    3. 'subset' → logprob: -6.882365703582764
    4. 'sub' → logprob: -7.382365703582764
    5. 'ranges' → logprob: -8.132365226745605
    6. ' for' → logprob: -8.382365226745605
    7. 'from' → logprob: -8.382365226745605
    8. 'r' → logprob: -8.632365226745605
    9. 's' → logprob: -9.507365226745605
    10. 'all' → logprob: -10.757365226745605

Token 612: ' subsets' (ID: 165377)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'subset' → logprob: -1.0340299606323242
    2. 'for' → logprob: -1.5340299606323242
    3. 'sub' → logprob: -1.7840299606323242
    4. 'sizes' → logprob: -2.284029960632324
    5. 'r' → logprob: -2.409029960632324
    6. 'size' → logprob: -3.909029960632324
    7. 'range' → logprob: -4.534029960632324
    8. 's' → logprob: -5.159029960632324
    9. 'sz' → logprob: -5.284029960632324
    10. 'length' → logprob: -5.284029960632324

Token 613: ' of' (ID: 328)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1101212128996849
    2. '(range' → logprob: -2.860121250152588
    3. 'range' → logprob: -3.110121250152588
    4. 'from' → logprob: -6.485121250152588
    5. 'subset' → logprob: -8.48512077331543
    6. '=' → logprob: -9.23512077331543
    7. 'def' → logprob: -9.23512077331543
    8. ' for' → logprob: -9.36012077331543
    9. '
' → logprob: -9.36012077331543
    10. '(sub' → logprob: -9.73512077331543

Token 614: ' cities' (ID: 15636)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.000675500778015703
    2. 'cities' → logprob: -7.625675678253174
    3. ' range' → logprob: -9.125675201416016
    4. 'N' → logprob: -10.375675201416016
    5. '(range' → logprob: -10.500675201416016
    6. 'ranges' → logprob: -11.750675201416016
    7. 'city' → logprob: -11.875675201416016
    8. '[N' → logprob: -13.000675201416016
    9. 'r' → logprob: -14.375675201416016
    10. '[' → logprob: -14.500675201416016

Token 615: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.024384045973420143
    2. 'range' → logprob: -3.774384021759033
    3. '(range' → logprob: -6.899384021759033
    4. 'from' → logprob: -9.774384498596191
    5. ' for' → logprob: -11.024384498596191
    6. '```' → logprob: -11.149384498596191
    7. '
' → logprob: -11.399384498596191
    8. '(' → logprob: -11.899384498596191
    9. 'ranges' → logprob: -12.024384498596191
    10. 'in' → logprob: -12.649384498596191

Token 616: 'non' (ID: 11741)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009523137705400586
    2. 'r' → logprob: -7.625952243804932
    3. ')' → logprob: -8.37595272064209
    4. ' range' → logprob: -9.50095272064209
    5. '(range' → logprob: -9.87595272064209
    6. 'for' → logprob: -10.00095272064209
    7. 'subset' → logprob: -11.00095272064209
    8. '1' → logprob: -11.12595272064209
    9. '(' → logprob: -11.50095272064209
    10. '```' → logprob: -12.12595272064209

Token 617: '-empty' (ID: 93958)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'empty' → logprob: -0.49932342767715454
    2. 'range' → logprob: -1.6243233680725098
    3. '0' → logprob: -2.1243233680725098
    4. 'zero' → logprob: -3.3743233680725098
    5. '=' → logprob: -3.9993233680725098
    6. ')' → logprob: -4.74932336807251
    7. '-empty' → logprob: -5.87432336807251
    8. 'e' → logprob: -5.99932336807251
    9. ']' → logprob: -5.99932336807251
    10. '[]' → logprob: -6.37432336807251

Token 618: ')
' (ID: 446)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.41766396164894104
    2. ',' → logprob: -1.6676639318466187
    3. 'for' → logprob: -2.167664051055908
    4. '):
' → logprob: -4.667664051055908
    5. '(range' → logprob: -4.792664051055908
    6. ')
' → logprob: -5.167664051055908
    7. ')' → logprob: -5.792664051055908
    8. 'ranges' → logprob: -5.917664051055908
    9. ',r' → logprob: -6.167664051055908
    10. 'subset' → logprob: -6.667664051055908

Token 619: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.664371848164592e-05
    2. 'range' → logprob: -11.375016212463379
    3. ' for' → logprob: -12.875016212463379
    4. '```' → logprob: -14.000016212463379
    5. 'from' → logprob: -14.250016212463379
    6. '
' → logprob: -14.375016212463379
    7. '(range' → logprob: -16.000017166137695
    8. '(' → logprob: -16.250017166137695
    9. 'def' → logprob: -16.625017166137695
    10. '``' → logprob: -16.875017166137695

Token 620: ' l' (ID: 305)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.6503399610519409
    2. 'r' → logprob: -0.9003399610519409
    3. 'sz' → logprob: -3.1503400802612305
    4. 'l' → logprob: -4.2753400802612305
    5. 'length' → logprob: -4.7753400802612305
    6. ' size' → logprob: -6.1503400802612305
    7. 'k' → logprob: -6.4003400802612305
    8. 'subset' → logprob: -6.6503400802612305
    9. ' r' → logprob: -7.6503400802612305
    10. 'i' → logprob: -8.27534008026123

Token 621: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0789303258061409
    2. 'in' → logprob: -2.578930377960205
    3. 'range' → logprob: -10.578929901123047
    4. '1' → logprob: -12.078929901123047
    5. 'i' → logprob: -12.703929901123047
    6. ' ' → logprob: -12.828929901123047
    7. 'ength' → logprob: -14.453929901123047
    8. 'ine' → logprob: -14.453929901123047
    9. 'en' → logprob: -14.703929901123047
    10. ' i' → logprob: -14.828929901123047

Token 622: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00038134094211272895
    2. ' range' → logprob: -7.8753814697265625
    3. 'com' → logprob: -14.125381469726562
    4. 'subset' → logprob: -14.875381469726562
    5. '1' → logprob: -16.250381469726562
    6. '(range' → logprob: -17.250381469726562
    7. 'ranges' → logprob: -18.375381469726562
    8. 'r' → logprob: -18.375381469726562
    9. ' ' → logprob: -18.625381469726562
    10. '```' → logprob: -18.625381469726562

Token 623: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06198213994503021
    2. '(' → logprob: -2.8119821548461914
    3. ' ' → logprob: -11.186982154846191
    4. '   ' → logprob: -15.561982154846191
    5. '2' → logprob: -16.686981201171875
    6. '(N' → logprob: -16.811981201171875
    7. '
' → logprob: -17.186981201171875
    8. 'l' → logprob: -17.311981201171875
    9. 'range' → logprob: -17.436981201171875
    10. ',' → logprob: -17.436981201171875

Token 624: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. 'N' → logprob: -14.625000953674316
    3. ' ' → logprob: -15.375000953674316
    4. '0' → logprob: -18.125
    5. '
' → logprob: -18.25
    6. '(' → logprob: -18.25
    7. '   ' → logprob: -19.5
    8. '```' → logprob: -19.5
    9. '2' → logprob: -20.0
    10. '１' → logprob: -20.75

Token 625: ',N' (ID: 49539)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16144472360610962
    2. ',N' → logprob: -1.9114446640014648
    3. '1' → logprob: -7.161444664001465
    4. ',l' → logprob: -7.911444664001465
    5. 'to' → logprob: -10.661444664001465
    6. ',n' → logprob: -11.161444664001465
    7. 'N' → logprob: -11.286444664001465
    8. ',len' → logprob: -11.411444664001465
    9. ' ,' → logprob: -11.661444664001465
    10. ',M' → logprob: -12.411444664001465

Token 626: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.523948907968588e-05
    2. ' +' → logprob: -10.375035285949707
    3. '):
' → logprob: -13.375035285949707
    4. '+
' → logprob: -13.500035285949707
    5. '):' → logprob: -14.500035285949707
    6. '+l' → logprob: -15.250035285949707
    7. ',' → logprob: -16.25003433227539
    8. '```' → logprob: -16.50003433227539
    9. '＋' → logprob: -16.62503433227539
    10. '{' → logprob: -17.37503433227539

Token 627: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.00000286102295
    3. '
' → logprob: -16.625001907348633
    4. 'l' → logprob: -17.000001907348633
    5. '```' → logprob: -17.250001907348633
    6. '１' → logprob: -17.875001907348633
    7. '   ' → logprob: -18.125001907348633
    8. ')' → logprob: -18.562501907348633
    9. '2' → logprob: -18.625001907348633
    10. '۱' → logprob: -19.062501907348633

Token 628: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0805930644273758
    2. ',' → logprob: -2.5805931091308594
    3. '):' → logprob: -6.580593109130859
    4. ',
' → logprob: -8.83059310913086
    5. '   ' → logprob: -9.83059310913086
    6. '):
' → logprob: -10.33059310913086
    7. ',l' → logprob: -10.45559310913086
    8. ':
' → logprob: -11.45559310913086
    9. 'for' → logprob: -12.20559310913086
    10. ')' → logprob: -12.20559310913086

Token 629: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6941606402397156
    2. '   ' → logprob: -0.9441606402397156
    3. 'for' → logprob: -2.1941606998443604
    4. '	for' → logprob: -10.319160461425781
    5. ' ' → logprob: -11.319160461425781
    6. '```' → logprob: -12.944160461425781
    7. '   ' → logprob: -14.944160461425781
    8. ' ' → logprob: -15.569160461425781
    9. '       ' → logprob: -16.19416046142578
    10. '  ' → logprob: -16.19416046142578

Token 630: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2520046830177307
    2. ' for' → logprob: -1.502004623413086
    3. '   ' → logprob: -9.502004623413086
    4. '	for' → logprob: -14.377004623413086
    5. '```' → logprob: -15.252004623413086
    6. ' ' → logprob: -16.627004623413086
    7. '
' → logprob: -18.502004623413086
    8. '_for' → logprob: -19.127004623413086
    9. '    
' → logprob: -19.377004623413086
    10. '.for' → logprob: -20.127004623413086

Token 631: ' comb' (ID: 4134)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.03476544842123985
    2. 'city' → logprob: -4.284765243530273
    3. 'combo' → logprob: -5.159765243530273
    4. 'cities' → logprob: -5.284765243530273
    5. ' subset' → logprob: -5.409765243530273
    6. 'comb' → logprob: -6.284765243530273
    7. 'cs' → logprob: -6.659765243530273
    8. 'c' → logprob: -6.784765243530273
    9. 'S' → logprob: -8.284765243530273
    10. 'cmb' → logprob: -9.034765243530273

Token 632: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012615473940968513
    2. 'in' → logprob: -4.38761568069458
    3. 'b' → logprob: -9.637615203857422
    4. 's' → logprob: -11.137615203857422
    5. 'n' → logprob: -12.137615203857422
    6. 'ination' → logprob: -12.262615203857422
    7. 'bination' → logprob: -12.762615203857422
    8. 'i' → logprob: -13.387615203857422
    9. 'ined' → logprob: -13.887615203857422
    10. ' ' → logprob: -14.012615203857422

Token 633: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -4.0722858102526516e-05
    2. ' combinations' → logprob: -10.250041007995605
    3. '(com' → logprob: -12.250041007995605
    4. 'comb' → logprob: -14.500041007995605
    5. '	com' → logprob: -19.75004005432129
    6. '_com' → logprob: -19.75004005432129
    7. '-com' → logprob: -20.37504005432129
    8. '   ' → logprob: -20.75004005432129
    9. 'range' → logprob: -21.00004005432129
    10. '.com' → logprob: -21.12504005432129

Token 634: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.000455340719781816
    2. 'range' → logprob: -7.750455379486084
    3. '(c' → logprob: -11.875454902648926
    4. ' range' → logprob: -11.875454902648926
    5. '(N' → logprob: -11.875454902648926
    6. 'cities' → logprob: -14.000454902648926
    7. ')' → logprob: -14.125454902648926
    8. ',' → logprob: -14.500454902648926
    9. '(list' → logprob: -14.750454902648926
    10. '(C' → logprob: -15.125454902648926

Token 635: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.07966792583465576
    2. '(N' → logprob: -2.5796680450439453
    3. ',N' → logprob: -7.204668045043945
    4. ' N' → logprob: -11.329668045043945
    5. ',' → logprob: -11.704668045043945
    6. '(' → logprob: -11.954668045043945
    7. 'l' → logprob: -13.204668045043945
    8. '```' → logprob: -13.829668045043945
    9. '	N' → logprob: -13.954668045043945
    10. '[N' → logprob: -14.079668045043945

Token 636: '),' (ID: 936)
  Prédit: ',l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',l' → logprob: -0.022706646472215652
    2. ',' → logprob: -4.022706508636475
    3. '),' → logprob: -5.397706508636475
    4. 'l' → logprob: -11.647706985473633
    5. ' ,' → logprob: -11.772706985473633
    6. '},' → logprob: -14.397706985473633
    7. ',),' → logprob: -14.522706985473633
    8. '],' → logprob: -14.897706985473633
    9. ',length' → logprob: -15.522706985473633
    10. '(l' → logprob: -15.647706985473633

Token 637: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.306760805164231e-05
    2. ' l' → logprob: -11.25001335144043
    3. '	l' → logprob: -20.75001335144043
    4. ')' → logprob: -20.87501335144043
    5. '   ' → logprob: -21.00001335144043
    6. 'length' → logprob: -23.50001335144043
    7. '*l' → logprob: -23.50001335144043
    8. ' л' → logprob: -24.00001335144043
    9. '    ' → logprob: -24.62501335144043
    10. '
' → logprob: -25.00001335144043

Token 638: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5760202407836914
    2. '):
' → logprob: -0.8260202407836914
    3. '):
' → logprob: -9.826020240783691
    4. ':' → logprob: -11.576020240783691
    5. '   ' → logprob: -11.701020240783691
    6. ')' → logprob: -12.451020240783691
    7. '):

' → logprob: -13.576020240783691
    8. '():
' → logprob: -13.826020240783691
    9. ':
' → logprob: -14.201020240783691
    10. ' ):' → logprob: -14.326020240783691

Token 639: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012809927575290203
    2. ' subset' → logprob: -5.137809753417969
    3. 'subset' → logprob: -5.262809753417969
    4. '       ' → logprob: -6.637809753417969
    5. 'sub' → logprob: -9.637809753417969
    6. ' s' → logprob: -10.012809753417969
    7. 'subtotal' → logprob: -10.137809753417969
    8. ' profit' → logprob: -10.262809753417969
    9. 'profit' → logprob: -10.387809753417969
    10. 's' → logprob: -10.512809753417969

Token 640: ' subset' (ID: 58845)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' (adapté à ' subset') → logprob: -0.007382997777312994
    2. 'p' → logprob: -5.257382869720459
    3. 'profit' → logprob: -7.132382869720459
    4. ' subset' → logprob: -7.382382869720459
    5. 'pp' → logprob: -7.882382869720459
    6. 'val' → logprob: -9.132383346557617
    7. '   ' → logprob: -9.507383346557617
    8. 'subtotal' → logprob: -9.632383346557617
    9. 'pr' → logprob: -10.882383346557617
    10. 'best' → logprob: -11.757383346557617

Token 641: '_profit' (ID: 186239)
  Prédit: '_profit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_profit' → logprob: -0.00012701898231171072
    2. '_subset' → logprob: -9.375126838684082
    3. '_prof' → logprob: -10.750126838684082
    4. 'profit' → logprob: -11.375126838684082
    5. '_' → logprob: -12.750126838684082
    6. '_pro' → logprob: -13.125126838684082
    7. '_prob' → logprob: -14.000126838684082
    8. '=' → logprob: -14.250126838684082
    9. 'subset' → logprob: -14.750126838684082
    10. 'Profit' → logprob: -15.125126838684082

Token 642: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0010485276579856873
    2. '[sub' → logprob: -6.876048564910889
    3. '[(' → logprob: -12.37604808807373
    4. '[len' → logprob: -12.62604808807373
    5. 'subset' → logprob: -13.00104808807373
    6. ' [' → logprob: -13.50104808807373
    7. '=' → logprob: -14.37604808807373
    8. '_subset' → logprob: -14.50104808807373
    9. '```' → logprob: -14.87604808807373
    10. '\[' → logprob: -15.12604808807373

Token 643: 'comb' (ID: 43606)
  Prédit: 'comb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -2.8444881536415778e-05
    2. 'com' → logprob: -11.000028610229492
    3. ' comb' → logprob: -12.125028610229492
    4. '(com' → logprob: -12.125028610229492
    5. 'tuple' → logprob: -14.500028610229492
    6. '   ' → logprob: -15.625028610229492
    7. ']' → logprob: -16.750028610229492
    8. 'comm' → logprob: -17.750028610229492
    9. '
' → logprob: -17.875028610229492
    10. '```' → logprob: -17.875028610229492

Token 644: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.003200050676241517
    2. ']' → logprob: -5.753200054168701
    3. ')=' → logprob: -11.503199577331543
    4. ']=(' → logprob: -11.878199577331543
    5. ']+=' → logprob: -13.128199577331543
    6. ']={' → logprob: -13.878199577331543
    7. ']=-' → logprob: -14.503199577331543
    8. ']='' → logprob: -14.628199577331543
    9. ' ]' → logprob: -14.753199577331543
    10. '=' → logprob: -15.003199577331543

Token 645: 'best' (ID: 17844)
  Prédit: 'best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.00020354038861114532
    2. ' best' → logprob: -8.500203132629395
    3. '(best' → logprob: -19.50020408630371
    4. '	best' → logprob: -19.87520408630371
    5. '   ' → logprob: -21.87520408630371
    6. '.best' → logprob: -22.00020408630371
    7. '0' → logprob: -22.87520408630371
    8. 'b' → logprob: -23.37520408630371
    9. '
' → logprob: -23.50020408630371
    10. '-best' → logprob: -23.75020408630371

Token 646: '_profit' (ID: 186239)
  Prédit: '_profit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_profit' → logprob: -8.895480277715251e-06
    2. 'profit' → logprob: -12.375008583068848
    3. '_prof' → logprob: -12.875008583068848
    4. '_subset' → logprob: -14.000008583068848
    5. 'Profit' → logprob: -14.875008583068848
    6. '_pro' → logprob: -15.500008583068848
    7. '_prob' → logprob: -15.875008583068848
    8. '```' → logprob: -16.250009536743164
    9. '_' → logprob: -16.375009536743164
    10. 'subset' → logprob: -16.375009536743164

Token 647: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -1.9146995327901095e-05
    2. 'for' → logprob: -10.875019073486328
    3. 'For' → logprob: -16.250019073486328
    4. '```' → logprob: -17.625019073486328
    5. '_FOR' → logprob: -17.750019073486328
    6. '(for' → logprob: -17.875019073486328
    7. '[' → logprob: -18.250019073486328
    8. '_subset' → logprob: -18.250019073486328
    9. ' for' → logprob: -18.750019073486328
    10. '   ' → logprob: -19.000019073486328

Token 648: '_subset' (ID: 162934)
  Prédit: '_subset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_subset' → logprob: -0.02975812554359436
    2. 'subset' → logprob: -3.5297582149505615
    3. 'comb' → logprob: -12.77975845336914
    4. '_comb' → logprob: -13.90475845336914
    5. 'sub' → logprob: -14.02975845336914
    6. ' subset' → logprob: -14.27975845336914
    7. '(com' → logprob: -14.52975845336914
    8. 'com' → logprob: -14.52975845336914
    9. 's' → logprob: -14.77975845336914
    10. '_sub' → logprob: -15.15475845336914

Token 649: '(com' (ID: 27868)
  Prédit: '(com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.03191051632165909
    2. 'comb' → logprob: -3.5319104194641113
    3. '_comb' → logprob: -6.156910419464111
    4. 'com' → logprob: -11.28191089630127
    5. ' comb' → logprob: -11.28191089630127
    6. '_subset' → logprob: -11.65691089630127
    7. '(' → logprob: -13.28191089630127
    8. 'subset' → logprob: -13.53191089630127
    9. '_com' → logprob: -13.78191089630127
    10. '(cont' → logprob: -15.15691089630127

Token 650: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: 0.0
    2. 'б' → logprob: -18.75
    3. 'binations' → logprob: -19.0
    4. 'bl' → logprob: -19.875
    5. '(b' → logprob: -20.0
    6. '[b' → logprob: -20.25
    7. '(' → logprob: -20.875
    8. 'bb' → logprob: -21.25
    9. 'p' → logprob: -21.5
    10. 'B' → logprob: -21.875

Token 651: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.339278580620885e-06
    2. '))' → logprob: -13.750001907348633
    3. ')
' → logprob: -14.125001907348633
    4. ')}' → logprob: -16.000001907348633
    5. ')}}' → logprob: -16.375001907348633
    6. ')#' → logprob: -16.625001907348633
    7. ' )' → logprob: -17.125001907348633
    8. '   ' → logprob: -17.875001907348633
    9. '())' → logprob: -18.000001907348633
    10. '),' → logprob: -18.375001907348633

Token 652: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.021981067955493927
    2. 'dp' → logprob: -4.021981239318848
    3. 'from' → logprob: -7.021981239318848
    4. 'visited' → logprob: -7.021981239318848
    5. '#' → logprob: -7.271981239318848
    6. ' for' → logprob: -7.896981239318848
    7. 'def' → logprob: -8.146981239318848
    8. 'next' → logprob: -9.271981239318848
    9. 'max' → logprob: -9.271981239318848
    10. 'all' → logprob: -9.896981239318848

Token 653: ' Pre' (ID: 4659)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03932609781622887
    2. 'from' → logprob: -3.2893261909484863
    3. '#' → logprob: -7.289326190948486
    4. 'import' → logprob: -7.914326190948486
    5. 'def' → logprob: -8.789325714111328
    6. 'queue' → logprob: -9.539325714111328
    7. 'ans' → logprob: -12.664325714111328
    8. 'visited' → logprob: -13.164325714111328
    9. 'dp' → logprob: -13.789325714111328
    10. ' for' → logprob: -14.039325714111328

Token 654: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.07100275158882141
    2. 'dict' → logprob: -2.821002721786499
    3. 'sum' → logprob: -5.446002960205078
    4. 'fix' → logprob: -5.821002960205078
    5. '#' → logprob: -7.071002960205078
    6. 'for' → logprob: -8.446002960205078
    7. 'computed' → logprob: -9.196002960205078
    8. 'serve' → logprob: -9.321002960205078
    9. 'pare' → logprob: -9.321002960205078
    10. 'd' → logprob: -10.196002960205078

Token 655: ' travel' (ID: 6410)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.1817840337753296
    2. 'for' → logprob: -2.181784152984619
    3. 'next' → logprob: -2.181784152984619
    4. 'time' → logprob: -2.306784152984619
    5. 'distance' → logprob: -2.431784152984619
    6. 'move' → logprob: -2.931784152984619
    7. '#' → logprob: -3.181784152984619
    8. 'travel' → logprob: -3.181784152984619
    9. 'times' → logprob: -3.556784152984619
    10. 'short' → logprob: -4.181784152984619

Token 656: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.3343018889427185
    2. '_time' → logprob: -1.5843019485473633
    3. 'times' → logprob: -3.2093019485473633
    4. 'cost' → logprob: -3.5843019485473633
    5. '_cost' → logprob: -5.334301948547363
    6. '_times' → logprob: -5.334301948547363
    7. 'dist' → logprob: -6.834301948547363
    8. '_dist' → logprob: -9.334301948547363
    9. '=' → logprob: -10.334301948547363
    10. '=time' → logprob: -10.459301948547363

Token 657: ' between' (ID: 2870)
  Prédit: 'travel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'travel' → logprob: -0.07153282314538956
    2. 'time' → logprob: -2.821532726287842
    3. 'dist' → logprob: -5.071532726287842
    4. 'times' → logprob: -5.946532726287842
    5. 'trav' → logprob: -8.071533203125
    6. 'distance' → logprob: -9.696533203125
    7. '#' → logprob: -10.071533203125
    8. 'trip' → logprob: -10.446533203125
    9. 'dp' → logprob: -10.696533203125
    10. 't' → logprob: -10.946533203125

Token 658: ' nodes' (ID: 15749)
  Prédit: 'markets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'markets' → logprob: -0.6215344667434692
    2. 'positions' → logprob: -0.9965344667434692
    3. '(' → logprob: -3.7465343475341797
    4. 'nodes' → logprob: -4.12153434753418
    5. 'cities' → logprob: -4.37153434753418
    6. 'all' → logprob: -4.49653434753418
    7. 'points' → logprob: -5.12153434753418
    8. ' positions' → logprob: -5.87153434753418
    9. 'i' → logprob: -5.87153434753418
    10. '0' → logprob: -5.99653434753418

Token 659: '
' (ID: 198)
  Prédit: 'travel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'travel' → logprob: -0.11516163498163223
    2. 'dist' → logprob: -2.615161657333374
    3. 'time' → logprob: -3.365161657333374
    4. 'times' → logprob: -7.115161418914795
    5. 'trav' → logprob: -9.115161895751953
    6. 'distance' → logprob: -9.240161895751953
    7. 'for' → logprob: -11.865161895751953
    8. 'pos' → logprob: -11.990161895751953
    9. ' travel' → logprob: -12.240161895751953
    10. 'tr' → logprob: -12.365161895751953

Token 660: 'dist' (ID: 24126)
  Prédit: 'travel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'travel' → logprob: -0.04464626684784889
    2. 'time' → logprob: -3.6696462631225586
    3. 'dist' → logprob: -4.044646263122559
    4. 'times' → logprob: -8.169646263122559
    5. 'trav' → logprob: -8.169646263122559
    6. 'distance' → logprob: -10.544646263122559
    7. 'tr' → logprob: -11.044646263122559
    8. ' travel' → logprob: -11.419646263122559
    9. 'for' → logprob: -11.794646263122559
    10. 'd' → logprob: -11.919646263122559

Token 661: '_map' (ID: 11824)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7493845224380493
    2. '=[' → logprob: -1.3743845224380493
    3. '=[[' → logprob: -1.7493845224380493
    4. '_matrix' → logprob: -2.9993844032287598
    5. 's' → logprob: -4.12438440322876
    6. 'ances' → logprob: -4.49938440322876
    7. ' =' → logprob: -4.87438440322876
    8. '=[
' → logprob: -5.37438440322876
    9. 'matrix' → logprob: -5.74938440322876
    10. 'ance' → logprob: -5.87438440322876

Token 662: '=[[' (ID: 112637)
  Prédit: '=[['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[[' → logprob: -0.3139873147010803
    2. '=[' → logprob: -1.3139872550964355
    3. ' =' → logprob: -7.9389872550964355
    4. '=' → logprob: -8.063987731933594
    5. '=[]' → logprob: -10.438987731933594
    6. '=[]
' → logprob: -12.188987731933594
    7. '=((' → logprob: -12.188987731933594
    8. '={(' → logprob: -12.563987731933594
    9. '=lambda' → logprob: -12.938987731933594
    10. '=[
' → logprob: -12.938987731933594

Token 663: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6404805183410645
    2. 'dist' → logprob: -0.7654805183410645
    3. 'float' → logprob: -5.3904805183410645
    4. '100' → logprob: -6.7654805183410645
    5. 'abs' → logprob: -7.3904805183410645
    6. '10' → logprob: -7.6404805183410645
    7. ' dist' → logprob: -8.140480041503906
    8. '(' → logprob: -8.515480041503906
    9. '999' → logprob: -9.015480041503906
    10. '(dist' → logprob: -9.140480041503906

Token 664: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.17979173362255096
    2. 'for' → logprob: -2.1797916889190674
    3. ' for' → logprob: -3.1797916889190674
    4. ']*' → logprob: -4.8047919273376465
    5. ']' → logprob: -6.5547919273376465
    6. ']+' → logprob: -8.429791450500488
    7. '   ' → logprob: -10.679791450500488
    8. 'if' → logprob: -11.179791450500488
    9. '*(' → logprob: -11.554791450500488
    10. '](' → logprob: -12.554791450500488

Token 665: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.9504606825648807e-05
    2. '(N' → logprob: -11.125019073486328
    3. 'len' → logprob: -12.750019073486328
    4. '
' → logprob: -13.750019073486328
    5. '(' → logprob: -14.375019073486328
    6. '1' → logprob: -15.750019073486328
    7. ' N' → logprob: -16.500019073486328
    8. '(len' → logprob: -17.250019073486328
    9. '[N' → logprob: -17.625019073486328
    10. 'M' → logprob: -18.375019073486328

Token 666: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.7432603272027336e-06
    2. ' +' → logprob: -13.375001907348633
    3. '+
' → logprob: -16.750001907348633
    4. '```' → logprob: -18.000001907348633
    5. 'N' → logprob: -18.125001907348633
    6. '+n' → logprob: -18.250001907348633
    7. '
' → logprob: -18.625001907348633
    8. '1' → logprob: -18.625001907348633
    9. 'plus' → logprob: -18.750001907348633
    10. '＋' → logprob: -19.000001907348633

Token 667: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0701158195734024
    2. 'N' → logprob: -2.695115804672241
    3. '+' → logprob: -9.07011604309082
    4. '
' → logprob: -10.69511604309082
    5. '(N' → logprob: -10.82011604309082
    6. '2' → logprob: -11.82011604309082
    7. '```' → logprob: -12.32011604309082
    8. ' N' → logprob: -12.57011604309082
    9. ' ' → logprob: -13.32011604309082
    10. 'M' → logprob: -13.82011604309082

Token 668: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03866846114397049
    2. 'for' → logprob: -3.288668394088745
    3. ' for' → logprob: -7.413668632507324
    4. ')
' → logprob: -10.913668632507324
    5. ' )' → logprob: -13.038668632507324
    6. '   ' → logprob: -13.913668632507324
    7. '
' → logprob: -13.913668632507324
    8. '```' → logprob: -14.663668632507324
    9. ')(' → logprob: -15.163668632507324
    10. ' ' → logprob: -15.163668632507324

Token 669: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07889056205749512
    2. ' for' → logprob: -2.578890562057495
    3. '   ' → logprob: -15.203890800476074
    4. ')' → logprob: -15.328890800476074
    5. '	for' → logprob: -15.828890800476074
    6. '
' → logprob: -16.328889846801758
    7. '```' → logprob: -16.828889846801758
    8. ' ' → logprob: -17.828889846801758
    9. '       ' → logprob: -19.328889846801758
    10. ']' → logprob: -19.578889846801758

Token 670: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0036142051685601473
    2. ' _' → logprob: -5.75361442565918
    3. '_N' → logprob: -8.62861442565918
    4. '_i' → logprob: -8.87861442565918
    5. '_j' → logprob: -9.25361442565918
    6. 'i' → logprob: -12.50361442565918
    7. ' j' → logprob: -12.62861442565918
    8. ' i' → logprob: -12.75361442565918
    9. '_=' → logprob: -13.12861442565918
    10. '_n' → logprob: -13.25361442565918

Token 671: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.9592854380607605
    2. '_' → logprob: -1.3342854976654053
    3. ' range' → logprob: -1.5842854976654053
    4. 'range' → logprob: -2.3342854976654053
    5. 'in' → logprob: -3.0842854976654053
    6. 'i' → logprob: -6.209285259246826
    7. ' _' → logprob: -7.209285259246826
    8. 'n' → logprob: -7.334285259246826
    9. '__' → logprob: -7.834285259246826
    10. 'j' → logprob: -8.209285736083984

Token 672: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011531914584338665
    2. ' range' → logprob: -4.511531829833984
    3. '(N' → logprob: -7.761531829833984
    4. '(range' → logprob: -9.761531829833984
    5. '
' → logprob: -15.011531829833984
    6. '(n' → logprob: -16.511531829833984
    7. '[N' → logprob: -16.761531829833984
    8. 'N' → logprob: -17.011531829833984
    9. ' (' → logprob: -17.261531829833984
    10. '_range' → logprob: -17.386531829833984

Token 673: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.31352049112319946
    2. 'N' → logprob: -1.3135204315185547
    3. ' (' → logprob: -8.688520431518555
    4. ' N' → logprob: -9.438520431518555
    5. '(' → logprob: -12.313520431518555
    6. '
' → logprob: -13.063520431518555
    7. 'range' → logprob: -14.188520431518555
    8. '   ' → logprob: -14.563520431518555
    9. '[N' → logprob: -14.688520431518555
    10. '(n' → logprob: -14.813520431518555

Token 674: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1472419600977446e-06
    2. '+
' → logprob: -14.750000953674316
    3. '1' → logprob: -15.000000953674316
    4. ' +' → logprob: -15.125000953674316
    5. ')]' → logprob: -16.625001907348633
    6. '```' → logprob: -16.875001907348633
    7. '
' → logprob: -18.125001907348633
    8. ')' → logprob: -18.375001907348633
    9. '＋' → logprob: -18.375001907348633
    10. ')+' → logprob: -18.750001907348633

Token 675: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. '+' → logprob: -13.75000286102295
    3. ' ' → logprob: -14.00000286102295
    4. '```' → logprob: -14.50000286102295
    5. ')' → logprob: -15.87500286102295
    6. 'N' → logprob: -16.250003814697266
    7. '0' → logprob: -16.562503814697266
    8. '=' → logprob: -17.187503814697266
    9. '2' → logprob: -17.250003814697266
    10. '   ' → logprob: -17.375003814697266

Token 676: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.40977948904037476
    2. ']' → logprob: -1.1597795486450195
    3. ')]
' → logprob: -4.4097795486450195
    4. ']
' → logprob: -5.0347795486450195
    5. ')' → logprob: -5.5347795486450195
    6. ')
' → logprob: -11.15977954864502
    7. ' ]' → logprob: -12.03477954864502
    8. ')]
' → logprob: -12.53477954864502
    9. ')]

' → logprob: -12.65977954864502
    10. ']

' → logprob: -12.78477954864502

Token 677: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004315036640036851
    2. ' for' → logprob: -7.750431537628174
    3. '   ' → logprob: -14.250431060791016
    4. '```' → logprob: -15.750431060791016
    5. '	for' → logprob: -16.875431060791016
    6. '
' → logprob: -17.000431060791016
    7. '<|end|>' → logprob: -17.875431060791016
    8. 'range' → logprob: -19.875431060791016
    9. '``' → logprob: -20.000431060791016
    10. ' ' → logprob: -20.750431060791016

Token 678: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.4034345187828876e-05
    2. ' i' → logprob: -10.75002384185791
    3. 'j' → logprob: -13.00002384185791
    4. 'a' → logprob: -16.250024795532227
    5. 'u' → logprob: -16.625024795532227
    6. '```' → logprob: -18.250024795532227
    7. '_i' → logprob: -18.625024795532227
    8. '	i' → logprob: -18.625024795532227
    9. '   ' → logprob: -19.750024795532227
    10. ''i' → logprob: -21.500024795532227

Token 679: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5759481191635132
    2. ' in' → logprob: -0.8259481191635132
    3. 'range' → logprob: -12.450947761535645
    4. '```' → logprob: -12.700947761535645
    5. ' ' → logprob: -14.825947761535645
    6. '0' → logprob: -15.075947761535645
    7. '   ' → logprob: -15.575947761535645
    8. '1' → logprob: -15.700947761535645
    9. 'i' → logprob: -15.825947761535645
    10. '
' → logprob: -16.20094871520996

Token 680: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.15310683415737e-05
    2. ' range' → logprob: -10.750021934509277
    3. 'in' → logprob: -18.75002098083496
    4. '(range' → logprob: -20.62502098083496
    5. 'r' → logprob: -21.87502098083496
    6. 'i' → logprob: -22.00002098083496
    7. '```' → logprob: -22.00002098083496
    8. '0' → logprob: -22.50002098083496
    9. '   ' → logprob: -23.00002098083496
    10. 'ran' → logprob: -23.00002098083496

Token 681: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.011052536778151989
    2. '(N' → logprob: -4.51105260848999
    3. ' N' → logprob: -12.886052131652832
    4. '1' → logprob: -14.011052131652832
    5. '(' → logprob: -14.386052131652832
    6. '   ' → logprob: -14.761052131652832
    7. '0' → logprob: -15.386052131652832
    8. '[N' → logprob: -16.38605308532715
    9. '	N' → logprob: -17.26105308532715
    10. '
' → logprob: -17.88605308532715

Token 682: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.246537173457909e-06
    2. '):
' → logprob: -12.625003814697266
    3. ' +' → logprob: -14.125003814697266
    4. '
' → logprob: -16.875003814697266
    5. '```' → logprob: -16.875003814697266
    6. '1' → logprob: -17.125003814697266
    7. '+
' → logprob: -17.250003814697266
    8. '):' → logprob: -17.500003814697266
    9. '   ' → logprob: -18.000003814697266
    10. 'N' → logprob: -18.875003814697266

Token 683: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.1424973713001236e-05
    2. '+' → logprob: -10.875031471252441
    3. 'N' → logprob: -11.375031471252441
    4. '```' → logprob: -14.875031471252441
    5. ' ' → logprob: -15.250031471252441
    6. '
' → logprob: -16.125030517578125
    7. '   ' → logprob: -16.250030517578125
    8. ')' → logprob: -16.625030517578125
    9. '(N' → logprob: -17.375030517578125
    10. '2' → logprob: -17.750030517578125

Token 684: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.011080480180680752
    2. '):' → logprob: -4.511080265045166
    3. '):
' → logprob: -11.511080741882324
    4. '+' → logprob: -12.136080741882324
    5. ':' → logprob: -12.261080741882324
    6. ')' → logprob: -12.386080741882324
    7. '   ' → logprob: -12.511080741882324
    8. ':
' → logprob: -13.011080741882324
    9. '):

' → logprob: -14.261080741882324
    10. '```' → logprob: -14.261080741882324

Token 685: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003276937175542116
    2. ' for' → logprob: -6.253276824951172
    3. 'for' → logprob: -6.628276824951172
    4. '	for' → logprob: -10.628276824951172
    5. '       ' → logprob: -15.128276824951172
    6. '```' → logprob: -15.378276824951172
    7. '<|end|>' → logprob: -16.253276824951172
    8. '   ' → logprob: -16.503276824951172
    9. ' ' → logprob: -17.003276824951172
    10. '  ' → logprob: -18.753276824951172

Token 686: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00020580526324920356
    2. ' for' → logprob: -8.500205993652344
    3. '   ' → logprob: -13.000205993652344
    4. '	for' → logprob: -18.500205993652344
    5. 'j' → logprob: -19.250205993652344
    6. ' ' → logprob: -20.500205993652344
    7. '```' → logprob: -21.125205993652344
    8. '    
' → logprob: -23.375205993652344
    9. '_for' → logprob: -23.625205993652344
    10. 'from' → logprob: -23.750205993652344

Token 687: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0011840384686365724
    2. ' j' → logprob: -6.751183986663818
    3. 'range' → logprob: -11.376184463500977
    4. ' range' → logprob: -13.001184463500977
    5. '_j' → logprob: -16.251184463500977
    6. '$j' → logprob: -17.751184463500977
    7. '   ' → logprob: -18.501184463500977
    8. ',j' → logprob: -18.501184463500977
    9. '	j' → logprob: -18.501184463500977
    10. '[j' → logprob: -18.751184463500977

Token 688: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.16039827466011047
    2. ' in' → logprob: -1.910398244857788
    3. 'i' → logprob: -10.035398483276367
    4. '   ' → logprob: -10.285398483276367
    5. '(i' → logprob: -10.285398483276367
    6. '[i' → logprob: -10.785398483276367
    7. 'range' → logprob: -11.035398483276367
    8. '	in' → logprob: -11.285398483276367
    9. ' i' → logprob: -12.035398483276367
    10. ' range' → logprob: -13.285398483276367

Token 689: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0067156096920371056
    2. ' range' → logprob: -5.006715774536133
    3. '(range' → logprob: -16.381715774536133
    4. 'i' → logprob: -16.631715774536133
    5. ' ' → logprob: -20.381715774536133
    6. '(N' → logprob: -20.756715774536133
    7. '(i' → logprob: -20.881715774536133
    8. 'N' → logprob: -21.006715774536133
    9. ' i' → logprob: -21.256715774536133
    10. 'in' → logprob: -21.881715774536133

Token 690: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.261287659406662
    2. 'N' → logprob: -2.0112876892089844
    3. 'i' → logprob: -2.5112876892089844
    4. '(i' → logprob: -4.261287689208984
    5. 'range' → logprob: -7.261287689208984
    6. '   ' → logprob: -9.886287689208984
    7. ' i' → logprob: -10.511287689208984
    8. ' (' → logprob: -10.511287689208984
    9. ' range' → logprob: -10.636287689208984
    10. ' N' → logprob: -10.886287689208984

Token 691: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0009821972344070673
    2. '+i' → logprob: -7.750982284545898
    3. '(i' → logprob: -8.250982284545898
    4. 'i' → logprob: -8.625982284545898
    5. '[i' → logprob: -9.750982284545898
    6. '1' → logprob: -11.125982284545898
    7. '(N' → logprob: -11.500982284545898
    8. '):
' → logprob: -11.875982284545898
    9. ' +' → logprob: -12.250982284545898
    10. 'N' → logprob: -12.625982284545898

Token 692: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009988983161747456
    2. 'N' → logprob: -4.634988784790039
    3. '+' → logprob: -9.134988784790039
    4. 'i' → logprob: -9.759988784790039
    5. '(N' → logprob: -10.009988784790039
    6. '(' → logprob: -12.134988784790039
    7. 'j' → logprob: -12.634988784790039
    8. ' N' → logprob: -12.759988784790039
    9. 'range' → logprob: -12.759988784790039
    10. '```' → logprob: -12.884988784790039

Token 693: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.08038748800754547
    2. '):' → logprob: -2.580387592315674
    3. '   ' → logprob: -7.955387592315674
    4. ']:
' → logprob: -8.080387115478516
    5. '+' → logprob: -8.580387115478516
    6. ')' → logprob: -8.830387115478516
    7. '):
' → logprob: -8.955387115478516
    8. ':' → logprob: -9.080387115478516
    9. ']:' → logprob: -9.705387115478516
    10. '       ' → logprob: -10.205387115478516

Token 694: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2261708676815033
    2. '	dist' → logprob: -2.476170778274536
    3. '   ' → logprob: -2.726170778274536
    4. 'dist' → logprob: -3.101170778274536
    5. ' dist' → logprob: -4.976171016693115
    6. '(dist' → logprob: -7.851171016693115
    7. '.dist' → logprob: -8.851170539855957
    8. ' if' → logprob: -9.851170539855957
    9. '<|end|>' → logprob: -9.976170539855957
    10. '_dist' → logprob: -9.976170539855957

Token 695: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.00012332366895861924
    2. ' dist' → logprob: -9.250123023986816
    3. '   ' → logprob: -10.625123023986816
    4. '       ' → logprob: -13.250123023986816
    5. '	dist' → logprob: -13.750123023986816
    6. '           ' → logprob: -16.500123977661133
    7. 'd' → logprob: -17.875123977661133
    8. '_dist' → logprob: -18.375123977661133
    9. '.dist' → logprob: -18.500123977661133
    10. 'if' → logprob: -18.500123977661133

Token 696: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.001970031065866351
    2. '[i' → logprob: -6.251969814300537
    3. '[' → logprob: -11.626970291137695
    4. '_dist' → logprob: -12.126970291137695
    5. '[_' → logprob: -12.126970291137695
    6. 'dist' → logprob: -12.251970291137695
    7. 'map' → logprob: -13.001970291137695
    8. '_[' → logprob: -13.001970291137695
    9. 's' → logprob: -13.376970291137695
    10. 'i' → logprob: -13.751970291137695

Token 697: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.4418171455617994e-05
    2. '[j' → logprob: -11.500044822692871
    3. '][' → logprob: -11.625044822692871
    4. '[' → logprob: -12.250044822692871
    5. ')[' → logprob: -12.250044822692871
    6. '```' → logprob: -12.500044822692871
    7. ' [' → logprob: -12.625044822692871
    8. 'i' → logprob: -13.000044822692871
    9. '=' → logprob: -13.125044822692871
    10. '=i' → logprob: -13.875044822692871

Token 698: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.06295039504766464
    2. ']=' → logprob: -3.062950372695923
    3. ']+=' → logprob: -5.187950611114502
    4. '[i' → logprob: -5.312950611114502
    5. ']' → logprob: -6.437950611114502
    6. '[' → logprob: -6.937950611114502
    7. '[j' → logprob: -7.437950611114502
    8. ' ][' → logprob: -9.187950134277344
    9. ')][' → logprob: -9.437950134277344
    10. ']==' → logprob: -9.937950134277344

Token 699: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.9153885558771435e-06
    2. ' j' → logprob: -12.500005722045898
    3. ']' → logprob: -13.750005722045898
    4. 'i' → logprob: -15.500005722045898
    5. '[j' → logprob: -15.500005722045898
    6. ')' → logprob: -15.625005722045898
    7. '```' → logprob: -16.5000057220459
    8. '	j' → logprob: -16.6250057220459
    9. '
' → logprob: -16.8750057220459
    10. ']=' → logprob: -17.5000057220459

Token 700: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.000805341056548059
    2. ']' → logprob: -7.250805377960205
    3. ']+=' → logprob: -9.375804901123047
    4. ']=(' → logprob: -12.125804901123047
    5. '=' → logprob: -12.500804901123047
    6. ')=' → logprob: -14.625804901123047
    7. ']=-' → logprob: -15.375804901123047
    8. ']={' → logprob: -15.375804901123047
    9. ']==' → logprob: -15.750804901123047
    10. ']='' → logprob: -15.750804901123047

Token 701: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0004160145472269505
    2. 'abs' → logprob: -7.875415802001953
    3. ' dist' → logprob: -10.250415802001953
    4. '	dist' → logprob: -15.750415802001953
    5. '(dist' → logprob: -15.875415802001953
    6. 'max' → logprob: -16.750415802001953
    7. ' abs' → logprob: -16.875415802001953
    8. 'min' → logprob: -17.625415802001953
    9. 'pos' → logprob: -18.000415802001953
    10. '-dist' → logprob: -18.000415802001953

Token 702: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.13732397556304932
    2. 'pos' → logprob: -2.3873238563537598
    3. '_map' → logprob: -3.6373238563537598
    4. '_pos' → logprob: -5.13732385635376
    5. '(a' → logprob: -6.38732385635376
    6. '[pos' → logprob: -7.01232385635376
    7. 't' → logprob: -7.63732385635376
    8. 's' → logprob: -8.137324333190918
    9. '(' → logprob: -8.262324333190918
    10. '((' → logprob: -8.637324333190918

Token 703: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005380203947424889
    2. '[j' → logprob: -8.000537872314453
    3. '[' → logprob: -9.125537872314453
    4. 'i' → logprob: -10.250537872314453
    5. ')[' → logprob: -10.250537872314453
    6. '][' → logprob: -11.875537872314453
    7. ')' → logprob: -12.000537872314453
    8. ',i' → logprob: -12.750537872314453
    9. '[I' → logprob: -13.000537872314453
    10. ')][' → logprob: -13.625537872314453

Token 704: '],' (ID: 2155)
  Prédit: ')['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.9425291419029236
    2. ')][' → logprob: -0.9425291419029236
    3. '][' → logprob: -2.4425292015075684
    4. ',' → logprob: -2.5675292015075684
    5. '],[' → logprob: -3.8175292015075684
    6. ',j' → logprob: -4.067529201507568
    7. '),' → logprob: -4.692529201507568
    8. ')' → logprob: -5.567529201507568
    9. ',[' → logprob: -6.567529201507568
    10. '[j' → logprob: -7.067529201507568

Token 705: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -3.547789674485102e-05
    2. ' pos' → logprob: -10.250035285949707
    3. '(pos' → logprob: -18.625036239624023
    4. '	pos' → logprob: -20.250036239624023
    5. '   ' → logprob: -20.500036239624023
    6. '[pos' → logprob: -21.125036239624023
    7. '       ' → logprob: -23.375036239624023
    8. '    ' → logprob: -23.500036239624023
    9. '           ' → logprob: -23.750036239624023
    10. ',pos' → logprob: -23.750036239624023

Token 706: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -7.896309739408025e-07
    2. '[i' → logprob: -15.125000953674316
    3. '
' → logprob: -15.500000953674316
    4. 'j' → logprob: -15.750000953674316
    5. ')[' → logprob: -16.5
    6. '[
' → logprob: -17.125
    7. ')' → logprob: -18.0
    8. '```' → logprob: -18.0
    9. ' [' → logprob: -18.125
    10. '   ' → logprob: -18.5

Token 707: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001238921657204628
    2. '])' → logprob: -6.751238822937012
    3. ')+' → logprob: -10.751238822937012
    4. ')]' → logprob: -10.876238822937012
    5. '))' → logprob: -11.626238822937012
    6. ')
' → logprob: -11.626238822937012
    7. ')])' → logprob: -12.376238822937012
    8. ' )' → logprob: -13.376238822937012
    9. '})' → logprob: -13.501238822937012
    10. ']' → logprob: -14.126238822937012

Token 708: 'from' (ID: 2845)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00013524403038900346
    2. 'from' → logprob: -9.62513542175293
    3. 'dp' → logprob: -10.87513542175293
    4. ' for' → logprob: -11.37513542175293
    5. '```' → logprob: -11.50013542175293
    6. 'def' → logprob: -11.75013542175293
    7. '#' → logprob: -11.87513542175293
    8. 'queue' → logprob: -11.87513542175293
    9. 'time' → logprob: -12.37513542175293
    10. 'next' → logprob: -14.50013542175293

Token 709: ' itertools' (ID: 103178)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.0925319567322731
    2. 'it' → logprob: -3.09253191947937
    3. 'heap' → logprob: -3.34253191947937
    4. 'math' → logprob: -5.717532157897949
    5. 'sys' → logprob: -6.092532157897949
    6. ' itertools' → logprob: -6.592532157897949
    7. 'copy' → logprob: -7.592532157897949
    8. 'queue' → logprob: -9.34253215789795
    9. 'operator' → logprob: -10.21753215789795
    10. 'typing' → logprob: -10.46753215789795

Token 710: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.012535199522972107
    2. ' import' → logprob: -4.387535095214844
    3. '```' → logprob: -11.512535095214844
    4. '_import' → logprob: -11.762535095214844
    5. '	import' → logprob: -12.637535095214844
    6. ''import' → logprob: -13.762535095214844
    7. '(import' → logprob: -14.012535095214844
    8. '-import' → logprob: -14.262535095214844
    9. '
' → logprob: -14.262535095214844
    10. '``' → logprob: -15.137535095214844

Token 711: ' chain' (ID: 13464)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.02088366635143757
    2. 'com' → logprob: -3.895883560180664
    3. 'chain' → logprob: -8.520883560180664
    4. 'per' → logprob: -10.395883560180664
    5. 'collections' → logprob: -10.520883560180664
    6. '```' → logprob: -10.645883560180664
    7. '
' → logprob: -11.020883560180664
    8. 'import' → logprob: -11.270883560180664
    9. 'it' → logprob: -12.395883560180664
    10. ' product' → logprob: -12.520883560180664

Token 712: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04628694802522659
    2. 'com' → logprob: -3.2962870597839355
    3. 'from' → logprob: -5.0462870597839355
    4. 'product' → logprob: -6.6712870597839355
    5. 'chain' → logprob: -8.546286582946777
    6. ' for' → logprob: -9.046286582946777
    7. '(com' → logprob: -9.546286582946777
    8. 'import' → logprob: -10.046286582946777
    9. 'range' → logprob: -10.671286582946777
    10. '(' → logprob: -10.921286582946777

Token 713: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -9.93710636976175e-05
    2. 'all' → logprob: -9.875099182128906
    3. 'def' → logprob: -10.750099182128906
    4. '#' → logprob: -11.625099182128906
    5. 'states' → logprob: -11.750099182128906
    6. 'from' → logprob: -12.375099182128906
    7. ' for' → logprob: -13.375099182128906
    8. 'sub' → logprob: -13.625099182128906
    9. 'result' → logprob: -15.125099182128906
    10. 'subset' → logprob: -15.125099182128906

Token 714: ' visited' (ID: 18416)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.16855904459953308
    2. 'length' → logprob: -2.5435590744018555
    3. 'S' → logprob: -3.5435590744018555
    4. ' l' → logprob: -3.9185590744018555
    5. ' length' → logprob: -4.2935590744018555
    6. 'subset' → logprob: -5.2935590744018555
    7. 'size' → logprob: -5.7935590744018555
    8. 'mask' → logprob: -6.1685590744018555
    9. 'r' → logprob: -7.2935590744018555
    10. ' S' → logprob: -7.5435590744018555

Token 715: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018462341278791428
    2. ',' → logprob: -4.893462181091309
    3. 's' → logprob: -5.393462181091309
    4. 'in' → logprob: -5.768462181091309
    5. '_subset' → logprob: -7.268462181091309
    6. '_size' → logprob: -7.643462181091309
    7. ',S' → logprob: -8.018462181091309
    8. '_mask' → logprob: -8.268462181091309
    9. '```' → logprob: -8.393462181091309
    10. '(S' → logprob: -8.518462181091309

Token 716: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0022945404052734375
    2. 'chain' → logprob: -6.127294540405273
    3. 'com' → logprob: -9.502294540405273
    4. ' range' → logprob: -10.502294540405273
    5. 'comb' → logprob: -12.752294540405273
    6. 'subset' → logprob: -13.377294540405273
    7. '(range' → logprob: -13.877294540405273
    8. 'product' → logprob: -14.502294540405273
    9. '(' → logprob: -14.752294540405273
    10. 'visited' → logprob: -15.252294540405273

Token 717: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0014930804027244449
    2. '((' → logprob: -6.626492977142334
    3. '1' → logprob: -8.751493453979492
    4. '(M' → logprob: -12.001493453979492
    5. ' (' → logprob: -13.626493453979492
    6. '(N' → logprob: -13.751493453979492
    7. '   ' → logprob: -15.876493453979492
    8. '(S' → logprob: -16.501493453979492
    9. '(len' → logprob: -16.751493453979492
    10. '```' → logprob: -17.126493453979492

Token 718: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.061987634748220444
    2. '(' → logprob: -2.8119876384735107
    3. '0' → logprob: -11.43698787689209
    4. 'N' → logprob: -13.06198787689209
    5. ' (' → logprob: -13.43698787689209
    6. '(N' → logprob: -13.56198787689209
    7. ' ' → logprob: -13.81198787689209
    8. '((' → logprob: -13.81198787689209
    9. '```' → logprob: -14.31198787689209
    10. '2' → logprob: -14.93698787689209

Token 719: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.05306362360715866
    2. ',' → logprob: -3.1780636310577393
    3. '(' → logprob: -4.67806339263916
    4. '<<(' → logprob: -7.67806339263916
    5. '1' → logprob: -9.17806339263916
    6. ' <<' → logprob: -9.55306339263916
    7. ',N' → logprob: -10.42806339263916
    8. '>>' → logprob: -11.17806339263916
    9. ',(' → logprob: -11.30306339263916
    10. '```' → logprob: -11.55306339263916

Token 720: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00015276329941116273
    2. '(N' → logprob: -9.000152587890625
    3. '(' → logprob: -11.000152587890625
    4. 'M' → logprob: -12.500152587890625
    5. '   ' → logprob: -12.625152587890625
    6. ' N' → logprob: -12.750152587890625
    7. '1' → logprob: -14.000152587890625
    8. '
' → logprob: -14.875152587890625
    9. '```' → logprob: -15.250152587890625
    10. ' (' → logprob: -15.250152587890625

Token 721: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.44048529863357544
    2. '):' → logprob: -1.0654852390289307
    3. ':' → logprob: -4.56548547744751
    4. '+' → logprob: -7.06548547744751
    5. ':
' → logprob: -8.815485000610352
    6. ',' → logprob: -9.315485000610352
    7. ')' → logprob: -9.815485000610352
    8. '):
' → logprob: -9.940485000610352
    9. '   ' → logprob: -10.065485000610352
    10. '{' → logprob: -10.815485000610352

Token 722: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01434284821152687
    2. ' for' → logprob: -4.264342784881592
    3. 'for' → logprob: -8.76434326171875
    4. '   ' → logprob: -11.13934326171875
    5. '	for' → logprob: -12.63934326171875
    6. '```' → logprob: -13.13934326171875
    7. ',' → logprob: -13.51434326171875
    8. ' ' → logprob: -14.76434326171875
    9. '
' → logprob: -14.88934326171875
    10. ')' → logprob: -15.13934326171875

Token 723: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.001381782698445022
    2. '   ' → logprob: -6.876381874084473
    3. ' for' → logprob: -8.001381874084473
    4. 'time' → logprob: -11.626381874084473
    5. ' ' → logprob: -13.626381874084473
    6. 't' → logprob: -14.126381874084473
    7. '	for' → logprob: -14.376381874084473
    8. 'if' → logprob: -14.501381874084473
    9. 'max' → logprob: -14.501381874084473
    10. 'min' → logprob: -15.376381874084473

Token 724: ' last' (ID: 2174)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09800165891647339
    2. 'j' → logprob: -3.098001718521118
    3. 'u' → logprob: -4.098001480102539
    4. 'last' → logprob: -4.598001480102539
    5. 'pos' → logprob: -5.223001480102539
    6. 'current' → logprob: -5.348001480102539
    7. 'curr' → logprob: -5.348001480102539
    8. 'cur' → logprob: -5.598001480102539
    9. 'city' → logprob: -6.473001480102539
    10. 'next' → logprob: -7.473001480102539

Token 725: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.38700801134109497
    2. 'in' → logprob: -1.1370079517364502
    3. 'i' → logprob: -9.262007713317871
    4. ')' → logprob: -11.262007713317871
    5. ' i' → logprob: -11.887007713317871
    6. ' ' → logprob: -12.137007713317871
    7. '_in' → logprob: -12.262007713317871
    8. '```' → logprob: -12.387007713317871
    9. '   ' → logprob: -12.887007713317871
    10. '
' → logprob: -13.387007713317871

Token 726: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02980441227555275
    2. ' range' → logprob: -3.5298044681549072
    3. '(range' → logprob: -9.904804229736328
    4. '[' → logprob: -13.904804229736328
    5. '[N' → logprob: -14.029804229736328
    6. '(N' → logprob: -14.154804229736328
    7. '(' → logprob: -14.404804229736328
    8. 'N' → logprob: -14.529804229736328
    9. '   ' → logprob: -15.404804229736328
    10. '0' → logprob: -16.654804229736328

Token 727: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.07035518437623978
    2. 'N' → logprob: -2.820355176925659
    3. '(' → logprob: -4.945355415344238
    4. '1' → logprob: -7.070355415344238
    5. '0' → logprob: -7.945355415344238
    6. '(M' → logprob: -12.070355415344238
    7. ' N' → logprob: -12.195355415344238
    8. ' (' → logprob: -12.445355415344238
    9. '   ' → logprob: -12.570355415344238
    10. '[N' → logprob: -12.820355415344238

Token 728: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00015276329941116273
    2. '):
' → logprob: -9.125152587890625
    3. '):' → logprob: -10.625152587890625
    4. ' +' → logprob: -11.625152587890625
    5. '1' → logprob: -11.750152587890625
    6. '+
' → logprob: -13.750152587890625
    7. '   ' → logprob: -14.000152587890625
    8. '```' → logprob: -15.250152587890625
    9. '
' → logprob: -15.375152587890625
    10. ')+' → logprob: -16.125152587890625

Token 729: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.069664333248511e-05
    2. '+' → logprob: -11.250020980834961
    3. ' ' → logprob: -13.000020980834961
    4. '2' → logprob: -13.812520980834961
    5. '```' → logprob: -13.937520980834961
    6. '0' → logprob: -14.062520980834961
    7. ')' → logprob: -14.500020980834961
    8. '(' → logprob: -14.562520980834961
    9. 'N' → logprob: -15.062520980834961
    10. '
' → logprob: -15.187520980834961

Token 730: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.11621423065662384
    2. '):' → logprob: -2.2412142753601074
    3. '+' → logprob: -6.366214275360107
    4. ':' → logprob: -6.866214275360107
    5. '   ' → logprob: -8.11621379852295
    6. ':
' → logprob: -9.11621379852295
    7. ')' → logprob: -9.49121379852295
    8. '):
' → logprob: -10.49121379852295
    9. '       ' → logprob: -10.86621379852295
    10. '[' → logprob: -11.11621379852295

Token 731: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009015733376145363
    2. ' if' → logprob: -7.625901699066162
    3. '   ' → logprob: -8.875901222229004
    4. ',' → logprob: -9.375901222229004
    5. '	' → logprob: -9.875901222229004
    6. '<|end|>' → logprob: -10.125901222229004
    7. '	   ' → logprob: -10.375901222229004
    8. 'if' → logprob: -11.250901222229004
    9. '    ' → logprob: -11.750901222229004
    10. '     ' → logprob: -11.750901222229004

Token 732: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.026581378653645515
    2. '   ' → logprob: -3.651581287384033
    3. ' if' → logprob: -8.651581764221191
    4. 'time' → logprob: -10.026581764221191
    5. 'continue' → logprob: -10.276581764221191
    6. 't' → logprob: -11.776581764221191
    7. '       ' → logprob: -12.026581764221191
    8. 'for' → logprob: -12.401581764221191
    9. 'next' → logprob: -13.151581764221191
    10. 'val' → logprob: -13.276581764221191

Token 733: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0005544631858356297
    2. ' dp' → logprob: -7.50055456161499
    3. '   ' → logprob: -13.625554084777832
    4. '(dp' → logprob: -15.875554084777832
    5. '	dp' → logprob: -16.37555503845215
    6. 'not' → logprob: -17.75055503845215
    7. ' ' → logprob: -17.87555503845215
    8. 'visited' → logprob: -18.25055503845215
    9. '
' → logprob: -18.62555503845215
    10. '  ' → logprob: -19.00055503845215

Token 734: '[last' (ID: 126100)
  Prédit: '[last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[last' → logprob: -2.6537622034084052e-05
    2. '[' → logprob: -10.87502670288086
    3. '[next' → logprob: -12.25002670288086
    4. ' [' → logprob: -14.00002670288086
    5. 'last' → logprob: -14.75002670288086
    6. '
' → logprob: -14.87502670288086
    7. '[first' → logprob: -15.37502670288086
    8. '][' → logprob: -15.62502670288086
    9. '   ' → logprob: -15.75002670288086
    10. '[now' → logprob: -16.00002670288086

Token 735: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004471539054065943
    2. '[' → logprob: -5.629471302032471
    3. ']==' → logprob: -8.004471778869629
    4. ']' → logprob: -8.254471778869629
    5. '==' → logprob: -9.379471778869629
    6. ' ][' → logprob: -9.754471778869629
    7. '][-' → logprob: -10.754471778869629
    8. ']!=' → logprob: -11.129471778869629
    9. ')][' → logprob: -11.254471778869629
    10. '[next' → logprob: -11.504471778869629

Token 736: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.5094070477061905e-05
    2. ' visited' → logprob: -11.125015258789062
    3. '
' → logprob: -15.250015258789062
    4. '   ' → logprob: -16.625015258789062
    5. '0' → logprob: -18.375015258789062
    6. 'Visited' → logprob: -19.125015258789062
    7. 'visible' → logprob: -19.500015258789062
    8. '  ' → logprob: -19.500015258789062
    9. ' ' → logprob: -19.625015258789062
    10. '
' → logprob: -19.625015258789062

Token 737: ']<' (ID: 80424)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.17670364677906036
    2. '==' → logprob: -2.301703691482544
    3. ']' → logprob: -3.301703691482544
    4. ' ==' → logprob: -4.051703453063965
    5. '==-' → logprob: -5.051703453063965
    6. ']!=' → logprob: -7.426703453063965
    7. ')==' → logprob: -9.176703453063965
    8. '<' → logprob: -9.301703453063965
    9. ']<' → logprob: -9.676703453063965
    10. ']<=' → logprob: -9.676703453063965

Token 738: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.209963900502771e-05
    2. 'T' → logprob: -9.375092506408691
    3. ' ' → logprob: -11.875092506408691
    4. ' T' → logprob: -16.625091552734375
    5. '
' → logprob: -17.000091552734375
    6. '1' → logprob: -18.000091552734375
    7. '   ' → logprob: -18.125091552734375
    8. 't' → logprob: -19.125091552734375
    9. '

' → logprob: -19.250091552734375
    10. '=' → logprob: -19.625091552734375

Token 739: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3955721855163574
    2. ' or' → logprob: -1.6455721855163574
    3. ' and' → logprob: -2.7705721855163574
    4. ':
' → logprob: -3.1455721855163574
    5. '           ' → logprob: -4.270572185516357
    6. '       ' → logprob: -4.395572185516357
    7. ' continue' → logprob: -7.520572185516357
    8. '   ' → logprob: -8.270572662353516
    9. '               ' → logprob: -8.520572662353516
    10. 'and' → logprob: -8.520572662353516

Token 740: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1273093968629837
    2. '           ' → logprob: -2.5023093223571777
    3. ' continue' → logprob: -3.7523093223571777
    4. 'continue' → logprob: -4.627309322357178
    5. ' for' → logprob: -5.752309322357178
    6. 'for' → logprob: -7.502309322357178
    7. '   ' → logprob: -7.627309322357178
    8. '               ' → logprob: -10.002309799194336
    9. '	continue' → logprob: -10.252309799194336
    10. ' if' → logprob: -10.877309799194336

Token 741: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.6343986988067627
    2. ' continue' → logprob: -1.0093986988067627
    3. '       ' → logprob: -2.3843986988067627
    4. '           ' → logprob: -4.884398460388184
    5. '   ' → logprob: -5.759398460388184
    6. '	continue' → logprob: -6.259398460388184
    7. '               ' → logprob: -7.634398460388184
    8. '_continue' → logprob: -11.009398460388184
    9. 'Continue' → logprob: -12.509398460388184
    10. '\t' → logprob: -12.634398460388184

Token 742: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01844291016459465
    2. '   ' → logprob: -4.5184431076049805
    3. ' for' → logprob: -5.2684431076049805
    4. 'for' → logprob: -6.1434431076049805
    5. '           ' → logprob: -11.14344310760498
    6. '```' → logprob: -11.39344310760498
    7. '        
' → logprob: -11.64344310760498
    8. ',' → logprob: -12.14344310760498
    9. '	for' → logprob: -12.26844310760498
    10. '	   ' → logprob: -12.64344310760498

Token 743: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28051355481147766
    2. ' for' → logprob: -2.0305135250091553
    3. '   ' → logprob: -2.7805135250091553
    4. 'for' → logprob: -3.0305135250091553
    5. '```' → logprob: -6.405513763427734
    6. ' next' → logprob: -7.280513763427734
    7. 'next' → logprob: -8.280513763427734
    8. '        
' → logprob: -9.405513763427734
    9. '           ' → logprob: -9.405513763427734
    10. ',' → logprob: -9.655513763427734

Token 744: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004101077560335398
    2. '   ' → logprob: -5.879101276397705
    3. ' for' → logprob: -7.254101276397705
    4. 'time' → logprob: -7.629101276397705
    5. '       ' → logprob: -10.379100799560547
    6. '#' (adapté à ' #') → logprob: -10.379100799560547
    7. 'max' → logprob: -11.254100799560547
    8. 'if' → logprob: -11.754100799560547
    9. 'remaining' → logprob: -13.129100799560547
    10. 'rem' → logprob: -13.254100799560547

Token 745: ' Try' (ID: 14720)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001410708879120648
    2. '#' → logprob: -7.626410484313965
    3. '   ' → logprob: -7.751410484313965
    4. 'time' → logprob: -8.126410484313965
    5. 'remaining' → logprob: -9.626410484313965
    6. 'rem' → logprob: -10.376410484313965
    7. 'remain' → logprob: -10.751410484313965
    8. ' for' → logprob: -10.751410484313965
    9. 'if' → logprob: -11.501410484313965
    10. '       ' → logprob: -11.876410484313965

Token 746: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8055956363677979
    2. '   ' → logprob: -1.4305956363677979
    3. 'to' → logprob: -1.6805956363677979
    4. 'for' → logprob: -2.555595636367798
    5. 'next' → logprob: -3.555595636367798
    6. ' to' → logprob: -5.055595397949219
    7. ' next' → logprob: -5.430595397949219
    8. ' for' → logprob: -5.555595397949219
    9. '       ' → logprob: -5.680595397949219
    10. '               ' → logprob: -6.680595397949219

Token 747: ' add' (ID: 1147)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24913571774959564
    2. 'next' → logprob: -2.624135732650757
    3. 'range' → logprob: -3.124135732650757
    4. ' for' → logprob: -3.749135732650757
    5. 'extend' → logprob: -4.124135494232178
    6. ' go' → logprob: -4.749135494232178
    7. ' range' → logprob: -4.874135494232178
    8. 'go' → logprob: -5.124135494232178
    9. '```' → logprob: -5.249135494232178
    10. 'expand' → logprob: -5.374135494232178

Token 748: ' a' (ID: 261)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.13984239101409912
    2. 'city' → logprob: -2.5148425102233887
    3. ' nxt' → logprob: -3.7648425102233887
    4. 'n' → logprob: -4.389842510223389
    5. ' next' → logprob: -4.639842510223389
    6. ' city' → logprob: -6.389842510223389
    7. 'new' → logprob: -7.014842510223389
    8. '   ' → logprob: -7.764842510223389
    9. 'c' → logprob: -7.889842510223389
    10. 'k' → logprob: -8.01484203338623

Token 749: ' subset' (ID: 58845)
  Prédit: ' city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' city' → logprob: -0.6118413805961609
    2. 'city' → logprob: -0.8618413805961609
    3. ' new' → logprob: -4.361841201782227
    4. 'new' → logprob: -4.736841201782227
    5. 'next' → logprob: -4.986841201782227
    6. ' next' → logprob: -5.861841201782227
    7. 'n' → logprob: -6.986841201782227
    8. '1' → logprob: -7.236841201782227
    9. 'c' → logprob: -7.611841201782227
    10. 's' → logprob: -7.736841201782227

Token 750: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.46711355447769165
    2. 'of' → logprob: -1.8421134948730469
    3. 'subset' → logprob: -3.217113494873047
    4. '(' → logprob: -4.092113494873047
    5. '   ' → logprob: -4.092113494873047
    6. ' =' → logprob: -4.342113494873047
    7. '(next' → logprob: -4.717113494873047
    8. '
' → logprob: -4.717113494873047
    9. ' next' → logprob: -4.842113494873047
    10. '_of' → logprob: -4.842113494873047

Token 751: ' un' (ID: 537)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.9387895464897156
    2. 'cities' → logprob: -1.1887896060943604
    3. 'range' → logprob: -1.6887896060943604
    4. '(' → logprob: -2.6887896060943604
    5. '(range' → logprob: -3.3137896060943604
    6. '(((' → logprob: -5.938789367675781
    7. '   ' → logprob: -6.063789367675781
    8. '(
' → logprob: -6.813789367675781
    9. 'un' → logprob: -6.813789367675781
    10. 'city' → logprob: -6.938789367675781

Token 752: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0012116642901673913
    2. ' visited' → logprob: -6.751211643218994
    3. 'ited' → logprob: -11.376212120056152
    4. ')' → logprob: -12.501212120056152
    5. '```' → logprob: -12.501212120056152
    6. ' ' → logprob: -12.751212120056152
    7. 'v' → logprob: -12.876212120056152
    8. 'set' → logprob: -12.876212120056152
    9. '(' → logprob: -12.876212120056152
    10. 'used' → logprob: -13.251212120056152

Token 753: ' cities' (ID: 15636)
  Prédit: 'cities'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cities' → logprob: -0.36804741621017456
    2. '_c' → logprob: -1.4930474758148193
    3. 'subset' → logprob: -4.24304723739624
    4. ' cities' → logprob: -4.49304723739624
    5. '```' → logprob: -4.61804723739624
    6. 'visited' → logprob: -4.99304723739624
    7. '(' → logprob: -5.11804723739624
    8. '_' → logprob: -5.24304723739624
    9. '   ' → logprob: -5.86804723739624
    10. ' (' → logprob: -5.99304723739624

Token 754: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03364454582333565
    2. ',' → logprob: -5.158644676208496
    3. ' for' → logprob: -5.158644676208496
    4. '        
' → logprob: -5.533644676208496
    5. '           ' → logprob: -5.783644676208496
    6. ' and' → logprob: -5.783644676208496
    7. ':' → logprob: -6.283644676208496
    8. ' to' → logprob: -6.408644676208496
    9. '<|end|>' → logprob: -6.533644676208496
    10. ' next' → logprob: -7.283644676208496

Token 755: ' go' (ID: 810)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.44245705008506775
    2. ' for' → logprob: -2.6924569606781006
    3. 'subset' → logprob: -2.6924569606781006
    4. 'continue' → logprob: -3.3174569606781006
    5. 's' → logprob: -3.4424569606781006
    6. '   ' → logprob: -3.6924569606781006
    7. 'mask' → logprob: -4.56745719909668
    8. 'sub' → logprob: -4.81745719909668
    9. 'visited' → logprob: -4.94245719909668
    10. 'if' → logprob: -4.94245719909668

Token 756: ' back' (ID: 1602)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.6052515506744385
    2. '           ' → logprob: -1.9802515506744385
    3. 'on' → logprob: -2.3552515506744385
    4. 'for' → logprob: -2.6052515506744385
    5. ' on' → logprob: -3.4802515506744385
    6. ' to' → logprob: -3.9802515506744385
    7. '       ' → logprob: -4.355251312255859
    8. 'through' → logprob: -4.355251312255859
    9. 'from' → logprob: -4.480251312255859
    10. ' for' → logprob: -4.730251312255859

Token 757: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0146064758300781
    2. 'to' → logprob: -1.0146064758300781
    3. ' to' → logprob: -1.6396064758300781
    4. '       ' → logprob: -2.889606475830078
    5. '               ' → logprob: -5.014606475830078
    6. '   ' → logprob: -5.389606475830078
    7. '[next' → logprob: -6.389606475830078
    8. 'for' → logprob: -6.764606475830078
    9. ' for' → logprob: -6.889606475830078
    10. '[' → logprob: -7.264606475830078

Token 758: ' market' (ID: 2910)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010902086272835732
    2. 'last' → logprob: -4.635901927947998
    3. ' ' → logprob: -7.760901927947998
    4. 'range' → logprob: -8.260902404785156
    5. ' last' → logprob: -8.760902404785156
    6. 'N' → logprob: -9.010902404785156
    7. '
' → logprob: -10.760902404785156
    8. 'for' → logprob: -10.885902404785156
    9. '(' → logprob: -11.010902404785156
    10. 'i' → logprob: -11.510902404785156

Token 759: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.046627990901470184
    2. '           ' → logprob: -4.046627998352051
    3. '        
' → logprob: -4.921627998352051
    4. '   ' → logprob: -4.921627998352051
    5. '               ' → logprob: -6.171627998352051
    6. ',' → logprob: -6.421627998352051
    7. ':' → logprob: -6.796627998352051
    8. ' ' → logprob: -7.046627998352051
    9. '
' → logprob: -7.171627998352051
    10. ' for' → logprob: -7.546627998352051

Token 760: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04624996334314346
    2. '           ' → logprob: -4.171249866485596
    3. ':' → logprob: -4.671249866485596
    4. '<|end|>' → logprob: -5.546249866485596
    5. '```' → logprob: -5.671249866485596
    6. '   ' → logprob: -5.796249866485596
    7. ',' → logprob: -6.046249866485596
    8. ' for' → logprob: -6.296249866485596
    9. '[' → logprob: -6.796249866485596
    10. '               ' → logprob: -6.921249866485596

Token 761: ' un' (ID: 537)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2264184206724167
    2. '           ' → logprob: -1.976418375968933
    3. ' for' → logprob: -2.9764184951782227
    4. ' next' → logprob: -5.226418495178223
    5. '        ' → logprob: -6.101418495178223
    6. 'for' → logprob: -6.726418495178223
    7. 'next' → logprob: -6.851418495178223
    8. '   ' → logprob: -7.101418495178223
    9. '        
' → logprob: -7.726418495178223
    10. ' rest' → logprob: -8.351418495178223

Token 762: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.00012439649435691535
    2. '=' → logprob: -9.500123977661133
    3. 'v' → logprob: -10.375123977661133
    4. ' visited' → logprob: -12.000123977661133
    5. 'used' → logprob: -12.250123977661133
    6. '_' → logprob: -12.875123977661133
    7. ' =' → logprob: -13.375123977661133
    8. '```' → logprob: -13.625123977661133
    9. 'vis' → logprob: -14.250123977661133
    10. 'Visited' → logprob: -14.625123977661133

Token 763: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10367803275585175
    2. ' =' → logprob: -2.603677988052368
    3. '=(' → logprob: -3.853677988052368
    4. '=sub' → logprob: -7.103678226470947
    5. '=((' → logprob: -7.478678226470947
    6. '=set' → logprob: -7.853678226470947
    7. '=s' → logprob: -7.978678226470947
    8. 's' → logprob: -8.228677749633789
    9. '_mask' → logprob: -8.853677749633789
    10. 'cities' → logprob: -9.103677749633789

Token 764: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1608680933713913
    2. 'c' → logprob: -1.9108680486679077
    3. 'k' → logprob: -7.910868167877197
    4. 'j' → logprob: -8.910867691040039
    5. 'city' → logprob: -9.535867691040039
    6. 'u' → logprob: -10.660867691040039
    7. 'x' → logprob: -10.910867691040039
    8. 'idx' → logprob: -11.410867691040039
    9. ' i' → logprob: -11.910867691040039
    10. 'ci' → logprob: -12.410867691040039

Token 765: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06197138875722885
    2. 'for' → logprob: -2.811971426010132
    3. ' ' → logprob: -13.061971664428711
    4. '
' → logprob: -14.061971664428711
    5. '   ' → logprob: -15.311971664428711
    6. ' 
' → logprob: -15.436971664428711
    7. ' in' → logprob: -16.31197166442871
    8. '```' → logprob: -16.31197166442871
    9. 'i' → logprob: -16.81197166442871
    10. ' ' → logprob: -17.56197166442871

Token 766: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3132745027542114
    2. 'range' → logprob: -1.3132745027542114
    3. ' in' → logprob: -12.063274383544922
    4. 'i' → logprob: -12.938274383544922
    5. '(range' → logprob: -13.438274383544922
    6. '
' → logprob: -13.938274383544922
    7. ' ' → logprob: -14.563274383544922
    8. '   ' → logprob: -14.563274383544922
    9. '	range' → logprob: -15.188274383544922
    10. ' i' → logprob: -15.313274383544922

Token 767: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07944487035274506
    2. 'in' → logprob: -2.5794448852539062
    3. 'range' → logprob: -7.704444885253906
    4. ' range' → logprob: -9.579444885253906
    5. ',' → logprob: -11.204444885253906
    6. 'i' → logprob: -12.204444885253906
    7. ' ' → logprob: -12.329444885253906
    8. '
' → logprob: -12.454444885253906
    9. '(range' → logprob: -13.204444885253906
    10. 's' → logprob: -13.704444885253906

Token 768: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002476135268807411
    2. ' range' → logprob: -6.002476215362549
    3. '
' → logprob: -15.87747573852539
    4. ' ' → logprob: -16.50247573852539
    5. '   ' → logprob: -16.62747573852539
    6. '(range' → logprob: -16.62747573852539
    7. 'r' → logprob: -17.87747573852539
    8. 'ran' → logprob: -18.50247573852539
    9. '```' → logprob: -18.87747573852539
    10. '  ' → logprob: -19.12747573852539

Token 769: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.009780291467905045
    2. '(N' → logprob: -4.634780406951904
    3. ' N' → logprob: -11.259779930114746
    4. '
' → logprob: -12.509779930114746
    5. '(' → logprob: -13.259779930114746
    6. '_N' → logprob: -13.884779930114746
    7. '   ' → logprob: -13.884779930114746
    8. '               ' → logprob: -14.384779930114746
    9. '           ' → logprob: -14.509779930114746
    10. ' (' → logprob: -14.634779930114746

Token 770: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014630960067734122
    2. 'N' → logprob: -6.626462936401367
    3. 'if' → logprob: -9.501462936401367
    4. ',N' → logprob: -10.001462936401367
    5. '   ' → logprob: -12.126462936401367
    6. '+' → logprob: -12.751462936401367
    7. ' )' → logprob: -12.876462936401367
    8. ',' → logprob: -13.626462936401367
    9. '(N' → logprob: -14.001462936401367
    10. ' if' → logprob: -14.126462936401367

Token 771: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1602432131767273
    2. 'if' → logprob: -1.910243272781372
    3. '   ' → logprob: -12.035243034362793
    4. '           ' → logprob: -12.035243034362793
    5. '       ' → logprob: -12.785243034362793
    6. ' ' → logprob: -13.910243034362793
    7. '          ' → logprob: -14.160243034362793
    8. '               ' → logprob: -14.660243034362793
    9. '         ' → logprob: -15.160243034362793
    10. '        ' → logprob: -15.285243034362793

Token 772: ' not' (ID: 625)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.842801034450531
    2. '(not' → logprob: -1.0928010940551758
    3. '((' → logprob: -2.342801094055176
    4. 'not' → logprob: -2.592801094055176
    5. ' not' → logprob: -3.467801094055176
    6. '(' → logprob: -3.842801094055176
    7. ' (' → logprob: -4.717801094055176
    8. 'i' → logprob: -7.092801094055176
    9. ' ((' → logprob: -7.967801094055176
    10. '(((' → logprob: -8.092801094055176

Token 773: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14380864799022675
    2. '((' → logprob: -2.143808603286743
    3. ' (' → logprob: -4.143808841705322
    4. ' ((' → logprob: -7.643808841705322
    5. 'visited' → logprob: -8.018808364868164
    6. '(vis' → logprob: -10.268808364868164
    7. ' visited' → logprob: -11.143808364868164
    8. '(((' → logprob: -11.893808364868164
    9. '(v' → logprob: -12.643808364868164
    10. '(i' → logprob: -12.643808364868164

Token 774: 'visited' (ID: 52453)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07184527814388275
    2. 'visited' → logprob: -2.696845293045044
    3. '((' → logprob: -6.946845054626465
    4. ' (' → logprob: -7.196845054626465
    5. ' visited' → logprob: -8.696845054626465
    6. '(vis' → logprob: -10.946845054626465
    7. '(v' → logprob: -13.071845054626465
    8. '(not' → logprob: -13.321845054626465
    9. '(visitor' → logprob: -13.571845054626465
    10. '(
' → logprob: -13.821845054626465

Token 775: '>>' (ID: 3920)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.5086633563041687
    2. '&' → logprob: -1.2586634159088135
    3. '>>' → logprob: -2.3836634159088135
    4. '&(' → logprob: -3.8836634159088135
    5. '&
' → logprob: -7.258663177490234
    6. ' >>' → logprob: -7.883663177490234
    7. ' &(' → logprob: -8.508663177490234
    8. ' &
' → logprob: -8.633663177490234
    9. '[' → logprob: -9.008663177490234
    10. '>>(' → logprob: -9.883663177490234

Token 776: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.7697225252486533e-06
    2. ' i' → logprob: -12.500003814697266
    3. '
' → logprob: -20.125003814697266
    4. '   ' → logprob: -20.250003814697266
    5. ')i' → logprob: -20.625003814697266
    6. '```' → logprob: -20.750003814697266
    7. ' ' → logprob: -21.000003814697266
    8. '	i' → logprob: -21.000003814697266
    9. '[i' → logprob: -21.750003814697266
    10. '(i' → logprob: -22.250003814697266

Token 777: ')&' (ID: 34370)
  Prédit: ')&'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')&' → logprob: -0.012545793317258358
    2. ')' → logprob: -4.512545585632324
    3. '&' → logprob: -6.512545585632324
    4. ' &' → logprob: -11.637545585632324
    5. '1' → logprob: -13.637545585632324
    6. ' )' → logprob: -13.762545585632324
    7. '&amp' → logprob: -14.637545585632324
    8. '   ' → logprob: -15.262545585632324
    9. '```' → logprob: -16.88754653930664
    10. ' ' → logprob: -17.01254653930664

Token 778: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.153795766294934e-06
    2. ' ' → logprob: -12.625005722045898
    3. 'i' → logprob: -13.000005722045898
    4. '(i' → logprob: -14.750005722045898
    5. '
' → logprob: -17.5000057220459
    6. ' i' → logprob: -17.7500057220459
    7. '```' → logprob: -18.1250057220459
    8. '0' → logprob: -18.2500057220459
    9. '   ' → logprob: -18.3750057220459
    10. '(' → logprob: -18.7500057220459

Token 779: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08978268504142761
    2. ']
' → logprob: -2.46478271484375
    3. ' ]' → logprob: -8.46478271484375
    4. ']

' → logprob: -8.46478271484375
    5. ' ]
' → logprob: -8.83978271484375
    6. ')]' → logprob: -9.21478271484375
    7. ']
' → logprob: -9.58978271484375
    8. '   ' → logprob: -10.08978271484375
    9. '       ' → logprob: -10.46478271484375
    10. '()]
' → logprob: -11.46478271484375

Token 780: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009872130118310452
    2. '<|end|>' → logprob: -5.384871959686279
    3. ' for' → logprob: -6.009871959686279
    4. '        
' → logprob: -6.634871959686279
    5. ',' → logprob: -7.134871959686279
    6. '           ' → logprob: -9.009872436523438
    7. 'for' → logprob: -9.384872436523438
    8. ' ' → logprob: -9.759872436523438
    9. '        ' → logprob: -10.009872436523438
    10. '```' → logprob: -10.259872436523438

Token 781: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09143320471048355
    2. '       ' → logprob: -3.21643328666687
    3. ' for' → logprob: -3.84143328666687
    4. 'from' → logprob: -4.341433048248291
    5. 'if' → logprob: -4.716433048248291
    6. '           ' → logprob: -6.341433048248291
    7. 'subset' → logprob: -7.591433048248291
    8. 'next' → logprob: -7.716433048248291
    9. ' subsets' → logprob: -8.34143352508545
    10. ' if' → logprob: -8.34143352508545

Token 782: ' Enumer' (ID: 56157)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0414666086435318
    2. 'from' → logprob: -3.66646671295166
    3. 'if' → logprob: -5.16646671295166
    4. 'sub' → logprob: -5.54146671295166
    5. 'subset' → logprob: -6.29146671295166
    6. '       ' → logprob: -6.54146671295166
    7. '   ' → logprob: -7.41646671295166
    8. '#' → logprob: -7.66646671295166
    9. 'length' → logprob: -7.91646671295166
    10. 'size' → logprob: -9.04146671295166

Token 783: 'ate' (ID: 379)
  Prédit: 'ate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -5.200166469876422e-06
    2. 'ating' → logprob: -13.125004768371582
    3. '#' → logprob: -14.125004768371582
    4. 'ated' → logprob: -14.250004768371582
    5. 'rate' → logprob: -14.875004768371582
    6. 'for' → logprob: -15.250004768371582
    7. 'te' → logprob: -15.250004768371582
    8. '```' → logprob: -15.375004768371582
    9. 't' → logprob: -16.0000057220459
    10. 'at' → logprob: -16.2500057220459

Token 784: ' subsets' (ID: 165377)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.7187505960464478
    2. 'sub' → logprob: -0.8437505960464478
    3. 'l' → logprob: -3.343750476837158
    4. 'for' → logprob: -4.343750476837158
    5. 'length' → logprob: -5.343750476837158
    6. '   ' → logprob: -5.343750476837158
    7. 's' → logprob: -5.343750476837158
    8. 'range' → logprob: -5.718750476837158
    9. '(' → logprob: -6.218750476837158
    10. 'comb' → logprob: -6.343750476837158

Token 785: ' of' (ID: 328)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7860132455825806
    2. 'for' → logprob: -1.1610132455825806
    3. 'from' → logprob: -2.536013126373291
    4. '           ' → logprob: -2.911013126373291
    5. '       ' → logprob: -3.786013126373291
    6. ' of' → logprob: -4.036013126373291
    7. ' from' → logprob: -4.036013126373291
    8. '   ' → logprob: -4.161013126373291
    9. ' in' → logprob: -5.036013126373291
    10. '(' → logprob: -5.536013126373291

Token 786: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.35763880610466003
    2. 'range' → logprob: -1.2326388359069824
    3. ' range' → logprob: -4.982638835906982
    4. ' un' → logprob: -6.857638835906982
    5. '1' → logprob: -7.982638835906982
    6. '[' → logprob: -8.482638359069824
    7. 'subset' → logprob: -8.982638359069824
    8. 'len' → logprob: -9.232638359069824
    9. 'sub' → logprob: -9.482638359069824
    10. '[]' → logprob: -9.607638359069824

Token 787: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0005276533775031567
    2. 'un' → logprob: -7.625527858734131
    3. 'vis' → logprob: -11.250527381896973
    4. 'v' → logprob: -11.500527381896973
    5. 'range' → logprob: -12.500527381896973
    6. '[' → logprob: -13.000527381896973
    7. '(' → logprob: -13.125527381896973
    8. 'used' → logprob: -13.125527381896973
    9. 'i' → logprob: -14.125527381896973
    10. '```' → logprob: -14.125527381896973

Token 788: ' cities' (ID: 15636)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9401839375495911
    2. ':
' → logprob: -1.6901838779449463
    3. 'from' → logprob: -2.6901838779449463
    4. ' for' → logprob: -2.6901838779449463
    5. 'subset' → logprob: -2.9401838779449463
    6. '       ' → logprob: -3.5651838779449463
    7. 'un' → logprob: -3.5651838779449463
    8. ':' → logprob: -3.6901838779449463
    9. '   ' → logprob: -3.8151838779449463
    10. ',' → logprob: -3.8151838779449463

Token 789: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1667035073041916
    2. ' for' → logprob: -2.291703462600708
    3. 'for' → logprob: -3.166703462600708
    4. 'from' → logprob: -5.666703701019287
    5. ' from' → logprob: -6.291703701019287
    6. '           ' → logprob: -6.541703701019287
    7. 'sub' → logprob: -7.416703701019287
    8. '   ' → logprob: -7.541703701019287
    9. ',' → logprob: -8.041703224182129
    10. ' subsets' → logprob: -8.416703224182129

Token 790: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2697593867778778
    2. ' for' → logprob: -1.7697594165802002
    3. 'for' → logprob: -3.3947594165802
    4. '           ' → logprob: -4.144759178161621
    5. 'from' → logprob: -5.144759178161621
    6. ' from' → logprob: -5.269759178161621
    7. '   ' → logprob: -6.144759178161621
    8. ',' → logprob: -6.519759178161621
    9. ' next' → logprob: -8.394759178161621
    10. ' in' → logprob: -8.519759178161621

Token 791: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17133347690105438
    2. ' for' → logprob: -2.0463335514068604
    3. '       ' → logprob: -3.9213335514068604
    4. '   ' → logprob: -6.171333312988281
    5. 'from' → logprob: -6.546333312988281
    6. 'subset' → logprob: -6.546333312988281
    7. 'sub' → logprob: -6.921333312988281
    8. 'size' → logprob: -7.671333312988281
    9. 'l' → logprob: -8.171333312988281
    10. ' subset' → logprob: -8.296333312988281

Token 792: ' To' (ID: 2514)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7545213103294373
    2. 'for' → logprob: -0.8795213103294373
    3. '       ' → logprob: -2.754521369934082
    4. ' l' → logprob: -4.504521369934082
    5. '   ' → logprob: -4.629521369934082
    6. 'l' → logprob: -5.129521369934082
    7. ' size' → logprob: -5.629521369934082
    8. 'size' → logprob: -6.004521369934082
    9. 'subset' → logprob: -6.254521369934082
    10. 'sub' → logprob: -6.379521369934082

Token 793: ' speed' (ID: 7733)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.4151057302951813
    2. 'range' → logprob: -1.4151057004928589
    3. 'un' → logprob: -4.165105819702148
    4. 'for' → logprob: -4.290105819702148
    5. 'sub' → logprob: -4.790105819702148
    6. 'from' → logprob: -5.165105819702148
    7. 'continue' → logprob: -5.415105819702148
    8. ')' → logprob: -5.540105819702148
    9. '(len' → logprob: -5.665105819702148
    10. 'r' → logprob: -5.790105819702148

Token 794: ' up' (ID: 869)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.8208338022232056
    2. '   ' → logprob: -1.9458338022232056
    3. '=' → logprob: -2.070833683013916
    4. 'for' → logprob: -2.070833683013916
    5. ' up' → logprob: -2.320833683013916
    6. 'up' → logprob: -2.820833683013916
    7. 'range' → logprob: -2.820833683013916
    8. '       ' → logprob: -2.945833683013916
    9. ' in' → logprob: -3.320833683013916
    10. '               ' → logprob: -3.695833683013916

Token 795: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11274382472038269
    2. ' for' → logprob: -3.112743854522705
    3. 'from' → logprob: -3.612743854522705
    4. 'sub' → logprob: -4.487743854522705
    5. 'subset' → logprob: -4.737743854522705
    6. 'un' → logprob: -4.987743854522705
    7. 'if' → logprob: -6.862743854522705
    8. 'size' → logprob: -6.862743854522705
    9. ' from' → logprob: -7.362743854522705
    10. '   ' → logprob: -7.362743854522705

Token 796: ' enumerate' (ID: 29671)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10902611911296844
    2. ' for' → logprob: -2.9840261936187744
    3. 'from' → logprob: -3.2340261936187744
    4. 'if' → logprob: -5.484025955200195
    5. 'un' → logprob: -5.859025955200195
    6. ' from' → logprob: -6.859025955200195
    7. '   ' → logprob: -6.984025955200195
    8. '       ' → logprob: -7.234025955200195
    9. 'subset' → logprob: -7.734025955200195
    10. 'sub' → logprob: -7.984025955200195

Token 797: ' subsets' (ID: 165377)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.5223705768585205
    2. 'subset' → logprob: -1.6473705768585205
    3. 'for' → logprob: -2.1473705768585205
    4. 'un' → logprob: -4.022370338439941
    5. 'size' → logprob: -4.272370338439941
    6. 'mask' → logprob: -4.522370338439941
    7. 's' → logprob: -4.647370338439941
    8. 'from' → logprob: -4.647370338439941
    9. 'range' → logprob: -4.772370338439941
    10. 'sz' → logprob: -5.272370338439941

Token 798: ' by' (ID: 656)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'of' → logprob: -1.5097532272338867
    2. ' of' → logprob: -1.6347532272338867
    3. ' =' → logprob: -1.8847532272338867
    4. '=' → logprob: -2.5097532272338867
    5. 'from' → logprob: -2.5097532272338867
    6. 'for' → logprob: -3.0097532272338867
    7. 'un' → logprob: -3.0097532272338867
    8. ' in' → logprob: -3.3847532272338867
    9. '(un' → logprob: -3.3847532272338867
    10. ' for' → logprob: -4.134753227233887

Token 799: ' bit' (ID: 3546)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.8049798607826233
    2. 'length' → logprob: -1.4299798011779785
    3. 'len' → logprob: -1.6799798011779785
    4. 'mask' → logprob: -3.1799798011779785
    5. '1' → logprob: -3.4299798011779785
    6. 'bit' → logprob: -4.4299798011779785
    7. 'range' → logprob: -4.5549798011779785
    8. 'bits' → logprob: -5.3049798011779785
    9. '   ' → logprob: -5.6799798011779785
    10. 'l' → logprob: -5.6799798011779785

Token 800: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.09951851516962051
    2. 'm' → logprob: -3.8495185375213623
    3. 's' → logprob: -3.9745185375213623
    4. 'size' → logprob: -4.599518299102783
    5. '   ' → logprob: -4.974518299102783
    6. 'for' → logprob: -4.974518299102783
    7. 'un' → logprob: -4.974518299102783
    8. '```' → logprob: -5.349518299102783
    9. '_mask' → logprob: -5.974518299102783
    10. '1' → logprob: -6.474518299102783

Token 801: ' of' (ID: 328)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2532695531845093
    2. '
' → logprob: -2.628269672393799
    3. '       ' → logprob: -3.128269672393799
    4. 'for' → logprob: -3.253269672393799
    5. '   ' → logprob: -4.003269672393799
    6. ',' → logprob: -4.628269672393799
    7. ' next' → logprob: -5.378269672393799
    8. 'mask' → logprob: -5.753269672393799
    9. ' sub' → logprob: -5.878269672393799
    10. ' mask' → logprob: -5.878269672393799

Token 802: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.1990438550710678
    2. 'len' → logprob: -2.1990437507629395
    3. '0' → logprob: -2.9490437507629395
    4. '(' → logprob: -4.8240437507629395
    5. ' un' → logprob: -6.4490437507629395
    6. '```' → logprob: -6.6990437507629395
    7. 'sum' → logprob: -7.1990437507629395
    8. '
' → logprob: -7.3240437507629395
    9. '(len' → logprob: -7.5740437507629395
    10. '(un' → logprob: -7.6990437507629395

Token 803: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.011628073640167713
    2. 'un' → logprob: -4.511628150939941
    3. '1' → logprob: -8.386628150939941
    4. 'iv' → logprob: -9.761628150939941
    5. '```' → logprob: -10.511628150939941
    6. '=' → logprob: -10.511628150939941
    7. '(' → logprob: -10.636628150939941
    8. 'v' → logprob: -10.636628150939941
    9. 'int' → logprob: -11.011628150939941
    10. 'i' → logprob: -11.136628150939941

Token 804: ' only' (ID: 1606)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9081851243972778
    2. ' for' → logprob: -1.6581851243972778
    3. 'mask' → logprob: -1.6581851243972778
    4. 'un' → logprob: -3.1581850051879883
    5. 'subset' → logprob: -3.6581850051879883
    6. '   ' → logprob: -3.6581850051879883
    7. 'sub' → logprob: -4.033185005187988
    8. '
' → logprob: -4.033185005187988
    9. '+' → logprob: -4.158185005187988
    10. '       ' → logprob: -4.158185005187988

Token 805: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40565672516822815
    2. ' for' → logprob: -1.2806566953659058
    3. 'for' → logprob: -4.280656814575195
    4. 'mask' → logprob: -4.280656814575195
    5. ' mask' → logprob: -5.155656814575195
    6. '   ' → logprob: -5.655656814575195
    7. '           ' → logprob: -6.030656814575195
    8. ' un' → logprob: -6.030656814575195
    9. 'un' → logprob: -6.030656814575195
    10. '```' → logprob: -6.280656814575195

Token 806: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3661687970161438
    2. '       ' → logprob: -1.491168737411499
    3. 'for' → logprob: -2.866168737411499
    4. 'mask' → logprob: -4.741168975830078
    5. '           ' → logprob: -5.241168975830078
    6. ' mask' → logprob: -5.491168975830078
    7. '   ' → logprob: -6.866168975830078
    8. ' un' → logprob: -6.991168975830078
    9. 'un' → logprob: -6.991168975830078
    10. '```' → logprob: -7.491168975830078

Token 807: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2441340982913971
    2. ' mask' → logprob: -2.6191341876983643
    3. '       ' → logprob: -2.8691341876983643
    4. 'for' → logprob: -3.3691341876983643
    5. 'mask' → logprob: -3.6191341876983643
    6. ' un' → logprob: -5.244133949279785
    7. '           ' → logprob: -5.494133949279785
    8. 'un' → logprob: -5.869133949279785
    9. '
' → logprob: -6.369133949279785
    10. ' next' → logprob: -6.494133949279785

Token 808: ' not' (ID: 625)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6655158996582031
    2. 'un' → logprob: -1.1655158996582031
    3. 'not' → logprob: -2.790515899658203
    4. ' not' → logprob: -2.915515899658203
    5. ' len' → logprob: -3.415515899658203
    6. ' un' → logprob: -3.790515899658203
    7. 'W' → logprob: -7.415515899658203
    8. 'M' → logprob: -7.665515899658203
    9. '0' → logprob: -7.790515899658203
    10. 'False' → logprob: -8.040515899658203

Token 809: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.22548265755176544
    2. ' un' → logprob: -1.600482702255249
    3. 'len' → logprob: -10.100482940673828
    4. '
' → logprob: -11.725482940673828
    5. ' len' → logprob: -12.225482940673828
    6. ' ' → logprob: -12.225482940673828
    7. '	un' → logprob: -12.975482940673828
    8. ' ' → logprob: -13.350482940673828
    9. '(un' → logprob: -13.600482940673828
    10. '   ' → logprob: -13.850482940673828

Token 810: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -9.186122770188376e-05
    2. 'v' → logprob: -9.375091552734375
    3. '```' → logprob: -13.625091552734375
    4. 'i' → logprob: -13.750091552734375
    5. 'vis' → logprob: -13.750091552734375
    6. 'isted' → logprob: -14.000091552734375
    7. ' visited' → logprob: -14.625091552734375
    8. 'iv' → logprob: -15.125091552734375
    9. 'vi' → logprob: -15.375091552734375
    10. 'is' → logprob: -15.500091552734375

Token 811: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6942030191421509
    2. ':
' → logprob: -0.6942030191421509
    3. 'continue' → logprob: -7.069202899932861
    4. '   ' → logprob: -9.56920337677002
    5. ' continue' → logprob: -9.56920337677002
    6. '       ' → logprob: -10.31920337677002
    7. ':
' → logprob: -11.81920337677002
    8. ':return' → logprob: -11.81920337677002
    9. '	continue' → logprob: -12.44420337677002
    10. '_continue' → logprob: -12.94420337677002

Token 812: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7531504034996033
    2. '   ' → logprob: -1.503150463104248
    3. '       ' → logprob: -1.753150463104248
    4. ' continue' → logprob: -2.378150463104248
    5. 'continue' → logprob: -3.253150463104248
    6. '	continue' → logprob: -7.003150463104248
    7. '               ' → logprob: -7.628150463104248
    8. '```' → logprob: -8.25314998626709
    9. '_continue' → logprob: -9.12814998626709
    10. ' continues' → logprob: -9.50314998626709

Token 813: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.8055832982063293
    2. 'continue' (adapté à ' continue') → logprob: -0.9305832982063293
    3. 'dp' → logprob: -2.8055832386016846
    4. '   ' → logprob: -3.3055832386016846
    5. ' dp' → logprob: -3.4305832386016846
    6. '           ' → logprob: -4.430583477020264
    7. '               ' → logprob: -4.805583477020264
    8. 'for' → logprob: -5.555583477020264
    9. ' for' → logprob: -5.930583477020264
    10. '       ' → logprob: -6.180583477020264

Token 814: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008940242230892181
    2. ' for' → logprob: -5.50894021987915
    3. '
' → logprob: -6.38394021987915
    4. '           ' → logprob: -6.88394021987915
    5. '        
' → logprob: -7.63394021987915
    6. 'for' → logprob: -7.63394021987915
    7. '```' → logprob: -8.258940696716309
    8. '   ' → logprob: -8.383940696716309
    9. ',' → logprob: -8.508940696716309
    10. '\' → logprob: -9.383940696716309

Token 815: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009096432477235794
    2. ' for' → logprob: -5.634096622467041
    3. '
' → logprob: -5.759096622467041
    4. '        
' → logprob: -7.509096622467041
    5. 'for' → logprob: -7.509096622467041
    6. '           ' → logprob: -7.884096622467041
    7. '   ' → logprob: -7.884096622467041
    8. '```' → logprob: -9.009096145629883
    9. ',' → logprob: -9.884096145629883
    10. '\' → logprob: -10.384096145629883

Token 816: ' u' (ID: 337)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34587088227272034
    2. 'for' → logprob: -2.0958709716796875
    3. 'mask' → logprob: -2.3458709716796875
    4. ' for' → logprob: -3.0958709716796875
    5. '           ' → logprob: -4.0958709716796875
    6. 'un' → logprob: -5.4708709716796875
    7. 'next' → logprob: -6.3458709716796875
    8. ' mask' → logprob: -6.8458709716796875
    9. '
' → logprob: -6.9708709716796875
    10. 'u' (adapté à ' u') → logprob: -7.5958709716796875

Token 817: '_len' (ID: 13683)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2315070480108261
    2. 'b' → logprob: -2.8565070629119873
    3. 'mask' → logprob: -3.6065070629119873
    4. 'bm' → logprob: -3.7315070629119873
    5. 'nb' → logprob: -4.106506824493408
    6. 'bs' → logprob: -4.106506824493408
    7. '_mask' → logprob: -4.231506824493408
    8. 'nm' → logprob: -4.606506824493408
    9. 'p' → logprob: -4.856506824493408
    10. '=' → logprob: -5.231506824493408

Token 818: '=len' (ID: 114011)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.41346868872642517
    2. '=len' → logprob: -1.1634687185287476
    3. ' =' → logprob: -3.663468599319458
    4. '=u' → logprob: -7.538468837738037
    5. '=int' → logprob: -10.663468360900879
    6. 'len' → logprob: -11.538468360900879
    7. '=_' → logprob: -11.663468360900879
    8. '   ' → logprob: -12.163468360900879
    9. '=user' → logprob: -12.663468360900879
    10. '=size' → logprob: -12.913468360900879

Token 819: '(un' (ID: 33694)
  Prédit: '(un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(un' → logprob: -0.0024949219077825546
    2. 'un' → logprob: -6.002494812011719
    3. '(' → logprob: -11.377494812011719
    4. '(u' → logprob: -11.877494812011719
    5. '(
' → logprob: -15.377494812011719
    6. '	un' → logprob: -15.502494812011719
    7. ' un' → logprob: -16.00249481201172
    8. '_un' → logprob: -16.37749481201172
    9. '```' → logprob: -16.50249481201172
    10. 'u' → logprob: -17.00249481201172

Token 820: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0025648376904428005
    2. 'un' → logprob: -6.502564907073975
    3. 'u' → logprob: -6.877564907073975
    4. 'vis' → logprob: -11.502564430236816
    5. 'v' → logprob: -11.502564430236816
    6. 'iv' → logprob: -13.002564430236816
    7. '```' → logprob: -13.252564430236816
    8. 'n' → logprob: -13.502564430236816
    9. 'is' → logprob: -14.127564430236816
    10. 'e' → logprob: -14.627564430236816

Token 821: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07348787784576416
    2. ')' → logprob: -2.6984877586364746
    3. '):
' → logprob: -5.698487758636475
    4. '   ' → logprob: -10.323488235473633
    5. ')
' → logprob: -10.323488235473633
    6. '):' → logprob: -10.573488235473633
    7. '       ' → logprob: -10.823488235473633
    8. '
' → logprob: -11.073488235473633
    9. '```' → logprob: -11.073488235473633
    10. ':
' → logprob: -11.823488235473633

Token 822: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6833475828170776
    2. ' for' → logprob: -1.0583475828170776
    3. '       ' → logprob: -1.9333475828170776
    4. 'from' → logprob: -6.808347702026367
    5. '```' → logprob: -7.058347702026367
    6. '   ' → logprob: -7.183347702026367
    7. '           ' → logprob: -8.683347702026367
    8. ' from' → logprob: -9.183347702026367
    9. '
' → logprob: -9.433347702026367
    10. 'mask' → logprob: -9.683347702026367

Token 823: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0012714238837361336
    2. 'mask' → logprob: -7.2512712478637695
    3. 'from' → logprob: -8.62627124786377
    4. 'sub' → logprob: -9.00127124786377
    5. 'subset' → logprob: -9.37627124786377
    6. '   ' → logprob: -9.37627124786377
    7. ' for' → logprob: -10.50127124786377
    8. 'u' → logprob: -11.12627124786377
    9. 'max' → logprob: -11.62627124786377
    10. '       ' → logprob: -11.62627124786377

Token 824: ' sub' (ID: 1543)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mask' → logprob: -1.0610191822052002
    2. 'subset' → logprob: -1.1860191822052002
    3. 'sub' → logprob: -1.4360191822052002
    4. 'size' → logprob: -2.9360191822052
    5. 'sz' → logprob: -4.061018943786621
    6. 'add' → logprob: -4.186018943786621
    7. 's' → logprob: -4.561018943786621
    8. 'next' → logprob: -5.186018943786621
    9. 'new' → logprob: -6.436018943786621
    10. ' subset' → logprob: -6.811018943786621

Token 825: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.0716598704457283
    2. 'set' → logprob: -2.946659803390503
    3. '_mask' → logprob: -4.696660041809082
    4. 's' → logprob: -5.571660041809082
    5. 'm' → logprob: -6.196660041809082
    6. 'ms' → logprob: -7.446660041809082
    7. ' in' → logprob: -8.696660041809082
    8. '_m' → logprob: -8.696660041809082
    9. 'sets' → logprob: -8.946660041809082
    10. ' mask' → logprob: -9.071660041809082

Token 826: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03805927932262421
    2. 'in' → logprob: -3.2880592346191406
    3. '   ' → logprob: -12.41305923461914
    4. 'range' → logprob: -12.66305923461914
    5. '
' → logprob: -12.78805923461914
    6. ' ' → logprob: -14.03805923461914
    7. ')' → logprob: -14.16305923461914
    8. '1' → logprob: -14.28805923461914
    9. '(' → logprob: -14.41305923461914
    10. 's' → logprob: -14.53805923461914

Token 827: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.020205607637763023
    2. ' range' → logprob: -4.020205497741699
    3. '(' → logprob: -6.895205497741699
    4. '1' → logprob: -6.895205497741699
    5. '(range' → logprob: -10.7702054977417
    6. '   ' → logprob: -13.2702054977417
    7. '0' → logprob: -13.3952054977417
    8. ' (' → logprob: -13.6452054977417
    9. '
' → logprob: -13.8952054977417
    10. '[' → logprob: -14.2702054977417

Token 828: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5759416818618774
    2. '1' → logprob: -0.8259416818618774
    3. ' (' → logprob: -13.950942039489746
    4. ' ' → logprob: -14.075942039489746
    5. '0' → logprob: -15.200942039489746
    6. '(u' → logprob: -15.950942039489746
    7. '   ' → logprob: -16.07594108581543
    8. '
' → logprob: -17.45094108581543
    9. ',' → logprob: -17.57594108581543
    10. '```' → logprob: -17.82594108581543

Token 829: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.688212614681106e-05
    2. '(' → logprob: -11.000017166137695
    3. '0' → logprob: -16.375017166137695
    4. ' ' → logprob: -17.500017166137695
    5. '
' → logprob: -18.250017166137695
    6. '```' → logprob: -19.875017166137695
    7. '   ' → logprob: -20.375017166137695
    8. '{' → logprob: -21.250017166137695
    9. '１' → logprob: -21.500017166137695
    10. '2' → logprob: -21.875017166137695

Token 830: ',' (ID: 11)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.0036361846141517162
    2. ',' → logprob: -6.378636360168457
    3. ' <<' → logprob: -6.503636360168457
    4. '<<(' → logprob: -7.753636360168457
    5. '1' → logprob: -12.878636360168457
    6. ' ,' → logprob: -14.128636360168457
    7. '<<<' → logprob: -15.003636360168457
    8. '   ' → logprob: -15.128636360168457
    9. '(' → logprob: -15.503636360168457
    10. '```' → logprob: -15.503636360168457

Token 831: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0031793788075447083
    2. '(' → logprob: -5.753179550170898
    3. ' ' → logprob: -14.503179550170898
    4. '```' → logprob: -14.503179550170898
    5. '   ' → logprob: -15.128179550170898
    6. '
' → logprob: -15.128179550170898
    7. ' (' → logprob: -16.3781795501709
    8. '{' → logprob: -18.0031795501709
    9. '2' → logprob: -18.2531795501709
    10. '           ' → logprob: -18.3781795501709

Token 832: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -6.873571692267433e-05
    2. ' <<' → logprob: -9.750068664550781
    3. '<<(' → logprob: -11.500068664550781
    4. '<<<' → logprob: -16.25006866455078
    5. '```' → logprob: -16.62506866455078
    6. '<<"' → logprob: -16.87506866455078
    7. ')<<' → logprob: -17.87506866455078
    8. '()<<' → logprob: -18.87506866455078
    9. '<' → logprob: -19.37506866455078
    10. '
' → logprob: -19.75006866455078

Token 833: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -7.107425062713446e-06
    2. '(u' → logprob: -12.625006675720215
    3. ' u' → logprob: -12.875006675720215
    4. '
' → logprob: -14.625006675720215
    5. '   ' → logprob: -15.000006675720215
    6. '```' → logprob: -16.12500762939453
    7. '[u' → logprob: -16.25000762939453
    8. '	u' → logprob: -16.50000762939453
    9. '       ' → logprob: -17.00000762939453
    10. '<u' → logprob: -17.62500762939453

Token 834: '_len' (ID: 13683)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -3.9054008084349334e-05
    2. '_u' → logprob: -10.750039100646973
    3. 'sub' → logprob: -12.250039100646973
    4. ' u' → logprob: -12.250039100646973
    5. '(u' → logprob: -13.000039100646973
    6. '_sub' → logprob: -13.250039100646973
    7. 'ub' → logprob: -14.000039100646973
    8. '```' → logprob: -14.000039100646973
    9. '[u' → logprob: -14.125039100646973
    10. '   ' → logprob: -15.375039100646973

Token 835: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20149092376232147
    2. '):' → logprob: -1.701490879058838
    3. '):
' → logprob: -9.951491355895996
    4. '       ' → logprob: -10.701491355895996
    5. '):

' → logprob: -13.326491355895996
    6. '   ' → logprob: -13.826491355895996
    7. ')' → logprob: -13.826491355895996
    8. '```' → logprob: -13.951491355895996
    9. '           ' → logprob: -14.451491355895996
    10. '**' → logprob: -14.701491355895996

Token 836: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07730269432067871
    2. '       ' → logprob: -2.9523026943206787
    3. '<|end|>' → logprob: -5.327302932739258
    4. '	       ' → logprob: -5.452302932739258
    5. '        
' → logprob: -5.702302932739258
    6. '            
' → logprob: -6.077302932739258
    7. '               ' → logprob: -6.327302932739258
    8. '        ' → logprob: -6.452302932739258
    9. '<|end|>' → logprob: -7.702302932739258
    10. ' ' → logprob: -8.077302932739258

Token 837: ' subset' (ID: 58845)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.546159029006958
    2. 'subset' (adapté à ' subset') → logprob: -2.171159029006958
    3. '               ' → logprob: -2.421159029006958
    4. 'new' → logprob: -2.546159029006958
    5. ' next' → logprob: -3.046159029006958
    6. 'mask' → logprob: -3.296159029006958
    7. ' new' → logprob: -4.421158790588379
    8. '           ' → logprob: -4.796158790588379
    9. ' subset' → logprob: -5.296158790588379
    10. 'added' → logprob: -5.421158790588379

Token 838: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.649528443813324
    2. ' =' → logprob: -1.7745285034179688
    3. '=set' → logprob: -1.7745285034179688
    4. '_c' → logprob: -2.7745285034179688
    5. '=(' → logprob: -3.2745285034179688
    6. '_mask' → logprob: -4.649528503417969
    7. '_bits' → logprob: -5.024528503417969
    8. '_indices' → logprob: -5.274528503417969
    9. '=((' → logprob: -5.274528503417969
    10. '_set' → logprob: -5.899528503417969

Token 839: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6038668751716614
    2. '               ' → logprob: -0.8538668751716614
    3. 'for' → logprob: -4.103867053985596
    4. '           ' → logprob: -4.728867053985596
    5. '	           ' → logprob: -7.353867053985596
    6. '	       ' → logprob: -7.853867053985596
    7. ' ' → logprob: -8.228866577148438
    8. '	for' → logprob: -8.978866577148438
    9. '		       ' → logprob: -8.978866577148438
    10. '                   ' → logprob: -9.103866577148438

Token 840: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.48681509494781494
    2. 'for' (adapté à ' for') → logprob: -0.9868150949478149
    3. '               ' → logprob: -4.611814975738525
    4. 'idx' → logprob: -6.986814975738525
    5. '           ' → logprob: -7.236814975738525
    6. '                   ' → logprob: -7.361814975738525
    7. ' idx' → logprob: -8.986815452575684
    8. 'indices' → logprob: -9.236815452575684
    9. ' indices' → logprob: -9.986815452575684
    10. '   ' → logprob: -10.236815452575684

Token 841: ' idx' (ID: 14016)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.10381434112787247
    2. 'i' → logprob: -2.8538143634796143
    3. 'idx' → logprob: -3.8538143634796143
    4. 'j' → logprob: -4.353814125061035
    5. 'bit' → logprob: -5.103814125061035
    6. 'b' → logprob: -7.853814125061035
    7. 'u' → logprob: -8.103814125061035
    8. 'x' → logprob: -9.978814125061035
    9. 'pos' → logprob: -10.478814125061035
    10. 'index' → logprob: -10.728814125061035

Token 842: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.033733297139406204
    2. 'in' → logprob: -3.408733367919922
    3. 'u' → logprob: -10.408733367919922
    4. '	in' → logprob: -10.658733367919922
    5. ' ' → logprob: -11.908733367919922
    6. ',' → logprob: -12.033733367919922
    7. 'i' → logprob: -12.033733367919922
    8. '_in' → logprob: -12.658733367919922
    9. '0' → logprob: -13.408733367919922
    10. '   ' → logprob: -13.408733367919922

Token 843: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.020554035902023315
    2. ' range' → logprob: -3.8955540657043457
    3. '(range' → logprob: -12.395553588867188
    4. 'u' → logprob: -12.645553588867188
    5. 'un' → logprob: -13.395553588867188
    6. '   ' → logprob: -14.145553588867188
    7. 'sub' → logprob: -14.395553588867188
    8. ' ' → logprob: -14.395553588867188
    9. '
' → logprob: -15.020553588867188
    10. '	range' → logprob: -15.270553588867188

Token 844: '(u' (ID: 17057)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -6.802049756515771e-05
    2. ' u' → logprob: -9.625067710876465
    3. '(u' → logprob: -13.375067710876465
    4. '
' → logprob: -16.12506866455078
    5. '	u' → logprob: -16.87506866455078
    6. '   ' → logprob: -16.87506866455078
    7. '           ' → logprob: -18.12506866455078
    8. '<u' → logprob: -18.62506866455078
    9. '[u' → logprob: -19.25006866455078
    10. ',u' → logprob: -19.25006866455078

Token 845: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.04819200187921524
    2. 'u' → logprob: -3.173192024230957
    3. 'Len' → logprob: -6.048192024230957
    4. 'len' → logprob: -6.923192024230957
    5. ' u' → logprob: -7.048192024230957
    6. '=u' → logprob: -8.048192024230957
    7. '[u' → logprob: -9.173192024230957
    8. '<u' → logprob: -9.423192024230957
    9. '```' → logprob: -9.548192024230957
    10. ',u' → logprob: -9.923192024230957

Token 846: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.08106585592031479
    2. ':
' → logprob: -2.5810658931732178
    3. '               ' → logprob: -6.831065654754639
    4. ':' → logprob: -7.956065654754639
    5. '           ' → logprob: -8.206066131591797
    6. '):' → logprob: -8.581066131591797
    7. 'if' → logprob: -9.956066131591797
    8. '():
' → logprob: -9.956066131591797
    9. '```' → logprob: -10.706066131591797
    10. '                   ' → logprob: -10.831066131591797

Token 847: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00045605594641529024
    2. ' if' → logprob: -8.875455856323242
    3. '	           ' → logprob: -9.250455856323242
    4. ' ' → logprob: -9.875455856323242
    5. '		       ' → logprob: -10.125455856323242
    6. '<|end|>' → logprob: -11.125455856323242
    7. '			' → logprob: -11.375455856323242
    8. '                ' → logprob: -11.500455856323242
    9. '                
' → logprob: -11.500455856323242
    10. '              ' → logprob: -11.500455856323242

Token 848: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3725283145904541
    2. 'if' (adapté à ' if') → logprob: -1.247528314590454
    3. '               ' → logprob: -4.122528076171875
    4. '                   ' → logprob: -5.122528076171875
    5. ' ' → logprob: -7.372528076171875
    6. '   ' → logprob: -8.372528076171875
    7. '                ' → logprob: -8.622528076171875
    8. '           ' → logprob: -9.122528076171875
    9. ' ' → logprob: -9.372528076171875
    10. '                       ' → logprob: -9.622528076171875

Token 849: ' (' (ID: 350)
  Prédit: '(sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sub' → logprob: -0.01574891246855259
    2. ' (' → logprob: -4.265748977661133
    3. 'sub' → logprob: -6.640748977661133
    4. ' sub' → logprob: -8.265748977661133
    5. '(' → logprob: -11.015748977661133
    6. '((' → logprob: -12.640748977661133
    7. '[sub' → logprob: -14.640748977661133
    8. ' ' → logprob: -15.015748977661133
    9. '(sp' → logprob: -16.265748977661133
    10. '(space' → logprob: -16.390748977661133

Token 850: 'sub' (ID: 3834)
  Prédit: 'sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.011930732987821102
    2. ' sub' → logprob: -4.6369309425354
    3. '(sub' → logprob: -6.1369309425354
    4. ' (' → logprob: -12.386930465698242
    5. '   ' → logprob: -12.886930465698242
    6. '	sub' → logprob: -13.761930465698242
    7. ' ' → logprob: -14.011930465698242
    8. '(' → logprob: -14.386930465698242
    9. '1' → logprob: -15.011930465698242
    10. '[sub' → logprob: -15.136930465698242

Token 851: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -1.1279553291387856e-05
    2. '(mask' → logprob: -11.750011444091797
    3. '_mask' → logprob: -13.750011444091797
    4. '1' → logprob: -14.750011444091797
    5. '   ' → logprob: -15.125011444091797
    6. '(' → logprob: -15.500011444091797
    7. 'sub' → logprob: -15.500011444091797
    8. '```' → logprob: -15.750011444091797
    9. '       ' → logprob: -16.000011444091797
    10. 'MASK' → logprob: -16.125011444091797

Token 852: '>>' (ID: 3920)
  Prédit: '>>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.16071076691150665
    2. ' >>' → logprob: -1.9107108116149902
    3. ' &' → logprob: -7.91071081161499
    4. ')>>' → logprob: -9.785710334777832
    5. ')&' → logprob: -10.410710334777832
    6. '>>(' → logprob: -10.910710334777832
    7. ')' → logprob: -12.035710334777832
    8. '&' → logprob: -12.785710334777832
    9. '>>&' → logprob: -13.285710334777832
    10. '&(' → logprob: -13.660710334777832

Token 853: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -3.5597102396423e-05
    2. ' idx' → logprob: -10.250035285949707
    3. '(idx' → logprob: -16.625036239624023
    4. '	idx' → logprob: -17.125036239624023
    5. '1' → logprob: -18.250036239624023
    6. '   ' → logprob: -18.250036239624023
    7. ' ' → logprob: -19.875036239624023
    8. '0' → logprob: -19.875036239624023
    9. '           ' → logprob: -20.000036239624023
    10. '[idx' → logprob: -20.125036239624023

Token 854: ')&' (ID: 34370)
  Prédit: ')&'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')&' → logprob: -0.018152287229895592
    2. ')' → logprob: -4.018152236938477
    3. ' )' → logprob: -14.143152236938477
    4. '           ' → logprob: -14.268152236938477
    5. '1' → logprob: -15.018152236938477
    6. '   ' → logprob: -15.268152236938477
    7. '&' → logprob: -15.518152236938477
    8. '       ' → logprob: -15.643152236938477
    9. '               ' → logprob: -16.018152236938477
    10. '                   ' → logprob: -16.768152236938477

Token 855: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '
' → logprob: -17.125003814697266
    4. '   ' → logprob: -18.625003814697266
    5. '0' → logprob: -19.250003814697266
    6. '&' → logprob: -19.625003814697266
    7. '```' → logprob: -19.750003814697266
    8. '

' → logprob: -20.375003814697266
    9. '  ' → logprob: -21.500003814697266
    10. '' → logprob: -21.625003814697266

Token 856: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.03186109662055969
    2. ':' → logprob: -4.281861305236816
    3. '==' → logprob: -4.281861305236816
    4. '):
' → logprob: -6.281861305236816
    5. ' ==' → logprob: -7.156861305236816
    6. ')==' → logprob: -8.031861305236816
    7. 'subset' → logprob: -8.656861305236816
    8. '                   ' → logprob: -8.781861305236816
    9. '               ' → logprob: -9.031861305236816
    10. ' subset' → logprob: -9.281861305236816

Token 857: '                   ' (ID: 699)
  Prédit: ' subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' subset' → logprob: -0.07505597919225693
    2. '               ' → logprob: -3.2000560760498047
    3. 'subset' → logprob: -3.9500560760498047
    4. '                   ' → logprob: -4.450056076049805
    5. '           ' → logprob: -8.825056076049805
    6. ':
' → logprob: -8.950056076049805
    7. '   ' → logprob: -9.450056076049805
    8. '                       ' → logprob: -10.200056076049805
    9. '_subset' → logprob: -10.200056076049805
    10. '```' → logprob: -10.575056076049805

Token 858: ' subset' (ID: 58845)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' (adapté à ' subset') → logprob: -0.008697889745235443
    2. ' subset' → logprob: -4.758697986602783
    3. '               ' → logprob: -9.633697509765625
    4. '                   ' → logprob: -11.133697509765625
    5. '_subset' → logprob: -13.133697509765625
    6. '           ' → logprob: -14.258697509765625
    7. '   ' → logprob: -15.008697509765625
    8. '                       ' → logprob: -15.758697509765625
    9. 'substring' → logprob: -17.008697509765625
    10. '       ' → logprob: -17.008697509765625

Token 859: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0002601438027340919
    2. '=' → logprob: -9.250260353088379
    3. 'append' → logprob: -9.375260353088379
    4. '.' → logprob: -9.750260353088379
    5. '=sub' → logprob: -11.500260353088379
    6. '].' → logprob: -12.250260353088379
    7. ' .' → logprob: -13.125260353088379
    8. '   ' → logprob: -14.125260353088379
    9. ').' → logprob: -14.250260353088379
    10. 'subset' → logprob: -14.375260353088379

Token 860: '(un' (ID: 33694)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.004459077958017588
    2. ' un' → logprob: -5.504458904266357
    3. '(un' → logprob: -7.879458904266357
    4. 'u' → logprob: -13.879459381103516
    5. '	un' → logprob: -14.629459381103516
    6. '(' → logprob: -14.754459381103516
    7. '   ' → logprob: -15.504459381103516
    8. '_un' → logprob: -17.129459381103516
    9. '(
' → logprob: -17.254459381103516
    10. '           ' → logprob: -17.504459381103516

Token 861: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0014238066505640745
    2. 'used' → logprob: -7.1264238357543945
    3. 'un' → logprob: -7.8764238357543945
    4. 'available' → logprob: -10.376423835754395
    5. 'visible' → logprob: -10.376423835754395
    6. 'ittest' → logprob: -10.626423835754395
    7. 'ut' → logprob: -11.126423835754395
    8. 'u' → logprob: -11.376423835754395
    9. 'user' → logprob: -11.626423835754395
    10. 'selected' → logprob: -11.876423835754395

Token 862: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -6.034592388459714e-06
    2. 'idx' → logprob: -12.750005722045898
    3. '(idx' → logprob: -12.875005722045898
    4. ' idx' → logprob: -16.1250057220459
    5. '                   ' → logprob: -16.7500057220459
    6. '[' → logprob: -16.7500057220459
    7. ')' → logprob: -16.7500057220459
    8. '       ' → logprob: -17.1250057220459
    9. '```' → logprob: -17.1250057220459
    10. '   ' → logprob: -17.2500057220459

Token 863: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11378218233585358
    2. ')
' → logprob: -2.2387821674346924
    3. '           ' → logprob: -7.2387824058532715
    4. '])' → logprob: -9.363781929016113
    5. '               ' → logprob: -9.613781929016113
    6. '                   ' → logprob: -10.363781929016113
    7. ')]' → logprob: -11.113781929016113
    8. '])
' → logprob: -11.238781929016113
    9. ')])' → logprob: -11.988781929016113
    10. ')
' → logprob: -12.363781929016113

Token 864: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007237790618091822
    2. '            
' → logprob: -5.757237911224365
    3. '
' → logprob: -5.882237911224365
    4. 'time' → logprob: -8.382237434387207
    5. ',' → logprob: -8.507237434387207
    6. 'next' → logprob: -8.882237434387207
    7. ' time' → logprob: -9.382237434387207
    8. ' next' → logprob: -9.757237434387207
    9. 'distance' → logprob: -10.007237434387207
    10. '       ' → logprob: -10.132237434387207

Token 865: ' #' (ID: 1069)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.19630983471870422
    2. 'cost' → logprob: -2.571309804916382
    3. 'travel' → logprob: -3.071309804916382
    4. '           ' → logprob: -3.696309804916382
    5. 'total' → logprob: -5.196310043334961
    6. 'next' → logprob: -5.196310043334961
    7. 'new' → logprob: -5.321310043334961
    8. 'dist' → logprob: -5.571310043334961
    9. 't' → logprob: -5.946310043334961
    10. '#' (adapté à ' #') → logprob: -6.571310043334961

Token 866: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.3521634042263031
    2. 'travel' → logprob: -1.9771634340286255
    3. 'cost' → logprob: -2.477163314819336
    4. 'total' → logprob: -3.977163314819336
    5. 'new' → logprob: -4.102163314819336
    6. 'subset' → logprob: -4.227163314819336
    7. 't' → logprob: -5.227163314819336
    8. '           ' → logprob: -5.602163314819336
    9. '#' → logprob: -6.477163314819336
    10. 'next' → logprob: -6.477163314819336

Token 867: ' cost' (ID: 3097)
  Prédit: '_needed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_needed' → logprob: -1.1561568975448608
    2. '=' → logprob: -1.6561568975448608
    3. 'cost' → logprob: -1.7811568975448608
    4. ' =' → logprob: -2.7811570167541504
    5. 'needed' → logprob: -2.9061570167541504
    6. '_cost' → logprob: -2.9061570167541504
    7. 'used' → logprob: -3.2811570167541504
    8. '_sp' → logprob: -3.7811570167541504
    9. '_required' → logprob: -4.03115701675415
    10. '_used' → logprob: -4.15615701675415

Token 868: ':
' (ID: 734)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.325449138879776
    2. ' =' → logprob: -1.7004491090774536
    3. '=time' → logprob: -3.575449228286743
    4. 'time' → logprob: -3.825449228286743
    5. 'cost' → logprob: -4.200448989868164
    6. 'dist' → logprob: -5.200448989868164
    7. 'travel' → logprob: -5.450448989868164
    8. '+' → logprob: -5.450448989868164
    9. 'total' → logprob: -5.700448989868164
    10. '+=' → logprob: -6.075448989868164

Token 869: '           ' (ID: 352)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cost' → logprob: -1.1904045343399048
    2. 'cost' → logprob: -1.5654045343399048
    3. ' time' → logprob: -1.8154045343399048
    4. 'time' → logprob: -2.1904044151306152
    5. ' travel' → logprob: -2.6904044151306152
    6. ' trip' → logprob: -3.8154044151306152
    7. ' next' → logprob: -4.065404415130615
    8. ' total' → logprob: -4.065404415130615
    9. 'trip' → logprob: -4.065404415130615
    10. ' dist' → logprob: -4.440404415130615

Token 870: ' #' (ID: 1069)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.47529131174087524
    2. 'time' → logprob: -1.3502912521362305
    3. ' cost' → logprob: -3.2252912521362305
    4. 'trip' → logprob: -3.7252912521362305
    5. ' time' → logprob: -4.7252912521362305
    6. 'total' → logprob: -4.9752912521362305
    7. 'travel' → logprob: -5.2252912521362305
    8. 'dist' → logprob: -5.2252912521362305
    9. 'dp' → logprob: -5.4752912521362305
    10. ' dist' → logprob: -5.8502912521362305

Token 871: ' from' (ID: 591)
  Prédit: 'travel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'travel' → logprob: -1.186852216720581
    2. 'time' → logprob: -1.436852216720581
    3. 'cost' → logprob: -1.561852216720581
    4. 'trip' → logprob: -2.061852216720581
    5. ' travel' → logprob: -3.436852216720581
    6. 'total' → logprob: -3.686852216720581
    7. 'dist' → logprob: -4.56185245513916
    8. ' cost' → logprob: -5.06185245513916
    9. ' time' → logprob: -5.43685245513916
    10. ' trip' → logprob: -5.68685245513916

Token 872: ' pos' (ID: 1253)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.024540862068533897
    2. ' last' → logprob: -3.774540901184082
    3. 'pos' → logprob: -6.899540901184082
    4. '[last' → logprob: -9.399540901184082
    5. 'dist' → logprob: -9.649540901184082
    6. 'dp' → logprob: -10.149540901184082
    7. '(last' → logprob: -11.149540901184082
    8. '0' → logprob: -11.149540901184082
    9. 'markets' → logprob: -11.899540901184082
    10. '_last' → logprob: -12.024540901184082

Token 873: '[last' (ID: 126100)
  Prédit: '[last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[last' → logprob: -0.018470879644155502
    2. 'last' → logprob: -4.018470764160156
    3. '[' → logprob: -9.018470764160156
    4. ' last' → logprob: -10.018470764160156
    5. '(last' → logprob: -10.143470764160156
    6. ' [' → logprob: -10.643470764160156
    7. '
' → logprob: -10.893470764160156
    8. '`' → logprob: -11.393470764160156
    9. '```' → logprob: -11.393470764160156
    10. 'sub' → logprob: -12.018470764160156

Token 874: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5333553552627563
    2. ']' → logprob: -0.9083553552627563
    3. '],' → logprob: -5.408355236053467
    4. ']
' → logprob: -6.158355236053467
    5. 'to' → logprob: -6.908355236053467
    6. ' ][' → logprob: -7.783355236053467
    7. '])' → logprob: -8.283355712890625
    8. '[to' → logprob: -8.283355712890625
    9. '[last' → logprob: -8.283355712890625
    10. ']+' → logprob: -8.408355712890625

Token 875: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.12471762299537659
    2. ' to' → logprob: -3.2497177124023438
    3. 'pos' → logprob: -3.7497177124023438
    4. 'dist' → logprob: -4.249717712402344
    5. '+' → logprob: -4.499717712402344
    6. '[' → logprob: -5.124717712402344
    7. ')' → logprob: -5.624717712402344
    8. ',' → logprob: -5.999717712402344
    9. 'time' → logprob: -6.124717712402344
    10. '_to' → logprob: -6.624717712402344

Token 876: ' first' (ID: 1577)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.2363884299993515
    2. 'subset' → logprob: -1.6113884449005127
    3. 'markets' → logprob: -5.236388206481934
    4. ' subset' → logprob: -5.986388206481934
    5. ' pos' → logprob: -6.236388206481934
    6. 'sub' → logprob: -7.986388206481934
    7. ' markets' → logprob: -8.236388206481934
    8. 'positions' → logprob: -9.111388206481934
    9. '(pos' → logprob: -9.611388206481934
    10. '
' → logprob: -10.236388206481934

Token 877: ' city' (ID: 5030)
  Prédit: '_subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_subset' → logprob: -1.97273588180542
    2. ']' → logprob: -2.09773588180542
    3. '_' → logprob: -2.09773588180542
    4. '[' → logprob: -2.47273588180542
    5. '_city' → logprob: -2.47273588180542
    6. '_sub' → logprob: -2.59773588180542
    7. '_market' → logprob: -2.72273588180542
    8. '][' → logprob: -3.22273588180542
    9. ')' → logprob: -3.34773588180542
    10. 'subset' → logprob: -3.59773588180542

Token 878: ' in' (ID: 306)
  Prédit: '[last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[last' → logprob: -0.42198386788368225
    2. '[' → logprob: -2.7969839572906494
    3. '[next' → logprob: -3.0469839572906494
    4. '[sub' → logprob: -3.1719839572906494
    5. '][' → logprob: -3.4219839572906494
    6. ',' → logprob: -4.04698371887207
    7. '[pos' → logprob: -4.17198371887207
    8. ')' → logprob: -4.42198371887207
    9. '=sub' → logprob: -4.42198371887207
    10. ',last' → logprob: -4.79698371887207

Token 879: ' subset' (ID: 58845)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.0009242036612704396
    2. ' subset' → logprob: -7.250924110412598
    3. 'markets' → logprob: -9.125924110412598
    4. 'pos' → logprob: -10.500924110412598
    5. '
' → logprob: -10.625924110412598
    6. 'market' → logprob: -11.375924110412598
    7. 'un' → logprob: -11.875924110412598
    8. 'visited' → logprob: -12.500924110412598
    9. 'set' → logprob: -12.500924110412598
    10. '[' → logprob: -12.750924110412598

Token 880: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8685036301612854
    2. ')' → logprob: -2.8685035705566406
    3. ',' → logprob: -2.8685035705566406
    4. '][' → logprob: -2.9935035705566406
    5. '[last' → logprob: -3.3685035705566406
    6. '
' → logprob: -3.3685035705566406
    7. '[first' → logprob: -3.3685035705566406
    8. '```' → logprob: -3.4935035705566406
    9. '<|end|>' → logprob: -3.4935035705566406
    10. '+' → logprob: -3.8685035705566406

Token 881: ' go' (ID: 810)
  Prédit: ' time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' time' → logprob: -1.7070033550262451
    2. ' first' → logprob: -1.7070033550262451
    3. ' cost' → logprob: -2.457003355026245
    4. 'time' → logprob: -2.457003355026245
    5. '+' → logprob: -3.082003355026245
    6. ' to' → logprob: -3.207003355026245
    7. ' plus' → logprob: -3.332003355026245
    8. 'cost' → logprob: -3.457003355026245
    9. 'first' → logprob: -3.457003355026245
    10. ' +' → logprob: -3.582003355026245

Token 882: ' through' (ID: 1819)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.7262707948684692
    2. ' back' → logprob: -0.9762707948684692
    3. 'back' → logprob: -3.3512706756591797
    4. ' pos' → logprob: -3.8512706756591797
    5. ' subset' → logprob: -3.8512706756591797
    6. 'subset' → logprob: -4.10127067565918
    7. '[pos' → logprob: -4.35127067565918
    8. '_pos' → logprob: -5.47627067565918
    9. ' to' → logprob: -5.47627067565918
    10. ' through' → logprob: -5.72627067565918

Token 883: ' subset' (ID: 58845)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.5611613988876343
    2. ' subset' → logprob: -1.1861613988876343
    3. ' all' → logprob: -2.436161518096924
    4. 'all' → logprob: -4.061161518096924
    5. ' the' → logprob: -4.936161518096924
    6. 'the' → logprob: -5.311161518096924
    7. 'sub' → logprob: -5.436161518096924
    8. ' range' → logprob: -7.811161518096924
    9. ' cities' → logprob: -8.061161041259766
    10. 'range' → logprob: -8.311161041259766

Token 884: ' in' (ID: 306)
  Prédit: '_mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_mask' → logprob: -2.257525682449341
    2. '_subset' → logprob: -2.382525682449341
    3. ' =' → logprob: -2.507525682449341
    4. ',' → logprob: -2.507525682449341
    5. '_time' → logprob: -2.882525682449341
    6. '_cost' → logprob: -2.882525682449341
    7. '_tokens' → logprob: -2.882525682449341
    8. '[' → logprob: -3.007525682449341
    9. '           ' → logprob: -3.382525682449341
    10. ':' → logprob: -3.382525682449341

Token 885: ' any' (ID: 1062)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.09568820893764496
    2. 'order' → logprob: -3.4706881046295166
    3. 'per' → logprob: -4.220688343048096
    4. 'subset' → logprob: -4.220688343048096
    5. 'all' → logprob: -4.845688343048096
    6. 'range' → logprob: -5.095688343048096
    7. 'some' → logprob: -5.220688343048096
    8. 'it' → logprob: -5.470688343048096
    9. 'sorted' → logprob: -5.845688343048096
    10. ' any' → logprob: -6.970688343048096

Token 886: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.08407894521951675
    2. ' order' → logprob: -2.5840790271759033
    3. 'subset' → logprob: -6.584078788757324
    4. '<|end|>' → logprob: -7.084078788757324
    5. '(order' → logprob: -7.459078788757324
    6. 'possible' → logprob: -7.584078788757324
    7. '_order' → logprob: -7.709078788757324
    8. '```' → logprob: -8.084078788757324
    9. 'per' → logprob: -8.709078788757324
    10. ')' → logprob: -8.959078788757324

Token 887: '?' (ID: 30)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 888: ' To' (ID: 2514)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6624674201011658
    2. ',' → logprob: -1.9124674797058105
    3. '#' → logprob: -2.9124674797058105
    4. '<|end|>' → logprob: -3.2874674797058105
    5. ' (' → logprob: -3.4124674797058105
    6. '```' → logprob: -3.9124674797058105
    7. '[' → logprob: -4.0374674797058105
    8. '
' → logprob: -4.0374674797058105
    9. ' #' → logprob: -4.0374674797058105
    10. ':
' → logprob: -4.4124674797058105

Token 889: ' minimize' (ID: 41776)
  Prédit: 'simpl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'simpl' → logprob: -1.8347419500350952
    2. '#' → logprob: -1.9597419500350952
    3. 'opt' → logprob: -1.9597419500350952
    4. 'complete' → logprob: -2.0847420692443848
    5. 'min' → logprob: -2.3347420692443848
    6. 'calculate' → logprob: -2.4597420692443848
    7. '```' → logprob: -3.3347420692443848
    8. 'len' → logprob: -3.8347420692443848
    9. 'be' → logprob: -3.9597420692443848
    10. 'choose' → logprob: -3.9597420692443848

Token 890: ' time' (ID: 1058)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1876029968261719
    2. '<|end|>' → logprob: -1.4376029968261719
    3. ' ' → logprob: -2.312602996826172
    4. 'subset' → logprob: -2.937602996826172
    5. ' subset' → logprob: -3.062602996826172
    6. 'dist' → logprob: -3.312602996826172
    7. ' dist' → logprob: -4.062602996826172
    8. 'sub' → logprob: -4.187602996826172
    9. 'distance' → logprob: -4.312602996826172
    10. ' last' → logprob: -4.312602996826172

Token 891: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6629413366317749
    2. ',' → logprob: -1.037941336631775
    3. '[' → logprob: -2.9129414558410645
    4. '(' → logprob: -4.2879414558410645
    5. '=' → logprob: -4.7879414558410645
    6. '.' → logprob: -5.0379414558410645
    7. '   ' → logprob: -5.6629414558410645
    8. '<|end|>' → logprob: -5.6629414558410645
    9. '```' → logprob: -5.9129414558410645
    10. '#' → logprob: -5.9129414558410645

Token 892: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.11626793444156647
    2. 'pass' → logprob: -3.4912679195404053
    3. 'continue' → logprob: -4.116268157958984
    4. 'dp' → logprob: -4.241268157958984
    5. 'min' → logprob: -4.616268157958984
    6. 'for' → logprob: -5.116268157958984
    7. 'first' → logprob: -5.241268157958984
    8. 'time' → logprob: -5.241268157958984
    9. 'pos' → logprob: -5.866268157958984
    10. '
' → logprob: -5.866268157958984

Token 893: ' can' (ID: 665)
  Prédit: ' should'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' should' → logprob: -0.9862863421440125
    2. ' continue' → logprob: -1.4862864017486572
    3. '#' → logprob: -2.4862864017486572
    4. 'continue' → logprob: -2.7362864017486572
    5. ' can' → logprob: -3.1112864017486572
    6. 'should' → logprob: -3.1112864017486572
    7. ' need' → logprob: -3.4862864017486572
    8. 'need' → logprob: -4.361286163330078
    9. 'consider' → logprob: -4.736286163330078
    10. ' assume' → logprob: -4.986286163330078

Token 894: ' consider' (ID: 3331)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -1.5414912700653076
    2. 'use' → logprob: -1.5414912700653076
    3. 'ass' → logprob: -1.9164912700653076
    4. 'approx' → logprob: -2.1664912700653076
    5. 'import' → logprob: -2.6664912700653076
    6. 'consider' → logprob: -2.7914912700653076
    7. 'sort' → logprob: -3.2914912700653076
    8. 'calculate' → logprob: -3.5414912700653076
    9. 'choose' → logprob: -3.7914912700653076
    10. 'enumer' → logprob: -4.416491508483887

Token 895: ':
' (ID: 734)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -1.1471340656280518
    2. '1' → logprob: -1.8971340656280518
    3. 'all' → logprob: -2.3971340656280518
    4. 'sub' → logprob: -2.8971340656280518
    5. 'next' → logprob: -3.0221340656280518
    6. 'subset' → logprob: -3.0221340656280518
    7. 'len' → logprob: -3.2721340656280518
    8. 'the' → logprob: -3.2721340656280518
    9. '0' → logprob: -3.3971340656280518
    10. ' all' → logprob: -3.5221340656280518

Token 896: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.36017224192619324
    2. '               ' → logprob: -2.2351722717285156
    3. '            ' → logprob: -3.2351722717285156
    4. ' continue' → logprob: -3.3601722717285156
    5. '                   ' → logprob: -3.6101722717285156
    6. '#' → logprob: -3.7351722717285156
    7. ' #' → logprob: -4.235172271728516
    8. ' ' → logprob: -4.735172271728516
    9. ' 
' → logprob: -4.985172271728516
    10. 'continue' → logprob: -4.985172271728516

Token 897: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0933659076690674
    2. ' first' → logprob: -1.3433659076690674
    3. ' #' → logprob: -2.2183659076690674
    4. ' next' → logprob: -2.5933659076690674
    5. '#' (adapté à ' #') → logprob: -2.9683659076690674
    6. ' cost' → logprob: -3.2183659076690674
    7. ' time' → logprob: -3.7183659076690674
    8. 'first' → logprob: -4.218365669250488
    9. ' prev' → logprob: -4.593365669250488
    10. ' subset' → logprob: -4.593365669250488

Token 898: ' Since' (ID: 12265)
  Prédit: ' #'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' #' → logprob: -0.9131441712379456
    2. '#' → logprob: -1.0381441116333008
    3. '           ' → logprob: -2.413144111633301
    4. ' for' → logprob: -3.913144111633301
    5. ' last' → logprob: -3.913144111633301
    6. ' first' → logprob: -4.038144111633301
    7. ' subset' → logprob: -4.288144111633301
    8. 'subset' → logprob: -4.788144111633301
    9. ' next' → logprob: -4.913144111633301
    10. 'first' → logprob: -5.038144111633301

Token 899: ' we' (ID: 581)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.8904346227645874
    2. 'the' → logprob: -1.5154346227645874
    3. 'len' → logprob: -2.140434741973877
    4. '#' → logprob: -3.015434741973877
    5. 'N' → logprob: -3.265434741973877
    6. 'we' → logprob: -3.890434741973877
    7. 'T' → logprob: -4.015434741973877
    8. 'all' → logprob: -4.140434741973877
    9. '   ' → logprob: -4.390434741973877
    10. 'sub' → logprob: -4.515434741973877

Token 900: ' always' (ID: 3324)
  Prédit: ' only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' only' → logprob: -1.3461848497390747
    2. 'have' → logprob: -1.8461848497390747
    3. 'only' → logprob: -1.9711848497390747
    4. ' have' → logprob: -2.221184730529785
    5. '#' → logprob: -2.471184730529785
    6. ' are' → logprob: -2.721184730529785
    7. 'are' → logprob: -3.221184730529785
    8. 'know' → logprob: -3.596184730529785
    9. ' can' → logprob: -3.721184730529785
    10. ' know' → logprob: -4.096184730529785

Token 901: ' must' (ID: 2804)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.3210903406143188
    2. 'visit' → logprob: -1.3210903406143188
    3. 'return' → logprob: -1.8210903406143188
    4. 'consider' → logprob: -2.1960902214050293
    5. 'go' → logprob: -3.1960902214050293
    6. 'must' → logprob: -3.6960902214050293
    7. 'need' → logprob: -4.196090221405029
    8. ' start' → logprob: -4.321090221405029
    9. ' visit' → logprob: -4.321090221405029
    10. ' return' → logprob: -4.696090221405029

Token 902: ' go' (ID: 810)
  Prédit: 'visit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visit' → logprob: -0.27085816860198975
    2. 'return' → logprob: -1.8958581686019897
    3. ' visit' → logprob: -2.8958582878112793
    4. ' return' → logprob: -3.8958582878112793
    5. 'go' → logprob: -5.645858287811279
    6. 'start' → logprob: -6.520858287811279
    7. 'end' → logprob: -6.520858287811279
    8. '
' → logprob: -7.020858287811279
    9. '#' → logprob: -7.270858287811279
    10. 'consider' → logprob: -7.270858287811279

Token 903: ' market' (ID: 2910)
  Prédit: 'back'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'back' → logprob: -0.45958995819091797
    2. 'through' → logprob: -1.959589958190918
    3. ' back' → logprob: -1.959589958190918
    4. 'from' → logprob: -3.209589958190918
    5. ' through' → logprob: -3.334589958190918
    6. 'to' → logprob: -5.084589958190918
    7. 'return' → logprob: -6.209589958190918
    8. ' from' → logprob: -7.584589958190918
    9. ' to' → logprob: -8.084589958190918
    10. '```' → logprob: -8.209589958190918

Token 904: '->' (ID: 609)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5374653339385986
    2. ' and' → logprob: -1.9124653339385986
    3. '_' → logprob: -2.4124653339385986
    4. 'and' → logprob: -2.4124653339385986
    5. '[' → logprob: -3.7874653339385986
    6. 'to' → logprob: -4.6624650955200195
    7. ',
' → logprob: -4.7874650955200195
    8. ' to' → logprob: -5.0374650955200195
    9. '<|end|>' → logprob: -5.1624650955200195
    10. ' ,' → logprob: -5.2874650955200195

Token 905: 'cities' (ID: 131097)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.47384876012802124
    2. 'city' → logprob: -1.473848819732666
    3. 'cities' → logprob: -3.348848819732666
    4. ' subset' → logprob: -3.473848819732666
    5. 'last' → logprob: -4.223848819732666
    6. 'market' → logprob: -4.223848819732666
    7. ' city' → logprob: -4.348848819732666
    8. 'sub' → logprob: -4.723848819732666
    9. 'first' → logprob: -4.973848819732666
    10. 'all' → logprob: -4.973848819732666

Token 906: '->' (ID: 609)
  Prédit: '->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.8784723877906799
    2. ',' → logprob: -1.7534723281860352
    3. '_subset' → logprob: -2.128472328186035
    4. ' ->' → logprob: -2.753472328186035
    5. 'subset' → logprob: -2.753472328186035
    6. '...' → logprob: -4.378472328186035
    7. ' and' → logprob: -4.378472328186035
    8. '_' → logprob: -4.378472328186035
    9. '<|end|>' → logprob: -4.378472328186035
    10. 'for' → logprob: -4.503472328186035

Token 907: 'market' (ID: 27236)
  Prédit: 'market'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'market' → logprob: -0.0002666999935172498
    2. ' market' → logprob: -8.875267028808594
    3. 'markets' → logprob: -10.125267028808594
    4. '```' → logprob: -10.500267028808594
    5. '
' → logprob: -10.875267028808594
    6. 'pos' → logprob: -11.625267028808594
    7. 'city' → logprob: -11.875267028808594
    8. '0' → logprob: -12.125267028808594
    9. 'cities' → logprob: -12.500267028808594
    10. '#' → logprob: -12.875267028808594

Token 908: ' for' (ID: 395)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20324784517288208
    2. ':
' → logprob: -3.5782477855682373
    3. ' :' → logprob: -3.8282477855682373
    4. ' continue' → logprob: -3.9532477855682373
    5. ',' → logprob: -4.578248023986816
    6. ')' → logprob: -4.578248023986816
    7. '+' → logprob: -4.703248023986816
    8. ' ' → logprob: -4.953248023986816
    9. '):' → logprob: -4.953248023986816
    10. 'continue' → logprob: -4.953248023986816

Token 909: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.7757623195648193
    2. ' each' → logprob: -1.1507623195648193
    3. ' subset' → logprob: -2.5257623195648193
    4. ' delivery' → logprob: -3.1507623195648193
    5. ' the' → logprob: -3.4007623195648193
    6. 'the' → logprob: -3.5257623195648193
    7. 'subset' → logprob: -4.400762557983398
    8. 'delivery' → logprob: -5.275762557983398
    9. ' all' → logprob: -5.775762557983398
    10. 'all' → logprob: -6.400762557983398

Token 910: ' purchase' (ID: 7314)
  Prédit: ' subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' subset' → logprob: -0.9731547832489014
    2. ' trip' → logprob: -1.4731547832489014
    3. 'subset' → logprob: -2.0981547832489014
    4. ' city' → logprob: -2.4731547832489014
    5. 'trip' → logprob: -2.5981547832489014
    6. ' sub' → logprob: -4.0981550216674805
    7. 'city' → logprob: -4.5981550216674805
    8. 'sub' → logprob: -4.7231550216674805
    9. '```' → logprob: -4.7231550216674805
    10. ' delivery' → logprob: -5.0981550216674805

Token 911: ' set' (ID: 920)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.43523117899894714
    2. ',' → logprob: -2.1852312088012695
    3. ':' → logprob: -2.9352312088012695
    4. '
' → logprob: -3.4352312088012695
    5. ':
' → logprob: -3.6852312088012695
    6. '               ' → logprob: -3.9352312088012695
    7. ',
' → logprob: -4.1852312088012695
    8. '<|end|>' → logprob: -4.3102312088012695
    9. ')' → logprob: -4.6852312088012695
    10. ' for' → logprob: -4.8102312088012695

Token 912: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0234163999557495
    2. ':
' → logprob: -1.5234163999557495
    3. ':' → logprob: -1.7734163999557495
    4. ',' → logprob: -2.148416519165039
    5. '               ' → logprob: -3.648416519165039
    6. ',
' → logprob: -4.023416519165039
    7. '   ' → logprob: -4.273416519165039
    8. '
' → logprob: -4.273416519165039
    9. ' continue' → logprob: -4.648416519165039
    10. '                   ' → logprob: -5.273416519165039

Token 913: ' we' (ID: 581)
  Prédit: ' time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.5252867341041565
    2. 'time' → logprob: -1.6502866744995117
    3. ' continue' → logprob: -2.6502866744995117
    4. ' cost' → logprob: -3.6502866744995117
    5. ' first' → logprob: -4.150286674499512
    6. '           ' → logprob: -4.150286674499512
    7. 'continue' → logprob: -4.150286674499512
    8. ' #' → logprob: -4.275286674499512
    9. '#' → logprob: -4.275286674499512
    10. 'cost' → logprob: -4.775286674499512

Token 914: ' consider' (ID: 3331)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.916132390499115
    2. 'can' → logprob: -1.2911324501037598
    3. 'continue' → logprob: -2.1661324501037598
    4. ' continue' → logprob: -2.9161324501037598
    5. ')' → logprob: -3.7911324501037598
    6. 'should' → logprob: -3.7911324501037598
    7. ' should' → logprob: -3.9161324501037598
    8. 'need' → logprob: -4.16613245010376
    9. 'must' → logprob: -4.29113245010376
    10. ' need' → logprob: -4.54113245010376

Token 915: ' trip' (ID: 8831)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.87511146068573
    2. ' dist' → logprob: -1.37511146068573
    3. ' the' → logprob: -3.0001115798950195
    4. ' all' → logprob: -3.1251115798950195
    5. 'pos' → logprob: -3.5001115798950195
    6. ' subset' → logprob: -3.5001115798950195
    7. ' distances' → logprob: -3.8751115798950195
    8. '   ' → logprob: -4.0001115798950195
    9. 'the' → logprob: -4.1251115798950195
    10. 'all' → logprob: -4.3751115798950195

Token 916: ' as' (ID: 472)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -1.205385446548462
    2. '_time' → logprob: -1.330385446548462
    3. '_cost' → logprob: -2.205385446548462
    4. 'cost' → logprob: -2.455385446548462
    5. '=' → logprob: -2.580385446548462
    6. 'to' → logprob: -3.580385446548462
    7. 'from' → logprob: -4.455385208129883
    8. ' to' → logprob: -4.580385208129883
    9. 'length' → logprob: -4.580385208129883
    10. 's' → logprob: -4.580385208129883

Token 917: ':
' (ID: 734)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5513156652450562
    2. ' pos' → logprob: -2.0513157844543457
    3. ' visiting' → logprob: -3.0513157844543457
    4. 'a' → logprob: -3.1763157844543457
    5. ' going' → logprob: -3.1763157844543457
    6. '(pos' → logprob: -3.3013157844543457
    7. 'market' → logprob: -3.5513157844543457
    8. 'vis' → logprob: -3.6763157844543457
    9. '   ' → logprob: -4.426315784454346
    10. ' a' → logprob: -4.551315784454346

Token 918: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0834713727235794
    2. '               ' → logprob: -3.3334712982177734
    3. '```' → logprob: -4.208471298217773
    4. '#' → logprob: -4.708471298217773
    5. ' #' → logprob: -5.458471298217773
    6. ' next' → logprob: -6.208471298217773
    7. '``' → logprob: -6.583471298217773
    8. '                   ' → logprob: -6.708471298217773
    9. ' pos' → logprob: -6.833471298217773
    10. ' first' → logprob: -6.833471298217773

Token 919: ' #' (ID: 1069)
  Prédit: ' pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.5099772214889526
    2. '"' → logprob: -2.259977340698242
    3. '#' (adapté à ' #') → logprob: -3.009977340698242
    4. ' market' → logprob: -3.134977340698242
    5. 'pos' → logprob: -3.134977340698242
    6. ' #' → logprob: -3.759977340698242
    7. ''' → logprob: -3.759977340698242
    8. '           ' → logprob: -3.884977340698242
    9. ' last' → logprob: -3.884977340698242
    10. '               ' → logprob: -4.009977340698242

Token 920: ' from' (ID: 591)
  Prédit: ' last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' last' → logprob: -1.4041367769241333
    2. '#' → logprob: -1.5291367769241333
    3. 'last' → logprob: -2.1541366577148438
    4. ' #' → logprob: -2.6541366577148438
    5. 'subset' → logprob: -2.6541366577148438
    6. '           ' → logprob: -3.1541366577148438
    7. 'market' → logprob: -3.4041366577148438
    8. ' subset' → logprob: -3.5291366577148438
    9. 'pos' → logprob: -3.9041366577148438
    10. ' market' → logprob: -4.029136657714844

Token 921: ' current' (ID: 2208)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.07067769765853882
    2. ' pos' → logprob: -2.9456777572631836
    3. 'last' → logprob: -4.695677757263184
    4. 'market' → logprob: -5.320677757263184
    5. ' last' → logprob: -6.945677757263184
    6. ' market' → logprob: -7.570677757263184
    7. '```' → logprob: -10.320677757263184
    8. '(pos' → logprob: -10.695677757263184
    9. '0' → logprob: -10.820677757263184
    10. 'position' → logprob: -11.070677757263184

Token 922: ' last' (ID: 2174)
  Prédit: ' last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' last' → logprob: -1.2425278425216675
    2. ' position' → logprob: -1.4925278425216675
    3. 'last' → logprob: -1.8675278425216675
    4. 'position' → logprob: -2.367527961730957
    5. ' city' → logprob: -2.492527961730957
    6. 'pos' → logprob: -2.742527961730957
    7. ' node' → logprob: -3.117527961730957
    8. 'city' → logprob: -4.742527961730957
    9. 'node' → logprob: -4.867527961730957
    10. ' location' → logprob: -5.117527961730957

Token 923: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -2.236684560775757
    2. '[last' → logprob: -2.611684560775757
    3. ' city' → logprob: -2.736684560775757
    4. ' last' → logprob: -2.861684560775757
    5. '_city' → logprob: -2.861684560775757
    6. '```' → logprob: -2.986684560775757
    7. '_position' → logprob: -2.986684560775757
    8. ' position' → logprob: -3.111684560775757
    9. ' ,' → logprob: -3.111684560775757
    10. '_pos' → logprob: -3.236684560775757

Token 924: ' cities' (ID: 15636)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.21659351885318756
    2. 'market' → logprob: -2.5915935039520264
    3. 'pos' → logprob: -2.8415935039520264
    4. '0' → logprob: -3.3415935039520264
    5. ' subset' → logprob: -4.7165937423706055
    6. 'markets' → logprob: -5.2165937423706055
    7. 'the' → logprob: -5.5915937423706055
    8. 'sub' → logprob: -6.2165937423706055
    9. ' market' → logprob: -6.5915937423706055
    10. 'first' → logprob: -6.5915937423706055

Token 925: ' subset' (ID: 58845)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2611110210418701
    2. '[sub' → logprob: -1.2611110210418701
    3. '[last' → logprob: -2.13611102104187
    4. '[first' → logprob: -2.76111102104187
    5. '           ' → logprob: -3.01111102104187
    6. '[i' → logprob: -3.13611102104187
    7. '[next' → logprob: -3.13611102104187
    8. '
' → logprob: -4.136111259460449
    9. ':
' → logprob: -4.636111259460449
    10. '+' → logprob: -4.761111259460449

Token 926: ' in' (ID: 306)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.45849287509918213
    2. '[' → logprob: -1.5834928750991821
    3. '[first' → logprob: -3.7084927558898926
    4. '[last' → logprob: -4.083492755889893
    5. '[sub' → logprob: -4.083492755889893
    6. '```' → logprob: -4.458492755889893
    7. '
' → logprob: -4.583492755889893
    8. '[next' → logprob: -4.583492755889893
    9. '[i' → logprob: -4.708492755889893
    10. ',' → logprob: -4.708492755889893

Token 927: ' any' (ID: 1062)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.496628075838089
    2. 'any' → logprob: -1.1216280460357666
    3. 'order' → logprob: -3.9966280460357666
    4. 'some' → logprob: -4.371628284454346
    5. 'the' → logprob: -4.621628284454346
    6. 'sorted' → logprob: -4.746628284454346
    7. 'all' → logprob: -5.871628284454346
    8. '#' → logprob: -5.996628284454346
    9. '```' → logprob: -6.246628284454346
    10. ' any' → logprob: -6.746628284454346

Token 928: ' order' (ID: 2569)
  Prédit: ' order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' order' → logprob: -0.12163495272397995
    2. ' subset' → logprob: -2.6216349601745605
    3. 'order' → logprob: -4.2466349601745605
    4. 'subset' → logprob: -5.1216349601745605
    5. ' possible' → logprob: -5.2466349601745605
    6. '_subset' → logprob: -5.3716349601745605
    7. '_order' → logprob: -5.9966349601745605
    8. ' way' → logprob: -6.4966349601745605
    9. ' ' → logprob: -6.6216349601745605
    10. '
' → logprob: -6.6216349601745605

Token 929: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07978536933660507
    2. ',' → logprob: -2.9547853469848633
    3. '#' → logprob: -4.954785346984863
    4. '               ' → logprob: -5.954785346984863
    5. '+' → logprob: -6.329785346984863
    6. ' and' → logprob: -6.329785346984863
    7. ',
' → logprob: -6.579785346984863
    8. ' (' → logprob: -6.704785346984863
    9. ' +' → logprob: -6.704785346984863
    10. '...' → logprob: -6.954785346984863

Token 930: ' then' (ID: 1815)
  Prédit: ' then'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' then' → logprob: -0.7387638092041016
    2. '           ' → logprob: -1.6137638092041016
    3. 'then' → logprob: -1.8637638092041016
    4. '#' → logprob: -2.6137638092041016
    5. 'and' → logprob: -4.113763809204102
    6. ' and' → logprob: -4.488763809204102
    7. 'to' → logprob: -4.738763809204102
    8. ' plus' → logprob: -4.863763809204102
    9. ' #' → logprob: -5.113763809204102
    10. '               ' → logprob: -5.113763809204102

Token 931: ' back' (ID: 1602)
  Prédit: 'back'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'back' → logprob: -0.1866954267024994
    2. ' back' → logprob: -2.0616953372955322
    3. 'return' → logprob: -3.8116953372955322
    4. 'go' → logprob: -4.186695575714111
    5. 'from' → logprob: -5.811695575714111
    6. '#' → logprob: -7.061695575714111
    7. 'to' → logprob: -7.561695575714111
    8. ' return' → logprob: -7.686695575714111
    9. ' go' → logprob: -7.936695575714111
    10. 'market' → logprob: -8.686695098876953

Token 932: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.06921275705099106
    2. ' to' → logprob: -3.3192126750946045
    3. '           ' → logprob: -3.5692126750946045
    4. '   ' → logprob: -7.194212913513184
    5. 'last' → logprob: -7.444212913513184
    6. '               ' → logprob: -7.444212913513184
    7. '                   ' → logprob: -8.444212913513184
    8. '
' → logprob: -9.569212913513184
    9. '```' → logprob: -10.069212913513184
    10. '_to' → logprob: -10.194212913513184

Token 933: ' market' (ID: 2910)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012736006639897823
    2. 'market' → logprob: -4.512735843658447
    3. 'pos' → logprob: -7.137735843658447
    4. 'markets' → logprob: -7.762735843658447
    5. ' ' → logprob: -8.012736320495605
    6. 'last' → logprob: -9.512736320495605
    7. ' market' → logprob: -10.887736320495605
    8. ' markets' → logprob: -11.762736320495605
    9. '
' → logprob: -12.262736320495605
    10. '```' → logprob: -12.387736320495605

Token 934: '(' (ID: 7)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016661547124385834
    2. '#' → logprob: -5.016661643981934
    3. ',' → logprob: -5.391661643981934
    4. 'time' → logprob: -6.516661643981934
    5. '               ' → logprob: -7.516661643981934
    6. '
' → logprob: -7.641661643981934
    7. '+' → logprob: -8.016661643981934
    8. '            
' → logprob: -8.016661643981934
    9. '```' → logprob: -8.141661643981934
    10. ',
' → logprob: -8.266661643981934

Token 935: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10834548622369766
    2. 'N' → logprob: -2.7333455085754395
    3. ')' → logprob: -4.1083455085754395
    4. '[N' → logprob: -5.2333455085754395
    5. ' ' → logprob: -5.9833455085754395
    6. '[' → logprob: -6.1083455085754395
    7. '(' → logprob: -6.2333455085754395
    8. '(N' → logprob: -6.4833455085754395
    9. ')
' → logprob: -6.6083455085754395
    10. ' N' → logprob: -6.8583455085754395

Token 936: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.50120609998703
    2. ')' → logprob: -1.0012061595916748
    3. '):
' → logprob: -3.751206159591675
    4. '),' → logprob: -6.626205921173096
    5. ')+' → logprob: -7.751205921173096
    6. '           ' → logprob: -8.251206398010254
    7. '):

' → logprob: -8.501206398010254
    8. ').' → logprob: -8.626206398010254
    9. '):' → logprob: -8.626206398010254
    10. '),
' → logprob: -8.751206398010254

Token 937: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015371197368949652
    2. '            
' → logprob: -8.251537322998047
    3. 'time' → logprob: -8.251537322998047
    4. ',' → logprob: -8.501537322998047
    5. '       ' → logprob: -8.751537322998047
    6. '               ' → logprob: -9.126537322998047
    7. ' time' → logprob: -9.626537322998047
    8. '+' → logprob: -10.001537322998047
    9. '                   ' → logprob: -10.376537322998047
    10. '
' → logprob: -10.501537322998047

Token 938: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0023727966472506523
    2. 'time' → logprob: -7.627372741699219
    3. '               ' → logprob: -7.752372741699219
    4. ' time' → logprob: -8.127372741699219
    5. '+' → logprob: -8.377372741699219
    6. '            
' → logprob: -9.377372741699219
    7. ',' → logprob: -9.502372741699219
    8. '       ' → logprob: -9.752372741699219
    9. '#' (adapté à ' #') → logprob: -9.877372741699219
    10. '            ' → logprob: -10.002372741699219

Token 939: ' We'll' (ID: 46830)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1901918649673462
    2. 'time' → logprob: -2.5651917457580566
    3. ' time' → logprob: -3.3151917457580566
    4. 'cost' → logprob: -4.065191745758057
    5. '#' → logprob: -4.565191745758057
    6. ' cost' → logprob: -4.690191745758057
    7. ' #' → logprob: -4.940191745758057
    8. '+' → logprob: -6.440191745758057
    9. ' total' → logprob: -6.690191745758057
    10. 'total' → logprob: -6.690191745758057

Token 940: ' approximate' (ID: 68753)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'use' → logprob: -1.4563877582550049
    2. 'approx' → logprob: -1.4563877582550049
    3. 'continue' → logprob: -1.5813877582550049
    4. 'estimate' → logprob: -2.081387758255005
    5. 'ass' → logprob: -2.331387758255005
    6. 'consider' → logprob: -3.081387758255005
    7. 'calculate' → logprob: -3.956387758255005
    8. 'implement' → logprob: -5.081387519836426
    9. 'enumer' → logprob: -5.206387519836426
    10. 'import' → logprob: -5.456387519836426

Token 941: ' as' (ID: 472)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31520044803619385
    2. '               ' → logprob: -2.9402003288269043
    3. '                   ' → logprob: -3.0652003288269043
    4. '            ' → logprob: -3.0652003288269043
    5. ' #' → logprob: -3.9402003288269043
    6. ' for' → logprob: -4.065200328826904
    7. ' subset' → logprob: -4.440200328826904
    8. ')' → logprob: -5.065200328826904
    9. '+' → logprob: -5.190200328826904
    10. ' continue' → logprob: -5.190200328826904

Token 942: ':
' (ID: 734)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.03451915457844734
    2. ' dist' → logprob: -3.6595191955566406
    3. '           ' → logprob: -5.909519195556641
    4. 'sum' → logprob: -6.534519195556641
    5. '   ' → logprob: -7.159519195556641
    6. 'pos' → logprob: -7.284519195556641
    7. '               ' → logprob: -7.534519195556641
    8. '0' → logprob: -8.03451919555664
    9. 'max' → logprob: -8.65951919555664
    10. '                   ' → logprob: -8.65951919555664

Token 943: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03338482603430748
    2. '               ' → logprob: -4.283384799957275
    3. '            ' → logprob: -5.033384799957275
    4. ' next' → logprob: -6.033384799957275
    5. ' time' → logprob: -6.158384799957275
    6. ' cost' → logprob: -6.408384799957275
    7. 'time' → logprob: -7.158384799957275
    8. ' ' → logprob: -7.158384799957275
    9. 'next' → logprob: -7.658384799957275
    10. '                   ' → logprob: -7.783384799957275

Token 944: ' #' (ID: 1069)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.7148343920707703
    2. ' time' → logprob: -1.089834451675415
    3. ' cost' → logprob: -3.214834451675415
    4. ' dist' → logprob: -3.339834451675415
    5. 'cost' → logprob: -3.589834451675415
    6. '           ' → logprob: -3.839834451675415
    7. 'dist' → logprob: -4.714834213256836
    8. ' total' → logprob: -5.214834213256836
    9. ' travel' → logprob: -5.339834213256836
    10. 'total' → logprob: -5.714834213256836

Token 945: ' The' (ID: 623)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -1.2433953285217285
    2. 'trip' → logprob: -1.6183953285217285
    3. 'dist' → logprob: -2.1183953285217285
    4. 'cost' → logprob: -2.4933953285217285
    5. 'min' → logprob: -2.6183953285217285
    6. 'travel' → logprob: -2.6183953285217285
    7. 'total' → logprob: -3.1183953285217285
    8. '           ' → logprob: -3.9933953285217285
    9. 'max' → logprob: -4.3683953285217285
    10. ' travel' → logprob: -4.4933953285217285

Token 946: ' shortest' (ID: 70564)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -1.0497324466705322
    2. ' max' → logprob: -1.4247324466705322
    3. 'max' → logprob: -2.7997324466705322
    4. ' dist' → logprob: -3.1747324466705322
    5. 'min' → logprob: -3.2997324466705322
    6. ' #' → logprob: -3.4247324466705322
    7. ' cost' → logprob: -3.5497324466705322
    8. '#' → logprob: -3.7997324466705322
    9. ' subset' → logprob: -3.9247324466705322
    10. ' minimum' → logprob: -4.049732208251953

Token 947: ' route' (ID: 9656)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.1875532865524292
    2. 'trip' → logprob: -2.1875534057617188
    3. '_path' → logprob: -3.4375534057617188
    4. 'time' → logprob: -4.812553405761719
    5. 'distance' → logprob: -5.562553405761719
    6. '_trip' → logprob: -5.562553405761719
    7. 'tour' → logprob: -6.062553405761719
    8. ' path' → logprob: -6.187553405761719
    9. 'route' → logprob: -6.437553405761719
    10. 'paths' → logprob: -6.812553405761719

Token 948: ' visiting' (ID: 18798)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2672533988952637
    2. ' =' → logprob: -1.7672533988952637
    3. 'cost' → logprob: -2.0172533988952637
    4. 'length' → logprob: -2.6422533988952637
    5. '_length' → logprob: -2.7672533988952637
    6. 'distance' → logprob: -2.7672533988952637
    7. 'from' → logprob: -3.5172533988952637
    8. '_cost' → logprob: -3.6422533988952637
    9. '_distance' → logprob: -3.7672533988952637
    10. '           ' → logprob: -3.7672533988952637

Token 949: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.47312575578689575
    2. 'subset' → logprob: -1.973125696182251
    3. 'all' → logprob: -2.098125696182251
    4. ' subset' → logprob: -2.473125696182251
    5. ' the' → logprob: -4.22312593460083
    6. 'the' → logprob: -4.34812593460083
    7. 'sub' → logprob: -6.72312593460083
    8. ' cities' → logprob: -7.97312593460083
    9. ' last' → logprob: -8.098125457763672
    10. ' each' → logprob: -8.098125457763672

Token 950: ' cities' (ID: 15636)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.10356228798627853
    2. 'cities' → logprob: -2.478562355041504
    3. 'nodes' → logprob: -4.603562355041504
    4. ' subset' → logprob: -6.228562355041504
    5. 'points' → logprob: -6.728562355041504
    6. ' cities' → logprob: -7.478562355041504
    7. '#' → logprob: -8.103562355041504
    8. 'selected' → logprob: -8.978562355041504
    9. ' nodes' → logprob: -9.478562355041504
    10. 'remaining' → logprob: -9.603562355041504

Token 951: ' in' (ID: 306)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.8514596223831177
    2. ' is' → logprob: -1.8514596223831177
    3. ' in' → logprob: -2.101459503173828
    4. '#' → logprob: -2.726459503173828
    5. '=' → logprob: -2.851459503173828
    6. ' =' → logprob: -2.976459503173828
    7. ' and' → logprob: -3.101459503173828
    8. ',' → logprob: -3.351459503173828
    9. ' subset' → logprob: -3.351459503173828
    10. 'subset' → logprob: -3.351459503173828

Token 952: ' subset' (ID: 58845)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -4.3226136767771095e-05
    2. ' subset' → logprob: -10.375042915344238
    3. 'the' → logprob: -12.000042915344238
    4. '```' → logprob: -12.625042915344238
    5. '
' → logprob: -14.375042915344238
    6. '#' → logprob: -15.000042915344238
    7. '`' → logprob: -15.125042915344238
    8. 'substring' → logprob: -15.125042915344238
    9. 'sub' → logprob: -15.250042915344238
    10. '_subset' → logprob: -15.375042915344238

Token 953: ' starting' (ID: 8601)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9635011553764343
    2. ',' → logprob: -2.463501214981079
    3. ' is' → logprob: -2.463501214981079
    4. ' and' → logprob: -2.838501214981079
    5. ' =' → logprob: -3.088501214981079
    6. ' in' → logprob: -3.213501214981079
    7. '#' → logprob: -3.338501214981079
    8. ' (' → logprob: -3.588501214981079
    9. ' #' → logprob: -3.588501214981079
    10. '```' → logprob: -3.963501214981079

Token 954: ' at' (ID: 540)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5691765546798706
    2. 'and' → logprob: -1.4441765546798706
    3. 'at' → logprob: -1.9441765546798706
    4. 'point' → logprob: -3.31917667388916
    5. ' at' → logprob: -4.81917667388916
    6. 'points' → logprob: -6.06917667388916
    7. ' and' → logprob: -6.19417667388916
    8. 'with' → logprob: -6.44417667388916
    9. ' from' → logprob: -7.19417667388916
    10. '=' → logprob: -7.31917667388916

Token 955: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.2874646484851837
    2. 'last' → logprob: -1.4124646186828613
    3. ' pos' → logprob: -6.037464618682861
    4. ' last' → logprob: -6.662464618682861
    5. 'sub' → logprob: -6.787464618682861
    6. '0' → logprob: -7.287464618682861
    7. 'subset' → logprob: -7.287464618682861
    8. '```' → logprob: -9.91246509552002
    9. ' sub' → logprob: -11.16246509552002
    10. 'current' → logprob: -11.28746509552002

Token 956: '[last' (ID: 126100)
  Prédit: '[last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[last' → logprob: -0.013810389675199986
    2. '[' → logprob: -5.263810157775879
    3. '[sub' → logprob: -5.388810157775879
    4. 'last' → logprob: -6.013810157775879
    5. '0' → logprob: -7.763810157775879
    6. 'sub' → logprob: -8.263810157775879
    7. '(last' → logprob: -8.388810157775879
    8. '```' → logprob: -8.888810157775879
    9. '
' → logprob: -9.638810157775879
    10. '[
' → logprob: -9.763810157775879

Token 957: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08602457493543625
    2. ' and' → logprob: -3.586024522781372
    3. '],' → logprob: -3.961024522781372
    4. '][' → logprob: -4.461024761199951
    5. 'and' → logprob: -4.586024761199951
    6. ',' → logprob: -5.211024761199951
    7. ')' → logprob: -5.711024761199951
    8. ']:
' → logprob: -6.836024761199951
    9. ' ]' → logprob: -7.461024761199951
    10. '[' → logprob: -7.461024761199951

Token 958: ' ending' (ID: 22013)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13738039135932922
    2. '#' → logprob: -2.512380361557007
    3. ' #' → logprob: -4.012380599975586
    4. ' and' → logprob: -4.512380599975586
    5. 'and' → logprob: -5.637380599975586
    6. ' then' → logprob: -6.012380599975586
    7. '               ' → logprob: -6.137380599975586
    8. '   ' → logprob: -6.387380599975586
    9. '            ' → logprob: -6.762380599975586
    10. 'min' → logprob: -6.762380599975586

Token 959: ' at' (ID: 540)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.04419848695397377
    2. ' at' → logprob: -3.169198513031006
    3. '=' → logprob: -7.044198513031006
    4. 'in' → logprob: -9.044198036193848
    5. '#' → logprob: -9.544198036193848
    6. '```' → logprob: -10.669198036193848
    7. 'and' → logprob: -10.919198036193848
    8. '_at' → logprob: -11.169198036193848
    9. '   ' → logprob: -11.544198036193848
    10. ' =' → logprob: -11.544198036193848

Token 960: ' market' (ID: 2910)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5996532440185547
    2. 'pos' → logprob: -0.8496532440185547
    3. ' pos' → logprob: -4.724653244018555
    4. '(' → logprob: -4.724653244018555
    5. 'market' → logprob: -5.474653244018555
    6. ' ' → logprob: -7.099653244018555
    7. ' (' → logprob: -7.974653244018555
    8. '(pos' → logprob: -8.849653244018555
    9. ' market' → logprob: -8.974653244018555
    10. '```' → logprob: -11.099653244018555

Token 961: '(' (ID: 7)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.44089600443840027
    2. 'import' → logprob: -1.9408960342407227
    3. 'from' → logprob: -2.6908960342407227
    4. '           ' → logprob: -3.0658960342407227
    5. '```' → logprob: -4.440896034240723
    6. ' #' → logprob: -4.565896034240723
    7. '...' → logprob: -4.690896034240723
    8. '<|end|>' → logprob: -4.940896034240723
    9. ' from' → logprob: -5.190896034240723
    10. ',' → logprob: -5.315896034240723

Token 962: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024145382922142744
    2. ')' → logprob: -6.752414703369141
    3. '[' → logprob: -7.127414703369141
    4. '1' → logprob: -8.25241470336914
    5. ')[' → logprob: -9.75241470336914
    6. ' ' → logprob: -10.25241470336914
    7. '),' → logprob: -10.62741470336914
    8. '```' → logprob: -10.87741470336914
    9. ',' → logprob: -11.37741470336914
    10. '(' → logprob: -11.62741470336914

Token 963: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3108149468898773
    2. '):
' → logprob: -2.31081485748291
    3. '):' → logprob: -2.43581485748291
    4. ')
' → logprob: -2.93581485748291
    5. ',' → logprob: -4.81081485748291
    6. '),' → logprob: -5.06081485748291
    7. '):

' → logprob: -5.68581485748291
    8. '#' → logprob: -6.06081485748291
    9. ').' → logprob: -6.18581485748291
    10. '           ' → logprob: -6.68581485748291

Token 964: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02019345574080944
    2. 'time' → logprob: -5.270193576812744
    3. '#' → logprob: -5.895193576812744
    4. '+' → logprob: -6.020193576812744
    5. ',' → logprob: -7.020193576812744
    6. 'distance' → logprob: -7.145193576812744
    7. 'cost' → logprob: -7.270193576812744
    8. 'dist' → logprob: -7.270193576812744
    9. ' time' → logprob: -7.395193576812744
    10. '            
' → logprob: -7.395193576812744

Token 965: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23575319349765778
    2. '#' (adapté à ' #') → logprob: -2.235753297805786
    3. ' #' → logprob: -3.485753297805786
    4. 'dp' → logprob: -4.735753059387207
    5. 'min' → logprob: -5.110753059387207
    6. ' min' → logprob: -5.235753059387207
    7. 'import' → logprob: -5.235753059387207
    8. 'from' → logprob: -5.360753059387207
    9. 'dist' → logprob: -5.485753059387207
    10. 'd' → logprob: -5.610753059387207

Token 966: ' N' (ID: 478)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.101892851293087
    2. 'dp' → logprob: -3.6018929481506348
    3. '#' → logprob: -3.9768929481506348
    4. 'from' → logprob: -4.226892948150635
    5. 'import' → logprob: -5.226892948150635
    6. ' from' → logprob: -5.351892948150635
    7. 'next' → logprob: -5.726892948150635
    8. ' #' → logprob: -5.726892948150635
    9. ' dp' → logprob: -6.226892948150635
    10. '   ' → logprob: -6.476892948150635

Token 967: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1304997205734253
    2. 'ext' → logprob: -1.2554997205734253
    3. '#' → logprob: -2.005499839782715
    4. '+' → logprob: -2.130499839782715
    5. 'from' → logprob: -3.630499839782715
    6. 'ow' → logprob: -4.130499839782715
    7. ' =' → logprob: -4.505499839782715
    8. 'e' → logprob: -4.880499839782715
    9. '```' → logprob: -4.880499839782715
    10. 'for' → logprob: -5.005499839782715

Token 968: ' small' (ID: 3291)
  Prédit: 'small'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'small' → logprob: -0.015839500352740288
    2. ' small' → logprob: -4.765839576721191
    3. '<=' → logprob: -6.140839576721191
    4. '15' → logprob: -6.890839576721191
    5. 'up' → logprob: -7.015839576721191
    6. '10' → logprob: -7.515839576721191
    7. '
' → logprob: -7.640839576721191
    8. '3' → logprob: -7.890839576721191
    9. '6' → logprob: -8.015839576721191
    10. '5' → logprob: -8.515839576721191

Token 969: ';' (ID: 26)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0905897244811058
    2. '#' → logprob: -3.215589761734009
    3. 'from' → logprob: -3.965589761734009
    4. 'import' → logprob: -4.96558952331543
    5. 'if' → logprob: -5.09058952331543
    6. 'dp' → logprob: -5.84058952331543
    7. ' if' → logprob: -6.21558952331543
    8. '+' → logprob: -6.21558952331543
    9. ' from' → logprob: -6.46558952331543
    10. '   ' → logprob: -7.34058952331543

Token 970: ' do' (ID: 621)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.30618762969970703
    2. 'import' → logprob: -1.556187629699707
    3. '           ' → logprob: -3.681187629699707
    4. '#' → logprob: -3.806187629699707
    5. 'min' → logprob: -6.306187629699707
    6. ' from' → logprob: -7.306187629699707
    7. '   ' → logprob: -7.431187629699707
    8. '
' → logprob: -7.681187629699707
    9. 'cities' → logprob: -8.431187629699707
    10. 'best' → logprob: -8.556187629699707

Token 971: ' tsp' (ID: 68800)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.014111789874732494
    2. 'import' → logprob: -4.7641119956970215
    3. '```' → logprob: -5.6391119956970215
    4. ' from' → logprob: -6.6391119956970215
    5. '
' → logprob: -8.389111518859863
    6. '``' → logprob: -8.889111518859863
    7. 'n' → logprob: -9.764111518859863
    8. 'dp' → logprob: -10.389111518859863
    9. 'for' → logprob: -10.514111518859863
    10. '   ' → logprob: -11.139111518859863

Token 972: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3260709047317505
    2. 'import' → logprob: -2.326070785522461
    3. 'from' → logprob: -3.326070785522461
    4. 'dp' → logprob: -3.576070785522461
    5. '   ' → logprob: -3.826070785522461
    6. '```' → logprob: -4.326070785522461
    7. '       ' → logprob: -4.951070785522461
    8. ' from' → logprob: -4.951070785522461
    9. 'if' → logprob: -5.076070785522461
    10. '#' → logprob: -5.201070785522461

Token 973: ' subset' (ID: 58845)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.007771182339638472
    2. 'len' → logprob: -5.757771015167236
    3. ' subset' → logprob: -6.007771015167236
    4. 'the' → logprob: -7.007771015167236
    5. '```' → logprob: -7.382771015167236
    6. 'cities' → logprob: -9.632771492004395
    7. 'each' → logprob: -9.757771492004395
    8. 'all' → logprob: -10.007771492004395
    9. '_subset' → logprob: -10.007771492004395
    10. '``' → logprob: -10.382771492004395

Token 974: ' +' (ID: 659)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.44071441888809204
    2. 'from' → logprob: -2.8157143592834473
    3. ' from' → logprob: -2.8157143592834473
    4. ' tsp' → logprob: -3.3157143592834473
    5. 'dp' → logprob: -3.4407143592834473
    6. 'import' → logprob: -3.6907143592834473
    7. 'mask' → logprob: -3.8157143592834473
    8. '```' → logprob: -4.065714359283447
    9. ' if' → logprob: -4.190714359283447
    10. '   ' → logprob: -4.565714359283447

Token 975: ' start' (ID: 1604)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07048028707504272
    2. 'market' → logprob: -3.4454803466796875
    3. '0' → logprob: -3.5704803466796875
    4. '[(' → logprob: -5.3204803466796875
    5. '1' → logprob: -6.6954803466796875
    6. '(' → logprob: -6.8204803466796875
    7. '{' → logprob: -8.195480346679688
    8. ' [' → logprob: -8.320480346679688
    9. ' market' → logprob: -9.945480346679688
    10. ' ' → logprob: -10.320480346679688

Token 976: ',last' (ID: 184134)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4651273787021637
    2. '+' → logprob: -2.590127468109131
    3. ',' → logprob: -3.465127468109131
    4. '_mask' → logprob: -3.590127468109131
    5. '```' → logprob: -3.715127468109131
    6. ' +' → logprob: -3.840127468109131
    7. '
' → logprob: -4.215127468109131
    8. '            
' → logprob: -4.215127468109131
    9. '_subset' → logprob: -4.465127468109131
    10. '_' → logprob: -4.465127468109131

Token 977: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5411787629127502
    2. ' _' → logprob: -2.7911787033081055
    3. '   ' → logprob: -3.0411787033081055
    4. '```' → logprob: -3.1661787033081055
    5. ' (' → logprob: -3.5411787033081055
    6. ')' → logprob: -3.5411787033081055
    7. ',' → logprob: -4.0411787033081055
    8. '
' → logprob: -4.2911787033081055
    9. '_' → logprob: -4.4161787033081055
    10. '       ' → logprob: -4.5411787033081055

Token 978: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07457437366247177
    2. '   ' → logprob: -3.6995744705200195
    3. ' bit' → logprob: -4.5745744705200195
    4. '            ' → logprob: -5.3245744705200195
    5. '       ' → logprob: -5.5745744705200195
    6. '            
' → logprob: -5.9495744705200195
    7. ')' → logprob: -6.1995744705200195
    8. ' ' → logprob: -6.3245744705200195
    9. ' 
' → logprob: -6.3245744705200195
    10. ' if' → logprob: -6.4495744705200195

Token 979: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0476170778274536
    2. 'from' → logprob: -1.9226170778274536
    3. 'import' → logprob: -2.047616958618164
    4. ' from' → logprob: -2.172616958618164
    5. 'dp' → logprob: -3.297616958618164
    6. ' import' → logprob: -3.672616958618164
    7. ' dp' → logprob: -3.797616958618164
    8. '   ' → logprob: -3.797616958618164
    9. ' bit' → logprob: -4.047616958618164
    10. ' next' → logprob: -4.172616958618164

Token 980: ' But' (ID: 3072)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1973937749862671
    2. 'from' → logprob: -2.5723938941955566
    3. 'import' → logprob: -3.3223938941955566
    4. 'if' → logprob: -3.8223938941955566
    5. 'dp' → logprob: -3.8223938941955566
    6. 'subset' → logprob: -5.072393894195557
    7. 'mask' → logprob: -6.072393894195557
    8. 'def' → logprob: -6.072393894195557
    9. '   ' → logprob: -6.197393894195557
    10. 't' → logprob: -6.197393894195557

Token 981: ' number' (ID: 2086)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.1138211488723755
    2. 'if' → logprob: -1.3638211488723755
    3. '           ' → logprob: -1.8638211488723755
    4. '#' → logprob: -2.613821029663086
    5. 'from' → logprob: -2.613821029663086
    6. 'subset' → logprob: -3.113821029663086
    7. ' if' → logprob: -3.238821029663086
    8. 'continue' → logprob: -4.238821029663086
    9. ' from' → logprob: -5.363821029663086
    10. ' subset' → logprob: -5.738821029663086

Token 982: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1098847389221191
    2. ' =' → logprob: -2.484884738922119
    3. '           ' → logprob: -2.609884738922119
    4. 'for' → logprob: -2.859884738922119
    5. '+' → logprob: -2.984884738922119
    6. 'import' → logprob: -2.984884738922119
    7. 'of' → logprob: -3.109884738922119
    8. ')' → logprob: -3.109884738922119
    9. ' of' → logprob: -3.984884738922119
    10. '#' → logprob: -4.109884738922119

Token 983: ' subsets' (ID: 165377)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.058806225657463074
    2. 'cities' → logprob: -3.0588061809539795
    3. ' subset' → logprob: -6.183806419372559
    4. 'tokens' → logprob: -6.183806419372559
    5. 'sub' → logprob: -6.433806419372559
    6. 'bits' → logprob: -7.183806419372559
    7. '#' → logprob: -7.808806419372559
    8. '
' → logprob: -7.808806419372559
    9. 'nodes' → logprob: -7.808806419372559
    10. ')' → logprob: -8.308806419372559

Token 984: ' and' (ID: 326)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.816430926322937
    2. ':' → logprob: -2.0664310455322266
    3. '
' → logprob: -2.0664310455322266
    4. ')' → logprob: -2.8164310455322266
    5. ' {' → logprob: -2.8164310455322266
    6. '...' → logprob: -2.9414310455322266
    7. '<|end|>' → logprob: -3.3164310455322266
    8. 'import' → logprob: -3.5664310455322266
    9. ' :' → logprob: -3.5664310455322266
    10. ' continues' → logprob: -3.5664310455322266

Token 985: ' tsp' (ID: 68800)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.16029754281044006
    2. 'cities' → logprob: -3.4102976322174072
    3. 'N' → logprob: -4.035297393798828
    4. 'size' → logprob: -4.035297393798828
    5. 'sub' → logprob: -4.035297393798828
    6. ' subset' → logprob: -4.535297393798828
    7. 'dp' → logprob: -4.910297393798828
    8. 'len' → logprob: -4.910297393798828
    9. 'their' → logprob: -5.035297393798828
    10. 'last' → logprob: -5.285297393798828

Token 986: ' is' (ID: 382)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0319325923919678
    2. ' continue' → logprob: -1.7819325923919678
    3. 'import' → logprob: -2.9069325923919678
    4. ' if' → logprob: -3.0319325923919678
    5. ':' → logprob: -3.4069325923919678
    6. ')' → logprob: -3.4069325923919678
    7. ' #' → logprob: -3.6569325923919678
    8. '#' → logprob: -3.6569325923919678
    9. 'continue' → logprob: -3.7819325923919678
    10. '...' → logprob: -3.9069325923919678

Token 987: ' heavy' (ID: 12914)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2238249778747559
    2. ' too' → logprob: -1.9738249778747559
    3. 'too' → logprob: -2.098824977874756
    4. ' ' → logprob: -2.098824977874756
    5. ')' → logprob: -3.223824977874756
    6. '>' → logprob: -3.723824977874756
    7. '...' → logprob: -3.848824977874756
    8. '
' → logprob: -3.973824977874756
    9. '```' → logprob: -4.098824977874756
    10. ' next' → logprob: -4.223824977874756

Token 988: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030372023582458496
    2. ' if' → logprob: -4.780372142791748
    3. ' continue' → logprob: -5.405372142791748
    4. 'continue' → logprob: -5.530372142791748
    5. '...' → logprob: -6.405372142791748
    6. '            ' → logprob: -6.905372142791748
    7. '#' → logprob: -6.905372142791748
    8. 'if' → logprob: -7.030372142791748
    9. 'import' → logprob: -7.030372142791748
    10. 'dp' → logprob: -7.280372142791748

Token 989: ' so' (ID: 813)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7810807824134827
    2. ' continue' → logprob: -1.031080722808838
    3. 'continue' → logprob: -2.781080722808838
    4. '            ' → logprob: -2.906080722808838
    5. '#' → logprob: -3.531080722808838
    6. ' if' → logprob: -5.281080722808838
    7. '...' → logprob: -5.281080722808838
    8. ' #' → logprob: -5.406080722808838
    9. '               ' → logprob: -5.781080722808838
    10. '       ' → logprob: -6.031080722808838

Token 990: ' we' (ID: 581)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6514374017715454
    2. 'continue' → logprob: -0.9014374017715454
    3. '#' → logprob: -2.901437282562256
    4. 'import' → logprob: -5.026437282562256
    5. ' continue' → logprob: -5.151437282562256
    6. 'dp' → logprob: -6.651437282562256
    7. 'from' → logprob: -6.901437282562256
    8. '   ' → logprob: -7.401437282562256
    9. 'break' → logprob: -7.526437282562256
    10. '       ' → logprob: -8.026437759399414

Token 991: ' approximate' (ID: 68753)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.21873517334461212
    2. ' continue' → logprob: -2.2187352180480957
    3. 'import' → logprob: -2.9687352180480957
    4. ' will' → logprob: -5.343735218048096
    5. 'break' → logprob: -5.343735218048096
    6. '```' → logprob: -5.593735218048096
    7. 'use' → logprob: -5.843735218048096
    8. ' can' → logprob: -5.968735218048096
    9. ''ll' → logprob: -5.968735218048096
    10. '...' → logprob: -6.093735218048096

Token 992: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029503412544727325
    2. ' time' → logprob: -5.529503345489502
    3. 'time' → logprob: -5.654503345489502
    4. 'distance' → logprob: -5.904503345489502
    5. '            
' → logprob: -6.029503345489502
    6. 'dist' → logprob: -6.154503345489502
    7. ' dist' → logprob: -6.654503345489502
    8. 'cost' → logprob: -6.654503345489502
    9. '#' → logprob: -6.904503345489502
    10. ' cost' → logprob: -6.904503345489502

Token 993: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008672603406012058
    2. '               ' → logprob: -5.508672714233398
    3. '            ' → logprob: -6.758672714233398
    4. ' code' → logprob: -7.633672714233398
    5. ' continue' → logprob: -8.133672714233398
    6. ' next' → logprob: -8.258672714233398
    7. ' if' → logprob: -8.383672714233398
    8. '+' → logprob: -8.633672714233398
    9. ' time' → logprob: -8.758672714233398
    10. '                   ' → logprob: -8.758672714233398

Token 994: ' #' (ID: 1069)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -1.7333341836929321
    2. 'time' → logprob: -2.1083340644836426
    3. ' time' → logprob: -2.7333340644836426
    4. '           ' → logprob: -2.9833340644836426
    5. 'cost' → logprob: -3.2333340644836426
    6. ' dist' → logprob: -3.3583340644836426
    7. ')' → logprob: -3.3583340644836426
    8. 'min' → logprob: -3.3583340644836426
    9. '+' → logprob: -3.3583340644836426
    10. ' cost' → logprob: -3.7333340644836426

Token 995: ' time' (ID: 1058)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0996571779251099
    2. ' min' → logprob: -1.8496571779251099
    3. '#' → logprob: -2.0996570587158203
    4. ' #' → logprob: -2.0996570587158203
    5. ' dist' → logprob: -2.7246570587158203
    6. 'dist' → logprob: -3.9746570587158203
    7. 'min' → logprob: -4.34965705871582
    8. ' d' → logprob: -4.34965705871582
    9. ' max' → logprob: -4.34965705871582
    10. 'd' → logprob: -4.34965705871582

Token 996: ' =' (ID: 314)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.0726296678185463
    2. 'cost' → logprob: -3.322629690170288
    3. '_needed' → logprob: -4.072629451751709
    4. ' =' → logprob: -4.822629451751709
    5. '=' → logprob: -6.072629451751709
    6. '_to' → logprob: -6.447629451751709
    7. '_' → logprob: -6.947629451751709
    8. '_required' → logprob: -7.197629451751709
    9. '_sum' → logprob: -7.322629451751709
    10. '_need' → logprob: -7.822629451751709

Token 997: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0038782195188105106
    2. 'sum' → logprob: -6.503878116607666
    3. 'max' → logprob: -6.503878116607666
    4. 'min' → logprob: -7.753878116607666
    5. ' dist' → logprob: -8.253878593444824
    6. 'pos' → logprob: -9.628878593444824
    7. 'dp' → logprob: -10.128878593444824
    8. '(dist' → logprob: -10.378878593444824
    9. '0' → logprob: -10.878878593444824
    10. '+' → logprob: -11.878878593444824

Token 998: '(last' (ID: 39599)
  Prédit: '_map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.0003266447747591883
    2. '[last' → logprob: -8.375327110290527
    3. '(last' → logprob: -9.625327110290527
    4. 'last' → logprob: -11.375327110290527
    5. '[pos' → logprob: -12.375327110290527
    6. 'Map' → logprob: -12.750327110290527
    7. '   ' → logprob: -13.250327110290527
    8. 'map' → logprob: -13.875327110290527
    9. 's' → logprob: -14.125327110290527
    10. '(pos' → logprob: -14.125327110290527

Token 999: ',c' (ID: 22261)
  Prédit: '[last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[last' → logprob: -0.12822672724723816
    2. ')[' → logprob: -2.8782267570495605
    3. '][' → logprob: -3.2532267570495605
    4. ')' → logprob: -4.1282267570495605
    5. ')][' → logprob: -6.0032267570495605
    6. 'last' → logprob: -6.2532267570495605
    7. '_map' → logprob: -6.7532267570495605
    8. ')+' → logprob: -7.3782267570495605
    9. ',last' → logprob: -7.6282267570495605
    10. '[' → logprob: -7.6282267570495605

Token 1000: 'ities' (ID: 1629)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.9057106375694275
    2. '[' → logprob: -1.9057106971740723
    3. 'subset' → logprob: -2.2807106971740723
    4. 'ities' → logprob: -2.5307106971740723
    5. 'ity' → logprob: -2.6557106971740723
    6. '[last' → logprob: -3.2807106971740723
    7. 'urrent' → logprob: -3.4057106971740723
    8. 'ur' → logprob: -3.6557106971740723
    9. 'ont' → logprob: -3.7807106971740723
    10. 'ost' → logprob: -3.9057106971740723

Token 1001: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9039509296417236
    2. '[sub' → logprob: -1.1539509296417236
    3. '[last' → logprob: -1.7789509296417236
    4. '[i' → logprob: -2.7789509296417236
    5. ')' → logprob: -4.0289506912231445
    6. '[u' → logprob: -4.2789506912231445
    7. ',' → logprob: -5.9039506912231445
    8. '[s' → logprob: -6.1539506912231445
    9. '[first' → logprob: -6.2789506912231445
    10. ')+' → logprob: -6.2789506912231445

Token 1002: ')+' (ID: 16161)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4087608754634857
    2. '[' → logprob: -1.533760905265808
    3. ')+' → logprob: -2.7837607860565186
    4. 's' → logprob: -4.658761024475098
    5. '[last' → logprob: -4.908761024475098
    6. '[sub' → logprob: -4.908761024475098
    7. ']' → logprob: -5.033761024475098
    8. '[s' → logprob: -5.283761024475098
    9. ')
' → logprob: -5.908761024475098
    10. '[u' → logprob: -6.033761024475098

Token 1003: 'sum' (ID: 12298)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.04382137209177017
    2. 'sum' → logprob: -3.793821334838867
    3. ' dist' → logprob: -4.668821334838867
    4. 'min' → logprob: -4.793821334838867
    5. 'max' → logprob: -6.793821334838867
    6. ' sum' → logprob: -7.918821334838867
    7. '(dist' → logprob: -7.918821334838867
    8. '+' → logprob: -8.168821334838867
    9. ' min' → logprob: -8.918821334838867
    10. '0' → logprob: -9.793821334838867

Token 1004: ' dist' (ID: 3601)
  Prédit: '(dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.10957210510969162
    2. 'dist' → logprob: -3.734572172164917
    3. '(abs' → logprob: -3.734572172164917
    4. '([' → logprob: -3.859572172164917
    5. '((' → logprob: -4.234571933746338
    6. '(' → logprob: -5.234571933746338
    7. '(
' → logprob: -5.484571933746338
    8. '(sub' → logprob: -5.859571933746338
    9. '_of' → logprob: -5.984571933746338
    10. '_dist' → logprob: -6.609571933746338

Token 1005: ' between' (ID: 2870)
  Prédit: '(sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sub' → logprob: -1.023636817932129
    2. '(un' → logprob: -2.273636817932129
    3. '[' → logprob: -2.773636817932129
    4. 's' → logprob: -2.898636817932129
    5. '[i' → logprob: -2.898636817932129
    6. 'ances' → logprob: -3.023636817932129
    7. '(last' → logprob: -3.148636817932129
    8. 'subset' → logprob: -3.148636817932129
    9. 'ance' → logprob: -3.273636817932129
    10. '[last' → logprob: -3.523636817932129

Token 1006: ' cities' (ID: 15636)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.3016236126422882
    2. 'i' → logprob: -2.301623582839966
    3. 'cities' → logprob: -3.051623582839966
    4. 'last' → logprob: -3.676623582839966
    5. 'sub' → logprob: -4.176623821258545
    6. '[i' → logprob: -4.426623821258545
    7. 'city' → logprob: -4.801623821258545
    8. 'j' → logprob: -5.051623821258545
    9. '[j' → logprob: -5.551623821258545
    10. 'all' → logprob: -5.676623821258545

Token 1007: ' in' (ID: 306)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5446861386299133
    2. '           ' → logprob: -1.6696860790252686
    3. ' +' → logprob: -1.9196860790252686
    4. ')+' → logprob: -4.794686317443848
    5. ')' → logprob: -4.919686317443848
    6. ']+' → logprob: -5.169686317443848
    7. ' +=' → logprob: -5.294686317443848
    8. '+=' → logprob: -5.669686317443848
    9. ' subset' → logprob: -5.669686317443848
    10. '            ' → logprob: -5.794686317443848

Token 1008: ' any' (ID: 1062)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.05416649207472801
    2. 'range' → logprob: -3.054166555404663
    3. 'sorted' → logprob: -6.304166316986084
    4. '
' → logprob: -7.179166316986084
    5. '[' → logprob: -7.304166316986084
    6. ']' → logprob: -7.804166316986084
    7. ')' → logprob: -8.054166793823242
    8. 'sub' → logprob: -8.179166793823242
    9. 'cities' → logprob: -8.429166793823242
    10. '[]' → logprob: -8.554166793823242

Token 1009: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.45136788487434387
    2. 'subset' → logprob: -2.0763678550720215
    3. ' order' → logprob: -3.0763678550720215
    4. '_order' → logprob: -3.0763678550720215
    5. '_subset' → logprob: -3.5763678550720215
    6. ' subset' → logprob: -3.8263678550720215
    7. ']' → logprob: -3.9513678550720215
    8. '[' → logprob: -4.0763678550720215
    9. '1' → logprob: -4.3263678550720215
    10. '_' → logprob: -5.2013678550720215

Token 1010: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8619804382324219
    2. '           ' → logprob: -1.9869804382324219
    3. ')' → logprob: -2.111980438232422
    4. '            ' → logprob: -2.361980438232422
    5. ' +' → logprob: -3.236980438232422
    6. '[' → logprob: -3.861980438232422
    7. '<|end|>' → logprob: -3.861980438232422
    8. ' ' → logprob: -3.986980438232422
    9. '...' → logprob: -4.361980438232422
    10. '<|end|>' → logprob: -4.986980438232422

Token 1011: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.09778742492198944
    2. '0' → logprob: -3.472787380218506
    3. 'pos' → logprob: -4.347787380218506
    4. 'min' → logprob: -4.597787380218506
    5. 'sum' → logprob: -4.847787380218506
    6. 'subset' → logprob: -4.847787380218506
    7. ' dist' → logprob: -4.972787380218506
    8. 'last' → logprob: -5.222787380218506
    9. '+' → logprob: -6.097787380218506
    10. 'dp' → logprob: -6.472787380218506

Token 1012: '(last' (ID: 39599)
  Prédit: '(sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sub' → logprob: -0.5294474363327026
    2. '(last' → logprob: -1.4044474363327026
    3. '(' → logprob: -2.279447555541992
    4. '[' → logprob: -4.154447555541992
    5. '0' → logprob: -4.779447555541992
    6. 's' → logprob: -4.904447555541992
    7. '[last' → logprob: -5.029447555541992
    8. 'last' → logprob: -5.404447555541992
    9. '(un' → logprob: -5.654447555541992
    10. '(s' → logprob: -5.904447555541992

Token 1013: ' city' (ID: 5030)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.48083192110061646
    2. ',last' → logprob: -1.3558318614959717
    3. ',c' → logprob: -2.7308318614959717
    4. ')' → logprob: -4.605832099914551
    5. '[' → logprob: -4.730832099914551
    6. ',[' → logprob: -5.730832099914551
    7. ',next' → logprob: -5.730832099914551
    8. ',n' → logprob: -5.730832099914551
    9. ')+' → logprob: -5.730832099914551
    10. ',u' → logprob: -5.855832099914551

Token 1014: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.48447132110595703
    2. ')' → logprob: -1.859471321105957
    3. ')+' → logprob: -2.734471321105957
    4. 's' → logprob: -2.984471321105957
    5. ')_' → logprob: -4.359471321105957
    6. ']+' → logprob: -4.359471321105957
    7. '_subset' → logprob: -4.484471321105957
    8. '[' → logprob: -4.859471321105957
    9. '```' → logprob: -4.984471321105957
    10. ']' → logprob: -5.109471321105957

Token 1015: 'market' (ID: 27236)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02163885533809662
    2. ' ' → logprob: -4.021638870239258
    3. 'market' → logprob: -6.146638870239258
    4. ')' → logprob: -7.271638870239258
    5. ' market' → logprob: -8.396638870239258
    6. '`' → logprob: -9.271638870239258
    7. 'markets' → logprob: -9.521638870239258
    8. '```' → logprob: -9.646638870239258
    9. ' ' → logprob: -10.271638870239258
    10. ' markets' → logprob: -10.521638870239258

Token 1016: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05505390837788582
    2. ')+' → logprob: -3.555053949356079
    3. ')
' → logprob: -4.4300537109375
    4. '])' → logprob: -5.5550537109375
    5. '[' → logprob: -6.0550537109375
    6. '1' → logprob: -6.8050537109375
    7. '0' → logprob: -6.9300537109375
    8. ']' → logprob: -6.9300537109375
    9. 'subset' → logprob: -7.3050537109375
    10. '[last' → logprob: -7.5550537109375

Token 1017: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17490459978580475
    2. '+' → logprob: -3.0499045848846436
    3. '#' → logprob: -4.049904823303223
    4. '...' → logprob: -4.049904823303223
    5. 'for' → logprob: -4.549904823303223
    6. '            ' → logprob: -5.049904823303223
    7. '   ' → logprob: -5.049904823303223
    8. ')' → logprob: -5.299904823303223
    9. ' +' → logprob: -5.424904823303223
    10. '       ' → logprob: -5.424904823303223

Token 1018: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08711604028940201
    2. '+' → logprob: -3.587116003036499
    3. '#' (adapté à ' #') → logprob: -5.087116241455078
    4. 'continue' → logprob: -5.212116241455078
    5. '            ' → logprob: -5.337116241455078
    6. 'time' → logprob: -5.337116241455078
    7. 'next' → logprob: -5.337116241455078
    8. ' next' → logprob: -5.962116241455078
    9. ' #' → logprob: -6.087116241455078
    10. '       ' → logprob: -6.087116241455078

Token 1019: ' But' (ID: 3072)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20488771796226501
    2. 'time' → logprob: -3.329887628555298
    3. '+' → logprob: -3.829887628555298
    4. '#' → logprob: -4.079887866973877
    5. ' time' → logprob: -4.079887866973877
    6. ' #' → logprob: -4.329887866973877
    7. 'dist' → logprob: -4.454887866973877
    8. 'dp' → logprob: -4.829887866973877
    9. ' dist' → logprob: -5.204887866973877
    10. ' total' → logprob: -5.204887866973877

Token 1020: ' complicated' (ID: 25334)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.0466499328613281
    2. '#' → logprob: -1.4216499328613281
    3. '           ' → logprob: -1.7966499328613281
    4. 'continue' → logprob: -1.9216499328613281
    5. ' #' → logprob: -4.171649932861328
    6. ' for' → logprob: -4.296649932861328
    7. 'from' → logprob: -4.671649932861328
    8. 'import' → logprob: -4.921649932861328
    9. ' we' → logprob: -5.296649932861328
    10. 'for' → logprob: -5.296649932861328

Token 1021: ';' (ID: 26)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18666279315948486
    2. 'continue' → logprob: -2.8116626739501953
    3. '#' → logprob: -3.0616626739501953
    4. ' continue' → logprob: -3.9366626739501953
    5. '...' → logprob: -5.561662673950195
    6. ' #' → logprob: -5.686662673950195
    7. '                   ' → logprob: -5.686662673950195
    8. '               ' → logprob: -5.811662673950195
    9. '   ' → logprob: -5.811662673950195
    10. '       ' → logprob: -6.186662673950195

Token 1022: ' better' (ID: 3432)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1922035217285156
    2. 'continue' → logprob: -1.5672035217285156
    3. ' continue' → logprob: -1.6922035217285156
    4. '#' → logprob: -3.0672035217285156
    5. ' next' → logprob: -3.0672035217285156
    6. '            ' → logprob: -3.0672035217285156
    7. 'next' → logprob: -3.6922035217285156
    8. 'dp' → logprob: -3.8172035217285156
    9. ' #' → logprob: -3.9422035217285156
    10. ')' → logprob: -4.692203521728516

Token 1023: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.2699236571788788
    2. 'import' → logprob: -2.269923686981201
    3. 'continue' → logprob: -2.894923686981201
    4. '           ' → logprob: -3.394923686981201
    5. '```' → logprob: -4.644923686981201
    6. ' to' → logprob: -5.019923686981201
    7. 'from' → logprob: -5.144923686981201
    8. 'for' → logprob: -5.519923686981201
    9. '
' → logprob: -5.644923686981201
    10. 'dp' → logprob: -6.394923686981201

Token 1024: ' fix' (ID: 9295)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5159716606140137
    2. 'from' → logprob: -1.3909716606140137
    3. 'use' → logprob: -2.7659716606140137
    4. 'continue' → logprob: -2.7659716606140137
    5. '#' → logprob: -4.890971660614014
    6. 'implement' → logprob: -5.015971660614014
    7. 'cache' → logprob: -5.140971660614014
    8. 'for' → logprob: -6.140971660614014
    9. 'enumer' → logprob: -6.515971660614014
    10. '```' → logprob: -7.265971660614014

Token 1025: ' order' (ID: 2569)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3166109323501587
    2. 'subset' → logprob: -1.3166109323501587
    3. ' subset' → logprob: -2.566610813140869
    4. 'sub' → logprob: -2.691610813140869
    5. '```' → logprob: -2.691610813140869
    6. ' for' → logprob: -2.941610813140869
    7. 'range' → logprob: -4.066610813140869
    8. '           ' → logprob: -4.066610813140869
    9. '   ' → logprob: -4.191610813140869
    10. 'from' → logprob: -4.441610813140869

Token 1026: ':' (ID: 25)
  Prédit: '            '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '            ' → logprob: -1.1014446020126343
    2. '           ' → logprob: -1.6014446020126343
    3. ' for' → logprob: -1.8514446020126343
    4. ' ' → logprob: -3.226444721221924
    5. 'for' → logprob: -3.351444721221924
    6. 'continue' → logprob: -3.851444721221924
    7. ' 
' → logprob: -3.976444721221924
    8. '[' → logprob: -3.976444721221924
    9. ' continue' → logprob: -3.976444721221924
    10. ')' → logprob: -4.476444721221924

Token 1027: ' so' (ID: 813)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.5985920429229736
    2. ' subset' → logprob: -1.8485920429229736
    3. ' continue' → logprob: -2.3485920429229736
    4. '           ' → logprob: -2.5985920429229736
    5. 'subset' → logprob: -2.5985920429229736
    6. ' #' → logprob: -2.8485920429229736
    7. ' last' → logprob: -3.0985920429229736
    8. '#' → logprob: -3.2235920429229736
    9. ' un' → logprob: -3.3485920429229736
    10. ' next' → logprob: -3.4735920429229736

Token 1028: ' we' (ID: 581)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9962440729141235
    2. 'for' → logprob: -1.7462440729141235
    3. ' subset' → logprob: -2.121243953704834
    4. 'subset' → logprob: -2.246243953704834
    5. '                   ' → logprob: -2.746243953704834
    6. '           ' → logprob: -2.871243953704834
    7. '               ' → logprob: -3.246243953704834
    8. ' last' → logprob: -4.496243953704834
    9. ' continue' → logprob: -4.621243953704834
    10. 'cities' → logprob: -5.246243953704834

Token 1029: ' treat' (ID: 4665)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.5257448554039001
    2. '.append' → logprob: -1.275744915008545
    3. 'continue' → logprob: -2.650744915008545
    4. ' =' → logprob: -4.775744915008545
    5. ' subset' → logprob: -4.900744915008545
    6. 'subset' → logprob: -5.150744915008545
    7. ' +=' → logprob: -5.525744915008545
    8. '[]' → logprob: -5.650744915008545
    9. '_subset' → logprob: -5.900744915008545
    10. '[' → logprob: -5.900744915008545

Token 1030: ' subset' (ID: 58845)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.385998010635376
    2. ' subset' → logprob: -1.510998010635376
    3. 'sub' → logprob: -3.135998010635376
    4. 'the' → logprob: -4.010997772216797
    5. ' the' → logprob: -4.135997772216797
    6. 'next' → logprob: -5.760997772216797
    7. 'un' → logprob: -5.760997772216797
    8. ' next' → logprob: -5.885997772216797
    9. 'cities' → logprob: -6.135997772216797
    10. '```' → logprob: -6.760997772216797

Token 1031: ' as' (ID: 472)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.7967336773872375
    2. '=' → logprob: -1.1717336177825928
    3. ' as' → logprob: -2.6717336177825928
    4. '_sorted' → logprob: -3.1717336177825928
    5. 'sorted' → logprob: -3.5467336177825928
    6. 'as' → logprob: -3.6717336177825928
    7. '=[]' → logprob: -4.296733856201172
    8. '_tokens' → logprob: -5.046733856201172
    9. '_mask' → logprob: -5.171733856201172
    10. ' =' → logprob: -5.171733856201172

Token 1032: ' one' (ID: 1001)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.41174110770225525
    2. 'sorted' → logprob: -1.1617411375045776
    3. 'sub' → logprob: -4.661741256713867
    4. 'tuple' → logprob: -4.911741256713867
    5. 'list' → logprob: -6.411741256713867
    6. 'un' → logprob: -6.411741256713867
    7. ' subset' → logprob: -6.786741256713867
    8. '0' → logprob: -7.286741256713867
    9. '[]' → logprob: -7.661741256713867
    10. 'a' → logprob: -7.661741256713867

Token 1033: ' "' (ID: 392)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.091691255569458
    2. '           ' → logprob: -1.966691255569458
    3. '<<' → logprob: -2.591691255569458
    4. ' <<' → logprob: -3.466691255569458
    5. '       ' → logprob: -3.841691255569458
    6. ']' → logprob: -3.841691255569458
    7. 's' → logprob: -3.966691255569458
    8. 'bit' → logprob: -3.966691255569458
    9. ' step' → logprob: -3.966691255569458
    10. 'for' → logprob: -4.091691017150879

Token 1034: 'trip' (ID: 51122)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -1.333844542503357
    2. 'city' → logprob: -1.583844542503357
    3. 'tuple' → logprob: -2.3338446617126465
    4. ' node' → logprob: -2.4588446617126465
    5. ' city' → logprob: -2.7088446617126465
    6. '```' → logprob: -3.0838446617126465
    7. 'block' → logprob: -3.3338446617126465
    8. 'subset' → logprob: -3.4588446617126465
    9. 'step' → logprob: -3.5838446617126465
    10. ' block' → logprob: -4.4588446617126465

Token 1035: '":' (ID: 1243)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03610486164689064
    2. ')"' → logprob: -4.036104679107666
    3. ')' → logprob: -4.536104679107666
    4. '",' → logprob: -5.911104679107666
    5. '")' → logprob: -6.036104679107666
    6. ',"' → logprob: -7.536104679107666
    7. 'mask' → logprob: -8.536105155944824
    8. ' segment' → logprob: -8.911105155944824
    9. 'segment' → logprob: -8.911105155944824
    10. ' "' → logprob: -9.161105155944824

Token 1036: ' market' (ID: 2910)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.3276222944259644
    2. '            ' → logprob: -1.5776222944259644
    3. ' continue' → logprob: -1.8276222944259644
    4. ' next' → logprob: -2.702622413635254
    5. ' subset' → logprob: -2.702622413635254
    6. ' for' → logprob: -3.702622413635254
    7. 'subset' → logprob: -3.702622413635254
    8. 'continue' → logprob: -3.827622413635254
    9. ' #' → logprob: -3.952622413635254
    10. ' trip' → logprob: -4.327622413635254

Token 1037: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -1.5745432376861572
    2. ')' → logprob: -1.6995432376861572
    3. '[' → logprob: -1.8245432376861572
    4. '_' → logprob: -2.1995432376861572
    5. ')->' → logprob: -2.4495432376861572
    6. '0' → logprob: -2.9495432376861572
    7. ' ->' → logprob: -3.1995432376861572
    8. '
' → logprob: -3.4495432376861572
    9. ',' → logprob: -3.5745432376861572
    10. ')[' → logprob: -4.574542999267578

Token 1038: ' set' (ID: 920)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.1922447830438614
    2. 'cities' → logprob: -2.6922447681427
    3. 'city' → logprob: -3.1922447681427
    4. 'sub' → logprob: -3.8172447681427
    5. ' subset' → logprob: -4.067245006561279
    6. 'sorted' → logprob: -4.692245006561279
    7. '
' → logprob: -5.192245006561279
    8. ' cities' → logprob: -6.192245006561279
    9. ' city' → logprob: -6.817245006561279
    10. 'visited' → logprob: -7.067245006561279

Token 1039: ' of' (ID: 328)
  Prédit: ' ->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.2203173041343689
    2. '_' → logprob: -3.0953173637390137
    3. ' of' → logprob: -3.0953173637390137
    4. '->' → logprob: -3.7203173637390137
    5. '<|end|>' → logprob: -4.220317363739014
    6. ' _' → logprob: -4.345317363739014
    7. 'of' → logprob: -4.470317363739014
    8. '   ' → logprob: -5.220317363739014
    9. '<|end|>' → logprob: -5.595317363739014
    10. '_of' → logprob: -5.595317363739014

Token 1040: ' cities' (ID: 15636)
  Prédit: 'cities'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cities' → logprob: -0.056961510330438614
    2. 'subset' → logprob: -3.4319615364074707
    3. ' cities' → logprob: -3.8069615364074707
    4. ' subset' → logprob: -7.681961536407471
    5. 'sub' → logprob: -8.681961059570312
    6. 'city' → logprob: -9.931961059570312
    7. '```' → logprob: -10.431961059570312
    8. 'visited' → logprob: -10.681961059570312
    9. 'un' → logprob: -11.306961059570312
    10. '
' → logprob: -11.556961059570312

Token 1041: ' ->' (ID: 2747)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3567564785480499
    2. ')' → logprob: -3.1067564487457275
    3. '
' → logprob: -3.1067564487457275
    4. '   ' → logprob: -4.231756687164307
    5. '[' → logprob: -4.231756687164307
    6. ',' → logprob: -4.231756687164307
    7. ':
' → logprob: -4.231756687164307
    8. '):
' → logprob: -4.481756687164307
    9. 'for' → logprob: -4.606756687164307
    10. ' for' → logprob: -4.606756687164307

Token 1042: ' market' (ID: 2910)
  Prédit: 'market'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'market' → logprob: -0.03837032988667488
    2. ' market' → logprob: -3.288370370864868
    3. '0' → logprob: -8.413370132446289
    4. 'markets' → logprob: -10.288370132446289
    5. '
' → logprob: -10.913370132446289
    6. '```' → logprob: -10.913370132446289
    7. 'city' → logprob: -11.788370132446289
    8. ' ' → logprob: -11.913370132446289
    9. ' markets' → logprob: -12.663370132446289
    10. '#' → logprob: -13.038370132446289

Token 1043: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12463681399822235
    2. ')' → logprob: -3.9996368885040283
    3. ' for' → logprob: -4.374636650085449
    4. '            ' → logprob: -4.874636650085449
    5. '               ' → logprob: -4.999636650085449
    6. '   ' → logprob: -4.999636650085449
    7. '<|end|>' → logprob: -4.999636650085449
    8. '       ' → logprob: -5.124636650085449
    9. '...' → logprob: -5.374636650085449
    10. 'for' → logprob: -5.624636650085449

Token 1044: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.4968019723892212
    2. ')' → logprob: -1.7468019723892212
    3. 'continue' → logprob: -2.2468018531799316
    4. ' for' → logprob: -2.3718018531799316
    5. ' continue' → logprob: -2.6218018531799316
    6. 'for' → logprob: -2.7468018531799316
    7. '[' → logprob: -2.9968018531799316
    8. '#' → logprob: -3.4968018531799316
    9. '   ' → logprob: -3.7468018531799316
    10. 'dp' → logprob: -4.246801853179932

Token 1045: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13140669465065002
    2. 'time' → logprob: -3.006406784057617
    3. ' time' → logprob: -3.881406784057617
    4. 'trip' → logprob: -4.381406784057617
    5. '               ' → logprob: -4.881406784057617
    6. '#' (adapté à ' #') → logprob: -5.131406784057617
    7. 'continue' → logprob: -5.506406784057617
    8. ' trip' → logprob: -5.756406784057617
    9. ' continue' → logprob: -6.131406784057617
    10. 'cost' → logprob: -6.506406784057617

Token 1046: ' So' (ID: 2632)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3915261924266815
    2. '#' → logprob: -2.516526222229004
    3. '   ' → logprob: -3.141526222229004
    4. 'time' → logprob: -3.266526222229004
    5. 'trip' → logprob: -3.641526222229004
    6. 'cities' → logprob: -4.266526222229004
    7. 'cost' → logprob: -4.516526222229004
    8. 'dp' → logprob: -4.516526222229004
    9. 'from' → logprob: -4.641526222229004
    10. 'dist' → logprob: -4.766526222229004

Token 1047: ' must' (ID: 2804)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.4738483130931854
    2. ' continue' → logprob: -1.9738483428955078
    3. 'for' → logprob: -2.723848342895508
    4. '#' → logprob: -3.098848342895508
    5. 'time' → logprob: -3.098848342895508
    6. 'trip' → logprob: -3.473848342895508
    7. ' for' → logprob: -4.348848342895508
    8. ' time' → logprob: -5.223848342895508
    9. ' #' → logprob: -5.348848342895508
    10. '           ' → logprob: -5.473848342895508

Token 1048: ' go' (ID: 810)
  Prédit: 'go'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'go' → logprob: -0.5303635001182556
    2. 'visit' → logprob: -1.7803635597229004
    3. 'continue' → logprob: -2.4053635597229004
    4. 'return' → logprob: -3.1553635597229004
    5. 'add' → logprob: -3.6553635597229004
    6. 'consider' → logprob: -4.0303635597229
    7. ' go' → logprob: -4.6553635597229
    8. 'calculate' → logprob: -5.2803635597229
    9. 'move' → logprob: -5.5303635597229
    10. ' visit' → logprob: -5.5303635597229

Token 1049: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.28826236724853516
    2. 'through' → logprob: -1.6632623672485352
    3. 'back' → logprob: -3.788262367248535
    4. ' through' → logprob: -4.163262367248535
    5. 'to' → logprob: -4.413262367248535
    6. ' from' → logprob: -5.788262367248535
    7. ' back' → logprob: -6.038262367248535
    8. '#' → logprob: -6.163262367248535
    9. 'first' → logprob: -6.913262367248535
    10. 'on' → logprob: -7.663262367248535

Token 1050: ' market' (ID: 2910)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007793170865625143
    2. 'market' → logprob: -5.757792949676514
    3. 'last' → logprob: -5.882792949676514
    4. ' ' → logprob: -6.757792949676514
    5. 'pos' → logprob: -7.882792949676514
    6. ' last' → logprob: -9.007793426513672
    7. ' market' → logprob: -9.757793426513672
    8. '`' → logprob: -11.007793426513672
    9. 'markets' → logprob: -11.507793426513672
    10. '```' → logprob: -11.757793426513672

Token 1051: '(' (ID: 7)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.1160523891448975
    2. '[' → logprob: -1.2410523891448975
    3. 'to' → logprob: -1.3660523891448975
    4. '[last' → logprob: -3.1160523891448975
    5. ')' → logprob: -3.7410523891448975
    6. '<|end|>' → logprob: -4.366052627563477
    7. ',' → logprob: -4.616052627563477
    8. '
' → logprob: -5.491052627563477
    9. '<|end|>' → logprob: -5.741052627563477
    10. '0' → logprob: -5.741052627563477

Token 1052: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09255391359329224
    2. ')' → logprob: -2.4675538539886475
    3. 'last' → logprob: -6.467554092407227
    4. '1' → logprob: -7.592554092407227
    5. '[' → logprob: -8.342554092407227
    6. '```' → logprob: -8.592554092407227
    7. ' ' → logprob: -9.217554092407227
    8. '...' → logprob: -9.217554092407227
    9. ')
' → logprob: -9.342554092407227
    10. '#' → logprob: -9.592554092407227

Token 1053: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009813938289880753
    2. ')->' → logprob: -5.5098137855529785
    3. ' to' → logprob: -6.0098137855529785
    4. 'to' → logprob: -6.6348137855529785
    5. ')+' → logprob: -7.6348137855529785
    6. ' )' → logprob: -8.259814262390137
    7. '),' → logprob: -8.259814262390137
    8. ',' → logprob: -8.259814262390137
    9. ')#' → logprob: -8.384814262390137
    10. ')
' → logprob: -9.259814262390137

Token 1054: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.19539134204387665
    2. 'to' → logprob: -1.945391297340393
    3. ')' → logprob: -4.4453911781311035
    4. '<|end|>' → logprob: -4.6953911781311035
    5. ',' → logprob: -4.9453911781311035
    6. 'for' → logprob: -6.0703911781311035
    7. ' for' → logprob: -6.9453911781311035
    8. '0' → logprob: -7.5703911781311035
    9. ':' → logprob: -7.8203911781311035
    10. '<|end|>' → logprob: -7.8203911781311035

Token 1055: ' each' (ID: 2454)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.04564565047621727
    2. '0' → logprob: -4.545645713806152
    3. 'sub' → logprob: -4.920645713806152
    4. 'cities' → logprob: -5.045645713806152
    5. 'min' → logprob: -5.420645713806152
    6. ' subset' → logprob: -5.420645713806152
    7. 's' → logprob: -6.045645713806152
    8. 'market' → logprob: -6.295645713806152
    9. 'city' → logprob: -6.420645713806152
    10. 'i' → logprob: -7.045645713806152

Token 1056: ' city' (ID: 5030)
  Prédit: ' city'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' city' → logprob: -0.3215691149234772
    2. 'city' → logprob: -1.3215690851211548
    3. 'subset' → logprob: -6.696568965911865
    4. ' i' → logprob: -6.821568965911865
    5. ' subset' → logprob: -6.821568965911865
    6. ' s' → logprob: -7.071568965911865
    7. 'i' → logprob: -7.446568965911865
    8. '
' → logprob: -7.696568965911865
    9. ' in' → logprob: -7.946568965911865
    10. 's' → logprob: -7.946568965911865

Token 1057: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2171341180801392
    2. '
' → logprob: -1.8421341180801392
    3. 'for' → logprob: -2.2171339988708496
    4. '           ' → logprob: -2.3421339988708496
    5. 'subset' → logprob: -3.3421339988708496
    6. ')' → logprob: -3.3421339988708496
    7. '#' → logprob: -3.7171339988708496
    8. '   ' → logprob: -4.09213399887085
    9. '               ' → logprob: -4.09213399887085
    10. '```' → logprob: -4.09213399887085

Token 1058: ' back' (ID: 1602)
  Prédit: 'back'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'back' → logprob: -0.03253014013171196
    2. ' back' → logprob: -3.6575300693511963
    3. 'from' → logprob: -5.907530307769775
    4. 'then' → logprob: -6.157530307769775
    5. 'return' → logprob: -6.782530307769775
    6. 'market' → logprob: -9.032529830932617
    7. '#' → logprob: -10.032529830932617
    8. 'between' → logprob: -10.657529830932617
    9. ' then' → logprob: -11.282529830932617
    10. 'go' → logprob: -11.532529830932617

Token 1059: '.' (ID: 13)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12937410175800323
    2. ',' → logprob: -2.6293740272521973
    3. '.' → logprob: -4.254374027252197
    4. '<|end|>' → logprob: -4.879374027252197
    5. '
' → logprob: -5.129374027252197
    6. '<|end|>' → logprob: -5.629374027252197
    7. ')' → logprob: -5.879374027252197
    8. '#' → logprob: -6.129374027252197
    9. ':' → logprob: -6.129374027252197
    10. '...' → logprob: -6.754374027252197

Token 1060: ' Since' (ID: 12265)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011401813477277756
    2. ' for' → logprob: -6.011401653289795
    3. '       ' → logprob: -7.136401653289795
    4. 'continue' → logprob: -7.136401653289795
    5. ' continue' → logprob: -7.136401653289795
    6. 'for' → logprob: -7.261401653289795
    7. ' if' → logprob: -7.261401653289795
    8. ')' → logprob: -7.386401653289795
    9. '+' → logprob: -7.761401653289795
    10. '   ' → logprob: -7.886401653289795

Token 1061: ' trade' (ID: 10552)
  Prédit: 'markets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'markets' → logprob: -1.5720500946044922
    2. 'the' → logprob: -1.9470500946044922
    3. 'subset' → logprob: -2.322050094604492
    4. 'we' → logprob: -2.322050094604492
    5. 'last' → logprob: -2.822050094604492
    6. 'market' → logprob: -2.947050094604492
    7. '0' → logprob: -3.322050094604492
    8. 'pos' → logprob: -3.572050094604492
    9. 'they' → logprob: -3.572050094604492
    10. 'all' → logprob: -3.822050094604492

Token 1062: ' happens' (ID: 13367)
  Prédit: 'offs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offs' → logprob: -0.4306636154651642
    2. 'off' → logprob: -1.4306635856628418
    3. '-offs' → logprob: -2.680663585662842
    4. 's' → logprob: -3.680663585662842
    5. '-off' → logprob: -4.680663585662842
    6. '_off' → logprob: -6.055663585662842
    7. '_' → logprob: -7.180663585662842
    8. ')' → logprob: -7.430663585662842
    9. ' continues' → logprob: -7.805663585662842
    10. ' offs' → logprob: -7.930663585662842

Token 1063: ' by' (ID: 656)
  Prédit: ' only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' only' → logprob: -0.26267337799072266
    2. 'only' → logprob: -2.1376733779907227
    3. ' at' → logprob: -3.5126733779907227
    4. ' in' → logprob: -3.6376733779907227
    5. 'at' → logprob: -4.512673377990723
    6. 'in' → logprob: -4.887673377990723
    7. ' through' → logprob: -5.137673377990723
    8. 'through' → logprob: -5.137673377990723
    9. ' always' → logprob: -5.262673377990723
    10. ' via' → logprob: -5.762673377990723

Token 1064: ' going' (ID: 2966)
  Prédit: 'buy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'buy' → logprob: -0.8697813153266907
    2. 'making' → logprob: -1.994781255722046
    3. 'p' → logprob: -2.619781255722046
    4. 'return' → logprob: -2.619781255722046
    5. 'vis' → logprob: -3.119781255722046
    6. ' buying' → logprob: -3.119781255722046
    7. ' visiting' → logprob: -3.494781255722046
    8. ' making' → logprob: -3.869781255722046
    9. 'def' → logprob: -3.994781255722046
    10. 'subset' → logprob: -4.369781494140625

Token 1065: ' market' (ID: 2910)
  Prédit: 'through'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'through' → logprob: -0.5003199577331543
    2. 'from' → logprob: -1.2503199577331543
    3. ' through' → logprob: -3.1253199577331543
    4. 'to' → logprob: -3.3753199577331543
    5. 'market' → logprob: -3.8753199577331543
    6. ' from' → logprob: -5.750319957733154
    7. ' to' → logprob: -6.625319957733154
    8. 'between' → logprob: -7.375319957733154
    9. 'back' → logprob: -7.500319957733154
    10. 'direct' → logprob: -8.000320434570312

Token 1066: '->' (ID: 609)
  Prédit: '->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.06430234014987946
    2. ' ->' → logprob: -2.939302444458008
    3. ',' → logprob: -6.064302444458008
    4. ' to' → logprob: -6.439302444458008
    5. '→' → logprob: -7.189302444458008
    6. ')->' → logprob: -7.439302444458008
    7. ' and' → logprob: -7.439302444458008
    8. 'and' → logprob: -7.564302444458008
    9. 'to' → logprob: -7.814302444458008
    10. ')' → logprob: -7.939302444458008

Token 1067: 'cities' (ID: 131097)
  Prédit: 'cities'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cities' → logprob: -0.24850256741046906
    2. 'city' → logprob: -2.248502492904663
    3. 'subset' → logprob: -2.373502492904663
    4. ' cities' → logprob: -4.873502731323242
    5. ' subset' → logprob: -4.873502731323242
    6. ' city' → logprob: -5.998502731323242
    7. 'markets' → logprob: -6.873502731323242
    8. 'market' → logprob: -6.998502731323242
    9. 'set' → logprob: -7.748502731323242
    10. 'each' → logprob: -8.248502731323242

Token 1068: '->' (ID: 609)
  Prédit: '->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.01364623662084341
    2. ' ->' → logprob: -4.638646125793457
    3. ')->' → logprob: -7.138646125793457
    4. ',' → logprob: -8.263646125793457
    5. '()->' → logprob: -8.263646125793457
    6. ' and' → logprob: -8.263646125793457
    7. '```' → logprob: -8.263646125793457
    8. ')' → logprob: -8.388646125793457
    9. '<|end|>' → logprob: -8.638646125793457
    10. '+' → logprob: -8.888646125793457

Token 1069: 'market' (ID: 27236)
  Prédit: 'market'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'market' → logprob: -0.0022919215261936188
    2. '0' → logprob: -6.752292156219482
    3. ' market' → logprob: -7.377292156219482
    4. 'markets' → logprob: -7.877292156219482
    5. '
' → logprob: -9.502291679382324
    6. 'cities' → logprob: -11.502291679382324
    7. '```' → logprob: -11.627291679382324
    8. ' ' → logprob: -12.252291679382324
    9. '...' → logprob: -12.377291679382324
    10. '#' → logprob: -12.502291679382324

Token 1070: ' cycles' (ID: 41478)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5270347595214844
    2. '
' → logprob: -1.5270347595214844
    3. ',' → logprob: -2.4020347595214844
    4. '<|end|>' → logprob: -3.9020347595214844
    5. '.' → logprob: -4.152034759521484
    6. ')' → logprob: -4.277034759521484
    7. '...' → logprob: -4.527034759521484
    8. ',
' → logprob: -5.027034759521484
    9. '<|end|>' → logprob: -5.152034759521484
    10. ' for' → logprob: -5.152034759521484

Token 1071: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1447543203830719
    2. '
' → logprob: -3.394754409790039
    3. ')' → logprob: -3.644754409790039
    4. ',' → logprob: -4.269754409790039
    5. '               ' → logprob: -4.894754409790039
    6. '<|end|>' → logprob: -5.144754409790039
    7. '                   ' → logprob: -5.394754409790039
    8. '   ' → logprob: -5.394754409790039
    9. ' for' → logprob: -5.519754409790039
    10. '       ' → logprob: -5.519754409790039

Token 1072: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05270065739750862
    2. '       ' → logprob: -4.302700519561768
    3. ' for' → logprob: -4.302700519561768
    4. '   ' → logprob: -4.802700519561768
    5. 'for' → logprob: -5.927700519561768
    6. '
' → logprob: -6.052700519561768
    7. '               ' → logprob: -6.177700519561768
    8. ' continue' → logprob: -6.427700519561768
    9. 'continue' → logprob: -6.552700519561768
    10. '```' → logprob: -6.677700519561768

Token 1073: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11544503271579742
    2. 'time' → logprob: -4.490445137023926
    3. '#' (adapté à ' #') → logprob: -4.740445137023926
    4. 'trip' → logprob: -4.865445137023926
    5. ' time' → logprob: -4.990445137023926
    6. '+' → logprob: -4.990445137023926
    7. 'cost' → logprob: -5.115445137023926
    8. ' for' → logprob: -5.240445137023926
    9. 'continue' → logprob: -5.365445137023926
    10. ' #' → logprob: -5.365445137023926

Token 1074: ' So' (ID: 2632)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7497627139091492
    2. 'cost' → logprob: -2.124762773513794
    3. 'time' → logprob: -2.374762773513794
    4. '#' → logprob: -2.874762773513794
    5. 'dist' → logprob: -2.999762773513794
    6. 'd' → logprob: -3.749762773513794
    7. 'trip' → logprob: -3.874762773513794
    8. 'dp' → logprob: -4.124762535095215
    9. 'mask' → logprob: -4.374762535095215
    10. ' time' → logprob: -4.749762535095215

Token 1075: ' from' (ID: 591)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.8531832695007324
    2. 'for' → logprob: -1.4781832695007324
    3. '           ' → logprob: -2.3531832695007324
    4. '#' → logprob: -2.9781832695007324
    5. ' continue' → logprob: -2.9781832695007324
    6. 'time' → logprob: -3.2281832695007324
    7. 'subset' → logprob: -3.7281832695007324
    8. 'trip' → logprob: -4.353183269500732
    9. ' for' → logprob: -4.478183269500732
    10. 'from' → logprob: -4.853183269500732

Token 1076: ' last' (ID: 2174)
  Prédit: 'market'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'market' → logprob: -0.7567251920700073
    2. '0' → logprob: -1.1317251920700073
    3. 'last' → logprob: -2.381725311279297
    4. 'pos' → logprob: -2.506725311279297
    5. 'current' → logprob: -4.381725311279297
    6. ' market' → logprob: -5.256725311279297
    7. 'the' → logprob: -5.631725311279297
    8. ' last' → logprob: -6.131725311279297
    9. '```' → logprob: -6.631725311279297
    10. '#' → logprob: -6.756725311279297

Token 1077: ' to' (ID: 316)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.9798988103866577
    2. '_' → logprob: -2.2298989295959473
    3. ' _' → logprob: -2.3548989295959473
    4. ')' → logprob: -2.3548989295959473
    5. '_city' → logprob: -2.3548989295959473
    6. ',' → logprob: -2.6048989295959473
    7. '[' → logprob: -2.7298989295959473
    8. '_mask' → logprob: -3.1048989295959473
    9. '_market' → logprob: -3.6048989295959473
    10. ')_' → logprob: -3.6048989295959473

Token 1078: ' market' (ID: 2910)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.055360399186611176
    2. ' ' → logprob: -3.1803603172302246
    3. 'market' → logprob: -4.680360317230225
    4. ' market' → logprob: -6.305360317230225
    5. 'markets' → logprob: -8.055360794067383
    6. 'pos' → logprob: -8.305360794067383
    7. 'subset' → logprob: -9.180360794067383
    8. ' markets' → logprob: -9.742860794067383
    9. 'sub' → logprob: -9.992860794067383
    10. ' pos' → logprob: -10.242860794067383

Token 1079: ',' (ID: 11)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -1.677656888961792
    2. '+' → logprob: -1.802656888961792
    3. '           ' → logprob: -2.677656888961792
    4. '
' → logprob: -2.802656888961792
    5. '0' → logprob: -2.927656888961792
    6. ' to' → logprob: -2.927656888961792
    7. ')+' → logprob: -2.927656888961792
    8. '=' → logprob: -3.302656888961792
    9. 'dist' → logprob: -3.552656888961792
    10. ':
' → logprob: -3.552656888961792

Token 1080: ' +' (ID: 659)
  Prédit: ' time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.7342366576194763
    2. 'time' → logprob: -1.734236717224121
    3. '           ' → logprob: -1.984236717224121
    4. ' cost' → logprob: -2.609236717224121
    5. ' dist' → logprob: -3.109236717224121
    6. 'cost' → logprob: -3.609236717224121
    7. 'dist' → logprob: -4.109236717224121
    8. ' t' → logprob: -4.234236717224121
    9. 't' → logprob: -5.234236717224121
    10. ' travel' → logprob: -5.609236717224121

Token 1081: ' from' (ID: 591)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.16045859456062317
    2. ' dist' → logprob: -1.9104585647583008
    3. '+' → logprob: -8.9104585647583
    4. 'pos' → logprob: -10.5354585647583
    5. ' +' → logprob: -11.2854585647583
    6. '           ' → logprob: -11.4104585647583
    7. '(dist' → logprob: -11.4104585647583
    8. '   ' → logprob: -12.0354585647583
    9. '
' → logprob: -12.2854585647583
    10. 'dp' → logprob: -12.4104585647583

Token 1082: ' market' (ID: 2910)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08596878498792648
    2. 'market' → logprob: -3.0859687328338623
    3. ' ' → logprob: -3.9609687328338623
    4. 'subset' → logprob: -4.585968971252441
    5. ' market' → logprob: -5.960968971252441
    6. 'sub' → logprob: -6.585968971252441
    7. ' subset' → logprob: -7.085968971252441
    8. 'un' → logprob: -7.585968971252441
    9. 'last' → logprob: -7.710968971252441
    10. 'markets' → logprob: -7.960968971252441

Token 1083: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.1765632927417755
    2. '+' → logprob: -2.426563262939453
    3. ' to' → logprob: -3.801563262939453
    4. ')+' → logprob: -4.176563262939453
    5. ')' → logprob: -4.301563262939453
    6. '(' → logprob: -5.301563262939453
    7. ' +' → logprob: -5.551563262939453
    8. '
' → logprob: -5.801563262939453
    9. '[' → logprob: -6.176563262939453
    10. '->' → logprob: -6.801563262939453

Token 1084: ' cities' (ID: 15636)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.2559272348880768
    2. '0' → logprob: -1.7559272050857544
    3. 'sub' → logprob: -4.005927085876465
    4. 'cities' → logprob: -4.755927085876465
    5. 'market' → logprob: -5.130927085876465
    6. 'min' → logprob: -5.505927085876465
    7. ' subset' → logprob: -5.630927085876465
    8. 'markets' → logprob: -5.880927085876465
    9. 'un' → logprob: -6.130927085876465
    10. 'last' → logprob: -6.130927085876465

Token 1085: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0963495671749115
    2. ' +' → logprob: -3.4713494777679443
    3. '+
' → logprob: -3.5963494777679443
    4. '           ' → logprob: -4.721349716186523
    5. '[last' → logprob: -5.221349716186523
    6. ')+' → logprob: -5.471349716186523
    7. ')' → logprob: -5.846349716186523
    8. '```' → logprob: -5.846349716186523
    9. '[' → logprob: -6.721349716186523
    10. '               ' → logprob: -6.846349716186523

Token 1086: ' from' (ID: 591)
  Prédit: 'market'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'market' → logprob: -0.21113339066505432
    2. 'sum' → logprob: -2.8361334800720215
    3. ' market' → logprob: -2.9611334800720215
    4. 'dist' → logprob: -3.5861334800720215
    5. '+' → logprob: -4.0861334800720215
    6. '#' → logprob: -4.7111334800720215
    7. ' sum' → logprob: -4.9611334800720215
    8. ' dist' → logprob: -5.5861334800720215
    9. 'subset' → logprob: -5.5861334800720215
    10. '0' → logprob: -5.8361334800720215

Token 1087: ' cities' (ID: 15636)
  Prédit: 'market'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'market' → logprob: -0.025903690606355667
    2. 'cities' → logprob: -4.275903701782227
    3. ' market' → logprob: -5.025903701782227
    4. 'subset' → logprob: -6.275903701782227
    5. '0' → logprob: -6.900903701782227
    6. 'markets' → logprob: -7.275903701782227
    7. 'last' → logprob: -7.400903701782227
    8. ' cities' → logprob: -7.650903701782227
    9. ' ' → logprob: -9.275903701782227
    10. 'city' → logprob: -9.900903701782227

Token 1088: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -1.0058854818344116
    2. '+' → logprob: -1.5058854818344116
    3. '[' → logprob: -2.255885601043701
    4. '```' → logprob: -2.755885601043701
    5. 'back' → logprob: -2.880885601043701
    6. '#' → logprob: -3.255885601043701
    7. '_to' → logprob: -3.255885601043701
    8. ' to' → logprob: -3.880885601043701
    9. 'distance' → logprob: -4.755885601043701
    10. ' back' → logprob: -4.755885601043701

Token 1089: ' market' (ID: 2910)
  Prédit: 'market'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'market' → logprob: -0.0028319843113422394
    2. ' market' → logprob: -6.127831935882568
    3. '0' → logprob: -7.377831935882568
    4. '
' → logprob: -11.752832412719727
    5. 'last' → logprob: -12.377832412719727
    6. ' ' → logprob: -12.752832412719727
    7. 'markets' → logprob: -12.877832412719727
    8. 'mark' → logprob: -13.877832412719727
    9. '```' → logprob: -14.377832412719727
    10. 'markt' → logprob: -14.877832412719727

Token 1090: '
' (ID: 198)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.8323866128921509
    2. '+' → logprob: -1.4573866128921509
    3. 'time' → logprob: -1.9573866128921509
    4. '           ' → logprob: -2.5823864936828613
    5. ' +' → logprob: -3.0823864936828613
    6. '_cost' → logprob: -4.082386493682861
    7. ')+' → logprob: -4.707386493682861
    8. 'dist' → logprob: -4.707386493682861
    9. '
' → logprob: -4.832386493682861
    10. '_dist' → logprob: -5.457386493682861

Token 1091: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01991770789027214
    2. '+' → logprob: -4.1449174880981445
    3. ' +' → logprob: -6.2699174880981445
    4. '               ' → logprob: -7.8949174880981445
    5. '+
' → logprob: -8.144917488098145
    6. 'continue' → logprob: -8.644917488098145
    7. '            
' → logprob: -9.019917488098145
    8. '       ' → logprob: -9.144917488098145
    9. ' continue' → logprob: -9.644917488098145
    10. '                   ' → logprob: -9.644917488098145

Token 1092: ' #' (ID: 1069)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4257294237613678
    2. '           ' → logprob: -1.8007293939590454
    3. ' +' → logprob: -2.800729513168335
    4. '+
' → logprob: -2.925729513168335
    5. '               ' → logprob: -4.300729274749756
    6. ' +
' → logprob: -4.800729274749756
    7. ')' → logprob: -4.925729274749756
    8. '                   ' → logprob: -5.175729274749756
    9. '                           ' → logprob: -5.300729274749756
    10. '                       ' → logprob: -5.425729274749756

Token 1093: ' So' (ID: 2632)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21923592686653137
    2. '+' → logprob: -2.469235897064209
    3. 'time' → logprob: -4.094235897064209
    4. 'dp' → logprob: -4.469235897064209
    5. 'dist' → logprob: -4.844235897064209
    6. 'next' → logprob: -5.094235897064209
    7. ' dp' → logprob: -5.094235897064209
    8. '                           ' → logprob: -5.219235897064209
    9. '               ' → logprob: -5.219235897064209
    10. 'continue' → logprob: -5.469235897064209

Token 1094: ' cost' (ID: 3097)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.4492098093032837
    2. ' time' → logprob: -1.9492098093032837
    3. 'cost' → logprob: -2.449209690093994
    4. '           ' → logprob: -2.949209690093994
    5. ' cost' → logprob: -4.324209690093994
    6. 'dist' → logprob: -4.574209690093994
    7. '               ' → logprob: -4.699209690093994
    8. '   ' → logprob: -5.199209690093994
    9. '+' → logprob: -5.324209690093994
    10. 'total' → logprob: -5.324209690093994

Token 1095: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.039895907044410706
    2. ' =' → logprob: -3.289896011352539
    3. '_time' → logprob: -8.164896011352539
    4. '=sub' → logprob: -8.164896011352539
    5. '+=' → logprob: -8.164896011352539
    6. '=time' → logprob: -8.414896011352539
    7. '=
' → logprob: -8.789896011352539
    8. '=_' → logprob: -9.414896011352539
    9. ' +=' → logprob: -9.414896011352539
    10. 'from' → logprob: -9.539896011352539

Token 1096: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -8.673547563375905e-05
    2. ' dist' → logprob: -10.000086784362793
    3. 'dp' → logprob: -10.125086784362793
    4. '+' → logprob: -13.750086784362793
    5. '(dist' → logprob: -16.625085830688477
    6. '           ' → logprob: -17.750085830688477
    7. '   ' → logprob: -18.125085830688477
    8. '	dist' → logprob: -18.250085830688477
    9. 'cost' → logprob: -18.625085830688477
    10. ' +' → logprob: -19.250085830688477

Token 1097: '(last' (ID: 39599)
  Prédit: '[last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[last' → logprob: -0.011581653729081154
    2. '(last' → logprob: -4.7615814208984375
    3. '[' → logprob: -5.8865814208984375
    4. 'last' → logprob: -9.761581420898438
    5. 'sub' → logprob: -10.261581420898438
    6. '[sub' → logprob: -10.886581420898438
    7. '
' → logprob: -11.011581420898438
    8. '([' → logprob: -11.386581420898438
    9. '```' → logprob: -11.636581420898438
    10. '][' → logprob: -12.386581420898438

Token 1098: ',' (ID: 11)
  Prédit: ')['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.7552916407585144
    2. '][' → logprob: -1.0052917003631592
    3. '[' → logprob: -2.130291700363159
    4. '[last' → logprob: -3.255291700363159
    5. ')' → logprob: -5.88029146194458
    6. '
' → logprob: -6.88029146194458
    7. ',' → logprob: -7.00529146194458
    8. ',last' → logprob: -7.38029146194458
    9. '```' → logprob: -8.380291938781738
    10. 'to' → logprob: -8.630291938781738

Token 1099: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.250001907348633
    3. ')' → logprob: -15.375001907348633
    4. '```' → logprob: -15.625001907348633
    5. '[' → logprob: -16.875001907348633
    6. '`' → logprob: -17.375001907348633
    7. 'market' → logprob: -17.500001907348633
    8. '
' → logprob: -18.000001907348633
    9. '(' → logprob: -18.125001907348633
    10. '``' → logprob: -18.125001907348633

Token 1100: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06200835481286049
    2. ')+' → logprob: -2.8120083808898926
    3. ')
' → logprob: -10.812007904052734
    4. ' )' → logprob: -11.187007904052734
    5. '+)' → logprob: -13.562007904052734
    6. ')+(' → logprob: -13.937007904052734
    7. ']+' → logprob: -14.187007904052734
    8. '")+' → logprob: -14.562007904052734
    9. '           ' → logprob: -14.812007904052734
    10. '）' → logprob: -14.937007904052734

Token 1101: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2276763767004013
    2. ' +' → logprob: -1.6026763916015625
    3. ')+' → logprob: -6.7276763916015625
    4. '+
' → logprob: -7.7276763916015625
    5. ')' → logprob: -8.102676391601562
    6. '           ' → logprob: -8.852676391601562
    7. ' +
' → logprob: -9.477676391601562
    8. '+)' → logprob: -10.977676391601562
    9. '               ' → logprob: -11.102676391601562
    10. '
' → logprob: -11.227676391601562

Token 1102: ' T' (ID: 353)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.036051053553819656
    2. 'dist' → logprob: -4.536051273345947
    3. 'min' → logprob: -4.661051273345947
    4. '0' → logprob: -5.161051273345947
    5. '2' → logprob: -5.661051273345947
    6. '
' → logprob: -5.911051273345947
    7. 'max' → logprob: -6.161051273345947
    8. 'dp' → logprob: -7.911051273345947
    9. 'subset' → logprob: -8.536050796508789
    10. ' sum' → logprob: -9.036050796508789

Token 1103: 'SP' (ID: 6657)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.8765207529067993
    2. ' +' → logprob: -1.3765207529067993
    3. '+' → logprob: -2.1265206336975098
    4. '*(' → logprob: -2.3765206336975098
    5. '*' → logprob: -2.6265206336975098
    6. ')' → logprob: -3.3765206336975098
    7. '(' → logprob: -5.12652063369751
    8. ' (' → logprob: -6.25152063369751
    9. ')+' → logprob: -6.75152063369751
    10. ' )' → logprob: -7.62652063369751

Token 1104: '(m' (ID: 2145)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1105: 'arket' (ID: 90068)
  Prédit: 'arket'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arket' → logprob: -0.5780709981918335
    2. 'ark' → logprob: -1.5780709981918335
    3. 'subset' → logprob: -1.7030709981918335
    4. 'arked' → logprob: -4.703071117401123
    5. 'arks' → logprob: -4.828071117401123
    6. '(' → logprob: -4.828071117401123
    7. ')' → logprob: -4.953071117401123
    8. '0' → logprob: -4.953071117401123
    9. '[' → logprob: -6.078071117401123
    10. 'sub' → logprob: -6.453071117401123

Token 1106: '->' (ID: 609)
  Prédit: ')+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.6902039051055908
    2. ')' → logprob: -0.9402039051055908
    3. ',' → logprob: -2.690203905105591
    4. 'subset' → logprob: -4.065203666687012
    5. ')+(' → logprob: -5.565203666687012
    6. '_subset' → logprob: -5.815203666687012
    7. '(' → logprob: -6.065203666687012
    8. '+' → logprob: -6.190203666687012
    9. ']+' → logprob: -6.315203666687012
    10. '0' → logprob: -6.565203666687012

Token 1107: 'subset' (ID: 163297)
  Prédit: 'subset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.018920397385954857
    2. 'sub' → logprob: -4.768920421600342
    3. 'cities' → logprob: -5.518920421600342
    4. ' subset' → logprob: -6.893920421600342
    5. '
' → logprob: -7.018920421600342
    6. '`' → logprob: -7.143920421600342
    7. '''.' → logprob: -7.393920421600342
    8. '{sub' → logprob: -7.768920421600342
    9. '0' → logprob: -8.018919944763184
    10. '```' → logprob: -8.143919944763184

Token 1108: ' cities' (ID: 15636)
  Prédit: ')+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.39447376132011414
    2. ')' → logprob: -1.2694737911224365
    3. 'subset' → logprob: -3.7694737911224365
    4. '_subset' → logprob: -4.519473552703857
    5. ',' → logprob: -5.519473552703857
    6. '+' → logprob: -6.019473552703857
    7. ')+(' → logprob: -7.144473552703857
    8. ' subset' → logprob: -7.394473552703857
    9. ')-' → logprob: -7.644473552703857
    10. '_sub' → logprob: -8.519474029541016

Token 1109: '->' (ID: 609)
  Prédit: ')+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.3368850648403168
    2. ')' → logprob: -1.4618850946426392
    3. '+' → logprob: -3.2118849754333496
    4. ' +' → logprob: -5.46188497543335
    5. '...' → logprob: -5.83688497543335
    6. '#' → logprob: -6.96188497543335
    7. ')+(' → logprob: -7.33688497543335
    8. '...)' → logprob: -7.58688497543335
    9. 'subset' → logprob: -7.58688497543335
    10. '   ' → logprob: -7.71188497543335

Token 1110: 'market' (ID: 27236)
  Prédit: 'market'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'market' → logprob: -0.5795062780380249
    2. '0' → logprob: -0.8295062780380249
    3. 'subset' → logprob: -6.7045063972473145
    4. '(' → logprob: -7.0795063972473145
    5. ' market' → logprob: -7.3295063972473145
    6. ' ' → logprob: -8.329505920410156
    7. 'markets' → logprob: -9.079505920410156
    8. ')' → logprob: -9.329505920410156
    9. '
' → logprob: -9.329505920410156
    10. '[' → logprob: -9.954505920410156

Token 1111: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.202841117978096
    2. ')+' → logprob: -1.7028411626815796
    3. ')
' → logprob: -7.702841281890869
    4. '+' → logprob: -7.702841281890869
    5. ')+(' → logprob: -8.827840805053711
    6. ')-' → logprob: -9.452840805053711
    7. 'subset' → logprob: -10.452840805053711
    8. ' +' → logprob: -10.702840805053711
    9. ' )' → logprob: -10.827840805053711
    10. ')*' → logprob: -10.952840805053711

Token 1112: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0746239498257637
    2. '+' → logprob: -2.9496240615844727
    3. ' +' → logprob: -5.449624061584473
    4. '+
' → logprob: -5.949624061584473
    5. '#' → logprob: -6.699624061584473
    6. '...' → logprob: -6.824624061584473
    7. '<|end|>' → logprob: -6.824624061584473
    8. ',' → logprob: -7.199624061584473
    9. 't' → logprob: -7.324624061584473
    10. '       ' → logprob: -7.449624061584473

Token 1113: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.37024083733558655
    2. '+' → logprob: -2.2452409267425537
    3. 't' → logprob: -3.1202409267425537
    4. ' tsp' → logprob: -3.1202409267425537
    5. '#' (adapté à ' #') → logprob: -3.2452409267425537
    6. 'cost' → logprob: -4.120240688323975
    7. '+
' → logprob: -4.870240688323975
    8. 'dist' → logprob: -5.120240688323975
    9. 'from' → logprob: -5.620240688323975
    10. ' +' → logprob: -5.620240688323975

Token 1114: ' Let's' (ID: 41021)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5837228298187256
    2. '#' → logprob: -1.2087228298187256
    3. 't' → logprob: -3.7087228298187256
    4. 'def' → logprob: -3.8337228298187256
    5. ' tsp' → logprob: -3.8337228298187256
    6. 'from' → logprob: -3.9587228298187256
    7. 'dp' → logprob: -4.458723068237305
    8. ' #' → logprob: -5.208723068237305
    9. '       ' → logprob: -5.458723068237305
    10. 'subset' → logprob: -5.708723068237305

Token 1115: ' approximate' (ID: 68753)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.7589990496635437
    2. 'import' → logprob: -1.1339991092681885
    3. 'from' → logprob: -1.6339991092681885
    4. '   ' → logprob: -4.758998870849609
    5. '#' → logprob: -6.633998870849609
    6. '           ' → logprob: -7.383998870849609
    7. '```' → logprob: -7.383998870849609
    8. 'def' → logprob: -7.508998870849609
    9. '       ' → logprob: -7.633998870849609
    10. 'break' → logprob: -7.758998870849609

Token 1116: ' by' (ID: 656)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12068840861320496
    2. '+' → logprob: -3.1206884384155273
    3. '            ' → logprob: -3.8706884384155273
    4. '               ' → logprob: -5.495688438415527
    5. 'continue' → logprob: -5.495688438415527
    6. ')' → logprob: -5.495688438415527
    7. '       ' → logprob: -5.995688438415527
    8. ' +' → logprob: -5.995688438415527
    9. '                   ' → logprob: -6.120688438415527
    10. 'dist' → logprob: -6.120688438415527

Token 1117: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.14381277561187744
    2. 'dist' → logprob: -2.268812656402588
    3. ' sum' → logprob: -4.768812656402588
    4. '0' → logprob: -5.143812656402588
    5. 'sub' → logprob: -6.268812656402588
    6. '   ' → logprob: -6.393812656402588
    7. 'max' → logprob: -6.518812656402588
    8. 'min' → logprob: -6.518812656402588
    9. 'T' → logprob: -6.643812656402588
    10. '#' → logprob: -6.768812656402588

Token 1118: ' of' (ID: 328)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5447467565536499
    2. '           ' → logprob: -1.66974675655365
    3. 'for' → logprob: -3.4197468757629395
    4. '+
' → logprob: -3.5447468757629395
    5. 'dist' → logprob: -3.5447468757629395
    6. '+=' → logprob: -3.6697468757629395
    7. ')+' → logprob: -4.4197468757629395
    8. ' +' → logprob: -4.4197468757629395
    9. '               ' → logprob: -4.5447468757629395
    10. ' +=' → logprob: -4.6697468757629395

Token 1119: ' distances' (ID: 48294)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00023238400171976537
    2. 'min' → logprob: -9.250232696533203
    3. '(dist' → logprob: -9.750232696533203
    4. '2' → logprob: -11.000232696533203
    5. '```' → logprob: -11.375232696533203
    6. ' dist' → logprob: -11.625232696533203
    7. '0' → logprob: -11.625232696533203
    8. '[' → logprob: -12.250232696533203
    9. '   ' → logprob: -12.500232696533203
    10. '1' → logprob: -12.875232696533203

Token 1120: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24975568056106567
    2. '+' → logprob: -1.999755620956421
    3. ' +' → logprob: -3.749755620956421
    4. 'for' → logprob: -4.499755859375
    5. ' for' → logprob: -4.874755859375
    6. ')' → logprob: -5.124755859375
    7. '               ' → logprob: -5.249755859375
    8. '+
' → logprob: -5.374755859375
    9. '                   ' → logprob: -5.499755859375
    10. ' +
' → logprob: -5.749755859375

Token 1121: '/from' (ID: 194031)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3425924479961395
    2. 'visit' → logprob: -2.217592477798462
    3. 'cities' → logprob: -2.842592477798462
    4. 'subset' → logprob: -2.842592477798462
    5. 'market' → logprob: -3.467592477798462
    6. 'each' → logprob: -4.092592239379883
    7. 'all' → logprob: -5.842592239379883
    8. ' ' → logprob: -5.967592239379883
    9. ' cities' → logprob: -6.092592239379883
    10. ' visit' → logprob: -6.342592239379883

Token 1122: ' market' (ID: 2910)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.2751036584377289
    2. 'city' → logprob: -2.1501035690307617
    3. 'cities' → logprob: -2.7751035690307617
    4. '0' → logprob: -3.4001035690307617
    5. ' subset' → logprob: -4.900103569030762
    6. 's' → logprob: -5.275103569030762
    7. 'market' → logprob: -5.650103569030762
    8. 'each' → logprob: -5.775103569030762
    9. 'sub' → logprob: -6.525103569030762
    10. 'un' → logprob: -6.900103569030762

Token 1123: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26172909140586853
    2. 'dist' → logprob: -2.2617290019989014
    3. 'cost' → logprob: -3.2617290019989014
    4. '+' → logprob: -3.5117290019989014
    5. ' dist' → logprob: -4.0117292404174805
    6. ' +' → logprob: -4.5117292404174805
    7. ' cost' → logprob: -5.1367292404174805
    8. 'sum' → logprob: -5.2617292404174805
    9. 'trip' → logprob: -6.5117292404174805
    10. 'total' → logprob: -6.5117292404174805

Token 1124: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.059454888105392456
    2. '+' → logprob: -3.059454917907715
    3. ' for' → logprob: -6.059454917907715
    4. 'for' → logprob: -6.559454917907715
    5. ' +' → logprob: -6.809454917907715
    6. '               ' → logprob: -7.184454917907715
    7. 'continue' → logprob: -7.684454917907715
    8. '```' → logprob: -7.684454917907715
    9. '...' → logprob: -7.809454917907715
    10. '       ' → logprob: -8.059454917907715

Token 1125: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3440791368484497
    2. '+' → logprob: -1.5940791368484497
    3. '+
' → logprob: -4.59407901763916
    4. '0' → logprob: -4.84407901763916
    5. '...' → logprob: -5.09407901763916
    6. '               ' → logprob: -5.09407901763916
    7. 'cost' → logprob: -5.09407901763916
    8. 'total' → logprob: -5.71907901763916
    9. '                   ' → logprob: -5.84407901763916
    10. 'sum' → logprob: -5.84407901763916

Token 1126: ' The' (ID: 623)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8495705127716064
    2. '           ' → logprob: -0.8495705127716064
    3. '#' → logprob: -3.5995705127716064
    4. '+
' → logprob: -4.099570274353027
    5. ' +' → logprob: -4.349570274353027
    6. 'for' → logprob: -4.599570274353027
    7. '               ' → logprob: -4.599570274353027
    8. '0' → logprob: -4.849570274353027
    9. 'sum' → logprob: -5.099570274353027
    10. ')' → logprob: -5.099570274353027

Token 1127: ' minimal' (ID: 19957)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -1.327196478843689
    2. ' subset' → logprob: -1.827196478843689
    3. 'subset' → logprob: -2.8271965980529785
    4. ' best' → logprob: -3.4521965980529785
    5. ' for' → logprob: -3.5771965980529785
    6. ')' → logprob: -3.7021965980529785
    7. ' cost' → logprob: -3.7021965980529785
    8. 'cost' → logprob: -3.8271965980529785
    9. ' rest' → logprob: -3.8271965980529785
    10. '+' → logprob: -3.9521965980529785

Token 1128: ' route' (ID: 9656)
  Prédit: ' spanning'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' spanning' → logprob: -1.2401429414749146
    2. ' subset' → logprob: -1.3651429414749146
    3. 'cost' → logprob: -2.365142822265625
    4. 'sp' → logprob: -3.115142822265625
    5. ' cost' → logprob: -3.365142822265625
    6. 'subset' → logprob: -3.490142822265625
    7. 'time' → logprob: -3.865142822265625
    8. ' time' → logprob: -3.865142822265625
    9. 'distance' → logprob: -3.990142822265625
    10. ' additional' → logprob: -4.115142822265625

Token 1129: ' visiting' (ID: 18798)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4982112646102905
    2. '=' → logprob: -2.49821138381958
    3. ' +' → logprob: -2.87321138381958
    4. ')' → logprob: -3.12321138381958
    5. '           ' → logprob: -3.37321138381958
    6. ':' → logprob: -3.37321138381958
    7. ' =' → logprob: -3.74821138381958
    8. ' +=' → logprob: -4.37321138381958
    9. ' for' → logprob: -4.49821138381958
    10. '+
' → logprob: -4.49821138381958

Token 1130: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.4561566412448883
    2. 'all' → logprob: -1.081156611442566
    3. 'subset' → logprob: -4.8311567306518555
    4. ' subset' → logprob: -5.0811567306518555
    5. 'each' → logprob: -5.3311567306518555
    6. ' each' → logprob: -6.2061567306518555
    7. 'the' → logprob: -6.3311567306518555
    8. 'cities' → logprob: -6.4561567306518555
    9. ' the' → logprob: -6.8311567306518555
    10. 'market' → logprob: -7.5811567306518555

Token 1131: ' cities' (ID: 15636)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.39990973472595215
    2. 'cities' → logprob: -1.1499097347259521
    3. ' subset' → logprob: -4.774909973144531
    4. ' cities' → logprob: -5.774909973144531
    5. 'sub' → logprob: -7.774909973144531
    6. 'un' → logprob: -8.899909973144531
    7. 'selected' → logprob: -9.024909973144531
    8. 'city' → logprob: -9.399909973144531
    9. 'nodes' → logprob: -9.524909973144531
    10. '_subset' → logprob: -9.524909973144531

Token 1132: ' from' (ID: 591)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7025666236877441
    2. 'in' → logprob: -0.9525666236877441
    3. 'subset' → logprob: -3.327566623687744
    4. ' and' → logprob: -4.202566623687744
    5. ' subset' → logprob: -4.202566623687744
    6. ' is' → logprob: -4.577566623687744
    7. ',' → logprob: -4.827566623687744
    8. 'and' → logprob: -4.952566623687744
    9. '+' → logprob: -5.577566623687744
    10. '=' → logprob: -5.702566623687744

Token 1133: ' market' (ID: 2910)
  Prédit: 'market'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'market' → logprob: -0.13811694085597992
    2. ' market' → logprob: -2.2631168365478516
    3. '0' → logprob: -4.013116836547852
    4. 'subset' → logprob: -5.388116836547852
    5. ' ' → logprob: -7.638116836547852
    6. '```' → logprob: -7.763116836547852
    7. ' subset' → logprob: -8.013116836547852
    8. '
' → logprob: -8.263116836547852
    9. 'the' → logprob: -8.638116836547852
    10. ' the' → logprob: -9.138116836547852

Token 1134: ' and' (ID: 326)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.9297508001327515
    2. ')+' → logprob: -2.054750919342041
    3. ')' → logprob: -2.429750919342041
    4. ' and' → logprob: -2.554750919342041
    5. ' +' → logprob: -2.554750919342041
    6. '           ' → logprob: -2.679750919342041
    7. ',' → logprob: -3.054750919342041
    8. '...' → logprob: -3.179750919342041
    9. ':' → logprob: -3.179750919342041
    10. '#' → logprob: -3.304750919342041

Token 1135: ' returning' (ID: 22968)
  Prédit: 'back'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'back' → logprob: -0.6882261633872986
    2. 'return' → logprob: -1.4382262229919434
    3. ' back' → logprob: -1.9382262229919434
    4. 'to' → logprob: -2.3132262229919434
    5. ' returning' → logprob: -5.563226222991943
    6. '0' → logprob: -5.813226222991943
    7. ' to' → logprob: -5.813226222991943
    8. 'market' → logprob: -6.438226222991943
    9. '#' → logprob: -6.813226222991943
    10. 'ending' → logprob: -6.938226222991943

Token 1136: ' market' (ID: 2910)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.136397123336792
    2. 'to' → logprob: -1.261397123336792
    3. '+' → logprob: -2.386397123336792
    4. '0' → logprob: -2.386397123336792
    5. '=' → logprob: -3.261397123336792
    6. '_' → logprob: -3.636397123336792
    7. '_to' → logprob: -4.011397361755371
    8. '
' → logprob: -4.636397361755371
    9. ' =' → logprob: -4.636397361755371
    10. 'subset' → logprob: -4.761397361755371

Token 1137: ' is' (ID: 382)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08064540475606918
    2. '+' → logprob: -3.3306453227996826
    3. ' +' → logprob: -4.455645561218262
    4. ',' → logprob: -5.455645561218262
    5. ':' → logprob: -5.830645561218262
    6. '...' → logprob: -6.205645561218262
    7. '               ' → logprob: -6.205645561218262
    8. ' =' → logprob: -6.580645561218262
    9. ')' → logprob: -6.705645561218262
    10. '                   ' → logprob: -6.705645561218262

Token 1138: ' at' (ID: 540)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.6757635474205017
    2. '0' → logprob: -1.5507636070251465
    3. 'min' → logprob: -2.8007636070251465
    4. 'dist' → logprob: -3.0507636070251465
    5. ' sum' → logprob: -3.3007636070251465
    6. 'max' → logprob: -3.9257636070251465
    7. '(sum' → logprob: -4.1757636070251465
    8. '1' → logprob: -4.4257636070251465
    9. ' W' → logprob: -4.8007636070251465
    10. '           ' → logprob: -4.8007636070251465

Token 1139: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.4307726323604584
    2. 'most' → logprob: -1.0557726621627808
    3. '
' → logprob: -6.68077278137207
    4. ' least' → logprob: -8.05577278137207
    5. 'best' → logprob: -8.68077278137207
    6. 'minimum' → logprob: -9.05577278137207
    7. ' most' → logprob: -9.68077278137207
    8. '   ' → logprob: -9.68077278137207
    9. 'wor' → logprob: -11.18077278137207
    10. 'le' → logprob: -11.68077278137207

Token 1140: ':
' (ID: 734)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.21144798398017883
    2. 'min' → logprob: -2.2114479541778564
    3. '0' → logprob: -3.9614479541778564
    4. ' sum' → logprob: -3.9614479541778564
    5. 'max' → logprob: -4.5864481925964355
    6. 'N' → logprob: -5.2114481925964355
    7. ' min' → logprob: -5.3364481925964355
    8. 'dist' → logprob: -5.3364481925964355
    9. 'W' → logprob: -5.4614481925964355
    10. '(sum' → logprob: -5.9614481925964355

Token 1141: '           ' (ID: 352)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.0013043880462646
    2. ' sum' → logprob: -1.8763043880462646
    3. ' W' → logprob: -2.0013043880462646
    4. '+' → logprob: -2.3763043880462646
    5. '0' → logprob: -2.3763043880462646
    6. '           ' → logprob: -2.8763043880462646
    7. '1' → logprob: -4.001304626464844
    8. '(sum' → logprob: -4.501304626464844
    9. ')' → logprob: -5.126304626464844
    10. 'W' → logprob: -5.251304626464844

Token 1142: ' #' (ID: 1069)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.4246576428413391
    2. ' sum' → logprob: -2.2996575832366943
    3. '           ' → logprob: -2.7996575832366943
    4. '+' → logprob: -3.4246575832366943
    5. '#' (adapté à ' #') → logprob: -3.6746575832366943
    6. '0' → logprob: -3.6746575832366943
    7. ' W' → logprob: -4.049657821655273
    8. 'total' → logprob: -4.174657821655273
    9. '```' → logprob: -5.049657821655273
    10. 'W' → logprob: -5.174657821655273

Token 1143: ' minimal' (ID: 19957)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1163723468780518
    2. 'sum' → logprob: -1.4913723468780518
    3. '           ' → logprob: -1.8663723468780518
    4. '+' → logprob: -2.1163723468780518
    5. '0' → logprob: -2.9913723468780518
    6. ' sum' → logprob: -3.2413723468780518
    7. ' #' → logprob: -4.241372108459473
    8. ' +' → logprob: -4.991372108459473
    9. '```' → logprob: -5.116372108459473
    10. '...' → logprob: -5.241372108459473

Token 1144: ' spanning' (ID: 66335)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.7979583740234375
    2. 'cost' → logprob: -2.1729583740234375
    3. 'subset' → logprob: -2.4229583740234375
    4. 'sum' → logprob: -2.7979583740234375
    5. '(dist' → logprob: -3.2979583740234375
    6. '1' → logprob: -3.5479583740234375
    7. 'for' → logprob: -3.5479583740234375
    8. '(sub' → logprob: -4.0479583740234375
    9. ')' → logprob: -4.1729583740234375
    10. 'sub' → logprob: -4.1729583740234375

Token 1145: ':' (ID: 25)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.017403854057192802
    2. 'ree' → logprob: -4.142404079437256
    3. ' tree' → logprob: -7.392404079437256
    4. '_tree' → logprob: -8.142403602600098
    5. '
' → logprob: -9.017403602600098
    6. 't' → logprob: -9.642403602600098
    7. 'Tree' → logprob: -10.017403602600098
    8. '-tree' → logprob: -10.267403602600098
    9. '```' → logprob: -10.267403602600098
    10. 'trees' → logprob: -10.642403602600098

Token 1146: ' ' (ID: 220)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.7973204255104065
    2. 'subset' → logprob: -2.4223203659057617
    3. 'sub' → logprob: -2.7973203659057617
    4. '0' → logprob: -2.7973203659057617
    5. 'for' → logprob: -3.1723203659057617
    6. '...' → logprob: -3.1723203659057617
    7. 'dist' → logprob: -3.2973203659057617
    8. '+' → logprob: -3.9223203659057617
    9. ' sum' → logprob: -4.047320365905762
    10. 'weight' → logprob: -4.297320365905762

Token 1147: '2' (ID: 17)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'subset' → logprob: -1.5835644006729126
    2. 'sum' → logprob: -1.8335644006729126
    3. 'sub' → logprob: -1.9585644006729126
    4. 'u' → logprob: -2.208564281463623
    5. '1' → logprob: -2.708564281463623
    6. 'N' → logprob: -2.958564281463623
    7. 'len' → logprob: -3.583564281463623
    8. ')' → logprob: -3.708564281463623
    9. '```' → logprob: -3.833564281463623
    10. ' subset' → logprob: -4.083564281463623

Token 1148: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.18131880462169647
    2. ' *' → logprob: -1.806318759918213
    3. '*(' → logprob: -7.056318759918213
    4. 'sum' → logprob: -7.806318759918213
    5. '+' → logprob: -9.181319236755371
    6. ' +' → logprob: -9.306319236755371
    7. '(sum' → logprob: -10.556319236755371
    8. ' sum' → logprob: -11.056319236755371
    9. '*
' → logprob: -11.681319236755371
    10. '**' → logprob: -11.681319236755371

Token 1149: 'sum' (ID: 12298)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5189850330352783
    2. 'sum' → logprob: -1.0189850330352783
    3. 'max' → logprob: -4.518984794616699
    4. '(min' → logprob: -5.018984794616699
    5. 'W' → logprob: -5.143984794616699
    6. 'M' → logprob: -5.643984794616699
    7. '(sum' → logprob: -5.643984794616699
    8. 'len' → logprob: -5.768984794616699
    9. 'sub' → logprob: -5.768984794616699
    10. '0' → logprob: -5.893984794616699

Token 1150: ' dist' (ID: 3601)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.43774405121803284
    2. '(sub' → logprob: -2.062744140625
    3. '_' → logprob: -3.312744140625
    4. '(' → logprob: -3.437744140625
    5. 'for' → logprob: -3.687744140625
    6. 'subset' → logprob: -3.937744140625
    7. 'sub' → logprob: -4.562744140625
    8. '((' → logprob: -4.812744140625
    9. ')+' → logprob: -4.812744140625
    10. ')
' → logprob: -4.812744140625

Token 1151: ' between' (ID: 2870)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3991049528121948
    2. 'to' → logprob: -1.8991049528121948
    3. '+' → logprob: -2.2741050720214844
    4. '(' → logprob: -2.2741050720214844
    5. '(
' → logprob: -2.7741050720214844
    6. 'from' → logprob: -3.0241050720214844
    7. '(sub' → logprob: -3.3991050720214844
    8. '[' → logprob: -3.5241050720214844
    9. '_to' → logprob: -3.8991050720214844
    10. '   ' → logprob: -3.8991050720214844

Token 1152: ' market' (ID: 2910)
  Prédit: 'market'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'market' → logprob: -0.4304339289665222
    2. 'subset' → logprob: -1.930433988571167
    3. 'cities' → logprob: -1.930433988571167
    4. '0' → logprob: -3.555433988571167
    5. 'city' → logprob: -4.930433750152588
    6. 'i' → logprob: -5.055433750152588
    7. 'all' → logprob: -5.305433750152588
    8. 'markets' → logprob: -5.930433750152588
    9. 'each' → logprob: -6.055433750152588
    10. 'the' → logprob: -6.680433750152588

Token 1153: ' and' (ID: 326)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9312319159507751
    2. ')' → logprob: -1.55623197555542
    3. '[' → logprob: -2.43123197555542
    4. 'to' → logprob: -3.43123197555542
    5. '(sub' → logprob: -3.55623197555542
    6. ')+' → logprob: -3.55623197555542
    7. '(' → logprob: -3.80623197555542
    8. 's' → logprob: -3.93123197555542
    9. 'from' → logprob: -3.93123197555542
    10. '```' → logprob: -4.18123197555542

Token 1154: ' those' (ID: 2617)
  Prédit: 'city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'city' → logprob: -0.765623927116394
    2. 'cities' → logprob: -1.140623927116394
    3. 'subset' → logprob: -2.3906240463256836
    4. 'c' → logprob: -3.5156240463256836
    5. 'i' → logprob: -3.6406240463256836
    6. '0' → logprob: -3.8906240463256836
    7. 'sub' → logprob: -4.140624046325684
    8. 'market' → logprob: -4.640624046325684
    9. 's' → logprob: -4.765624046325684
    10. 'each' → logprob: -5.515624046325684

Token 1155: ' cities' (ID: 15636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4528498649597168
    2. '_' → logprob: -2.827849864959717
    3. 's' → logprob: -3.452849864959717
    4. '[' → logprob: -3.452849864959717
    5. '   ' → logprob: -3.702849864959717
    6. 'subset' → logprob: -3.827849864959717
    7. ')
' → logprob: -3.952849864959717
    8. ']' → logprob: -4.202849864959717
    9. '[i' → logprob: -4.452849864959717
    10. '(sub' → logprob: -4.452849864959717

Token 1156: ' in' (ID: 306)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.055631622672080994
    2. '+' → logprob: -3.680631637573242
    3. 'sum' → logprob: -5.555631637573242
    4. 'total' → logprob: -5.680631637573242
    5. '+
' → logprob: -5.930631637573242
    6. ' +' → logprob: -6.305631637573242
    7. '               ' → logprob: -6.555631637573242
    8. 'cost' → logprob: -6.680631637573242
    9. ',' → logprob: -6.805631637573242
    10. '   ' → logprob: -6.930631637573242

Token 1157: ' worst' (ID: 20486)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.006817908491939306
    2. 'range' → logprob: -5.256817817687988
    3. '[' → logprob: -7.506817817687988
    4. 'visited' → logprob: -8.256817817687988
    5. '
' → logprob: -8.381817817687988
    6. 'sub' → logprob: -9.006817817687988
    7. '[
' → logprob: -9.131817817687988
    8. ' subset' → logprob: -10.006817817687988
    9. '0' → logprob: -10.256817817687988
    10. 'for' → logprob: -10.381817817687988

Token 1158: ' case' (ID: 1890)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.20704661309719086
    2. '```' → logprob: -3.3320465087890625
    3. ')' → logprob: -3.5820465087890625
    4. '_mask' → logprob: -4.3320465087890625
    5. '+' → logprob: -4.4570465087890625
    6. ' case' → logprob: -4.5820465087890625
    7. 'mask' → logprob: -4.7070465087890625
    8. 'sub' → logprob: -4.7070465087890625
    9. '_case' → logprob: -4.8320465087890625
    10. '   ' → logprob: -4.9570465087890625

Token 1159: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07047718018293381
    2. '+' → logprob: -3.445477247238159
    3. '               ' → logprob: -4.32047700881958
    4. '                   ' → logprob: -5.69547700881958
    5. ')' → logprob: -5.82047700881958
    6. '       ' → logprob: -5.94547700881958
    7. ' +' → logprob: -6.07047700881958
    8. '                       ' → logprob: -6.57047700881958
    9. '...' → logprob: -6.82047700881958
    10. ')+' → logprob: -6.82047700881958

Token 1160: 'go' (ID: 2319)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.028001682832837105
    2. ')
' → logprob: -4.77800178527832
    3. '1' → logprob: -5.65300178527832
    4. ')+' → logprob: -5.90300178527832
    5. 'subset' → logprob: -6.27800178527832
    6. ' )' → logprob: -7.02800178527832
    7. '0' → logprob: -7.15300178527832
    8. '):
' → logprob: -7.27800178527832
    9. '...' → logprob: -7.27800178527832
    10. ')-' → logprob: -7.52800178527832

Token 1161: ' and' (ID: 326)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7559548616409302
    2. ')' → logprob: -2.3809547424316406
    3. 'to' → logprob: -3.0059547424316406
    4. 'through' → logprob: -3.1309547424316406
    5. '           ' → logprob: -3.5059547424316406
    6. ' +' → logprob: -3.6309547424316406
    7. '   ' → logprob: -3.6309547424316406
    8. 'and' → logprob: -3.6309547424316406
    9. 'from' → logprob: -4.255954742431641
    10. ' and' → logprob: -4.380954742431641

Token 1162: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.007276022341102362
    2. 'back' → logprob: -5.1322760581970215
    3. ' return' → logprob: -6.7572760581970215
    4. 'come' → logprob: -9.757275581359863
    5. ' back' → logprob: -10.132275581359863
    6. '
' → logprob: -10.382275581359863
    7. 'receive' → logprob: -11.132275581359863
    8. '   ' → logprob: -11.257275581359863
    9. ' ' → logprob: -12.007275581359863
    10. 'from' → logprob: -12.382275581359863

Token 1163: ' city' (ID: 5030)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07771417498588562
    2. ')
' → logprob: -3.202714204788208
    3. ')+' → logprob: -3.827714204788208
    4. '+' → logprob: -6.202713966369629
    5. ')*' → logprob: -6.202713966369629
    6. '):
' → logprob: -6.577713966369629
    7. ')-' → logprob: -6.577713966369629
    8. '```' → logprob: -6.577713966369629
    9. 's' → logprob: -7.827713966369629
    10. '):' → logprob: -8.202713966369629

Token 1164: ' by' (ID: 656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5381792187690735
    2. ')+' → logprob: -1.4131791591644287
    3. 's' → logprob: -2.1631791591644287
    4. ')
' → logprob: -3.7881791591644287
    5. ')s' → logprob: -5.038179397583008
    6. '))' → logprob: -5.788179397583008
    7. ')*' → logprob: -6.038179397583008
    8. ']+' → logprob: -6.163179397583008
    9. 'subset' → logprob: -6.288179397583008
    10. '+' → logprob: -6.413179397583008

Token 1165: ' city' (ID: 5030)
  Prédit: 'city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'city' → logprob: -0.007201340049505234
    2. 'subset' → logprob: -6.132201194763184
    3. ' city' → logprob: -6.507201194763184
    4. '1' → logprob: -6.507201194763184
    5. 'each' → logprob: -7.257201194763184
    6. 'one' → logprob: -7.257201194763184
    7. 'sub' → logprob: -8.757201194763184
    8. '
' → logprob: -9.382201194763184
    9. 'distance' → logprob: -10.382201194763184
    10. 'bit' → logprob: -10.382201194763184

Token 1166: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06930264085531235
    2. ')
' → logprob: -3.194302558898926
    3. '):
' → logprob: -4.944302558898926
    4. ')+' → logprob: -4.944302558898926
    5. '           ' → logprob: -5.319302558898926
    6. '):' → logprob: -6.069302558898926
    7. ')*' → logprob: -6.944302558898926
    8. '```' → logprob: -7.569302558898926
    9. ')-' → logprob: -7.694302558898926
    10. '+' → logprob: -8.069302558898926

Token 1167: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08006150275468826
    2. '+' → logprob: -2.830061435699463
    3. ')' → logprob: -5.080061435699463
    4. ' for' → logprob: -6.455061435699463
    5. 'for' → logprob: -6.580061435699463
    6. '               ' → logprob: -6.705061435699463
    7. '...' → logprob: -6.830061435699463
    8. ' +' → logprob: -6.830061435699463
    9. '       ' → logprob: -7.205061435699463
    10. '            ' → logprob: -7.580061435699463

Token 1168: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2678397595882416
    2. '+' → logprob: -1.642839789390564
    3. '+
' → logprob: -4.1428399085998535
    4. '               ' → logprob: -5.0178399085998535
    5. ' +' → logprob: -5.3928399085998535
    6. '       ' → logprob: -6.5178399085998535
    7. '                   ' → logprob: -6.5178399085998535
    8. ')' → logprob: -6.5178399085998535
    9. '            ' → logprob: -6.8928399085998535
    10. '...' → logprob: -7.0178399085998535

Token 1169: ' To' (ID: 2514)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13364127278327942
    2. '+' → logprob: -2.758641242980957
    3. 'for' → logprob: -5.008641242980957
    4. ' for' → logprob: -5.008641242980957
    5. '1' → logprob: -5.133641242980957
    6. '               ' → logprob: -5.508641242980957
    7. '+
' → logprob: -5.508641242980957
    8. '#' → logprob: -5.633641242980957
    9. '       ' → logprob: -5.758641242980957
    10. ')' → logprob: -5.758641242980957

Token 1170: ' estimate' (ID: 24572)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.3296488523483276
    2. 'complete' → logprob: -1.4546488523483276
    3. 'simpl' → logprob: -2.704648971557617
    4. 'opt' → logprob: -2.704648971557617
    5. 'min' → logprob: -2.954648971557617
    6. 'avoid' → logprob: -3.204648971557617
    7. 'reduce' → logprob: -3.454648971557617
    8. 'save' → logprob: -3.454648971557617
    9. 'speed' → logprob: -3.454648971557617
    10. 'keep' → logprob: -3.704648971557617

Token 1171: ' tight' (ID: 17246)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1326402425765991
    2. ' cost' → logprob: -1.5076402425765991
    3. 'cost' → logprob: -1.7576402425765991
    4. 'dist' → logprob: -3.1326403617858887
    5. '#' → logprob: -3.2576403617858887
    6. ' total' → logprob: -3.3826403617858887
    7. 'total' → logprob: -3.6326403617858887
    8. 'sum' → logprob: -4.132640361785889
    9. ' #' → logprob: -4.257640361785889
    10. ' sum' → logprob: -4.257640361785889

Token 1172: ' travel' (ID: 6410)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5126440525054932
    2. ')' → logprob: -1.7626440525054932
    3. '       ' → logprob: -3.262644052505493
    4. 'est' → logprob: -3.762644052505493
    5. ' +' → logprob: -4.012643814086914
    6. '+' → logprob: -4.012643814086914
    7. '
' → logprob: -4.137643814086914
    8. 'for' → logprob: -4.262643814086914
    9. '                   ' → logprob: -4.637643814086914
    10. ' for' → logprob: -4.762643814086914

Token 1173: ' time' (ID: 1058)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.9189625978469849
    2. '_cost' → logprob: -1.1689625978469849
    3. 'cost' → logprob: -2.2939624786376953
    4. 'time' → logprob: -2.5439624786376953
    5. '_mask' → logprob: -3.4189624786376953
    6. 'mask' → logprob: -4.418962478637695
    7. ')' → logprob: -4.668962478637695
    8. ' time' → logprob: -4.793962478637695
    9. '_count' → logprob: -4.793962478637695
    10. '_distance' → logprob: -5.043962478637695

Token 1174: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10066629201173782
    2. '#' → logprob: -4.350666522979736
    3. '+' → logprob: -4.475666522979736
    4. ',' → logprob: -4.600666522979736
    5. '   ' → logprob: -5.100666522979736
    6. ')' → logprob: -5.100666522979736
    7. '       ' → logprob: -5.100666522979736
    8. '...' → logprob: -5.225666522979736
    9. ' for' → logprob: -5.225666522979736
    10. ':' → logprob: -5.600666522979736

Token 1175: ' we' (ID: 581)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7829405665397644
    2. '#' → logprob: -2.282940626144409
    3. 'continue' → logprob: -2.282940626144409
    4. 'import' → logprob: -3.032940626144409
    5. 'from' → logprob: -3.532940626144409
    6. ' continue' → logprob: -3.532940626144409
    7. 'min' → logprob: -3.657940626144409
    8. 'dp' → logprob: -3.782940626144409
    9. 'subset' → logprob: -3.907940626144409
    10. ' subset' → logprob: -4.15794038772583

Token 1176: ' calculate' (ID: 17950)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.4023348093032837
    2. ' continue' → logprob: -1.4023348093032837
    3. 'import' → logprob: -4.027334690093994
    4. 'for' → logprob: -4.777334690093994
    5. 'calculate' → logprob: -5.027334690093994
    6. '#' → logprob: -5.277334690093994
    7. ')' → logprob: -5.402334690093994
    8. '
' → logprob: -5.777334690093994
    9. ' can' → logprob: -5.902334690093994
    10. 'can' → logprob: -5.902334690093994

Token 1177: ' T' (ID: 353)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7791338562965393
    2. 'from' → logprob: -0.9041338562965393
    3. 'min' → logprob: -2.6541337966918945
    4. 'subset' → logprob: -4.1541337966918945
    5. 'dp' → logprob: -4.5291337966918945
    6. '```' → logprob: -5.1541337966918945
    7. '
' → logprob: -5.4041337966918945
    8. ' import' → logprob: -5.4041337966918945
    9. 'dist' → logprob: -5.5291337966918945
    10. 'def' → logprob: -5.7791337966918945

Token 1178: 'SP' (ID: 6657)
  Prédit: 'SP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SP' → logprob: -0.03446558862924576
    2. 'sp' → logprob: -3.6594655513763428
    3. '#' → logprob: -5.909465789794922
    4. '
' → logprob: -6.284465789794922
    5. 'S' → logprob: -6.534465789794922
    6. 'subset' → logprob: -7.284465789794922
    7. 'SM' → logprob: -8.409465789794922
    8. 'ime' → logprob: -8.409465789794922
    9. 'sub' → logprob: -9.534465789794922
    10. 'import' → logprob: -9.534465789794922

Token 1179: ' starting' (ID: 8601)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6612409949302673
    2. 'from' → logprob: -1.286241054534912
    3. 'import' → logprob: -2.411241054534912
    4. '#' → logprob: -3.411241054534912
    5. 'if' → logprob: -4.036241054534912
    6. 'def' → logprob: -4.036241054534912
    7. ' from' → logprob: -4.161241054534912
    8. 'dp' → logprob: -5.411241054534912
    9. '       ' → logprob: -5.536241054534912
    10. ' if' → logprob: -5.911241054534912

Token 1180: ' and' (ID: 326)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.18500666320323944
    2. 'at' → logprob: -2.310006618499756
    3. 'subset' → logprob: -3.685006618499756
    4. '0' → logprob: -4.310006618499756
    5. 'with' → logprob: -4.560006618499756
    6. 'by' → logprob: -5.810006618499756
    7. 'and' → logprob: -5.935006618499756
    8. ' at' → logprob: -5.935006618499756
    9. 'import' → logprob: -6.435006618499756
    10. 'point' → logprob: -6.560006618499756

Token 1181: ' ending' (ID: 22013)
  Prédit: 'ending'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ending' → logprob: -0.00029613598599098623
    2. ' ending' → logprob: -8.250296592712402
    3. 'return' → logprob: -10.750296592712402
    4. 'fin' → logprob: -12.250296592712402
    5. '   ' → logprob: -12.500296592712402
    6. '0' → logprob: -13.500296592712402
    7. '
' → logprob: -13.750296592712402
    8. '#' → logprob: -14.250296592712402
    9. 'end' → logprob: -14.625296592712402
    10. 'ENDING' → logprob: -15.125296592712402

Token 1182: ' at' (ID: 540)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.14835470914840698
    2. ' at' → logprob: -2.5233547687530518
    3. '0' → logprob: -3.6483547687530518
    4. 'with' → logprob: -4.398354530334473
    5. 'in' → logprob: -4.898354530334473
    6. 'from' → logprob: -6.148354530334473
    7. '```' → logprob: -6.523354530334473
    8. 'subset' → logprob: -6.773354530334473
    9. '=' → logprob: -6.898354530334473
    10. 'city' → logprob: -7.273354530334473

Token 1183: ' market' (ID: 2910)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -4.3822154111694545e-05
    2. 'market' → logprob: -10.250043869018555
    3. 'pos' → logprob: -12.875043869018555
    4. '```' → logprob: -13.125043869018555
    5. '[' → logprob: -13.875043869018555
    6. '
' → logprob: -14.000043869018555
    7. ' ' → logprob: -14.125043869018555
    8. '`' → logprob: -15.000043869018555
    9. '(' → logprob: -15.375043869018555
    10. '#' → logprob: -16.250043869018555

Token 1184: '(' (ID: 7)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.43020060658454895
    2. 'from' → logprob: -1.6802005767822266
    3. 'import' → logprob: -2.5552005767822266
    4. '#' → logprob: -3.9302005767822266
    5. ' from' → logprob: -4.055200576782227
    6. 'def' → logprob: -4.930200576782227
    7. '       ' → logprob: -5.430200576782227
    8. '```' → logprob: -5.680200576782227
    9. 'subset' → logprob: -5.805200576782227
    10. '   ' → logprob: -6.305200576782227

Token 1185: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0022273333743214607
    2. ')' → logprob: -6.377227306365967
    3. ',' → logprob: -8.627227783203125
    4. '(' → logprob: -9.002227783203125
    5. '),' → logprob: -9.377227783203125
    6. '```' → logprob: -9.502227783203125
    7. 'city' → logprob: -12.002227783203125
    8. ')
' → logprob: -12.002227783203125
    9. ' ' → logprob: -12.127227783203125
    10. '[' → logprob: -12.252227783203125

Token 1186: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9340025186538696
    2. ')
' → logprob: -1.6840025186538696
    3. '):
' → logprob: -2.05900239944458
    4. ',' → logprob: -2.30900239944458
    5. '):' → logprob: -2.80900239944458
    6. '),' → logprob: -2.80900239944458
    7. '           ' → logprob: -3.30900239944458
    8. '#' → logprob: -4.93400239944458
    9. ').' → logprob: -5.55900239944458
    10. '
' → logprob: -6.18400239944458

Token 1187: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10821400582790375
    2. ' from' → logprob: -3.7332139015197754
    3. 'import' → logprob: -3.9832139015197754
    4. 'from' → logprob: -4.108213901519775
    5. ' bit' → logprob: -5.108213901519775
    6. '```' → logprob: -5.733213901519775
    7. ' dp' → logprob: -5.733213901519775
    8. ' subset' → logprob: -5.858213901519775
    9. '   ' → logprob: -6.108213901519775
    10. 'dp' → logprob: -6.108213901519775

Token 1188: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.0435196161270142
    2. '           ' → logprob: -1.1685196161270142
    3. 'import' → logprob: -1.5435196161270142
    4. '#' (adapté à ' #') → logprob: -2.6685194969177246
    5. 'dp' → logprob: -3.9185194969177246
    6. 'def' → logprob: -4.293519496917725
    7. 'cities' → logprob: -5.543519496917725
    8. 'city' → logprob: -5.793519496917725
    9. ' from' → logprob: -6.418519496917725
    10. 'if' → logprob: -6.543519496917725

Token 1189: ' To' (ID: 2514)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9692108035087585
    2. 'from' → logprob: -1.3442108631134033
    3. 'import' → logprob: -1.4692108631134033
    4. '#' → logprob: -3.3442108631134033
    5. 'dp' → logprob: -3.5942108631134033
    6. 'def' → logprob: -4.344210624694824
    7. ' from' → logprob: -4.844210624694824
    8. 'city' → logprob: -4.844210624694824
    9. 'cities' → logprob: -4.969210624694824
    10. 'n' → logprob: -5.094210624694824

Token 1190: ' keep' (ID: 3357)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4049066305160522
    2. '           ' → logprob: -1.5299066305160522
    3. 'from' → logprob: -1.7799066305160522
    4. 'import' → logprob: -2.279906749725342
    5. 'calculate' → logprob: -2.779906749725342
    6. 'solve' → logprob: -3.529906749725342
    7. 'subset' → logprob: -3.904906749725342
    8. 'def' → logprob: -4.029906749725342
    9. 'do' → logprob: -4.154906749725342
    10. 'compute' → logprob: -4.279906749725342

Token 1191: ' it' (ID: 480)
  Prédit: 'going'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'going' → logprob: -0.755928635597229
    2. 'calcul' → logprob: -1.755928635597229
    3. 'code' → logprob: -2.3809285163879395
    4. ' going' → logprob: -3.1309285163879395
    5. 'the' → logprob: -3.2559285163879395
    6. 'comput' → logprob: -3.6309285163879395
    7. 'processing' → logprob: -4.0059285163879395
    8. 'reading' → logprob: -4.0059285163879395
    9. '```' → logprob: -4.1309285163879395
    10. 'complex' → logprob: -4.5059285163879395

Token 1192: ' simple' (ID: 4705)
  Prédit: 'short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'short' → logprob: -0.6388570070266724
    2. 'simple' → logprob: -0.8888570070266724
    3. 'going' → logprob: -3.888856887817383
    4. '```' → logprob: -5.638856887817383
    5. 'safe' → logprob: -5.763856887817383
    6. 'fe' → logprob: -5.888856887817383
    7. 'small' → logprob: -5.888856887817383
    8. 'tight' → logprob: -6.013856887817383
    9. 'minimal' → logprob: -6.013856887817383
    10. 'manageable' → logprob: -6.138856887817383

Token 1193: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.039501436054706573
    2. ',' → logprob: -4.539501667022705
    3. ' continue' → logprob: -6.039501667022705
    4. 'subset' → logprob: -6.039501667022705
    5. ' subset' → logprob: -6.039501667022705
    6. ' if' → logprob: -6.164501667022705
    7. '...' → logprob: -6.164501667022705
    8. 'continue' → logprob: -6.289501667022705
    9. 'import' → logprob: -6.414501667022705
    10. '#' → logprob: -6.414501667022705

Token 1194: ' acceptable' (ID: 34028)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.16992294788360596
    2. 'import' → logprob: -2.7949228286743164
    3. 'efficient' → logprob: -4.044922828674316
    4. 'consistent' → logprob: -4.294922828674316
    5. 'pass' → logprob: -4.544922828674316
    6. 'avoid' → logprob: -5.044922828674316
    7. 'complete' → logprob: -5.169922828674316
    8. '...' → logprob: -5.294922828674316
    9. 'correct' → logprob: -5.544922828674316
    10. '           ' → logprob: -5.669922828674316

Token 1195: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1484091877937317
    2. ' continue' → logprob: -3.648409128189087
    3. 'continue' → logprob: -3.773409128189087
    4. '...' → logprob: -4.273409366607666
    5. 'subset' → logprob: -4.398409366607666
    6. '               ' → logprob: -4.523409366607666
    7. ' if' → logprob: -4.898409366607666
    8. ' subset' → logprob: -5.023409366607666
    9. 'import' → logprob: -5.523409366607666
    10. ',' → logprob: -5.773409366607666

Token 1196: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22612665593624115
    2. ' tsp' → logprob: -2.4761266708374023
    3. ' if' → logprob: -3.3511266708374023
    4. 't' → logprob: -4.226126670837402
    5. ' from' → logprob: -4.601126670837402
    6. 'dp' → logprob: -4.726126670837402
    7. ' dp' → logprob: -4.976126670837402
    8. ' subset' → logprob: -5.601126670837402
    9. ' continue' → logprob: -5.601126670837402
    10. 'if' → logprob: -5.601126670837402

Token 1197: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1070449352264404
    2. 'from' → logprob: -1.6070449352264404
    3. 'cities' → logprob: -2.2320449352264404
    4. 'dp' → logprob: -2.8570449352264404
    5. 'subset' → logprob: -2.8570449352264404
    6. 'import' → logprob: -2.9820449352264404
    7. '#' (adapté à ' #') → logprob: -3.4820449352264404
    8. 'def' → logprob: -3.6070449352264404
    9. 'city' → logprob: -3.7320449352264404
    10. 'mask' → logprob: -3.8570449352264404

Token 1198: ' Approx' (ID: 111766)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2861473262310028
    2. 'from' → logprob: -2.661147356033325
    3. 'dp' → logprob: -3.161147356033325
    4. '#' → logprob: -3.411147356033325
    5. 'import' → logprob: -3.536147356033325
    6. 'if' → logprob: -4.411147117614746
    7. 't' → logprob: -4.536147117614746
    8. 'cities' → logprob: -4.536147117614746
    9. 'city' → logprob: -5.036147117614746
    10. 'def' → logprob: -5.286147117614746

Token 1199: 'imate' (ID: 4937)
  Prédit: 'imate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imate' → logprob: -0.002705369610339403
    2. 'mate' → logprob: -6.6277055740356445
    3. '=' → logprob: -8.002705574035645
    4. 'imately' → logprob: -8.502705574035645
    5. 'imat' → logprob: -8.502705574035645
    6. 'imation' → logprob: -8.627705574035645
    7. ' =' → logprob: -9.627705574035645
    8. 'imize' → logprob: -9.877705574035645
    9. 'imated' → logprob: -9.877705574035645
    10. '           ' → logprob: -10.252705574035645

Token 1200: ' travel' (ID: 6410)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1870654821395874
    2. ' dist' → logprob: -2.312065601348877
    3. 'cost' → logprob: -2.312065601348877
    4. 'time' → logprob: -2.562065601348877
    5. ' time' → logprob: -2.812065601348877
    6. 'dist' → logprob: -2.937065601348877
    7. ' cost' → logprob: -2.937065601348877
    8. ' min' → logprob: -4.062065601348877
    9. ' =' → logprob: -4.062065601348877
    10. ' travel' → logprob: -4.187065601348877

Token 1201: ' time' (ID: 1058)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.467163622379303
    2. 'time' → logprob: -2.092163562774658
    3. '_cost' → logprob: -2.467163562774658
    4. '_' → logprob: -2.592163562774658
    5. ' time' → logprob: -3.467163562774658
    6. ' _' → logprob: -3.967163562774658
    7. 'cost' → logprob: -4.217163562774658
    8. '_map' → logprob: -4.842163562774658
    9. ')' → logprob: -5.717163562774658
    10. '_mask' → logprob: -6.342163562774658

Token 1202: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7475119829177856
    2. '           ' → logprob: -1.2475119829177856
    3. ' =' → logprob: -2.122511863708496
    4. '+' → logprob: -3.372511863708496
    5. '+=' → logprob: -3.747511863708496
    6. ' +=' → logprob: -4.372511863708496
    7. ':' → logprob: -4.747511863708496
    8. '            ' → logprob: -5.372511863708496
    9. '               ' → logprob: -5.497511863708496
    10. '=sub' → logprob: -5.622511863708496

Token 1203: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.43503880500793457
    2. '2' → logprob: -1.8100388050079346
    3. 'sum' → logprob: -1.9350388050079346
    4. '0' → logprob: -3.4350388050079346
    5. '           ' → logprob: -5.9350385665893555
    6. 'dp' → logprob: -6.0600385665893555
    7. 'max' → logprob: -6.6850385665893555
    8. 'min' → logprob: -6.9350385665893555
    9. 'T' → logprob: -7.1850385665893555
    10. '1' → logprob: -7.4350385665893555

Token 1204: '(last' (ID: 39599)
  Prédit: '_map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.28270965814590454
    2. '(last' → logprob: -1.4077095985412598
    3. '[last' → logprob: -7.15770959854126
    4. '(' → logprob: -8.657710075378418
    5. '(sub' → logprob: -8.782710075378418
    6. 'last' → logprob: -9.032710075378418
    7. '   ' → logprob: -9.907710075378418
    8. '(pos' → logprob: -10.032710075378418
    9. ')' → logprob: -10.407710075378418
    10. 'Map' → logprob: -10.532710075378418

Token 1205: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1921134740114212
    2. ',last' → logprob: -1.8171135187149048
    3. '(last' → logprob: -4.567113399505615
    4. '[last' → logprob: -7.442113399505615
    5. '(' → logprob: -7.692113399505615
    6. '[' → logprob: -8.192113876342773
    7. ' ,' → logprob: -8.817113876342773
    8. 'last' → logprob: -8.942113876342773
    9. ',[' → logprob: -9.942113876342773
    10. '   ' → logprob: -10.067113876342773

Token 1206: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003079334564972669
    2. ' ' → logprob: -8.1253080368042
    3. ')' → logprob: -11.3753080368042
    4. '```' → logprob: -16.375307083129883
    5. '`' → logprob: -16.625307083129883
    6. '   ' → logprob: -16.750307083129883
    7. '           ' → logprob: -17.000307083129883
    8. '(' → logprob: -17.250307083129883
    9. '[' → logprob: -17.500307083129883
    10. '
' → logprob: -18.000307083129883

Token 1207: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07893671840429306
    2. ')+' → logprob: -2.578936815261841
    3. ' )' → logprob: -10.203936576843262
    4. ')
' → logprob: -12.078936576843262
    5. ')+(' → logprob: -13.828936576843262
    6. '           ' → logprob: -14.203936576843262
    7. '+' → logprob: -14.328936576843262
    8. ')#' → logprob: -15.078936576843262
    9. '+)' → logprob: -15.578936576843262
    10. ')*' → logprob: -15.578936576843262

Token 1208: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16888239979743958
    2. '+' → logprob: -2.043882369995117
    3. ')' → logprob: -3.918882369995117
    4. ')+' → logprob: -5.418882369995117
    5. '           ' → logprob: -7.543882369995117
    6. ' +
' → logprob: -7.543882369995117
    7. ']+' → logprob: -9.418882369995117
    8. '+
' → logprob: -9.793882369995117
    9. '            ' → logprob: -9.918882369995117
    10. ']' → logprob: -10.043882369995117

Token 1209: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.8953016996383667
    2. 'sum' → logprob: -1.5203016996383667
    3. 'dist' → logprob: -2.0203018188476562
    4. 'min' → logprob: -2.2703018188476562
    5. 'subset' → logprob: -2.3953018188476562
    6. 'max' → logprob: -4.270301818847656
    7. 'dp' → logprob: -4.770301818847656
    8. 'T' → logprob: -4.770301818847656
    9. '0' → logprob: -5.020301818847656
    10. '
' → logprob: -5.770301818847656

Token 1210: '2' (ID: 17)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.30935195088386536
    2. 'min' → logprob: -2.059351921081543
    3. 'subset' → logprob: -3.309351921081543
    4. '0' → logprob: -3.559351921081543
    5. '2' → logprob: -3.684351921081543
    6. 'dist' → logprob: -4.059351921081543
    7. 'max' → logprob: -4.184351921081543
    8. 'dp' → logprob: -5.684351921081543
    9. '(sum' → logprob: -5.684351921081543
    10. 'T' → logprob: -5.809351921081543

Token 1211: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.020618733018636703
    2. ' *' → logprob: -3.8956186771392822
    3. '*(' → logprob: -9.895618438720703
    4. '**' → logprob: -11.395618438720703
    5. '*object' → logprob: -12.645618438720703
    6. '*
' → logprob: -12.895618438720703
    7. '*np' → logprob: -13.145618438720703
    8. '*out' → logprob: -13.520618438720703
    9. '*[' → logprob: -13.895618438720703
    10. ')*' → logprob: -14.270618438720703

Token 1212: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0018905533943325281
    2. '(sum' → logprob: -6.501890659332275
    3. 'subset' → logprob: -8.751890182495117
    4. ' sum' → logprob: -9.251890182495117
    5. 'len' → logprob: -9.751890182495117
    6. '
' → logprob: -10.751890182495117
    7. 'max' → logprob: -10.876890182495117
    8. '(' → logprob: -11.001890182495117
    9. 'min' → logprob: -11.376890182495117
    10. '(len' → logprob: -13.626890182495117

Token 1213: ' of' (ID: 328)
  Prédit: '(dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dist' → logprob: -1.177695870399475
    2. '(
' → logprob: -1.302695870399475
    3. '(' → logprob: -1.927695870399475
    4. 'dist' → logprob: -2.3026957511901855
    5. '([' → logprob: -2.8026957511901855
    6. '(sub' → logprob: -3.0526957511901855
    7. '(pos' → logprob: -3.9276957511901855
    8. '[' → logprob: -4.0526957511901855
    9. '(s' → logprob: -5.3026957511901855
    10. '_dist' → logprob: -5.5526957511901855

Token 1214: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.10243798047304153
    2. '(dist' → logprob: -2.852437973022461
    3. 'subset' → logprob: -4.727437973022461
    4. '[' → logprob: -4.977437973022461
    5. 'profit' → logprob: -5.227437973022461
    6. 'markets' → logprob: -5.227437973022461
    7. 'profits' → logprob: -5.852437973022461
    8. ' dist' → logprob: -5.977437973022461
    9. 'pos' → logprob: -6.477437973022461
    10. '(pro' → logprob: -6.477437973022461

Token 1215: ' between' (ID: 2870)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.0943868160247803
    2. '(last' → logprob: -1.7193868160247803
    3. '(sub' → logprob: -1.9693868160247803
    4. '(' → logprob: -2.0943868160247803
    5. 'to' → logprob: -2.5943868160247803
    6. '(m' → logprob: -3.5943868160247803
    7. '(city' → logprob: -3.8443868160247803
    8. '[i' → logprob: -4.094387054443359
    9. '(
' → logprob: -4.344387054443359
    10. '([' → logprob: -4.844387054443359

Token 1216: ' market' (ID: 2910)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7008680701255798
    2. 'subset' → logprob: -0.9508680701255798
    3. 'market' → logprob: -2.4508681297302246
    4. 'markets' → logprob: -4.575868129730225
    5. 'pos' → logprob: -4.825868129730225
    6. '[' → logprob: -5.950868129730225
    7. '
' → logprob: -6.200868129730225
    8. 'cities' → logprob: -6.200868129730225
    9. 'sub' → logprob: -6.575868129730225
    10. 'i' → logprob: -6.825868129730225

Token 1217: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8669092655181885
    2. ',' → logprob: -1.7419092655181885
    3. 'and' → logprob: -1.8669092655181885
    4. '[' → logprob: -2.7419092655181885
    5. '(i' → logprob: -2.7419092655181885
    6. ' and' → logprob: -3.4919092655181885
    7. '[i' → logprob: -3.9919092655181885
    8. '0' → logprob: -4.116909027099609
    9. 'to' → logprob: -4.241909027099609
    10. '][' → logprob: -5.116909027099609

Token 1218: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9515829086303711
    2. 'and' → logprob: -1.576582908630371
    3. '(' → logprob: -1.826582908630371
    4. '[' → logprob: -2.326582908630371
    5. 'i' → logprob: -3.076582908630371
    6. '(i' → logprob: -3.951582908630371
    7. ' and' → logprob: -4.201582908630371
    8. ')' → logprob: -4.326582908630371
    9. '[i' → logprob: -4.701582908630371
    10. '```' → logprob: -4.826582908630371

Token 1219: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07325524836778641
    2. 'and' → logprob: -3.4482553005218506
    3. ')' → logprob: -4.4482550621032715
    4. ',[' → logprob: -4.6982550621032715
    5. ' and' → logprob: -4.9482550621032715
    6. '[' → logprob: -5.4482550621032715
    7. ',i' → logprob: -6.1982550621032715
    8. ',
' → logprob: -6.9482550621032715
    9. ')[' → logprob: -7.3232550621032715
    10. '),' → logprob: -7.5732550621032715

Token 1220: ' and' (ID: 326)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2510777711868286
    2. ',' → logprob: -1.3760777711868286
    3. 'for' → logprob: -2.376077651977539
    4. '(' → logprob: -2.876077651977539
    5. '[i' → logprob: -3.126077651977539
    6. 'to' → logprob: -3.376077651977539
    7. ')' → logprob: -3.501077651977539
    8. '0' → logprob: -3.626077651977539
    9. '           ' → logprob: -3.876077651977539
    10. '
' → logprob: -4.001077651977539

Token 1221: ' cities' (ID: 15636)
  Prédit: 'cities'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cities' → logprob: -1.21665620803833
    2. 'subset' → logprob: -1.46665620803833
    3. 'markets' → logprob: -2.09165620803833
    4. 'i' → logprob: -2.21665620803833
    5. 'pos' → logprob: -2.34165620803833
    6. 'idx' → logprob: -2.71665620803833
    7. 'un' → logprob: -3.34165620803833
    8. 'c' → logprob: -4.59165620803833
    9. 's' → logprob: -4.96665620803833
    10. 'city' → logprob: -5.34165620803833

Token 1222: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08660324662923813
    2. '(' → logprob: -4.211603164672852
    3. ')' → logprob: -4.461603164672852
    4. '(sub' → logprob: -4.586603164672852
    5. ' +' → logprob: -4.711603164672852
    6. '+' → logprob: -4.836603164672852
    7. '   ' → logprob: -5.461603164672852
    8. '               ' → logprob: -5.586603164672852
    9. ')+' → logprob: -5.836603164672852
    10. '       ' → logprob: -5.961603164672852

Token 1223: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4209038317203522
    2. '+' → logprob: -1.5459038019180298
    3. ' +' → logprob: -2.1709039211273193
    4. '+
' → logprob: -5.42090368270874
    5. ' +
' → logprob: -5.92090368270874
    6. '   ' → logprob: -6.92090368270874
    7. ')' → logprob: -6.92090368270874
    8. '(' → logprob: -7.17090368270874
    9. 'for' → logprob: -7.17090368270874
    10. '       ' → logprob: -7.29590368270874

Token 1224: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1955467313528061
    2. '+' → logprob: -1.8205467462539673
    3. ' +' → logprob: -5.320546627044678
    4. ')' → logprob: -5.695546627044678
    5. '               ' → logprob: -6.195546627044678
    6. '+
' → logprob: -6.195546627044678
    7. '                   ' → logprob: -7.570546627044678
    8. ')+' → logprob: -7.820546627044678
    9. ' ' → logprob: -8.195547103881836
    10. ' +
' → logprob: -8.195547103881836

Token 1225: ' Actually' (ID: 50557)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.432476669549942
    2. '+' → logprob: -1.1824766397476196
    3. ' +' → logprob: -4.05747652053833
    4. '+
' → logprob: -4.68247652053833
    5. 'time' → logprob: -5.43247652053833
    6. ' time' → logprob: -5.43247652053833
    7. ' travel' → logprob: -6.68247652053833
    8. '               ' → logprob: -7.30747652053833
    9. ' continue' → logprob: -7.80747652053833
    10. ' +
' → logprob: -7.93247652053833

Token 1226: ' find' (ID: 1646)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4092690348625183
    2. ' for' → logprob: -2.659269094467163
    3. ' continue' → logprob: -3.159269094467163
    4. '+' → logprob: -3.409269094467163
    5. ' dist' → logprob: -3.409269094467163
    6. 'dist' → logprob: -3.909269094467163
    7. '#' → logprob: -4.034268856048584
    8. 'for' → logprob: -4.159268856048584
    9. ' subset' → logprob: -4.409268856048584
    10. '               ' → logprob: -4.409268856048584

Token 1227: ' min' (ID: 1349)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -2.086653709411621
    2. ' the' → logprob: -2.461653709411621
    3. 'best' → logprob: -2.711653709411621
    4. 'min' → logprob: -2.711653709411621
    5. 'subset' → logprob: -2.836653709411621
    6. 't' → logprob: -2.961653709411621
    7. '```' → logprob: -2.961653709411621
    8. 'dist' → logprob: -3.086653709411621
    9. '0' → logprob: -3.086653709411621
    10. ' tsp' → logprob: -3.086653709411621

Token 1228: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0007339715957642
    2. '_time' → logprob: -1.1257339715957642
    3. '_subset' → logprob: -3.1257338523864746
    4. '_dist' → logprob: -3.5007338523864746
    5. '_cost' → logprob: -3.8757338523864746
    6. '_sub' → logprob: -3.8757338523864746
    7. '(
' → logprob: -3.8757338523864746
    8. 'imum' → logprob: -3.8757338523864746
    9. 'dist' → logprob: -4.125733852386475
    10. 'time' → logprob: -4.500733852386475

Token 1229: ':' (ID: 25)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8938264846801758
    2. 'subset' → logprob: -1.0188264846801758
    3. '2' → logprob: -2.393826484680176
    4. '1' → logprob: -3.518826484680176
    5. 'sub' → logprob: -3.643826484680176
    6. '(
' → logprob: -4.393826484680176
    7. '(' → logprob: -4.893826484680176
    8. '[' → logprob: -5.018826484680176
    9. 'cities' → logprob: -5.018826484680176
    10. '0' → logprob: -5.018826484680176

Token 1230: ' T' (ID: 353)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -1.794973373413086
    2. 'min' → logprob: -1.919973373413086
    3. 'from' → logprob: -2.044973373413086
    4. 'dist' → logprob: -2.419973373413086
    5. '```' → logprob: -2.919973373413086
    6. '1' → logprob: -3.294973373413086
    7. ' dist' → logprob: -3.419973373413086
    8. 'for' → logprob: -3.544973373413086
    9. 'import' → logprob: -3.794973373413086
    10. ' for' → logprob: -3.794973373413086

Token 1231: 'SP' (ID: 6657)
  Prédit: 'SP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SP' → logprob: -0.07312794774770737
    2. 'sp' → logprob: -3.0731279850006104
    3. '(' → logprob: -5.073127746582031
    4. ')' → logprob: -5.823127746582031
    5. '(S' → logprob: -5.823127746582031
    6. 'S' → logprob: -6.198127746582031
    7. 'ime' → logprob: -6.573127746582031
    8. 'subset' → logprob: -6.573127746582031
    9. ')
' → logprob: -6.698127746582031
    10. '(
' → logprob: -7.073127746582031

Token 1232: ' starting' (ID: 8601)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -2.3097541332244873
    2. ' =' → logprob: -2.4347541332244873
    3. '_sub' → logprob: -2.4347541332244873
    4. '_mask' → logprob: -2.6847541332244873
    5. 'from' → logprob: -2.9347541332244873
    6. '_nodes' → logprob: -2.9347541332244873
    7. '_subset' → logprob: -2.9347541332244873
    8. 'def' → logprob: -3.1847541332244873
    9. '(
' → logprob: -3.4347541332244873
    10. 'for' → logprob: -3.6847541332244873

Token 1233: '/' (ID: 14)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.812461793422699
    2. 'from' → logprob: -1.4374618530273438
    3. 'at' → logprob: -2.4374618530273438
    4. ' at' → logprob: -2.9374618530273438
    5. ',' → logprob: -3.1874618530273438
    6. '(
' → logprob: -3.5624618530273438
    7. 'and' → logprob: -3.6874618530273438
    8. '```' → logprob: -4.437461853027344
    9. 'subset' → logprob: -4.937461853027344
    10. ')' → logprob: -5.312461853027344

Token 1234: 'ending' (ID: 3258)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.26985204219818115
    2. 'subset' → logprob: -1.8948520421981812
    3. 'at' → logprob: -3.2698521614074707
    4. 'ending' → logprob: -3.8948521614074707
    5. 'last' → logprob: -5.519852161407471
    6. '#' → logprob: -5.644852161407471
    7. 'and' → logprob: -5.644852161407471
    8. 'city' → logprob: -6.019852161407471
    9. 'from' → logprob: -6.019852161407471
    10. ' at' → logprob: -6.269852161407471

Token 1235: ' at' (ID: 540)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.833009660243988
    2. '=' → logprob: -1.7080097198486328
    3. '_' → logprob: -2.208009719848633
    4. ',' → logprob: -2.833009719848633
    5. ' at' → logprob: -2.958009719848633
    6. '[' → logprob: -3.708009719848633
    7. '(
' → logprob: -3.708009719848633
    8. '           ' → logprob: -4.083009719848633
    9. '```' → logprob: -4.583009719848633
    10. '0' → logprob: -4.833009719848633

Token 1236: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01749170757830143
    2. 'market' → logprob: -4.142491817474365
    3. 'subset' → logprob: -6.767491817474365
    4. '(' → logprob: -9.642491340637207
    5. '```' → logprob: -9.892491340637207
    6. '
' → logprob: -9.892491340637207
    7. ' ' → logprob: -10.517491340637207
    8. 'markets' → logprob: -10.892491340637207
    9. ' market' → logprob: -11.142491340637207
    10. 'cities' → logprob: -11.267491340637207

Token 1237: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006138172931969166
    2. 'market' → logprob: -5.256138324737549
    3. '(' → logprob: -7.256138324737549
    4. 'subset' → logprob: -9.75613784790039
    5. '[' → logprob: -10.00613784790039
    6. '```' → logprob: -10.75613784790039
    7. '
' → logprob: -11.13113784790039
    8. ' ' → logprob: -11.25613784790039
    9. ' market' → logprob: -12.00613784790039
    10. '(
' → logprob: -12.25613784790039

Token 1238: ' over' (ID: 1072)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2804233133792877
    2. 'from' → logprob: -1.9054232835769653
    3. 'import' → logprob: -2.780423402786255
    4. '#' → logprob: -4.905423164367676
    5. 'def' → logprob: -5.530423164367676
    6. 'if' → logprob: -5.655423164367676
    7. '       ' → logprob: -5.780423164367676
    8. ' from' → logprob: -6.030423164367676
    9. 'subset' → logprob: -6.155423164367676
    10. 'cities' → logprob: -6.405423164367676

Token 1239: ' subset' (ID: 58845)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.0016456685261800885
    2. '[' → logprob: -6.876645565032959
    3. ' subset' → logprob: -7.626645565032959
    4. '
' → logprob: -10.126646041870117
    5. 'cities' → logprob: -10.751646041870117
    6. '   ' → logprob: -11.001646041870117
    7. 'list' → logprob: -11.126646041870117
    8. '[
' → logprob: -11.876646041870117
    9. ' [' → logprob: -12.376646041870117
    10. 'the' → logprob: -13.001646041870117

Token 1240: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8173574805259705
    2. 'from' → logprob: -1.3173575401306152
    3. 'import' → logprob: -1.6923575401306152
    4. ' from' → logprob: -3.8173575401306152
    5. 'if' → logprob: -4.192357540130615
    6. '#' → logprob: -4.442357540130615
    7. 'def' → logprob: -4.942357540130615
    8. 'cities' → logprob: -5.067357540130615
    9. 'subset' → logprob: -5.192357540130615
    10. '       ' → logprob: -5.442357540130615

Token 1241: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10693484544754028
    2. '...' → logprob: -3.7319347858428955
    3. ')' → logprob: -4.481935024261475
    4. '+' → logprob: -4.481935024261475
    5. 'import' → logprob: -4.731935024261475
    6. ' +' → logprob: -5.481935024261475
    7. '#' → logprob: -5.731935024261475
    8. '(' → logprob: -5.856935024261475
    9. ',' → logprob: -5.856935024261475
    10. '   ' → logprob: -5.981935024261475

Token 1242: ' subset' (ID: 58845)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9015650153160095
    2. 'from' → logprob: -1.0265650749206543
    3. 'import' → logprob: -1.7765650749206543
    4. ' from' → logprob: -3.5265650749206543
    5. '#' → logprob: -4.901565074920654
    6. 'def' → logprob: -5.151565074920654
    7. 'if' → logprob: -5.776565074920654
    8. '       ' → logprob: -5.776565074920654
    9. '```' → logprob: -5.776565074920654
    10. 'dp' → logprob: -5.901565074920654

Token 1243: '_points' (ID: 30070)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.0176146030426025
    2. '_size' → logprob: -1.7676146030426025
    3. '_len' → logprob: -1.7676146030426025
    4. '_nodes' → logprob: -3.1426146030426025
    5. '_mask' → logprob: -3.6426146030426025
    6. '_indices' → logprob: -3.6426146030426025
    7. 'cities' → logprob: -3.6426146030426025
    8. 'size' → logprob: -3.7676146030426025
    9. '=' → logprob: -4.142614364624023
    10. 'd' → logprob: -4.267614364624023

Token 1244: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.3483721613883972
    2. '=' → logprob: -1.598372220993042
    3. ' =' → logprob: -2.723372220993042
    4. '=[
' → logprob: -4.223371982574463
    5. '=sub' → logprob: -4.848371982574463
    6. '=list' → logprob: -7.098371982574463
    7. '=[]
' → logprob: -7.098371982574463
    8. ' =[' → logprob: -7.473371982574463
    9. '=[]' → logprob: -7.598371982574463
    10. '=len' → logprob: -7.598371982574463

Token 1245: '0' (ID: 15)
  Prédit: 'markets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'markets' → logprob: -0.0855783075094223
    2. 'pos' → logprob: -2.710578203201294
    3. 'subset' → logprob: -5.210578441619873
    4. '(pos' → logprob: -5.335578441619873
    5. 'cities' → logprob: -7.085578441619873
    6. '0' → logprob: -7.460578441619873
    7. '(i' → logprob: -7.585578441619873
    8. '(s' → logprob: -7.835578441619873
    9. '(' → logprob: -7.835578441619873
    10. '(mark' → logprob: -8.085577964782715

Token 1246: ']+' (ID: 15344)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3003731966018677
    2. ']+' → logprob: -1.4253731966018677
    3. ']
' → logprob: -4.175373077392578
    4. ',' → logprob: -5.800373077392578
    5. ',
' → logprob: -8.300373077392578
    6. ']*(' → logprob: -8.925373077392578
    7. '   ' → logprob: -10.425373077392578
    8. ']*' → logprob: -10.800373077392578
    9. 'subset' → logprob: -10.800373077392578
    10. 'for' → logprob: -10.925373077392578

Token 1247: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08005247265100479
    2. 'subset' → logprob: -2.580052375793457
    3. '[s' → logprob: -7.955052375793457
    4. '[list' → logprob: -8.205052375793457
    5. '[sub' → logprob: -8.955052375793457
    6. ' [' → logprob: -9.330052375793457
    7. 'list' → logprob: -9.830052375793457
    8. '[(' → logprob: -10.330052375793457
    9. '[selected' → logprob: -10.455052375793457
    10. 'sorted' → logprob: -10.455052375793457

Token 1248: 'i' (ID: 72)
  Prédit: 'markets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'markets' → logprob: -0.27033939957618713
    2. 'subset' → logprob: -2.2703394889831543
    3. 'i' → logprob: -2.7703394889831543
    4. 'c' → logprob: -3.3953394889831543
    5. 'pos' → logprob: -4.520339488983154
    6. 's' → logprob: -5.145339488983154
    7. 'idx' → logprob: -5.395339488983154
    8. 'cities' → logprob: -5.520339488983154
    9. ' markets' → logprob: -6.270339488983154
    10. 'sub' → logprob: -6.270339488983154

Token 1249: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8823022246360779
    2. ' for' → logprob: -0.8823022246360779
    3. 'for' → logprob: -2.2573022842407227
    4. ']' → logprob: -2.8823022842407227
    5. ' +' → logprob: -5.132302284240723
    6. ']+' → logprob: -5.757302284240723
    7. '[' → logprob: -6.882302284240723
    8. ']<<' → logprob: -8.007302284240723
    9. '1' → logprob: -9.007302284240723
    10. '])' → logprob: -9.132302284240723

Token 1250: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005365971941500902
    2. '0' → logprob: -5.50536584854126
    3. ' ' → logprob: -6.88036584854126
    4. '[' → logprob: -9.255366325378418
    5. '   ' → logprob: -10.130366325378418
    6. 'i' → logprob: -10.755366325378418
    7. '
' → logprob: -11.255366325378418
    8. '(' → logprob: -11.755366325378418
    9. '(i' → logprob: -11.755366325378418
    10. '```' → logprob: -11.755366325378418

Token 1251: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6330331563949585
    2. 'for' → logprob: -0.7580331563949585
    3. '               ' → logprob: -8.88303279876709
    4. '           ' → logprob: -9.00803279876709
    5. '                   ' → logprob: -9.63303279876709
    6. ']' → logprob: -10.38303279876709
    7. '	for' → logprob: -10.88303279876709
    8. '             ' → logprob: -11.88303279876709
    9. '            ' → logprob: -12.00803279876709
    10. '   ' → logprob: -12.00803279876709

Token 1252: ' i' (ID: 575)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.13002537190914154
    2. 'i' → logprob: -2.1300253868103027
    3. 'sub' → logprob: -6.255025386810303
    4. 's' → logprob: -7.255025386810303
    5. ' subset' → logprob: -8.255024909973145
    6. 'c' → logprob: -9.755024909973145
    7. ' i' → logprob: -10.630024909973145
    8. '_subset' → logprob: -10.755024909973145
    9. 'subcategory' → logprob: -10.880024909973145
    10. 'idx' → logprob: -11.005024909973145

Token 1253: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3166947662830353
    2. ' in' → logprob: -1.316694736480713
    3. 'i' → logprob: -5.941694736480713
    4. 's' → logprob: -7.316694736480713
    5. '
' → logprob: -9.566695213317871
    6. ' i' → logprob: -11.566695213317871
    7. ' ' → logprob: -11.566695213317871
    8. 'subset' → logprob: -11.941695213317871
    9. 'idx' → logprob: -12.191695213317871
    10. 'sub' → logprob: -12.691695213317871

Token 1254: ' subset' (ID: 58845)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.00011272187111899257
    2. ' subset' → logprob: -9.125112533569336
    3. 'sub' → logprob: -13.375112533569336
    4. '
' → logprob: -13.375112533569336
    5. '   ' → logprob: -15.125112533569336
    6. 'sorted' → logprob: -15.875112533569336
    7. 'subcategory' → logprob: -16.250112533569336
    8. ' ' → logprob: -17.250112533569336
    9. 'range' → logprob: -17.500112533569336
    10. 'substring' → logprob: -18.000112533569336

Token 1255: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007566395681351423
    2. ']+' → logprob: -5.007566452026367
    3. ']
' → logprob: -7.382566452026367
    4. ']:
' → logprob: -9.132566452026367
    5. '           ' → logprob: -11.007566452026367
    6. ']<<' → logprob: -11.507566452026367
    7. ']:' → logprob: -11.632566452026367
    8. ']>' → logprob: -11.757566452026367
    9. ' ]' → logprob: -11.882566452026367
    10. '<|end|>' → logprob: -11.882566452026367

Token 1256: '           ' (ID: 352)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5822548866271973
    2. 'dp' → logprob: -1.9572548866271973
    3. '```' → logprob: -2.7072548866271973
    4. ' from' → logprob: -2.9572548866271973
    5. 'import' → logprob: -3.3322548866271973
    6. '           ' → logprob: -3.4572548866271973
    7. '
' → logprob: -4.082254886627197
    8. ',' → logprob: -4.082254886627197
    9. '   ' → logprob: -4.207254886627197
    10. 'size' → logprob: -4.457254886627197

Token 1257: ' tsp' (ID: 68800)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.8216732144355774
    2. 'dp' → logprob: -1.1966731548309326
    3. 'import' → logprob: -1.8216731548309326
    4. '           ' → logprob: -3.1966731548309326
    5. 'm' → logprob: -4.821673393249512
    6. 'dist' → logprob: -4.821673393249512
    7. '```' → logprob: -4.946673393249512
    8. '#' → logprob: -5.321673393249512
    9. 'size' → logprob: -5.446673393249512
    10. 'def' → logprob: -5.446673393249512

Token 1258: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.2059106081724167
    2. 'dp' → logprob: -2.5809106826782227
    3. '_mask' → logprob: -3.4559106826782227
    4. '_points' → logprob: -3.9559106826782227
    5. '_dist' → logprob: -4.080910682678223
    6. ' =' → logprob: -4.330910682678223
    7. '<|end|>' → logprob: -4.580910682678223
    8. '=' → logprob: -5.580910682678223
    9. '(dp' → logprob: -6.455910682678223
    10. '_cost' → logprob: -6.455910682678223

Token 1259: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.11969157308340073
    2. '=[[' → logprob: -2.4946916103363037
    3. '=' → logprob: -3.9946916103363037
    4. ' =' → logprob: -4.994691371917725
    5. '={' → logprob: -6.744691371917725
    6. '={[' → logprob: -6.869691371917725
    7. '[' → logprob: -7.369691371917725
    8. '={}' → logprob: -7.369691371917725
    9. '=[
' → logprob: -8.244691848754883
    10. '={}
' → logprob: -8.369691848754883

Token 1260: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2991564869880676
    2. '{}' → logprob: -1.5491564273834229
    3. '{' → logprob: -3.424156427383423
    4. 'dict' → logprob: -4.799156665802002
    5. '[-' → logprob: -6.049156665802002
    6. 'float' → logprob: -6.924156665802002
    7. '[[' → logprob: -7.049156665802002
    8. '{}
' → logprob: -8.049156188964844
    9. '1' → logprob: -8.174156188964844
    10. '(' → logprob: -8.674156188964844

Token 1261: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.005457155406475067
    2. '10' → logprob: -6.005456924438477
    3. '-' → logprob: -6.380456924438477
    4. '0' → logprob: -7.630456924438477
    5. '(' → logprob: -8.130456924438477
    6. '1' → logprob: -8.755456924438477
    7. 'False' → logprob: -9.130456924438477
    8. '(float' → logprob: -9.630456924438477
    9. ' float' → logprob: -9.880456924438477
    10. 'sys' → logprob: -10.130456924438477

Token 1262: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0208726953715086
    2. ''in' → logprob: -3.8958725929260254
    3. ''' → logprob: -8.645873069763184
    4. '("' → logprob: -10.270873069763184
    5. ''inc' → logprob: -11.145873069763184
    6. ''i' → logprob: -11.270873069763184
    7. ''ins' → logprob: -12.145873069763184
    8. ''op' → logprob: -12.145873069763184
    9. ''ap' → logprob: -12.270873069763184
    10. ''am' → logprob: -12.395873069763184

Token 1263: 'inf' (ID: 22226)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.043010611087083817
    2. 'inf' → logprob: -3.793010711669922
    3. ''' → logprob: -4.043010711669922
    4. ''ex' → logprob: -7.668010711669922
    5. ''ins' → logprob: -7.918010711669922
    6. ''en' → logprob: -8.793010711669922
    7. ''ap' → logprob: -9.168010711669922
    8. ''inc' → logprob: -9.418010711669922
    9. ''op' → logprob: -9.668010711669922
    10. ''i' → logprob: -9.793010711669922

Token 1264: '')' (ID: 1542)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.010282711125910282
    2. '')]' → logprob: -5.385282516479492
    3. ')' → logprob: -5.510282516479492
    4. ']' → logprob: -7.510282516479492
    5. ')][' → logprob: -7.510282516479492
    6. '')' → logprob: -8.635282516479492
    7. '   ' → logprob: -9.635282516479492
    8. ')*' → logprob: -10.135282516479492
    9. ']*' → logprob: -10.260282516479492
    10. ' )' → logprob: -10.385282516479492

Token 1265: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.031829457730054855
    2. ']*' → logprob: -3.781829357147217
    3. ']' → logprob: -4.781829357147217
    4. 'for' → logprob: -9.531829833984375
    5. '][' → logprob: -10.406829833984375
    6. ']+' → logprob: -10.531829833984375
    7. '   ' → logprob: -11.781829833984375
    8. ')*(' → logprob: -11.781829833984375
    9. ']<<' → logprob: -12.656829833984375
    10. '](' → logprob: -12.656829833984375

Token 1266: 'len' (ID: 3303)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.127580463886261
    2. 'len' → logprob: -2.127580404281616
    3. '(' → logprob: -7.627580642700195
    4. '(len' → logprob: -8.752580642700195
    5. '
' → logprob: -12.877580642700195
    6. ' len' → logprob: -13.002580642700195
    7. '   ' → logprob: -14.877580642700195
    8. '2' → logprob: -14.877580642700195
    9. '```' → logprob: -15.002580642700195
    10. 'N' → logprob: -15.252580642700195

Token 1267: '(sub' (ID: 19764)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.25198644399642944
    2. '(sub' → logprob: -1.5019865036010742
    3. ' subset' → logprob: -10.626986503601074
    4. 'sub' → logprob: -10.626986503601074
    5. '_subset' → logprob: -11.876986503601074
    6. '=sub' → logprob: -14.626986503601074
    7. '(
' → logprob: -15.126986503601074
    8. '
' → logprob: -15.126986503601074
    9. '(' → logprob: -15.376986503601074
    10. '```' → logprob: -15.876986503601074

Token 1268: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.05889838933944702
    2. 'subset' → logprob: -3.183898448944092
    3. 'et' → logprob: -4.183898448944092
    4. ')set' → logprob: -8.558897972106934
    5. 'aset' → logprob: -8.933897972106934
    6. '_subset' → logprob: -10.183897972106934
    7. 'erset' → logprob: -10.308897972106934
    8. 't' → logprob: -10.683897972106934
    9. 'token' → logprob: -10.808897972106934
    10. 'uset' → logprob: -10.808897972106934

Token 1269: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.32174816727638245
    2. 'subset' → logprob: -1.32174813747406
    3. '_subset' → logprob: -5.69674825668335
    4. '+' → logprob: -6.69674825668335
    5. ')+' → logprob: -6.82174825668335
    6. 'points' → logprob: -6.94674825668335
    7. ')' → logprob: -7.44674825668335
    8. '[' → logprob: -8.446747779846191
    9. ' subset' → logprob: -8.446747779846191
    10. '_POINTS' → logprob: -8.696747779846191

Token 1270: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.018984848633408546
    2. ')' → logprob: -4.018984794616699
    3. ')]' → logprob: -7.893984794616699
    4. '```' → logprob: -8.2689847946167
    5. '])' → logprob: -9.5189847946167
    6. ')
' → logprob: -10.1439847946167
    7. '))
' → logprob: -10.3939847946167
    8. ')+' → logprob: -10.5189847946167
    9. '[' → logprob: -11.5189847946167
    10. '   ' → logprob: -12.0189847946167

Token 1271: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3479367792606354
    2. ')' → logprob: -1.722936749458313
    3. ' for' → logprob: -2.9729368686676025
    4. '][' → logprob: -3.5979368686676025
    5. ']' → logprob: -3.7229368686676025
    6. ')][' → logprob: -5.222936630249023
    7. '<|end|>' → logprob: -6.472936630249023
    8. '
' → logprob: -6.722936630249023
    9. ')]' → logprob: -7.222936630249023
    10. ')(' → logprob: -7.722936630249023

Token 1272: ' _' (ID: 1175)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.19836008548736572
    2. ' range' → logprob: -1.8233600854873657
    3. '_subset' → logprob: -4.823359966278076
    4. '_' → logprob: -5.198359966278076
    5. 'subset' → logprob: -6.198359966278076
    6. '_range' → logprob: -6.948359966278076
    7. '_sub' → logprob: -7.323359966278076
    8. 'in' → logprob: -7.573359966278076
    9. ' in' → logprob: -8.698360443115234
    10. 'sub' → logprob: -9.198360443115234

Token 1273: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031942317727953196
    2. ' range' → logprob: -5.753194332122803
    3. '(range' → logprob: -12.128193855285645
    4. '
' → logprob: -12.503193855285645
    5. 'subset' → logprob: -12.878193855285645
    6. 'in' → logprob: -13.128193855285645
    7. '_range' → logprob: -14.003193855285645
    8. ' in' → logprob: -14.253193855285645
    9. '	range' → logprob: -14.503193855285645
    10. '_' → logprob: -15.128193855285645

Token 1274: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0016674461076036096
    2. ' range' → logprob: -6.626667499542236
    3. 'subset' → logprob: -8.001667022705078
    4. '(range' → logprob: -12.876667022705078
    5. 'sub' → logprob: -13.501667022705078
    6. '[' → logprob: -13.751667022705078
    7. '
' → logprob: -14.001667022705078
    8. ')' → logprob: -15.376667022705078
    9. '	range' → logprob: -16.001667022705078
    10. ']' → logprob: -16.126667022705078

Token 1275: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.569400429725647
    2. '1' → logprob: -1.069400429725647
    3. 'range' → logprob: -2.4444003105163574
    4. 'subset' → logprob: -5.694400310516357
    5. '```' → logprob: -8.819400787353516
    6. '
' → logprob: -9.194400787353516
    7. 'len' → logprob: -9.319400787353516
    8. ' range' → logprob: -9.569400787353516
    9. 'sub' → logprob: -9.569400787353516
    10. ']' → logprob: -9.694400787353516

Token 1276: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02053290233016014
    2. '(' → logprob: -4.020533084869385
    3. 'len' → logprob: -6.145533084869385
    4. 'range' → logprob: -9.520532608032227
    5. '
' → logprob: -9.770532608032227
    6. '(len' → logprob: -10.270532608032227
    7. '```' → logprob: -10.770532608032227
    8. ')' → logprob: -11.145532608032227
    9. ']' → logprob: -11.145532608032227
    10. '][' → logprob: -12.770532608032227

Token 1277: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.00184581708163023
    2. '<<(' → logprob: -6.876845836639404
    3. ' <<' → logprob: -7.376845836639404
    4. ')<<' → logprob: -8.751845359802246
    5. ')' → logprob: -11.876845359802246
    6. ']<<' → logprob: -11.876845359802246
    7. '<len' → logprob: -12.251845359802246
    8. ',' → logprob: -12.501845359802246
    9. ',len' → logprob: -13.251845359802246
    10. '<<<' → logprob: -13.501845359802246

Token 1278: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0006820533308200538
    2. '(len' → logprob: -7.5006818771362305
    3. '1' → logprob: -9.25068187713623
    4. '
' → logprob: -11.50068187713623
    5. ' len' → logprob: -11.62568187713623
    6. '(' → logprob: -13.00068187713623
    7. 'range' → logprob: -13.25068187713623
    8. '   ' → logprob: -13.25068187713623
    9. 'subset' → logprob: -13.25068187713623
    10. '0' → logprob: -13.37568187713623

Token 1279: '(sub' (ID: 19764)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.00015276329941116273
    2. '(sub' → logprob: -9.375152587890625
    3. 'sub' → logprob: -10.625152587890625
    4. ' subset' → logprob: -11.000152587890625
    5. '_subset' → logprob: -11.500152587890625
    6. '
' → logprob: -12.000152587890625
    7. '   ' → logprob: -13.000152587890625
    8. '{sub' → logprob: -13.375152587890625
    9. '(' → logprob: -13.625152587890625
    10. 'len' → logprob: -13.750152587890625

Token 1280: 'set' (ID: 977)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.07235050201416016
    2. '_subset' → logprob: -2.82235050201416
    3. 'set' → logprob: -4.82235050201416
    4. ' subset' → logprob: -6.19735050201416
    5. 'sub' → logprob: -8.82235050201416
    6. '_sub' → logprob: -10.57235050201416
    7. '(sub' → logprob: -10.69735050201416
    8. '{sub' → logprob: -11.07235050201416
    9. 'erset' → logprob: -12.32235050201416
    10. '```' → logprob: -12.44735050201416

Token 1281: '_points' (ID: 30070)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.10617508739233017
    2. '_points' → logprob: -2.481175184249878
    3. '_subset' → logprob: -4.231174945831299
    4. '(sub' → logprob: -6.356174945831299
    5. ' subset' → logprob: -7.481174945831299
    6. ')' → logprob: -10.106175422668457
    7. '```' → logprob: -10.356175422668457
    8. '{sub' → logprob: -10.356175422668457
    9. 'points' → logprob: -10.606175422668457
    10. 'sub' → logprob: -10.731175422668457

Token 1282: '))]
' (ID: 53695)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.12838536500930786
    2. ')][' → logprob: -2.753385305404663
    3. ')' → logprob: -3.003385305404663
    4. ')]
' → logprob: -5.128385543823242
    5. ')])' → logprob: -8.003385543823242
    6. ')-' → logprob: -8.503385543823242
    7. ')],' → logprob: -8.753385543823242
    8. ')+' → logprob: -9.628385543823242
    9. ')
' → logprob: -9.628385543823242
    10. '),' → logprob: -10.003385543823242

Token 1283: '           ' (ID: 352)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2692055404186249
    2. '
' → logprob: -2.5192055702209473
    3. '           ' → logprob: -2.8942055702209473
    4. '[' → logprob: -3.0192055702209473
    5. '   ' → logprob: -3.8942055702209473
    6. 'for' → logprob: -4.144205570220947
    7. '0' → logprob: -5.019205570220947
    8. '       ' → logprob: -6.394205570220947
    9. ' for' → logprob: -6.894205570220947
    10. '               ' → logprob: -7.019205570220947

Token 1284: ' tsp' (ID: 68800)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026130059733986855
    2. '1' → logprob: -4.401130199432373
    3. ' ' → logprob: -6.026130199432373
    4. '   ' → logprob: -6.151130199432373
    5. 't' → logprob: -6.151130199432373
    6. '[' → logprob: -6.276130199432373
    7. '
' → logprob: -6.526130199432373
    8. '           ' → logprob: -6.776130199432373
    9. 'sub' → logprob: -7.151130199432373
    10. 'for' → logprob: -7.901130199432373

Token 1285: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.009289316833019257
    2. '[' → logprob: -4.759289264678955
    3. 'dp' → logprob: -8.759289741516113
    4. '```' → logprob: -9.009289741516113
    5. '_DP' → logprob: -9.009289741516113
    6. '[
' → logprob: -9.759289741516113
    7. '[_' → logprob: -9.884289741516113
    8. 'DP' → logprob: -10.759289741516113
    9. 'Dp' → logprob: -11.259289741516113
    10. '[last' → logprob: -11.259289741516113

Token 1286: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00017469677550252527
    2. '=' → logprob: -9.250174522399902
    3. '0' → logprob: -10.375174522399902
    4. '][' → logprob: -10.625174522399902
    5. '```' → logprob: -12.125174522399902
    6. '[
' → logprob: -12.375174522399902
    7. ')[' → logprob: -12.500174522399902
    8. ' [' → logprob: -13.125174522399902
    9. '1' → logprob: -13.625174522399902
    10. '[][' → logprob: -14.125174522399902

Token 1287: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5244276523590088
    2. '0' → logprob: -0.8994276523590088
    3. '][' → logprob: -6.77442741394043
    4. '(' → logprob: -10.14942741394043
    5. '
' → logprob: -10.27442741394043
    6. ' ' → logprob: -10.52442741394043
    7. '000' → logprob: -11.64942741394043
    8. '```' → logprob: -11.77442741394043
    9. ']' → logprob: -12.02442741394043
    10. '[' → logprob: -12.27442741394043

Token 1288: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.001719327294267714
    2. '[' → logprob: -6.6267194747924805
    3. ')][' → logprob: -9.50171947479248
    4. '<|end|>' → logprob: -9.75171947479248
    5. ']][' → logprob: -9.87671947479248
    6. '<<' → logprob: -10.12671947479248
    7. ']' → logprob: -10.12671947479248
    8. '][-' → logprob: -10.50171947479248
    9. '][]' → logprob: -11.12671947479248
    10. '()][' → logprob: -11.37671947479248

Token 1289: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.5
    3. '1' → logprob: -18.0
    4. '<|end|>' → logprob: -18.5
    5. '=' → logprob: -19.625
    6. '
' → logprob: -20.0
    7. '[' → logprob: -20.0
    8. '(' → logprob: -20.125
    9. '00' → logprob: -20.75
    10. 'import' → logprob: -20.75

Token 1290: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.23090434074401855
    2. ']+=' → logprob: -2.1059043407440186
    3. ']' → logprob: -2.6059043407440186
    4. '=' → logprob: -4.855904579162598
    5. ']+' → logprob: -6.480904579162598
    6. '<|end|>' → logprob: -8.230904579162598
    7. '0' → logprob: -8.355904579162598
    8. '+' → logprob: -8.605904579162598
    9. ']=-' → logprob: -8.730904579162598
    10. ' ]' → logprob: -8.855904579162598

Token 1291: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '۰' → logprob: -21.125
    4. '
' → logprob: -22.75
    5. '   ' → logprob: -22.75
    6. '=' → logprob: -23.375
    7. '```' → logprob: -23.875
    8. '000' → logprob: -23.875
    9. '00' → logprob: -24.125
    10. '０' → logprob: -24.125

Token 1292: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0728549063205719
    2. '           ' → logprob: -3.197854995727539
    3. 'for' → logprob: -3.947854995727539
    4. '   ' → logprob: -5.197854995727539
    5. '       ' → logprob: -7.322854995727539
    6. ' ' → logprob: -7.322854995727539
    7. '<|end|>' → logprob: -7.822854995727539
    8. '	for' → logprob: -8.072854995727539
    9. ' 
' → logprob: -8.197854995727539
    10. '               ' → logprob: -8.322854995727539

Token 1293: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2886401116847992
    2. '           ' → logprob: -1.9136401414871216
    3. 'for' → logprob: -2.913640022277832
    4. '            ' → logprob: -4.663640022277832
    5. ')' → logprob: -4.913640022277832
    6. '               ' → logprob: -4.913640022277832
    7. '   ' → logprob: -5.163640022277832
    8. '       ' → logprob: -5.413640022277832
    9. ' ' → logprob: -6.288640022277832
    10. '```' → logprob: -6.538640022277832

Token 1294: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.44011974334716797
    2. ' for' → logprob: -1.190119743347168
    3. '               ' → logprob: -4.690119743347168
    4. '                   ' → logprob: -5.190119743347168
    5. '           ' → logprob: -5.190119743347168
    6. '   ' → logprob: -5.440119743347168
    7. '                           ' → logprob: -5.440119743347168
    8. ' ' → logprob: -5.565119743347168
    9. 'next' → logprob: -6.065119743347168
    10. ' next' → logprob: -6.315119743347168

Token 1295: ' s' (ID: 265)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mask' → logprob: -1.1041145626222715e-05
    2. '_mask' → logprob: -11.750011444091797
    3. 'state' → logprob: -14.000011444091797
    4. 's' → logprob: -14.125011444091797
    5. ' mask' → logprob: -14.125011444091797
    6. '(mask' → logprob: -15.875011444091797
    7. 'ms' → logprob: -15.875011444091797
    8. 'bm' → logprob: -15.875011444091797
    9. '
' → logprob: -16.000011444091797
    10. 'subset' → logprob: -16.000011444091797

Token 1296: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5281721949577332
    2. ' in' → logprob: -0.9031721949577332
    3. 's' → logprob: -5.528172016143799
    4. '1' → logprob: -7.278172016143799
    5. '
' → logprob: -8.778172492980957
    6. 'mask' → logprob: -10.028172492980957
    7. '   ' → logprob: -10.528172492980957
    8. ' s' → logprob: -10.653172492980957
    9. ' ' → logprob: -10.653172492980957
    10. '(' → logprob: -11.028172492980957

Token 1297: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0010815176647156477
    2. ' range' → logprob: -7.001081466674805
    3. '1' → logprob: -9.001081466674805
    4. 's' → logprob: -10.376081466674805
    5. '(range' → logprob: -12.001081466674805
    6. '(' → logprob: -12.501081466674805
    7. '
' → logprob: -13.001081466674805
    8. '_range' → logprob: -13.876081466674805
    9. 'subset' → logprob: -14.251081466674805
    10. 'sub' → logprob: -15.001081466674805

Token 1298: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3893395960330963
    2. '1' → logprob: -1.139339566230774
    3. 's' → logprob: -6.264339447021484
    4. 't' → logprob: -8.014339447021484
    5. '
' → logprob: -9.514339447021484
    6. '(t' → logprob: -9.639339447021484
    7. ' (' → logprob: -9.889339447021484
    8. '(len' → logprob: -11.639339447021484
    9. 'len' → logprob: -11.764339447021484
    10. '0' → logprob: -12.139339447021484

Token 1299: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009271129034459591
    2. '(' → logprob: -4.884271144866943
    3. 'len' → logprob: -6.509271144866943
    4. 't' → logprob: -9.134270668029785
    5. 's' → logprob: -10.384270668029785
    6. '(len' → logprob: -10.759270668029785
    7. '0' → logprob: -12.884270668029785
    8. 'subset' → logprob: -13.009270668029785
    9. '
' → logprob: -13.134270668029785
    10. '2' → logprob: -13.634270668029785

Token 1300: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.1411997526884079
    2. '(' → logprob: -2.141199827194214
    3. '(len' → logprob: -5.266199588775635
    4. '(s' → logprob: -5.266199588775635
    5. '1' → logprob: -6.641199588775635
    6. '+' → logprob: -7.016199588775635
    7. ',' → logprob: -7.516199588775635
    8. 's' → logprob: -8.266200065612793
    9. ',len' → logprob: -8.641200065612793
    10. 'len' → logprob: -9.016200065612793

Token 1301: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.012683277018368244
    2. '1' → logprob: -4.387683391571045
    3. ' len' → logprob: -9.387682914733887
    4. 's' → logprob: -10.262682914733887
    5. '(len' → logprob: -10.762682914733887
    6. 'subset' → logprob: -11.012682914733887
    7. '(' → logprob: -11.637682914733887
    8. 'sub' → logprob: -13.012682914733887
    9. '```' → logprob: -13.637682914733887
    10. '
' → logprob: -13.887682914733887

Token 1302: '(sub' (ID: 19764)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.3900732398033142
    2. '(sub' → logprob: -1.140073299407959
    3. 'len' → logprob: -6.515073299407959
    4. '(len' → logprob: -7.140073299407959
    5. 'sub' → logprob: -8.0150728225708
    6. 't' → logprob: -8.0150728225708
    7. '(s' → logprob: -8.8900728225708
    8. ' subset' → logprob: -10.1400728225708
    9. '_subset' → logprob: -10.3900728225708
    10. 's' → logprob: -10.6400728225708

Token 1303: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0504811555147171
    2. 'subset' → logprob: -3.050481081008911
    3. '_subset' → logprob: -6.42548131942749
    4. ' subset' → logprob: -9.175480842590332
    5. 'et' → logprob: -9.550480842590332
    6. '_set' → logprob: -10.300480842590332
    7. 'uset' → logprob: -10.675480842590332
    8. 'aset' → logprob: -11.675480842590332
    9. 'sub' → logprob: -12.175480842590332
    10. 'ub' → logprob: -12.175480842590332

Token 1304: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -8.113290095934644e-05
    2. 'subset' → logprob: -10.000081062316895
    3. '_subset' → logprob: -12.250081062316895
    4. ')' → logprob: -12.250081062316895
    5. '```' → logprob: -12.250081062316895
    6. '_tokens' → logprob: -12.625081062316895
    7. '_pts' → logprob: -12.750081062316895
    8. '_positions' → logprob: -13.000081062316895
    9. '(sub' → logprob: -13.125081062316895
    10. '_POINTS' → logprob: -13.250081062316895

Token 1305: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.003217045683413744
    2. '):' → logprob: -5.7532172203063965
    3. '):
' → logprob: -11.503216743469238
    4. '```' → logprob: -12.128216743469238
    5. '):

' → logprob: -12.378216743469238
    6. ')' → logprob: -12.628216743469238
    7. '+' → logprob: -12.628216743469238
    8. '[' → logprob: -12.753216743469238
    9. '|' → logprob: -13.253216743469238
    10. ')[' → logprob: -13.753216743469238

Token 1306: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02545287273824215
    2. ' for' → logprob: -3.9004528522491455
    3. '   ' → logprob: -6.275453090667725
    4. 'for' → logprob: -6.900453090667725
    5. '                   ' → logprob: -6.900453090667725
    6. ' next' → logprob: -8.275452613830566
    7. '           ' → logprob: -8.650452613830566
    8. '```' → logprob: -8.900452613830566
    9. '                       ' → logprob: -9.400452613830566
    10. '                               ' → logprob: -9.525452613830566

Token 1307: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2811257839202881
    2. '                   ' → logprob: -2.531125783920288
    3. '   ' → logprob: -3.031125783920288
    4. 't' → logprob: -3.156125783920288
    5. 'len' → logprob: -3.531125783920288
    6. ' for' → logprob: -3.906125783920288
    7. '               ' → logprob: -5.031126022338867
    8. '           ' → logprob: -5.656126022338867
    9. 's' → logprob: -5.781126022338867
    10. ' ' → logprob: -6.281126022338867

Token 1308: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.006130706984549761
    2. 'j' → logprob: -5.131130695343018
    3. 'i' → logprob: -9.381131172180176
    4. 'pos' → logprob: -9.631131172180176
    5. 'v' → logprob: -11.131131172180176
    6. 'next' → logprob: -11.381131172180176
    7. 'last' → logprob: -11.631131172180176
    8. '
' → logprob: -12.006131172180176
    9. ' u' → logprob: -12.256131172180176
    10. 'cur' → logprob: -13.631131172180176

Token 1309: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06197945028543472
    2. 'in' → logprob: -2.8119795322418213
    3. '```' → logprob: -12.186979293823242
    4. ' ' → logprob: -13.436979293823242
    5. '
' → logprob: -13.811979293823242
    6. '_in' → logprob: -14.186979293823242
    7. 'In' → logprob: -14.561979293823242
    8. '[' → logprob: -14.811979293823242
    9. '	in' → logprob: -14.936979293823242
    10. ')' → logprob: -14.936979293823242

Token 1310: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00021176543668843806
    2. ' range' → logprob: -8.500211715698242
    3. 'u' → logprob: -12.125211715698242
    4. '0' → logprob: -13.750211715698242
    5. 'subset' → logprob: -13.750211715698242
    6. 'len' → logprob: -15.125211715698242
    7. '(range' → logprob: -15.625211715698242
    8. 's' → logprob: -15.750211715698242
    9. '
' → logprob: -16.375211715698242
    10. 'sub' → logprob: -17.875211715698242

Token 1311: '(len' (ID: 14990)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00020306356600485742
    2. '1' → logprob: -9.250203132629395
    3. '           ' → logprob: -10.000203132629395
    4. ' len' → logprob: -10.375203132629395
    5. '(len' → logprob: -11.375203132629395
    6. '   ' → logprob: -11.500203132629395
    7. '               ' → logprob: -12.625203132629395
    8. '0' → logprob: -13.750203132629395
    9. '                   ' → logprob: -13.875203132629395
    10. 'subset' → logprob: -14.250203132629395

Token 1312: '(sub' (ID: 19764)
  Prédit: '(sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sub' → logprob: -0.004170764237642288
    2. 'subset' → logprob: -5.504170894622803
    3. '(t' → logprob: -9.879170417785645
    4. 't' → logprob: -10.254170417785645
    5. 'sub' → logprob: -12.629170417785645
    6. '_subset' → logprob: -14.004170417785645
    7. ' subset' → logprob: -14.129170417785645
    8. '(s' → logprob: -14.754170417785645
    9. '{sub' → logprob: -15.879170417785645
    10. ' (' → logprob: -15.879170417785645

Token 1313: 'set' (ID: 977)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.03904445096850395
    2. 'subset' → logprob: -3.5390443801879883
    3. '_subset' → logprob: -5.039044380187988
    4. 'oints' → logprob: -6.164044380187988
    5. '_set' → logprob: -8.664044380187988
    6. 'set' → logprob: -8.914044380187988
    7. ' subset' → logprob: -9.039044380187988
    8. '_point' → logprob: -10.039044380187988
    9. 'oint' → logprob: -10.039044380187988
    10. '_p' → logprob: -10.164044380187988

Token 1314: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.001136050675995648
    2. 'subset' → logprob: -7.00113582611084
    3. '(sub' → logprob: -8.62613582611084
    4. 'points' → logprob: -11.12613582611084
    5. 'Points' → logprob: -11.25113582611084
    6. '_subset' → logprob: -11.75113582611084
    7. '_POINTS' → logprob: -12.75113582611084
    8. '_p' → logprob: -13.12613582611084
    9. '_positions' → logprob: -13.50113582611084
    10. '_pts' → logprob: -13.62613582611084

Token 1315: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.006206531543284655
    2. ')):
' → logprob: -5.256206512451172
    3. '):' → logprob: -7.131206512451172
    4. '               ' → logprob: -9.756206512451172
    5. '                   ' → logprob: -10.006206512451172
    6. ')):' → logprob: -11.256206512451172
    7. ')' → logprob: -11.381206512451172
    8. ']):
' → logprob: -11.506206512451172
    9. '```' → logprob: -12.006206512451172
    10. '[' → logprob: -12.381206512451172

Token 1316: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05487991124391556
    2. '                               ' → logprob: -4.554880142211914
    3. '                           ' → logprob: -4.679880142211914
    4. ' if' → logprob: -4.929880142211914
    5. '                       ' → logprob: -4.929880142211914
    6. '                                           ' → logprob: -5.429880142211914
    7. '                    ' → logprob: -5.429880142211914
    8. '                 ' → logprob: -6.429880142211914
    9. '                                   ' → logprob: -6.929880142211914
    10. ' ' → logprob: -6.929880142211914

Token 1317: ' if' (ID: 538)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.7078588008880615
    2. 'if' (adapté à ' if') → logprob: -1.3328588008880615
    3. '                           ' → logprob: -1.8328588008880615
    4. '                                   ' → logprob: -3.8328588008880615
    5. ' if' → logprob: -4.207859039306641
    6. '                       ' → logprob: -4.707859039306641
    7. '```' → logprob: -4.957859039306641
    8. '   ' → logprob: -5.082859039306641
    9. '                   ' → logprob: -5.207859039306641
    10. '                                           ' → logprob: -5.457859039306641

Token 1318: ' tsp' (ID: 68800)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.06643662601709366
    2. '(t' → logprob: -3.441436529159546
    3. ' (' → logprob: -4.066436767578125
    4. 's' → logprob: -4.316436767578125
    5. 't' → logprob: -6.691436767578125
    6. '((' → logprob: -8.316436767578125
    7. '(' → logprob: -9.316436767578125
    8. '   ' → logprob: -9.691436767578125
    9. 'not' → logprob: -9.816436767578125
    10. ' s' → logprob: -10.691436767578125

Token 1319: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.0008122475701384246
    2. 's' → logprob: -7.50081205368042
    3. 'dp' → logprob: -9.750812530517578
    4. '[s' → logprob: -9.750812530517578
    5. '[u' → logprob: -10.500812530517578
    6. ' s' → logprob: -11.375812530517578
    7. '
' → logprob: -11.375812530517578
    8. 'u' → logprob: -11.500812530517578
    9. '(s' → logprob: -11.625812530517578
    10. '   ' → logprob: -11.750812530517578

Token 1320: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.00012654215970542282
    2. 's' → logprob: -9.125126838684082
    3. '[t' → logprob: -12.250126838684082
    4. '
' → logprob: -12.750126838684082
    5. '[u' → logprob: -13.000126838684082
    6. '[
' → logprob: -13.000126838684082
    7. '[' → logprob: -13.000126838684082
    8. '][' → logprob: -14.375126838684082
    9. '```' → logprob: -14.500126838684082
    10. '<s' → logprob: -14.875126838684082

Token 1321: '][' (ID: 2696)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.15884432196617126
    2. '][' → logprob: -2.033844232559204
    3. '[' → logprob: -4.158844470977783
    4. '==' → logprob: -8.658843994140625
    5. '[s' → logprob: -9.158843994140625
    6. '[t' → logprob: -9.658843994140625
    7. '[v' → logprob: -11.408843994140625
    8. ']==' → logprob: -11.533843994140625
    9. '
' → logprob: -11.908843994140625
    10. '```' → logprob: -12.033843994140625

Token 1322: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -8.537868779967539e-06
    2. '0' → logprob: -12.250008583068848
    3. 't' → logprob: -13.625008583068848
    4. ' u' → logprob: -13.625008583068848
    5. 's' → logprob: -14.125008583068848
    6. '[u' → logprob: -15.500008583068848
    7. '
' → logprob: -16.62500762939453
    8. '(u' → logprob: -16.87500762939453
    9. '<|end|>' → logprob: -16.87500762939453
    10. ''u' → logprob: -17.00000762939453

Token 1323: ']==' (ID: 34128)
  Prédit: ']=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.09207227826118469
    2. ']+' → logprob: -2.9670722484588623
    3. ']' → logprob: -4.467072486877441
    4. '+' → logprob: -4.717072486877441
    5. '```' → logprob: -5.342072486877441
    6. '==' → logprob: -5.592072486877441
    7. ']!=' → logprob: -5.592072486877441
    8. ']>' → logprob: -6.467072486877441
    9. ']+=' → logprob: -7.217072486877441
    10. ']:
' → logprob: -7.342072486877441

Token 1324: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -1.4259644558478612e-05
    2. ' float' → logprob: -11.375014305114746
    3. '0' → logprob: -13.875014305114746
    4. '   ' → logprob: -14.000014305114746
    5. '
' → logprob: -15.125014305114746
    6. '=float' → logprob: -15.375014305114746
    7. '(float' → logprob: -16.25001335144043
    8. '	float' → logprob: -16.50001335144043
    9. '1' → logprob: -16.75001335144043
    10. '999' → logprob: -17.00001335144043

Token 1325: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -5.407366916188039e-05
    2. ''in' → logprob: -9.875054359436035
    3. ''' → logprob: -13.625054359436035
    4. '(in' → logprob: -14.875054359436035
    5. ''s' → logprob: -15.000054359436035
    6. '("' → logprob: -15.875054359436035
    7. ''inc' → logprob: -15.875054359436035
    8. 'inf' → logprob: -16.12505340576172
    9. ''i' → logprob: -16.50005340576172
    10. ' ('' → logprob: -16.75005340576172

Token 1326: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.051582127809524536
    2. ''in' → logprob: -3.426582098007202
    3. ''' → logprob: -4.426582336425781
    4. '0' → logprob: -5.176582336425781
    5. ''s' → logprob: -9.426582336425781
    6. ' inf' → logprob: -11.051582336425781
    7. '('' → logprob: -11.301582336425781
    8. ''i' → logprob: -11.676582336425781
    9. ''int' → logprob: -12.301582336425781
    10. '.inf' → logprob: -12.301582336425781

Token 1327: ''):
' (ID: 26539)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.22724412381649017
    2. '):' → logprob: -1.8522441387176514
    3. ')' → logprob: -3.8522441387176514
    4. '                       ' → logprob: -3.8522441387176514
    5. ''):
' → logprob: -6.477243900299072
    6. '                   ' → logprob: -6.602243900299072
    7. '                           ' → logprob: -8.10224437713623
    8. ''):' → logprob: -8.47724437713623
    9. '                               ' → logprob: -8.85224437713623
    10. ':' → logprob: -9.47724437713623

Token 1328: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.04281613230705261
    2. '                               ' → logprob: -3.542816162109375
    3. '                           ' → logprob: -4.792816162109375
    4. '```' → logprob: -6.167816162109375
    5. '					' → logprob: -7.792816162109375
    6. '                                   ' → logprob: -7.917816162109375
    7. '                                           ' → logprob: -8.042816162109375
    8. '                   ' → logprob: -8.167816162109375
    9. '                        ' → logprob: -8.167816162109375
    10. '                                               ' → logprob: -9.042816162109375

Token 1329: ' continue' (ID: 4901)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.4190356135368347
    2. ' continue' → logprob: -1.7940356731414795
    3. '                           ' → logprob: -2.5440356731414795
    4. 'continue' (adapté à ' continue') → logprob: -2.6690356731414795
    5. '                                   ' → logprob: -4.2940354347229
    6. '                       ' → logprob: -4.6690354347229
    7. '                                       ' → logprob: -6.2940354347229
    8. '                                           ' → logprob: -6.5440354347229
    9. '                   ' → logprob: -7.9190354347229
    10. '                             ' → logprob: -8.294035911560059

Token 1330: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.015864722430706024
    2. '                   ' → logprob: -5.015864849090576
    3. '                           ' → logprob: -5.640864849090576
    4. '                               ' → logprob: -5.765864849090576
    5. '```' → logprob: -8.015864372253418
    6. '   ' → logprob: -8.140864372253418
    7. ' for' → logprob: -8.140864372253418
    8. '                     ' → logprob: -8.765864372253418
    9. ' if' → logprob: -8.890864372253418
    10. '	                   ' → logprob: -9.015864372253418

Token 1331: '                   ' (ID: 699)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.08947231620550156
    2. '                   ' → logprob: -2.9644722938537598
    3. '                               ' → logprob: -3.9644722938537598
    4. '                           ' → logprob: -4.58947229385376
    5. ' for' → logprob: -6.33947229385376
    6. '```' → logprob: -6.46447229385376
    7. '                    ' → logprob: -8.339472770690918
    8. '                     ' → logprob: -8.589472770690918
    9. '                                   ' → logprob: -8.589472770690918
    10. '               ' → logprob: -8.714472770690918

Token 1332: ' for' (ID: 395)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.6488891839981079
    2. '                           ' → logprob: -1.398889183998108
    3. ' for' → logprob: -2.5238890647888184
    4. '                               ' → logprob: -2.6488890647888184
    5. 'for' (adapté à ' for') → logprob: -3.2738890647888184
    6. '                   ' → logprob: -3.3988890647888184
    7. '                                   ' → logprob: -6.648889064788818
    8. '   ' → logprob: -6.773889064788818
    9. ' next' → logprob: -6.898889064788818
    10. '```' → logprob: -6.898889064788818

Token 1333: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -6.408677290892228e-05
    2. 'nv' → logprob: -10.5000638961792
    3. 'n' → logprob: -10.6250638961792
    4. 'k' → logprob: -12.3750638961792
    5. 'w' → logprob: -13.5000638961792
    6. '   ' → logprob: -13.6250638961792
    7. '
' → logprob: -13.6250638961792
    8. '```' → logprob: -13.6250638961792
    9. 'next' → logprob: -14.5000638961792
    10. ' v' → logprob: -14.8750638961792

Token 1334: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4741363227367401
    2. ' in' → logprob: -0.9741363525390625
    3. 'v' → logprob: -10.474136352539062
    4. '
' → logprob: -11.474136352539062
    5. '```' → logprob: -12.099136352539062
    6. ' ' → logprob: -12.224136352539062
    7. 'range' → logprob: -12.599136352539062
    8. '[v' → logprob: -12.974136352539062
    9. '   ' → logprob: -13.474136352539062
    10. '(v' → logprob: -13.599136352539062

Token 1335: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0052478681318461895
    2. ' range' → logprob: -5.255248069763184
    3. 'v' → logprob: -11.755248069763184
    4. '(range' → logprob: -12.630248069763184
    5. 'len' → logprob: -13.630248069763184
    6. '   ' → logprob: -14.380248069763184
    7. '
' → logprob: -14.755248069763184
    8. 'u' → logprob: -15.630248069763184
    9. ' ' → logprob: -16.255247116088867
    10. '0' → logprob: -16.255247116088867

Token 1336: '(' (ID: 7)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.009823144413530827
    2. '(len' → logprob: -4.634823322296143
    3. '(u' → logprob: -11.009822845458984
    4. '   ' → logprob: -11.509822845458984
    5. '           ' → logprob: -11.759822845458984
    6. ' len' → logprob: -11.884822845458984
    7. '                   ' → logprob: -12.009822845458984
    8. '0' → logprob: -12.384822845458984
    9. '(v' → logprob: -12.509822845458984
    10. '               ' → logprob: -12.509822845458984

Token 1337: '1' (ID: 16)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.003512168535962701
    2. 'u' → logprob: -6.503512382507324
    3. '0' → logprob: -7.003512382507324
    4. 'v' → logprob: -7.378512382507324
    5. '(len' → logprob: -7.878512382507324
    6. '(u' → logprob: -10.378512382507324
    7. ' len' → logprob: -10.628512382507324
    8. '(' → logprob: -11.628512382507324
    9. '
' → logprob: -12.253512382507324
    10. '           ' → logprob: -12.378512382507324

Token 1338: ',len' (ID: 73338)
  Prédit: ',len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',len' → logprob: -0.00357025396078825
    2. ',' → logprob: -5.753570079803467
    3. ',v' → logprob: -8.378570556640625
    4. '(len' → logprob: -9.628570556640625
    5. '<<' → logprob: -10.503570556640625
    6. '<len' → logprob: -10.628570556640625
    7. 'v' → logprob: -11.753570556640625
    8. 'len' → logprob: -12.003570556640625
    9. '                   ' → logprob: -12.253570556640625
    10. '           ' → logprob: -12.253570556640625

Token 1339: '(sub' (ID: 19764)
  Prédit: '(sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sub' → logprob: -0.008647779934108257
    2. 'subset' → logprob: -4.758647918701172
    3. 't' → logprob: -11.008647918701172
    4. 'sub' → logprob: -11.383647918701172
    5. '{sub' → logprob: -13.383647918701172
    6. '(t' → logprob: -13.633647918701172
    7. '_subset' → logprob: -14.133647918701172
    8. '```' → logprob: -14.383647918701172
    9. ' subset' → logprob: -15.258647918701172
    10. '=sub' → logprob: -15.258647918701172

Token 1340: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.4028171896934509
    2. 'subset' → logprob: -1.1528172492980957
    3. 'et' → logprob: -4.402817249298096
    4. '_subset' → logprob: -5.777817249298096
    5. 'uset' → logprob: -8.152816772460938
    6. ' subset' → logprob: -9.902816772460938
    7. 'ub' → logprob: -10.027816772460938
    8. 'aset' → logprob: -10.777816772460938
    9. 'erset' → logprob: -11.277816772460938
    10. '_set' → logprob: -11.277816772460938

Token 1341: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.4259602129459381
    2. 'subset' → logprob: -1.1759601831436157
    3. '(sub' → logprob: -3.3009603023529053
    4. '_subset' → logprob: -7.050960063934326
    5. ' subset' → logprob: -8.300960540771484
    6. 't' → logprob: -8.675960540771484
    7. 'points' → logprob: -9.675960540771484
    8. '=sub' → logprob: -10.550960540771484
    9. 'Points' → logprob: -10.800960540771484
    10. 'set' → logprob: -10.800960540771484

Token 1342: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.010661748237907887
    2. ')):
' → logprob: -4.885661602020264
    3. '):' → logprob: -5.885661602020264
    4. ')):' → logprob: -9.510662078857422
    5. ']):
' → logprob: -10.135662078857422
    6. ')' → logprob: -10.135662078857422
    7. '[' → logprob: -11.135662078857422
    8. '):

' → logprob: -11.260662078857422
    9. '[v' → logprob: -11.385662078857422
    10. ')+' → logprob: -11.635662078857422

Token 1343: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0016689957119524479
    2. '                               ' → logprob: -8.001668930053711
    3. ' if' → logprob: -8.501668930053711
    4. '                           ' → logprob: -8.626668930053711
    5. '					' → logprob: -8.751668930053711
    6. '                        ' → logprob: -9.001668930053711
    7. '```' → logprob: -9.126668930053711
    8. '                        
' → logprob: -9.376668930053711
    9. ' ' → logprob: -9.626668930053711
    10. '                    ' → logprob: -9.876668930053711

Token 1344: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3179481625556946
    2. 'if' (adapté à ' if') → logprob: -1.4429481029510498
    3. ' ' → logprob: -4.192948341369629
    4. '                           ' → logprob: -5.692948341369629
    5. '```' → logprob: -5.942948341369629
    6. ' s' → logprob: -5.942948341369629
    7. '   ' → logprob: -6.067948341369629
    8. ' 
' → logprob: -6.192948341369629
    9. ' v' → logprob: -6.817948341369629
    10. '                               ' → logprob: -6.942948341369629

Token 1345: ' (' (ID: 350)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.2820243239402771
    2. '(s' → logprob: -2.282024383544922
    3. '(not' → logprob: -2.657024383544922
    4. ' not' → logprob: -2.782024383544922
    5. '((' → logprob: -4.782024383544922
    6. ' (' → logprob: -6.532024383544922
    7. '(v' → logprob: -6.532024383544922
    8. '   ' → logprob: -9.407024383544922
    9. 'v' → logprob: -10.032024383544922
    10. '(' → logprob: -10.032024383544922

Token 1346: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.027901064604520798
    2. 'not' → logprob: -3.7779011726379395
    3. '(s' → logprob: -5.9029011726379395
    4. 'sub' → logprob: -6.9029011726379395
    5. '(not' → logprob: -7.7779011726379395
    6. ' not' → logprob: -9.152900695800781
    7. '```' → logprob: -9.152900695800781
    8. '(sub' → logprob: -9.652900695800781
    9. '!(' → logprob: -10.152900695800781
    10. '
' → logprob: -10.277900695800781

Token 1347: '>>' (ID: 3920)
  Prédit: '>>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.0009448148775845766
    2. '>>(' → logprob: -7.1259446144104
    3. '&' → logprob: -10.500945091247559
    4. ' >>' → logprob: -10.750945091247559
    5. '&(' → logprob: -10.875945091247559
    6. '[s' → logprob: -10.875945091247559
    7. '
' → logprob: -11.625945091247559
    8. '|' → logprob: -12.000945091247559
    9. '```' → logprob: -12.000945091247559
    10. '>>>' → logprob: -12.250945091247559

Token 1348: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.1472419600977446e-06
    2. ' v' → logprob: -13.750000953674316
    3. ')v' → logprob: -17.250001907348633
    4. '	v' → logprob: -18.000001907348633
    5. '(v' → logprob: -18.625001907348633
    6. '   ' → logprob: -19.625001907348633
    7. '```' → logprob: -19.750001907348633
    8. '[v' → logprob: -20.000001907348633
    9. ',v' → logprob: -20.500001907348633
    10. '           ' → logprob: -20.875001907348633

Token 1349: ')&' (ID: 34370)
  Prédit: ')&'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')&' → logprob: -0.032937031239271164
    2. '&' → logprob: -3.7829370498657227
    3. ')' → logprob: -4.657937049865723
    4. '1' → logprob: -9.657937049865723
    5. 'u' → logprob: -10.407937049865723
    6. '0' → logprob: -11.032937049865723
    7. ' &' → logprob: -11.407937049865723
    8. '```' → logprob: -11.407937049865723
    9. '&s' → logprob: -11.532937049865723
    10. 'v' → logprob: -12.407937049865723

Token 1350: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023246407508850098
    2. '1' → logprob: -3.7732462882995605
    3. '```' → logprob: -14.398246765136719
    4. '
' → logprob: -15.523246765136719
    5. 'False' → logprob: -16.89824676513672
    6. ' ' → logprob: -16.89824676513672
    7. 'not' → logprob: -18.89824676513672
    8. '=' → logprob: -18.89824676513672
    9. 'v' → logprob: -19.02324676513672
    10. '   ' → logprob: -19.02324676513672

Token 1351: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1314644068479538
    2. ')==' → logprob: -2.1314644813537598
    3. ']==' → logprob: -5.63146448135376
    4. ' ==' → logprob: -7.50646448135376
    5. '']==' → logprob: -8.631464004516602
    6. '()==' → logprob: -9.381464004516602
    7. '```' → logprob: -10.381464004516602
    8. '==
' → logprob: -10.506464004516602
    9. ')' → logprob: -10.756464004516602
    10. '")==' → logprob: -11.256464004516602

Token 1352: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. 'False' → logprob: -17.5
    3. '۰' → logprob: -18.0
    4. '                           ' → logprob: -19.125
    5. '```' → logprob: -19.375
    6. '                       ' → logprob: -19.375
    7. ' ' → logprob: -19.875
    8. '                               ' → logprob: -20.125
    9. '                                   ' → logprob: -20.125
    10. '=' → logprob: -20.625

Token 1353: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.9437710642814636
    2. '                           ' → logprob: -1.1937711238861084
    3. ':
' → logprob: -1.9437711238861084
    4. ':' → logprob: -2.1937711238861084
    5. '                               ' → logprob: -3.4437711238861084
    6. '):
' → logprob: -4.818770885467529
    7. '<|end|>' → logprob: -5.818770885467529
    8. '                       ' → logprob: -5.943770885467529
    9. ')' → logprob: -6.193770885467529
    10. '                            ' → logprob: -6.818770885467529

Token 1354: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.7203681468963623
    2. ' and' → logprob: -0.8453681468963623
    3. '                               ' → logprob: -2.5953681468963623
    4. ':
' → logprob: -5.845368385314941
    5. '                            ' → logprob: -6.095368385314941
    6. '                       ' → logprob: -6.845368385314941
    7. '                             ' → logprob: -6.970368385314941
    8. ' ' → logprob: -8.095368385314941
    9. '                                   ' → logprob: -8.345368385314941
    10. ':' → logprob: -8.720368385314941

Token 1355: ' cost' (ID: 3097)
  Prédit: ' tsp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tsp' → logprob: -0.30048221349716187
    2. '                               ' → logprob: -2.0504822731018066
    3. 't' → logprob: -2.9254822731018066
    4. '                           ' → logprob: -3.9254822731018066
    5. '                                   ' → logprob: -4.300482273101807
    6. ' if' → logprob: -4.675482273101807
    7. ' t' → logprob: -4.925482273101807
    8. '                             ' → logprob: -5.425482273101807
    9. ' dp' → logprob: -5.925482273101807
    10. 'if' → logprob: -5.925482273101807

Token 1356: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7659863233566284
    2. '=t' → logprob: -0.8909863233566284
    3. '+' → logprob: -3.015986442565918
    4. '+t' → logprob: -3.390986442565918
    5. ' =' → logprob: -3.640986442565918
    6. '[t' → logprob: -4.765986442565918
    7. 't' → logprob: -5.890986442565918
    8. ' +' → logprob: -6.140986442565918
    9. '+=' → logprob: -7.140986442565918
    10. '+
' → logprob: -7.890986442565918

Token 1357: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.1960998922586441
    2. 't' → logprob: -1.821099877357483
    3. 'dp' → logprob: -4.696099758148193
    4. ' dist' → logprob: -5.196099758148193
    5. ' tsp' → logprob: -7.321099758148193
    6. '                           ' → logprob: -7.696099758148193
    7. '                               ' → logprob: -8.946100234985352
    8. ' dp' → logprob: -9.821100234985352
    9. 'td' → logprob: -9.946100234985352
    10. '                                   ' → logprob: -9.946100234985352

Token 1358: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.014405123889446259
    2. 't' → logprob: -4.389405250549316
    3. '(sub' → logprob: -7.139405250549316
    4. '[t' → logprob: -7.889405250549316
    5. 'subset' → logprob: -7.889405250549316
    6. '(t' → logprob: -9.639405250549316
    7. '[' → logprob: -10.139405250549316
    8. '[sub' → logprob: -10.514405250549316
    9. 'pos' → logprob: -10.639405250549316
    10. '```' → logprob: -10.764405250549316

Token 1359: '[' (ID: 58)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.0014363046502694488
    2. '[t' → logprob: -6.751436233520508
    3. 'u' → logprob: -8.751436233520508
    4. '[sub' → logprob: -9.501436233520508
    5. 't' → logprob: -11.001436233520508
    6. '[' → logprob: -11.376436233520508
    7. 'subset' → logprob: -13.626436233520508
    8. '[pos' → logprob: -13.876436233520508
    9. 'sub' → logprob: -14.376436233520508
    10. '[v' → logprob: -14.501436233520508

Token 1360: 'subset' (ID: 163297)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0005022776313126087
    2. 'subset' → logprob: -7.875502109527588
    3. '[u' → logprob: -9.250502586364746
    4. ' u' → logprob: -11.500502586364746
    5. 't' → logprob: -11.625502586364746
    6. '	u' → logprob: -13.500502586364746
    7. 's' → logprob: -14.000502586364746
    8. '[' → logprob: -14.125502586364746
    9. 'user' → logprob: -14.375502586364746
    10. 'sub' → logprob: -14.375502586364746

Token 1361: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.0011626037303358316
    2. '[u' → logprob: -7.376162528991699
    3. 'u' → logprob: -8.2511625289917
    4. 'v' → logprob: -9.0011625289917
    5. '[v' → logprob: -10.1261625289917
    6. '_tokens' → logprob: -10.8761625289917
    7. 'Points' → logprob: -11.5011625289917
    8. '_u' → logprob: -11.5011625289917
    9. 'points' → logprob: -11.7511625289917
    10. '[' → logprob: -11.8761625289917

Token 1362: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.23264233767986298
    2. 'u' → logprob: -1.6076422929763794
    3. '][' → logprob: -5.10764217376709
    4. '[v' → logprob: -7.85764217376709
    5. '[' → logprob: -8.10764217376709
    6. 's' → logprob: -9.10764217376709
    7. '[s' → logprob: -9.35764217376709
    8. 'v' → logprob: -9.98264217376709
    9. '```' → logprob: -10.73264217376709
    10. ',u' → logprob: -10.85764217376709

Token 1363: ']][' (ID: 61032)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.012051941826939583
    2. ']+' → logprob: -4.512052059173584
    3. ']' → logprob: -7.012052059173584
    4. ']][' → logprob: -10.387051582336426
    5. '+' → logprob: -10.512051582336426
    6. ']
' → logprob: -11.137051582336426
    7. '[v' → logprob: -11.512051582336426
    8. ']<<' → logprob: -12.887051582336426
    9. ']|' → logprob: -13.012051582336426
    10. '[' → logprob: -13.137051582336426

Token 1364: 'subset' (ID: 163297)
  Prédit: 'subset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -1.1994775377388578e-05
    2. '
' → logprob: -11.750012397766113
    3. ' subset' → logprob: -12.500012397766113
    4. 'v' → logprob: -16.625011444091797
    5. '_subset' → logprob: -16.750011444091797
    6. 'substring' → logprob: -17.125011444091797
    7. '[
' → logprob: -17.250011444091797
    8. '[' → logprob: -17.500011444091797
    9. 't' → logprob: -17.625011444091797
    10. '
' → logprob: -17.750011444091797

Token 1365: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.0005371859879232943
    2. 'mask' → logprob: -8.750536918640137
    3. 'v' → logprob: -9.000536918640137
    4. ']' → logprob: -10.000536918640137
    5. '[v' → logprob: -10.375536918640137
    6. 'points' → logprob: -10.500536918640137
    7. '(v' → logprob: -10.875536918640137
    8. '```' → logprob: -10.875536918640137
    9. 'subset' → logprob: -11.250536918640137
    10. ']
' → logprob: -11.375536918640137

Token 1366: '[v' (ID: 36561)
  Prédit: ']+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.19943836331367493
    2. ']' → logprob: -1.9494383335113525
    3. 'v' → logprob: -3.3244383335113525
    4. '+' → logprob: -6.699438571929932
    5. '[v' → logprob: -7.574438571929932
    6. '][' → logprob: -7.949438571929932
    7. ']|' → logprob: -9.449438095092773
    8. ']
' → logprob: -9.824438095092773
    9. ']+=' → logprob: -9.949438095092773
    10. ']<<' → logprob: -9.949438095092773

Token 1367: ']]
' (ID: 29446)
  Prédit: ']+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.22585639357566833
    2. ']' → logprob: -1.6008564233779907
    3. ']
' → logprob: -8.22585678100586
    4. '+' → logprob: -8.97585678100586
    5. ']+=' → logprob: -10.97585678100586
    6. ']+"' → logprob: -11.35085678100586
    7. ']+\' → logprob: -12.72585678100586
    8. '```' → logprob: -12.72585678100586
    9. '+]' → logprob: -12.97585678100586
    10. '[' → logprob: -13.85085678100586

Token 1368: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.008176936767995358
    2. '                               ' → logprob: -5.508176803588867
    3. '+' → logprob: -6.008176803588867
    4. '                                   ' → logprob: -7.758176803588867
    5. '                       ' → logprob: -7.883176803588867
    6. '                            
' → logprob: -8.508176803588867
    7. '                            ' → logprob: -8.633176803588867
    8. ')' → logprob: -9.383176803588867
    9. '```' → logprob: -9.633176803588867
    10. '                             ' → logprob: -9.883176803588867

Token 1369: ' ns' (ID: 18343)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7474499344825745
    2. ' tsp' → logprob: -1.6224498748779297
    3. '                           ' → logprob: -2.1224498748779297
    4. '                               ' → logprob: -2.6224498748779297
    5. 'if' → logprob: -2.7474498748779297
    6. '                                   ' → logprob: -3.7474498748779297
    7. 't' → logprob: -4.24744987487793
    8. '               ' → logprob: -5.99744987487793
    9. '                             ' → logprob: -6.12244987487793
    10. '           ' → logprob: -6.12244987487793

Token 1370: '=s' (ID: 32455)
  Prédit: '=s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=s' → logprob: -0.4245353937149048
    2. ' =' → logprob: -1.5495353937149048
    3. '=' → logprob: -2.5495352745056152
    4. 's' → logprob: -3.2995352745056152
    5. '=(' → logprob: -4.299535274505615
    6. '[s' → logprob: -6.424535274505615
    7. '=
' → logprob: -6.924535274505615
    8. '_s' → logprob: -7.049535274505615
    9. '=[' → logprob: -8.174535751342773
    10. '(s' → logprob: -8.299535751342773

Token 1371: '|(' (ID: 153684)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.06492993235588074
    2. '|(' → logprob: -2.814929962158203
    3. '=' → logprob: -6.439929962158203
    4. '=s' → logprob: -6.939929962158203
    5. ' |' → logprob: -8.064929962158203
    6. 'ns' → logprob: -11.189929962158203
    7. ' =' → logprob: -11.439929962158203
    8. '=(' → logprob: -11.689929962158203
    9. 's' → logprob: -11.814929962158203
    10. '(ns' → logprob: -11.939929962158203

Token 1372: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. '(' → logprob: -11.000017166137695
    3. '```' → logprob: -18.125017166137695
    4. '   ' → logprob: -20.375017166137695
    5. ' ' → logprob: -20.625017166137695
    6. '           ' → logprob: -21.875017166137695
    7. '１' → logprob: -22.000017166137695
    8. '``' → logprob: -22.250017166137695
    9. ' (' → logprob: -22.750017166137695
    10. '
' → logprob: -22.875017166137695

Token 1373: '<<' (ID: 5354)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1650879979133606
    2. '<<' → logprob: -1.9150879383087158
    3. '>>' → logprob: -5.415088176727295
    4. '(' → logprob: -7.915088176727295
    5. '```' → logprob: -11.040087699890137
    6. '>' → logprob: -11.790087699890137
    7. '[' → logprob: -13.290087699890137
    8. '>>>' → logprob: -13.290087699890137
    9. 'v' → logprob: -13.290087699890137
    10. '<<(' → logprob: -13.790087699890137

Token 1374: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.128163257315464e-07
    2. '[v' → logprob: -15.875
    3. ' v' → logprob: -16.75
    4. '	v' → logprob: -17.25
    5. '(v' → logprob: -17.375
    6. ')v' → logprob: -17.375
    7. '
' → logprob: -19.25
    8. '```' → logprob: -19.25
    9. '$v' → logprob: -20.5
    10. '[' → logprob: -20.625

Token 1375: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06121131777763367
    2. ')
' → logprob: -2.936211347579956
    3. ')+' → logprob: -5.561211109161377
    4. ')]' → logprob: -7.936211109161377
    5. ')<<' → logprob: -7.936211109161377
    6. '                           ' → logprob: -8.186211585998535
    7. ']' → logprob: -8.311211585998535
    8. '[v' → logprob: -8.686211585998535
    9. ')v' → logprob: -8.936211585998535
    10. '                               ' → logprob: -8.936211585998535

Token 1376: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.16590158641338348
    2. '                               ' → logprob: -2.6659016609191895
    3. '+' → logprob: -3.2909016609191895
    4. '```' → logprob: -4.0409016609191895
    5. '                       ' → logprob: -4.9159016609191895
    6. '                   ' → logprob: -5.5409016609191895
    7. '                                   ' → logprob: -5.7909016609191895
    8. '=' → logprob: -6.0409016609191895
    9. '
' → logprob: -6.1659016609191895
    10. '                             ' → logprob: -6.7909016609191895

Token 1377: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.031477443873882294
    2. 't' → logprob: -4.156477451324463
    3. '                               ' → logprob: -5.031477451324463
    4. ' if' → logprob: -5.156477451324463
    5. '                           ' → logprob: -6.531477451324463
    6. '```' → logprob: -7.031477451324463
    7. '                                   ' → logprob: -7.531477451324463
    8. '``' → logprob: -10.781476974487305
    9. '                       ' → logprob: -10.906476974487305
    10. '                   ' → logprob: -11.031476974487305

Token 1378: ' tsp' (ID: 68800)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0039049265906214714
    2. ' tsp' → logprob: -5.628904819488525
    3. 'dp' → logprob: -8.628905296325684
    4. '                           ' → logprob: -10.378905296325684
    5. 'cost' → logprob: -10.753905296325684
    6. 'ts' → logprob: -11.128905296325684
    7. '                               ' → logprob: -11.253905296325684
    8. '   ' → logprob: -11.503905296325684
    9. ' t' → logprob: -12.378905296325684
    10. ' dp' → logprob: -12.628905296325684

Token 1379: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.00025287605240009725
    2. '[s' → logprob: -9.250252723693848
    3. 's' → logprob: -9.500252723693848
    4. 'dp' → logprob: -10.125252723693848
    5. '
' → logprob: -10.875252723693848
    6. '	dp' → logprob: -12.500252723693848
    7. 'Dp' → logprob: -12.750252723693848
    8. '_DP' → logprob: -12.875252723693848
    9. '`s' → logprob: -13.375252723693848
    10. 'n' → logprob: -13.625252723693848

Token 1380: '[' (ID: 58)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.0007641222910024226
    2. 'ns' → logprob: -7.625763893127441
    3. '[' → logprob: -8.875763893127441
    4. 's' → logprob: -9.000763893127441
    5. '
' → logprob: -12.375763893127441
    6. '```' → logprob: -13.500763893127441
    7. '   ' → logprob: -14.125763893127441
    8. '[n' → logprob: -14.250763893127441
    9. '[
' → logprob: -14.500763893127441
    10. '<s' → logprob: -14.625763893127441

Token 1381: 'ns' (ID: 6097)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3133942484855652
    2. 'ns' → logprob: -1.31339430809021
    3. ' s' → logprob: -10.313394546508789
    4. ' ns' → logprob: -10.688394546508789
    5. '   ' → logprob: -11.313394546508789
    6. '(ns' → logprob: -11.313394546508789
    7. '           ' → logprob: -11.688394546508789
    8. '_ns' → logprob: -11.938394546508789
    9. 'n' → logprob: -12.063394546508789
    10. '	ns' → logprob: -12.313394546508789

Token 1382: '][' (ID: 2696)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.1867288500070572
    2. '[' → logprob: -1.811728835105896
    3. '[sub' → logprob: -5.3117289543151855
    4. '[t' → logprob: -7.0617289543151855
    5. '][' → logprob: -7.1867289543151855
    6. '[next' → logprob: -9.561728477478027
    7. ')[' → logprob: -9.686728477478027
    8. '[u' → logprob: -9.811728477478027
    9. '
' → logprob: -10.061728477478027
    10. 'ns' → logprob: -10.311728477478027

Token 1383: 'v' (ID: 85)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.12717986106872559
    2. 'v' → logprob: -2.1271798610687256
    3. '[u' → logprob: -9.252180099487305
    4. 's' → logprob: -9.377180099487305
    5. 'ns' → logprob: -11.127180099487305
    6. '[v' → logprob: -11.377180099487305
    7. '0' → logprob: -12.127180099487305
    8. '
' → logprob: -12.252180099487305
    9. '```' → logprob: -12.377180099487305
    10. 't' → logprob: -12.502180099487305

Token 1384: ']>' (ID: 54651)
  Prédit: ']>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']>' → logprob: -0.06196993216872215
    2. ']' → logprob: -3.4369699954986572
    3. ']<' → logprob: -4.561969757080078
    4. ']+' → logprob: -4.561969757080078
    5. ']==' → logprob: -5.686969757080078
    6. '>' → logprob: -6.436969757080078
    7. ']<=' → logprob: -7.561969757080078
    8. '+' → logprob: -7.686969757080078
    9. ']!=' → logprob: -8.061969757080078
    10. '][' → logprob: -8.186969757080078

Token 1385: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -2.3795937522663735e-05
    2. '```' → logprob: -11.37502384185791
    3. '`t' → logprob: -11.87502384185791
    4. ' tsp' → logprob: -12.87502384185791
    5. 'ts' → logprob: -14.37502384185791
    6. '                               ' → logprob: -15.12502384185791
    7. '<t' → logprob: -15.12502384185791
    8. '                           ' → logprob: -15.12502384185791
    9. '   ' → logprob: -15.25002384185791
    10. '``' → logprob: -15.37502384185791

Token 1386: 'sp' (ID: 1148)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.008044733665883541
    2. ' tsp' → logprob: -5.008044719696045
    3. 's' → logprob: -7.008044719696045
    4. 'sp' → logprob: -8.508045196533203
    5. 'ts' → logprob: -9.383045196533203
    6. '```' → logprob: -10.383045196533203
    7. '[t' → logprob: -11.133045196533203
    8. 'st' → logprob: -11.258045196533203
    9. '`t' → logprob: -11.258045196533203
    10. '=t' → logprob: -11.758045196533203

Token 1387: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.0015181921189650893
    2. 's' → logprob: -7.001518249511719
    3. '[s' → logprob: -7.626518249511719
    4. 'Dp' → logprob: -9.626518249511719
    5. '_ds' → logprob: -10.626518249511719
    6. 'p' → logprob: -11.626518249511719
    7. 'sp' → logprob: -12.876518249511719
    8. '_s' → logprob: -13.251518249511719
    9. '[' → logprob: -13.501518249511719
    10. 'dp' → logprob: -13.501518249511719

Token 1388: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.21510104835033417
    2. '[' → logprob: -1.7151010036468506
    3. 'ns' → logprob: -4.46510124206543
    4. 's' → logprob: -6.21510124206543
    5. '(ns' → logprob: -11.09010124206543
    6. '_ns' → logprob: -11.09010124206543
    7. '```' → logprob: -11.46510124206543
    8. '
' → logprob: -11.96510124206543
    9. '                   ' → logprob: -12.09010124206543
    10. '(s' → logprob: -12.09010124206543

Token 1389: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6608825325965881
    2. '[s' → logprob: -0.7858825325965881
    3. 'ns' → logprob: -3.6608824729919434
    4. 's' → logprob: -6.535882472991943
    5. '_ns' → logprob: -8.785882949829102
    6. '
' → logprob: -9.410882949829102
    7. '(ns' → logprob: -9.535882949829102
    8. '][' → logprob: -9.660882949829102
    9. '+' → logprob: -9.910882949829102
    10. '```' → logprob: -10.160882949829102

Token 1390: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5493005514144897
    2. 'ns' → logprob: -0.9243005514144897
    3. 'v' → logprob: -3.6743006706237793
    4. '(ns' → logprob: -9.299300193786621
    5. 'last' → logprob: -9.549300193786621
    6. 's' → logprob: -9.549300193786621
    7. 't' → logprob: -10.049300193786621
    8. '[u' → logprob: -10.174300193786621
    9. '
' → logprob: -10.424300193786621
    10. '```' → logprob: -10.799300193786621

Token 1391: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03492201864719391
    2. ' +' → logprob: -3.9099221229553223
    3. '[' → logprob: -4.534922122955322
    4. '[s' → logprob: -7.409922122955322
    5. '+t' → logprob: -7.409922122955322
    6. '[v' → logprob: -7.534922122955322
    7. '[u' → logprob: -7.659922122955322
    8. ']+' → logprob: -7.659922122955322
    9. '+s' → logprob: -8.159921646118164
    10. '[t' → logprob: -8.284921646118164

Token 1392: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.023269938305020332
    2. 'dist' → logprob: -3.7732698917388916
    3. ' cost' → logprob: -10.773269653320312
    4. '(cost' → logprob: -13.273269653320312
    5. '```' → logprob: -14.273269653320312
    6. ' dist' → logprob: -14.398269653320312
    7. '   ' → logprob: -15.023269653320312
    8. '(dist' → logprob: -16.523269653320312
    9. '
' → logprob: -17.023269653320312
    10. '``' → logprob: -17.398269653320312

Token 1393: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0614795684814453
    2. '+' → logprob: -1.1864795684814453
    3. ':
' → logprob: -1.9364795684814453
    4. '                               ' → logprob: -2.0614795684814453
    5. '                           ' → logprob: -3.0614795684814453
    6. '                                   ' → logprob: -4.436479568481445
    7. ' +' → logprob: -5.686479568481445
    8. '                       ' → logprob: -6.186479568481445
    9. '               ' → logprob: -6.311479568481445
    10. '):
' → logprob: -6.436479568481445

Token 1394: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.059674352407455444
    2. '                                   ' → logprob: -3.6846742630004883
    3. '                           ' → logprob: -4.559674263000488
    4. '                                       ' → logprob: -4.684674263000488
    5. '=' → logprob: -5.934674263000488
    6. '                                           ' → logprob: -6.184674263000488
    7. '```' → logprob: -6.309674263000488
    8. '                       ' → logprob: -7.059674263000488
    9. ' =' → logprob: -7.309674263000488
    10. '                   ' → logprob: -7.559674263000488

Token 1395: ' tsp' (ID: 68800)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0014327395474538207
    2. ' tsp' → logprob: -7.1264328956604
    3. '                               ' → logprob: -8.126432418823242
    4. '`t' → logprob: -9.001432418823242
    5. '```' → logprob: -9.376432418823242
    6. '                                   ' → logprob: -10.251432418823242
    7. '                           ' → logprob: -10.501432418823242
    8. '
' → logprob: -10.626432418823242
    9. 'ts' → logprob: -12.126432418823242
    10. '``' → logprob: -12.251432418823242

Token 1396: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -7.584239938296378e-06
    2. 't' → logprob: -12.500007629394531
    3. '_ds' → logprob: -13.500007629394531
    4. 'Dp' → logprob: -14.750007629394531
    5. '
' → logprob: -15.375007629394531
    6. '[' → logprob: -15.375007629394531
    7. '```' → logprob: -15.375007629394531
    8. '_tp' → logprob: -15.625007629394531
    9. '[t' → logprob: -15.750007629394531
    10. '_t' → logprob: -15.750007629394531

Token 1397: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.8232690460281447e-05
    2. '
' → logprob: -10.875048637390137
    3. 'ns' → logprob: -11.375048637390137
    4. '[t' → logprob: -12.375048637390137
    5. '	ns' → logprob: -12.625048637390137
    6. '_ns' → logprob: -12.875048637390137
    7. '```' → logprob: -13.375048637390137
    8. '(ns' → logprob: -13.625048637390137
    9. '[
' → logprob: -13.750048637390137
    10. 't' → logprob: -14.000048637390137

Token 1398: 'ns' (ID: 6097)
  Prédit: 'ns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.0001818489981815219
    2. 's' → logprob: -8.625182151794434
    3. '
' → logprob: -13.875182151794434
    4. '(ns' → logprob: -14.125182151794434
    5. '_ns' → logprob: -16.000181198120117
    6. ' ns' → logprob: -16.250181198120117
    7. '1' → logprob: -16.375181198120117
    8. '[' → logprob: -16.500181198120117
    9. '   ' → logprob: -17.500181198120117
    10. 'v' → logprob: -17.500181198120117

Token 1399: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01607108674943447
    2. '[sub' → logprob: -4.266071319580078
    3. '][' → logprob: -7.141071319580078
    4. '
' → logprob: -7.141071319580078
    5. '[t' → logprob: -9.016071319580078
    6. ')[' → logprob: -10.141071319580078
    7. '[s' → logprob: -10.266071319580078
    8. '[js' → logprob: -11.266071319580078
    9. '[next' → logprob: -11.516071319580078
    10. '[v' → logprob: -11.641071319580078

Token 1400: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0009638655465096235
    2. 'u' → logprob: -7.0009636878967285
    3. '[v' → logprob: -10.875964164733887
    4. 's' → logprob: -11.000964164733887
    5. 'ns' → logprob: -11.250964164733887
    6. '[u' → logprob: -13.500964164733887
    7. ' v' → logprob: -14.000964164733887
    8. 'sub' → logprob: -14.625964164733887
    9. '```' → logprob: -15.250964164733887
    10. '
' → logprob: -15.375964164733887

Token 1401: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.0746622234582901
    2. '=' → logprob: -2.699662208557129
    3. '=
' → logprob: -6.574662208557129
    4. ']' → logprob: -6.949662208557129
    5. '][' → logprob: -7.824662208557129
    6. '                               ' → logprob: -7.949662208557129
    7. '[' → logprob: -7.949662208557129
    8. '=t' → logprob: -8.574662208557129
    9. '=s' → logprob: -8.824662208557129
    10. '```' → logprob: -9.074662208557129

Token 1402: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -7.3458322731312364e-06
    2. ' tsp' → logprob: -12.250007629394531
    3. '                               ' → logprob: -14.375007629394531
    4. '`t' → logprob: -14.750007629394531
    5. 'ts' → logprob: -15.125007629394531
    6. 'tp' → logprob: -15.500007629394531
    7. '   ' → logprob: -15.625007629394531
    8. '                                   ' → logprob: -15.750007629394531
    9. '                           ' → logprob: -16.00000762939453
    10. '[t' → logprob: -16.12500762939453

Token 1403: 'sp' (ID: 1148)
  Prédit: 'sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sp' → logprob: -0.0010737768607214093
    2. 's' → logprob: -6.876073837280273
    3. 'p' → logprob: -10.751073837280273
    4. 'st' → logprob: -11.876073837280273
    5. 'ps' → logprob: -12.376073837280273
    6. '[t' → logprob: -13.001073837280273
    7. 'pst' → logprob: -13.001073837280273
    8. '_s' → logprob: -13.751073837280273
    9. 't' → logprob: -14.126073837280273
    10. '_sp' → logprob: -14.501073837280273

Token 1404: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -1.27099974633893e-05
    2. 'dp' → logprob: -11.750012397766113
    3. 'Dp' → logprob: -13.125012397766113
    4. 'p' → logprob: -13.875012397766113
    5. '	dp' → logprob: -15.000012397766113
    6. '[s' → logprob: -15.000012397766113
    7. '_lp' → logprob: -15.500012397766113
    8. '_tp' → logprob: -15.625012397766113
    9. '
' → logprob: -16.00001335144043
    10. 's' → logprob: -16.12501335144043

Token 1405: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.00018446780450176448
    2. 's' → logprob: -9.375184059143066
    3. '[' → logprob: -9.500184059143066
    4. 't' → logprob: -12.000184059143066
    5. '[t' → logprob: -12.250184059143066
    6. '_dp' → logprob: -12.875184059143066
    7. '[
' → logprob: -13.500184059143066
    8. '][' → logprob: -13.625184059143066
    9. 'ns' → logprob: -14.000184059143066
    10. '_s' → logprob: -14.000184059143066

Token 1406: '][' (ID: 2696)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.2530464231967926
    2. 's' → logprob: -1.5030463933944702
    3. '][' → logprob: -7.00304651260376
    4. '[' → logprob: -9.503046035766602
    5. '{s' → logprob: -9.503046035766602
    6. 'ns' → logprob: -11.378046035766602
    7. '_s' → logprob: -11.503046035766602
    8. '[v' → logprob: -11.753046035766602
    9. '[u' → logprob: -12.003046035766602
    10. '[n' → logprob: -12.503046035766602

Token 1407: 'u' (ID: 84)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.029577139765024185
    2. 'u' → logprob: -3.7795772552490234
    3. 'last' → logprob: -5.654577255249023
    4. '0' → logprob: -6.029577255249023
    5. 'ns' → logprob: -9.154577255249023
    6. 'v' → logprob: -9.279577255249023
    7. '
' → logprob: -9.279577255249023
    8. '[u' → logprob: -10.529577255249023
    9. ' s' → logprob: -11.154577255249023
    10. '[s' → logprob: -11.279577255249023

Token 1408: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07667279243469238
    2. ']+' → logprob: -2.8266727924346924
    3. '][' → logprob: -4.576672554016113
    4. '[' → logprob: -6.576672554016113
    5. ' +' → logprob: -7.076672554016113
    6. '+t' → logprob: -7.076672554016113
    7. ']' → logprob: -7.451672554016113
    8. '+s' → logprob: -8.701672554016113
    9. '+[' → logprob: -8.826672554016113
    10. '+p' → logprob: -9.701672554016113

Token 1409: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -1.4259644558478612e-05
    2. 'dist' → logprob: -11.750014305114746
    3. ' cost' → logprob: -12.000014305114746
    4. '(cost' → logprob: -16.62501335144043
    5. '
' → logprob: -16.87501335144043
    6. 't' → logprob: -17.37501335144043
    7. '```' → logprob: -18.87501335144043
    8. '   ' → logprob: -19.37501335144043
    9. 'code' → logprob: -19.62501335144043
    10. 'cos' → logprob: -20.37501335144043

Token 1410: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.34197551012039185
    2. '           ' → logprob: -1.966975450515747
    3. '
' → logprob: -2.216975450515747
    4. ' for' → logprob: -3.341975450515747
    5. '               ' → logprob: -6.341975688934326
    6. '```' → logprob: -6.716975688934326
    7. '       ' → logprob: -6.966975688934326
    8. '                               ' → logprob: -7.466975688934326
    9. '                   ' → logprob: -8.216975212097168
    10. '   ' → logprob: -8.966975212097168

Token 1411: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1546056270599365
    2. 'for' → logprob: -1.5296056270599365
    3. '           ' → logprob: -1.6546056270599365
    4. '                           ' → logprob: -2.1546056270599365
    5. '                               ' → logprob: -2.4046056270599365
    6. ')' → logprob: -4.279605865478516
    7. '                                   ' → logprob: -4.529605865478516
    8. '               ' → logprob: -4.654605865478516
    9. '```' → logprob: -4.654605865478516
    10. '                   ' → logprob: -4.779605865478516

Token 1412: ' full' (ID: 3149)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006352719850838184
    2. '           ' → logprob: -6.00635290145874
    3. ' for' → logprob: -6.63135290145874
    4. 'final' → logprob: -6.88135290145874
    5. 'last' → logprob: -7.38135290145874
    6. 'full' (adapté à ' full') → logprob: -7.63135290145874
    7. '```' → logprob: -9.006352424621582
    8. 'finish' → logprob: -9.131352424621582
    9. 'min' → logprob: -10.256352424621582
    10. 'end' → logprob: -10.381352424621582

Token 1413: '=(' (ID: 9893)
  Prédit: '_mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.00783031526952982
    2. '_s' → logprob: -5.5078301429748535
    3. 'mask' → logprob: -5.8828301429748535
    4. '_masks' → logprob: -8.132830619812012
    5. '_set' → logprob: -8.632830619812012
    6. '```' → logprob: -8.757830619812012
    7. '_sub' → logprob: -9.757830619812012
    8. '_subset' → logprob: -9.757830619812012
    9. '_size' → logprob: -10.257830619812012
    10. 's' → logprob: -10.257830619812012

Token 1414: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0021859495900571346
    2. '1' → logprob: -6.127185821533203
    3. ' (' → logprob: -14.877185821533203
    4. '((' → logprob: -15.002185821533203
    5. '(full' → logprob: -16.127185821533203
    6. '```' → logprob: -17.127185821533203
    7. '
' → logprob: -17.877185821533203
    8. 'full' → logprob: -17.877185821533203
    9. '(len' → logprob: -18.377185821533203
    10. '(s' → logprob: -19.127185821533203

Token 1415: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -9.088346359931165e-07
    2. ' <<' → logprob: -15.125000953674316
    3. '<<(' → logprob: -15.500000953674316
    4. ')<<' → logprob: -15.500000953674316
    5. '()<<' → logprob: -16.875
    6. '```' → logprob: -17.25
    7. '<<<' → logprob: -17.5
    8. ']<<' → logprob: -18.0
    9. '1' → logprob: -18.0
    10. '
' → logprob: -18.875

Token 1416: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.0445127372804563e-05
    2. '(len' → logprob: -11.50001049041748
    3. ' len' → logprob: -16.250009536743164
    4. '```' → logprob: -17.000009536743164
    5. '           ' → logprob: -17.750009536743164
    6. '[len' → logprob: -17.875009536743164
    7. 'subset' → logprob: -18.875009536743164
    8. '
' → logprob: -19.375009536743164
    9. '<len' → logprob: -19.500009536743164
    10. 'full' → logprob: -19.875009536743164

Token 1417: '(sub' (ID: 19764)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.10402073711156845
    2. 'len' → logprob: -2.354020833969116
    3. '(len' → logprob: -5.979020595550537
    4. '(sub' → logprob: -6.979020595550537
    5. ' subset' → logprob: -8.854021072387695
    6. 'sub' → logprob: -8.854021072387695
    7. '_subset' → logprob: -9.979021072387695
    8. '[len' → logprob: -11.979021072387695
    9. '<len' → logprob: -12.979021072387695
    10. '{sub' → logprob: -14.229021072387695

Token 1418: 'set' (ID: 977)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.20559462904930115
    2. 'set' → logprob: -2.330594539642334
    3. '_subset' → logprob: -2.455594539642334
    4. ' subset' → logprob: -6.080594539642334
    5. '_set' → logprob: -8.705595016479492
    6. '```' → logprob: -8.705595016479492
    7. '(set' → logprob: -10.705595016479492
    8. 'uset' → logprob: -10.830595016479492
    9. '(sub' → logprob: -11.330595016479492
    10. 'aset' → logprob: -11.580595016479492

Token 1419: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.025342809036374092
    2. '(sub' → logprob: -3.7753427028656006
    3. 'subset' → logprob: -6.27534294128418
    4. '_subset' → logprob: -8.52534294128418
    5. ' subset' → logprob: -12.65034294128418
    6. '_sub' → logprob: -12.90034294128418
    7. 'sub' → logprob: -13.40034294128418
    8. '```' → logprob: -13.52534294128418
    9. 'Points' → logprob: -14.15034294128418
    10. '=sub' → logprob: -14.15034294128418

Token 1420: '))-' (ID: 172027)
  Prédit: ')-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')-' → logprob: -0.0889820009469986
    2. ')' → logprob: -2.463982105255127
    3. ')-(' → logprob: -11.213981628417969
    4. '_len' → logprob: -12.588981628417969
    5. '))-' → logprob: -12.963981628417969
    6. '   ' → logprob: -12.963981628417969
    7. 'len' → logprob: -13.088981628417969
    8. ')+' → logprob: -13.338981628417969
    9. '           ' → logprob: -13.338981628417969
    10. '```' → logprob: -13.463981628417969

Token 1421: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. '
' → logprob: -13.12500286102295
    3. '```' → logprob: -15.50000286102295
    4. ' ' → logprob: -16.125001907348633
    5. 'subset' → logprob: -16.625001907348633
    6. '   ' → logprob: -17.875001907348633
    7. '           ' → logprob: -18.312501907348633
    8. '(' → logprob: -18.625001907348633
    9. '﻿' → logprob: -18.937501907348633
    10. ',' → logprob: -18.937501907348633

Token 1422: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.038875680416822433
    2. '           ' → logprob: -4.038875579833984
    3. 'for' → logprob: -4.038875579833984
    4. ' for' → logprob: -6.163875579833984
    5. '            
' → logprob: -8.913875579833984
    6. '               ' → logprob: -9.163875579833984
    7. '```' → logprob: -9.163875579833984
    8. '
' → logprob: -9.413875579833984
    9. 'full' → logprob: -9.538875579833984
    10. ')' → logprob: -9.788875579833984

Token 1423: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18742124736309052
    2. 'for' → logprob: -2.1874213218688965
    3. ' for' → logprob: -2.9374213218688965
    4. '       ' → logprob: -6.3124213218688965
    5. '
' → logprob: -6.6874213218688965
    6. '```' → logprob: -6.8124213218688965
    7. '   ' → logprob: -7.3124213218688965
    8. '               ' → logprob: -8.187420845031738
    9. 'min' → logprob: -8.687420845031738
    10. '                   ' → logprob: -9.937420845031738

Token 1424: ' min' (ID: 1349)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.160273477435112
    2. 'min' (adapté à ' min') → logprob: -2.160273551940918
    3. 'ans' → logprob: -3.910273551940918
    4. 'ret' → logprob: -5.160273551940918
    5. 'best' → logprob: -5.285273551940918
    6. 'for' → logprob: -6.535273551940918
    7. 'answer' → logprob: -8.785273551940918
    8. 'cost' → logprob: -9.410273551940918
    9. 'rest' → logprob: -10.285273551940918
    10. 'result' → logprob: -10.410273551940918

Token 1425: '_t' (ID: 838)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.2002750039100647
    2. '_time' → logprob: -1.95027494430542
    3. 'cost' → logprob: -3.45027494430542
    4. '_t' → logprob: -6.32527494430542
    5. '_trip' → logprob: -6.32527494430542
    6. '_route' → logprob: -6.45027494430542
    7. '_return' → logprob: -7.32527494430542
    8. '_dist' → logprob: -7.57527494430542
    9. '_val' → logprob: -8.075275421142578
    10. '_path' → logprob: -8.700275421142578

Token 1426: 'sp' (ID: 1148)
  Prédit: 'ime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ime' → logprob: -0.004062490072101355
    2. 'rip' → logprob: -5.879062652587891
    3. 'our' → logprob: -7.504062652587891
    4. 'r' → logprob: -7.504062652587891
    5. 'time' → logprob: -9.75406265258789
    6. '_time' → logprob: -10.37906265258789
    7. 'sp' → logprob: -11.00406265258789
    8. 't' → logprob: -12.00406265258789
    9. '=' → logprob: -12.12906265258789
    10. 'emp' → logprob: -12.25406265258789

Token 1427: '=float' (ID: 80332)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24385279417037964
    2. '_time' → logprob: -1.9938528537750244
    3. '_cost' → logprob: -3.3688528537750244
    4. '=time' → logprob: -4.243852615356445
    5. '=[' → logprob: -5.118852615356445
    6. 'cost' → logprob: -5.243852615356445
    7. '=min' → logprob: -5.493852615356445
    8. 'time' → logprob: -5.618852615356445
    9. '=_' → logprob: -5.868852615356445
    10. ' =' → logprob: -5.993852615356445

Token 1428: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.9361264946837764e-07
    2. '("' → logprob: -16.25
    3. ' ('' → logprob: -18.875
    4. '('-' → logprob: -19.375
    5. ''in' → logprob: -21.0
    6. '='' → logprob: -21.375
    7. '(' → logprob: -21.875
    8. '_info' → logprob: -21.875
    9. '(
' → logprob: -22.0
    10. '
' → logprob: -22.25

Token 1429: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.18894296884536743
    2. ''in' → logprob: -1.8139429092407227
    3. ''' → logprob: -5.188942909240723
    4. ''ex' → logprob: -7.438942909240723
    5. ''s' → logprob: -8.063942909240723
    6. ''end' → logprob: -8.438942909240723
    7. '
' → logprob: -8.688942909240723
    8. ''ap' → logprob: -8.688942909240723
    9. ''il' → logprob: -8.688942909240723
    10. '('' → logprob: -8.938942909240723

Token 1430: '')
' (ID: 2515)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1128506287932396
    2. '           ' → logprob: -2.6128506660461426
    3. ')' → logprob: -3.4878506660461426
    4. 'for' → logprob: -6.362850666046143
    5. '')
' → logprob: -8.362850189208984
    6. '               ' → logprob: -9.237850189208984
    7. '=' → logprob: -9.362850189208984
    8. '[min' → logprob: -9.487850189208984
    9. '       ' → logprob: -9.612850189208984
    10. '0' → logprob: -9.612850189208984

Token 1431: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.049807459115982056
    2. 'for' → logprob: -3.049807548522949
    3. ' for' → logprob: -7.049807548522949
    4. '		' → logprob: -8.17480754852295
    5. '	for' → logprob: -10.67480754852295
    6. '	       ' → logprob: -11.42480754852295
    7. '		   ' → logprob: -12.29980754852295
    8. '       ' → logprob: -12.42480754852295
    9. '                   ' → logprob: -12.42480754852295
    10. 'token' → logprob: -12.54980754852295

Token 1432: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0011464104754850268
    2. 'v' → logprob: -7.50114631652832
    3. '           ' → logprob: -8.12614631652832
    4. ' for' → logprob: -8.25114631652832
    5. '               ' → logprob: -11.12614631652832
    6. 'min' → logprob: -12.00114631652832
    7. '                   ' → logprob: -12.12614631652832
    8. '   ' → logprob: -12.12614631652832
    9. 'range' → logprob: -12.75114631652832
    10. 'last' → logprob: -14.75114631652832

Token 1433: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.544543981552124
    2. 'v' → logprob: -1.294543981552124
    3. 'i' → logprob: -2.794543981552124
    4. 'j' → logprob: -2.794543981552124
    5. 'last' → logprob: -3.794543981552124
    6. 'end' → logprob: -6.919544219970703
    7. 'x' → logprob: -9.669544219970703
    8. 'k' → logprob: -10.669544219970703
    9. 'idx' → logprob: -12.169544219970703
    10. 't' → logprob: -13.169544219970703

Token 1434: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.20150350034236908
    2. ' in' → logprob: -1.7015035152435303
    3. '```' → logprob: -9.95150375366211
    4. '
' → logprob: -10.57650375366211
    5. '+' → logprob: -12.32650375366211
    6. '[' → logprob: -12.82650375366211
    7. '   ' → logprob: -12.95150375366211
    8. 'n' → logprob: -13.82650375366211
    9. '``' → logprob: -13.95150375366211
    10. '1' → logprob: -14.07650375366211

Token 1435: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002615742268972099
    2. ' range' → logprob: -8.250261306762695
    3. '(range' → logprob: -15.625261306762695
    4. 'list' → logprob: -16.375261306762695
    5. 'v' → logprob: -16.750261306762695
    6. '[' → logprob: -17.375261306762695
    7. '
' → logprob: -18.750261306762695
    8. '[v' → logprob: -19.875261306762695
    9. 'subset' → logprob: -20.125261306762695
    10. '	range' → logprob: -20.500261306762695

Token 1436: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4706030786037445
    2. '(' → logprob: -1.095603108406067
    3. 'len' → logprob: -3.2206029891967773
    4. '(len' → logprob: -6.845602989196777
    5. '
' → logprob: -11.345602989196777
    6. '```' → logprob: -11.970602989196777
    7. '   ' → logprob: -12.345602989196777
    8. ' len' → logprob: -12.345602989196777
    9. ' ' → logprob: -12.470602989196777
    10. 'range' → logprob: -13.095602989196777

Token 1437: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.34854334592819214
    2. 'len' → logprob: -1.223543405532837
    3. 'range' → logprob: -10.098543167114258
    4. ' len' → logprob: -10.848543167114258
    5. '
' → logprob: -11.598543167114258
    6. 'full' → logprob: -11.723543167114258
    7. '(len' → logprob: -12.098543167114258
    8. '0' → logprob: -12.973543167114258
    9. '(' → logprob: -13.098543167114258
    10. '2' → logprob: -13.473543167114258

Token 1438: ',len' (ID: 73338)
  Prédit: ',len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',len' → logprob: -0.10771588236093521
    2. '(len' → logprob: -2.3577158451080322
    3. 'len' → logprob: -5.482716083526611
    4. ',' → logprob: -6.732716083526611
    5. '(full' → logprob: -6.857716083526611
    6. '(' → logprob: -7.107716083526611
    7. '```' → logprob: -9.107715606689453
    8. '<len' → logprob: -9.732715606689453
    9. 'full' → logprob: -10.232715606689453
    10. '[len' → logprob: -10.482715606689453

Token 1439: '(sub' (ID: 19764)
  Prédit: '(sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sub' → logprob: -0.0001710014621494338
    2. 'subset' → logprob: -8.750170707702637
    3. '(t' → logprob: -11.625170707702637
    4. 't' → logprob: -12.750170707702637
    5. '{sub' → logprob: -15.250170707702637
    6. '=sub' → logprob: -15.875170707702637
    7. 'sub' → logprob: -16.125171661376953
    8. '```' → logprob: -16.500171661376953
    9. '
' → logprob: -17.125171661376953
    10. '_subset' → logprob: -17.250171661376953

Token 1440: 'set' (ID: 977)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.02640700526535511
    2. 'set' → logprob: -3.90140700340271
    3. '_subset' → logprob: -5.651407241821289
    4. 'et' → logprob: -6.776407241821289
    5. 'ub' → logprob: -6.901407241821289
    6. ' subset' → logprob: -9.276407241821289
    7. 'uset' → logprob: -10.651407241821289
    8. 'sub' → logprob: -10.651407241821289
    9. '_set' → logprob: -11.026407241821289
    10. '_points' → logprob: -11.026407241821289

Token 1441: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.028354475274682045
    2. '(sub' → logprob: -3.9033544063568115
    3. 'subset' → logprob: -4.903354644775391
    4. '_subset' → logprob: -8.02835464477539
    5. '=sub' → logprob: -11.52835464477539
    6. ')' → logprob: -12.15335464477539
    7. '_positions' → logprob: -12.52835464477539
    8. 'points' → logprob: -12.77835464477539
    9. 'sub' → logprob: -13.02835464477539
    10. '(s' → logprob: -13.27835464477539

Token 1442: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.008690099231898785
    2. '):' → logprob: -4.758689880371094
    3. '()):
' → logprob: -9.883689880371094
    4. '():
' → logprob: -11.508689880371094
    5. '```' → logprob: -12.258689880371094
    6. '()' → logprob: -12.883689880371094
    7. '):

' → logprob: -13.133689880371094
    8. ')' → logprob: -14.008689880371094
    9. '):
' → logprob: -14.008689880371094
    10. ']):
' → logprob: -14.258689880371094

Token 1443: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13061313331127167
    2. '                               ' → logprob: -3.380613088607788
    3. 'min' → logprob: -3.380613088607788
    4. ' if' → logprob: -3.755613088607788
    5. ' min' → logprob: -4.380613327026367
    6. 'if' → logprob: -4.505613327026367
    7. '[min' → logprob: -6.130613327026367
    8. '```' → logprob: -6.255613327026367
    9. '                       ' → logprob: -7.380613327026367
    10. '                   ' → logprob: -7.505613327026367

Token 1444: ' cost' (ID: 3097)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16253063082695007
    2. ' if' → logprob: -2.0375306606292725
    3. 'min' → logprob: -4.162530422210693
    4. '                   ' → logprob: -6.412530422210693
    5. '               ' → logprob: -7.787530422210693
    6. 'cost' (adapté à ' cost') → logprob: -7.787530422210693
    7. '                           ' → logprob: -8.037530899047852
    8. ' min' → logprob: -8.037530899047852
    9. '                               ' → logprob: -8.162530899047852
    10. '                       ' → logprob: -8.662530899047852

Token 1445: '=t' (ID: 54326)
  Prédit: '=t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=t' → logprob: -0.22767077386379242
    2. '=' → logprob: -1.7276707887649536
    3. '=min' → logprob: -3.977670669555664
    4. ' =' → logprob: -5.602670669555664
    5. '+=' → logprob: -6.852670669555664
    6. 't' → logprob: -6.852670669555664
    7. '+t' → logprob: -7.352670669555664
    8. '=
' → logprob: -8.977670669555664
    9. 'min' → logprob: -9.102670669555664
    10. '=max' → logprob: -9.602670669555664

Token 1446: 'sp' (ID: 1148)
  Prédit: 'sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sp' → logprob: -0.0004967942950315773
    2. 's' → logprob: -7.625496864318848
    3. 'spd' → logprob: -12.250496864318848
    4. ' tsp' → logprob: -12.750496864318848
    5. 'ps' → logprob: -15.125496864318848
    6. 'ssp' → logprob: -15.875496864318848
    7. '(sp' → logprob: -15.875496864318848
    8. 't' → logprob: -16.00049591064453
    9. 'st' → logprob: -16.25049591064453
    10. '	sp' → logprob: -16.75049591064453

Token 1447: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.009347549639642239
    2. 'dp' → logprob: -5.384347438812256
    3. 'p' → logprob: -5.759347438812256
    4. 't' → logprob: -7.134347438812256
    5. 'sp' → logprob: -7.884347438812256
    6. 's' → logprob: -8.009347915649414
    7. '[t' → logprob: -11.009347915649414
    8. '	dp' → logprob: -12.259347915649414
    9. '+' → logprob: -12.384347915649414
    10. 'esp' → logprob: -12.509347915649414

Token 1448: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002550217031966895
    2. 'full' → logprob: -8.37525463104248
    3. '[u' → logprob: -12.00025463104248
    4. '
' → logprob: -12.25025463104248
    5. '```' → logprob: -12.37525463104248
    6. '(full' → logprob: -13.00025463104248
    7. '[min' → logprob: -14.37525463104248
    8. '[-' → logprob: -14.37525463104248
    9. '``' → logprob: -14.75025463104248
    10. '[len' → logprob: -14.87525463104248

Token 1449: 'full' (ID: 15393)
  Prédit: 'full'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'full' → logprob: -9.088346359931165e-07
    2. ' full' → logprob: -15.000000953674316
    3. '(full' → logprob: -15.000000953674316
    4. '
' → logprob: -15.750000953674316
    5. '[' → logprob: -17.625
    6. 'ful' → logprob: -17.875
    7. '	full' → logprob: -19.75
    8. '_full' → logprob: -19.75
    9. 'Full' → logprob: -19.875
    10. 'u' → logprob: -20.25

Token 1450: '][' (ID: 2696)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.00019972586596850306
    2. '][' → logprob: -8.625199317932129
    3. '[s' → logprob: -11.500199317932129
    4. '[' → logprob: -11.875199317932129
    5. 'u' → logprob: -14.250199317932129
    6. ']' → logprob: -14.750199317932129
    7. '
' → logprob: -14.750199317932129
    8. 's' → logprob: -14.750199317932129
    9. '```' → logprob: -15.250199317932129
    10. '[
' → logprob: -15.500199317932129

Token 1451: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -7.896309739408025e-07
    2. '[u' → logprob: -14.875000953674316
    3. ' u' → logprob: -16.75
    4. '	u' → logprob: -16.875
    5. '
' → logprob: -17.125
    6. '(u' → logprob: -17.375
    7. '0' → logprob: -17.5
    8. '```' → logprob: -17.875
    9. 'user' → logprob: -18.5
    10. '<u' → logprob: -19.0

Token 1452: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.049094151705503464
    2. '+' → logprob: -3.0490942001342773
    3. ']' → logprob: -7.924094200134277
    4. '+t' → logprob: -10.174094200134277
    5. ' +' → logprob: -10.299094200134277
    6. ']+=' → logprob: -10.424094200134277
    7. '+
' → logprob: -10.924094200134277
    8. '}+' → logprob: -12.424094200134277
    9. '][' → logprob: -12.549094200134277
    10. '+]' → logprob: -12.674094200134277

Token 1453: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.0206720617134124e-05
    2. ' dist' → logprob: -11.50001049041748
    3. '(dist' → logprob: -18.250009536743164
    4. '   ' → logprob: -18.750009536743164
    5. '	dist' → logprob: -19.375009536743164
    6. '           ' → logprob: -20.750009536743164
    7. '       ' → logprob: -21.750009536743164
    8. '
' → logprob: -22.000009536743164
    9. '```' → logprob: -22.125009536743164
    10. '.dist' → logprob: -22.250009536743164

Token 1454: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.1399255096912384
    2. '(sub' → logprob: -2.139925479888916
    3. '[' → logprob: -4.889925479888916
    4. '[sub' → logprob: -5.389925479888916
    5. 'subset' → logprob: -8.389925956726074
    6. '```' → logprob: -8.639925956726074
    7. '_subset' → logprob: -8.764925956726074
    8. '=sub' → logprob: -9.264925956726074
    9. 'sub' → logprob: -10.889925956726074
    10. '([' → logprob: -11.139925956726074

Token 1455: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004973902832716703
    2. '[sub' → logprob: -7.625497341156006
    3. '(sub' → logprob: -12.500497817993164
    4. '[u' → logprob: -13.000497817993164
    5. '0' → logprob: -13.375497817993164
    6. 'subset' → logprob: -14.125497817993164
    7. '[t' → logprob: -16.000497817993164
    8. 'sub' → logprob: -16.125497817993164
    9. '(' → logprob: -16.250497817993164
    10. '```' → logprob: -16.375497817993164

Token 1456: 'subset' (ID: 163297)
  Prédit: 'subset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.014834023080766201
    2. 'u' → logprob: -4.264833927154541
    3. '0' → logprob: -8.3898344039917
    4. '[' → logprob: -8.5148344039917
    5. ' subset' → logprob: -8.8898344039917
    6. '[u' → logprob: -9.3898344039917
    7. ' u' → logprob: -11.5148344039917
    8. ' ' → logprob: -13.2648344039917
    9. 'sub' → logprob: -13.3898344039917
    10. '   ' → logprob: -13.5148344039917

Token 1457: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.0012057077838107944
    2. 'oints' → logprob: -7.126205921173096
    3. '[' → logprob: -9.001205444335938
    4. '[u' → logprob: -9.501205444335938
    5. 'ost' → logprob: -10.001205444335938
    6. 't' → logprob: -10.376205444335938
    7. '_positions' → logprob: -10.876205444335938
    8. 'u' → logprob: -11.251205444335938
    9. 'oint' → logprob: -11.376205444335938
    10. 'ot' → logprob: -11.501205444335938

Token 1458: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.0004890497075393796
    2. '[' → logprob: -8.250489234924316
    3. 'u' → logprob: -8.500489234924316
    4. '0' → logprob: -11.625489234924316
    5. '[
' → logprob: -12.250489234924316
    6. '
' → logprob: -12.625489234924316
    7. '```' → logprob: -13.000489234924316
    8. '][' → logprob: -13.125489234924316
    9. '``' → logprob: -15.000489234924316
    10. '\[' → logprob: -15.250489234924316

Token 1459: ']][' (ID: 61032)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -4.723352049040841e-06
    2. '[' → logprob: -12.500004768371582
    3. ' ][' → logprob: -14.375004768371582
    4. ']' → logprob: -15.625004768371582
    5. '0' → logprob: -16.125003814697266
    6. ''][' → logprob: -18.000003814697266
    7. ']][' → logprob: -18.375003814697266
    8. '()][' → logprob: -18.500003814697266
    9. '   ' → logprob: -18.625003814697266
    10. '"][' → logprob: -18.750003814697266

Token 1460: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.500001907348633
    3. '
' → logprob: -16.000001907348633
    4. '```' → logprob: -19.375001907348633
    5. '۰' → logprob: -19.625001907348633
    6. '   ' → logprob: -19.625001907348633
    7. '[' → logprob: -20.187501907348633
    8. 'subset' → logprob: -20.562501907348633
    9. ']' → logprob: -20.687501907348633
    10. '`' → logprob: -20.812501907348633

Token 1461: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0025315487291663885
    2. ']
' → logprob: -6.2525315284729
    3. '])' → logprob: -7.5025315284729
    4. ')' → logprob: -10.752532005310059
    5. ']>' → logprob: -11.127532005310059
    6. ' ]' → logprob: -11.752532005310059
    7. '<|end|>' → logprob: -13.502532005310059
    8. ']==' → logprob: -14.252532005310059
    9. ']

' → logprob: -14.252532005310059
    10. ')]' → logprob: -14.377532005310059

Token 1462: '               ' (ID: 506)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9689096212387085
    2. 'if' → logprob: -1.5939096212387085
    3. '               ' → logprob: -2.093909740447998
    4. '           ' → logprob: -2.593909740447998
    5. '                   ' → logprob: -2.593909740447998
    6. '```' → logprob: -2.843909740447998
    7. '
' → logprob: -3.468909740447998
    8. '                           ' → logprob: -4.343909740447998
    9. '                               ' → logprob: -4.468909740447998
    10. '                       ' → logprob: -4.968909740447998

Token 1463: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.18923187255859375
    2. ' if' → logprob: -2.1892318725585938
    3. 'min' → logprob: -2.9392318725585938
    4. '               ' → logprob: -5.939231872558594
    5. '                   ' → logprob: -6.189231872558594
    6. ' min' → logprob: -6.314231872558594
    7. '
' → logprob: -7.439231872558594
    8. '                           ' → logprob: -9.314231872558594
    9. '                               ' → logprob: -9.439231872558594
    10. '```' → logprob: -9.564231872558594

Token 1464: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.00011248346709180623
    2. ' cost' → logprob: -9.125112533569336
    3. 'min' → logprob: -12.625112533569336
    4. '(cost' → logprob: -16.000112533569336
    5. '
' → logprob: -17.500112533569336
    6. 'dp' → logprob: -18.750112533569336
    7. 't' → logprob: -19.125112533569336
    8. '```' → logprob: -19.250112533569336
    9. 'time' → logprob: -19.500112533569336
    10. '   ' → logprob: -19.625112533569336

Token 1465: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.0004624855937436223
    2. '<t' → logprob: -8.000462532043457
    3. ' <' → logprob: -9.750462532043457
    4. 'cost' → logprob: -10.500462532043457
    5. '<c' → logprob: -11.500462532043457
    6. '<size' → logprob: -12.000462532043457
    7. '(cost' → logprob: -12.375462532043457
    8. 'min' → logprob: -12.625462532043457
    9. ' cost' → logprob: -12.625462532043457
    10. '<count' → logprob: -13.125462532043457

Token 1466: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.018280576914548874
    2. 'cost' → logprob: -4.018280506134033
    3. ' min' → logprob: -9.018280982971191
    4. ' cost' → logprob: -11.893280982971191
    5. '
' → logprob: -13.018280982971191
    6. '```' → logprob: -15.643280982971191
    7. '=min' → logprob: -16.768280029296875
    8. '   ' → logprob: -16.768280029296875
    9. '	min' → logprob: -17.018280029296875
    10. '(min' → logprob: -17.768280029296875

Token 1467: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -2.927930654550437e-05
    2. '(min' → logprob: -11.250029563903809
    3. 't' → logprob: -11.500029563903809
    4. 'cost' → logprob: -12.875029563903809
    5. '(cost' → logprob: -14.000029563903809
    6. 'min' → logprob: -14.125029563903809
    7. '
' → logprob: -14.250029563903809
    8. '\' → logprob: -15.125029563903809
    9. '(' → logprob: -15.250029563903809
    10. '_cost' → logprob: -16.000028610229492

Token 1468: 'sp' (ID: 1148)
  Prédit: 'sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sp' → logprob: -0.0009630310814827681
    2. '_t' → logprob: -7.00096321105957
    3. '_sp' → logprob: -10.37596321105957
    4. 's' → logprob: -11.62596321105957
    5. 't' → logprob: -12.62596321105957
    6. 'spf' → logprob: -13.37596321105957
    7. 'spd' → logprob: -13.75096321105957
    8. 'sup' → logprob: -13.87596321105957
    9. 'ssp' → logprob: -14.00096321105957
    10. 'spa' → logprob: -14.12596321105957

Token 1469: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.9231137633323669
    2. '=min' → logprob: -0.9231137633323669
    3. 'min' → logprob: -2.6731138229370117
    4. '[min' → logprob: -2.7981138229370117
    5. ':min' → logprob: -3.9231138229370117
    6. ':' → logprob: -4.548113822937012
    7. ' min' → logprob: -4.798113822937012
    8. '                   ' → logprob: -4.798113822937012
    9. '                               ' → logprob: -5.298113822937012
    10. '               ' → logprob: -5.548113822937012

Token 1470: '                   ' (ID: 699)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0977543368935585
    2. 'cost' → logprob: -2.8477542400360107
    3. ' min' → logprob: -3.4727542400360107
    4. '                   ' → logprob: -6.59775447845459
    5. ' cost' → logprob: -6.97275447845459
    6. '                               ' → logprob: -7.09775447845459
    7. '                       ' → logprob: -7.97275447845459
    8. '```' → logprob: -8.72275447845459
    9. '=min' → logprob: -8.97275447845459
    10. '                           ' → logprob: -9.47275447845459

Token 1471: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.00027682865038514137
    2. 'cost' → logprob: -8.250276565551758
    3. ' min' → logprob: -11.125276565551758
    4. '
' → logprob: -15.375276565551758
    5. ' cost' → logprob: -15.875276565551758
    6. '                   ' → logprob: -16.000276565551758
    7. '```' → logprob: -16.000276565551758
    8. '=min' → logprob: -16.750276565551758
    9. '                           ' → logprob: -17.375276565551758
    10. '	min' → logprob: -18.125276565551758

Token 1472: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -3.619311974034645e-05
    2. 't' → logprob: -10.250036239624023
    3. 'cost' → logprob: -14.875036239624023
    4. '_cost' → logprob: -16.250036239624023
    5. '
' → logprob: -16.875036239624023
    6. '```' → logprob: -17.250036239624023
    7. '	t' → logprob: -17.375036239624023
    8. '_' → logprob: -17.500036239624023
    9. '[t' → logprob: -17.625036239624023
    10. '\' → logprob: -17.625036239624023

Token 1473: 'sp' (ID: 1148)
  Prédit: 'sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sp' → logprob: -8.77627644513268e-06
    2. '_sp' → logprob: -11.875008583068848
    3. '_t' → logprob: -13.500008583068848
    4. 'st' → logprob: -15.625008583068848
    5. 't' → logprob: -15.750008583068848
    6. 's' → logprob: -17.750009536743164
    7. 'сп' → logprob: -17.750009536743164
    8. 'spf' → logprob: -17.750009536743164
    9. 'SP' → logprob: -18.125009536743164
    10. 'ps' → logprob: -18.125009536743164

Token 1474: '=' (ID: 28)
  Prédit: '=min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=min' → logprob: -0.25201311707496643
    2. '=' → logprob: -1.502013087272644
    3. '=max' → logprob: -10.002013206481934
    4. '=
' → logprob: -10.752013206481934
    5. '=t' → logprob: -11.502013206481934
    6. '=c' → logprob: -12.752013206481934
    7. '=sub' → logprob: -14.002013206481934
    8. '=cut' → logprob: -14.252013206481934
    9. '=float' → logprob: -15.002013206481934
    10. 'cost' → logprob: -15.002013206481934

Token 1475: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0007304243044927716
    2. ' cost' → logprob: -7.875730514526367
    3. 't' → logprob: -8.000730514526367
    4. 'min' → logprob: -11.375730514526367
    5. 'dist' → logprob: -14.250730514526367
    6. '                               ' → logprob: -14.250730514526367
    7. '
' → logprob: -14.375730514526367
    8. '(cost' → logprob: -14.500730514526367
    9. ' tsp' → logprob: -15.250730514526367
    10. '```' → logprob: -15.625730514526367

Token 1476: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7152974605560303
    2. '           ' → logprob: -0.7152974605560303
    3. ')' → logprob: -4.965297698974609
    4. '               ' → logprob: -5.465297698974609
    5. '<|end|>' → logprob: -6.465297698974609
    6. '            
' → logprob: -6.590297698974609
    7. ' if' → logprob: -6.840297698974609
    8. '                   ' → logprob: -7.215297698974609
    9. '  
' → logprob: -7.465297698974609
    10. ')
' → logprob: -7.590297698974609

Token 1477: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.34632790088653564
    2. '               ' → logprob: -2.346327781677246
    3. ')' → logprob: -2.971327781677246
    4. '
' → logprob: -2.971327781677246
    5. ' if' → logprob: -3.846327781677246
    6. '                               ' → logprob: -4.471327781677246
    7. 'if' → logprob: -4.596327781677246
    8. '                           ' → logprob: -4.846327781677246
    9. '                   ' → logprob: -5.096327781677246
    10. '       ' → logprob: -5.221327781677246

Token 1478: ' travel' (ID: 6410)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.053250350058078766
    2. '               ' → logprob: -3.678250312805176
    3. ' if' → logprob: -4.678250312805176
    4. '
' → logprob: -4.928250312805176
    5. 'if' → logprob: -5.178250312805176
    6. '                   ' → logprob: -6.303250312805176
    7. 'time' → logprob: -7.303250312805176
    8. ' time' → logprob: -7.803250312805176
    9. 'total' → logprob: -8.178250312805176
    10. '                       ' → logprob: -8.303250312805176

Token 1479: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.20301562547683716
    2. '_cost' → logprob: -1.7030155658721924
    3. '=_' → logprob: -7.0780158042907715
    4. '_' → logprob: -7.8280158042907715
    5. '=' → logprob: -8.203015327453613
    6. ' =' → logprob: -10.703015327453613
    7. '_t' → logprob: -11.078015327453613
    8. '_times' → logprob: -11.453015327453613
    9. ' _' → logprob: -11.703015327453613
    10. '_map' → logprob: -12.453015327453613

Token 1480: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11705590039491653
    2. '+' → logprob: -2.742055892944336
    3. ' =' → logprob: -3.742055892944336
    4. ' +' → logprob: -4.867055892944336
    5. '[last' → logprob: -4.867055892944336
    6. '+=' → logprob: -5.242055892944336
    7. '=min' → logprob: -7.992055892944336
    8. ' +=' → logprob: -8.117055892944336
    9. '[' → logprob: -9.242055892944336
    10. '   ' → logprob: -9.242055892944336

Token 1481: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4741654396057129
    2. 'dp' → logprob: -0.9741654396057129
    3. ' dist' → logprob: -9.724164962768555
    4. ' dp' → logprob: -10.474164962768555
    5. '           ' → logprob: -15.349164962768555
    6. '   ' → logprob: -16.724164962768555
    7. '               ' → logprob: -17.099164962768555
    8. '(dist' → logprob: -18.349164962768555
    9. '	dist' → logprob: -18.349164962768555
    10. 'travel' → logprob: -18.474164962768555

Token 1482: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.1367250382900238
    2. '(last' → logprob: -2.1367249488830566
    3. '[last' → logprob: -4.636724948883057
    4. '(_' → logprob: -11.011725425720215
    5. '_last' → logprob: -11.511725425720215
    6. '_' → logprob: -12.011725425720215
    7. '(' → logprob: -12.511725425720215
    8. '[_' → logprob: -12.511725425720215
    9. 'Map' → logprob: -12.886725425720215
    10. '_MAP' → logprob: -13.011725425720215

Token 1483: '[last' (ID: 126100)
  Prédit: '[last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[last' → logprob: -1.1637164789135568e-05
    2. '[' → logprob: -11.500011444091797
    3. '```' → logprob: -14.250011444091797
    4. 'last' → logprob: -14.375011444091797
    5. '(last' → logprob: -16.875011444091797
    6. ' [' → logprob: -16.875011444091797
    7. '[current' → logprob: -17.375011444091797
    8. ':last' → logprob: -17.500011444091797
    9. '[
' → logprob: -17.625011444091797
    10. '[now' → logprob: -18.000011444091797

Token 1484: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.02373780682682991
    2. '[' → logprob: -3.773737907409668
    3. '[last' → logprob: -7.773737907409668
    4. ' ][' → logprob: -10.898737907409668
    5. ']' → logprob: -11.273737907409668
    6. '```' → logprob: -11.523737907409668
    7. '}[' → logprob: -12.398737907409668
    8. ')[' → logprob: -12.523737907409668
    9. '   ' → logprob: -12.648737907409668
    10. '>[' → logprob: -13.273737907409668

Token 1485: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '
' → logprob: -17.375
    4. '```' → logprob: -17.75
    5. '۰' → logprob: -17.875
    6. '[' → logprob: -18.125
    7. ']' → logprob: -19.0625
    8. '０' → logprob: -19.0625
    9. 'user' → logprob: -19.1875
    10. '(' → logprob: -19.625

Token 1486: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.3701173663139343
    2. '+' → logprob: -1.245117425918579
    3. ')+' → logprob: -4.1201171875
    4. ']' → logprob: -5.6201171875
    5. ' +' → logprob: -6.6201171875
    6. ')' → logprob: -9.4951171875
    7. ']+=' → logprob: -9.6201171875
    8. '}+' → logprob: -10.2451171875
    9. '")+' → logprob: -10.8701171875
    10. '+
' → logprob: -11.4951171875

Token 1487: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0005212200339883566
    2. 'int' → logprob: -7.625521183013916
    3. 'T' → logprob: -10.375521659851074
    4. ' min' → logprob: -13.500521659851074
    5. 'max' → logprob: -15.125521659851074
    6. '(min' → logprob: -16.000520706176758
    7. '```' → logprob: -17.750520706176758
    8. '
' → logprob: -17.750520706176758
    9. '+' → logprob: -18.000520706176758
    10. 'time' → logprob: -18.125520706176758

Token 1488: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.00015860427811276168
    2. 't' → logprob: -8.750158309936523
    3. '\' → logprob: -17.375158309936523
    4. 'T' → logprob: -17.750158309936523
    5. '```' → logprob: -17.750158309936523
    6. '`t' → logprob: -18.500158309936523
    7. '(t' → logprob: -18.625158309936523
    8. '	t' → logprob: -19.000158309936523
    9. '+t' → logprob: -19.000158309936523
    10. '
' → logprob: -19.750158309936523

Token 1489: 'sp' (ID: 1148)
  Prédit: 'sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sp' → logprob: -9.849109119386412e-06
    2. '_sp' → logprob: -11.625009536743164
    3. '_t' → logprob: -15.000009536743164
    4. 's' → logprob: -15.125009536743164
    5. 't' → logprob: -15.625009536743164
    6. 'st' → logprob: -17.125009536743164
    7. 'spr' → logprob: -18.125009536743164
    8. 'сп' → logprob: -18.250009536743164
    9. 'spd' → logprob: -18.375009536743164
    10. '	sp' → logprob: -18.500009536743164

Token 1490: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1989266276359558
    2. '
' → logprob: -2.5739266872406006
    3. ' if' → logprob: -2.8239266872406006
    4. 'if' → logprob: -3.5739266872406006
    5. '               ' → logprob: -4.6989264488220215
    6. '            
' → logprob: -5.6989264488220215
    7. '                   ' → logprob: -6.5739264488220215
    8. '```' → logprob: -7.1989264488220215
    9. ')' → logprob: -7.5739264488220215
    10. '                
' → logprob: -8.57392692565918

Token 1491: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06324440985918045
    2. '
' → logprob: -3.313244342803955
    3. ' if' → logprob: -4.688244342803955
    4. '               ' → logprob: -5.188244342803955
    5. '            
' → logprob: -6.188244342803955
    6. '                   ' → logprob: -6.313244342803955
    7. '                           ' → logprob: -6.313244342803955
    8. 'if' → logprob: -6.563244342803955
    9. '                       ' → logprob: -7.188244342803955
    10. '                        
' → logprob: -7.938244342803955

Token 1492: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2381003499031067
    2. 'if' (adapté à ' if') → logprob: -1.988100290298462
    3. ' if' → logprob: -2.613100290298462
    4. 'time' → logprob: -6.863100528717041
    5. '               ' → logprob: -8.488100051879883
    6. '            
' → logprob: -9.613100051879883
    7. '
' → logprob: -9.738100051879883
    8. ' time' → logprob: -9.988100051879883
    9. '                   ' → logprob: -10.738100051879883
    10. 'total' → logprob: -10.738100051879883

Token 1493: ' travel' (ID: 6410)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3122365474700928
    2. 'travel' → logprob: -1.5622365474700928
    3. ' dp' → logprob: -3.1872365474700928
    4. ' travel' → logprob: -4.187236785888672
    5. '   ' → logprob: -7.312236785888672
    6. 'T' → logprob: -7.312236785888672
    7. 'time' → logprob: -8.062236785888672
    8. 'trav' → logprob: -9.437236785888672
    9. ' T' → logprob: -9.687236785888672
    10. '(dp' → logprob: -9.937236785888672

Token 1494: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -6.027225754223764e-05
    2. '[' → logprob: -11.375060081481934
    3. '[_' → logprob: -11.625060081481934
    4. 'time' → logprob: -11.625060081481934
    5. '_cost' → logprob: -12.000060081481934
    6. '>' → logprob: -12.625060081481934
    7. '[
' → logprob: -13.250060081481934
    8. 'Time' → logprob: -13.500060081481934
    9. '_' → logprob: -13.625060081481934
    10. '
' → logprob: -13.625060081481934

Token 1495: '>T' (ID: 83107)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.6411880254745483
    2. ' <=' → logprob: -0.7661880254745483
    3. '>' → logprob: -5.266188144683838
    4. ' >' → logprob: -6.016188144683838
    5. '>T' → logprob: -8.26618766784668
    6. '<T' → logprob: -8.64118766784668
    7. ')<=' → logprob: -9.39118766784668
    8. '```' → logprob: -9.51618766784668
    9. ')' → logprob: -9.51618766784668
    10. '[' → logprob: -10.01618766784668

Token 1496: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2926586866378784
    2. '               ' → logprob: -1.9176586866378784
    3. ':' → logprob: -2.292658805847168
    4. '           ' → logprob: -5.792658805847168
    5. '                       ' → logprob: -6.792658805847168
    6. '                   ' → logprob: -6.917658805847168
    7. '              ' → logprob: -8.917658805847168
    8. 'continue' → logprob: -8.917658805847168
    9. '                ' → logprob: -10.042658805847168
    10. '            ' → logprob: -10.167658805847168

Token 1497: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0030510276556015015
    2. 'continue' → logprob: -6.378050804138184
    3. '                               ' → logprob: -7.503050804138184
    4. ' continue' → logprob: -7.628050804138184
    5. '                   ' → logprob: -9.003050804138184
    6. '                       ' → logprob: -9.003050804138184
    7. '```' → logprob: -10.628050804138184
    8. '                           ' → logprob: -11.253050804138184
    9. '           ' → logprob: -11.253050804138184
    10. '                                       ' → logprob: -12.753050804138184

Token 1498: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.009604621678590775
    2. '                   ' → logprob: -5.259604454040527
    3. ' continue' → logprob: -6.259604454040527
    4. '                               ' → logprob: -6.759604454040527
    5. '               ' → logprob: -7.634604454040527
    6. '                       ' → logprob: -7.759604454040527
    7. '```' → logprob: -9.009604454040527
    8. '                           ' → logprob: -9.384604454040527
    9. '	continue' → logprob: -9.759604454040527
    10. '                                   ' → logprob: -10.009604454040527

Token 1499: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22747422754764557
    2. '               ' → logprob: -1.7274742126464844
    3. '                       ' → logprob: -4.727474212646484
    4. '                   ' → logprob: -4.727474212646484
    5. '                           ' → logprob: -5.852474212646484
    6. '                               ' → logprob: -6.227474212646484
    7. 'profit' → logprob: -7.602474212646484
    8. '                                   ' → logprob: -7.727474212646484
    9. '```' → logprob: -7.852474212646484
    10. ' profit' → logprob: -8.477474212646484

Token 1500: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04874395206570625
    2. '               ' → logprob: -3.423743963241577
    3. '                       ' → logprob: -5.173743724822998
    4. '                   ' → logprob: -5.298743724822998
    5. '                           ' → logprob: -5.923743724822998
    6. '                               ' → logprob: -7.298743724822998
    7. '
' → logprob: -8.673744201660156
    8. '                                   ' → logprob: -8.673744201660156
    9. '```' → logprob: -9.173744201660156
    10. '            
' → logprob: -9.298744201660156

Token 1501: ' p' (ID: 275)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16706891357898712
    2. '               ' → logprob: -2.6670689582824707
    3. 'profit' → logprob: -3.7920689582824707
    4. ' profit' → logprob: -3.9170689582824707
    5. ' new' → logprob: -4.167068958282471
    6. 'next' → logprob: -4.667068958282471
    7. 'new' → logprob: -4.667068958282471
    8. ' next' → logprob: -5.917068958282471
    9. '                   ' → logprob: -6.542068958282471
    10. 'dp' → logprob: -6.917068958282471

Token 1502: '=' (ID: 28)
  Prédit: 'ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.2948308289051056
    2. 'rof' → logprob: -1.4198307991027832
    3. '=' → logprob: -4.794830799102783
    4. 'r' → logprob: -6.669830799102783
    5. '_profit' → logprob: -6.919830799102783
    6. '_ro' → logprob: -7.294830799102783
    7. '_new' → logprob: -7.794830799102783
    8. 'rev' → logprob: -7.794830799102783
    9. ' =' → logprob: -7.919830799102783
    10. '=p' → logprob: -9.044831275939941

Token 1503: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -2.522638169466518e-05
    2. ' dp' → logprob: -11.125024795532227
    3. 'subset' → logprob: -11.750024795532227
    4. '(dp' → logprob: -13.875024795532227
    5. 'max' → logprob: -14.500024795532227
    6. '0' → logprob: -14.625024795532227
    7. '   ' → logprob: -14.875024795532227
    8. '	dp' → logprob: -16.000024795532227
    9. 'profit' → logprob: -17.000024795532227
    10. '
' → logprob: -17.500024795532227

Token 1504: '[last' (ID: 126100)
  Prédit: '[last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[last' → logprob: -0.002487903693690896
    2. 'last' → logprob: -6.002488136291504
    3. '[sub' → logprob: -12.127488136291504
    4. '[' → logprob: -13.127488136291504
    5. ' last' → logprob: -13.877488136291504
    6. 'sub' → logprob: -14.127488136291504
    7. '(last' → logprob: -14.252488136291504
    8. ',last' → logprob: -14.502488136291504
    9. 'p' → logprob: -14.627488136291504
    10. ':last' → logprob: -14.752488136291504

Token 1505: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.029828468337655067
    2. '[' → logprob: -3.5298285484313965
    3. '           ' → logprob: -10.654828071594238
    4. ' ][' → logprob: -11.029828071594238
    5. ']' → logprob: -11.904828071594238
    6. '       ' → logprob: -12.154828071594238
    7. 'visited' → logprob: -12.154828071594238
    8. '         ' → logprob: -12.904828071594238
    9. '               ' → logprob: -13.154828071594238
    10. '          ' → logprob: -13.279828071594238

Token 1506: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -2.2842308680992573e-05
    2. '(' → logprob: -11.500022888183594
    3. ' visited' → logprob: -11.500022888183594
    4. '
' → logprob: -13.250022888183594
    5. '   ' → logprob: -15.625022888183594
    6. '```' → logprob: -16.375022888183594
    7. '
' → logprob: -16.500022888183594
    8. 'visible' → logprob: -16.500022888183594
    9. '[' → logprob: -17.125022888183594
    10. 'travel' → logprob: -17.250022888183594

Token 1507: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -1.1570115089416504
    2. '[' → logprob: -1.2820115089416504
    3. '][' → logprob: -1.2820115089416504
    4. ']' → logprob: -2.2820115089416504
    5. '+' → logprob: -3.6570115089416504
    6. '
' → logprob: -7.53201150894165
    7. ' +' → logprob: -7.90701150894165
    8. '+
' → logprob: -8.032011032104492
    9. '           ' → logprob: -8.532011032104492
    10. '                   ' → logprob: -8.657011032104492

Token 1508: 'subset' (ID: 163297)
  Prédit: 'subset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -2.546478935983032e-05
    2. ' subset' → logprob: -10.625025749206543
    3. 'substring' → logprob: -14.875025749206543
    4. '
' → logprob: -15.375025749206543
    5. 'subtotal' → logprob: -15.875025749206543
    6. 'p' → logprob: -15.875025749206543
    7. '   ' → logprob: -16.250024795532227
    8. 'sum' → logprob: -17.500024795532227
    9. 'dp' → logprob: -17.750024795532227
    10. '+' → logprob: -17.875024795532227

Token 1509: '_profit' (ID: 186239)
  Prédit: '_profit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_profit' → logprob: -2.3676733690081164e-05
    2. 'profit' → logprob: -10.75002384185791
    3. '_prof' → logprob: -14.00002384185791
    4. 'Profit' → logprob: -14.50002384185791
    5. '```' → logprob: -15.62502384185791
    6. '
' → logprob: -15.87502384185791
    7. '_pro' → logprob: -16.000022888183594
    8. ' profit' → logprob: -16.375022888183594
    9. '[' → logprob: -17.250022888183594
    10. '\' → logprob: -17.625022888183594

Token 1510: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0491243414580822
    2. '[(' → logprob: -3.049124240875244
    3. '[sub' → logprob: -7.924124240875244
    4. '(sub' → logprob: -9.174124717712402
    5. '[
' → logprob: -10.549124717712402
    6. '(tuple' → logprob: -10.924124717712402
    7. '```' → logprob: -11.674124717712402
    8. 'subset' → logprob: -12.174124717712402
    9. '(' → logprob: -12.549124717712402
    10. '[array' → logprob: -13.299124717712402

Token 1511: 'tuple' (ID: 52834)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.5947410464286804
    2. 'tuple' → logprob: -0.8447410464286804
    3. '(tuple' → logprob: -4.719740867614746
    4. '(sub' → logprob: -4.969740867614746
    5. 'sub' → logprob: -5.969740867614746
    6. '(' → logprob: -8.844740867614746
    7. ' tuple' → logprob: -11.094740867614746
    8. ' subset' → logprob: -11.594740867614746
    9. '(com' → logprob: -12.219740867614746
    10. 'substring' → logprob: -12.344740867614746

Token 1512: '(sorted' (ID: 92488)
  Prédit: '(sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sub' → logprob: -0.029872432351112366
    2. '(sorted' → logprob: -3.529872417449951
    3. 'subset' → logprob: -9.02987289428711
    4. 'sorted' → logprob: -13.90487289428711
    5. 'sub' → logprob: -14.02987289428711
    6. '([' → logprob: -15.65487289428711
    7. '(set' → logprob: -16.77987289428711
    8. ']' → logprob: -16.90487289428711
    9. '(' → logprob: -17.27987289428711
    10. '(
' → logprob: -17.27987289428711

Token 1513: '(sub' (ID: 19764)
  Prédit: '(sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sub' → logprob: -0.014223210513591766
    2. 'subset' → logprob: -4.264223098754883
    3. 'sub' → logprob: -9.764223098754883
    4. '([' → logprob: -14.389223098754883
    5. '(
' → logprob: -14.389223098754883
    6. ' subset' → logprob: -15.014223098754883
    7. '_subset' → logprob: -15.264223098754883
    8. '(' → logprob: -15.639223098754883
    9. '(list' → logprob: -16.514223098754883
    10. '(set' → logprob: -16.764223098754883

Token 1514: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.008003585040569305
    2. 'subset' → logprob: -4.8830037117004395
    3. 'et' → logprob: -8.258003234863281
    4. '(set' → logprob: -9.133003234863281
    5. 'erset' → logprob: -11.383003234863281
    6. 'aset' → logprob: -11.758003234863281
    7. ')set' → logprob: -12.758003234863281
    8. ' subset' → logprob: -13.383003234863281
    9. 'list' → logprob: -13.633003234863281
    10. '_subset' → logprob: -14.258003234863281

Token 1515: '))]
' (ID: 53695)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.12052737176418304
    2. '(sub' → logprob: -2.7455272674560547
    3. ')' → logprob: -3.7455272674560547
    4. ')])' → logprob: -3.9955272674560547
    5. '))' → logprob: -5.245527267456055
    6. '+' → logprob: -7.620527267456055
    7. ')]
' → logprob: -7.870527267456055
    8. '(s' → logprob: -8.120527267456055
    9. ')][' → logprob: -8.120527267456055
    10. '])]' → logprob: -8.995527267456055

Token 1516: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14439746737480164
    2. '
' → logprob: -2.519397497177124
    3. ' if' → logprob: -4.019397258758545
    4. 'if' → logprob: -4.644397258758545
    5. 'dp' → logprob: -4.644397258758545
    6. '[next' → logprob: -5.269397258758545
    7. '            
' → logprob: -6.144397258758545
    8. '               ' → logprob: -6.269397258758545
    9. 'next' → logprob: -7.019397258758545
    10. 'max' → logprob: -7.269397258758545

Token 1517: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5857805013656616
    2. ' if' → logprob: -0.9607805013656616
    3. '           ' → logprob: -2.960780620574951
    4. 'dp' → logprob: -5.835780620574951
    5. '               ' → logprob: -6.960780620574951
    6. ' next' → logprob: -7.335780620574951
    7. 'next' → logprob: -7.335780620574951
    8. '                   ' → logprob: -7.460780620574951
    9. '
' → logprob: -8.085780143737793
    10. 'for' → logprob: -8.210780143737793

Token 1518: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07689126580953598
    2. 'p' → logprob: -2.9518911838531494
    3. ' dp' → logprob: -3.9518911838531494
    4. ' p' → logprob: -6.2018914222717285
    5. 'travel' → logprob: -7.7018914222717285
    6. ' travel' → logprob: -10.07689094543457
    7. '(dp' → logprob: -11.32689094543457
    8. '   ' → logprob: -12.32689094543457
    9. '	dp' → logprob: -13.07689094543457
    10. '
' → logprob: -13.20189094543457

Token 1519: '[' (ID: 58)
  Prédit: '[last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[last' → logprob: -0.00014644917973782867
    2. '[next' → logprob: -9.500146865844727
    3. '[' → logprob: -9.625146865844727
    4. '][' → logprob: -14.250146865844727
    5. '[len' → logprob: -14.250146865844727
    6. 'last' → logprob: -14.500146865844727
    7. '   ' → logprob: -14.625146865844727
    8. '           ' → logprob: -14.875146865844727
    9. '[now' → logprob: -14.875146865844727
    10. '[sub' → logprob: -15.000146865844727

Token 1520: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.2576454335358e-05
    2. 'last' → logprob: -9.500092506408691
    3. 'subset' → logprob: -12.250092506408691
    4. 'sub' → logprob: -12.375092506408691
    5. '
' → logprob: -12.500092506408691
    6. '][' → logprob: -14.000092506408691
    7. '```' → logprob: -14.000092506408691
    8. ' ' → logprob: -14.375092506408691
    9. '[' → logprob: -14.500092506408691
    10. '[last' → logprob: -14.500092506408691

Token 1521: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.577038586139679
    2. '[' → logprob: -0.827038586139679
    3. '[last' → logprob: -7.327038764953613
    4. '0' → logprob: -9.327038764953613
    5. '```' → logprob: -9.452038764953613
    6. '[next' → logprob: -9.577038764953613
    7. ']' → logprob: -9.952038764953613
    8. '   ' → logprob: -10.577038764953613
    9. 'last' → logprob: -10.827038764953613
    10. '[sub' → logprob: -11.452038764953613

Token 1522: 'visited' (ID: 52453)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14337000250816345
    2. 'visited' → logprob: -2.0183699131011963
    3. '(' → logprob: -7.643370151519775
    4. 'T' → logprob: -10.018369674682617
    5. ' visited' → logprob: -10.643369674682617
    6. '   ' → logprob: -10.893369674682617
    7. ' ' → logprob: -11.018369674682617
    8. '
' → logprob: -11.143369674682617
    9. 'max' → logprob: -11.268369674682617
    10. 'subset' → logprob: -11.268369674682617

Token 1523: '|' (ID: 91)
  Prédit: '|'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.1076170802116394
    2. '[' → logprob: -2.732617139816284
    3. '][' → logprob: -4.107616901397705
    4. ']' → logprob: -4.607616901397705
    5. ' |' → logprob: -5.482616901397705
    6. '[sub' → logprob: -5.732616901397705
    7. ']+' → logprob: -6.482616901397705
    8. ']|' → logprob: -7.732616901397705
    9. '|(' → logprob: -8.357617378234863
    10. '```' → logprob: -9.107617378234863

Token 1524: 'sum' (ID: 12298)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.9296377301216125
    2. '0' → logprob: -1.0546376705169678
    3. '(' → logprob: -2.4296376705169678
    4. '(tuple' → logprob: -2.9296376705169678
    5. 'subset' → logprob: -3.5546376705169678
    6. 'sum' → logprob: -3.9296376705169678
    7. 'int' → logprob: -4.429637908935547
    8. '(sub' → logprob: -4.679637908935547
    9. 'sub' → logprob: -4.804637908935547
    10. '(
' → logprob: -4.929637908935547

Token 1525: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007868640124797821
    2. '[(' → logprob: -6.007868766784668
    3. '((' → logprob: -6.132868766784668
    4. '[' → logprob: -6.507868766784668
    5. '1' → logprob: -6.632868766784668
    6. '(sub' → logprob: -8.507868766784668
    7. ' (' → logprob: -9.007868766784668
    8. '[sub' → logprob: -10.507868766784668
    9. '[((' → logprob: -10.757868766784668
    10. '   ' → logprob: -12.382868766784668

Token 1526: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08305500447750092
    2. '1' → logprob: -2.583055019378662
    3. '((' → logprob: -6.083055019378662
    4. '[(' → logprob: -6.583055019378662
    5. '[' → logprob: -7.708055019378662
    6. '[((' → logprob: -10.458054542541504
    7. '(((' → logprob: -12.083054542541504
    8. ' (' → logprob: -12.583054542541504
    9. '```' → logprob: -13.583054542541504
    10. '([' → logprob: -14.458054542541504

Token 1527: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.013658938929438591
    2. '[' → logprob: -5.1386590003967285
    3. '(' → logprob: -5.6386590003967285
    4. '1' → logprob: -6.1386590003967285
    5. '<<(' → logprob: -7.1386590003967285
    6. '[sub' → logprob: -8.01365852355957
    7. '[i' → logprob: -8.51365852355957
    8. ' <<' → logprob: -9.01365852355957
    9. '(sub' → logprob: -9.01365852355957
    10. '[(' → logprob: -9.13865852355957

Token 1528: 'x' (ID: 87)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04233003407716751
    2. 's' → logprob: -3.417330026626587
    3. 'city' → logprob: -5.667330265045166
    4. '(i' → logprob: -6.542330265045166
    5. 'sub' → logprob: -6.667330265045166
    6. 'c' → logprob: -7.042330265045166
    7. '(s' → logprob: -7.792330265045166
    8. 'x' → logprob: -7.917330265045166
    9. '[i' → logprob: -8.792329788208008
    10. '1' → logprob: -9.042329788208008

Token 1529: ' for' (ID: 395)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.009165770374238491
    2. '[x' → logprob: -5.6341657638549805
    3. 'i' → logprob: -6.2591657638549805
    4. '(x' → logprob: -6.3841657638549805
    5. 'subset' → logprob: -7.7591657638549805
    6. '(sub' → logprob: -7.8841657638549805
    7. '[' → logprob: -8.38416576385498
    8. 's' → logprob: -8.63416576385498
    9. '[sub' → logprob: -8.75916576385498
    10. '[
' → logprob: -9.13416576385498

Token 1530: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1660124510526657
    2. 'subset' → logprob: -1.9160124063491821
    3. 'sub' → logprob: -6.041012287139893
    4. ' subset' → logprob: -6.166012287139893
    5. ' x' → logprob: -6.666012287139893
    6. '_subset' → logprob: -12.41601276397705
    7. '
' → logprob: -12.54101276397705
    8. ' sub' → logprob: -13.16601276397705
    9. 'range' → logprob: -13.54101276397705
    10. '[' → logprob: -13.66601276397705

Token 1531: ' in' (ID: 306)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0026761337649077177
    2. 'subset' → logprob: -6.002676010131836
    3. ' x' → logprob: -9.002676010131836
    4. '[x' → logprob: -10.377676010131836
    5. 'sub' → logprob: -10.877676010131836
    6. 'in' → logprob: -11.877676010131836
    7. '[' → logprob: -12.127676010131836
    8. '[sub' → logprob: -12.502676010131836
    9. ' subset' → logprob: -12.752676010131836
    10. ' in' → logprob: -13.377676010131836

Token 1532: ' subset' (ID: 58845)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.0006567967939190567
    2. ' subset' → logprob: -8.000657081604004
    3. 'sub' → logprob: -8.375657081604004
    4. 'x' → logprob: -9.375657081604004
    5. '
' → logprob: -12.875657081604004
    6. '[' → logprob: -14.000657081604004
    7. '_subset' → logprob: -14.125657081604004
    8. 's' → logprob: -14.125657081604004
    9. 'i' → logprob: -15.125657081604004
    10. 'range' → logprob: -15.500657081604004

Token 1533: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.019510015845298767
    2. ')' → logprob: -4.519509792327881
    3. '|' → logprob: -5.644509792327881
    4. ')==' → logprob: -6.269509792327881
    5. ')][' → logprob: -6.769509792327881
    6. ']==' → logprob: -7.769509792327881
    7. ')!=' → logprob: -8.269510269165039
    8. ')|' → logprob: -8.394510269165039
    9. ')])' → logprob: -8.644510269165039
    10. '])' → logprob: -9.144510269165039

Token 1534: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5089346170425415
    2. ']<' → logprob: -1.1339346170425415
    3. '<p' → logprob: -2.883934497833252
    4. '[' → logprob: -4.633934497833252
    5. ']' → logprob: -5.383934497833252
    6. ' <' → logprob: -7.133934497833252
    7. '<len' → logprob: -7.133934497833252
    8. '[max' → logprob: -7.633934497833252
    9. '<s' → logprob: -7.633934497833252
    10. '<v' → logprob: -7.633934497833252

Token 1535: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0007688904879614711
    2. ' p' → logprob: -7.375768661499023
    3. 'dp' → logprob: -9.750768661499023
    4. 'max' → logprob: -9.875768661499023
    5. '
' → logprob: -10.875768661499023
    6. '   ' → logprob: -12.625768661499023
    7. '           ' → logprob: -13.250768661499023
    8. '0' → logprob: -13.375768661499023
    9. '=' → logprob: -14.125768661499023
    10. ' max' → logprob: -14.125768661499023

Token 1536: ':
' (ID: 734)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006576700136065483
    2. ':
' → logprob: -5.7565765380859375
    3. '=
' → logprob: -6.2565765380859375
    4. '               ' → logprob: -8.006576538085938
    5. ' =' → logprob: -8.131576538085938
    6. '=p' → logprob: -8.506576538085938
    7. '+' → logprob: -9.256576538085938
    8. ']=' → logprob: -9.381576538085938
    9. '+=' → logprob: -9.881576538085938
    10. '                           ' → logprob: -9.881576538085938

Token 1537: '               ' (ID: 506)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06807971000671387
    2. ' =' → logprob: -2.943079710006714
    3. '<|end|>' → logprob: -5.318079948425293
    4. '```' → logprob: -6.193079948425293
    5. '=True' → logprob: -6.443079948425293
    6. '=
' → logprob: -6.443079948425293
    7. '[' → logprob: -7.568079948425293
    8. '                               ' → logprob: -7.693079948425293
    9. '               ' → logprob: -8.068079948425293
    10. '1' → logprob: -8.193079948425293

Token 1538: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.06674065440893173
    2. ' dp' → logprob: -2.9417407512664795
    3. '               ' → logprob: -5.1917405128479
    4. '                   ' → logprob: -6.5667405128479
    5. '                               ' → logprob: -6.6917405128479
    6. '```' → logprob: -6.6917405128479
    7. '                       ' → logprob: -6.8167405128479
    8. '                           ' → logprob: -7.4417405128479
    9. '           ' → logprob: -8.566740989685059
    10. '	dp' → logprob: -8.816740989685059

Token 1539: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007236333331093192
    2. '0' → logprob: -7.250723838806152
    3. '```' → logprob: -11.500723838806152
    4. '][' → logprob: -13.750723838806152
    5. '               ' → logprob: -14.250723838806152
    6. ' [' → logprob: -14.500723838806152
    7. '
' → logprob: -14.750723838806152
    8. '[
' → logprob: -15.000723838806152
    9. '   ' → logprob: -15.625723838806152
    10. '``' → logprob: -16.125722885131836

Token 1540: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '```' → logprob: -18.25
    3. ' ' → logprob: -19.125
    4. ' ' → logprob: -20.75
    5. '۰' → logprob: -20.875
    6. '[' → logprob: -21.125
    7. '
' → logprob: -21.375
    8. '=' → logprob: -21.75
    9. '   ' → logprob: -21.75
    10. '  ' → logprob: -22.0

Token 1541: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.01832563988864422
    2. '[' → logprob: -4.0183258056640625
    3. '               ' → logprob: -9.268325805664062
    4. ']' → logprob: -10.643325805664062
    5. ' ][' → logprob: -11.143325805664062
    6. '           ' → logprob: -11.393325805664062
    7. '                   ' → logprob: -11.893325805664062
    8. '   ' → logprob: -12.143325805664062
    9. ')[' → logprob: -12.768325805664062
    10. '
' → logprob: -12.768325805664062

Token 1542: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0017182581359520555
    2. '0' → logprob: -6.376718044281006
    3. ' visited' → logprob: -11.251718521118164
    4. '[' → logprob: -14.126718521118164
    5. 'dp' → logprob: -14.626718521118164
    6. '   ' → logprob: -15.001718521118164
    7. ' ' → logprob: -15.251718521118164
    8. '(' → logprob: -15.376718521118164
    9. '
' → logprob: -15.626718521118164
    10. 'last' → logprob: -15.876718521118164

Token 1543: '|' (ID: 91)
  Prédit: '|'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.3065040707588196
    2. '][' → logprob: -1.8065040111541748
    3. '[' → logprob: -2.306504011154175
    4. ']' → logprob: -9.931504249572754
    5. '```' → logprob: -10.556504249572754
    6. 'visited' → logprob: -11.181504249572754
    7. '   ' → logprob: -11.931504249572754
    8. '
' → logprob: -11.931504249572754
    9. '           ' → logprob: -12.056504249572754
    10. ']|' → logprob: -12.181504249572754

Token 1544: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.009999016299843788
    2. '(' → logprob: -5.384998798370361
    3. '0' → logprob: -5.759998798370361
    4. 'visited' → logprob: -7.009998798370361
    5. '(sum' → logprob: -7.009998798370361
    6. 'sub' → logprob: -8.63499927520752
    7. 'subset' → logprob: -9.63499927520752
    8. '[' → logprob: -10.00999927520752
    9. 'dp' → logprob: -10.00999927520752
    10. 'p' → logprob: -10.63499927520752

Token 1545: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.7120533811976202e-05
    2. '((' → logprob: -11.250017166137695
    3. ' (' → logprob: -13.125017166137695
    4. '1' → logprob: -13.250017166137695
    5. '(
' → logprob: -16.125017166137695
    6. '```' → logprob: -16.250017166137695
    7. '([' → logprob: -18.000017166137695
    8. '   ' → logprob: -18.625017166137695
    9. '[' → logprob: -18.875017166137695
    10. '<<' → logprob: -19.125017166137695

Token 1546: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12703698873519897
    2. '(' → logprob: -2.1270370483398438
    3. '(x' → logprob: -9.627037048339844
    4. '[' → logprob: -10.877037048339844
    5. 'x' → logprob: -10.877037048339844
    6. ' (' → logprob: -13.752037048339844
    7. '[x' → logprob: -13.877037048339844
    8. '   ' → logprob: -14.127037048339844
    9. '```' → logprob: -14.252037048339844
    10. '
' → logprob: -14.627037048339844

Token 1547: '<<' (ID: 5354)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5135955214500427
    2. '<<' → logprob: -1.0135955810546875
    3. '1' → logprob: -3.2635955810546875
    4. '(x' → logprob: -8.013595581054688
    5. '```' → logprob: -9.888595581054688
    6. '>>' → logprob: -10.013595581054688
    7. ' (' → logprob: -11.013595581054688
    8. 'x' → logprob: -11.388595581054688
    9. '
' → logprob: -12.013595581054688
    10. '[' → logprob: -12.138595581054688

Token 1548: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0003178273618686944
    2. '(x' → logprob: -8.125317573547363
    3. '(' → logprob: -11.250317573547363
    4. '1' → logprob: -12.375317573547363
    5. '[x' → logprob: -12.750317573547363
    6. 'subset' → logprob: -14.250317573547363
    7. ' x' → logprob: -15.125317573547363
    8. '(sub' → logprob: -15.250317573547363
    9. 'sub' → logprob: -15.500317573547363
    10. '[' → logprob: -15.875317573547363

Token 1549: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013613306917250156
    2. '(for' → logprob: -4.763613224029541
    3. '(' → logprob: -5.638613224029541
    4. ' for' → logprob: -7.388613224029541
    5. '(sub' → logprob: -8.1386137008667
    6. '(s' → logprob: -8.5136137008667
    7. '<<' → logprob: -8.8886137008667
    8. '(x' → logprob: -9.0136137008667
    9. '>>' → logprob: -10.5136137008667
    10. '[' → logprob: -11.7636137008667

Token 1550: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07910073548555374
    2. 'subset' → logprob: -2.5791008472442627
    3. '[x' → logprob: -9.079100608825684
    4. 'sub' → logprob: -9.954100608825684
    5. ' subset' → logprob: -10.954100608825684
    6. ' x' → logprob: -11.079100608825684
    7. '(x' → logprob: -11.829100608825684
    8. '[' → logprob: -12.204100608825684
    9. '(sub' → logprob: -13.579100608825684
    10. '[sub' → logprob: -13.954100608825684

Token 1551: ' in' (ID: 306)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.016466792672872543
    2. 'x' → logprob: -4.2664666175842285
    3. '[x' → logprob: -7.5164666175842285
    4. '(x' → logprob: -7.7664666175842285
    5. '[' → logprob: -7.7664666175842285
    6. '(sub' → logprob: -7.8914666175842285
    7. '               ' → logprob: -8.641467094421387
    8. 'sub' → logprob: -9.016467094421387
    9. ' subset' → logprob: -9.391467094421387
    10. '           ' → logprob: -10.641467094421387

Token 1552: ' subset' (ID: 58845)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -1.8312570318812504e-05
    2. ' subset' → logprob: -11.625018119812012
    3. 'x' → logprob: -11.750018119812012
    4. 'sub' → logprob: -13.875018119812012
    5. '
' → logprob: -14.875018119812012
    6. '[' → logprob: -16.125019073486328
    7. '_subset' → logprob: -17.000019073486328
    8. '   ' → logprob: -17.750019073486328
    9. '(sub' → logprob: -18.500019073486328
    10. '(' → logprob: -18.750019073486328

Token 1553: ')' (ID: 8)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7113292217254639
    2. ']+' → logprob: -0.7113292217254639
    3. ']+=' → logprob: -4.336329460144043
    4. ']=' → logprob: -5.836329460144043
    5. ']<' → logprob: -6.711329460144043
    6. ']==' → logprob: -7.711329460144043
    7. '               ' → logprob: -8.961329460144043
    8. ']>' → logprob: -10.211329460144043
    9. '                   ' → logprob: -10.461329460144043
    10. ']|' → logprob: -10.836329460144043

Token 1554: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.014753920957446098
    2. ']' → logprob: -4.514753818511963
    3. ']+=' → logprob: -6.014753818511963
    4. ']+' → logprob: -7.264753818511963
    5. '=' → logprob: -7.889753818511963
    6. ']<' → logprob: -9.264754295349121
    7. '                   ' → logprob: -10.889754295349121
    8. '               ' → logprob: -11.514754295349121
    9. '                       ' → logprob: -12.014754295349121
    10. ']=(' → logprob: -12.264754295349121

Token 1555: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -5.836499985889532e-05
    2. ' p' → logprob: -9.7500581741333
    3. '               ' → logprob: -19.000059127807617
    4. '
' → logprob: -19.875059127807617
    5. '                   ' → logprob: -19.875059127807617
    6. '	p' → logprob: -20.000059127807617
    7. '   ' → logprob: -20.125059127807617
    8. '           ' → logprob: -21.750059127807617
    9. 'dp' → logprob: -21.875059127807617
    10. '                       ' → logprob: -22.250059127807617

Token 1556: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7481358647346497
    2. '<|end|>' → logprob: -0.7481358647346497
    3. ')' → logprob: -3.123135805130005
    4. '\n' → logprob: -5.373136043548584
    5. '```' → logprob: -5.998136043548584
    6. ']' → logprob: -7.498136043548584
    7. '#' → logprob: -7.623136043548584
    8. '}' → logprob: -8.248135566711426
    9. '[' → logprob: -8.623135566711426
    10. '<|end|>' → logprob: -8.748135566711426

Token 1557: 'ans' (ID: 616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.32924884557724
    2. ')' → logprob: -2.3292489051818848
    3. '<|end|>' → logprob: -2.3292489051818848
    4. '```' → logprob: -2.8292489051818848
    5. '
' → logprob: -4.329248905181885
    6. '\n' → logprob: -5.454248905181885
    7. ' for' → logprob: -6.329248905181885
    8. '}' → logprob: -6.454248905181885
    9. '#' → logprob: -6.704248905181885
    10. 'continue' → logprob: -7.204248905181885

Token 1558: '=max' (ID: 102952)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12995806336402893
    2. '=max' → logprob: -2.379958152770996
    3. '=[' → logprob: -4.504958152770996
    4. '=
' → logprob: -5.254958152770996
    5. '[' → logprob: -5.504958152770996
    6. '```' → logprob: -6.129958152770996
    7. '=[]' → logprob: -6.379958152770996
    8. '=np' → logprob: -6.504958152770996
    9. ' =' → logprob: -6.754958152770996
    10. '=[]
' → logprob: -7.129958152770996

Token 1559: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.007324059493839741
    2. '([' → logprob: -5.13232421875
    3. '(max' → logprob: -6.75732421875
    4. 'dp' → logprob: -9.00732421875
    5. '(' → logprob: -9.63232421875
    6. '(p' → logprob: -10.75732421875
    7. '(
' → logprob: -11.25732421875
    8. '((' → logprob: -13.00732421875
    9. '(ans' → logprob: -13.00732421875
    10. '(sum' → logprob: -13.88232421875

Token 1560: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1472419600977446e-06
    2. '[-' → logprob: -13.750000953674316
    3. '[len' → logprob: -17.375001907348633
    4. '[i' → logprob: -17.375001907348633
    5. '0' → logprob: -17.750001907348633
    6. '[
' → logprob: -18.125001907348633
    7. '
' → logprob: -18.375001907348633
    8. '```' → logprob: -18.625001907348633
    9. ' [' → logprob: -19.375001907348633
    10. ')[' → logprob: -19.750001907348633

Token 1561: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2113979209971149e-05
    2. '
' → logprob: -12.250012397766113
    3. 'range' → logprob: -12.625012397766113
    4. 'i' → logprob: -12.875012397766113
    5. '][' → logprob: -14.125012397766113
    6. '[' → logprob: -14.875012397766113
    7. ' range' → logprob: -15.625012397766113
    8. ']' → logprob: -16.625011444091797
    9. '```' → logprob: -16.625011444091797
    10. ' ' → logprob: -17.750011444091797

Token 1562: '])
' (ID: 5169)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.28523582220077515
    2. '[' → logprob: -2.03523588180542
    3. ')' → logprob: -3.53523588180542
    4. '[max' → logprob: -3.53523588180542
    5. '[:' → logprob: -4.03523588180542
    6. ')[' → logprob: -4.28523588180542
    7. '[len' → logprob: -5.16023588180542
    8. '][:' → logprob: -5.91023588180542
    9. '])' → logprob: -6.03523588180542
    10. '
' → logprob: -6.16023588180542

Token 1563: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.7159857786027715e-05
    2. '```' → logprob: -10.375046730041504
    3. '
' → logprob: -11.375046730041504
    4. ' print' → logprob: -13.125046730041504
    5. '(print' → logprob: -13.875046730041504
    6. '``' → logprob: -13.875046730041504
    7. '.print' → logprob: -15.750046730041504
    8. '\' → logprob: -16.12504768371582
    9. '<|end|>' → logprob: -16.37504768371582
    10. '#print' → logprob: -16.62504768371582

Token 1564: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.008615754544734955
    2. 'ans' → logprob: -4.758615970611572
    3. '(dp' → logprob: -14.133615493774414
    4. '()' → logprob: -15.008615493774414
    5. '(' → logprob: -16.133615493774414
    6. '	ans' → logprob: -17.008615493774414
    7. ' ans' → logprob: -17.133615493774414
    8. 'dp' → logprob: -17.508615493774414
    9. '```' → logprob: -17.758615493774414
    10. '(max' → logprob: -18.508615493774414

Token 1565: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019901065388694406
    2. '())' → logprob: -9.125199317932129
    3. '()' → logprob: -9.750199317932129
    4. ')
' → logprob: -11.250199317932129
    5. '```' → logprob: -11.875199317932129
    6. '[])' → logprob: -13.125199317932129
    7. '`)' → logprob: -13.375199317932129
    8. '[' → logprob: -13.500199317932129
    9. '(' → logprob: -13.750199317932129
    10. '**' → logprob: -13.875199317932129

Token 1566: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0001238004770129919
    2. ' ans' → logprob: -9.000123977661133
    3. '(ans' → logprob: -15.125123977661133
    4. '	ans' → logprob: -17.750123977661133
    5. '>' → logprob: -18.125123977661133
    6. '>=' → logprob: -18.125123977661133
    7. '_ans' → logprob: -19.125123977661133
    8. '
' → logprob: -20.500123977661133
    9. '0' → logprob: -20.750123977661133
    10. 'Ans' → logprob: -21.375123977661133

Token 1567: '>=' (ID: 20974)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.04629514366388321
    2. '>=' → logprob: -3.546295166015625
    3. '!=-' → logprob: -4.671295166015625
    4. '!=' → logprob: -5.171295166015625
    5. 'else' → logprob: -7.421295166015625
    6. '>-' → logprob: -7.421295166015625
    7. ' !=' → logprob: -9.171295166015625
    8. ' >' → logprob: -10.171295166015625
    9. ' >=' → logprob: -11.296295166015625
    10. ' else' → logprob: -12.546295166015625

Token 1568: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -17.125
    4. '
' → logprob: -17.5
    5. '1' → logprob: -18.75
    6. '   ' → logprob: -19.375
    7. '``' → logprob: -19.625
    8. '０' → logprob: -20.0
    9. '=' → logprob: -20.125
    10. '۰' → logprob: -20.25

Token 1569: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.006718809716403484
    2. ' else' → logprob: -5.006718635559082
    3. '```' → logprob: -12.756718635559082
    4. '0' → logprob: -15.006718635559082
    5. '``' → logprob: -16.1317195892334
    6. ')' → logprob: -16.7567195892334
    7. '_else' → logprob: -17.2567195892334
    8. '
' → logprob: -17.7567195892334
    9. ' ' → logprob: -18.0067195892334
    10. '   ' → logprob: -18.2567195892334

Token 1570: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.500011444091797
    3. '
' → logprob: -14.125011444091797
    4. '``' → logprob: -15.500011444091797
    5. '   ' → logprob: -15.625011444091797
    6. '```' → logprob: -15.875011444091797
    7. '`' → logprob: -16.875011444091797
    8. '    
' → logprob: -17.375011444091797
    9. '00' → logprob: -18.250011444091797
    10. '\
' → logprob: -18.750011444091797

Token 1571: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0087516784551553e-05
    2. '"' → logprob: -12.12501049041748
    3. '-' → logprob: -12.50001049041748
    4. ''' → logprob: -14.25001049041748
    5. ' ' → logprob: -16.000009536743164
    6. '
' → logprob: -16.625009536743164
    7. '`' → logprob: -17.625009536743164
    8. '```' → logprob: -17.625009536743164
    9. '``' → logprob: -18.250009536743164
    10. '   ' → logprob: -19.125009536743164

Token 1572: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6057283878326416
    2. '<|end|>' → logprob: -1.3557283878326416
    3. '
' → logprob: -1.7307283878326416
    4. '```' → logprob: -4.2307281494140625
    5. '\n' → logprob: -5.7307281494140625
    6. '\' → logprob: -7.8557281494140625
    7. '<|end|>' → logprob: -8.105728149414062
    8. '()' → logprob: -8.230728149414062
    9. ')
' → logprob: -9.105728149414062
    10. '``' → logprob: -9.605728149414062


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1570
Tokens correctement prédits (1ère position, stricte): 574
Tokens correctement prédits (1ère position, avec adaptation): 612
Tokens correctement prédits (top 10): 1125
Précision stricte (1ère position): 36.56%
Précision adaptée (1ère position): 38.98%
Précision (top 10): 71.66%
================================================================================
