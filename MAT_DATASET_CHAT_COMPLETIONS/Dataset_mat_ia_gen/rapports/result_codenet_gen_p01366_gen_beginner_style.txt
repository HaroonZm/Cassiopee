================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:14
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import heapq

def dijkstra(n, graph):
    dist = [float('inf')] * (n+1)
    dist[1] = 0
    hq = [(0,1)]
    while hq:
        cd, u = heapq.heappop(hq)
        if dist[u] < cd:
            continue
        for v, d, c in graph[u]:
            nd = cd + d
            if nd < dist[v]:
                dist[v] = nd
                heapq.heappush(hq, (nd,v))
    return dist

def main():
    input = sys.stdin.readline
    while True:
        line = input()
        if not line:
            break
        N,M = map(int, line.split())
        if N==0 and M==0:
            break
        graph = [[] for _ in range(N+1)]
        edges = []
        for _ in range(M):
            u,v,d,c = map(int, input().split())
            graph[u].append((v,d,c))
            graph[v].append((u,d,c))
            edges.append((u,v,d,c))
        dist = dijkstra(N, graph)
        # Keep only edges that can be on shortest path from capital
        valid_edges = []
        for u,v,d,c in edges:
            if dist[u] + d == dist[v] or dist[v] + d == dist[u]:
                valid_edges.append((u,v,d,c))
        # Build graph with valid edges
        graph2 = [[] for _ in range(N+1)]
        for u,v,d,c in valid_edges:
            graph2[u].append((v,c))
            graph2[v].append((u,c))
        # Minimum spanning tree on valid edges (by cost)
        used = [False]*(N+1)
        hq = [(0,1)]
        total_cost = 0
        while hq:
            c,u = heapq.heappop(hq)
            if used[u]:
                continue
            used[u] = True
            total_cost += c
            for v,nc in graph2[u]:
                if not used[v]:
                    heapq.heappush(hq,(nc,v))
        print(total_cost)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18539276719093323
    2. '\n' → logprob: -2.0603928565979004
    3. '<|end|>' → logprob: -4.1853928565979
    4. '\' → logprob: -4.5603928565979
    5. 'newline' → logprob: -5.3103928565979
    6. '```' → logprob: -6.0603928565979
    7. 'import' → logprob: -6.1853928565979
    8. '<|end|>' → logprob: -6.5603928565979
    9. '' → logprob: -6.9353928565979
    10. '
' → logprob: -7.1853928565979

Token 4: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00012535012501757592
    2. 'os' → logprob: -9.00012493133545
    3. ' math' → logprob: -13.87512493133545
    4. '"os' → logprob: -15.12512493133545
    5. ' re' → logprob: -15.50012493133545
    6. ' o' → logprob: -15.87512493133545
    7. ' ' → logprob: -16.125125885009766
    8. ' json' → logprob: -16.250125885009766
    9. '	os' → logprob: -16.375125885009766
    10. '_os' → logprob: -17.000125885009766

Token 5: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.3782830137643032e-05
    2. '.' → logprob: -11.37501335144043
    3. 'queue' → logprob: -14.62501335144043
    4. '#' → logprob: -14.75001335144043
    5. '_' → logprob: -15.12501335144043
    6. '=' → logprob: -15.37501335144043
    7. 'ify' → logprob: -15.50001335144043
    8. '[' → logprob: -15.75001335144043
    9. 'space' → logprob: -16.00001335144043
    10. 'u' → logprob: -16.50001335144043

Token 6: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2581426799297333
    2. '
' → logprob: -2.7581427097320557
    3. '\' → logprob: -2.8831427097320557
    4. '\n' → logprob: -3.0081427097320557
    5. '<|end|>' → logprob: -3.8831427097320557
    6. '```' → logprob: -4.383142471313477
    7. 'import' → logprob: -5.008142471313477
    8. '

' → logprob: -5.133142471313477
    9. '<|end|>' → logprob: -5.758142471313477
    10. '' → logprob: -5.758142471313477

Token 7: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.11146306991577148
    2. '\' → logprob: -3.3614630699157715
    3. '
' → logprob: -4.1114630699157715
    4. '\n' → logprob: -4.1114630699157715
    5. 'def' → logprob: -4.7364630699157715
    6. 'import' → logprob: -4.9864630699157715
    7. '```' → logprob: -4.9864630699157715
    8. '.
' → logprob: -5.7364630699157715
    9. '' → logprob: -5.7364630699157715
    10. 'from' → logprob: -6.1114630699157715

Token 8: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.00032151900813914835
    2. ' a' → logprob: -9.500321388244629
    3. ' heap' → logprob: -9.875321388244629
    4. ' ' → logprob: -10.000321388244629
    5. '_' → logprob: -10.625321388244629
    6. ' process' → logprob: -10.625321388244629
    7. ' shortest' → logprob: -10.875321388244629
    8. ' find' → logprob: -11.625321388244629
    9. ' space' → logprob: -11.750321388244629
    10. ' priority' → logprob: -11.750321388244629

Token 9: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.5951759815216064
    2. 'e' → logprob: -0.9701759815216064
    3. 'i' → logprob: -3.5951759815216064
    4. 'ij' → logprob: -3.7201759815216064
    5. 'ijk' → logprob: -4.095175743103027
    6. '_' → logprob: -7.970175743103027
    7. '_e' → logprob: -8.220175743103027
    8. 'jik' → logprob: -9.095175743103027
    9. '```' → logprob: -9.345175743103027
    10. 'ef' → logprob: -9.595175743103027

Token 10: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000667640648316592
    2. '_' → logprob: -7.750667572021484
    3. ' (' → logprob: -9.500667572021484
    4. '(
' → logprob: -10.375667572021484
    5. '<|end|>' → logprob: -10.500667572021484
    6. '```' → logprob: -11.125667572021484
    7. '('' → logprob: -12.000667572021484
    8. '<|end|>' → logprob: -12.000667572021484
    9. '("("' → logprob: -12.125667572021484
    10. ''s' → logprob: -12.250667572021484

Token 11: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000646433443762362
    2. ' ,' → logprob: -7.375646591186523
    3. ')' → logprob: -11.875646591186523
    4. '):' → logprob: -12.000646591186523
    5. ',
' → logprob: -13.250646591186523
    6. '‌,' → logprob: -14.000646591186523
    7. ',int' → logprob: -14.125646591186523
    8. ',

' → logprob: -14.250646591186523
    9. '_,' → logprob: -14.875646591186523
    10. ',node' → logprob: -15.000646591186523

Token 12: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.17101414501667023
    2. 'graph' → logprob: -2.2960140705108643
    3. ' start' → logprob: -3.2960140705108643
    4. ' edges' → logprob: -4.296014308929443
    5. ' s' → logprob: -6.421014308929443
    6. 'edges' → logprob: -6.796014308929443
    7. 'start' → logprob: -7.046014308929443
    8. ' source' → logprob: -7.546014308929443
    9. ' adjacency' → logprob: -7.671014308929443
    10. ' ' → logprob: -7.921014308929443

Token 13: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032367748208343983
    2. '):' → logprob: -5.753236770629883
    3. ' ,' → logprob: -10.503236770629883
    4. ')' → logprob: -10.628236770629883
    5. ',n' → logprob: -13.753236770629883
    6. ',
' → logprob: -14.253236770629883
    7. ':' → logprob: -14.378236770629883
    8. ',node' → logprob: -14.378236770629883
    9. '[' → logprob: -14.753236770629883
    10. ' ):' → logprob: -14.878236770629883

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01927243545651436
    2. 'dist' → logprob: -4.894272327423096
    3. '```' → logprob: -5.144272327423096
    4. '    
' → logprob: -6.769272327423096
    5. '    ' → logprob: -7.269272327423096
    6. ' ' → logprob: -7.269272327423096
    7. 'distance' → logprob: -7.644272327423096
    8. '
' → logprob: -7.644272327423096
    9. '``' → logprob: -7.769272327423096
    10. ' distances' → logprob: -7.894272327423096

Token 15: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.27824270725250244
    2. '   ' → logprob: -1.6532427072525024
    3. ' dist' → logprob: -3.028242588043213
    4. ' distances' → logprob: -6.028242588043213
    5. 'distance' → logprob: -8.528243064880371
    6. '```' → logprob: -9.028243064880371
    7. '    ' → logprob: -9.528243064880371
    8. ' ' → logprob: -9.903243064880371
    9. '  ' → logprob: -10.278243064880371
    10. ' distance' → logprob: -10.403243064880371

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06100408360362053
    2. '=' → logprob: -3.061004161834717
    3. '[' → logprob: -4.561004161834717
    4. ',' → logprob: -7.561004161834717
    5. '[]' → logprob: -7.561004161834717
    6. '   ' → logprob: -8.311003684997559
    7. ' ' → logprob: -8.811003684997559
    8. '=[]' → logprob: -9.186003684997559
    9. '[:]' → logprob: -9.186003684997559
    10. ')' → logprob: -9.811003684997559

Token 17: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.38805997371673584
    2. '[' → logprob: -1.1380599737167358
    3. '[n' → logprob: -7.388060092926025
    4. '{' → logprob: -8.263059616088867
    5. '[node' → logprob: -9.138059616088867
    6. '[int' → logprob: -9.388059616088867
    7. ' {' → logprob: -10.138059616088867
    8. '[len' → logprob: -11.263059616088867
    9. '[in' → logprob: -11.763059616088867
    10. '[i' → logprob: -12.138059616088867

Token 18: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.10023697465658188
    2. ' float' → logprob: -2.3502368927001953
    3. '   ' → logprob: -11.225236892700195
    4. ' sys' → logprob: -12.100236892700195
    5. ' ' → logprob: -12.475236892700195
    6. '10' → logprob: -12.850236892700195
    7. 'sys' → logprob: -13.725236892700195
    8. 'int' → logprob: -13.975236892700195
    9. '	float' → logprob: -14.475236892700195
    10. '(float' → logprob: -14.600236892700195

Token 19: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.318681188422488e-05
    2. '(' → logprob: -11.87501335144043
    3. ''in' → logprob: -12.87501335144043
    4. ''' → logprob: -13.37501335144043
    5. '("' → logprob: -13.50001335144043
    6. '(in' → logprob: -14.75001335144043
    7. 'inf' → logprob: -16.37501335144043
    8. ' ('' → logprob: -17.12501335144043
    9. ''s' → logprob: -17.87501335144043
    10. '('+' → logprob: -17.87501335144043

Token 20: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.5048530030981055e-06
    2. 'in' → logprob: -13.750001907348633
    3. 'Inf' → logprob: -15.625001907348633
    4. 'INF' → logprob: -16.250001907348633
    5. 'info' → logprob: -16.625001907348633
    6. ' inf' → logprob: -17.000001907348633
    7. '-inf' → logprob: -17.500001907348633
    8. '_inf' → logprob: -17.875001907348633
    9. '∞' → logprob: -17.875001907348633
    10. '.inf' → logprob: -19.000001907348633

Token 21: '')]' (ID: 94377)
  Prédit: '')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')]' → logprob: -0.5343461632728577
    2. ')' → logprob: -1.159346103668213
    3. ')]' → logprob: -2.534346103668213
    4. '')' → logprob: -4.034346103668213
    5. ']' → logprob: -5.909346103668213
    6. '('' → logprob: -8.909346580505371
    7. ''),' → logprob: -9.034346580505371
    8. '),' → logprob: -9.034346580505371
    9. '()' → logprob: -10.409346580505371
    10. ',' → logprob: -10.909346580505371

Token 22: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009372343309223652
    2. ' for' → logprob: -5.509372234344482
    3. ',' → logprob: -5.759372234344482
    4. ']*' → logprob: -7.134372234344482
    5. ' ]' → logprob: -7.634372234344482
    6. ')' → logprob: -8.00937271118164
    7. 'for' → logprob: -8.63437271118164
    8. '   ' → logprob: -9.25937271118164
    9. '<|end|>' → logprob: -9.50937271118164
    10. ']*(' → logprob: -10.13437271118164

Token 23: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06016518548130989
    2. '(n' → logprob: -3.4351651668548584
    3. ' n' → logprob: -3.6851651668548584
    4. ' (' → logprob: -6.9351654052734375
    5. '(' → logprob: -9.185165405273438
    6. ')n' → logprob: -14.185165405273438
    7. '	n' → logprob: -14.310165405273438
    8. ' ' → logprob: -14.810165405273438
    9. '_n' → logprob: -15.435165405273438
    10. '   ' → logprob: -15.810165405273438

Token 24: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00606874842196703
    2. ' n' → logprob: -5.131068706512451
    3. '(n' → logprob: -9.00606918334961
    4. ')n' → logprob: -11.63106918334961
    5. ' (' → logprob: -12.13106918334961
    6. '   ' → logprob: -13.75606918334961
    7. '	n' → logprob: -14.38106918334961
    8. ')' → logprob: -14.63106918334961
    9. '(' → logprob: -14.63106918334961
    10. '_n' → logprob: -15.00606918334961

Token 25: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04316749423742294
    2. '+' → logprob: -3.2931675910949707
    3. ' )' → logprob: -5.543167591094971
    4. ' +' → logprob: -6.793167591094971
    5. '+)' → logprob: -10.293167114257812
    6. '<|end|>' → logprob: -11.418167114257812
    7. ')
' → logprob: -12.168167114257812
    8. '))' → logprob: -12.543167114257812
    9. '```' → logprob: -12.793167114257812
    10. ')]' → logprob: -12.918167114257812

Token 26: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002378673671046272
    2. ' ' → logprob: -8.375237464904785
    3. '0' → logprob: -12.375237464904785
    4. ')' → logprob: -13.500237464904785
    5. '   ' → logprob: -14.125237464904785
    6. '```' → logprob: -15.250237464904785
    7. '2' → logprob: -15.500237464904785
    8. '  ' → logprob: -15.750237464904785
    9. '

' → logprob: -16.7502384185791
    10. ' )' → logprob: -17.2502384185791

Token 27: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.825890159234405e-05
    2. ')
' → logprob: -9.875068664550781
    3. '   ' → logprob: -12.125068664550781
    4. ' )' → logprob: -12.625068664550781
    5. '```' → logprob: -13.250068664550781
    6. '`)' → logprob: -13.375068664550781
    7. '),' → logprob: -13.625068664550781
    8. '<|end|>' → logprob: -14.125068664550781
    9. '))' → logprob: -14.750068664550781
    10. ')`' → logprob: -14.875068664550781

Token 28: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.07762980461120605
    2. ' dist' → logprob: -3.202629804611206
    3. '   ' → logprob: -3.952629804611206
    4. '	dist' → logprob: -5.202630043029785
    5. 'd' → logprob: -5.452630043029785
    6. '
' → logprob: -6.077630043029785
    7. ' ' → logprob: -7.077630043029785
    8. '[' → logprob: -7.702630043029785
    9. '    
' → logprob: -8.202630043029785
    10. '<|end|>' → logprob: -8.452630043029785

Token 29: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.11460050940513611
    2. ' dist' → logprob: -2.239600419998169
    3. 'd' → logprob: -6.739600658416748
    4. ' ' → logprob: -8.36460018157959
    5. '   ' → logprob: -8.61460018157959
    6. '	dist' → logprob: -9.61460018157959
    7. ' d' → logprob: -10.61460018157959
    8. '    ' → logprob: -11.36460018157959
    9. '[' → logprob: -11.36460018157959
    10. '    
' → logprob: -11.61460018157959

Token 30: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.4121114822482923e-06
    2. '```' → logprob: -13.375003814697266
    3. '<|end|>' → logprob: -14.375003814697266
    4. '\[' → logprob: -15.125003814697266
    5. ' ' → logprob: -15.625003814697266
    6. ']' → logprob: -15.625003814697266
    7. '[
' → logprob: -15.750003814697266
    8. '<|end|>' → logprob: -15.750003814697266
    9. '[]' → logprob: -16.000003814697266
    10. ' [' → logprob: -17.000003814697266

Token 31: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0025213228072971106
    2. '0' → logprob: -6.002521514892578
    3. ' ' → logprob: -10.002521514892578
    4. ')' → logprob: -15.377521514892578
    5. '   ' → logprob: -16.377521514892578
    6. '```' → logprob: -17.502521514892578
    7. '=' → logprob: -18.127521514892578
    8. ']' → logprob: -18.252521514892578
    9. '-' → logprob: -18.752521514892578
    10. '2' → logprob: -18.752521514892578

Token 32: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12719979882240295
    2. ')' → logprob: -2.37719988822937
    3. ' ]' → logprob: -4.002199649810791
    4. ')]' → logprob: -5.377199649810791
    5. ' )' → logprob: -5.627199649810791
    6. '])' → logprob: -9.62720012664795
    7. ']=' → logprob: -10.87720012664795
    8. ' ])' → logprob: -10.87720012664795
    9. '[' → logprob: -11.37720012664795
    10. '=' → logprob: -11.62720012664795

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009758805856108665
    2. '=' → logprob: -4.634758949279785
    3. ' ' → logprob: -14.134758949279785
    4. ' =)' → logprob: -14.259758949279785
    5. ' =
' → logprob: -14.759758949279785
    6. ')' → logprob: -15.759758949279785
    7. '    ' → logprob: -15.884758949279785
    8. '[' → logprob: -15.884758949279785
    9. ']' → logprob: -16.25975799560547
    10. ' ==' → logprob: -16.50975799560547

Token 34: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018150178715586662
    2. ' ' → logprob: -4.018150329589844
    3. ' ' → logprob: -16.143150329589844
    4. '   ' → logprob: -16.643150329589844
    5. '  ' → logprob: -17.393150329589844
    6. '```' → logprob: -18.143150329589844
    7. '۰' → logprob: -18.768150329589844
    8. '1' → logprob: -19.080650329589844
    9. '00' → logprob: -19.205650329589844
    10. '`' → logprob: -19.580650329589844

Token 35: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '۰' → logprob: -19.625001907348633
    4. '```' → logprob: -20.000001907348633
    5. '   ' → logprob: -20.125001907348633
    6. '  ' → logprob: -21.000001907348633
    7. '０' → logprob: -21.500001907348633
    8. '٠' → logprob: -21.625001907348633
    9. '1' → logprob: -21.750001907348633
    10. '00' → logprob: -21.812501907348633

Token 36: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0050368825905025005
    2. '' → logprob: -6.0050368309021
    3. ' 
' → logprob: -7.1300368309021
    4. '\n' → logprob: -7.1300368309021
    5. '<|end|>' → logprob: -8.630037307739258
    6. '    
' → logprob: -8.755037307739258
    7. '\' → logprob: -8.880037307739258
    8. '  
' → logprob: -9.130037307739258
    9. '   ' → logprob: -9.255037307739258
    10. 'newline' → logprob: -9.755037307739258

Token 37: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.005379960872232914
    2. '   ' → logprob: -5.755380153656006
    3. '' → logprob: -7.380380153656006
    4. '    
' → logprob: -7.505380153656006
    5. '\n' → logprob: -7.880380153656006
    6. '<|end|>' → logprob: -8.630379676818848
    7. ',' → logprob: -9.380379676818848
    8. '  
' → logprob: -9.505379676818848
    9. ' 
' → logprob: -9.505379676818848
    10. '
' → logprob: -9.630379676818848

Token 38: ' h' (ID: 312)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.2826840579509735
    2. ' heap' → logprob: -1.907684087753296
    3. '   ' → logprob: -3.157684087753296
    4. 'pq' → logprob: -3.157684087753296
    5. 'queue' → logprob: -4.782683849334717
    6. 'priority' → logprob: -6.282683849334717
    7. 'import' → logprob: -6.782683849334717
    8. ' pq' → logprob: -7.657683849334717
    9. ' queue' → logprob: -8.157684326171875
    10. 'hq' → logprob: -8.282684326171875

Token 39: 'q' (ID: 80)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0002342912630410865
    2. 'q' → logprob: -10.375234603881836
    3. 'eep' → logprob: -10.375234603881836
    4. '[' → logprob: -10.875234603881836
    5. 'p' → logprob: -11.000234603881836
    6. ' =' → logprob: -11.125234603881836
    7. 'ea' → logprob: -11.125234603881836
    8. '=' → logprob: -11.250234603881836
    9. '	e' → logprob: -11.375234603881836
    10. ',' → logprob: -11.375234603881836

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08679813891649246
    2. '=' → logprob: -2.9617981910705566
    3. '.' → logprob: -3.7117981910705566
    4. '.append' → logprob: -5.711798191070557
    5. '.push' → logprob: -6.586798191070557
    6. '=[]' → logprob: -6.836798191070557
    7. ',' → logprob: -7.586798191070557
    8. '.heap' → logprob: -8.961797714233398
    9. '.he' → logprob: -9.211797714233398
    10. ' ' → logprob: -9.336797714233398

Token 41: ' [(' (ID: 43900)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.02148461900651455
    2. '[(' → logprob: -4.021484851837158
    3. ' []' → logprob: -5.771484851837158
    4. ' [(' → logprob: -8.521484375
    5. '[' → logprob: -11.271484375
    6. '[]
' → logprob: -13.521484375
    7. '[]}' → logprob: -14.771484375
    8. '[]

' → logprob: -16.146484375
    9. '[],' → logprob: -16.396484375
    10. ' [' → logprob: -17.146484375

Token 42: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -11.875007629394531
    3. '(' → logprob: -15.750007629394531
    4. 'dist' → logprob: -16.00000762939453
    5. '   ' → logprob: -17.00000762939453
    6. '(dist' → logprob: -18.12500762939453
    7. '```' → logprob: -18.62500762939453
    8. ')' → logprob: -19.12500762939453
    9. '  ' → logprob: -19.50000762939453
    10. ' dist' → logprob: -19.50000762939453

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.570319702499546e-05
    2. ' ,' → logprob: -11.250025749206543
    3. '<|end|>' → logprob: -11.500025749206543
    4. ',
' → logprob: -13.625025749206543
    5. '‌,' → logprob: -14.875025749206543
    6. ',int' → logprob: -16.125024795532227
    7. '1' → logprob: -16.125024795532227
    8. ',user' → logprob: -16.500024795532227
    9. '<|end|>' → logprob: -16.625024795532227
    10. ',node' → logprob: -16.875024795532227

Token 44: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006715370807796717
    2. ' ' → logprob: -5.006715297698975
    3. '```' → logprob: -17.631715774536133
    4. '<|end|>' → logprob: -18.256715774536133
    5. ')' → logprob: -18.569215774536133
    6. '   ' → logprob: -18.569215774536133
    7. '`' → logprob: -18.819215774536133
    8. '  ' → logprob: -19.444215774536133
    9. '۱' → logprob: -19.506715774536133
    10. ',' → logprob: -19.569215774536133

Token 45: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.16038000583648682
    2. ')' → logprob: -1.9103800058364868
    3. '),' → logprob: -9.660380363464355
    4. '))' → logprob: -10.160380363464355
    5. ')])' → logprob: -10.660380363464355
    6. ' )' → logprob: -11.035380363464355
    7. ']' → logprob: -11.660380363464355
    8. ')}' → logprob: -13.660380363464355
    9. ')...' → logprob: -13.785380363464355
    10. ')
' → logprob: -13.910380363464355

Token 46: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1847260296344757
    2. 'while' → logprob: -2.4347259998321533
    3. '   ' → logprob: -2.8097259998321533
    4. ' while' → logprob: -4.309726238250732
    5. '    
' → logprob: -6.059726238250732
    6. '	while' → logprob: -6.559726238250732
    7. ')' → logprob: -6.559726238250732
    8. '```' → logprob: -7.559726238250732
    9. ',' → logprob: -7.684726238250732
    10. '\n' → logprob: -7.809726238250732

Token 47: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.2783394455909729
    2. '   ' → logprob: -2.153339385986328
    3. ' while' → logprob: -2.403339385986328
    4. ')' → logprob: -3.778339385986328
    5. '
' → logprob: -5.278339385986328
    6. '	while' → logprob: -6.028339385986328
    7. '```' → logprob: -6.153339385986328
    8. '    
' → logprob: -6.653339385986328
    9. '\n' → logprob: -6.778339385986328
    10. ',' → logprob: -8.153339385986328

Token 48: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.01638541743159294
    2. 'hq' → logprob: -4.141385555267334
    3. 'h' → logprob: -8.016385078430176
    4. '	h' → logprob: -11.641385078430176
    5. ' ' → logprob: -12.266385078430176
    6. '(h' → logprob: -13.141385078430176
    7. 'len' → logprob: -13.641385078430176
    8. '```' → logprob: -13.766385078430176
    9. '   ' → logprob: -13.891385078430176
    10. ' len' → logprob: -14.516385078430176

Token 49: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -8.180258191714529e-06
    2. 'Q' → logprob: -13.125008583068848
    3. ' ' → logprob: -13.250008583068848
    4. '[' → logprob: -13.375008583068848
    5. 'e' → logprob: -13.750008583068848
    6. '   ' → logprob: -15.125008583068848
    7. '```' → logprob: -15.500008583068848
    8. 'p' → logprob: -16.12500762939453
    9. ' q' → logprob: -16.12500762939453
    10. 'a' → logprob: -16.25000762939453

Token 50: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015859126579016447
    2. '):' → logprob: -6.751585960388184
    3. '[' → logprob: -8.751585960388184
    4. ':**' → logprob: -9.501585960388184
    5. ',' → logprob: -10.126585960388184
    6. '.pop' → logprob: -10.376585960388184
    7. '>:' → logprob: -10.376585960388184
    8. ')' → logprob: -11.001585960388184
    9. ']:' → logprob: -11.251585960388184
    10. ':not' → logprob: -11.751585960388184

Token 51: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04245378077030182
    2. '       ' → logprob: -3.2924537658691406
    3. '   ' → logprob: -6.417453765869141
    4. ' ,' → logprob: -7.042453765869141
    5. ',c' → logprob: -7.667453765869141
    6. ',d' → logprob: -7.917453765869141
    7. ',u' → logprob: -8.79245376586914
    8. ',
' → logprob: -9.04245376586914
    9. '```' → logprob: -9.16745376586914
    10. ')' → logprob: -9.16745376586914

Token 52: ' cd' (ID: 24852)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.31600096821784973
    2. 'd' → logprob: -1.9410009384155273
    3. 'dist' → logprob: -3.0660009384155273
    4. '   ' → logprob: -3.6910009384155273
    5. ' d' → logprob: -4.191000938415527
    6. ' cost' → logprob: -4.316000938415527
    7. 'c' → logprob: -5.191000938415527
    8. ',' → logprob: -5.191000938415527
    9. 'cur' → logprob: -5.691000938415527
    10. '       ' → logprob: -5.691000938415527

Token 53: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005115038249641657
    2. 'ist' → logprob: -5.630115032196045
    3. ' ,' → logprob: -6.630115032196045
    4. ',c' → logprob: -9.880115509033203
    5. 'istance' → logprob: -10.380115509033203
    6. ',\
' → logprob: -11.505115509033203
    7. ',
' → logprob: -11.630115509033203
    8. ',_' → logprob: -11.630115509033203
    9. '=' → logprob: -11.880115509033203
    10. ',current' → logprob: -12.005115509033203

Token 54: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.9124821424484253
    2. ' u' → logprob: -1.1624821424484253
    3. ' node' → logprob: -1.7874821424484253
    4. 'node' → logprob: -2.662482261657715
    5. ' v' → logprob: -4.037482261657715
    6. 'v' → logprob: -4.412482261657715
    7. 'cn' → logprob: -4.912482261657715
    8. 'cv' → logprob: -5.912482261657715
    9. ' cn' → logprob: -6.037482261657715
    10. 'cu' → logprob: -6.787482261657715

Token 55: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.37630894780158997
    2. ' =' → logprob: -1.3763089179992676
    3. ')' → logprob: -2.8763089179992676
    4. ')=' → logprob: -5.376308917999268
    5. ' )' → logprob: -9.376309394836426
    6. ']' → logprob: -11.126309394836426
    7. ',' → logprob: -11.751309394836426
    8. ']=' → logprob: -12.251309394836426
    9. ' =)' → logprob: -12.376309394836426
    10. ' ' → logprob: -12.501309394836426

Token 56: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.030357223004102707
    2. 'heap' → logprob: -3.9053571224212646
    3. ' he' → logprob: -4.655357360839844
    4. 'he' → logprob: -8.405357360839844
    5. '(heap' → logprob: -11.530357360839844
    6. '.heap' → logprob: -12.155357360839844
    7. 'hq' → logprob: -12.280357360839844
    8. ' h' → logprob: -12.405357360839844
    9. '   ' → logprob: -13.030357360839844
    10. ' ' → logprob: -13.155357360839844

Token 57: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.1517960956552997e-05
    2. 'p' → logprob: -12.125011444091797
    3. '[' → logprob: -12.250011444091797
    4. '[q' → logprob: -14.750011444091797
    5. '```' → logprob: -15.500011444091797
    6. ',' → logprob: -16.500011444091797
    7. 'qh' → logprob: -16.625011444091797
    8. ')' → logprob: -16.625011444091797
    9. '   ' → logprob: -16.750011444091797
    10. 'ify' → logprob: -17.375011444091797

Token 58: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.0003063838230445981
    2. '.' → logprob: -8.125306129455566
    3. '.pop' → logprob: -12.750306129455566
    4. '.heap' → logprob: -12.750306129455566
    5. 'he' → logprob: -13.125306129455566
    6. '.h' → logprob: -14.250306129455566
    7. ' he' → logprob: -14.625306129455566
    8. '.q' → logprob: -14.750306129455566
    9. ' .' → logprob: -15.125306129455566
    10. '.p' → logprob: -15.500306129455566

Token 59: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -2.816093228830141e-06
    2. 'pp' → logprob: -13.25000286102295
    3. 'ap' → logprob: -14.00000286102295
    4. 'appen' → logprob: -17.375001907348633
    5. ' app' → logprob: -17.625001907348633
    6. 'a' → logprob: -17.750001907348633
    7. '```' → logprob: -17.875001907348633
    8. 'appe' → logprob: -18.125001907348633
    9. 'appid' → logprob: -18.125001907348633
    10. '[' → logprob: -18.125001907348633

Token 60: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.00792115181684494
    2. 'ush' → logprob: -5.00792121887207
    3. 'q' → logprob: -7.63292121887207
    4. 'app' → logprob: -7.75792121887207
    5. 'p' → logprob: -9.00792121887207
    6. 'pop' → logprob: -9.38292121887207
    7. 'pp' → logprob: -10.38292121887207
    8. 'le' → logprob: -11.25792121887207
    9. 'ap' → logprob: -11.38292121887207
    10. '[' → logprob: -12.00792121887207

Token 61: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.006721178535372019
    2. '(' → logprob: -5.006721019744873
    3. '(q' → logprob: -13.381721496582031
    4. '(heap' → logprob: -13.381721496582031
    5. '(u' → logprob: -14.131721496582031
    6. '(n' → logprob: -14.381721496582031
    7. '(
' → logprob: -15.256721496582031
    8. ')' → logprob: -15.256721496582031
    9. '(ht' → logprob: -15.506721496582031
    10. ' (' → logprob: -15.631721496582031

Token 62: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -4.723352049040841e-06
    2. ')' → logprob: -12.375004768371582
    3. 'Q' → logprob: -15.500004768371582
    4. '])' → logprob: -17.375003814697266
    5. ')
' → logprob: -17.375003814697266
    6. 'qh' → logprob: -17.500003814697266
    7. ')]' → logprob: -17.625003814697266
    8. 'p' → logprob: -17.625003814697266
    9. '))' → logprob: -17.875003814697266
    10. '	q' → logprob: -17.875003814697266

Token 63: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.538490950129926e-05
    2. ')
' → logprob: -10.000055313110352
    3. '       ' → logprob: -11.750055313110352
    4. ' )' → logprob: -13.375055313110352
    5. '   ' → logprob: -15.625055313110352
    6. ')

' → logprob: -16.00005531311035
    7. '))' → logprob: -17.00005531311035
    8. ')`' → logprob: -17.00005531311035
    9. ')
' → logprob: -17.62505531311035
    10. '()' → logprob: -17.87505531311035

Token 64: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19465449452400208
    2. '
' → logprob: -1.8196544647216797
    3. '        
' → logprob: -4.44465446472168
    4. '<|end|>' → logprob: -6.81965446472168
    5. ' 
' → logprob: -7.56965446472168
    6. '\n' → logprob: -8.31965446472168
    7. ')' → logprob: -8.44465446472168
    8. '  
' → logprob: -8.56965446472168
    9. 'if' → logprob: -9.31965446472168
    10. ',' → logprob: -9.44465446472168

Token 65: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9635694026947021
    2. 'if' (adapté à ' if') → logprob: -1.2135694026947021
    3. '
' → logprob: -1.8385694026947021
    4. ' if' → logprob: -2.713569402694702
    5. '<|end|>' → logprob: -3.463569402694702
    6. '        
' → logprob: -3.838569402694702
    7. '\n' → logprob: -4.463569641113281
    8. ' 
' → logprob: -4.588569641113281
    9. '        ' → logprob: -4.838569641113281
    10. '    
' → logprob: -5.963569641113281

Token 66: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.6935959458351135
    2. ' cd' → logprob: -0.6935959458351135
    3. 'cd' → logprob: -8.693595886230469
    4. 'dist' → logprob: -8.818595886230469
    5. '	cd' → logprob: -9.068595886230469
    6. '	dist' → logprob: -11.568595886230469
    7. ' cds' → logprob: -12.693595886230469
    8. '(cd' → logprob: -13.318595886230469
    9. ' ' → logprob: -13.818595886230469
    10. '   ' → logprob: -14.193595886230469

Token 67: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.4855663721391466e-05
    2. '[' → logprob: -11.125015258789062
    3. ' [' → logprob: -17.500015258789062
    4. '<u' → logprob: -17.625015258789062
    5. 'u' → logprob: -17.875015258789062
    6. '```' → logprob: -19.250015258789062
    7. ' u' → logprob: -20.000015258789062
    8. '	u' → logprob: -20.250015258789062
    9. '[user' → logprob: -20.625015258789062
    10. '[int' → logprob: -20.875015258789062

Token 68: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.06629817932844162
    2. ' <' → logprob: -3.066298246383667
    3. '<u' → logprob: -4.191298007965088
    4. ']<' → logprob: -7.316298007965088
    5. ']' → logprob: -8.191298484802246
    6. '<int' → logprob: -8.316298484802246
    7. '<ll' → logprob: -8.441298484802246
    8. ' ' → logprob: -8.941298484802246
    9. '<data' → logprob: -9.191298484802246
    10. '<c' → logprob: -9.191298484802246

Token 69: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.3687138259410858
    2. ' <' → logprob: -1.2437138557434082
    3. '<u' → logprob: -3.993713855743408
    4. '<int' → logprob: -8.24371337890625
    5. '<v' → logprob: -8.49371337890625
    6. ' ' → logprob: -8.86871337890625
    7. '<len' → logprob: -9.24371337890625
    8. '<ll' → logprob: -9.24371337890625
    9. '<data' → logprob: -9.24371337890625
    10. '<n' → logprob: -9.36871337890625

Token 70: ' cd' (ID: 24852)
  Prédit: ' cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cd' → logprob: -0.038102880120277405
    2. 'cd' → logprob: -3.288102865219116
    3. '	cd' → logprob: -9.913103103637695
    4. ' ' → logprob: -11.663103103637695
    5. '_cd' → logprob: -13.413103103637695
    6. '```' → logprob: -14.788103103637695
    7. '(cd' → logprob: -14.913103103637695
    8. ' c' → logprob: -15.038103103637695
    9. ' ' → logprob: -15.288103103637695
    10. 'c' → logprob: -15.413103103637695

Token 71: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011059214593842626
    2. ':
' → logprob: -7.126105785369873
    3. '       ' → logprob: -8.626106262207031
    4. ' continue' → logprob: -9.626106262207031
    5. 'continue' → logprob: -10.251106262207031
    6. '           ' → logprob: -12.376106262207031
    7. '_continue' → logprob: -12.501106262207031
    8. '	continue' → logprob: -12.626106262207031
    9. ':return' → logprob: -12.626106262207031
    10. '   ' → logprob: -13.251106262207031

Token 72: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05352010950446129
    2. ' continue' → logprob: -3.9285202026367188
    3. '       ' → logprob: -4.053520202636719
    4. 'continue' → logprob: -4.303520202636719
    5. ':' → logprob: -7.053520202636719
    6. '
' → logprob: -8.678520202636719
    7. '	continue' → logprob: -8.678520202636719
    8. '   ' → logprob: -9.303520202636719
    9. ':
' → logprob: -9.803520202636719
    10. '               ' → logprob: -9.928520202636719

Token 73: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.11576128005981445
    2. 'continue' (adapté à ' continue') → logprob: -2.3657612800598145
    3. '           ' → logprob: -4.3657612800598145
    4. '       ' → logprob: -6.1157612800598145
    5. '	continue' → logprob: -8.115760803222656
    6. '               ' → logprob: -9.240760803222656
    7. '_continue' → logprob: -9.365760803222656
    8. '   ' → logprob: -11.115760803222656
    9. 'contin' → logprob: -11.615760803222656
    10. 'Continue' → logprob: -12.865760803222656

Token 74: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10146255046129227
    2. '
' → logprob: -2.7264626026153564
    3. '        
' → logprob: -3.6014626026153564
    4. '<|end|>' → logprob: -6.601462364196777
    5. '\n' → logprob: -7.351462364196777
    6. ' 
' → logprob: -7.726462364196777
    7. '  
' → logprob: -7.726462364196777
    8. '' → logprob: -8.601462364196777
    9. '    
' → logprob: -9.101462364196777
    10. '
' → logprob: -9.101462364196777

Token 75: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001532355323433876
    2. '        
' → logprob: -7.001532554626465
    3. '
' → logprob: -7.501532554626465
    4. '<|end|>' → logprob: -10.751532554626465
    5. ' for' → logprob: -11.751532554626465
    6. '' → logprob: -12.126532554626465
    7. '  
' → logprob: -12.501532554626465
    8. '            
' → logprob: -12.626532554626465
    9. '    
' → logprob: -12.876532554626465
    10. ' 
' → logprob: -13.001532554626465

Token 76: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.508346676826477
    2. ' for' → logprob: -1.133346676826477
    3. 'for' (adapté à ' for') → logprob: -2.8833465576171875
    4. '        
' → logprob: -4.3833465576171875
    5. '<|end|>' → logprob: -5.7583465576171875
    6. '
' → logprob: -5.8833465576171875
    7. ' 
' → logprob: -7.2583465576171875
    8. '   ' → logprob: -7.6333465576171875
    9. '	for' → logprob: -8.133346557617188
    10. ' ' → logprob: -9.008346557617188

Token 77: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.01833161525428295
    2. ' v' → logprob: -4.018331527709961
    3. '(v' → logprob: -8.893331527709961
    4. ',v' → logprob: -11.018331527709961
    5. '	v' → logprob: -11.518331527709961
    6. ',' → logprob: -12.518331527709961
    7. '_v' → logprob: -12.768331527709961
    8. 'w' → logprob: -13.018331527709961
    9. '```' → logprob: -13.018331527709961
    10. '   ' → logprob: -13.768331527709961

Token 78: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002469158498570323
    2. ',w' → logprob: -8.62524700164795
    3. ',d' → logprob: -10.25024700164795
    4. ' ,' → logprob: -10.62524700164795
    5. ',c' → logprob: -12.12524700164795
    6. ',v' → logprob: -14.75024700164795
    7. '‌,' → logprob: -15.37524700164795
    8. ',n' → logprob: -15.62524700164795
    9. ',u' → logprob: -15.75024700164795
    10. ',next' → logprob: -16.000246047973633

Token 79: ' d' (ID: 272)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.023286130279302597
    2. ' w' → logprob: -3.7732861042022705
    3. 'cost' → logprob: -11.148285865783691
    4. 'c' → logprob: -11.648285865783691
    5. '   ' → logprob: -11.773285865783691
    6. ' cost' → logprob: -12.898285865783691
    7. 'wv' → logprob: -13.398285865783691
    8. ' ' → logprob: -13.398285865783691
    9. 'd' → logprob: -13.773285865783691
    10. 'weight' → logprob: -13.898285865783691

Token 80: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004279854241758585
    2. 'in' → logprob: -5.504280090332031
    3. 'istance' → logprob: -8.879280090332031
    4. ' ' → logprob: -10.504280090332031
    5. '   ' → logprob: -11.504280090332031
    6. 'ist' → logprob: -12.504280090332031
    7. '  ' → logprob: -13.004280090332031
    8. ',' → logprob: -13.254280090332031
    9. 'e' → logprob: -13.254280090332031
    10. '	in' → logprob: -13.254280090332031

Token 81: ' c' (ID: 274)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.7689409852027893
    2. 'w' → logprob: -1.0189409255981445
    3. ' t' → logprob: -3.3939409255981445
    4. 't' → logprob: -3.5189409255981445
    5. ' in' → logprob: -3.5189409255981445
    6. 'c' → logprob: -4.0189409255981445
    7. ' c' → logprob: -4.5189409255981445
    8. ' ' → logprob: -4.7689409255981445
    9. ' time' → logprob: -5.0189409255981445
    10. ' cost' → logprob: -5.2689409255981445

Token 82: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05673694610595703
    2. 'ost' → logprob: -2.931736946105957
    3. 'in' → logprob: -6.681736946105957
    4. ',' → logprob: -7.931736946105957
    5. 's' → logprob: -10.181736946105957
    6. ')' → logprob: -10.306736946105957
    7. 'ount' → logprob: -10.431736946105957
    8. ' ' → logprob: -10.806736946105957
    9. '   ' → logprob: -11.431736946105957
    10. 'urrent' → logprob: -11.681736946105957

Token 83: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.01258770190179348
    2. 'graph' → logprob: -4.387587547302246
    3. '	graph' → logprob: -9.887587547302246
    4. ' ' → logprob: -11.262587547302246
    5. 'raph' → logprob: -12.137587547302246
    6. '(graph' → logprob: -12.262587547302246
    7. '[' → logprob: -13.512587547302246
    8. '```' → logprob: -13.887587547302246
    9. ')' → logprob: -14.637587547302246
    10. 'Graph' → logprob: -14.887587547302246

Token 84: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -9.13388703338569e-06
    2. '[' → logprob: -12.250009536743164
    3. 'u' → logprob: -12.625009536743164
    4. '[v' → logprob: -15.375009536743164
    5. '[n' → logprob: -16.000009536743164
    6. '(u' → logprob: -16.000009536743164
    7. '```' → logprob: -16.500009536743164
    8. '   ' → logprob: -16.750009536743164
    9. ' ' → logprob: -17.250009536743164
    10. 's' → logprob: -17.250009536743164

Token 85: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0015969875967130065
    2. '):' → logprob: -7.376596927642822
    3. ']' → logprob: -7.751596927642822
    4. ']:
' → logprob: -7.876596927642822
    5. ':' → logprob: -9.62659740447998
    6. '']:' → logprob: -10.75159740447998
    7. ']:
' → logprob: -11.00159740447998
    8. '       ' → logprob: -11.50159740447998
    9. ']):' → logprob: -11.75159740447998
    10. '"]:' → logprob: -11.75159740447998

Token 86: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 87: ' nd' (ID: 5914)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7726660966873169
    2. ' if' → logprob: -1.147666096687317
    3. '           ' → logprob: -2.3976659774780273
    4. '            ' → logprob: -2.8976659774780273
    5. '                ' → logprob: -3.7726659774780273
    6. ' ' → logprob: -4.272665977478027
    7. ' 
' → logprob: -4.522665977478027
    8. 'if' → logprob: -5.022665977478027
    9. '<|end|>' → logprob: -5.272665977478027
    10. ' new' → logprob: -5.647665977478027

Token 88: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18033088743686676
    2. '=' → logprob: -1.8053308725357056
    3. 'ist' → logprob: -8.055331230163574
    4. 'istance' → logprob: -8.305331230163574
    5. ',' → logprob: -11.180331230163574
    6. ' ' → logprob: -13.555331230163574
    7. '>' → logprob: -14.555331230163574
    8. '   ' → logprob: -14.680331230163574
    9. '```' → logprob: -14.805331230163574
    10. ' =
' → logprob: -14.930331230163574

Token 89: ' cd' (ID: 24852)
  Prédit: ' cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cd' → logprob: -0.3870231807231903
    2. 'cd' → logprob: -1.1370232105255127
    3. '	cd' → logprob: -9.387022972106934
    4. ' dist' → logprob: -10.387022972106934
    5. '(cd' → logprob: -11.512022972106934
    6. ' ' → logprob: -11.637022972106934
    7. 'dist' → logprob: -11.762022972106934
    8. 'd' → logprob: -13.137022972106934
    9. '   ' → logprob: -13.137022972106934
    10. ' nd' → logprob: -13.137022972106934

Token 90: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07013282924890518
    2. '+' → logprob: -2.6951327323913574
    3. '+d' → logprob: -8.570133209228516
    4. '+c' → logprob: -12.695133209228516
    5. '+n' → logprob: -14.320133209228516
    6. '+D' → logprob: -14.320133209228516
    7. ' ' → logprob: -14.945133209228516
    8. '+r' → logprob: -14.945133209228516
    9. '<|end|>' → logprob: -14.945133209228516
    10. '＋' → logprob: -15.320133209228516

Token 91: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.14273571968078613
    2. ' d' → logprob: -2.017735719680786
    3. ' ' → logprob: -10.392735481262207
    4. '(d' → logprob: -12.142735481262207
    5. '
' → logprob: -12.705235481262207
    6. ' (' → logprob: -12.892735481262207
    7. '	d' → logprob: -13.080235481262207
    8. '  ' → logprob: -13.267735481262207
    9. '   ' → logprob: -13.267735481262207
    10. '*d' → logprob: -13.455235481262207

Token 92: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 93: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06765933334827423
    2. '<|end|>' → logprob: -2.942659378051758
    3. ' if' → logprob: -5.192659378051758
    4. '            ' → logprob: -6.317659378051758
    5. ' ' → logprob: -6.567659378051758
    6. '<|end|>' → logprob: -6.692659378051758
    7. ',' → logprob: -7.692659378051758
    8. '+' → logprob: -8.067659378051758
    9. '          ' → logprob: -8.067659378051758
    10. '               ' → logprob: -8.317659378051758

Token 94: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.08962705731391907
    2. '           ' → logprob: -3.4646270275115967
    3. ' nc' → logprob: -3.9646270275115967
    4. 'if' (adapté à ' if') → logprob: -4.964627265930176
    5. 'nc' → logprob: -4.964627265930176
    6. ' ' → logprob: -5.714627265930176
    7. ' 
' → logprob: -5.714627265930176
    8. '<|end|>' → logprob: -6.339627265930176
    9. ' nd' → logprob: -6.464627265930176
    10. ' +' → logprob: -6.589627265930176

Token 95: ' nd' (ID: 5914)
  Prédit: ' nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.3236609101295471
    2. ' dist' → logprob: -1.3236608505249023
    3. ' c' → logprob: -5.573660850524902
    4. 'nd' → logprob: -5.948660850524902
    5. ' (' → logprob: -6.198660850524902
    6. 'dist' → logprob: -7.323660850524902
    7. '(nd' → logprob: -7.886160850524902
    8. ' ' → logprob: -9.011160850524902
    9. ' cost' → logprob: -9.323660850524902
    10. 'c' → logprob: -9.511160850524902

Token 96: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.03707600012421608
    2. '<' → logprob: -3.662075996398926
    3. ' <=' → logprob: -4.912075996398926
    4. ' +' → logprob: -7.037075996398926
    5. '[' → logprob: -7.162075996398926
    6. '+' → logprob: -7.287075996398926
    7. ' ' → logprob: -7.787075996398926
    8. '<=' → logprob: -8.037075996398926
    9. ',' → logprob: -9.537075996398926
    10. ' >' → logprob: -10.037075996398926

Token 97: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.054909929633140564
    2. 'dist' → logprob: -2.9299099445343018
    3. '	dist' → logprob: -11.554909706115723
    4. '(dist' → logprob: -11.929909706115723
    5. '=' → logprob: -12.304909706115723
    6. ' ' → logprob: -12.679909706115723
    7. 'Dist' → logprob: -14.179909706115723
    8. '```' → logprob: -14.554909706115723
    9. '0' → logprob: -14.742409706115723
    10. '<|end|>' → logprob: -14.929909706115723

Token 98: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.3856492842023727e-06
    2. 'v' → logprob: -14.375000953674316
    3. '[' → logprob: -14.625000953674316
    4. '[u' → logprob: -16.125001907348633
    5. '```' → logprob: -17.125001907348633
    6. '	v' → logprob: -18.250001907348633
    7. '<v' → logprob: -18.500001907348633
    8. ')v' → logprob: -19.125001907348633
    9. '][' → logprob: -19.875001907348633
    10. '[V' → logprob: -20.125001907348633

Token 99: ']:
' (ID: 22152)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.11759007722139359
    2. ':' → logprob: -2.7425901889801025
    3. '):' → logprob: -3.4925901889801025
    4. ' or' → logprob: -4.742589950561523
    5. ']:' → logprob: -5.742589950561523
    6. 'and' → logprob: -5.992589950561523
    7. ')' → logprob: -7.617589950561523
    8. '):
' → logprob: -8.117589950561523
    9. ']' → logprob: -8.617589950561523
    10. '               ' → logprob: -9.242589950561523

Token 100: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008984320797026157
    2. ':' → logprob: -4.883984088897705
    3. '<|end|>' → logprob: -7.633984088897705
    4. '           ' → logprob: -7.758984088897705
    5. ',' → logprob: -9.633984565734863
    6. '              ' → logprob: -10.008984565734863
    7. '       ' → logprob: -10.008984565734863
    8. ':
' → logprob: -10.008984565734863
    9. '<|end|>' → logprob: -10.258984565734863
    10. '                ' → logprob: -10.383984565734863

Token 101: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.10952616482973099
    2. 'dist' (adapté à ' dist') → logprob: -2.8595261573791504
    3. '               ' → logprob: -3.2345261573791504
    4. '                   ' → logprob: -5.10952615737915
    5. '                ' → logprob: -7.23452615737915
    6. '```' → logprob: -8.859526634216309
    7. '	dist' → logprob: -10.359526634216309
    8. '_dist' → logprob: -10.609526634216309
    9. '           ' → logprob: -11.109526634216309
    10. '                       ' → logprob: -11.359526634216309

Token 102: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -6.749814019713085e-06
    2. '[' → logprob: -12.000006675720215
    3. 'v' → logprob: -14.625006675720215
    4. '[u' → logprob: -17.25000762939453
    5. '```' → logprob: -17.25000762939453
    6. '[val' → logprob: -17.75000762939453
    7. '	v' → logprob: -17.87500762939453
    8. '<v' → logprob: -18.37500762939453
    9. '[var' → logprob: -18.87500762939453
    10. '=v' → logprob: -19.12500762939453

Token 103: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0093534542247653
    2. ' =' → logprob: -5.1343536376953125
    3. ')' → logprob: -6.6343536376953125
    4. ' ]' → logprob: -6.6343536376953125
    5. '=' → logprob: -7.7593536376953125
    6. ']=' → logprob: -8.009353637695312
    7. '[' → logprob: -10.884353637695312
    8. ' )' → logprob: -12.384353637695312
    9. ',' → logprob: -13.384353637695312
    10. ')]' → logprob: -13.509353637695312

Token 104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04858816787600517
    2. '=' → logprob: -3.048588275909424
    3. ',' → logprob: -15.548587799072266
    4. ']' → logprob: -15.798587799072266
    5. '[' → logprob: -16.048587799072266
    6. '=v' → logprob: -16.173587799072266
    7. ')' → logprob: -16.298587799072266
    8. '＝' → logprob: -16.923587799072266
    9. ' ' → logprob: -17.048587799072266
    10. ' =
' → logprob: -17.173587799072266

Token 105: ' nd' (ID: 5914)
  Prédit: ' nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.014166918583214283
    2. 'nd' → logprob: -4.264166831970215
    3. '(nd' → logprob: -12.889166831970215
    4. '_nd' → logprob: -14.389166831970215
    5. ' nde' → logprob: -16.13916778564453
    6. '.nd' → logprob: -16.63916778564453
    7. ' ' → logprob: -17.38916778564453
    8. ' ndo' → logprob: -17.51416778564453
    9. '
' → logprob: -18.26416778564453
    10. ' ndi' → logprob: -18.51416778564453

Token 106: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.016098186373710632
    2. '<|end|>' → logprob: -4.2660980224609375
    3. '                
' → logprob: -7.0160980224609375
    4. '
' → logprob: -8.016098022460938
    5. ',' → logprob: -8.641098022460938
    6. '                ' → logprob: -9.141098022460938
    7. '<|end|>' → logprob: -9.391098022460938
    8. '           ' → logprob: -10.141098022460938
    9. '			' → logprob: -10.141098022460938
    10. '              ' → logprob: -10.141098022460938

Token 107: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002087450586259365
    2. '<|end|>' → logprob: -6.377087593078613
    3. 'heap' → logprob: -9.377087593078613
    4. ' heap' → logprob: -9.627087593078613
    5. '			' → logprob: -9.627087593078613
    6. '                
' → logprob: -10.127087593078613
    7. ',' → logprob: -10.502087593078613
    8. '(heap' → logprob: -11.002087593078613
    9. '<|end|>' → logprob: -11.377087593078613
    10. '```' → logprob: -11.627087593078613

Token 108: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.0007123126997612417
    2. ' heap' → logprob: -7.2507123947143555
    3. '               ' → logprob: -13.000712394714355
    4. 'he' → logprob: -16.12571144104004
    5. '(heap' → logprob: -17.75071144104004
    6. '           ' → logprob: -18.25071144104004
    7. 'heat' → logprob: -18.50071144104004
    8. '.heap' → logprob: -19.25071144104004
    9. '_heap' → logprob: -19.87571144104004
    10. '```' → logprob: -20.25071144104004

Token 109: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.7697225252486533e-06
    2. 'p' → logprob: -13.250003814697266
    3. '.he' → logprob: -14.625003814697266
    4. 'he' → logprob: -14.750003814697266
    5. 'push' → logprob: -14.750003814697266
    6. 'app' → logprob: -16.125003814697266
    7. 'h' → logprob: -16.375003814697266
    8. '.push' → logprob: -16.500003814697266
    9. '```' → logprob: -16.875003814697266
    10. 'qp' → logprob: -17.250003814697266

Token 110: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -7.107425062713446e-06
    2. '.heap' → logprob: -12.625006675720215
    3. 'he' → logprob: -13.500006675720215
    4. 'q' → logprob: -13.875006675720215
    5. '.push' → logprob: -14.250006675720215
    6. '.' → logprob: -15.125006675720215
    7. ' he' → logprob: -15.250006675720215
    8. '.h' → logprob: -16.37500762939453
    9. '```' → logprob: -17.25000762939453
    10. ' .' → logprob: -17.25000762939453

Token 111: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -3.6550729419104755e-05
    2. 'pp' → logprob: -10.375036239624023
    3. 'ap' → logprob: -12.625036239624023
    4. 'q' → logprob: -14.000036239624023
    5. 'p' → logprob: -14.250036239624023
    6. ' app' → logprob: -15.750036239624023
    7. 'appen' → logprob: -16.125036239624023
    8. 'push' → logprob: -16.500036239624023
    9. 'a' → logprob: -17.125036239624023
    10. '[' → logprob: -17.375036239624023

Token 112: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -4.008129963040119e-06
    2. 'push' → logprob: -12.750003814697266
    3. 'q' → logprob: -14.500003814697266
    4. 'op' → logprob: -15.750003814697266
    5. 'sh' → logprob: -16.375003814697266
    6. '   ' → logprob: -16.625003814697266
    7. 'p' → logprob: -16.625003814697266
    8. '[' → logprob: -17.125003814697266
    9. '```' → logprob: -17.375003814697266
    10. 'u' → logprob: -17.625003814697266

Token 113: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.2664456789934775e-06
    2. '(' → logprob: -13.750000953674316
    3. '(q' → logprob: -16.625001907348633
    4. ' (' → logprob: -17.375001907348633
    5. '(heap' → logprob: -18.125001907348633
    6. '(n' → logprob: -18.625001907348633
    7. ',h' → logprob: -19.125001907348633
    8. '(u' → logprob: -19.375001907348633
    9. 'h' → logprob: -19.375001907348633
    10. '```' → logprob: -19.750001907348633

Token 114: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.8624639324116288e-06
    2. '(q' → logprob: -15.125001907348633
    3. '(h' → logprob: -15.500001907348633
    4. '```' → logprob: -15.625001907348633
    5. 'c' → logprob: -15.875001907348633
    6. '[' → logprob: -15.875001907348633
    7. 'Q' → logprob: -16.125001907348633
    8. 'v' → logprob: -16.375001907348633
    9. '[q' → logprob: -16.750001907348633
    10. '	q' → logprob: -16.875001907348633

Token 115: ',' (ID: 11)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.007097415626049042
    2. ',' → logprob: -5.632097244262695
    3. '((' → logprob: -6.257097244262695
    4. ' (' → logprob: -6.882097244262695
    5. '(' → logprob: -8.007097244262695
    6. ',(' → logprob: -9.507097244262695
    7. ')' → logprob: -10.007097244262695
    8. '(heap' → logprob: -10.007097244262695
    9. '(q' → logprob: -11.132097244262695
    10. ' ' → logprob: -11.507097244262695

Token 116: ' (' (ID: 350)
  Prédit: '(nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nd' → logprob: -0.49356475472450256
    2. ' (' → logprob: -0.9935647249221802
    3. '(' → logprob: -3.9935648441314697
    4. '(n' → logprob: -7.118564605712891
    5. '(nn' → logprob: -10.86856460571289
    6. '(nt' → logprob: -11.61856460571289
    7. '   ' → logprob: -12.11856460571289
    8. ' ' → logprob: -12.61856460571289
    9. '  ' → logprob: -12.74356460571289
    10. '(cd' → logprob: -12.99356460571289

Token 117: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.005970153957605362
    2. ' nd' → logprob: -5.130970001220703
    3. '(nd' → logprob: -10.130970001220703
    4. '_nd' → logprob: -14.005970001220703
    5. ' ' → logprob: -15.630970001220703
    6. 'ndl' → logprob: -16.130970001220703
    7. 'nt' → logprob: -16.380970001220703
    8. '  ' → logprob: -16.505970001220703
    9. ')' → logprob: -16.505970001220703
    10. '   ' → logprob: -16.755970001220703

Token 118: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003476209531072527
    2. ',v' → logprob: -8.000348091125488
    3. ' ,' → logprob: -11.375348091125488
    4. ',u' → logprob: -14.625348091125488
    5. 'v' → logprob: -16.250347137451172
    6. ')' → logprob: -16.375347137451172
    7. ',
' → logprob: -17.625347137451172
    8. '‌,' → logprob: -17.750347137451172
    9. ',user' → logprob: -18.000347137451172
    10. ',n' → logprob: -18.250347137451172

Token 119: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.03827729821205139
    2. ')' → logprob: -3.2882773876190186
    3. '))
' → logprob: -8.413277626037598
    4. ' ))' → logprob: -12.038277626037598
    5. ')))' → logprob: -12.538277626037598
    6. ')
' → logprob: -13.163277626037598
    7. ' )' → logprob: -14.288277626037598
    8. '))

' → logprob: -14.663277626037598
    9. '))
' → logprob: -15.288277626037598
    10. '               ' → logprob: -15.413277626037598

Token 120: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 121: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.294891595840454
    2. '<|end|>' → logprob: -1.294891595840454
    3. ' return' → logprob: -1.419891595840454
    4. 'return' (adapté à ' return') → logprob: -2.294891595840454
    5. '
' → logprob: -2.919891595840454
    6. ' ' → logprob: -4.294891357421875
    7. '	return' → logprob: -4.794891357421875
    8. '    
' → logprob: -5.294891357421875
    9. ' 
' → logprob: -5.294891357421875
    10. '    ' → logprob: -5.294891357421875

Token 122: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00671809446066618
    2. ' dist' → logprob: -5.006718158721924
    3. '(dist' → logprob: -12.881717681884766
    4. '	dist' → logprob: -16.506717681884766
    5. '[' → logprob: -17.131717681884766
    6. '_dist' → logprob: -18.006717681884766
    7. '   ' → logprob: -18.381717681884766
    8. 'Dist' → logprob: -19.256717681884766
    9. '.dist' → logprob: -20.131717681884766
    10. ' ' → logprob: -20.256717681884766

Token 123: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 124: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7039490938186646
    2. '<|end|>' → logprob: -1.7039490938186646
    3. '_' → logprob: -1.8289490938186646
    4. '
' → logprob: -3.078948974609375
    5. '[' → logprob: -3.453948974609375
    6. ',' → logprob: -3.828948974609375
    7. ' def' → logprob: -4.328948974609375
    8. ')' → logprob: -5.078948974609375
    9. '#' → logprob: -5.078948974609375
    10. '   ' → logprob: -5.203948974609375

Token 125: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.04085329547524452
    2. ' solve' → logprob: -3.790853261947632
    3. 'main' → logprob: -5.540853500366211
    4. ' bell' → logprob: -5.790853500366211
    5. ' max' → logprob: -6.415853500366211
    6. ' find' → logprob: -6.790853500366211
    7. ' dfs' → logprob: -7.040853500366211
    8. ' shortest' → logprob: -7.040853500366211
    9. ' ' → logprob: -7.415853500366211
    10. ' prim' → logprob: -7.540853500366211

Token 126: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00010139751975657418
    2. '(' → logprob: -9.375101089477539
    3. ' ():' → logprob: -11.625101089477539
    4. '()' → logprob: -12.125101089477539
    5. '():
' → logprob: -13.625101089477539
    6. ':' → logprob: -15.125101089477539
    7. '(n' → logprob: -15.375101089477539
    8. '(":' → logprob: -15.750101089477539
    9. '()>' → logprob: -16.12510108947754
    10. '(:' → logprob: -17.00010108947754

Token 127: '   ' (ID: 271)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4330125153064728
    2. '   ' → logprob: -1.6830124855041504
    3. 'n' → logprob: -1.8080124855041504
    4. '```' → logprob: -7.93301248550415
    5. 'import' → logprob: -8.308012962341309
    6. ' import' → logprob: -8.683012962341309
    7. '	n' → logprob: -8.683012962341309
    8. ' input' → logprob: -9.183012962341309
    9. '<|end|>' → logprob: -9.183012962341309
    10. ' sys' → logprob: -9.433012962341309

Token 128: ' input' (ID: 3422)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.14620304107666016
    2. ' n' → logprob: -2.14620304107666
    3. ' input' → logprob: -4.52120304107666
    4. 'input' (adapté à ' input') → logprob: -4.89620304107666
    5. '   ' → logprob: -7.89620304107666
    6. 'import' → logprob: -8.14620304107666
    7. ' import' → logprob: -9.64620304107666
    8. 'N' → logprob: -12.39620304107666
    9. '	n' → logprob: -13.39620304107666
    10. '```' → logprob: -13.77120304107666

Token 129: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.17943881452083588
    2. ' =' → logprob: -2.804438829421997
    3. '=' → logprob: -3.054438829421997
    4. '_data' → logprob: -3.054438829421997
    5. '_line' → logprob: -5.179438591003418
    6. '_lines' → logprob: -7.054438591003418
    7. '_' → logprob: -7.054438591003418
    8. 'data' → logprob: -7.679438591003418
    9. '=sys' → logprob: -7.679438591003418
    10. '().' → logprob: -7.804438591003418

Token 130: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.00671584764495492
    2. 'sys' → logprob: -5.006715774536133
    3. '	sys' → logprob: -15.381715774536133
    4. '=sys' → logprob: -15.631715774536133
    5. '(sys' → logprob: -16.881715774536133
    6. ' lambda' → logprob: -18.381715774536133
    7. 'lambda' → logprob: -20.881715774536133
    8. 'input' → logprob: -21.506715774536133
    9. '/sys' → logprob: -21.756715774536133
    10. '_sys' → logprob: -22.006715774536133

Token 131: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00026884564431384206
    2. '.' → logprob: -8.375268936157227
    3. '.stdout' → logprob: -11.000268936157227
    4. '.readline' → logprob: -11.250268936157227
    5. '.argv' → logprob: -12.125268936157227
    6. '.std' → logprob: -13.250268936157227
    7. 'stdin' → logprob: -14.375268936157227
    8. '.input' → logprob: -15.500268936157227
    9. '.setdefault' → logprob: -15.500268936157227
    10. '.exit' → logprob: -16.500268936157227

Token 132: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -8.029847231227905e-05
    2. '.read' → logprob: -9.500080108642578
    3. 'read' → logprob: -12.875080108642578
    4. '.readlines' → logprob: -13.375080108642578
    5. '.' → logprob: -14.500080108642578
    6. '.buffer' → logprob: -14.625080108642578
    7. ' readline' → logprob: -15.625080108642578
    8. 'buffer' → logprob: -16.875080108642578
    9. 'reader' → logprob: -17.875080108642578
    10. '.stdin' → logprob: -17.875080108642578

Token 133: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021168837323784828
    2. '(n' → logprob: -4.0211687088012695
    3. '()' → logprob: -6.3961687088012695
    4. 'n' → logprob: -7.6461687088012695
    5. '
' → logprob: -8.14616870880127
    6. '    
' → logprob: -8.64616870880127
    7. ' n' → logprob: -9.02116870880127
    8. '(' → logprob: -9.39616870880127
    9. '()
' → logprob: -9.64616870880127
    10. '().' → logprob: -10.27116870880127

Token 134: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1726326197385788
    2. 'n' → logprob: -1.9226325750350952
    3. ' n' → logprob: -4.422632694244385
    4. '	n' → logprob: -8.672632217407227
    5. '    
' → logprob: -9.422632217407227
    6. '
' → logprob: -10.672632217407227
    7. 'N' → logprob: -11.672632217407227
    8. 't' → logprob: -12.047632217407227
    9. ' N' → logprob: -12.047632217407227
    10. '    ' → logprob: -12.297632217407227

Token 135: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0005485066794790328
    2. '   ' → logprob: -8.250548362731934
    3. 'N' → logprob: -9.000548362731934
    4. ' n' → logprob: -9.125548362731934
    5. 't' → logprob: -10.125548362731934
    6. 'T' → logprob: -11.625548362731934
    7. '    
' → logprob: -12.875548362731934
    8. '```' → logprob: -13.375548362731934
    9. '	n' → logprob: -14.250548362731934
    10. '
' → logprob: -15.250548362731934

Token 136: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.018481066450476646
    2. 'True' → logprob: -4.018481254577637
    3. '(True' → logprob: -8.018481254577637
    4. '=True' → logprob: -13.768481254577637
    5. '1' → logprob: -14.643481254577637
    6. ' Tru' → logprob: -15.643481254577637
    7. ' ' → logprob: -16.14348030090332
    8. '_true' → logprob: -17.39348030090332
    9. '_TRUE' → logprob: -18.01848030090332
    10. '(' → logprob: -18.14348030090332

Token 137: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001027927384711802
    2. ':
' → logprob: -7.626028060913086
    3. '():' → logprob: -8.001028060913086
    4. ',' → logprob: -8.876028060913086
    5. '   ' → logprob: -11.001028060913086
    6. ' :' → logprob: -11.251028060913086
    7. '       ' → logprob: -11.251028060913086
    8. '):' → logprob: -11.376028060913086
    9. '():
' → logprob: -12.876028060913086
    10. ':**' → logprob: -12.876028060913086

Token 138: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11336196213960648
    2. '       ' → logprob: -2.4883620738983154
    3. ' line' → logprob: -3.8633620738983154
    4. 'line' → logprob: -6.488361835479736
    5. ' n' → logprob: -7.363361835479736
    6. 'n' → logprob: -7.613361835479736
    7. ' try' → logprob: -8.113362312316895
    8. 'try' → logprob: -9.363362312316895
    9. '    ' → logprob: -10.613362312316895
    10. '   ' → logprob: -10.863362312316895

Token 139: ' line' (ID: 2543)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4766034781932831
    2. ' line' → logprob: -1.7266035079956055
    3. ' n' → logprob: -1.8516035079956055
    4. 'line' (adapté à ' line') → logprob: -3.4766035079956055
    5. 'N' → logprob: -5.2266035079956055
    6. '   ' → logprob: -5.4766035079956055
    7. 'l' → logprob: -6.4766035079956055
    8. ' N' → logprob: -7.4766035079956055
    9. 'x' → logprob: -7.7266035079956055
    10. ' l' → logprob: -8.226603507995605

Token 140: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687485456466675
    2. ' =' → logprob: -1.1368749141693115
    3. '=line' → logprob: -12.63687515258789
    4. 's' → logprob: -14.51187515258789
    5. '＝' → logprob: -16.88687515258789
    6. ' ' → logprob: -17.13687515258789
    7. '.' → logprob: -18.01187515258789
    8. '.=' → logprob: -18.51187515258789
    9. ' =)' → logprob: -18.76187515258789
    10. '=input' → logprob: -18.88687515258789

Token 141: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20148654282093048
    2. ' input' → logprob: -1.701486587524414
    3. 'sys' → logprob: -9.951486587524414
    4. ' sys' → logprob: -10.576486587524414
    5. ' ' → logprob: -17.826486587524414
    6. '=input' → logprob: -17.951486587524414
    7. '(input' → logprob: -18.076486587524414
    8. '	input' → logprob: -18.826486587524414
    9. '<input' → logprob: -19.326486587524414
    10. 'Input' → logprob: -20.076486587524414

Token 142: '()
' (ID: 1234)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.4741807281970978
    2. '()' → logprob: -0.9741806983947754
    3. '()
' → logprob: -9.224181175231934
    4. '(' → logprob: -13.724181175231934
    5. '();' → logprob: -13.724181175231934
    6. '()

' → logprob: -13.974181175231934
    7. '()
' → logprob: -13.974181175231934
    8. ' ().' → logprob: -15.349181175231934
    9. '())' → logprob: -15.474181175231934
    10. '.strip' → logprob: -15.474181175231934

Token 143: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010981675237417221
    2. '.strip' → logprob: -4.760981559753418
    3. ' if' → logprob: -6.510981559753418
    4. '.rstrip' → logprob: -8.010981559753418
    5. '   ' → logprob: -8.385981559753418
    6. '
' → logprob: -9.260981559753418
    7. '<|end|>' → logprob: -9.760981559753418
    8. '        
' → logprob: -10.385981559753418
    9. 'if' → logprob: -10.510981559753418
    10. ',' → logprob: -10.510981559753418

Token 144: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3868902027606964
    2. 'if' (adapté à ' if') → logprob: -1.136890172958374
    3. '       ' → logprob: -11.386890411376953
    4. '   ' → logprob: -12.386890411376953
    5. '	if' → logprob: -12.886890411376953
    6. '    ' → logprob: -15.011890411376953
    7. ';if' → logprob: -15.511890411376953
    8. 'If' → logprob: -15.886890411376953
    9. ' ' → logprob: -16.011890411376953
    10. 'break' → logprob: -16.636890411376953

Token 145: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.002432855311781168
    2. 'not' → logprob: -6.252432823181152
    3. ' line' → logprob: -7.627432823181152
    4. 'line' → logprob: -11.002432823181152
    5. ' ' → logprob: -14.752432823181152
    6. '#line' → logprob: -16.00243377685547
    7. '!' → logprob: -17.25243377685547
    8. '=line' → logprob: -17.87743377685547
    9. '	not' → logprob: -18.12743377685547
    10. '[line' → logprob: -18.12743377685547

Token 146: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.01814994215965271
    2. 'line' → logprob: -4.0181498527526855
    3. '	line' → logprob: -16.643150329589844
    4. '(line' → logprob: -17.643150329589844
    5. '#line' → logprob: -18.268150329589844
    6. '[line' → logprob: -19.268150329589844
    7. '=line' → logprob: -19.518150329589844
    8. ' ' → logprob: -20.268150329589844
    9. ' ' → logprob: -21.518150329589844
    10. ' linha' → logprob: -22.393150329589844

Token 147: ':
' (ID: 734)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.26805439591407776
    2. ':' → logprob: -1.5180543661117554
    3. ':
' → logprob: -4.893054485321045
    4. '.' → logprob: -5.018054485321045
    5. '.rstrip' → logprob: -6.518054485321045
    6. '.startswith' → logprob: -9.393054008483887
    7. ' or' → logprob: -9.518054008483887
    8. ':return' → logprob: -9.893054008483887
    9. 'strip' → logprob: -10.143054008483887
    10. '.readline' → logprob: -10.143054008483887

Token 148: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000754001026507467
    2. '       ' → logprob: -7.250753879547119
    3. '   ' → logprob: -11.000754356384277
    4. ':' → logprob: -12.125754356384277
    5. ' break' → logprob: -12.250754356384277
    6. ',' → logprob: -12.500754356384277
    7. '          ' → logprob: -12.875754356384277
    8. '               ' → logprob: -12.875754356384277
    9. '		' → logprob: -13.500754356384277
    10. 'break' → logprob: -14.125754356384277

Token 149: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.577257513999939
    2. ' break' → logprob: -0.827257513999939
    3. '           ' → logprob: -7.4522576332092285
    4. 'return' → logprob: -7.4522576332092285
    5. '       ' → logprob: -9.45225715637207
    6. '	break' → logprob: -10.32725715637207
    7. ' return' → logprob: -10.70225715637207
    8. '               ' → logprob: -11.32725715637207
    9. '   ' → logprob: -12.20225715637207
    10. '
' → logprob: -12.70225715637207

Token 150: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00284029939211905
    2. '        
' → logprob: -6.502840518951416
    3. ',' → logprob: -7.627840518951416
    4. '<|end|>' → logprob: -8.252840042114258
    5. 'n' → logprob: -8.377840042114258
    6. ' n' → logprob: -8.377840042114258
    7. '   ' → logprob: -10.377840042114258
    8. ',n' → logprob: -10.627840042114258
    9. '      ' → logprob: -11.502840042114258
    10. '  
' → logprob: -11.752840042114258

Token 151: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004864292219281197
    2. '        
' → logprob: -5.50486421585083
    3. ',' → logprob: -8.254864692687988
    4. ' n' → logprob: -8.629864692687988
    5. '<|end|>' → logprob: -8.879864692687988
    6. 'n' → logprob: -9.129864692687988
    7. '
' → logprob: -10.879864692687988
    8. '   ' → logprob: -11.004864692687988
    9. '      ' → logprob: -11.629864692687988
    10. '  
' → logprob: -11.629864692687988

Token 152: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.13565693795681
    2. 'N' (adapté à ' N') → logprob: -2.8856568336486816
    3. ' n' → logprob: -2.8856568336486816
    4. 'm' → logprob: -4.885656833648682
    5. '   ' → logprob: -5.885656833648682
    6. ' N' → logprob: -6.010656833648682
    7. 'k' → logprob: -7.010656833648682
    8. ' m' → logprob: -8.13565731048584
    9. 'a' → logprob: -8.26065731048584
    10. 'x' → logprob: -8.51065731048584

Token 153: ',M' (ID: 54127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028847604990005493
    2. ',M' → logprob: -6.002884864807129
    3. ',C' → logprob: -8.502884864807129
    4. ',Q' → logprob: -9.627884864807129
    5. ',K' → logprob: -9.752884864807129
    6. ' ,' → logprob: -10.627884864807129
    7. ',c' → logprob: -11.627884864807129
    8. ',T' → logprob: -11.752884864807129
    9. ',P' → logprob: -12.002884864807129
    10. '=' → logprob: -12.252884864807129

Token 154: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3895648121833801
    2. ' =' → logprob: -1.1395647525787354
    3. ',' → logprob: -6.0145649909973145
    4. '=line' → logprob: -8.389564514160156
    5. '=int' → logprob: -12.639564514160156
    6. ',line' → logprob: -12.764564514160156
    7. '=input' → logprob: -13.014564514160156
    8. ',N' → logprob: -13.139564514160156
    9. ' ,' → logprob: -13.139564514160156
    10. ',n' → logprob: -13.889564514160156

Token 155: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.018152397125959396
    2. 'map' → logprob: -4.018152236938477
    3. ' line' → logprob: -13.143152236938477
    4. '	map' → logprob: -15.518152236938477
    5. 'line' → logprob: -15.768152236938477
    6. ' ' → logprob: -16.018152236938477
    7. '(map' → logprob: -17.268152236938477
    8. ' list' → logprob: -17.768152236938477
    9. '.map' → logprob: -18.768152236938477
    10. 'list' → logprob: -19.018152236938477

Token 156: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.07101608067750931
    2. '(str' → logprob: -2.9460160732269287
    3. '(' → logprob: -4.196016311645508
    4. '(lambda' → logprob: -7.071016311645508
    5. 'int' → logprob: -10.571016311645508
    6. 'str' → logprob: -11.071016311645508
    7. '(eval' → logprob: -11.321016311645508
    8. '(tuple' → logprob: -11.321016311645508
    9. '(line' → logprob: -11.571016311645508
    10. '[int' → logprob: -12.446016311645508

Token 157: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.00905260443687439
    2. ',line' → logprob: -5.384052753448486
    3. '(' → logprob: -5.634052753448486
    4. ',' → logprob: -7.509052753448486
    5. ' (' → logprob: -9.509052276611328
    6. ')' → logprob: -9.509052276611328
    7. '#line' → logprob: -9.884052276611328
    8. '=line' → logprob: -10.384052276611328
    9. 'line' → logprob: -11.134052276611328
    10. ')(' → logprob: -11.134052276611328

Token 158: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.008622374385595322
    2. ' line' → logprob: -4.758622169494629
    3. 'str' → logprob: -12.508622169494629
    4. ')' → logprob: -13.383622169494629
    5. '   ' → logprob: -14.258622169494629
    6. '(line' → logprob: -14.383622169494629
    7. 'input' → logprob: -15.008622169494629
    8. '=line' → logprob: -15.133622169494629
    9. '	line' → logprob: -15.133622169494629
    10. '[line' → logprob: -15.258622169494629

Token 159: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00043555660522542894
    2. '.strip' → logprob: -8.500435829162598
    3. '.split' → logprob: -9.125435829162598
    4. '()' → logprob: -9.125435829162598
    5. 'split' → logprob: -11.625435829162598
    6. 'strip' → logprob: -13.375435829162598
    7. '.' → logprob: -13.375435829162598
    8. ' ().' → logprob: -14.375435829162598
    9. ')' → logprob: -14.875435829162598
    10. '.readline' → logprob: -15.125435829162598

Token 160: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4506661295890808
    2. ')' → logprob: -1.5756661891937256
    3. '('' → logprob: -2.3256661891937256
    4. '()' → logprob: -3.0756661891937256
    5. '(' → logprob: -4.5756659507751465
    6. '(','' → logprob: -6.9506659507751465
    7. '())
' → logprob: -8.075666427612305
    8. '')' → logprob: -8.825666427612305
    9. '(',' → logprob: -8.950666427612305
    10. '("' → logprob: -9.450666427612305

Token 161: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32039526104927063
    2. 'graph' → logprob: -1.9453952312469482
    3. ' graph' → logprob: -2.3203952312469482
    4. '	graph' → logprob: -4.320395469665527
    5. ' if' → logprob: -5.195395469665527
    6. '        
' → logprob: -5.320395469665527
    7. '<|end|>' → logprob: -5.445395469665527
    8. '
' → logprob: -6.195395469665527
    9. 'if' → logprob: -7.070395469665527
    10. '   ' → logprob: -7.320395469665527

Token 162: ' if' (ID: 538)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.44492608308792114
    2. ' graph' → logprob: -1.0699260234832764
    3. ' if' → logprob: -5.0699262619018555
    4. 'if' (adapté à ' if') → logprob: -5.1949262619018555
    5. '       ' → logprob: -5.5699262619018555
    6. '	graph' → logprob: -8.444926261901855
    7. '        
' → logprob: -9.944926261901855
    8. '   ' → logprob: -10.194926261901855
    9. '
' → logprob: -11.007426261901855
    10. ' edges' → logprob: -11.132426261901855

Token 163: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.008615399710834026
    2. 'N' → logprob: -4.758615493774414
    3. ' ' → logprob: -14.758615493774414
    4. ' ' → logprob: -14.758615493774414
    5. ' not' → logprob: -17.008615493774414
    6. ' (' → logprob: -18.758615493774414
    7. '	N' → logprob: -19.133615493774414
    8. '(' → logprob: -19.758615493774414
    9. '<N' → logprob: -19.758615493774414
    10. '(N' → logprob: -20.133615493774414

Token 164: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2812633812427521
    2. '==' → logprob: -1.4062633514404297
    3. ' ' → logprob: -9.78126335144043
    4. '=' → logprob: -10.40626335144043
    5. ')==' → logprob: -11.53126335144043
    6. ']==' → logprob: -13.03126335144043
    7. '()==' → logprob: -13.15626335144043
    8. '[' → logprob: -13.28126335144043
    9. ' <=' → logprob: -13.28126335144043
    10. '<=' → logprob: -13.28126335144043

Token 165: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029637437546625733
    2. ' ' → logprob: -8.125296592712402
    3. 'M' → logprob: -15.375296592712402
    4. ' M' → logprob: -16.875295639038086
    5. '۰' → logprob: -18.125295639038086
    6. '```' → logprob: -18.625295639038086
    7. '０' → logprob: -19.125295639038086
    8. '=' → logprob: -19.250295639038086
    9. 'and' → logprob: -20.250295639038086
    10. 'N' → logprob: -20.312795639038086

Token 166: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.16022706031799316
    2. ' and' → logprob: -1.9102270603179932
    3. ' ' → logprob: -13.035226821899414
    4. '	and' → logprob: -14.535226821899414
    5. ':' → logprob: -16.410226821899414
    6. '   ' → logprob: -17.035226821899414
    7. '0' → logprob: -17.285226821899414
    8. '  ' → logprob: -17.535226821899414
    9. ' и' → logprob: -17.660226821899414
    10. '```' → logprob: -18.285226821899414

Token 167: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.5759403705596924
    2. ' M' → logprob: -0.8259403705596924
    3. ' ' → logprob: -14.700940132141113
    4. '   ' → logprob: -15.200940132141113
    5. '  ' → logprob: -15.575940132141113
    6. '	M' → logprob: -16.32594108581543
    7. ' ' → logprob: -17.07594108581543
    8. '    ' → logprob: -18.45094108581543
    9. ',M' → logprob: -19.45094108581543
    10. '<M' → logprob: -19.82594108581543

Token 168: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0024964679032564163
    2. ' ==' → logprob: -6.252496242523193
    3. '0' → logprob: -7.752496242523193
    4. '=' → logprob: -9.002496719360352
    5. ')==' → logprob: -12.127496719360352
    6. ']==' → logprob: -12.877496719360352
    7. '()==' → logprob: -13.252496719360352
    8. '<|end|>' → logprob: -13.377496719360352
    9. '```' → logprob: -13.877496719360352
    10. '==
' → logprob: -14.252496719360352

Token 169: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010914575977949426
    2. ' ' → logprob: -9.12510871887207
    3. '<|end|>' → logprob: -16.87510871887207
    4. '۰' → logprob: -17.87510871887207
    5. '```' → logprob: -19.31260871887207
    6. '  ' → logprob: -19.43760871887207
    7. '০' → logprob: -19.81260871887207
    8. '=' → logprob: -19.87510871887207
    9. '<|end|>' → logprob: -20.00010871887207
    10. '０' → logprob: -20.06260871887207

Token 170: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25791430473327637
    2. ':
' → logprob: -1.5079143047332764
    3. '           ' → logprob: -5.1329145431518555
    4. '   ' → logprob: -10.382914543151855
    5. '       ' → logprob: -10.507914543151855
    6. ':return' → logprob: -12.632914543151855
    7. ':
' → logprob: -13.507914543151855
    8. ',' → logprob: -13.757914543151855
    9. ' :' → logprob: -14.257914543151855
    10. ' :
' → logprob: -14.382914543151855

Token 171: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.73052782076411e-05
    2. ':' → logprob: -10.875067710876465
    3. '       ' → logprob: -11.375067710876465
    4. '		' → logprob: -11.500067710876465
    5. ':
' → logprob: -11.625067710876465
    6. '	       ' → logprob: -12.375067710876465
    7. ' break' → logprob: -12.500067710876465
    8. '   ' → logprob: -12.625067710876465
    9. '          ' → logprob: -13.125067710876465
    10. '               ' → logprob: -13.750067710876465

Token 172: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.12894278764724731
    2. 'break' (adapté à ' break') → logprob: -2.3789427280426025
    3. '           ' → logprob: -3.6289427280426025
    4. ' return' → logprob: -7.003942966461182
    5. 'return' → logprob: -7.128942966461182
    6. '       ' → logprob: -10.378942489624023
    7. '   ' → logprob: -11.128942489624023
    8. '               ' → logprob: -11.253942489624023
    9. '	break' → logprob: -11.253942489624023
    10. ' ' → logprob: -13.628942489624023

Token 173: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02307785674929619
    2. '
' → logprob: -4.023077964782715
    3. '        
' → logprob: -5.898077964782715
    4. 'graph' → logprob: -6.773077964782715
    5. '<|end|>' → logprob: -7.398077964782715
    6. '	' → logprob: -9.398077964782715
    7. '	graph' → logprob: -9.398077964782715
    8. '		
' → logprob: -9.648077964782715
    9. '   ' → logprob: -10.023077964782715
    10. ' graph' → logprob: -10.148077964782715

Token 174: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006587001029402018
    2. '
' → logprob: -5.756587028503418
    3. '        
' → logprob: -6.256587028503418
    4. '<|end|>' → logprob: -6.756587028503418
    5. 'graph' → logprob: -9.006587028503418
    6. '	graph' → logprob: -9.631587028503418
    7. '   ' → logprob: -10.506587028503418
    8. '	' → logprob: -10.506587028503418
    9. ' graph' → logprob: -10.631587028503418
    10. '		
' → logprob: -11.256587028503418

Token 175: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.5541659593582153
    2. 'graph' (adapté à ' graph') → logprob: -1.0541659593582153
    3. '
' → logprob: -2.804165840148926
    4. '       ' → logprob: -4.179165840148926
    5. '	graph' → logprob: -7.304165840148926
    6. '        
' → logprob: -8.429165840148926
    7. '```' → logprob: -9.554165840148926
    8. '_graph' → logprob: -9.929165840148926
    9. ' 
' → logprob: -10.554165840148926
    10. '   ' → logprob: -10.554165840148926

Token 176: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020561860874295235
    2. '=' → logprob: -3.895561933517456
    3. '[' → logprob: -11.645562171936035
    4. '<|end|>' → logprob: -12.020562171936035
    5. ' =[' → logprob: -13.270562171936035
    6. '=[]' → logprob: -14.020562171936035
    7. ' ' → logprob: -14.395562171936035
    8. '=[' → logprob: -15.145562171936035
    9. ')' → logprob: -15.395562171936035
    10. 's' → logprob: -15.520562171936035

Token 177: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.693216860294342
    2. ' [[]' → logprob: -0.693216860294342
    3. '{' → logprob: -10.193217277526855
    4. ' [' → logprob: -10.443217277526855
    5. '[[' → logprob: -13.568217277526855
    6. '   ' → logprob: -13.818217277526855
    7. ' {' → logprob: -14.943217277526855
    8. 'default' → logprob: -15.443217277526855
    9. ' defaultdict' → logprob: -16.31821632385254
    10. ' ' → logprob: -16.81821632385254

Token 178: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12694385647773743
    2. 'for' → logprob: -2.126943826675415
    3. ')' → logprob: -11.501943588256836
    4. '	for' → logprob: -12.876943588256836
    5. '   ' → logprob: -13.751943588256836
    6. ',' → logprob: -14.376943588256836
    7. ' ' → logprob: -14.751943588256836
    8. '       ' → logprob: -15.126943588256836
    9. ']' → logprob: -15.251943588256836
    10. '
' → logprob: -15.876943588256836

Token 179: ' _' (ID: 1175)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2534690499305725
    2. '_' → logprob: -1.6284689903259277
    3. ' range' → logprob: -4.628468990325928
    4. 'in' → logprob: -4.753468990325928
    5. 'range' → logprob: -4.753468990325928
    6. ' _' → logprob: -7.628468990325928
    7. '(range' → logprob: -9.253469467163086
    8. 'i' → logprob: -11.128469467163086
    9. ' ' → logprob: -11.253469467163086
    10. '_range' → logprob: -11.628469467163086

Token 180: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5132179856300354
    2. 'in' → logprob: -1.5132179260253906
    3. 'range' → logprob: -1.7632179260253906
    4. ' range' → logprob: -4.638217926025391
    5. '(range' → logprob: -10.38821792602539
    6. '(N' → logprob: -11.51321792602539
    7. 'N' → logprob: -11.76321792602539
    8. 'n' → logprob: -12.13821792602539
    9. '(n' → logprob: -12.51321792602539
    10. 'ange' → logprob: -12.51321792602539

Token 181: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014164448715746403
    2. ' range' → logprob: -4.264164447784424
    3. '(range' → logprob: -13.889164924621582
    4. ' ' → logprob: -19.389163970947266
    5. '	range' → logprob: -19.514163970947266
    6. 'r' → logprob: -20.139163970947266
    7. '   ' → logprob: -20.264163970947266
    8. 'rang' → logprob: -20.764163970947266
    9. 'in' → logprob: -20.889163970947266
    10. 'ran' → logprob: -20.889163970947266

Token 182: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -1.5094070477061905e-05
    2. '(' → logprob: -11.250015258789062
    3. '(n' → logprob: -13.750015258789062
    4. 'N' → logprob: -14.125015258789062
    5. ' (' → logprob: -15.750015258789062
    6. '((' → logprob: -16.750015258789062
    7. '(
' → logprob: -19.500015258789062
    8. '(M' → logprob: -19.750015258789062
    9. '   ' → logprob: -20.375015258789062
    10. ')(' → logprob: -20.500015258789062

Token 183: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.5213274309644476e-05
    2. ' +' → logprob: -11.250015258789062
    3. ')]' → logprob: -13.250015258789062
    4. '+
' → logprob: -15.250015258789062
    5. '+n' → logprob: -16.750015258789062
    6. ')' → logprob: -18.375015258789062
    7. '＋' → logprob: -18.625015258789062
    8. '1' → logprob: -18.875015258789062
    9. '+)' → logprob: -19.000015258789062
    10. '```' → logprob: -19.250015258789062

Token 184: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.500001907348633
    3. '0' → logprob: -14.625001907348633
    4. '```' → logprob: -16.375001907348633
    5. 'N' → logprob: -17.125001907348633
    6. '
' → logprob: -17.625001907348633
    7. '   ' → logprob: -17.750001907348633
    8. '(' → logprob: -18.625001907348633
    9. '

' → logprob: -19.250001907348633
    10. '``' → logprob: -19.500001907348633

Token 185: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.004095973912626505
    2. ']' → logprob: -5.504096031188965
    3. ')' → logprob: -11.004096031188965
    4. '])' → logprob: -15.254096031188965
    5. '}]' → logprob: -15.379096031188965
    6. ' ]' → logprob: -16.12909507751465
    7. '>]' → logprob: -16.37909507751465
    8. ')],' → logprob: -16.75409507751465
    9. '])]' → logprob: -17.00409507751465
    10. ')]
' → logprob: -17.00409507751465

Token 186: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11148940771818161
    2. '<|end|>' → logprob: -2.9864892959594727
    3. ' for' → logprob: -3.4864892959594727
    4. 'for' → logprob: -4.361489295959473
    5. '   ' → logprob: -5.111489295959473
    6. '
' → logprob: -5.611489295959473
    7. '<|end|>' → logprob: -7.111489295959473
    8. '	for' → logprob: -7.236489295959473
    9. '	' → logprob: -8.861489295959473
    10. '        
' → logprob: -9.361489295959473

Token 187: ' edges' (ID: 22569)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0064979433082044125
    2. ' for' → logprob: -5.131497859954834
    3. '       ' → logprob: -7.506497859954834
    4. '   ' → logprob: -10.881498336791992
    5. '	for' → logprob: -14.631498336791992
    6. '```' → logprob: -15.506498336791992
    7. ' ' → logprob: -17.006498336791992
    8. '        
' → logprob: -17.256498336791992
    9. '
' → logprob: -18.881498336791992
    10. '  ' → logprob: -19.006498336791992

Token 188: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.013393502682447433
    2. '=' → logprob: -4.388393402099609
    3. '=[]' → logprob: -7.763393402099609
    4. 'for' → logprob: -8.38839340209961
    5. '<|end|>' → logprob: -9.51339340209961
    6. ',' → logprob: -10.26339340209961
    7. ' ' → logprob: -11.01339340209961
    8. '=[]
' → logprob: -11.01339340209961
    9. ' for' → logprob: -11.13839340209961
    10. '<|end|>' → logprob: -11.13839340209961

Token 189: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.02979700267314911
    2. ' []' → logprob: -3.529797077178955
    3. '[' → logprob: -10.779796600341797
    4. '[]
' → logprob: -11.029796600341797
    5. '{}' → logprob: -11.904796600341797
    6. '[]}' → logprob: -13.029796600341797
    7. '[]

' → logprob: -16.154796600341797
    8. '[],' → logprob: -16.404796600341797
    9. '   ' → logprob: -16.654796600341797
    10. '[]>' → logprob: -16.779796600341797

Token 190: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13692601025104523
    2. '<|end|>' → logprob: -2.5119259357452393
    3. ' for' → logprob: -3.3869259357452393
    4. '
' → logprob: -4.886926174163818
    5. 'for' → logprob: -5.511926174163818
    6. '<|end|>' → logprob: -7.386926174163818
    7. '        
' → logprob: -8.26192569732666
    8. '	' → logprob: -8.63692569732666
    9. '	for' → logprob: -9.01192569732666
    10. '		
' → logprob: -9.76192569732666

Token 191: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6274011731147766
    2. 'for' (adapté à ' for') → logprob: -0.8774011731147766
    3. '       ' → logprob: -3.002401113510132
    4. '	for' → logprob: -8.252401351928711
    5. '   ' → logprob: -8.502401351928711
    6. ' ' → logprob: -11.502401351928711
    7. '
' → logprob: -12.002401351928711
    8. '	' → logprob: -12.502401351928711
    9. '	   ' → logprob: -13.127401351928711
    10. ' ' → logprob: -13.502401351928711

Token 192: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6933240294456482
    2. ' _' → logprob: -0.6933240294456482
    3. '_i' → logprob: -8.693324089050293
    4. ' i' → logprob: -11.693324089050293
    5. 'i' → logprob: -14.943324089050293
    6. ' ' → logprob: -15.818324089050293
    7. '_j' → logprob: -16.068323135375977
    8. '_=' → logprob: -16.443323135375977
    9. '_M' → logprob: -17.193323135375977
    10. '_s' → logprob: -17.818323135375977

Token 193: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07921604812145233
    2. 'in' → logprob: -2.7042160034179688
    3. 'range' → logprob: -4.704216003417969
    4. ' range' → logprob: -8.704216003417969
    5. ' ' → logprob: -11.954216003417969
    6. '  ' → logprob: -13.454216003417969
    7. '_' → logprob: -13.579216003417969
    8. 'int' → logprob: -13.954216003417969
    9. 's' → logprob: -14.204216003417969
    10. 'i' → logprob: -14.704216003417969

Token 194: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -5.1689596148207784e-05
    2. ' range' → logprob: -9.875051498413086
    3. '(range' → logprob: -16.375051498413086
    4. '	range' → logprob: -17.750051498413086
    5. '```' → logprob: -19.750051498413086
    6. '0' → logprob: -19.875051498413086
    7. 'ange' → logprob: -20.125051498413086
    8. 'rang' → logprob: -20.125051498413086
    9. 'r' → logprob: -20.375051498413086
    10. '  ' → logprob: -20.875051498413086

Token 195: '(M' (ID: 6103)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.16064094007015228
    2. '(M' → logprob: -1.9106409549713135
    3. ' M' → logprob: -7.785640716552734
    4. '	M' → logprob: -15.035640716552734
    5. '   ' → logprob: -15.285640716552734
    6. '(' → logprob: -15.535640716552734
    7. ',M' → logprob: -16.410640716552734
    8. ' (' → logprob: -16.410640716552734
    9. ' ' → logprob: -16.535640716552734
    10. '[M' → logprob: -17.410640716552734

Token 196: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0891464427113533
    2. '):
' → logprob: -2.464146375656128
    3. ' ):' → logprob: -9.464146614074707
    4. ':' → logprob: -10.214146614074707
    5. '):
' → logprob: -10.714146614074707
    6. ')' → logprob: -10.964146614074707
    7. ',' → logprob: -11.214146614074707
    8. '       ' → logprob: -11.714146614074707
    9. '():
' → logprob: -12.214146614074707
    10. '<|end|>' → logprob: -12.339146614074707

Token 197: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0031207946594804525
    2. '   ' → logprob: -7.3781208992004395
    3. '<|end|>' → logprob: -7.3781208992004395
    4. '	       ' → logprob: -7.5031208992004395
    5. ' line' → logprob: -7.7531208992004395
    6. '       ' → logprob: -8.628120422363281
    7. 'line' → logprob: -8.878120422363281
    8. '    	   ' → logprob: -9.378120422363281
    9. '<|end|>' → logprob: -9.753120422363281
    10. ' ' → logprob: -9.878120422363281

Token 198: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.6704649329185486
    2. 'u' (adapté à ' u') → logprob: -0.7954649329185486
    3. 'a' → logprob: -3.5454649925231934
    4. ' a' → logprob: -4.920464992523193
    5. ' line' → logprob: -8.045464515686035
    6. '   ' → logprob: -8.295464515686035
    7. ' data' → logprob: -9.795464515686035
    8. 's' → logprob: -9.795464515686035
    9. 'line' → logprob: -9.795464515686035
    10. 'data' → logprob: -9.920464515686035

Token 199: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006985911168158054
    2. ',v' → logprob: -5.006986141204834
    3. ' ,' → logprob: -8.256985664367676
    4. ',c' → logprob: -12.006985664367676
    5. 'v' → logprob: -14.006985664367676
    6. ',d' → logprob: -14.256985664367676
    7. ',u' → logprob: -14.381985664367676
    8. ',w' → logprob: -14.631985664367676
    9. '<|end|>' → logprob: -14.631985664367676
    10. ',b' → logprob: -15.256985664367676

Token 200: ',d' (ID: 26159)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05814228951931
    2. ',c' → logprob: -3.0581421852111816
    3. ',w' → logprob: -5.308142185211182
    4. ',d' → logprob: -5.558142185211182
    5. ' ,' → logprob: -8.30814266204834
    6. ',k' → logprob: -9.43314266204834
    7. ',u' → logprob: -9.93314266204834
    8. ',b' → logprob: -10.05814266204834
    9. ',v' → logprob: -10.18314266204834
    10. ',C' → logprob: -10.55814266204834

Token 201: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.033697567880153656
    2. ',' → logprob: -3.4086976051330566
    3. 'c' → logprob: -10.533697128295898
    4. ' ,' → logprob: -11.033697128295898
    5. ',w' → logprob: -12.658697128295898
    6. ',k' → logprob: -13.908697128295898
    7. ',C' → logprob: -13.908697128295898
    8. ',p' → logprob: -14.658697128295898
    9. ',num' → logprob: -14.658697128295898
    10. ',u' → logprob: -14.908697128295898

Token 202: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804286941885948
    2. ' =' → logprob: -3.2880427837371826
    3. '=line' → logprob: -14.288043022155762
    4. ')' → logprob: -14.663043022155762
    5. '＝' → logprob: -15.913043022155762
    6. '=input' → logprob: -16.163042068481445
    7. ')=' → logprob: -16.413042068481445
    8. '=sys' → logprob: -17.413042068481445
    9. ',' → logprob: -18.163042068481445
    10. ' ' → logprob: -18.163042068481445

Token 203: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.474077433347702
    2. 'map' → logprob: -0.9740774631500244
    3. '    ' → logprob: -15.349077224731445
    4. '   ' → logprob: -16.099077224731445
    5. '	map' → logprob: -16.474077224731445
    6. 'm' → logprob: -16.849077224731445
    7. ' ' → logprob: -17.849077224731445
    8. '  ' → logprob: -18.599077224731445
    9. '           ' → logprob: -20.099077224731445
    10. 'list' → logprob: -20.724077224731445

Token 204: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -1.8312570318812504e-05
    2. 'int' → logprob: -11.000018119812012
    3. '(' → logprob: -14.250018119812012
    4. ' int' → logprob: -15.375018119812012
    5. '<int' → logprob: -15.625018119812012
    6. '[int' → logprob: -15.625018119812012
    7. '=int' → logprob: -16.500019073486328
    8. '(input' → logprob: -16.750019073486328
    9. '(str' → logprob: -16.875019073486328
    10. '(map' → logprob: -17.250019073486328

Token 205: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.1781092882156372
    2. ',' → logprob: -2.1781091690063477
    3. '(input' → logprob: -3.4281091690063477
    4. 'input' → logprob: -4.053109169006348
    5. ' input' → logprob: -9.928109169006348
    6. '(' → logprob: -11.678109169006348
    7. ')' → logprob: -12.053109169006348
    8. '=input' → logprob: -12.178109169006348
    9. '[input' → logprob: -12.678109169006348
    10. ',line' → logprob: -13.303109169006348

Token 206: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0040785204619169235
    2. ' input' → logprob: -5.504078388214111
    3. 'sys' → logprob: -17.254077911376953
    4. 'line' → logprob: -18.254077911376953
    5. '	input' → logprob: -18.254077911376953
    6. ',input' → logprob: -19.129077911376953
    7. '_input' → logprob: -19.379077911376953
    8. '=input' → logprob: -19.379077911376953
    9. '(input' → logprob: -19.379077911376953
    10. '   ' → logprob: -19.879077911376953

Token 207: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00020449401927180588
    2. '()' → logprob: -8.500204086303711
    3. '())' → logprob: -13.875204086303711
    4. ' ().' → logprob: -18.12520408630371
    5. '.readline' → logprob: -19.25020408630371
    6. ')' → logprob: -19.25020408630371
    7. '()
' → logprob: -19.50020408630371
    8. '();)' → logprob: -20.12520408630371
    9. '().__' → logprob: -20.25020408630371
    10. '(' → logprob: -20.50020408630371

Token 208: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.002482315758243203
    2. 'strip' → logprob: -6.0024824142456055
    3. 'rstrip' → logprob: -12.002482414245605
    4. '(split' → logprob: -15.002482414245605
    5. ' split' → logprob: -15.377482414245605
    6. 'spl' → logprob: -18.25248146057129
    7. ')' → logprob: -19.00248146057129
    8. 'plit' → logprob: -20.12748146057129
    9. ' strip' → logprob: -20.62748146057129
    10. 's' → logprob: -20.75248146057129

Token 209: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4810029864311218
    2. ')' → logprob: -0.9810029864311218
    3. '()' → logprob: -4.9810028076171875
    4. '())
' → logprob: -10.731002807617188
    5. '(' → logprob: -12.356002807617188
    6. '))' → logprob: -12.731002807617188
    7. ' )' → logprob: -13.231002807617188
    8. ')
' → logprob: -13.231002807617188
    9. ' ())' → logprob: -14.231002807617188
    10. ')`' → logprob: -15.106002807617188

Token 210: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000802480208221823
    2. '<|end|>' → logprob: -7.625802516937256
    3. '
' → logprob: -8.875802040100098
    4. '       ' → logprob: -9.875802040100098
    5. '            
' → logprob: -10.125802040100098
    6. '<|end|>' → logprob: -10.625802040100098
    7. ',' → logprob: -10.875802040100098
    8. '               ' → logprob: -12.000802040100098
    9. '   ' → logprob: -12.000802040100098
    10. '	       ' → logprob: -12.125802040100098

Token 211: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.1968477964401245
    2. 'graph' (adapté à ' graph') → logprob: -2.196847915649414
    3. '           ' → logprob: -2.821847915649414
    4. ' edges' → logprob: -5.571847915649414
    5. '	graph' → logprob: -6.071847915649414
    6. '       ' → logprob: -6.946847915649414
    7. '   ' → logprob: -7.696847915649414
    8. 'edges' → logprob: -7.821847915649414
    9. '(graph' → logprob: -10.446847915649414
    10. '```' → logprob: -10.946847915649414

Token 212: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.125
    3. '[user' → logprob: -18.125
    4. 'u' → logprob: -19.25
    5. '[v' → logprob: -19.875
    6. '```' → logprob: -20.75
    7. ')[' → logprob: -21.5
    8. '[s' → logprob: -21.625
    9. ' [' → logprob: -21.75
    10. '\[' → logprob: -22.0

Token 213: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00630759634077549
    2. '[u' → logprob: -5.381307601928711
    3. '.append' → logprob: -7.006307601928711
    4. ').' → logprob: -7.256307601928711
    5. '.' → logprob: -9.881307601928711
    6. '[v' → logprob: -11.756307601928711
    7. '[' → logprob: -12.381307601928711
    8. '   ' → logprob: -12.631307601928711
    9. ' ].' → logprob: -12.631307601928711
    10. ']' → logprob: -13.631307601928711

Token 214: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -2.935296834039036e-06
    2. '.append' → logprob: -13.62500286102295
    3. ' append' → logprob: -13.87500286102295
    4. 'pend' → logprob: -14.50000286102295
    5. 'app' → logprob: -16.125003814697266
    6. '_append' → logprob: -16.875003814697266
    7. 'appen' → logprob: -17.125003814697266
    8. 'Append' → logprob: -18.375003814697266
    9. 'pp' → logprob: -18.500003814697266
    10. '	append' → logprob: -19.375003814697266

Token 215: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0009782671695575118
    2. '(' → logprob: -7.000978469848633
    3. '(v' → logprob: -9.625978469848633
    4. ' (' → logprob: -15.250978469848633
    5. '(u' → logprob: -15.250978469848633
    6. '([' → logprob: -16.500978469848633
    7. '[(' → logprob: -17.375978469848633
    8. ' ((' → logprob: -17.500978469848633
    9. '(
' → logprob: -18.000978469848633
    10. '<|end|>' → logprob: -18.000978469848633

Token 216: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.4121114822482923e-06
    2. ' v' → logprob: -12.625003814697266
    3. ')v' → logprob: -18.375003814697266
    4. '	v' → logprob: -19.000003814697266
    5. ',v' → logprob: -19.875003814697266
    6. '   ' → logprob: -20.375003814697266
    7. 'vi' → logprob: -21.500003814697266
    8. 'vq' → logprob: -22.000003814697266
    9. '(v' → logprob: -22.125003814697266
    10. '?v' → logprob: -22.625003814697266

Token 217: ',d' (ID: 26159)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2016279101371765
    2. ',d' → logprob: -1.7016279697418213
    3. ' ,' → logprob: -8.451627731323242
    4. 'd' → logprob: -14.576627731323242
    5. ',
' → logprob: -14.826627731323242
    6. ' d' → logprob: -16.826627731323242
    7. ',D' → logprob: -16.951627731323242
    8. ',int' → logprob: -17.826627731323242
    9. ',c' → logprob: -17.951627731323242
    10. ',n' → logprob: -17.951627731323242

Token 218: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.2519756853580475
    2. ',' → logprob: -1.501975655555725
    3. ' ,' → logprob: -10.001976013183594
    4. ',
' → logprob: -15.126976013183594
    5. 'c' → logprob: -15.751976013183594
    6. ',color' → logprob: -16.251976013183594
    7. ',b' → logprob: -16.376976013183594
    8. ',v' → logprob: -16.501976013183594
    9. ',int' → logprob: -16.501976013183594
    10. ',n' → logprob: -16.751976013183594

Token 219: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00019328886992298067
    2. '))
' → logprob: -8.87519359588623
    3. ')' → logprob: -9.87519359588623
    4. ' ))' → logprob: -14.00019359588623
    5. ')))' → logprob: -14.87519359588623
    6. '))

' → logprob: -15.12519359588623
    7. ',' → logprob: -15.62519359588623
    8. '));' → logprob: -16.250192642211914
    9. '),' → logprob: -16.625192642211914
    10. ')),' → logprob: -16.750192642211914

Token 220: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00015681622608099133
    2. '<|end|>' → logprob: -10.00015640258789
    3. 'graph' → logprob: -10.25015640258789
    4. ' graph' → logprob: -10.37515640258789
    5. '   ' → logprob: -11.37515640258789
    6. '       ' → logprob: -12.00015640258789
    7. '	       ' → logprob: -12.37515640258789
    8. ',' → logprob: -12.62515640258789
    9. ' and' → logprob: -12.75015640258789
    10. '		' → logprob: -12.75015640258789

Token 221: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.026519153267145157
    2. ' graph' → logprob: -3.6515190601348877
    3. '           ' → logprob: -9.151518821716309
    4. '	graph' → logprob: -9.151518821716309
    5. '       ' → logprob: -13.026518821716309
    6. '(graph' → logprob: -13.276518821716309
    7. 'edges' → logprob: -14.276518821716309
    8. '_graph' → logprob: -14.401518821716309
    9. '   ' → logprob: -14.901518821716309
    10. 'Graph' → logprob: -15.401518821716309

Token 222: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -2.9875325708417222e-05
    2. '[u' → logprob: -10.625029563903809
    3. '[' → logprob: -12.875029563903809
    4. 'v' → logprob: -13.000029563903809
    5. '[w' → logprob: -15.500029563903809
    6. '[s' → logprob: -16.125030517578125
    7. '[user' → logprob: -16.750030517578125
    8. '[z' → logprob: -16.750030517578125
    9. '[V' → logprob: -16.750030517578125
    10. '[c' → logprob: -17.000030517578125

Token 223: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.020284350961446762
    2. ').' → logprob: -4.520284175872803
    3. '.' → logprob: -5.270284175872803
    4. '.append' → logprob: -5.520284175872803
    5. '}.' → logprob: -11.395284652709961
    6. ' .' → logprob: -11.520284652709961
    7. ']' → logprob: -12.020284652709961
    8. ' ].' → logprob: -12.520284652709961
    9. '.app' → logprob: -12.770284652709961
    10. '           ' → logprob: -12.770284652709961

Token 224: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -5.512236498361744e-07
    2. '.append' → logprob: -15.000000953674316
    3. 'appen' → logprob: -15.875000953674316
    4. ' append' → logprob: -16.5
    5. '	append' → logprob: -18.375
    6. 'app' → logprob: -19.0
    7. '_append' → logprob: -20.0
    8. 'Append' → logprob: -21.375
    9. 'prepend' → logprob: -21.375
    10. 'add' → logprob: -21.5

Token 225: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0003724006237462163
    2. ' (' → logprob: -8.500371932983398
    3. '(v' → logprob: -9.125371932983398
    4. ' ((' → logprob: -10.000371932983398
    5. '(u' → logprob: -11.375371932983398
    6. '(' → logprob: -12.750371932983398
    7. ' ' → logprob: -16.2503719329834
    8. '(
' → logprob: -17.6253719329834
    9. '>((' → logprob: -18.0003719329834
    10. '<|end|>' → logprob: -18.2503719329834

Token 226: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.029872331768274307
    2. '(u' → logprob: -3.529872417449951
    3. ' u' → logprob: -9.404871940612793
    4. ' (' → logprob: -10.654871940612793
    5. ',u' → logprob: -12.154871940612793
    6. '[u' → logprob: -12.279871940612793
    7. ',' → logprob: -13.904871940612793
    8. '   ' → logprob: -14.029871940612793
    9. '	u' → logprob: -14.029871940612793
    10. '(' → logprob: -14.279871940612793

Token 227: ',d' (ID: 26159)
  Prédit: ',d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.0009145628428086638
    2. ',' → logprob: -7.000914573669434
    3. ',v' → logprob: -13.250914573669434
    4. ' ,' → logprob: -13.625914573669434
    5. 'd' → logprob: -16.500913619995117
    6. ',(' → logprob: -17.125913619995117
    7. ',c' → logprob: -17.625913619995117
    8. ',
' → logprob: -18.125913619995117
    9. '	d' → logprob: -18.375913619995117
    10. ',D' → logprob: -18.625913619995117

Token 228: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.37901797890663147
    2. ',d' → logprob: -1.629017949104309
    3. ',' → logprob: -2.1290180683135986
    4. ' ,' → logprob: -7.8790178298950195
    5. ',
' → logprob: -12.87901782989502
    6. ',v' → logprob: -13.25401782989502
    7. ',b' → logprob: -13.25401782989502
    8. ',f' → logprob: -14.00401782989502
    9. ',s' → logprob: -14.37901782989502
    10. ',k' → logprob: -14.50401782989502

Token 229: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.023282868787646294
    2. ')' → logprob: -3.773282766342163
    3. '))
' → logprob: -10.273283004760742
    4. ')))' → logprob: -13.398283004760742
    5. ')
' → logprob: -14.148283004760742
    6. ' ))' → logprob: -14.898283004760742
    7. ' )' → logprob: -17.023283004760742
    8. '),' → logprob: -17.148283004760742
    9. '))

' → logprob: -17.648283004760742
    10. '])' → logprob: -17.648283004760742

Token 230: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 231: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.3761674463748932
    2. 'edges' (adapté à ' edges') → logprob: -1.3761674165725708
    3. '       ' → logprob: -3.5011675357818604
    4. '           ' → logprob: -3.5011675357818604
    5. '   ' → logprob: -7.626167297363281
    6. '.edges' → logprob: -9.751167297363281
    7. '(edges' → logprob: -10.501167297363281
    8. '```' → logprob: -10.501167297363281
    9. '_edges' → logprob: -12.126167297363281
    10. '               ' → logprob: -12.126167297363281

Token 232: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.003219899022951722
    2. '.' → logprob: -5.753220081329346
    3. '.app' → logprob: -11.628219604492188
    4. '.add' → logprob: -12.128219604492188
    5. '<|end|>' → logprob: -12.128219604492188
    6. '.ap' → logprob: -12.253219604492188
    7. '.setdefault' → logprob: -12.253219604492188
    8. '.push' → logprob: -12.503219604492188
    9. ').' → logprob: -12.753219604492188
    10. ' .' → logprob: -13.378219604492188

Token 233: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0009145628428086638
    2. '(u' → logprob: -7.000914573669434
    3. '(' → logprob: -13.000914573669434
    4. ' ((' → logprob: -14.250914573669434
    5. '(((' → logprob: -16.500913619995117
    6. ' (' → logprob: -17.500913619995117
    7. '([' → logprob: -17.750913619995117
    8. '[(' → logprob: -19.000913619995117
    9. '   ' → logprob: -19.375913619995117
    10. '(None' → logprob: -19.500913619995117

Token 234: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.01462587807327509
    2. 'd' → logprob: -4.3896260261535645
    3. 'c' → logprob: -6.5146260261535645
    4. ' u' → logprob: -7.6396260261535645
    5. '   ' → logprob: -9.389625549316406
    6. '(u' → logprob: -10.389625549316406
    7. ')' → logprob: -11.389625549316406
    8. ' d' → logprob: -11.639625549316406
    9. '(d' → logprob: -13.264625549316406
    10. ')d' → logprob: -13.264625549316406

Token 235: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.06199469417333603
    2. ',' → logprob: -2.811994791030884
    3. ' ,' → logprob: -10.686994552612305
    4. ',c' → logprob: -13.311994552612305
    5. ',u' → logprob: -13.561994552612305
    6. ',d' → logprob: -14.936994552612305
    7. 'v' → logprob: -15.186994552612305
    8. ',
' → logprob: -15.311994552612305
    9. ',n' → logprob: -17.186994552612305
    10. ',w' → logprob: -17.311994552612305

Token 236: ',d' (ID: 26159)
  Prédit: ',d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.007884842343628407
    2. ',' → logprob: -5.007884979248047
    3. ' ,' → logprob: -6.757884979248047
    4. 'd' → logprob: -12.632884979248047
    5. '))' → logprob: -13.882884979248047
    6. ',u' → logprob: -14.132884979248047
    7. '   ' → logprob: -14.757884979248047
    8. '),' → logprob: -15.257884979248047
    9. ')' → logprob: -15.257884979248047
    10. ',c' → logprob: -15.757884979248047

Token 237: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.011299507692456245
    2. ',' → logprob: -4.5112996101379395
    3. ' ,' → logprob: -8.511299133300781
    4. 'c' → logprob: -10.011299133300781
    5. ',
' → logprob: -13.386299133300781
    6. ')' → logprob: -13.636299133300781
    7. ' c' → logprob: -14.636299133300781
    8. ')c' → logprob: -15.011299133300781
    9. ',b' → logprob: -15.386299133300781
    10. '),' → logprob: -15.511299133300781

Token 238: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20142397284507751
    2. '))' → logprob: -1.7014240026474
    3. ' )' → logprob: -12.451423645019531
    4. ')))' → logprob: -12.826423645019531
    5. ' ))' → logprob: -13.701423645019531
    6. ')
' → logprob: -13.701423645019531
    7. '))
' → logprob: -13.826423645019531
    8. ',' → logprob: -14.826423645019531
    9. ')}' → logprob: -15.701423645019531
    10. '),' → logprob: -16.57642364501953

Token 239: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 240: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.3502563238143921
    2. ' dist' → logprob: -2.7252564430236816
    3. 'best' → logprob: -2.8502564430236816
    4. 'dp' → logprob: -2.9752564430236816
    5. 'min' → logprob: -3.8502564430236816
    6. 'sp' → logprob: -4.725256443023682
    7. '       ' → logprob: -4.850256443023682
    8. 'max' → logprob: -5.100256443023682
    9. '#' → logprob: -5.225256443023682
    10. 'cost' → logprob: -5.475256443023682

Token 241: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06491171568632126
    2. '=' → logprob: -2.9399116039276123
    3. '1' → logprob: -4.689911842346191
    4. '_from' → logprob: -8.564911842346191
    5. '_dist' → logprob: -9.064911842346191
    6. '_d' → logprob: -9.439911842346191
    7. '_distance' → logprob: -9.814911842346191
    8. 'from' → logprob: -9.939911842346191
    9. 'A' → logprob: -10.064911842346191
    10. 'd' → logprob: -10.439911842346191

Token 242: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.011048528365790844
    2. ' d' → logprob: -4.511048316955566
    3. '[d' → logprob: -15.511048316955566
    4. '(d' → logprob: -15.761048316955566
    5. '   ' → logprob: -16.011049270629883
    6. ')d' → logprob: -16.011049270629883
    7. '	d' → logprob: -16.136049270629883
    8. '_d' → logprob: -17.511049270629883
    9. '       ' → logprob: -17.761049270629883
    10. ' ' → logprob: -18.386049270629883

Token 243: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -4.704065213445574e-05
    2. 'ijk' → logprob: -10.125046730041504
    3. 'jk' → logprob: -12.750046730041504
    4. 'ij' → logprob: -13.875046730041504
    5. 'jik' → logprob: -14.000046730041504
    6. 'ijks' → logprob: -14.250046730041504
    7. 'j' → logprob: -15.000046730041504
    8. '```' → logprob: -15.375046730041504
    9. 'kj' → logprob: -16.25004768371582
    10. 'graph' → logprob: -16.25004768371582

Token 244: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00021617230959236622
    2. '(' → logprob: -9.125216484069824
    3. '(n' → logprob: -9.750216484069824
    4. '<|end|>' → logprob: -10.125216484069824
    5. ' (' → logprob: -12.000216484069824
    6. ',N' → logprob: -14.500216484069824
    7. 'N' → logprob: -14.875216484069824
    8. '(
' → logprob: -15.000216484069824
    9. ')(' → logprob: -15.000216484069824
    10. '```' → logprob: -15.125216484069824

Token 245: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014358940534293652
    2. ',N' → logprob: -4.264358997344971
    3. ',n' → logprob: -9.264358520507812
    4. ' ,' → logprob: -10.139358520507812
    5. '(N' → logprob: -10.139358520507812
    6. ',(' → logprob: -12.514358520507812
    7. '(' → logprob: -12.764358520507812
    8. ')' → logprob: -13.139358520507812
    9. ',D' → logprob: -13.514358520507812
    10. ',M' → logprob: -13.889358520507812

Token 246: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0031830633524805307
    2. ' graph' → logprob: -5.753182888031006
    3. 'N' → logprob: -13.003183364868164
    4. '	graph' → logprob: -13.503183364868164
    5. '(graph' → logprob: -13.628183364868164
    6. '   ' → logprob: -16.378183364868164
    7. ')' → logprob: -16.628183364868164
    8. ' N' → logprob: -16.628183364868164
    9. '```' → logprob: -16.753183364868164
    10. '1' → logprob: -16.878183364868164

Token 247: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007626149337738752
    2. ')
' → logprob: -4.882626056671143
    3. ',' → logprob: -11.6326265335083
    4. '<|end|>' → logprob: -12.2576265335083
    5. ')

' → logprob: -13.5076265335083
    6. '   ' → logprob: -13.5076265335083
    7. ' )' → logprob: -13.6326265335083
    8. ')
' → logprob: -14.5076265335083
    9. '),' → logprob: -15.0076265335083
    10. '[' → logprob: -15.2576265335083

Token 248: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8826234936714172
    2. 'min' → logprob: -1.5076234340667725
    3. 'dp' → logprob: -2.1326234340667725
    4. ' min' → logprob: -3.0076234340667725
    5. 'total' → logprob: -3.3826234340667725
    6. 'best' → logprob: -3.5076234340667725
    7. 'cost' → logprob: -4.507623672485352
    8. 'dist' → logprob: -4.632623672485352
    9. ' dp' → logprob: -4.632623672485352
    10. 'max' → logprob: -4.757623672485352

Token 249: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.3303323984146118
    2. 'dp' → logprob: -1.4553323984146118
    3. 'min' → logprob: -2.0803322792053223
    4. 'res' → logprob: -2.0803322792053223
    5. 'answer' → logprob: -2.7053322792053223
    6. 'cost' → logprob: -3.2053322792053223
    7. 'max' → logprob: -3.3303322792053223
    8. 'result' → logprob: -4.080332279205322
    9. ' ans' → logprob: -4.330332279205322
    10. 'dist' → logprob: -4.580332279205322

Token 250: ' Keep' (ID: 16835)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.2754408121109009
    2. 'dp' → logprob: -2.0254406929016113
    3. 'cost' → logprob: -2.0254406929016113
    4. 'ans' → logprob: -2.7754406929016113
    5. 'max' → logprob: -2.9004406929016113
    6. 'paths' → logprob: -3.0254406929016113
    7. 'dist' → logprob: -3.1504406929016113
    8. ' min' → logprob: -3.2754406929016113
    9. 'answer' → logprob: -3.9004406929016113
    10. '#' → logprob: -3.9004406929016113

Token 251: ' only' (ID: 1606)
  Prédit: 'only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'only' → logprob: -0.6475406289100647
    2. 'edges' → logprob: -1.89754056930542
    3. 'dist' → logprob: -2.27254056930542
    4. ' only' → logprob: -3.02254056930542
    5. ' edges' → logprob: -3.27254056930542
    6. 'answer' → logprob: -4.02254056930542
    7. '#' → logprob: -4.02254056930542
    8. 'max' → logprob: -4.27254056930542
    9. '   ' → logprob: -4.39754056930542
    10. 'best' → logprob: -4.89754056930542

Token 252: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.0926748588681221
    2. ' edges' → logprob: -2.592674970626831
    3. 'only' → logprob: -5.842674732208252
    4. 'the' → logprob: -6.092674732208252
    5. 'dist' → logprob: -6.342674732208252
    6. 'valid' → logprob: -6.592674732208252
    7. '   ' → logprob: -6.842674732208252
    8. ' the' → logprob: -6.967674732208252
    9. ' only' → logprob: -7.467674732208252
    10. '_edges' → logprob: -7.467674732208252

Token 253: ' that' (ID: 484)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14048224687576294
    2. '=' → logprob: -2.265482187271118
    3. ' that' → logprob: -4.640482425689697
    4. '       ' → logprob: -4.765482425689697
    5. 'that' → logprob: -6.015482425689697
    6. 'with' → logprob: -6.765482425689697
    7. ' for' → logprob: -7.140482425689697
    8. 'for' → logprob: -7.390482425689697
    9. ' with' → logprob: -7.640482425689697
    10. '[:]' → logprob: -7.640482425689697

Token 254: ' can' (ID: 665)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.521555483341217
    2. ' have' → logprob: -1.7715554237365723
    3. 'have' → logprob: -2.3965554237365723
    4. ' can' → logprob: -2.7715554237365723
    5. 'can' → logprob: -3.7715554237365723
    6. ' minimize' → logprob: -4.271555423736572
    7. ' are' → logprob: -4.521555423736572
    8. ' dist' → logprob: -5.146555423736572
    9. 'are' → logprob: -5.646555423736572
    10. '   ' → logprob: -5.896555423736572

Token 255: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.7919507622718811
    2. ' be' → logprob: -1.1669507026672363
    3. 'potential' → logprob: -1.9169507026672363
    4. ' potentially' → logprob: -3.4169507026672363
    5. 'possibly' → logprob: -3.7919507026672363
    6. ' possibly' → logprob: -4.541950702667236
    7. 'part' → logprob: -5.291950702667236
    8. 'appear' → logprob: -5.791950702667236
    9. ' lie' → logprob: -5.791950702667236
    10. 'still' → logprob: -6.416950702667236

Token 256: ' on' (ID: 402)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.29323330521583557
    2. 'on' → logprob: -1.7932332754135132
    3. ' part' → logprob: -2.9182333946228027
    4. 'used' → logprob: -3.6682333946228027
    5. ' on' → logprob: -5.168233394622803
    6. ' used' → logprob: -7.418233394622803
    7. ' ' → logprob: -7.793233394622803
    8. 'in' → logprob: -7.793233394622803
    9. '   ' → logprob: -8.668232917785645
    10. '```' → logprob: -8.918232917785645

Token 257: ' shortest' (ID: 70564)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.28721797466278076
    2. ' the' → logprob: -2.1622180938720703
    3. ' some' → logprob: -2.9122180938720703
    4. ' shortest' → logprob: -3.2872180938720703
    5. 'a' → logprob: -3.7872180938720703
    6. ' any' → logprob: -4.28721809387207
    7. ' an' → logprob: -5.91221809387207
    8. 'some' → logprob: -6.53721809387207
    9. 'the' → logprob: -7.03721809387207
    10. 's' → logprob: -8.03721809387207

Token 258: ' path' (ID: 3104)
  Prédit: ' paths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' paths' → logprob: -0.43937304615974426
    2. 'paths' → logprob: -1.1893730163574219
    3. 'path' → logprob: -3.439373016357422
    4. ' path' → logprob: -4.064373016357422
    5. '_paths' → logprob: -6.564373016357422
    6. '_path' → logprob: -7.939373016357422
    7. '   ' → logprob: -10.439373016357422
    8. '-path' → logprob: -10.689373016357422
    9. '<|end|>' → logprob: -11.189373016357422
    10. ' pathways' → logprob: -11.189373016357422

Token 259: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02884405106306076
    2. ' for' → logprob: -4.528843879699707
    3. '        
' → logprob: -5.153843879699707
    4. '<|end|>' → logprob: -5.403843879699707
    5. ',' → logprob: -6.278843879699707
    6. '
' → logprob: -6.528843879699707
    7. ' edges' → logprob: -6.528843879699707
    8. 's' → logprob: -7.153843879699707
    9. 'for' → logprob: -8.278843879699707
    10. ' in' → logprob: -8.528843879699707

Token 260: ' capital' (ID: 9029)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11275627464056015
    2. ' ' → logprob: -2.8627562522888184
    3. 'source' → logprob: -4.112756252288818
    4. ' source' → logprob: -4.237756252288818
    5. ' node' → logprob: -5.237756252288818
    6. 'node' → logprob: -5.237756252288818
    7. 's' → logprob: -5.737756252288818
    8. ' s' → logprob: -6.487756252288818
    9. 'the' → logprob: -6.737756252288818
    10. 'start' → logprob: -7.612756252288818

Token 261: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04910232126712799
    2. ' for' → logprob: -3.674102306365967
    3. ' to' → logprob: -4.924102306365967
    4. ',' → logprob: -5.549102306365967
    5. '<|end|>' → logprob: -5.924102306365967
    6. 'for' → logprob: -6.049102306365967
    7. '        
' → logprob: -6.049102306365967
    8. '        ' → logprob: -7.049102306365967
    9. '.' → logprob: -7.174102306365967
    10. 's' → logprob: -7.299102306365967

Token 262: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012966678477823734
    2. ' for' → logprob: -5.512966632843018
    3. '        
' → logprob: -5.887966632843018
    4. '<|end|>' → logprob: -6.012966632843018
    5. ' edges' → logprob: -7.137966632843018
    6. '
' → logprob: -7.137966632843018
    7. ',' → logprob: -7.637966632843018
    8. 'for' → logprob: -7.637966632843018
    9. ' to' → logprob: -8.262967109680176
    10. 'edges' → logprob: -8.387967109680176

Token 263: ' valid' (ID: 4529)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -1.3419651985168457
    2. 'for' → logprob: -1.7169651985168457
    3. ' new' → logprob: -1.9669651985168457
    4. 'graph' → logprob: -2.2169651985168457
    5. ' for' → logprob: -2.3419651985168457
    6. '       ' → logprob: -2.7169651985168457
    7. ' graph' → logprob: -3.2169651985168457
    8. 'valid' (adapté à ' valid') → logprob: -3.5919651985168457
    9. 'filtered' → logprob: -4.091965198516846
    10. ' valid' → logprob: -4.216965198516846

Token 264: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.4545390009880066
    2. ' =' → logprob: -1.0795390605926514
    3. '=' → logprob: -3.7045390605926514
    4. '_' → logprob: -7.454538822174072
    5. 'edges' → logprob: -8.95453929901123
    6. '=[]' → logprob: -10.07953929901123
    7. 's' → logprob: -10.45453929901123
    8. ' ' → logprob: -10.82953929901123
    9. '=_' → logprob: -11.07953929901123
    10. 'Edges' → logprob: -11.20453929901123

Token 265: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142784714698792
    2. '=' → logprob: -1.7014278173446655
    3. '=[]' → logprob: -11.201427459716797
    4. '[' → logprob: -15.826427459716797
    5. ' =[' → logprob: -16.076427459716797
    6. '=set' → logprob: -16.076427459716797
    7. '=[]
' → logprob: -16.326427459716797
    8. '＝' → logprob: -16.451427459716797
    9. '[]' → logprob: -16.576427459716797
    10. ',' → logprob: -16.576427459716797

Token 266: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.19485896825790405
    2. 'set' → logprob: -2.069859027862549
    3. ' []' → logprob: -3.694859027862549
    4. ' set' → logprob: -3.819859027862549
    5. '[]
' → logprob: -5.944859027862549
    6. '{' → logprob: -7.569859027862549
    7. '[' → logprob: -7.819859027862549
    8. '[(' → logprob: -8.56985855102539
    9. '{}' → logprob: -9.06985855102539
    10. ' [' → logprob: -9.31985855102539

Token 267: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015730613842606544
    2. ' for' → logprob: -4.265730381011963
    3. 'for' → logprob: -7.265730381011963
    4. '        
' → logprob: -7.765730381011963
    5. '<|end|>' → logprob: -7.890730381011963
    6. '	for' → logprob: -11.515730857849121
    7. '  
' → logprob: -11.515730857849121
    8. '
' → logprob: -11.765730857849121
    9. '   ' → logprob: -12.140730857849121
    10. ',' → logprob: -12.265730857849121

Token 268: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.18173447251319885
    2. ' for' → logprob: -2.181734561920166
    3. '       ' → logprob: -2.931734561920166
    4. '	for' → logprob: -10.556734085083008
    5. 'edges' → logprob: -14.806734085083008
    6. '   ' → logprob: -15.806734085083008
    7. 'from' → logprob: -15.931734085083008
    8. '	' → logprob: -16.431734085083008
    9. 'edge' → logprob: -16.931734085083008
    10. '        
' → logprob: -17.056734085083008

Token 269: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0394321084022522
    2. '(u' → logprob: -3.6644320487976074
    3. ' u' → logprob: -4.414432048797607
    4. ' (' → logprob: -7.414432048797607
    5. '   ' → logprob: -8.789432525634766
    6. 'e' → logprob: -9.289432525634766
    7. 'i' → logprob: -10.414432525634766
    8. 'idx' → logprob: -11.914432525634766
    9. ' ' → logprob: -12.039432525634766
    10. 'edge' → logprob: -12.039432525634766

Token 270: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.2819925844669342
    2. ',' → logprob: -1.4069925546646118
    3. ' ,' → logprob: -7.281992435455322
    4. ' in' → logprob: -9.53199291229248
    5. 'v' → logprob: -10.65699291229248
    6. 'in' → logprob: -10.78199291229248
    7. ',u' → logprob: -11.40699291229248
    8. ',n' → logprob: -12.65699291229248
    9. ',in' → logprob: -12.78199291229248
    10. ',_' → logprob: -13.03199291229248

Token 271: ',d' (ID: 26159)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0819389671087265
    2. ',v' → logprob: -3.0819389820098877
    3. ',c' → logprob: -4.206938743591309
    4. ' ,' → logprob: -5.081938743591309
    5. ',w' → logprob: -5.456938743591309
    6. ',d' → logprob: -5.456938743591309
    7. ',u' → logprob: -6.456938743591309
    8. ' in' → logprob: -8.081938743591309
    9. ',in' → logprob: -8.081938743591309
    10. ',e' → logprob: -8.581938743591309

Token 272: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.000495605927426368
    2. ',' → logprob: -7.625495433807373
    3. ' ,' → logprob: -12.375495910644531
    4. 'c' → logprob: -13.000495910644531
    5. ',_' → logprob: -14.500495910644531
    6. ',w' → logprob: -15.875495910644531
    7. ',a' → logprob: -16.50049591064453
    8. ',v' → logprob: -16.50049591064453
    9. ',C' → logprob: -16.75049591064453
    10. ',d' → logprob: -17.25049591064453

Token 273: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10032065212726593
    2. 'in' → logprob: -2.35032057762146
    3. ',' → logprob: -9.225320816040039
    4. ' ' → logprob: -12.475320816040039
    5. ' ,' → logprob: -12.475320816040039
    6. ',in' → logprob: -12.725320816040039
    7. '   ' → logprob: -13.725320816040039
    8. '  ' → logprob: -14.350320816040039
    9. '	in' → logprob: -14.350320816040039
    10. 'n' → logprob: -14.725320816040039

Token 274: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.0010336418636143208
    2. ' edges' → logprob: -6.876033782958984
    3. '   ' → logprob: -15.001033782958984
    4. '(edges' → logprob: -15.626033782958984
    5. '.edges' → logprob: -16.251033782958984
    6. 'edge' → logprob: -16.251033782958984
    7. 'ed' → logprob: -17.626033782958984
    8. ' ' → logprob: -17.626033782958984
    9. '_edges' → logprob: -17.751033782958984
    10. 'Edges' → logprob: -18.501033782958984

Token 275: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22601093351840973
    2. ':
' → logprob: -1.6010109186172485
    3. '       ' → logprob: -8.476011276245117
    4. ',' → logprob: -8.601011276245117
    5. '):
' → logprob: -9.726011276245117
    6. '           ' → logprob: -9.851011276245117
    7. '=' → logprob: -10.976011276245117
    8. '   ' → logprob: -11.101011276245117
    9. '<|end|>' → logprob: -11.226011276245117
    10. ':

' → logprob: -11.351011276245117

Token 276: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5152854919433594
    2. '           ' → logprob: -1.0152854919433594
    3. '<|end|>' → logprob: -3.6402854919433594
    4. '   ' → logprob: -5.640285491943359
    5. ' if' → logprob: -5.890285491943359
    6. '<|end|>' → logprob: -6.640285491943359
    7. '
' → logprob: -6.765285491943359
    8. ',' → logprob: -6.765285491943359
    9. '        
' → logprob: -7.015285491943359
    10. '```' → logprob: -7.140285491943359

Token 277: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9221485257148743
    2. '           ' → logprob: -1.4221484661102295
    3. 'if' (adapté à ' if') → logprob: -1.5471484661102295
    4. ' if' → logprob: -1.9221484661102295
    5. '   ' → logprob: -6.547148704528809
    6. '<|end|>' → logprob: -8.297148704528809
    7. '```' → logprob: -9.422148704528809
    8. ' ' → logprob: -10.172148704528809
    9. 'If' → logprob: -10.922148704528809
    10. ',' → logprob: -10.922148704528809

Token 278: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00017159747949335724
    2. 'abs' → logprob: -9.375171661376953
    3. ' dist' → logprob: -10.125171661376953
    4. '   ' → logprob: -10.250171661376953
    5. '(dist' → logprob: -11.625171661376953
    6. '	dist' → logprob: -14.125171661376953
    7. '  ' → logprob: -14.375171661376953
    8. ' ' → logprob: -15.125171661376953
    9. 'd' → logprob: -15.250171661376953
    10. '       ' → logprob: -16.250171661376953

Token 279: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.0019985849503427744
    2. '[v' → logprob: -6.251998424530029
    3. 'u' → logprob: -9.626998901367188
    4. '[' → logprob: -13.251998901367188
    5. 'v' → logprob: -14.751998901367188
    6. '=u' → logprob: -14.876998901367188
    7. '	u' → logprob: -15.001998901367188
    8. '   ' → logprob: -15.751998901367188
    9. ')' → logprob: -16.001998901367188
    10. ' [' → logprob: -16.126998901367188

Token 280: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00416850671172142
    2. ' +' → logprob: -5.504168510437012
    3. '[u' → logprob: -10.254168510437012
    4. '==' → logprob: -10.879168510437012
    5. ']+' → logprob: -11.254168510437012
    6. ']' → logprob: -11.879168510437012
    7. '+c' → logprob: -12.004168510437012
    8. '+d' → logprob: -12.254168510437012
    9. ')' → logprob: -13.629168510437012
    10. '[' → logprob: -14.004168510437012

Token 281: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006962704472243786
    2. ' +' → logprob: -5.006962776184082
    3. '==' → logprob: -8.631962776184082
    4. '+d' → logprob: -9.756962776184082
    5. '+c' → logprob: -11.631962776184082
    6. '=' → logprob: -14.756962776184082
    7. ' ==' → logprob: -14.756962776184082
    8. '[u' → logprob: -15.756962776184082
    9. '[' → logprob: -15.881962776184082
    10. '+=' → logprob: -15.881962776184082

Token 282: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0019286326132714748
    2. ' d' → logprob: -6.251928806304932
    3. ' ' → logprob: -18.876928329467773
    4. '           ' → logprob: -19.126928329467773
    5. '<|end|>' → logprob: -19.251928329467773
    6. '   ' → logprob: -19.626928329467773
    7. '  ' → logprob: -19.876928329467773
    8. '	d' → logprob: -20.126928329467773
    9. ')d' → logprob: -20.501928329467773
    10. '_d' → logprob: -20.501928329467773

Token 283: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.004085643216967583
    2. ' ==' → logprob: -5.504085540771484
    3. '<=' → logprob: -12.379085540771484
    4. '==
' → logprob: -13.129085540771484
    5. '=' → logprob: -14.379085540771484
    6. '===' → logprob: -15.004085540771484
    7. ')==' → logprob: -16.629085540771484
    8. ']==' → logprob: -16.879085540771484
    9. ' <=' → logprob: -18.504085540771484
    10. '()==' → logprob: -18.629085540771484

Token 284: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0002613358374219388
    2. ' dist' → logprob: -8.250261306762695
    3. '	dist' → logprob: -19.250261306762695
    4. '(dist' → logprob: -21.125261306762695
    5. '   ' → logprob: -21.250261306762695
    6. '.dist' → logprob: -23.375261306762695
    7. 'Dist' → logprob: -23.625261306762695
    8. '_dist' → logprob: -24.000261306762695
    9. 'dest' → logprob: -24.625261306762695
    10. 'd' → logprob: -25.625261306762695

Token 285: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -6.2729995988775045e-06
    2. 'v' → logprob: -12.000006675720215
    3. '[u' → logprob: -19.3750057220459
    4. '(v' → logprob: -19.6250057220459
    5. '<v' → logprob: -20.8750057220459
    6. '[' → logprob: -21.6250057220459
    7. ' v' → logprob: -21.8750057220459
    8. '	v' → logprob: -22.6250057220459
    9. '```' → logprob: -23.7500057220459
    10. '[
' → logprob: -23.8750057220459

Token 286: ']' (ID: 60)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.01153710950165987
    2. ')' → logprob: -5.386537075042725
    3. ':' → logprob: -5.511537075042725
    4. ' and' → logprob: -6.386537075042725
    5. '):' → logprob: -7.011537075042725
    6. 'or' → logprob: -8.511537551879883
    7. ']' → logprob: -10.636537551879883
    8. ' ' → logprob: -11.886537551879883
    9. '}' → logprob: -12.011537551879883
    10. '   ' → logprob: -12.386537551879883

Token 287: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0006167700630612671
    2. 'or' → logprob: -7.875616550445557
    3. ' and' → logprob: -8.500617027282715
    4. ':' → logprob: -10.875617027282715
    5. '	or' → logprob: -11.750617027282715
    6. ' ' → logprob: -12.625617027282715
    7. 'and' → logprob: -13.250617027282715
    8. '           ' → logprob: -14.625617027282715
    9. '       ' → logprob: -15.500617027282715
    10. '    ' → logprob: -15.625617027282715

Token 288: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.0013270224444568157
    2. 'dist' → logprob: -6.626327037811279
    3. '(dist' → logprob: -14.251326560974121
    4. '	dist' → logprob: -15.126326560974121
    5. '    ' → logprob: -17.501327514648438
    6. '   ' → logprob: -17.626327514648438
    7. '           ' → logprob: -18.126327514648438
    8. ' ' → logprob: -18.126327514648438
    9. '.dist' → logprob: -18.251327514648438
    10. ' ' → logprob: -18.376327514648438

Token 289: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0001029471677611582
    2. '[u' → logprob: -9.500102996826172
    3. 'v' → logprob: -10.500102996826172
    4. '[' → logprob: -15.625102996826172
    5. '   ' → logprob: -16.750102996826172
    6. '	v' → logprob: -17.375102996826172
    7. '(v' → logprob: -17.375102996826172
    8. '<v' → logprob: -17.500102996826172
    9. '```' → logprob: -17.875102996826172
    10. ' v' → logprob: -18.375102996826172

Token 290: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.08896542340517044
    2. '+' → logprob: -2.46396541595459
    3. ')' → logprob: -11.46396541595459
    4. ' ' → logprob: -12.33896541595459
    5. '+c' → logprob: -12.46396541595459
    6. '[' → logprob: -13.33896541595459
    7. '   ' → logprob: -13.46396541595459
    8. ')+' → logprob: -13.83896541595459
    9. '    ' → logprob: -14.71396541595459
    10. '>' → logprob: -14.96396541595459

Token 291: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.22541746497154236
    2. '+' → logprob: -1.6004174947738647
    3. '+c' → logprob: -13.350417137145996
    4. ' ' → logprob: -13.475417137145996
    5. '[' → logprob: -14.225417137145996
    6. '+d' → logprob: -15.100417137145996
    7. ')' → logprob: -15.975417137145996
    8. ' +
' → logprob: -16.100418090820312
    9. ' ' → logprob: -16.225418090820312
    10. '>' → logprob: -16.475418090820312

Token 292: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.25192955136299133
    2. 'd' → logprob: -1.501929521560669
    3. ' ' → logprob: -15.75192928314209
    4. '```' → logprob: -16.001930236816406
    5. '	d' → logprob: -16.376930236816406
    6. '_d' → logprob: -17.751930236816406
    7. ')d' → logprob: -17.751930236816406
    8. '<|end|>' → logprob: -18.001930236816406
    9. '[' → logprob: -18.314430236816406
    10. '           ' → logprob: -18.626930236816406

Token 293: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07889033854007721
    2. '==' → logprob: -2.578890323638916
    3. '=' → logprob: -15.453890800476074
    4. ')==' → logprob: -16.078889846801758
    5. '===' → logprob: -16.328889846801758
    6. ' =' → logprob: -16.328889846801758
    7. ']==' → logprob: -16.578889846801758
    8. ' ' → logprob: -17.453889846801758
    9. ')' → logprob: -17.703889846801758
    10. '==
' → logprob: -18.203889846801758

Token 294: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.02975963056087494
    2. 'dist' → logprob: -3.529759645462036
    3. ' v' → logprob: -12.029759407043457
    4. 'v' → logprob: -13.904759407043457
    5. ' u' → logprob: -14.029759407043457
    6. 'u' → logprob: -14.279759407043457
    7. '(dist' → logprob: -14.904759407043457
    8. 'd' → logprob: -15.529759407043457
    9. '	dist' → logprob: -16.279760360717773
    10. '[' → logprob: -17.029760360717773

Token 295: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.5769645571708679
    2. 'u' → logprob: -0.8269645571708679
    3. ' u' → logprob: -7.701964378356934
    4. '           ' → logprob: -9.076964378356934
    5. '[' → logprob: -9.076964378356934
    6. '	u' → logprob: -9.201964378356934
    7. '       ' → logprob: -10.201964378356934
    8. '<u' → logprob: -10.576964378356934
    9. ']' → logprob: -10.701964378356934
    10. '(u' → logprob: -10.826964378356934

Token 296: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06609278172254562
    2. ':' → logprob: -2.9410927295684814
    3. '):
' → logprob: -4.5660929679870605
    4. ')' → logprob: -8.066092491149902
    5. ' ):' → logprob: -8.691092491149902
    6. ']:' → logprob: -9.066092491149902
    7. '           ' → logprob: -10.316092491149902
    8. ':
' → logprob: -10.316092491149902
    9. '       ' → logprob: -10.441092491149902
    10. ''):' → logprob: -10.941092491149902

Token 297: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5525373220443726
    2. '               ' → logprob: -1.0525373220443726
    3. ' valid' → logprob: -2.802537441253662
    4. ':
' → logprob: -4.927537441253662
    5. ':' → logprob: -5.427537441253662
    6. '(valid' → logprob: -6.927537441253662
    7. 'valid' → logprob: -7.177537441253662
    8. '       ' → logprob: -7.802537441253662
    9. ',' → logprob: -7.927537441253662
    10. ' and' → logprob: -8.177536964416504

Token 298: ' valid' (ID: 4529)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' (adapté à ' valid') → logprob: -0.14500141143798828
    2. ' valid' → logprob: -2.0200014114379883
    3. '           ' → logprob: -6.145001411437988
    4. '               ' → logprob: -8.895001411437988
    5. '   ' → logprob: -10.770001411437988
    6. '	valid' → logprob: -11.520001411437988
    7. '                   ' → logprob: -11.895001411437988
    8. '
' → logprob: -13.520001411437988
    9. 'c' → logprob: -14.270001411437988
    10. '(valid' → logprob: -14.520001411437988

Token 299: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -6.153795766294934e-06
    2. ' _' → logprob: -12.875005722045898
    3. '_' → logprob: -13.125005722045898
    4. '_lines' → logprob: -15.250005722045898
    5. ')_' → logprob: -15.375005722045898
    6. '```' → logprob: -16.0000057220459
    7. '_ed' → logprob: -16.1250057220459
    8. '-_' → logprob: -16.6250057220459
    9. '_faces' → logprob: -16.7500057220459
    10. '_s' → logprob: -16.7500057220459

Token 300: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.06226567551493645
    2. '.' → logprob: -2.812265634536743
    3. ' .' → logprob: -8.187265396118164
    4. ').' → logprob: -12.062265396118164
    5. '.add' → logprob: -12.187265396118164
    6. '.ap' → logprob: -13.312265396118164
    7. '].' → logprob: -13.437265396118164
    8. '.app' → logprob: -13.687265396118164
    9. '.push' → logprob: -13.937265396118164
    10. '.extend' → logprob: -14.062265396118164

Token 301: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00021867557370569557
    2. '(u' → logprob: -8.500218391418457
    3. '(' → logprob: -11.125218391418457
    4. '(c' → logprob: -15.750218391418457
    5. '(((' → logprob: -16.000219345092773
    6. '(v' → logprob: -17.375219345092773
    7. '([' → logprob: -17.375219345092773
    8. ' ((' → logprob: -18.000219345092773
    9. '(
' → logprob: -18.375219345092773
    10. '(f' → logprob: -19.250219345092773

Token 302: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0036858171224594116
    2. 'c' → logprob: -5.75368595123291
    3. ' u' → logprob: -7.75368595123291
    4. 'v' → logprob: -10.25368595123291
    5. '(u' → logprob: -11.37868595123291
    6. '   ' → logprob: -11.37868595123291
    7. 'd' → logprob: -12.50368595123291
    8. ')' → logprob: -12.50368595123291
    9. ' c' → logprob: -12.87868595123291
    10. '[u' → logprob: -13.81618595123291

Token 303: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.006744616664946079
    2. ',' → logprob: -5.006744384765625
    3. ',u' → logprob: -11.256744384765625
    4. ',c' → logprob: -12.131744384765625
    5. 'v' → logprob: -12.381744384765625
    6. ' ,' → logprob: -12.506744384765625
    7. ')' → logprob: -14.381744384765625
    8. ',
' → logprob: -15.006744384765625
    9. ',b' → logprob: -15.131744384765625
    10. '-' → logprob: -15.506744384765625

Token 304: ',d' (ID: 26159)
  Prédit: ',d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.36839810013771057
    2. ',c' → logprob: -1.6183980703353882
    3. ',' → logprob: -2.7433981895446777
    4. '))' → logprob: -3.1183981895446777
    5. ' ,' → logprob: -6.868398189544678
    6. ')' → logprob: -9.49339771270752
    7. '))
' → logprob: -9.99339771270752
    8. ' ))' → logprob: -10.36839771270752
    9. 'd' → logprob: -10.61839771270752
    10. ',b' → logprob: -10.99339771270752

Token 305: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.001966816373169422
    2. ',' → logprob: -6.251966953277588
    3. ')' → logprob: -10.87696647644043
    4. ' ,' → logprob: -11.75196647644043
    5. '))' → logprob: -11.87696647644043
    6. 'c' → logprob: -13.00196647644043
    7. ')c' → logprob: -14.62696647644043
    8. ',
' → logprob: -14.75196647644043
    9. ',b' → logprob: -15.50196647644043
    10. '),' → logprob: -15.50196647644043

Token 306: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012678056373260915
    2. ')
' → logprob: -9.000126838684082
    3. '))' → logprob: -13.250126838684082
    4. '       ' → logprob: -14.000126838684082
    5. ' )' → logprob: -14.625126838684082
    6. ')

' → logprob: -16.375125885009766
    7. '               ' → logprob: -16.875125885009766
    8. ')}' → logprob: -17.000125885009766
    9. ')
' → logprob: -17.000125885009766
    10. '           ' → logprob: -17.250125885009766

Token 307: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5424643158912659
    2. '<|end|>' → logprob: -0.9174643158912659
    3. '
' → logprob: -4.667464256286621
    4. '        
' → logprob: -5.167464256286621
    5. ',' → logprob: -6.417464256286621
    6. '<|end|>' → logprob: -7.292464256286621
    7. ')' → logprob: -7.792464256286621
    8. 'valid' → logprob: -8.292464256286621
    9. ' valid' → logprob: -8.667464256286621
    10. '  
' → logprob: -9.167464256286621

Token 308: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.425822377204895
    2. 'graph' → logprob: -3.1758222579956055
    3. 'valid' → logprob: -3.4258222579956055
    4. '        
' → logprob: -3.6758222579956055
    5. 'mst' → logprob: -3.6758222579956055
    6. ' dist' → logprob: -3.6758222579956055
    7. 'max' → logprob: -4.0508222579956055
    8. 'dp' → logprob: -4.1758222579956055
    9. 'dist' → logprob: -4.1758222579956055
    10. 'from' → logprob: -4.4258222579956055

Token 309: ' Build' (ID: 10885)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -1.0237948894500732
    2. '#' → logprob: -1.3987948894500732
    3. 'graph' → logprob: -1.7737948894500732
    4. 'from' → logprob: -2.5237948894500732
    5. 'import' → logprob: -2.8987948894500732
    6. 'adj' → logprob: -3.7737948894500732
    7. 'cost' → logprob: -4.773795127868652
    8. 'dist' → logprob: -5.148795127868652
    9. 'max' → logprob: -5.148795127868652
    10. 'uf' → logprob: -5.273795127868652

Token 310: ' graph' (ID: 7465)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.8174304366111755
    2. 'new' → logprob: -1.5674304962158203
    3. 'graph' → logprob: -1.9424304962158203
    4. ' new' → logprob: -3.1924304962158203
    5. 'adj' → logprob: -3.6924304962158203
    6. ' valid' → logprob: -4.19243049621582
    7. 'mst' → logprob: -4.19243049621582
    8. ' graph' → logprob: -4.44243049621582
    9. 're' → logprob: -4.44243049621582
    10. 'rev' → logprob: -4.69243049621582

Token 311: ' with' (ID: 483)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07854370772838593
    2. 'valid' → logprob: -3.5785436630249023
    3. '       ' → logprob: -3.8285436630249023
    4. '=' → logprob: -4.203543663024902
    5. '_valid' → logprob: -5.703543663024902
    6. 'for' → logprob: -6.203543663024902
    7. '=[' → logprob: -7.078543663024902
    8. '=[]' → logprob: -7.453543663024902
    9. ' valid' → logprob: -7.578543663024902
    10. 'graph' → logprob: -7.578543663024902

Token 312: ' valid' (ID: 4529)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.1623769998550415
    2. ' valid' → logprob: -2.037376880645752
    3. ' [[]' → logprob: -5.412376880645752
    4. '[' → logprob: -5.787376880645752
    5. 'N' → logprob: -5.912376880645752
    6. 'cost' → logprob: -6.662376880645752
    7. '[N' → logprob: -6.662376880645752
    8. '[]' → logprob: -7.037376880645752
    9. '[u' → logprob: -7.162376880645752
    10. ' N' → logprob: -7.662376880645752

Token 313: ' edges' (ID: 22569)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.015438711270689964
    2. 'edges' → logprob: -4.265438556671143
    3. ' edges' → logprob: -7.015438556671143
    4. 'valid' → logprob: -9.0154390335083
    5. 'graph' → logprob: -9.1404390335083
    6. '_nodes' → logprob: -10.6404390335083
    7. '```' → logprob: -10.7654390335083
    8. '_graph' → logprob: -10.7654390335083
    9. 'Edges' → logprob: -11.1404390335083
    10. '_valid' → logprob: -11.3904390335083

Token 314: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038161057978868484
    2. 'graph' → logprob: -4.038161277770996
    3. ' graph' → logprob: -4.413161277770996
    4. '
' → logprob: -6.038161277770996
    5. '        
' → logprob: -6.288161277770996
    6. ' valid' → logprob: -6.538161277770996
    7. 'valid' → logprob: -7.163161277770996
    8. ',' → logprob: -7.413161277770996
    9. ' for' → logprob: -8.788161277770996
    10. '(graph' → logprob: -9.788161277770996

Token 315: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022577524185180664
    2. 'graph' → logprob: -5.022577285766602
    3. 'valid' → logprob: -5.397577285766602
    4. ' graph' → logprob: -5.647577285766602
    5. ' valid' → logprob: -5.897577285766602
    6. '        
' → logprob: -6.397577285766602
    7. 'from' → logprob: -7.272577285766602
    8. 'new' → logprob: -7.772577285766602
    9. 'tree' → logprob: -8.022577285766602
    10. ' from' → logprob: -8.397577285766602

Token 316: ' graph' (ID: 7465)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.9124141931533813
    2. 'graph' (adapté à ' graph') → logprob: -1.1624141931533813
    3. ' valid' → logprob: -1.9124141931533813
    4. ' graph' → logprob: -2.537414073944092
    5. '       ' → logprob: -3.287414073944092
    6. 'new' → logprob: -4.537414073944092
    7. ' new' → logprob: -5.412414073944092
    8. 'adj' → logprob: -6.912414073944092
    9. '   ' → logprob: -7.162414073944092
    10. 'short' → logprob: -7.537414073944092

Token 317: '2' (ID: 17)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740963280200958
    2. '=' → logprob: -0.9740962982177734
    3. '=[' → logprob: -11.099096298217773
    4. '[' → logprob: -13.599096298217773
    5. ' =[' → logprob: -13.849096298217773
    6. 'graph' → logprob: -14.349096298217773
    7. '2' → logprob: -15.724096298217773
    8. '=[[' → logprob: -15.849096298217773
    9. '＝' → logprob: -15.849096298217773
    10. '=[]' → logprob: -16.224096298217773

Token 318: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602274775505066
    2. '=' → logprob: -1.9102275371551514
    3. '[' → logprob: -13.41022777557373
    4. '=[' → logprob: -13.91022777557373
    5. ' =[' → logprob: -14.91022777557373
    6. ' ' → logprob: -15.91022777557373
    7. '=[]' → logprob: -16.160226821899414
    8. '＝' → logprob: -16.535226821899414
    9. '=[[' → logprob: -16.785226821899414
    10. ')' → logprob: -17.410226821899414

Token 319: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.25194308161735535
    2. ' [[]' → logprob: -1.5019431114196777
    3. '   ' → logprob: -11.50194263458252
    4. '[[' → logprob: -12.62694263458252
    5. '[['' → logprob: -14.62694263458252
    6. '```' → logprob: -17.001943588256836
    7. ' ' → logprob: -17.126943588256836
    8. '       ' → logprob: -17.251943588256836
    9. '    ' → logprob: -18.001943588256836
    10. '{' → logprob: -18.001943588256836

Token 320: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11313416063785553
    2. 'for' → logprob: -2.2381341457366943
    3. '(n' → logprob: -8.988134384155273
    4. '(N' → logprob: -9.613134384155273
    5. '[N' → logprob: -10.113134384155273
    6. ' (' → logprob: -10.738134384155273
    7. '[n' → logprob: -11.363134384155273
    8. '       ' → logprob: -11.488134384155273
    9. '[' → logprob: -11.738134384155273
    10. '=' → logprob: -12.488134384155273

Token 321: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0017526530427858233
    2. ' _' → logprob: -6.376752853393555
    3. '_n' → logprob: -11.376752853393555
    4. '_N' → logprob: -11.626752853393555
    5. ' in' → logprob: -11.876752853393555
    6. ' (' → logprob: -12.001752853393555
    7. '_(' → logprob: -12.126752853393555
    8. '_=' → logprob: -12.626752853393555
    9. '(n' → logprob: -13.251752853393555
    10. '(_' → logprob: -13.876752853393555

Token 322: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.048681385815143585
    2. ' range' → logprob: -3.0486814975738525
    3. '(range' → logprob: -9.298681259155273
    4. 'in' → logprob: -13.423681259155273
    5. ' in' → logprob: -14.298681259155273
    6. 'def' → logprob: -15.548681259155273
    7. ' ' → logprob: -16.923681259155273
    8. 'ange' → logprob: -17.298681259155273
    9. ' (' → logprob: -17.548681259155273
    10. '_range' → logprob: -17.673681259155273

Token 323: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4740903675556183
    2. ' range' → logprob: -0.9740903377532959
    3. '(range' → logprob: -11.224090576171875
    4. '(N' → logprob: -18.099090576171875
    5. '	range' → logprob: -18.099090576171875
    6. '   ' → logprob: -18.474090576171875
    7. ' ' → logprob: -18.599090576171875
    8. ' (' → logprob: -19.849090576171875
    9. '_range' → logprob: -20.224090576171875
    10. '  ' → logprob: -20.349090576171875

Token 324: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00013262155698612332
    2. '(n' → logprob: -9.12513256072998
    3. 'N' → logprob: -11.00013256072998
    4. ' (' → logprob: -12.25013256072998
    5. '(' → logprob: -14.25013256072998
    6. '(len' → logprob: -15.00013256072998
    7. '((' → logprob: -15.12513256072998
    8. '   ' → logprob: -15.37513256072998
    9. 'range' → logprob: -15.50013256072998
    10. ' N' → logprob: -16.250133514404297

Token 325: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.2664456789934775e-06
    2. ' +' → logprob: -14.125000953674316
    3. '+
' → logprob: -14.625000953674316
    4. ')]
' → logprob: -17.125001907348633
    5. ')]' → logprob: -17.375001907348633
    6. '+n' → logprob: -18.750001907348633
    7. ')' → logprob: -19.250001907348633
    8. '+)' → logprob: -19.375001907348633
    9. '1' → logprob: -19.625001907348633
    10. ')+' → logprob: -19.875001907348633

Token 326: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -13.000003814697266
    3. '   ' → logprob: -14.500003814697266
    4. '(' → logprob: -15.625003814697266
    5. ')' → logprob: -15.875003814697266
    6. '       ' → logprob: -16.125003814697266
    7. '+' → logprob: -17.000003814697266
    8. '(N' → logprob: -17.250003814697266
    9. '```' → logprob: -17.500003814697266
    10. 'N' → logprob: -17.500003814697266

Token 327: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.581488847732544
    2. ']
' → logprob: -0.831488847732544
    3. ')]' → logprob: -5.331488609313965
    4. ')' → logprob: -7.706488609313965
    5. ')]
' → logprob: -8.706488609313965
    6. ')
' → logprob: -10.206488609313965
    7. ']
' → logprob: -10.456488609313965
    8. '       ' → logprob: -11.331488609313965
    9. ']

' → logprob: -12.956488609313965
    10. '   ' → logprob: -13.831488609313965

Token 328: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.135819760151207e-05
    2. ' for' → logprob: -10.25007152557373
    3. 'for' → logprob: -10.37507152557373
    4. '   ' → logprob: -12.75007152557373
    5. '<|end|>' → logprob: -13.62507152557373
    6. '        
' → logprob: -14.62507152557373
    7. '```' → logprob: -16.500070571899414
    8. '	for' → logprob: -17.000070571899414
    9. '	   ' → logprob: -17.875070571899414
    10. '           ' → logprob: -18.000070571899414

Token 329: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03727356344461441
    2. 'for' (adapté à ' for') → logprob: -3.662273645401001
    3. ' for' → logprob: -4.537273406982422
    4. '```' → logprob: -8.912273406982422
    5. '	for' → logprob: -10.037273406982422
    6. '   ' → logprob: -10.537273406982422
    7. '	' → logprob: -13.287273406982422
    8. '	   ' → logprob: -13.537273406982422
    9. '           ' → logprob: -13.662273406982422
    10. '
' → logprob: -14.412273406982422

Token 330: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.20145291090011597
    2. ' u' → logprob: -1.7014529705047607
    3. '(u' → logprob: -10.82645320892334
    4. '   ' → logprob: -10.95145320892334
    5. '	u' → logprob: -13.70145320892334
    6. ' (' → logprob: -15.07645320892334
    7. '_u' → logprob: -15.95145320892334
    8. ' ' → logprob: -16.201452255249023
    9. 'x' → logprob: -16.201452255249023
    10. '[u' → logprob: -16.326452255249023

Token 331: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.0011761783389374614
    2. ',' → logprob: -6.751176357269287
    3. ' ,' → logprob: -12.126175880432129
    4. ',u' → logprob: -15.501175880432129
    5. ',(' → logprob: -15.626175880432129
    6. ',w' → logprob: -17.376176834106445
    7. 'v' → logprob: -18.376176834106445
    8. ',y' → logprob: -18.626176834106445
    9. ',x' → logprob: -19.376176834106445
    10. ',t' → logprob: -19.751176834106445

Token 332: ',d' (ID: 26159)
  Prédit: ',v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.7576485872268677
    2. ',' → logprob: -1.3826485872268677
    3. ',d' → logprob: -1.6326485872268677
    4. ',(' → logprob: -3.257648468017578
    5. ',c' → logprob: -4.132648468017578
    6. ' ,' → logprob: -4.132648468017578
    7. ',u' → logprob: -4.507648468017578
    8. ' in' → logprob: -6.257648468017578
    9. ',w' → logprob: -8.257648468017578
    10. ',val' → logprob: -8.257648468017578

Token 333: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.5832067728042603
    2. ',(' → logprob: -0.8332067728042603
    3. ',' → logprob: -4.958206653594971
    4. ',[' → logprob: -9.333207130432129
    5. ' ,' → logprob: -9.458207130432129
    6. '(c' → logprob: -11.458207130432129
    7. ',d' → logprob: -11.958207130432129
    8. ',_' → logprob: -12.083207130432129
    9. ',w' → logprob: -12.083207130432129
    10. ',v' → logprob: -12.583207130432129

Token 334: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026308773085474968
    2. 'in' → logprob: -3.65130877494812
    3. ',' → logprob: -12.1513090133667
    4. '   ' → logprob: -13.5263090133667
    5. ' ' → logprob: -14.4013090133667
    6. '  ' → logprob: -15.2763090133667
    7. 'import' → logprob: -15.5263090133667
    8. '	in' → logprob: -15.6513090133667
    9. 'graph' → logprob: -15.7763090133667
    10. ' ,' → logprob: -16.026308059692383

Token 335: ' valid' (ID: 4529)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.014168089255690575
    2. ' valid' → logprob: -4.2641682624816895
    3. '(valid' → logprob: -12.764167785644531
    4. 'edges' → logprob: -14.264167785644531
    5. '[(' → logprob: -14.764167785644531
    6. ' edges' → logprob: -15.639167785644531
    7. '	valid' → logprob: -15.764167785644531
    8. 'graph' → logprob: -15.889167785644531
    9. '   ' → logprob: -16.01416778564453
    10. ' ' → logprob: -17.38916778564453

Token 336: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.000603668624535203
    2. 'edges' → logprob: -7.750603675842285
    3. 'graph' → logprob: -9.250603675842285
    4. 'Edges' → logprob: -10.000603675842285
    5. ',' → logprob: -11.625603675842285
    6. '   ' → logprob: -12.625603675842285
    7. '(graph' → logprob: -13.000603675842285
    8. '```' → logprob: -13.125603675842285
    9. ' edges' → logprob: -13.375603675842285
    10. '2' → logprob: -13.500603675842285

Token 337: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5819196701049805
    2. ':
' → logprob: -0.8319196701049805
    3. '   ' → logprob: -5.4569196701049805
    4. '       ' → logprob: -7.4569196701049805
    5. '.append' → logprob: -7.8319196701049805
    6. '           ' → logprob: -7.8319196701049805
    7. '):
' → logprob: -8.83191967010498
    8. ',' → logprob: -9.20691967010498
    9. ':
' → logprob: -10.45691967010498
    10. ' :
' → logprob: -11.83191967010498

Token 338: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023556524887681007
    2. '   ' → logprob: -3.7735564708709717
    3. '       ' → logprob: -8.14855670928955
    4. '	       ' → logprob: -11.52355670928955
    5. '	graph' → logprob: -12.77355670928955
    6. 'graph' → logprob: -13.02355670928955
    7. '	   ' → logprob: -13.39855670928955
    8. '```' → logprob: -13.52355670928955
    9. ' graph' → logprob: -13.64855670928955
    10. '          ' → logprob: -14.77355670928955

Token 339: ' graph' (ID: 7465)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.013068437576294
    2. 'graph' (adapté à ' graph') → logprob: -1.388068437576294
    3. ' graph' → logprob: -1.513068437576294
    4. '   ' → logprob: -2.013068437576294
    5. '       ' → logprob: -3.513068437576294
    6. '	graph' → logprob: -6.013068199157715
    7. '               ' → logprob: -6.763068199157715
    8. ' ' → logprob: -10.013068199157715
    9. ' if' → logprob: -10.888068199157715
    10. '    ' → logprob: -11.638068199157715

Token 340: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.8206473871250637e-05
    2. '[u' → logprob: -10.500028610229492
    3. '[' → logprob: -15.000028610229492
    4. '[v' → logprob: -15.750028610229492
    5. '   ' → logprob: -16.125028610229492
    6. '２' → logprob: -17.750028610229492
    7. '```' → logprob: -17.875028610229492
    8. '[user' → logprob: -18.000028610229492
    9. '₂' → logprob: -18.625028610229492
    10. '       ' → logprob: -18.875028610229492

Token 341: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: 0.0
    2. '[v' → logprob: -17.0
    3. '   ' → logprob: -17.125
    4. ' [' → logprob: -17.625
    5. '[' → logprob: -18.75
    6. 'u' → logprob: -20.0
    7. '```' → logprob: -20.0
    8. '       ' → logprob: -20.625
    9. '[a' → logprob: -20.75
    10. '[user' → logprob: -20.875

Token 342: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00016539888747502118
    2. '.append' → logprob: -9.625164985656738
    3. '.' → logprob: -9.750164985656738
    4. ').' → logprob: -10.375164985656738
    5. '   ' → logprob: -12.125164985656738
    6. ' ].' → logprob: -13.000164985656738
    7. ']' → logprob: -14.000164985656738
    8. '           ' → logprob: -14.250164985656738
    9. '       ' → logprob: -15.625164985656738
    10. ' .' → logprob: -16.250165939331055

Token 343: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.9361264946837764e-07
    2. '.append' → logprob: -16.25
    3. ' append' → logprob: -17.875
    4. 'app' → logprob: -18.625
    5. 'appen' → logprob: -18.75
    6. 'Append' → logprob: -21.25
    7. '_append' → logprob: -21.375
    8. 'push' → logprob: -22.0
    9. 'pend' → logprob: -22.625
    10. '	append' → logprob: -22.75

Token 344: '((' (ID: 2054)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.20142191648483276
    2. '((' → logprob: -1.7014219760894775
    3. '(' → logprob: -11.951421737670898
    4. ' (' → logprob: -13.201421737670898
    5. '   ' → logprob: -16.0764217376709
    6. 'v' → logprob: -16.4514217376709
    7. '[(' → logprob: -16.8264217376709
    8. '(V' → logprob: -17.9514217376709
    9. '(u' → logprob: -18.2014217376709
    10. '(b' → logprob: -18.8264217376709

Token 345: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -2.339278580620885e-06
    2. ' v' → logprob: -13.375001907348633
    3. '   ' → logprob: -14.875001907348633
    4. 'c' → logprob: -16.250001907348633
    5. '	v' → logprob: -16.750001907348633
    6. ')v' → logprob: -16.750001907348633
    7. '(v' → logprob: -16.875001907348633
    8. 'u' → logprob: -17.875001907348633
    9. '    ' → logprob: -18.250001907348633
    10. ',v' → logprob: -18.625001907348633

Token 346: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.3541414141654968
    2. ',d' → logprob: -1.3541414737701416
    3. ',' → logprob: -3.2291414737701416
    4. ' ,' → logprob: -7.7291412353515625
    5. 'c' → logprob: -11.854141235351562
    6. ',b' → logprob: -12.229141235351562
    7. 'd' → logprob: -12.604141235351562
    8. '   ' → logprob: -13.354141235351562
    9. ',v' → logprob: -14.229141235351562
    10. ',(' → logprob: -14.354141235351562

Token 347: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.22556836903095245
    2. '))
' → logprob: -1.600568413734436
    3. ' ))' → logprob: -9.475568771362305
    4. ' ))
' → logprob: -9.975568771362305
    5. '))

' → logprob: -11.100568771362305
    6. '))
' → logprob: -11.975568771362305
    7. ',' → logprob: -12.600568771362305
    8. ')' → logprob: -12.975568771362305
    9. ',))
' → logprob: -13.600568771362305
    10. ' ' → logprob: -13.975568771362305

Token 348: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.196732960641384e-05
    2. '   ' → logprob: -9.500082015991211
    3. '	       ' → logprob: -12.750082015991211
    4. '       ' → logprob: -13.125082015991211
    5. '          ' → logprob: -14.500082015991211
    6. '		' → logprob: -14.625082015991211
    7. '	   ' → logprob: -15.125082015991211
    8. '<|end|>' → logprob: -15.250082015991211
    9. ',' → logprob: -16.00008201599121
    10. '         ' → logprob: -16.12508201599121

Token 349: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.0033773379400372505
    2. ' graph' → logprob: -5.753377437591553
    3. '           ' → logprob: -8.878376960754395
    4. '	graph' → logprob: -9.753376960754395
    5. '   ' → logprob: -13.753376960754395
    6. 'graphql' → logprob: -14.878376960754395
    7. '       ' → logprob: -15.128376960754395
    8. '(graph' → logprob: -15.128376960754395
    9. '.graph' → logprob: -16.62837791442871
    10. '_graph' → logprob: -17.87837791442871

Token 350: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -13.750000953674316
    3. '[v' → logprob: -15.875000953674316
    4. '```' → logprob: -17.375001907348633
    5. '₂' → logprob: -18.375001907348633
    6. '２' → logprob: -18.875001907348633
    7. '   ' → logprob: -19.250001907348633
    8. '۲' → logprob: -19.500001907348633
    9. ' ' → logprob: -19.875001907348633
    10. 'v' → logprob: -20.000001907348633

Token 351: '[v' (ID: 36561)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.012536372989416122
    2. '[v' → logprob: -4.387536525726318
    3. '[' → logprob: -10.88753604888916
    4. '[u' → logprob: -11.88753604888916
    5. '[w' → logprob: -14.26253604888916
    6. '
' → logprob: -15.76253604888916
    7. '```' → logprob: -16.637537002563477
    8. '   ' → logprob: -16.887537002563477
    9. ' ' → logprob: -17.137537002563477
    10. 'v' → logprob: -17.512537002563477

Token 352: '].' (ID: 1651)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.12346910685300827
    2. ',c' → logprob: -2.498469114303589
    3. '.append' → logprob: -4.24846887588501
    4. '].' → logprob: -4.99846887588501
    5. ',' → logprob: -5.24846887588501
    6. '           ' → logprob: -6.12346887588501
    7. ',u' → logprob: -6.12346887588501
    8. ',(' → logprob: -6.37346887588501
    9. '   ' → logprob: -7.74846887588501
    10. ',[' → logprob: -8.373469352722168

Token 353: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.9361264946837764e-07
    2. '.append' → logprob: -17.0
    3. ' append' → logprob: -17.75
    4. 'app' → logprob: -18.25
    5. 'appen' → logprob: -19.5
    6. '	append' → logprob: -21.125
    7. 'add' → logprob: -21.375
    8. '_append' → logprob: -21.75
    9. 'insert' → logprob: -23.0
    10. 'Append' → logprob: -23.75

Token 354: '((' (ID: 2054)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.0009117019944824278
    2. '((' → logprob: -7.000911712646484
    3. '(' → logprob: -15.625911712646484
    4. ' (' → logprob: -17.500911712646484
    5. '   ' → logprob: -18.250911712646484
    6. '(U' → logprob: -19.125911712646484
    7. 'u' → logprob: -19.250911712646484
    8. '(v' → logprob: -20.125911712646484
    9. '[u' → logprob: -20.375911712646484
    10. '(
' → logprob: -20.625911712646484

Token 355: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.016056658700108528
    2. '(u' → logprob: -4.141056537628174
    3. ',u' → logprob: -11.391057014465332
    4. '   ' → logprob: -12.141057014465332
    5. '	u' → logprob: -13.641057014465332
    6. ',' → logprob: -13.641057014465332
    7. ' u' → logprob: -14.016057014465332
    8. ')' → logprob: -14.266057014465332
    9. ''u' → logprob: -15.141057014465332
    10. '[u' → logprob: -15.266057014465332

Token 356: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.04063767194747925
    2. ',' → logprob: -3.540637731552124
    3. ',(' → logprob: -4.665637493133545
    4. ' ,' → logprob: -7.040637493133545
    5. '(c' → logprob: -7.665637493133545
    6. '(' → logprob: -9.915637969970703
    7. ' (' → logprob: -11.040637969970703
    8. 'c' → logprob: -12.790637969970703
    9. ',
' → logprob: -14.790637969970703
    10. '   ' → logprob: -14.790637969970703

Token 357: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2519320547580719
    2. '))' → logprob: -1.5019320249557495
    3. ')))' → logprob: -14.126932144165039
    4. ' )' → logprob: -14.251932144165039
    5. ')
' → logprob: -14.626932144165039
    6. '))
' → logprob: -14.626932144165039
    7. ')}' → logprob: -15.626932144165039
    8. '           ' → logprob: -15.626932144165039
    9. '       ' → logprob: -16.25193214416504
    10. '])' → logprob: -16.37693214416504

Token 358: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10934119671583176
    2. 'import' → logprob: -2.6093411445617676
    3. '
' → logprob: -4.109341144561768
    4. '       ' → logprob: -5.234341144561768
    5. '```' → logprob: -5.359341144561768
    6. '    
' → logprob: -6.609341144561768
    7. ' import' → logprob: -7.359341144561768
    8. ' dist' → logprob: -7.734341144561768
    9. 'from' → logprob: -8.109341621398926
    10. '        
' → logprob: -8.359341621398926

Token 359: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2015197277069092
    2. 'import' → logprob: -1.4515197277069092
    3. 'dp' → logprob: -1.9515197277069092
    4. 'dist' → logprob: -2.326519727706909
    5. 'from' → logprob: -2.576519727706909
    6. ' dist' → logprob: -3.326519727706909
    7. 'pq' → logprob: -3.326519727706909
    8. 'def' → logprob: -3.576519727706909
    9. 'visited' → logprob: -3.826519727706909
    10. 'cost' → logprob: -5.701519966125488

Token 360: ' Minimum' (ID: 47219)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.06546151638031
    2. 'def' → logprob: -1.31546151638031
    3. 'dist' → logprob: -2.0654616355895996
    4. '#' → logprob: -2.5654616355895996
    5. 'from' → logprob: -2.8154616355895996
    6. 'visited' → logprob: -3.1904616355895996
    7. 'dp' → logprob: -3.8154616355895996
    8. 'parent' → logprob: -4.1904616355896
    9. 'pq' → logprob: -4.3154616355896
    10. 'hq' → logprob: -5.0654616355896

Token 361: ' spanning' (ID: 66335)
  Prédit: 'sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sp' → logprob: -0.5823503136634827
    2. ' spanning' → logprob: -0.8323503136634827
    3. '_sp' → logprob: -5.457350254058838
    4. 'span' → logprob: -6.957350254058838
    5. 'cost' → logprob: -7.207350254058838
    6. ' sp' → logprob: -8.957350730895996
    7. ' span' → logprob: -9.957350730895996
    8. 'cut' → logprob: -10.207350730895996
    9. 'heap' → logprob: -10.332350730895996
    10. 'Sp' → logprob: -10.582350730895996

Token 362: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.011118445545434952
    2. ' tree' → logprob: -4.511118412017822
    3. '_tree' → logprob: -10.26111888885498
    4. '-tree' → logprob: -11.01111888885498
    5. 'ree' → logprob: -11.63611888885498
    6. 'forest' → logprob: -12.76111888885498
    7. 'tre' → logprob: -13.13611888885498
    8. 't' → logprob: -13.76111888885498
    9. 'Tree' → logprob: -13.76111888885498
    10. '	tree' → logprob: -13.88611888885498

Token 363: ' on' (ID: 402)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2753313779830933
    2. 'visited' → logprob: -1.9003313779830933
    3. 'cost' → logprob: -2.275331497192383
    4. 'import' → logprob: -2.525331497192383
    5. ' visited' → logprob: -2.525331497192383
    6. '   ' → logprob: -2.525331497192383
    7. 'hq' → logprob: -2.650331497192383
    8. '       ' → logprob: -3.025331497192383
    9. 'mst' → logprob: -3.525331497192383
    10. ' cost' → logprob: -4.025331497192383

Token 364: ' valid' (ID: 4529)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.06374124437570572
    2. ' graph' → logprob: -2.8137412071228027
    3. '(graph' → logprob: -6.438741207122803
    4. 'the' → logprob: -10.188741683959961
    5. '	graph' → logprob: -10.313741683959961
    6. 'valid' → logprob: -10.563741683959961
    7. 'range' → logprob: -11.063741683959961
    8. '
' → logprob: -11.438741683959961
    9. 'N' → logprob: -11.688741683959961
    10. 'heap' → logprob: -12.188741683959961

Token 365: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.29382064938545227
    2. 'edges' → logprob: -2.29382061958313
    3. ' graph' → logprob: -2.66882061958313
    4. '_edges' → logprob: -2.79382061958313
    5. 'graph' → logprob: -3.79382061958313
    6. '_graph' → logprob: -8.29382038116455
    7. '   ' → logprob: -9.16882038116455
    8. ' edge' → logprob: -9.54382038116455
    9. 'Edges' → logprob: -9.79382038116455
    10. '(edges' → logprob: -10.29382038116455

Token 366: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01965520530939102
    2. 'import' → logprob: -4.519655227661133
    3. '       ' → logprob: -5.394655227661133
    4. 'def' → logprob: -7.144655227661133
    5. ' import' → logprob: -7.519655227661133
    6. ' visited' → logprob: -7.519655227661133
    7. 'visited' → logprob: -7.769655227661133
    8. '
' → logprob: -8.019655227661133
    9. ' total' → logprob: -8.269655227661133
    10. 'cost' → logprob: -8.394655227661133

Token 367: 'by' (ID: 2345)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.39938223361968994
    2. ' visited' → logprob: -1.52438223361969
    3. ' dist' → logprob: -4.0243821144104
    4. 'def' → logprob: -4.1493821144104
    5. 'import' → logprob: -4.1493821144104
    6. '
' → logprob: -4.6493821144104
    7. 'parent' → logprob: -4.7743821144104
    8. 'mst' → logprob: -5.0243821144104
    9. '       ' → logprob: -5.1493821144104
    10. 'dist' → logprob: -5.2743821144104

Token 368: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.3225392997264862
    2. 'c' → logprob: -1.9475393295288086
    3. ' cost' → logprob: -2.4475393295288086
    4. ' c' → logprob: -3.1975393295288086
    5. 'heap' → logprob: -5.447539329528809
    6. ' heap' → logprob: -7.197539329528809
    7. '
' → logprob: -9.572539329528809
    8. ')' → logprob: -9.697539329528809
    9. ')c' → logprob: -9.697539329528809
    10. 'import' → logprob: -10.072539329528809

Token 369: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35446587204933167
    2. '       ' → logprob: -1.6044658422470093
    3. ')
' → logprob: -2.854465961456299
    4. ' )' → logprob: -3.729465961456299
    5. '   ' → logprob: -4.479465961456299
    6. ' )
' → logprob: -5.729465961456299
    7. ',' → logprob: -7.479465961456299
    8. '           ' → logprob: -9.22946548461914
    9. ' using' → logprob: -9.35446548461914
    10. ')
' → logprob: -9.47946548461914

Token 370: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.061875805258750916
    2. '       ' → logprob: -2.936875820159912
    3. 'visited' → logprob: -5.936875820159912
    4. ' visited' → logprob: -6.436875820159912
    5. 'mst' → logprob: -6.936875820159912
    6. 'import' → logprob: -7.186875820159912
    7. '```' → logprob: -7.686875820159912
    8. ' mst' → logprob: -8.561875343322754
    9. 'def' → logprob: -8.811875343322754
    10. ' parent' → logprob: -10.061875343322754

Token 371: ' used' (ID: 2061)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.6771652102470398
    2. '   ' → logprob: -1.9271652698516846
    3. 'def' → logprob: -1.9271652698516846
    4. 'mst' → logprob: -2.4271652698516846
    5. 'parent' → logprob: -2.8021652698516846
    6. ' visited' → logprob: -3.9271652698516846
    7. 'used' (adapté à ' used') → logprob: -5.0521650314331055
    8. '       ' → logprob: -5.1771650314331055
    9. '
' → logprob: -5.5521650314331055
    10. 'import' → logprob: -5.5521650314331055

Token 372: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10032689571380615
    2. '=' → logprob: -2.3503270149230957
    3. '=set' → logprob: -10.225326538085938
    4. '=[]' → logprob: -10.350326538085938
    5. '=[' → logprob: -10.850326538085938
    6. ' ' → logprob: -11.725326538085938
    7. '=[]
' → logprob: -12.100326538085938
    8. '   ' → logprob: -12.225326538085938
    9. ',' → logprob: -12.850326538085938
    10. '[]' → logprob: -12.975326538085938

Token 373: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0020065533462911844
    2. ' [' → logprob: -6.252006530761719
    3. 'set' → logprob: -10.002006530761719
    4. '[node' → logprob: -11.877006530761719
    5. '[start' → logprob: -12.002006530761719
    6. '[n' → logprob: -12.502006530761719
    7. '[N' → logprob: -12.877006530761719
    8. '[value' → logprob: -13.127006530761719
    9. ' set' → logprob: -13.627006530761719
    10. '[min' → logprob: -13.752006530761719

Token 374: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -4.320199877838604e-07
    2. ' False' → logprob: -14.75
    3. '[' → logprob: -17.75
    4. '(False' → logprob: -20.125
    5. '0' → logprob: -20.5
    6. '
' → logprob: -20.875
    7. '=False' → logprob: -23.25
    8. 'True' → logprob: -23.25
    9. '   ' → logprob: -23.375
    10. '.False' → logprob: -23.75

Token 375: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00497342087328434
    2. ']*(' → logprob: -5.504973411560059
    3. ']*' → logprob: -7.129973411560059
    4. ' ]' → logprob: -9.754973411560059
    5. ' for' → logprob: -10.504973411560059
    6. ']+' → logprob: -12.879973411560059
    7. 'for' → logprob: -13.129973411560059
    8. '*' → logprob: -13.254973411560059
    9. ' *' → logprob: -14.504973411560059
    10. '   ' → logprob: -14.629973411560059

Token 376: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.3782830137643032e-05
    2. ' N' → logprob: -11.87501335144043
    3. 'n' → logprob: -12.25001335144043
    4. '(N' → logprob: -13.37501335144043
    5. '   ' → logprob: -15.87501335144043
    6. ' ' → logprob: -16.37501335144043
    7. 'len' → logprob: -17.00001335144043
    8. '(' → logprob: -17.00001335144043
    9. '
' → logprob: -17.87501335144043
    10. ' (' → logprob: -18.50001335144043

Token 377: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.512236498361744e-07
    2. ' +' → logprob: -14.875000953674316
    3. '+
' → logprob: -16.125
    4. '1' → logprob: -17.625
    5. '+n' → logprob: -18.5
    6. 'N' → logprob: -18.75
    7. '```' → logprob: -19.25
    8. '()+' → logprob: -20.0
    9. '+[' → logprob: -20.375
    10. '＋' → logprob: -20.625

Token 378: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.0100624169572257e-05
    2. 'N' → logprob: -11.125020027160645
    3. '+' → logprob: -13.250020027160645
    4. '(N' → logprob: -13.375020027160645
    5. ' ' → logprob: -13.750020027160645
    6. '(' → logprob: -14.875020027160645
    7. '   ' → logprob: -15.250020027160645
    8. '```' → logprob: -16.12502098083496
    9. '2' → logprob: -16.50002098083496
    10. '6' → logprob: -17.37502098083496

Token 379: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.20154958963394165
    2. ')' → logprob: -1.7015495300292969
    3. ' )
' → logprob: -9.826549530029297
    4. ')
' → logprob: -10.076549530029297
    5. '   ' → logprob: -10.951549530029297
    6. '
' → logprob: -10.951549530029297
    7. ' )' → logprob: -12.701549530029297
    8. '       ' → logprob: -13.826549530029297
    9. ')

' → logprob: -14.451549530029297
    10. '	' → logprob: -16.576549530029297

Token 380: '       ' (ID: 309)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.40134191513061523
    2. ' import' → logprob: -1.4013419151306152
    3. '   ' → logprob: -3.5263419151306152
    4. 'pq' → logprob: -4.026341915130615
    5. 'hq' → logprob: -4.151341915130615
    6. 'cost' → logprob: -4.901341915130615
    7. ' cost' → logprob: -5.151341915130615
    8. ' pq' → logprob: -5.901341915130615
    9. ' h' → logprob: -6.901341915130615
    10. 'from' → logprob: -6.901341915130615

Token 381: ' h' (ID: 312)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.06550521403551102
    2. 'hq' → logprob: -3.315505266189575
    3. 'res' → logprob: -4.440505027770996
    4. ' import' → logprob: -4.940505027770996
    5. 'def' → logprob: -6.190505027770996
    6. 'pq' → logprob: -6.315505027770996
    7. 'cost' → logprob: -6.565505027770996
    8. 'total' → logprob: -7.565505027770996
    9. 'h' (adapté à ' h') → logprob: -7.815505027770996
    10. 'min' → logprob: -7.940505027770996

Token 382: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.5570885807392187e-05
    2. ' =' → logprob: -11.625015258789062
    3. '=' → logprob: -13.000015258789062
    4. '[' → logprob: -13.625015258789062
    5. '```' → logprob: -14.750015258789062
    6. 'queue' → logprob: -15.125015258789062
    7. 'Q' → logprob: -15.250015258789062
    8. '	q' → logprob: -15.250015258789062
    9. 'pq' → logprob: -15.500015258789062
    10. '   ' → logprob: -15.500015258789062

Token 383: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18067073822021484
    2. '=' → logprob: -2.055670738220215
    3. '.append' → logprob: -3.805670738220215
    4. '.' → logprob: -4.555670738220215
    5. '.push' → logprob: -6.180670738220215
    6. '=[]' → logprob: -6.680670738220215
    7. '=[' → logprob: -7.555670738220215
    8. ' .' → logprob: -8.055670738220215
    9. '[' → logprob: -9.555670738220215
    10. '.extend' → logprob: -9.930670738220215

Token 384: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0019349466310814023
    2. '[]' → logprob: -6.251935005187988
    3. '[' → logprob: -12.751935005187988
    4. ' [(' → logprob: -13.251935005187988
    5. '[]
' → logprob: -13.501935005187988
    6. '[((' → logprob: -15.501935005187988
    7. '[]

' → logprob: -17.251934051513672
    8. '[](' → logprob: -17.376934051513672
    9. '([(' → logprob: -17.501934051513672
    10. '[],' → logprob: -18.251934051513672

Token 385: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '(' → logprob: -18.25
    4. '   ' → logprob: -19.5
    5. '۰' → logprob: -19.75
    6. ')' → logprob: -20.0
    7. '  ' → logprob: -21.625
    8. ' (' → logprob: -21.875
    9. '00' → logprob: -22.0
    10. '[' → logprob: -22.125

Token 386: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.127333340875339e-06
    2. ' ,' → logprob: -12.625003814697266
    3. '0' → logprob: -14.875003814697266
    4. '1' → logprob: -15.250003814697266
    5. ',
' → logprob: -16.000003814697266
    6. '```' → logprob: -19.000003814697266
    7. '   ' → logprob: -19.375003814697266
    8. ' ' → logprob: -20.125003814697266
    9. '
' → logprob: -20.375003814697266
    10. '2' → logprob: -21.125003814697266

Token 387: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -18.625003814697266
    4. '0' → logprob: -19.250003814697266
    5. ',' → logprob: -21.000003814697266
    6. '  ' → logprob: -21.625003814697266
    7. '    ' → logprob: -21.625003814697266
    8. '[' → logprob: -21.875003814697266
    9. '
' → logprob: -22.000003814697266
    10. '```' → logprob: -22.250003814697266

Token 388: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.024034617468714714
    2. ',' → logprob: -3.7740345001220703
    3. ')]
' → logprob: -7.27403450012207
    4. ')' → logprob: -9.89903450012207
    5. ' )' → logprob: -10.89903450012207
    6. ')]

' → logprob: -11.02403450012207
    7. ']' → logprob: -12.89903450012207
    8. ')]
' → logprob: -13.27403450012207
    9. ' ,' → logprob: -14.02403450012207
    10. '")]' → logprob: -14.02403450012207

Token 389: '       ' (ID: 309)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.607135534286499
    2. 'total' → logprob: -1.357135534286499
    3. 'cost' → logprob: -2.482135534286499
    4. 'mst' → logprob: -2.607135534286499
    5. 'ans' → logprob: -3.982135534286499
    6. 'result' → logprob: -4.232135772705078
    7. 'answer' → logprob: -5.982135772705078
    8. '       ' → logprob: -6.857135772705078
    9. ' total' → logprob: -7.232135772705078
    10. ' res' → logprob: -7.732135772705078

Token 390: ' total' (ID: 3609)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5256876945495605
    2. 'total' (adapté à ' total') → logprob: -1.0256876945495605
    3. 'ans' → logprob: -3.9006876945495605
    4. 'cost' → logprob: -4.0256876945495605
    5. 'mst' → logprob: -5.0256876945495605
    6. 'result' → logprob: -5.4006876945495605
    7. 'answer' → logprob: -7.2756876945495605
    8. ' total' → logprob: -9.025688171386719
    9. ' res' → logprob: -9.150688171386719
    10. 'cnt' → logprob: -10.150688171386719

Token 391: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.0005908019375056028
    2. 'cost' → logprob: -8.250591278076172
    3. '_' → logprob: -8.375591278076172
    4. ' =' → logprob: -10.125591278076172
    5. '=' → logprob: -10.375591278076172
    6. '_c' → logprob: -10.750591278076172
    7. ' _' → logprob: -13.000591278076172
    8. ' cost' → logprob: -13.375591278076172
    9. '
' → logprob: -14.125591278076172
    10. '```' → logprob: -14.500591278076172

Token 392: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407716512680054
    2. '=' → logprob: -0.9740771651268005
    3. ',' → logprob: -16.349077224731445
    4. ' ' → logprob: -17.349077224731445
    5. ' =
' → logprob: -18.724077224731445
    6. '＝' → logprob: -19.599077224731445
    7. ' =)' → logprob: -19.849077224731445
    8. ' +=' → logprob: -20.099077224731445
    9. '  ' → logprob: -20.474077224731445
    10. '=int' → logprob: -20.974077224731445

Token 393: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017958412354346365
    2. ' ' → logprob: -8.625179290771484
    3. '   ' → logprob: -20.125179290771484
    4. ' ' → logprob: -21.250179290771484
    5. '۰' → logprob: -21.375179290771484
    6. '000' → logprob: -21.500179290771484
    7. '  ' → logprob: -22.000179290771484
    8. '00' → logprob: -22.250179290771484
    9. '０' → logprob: -23.625179290771484
    10. '```' → logprob: -23.687679290771484

Token 394: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '000' → logprob: -20.6250057220459
    4. '00' → logprob: -21.3750057220459
    5. '۰' → logprob: -21.7500057220459
    6. '   ' → logprob: -22.2500057220459
    7. 'int' → logprob: -22.6250057220459
    8. '```' → logprob: -23.0000057220459
    9. '０' → logprob: -23.1875057220459
    10. '[' → logprob: -24.1875057220459

Token 395: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3286838233470917
    2. 'while' → logprob: -1.953683853149414
    3. 'used' → logprob: -3.078683853149414
    4. ' while' → logprob: -3.078683853149414
    5. ' used' → logprob: -3.328683853149414
    6. '
' → logprob: -4.828683853149414
    7. '	while' → logprob: -6.828683853149414
    8. '   ' → logprob: -6.953683853149414
    9. '        
' → logprob: -8.578683853149414
    10. 'visited' → logprob: -8.578683853149414

Token 396: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1556853950023651
    2. 'while' → logprob: -2.9056854248046875
    3. ' used' → logprob: -3.2806854248046875
    4. 'used' → logprob: -3.6556854248046875
    5. ' while' → logprob: -3.7806854248046875
    6. 'visited' → logprob: -6.6556854248046875
    7. '
' → logprob: -7.0306854248046875
    8. '   ' → logprob: -7.5306854248046875
    9. '	while' → logprob: -8.530685424804688
    10. '        
' → logprob: -9.030685424804688

Token 397: ' while' (ID: 2049)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.7462010979652405
    2. 'while' (adapté à ' while') → logprob: -1.2462010383605957
    3. 'used' → logprob: -1.7462010383605957
    4. 'visited' → logprob: -2.9962010383605957
    5. '       ' → logprob: -4.496201038360596
    6. 'cnt' → logprob: -6.246201038360596
    7. ' used' → logprob: -8.871201515197754
    8. ' count' → logprob: -9.121201515197754
    9. ' while' → logprob: -9.121201515197754
    10. 'selected' → logprob: -9.246201515197754

Token 398: ' h' (ID: 312)
  Prédit: 'hq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hq' → logprob: -0.474087119102478
    2. ' h' → logprob: -0.974087119102478
    3. 'h' → logprob: -11.84908676147461
    4. '	h' → logprob: -13.47408676147461
    5. '(h' → logprob: -14.09908676147461
    6. '[h' → logprob: -15.59908676147461
    7. ' not' → logprob: -16.09908676147461
    8. '
' → logprob: -16.09908676147461
    9. '   ' → logprob: -16.47408676147461
    10. ' ' → logprob: -16.97408676147461

Token 399: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.0564331205387134e-05
    2. 'qh' → logprob: -11.75001049041748
    3. 'hq' → logprob: -12.87501049041748
    4. '_q' → logprob: -18.625011444091797
    5. '
' → logprob: -19.000011444091797
    6. ' q' → logprob: -19.750011444091797
    7. 'cq' → logprob: -20.250011444091797
    8. 'qc' → logprob: -20.500011444091797
    9. 'h' → logprob: -20.625011444091797
    10. 'qs' → logprob: -20.875011444091797

Token 400: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06255529820919037
    2. ':
' → logprob: -2.8125553131103516
    3. ' and' → logprob: -7.687555313110352
    4. '):' → logprob: -10.312555313110352
    5. '):
' → logprob: -10.312555313110352
    6. ':
' → logprob: -10.937555313110352
    7. '>' → logprob: -11.312555313110352
    8. ',' → logprob: -11.812555313110352
    9. '>:' → logprob: -12.312555313110352
    10. ':

' → logprob: -12.812555313110352

Token 401: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2989995777606964
    2. '       ' → logprob: -1.923999547958374
    3. 'cost' → logprob: -2.548999547958374
    4. ',' → logprob: -4.048999786376953
    5. 'cd' → logprob: -4.673999786376953
    6. ',c' → logprob: -5.923999786376953
    7. 'c' → logprob: -6.548999786376953
    8. '0' → logprob: -7.173999786376953
    9. ' cost' → logprob: -7.298999786376953
    10. '   ' → logprob: -7.798999786376953

Token 402: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.6632139682769775
    2. 'cost' → logprob: -0.9132139682769775
    3. 'cc' → logprob: -2.5382139682769775
    4. '           ' → logprob: -5.788213729858398
    5. 'cd' → logprob: -7.288213729858398
    6. ' c' → logprob: -8.163213729858398
    7. ' cost' → logprob: -8.913213729858398
    8. '   ' → logprob: -9.538213729858398
    9. ' cc' → logprob: -9.663213729858398
    10. 'dc' → logprob: -10.413213729858398

Token 403: ',u' (ID: 80698)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00037597675691358745
    2. ' ,' → logprob: -8.375375747680664
    3. ',c' → logprob: -9.250375747680664
    4. 'cost' → logprob: -11.250375747680664
    5. ',u' → logprob: -11.750375747680664
    6. ',d' → logprob: -12.125375747680664
    7. '_,' → logprob: -12.250375747680664
    8. ',w' → logprob: -12.875375747680664
    9. 'c' → logprob: -13.125375747680664
    10. 't' → logprob: -13.250375747680664

Token 404: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931505799293518
    2. ' =' → logprob: -0.6931505799293518
    3. ')' → logprob: -13.818150520324707
    4. '   ' → logprob: -14.068150520324707
    5. '=
' → logprob: -14.193150520324707
    6. 'heap' → logprob: -15.193150520324707
    7. ' =
' → logprob: -15.443150520324707
    8. ')=' → logprob: -16.068151473999023
    9. '(heap' → logprob: -16.568151473999023
    10. ' ' → logprob: -16.818151473999023

Token 405: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.16022492945194244
    2. ' heap' → logprob: -1.9102249145507812
    3. 'he' → logprob: -14.160224914550781
    4. ' he' → logprob: -16.53522491455078
    5. '   ' → logprob: -17.91022491455078
    6. '(heap' → logprob: -18.16022491455078
    7. '_heap' → logprob: -18.41022491455078
    8. '.heap' → logprob: -18.53522491455078
    9. 'Heap' → logprob: -19.53522491455078
    10. '
' → logprob: -20.16022491455078

Token 406: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -6.704273118884885e-07
    2. 'h' → logprob: -14.875000953674316
    3. 'p' → logprob: -16.75
    4. 'hq' → logprob: -17.5
    5. 'he' → logprob: -17.625
    6. '[' → logprob: -17.75
    7. 'app' → logprob: -17.875
    8. '.he' → logprob: -19.25
    9. '```' → logprob: -19.375
    10. 'push' → logprob: -19.5

Token 407: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.001061867456883192
    2. 'he' → logprob: -7.126061916351318
    3. 'app' → logprob: -8.62606143951416
    4. 'q' → logprob: -9.50106143951416
    5. ' he' → logprob: -13.37606143951416
    6. 'pop' → logprob: -14.12606143951416
    7. 'op' → logprob: -14.87606143951416
    8. '_he' → logprob: -15.50106143951416
    9. '.heap' → logprob: -16.501062393188477
    10. 'pp' → logprob: -16.876062393188477

Token 408: 'app' (ID: 903)
  Prédit: 'pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pp' → logprob: -0.31591829657554626
    2. 'app' → logprob: -1.3159183263778687
    3. 'op' → logprob: -6.565918445587158
    4. 'pop' → logprob: -7.065918445587158
    5. 'ush' → logprob: -8.94091796875
    6. 'p' → logprob: -9.06591796875
    7. 'push' → logprob: -9.31591796875
    8. 'q' → logprob: -10.81591796875
    9. '```' → logprob: -11.44091796875
    10. 'he' → logprob: -11.81591796875

Token 409: 'op' (ID: 467)
  Prédit: 'ush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.005349855404347181
    2. 'pp' → logprob: -5.755349636077881
    3. 'op' → logprob: -6.255349636077881
    4. 'push' → logprob: -8.755350112915039
    5. 'p' → logprob: -9.630350112915039
    6. 'sh' → logprob: -11.255350112915039
    7. 'pop' → logprob: -11.505350112915039
    8. 'app' → logprob: -13.130350112915039
    9. '```' → logprob: -15.130350112915039
    10. 's' → logprob: -15.130350112915039

Token 410: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -7.896309739408025e-07
    2. 'h' → logprob: -14.500000953674316
    3. '(' → logprob: -16.375
    4. '(c' → logprob: -16.75
    5. '[h' → logprob: -17.5
    6. ' h' → logprob: -17.75
    7. '(q' → logprob: -18.0
    8. '(heap' → logprob: -18.125
    9. ',h' → logprob: -18.25
    10. 'hq' → logprob: -19.625

Token 411: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -4.60414821645827e-06
    2. ')' → logprob: -13.250004768371582
    3. '(q' → logprob: -14.375004768371582
    4. '
' → logprob: -14.500004768371582
    5. ')
' → logprob: -14.875004768371582
    6. '_q' → logprob: -15.375004768371582
    7. 'c' → logprob: -15.375004768371582
    8. '	q' → logprob: -15.875004768371582
    9. '```' → logprob: -16.000003814697266
    10. ',q' → logprob: -16.250003814697266

Token 412: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.029910624027252197
    2. ')' → logprob: -3.5299105644226074
    3. '       ' → logprob: -8.779911041259766
    4. ')
' → logprob: -12.154911041259766
    5. '           ' → logprob: -14.529911041259766
    6. ' )
' → logprob: -15.154911041259766
    7. ')

' → logprob: -15.529911041259766
    8. '   ' → logprob: -17.404911041259766
    9. '
' → logprob: -17.779911041259766
    10. ',' → logprob: -18.029911041259766

Token 413: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048154279589653015
    2. 'if' → logprob: -3.548154354095459
    3. ' if' → logprob: -4.173154354095459
    4. '           ' → logprob: -5.923154354095459
    5. '   ' → logprob: -9.1731538772583
    6. ' used' → logprob: -10.5481538772583
    7. 'used' → logprob: -11.2981538772583
    8. '	if' → logprob: -12.4231538772583
    9. '[' → logprob: -13.0481538772583
    10. '        
' → logprob: -13.6731538772583

Token 414: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.004139191471040249
    2. ' if' → logprob: -5.504139423370361
    3. '       ' → logprob: -10.004138946533203
    4. '           ' → logprob: -11.129138946533203
    5. '	if' → logprob: -14.629138946533203
    6. 'If' → logprob: -16.254138946533203
    7. '   ' → logprob: -16.504138946533203
    8. '0' → logprob: -16.879138946533203
    9. ' ' → logprob: -17.254138946533203
    10. '```' → logprob: -18.129138946533203

Token 415: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.04858850687742233
    2. ' used' → logprob: -3.048588514328003
    3. '   ' → logprob: -14.423588752746582
    4. 'not' → logprob: -15.298588752746582
    5. ' not' → logprob: -16.298587799072266
    6. '.used' → logprob: -16.548587799072266
    7. ' ' → logprob: -16.673587799072266
    8. 'Used' → logprob: -17.173587799072266
    9. '_used' → logprob: -17.548587799072266
    10. 'u' → logprob: -17.673587799072266

Token 416: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: 0.0
    2. 'u' → logprob: -17.375
    3. '[' → logprob: -18.875
    4. ' [' → logprob: -20.0
    5. '[user' → logprob: -20.625
    6. ' u' → logprob: -21.5
    7. '```' → logprob: -22.5
    8. '	u' → logprob: -23.0
    9. '(u' → logprob: -23.125
    10. '[c' → logprob: -23.625

Token 417: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009071857668459415
    2. ':
' → logprob: -4.7590718269348145
    3. '):' → logprob: -8.384072303771973
    4. ':return' → logprob: -9.009072303771973
    5. ']:' → logprob: -9.509072303771973
    6. '):
' → logprob: -11.759072303771973
    7. '>:' → logprob: -12.509072303771973
    8. '}:' → logprob: -12.509072303771973
    9. '[' → logprob: -12.759072303771973
    10. '==' → logprob: -13.009072303771973

Token 418: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.2234492301940918
    2. ' continue' → logprob: -1.2234492301940918
    3. 'continue' → logprob: -1.4734492301940918
    4. '           ' → logprob: -1.7234492301940918
    5. '	continue' → logprob: -5.848449230194092
    6. '       ' → logprob: -7.973449230194092
    7. '_continue' → logprob: -8.22344970703125
    8. '   ' → logprob: -8.47344970703125
    9. '	       ' → logprob: -9.09844970703125
    10. '	           ' → logprob: -9.59844970703125

Token 419: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.040150173008441925
    2. ' continue' → logprob: -3.2901501655578613
    3. '	continue' → logprob: -6.540150165557861
    4. '               ' → logprob: -7.415150165557861
    5. '_continue' → logprob: -10.66515064239502
    6. '           ' → logprob: -11.04015064239502
    7. '   ' → logprob: -11.66515064239502
    8. 'contin' → logprob: -12.16515064239502
    9. 'Continue' → logprob: -13.04015064239502
    10. '       ' → logprob: -13.29015064239502

Token 420: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19250710308551788
    2. ' used' → logprob: -1.9425071477890015
    3. 'used' → logprob: -3.567507028579712
    4. '   ' → logprob: -5.817507266998291
    5. '           ' → logprob: -8.317506790161133
    6. '
' → logprob: -8.567506790161133
    7. '        
' → logprob: -10.192506790161133
    8. ' total' → logprob: -10.317506790161133
    9. 'total' → logprob: -10.442506790161133
    10. '    
' → logprob: -11.442506790161133

Token 421: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19125686585903168
    2. ' used' → logprob: -1.9412568807601929
    3. 'used' → logprob: -3.5662567615509033
    4. '   ' → logprob: -6.191256999969482
    5. '           ' → logprob: -8.941256523132324
    6. '
' → logprob: -9.816256523132324
    7. '        
' → logprob: -10.816256523132324
    8. 'total' → logprob: -11.941256523132324
    9. '```' → logprob: -11.941256523132324
    10. '    
' → logprob: -12.066256523132324

Token 422: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' (adapté à ' used') → logprob: -0.01107234600931406
    2. ' used' → logprob: -4.511072158813477
    3. '   ' → logprob: -10.761072158813477
    4. '       ' → logprob: -13.011072158813477
    5. '
' → logprob: -14.011072158813477
    6. '           ' → logprob: -15.511072158813477
    7. '.used' → logprob: -18.261072158813477
    8. 'total' → logprob: -18.511072158813477
    9. '_used' → logprob: -18.636072158813477
    10. '            
' → logprob: -19.011072158813477

Token 423: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.625
    3. 'u' → logprob: -19.75
    4. ' [' → logprob: -20.125
    5. '```' → logprob: -20.625
    6. '[user' → logprob: -20.875
    7. '   ' → logprob: -21.125
    8. '
' → logprob: -22.125
    9. '	u' → logprob: -22.375
    10. '\[' → logprob: -22.625

Token 424: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005543439765460789
    2. ']=' → logprob: -7.50055456161499
    3. '=' → logprob: -13.750554084777832
    4. '[' → logprob: -16.00055503845215
    5. ']
' → logprob: -16.37555503845215
    6. ' ]' → logprob: -16.75055503845215
    7. '=True' → logprob: -17.37555503845215
    8. ')' → logprob: -17.50055503845215
    9. '[u' → logprob: -17.75055503845215
    10. ' =' → logprob: -19.25055503845215

Token 425: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014178085140883923
    2. ' =' → logprob: -4.264178276062012
    3. '=True' → logprob: -11.139178276062012
    4. '=true' → logprob: -17.514177322387695
    5. '＝' → logprob: -18.389177322387695
    6. '[' → logprob: -18.639177322387695
    7. '=False' → logprob: -19.639177322387695
    8. ' ' → logprob: -19.639177322387695
    9. ']=' → logprob: -19.639177322387695
    10. '=
' → logprob: -19.764177322387695

Token 426: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.001170225441455841
    2. ' True' → logprob: -6.7511701583862305
    3. '1' → logprob: -19.126171112060547
    4. '(True' → logprob: -19.376171112060547
    5. 'true' → logprob: -20.876171112060547
    6. '=True' → logprob: -22.251171112060547
    7. ' ' → logprob: -22.376171112060547
    8. 'TRUE' → logprob: -22.876171112060547
    9. '   ' → logprob: -23.501171112060547
    10. 'False' → logprob: -24.251171112060547

Token 427: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2395644336938858
    2. 'total' → logprob: -1.8645644187927246
    3. '       ' → logprob: -3.1145644187927246
    4. '   ' → logprob: -4.489564418792725
    5. ' total' → logprob: -6.614564418792725
    6. '	total' → logprob: -7.239564418792725
    7. '	       ' → logprob: -8.739564895629883
    8. '	   ' → logprob: -9.114564895629883
    9. '		' → logprob: -9.989564895629883
    10. '		   ' → logprob: -11.114564895629883

Token 428: '           ' (ID: 352)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.6344911456108093
    2. '       ' → logprob: -1.134491205215454
    3. '   ' → logprob: -2.509491205215454
    4. '           ' → logprob: -3.009491205215454
    5. ' total' → logprob: -4.134490966796875
    6. '	total' → logprob: -6.759490966796875
    7. '	   ' → logprob: -8.634490966796875
    8. 'for' → logprob: -9.509490966796875
    9. '	       ' → logprob: -10.009490966796875
    10. ' for' → logprob: -10.009490966796875

Token 429: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.03808373212814331
    2. ' total' → logprob: -3.288083791732788
    3. '
' → logprob: -10.413084030151367
    4. '   ' → logprob: -11.413084030151367
    5. '	total' → logprob: -14.163084030151367
    6. '           ' → logprob: -15.538084030151367
    7. '       ' → logprob: -15.788084030151367
    8. ' 
' → logprob: -17.163084030151367
    9. '_total' → logprob: -17.163084030151367
    10. '    
' → logprob: -18.163084030151367

Token 430: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -2.45848218582978e-06
    2. '_' → logprob: -13.50000286102295
    3. ' _' → logprob: -14.25000286102295
    4. '_c' → logprob: -15.75000286102295
    5. '_COST' → logprob: -16.375001907348633
    6. '_code' → logprob: -16.375001907348633
    7. '_cos' → logprob: -16.500001907348633
    8. ' +=' → logprob: -17.375001907348633
    9. 'cost' → logprob: -17.875001907348633
    10. '_co' → logprob: -18.125001907348633

Token 431: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.47407910227775574
    2. ' +=' → logprob: -0.9740791320800781
    3. '+' → logprob: -13.474079132080078
    4. ']+=' → logprob: -14.474079132080078
    5. '+=(' → logprob: -16.974079132080078
    6. '+="' → logprob: -16.974079132080078
    7. '+='' → logprob: -17.474079132080078
    8. '```' → logprob: -17.974079132080078
    9. ' +' → logprob: -18.224079132080078
    10. '
' → logprob: -18.474079132080078

Token 432: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.12692810595035553
    2. ' c' → logprob: -2.1269280910491943
    3. '	c' → logprob: -18.001928329467773
    4. ' ' → logprob: -19.001928329467773
    5. '_c' → logprob: -19.876928329467773
    6. '   ' → logprob: -21.626928329467773
    7. ' ' → logprob: -22.001928329467773
    8. ')c' → logprob: -22.001928329467773
    9. '(c' → logprob: -22.376928329467773
    10. '```' → logprob: -22.626928329467773

Token 433: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5366800427436829
    2. 'for' → logprob: -1.286679983139038
    3. ' for' → logprob: -2.286679983139038
    4. '       ' → logprob: -3.536679983139038
    5. '   ' → logprob: -4.786680221557617
    6. '
' → logprob: -10.411680221557617
    7. '	for' → logprob: -11.661680221557617
    8. '```' → logprob: -11.661680221557617
    9. ' ' → logprob: -11.786680221557617
    10. '     ' → logprob: -12.661680221557617

Token 434: '           ' (ID: 352)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4424225986003876
    2. '           ' → logprob: -1.19242262840271
    3. '       ' → logprob: -3.44242262840271
    4. ' for' → logprob: -3.94242262840271
    5. '   ' → logprob: -5.942422389984131
    6. '	for' → logprob: -11.442422866821289
    7. '```' → logprob: -12.817422866821289
    8. '	       ' → logprob: -12.942422866821289
    9. ' ' → logprob: -13.442422866821289
    10. '  ' → logprob: -13.817422866821289

Token 435: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -2.1888679839321412e-05
    2. ' for' → logprob: -10.750021934509277
    3. '   ' → logprob: -15.125021934509277
    4. '       ' → logprob: -17.00002098083496
    5. '```' → logprob: -18.00002098083496
    6. '           ' → logprob: -18.25002098083496
    7. '	for' → logprob: -18.75002098083496
    8. '
' → logprob: -21.37502098083496
    9. '            
' → logprob: -21.75002098083496
    10. '        
' → logprob: -22.25002098083496

Token 436: ' v' (ID: 323)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.15507081151008606
    2. 'v' → logprob: -2.1550707817077637
    3. 'nv' → logprob: -3.6550707817077637
    4. 'nx' → logprob: -7.030070781707764
    5. 'vv' → logprob: -7.655070781707764
    6. 'wv' → logprob: -7.905070781707764
    7. 'to' → logprob: -9.155071258544922
    8. 'vw' → logprob: -10.405071258544922
    9. ' w' → logprob: -11.780071258544922
    10. 'x' → logprob: -12.280071258544922

Token 437: ',n' (ID: 18103)
  Prédit: ',c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.08011090010404587
    2. ',' → logprob: -2.580110788345337
    3. ',w' → logprob: -6.830111026763916
    4. ' ,' → logprob: -9.080110549926758
    5. ',n' → logprob: -10.830110549926758
    6. ',v' → logprob: -12.955110549926758
    7. '_,' → logprob: -14.080110549926758
    8. 'c' → logprob: -14.080110549926758
    9. ',d' → logprob: -14.455110549926758
    10. ',u' → logprob: -15.205110549926758

Token 438: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0008323782822117209
    2. 'ext' → logprob: -8.250832557678223
    3. 'cost' → logprob: -8.250832557678223
    4. 'e' → logprob: -8.375832557678223
    5. '_c' → logprob: -10.375832557678223
    6. ' c' → logprob: -10.750832557678223
    7. ',' → logprob: -12.500832557678223
    8. ',c' → logprob: -12.750832557678223
    9. 'ex' → logprob: -12.875832557678223
    10. '```' → logprob: -12.875832557678223

Token 439: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.38824591040611267
    2. 'in' → logprob: -1.138245940208435
    3. ',' → logprob: -6.888246059417725
    4. 'c' → logprob: -8.263245582580566
    5. ' ' → logprob: -10.513245582580566
    6. ',c' → logprob: -10.763245582580566
    7. 'n' → logprob: -11.138245582580566
    8. ')' → logprob: -12.013245582580566
    9. ' ,' → logprob: -12.263245582580566
    10. ',n' → logprob: -12.513245582580566

Token 440: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.003179259831085801
    2. ' graph' → logprob: -5.75317907333374
    3. '	graph' → logprob: -13.878179550170898
    4. ' ' → logprob: -15.378179550170898
    5. '(graph' → logprob: -15.753179550170898
    6. '   ' → logprob: -16.1281795501709
    7. 'Graph' → logprob: -16.7531795501709
    8. 'raph' → logprob: -17.2531795501709
    9. 'graphql' → logprob: -17.3781795501709
    10. '_graph' → logprob: -18.2531795501709

Token 441: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5213274309644476e-05
    2. '[u' → logprob: -11.500015258789062
    3. '[' → logprob: -12.250015258789062
    4. '```' → logprob: -15.250015258789062
    5. '[v' → logprob: -17.125015258789062
    6. '   ' → logprob: -17.250015258789062
    7. ' ' → logprob: -19.625015258789062
    8. 'u' → logprob: -20.125015258789062
    9. '[user' → logprob: -20.250015258789062
    10. '       ' → logprob: -20.375015258789062

Token 442: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -7.226628895296017e-06
    2. 'u' → logprob: -11.875007629394531
    3. '[c' → logprob: -16.50000762939453
    4. '[' → logprob: -17.12500762939453
    5. ' [' → logprob: -17.87500762939453
    6. '   ' → logprob: -18.37500762939453
    7. '
' → logprob: -18.50000762939453
    8. ' ' → logprob: -18.62500762939453
    9. '	u' → logprob: -19.00000762939453
    10. '```' → logprob: -19.12500762939453

Token 443: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.16079309582710266
    2. ':' → logprob: -2.4107930660247803
    3. ']:
' → logprob: -3.4107930660247803
    4. '):' → logprob: -3.7857930660247803
    5. '):
' → logprob: -6.660793304443359
    6. ':
' → logprob: -6.910793304443359
    7. ']' → logprob: -7.660793304443359
    8. ',' → logprob: -8.53579330444336
    9. '       ' → logprob: -10.28579330444336
    10. '}:' → logprob: -10.78579330444336

Token 444: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00043639098294079304
    2. ' if' → logprob: -8.000436782836914
    3. 'heap' → logprob: -10.500436782836914
    4. ' heap' → logprob: -10.875436782836914
    5. '	           ' → logprob: -11.125436782836914
    6. '           ' → logprob: -11.125436782836914
    7. 'if' → logprob: -11.500436782836914
    8. '   ' → logprob: -12.250436782836914
    9. '       ' → logprob: -12.750436782836914
    10. '                   ' → logprob: -13.250436782836914

Token 445: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8506636023521423
    2. '               ' → logprob: -1.350663661956787
    3. 'if' (adapté à ' if') → logprob: -1.475663661956787
    4. '                   ' → logprob: -2.600663661956787
    5. '   ' → logprob: -4.600663661956787
    6. '           ' → logprob: -7.725663661956787
    7. 'heap' → logprob: -9.225663185119629
    8. '       ' → logprob: -9.350663185119629
    9. '
' → logprob: -9.725663185119629
    10. ' ' → logprob: -9.975663185119629

Token 446: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.25194093585014343
    2. ' not' → logprob: -1.5019409656524658
    3. '!' → logprob: -12.501940727233887
    4. '   ' → logprob: -12.501940727233887
    5. '
' → logprob: -13.626940727233887
    6. 'used' → logprob: -13.626940727233887
    7. '(not' → logprob: -14.126940727233887
    8. 'n' → logprob: -15.001940727233887
    9. '	not' → logprob: -15.751940727233887
    10. '```' → logprob: -16.001941680908203

Token 447: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.02975071594119072
    2. ' used' → logprob: -3.5297508239746094
    3. '   ' → logprob: -16.65475082397461
    4. '.used' → logprob: -16.90475082397461
    5. ' ' → logprob: -17.52975082397461
    6. 'Used' → logprob: -18.27975082397461
    7. '_used' → logprob: -18.65475082397461
    8. '-used' → logprob: -19.02975082397461
    9. 'use' → logprob: -19.15475082397461
    10. '
' → logprob: -19.27975082397461

Token 448: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -6.704273118884885e-07
    2. 'v' → logprob: -14.500000953674316
    3. '[n' → logprob: -17.375
    4. ' [' → logprob: -18.0
    5. '[u' → logprob: -18.25
    6. '[' → logprob: -18.75
    7. '```' → logprob: -19.5
    8. '
' → logprob: -19.5
    9. ' v' → logprob: -20.125
    10. '<v' → logprob: -21.0

Token 449: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.76630038022995
    2. ' and' → logprob: -0.89130038022995
    3. ':' → logprob: -2.8913004398345947
    4. ']:
' → logprob: -2.8913004398345947
    5. '):
' → logprob: -5.141300201416016
    6. 'and' → logprob: -5.766300201416016
    7. ']' → logprob: -6.141300201416016
    8. ']:' → logprob: -6.266300201416016
    9. '               ' → logprob: -8.266300201416016
    10. ',' → logprob: -8.516300201416016

Token 450: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.007733684964478016
    2. 'heap' → logprob: -5.5077338218688965
    3. ' heap' → logprob: -5.6327338218688965
    4. '               ' → logprob: -10.632733345031738
    5. '(heap' → logprob: -11.132733345031738
    6. '                       ' → logprob: -11.507733345031738
    7. '.heap' → logprob: -11.757733345031738
    8. '   ' → logprob: -13.132733345031738
    9. '                  ' → logprob: -13.257733345031738
    10. '                    
' → logprob: -13.257733345031738

Token 451: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.00021390743495430797
    2. ' heap' → logprob: -8.500213623046875
    3. '                   ' → logprob: -11.500213623046875
    4. '                       ' → logprob: -16.250213623046875
    5. '               ' → logprob: -16.500213623046875
    6. '(heap' → logprob: -16.875213623046875
    7. '.heap' → logprob: -17.375213623046875
    8. 'he' → logprob: -17.375213623046875
    9. '   ' → logprob: -18.000213623046875
    10. '
' → logprob: -18.625213623046875

Token 452: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.1008713702030946e-06
    2. 'he' → logprob: -14.125001907348633
    3. 'h' → logprob: -14.250001907348633
    4. 'hq' → logprob: -14.750001907348633
    5. 'push' → logprob: -16.625001907348633
    6. 'heap' → logprob: -17.125001907348633
    7. '.he' → logprob: -17.375001907348633
    8. 'qh' → logprob: -18.000001907348633
    9. '```' → logprob: -18.125001907348633
    10. 'p' → logprob: -18.250001907348633

Token 453: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.005387549754232168
    2. 'he' → logprob: -5.255387783050537
    3. 'q' → logprob: -9.255387306213379
    4. 'push' → logprob: -10.630387306213379
    5. '.' → logprob: -11.130387306213379
    6. 'heap' → logprob: -11.880387306213379
    7. '.heap' → logprob: -12.505387306213379
    8. 'ush' → logprob: -12.630387306213379
    9. '.push' → logprob: -12.755387306213379
    10. 'app' → logprob: -14.505387306213379

Token 454: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.05676443129777908
    2. 'pp' → logprob: -3.0567643642425537
    3. 'push' → logprob: -5.431764602661133
    4. 'ush' → logprob: -5.681764602661133
    5. 'p' → logprob: -8.556764602661133
    6. 'he' → logprob: -9.681764602661133
    7. 'q' → logprob: -9.681764602661133
    8. 'ap' → logprob: -10.306764602661133
    9. '.he' → logprob: -12.931764602661133
    10. 'h' → logprob: -13.056764602661133

Token 455: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.0019940626807510853
    2. 'push' → logprob: -6.2519941329956055
    3. 'pp' → logprob: -9.876994132995605
    4. 'app' → logprob: -11.751994132995605
    5. 'p' → logprob: -12.376994132995605
    6. 'sh' → logprob: -13.751994132995605
    7. 'q' → logprob: -14.751994132995605
    8. 'h' → logprob: -15.876994132995605
    9. '```' → logprob: -16.37699317932129
    10. 'u' → logprob: -16.62699317932129

Token 456: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -3.054500666621607e-06
    2. 'h' → logprob: -12.75000286102295
    3. '(' → logprob: -16.875003814697266
    4. ' h' → logprob: -17.375003814697266
    5. ',h' → logprob: -17.375003814697266
    6. '(heap' → logprob: -17.500003814697266
    7. ' (' → logprob: -18.250003814697266
    8. '	h' → logprob: -18.375003814697266
    9. 'graph' → logprob: -18.500003814697266
    10. ' ' → logprob: -18.875003814697266

Token 457: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00018685187387745827
    2. '(h' → logprob: -9.000186920166016
    3. '(q' → logprob: -9.875186920166016
    4. 'c' → logprob: -12.375186920166016
    5. '(graph' → logprob: -13.500186920166016
    6. '(heap' → logprob: -13.625186920166016
    7. 'hq' → logprob: -13.875186920166016
    8. 'graph' → logprob: -13.875186920166016
    9. 'h' → logprob: -14.250186920166016
    10. '(' → logprob: -14.625186920166016

Token 458: ',(' (ID: 27243)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.027350129559636116
    2. ',h' → logprob: -3.9023501873016357
    3. ',' → logprob: -5.152349948883057
    4. ',(' → logprob: -7.027349948883057
    5. ')' → logprob: -10.027350425720215
    6. '(n' → logprob: -11.152350425720215
    7. '(heap' → logprob: -11.152350425720215
    8. '(q' → logprob: -11.402350425720215
    9. ' (' → logprob: -12.027350425720215
    10. ',q' → logprob: -12.152350425720215

Token 459: 'nc' (ID: 24825)
  Prédit: 'nc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -5.860340752406046e-05
    2. ' nc' → logprob: -9.7500581741333
    3. '_nc' → logprob: -16.250059127807617
    4. 'nv' → logprob: -16.625059127807617
    5. '   ' → logprob: -18.875059127807617
    6. '.nc' → logprob: -19.375059127807617
    7. 'n' → logprob: -19.625059127807617
    8. 'nb' → logprob: -20.250059127807617
    9. '    ' → logprob: -21.750059127807617
    10. 'nr' → logprob: -21.750059127807617

Token 460: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.004079112783074379
    2. ',' → logprob: -5.504079341888428
    3. ' ,' → logprob: -14.25407886505127
    4. 'v' → logprob: -17.504079818725586
    5. ',u' → logprob: -19.504079818725586
    6. ',w' → logprob: -19.879079818725586
    7. ',
' → logprob: -20.754079818725586
    8. '   ' → logprob: -20.754079818725586
    9. ',n' → logprob: -21.129079818725586
    10. ',y' → logprob: -21.254079818725586

Token 461: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.02325887233018875
    2. ')' → logprob: -3.773258924484253
    3. '))
' → logprob: -11.398259162902832
    4. ')))' → logprob: -13.273259162902832
    5. ')
' → logprob: -15.023259162902832
    6. ' ))' → logprob: -16.898258209228516
    7. '));' → logprob: -17.273258209228516
    8. '       ' → logprob: -17.398258209228516
    9. '           ' → logprob: -17.773258209228516
    10. '))))' → logprob: -17.773258209228516

Token 462: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02434076927602291
    2. 'print' → logprob: -4.149340629577637
    3. '
' → logprob: -4.899340629577637
    4. '       ' → logprob: -7.524340629577637
    5. '    
' → logprob: -9.274340629577637
    6. ' print' → logprob: -9.399340629577637
    7. '<|end|>' → logprob: -9.899340629577637
    8. '```' → logprob: -10.149340629577637
    9. '        
' → logprob: -12.774340629577637
    10. '  
' → logprob: -12.899340629577637

Token 463: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48833954334259033
    2. 'print' (adapté à ' print') → logprob: -0.9883395433425903
    3. ' print' → logprob: -4.363339424133301
    4. '
' → logprob: -6.613339424133301
    5. '	print' → logprob: -10.4883394241333
    6. '       ' → logprob: -10.7383394241333
    7. '    
' → logprob: -11.1133394241333
    8. '```' → logprob: -11.1133394241333
    9. '#print' → logprob: -13.9883394241333
    10. '(print' → logprob: -14.1133394241333

Token 464: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -5.512236498361744e-07
    2. 'total' → logprob: -14.500000953674316
    3. '(' → logprob: -16.875
    4. ' total' → logprob: -19.125
    5. ' (' → logprob: -19.875
    6. '(t' → logprob: -20.75
    7. ',total' → logprob: -20.875
    8. '(f' → logprob: -21.625
    9. '(max' → logprob: -22.625
    10. '((' → logprob: -22.625

Token 465: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: 0.0
    2. '_total' → logprob: -20.25
    3. 'cost' → logprob: -20.375
    4. '_co' → logprob: -20.75
    5. '_COST' → logprob: -20.75
    6. '_' → logprob: -21.0
    7. '_code' → logprob: -21.0
    8. '_c' → logprob: -21.125
    9. '_cos' → logprob: -21.375
    10. ' _' → logprob: -21.625

Token 466: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ' )' → logprob: -14.250000953674316
    3. ')
' → logprob: -14.875000953674316
    4. ')`' → logprob: -16.250001907348633
    5. ')}' → logprob: -17.250001907348633
    6. '())' → logprob: -17.500001907348633
    7. '))' → logprob: -17.750001907348633
    8. '()' → logprob: -18.875001907348633
    9. '`)' → logprob: -19.500001907348633
    10. '),' → logprob: -19.625001907348633

Token 467: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10797829180955887
    2. '<|end|>' → logprob: -2.357978343963623
    3. '
' → logprob: -5.482978343963623
    4. '```' → logprob: -6.357978343963623
    5. 'main' → logprob: -6.857978343963623
    6. ' if' → logprob: -7.857978343963623
    7. '#' → logprob: -8.357977867126465
    8. '<|end|>' → logprob: -10.107977867126465
    9. '[' → logprob: -10.607977867126465
    10. '...' → logprob: -10.607977867126465

Token 468: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.16023285686969757
    2. ' __' → logprob: -1.9102329015731812
    3. '___' → logprob: -12.785232543945312
    4. 'name' → logprob: -13.285232543945312
    5. '_' → logprob: -13.285232543945312
    6. '_name' → logprob: -13.910232543945312
    7. '____' → logprob: -13.910232543945312
    8. '/__' → logprob: -15.535232543945312
    9. '.__' → logprob: -16.410232543945312
    10. 'if' → logprob: -16.660232543945312

Token 469: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.16632533073425293
    2. ' ==' → logprob: -2.166325330734253
    3. '==' → logprob: -3.666325330734253
    4. 'name' → logprob: -5.041325569152832
    5. '=="' → logprob: -6.041325569152832
    6. '.__' → logprob: -6.291325569152832
    7. '__.__' → logprob: -7.291325569152832
    8. '.name' → logprob: -7.791325569152832
    9. ' __' → logprob: -8.041325569152832
    10. '=='' → logprob: -8.291325569152832

Token 470: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.1008713702030946e-06
    2. '==' → logprob: -13.250001907348633
    3. '__.__' → logprob: -15.125001907348633
    4. '___' → logprob: -17.375001907348633
    5. ' ==' → logprob: -17.625001907348633
    6. '____' → logprob: -17.750001907348633
    7. '=="' → logprob: -18.500001907348633
    8. '__('' → logprob: -18.500001907348633
    9. '__.' → logprob: -18.625001907348633
    10. '_' → logprob: -19.000001907348633

Token 471: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1389155089855194
    2. '==' → logprob: -2.763915538787842
    3. '=="' → logprob: -2.763915538787842
    4. '=='' → logprob: -6.263915538787842
    5. ' ==' → logprob: -6.388915538787842
    6. '___' → logprob: -11.763915061950684
    7. '=' → logprob: -12.513915061950684
    8. '==="' → logprob: -12.638915061950684
    9. '===' → logprob: -13.138915061950684
    10. '__.__' → logprob: -13.388915061950684

Token 472: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.07889639586210251
    2. ''' → logprob: -2.5788962841033936
    3. '__' → logprob: -12.453896522521973
    4. ' "__' → logprob: -12.953896522521973
    5. ' '__' → logprob: -15.828896522521973
    6. '"user' → logprob: -16.578895568847656
    7. ''"' → logprob: -17.578895568847656
    8. '"name' → logprob: -17.703895568847656
    9. '("__' → logprob: -17.703895568847656
    10. '"'' → logprob: -17.828895568847656

Token 473: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.578022837638855
    2. 'main' → logprob: -0.828022837638855
    3. '"' → logprob: -6.2030229568481445
    4. ''' → logprob: -10.078022956848145
    5. 'name' → logprob: -11.453022956848145
    6. '__":
' → logprob: -12.578022956848145
    7. '__':
' → logprob: -15.328022956848145
    8. '__
' → logprob: -15.328022956848145
    9. '___' → logprob: -15.328022956848145
    10. '_main' → logprob: -15.578022956848145

Token 474: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.0022638519294559956
    2. '__' → logprob: -6.252264022827148
    3. '__':
' → logprob: -8.002264022827148
    4. '__.' → logprob: -15.252264022827148
    5. '__["' → logprob: -15.627264022827148
    6. '__.__' → logprob: -16.50226402282715
    7. '__:' → logprob: -17.62726402282715
    8. '__("' → logprob: -18.12726402282715
    9. '__",' → logprob: -18.37726402282715
    10. '__
' → logprob: -18.62726402282715

Token 475: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.009390528313815594
    2. '	main' → logprob: -5.384390354156494
    3. ' main' → logprob: -5.509390354156494
    4. '   ' → logprob: -7.259390354156494
    5. '_main' → logprob: -12.259390830993652
    6. '(main' → logprob: -14.134390830993652
    7. ' ' → logprob: -15.259390830993652
    8. '  ' → logprob: -15.884390830993652
    9. '    
' → logprob: -15.884390830993652
    10. 'mainwindow' → logprob: -16.134389877319336

Token 476: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.5
    3. '	main' → logprob: -22.0
    4. '_main' → logprob: -25.125
    5. '   ' → logprob: -26.5
    6. '.main' → logprob: -26.5
    7. 'Main' → logprob: -27.125
    8. '(main' → logprob: -28.375
    9. '主' → logprob: -29.875
    10. '-main' → logprob: -30.125

Token 477: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 475
Tokens correctement prédits (1ère position, stricte): 234
Tokens correctement prédits (1ère position, avec adaptation): 252
Tokens correctement prédits (top 10): 429
Précision stricte (1ère position): 49.26%
Précision adaptée (1ère position): 53.05%
Précision (top 10): 90.32%
================================================================================
