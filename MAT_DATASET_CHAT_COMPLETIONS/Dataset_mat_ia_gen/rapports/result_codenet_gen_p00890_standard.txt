================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:05:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import heapq

def dijkstra(n, adj):
    dist = [float('inf')] * (n+1)
    dist[1] = 0
    pq = [(0,1)]
    while pq:
        cd,u = heapq.heappop(pq)
        if cd > dist[u]:
            continue
        for v,w,_ in adj[u]:
            nd = cd + w
            if nd < dist[v]:
                dist[v] = nd
                heapq.heappush(pq,(nd,v))
    return dist

def main():
    input=sys.stdin.readline
    while True:
        n,m,c = map(int,input().split())
        if n==0 and m==0 and c==0:
            break
        adj = [[] for _ in range(n+1)]
        edges = []
        for i in range(m):
            f,t,w = map(int,input().split())
            adj[f].append((t,w,i))
            edges.append((f,t,w))
        dist = dijkstra(n,adj)
        original = dist[n]
        # We want to reduce dist from original > c to exactly c by changing minimal edges
        # We model a graph where each edge change cost = 1, else 0
        # Also, edge weights after change must be >=0 and can be adjusted to non-negative
        # So for each edge (f,t,w), two options:
        # 1) do not change: cost w, changes 0
        # 2) if w > new_w >=0, and we want total path cost c, we can reduce some edges
        # Idea: Dijkstra on (node, change_count), store minimal distance with given changed edges
        max_changes = m
        dist2 = [[float('inf')] * (max_changes+1) for _ in range(n+1)]
        dist2[1][0] = 0
        # priority queue of (distance, changes, node)
        heap = [(0,0,1)]
        while heap:
            cd,ch,u = heapq.heappop(heap)
            if dist2[u][ch]<cd:
                continue
            if u == n and cd == c:
                print(ch)
                break
            if u == n and cd > c:
                continue
            for v,w,i_edge in adj[u]:
                # option1: no change
                nd = cd + w
                if nd <= c and nd < dist2[v][ch]:
                    dist2[v][ch] = nd
                    heapq.heappush(heap,(nd,ch,v))
                # option2: change edge cost to reduce path cost if w > 0 and ch +1 <=m
                # set edge cost = max(0, c - (cd + sum_of_rest)) but we only know cd and w now
                if ch+1<=m:
                    # we can set edge cost to c - cd if >=0 and <=w to reduce cost
                    new_w = c - cd
                    if new_w <0:
                        new_w =0
                    if new_w < w:
                        nd2 = cd + new_w
                        if nd2 <= c and nd2 < dist2[v][ch+1]:
                            dist2[v][ch+1] = nd2
                            heapq.heappush(heap,(nd2,ch+1,v))
        else:
            # no break => no exact c
            # but problem states c < original min cost, so solution must exist
            # we print minimal ch that achieve dist2[n][ch] == c
            ans = -1
            for ch in range(max_changes+1):
                if dist2[n][ch]==c:
                    ans=ch
                    break
            print(ans if ans>=0 else 0)

if __name__=="__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.21183791756629944
    2. '.' → logprob: -2.3368380069732666
    3. '<|end|>' → logprob: -2.8368380069732666
    4. '\' → logprob: -4.7118377685546875
    5. 'newline' → logprob: -5.0868377685546875
    6. 'import' → logprob: -5.0868377685546875
    7. '
' → logprob: -5.7118377685546875
    8. '' → logprob: -5.8368377685546875
    9. '<|end|>' → logprob: -5.8368377685546875
    10. '\r' → logprob: -6.3368377685546875

Token 4: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020497082732617855
    2. 'os' → logprob: -8.500205039978027
    3. '"os' → logprob: -14.875205039978027
    4. ' math' → logprob: -15.000205039978027
    5. ' re' → logprob: -15.125205039978027
    6. '_os' → logprob: -15.750205039978027
    7. ' json' → logprob: -16.12520408630371
    8. '	os' → logprob: -16.37520408630371
    9. ' ' → logprob: -17.50020408630371
    10. ' ' → logprob: -17.50020408630371

Token 5: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.8444881536415778e-05
    2. '.' → logprob: -10.750028610229492
    3. '#' → logprob: -13.875028610229492
    4. '_' → logprob: -14.000028610229492
    5. 'ify' → logprob: -14.500028610229492
    6. 'space' → logprob: -14.500028610229492
    7. 's' → logprob: -14.750028610229492
    8. ')' → logprob: -14.875028610229492
    9. '

' → logprob: -15.000028610229492
    10. 'queue' → logprob: -15.000028610229492

Token 6: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2145320177078247
    2. '
' → logprob: -2.464531898498535
    3. '\n' → logprob: -3.214531898498535
    4. '\' → logprob: -3.714531898498535
    5. '<|end|>' → logprob: -4.589531898498535
    6. '.
' → logprob: -4.964531898498535
    7. '

' → logprob: -4.964531898498535
    8. 'import' → logprob: -5.339531898498535
    9. '' → logprob: -5.464531898498535
    10. '```' → logprob: -5.714531898498535

Token 7: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6963363289833069
    2. 'def' → logprob: -1.696336269378662
    3. '
' → logprob: -2.321336269378662
    4. '\' → logprob: -3.196336269378662
    5. '```' → logprob: -3.321336269378662
    6. 'class' → logprob: -3.571336269378662
    7. '\n' → logprob: -3.821336269378662
    8. 'from' → logprob: -4.071336269378662
    9. 'import' → logprob: -4.196336269378662
    10. '' → logprob: -4.321336269378662

Token 8: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0016182884573936462
    2. ' a' → logprob: -7.126618385314941
    3. ' find' → logprob: -8.501618385314941
    4. ' space' → logprob: -9.126618385314941
    5. '_' → logprob: -9.501618385314941
    6. ' ' → logprob: -10.001618385314941
    7. ' process' → logprob: -10.126618385314941
    8. ' heap' → logprob: -10.126618385314941
    9. ' A' → logprob: -10.376618385314941
    10. ' merge' → logprob: -10.501618385314941

Token 9: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.5952051281929016
    2. 'e' → logprob: -0.9702051281929016
    3. 'i' → logprob: -3.595205068588257
    4. 'ij' → logprob: -3.720205068588257
    5. 'ijk' → logprob: -4.095205307006836
    6. '_' → logprob: -7.970205307006836
    7. '_e' → logprob: -8.095205307006836
    8. 'jik' → logprob: -9.095205307006836
    9. '```' → logprob: -9.470205307006836
    10. 'ef' → logprob: -9.595205307006836

Token 10: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006681174854747951
    2. '_' → logprob: -7.750668048858643
    3. ' (' → logprob: -9.5006685256958
    4. '(
' → logprob: -10.3756685256958
    5. '<|end|>' → logprob: -10.5006685256958
    6. '```' → logprob: -11.1256685256958
    7. '('' → logprob: -12.0006685256958
    8. '<|end|>' → logprob: -12.0006685256958
    9. '("("' → logprob: -12.1256685256958
    10. ''s' → logprob: -12.2506685256958

Token 11: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009281373349949718
    2. ' ,' → logprob: -7.000927925109863
    3. ',node' → logprob: -12.375927925109863
    4. ')' → logprob: -13.000927925109863
    5. ',n' → logprob: -13.250927925109863
    6. '‌,' → logprob: -13.250927925109863
    7. ',int' → logprob: -13.375927925109863
    8. ',

' → logprob: -13.875927925109863
    9. ',
' → logprob: -14.000927925109863
    10. ',p' → logprob: -14.000927925109863

Token 12: ' adj' (ID: 20251)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.1710110306739807
    2. 'graph' → logprob: -2.296010971069336
    3. ' start' → logprob: -3.296010971069336
    4. ' edges' → logprob: -4.296010971069336
    5. ' s' → logprob: -6.421010971069336
    6. 'edges' → logprob: -6.796010971069336
    7. 'start' → logprob: -7.046010971069336
    8. ' source' → logprob: -7.546010971069336
    9. ' adjacency' → logprob: -7.671010971069336
    10. ' ' → logprob: -7.921010971069336

Token 13: '):
' (ID: 1883)
  Prédit: 'acency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acency' → logprob: -0.07250119000673294
    2. ',' → logprob: -3.5725011825561523
    3. 'acent' → logprob: -4.072501182556152
    4. ')' → logprob: -4.197501182556152
    5. '[' → logprob: -4.822501182556152
    6. '[u' → logprob: -7.447501182556152
    7. '):' → logprob: -7.947501182556152
    8. ',)' → logprob: -8.322501182556152
    9. '[,' → logprob: -9.447501182556152
    10. '):

' → logprob: -9.697501182556152

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02494104765355587
    2. 'dist' → logprob: -3.7749409675598145
    3. ' distances' → logprob: -7.8999409675598145
    4. '```' → logprob: -7.8999409675598145
    5. ' dist' → logprob: -8.149941444396973
    6. '    
' → logprob: -9.024941444396973
    7. '	dist' → logprob: -9.024941444396973
    8. 'distance' → logprob: -9.524941444396973
    9. '_dist' → logprob: -9.649941444396973
    10. '   ' → logprob: -10.149941444396973

Token 15: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.10506345331668854
    2. ' dist' → logprob: -2.6050634384155273
    3. '   ' → logprob: -3.7300634384155273
    4. ' distances' → logprob: -6.480063438415527
    5. 'distance' → logprob: -9.230063438415527
    6. '```' → logprob: -9.855063438415527
    7. '	dist' → logprob: -10.105063438415527
    8. '    ' → logprob: -10.980063438415527
    9. ' distance' → logprob: -11.105063438415527
    10. ' ' → logprob: -11.230063438415527

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043924275785684586
    2. '[' → logprob: -3.543924331665039
    3. '=' → logprob: -4.293924331665039
    4. '[]' → logprob: -9.168924331665039
    5. '[:]' → logprob: -9.418924331665039
    6. '=[]' → logprob: -9.668924331665039
    7. ' ' → logprob: -9.918924331665039
    8. ',' → logprob: -10.293924331665039
    9. ')' → logprob: -10.668924331665039
    10. ']' → logprob: -11.293924331665039

Token 17: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4786929786205292
    2. ' [' → logprob: -0.9786930084228516
    3. '[n' → logprob: -6.103693008422852
    4. '[int' → logprob: -6.728693008422852
    5. '[node' → logprob: -7.728693008422852
    6. '{' → logprob: -8.103693008422852
    7. '[len' → logprob: -9.103693008422852
    8. '[in' → logprob: -10.228693008422852
    9. '[src' → logprob: -10.228693008422852
    10. '[start' → logprob: -10.353693008422852

Token 18: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.006731711328029633
    2. ' float' → logprob: -5.0067315101623535
    3. '10' → logprob: -11.506731986999512
    4. '   ' → logprob: -13.506731986999512
    5. ' ' → logprob: -13.631731986999512
    6. '(float' → logprob: -14.131731986999512
    7. 'sys' → logprob: -14.131731986999512
    8. 'int' → logprob: -14.381731986999512
    9. 'inf' → logprob: -14.381731986999512
    10. ' sys' → logprob: -14.881731986999512

Token 19: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -5.9153885558771435e-06
    2. '(' → logprob: -12.875005722045898
    3. '("' → logprob: -13.375005722045898
    4. ''' → logprob: -14.000005722045898
    5. ''in' → logprob: -14.250005722045898
    6. '(in' → logprob: -16.0000057220459
    7. ' ('' → logprob: -18.0000057220459
    8. '   ' → logprob: -18.6250057220459
    9. '('+' → logprob: -18.7500057220459
    10. 'inf' → logprob: -18.7500057220459

Token 20: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -2.5776860184123507e-06
    2. 'in' → logprob: -13.12500286102295
    3. 'Inf' → logprob: -15.87500286102295
    4. ''in' → logprob: -16.250001907348633
    5. '-inf' → logprob: -16.500001907348633
    6. ' inf' → logprob: -16.875001907348633
    7. '_inf' → logprob: -16.875001907348633
    8. 'info' → logprob: -17.125001907348633
    9. 'INF' → logprob: -17.375001907348633
    10. '.inf' → logprob: -17.625001907348633

Token 21: '')]' (ID: 94377)
  Prédit: '')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')]' → logprob: -0.4585791826248169
    2. ')' → logprob: -1.333579182624817
    3. ')]' → logprob: -2.8335790634155273
    4. '')' → logprob: -3.2085790634155273
    5. ']' → logprob: -5.583579063415527
    6. ''),' → logprob: -7.458579063415527
    7. '),' → logprob: -7.833579063415527
    8. '('' → logprob: -9.333579063415527
    9. ',' → logprob: -9.833579063415527
    10. ''' → logprob: -9.958579063415527

Token 22: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.019876450300216675
    2. ']*' → logprob: -4.519876480102539
    3. ' for' → logprob: -5.019876480102539
    4. ',' → logprob: -6.394876480102539
    5. ' ]' → logprob: -8.519876480102539
    6. ']*(' → logprob: -8.644876480102539
    7. 'for' → logprob: -9.144876480102539
    8. ')' → logprob: -11.769876480102539
    9. '']' → logprob: -12.144876480102539
    10. ' ' → logprob: -12.519876480102539

Token 23: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1214473620057106
    2. ' n' → logprob: -2.6214473247528076
    3. '(n' → logprob: -3.2464473247528076
    4. ' (' → logprob: -5.996447563171387
    5. '(' → logprob: -8.246447563171387
    6. '	n' → logprob: -13.996447563171387
    7. ' ' → logprob: -14.121447563171387
    8. ')n' → logprob: -14.496447563171387
    9. '_n' → logprob: -15.621447563171387
    10. '   ' → logprob: -15.621447563171387

Token 24: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0036077939439564943
    2. ' n' → logprob: -5.628607749938965
    3. ')n' → logprob: -12.503607749938965
    4. '(n' → logprob: -12.753607749938965
    5. '	n' → logprob: -14.253607749938965
    6. '   ' → logprob: -15.003607749938965
    7. ')' → logprob: -16.37860870361328
    8. ' (' → logprob: -16.62860870361328
    9. ' ' → logprob: -16.75360870361328
    10. '_n' → logprob: -17.25360870361328

Token 25: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018693095073103905
    2. '+' → logprob: -4.393692970275879
    3. ' )' → logprob: -5.143692970275879
    4. ' +' → logprob: -8.143692970275879
    5. '+)' → logprob: -11.393692970275879
    6. '))' → logprob: -11.768692970275879
    7. ')]' → logprob: -12.268692970275879
    8. ')
' → logprob: -13.518692970275879
    9. ' ' → logprob: -13.518692970275879
    10. '),' → logprob: -13.518692970275879

Token 26: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.0219828002154827e-05
    2. ' ' → logprob: -10.875020027160645
    3. '   ' → logprob: -14.125020027160645
    4. '```' → logprob: -15.125020027160645
    5. ')' → logprob: -16.50002098083496
    6. '2' → logprob: -16.87502098083496
    7. '

' → logprob: -17.50002098083496
    8. '0' → logprob: -18.00002098083496
    9. '１' → logprob: -18.00002098083496
    10. '  ' → logprob: -18.25002098083496

Token 27: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.966313281329349e-05
    2. ')
' → logprob: -10.500049591064453
    3. '   ' → logprob: -11.000049591064453
    4. ' )' → logprob: -13.125049591064453
    5. '```' → logprob: -13.500049591064453
    6. '`)' → logprob: -14.500049591064453
    7. '<|end|>' → logprob: -15.500049591064453
    8. '),' → logprob: -15.500049591064453
    9. ' ' → logprob: -15.750049591064453
    10. '       ' → logprob: -16.250049591064453

Token 28: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.1604362577199936
    2. '   ' → logprob: -2.9104361534118652
    3. ' dist' → logprob: -3.2854361534118652
    4. '
' → logprob: -3.4104361534118652
    5. '	dist' → logprob: -4.285436153411865
    6. 'd' → logprob: -6.410436153411865
    7. '    
' → logprob: -6.410436153411865
    8. '<|end|>' → logprob: -6.910436153411865
    9. ' 
' → logprob: -7.160436153411865
    10. ' ' → logprob: -7.160436153411865

Token 29: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.28152358531951904
    2. ' dist' → logprob: -1.406523585319519
    3. ' ' → logprob: -8.906523704528809
    4. '	dist' → logprob: -9.531523704528809
    5. '   ' → logprob: -9.656523704528809
    6. 'd' → logprob: -9.781523704528809
    7. '    ' → logprob: -11.656523704528809
    8. '<|end|>' → logprob: -12.031523704528809
    9. '0' → logprob: -12.281523704528809
    10. ' 
' → logprob: -12.281523704528809

Token 30: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.896309739408025e-07
    2. '\[' → logprob: -15.250000953674316
    3. '<|end|>' → logprob: -15.500000953674316
    4. '```' → logprob: -15.750000953674316
    5. '[
' → logprob: -15.875000953674316
    6. ' [' → logprob: -18.0
    7. '[]' → logprob: -18.25
    8. ']' → logprob: -18.5
    9. '<|end|>' → logprob: -18.5
    10. ')' → logprob: -18.75

Token 31: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009100683033466339
    2. '0' → logprob: -4.759100914001465
    3. ' ' → logprob: -7.634100914001465
    4. ')' → logprob: -13.384100914001465
    5. '```' → logprob: -15.259100914001465
    6. ']' → logprob: -15.884100914001465
    7. ' )' → logprob: -16.38409996032715
    8. '2' → logprob: -16.50909996032715
    9. '-' → logprob: -16.88409996032715
    10. '=' → logprob: -17.07159996032715

Token 32: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4513685703277588
    2. ')' → logprob: -1.3263685703277588
    3. ' ]' → logprob: -3.076368570327759
    4. ' )' → logprob: -3.451368570327759
    5. ')]' → logprob: -3.951368570327759
    6. '])' → logprob: -8.07636833190918
    7. ' ])' → logprob: -8.20136833190918
    8. '=' → logprob: -9.82636833190918
    9. ']=' → logprob: -10.32636833190918
    10. '[' → logprob: -10.45136833190918

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011051828041672707
    2. '=' → logprob: -4.511051654815674
    3. ']' → logprob: -13.886052131652832
    4. ' =)' → logprob: -13.886052131652832
    5. ' ' → logprob: -14.261052131652832
    6. '[' → logprob: -14.886052131652832
    7. ')' → logprob: -15.011052131652832
    8. ' =
' → logprob: -15.386052131652832
    9. ' ==' → logprob: -16.511051177978516
    10. ',' → logprob: -16.761051177978516

Token 34: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004078878089785576
    2. ' ' → logprob: -5.5040788650512695
    3. '   ' → logprob: -15.50407886505127
    4. ' ' → logprob: -15.75407886505127
    5. '  ' → logprob: -16.254079818725586
    6. '```' → logprob: -17.191579818725586
    7. '۰' → logprob: -18.629079818725586
    8. '`' → logprob: -18.754079818725586
    9. '    ' → logprob: -18.816579818725586
    10. '00' → logprob: -19.129079818725586

Token 35: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '۰' → logprob: -19.875
    4. ' ' → logprob: -20.5
    5. '   ' → logprob: -20.75
    6. '```' → logprob: -20.875
    7. '00' → logprob: -21.25
    8. '1' → logprob: -21.5625
    9. '٠' → logprob: -21.6875
    10. '０' → logprob: -21.75

Token 36: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01526638213545084
    2. '   ' → logprob: -5.140266418457031
    3. '\n' → logprob: -5.265266418457031
    4. '' → logprob: -6.015266418457031
    5. '    
' → logprob: -7.765266418457031
    6. 'newline' → logprob: -8.140266418457031
    7. '
' → logprob: -8.265266418457031
    8. '<|end|>' → logprob: -8.890266418457031
    9. '\' → logprob: -9.015266418457031
    10. '  
' → logprob: -9.140266418457031

Token 37: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.013244700618088245
    2. '   ' → logprob: -4.51324462890625
    3. '    
' → logprob: -7.13824462890625
    4. '' → logprob: -7.26324462890625
    5. '
' → logprob: -8.51324462890625
    6. '\n' → logprob: -9.13824462890625
    7. '  
' → logprob: -9.63824462890625
    8. '```' → logprob: -9.63824462890625
    9. 'heap' → logprob: -9.76324462890625
    10. '<|end|>' → logprob: -10.51324462890625

Token 38: ' pq' (ID: 65424)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3382731676101685
    2. ' heap' → logprob: -1.3382731676101685
    3. '
' → logprob: -1.4632731676101685
    4. 'heap' → logprob: -1.7132731676101685
    5. 'pq' (adapté à ' pq') → logprob: -3.463273048400879
    6. 'import' → logprob: -4.713273048400879
    7. '```' → logprob: -4.713273048400879
    8. ' pq' → logprob: -5.213273048400879
    9. 'priority' → logprob: -6.213273048400879
    10. '    
' → logprob: -6.213273048400879

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014328272081911564
    2. '=' → logprob: -4.389328479766846
    3. '.' → logprob: -6.389328479766846
    4. '=[]' → logprob: -9.764328002929688
    5. '.append' → logprob: -10.639328002929688
    6. ' .' → logprob: -11.139328002929688
    7. '.push' → logprob: -11.764328002929688
    8. '<|end|>' → logprob: -11.889328002929688
    9. '  ' → logprob: -12.639328002929688
    10. ' ' → logprob: -12.639328002929688

Token 40: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.03309250995516777
    2. '[]' → logprob: -3.533092498779297
    3. ' [(' → logprob: -5.783092498779297
    4. ' []' → logprob: -8.283092498779297
    5. '[' → logprob: -12.408092498779297
    6. '[]
' → logprob: -15.783092498779297
    7. '[((' → logprob: -16.533092498779297
    8. '([(' → logprob: -16.908092498779297
    9. '[]}' → logprob: -17.033092498779297
    10. ' [' → logprob: -18.158092498779297

Token 41: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.250000953674316
    3. 'dist' → logprob: -16.0
    4. '(' → logprob: -16.125
    5. '(dist' → logprob: -17.625
    6. '   ' → logprob: -19.625
    7. '```' → logprob: -19.875
    8. ')' → logprob: -19.875
    9. ' dist' → logprob: -20.375
    10. '  ' → logprob: -22.125

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3663626305060461e-05
    2. ' ,' → logprob: -11.62501335144043
    3. '<|end|>' → logprob: -12.62501335144043
    4. ',
' → logprob: -14.75001335144043
    5. '‌,' → logprob: -15.00001335144043
    6. ',int' → logprob: -16.25001335144043
    7. ',user' → logprob: -16.62501335144043
    8. ',...' → logprob: -17.37501335144043
    9. '<|end|>' → logprob: -17.37501335144043
    10. ')' → logprob: -17.37501335144043

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015023599844425917
    2. ' ' → logprob: -6.501502513885498
    3. '   ' → logprob: -19.001502990722656
    4. '```' → logprob: -19.251502990722656
    5. ')' → logprob: -20.064002990722656
    6. '۱' → logprob: -20.376502990722656
    7. '0' → logprob: -20.376502990722656
    8. '  ' → logprob: -20.501502990722656
    9. '１' → logprob: -20.814002990722656
    10. '' → logprob: -20.939002990722656

Token 44: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0028582511004060507
    2. ')' → logprob: -5.8778581619262695
    3. ' )' → logprob: -10.87785816192627
    4. '),' → logprob: -11.00285816192627
    5. '))' → logprob: -11.50285816192627
    6. ')])' → logprob: -12.75285816192627
    7. ']' → logprob: -12.87785816192627
    8. ')}' → logprob: -14.12785816192627
    9. ')]
' → logprob: -15.00285816192627
    10. ',' → logprob: -15.62785816192627

Token 45: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8342540264129639
    2. '   ' → logprob: -0.9592540264129639
    3. 'while' → logprob: -2.084254026412964
    4. '    
' → logprob: -3.709254026412964
    5. ' while' → logprob: -3.834254026412964
    6. ')' → logprob: -4.959254264831543
    7. '	while' → logprob: -5.959254264831543
    8. '\n' → logprob: -7.584254264831543
    9. '   
' → logprob: -7.834254264831543
    10. ',' → logprob: -7.959254264831543

Token 46: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.301906943321228
    2. '   ' → logprob: -1.926906943321228
    3. ' while' → logprob: -2.3019070625305176
    4. '
' → logprob: -4.926907062530518
    5. '    
' → logprob: -5.926907062530518
    6. '	while' → logprob: -5.926907062530518
    7. '\n' → logprob: -6.926907062530518
    8. ')' → logprob: -7.676907062530518
    9. '```' → logprob: -8.17690658569336
    10. '  
' → logprob: -8.55190658569336

Token 47: ' pq' (ID: 65424)
  Prédit: ' pq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pq' → logprob: -0.1269671618938446
    2. 'pq' → logprob: -2.126967191696167
    3. ' ' → logprob: -10.251967430114746
    4. 'q' → logprob: -13.751967430114746
    5. '	p' → logprob: -14.251967430114746
    6. '   ' → logprob: -14.251967430114746
    7. ' len' → logprob: -14.626967430114746
    8. ' ' → logprob: -15.001967430114746
    9. 'p' → logprob: -15.376967430114746
    10. '  ' → logprob: -15.876967430114746

Token 48: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002735805232077837
    2. '):' → logprob: -6.127735614776611
    3. '>:' → logprob: -8.87773609161377
    4. '[' → logprob: -9.12773609161377
    5. ':**' → logprob: -9.37773609161377
    6. '.pop' → logprob: -10.00273609161377
    7. ']:' → logprob: -10.00273609161377
    8. ':not' → logprob: -10.87773609161377
    9. ',' → logprob: -11.12773609161377
    10. '}:' → logprob: -11.37773609161377

Token 49: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3971353769302368
    2. '       ' → logprob: -1.1471353769302368
    3. '):' → logprob: -5.647135257720947
    4. ':' → logprob: -6.522135257720947
    5. ')' → logprob: -6.772135257720947
    6. ',
' → logprob: -6.897135257720947
    7. ' ,' → logprob: -7.022135257720947
    8. '):
' → logprob: -8.022135734558105
    9. '   ' → logprob: -8.147135734558105
    10. ',p' → logprob: -8.772135734558105

Token 50: ' cd' (ID: 24852)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.5254358053207397
    2. 'd' → logprob: -1.6504358053207397
    3. ',' → logprob: -2.5254359245300293
    4. '   ' → logprob: -3.1504359245300293
    5. ' ,' → logprob: -3.7754359245300293
    6. 'dist' → logprob: -3.7754359245300293
    7. ' cost' → logprob: -5.025435924530029
    8. ' d' → logprob: -5.025435924530029
    9. '0' → logprob: -5.025435924530029
    10. 'cur' → logprob: -5.400435924530029

Token 51: ',u' (ID: 80698)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005490940995514393
    2. 'ist' → logprob: -5.505490779876709
    3. ' ,' → logprob: -6.880490779876709
    4. ',_' → logprob: -8.880491256713867
    5. 'istance' → logprob: -9.505491256713867
    6. ',)' → logprob: -9.630491256713867
    7. '_,' → logprob: -10.755491256713867
    8. ',,' → logprob: -11.380491256713867
    9. ',c' → logprob: -11.880491256713867
    10. 't' → logprob: -12.005491256713867

Token 52: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.578435480594635
    2. ' =' → logprob: -0.828435480594635
    3. ',' → logprob: -6.32843542098999
    4. ')' → logprob: -7.45343542098999
    5. ')=' → logprob: -9.703435897827148
    6. '   ' → logprob: -11.578435897827148
    7. '=u' → logprob: -11.578435897827148
    8. ',)' → logprob: -11.953435897827148
    9. ',u' → logprob: -12.203435897827148
    10. ' ' → logprob: -12.203435897827148

Token 53: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.4327302873134613
    2. 'heap' → logprob: -1.0577303171157837
    3. ' he' → logprob: -5.682730197906494
    4. 'he' → logprob: -7.432730197906494
    5. '(heap' → logprob: -11.432730674743652
    6. '.heap' → logprob: -12.182730674743652
    7. ' pq' → logprob: -12.682730674743652
    8. 'pq' → logprob: -13.307730674743652
    9. ' ' → logprob: -13.557730674743652
    10. '_heap' → logprob: -13.807730674743652

Token 54: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -5.200166469876422e-06
    2. 'p' → logprob: -12.250004768371582
    3. 'app' → logprob: -15.750004768371582
    4. 'pp' → logprob: -16.8750057220459
    5. 'replace' → logprob: -17.2500057220459
    6. 'pop' → logprob: -17.6250057220459
    7. '.he' → logprob: -18.1250057220459
    8. '```' → logprob: -18.6250057220459
    9. '

' → logprob: -18.7500057220459
    10. '[' → logprob: -19.0000057220459

Token 55: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.00036323294625617564
    2. '.' → logprob: -8.00036334991455
    3. '.heap' → logprob: -11.62536334991455
    4. '.pop' → logprob: -11.75036334991455
    5. 'he' → logprob: -11.75036334991455
    6. '.h' → logprob: -13.62536334991455
    7. '.p' → logprob: -14.25036334991455
    8. ' he' → logprob: -15.50036334991455
    9. '.q' → logprob: -15.87536334991455
    10. ' .' → logprob: -15.87536334991455

Token 56: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -4.0722858102526516e-05
    2. 'pp' → logprob: -10.125041007995605
    3. 'ap' → logprob: -14.250041007995605
    4. 'q' → logprob: -18.50004005432129
    5. 'a' → logprob: -18.62504005432129
    6. '[' → logprob: -19.00004005432129
    7. 'appen' → logprob: -19.00004005432129
    8. 'appe' → logprob: -19.75004005432129
    9. ' app' → logprob: -19.87504005432129
    10. 'qp' → logprob: -19.87504005432129

Token 57: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.5759760737419128
    2. 'ush' → logprob: -0.8259760737419128
    3. 'app' → logprob: -11.075976371765137
    4. 'p' → logprob: -12.200976371765137
    5. 'push' → logprob: -12.200976371765137
    6. 'pop' → logprob: -12.575976371765137
    7. 'pp' → logprob: -12.950976371765137
    8. 'ap' → logprob: -13.825976371765137
    9. 'q' → logprob: -13.825976371765137
    10. '```' → logprob: -14.450976371765137

Token 58: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.03810850903391838
    2. '(' → logprob: -3.2881085872650146
    3. '(q' → logprob: -9.788108825683594
    4. '(py' → logprob: -12.538108825683594
    5. ' (' → logprob: -13.163108825683594
    6. '(n' → logprob: -14.038108825683594
    7. '(
' → logprob: -14.163108825683594
    8. ')' → logprob: -14.663108825683594
    9. '(u' → logprob: -14.788108825683594
    10. '(pr' → logprob: -14.788108825683594

Token 59: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.5776860184123507e-06
    2. ')' → logprob: -14.62500286102295
    3. '(q' → logprob: -14.75000286102295
    4. '	q' → logprob: -14.75000286102295
    5. ' q' → logprob: -16.312501907348633
    6. '

' → logprob: -16.437501907348633
    7. 'Q' → logprob: -16.437501907348633
    8. '(' → logprob: -16.500001907348633
    9. '.q' → logprob: -16.750001907348633
    10. ''q' → logprob: -16.937501907348633

Token 60: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1160349458805285e-05
    2. '       ' → logprob: -12.000011444091797
    3. ')
' → logprob: -12.500011444091797
    4. ' )' → logprob: -14.375011444091797
    5. '   ' → logprob: -14.750011444091797
    6. '))' → logprob: -15.500011444091797
    7. ')`' → logprob: -17.250011444091797
    8. '`)' → logprob: -18.500011444091797
    9. '()' → logprob: -18.875011444091797
    10. ')))' → logprob: -19.000011444091797

Token 61: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019244490191340446
    2. '<|end|>' → logprob: -4.51924467086792
    3. '
' → logprob: -5.39424467086792
    4. '        
' → logprob: -6.01924467086792
    5. ')' → logprob: -8.519244194030762
    6. '        ' → logprob: -8.769244194030762
    7. ' 
' → logprob: -8.769244194030762
    8. ' ' → logprob: -8.894244194030762
    9. '   ' → logprob: -9.269244194030762
    10. '  
' → logprob: -9.519244194030762

Token 62: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10394436120986938
    2. 'if' (adapté à ' if') → logprob: -2.8539443016052246
    3. ' if' → logprob: -3.2289443016052246
    4. '   ' → logprob: -7.353944301605225
    5. '<|end|>' → logprob: -8.728944778442383
    6. ' ' → logprob: -8.978944778442383
    7. '        
' → logprob: -8.978944778442383
    8. '\n' → logprob: -9.728944778442383
    9. '```' → logprob: -10.103944778442383
    10. '        ' → logprob: -10.103944778442383

Token 63: ' cd' (ID: 24852)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.4774165153503418
    2. ' cd' → logprob: -0.9774165153503418
    3. 'cd' → logprob: -6.352416515350342
    4. 'dist' → logprob: -6.477416515350342
    5. '	cd' → logprob: -10.4774169921875
    6. '   ' → logprob: -11.4774169921875
    7. '	dist' → logprob: -12.6024169921875
    8. '(cd' → logprob: -12.6024169921875
    9. ' ' → logprob: -13.2274169921875
    10. '```' → logprob: -13.3524169921875

Token 64: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.07894156873226166
    2. ' >' → logprob: -2.578941583633423
    3. '">' → logprob: -10.328941345214844
    4. '>d' → logprob: -12.703941345214844
    5. ' ' → logprob: -13.078941345214844
    6. ' ' → logprob: -13.328941345214844
    7. ')>' → logprob: -13.328941345214844
    8. '[' → logprob: -13.703941345214844
    9. '!=' → logprob: -13.828941345214844
    10. ''>' → logprob: -13.828941345214844

Token 65: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.06197217106819153
    2. 'dist' → logprob: -2.811972141265869
    3. '	dist' → logprob: -12.936972618103027
    4. '(dist' → logprob: -13.936972618103027
    5. ' ' → logprob: -14.186972618103027
    6. ' ' → logprob: -16.06197166442871
    7. '```' → logprob: -16.18697166442871
    8. 'Dist' → logprob: -16.68697166442871
    9. '_dist' → logprob: -16.81197166442871
    10. 'd' → logprob: -16.81197166442871

Token 66: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -14.625000953674316
    3. 'u' → logprob: -16.375
    4. '```' → logprob: -18.75
    5. '	u' → logprob: -19.5
    6. '\[' → logprob: -20.375
    7. '[user' → logprob: -20.75
    8. ' u' → logprob: -21.5
    9. '<u' → logprob: -21.625
    10. '(u' → logprob: -21.625

Token 67: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004659425176214427
    2. ')' → logprob: -8.000466346740723
    3. ':' → logprob: -9.500466346740723
    4. '):
' → logprob: -10.125466346740723
    5. ']:' → logprob: -11.625466346740723
    6. ' ):' → logprob: -12.125466346740723
    7. '   ' → logprob: -15.500466346740723
    8. ' ' → logprob: -15.625466346740723
    9. '}:' → logprob: -15.750466346740723
    10. '[u' → logprob: -15.875466346740723

Token 68: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04137510433793068
    2. 'continue' → logprob: -3.916375160217285
    3. ' continue' → logprob: -4.041375160217285
    4. ':' → logprob: -6.541375160217285
    5. '       ' → logprob: -6.791375160217285
    6. '
' → logprob: -9.166375160217285
    7. '               ' → logprob: -9.541375160217285
    8. ':
' → logprob: -9.666375160217285
    9. '_continue' → logprob: -9.791375160217285
    10. '	continue' → logprob: -10.041375160217285

Token 69: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.024252455681562424
    2. 'continue' (adapté à ' continue') → logprob: -3.899252414703369
    3. '           ' → logprob: -6.024252414703369
    4. '       ' → logprob: -6.899252414703369
    5. '	continue' → logprob: -8.899252891540527
    6. '_continue' → logprob: -9.649252891540527
    7. ' continues' → logprob: -10.774252891540527
    8. '               ' → logprob: -11.149252891540527
    9. '```' → logprob: -11.774252891540527
    10. '   ' → logprob: -11.899252891540527

Token 70: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28473448753356934
    2. '
' → logprob: -1.5347344875335693
    3. '<|end|>' → logprob: -3.6597344875335693
    4. '        
' → logprob: -5.159734725952148
    5. '\n' → logprob: -8.534734725952148
    6. '  
' → logprob: -9.284734725952148
    7. ' 
' → logprob: -9.409734725952148
    8. 'u' → logprob: -9.659734725952148
    9. ')' → logprob: -9.784734725952148
    10. '<|end|>' → logprob: -10.284734725952148

Token 71: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002806417876854539
    2. '        
' → logprob: -6.002806186676025
    3. '        ' → logprob: -9.377806663513184
    4. '
' → logprob: -10.002806663513184
    5. ' 
' → logprob: -10.127806663513184
    6. '   ' → logprob: -10.502806663513184
    7. 'u' → logprob: -11.252806663513184
    8. '<|end|>' → logprob: -11.252806663513184
    9. '    
' → logprob: -11.377806663513184
    10. '    ' → logprob: -11.627806663513184

Token 72: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2928389608860016
    2. 'for' (adapté à ' for') → logprob: -1.7928389310836792
    3. '       ' → logprob: -2.6678390502929688
    4. '   ' → logprob: -4.917839050292969
    5. '        
' → logprob: -5.042839050292969
    6. '
' → logprob: -6.542839050292969
    7. '    
' → logprob: -7.042839050292969
    8. '	for' → logprob: -7.167839050292969
    9. '<|end|>' → logprob: -7.292839050292969
    10. ' 
' → logprob: -8.917839050292969

Token 73: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.16026932001113892
    2. ' v' → logprob: -1.9102692604064941
    3. '(v' → logprob: -10.285269737243652
    4. ',v' → logprob: -12.535269737243652
    5. '	v' → logprob: -12.785269737243652
    6. '_v' → logprob: -13.785269737243652
    7. 'w' → logprob: -13.785269737243652
    8. ' (' → logprob: -14.410269737243652
    9. '```' → logprob: -14.660269737243652
    10. ',' → logprob: -15.285269737243652

Token 74: ',w' (ID: 49598)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004216170927975327
    2. ',w' → logprob: -8.625421524047852
    3. ' ,' → logprob: -8.750421524047852
    4. ',d' → logprob: -9.875421524047852
    5. ',v' → logprob: -11.250421524047852
    6. ',c' → logprob: -12.500421524047852
    7. ',u' → logprob: -12.625421524047852
    8. ',val' → logprob: -13.500421524047852
    9. ',value' → logprob: -13.625421524047852
    10. ',e' → logprob: -13.875421524047852

Token 75: ',_' (ID: 46431)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016606325283646584
    2. 'in' → logprob: -4.141606330871582
    3. ',' → logprob: -7.641606330871582
    4. ' ,' → logprob: -10.641606330871582
    5. ')' → logprob: -10.891606330871582
    6. ' ' → logprob: -11.141606330871582
    7. '<|end|>' → logprob: -11.141606330871582
    8. '	in' → logprob: -12.641606330871582
    9. ',in' → logprob: -12.766606330871582
    10. ',v' → logprob: -12.891606330871582

Token 76: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011097457259893417
    2. 'in' → logprob: -4.511097431182861
    3. ',' → logprob: -10.63609790802002
    4. ' ' → logprob: -11.51109790802002
    5. '<|end|>' → logprob: -12.51109790802002
    6. ')' → logprob: -12.76109790802002
    7. '	in' → logprob: -13.76109790802002
    8. ',v' → logprob: -13.76109790802002
    9. 'v' → logprob: -13.76109790802002
    10. '  ' → logprob: -14.01109790802002

Token 77: ' adj' (ID: 20251)
  Prédit: ' adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adj' → logprob: -0.25193315744400024
    2. 'adj' → logprob: -1.5019330978393555
    3. '(adj' → logprob: -12.751933097839355
    4. 'ad' → logprob: -14.751933097839355
    5. '   ' → logprob: -15.626933097839355
    6. ' ' → logprob: -15.626933097839355
    7. ' adjacency' → logprob: -15.626933097839355
    8. '_adj' → logprob: -15.876933097839355
    9. 'Adj' → logprob: -16.251934051513672
    10. '[' → logprob: -17.501934051513672

Token 78: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -2.165027217415627e-05
    2. 'u' → logprob: -11.000021934509277
    3. '[' → logprob: -12.750021934509277
    4. '[v' → logprob: -13.750021934509277
    5. '(u' → logprob: -16.00002098083496
    6. '[c' → logprob: -16.00002098083496
    7. ' u' → logprob: -16.37502098083496
    8. '```' → logprob: -16.37502098083496
    9. '[n' → logprob: -16.75002098083496
    10. '	u' → logprob: -17.00002098083496

Token 79: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.020043907687067986
    2. '):' → logprob: -4.020043849945068
    3. ':' → logprob: -6.520043849945068
    4. ']' → logprob: -8.145044326782227
    5. ']):' → logprob: -9.520044326782227
    6. '']:' → logprob: -11.770044326782227
    7. ']:
' → logprob: -11.895044326782227
    8. '}:' → logprob: -11.895044326782227
    9. '"]:' → logprob: -12.020044326782227
    10. ' ):' → logprob: -12.520044326782227

Token 80: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.232362300157547
    2. '<|end|>' → logprob: -1.6073622703552246
    3. '<|end|>' → logprob: -6.482362270355225
    4. '            ' → logprob: -6.607362270355225
    5. ' if' → logprob: -6.982362270355225
    6. '               ' → logprob: -6.982362270355225
    7. ',' → logprob: -7.607362270355225
    8. '       ' → logprob: -7.607362270355225
    9. ' ' → logprob: -7.857362270355225
    10. '        ' → logprob: -8.232362747192383

Token 81: ' nd' (ID: 5914)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2584228515625
    2. 'if' → logprob: -1.7584228515625
    3. '           ' → logprob: -3.6334228515625
    4. '               ' → logprob: -3.7584228515625
    5. '            ' → logprob: -5.7584228515625
    6. ' ' → logprob: -7.1334228515625
    7. ' 
' → logprob: -7.8834228515625
    8. '                ' → logprob: -7.8834228515625
    9. '```' → logprob: -8.6334228515625
    10. '<|end|>' → logprob: -9.0084228515625

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004622968845069408
    2. '=' → logprob: -5.379622936248779
    3. 'ist' → logprob: -13.504623413085938
    4. 'istance' → logprob: -14.379623413085938
    5. '   ' → logprob: -15.379623413085938
    6. ' ' → logprob: -15.879623413085938
    7. '=w' → logprob: -16.004623413085938
    8. '=int' → logprob: -16.504623413085938
    9. ' =
' → logprob: -17.004623413085938
    10. '=d' → logprob: -17.129623413085938

Token 83: ' cd' (ID: 24852)
  Prédit: ' cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cd' → logprob: -0.02975395694375038
    2. 'cd' → logprob: -3.5297539234161377
    3. '	cd' → logprob: -12.904753684997559
    4. '(cd' → logprob: -14.904753684997559
    5. ' cds' → logprob: -15.279753684997559
    6. '_cd' → logprob: -15.404753684997559
    7. ' ' → logprob: -16.654754638671875
    8. ' dist' → logprob: -17.029754638671875
    9. ' ' → logprob: -17.154754638671875
    10. '           ' → logprob: -17.529754638671875

Token 84: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2605319023132324
    2. '+' → logprob: -1.5105319023132324
    3. '+w' → logprob: -4.760531902313232
    4. ' ' → logprob: -13.63553237915039
    5. '+n' → logprob: -13.63553237915039
    6. '<|end|>' → logprob: -14.88553237915039
    7. '+h' → logprob: -15.01053237915039
    8. ' plus' → logprob: -15.38553237915039
    9. '＋' → logprob: -15.51053237915039
    10. '+xml' → logprob: -16.01053237915039

Token 85: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.04858759790658951
    2. ' w' → logprob: -3.0485875606536865
    3. ' ' → logprob: -15.923587799072266
    4. '	w' → logprob: -17.423587799072266
    5. '   ' → logprob: -17.673587799072266
    6. ' ' → logprob: -17.673587799072266
    7. 'v' → logprob: -17.798587799072266
    8. ''w' → logprob: -18.798587799072266
    9. '    ' → logprob: -19.048587799072266
    10. '  ' → logprob: -19.048587799072266

Token 86: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03092212788760662
    2. '<|end|>' → logprob: -3.9059221744537354
    3. '
' → logprob: -5.030921936035156
    4. '       ' → logprob: -6.905921936035156
    5. '<|end|>' → logprob: -7.280921936035156
    6. '            
' → logprob: -7.655921936035156
    7. ' 
' → logprob: -8.030921936035156
    8. '               ' → logprob: -8.280921936035156
    9. '  
' → logprob: -8.405921936035156
    10. ')' → logprob: -8.530921936035156

Token 87: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02869231253862381
    2. '<|end|>' → logprob: -3.6536922454833984
    3. '
' → logprob: -6.653692245483398
    4. '       ' → logprob: -7.528692245483398
    5. '<|end|>' → logprob: -8.278692245483398
    6. ' if' → logprob: -9.153692245483398
    7. '               ' → logprob: -10.028692245483398
    8. '            
' → logprob: -10.403692245483398
    9. '   ' → logprob: -10.403692245483398
    10. ' 
' → logprob: -10.528692245483398

Token 88: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0854623317718506
    2. '<|end|>' → logprob: -1.2104623317718506
    3. ' ' → logprob: -1.8354623317718506
    4. ' if' → logprob: -1.9604623317718506
    5. 'if' (adapté à ' if') → logprob: -3.7104623317718506
    6. ' 
' → logprob: -4.33546257019043
    7. '               ' → logprob: -4.96046257019043
    8. '            ' → logprob: -4.96046257019043
    9. '<|end|>' → logprob: -5.33546257019043
    10. '
' → logprob: -5.96046257019043

Token 89: ' nd' (ID: 5914)
  Prédit: ' nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.010757035575807095
    2. ' dist' → logprob: -4.760756969451904
    3. 'nd' → logprob: -6.385756969451904
    4. 'dist' → logprob: -7.760756969451904
    5. '(nd' → logprob: -11.010757446289062
    6. ' ' → logprob: -12.760757446289062
    7. '(dist' → logprob: -13.510757446289062
    8. '```' → logprob: -13.510757446289062
    9. '	dist' → logprob: -13.760757446289062
    10. ' ' → logprob: -13.760757446289062

Token 90: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0028502829372882843
    2. '<' → logprob: -5.87785005569458
    3. '<|end|>' → logprob: -10.377850532531738
    4. ' ' → logprob: -12.002850532531738
    5. '[' → logprob: -13.002850532531738
    6. ' ' → logprob: -13.502850532531738
    7. '<int' → logprob: -13.627850532531738
    8. ' <",' → logprob: -14.502850532531738
    9. '<n' → logprob: -15.002850532531738
    10. '<th' → logprob: -15.877850532531738

Token 91: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.0297551192343235
    2. 'dist' → logprob: -3.529755115509033
    3. '	dist' → logprob: -12.654755592346191
    4. '(dist' → logprob: -14.279755592346191
    5. ' ' → logprob: -15.029755592346191
    6. 'Dist' → logprob: -16.154754638671875
    7. '_dist' → logprob: -16.279754638671875
    8. '=' → logprob: -16.529754638671875
    9. ' ' → logprob: -16.904754638671875
    10. '```' → logprob: -16.904754638671875

Token 92: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -6.704273118884885e-07
    2. 'v' → logprob: -15.125000953674316
    3. '[' → logprob: -15.500000953674316
    4. '[u' → logprob: -16.625
    5. '```' → logprob: -18.5
    6. '<v' → logprob: -19.5
    7. ' [' → logprob: -19.75
    8. '[w' → logprob: -19.75
    9. '	v' → logprob: -20.125
    10. ' v' → logprob: -20.25

Token 93: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.01670493185520172
    2. ':' → logprob: -4.39170503616333
    3. ']:
' → logprob: -6.26670503616333
    4. '):' → logprob: -6.39170503616333
    5. ']' → logprob: -7.64170503616333
    6. '}:' → logprob: -10.016704559326172
    7. ':
' → logprob: -10.891704559326172
    8. '):
' → logprob: -10.891704559326172
    9. ']:
' → logprob: -11.016704559326172
    10. '']:' → logprob: -11.516704559326172

Token 94: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2674590051174164
    2. ':' → logprob: -1.5174590349197388
    3. '<|end|>' → logprob: -4.767458915710449
    4. '           ' → logprob: -5.767458915710449
    5. ':
' → logprob: -7.392458915710449
    6. '):' → logprob: -7.392458915710449
    7. ' :' → logprob: -7.517458915710449
    8. '                ' → logprob: -7.892458915710449
    9. '<|end|>' → logprob: -8.14245891571045
    10. '       ' → logprob: -8.39245891571045

Token 95: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.2856210470199585
    2. 'dist' (adapté à ' dist') → logprob: -2.285621166229248
    3. '                ' → logprob: -2.660621166229248
    4. '               ' → logprob: -3.160621166229248
    5. ' ' → logprob: -3.785621166229248
    6. '                   ' → logprob: -4.785621166229248
    7. '	dist' → logprob: -7.160621166229248
    8. '<|end|>' → logprob: -7.910621166229248
    9. '_dist' → logprob: -8.16062068939209
    10. ' 
' → logprob: -8.41062068939209

Token 96: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.2352385965641588e-05
    2. '[' → logprob: -11.375012397766113
    3. 'v' → logprob: -14.750012397766113
    4. '[u' → logprob: -16.250011444091797
    5. '[val' → logprob: -16.500011444091797
    6. '<v' → logprob: -17.000011444091797
    7. '	v' → logprob: -17.375011444091797
    8. '```' → logprob: -17.375011444091797
    9. '=v' → logprob: -17.500011444091797
    10. '<|end|>' → logprob: -17.875011444091797

Token 97: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10354477167129517
    2. '[v' → logprob: -2.3535447120666504
    3. ']=' → logprob: -6.10354471206665
    4. ' =' → logprob: -8.103545188903809
    5. ' ]' → logprob: -8.353545188903809
    6. '[' → logprob: -8.603545188903809
    7. ')' → logprob: -9.228545188903809
    8. '=v' → logprob: -9.228545188903809
    9. '[u' → logprob: -9.478545188903809
    10. '=' → logprob: -10.353545188903809

Token 98: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023275412619113922
    2. '=' → logprob: -3.773275375366211
    3. '=v' → logprob: -11.023275375366211
    4. '[v' → logprob: -11.648275375366211
    5. '[' → logprob: -12.773275375366211
    6. ']' → logprob: -14.523275375366211
    7. ' =
' → logprob: -15.273275375366211
    8. '   ' → logprob: -15.648275375366211
    9. ' ' → logprob: -15.898275375366211
    10. '           ' → logprob: -16.02327537536621

Token 99: ' nd' (ID: 5914)
  Prédit: ' nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.000553151941858232
    2. 'nd' → logprob: -7.500553131103516
    3. '(nd' → logprob: -15.625553131103516
    4. '_nd' → logprob: -17.875553131103516
    5. ' ' → logprob: -18.625553131103516
    6. ' nde' → logprob: -18.625553131103516
    7. ' ndo' → logprob: -19.000553131103516
    8. ' ndi' → logprob: -20.125553131103516
    9. '.nd' → logprob: -20.125553131103516
    10. ' rd' → logprob: -20.500553131103516

Token 100: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001669942052103579
    2. 'heap' → logprob: -8.001669883728027
    3. '
' → logprob: -8.126669883728027
    4. ' heap' → logprob: -8.251669883728027
    5. '                
' → logprob: -8.751669883728027
    6. '           ' → logprob: -9.001669883728027
    7. '<|end|>' → logprob: -9.001669883728027
    8. '                   ' → logprob: -9.501669883728027
    9. '                ' → logprob: -9.626669883728027
    10. '       ' → logprob: -9.751669883728027

Token 101: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0012603526702150702
    2. 'heap' → logprob: -6.751260280609131
    3. ' heap' → logprob: -10.001260757446289
    4. '              ' → logprob: -11.376260757446289
    5. '(heap' → logprob: -11.501260757446289
    6. '			' → logprob: -11.626260757446289
    7. '           ' → logprob: -12.376260757446289
    8. '                ' → logprob: -13.001260757446289
    9. '                   ' → logprob: -13.376260757446289
    10. '       ' → logprob: -13.751260757446289

Token 102: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.20144304633140564
    2. ' heap' → logprob: -1.701443076133728
    3. '               ' → logprob: -10.45144271850586
    4. '           ' → logprob: -14.57644271850586
    5. 'he' → logprob: -15.82644271850586
    6. '(heap' → logprob: -15.95144271850586
    7. '                   ' → logprob: -16.82644271850586
    8. '.heap' → logprob: -17.57644271850586
    9. '   ' → logprob: -17.95144271850586
    10. '```' → logprob: -18.07644271850586

Token 103: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.7432603272027336e-06
    2. 'p' → logprob: -14.250001907348633
    3. '.he' → logprob: -14.250001907348633
    4. '```' → logprob: -15.750001907348633
    5. '.push' → logprob: -16.125001907348633
    6. '.q' → logprob: -17.000001907348633
    7. 'push' → logprob: -17.125001907348633
    8. '_push' → logprob: -17.250001907348633
    9. 'qp' → logprob: -17.625001907348633
    10. '[' → logprob: -17.750001907348633

Token 104: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -2.15310683415737e-05
    2. 'he' → logprob: -11.500021934509277
    3. 'q' → logprob: -12.250021934509277
    4. '.heap' → logprob: -12.250021934509277
    5. '.push' → logprob: -14.000021934509277
    6. ' he' → logprob: -15.125021934509277
    7. '.' → logprob: -16.12502098083496
    8. 'push' → logprob: -16.25002098083496
    9. '```' → logprob: -16.62502098083496
    10. 'app' → logprob: -16.75002098083496

Token 105: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0005603004829026759
    2. 'pp' → logprob: -7.500560283660889
    3. 'push' → logprob: -12.250560760498047
    4. 'ap' → logprob: -13.375560760498047
    5. 'p' → logprob: -14.250560760498047
    6. 'q' → logprob: -16.125560760498047
    7. '```' → logprob: -16.250560760498047
    8. 'appen' → logprob: -17.625560760498047
    9. '[' → logprob: -17.875560760498047
    10. 'append' → logprob: -18.250560760498047

Token 106: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.000158842682139948
    2. 'push' → logprob: -8.75015926361084
    3. 'app' → logprob: -15.87515926361084
    4. 'p' → logprob: -17.375158309936523
    5. 'pp' → logprob: -17.375158309936523
    6. 'sh' → logprob: -17.625158309936523
    7. 'op' → logprob: -18.250158309936523
    8. '```' → logprob: -19.250158309936523
    9. 'Push' → logprob: -19.625158309936523
    10. 'USH' → logprob: -19.625158309936523

Token 107: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00038598617538809776
    2. '(' → logprob: -7.875385761260986
    3. ' (' → logprob: -12.125386238098145
    4. '(q' → logprob: -15.250386238098145
    5. '((' → logprob: -17.125385284423828
    6. '(
' → logprob: -17.500385284423828
    7. '(py' → logprob: -17.750385284423828
    8. '(P' → logprob: -18.375385284423828
    9. ' ' → logprob: -18.500385284423828
    10. '(pr' → logprob: -19.000385284423828

Token 108: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00040910433745011687
    2. '(q' → logprob: -8.500409126281738
    3. '(p' → logprob: -8.500409126281738
    4. 'Q' → logprob: -13.875409126281738
    5. '	q' → logprob: -15.125409126281738
    6. ')' → logprob: -15.500409126281738
    7. 'pq' → logprob: -15.875409126281738
    8. '(' → logprob: -16.000408172607422
    9. '[q' → logprob: -16.500408172607422
    10. ' q' → logprob: -16.750408172607422

Token 109: ',(' (ID: 27243)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.38999614119529724
    2. '(' → logprob: -1.1399961709976196
    3. ' (' → logprob: -5.88999605178833
    4. '   ' → logprob: -9.264996528625488
    5. ',' → logprob: -9.514996528625488
    6. ' ' → logprob: -9.639996528625488
    7. ' ((' → logprob: -10.014996528625488
    8. ')' → logprob: -10.889996528625488
    9. ',(' → logprob: -10.889996528625488
    10. '(p' → logprob: -11.389996528625488

Token 110: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.00043102685594931245
    2. ' nd' → logprob: -7.750431060791016
    3. '(nd' → logprob: -14.875431060791016
    4. '_nd' → logprob: -17.250431060791016
    5. ' ' → logprob: -18.125431060791016
    6. '```' → logprob: -18.250431060791016
    7. '   ' → logprob: -18.500431060791016
    8. ')' → logprob: -19.250431060791016
    9. 'ndl' → logprob: -19.250431060791016
    10. 'nds' → logprob: -19.375431060791016

Token 111: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.25198912620544434
    2. ',' → logprob: -1.5019891262054443
    3. ',u' → logprob: -9.876989364624023
    4. 'v' → logprob: -12.251989364624023
    5. ' ,' → logprob: -12.626989364624023
    6. ',user' → logprob: -15.751989364624023
    7. ')' → logprob: -16.001989364624023
    8. ',
' → logprob: -16.126989364624023
    9. '<|end|>' → logprob: -16.501989364624023
    10. ')v' → logprob: -16.626989364624023

Token 112: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6931689381599426
    2. '))' → logprob: -0.6931689381599426
    3. ')))' → logprob: -11.318168640136719
    4. ')
' → logprob: -12.193168640136719
    5. '))
' → logprob: -12.443168640136719
    6. ' ))' → logprob: -15.443168640136719
    7. ' )' → logprob: -15.568168640136719
    8. '))))' → logprob: -16.69316864013672
    9. '   ' → logprob: -17.06816864013672
    10. '       ' → logprob: -17.19316864013672

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2081299126148224
    2. '\n' → logprob: -2.8331298828125
    3. '<|end|>' → logprob: -3.2081298828125
    4. '
' → logprob: -3.3331298828125
    5. '    
' → logprob: -4.3331298828125
    6. ' ' → logprob: -4.7081298828125
    7. ':return' → logprob: -5.3331298828125
    8. ' return' → logprob: -5.3331298828125
    9. ')' → logprob: -5.5831298828125
    10. '```' → logprob: -5.5831298828125

Token 114: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2671004831790924
    2. '   ' → logprob: -2.1421005725860596
    3. ' return' → logprob: -2.2671005725860596
    4. '
' → logprob: -5.0171003341674805
    5. ' ' → logprob: -6.0171003341674805
    6. '    
' → logprob: -6.8921003341674805
    7. '	return' → logprob: -7.5171003341674805
    8. '```' → logprob: -7.5171003341674805
    9. ':return' → logprob: -8.01710033416748
    10. '<|end|>' → logprob: -8.01710033416748

Token 115: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.10020720958709717
    2. ' dist' → logprob: -2.3502073287963867
    3. '(dist' → logprob: -14.475207328796387
    4. '	dist' → logprob: -17.35020637512207
    5. '_dist' → logprob: -18.85020637512207
    6. '[' → logprob: -18.85020637512207
    7. ' ' → logprob: -19.47520637512207
    8. 'Dist' → logprob: -19.60020637512207
    9. '.dist' → logprob: -20.22520637512207
    10. ' ' → logprob: -20.60020637512207

Token 116: '

' (ID: 279)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3530469238758087
    2. '<|end|>' → logprob: -1.3530468940734863
    3. '```' → logprob: -4.603046894073486
    4. '[n' → logprob: -4.978046894073486
    5. '
' → logprob: -5.228046894073486
    6. '\n' → logprob: -5.478046894073486
    7. '[
' → logprob: -6.103046894073486
    8. 'newline' → logprob: -6.478046894073486
    9. '\' → logprob: -6.853046894073486
    10. '.' → logprob: -7.103046894073486

Token 117: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.32187405228614807
    2. '[' → logprob: -2.5718741416931152
    3. '<|end|>' → logprob: -2.5718741416931152
    4. '(' → logprob: -3.6968741416931152
    5. '
' → logprob: -3.8218741416931152
    6. '\n' → logprob: -3.9468741416931152
    7. '_' → logprob: -4.321874141693115
    8. '```' → logprob: -4.946874141693115
    9. '\' → logprob: -5.196874141693115
    10. '#' → logprob: -5.321874141693115

Token 118: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.21462897956371307
    2. ' bell' → logprob: -2.8396289348602295
    3. ' solve' → logprob: -2.8396289348602295
    4. ' find' → logprob: -3.8396289348602295
    5. ' bfs' → logprob: -4.214629173278809
    6. ' shortest' → logprob: -4.339629173278809
    7. ' dfs' → logprob: -5.214629173278809
    8. ' ' → logprob: -5.714629173278809
    9. 'main' → logprob: -6.339629173278809
    10. ' top' → logprob: -6.464629173278809

Token 119: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0005773392622359097
    2. '(' → logprob: -7.500577449798584
    3. '()' → logprob: -11.500576972961426
    4. '(:' → logprob: -12.000576972961426
    5. ' ():' → logprob: -12.750576972961426
    6. '(":' → logprob: -13.125576972961426
    7. ':' → logprob: -13.625576972961426
    8. '():
' → logprob: -14.000576972961426
    9. '()>' → logprob: -15.250576972961426
    10. '(**' → logprob: -16.125577926635742

Token 120: '   ' (ID: 271)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1396729052066803
    2. '   ' → logprob: -2.2646729946136475
    3. 'n' → logprob: -3.6396729946136475
    4. '	n' → logprob: -9.264673233032227
    5. ' import' → logprob: -9.889673233032227
    6. ' input' → logprob: -10.264673233032227
    7. 'import' → logprob: -11.139673233032227
    8. '```' → logprob: -11.514673233032227
    9. ',n' → logprob: -11.764673233032227
    10. ' readline' → logprob: -12.014673233032227

Token 121: ' input' (ID: 3422)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.25261566042900085
    2. ' n' → logprob: -1.5026156902313232
    3. '   ' → logprob: -8.127615928649902
    4. 'import' → logprob: -8.752615928649902
    5. ' input' → logprob: -9.377615928649902
    6. ' import' → logprob: -9.377615928649902
    7. 'input' (adapté à ' input') → logprob: -10.252615928649902
    8. 't' → logprob: -11.002615928649902
    9. ' t' → logprob: -12.252615928649902
    10. '	n' → logprob: -12.752615928649902

Token 122: '=sys' (ID: 149200)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.048801738768815994
    2. '_data' → logprob: -3.5488016605377197
    3. ' =' → logprob: -4.923801898956299
    4. '_line' → logprob: -5.298801898956299
    5. '=' → logprob: -5.548801898956299
    6. '_lines' → logprob: -6.673801898956299
    7. 'data' → logprob: -8.04880142211914
    8. '_' → logprob: -8.17380142211914
    9. '(' → logprob: -8.54880142211914
    10. '().' → logprob: -8.67380142211914

Token 123: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0373062901198864
    2. '.stdin' → logprob: -3.662306308746338
    3. '.readline' → logprob: -4.537306308746338
    4. '().' → logprob: -8.53730583190918
    5. '.read' → logprob: -11.03730583190918
    6. '.stdout' → logprob: -11.66230583190918
    7. '.argv' → logprob: -12.28730583190918
    8. '.setdefault' → logprob: -12.53730583190918
    9. ' .' → logprob: -13.16230583190918
    10. '()' → logprob: -13.28730583190918

Token 124: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00021629150433000177
    2. '.read' → logprob: -8.750216484069824
    3. '.' → logprob: -9.875216484069824
    4. 'read' → logprob: -12.500216484069824
    5. '.readlines' → logprob: -13.250216484069824
    6. ' readline' → logprob: -14.750216484069824
    7. '_read' → logprob: -14.875216484069824
    8. '.Read' → logprob: -16.875215530395508
    9. '.stdin' → logprob: -17.250215530395508
    10. '.buffer' → logprob: -17.875215530395508

Token 125: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.000400521676056087
    2. '()
' → logprob: -7.875400543212891
    3. '().' → logprob: -11.87540054321289
    4. '
' → logprob: -12.50040054321289
    5. '()\' → logprob: -12.75040054321289
    6. '<|end|>' → logprob: -13.37540054321289
    7. '(' → logprob: -13.50040054321289
    8. '()

' → logprob: -14.12540054321289
    9. ' ()' → logprob: -14.12540054321289
    10. '();' → logprob: -15.00040054321289

Token 126: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004250896628946066
    2. 'n' → logprob: -5.504251003265381
    3. ' n' → logprob: -9.254250526428223
    4. '	n' → logprob: -10.754250526428223
    5. 't' → logprob: -10.879250526428223
    6. '    
' → logprob: -11.379250526428223
    7. '    ' → logprob: -12.004250526428223
    8. '(n' → logprob: -12.629250526428223
    9. ',n' → logprob: -12.754250526428223
    10. 'N' → logprob: -13.504250526428223

Token 127: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02412852831184864
    2. ' n' → logprob: -3.7741284370422363
    3. '   ' → logprob: -7.524128437042236
    4. 'N' → logprob: -8.149128913879395
    5. 't' → logprob: -10.274128913879395
    6. ' N' → logprob: -12.149128913879395
    7. ' t' → logprob: -12.649128913879395
    8. '    
' → logprob: -12.774128913879395
    9. 'T' → logprob: -13.149128913879395
    10. '```' → logprob: -13.524128913879395

Token 128: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.06294166296720505
    2. 'True' → logprob: -2.812941551208496
    3. '(True' → logprob: -6.937941551208496
    4. '=True' → logprob: -13.812941551208496
    5. ' ' → logprob: -14.812941551208496
    6. '1' → logprob: -14.937941551208496
    7. ' line' → logprob: -14.937941551208496
    8. 'true' → logprob: -15.187941551208496
    9. ' Tru' → logprob: -15.562941551208496
    10. '(' → logprob: -15.812941551208496

Token 129: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014388042036443949
    2. '():' → logprob: -7.251438617706299
    3. ':
' → logprob: -7.376438617706299
    4. '       ' → logprob: -10.751439094543457
    5. '   ' → logprob: -10.751439094543457
    6. ',' → logprob: -10.876439094543457
    7. ' :' → logprob: -11.126439094543457
    8. '):' → logprob: -11.626439094543457
    9. '():
' → logprob: -11.751439094543457
    10. ':**' → logprob: -13.001439094543457

Token 130: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004896908067166805
    2. '   ' → logprob: -5.754897117614746
    3. '    ' → logprob: -6.629897117614746
    4. ' ' → logprob: -8.754897117614746
    5. '      ' → logprob: -9.754897117614746
    6. '     ' → logprob: -10.504897117614746
    7. ' line' → logprob: -10.629897117614746
    8. '  ' → logprob: -10.629897117614746
    9. '<|end|>' → logprob: -10.754897117614746
    10. '        
' → logprob: -11.129897117614746

Token 131: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.6101152896881104
    2. ' n' → logprob: -1.1101152896881104
    3. ' line' → logprob: -2.1101152896881104
    4. 'line' → logprob: -5.360115051269531
    5. '   ' → logprob: -7.110115051269531
    6. 'N' → logprob: -8.610115051269531
    7. ' N' → logprob: -9.610115051269531
    8. ' l' → logprob: -9.735115051269531
    9. 'l' → logprob: -9.860115051269531
    10. ' data' → logprob: -11.610115051269531

Token 132: ',m' (ID: 26648)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.180989608168602
    2. '=' → logprob: -1.8059896230697632
    3. '=int' → logprob: -7.430989742279053
    4. ',' → logprob: -7.805989742279053
    5. ' ==' → logprob: -8.555989265441895
    6. '==' → logprob: -11.055989265441895
    7. '=input' → logprob: -11.180989265441895
    8. ' =
' → logprob: -12.180989265441895
    9. ' ,' → logprob: -12.305989265441895
    10. '   ' → logprob: -12.680989265441895

Token 133: ',c' (ID: 22261)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760827660560608
    2. ' =' → logprob: -0.8260827660560608
    3. '=input' → logprob: -9.326083183288574
    4. ',' → logprob: -10.326083183288574
    5. '=int' → logprob: -10.951083183288574
    6. '=line' → logprob: -13.076083183288574
    7. '=n' → logprob: -15.451083183288574
    8. '＝' → logprob: -15.826083183288574
    9. ')' → logprob: -15.826083183288574
    10. ' ,' → logprob: -16.576082229614258

Token 134: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009770254604518414
    2. ' =' → logprob: -4.634770393371582
    3. '=input' → logprob: -11.759770393371582
    4. ',' → logprob: -12.759770393371582
    5. '=line' → logprob: -13.134770393371582
    6. '=int' → logprob: -14.384770393371582
    7. '=sys' → logprob: -15.259770393371582
    8. ' ' → logprob: -15.884770393371582
    9. '=

' → logprob: -15.884770393371582
    10. '=list' → logprob: -17.134769439697266

Token 135: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.10022833943367004
    2. ' map' → logprob: -2.3502283096313477
    3. 'input' → logprob: -11.725228309631348
    4. 'list' → logprob: -12.350228309631348
    5. '(map' → logprob: -12.350228309631348
    6. 'sys' → logprob: -12.725228309631348
    7. '	map' → logprob: -14.225228309631348
    8. ' sys' → logprob: -14.850228309631348
    9. '[' → logprob: -14.975228309631348
    10. 'tuple' → logprob: -15.100228309631348

Token 136: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05375184491276741
    2. '(input' → logprob: -3.6787519454956055
    3. '(int' → logprob: -4.1787519454956055
    4. '(lambda' → logprob: -4.5537519454956055
    5. '(str' → logprob: -7.4287519454956055
    6. '<|end|>' → logprob: -8.178751945495605
    7. '(sys' → logprob: -9.178751945495605
    8. '(
' → logprob: -9.553751945495605
    9. '(user' → logprob: -10.803751945495605
    10. ' (' → logprob: -10.803751945495605

Token 137: ',input' (ID: 123014)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.058144208043813705
    2. '(input' → logprob: -3.0581440925598145
    3. ',' → logprob: -5.9331440925598145
    4. '(' → logprob: -6.0581440925598145
    5. ',input' → logprob: -6.1831440925598145
    6. 'sys' → logprob: -6.5581440925598145
    7. 'input' → logprob: -7.6831440925598145
    8. '=sys' → logprob: -7.9331440925598145
    9. ')' → logprob: -9.808144569396973
    10. ' (' → logprob: -10.308144569396973

Token 138: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.107425062713446e-06
    2. '()' → logprob: -11.875006675720215
    3. ' ().' → logprob: -16.37500762939453
    4. '())' → logprob: -16.75000762939453
    5. '(' → logprob: -18.37500762939453
    6. '.split' → logprob: -18.87500762939453
    7. '('' → logprob: -19.00000762939453
    8. '('').' → logprob: -19.00000762939453
    9. '().'' → logprob: -19.25000762939453
    10. '()
' → logprob: -19.50000762939453

Token 139: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.01819559559226036
    2. 'strip' → logprob: -4.018195629119873
    3. 'rstrip' → logprob: -10.018195152282715
    4. 'read' → logprob: -14.018195152282715
    5. ' split' → logprob: -16.14319610595703
    6. 'str' → logprob: -16.39319610595703
    7. '(split' → logprob: -16.89319610595703
    8. '().' → logprob: -17.01819610595703
    9. 'decode' → logprob: -17.76819610595703
    10. 'spl' → logprob: -18.76819610595703

Token 140: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009535666555166245
    2. '())' → logprob: -4.759535789489746
    3. '()' → logprob: -7.009535789489746
    4. ')
' → logprob: -11.509535789489746
    5. '))' → logprob: -12.759535789489746
    6. '(' → logprob: -13.384535789489746
    7. '())
' → logprob: -13.509535789489746
    8. ' )' → logprob: -14.009535789489746
    9. ')`' → logprob: -15.884535789489746
    10. '()
' → logprob: -16.00953483581543

Token 141: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.050409525632858276
    2. '<|end|>' → logprob: -3.3004095554351807
    3. ' if' → logprob: -4.675409317016602
    4. '   ' → logprob: -6.800409317016602
    5. 'if' → logprob: -6.925409317016602
    6. '
' → logprob: -8.550409317016602
    7. '        
' → logprob: -8.800409317016602
    8. ' ' → logprob: -9.175409317016602
    9. '	if' → logprob: -9.425409317016602
    10. '	' → logprob: -9.675409317016602

Token 142: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.05067983269691467
    2. ' if' → logprob: -3.050679922103882
    3. '       ' → logprob: -6.175679683685303
    4. 'If' → logprob: -12.550680160522461
    5. '<|end|>' → logprob: -12.800680160522461
    6. '   ' → logprob: -13.800680160522461
    7. '	if' → logprob: -13.925680160522461
    8. '
' → logprob: -14.300680160522461
    9. ';if' → logprob: -15.300680160522461
    10. ' ' → logprob: -15.300680160522461

Token 143: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.12693293392658234
    2. 'n' → logprob: -2.1269328594207764
    3. ' not' → logprob: -13.126933097839355
    4. '(n' → logprob: -13.501933097839355
    5. ' (' → logprob: -14.626933097839355
    6. ' ' → logprob: -14.626933097839355
    7. '	n' → logprob: -14.751933097839355
    8. ' ' → logprob: -15.751933097839355
    9. '(' → logprob: -17.25193214416504
    10. '   ' → logprob: -17.37693214416504

Token 144: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6933512687683105
    2. ' ==' → logprob: -0.6933512687683105
    3. ' ' → logprob: -9.693351745605469
    4. '0' → logprob: -9.818351745605469
    5. '=' → logprob: -10.193351745605469
    6. ')==' → logprob: -10.818351745605469
    7. '===' → logprob: -12.068351745605469
    8. '<=' → logprob: -12.068351745605469
    9. '()==' → logprob: -12.818351745605469
    10. '<|end|>' → logprob: -12.943351745605469

Token 145: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. 'c' → logprob: -16.875030517578125
    4. '۰' → logprob: -17.375030517578125
    5. 'm' → logprob: -17.562530517578125
    6. '０' → logprob: -18.250030517578125
    7. '```' → logprob: -18.812530517578125
    8. 's' → logprob: -19.062530517578125
    9. '   ' → logprob: -19.625030517578125
    10. '০' → logprob: -19.812530517578125

Token 146: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.47408443689346313
    2. 'and' → logprob: -0.9740844368934631
    3. '	and' → logprob: -12.099084854125977
    4. ':' → logprob: -14.349084854125977
    5. ' ' → logprob: -14.349084854125977
    6. ' ' → logprob: -15.974084854125977
    7. '   ' → logprob: -15.974084854125977
    8. '<|end|>' → logprob: -16.349084854125977
    9. ',' → logprob: -16.724084854125977
    10. ' и' → logprob: -16.974084854125977

Token 147: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0007099286303855479
    2. ' m' → logprob: -7.2507100105285645
    3. '   ' → logprob: -18.500709533691406
    4. ' ' → logprob: -18.625709533691406
    5. '	m' → logprob: -19.375709533691406
    6. '  ' → logprob: -21.500709533691406
    7. ' ' → logprob: -21.625709533691406
    8. ' ' → logprob: -22.375709533691406
    9. '```' → logprob: -22.875709533691406
    10. '' → logprob: -23.000709533691406

Token 148: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.008503708988428116
    2. ' ==' → logprob: -5.1335039138793945
    3. '0' → logprob: -6.1335039138793945
    4. ' ' → logprob: -7.8835039138793945
    5. '<|end|>' → logprob: -11.133503913879395
    6. '===' → logprob: -12.133503913879395
    7. '=' → logprob: -13.508503913879395
    8. ' and' → logprob: -13.758503913879395
    9. '<|end|>' → logprob: -13.758503913879395
    10. '()==' → logprob: -14.133503913879395

Token 149: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '<|end|>' → logprob: -18.1250057220459
    4. '۰' → logprob: -19.6250057220459
    5. '<|end|>' → logprob: -20.6250057220459
    6. '```' → logprob: -21.1250057220459
    7. ' ' → logprob: -21.3750057220459
    8. 'and' → logprob: -21.3750057220459
    9. '০' → logprob: -21.5000057220459
    10. '０' → logprob: -21.6250057220459

Token 150: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.020557187497615814
    2. 'and' → logprob: -3.895557165145874
    3. '0' → logprob: -12.020557403564453
    4. ' ' → logprob: -12.770557403564453
    5. '<|end|>' → logprob: -12.770557403564453
    6. '	and' → logprob: -13.145557403564453
    7. '<|end|>' → logprob: -13.645557403564453
    8. ' и' → logprob: -15.770557403564453
    9. ' ' → logprob: -16.020557403564453
    10. 'a' → logprob: -16.770557403564453

Token 151: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.02975604310631752
    2. ' c' → logprob: -3.5297560691833496
    3. '0' → logprob: -12.279755592346191
    4. '	c' → logprob: -14.779755592346191
    5. ' ' → logprob: -14.904755592346191
    6. '   ' → logprob: -15.654755592346191
    7. '  ' → logprob: -18.779756546020508
    8. '       ' → logprob: -19.029756546020508
    9. ')c' → logprob: -19.404756546020508
    10. '_c' → logprob: -19.779756546020508

Token 152: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0001029471677611582
    2. ' ==' → logprob: -9.250102996826172
    3. '0' → logprob: -12.750102996826172
    4. '=' → logprob: -13.250102996826172
    5. ')==' → logprob: -14.000102996826172
    6. '()==' → logprob: -14.250102996826172
    7. '==
' → logprob: -15.750102996826172
    8. '==-' → logprob: -16.000102996826172
    9. ']==' → logprob: -16.125102996826172
    10. '===' → logprob: -16.500102996826172

Token 153: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '<|end|>' → logprob: -18.750009536743164
    4. '  ' → logprob: -19.500009536743164
    5. '   ' → logprob: -19.500009536743164
    6. '۰' → logprob: -19.875009536743164
    7. '<|end|>' → logprob: -20.875009536743164
    8. '০' → logprob: -22.125009536743164
    9. '```' → logprob: -22.250009536743164
    10. 's' → logprob: -22.375009536743164

Token 154: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006798379123210907
    2. ':
' → logprob: -5.006798267364502
    3. '           ' → logprob: -9.88179874420166
    4. '       ' → logprob: -10.50679874420166
    5. ':return' → logprob: -12.75679874420166
    6. '   ' → logprob: -13.88179874420166
    7. ':
' → logprob: -14.88179874420166
    8. ',' → logprob: -16.506797790527344
    9. '):' → logprob: -17.006797790527344
    10. ' :' → logprob: -17.006797790527344

Token 155: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.963691804325208e-05
    2. '       ' → logprob: -10.625029563903809
    3. '		' → logprob: -13.375029563903809
    4. '          ' → logprob: -13.875029563903809
    5. '               ' → logprob: -14.125029563903809
    6. '	       ' → logprob: -14.375029563903809
    7. '   ' → logprob: -14.875029563903809
    8. ' break' → logprob: -15.000029563903809
    9. '```' → logprob: -15.500029563903809
    10. 'break' → logprob: -15.625029563903809

Token 156: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0447029247879982
    2. ' break' → logprob: -3.2947030067443848
    3. 'return' → logprob: -5.044703006744385
    4. '           ' → logprob: -9.294702529907227
    5. ' return' → logprob: -9.794702529907227
    6. '       ' → logprob: -10.294702529907227
    7. '	break' → logprob: -11.294702529907227
    8. '               ' → logprob: -13.669702529907227
    9. '   ' → logprob: -14.544702529907227
    10. '_break' → logprob: -14.919702529907227

Token 157: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014678422594442964
    2. '<|end|>' → logprob: -7.501467704772949
    3. '
' → logprob: -7.876467704772949
    4. '        
' → logprob: -8.50146770477295
    5. '   ' → logprob: -8.87646770477295
    6. 'adj' → logprob: -9.12646770477295
    7. '```' → logprob: -11.37646770477295
    8. ' adj' → logprob: -11.37646770477295
    9. '	' → logprob: -11.75146770477295
    10. '' → logprob: -12.00146770477295

Token 158: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002987567102536559
    2. '
' → logprob: -6.252987384796143
    3. '<|end|>' → logprob: -7.627987384796143
    4. '   ' → logprob: -8.0029878616333
    5. '        
' → logprob: -9.3779878616333
    6. 'adj' → logprob: -9.6279878616333
    7. '```' → logprob: -10.8779878616333
    8. '	' → logprob: -11.0029878616333
    9. ' adj' → logprob: -11.1279878616333
    10. '' → logprob: -12.5029878616333

Token 159: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' (adapté à ' adj') → logprob: -0.048712726682424545
    2. ' adj' → logprob: -3.048712730407715
    3. '       ' → logprob: -9.673712730407715
    4. '   ' → logprob: -9.798712730407715
    5. '        
' → logprob: -13.173712730407715
    6. '(adj' → logprob: -13.548712730407715
    7. 'c' → logprob: -14.423712730407715
    8. '```' → logprob: -14.798712730407715
    9. 'ad' → logprob: -14.923712730407715
    10. 'import' → logprob: -14.923712730407715

Token 160: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08072579652070999
    2. '=' → logprob: -2.580725908279419
    3. '[' → logprob: -6.45572566986084
    4. ' =[' → logprob: -9.20572566986084
    5. '=[' → logprob: -9.58072566986084
    6. '[u' → logprob: -9.58072566986084
    7. '=[]' → logprob: -11.58072566986084
    8. '[:]' → logprob: -12.83072566986084
    9. '=[[' → logprob: -12.95572566986084
    10. '[c' → logprob: -13.20572566986084

Token 161: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06197541579604149
    2. ' [[]' → logprob: -2.8119754791259766
    3. ' [' → logprob: -12.561975479125977
    4. '[[' → logprob: -12.936975479125977
    5. '{' → logprob: -13.561975479125977
    6. '   ' → logprob: -16.061975479125977
    7. '[n' → logprob: -16.311975479125977
    8. 'default' → logprob: -16.686975479125977
    9. '[]' → logprob: -16.686975479125977
    10. '[['' → logprob: -17.811975479125977

Token 162: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3874679505825043
    2. 'for' → logprob: -1.1374679803848267
    3. '(n' → logprob: -7.512467861175537
    4. ')' → logprob: -10.887468338012695
    5. '   ' → logprob: -11.887468338012695
    6. '       ' → logprob: -12.012468338012695
    7. '	for' → logprob: -12.137468338012695
    8. ' (' → logprob: -13.012468338012695
    9. '(' → logprob: -13.012468338012695
    10. ',' → logprob: -13.137468338012695

Token 163: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08514178544282913
    2. ' range' → logprob: -2.710141897201538
    3. ' _' → logprob: -4.710141658782959
    4. ' in' → logprob: -5.335141658782959
    5. 'range' → logprob: -6.835141658782959
    6. '_range' → logprob: -9.460142135620117
    7. '(range' → logprob: -9.710142135620117
    8. 'in' → logprob: -10.335142135620117
    9. '_in' → logprob: -11.960142135620117
    10. ' i' → logprob: -12.210142135620117

Token 164: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020516198128461838
    2. 'in' → logprob: -4.520516395568848
    3. '(n' → logprob: -5.270516395568848
    4. ' range' → logprob: -5.895516395568848
    5. 'range' → logprob: -6.520516395568848
    6. 'n' → logprob: -10.145516395568848
    7. '(range' → logprob: -12.270516395568848
    8. '(' → logprob: -12.520516395568848
    9. '_' → logprob: -12.770516395568848
    10. 'i' → logprob: -13.520516395568848

Token 165: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4741133153438568
    2. ' range' → logprob: -0.9741133451461792
    3. '(range' → logprob: -10.224113464355469
    4. '	range' → logprob: -17.59911346435547
    5. '(n' → logprob: -18.59911346435547
    6. '   ' → logprob: -19.22411346435547
    7. ' in' → logprob: -19.59911346435547
    8. 'in' → logprob: -19.72411346435547
    9. '_range' → logprob: -19.84911346435547
    10. 'Range' → logprob: -20.09911346435547

Token 166: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -14.875
    3. ' (' → logprob: -17.0
    4. 'n' → logprob: -17.0
    5. '((' → logprob: -20.75
    6. '(N' → logprob: -21.125
    7. ' n' → logprob: -21.375
    8. ',n' → logprob: -22.875
    9. '	n' → logprob: -22.875
    10. '(num' → logprob: -23.25

Token 167: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0009152670972980559
    2. ' +' → logprob: -7.000915050506592
    3. '+n' → logprob: -12.75091552734375
    4. ')]' → logprob: -14.25091552734375
    5. '+
' → logprob: -16.37591552734375
    6. '()+' → logprob: -17.00091552734375
    7. '+m' → logprob: -17.87591552734375
    8. '+)' → logprob: -18.12591552734375
    9. ')' → logprob: -18.37591552734375
    10. '   ' → logprob: -18.50091552734375

Token 168: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -17.0
    4. '0' → logprob: -17.875
    5. '
' → logprob: -18.0
    6. '```' → logprob: -19.5
    7. '  ' → logprob: -20.375
    8. '(' → logprob: -20.625
    9. '

' → logprob: -21.0
    10. '2' → logprob: -21.0

Token 169: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.005246798973530531
    2. ']' → logprob: -5.255246639251709
    3. ')' → logprob: -11.380247116088867
    4. '])' → logprob: -15.005247116088867
    5. '}]' → logprob: -15.380247116088867
    6. '>]' → logprob: -15.380247116088867
    7. '()]' → logprob: -15.755247116088867
    8. ' ]' → logprob: -15.880247116088867
    9. '])]' → logprob: -16.255247116088867
    10. ']
' → logprob: -16.630247116088867

Token 170: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16277144849300385
    2. ' for' → logprob: -2.787771463394165
    3. '   ' → logprob: -3.037771463394165
    4. '	for' → logprob: -3.287771463394165
    5. 'for' → logprob: -6.537771224975586
    6. '	   ' → logprob: -7.537771224975586
    7. '<|end|>' → logprob: -7.537771224975586
    8. '
' → logprob: -7.787771224975586
    9. '	' → logprob: -8.662771224975586
    10. ' ' → logprob: -9.787771224975586

Token 171: ' edges' (ID: 22569)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02329835295677185
    2. ' for' → logprob: -3.7732982635498047
    3. '       ' → logprob: -10.273298263549805
    4. '   ' → logprob: -11.023298263549805
    5. '	for' → logprob: -13.273298263549805
    6. ' ' → logprob: -15.523298263549805
    7. '```' → logprob: -19.148298263549805
    8. '  ' → logprob: -20.148298263549805
    9. '        
' → logprob: -21.648298263549805
    10. ' ' → logprob: -22.148298263549805

Token 172: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.060820817947387695
    2. '=' → logprob: -3.8108208179473877
    3. '<|end|>' → logprob: -3.9358208179473877
    4. 'for' → logprob: -5.435820579528809
    5. '<|end|>' → logprob: -6.060820579528809
    6. ',' → logprob: -6.185820579528809
    7. ' for' → logprob: -6.185820579528809
    8. '=[]' → logprob: -6.310820579528809
    9. ' ' → logprob: -6.810820579528809
    10. ')' → logprob: -7.310820579528809

Token 173: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.11508097499608994
    2. ' []' → logprob: -3.1150810718536377
    3. '[m' → logprob: -3.3650810718536377
    4. '[' → logprob: -3.6150810718536377
    5. ' [' → logprob: -5.990080833435059
    6. '[int' → logprob: -8.365080833435059
    7. '[]
' → logprob: -9.615080833435059
    8. '[n' → logprob: -11.865080833435059
    9. '[
' → logprob: -12.115080833435059
    10. 'm' → logprob: -12.615080833435059

Token 174: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.959995448589325
    2. '       ' → logprob: -1.0849955081939697
    3. '<|end|>' → logprob: -1.8349955081939697
    4. '	for' → logprob: -3.3349955081939697
    5. 'for' → logprob: -3.9599955081939697
    6. '
' → logprob: -4.084995269775391
    7. '   ' → logprob: -4.334995269775391
    8. '  
' → logprob: -4.834995269775391
    9. '        
' → logprob: -5.209995269775391
    10. '	' → logprob: -5.209995269775391

Token 175: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2712806165218353
    2. '       ' → logprob: -2.021280527114868
    3. 'for' (adapté à ' for') → logprob: -2.271280527114868
    4. '   ' → logprob: -6.896280765533447
    5. '	for' → logprob: -7.271280765533447
    6. ' ' → logprob: -9.271280288696289
    7. '	' → logprob: -9.646280288696289
    8. '	   ' → logprob: -9.896280288696289
    9. '\t' → logprob: -12.021280288696289
    10. ' ' → logprob: -12.396280288696289

Token 176: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16028545796871185
    2. ' _' → logprob: -1.910285472869873
    3. ' in' → logprob: -9.785284996032715
    4. ' range' → logprob: -12.910284996032715
    5. ' i' → logprob: -14.285284996032715
    6. '_i' → logprob: -14.285284996032715
    7. '_range' → logprob: -14.660284996032715
    8. 'range' → logprob: -15.535284996032715
    9. '_in' → logprob: -15.535284996032715
    10. 'i' → logprob: -15.660284996032715

Token 177: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4743700623512268
    2. 'in' → logprob: -0.9743700623512268
    3. '_' → logprob: -8.349370002746582
    4. ' ' → logprob: -11.349370002746582
    5. 'n' → logprob: -11.599370002746582
    6. '   ' → logprob: -11.974370002746582
    7. 'range' → logprob: -12.349370002746582
    8. '_in' → logprob: -12.349370002746582
    9. ' _' → logprob: -12.599370002746582
    10. '```' → logprob: -12.724370002746582

Token 178: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005233763717114925
    2. ' range' → logprob: -5.2552337646484375
    3. '(range' → logprob: -16.880233764648438
    4. ' ' → logprob: -17.755233764648438
    5. '	range' → logprob: -17.880233764648438
    6. 'ange' → logprob: -19.505233764648438
    7. '  ' → logprob: -19.630233764648438
    8. '   ' → logprob: -20.380233764648438
    9. 'm' → logprob: -20.630233764648438
    10. 'rang' → logprob: -20.755233764648438

Token 179: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.375
    3. 'm' → logprob: -16.375
    4. '(M' → logprob: -16.75
    5. ' (' → logprob: -20.5
    6. '(c' → logprob: -21.5
    7. '	m' → logprob: -22.125
    8. '[m' → logprob: -22.125
    9. ' m' → logprob: -22.25
    10. '((' → logprob: -22.5

Token 180: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20375701785087585
    2. '):
' → logprob: -1.7037570476531982
    3. ':' → logprob: -6.578756809234619
    4. '   ' → logprob: -8.078757286071777
    5. ' ):' → logprob: -8.078757286071777
    6. ')' → logprob: -9.203757286071777
    7. ',' → logprob: -9.578757286071777
    8. '       ' → logprob: -10.203757286071777
    9. '):
' → logprob: -10.203757286071777
    10. ' ):
' → logprob: -10.328757286071777

Token 181: '           ' (ID: 352)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.8871350288391113
    2. '           ' → logprob: -1.1371350288391113
    3. '       ' → logprob: -1.5121350288391113
    4. ' readline' → logprob: -4.137135028839111
    5. '   ' → logprob: -4.762135028839111
    6. ' code' → logprob: -5.762135028839111
    7. '	       ' → logprob: -5.887135028839111
    8. ' x' → logprob: -6.012135028839111
    9. ' input' → logprob: -6.012135028839111
    10. ' lines' → logprob: -6.137135028839111

Token 182: ' f' (ID: 285)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8454843163490295
    2. 'x' → logprob: -0.9704843163490295
    3. 'u' → logprob: -2.4704842567443848
    4. ' u' → logprob: -3.0954842567443848
    5. ' a' → logprob: -3.5954842567443848
    6. ' x' → logprob: -3.5954842567443848
    7. 's' → logprob: -5.345484256744385
    8. ' s' → logprob: -6.470484256744385
    9. '   ' → logprob: -8.095484733581543
    10. 'b' → logprob: -9.345484733581543

Token 183: ',t' (ID: 26927)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2563728988170624
    2. ',v' → logprob: -2.5063729286193848
    3. ',w' → logprob: -3.0063729286193848
    4. ',u' → logprob: -3.1313729286193848
    5. ' ,' → logprob: -4.006372928619385
    6. 'rom' → logprob: -4.631372928619385
    7. ',s' → logprob: -4.881372928619385
    8. ',r' → logprob: -6.256372928619385
    9. ',f' → logprob: -6.381372928619385
    10. ',input' → logprob: -6.381372928619385

Token 184: ',w' (ID: 49598)
  Prédit: ',w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',w' → logprob: -0.020298955962061882
    2. ',' → logprob: -4.020298957824707
    3. ' ,' → logprob: -6.270298957824707
    4. ',x' → logprob: -9.395298957824707
    5. ',c' → logprob: -10.270298957824707
    6. ',v' → logprob: -10.270298957824707
    7. ',d' → logprob: -10.520298957824707
    8. ',k' → logprob: -11.020298957824707
    9. ',u' → logprob: -11.145298957824707
    10. ',s' → logprob: -11.270298957824707

Token 185: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6935833096504211
    2. ' =' → logprob: -0.6935833096504211
    3. ',' → logprob: -7.8185834884643555
    4. '=input' → logprob: -10.818583488464355
    5. ' ' → logprob: -12.443583488464355
    6. ' ,' → logprob: -12.568583488464355
    7. '   ' → logprob: -13.068583488464355
    8. ',input' → logprob: -13.443583488464355
    9. '=line' → logprob: -14.193583488464355
    10. '    ' → logprob: -14.943583488464355

Token 186: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.47408029437065125
    2. ' map' → logprob: -0.9740803241729736
    3. '	map' → logprob: -13.099080085754395
    4. '   ' → logprob: -14.099080085754395
    5. 'm' → logprob: -15.974080085754395
    6. '    ' → logprob: -16.22408103942871
    7. '  ' → logprob: -16.47408103942871
    8. ' ' → logprob: -16.72408103942871
    9. 'list' → logprob: -17.47408103942871
    10. '(map' → logprob: -17.59908103942871

Token 187: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.000116655595775228
    2. 'int' → logprob: -9.125116348266602
    3. '[int' → logprob: -12.625116348266602
    4. ',int' → logprob: -13.375116348266602
    5. '<int' → logprob: -14.000116348266602
    6. '=int' → logprob: -14.125116348266602
    7. '(' → logprob: -15.250116348266602
    8. '(str' → logprob: -15.375116348266602
    9. ':int' → logprob: -15.500116348266602
    10. ' int' → logprob: -15.625116348266602

Token 188: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.6950522065162659
    2. ',input' → logprob: -0.6950522065162659
    3. ',' → logprob: -6.320052146911621
    4. '(' → logprob: -10.070052146911621
    5. ' (' → logprob: -10.695052146911621
    6. ' input' → logprob: -11.445052146911621
    7. '=input' → logprob: -11.445052146911621
    8. 'input' → logprob: -11.945052146911621
    9. ',int' → logprob: -12.820052146911621
    10. '(sys' → logprob: -12.945052146911621

Token 189: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.5716304410016164e-05
    2. '()' → logprob: -10.250035285949707
    3. '(' → logprob: -16.250036239624023
    4. ' ().' → logprob: -17.000036239624023
    5. '.split' → logprob: -17.125036239624023
    6. '()
' → logprob: -17.250036239624023
    7. '())' → logprob: -17.500036239624023
    8. '()[' → logprob: -17.625036239624023
    9. '.readline' → logprob: -18.625036239624023
    10. ')' → logprob: -19.250036239624023

Token 190: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.896309739408025e-07
    2. ' split' → logprob: -14.625000953674316
    3. '(split' → logprob: -15.500000953674316
    4. 'strip' → logprob: -16.875
    5. 'spl' → logprob: -18.375
    6. 'rstrip' → logprob: -19.375
    7. '_split' → logprob: -20.875
    8. '.split' → logprob: -21.375
    9. 'plit' → logprob: -21.625
    10. 'read' → logprob: -23.625

Token 191: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.044104959815740585
    2. '())' → logprob: -3.169105052947998
    3. ')
' → logprob: -7.544105052947998
    4. '()' → logprob: -7.794105052947998
    5. '())
' → logprob: -8.79410457611084
    6. '(' → logprob: -13.29410457611084
    7. '))' → logprob: -13.41910457611084
    8. ' )' → logprob: -13.41910457611084
    9. ' ())' → logprob: -14.04410457611084
    10. '()
' → logprob: -14.16910457611084

Token 192: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008895701728761196
    2. '
' → logprob: -5.3838958740234375
    3. '       ' → logprob: -6.7588958740234375
    4. '<|end|>' → logprob: -6.7588958740234375
    5. '	       ' → logprob: -7.0088958740234375
    6. '		' → logprob: -8.008895874023438
    7. '               ' → logprob: -8.883895874023438
    8. '   ' → logprob: -9.133895874023438
    9. '            
' → logprob: -9.383895874023438
    10. ',' → logprob: -9.883895874023438

Token 193: ' adj' (ID: 20251)
  Prédit: ' adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adj' → logprob: -0.25081467628479004
    2. ' edges' → logprob: -2.00081467628479
    3. 'adj' (adapté à ' adj') → logprob: -2.87581467628479
    4. '           ' → logprob: -4.000814437866211
    5. 'edges' → logprob: -4.500814437866211
    6. ' if' → logprob: -7.750814437866211
    7. '       ' → logprob: -9.000814437866211
    8. '   ' → logprob: -9.250814437866211
    9. 'if' → logprob: -9.250814437866211
    10. ' adjacency' → logprob: -9.875814437866211

Token 194: '[f' (ID: 52330)
  Prédit: '[f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[f' → logprob: -0.0005189551156945527
    2. '[t' → logprob: -7.625518798828125
    3. '[' → logprob: -10.875518798828125
    4. ' [' → logprob: -12.750518798828125
    5. '[c' → logprob: -12.750518798828125
    6. '[w' → logprob: -12.875518798828125
    7. '[u' → logprob: -13.625518798828125
    8. 'f' → logprob: -13.875518798828125
    9. '\[' → logprob: -15.500518798828125
    10. '```' → logprob: -15.625518798828125

Token 195: '].' (ID: 1651)
  Prédit: '[f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[f' → logprob: -0.16130320727825165
    2. '[t' → logprob: -1.911303162574768
    3. ').' → logprob: -7.2863030433654785
    4. '].' → logprob: -8.161303520202637
    5. ')[' → logprob: -9.911303520202637
    6. '[' → logprob: -10.661303520202637
    7. '][' → logprob: -11.036303520202637
    8. '   ' → logprob: -12.536303520202637
    9. '.append' → logprob: -12.661303520202637
    10. ').[' → logprob: -13.036303520202637

Token 196: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.0802738870552275e-05
    2. ' append' → logprob: -11.50001049041748
    3. '.append' → logprob: -14.62501049041748
    4. '_append' → logprob: -16.875011444091797
    5. 'push' → logprob: -17.625011444091797
    6. '```' → logprob: -17.625011444091797
    7. '	append' → logprob: -18.000011444091797
    8. 'appen' → logprob: -18.000011444091797
    9. 'adj' → logprob: -18.750011444091797
    10. 'end' → logprob: -19.250011444091797

Token 197: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.007094100117683411
    2. '(t' → logprob: -5.007093906402588
    3. '(' → logprob: -7.882093906402588
    4. ' (' → logprob: -14.132094383239746
    5. '([' → logprob: -15.132094383239746
    6. '(T' → logprob: -16.00709342956543
    7. '(
' → logprob: -17.13209342956543
    8. ' ((' → logprob: -17.13209342956543
    9. '[(' → logprob: -17.25709342956543
    10. '   ' → logprob: -17.75709342956543

Token 198: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -2.868328920158092e-05
    2. ' t' → logprob: -10.500028610229492
    3. '   ' → logprob: -14.125028610229492
    4. '	t' → logprob: -15.875028610229492
    5. '`t' → logprob: -16.250028610229492
    6. ',t' → logprob: -17.125028610229492
    7. ')t' → logprob: -17.250028610229492
    8. '(t' → logprob: -18.250028610229492
    9. '    ' → logprob: -18.625028610229492
    10. '           ' → logprob: -19.000028610229492

Token 199: ',w' (ID: 49598)
  Prédit: ',w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',w' → logprob: -0.01400458998978138
    2. ',' → logprob: -4.389004707336426
    3. ' ,' → logprob: -6.514004707336426
    4. 'w' → logprob: -11.514004707336426
    5. ' w' → logprob: -14.889004707336426
    6. ',W' → logprob: -15.014004707336426
    7. ' ' → logprob: -16.13900375366211
    8. ',
' → logprob: -17.13900375366211
    9. ',,' → logprob: -17.13900375366211
    10. '   ' → logprob: -17.13900375366211

Token 200: ',i' (ID: 25032)
  Prédit: ',i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',i' → logprob: -0.0098720109090209
    2. ',' → logprob: -4.634871959686279
    3. ',f' → logprob: -10.134872436523438
    4. ',n' → logprob: -10.884872436523438
    5. ',-' → logprob: -11.384872436523438
    6. ',c' → logprob: -11.759872436523438
    7. ' ,' → logprob: -11.884872436523438
    8. ',t' → logprob: -12.009872436523438
    9. ',int' → logprob: -12.384872436523438
    10. ',len' → logprob: -12.759872436523438

Token 201: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.034576259553432465
    2. ',' → logprob: -3.409576177597046
    3. '))
' → logprob: -7.659576416015625
    4. ')' → logprob: -8.159576416015625
    5. ' ))' → logprob: -9.159576416015625
    6. ',None' → logprob: -11.284576416015625
    7. ',"' → logprob: -12.034576416015625
    8. ' ,' → logprob: -12.409576416015625
    9. ',))
' → logprob: -12.409576416015625
    10. '))

' → logprob: -12.534576416015625

Token 202: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 203: ' edges' (ID: 22569)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.2297765463590622
    2. ' adj' → logprob: -1.6047765016555786
    3. '           ' → logprob: -5.479776382446289
    4. 'edges' (adapté à ' edges') → logprob: -9.979776382446289
    5. 'if' → logprob: -10.354776382446289
    6. ' edges' → logprob: -10.604776382446289
    7. '       ' → logprob: -10.854776382446289
    8. ' if' → logprob: -11.104776382446289
    9. '   ' → logprob: -11.729776382446289
    10. ' adjacency' → logprob: -12.104776382446289

Token 204: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.40452009439468384
    2. '[' → logprob: -1.404520034790039
    3. '[f' → logprob: -3.279520034790039
    4. '<|end|>' → logprob: -3.279520034790039
    5. '.' → logprob: -4.904520034790039
    6. '[i' → logprob: -6.779520034790039
    7. '```' → logprob: -8.154520034790039
    8. '.setdefault' → logprob: -8.279520034790039
    9. ' .' → logprob: -8.404520034790039
    10. '[
' → logprob: -8.404520034790039

Token 205: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.005508137866854668
    2. '(f' → logprob: -5.505507946014404
    3. '(' → logprob: -6.880507946014404
    4. '(t' → logprob: -8.505508422851562
    5. '(None' → logprob: -8.880508422851562
    6. '(False' → logprob: -10.755508422851562
    7. '(True' → logprob: -11.255508422851562
    8. '([' → logprob: -11.630508422851562
    9. '(i' → logprob: -12.005508422851562
    10. ' (' → logprob: -13.130508422851562

Token 206: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0012430864153429866
    2. ' f' → logprob: -7.2512431144714355
    3. 't' → logprob: -7.7512431144714355
    4. '(f' → logprob: -10.001242637634277
    5. ')' → logprob: -10.876242637634277
    6. ' (' → logprob: -11.751242637634277
    7. '   ' → logprob: -11.876242637634277
    8. 'w' → logprob: -12.501242637634277
    9. ' t' → logprob: -12.751242637634277
    10. '(t' → logprob: -13.001242637634277

Token 207: ',t' (ID: 26927)
  Prédit: ',t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',t' → logprob: -0.10371231287717819
    2. ',' → logprob: -2.353712320327759
    3. ' ,' → logprob: -6.35371208190918
    4. ',w' → logprob: -6.35371208190918
    5. ',f' → logprob: -12.72871208190918
    6. ',
' → logprob: -12.72871208190918
    7. 't' → logprob: -13.10371208190918
    8. ' t' → logprob: -13.60371208190918
    9. 'w' → logprob: -13.85371208190918
    10. ',n' → logprob: -13.97871208190918

Token 208: ',w' (ID: 49598)
  Prédit: ',w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',w' → logprob: -0.0024468773044645786
    2. ',' → logprob: -6.12744665145874
    3. ' ,' → logprob: -8.377447128295898
    4. '))' → logprob: -11.127447128295898
    5. 'w' → logprob: -11.377447128295898
    6. ',v' → logprob: -14.127447128295898
    7. '_,' → logprob: -14.502447128295898
    8. ',
' → logprob: -14.627447128295898
    9. ',W' → logprob: -14.627447128295898
    10. ')' → logprob: -14.877447128295898

Token 209: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.000327956018736586
    2. ')' → logprob: -8.125328063964844
    3. '))
' → logprob: -10.625328063964844
    4. ')))' → logprob: -12.500328063964844
    5. ' ))' → logprob: -13.250328063964844
    6. ',' → logprob: -13.375328063964844
    7. ''))' → logprob: -15.875328063964844
    8. '),' → logprob: -16.000328063964844
    9. '))

' → logprob: -17.000328063964844
    10. '()))' → logprob: -17.125328063964844

Token 210: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1330912858247757
    2. '<|end|>' → logprob: -2.2580912113189697
    3. '
' → logprob: -4.133091449737549
    4. '        
' → logprob: -5.758091449737549
    5. '<|end|>' → logprob: -8.00809097290039
    6. '```' → logprob: -8.38309097290039
    7. '            
' → logprob: -10.00809097290039
    8. '   ' → logprob: -10.25809097290039
    9. '           ' → logprob: -10.50809097290039
    10. '  
' → logprob: -10.82059097290039

Token 211: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.3903304934501648
    2. ' dist' → logprob: -2.3903305530548096
    3. 'cd' → logprob: -3.5153305530548096
    4. 'visited' → logprob: -3.6403305530548096
    5. '       ' → logprob: -3.7653305530548096
    6. 'c' → logprob: -4.2653303146362305
    7. 'dp' → logprob: -4.7653303146362305
    8. 'dc' → logprob: -5.0153303146362305
    9. 'd' → logprob: -5.0153303146362305
    10. 'used' → logprob: -5.1403303146362305

Token 212: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04070955142378807
    2. '=' → logprob: -3.2907094955444336
    3. ',' → logprob: -6.165709495544434
    4. ',c' → logprob: -8.040709495544434
    5. '[' → logprob: -8.790709495544434
    6. '=c' → logprob: -10.915709495544434
    7. ',d' → logprob: -11.165709495544434
    8. ' ,' → logprob: -11.165709495544434
    9. ',n' → logprob: -11.915709495544434
    10. '[c' → logprob: -12.040709495544434

Token 213: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3868763744831085
    2. ' d' → logprob: -1.1368763446807861
    3. '(d' → logprob: -12.261876106262207
    4. ')d' → logprob: -14.886876106262207
    5. '(' → logprob: -16.386877059936523
    6. '   ' → logprob: -16.636877059936523
    7. '[d' → logprob: -16.636877059936523
    8. '	d' → logprob: -17.386877059936523
    9. '_d' → logprob: -18.011877059936523
    10. ')' → logprob: -18.136877059936523

Token 214: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -1.2233183042553719e-05
    2. 'ijk' → logprob: -11.500012397766113
    3. 'ij' → logprob: -13.375012397766113
    4. 'ist' → logprob: -15.625012397766113
    5. 'j' → logprob: -16.250011444091797
    6. 'ijks' → logprob: -16.625011444091797
    7. 'ijkl' → logprob: -17.375011444091797
    8. '(' → logprob: -17.875011444091797
    9. 'jik' → logprob: -18.250011444091797
    10. 'ijst' → logprob: -18.500011444091797

Token 215: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.44574936106801e-05
    2. '(' → logprob: -9.87507438659668
    3. ' (' → logprob: -10.87507438659668
    4. '<|end|>' → logprob: -12.87507438659668
    5. ',n' → logprob: -14.37507438659668
    6. '(
' → logprob: -15.50007438659668
    7. '```' → logprob: -15.75007438659668
    8. ')n' → logprob: -15.87507438659668
    9. ')(' → logprob: -16.37507438659668
    10. '<n' → logprob: -16.50007438659668

Token 216: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023641066625714302
    2. ',c' → logprob: -3.7736411094665527
    3. ' ,' → logprob: -7.898641109466553
    4. ',n' → logprob: -11.398640632629395
    5. '(' → logprob: -12.148640632629395
    6. ',d' → logprob: -12.898640632629395
    7. ',C' → logprob: -14.148640632629395
    8. ',(' → logprob: -14.273640632629395
    9. ',
' → logprob: -14.523640632629395
    10. '(c' → logprob: -14.648640632629395

Token 217: 'adj' (ID: 57001)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.003650079946964979
    2. ' c' → logprob: -5.628650188446045
    3. '1' → logprob: -10.378649711608887
    4. '   ' → logprob: -11.253649711608887
    5. '       ' → logprob: -13.503649711608887
    6. ')c' → logprob: -13.503649711608887
    7. 'adj' → logprob: -14.128649711608887
    8. '	c' → logprob: -14.503649711608887
    9. ' ' → logprob: -14.503649711608887
    10. '
' → logprob: -14.753649711608887

Token 218: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004106184933334589
    2. ')
' → logprob: -5.504106044769287
    3. ',' → logprob: -11.629106521606445
    4. '<|end|>' → logprob: -12.379106521606445
    5. ' )' → logprob: -12.504106521606445
    6. '   ' → logprob: -12.629106521606445
    7. ')
' → logprob: -12.879106521606445
    8. '[' → logprob: -13.754106521606445
    9. '
' → logprob: -13.754106521606445
    10. '),' → logprob: -14.629106521606445

Token 219: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7123497724533081
    2. 'reachable' → logprob: -2.0873498916625977
    3. '   ' → logprob: -2.2123498916625977
    4. 'count' → logprob: -2.3373498916625977
    5. 'affected' → logprob: -3.2123498916625977
    6. ' count' → logprob: -3.8373498916625977
    7. ' edges' → logprob: -4.087349891662598
    8. 'visited' → logprob: -4.712349891662598
    9. ' reachable' → logprob: -4.712349891662598
    10. 'edges' → logprob: -4.837349891662598

Token 220: ' original' (ID: 4756)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5451366305351257
    2. 'ans' → logprob: -1.9201366901397705
    3. 'cnt' → logprob: -2.4201366901397705
    4. 'reachable' → logprob: -2.7951366901397705
    5. 'res' → logprob: -4.045136451721191
    6. 'affected' → logprob: -4.170136451721191
    7. 'result' → logprob: -4.295136451721191
    8. 'answer' → logprob: -4.420136451721191
    9. 'inf' → logprob: -4.670136451721191
    10. 'infect' → logprob: -4.920136451721191

Token 221: ' =' (ID: 314)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.2540920674800873
    2. '_edges' → logprob: -2.00409197807312
    3. ' =' → logprob: -3.37909197807312
    4. '_' → logprob: -4.379092216491699
    5. '=' → logprob: -4.879092216491699
    6. '_cost' → logprob: -5.129092216491699
    7. '_count' → logprob: -5.379092216491699
    8. '_time' → logprob: -5.504092216491699
    9. 'dist' → logprob: -5.754092216491699
    10. '_distance' → logprob: -5.879092216491699

Token 222: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0466361865401268
    2. '[' → logprob: -3.6716361045837402
    3. ' dist' → logprob: -4.92163610458374
    4. 'sum' → logprob: -5.29663610458374
    5. 'd' → logprob: -5.92163610458374
    6. '[min' → logprob: -7.29663610458374
    7. ' [' → logprob: -7.42163610458374
    8. '[max' → logprob: -7.54663610458374
    9. '0' → logprob: -7.79663610458374
    10. 'edges' → logprob: -7.92163610458374

Token 223: '[n' (ID: 15433)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.21378999948501587
    2. '.copy' → logprob: -1.713789939880371
    3. '[:' → logprob: -5.338789939880371
    4. '[' → logprob: -5.963789939880371
    5. '<|end|>' → logprob: -5.963789939880371
    6. '_copy' → logprob: -6.838789939880371
    7. '_' → logprob: -7.088789939880371
    8. ',' → logprob: -9.213789939880371
    9. 'copy' → logprob: -9.838789939880371
    10. '[:-' → logprob: -10.088789939880371

Token 224: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3602616786956787
    2. ')' → logprob: -1.2352616786956787
    3. '[' → logprob: -5.360261917114258
    4. '])' → logprob: -5.985261917114258
    5. '<|end|>' → logprob: -6.860261917114258
    6. ' )' → logprob: -7.235261917114258
    7. ' ]' → logprob: -7.360261917114258
    8. ']
' → logprob: -7.735261917114258
    9. ')]' → logprob: -7.860261917114258
    10. ')
' → logprob: -8.360261917114258

Token 225: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07542981207370758
    2. '<|end|>' → logprob: -2.700429916381836
    3. ' if' → logprob: -5.950429916381836
    4. '       ' → logprob: -6.450429916381836
    5. '        
' → logprob: -7.075429916381836
    6. 'if' → logprob: -8.825429916381836
    7. '<|end|>' → logprob: -9.575429916381836
    8. ' 
' → logprob: -9.700429916381836
    9. '  
' → logprob: -9.950429916381836
    10. '
' → logprob: -10.325429916381836

Token 226: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.3056142330169678
    2. 'answer' → logprob: -1.4306142330169678
    3. 'for' → logprob: -1.8056142330169678
    4. 'res' → logprob: -2.1806142330169678
    5. 'best' → logprob: -2.9306142330169678
    6. 'result' → logprob: -3.6806142330169678
    7. 'changed' → logprob: -3.9306142330169678
    8. 'min' → logprob: -4.180614471435547
    9. 'if' → logprob: -4.180614471435547
    10. 'left' → logprob: -4.680614471435547

Token 227: ' We' (ID: 1416)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4065110981464386
    2. ' for' → logprob: -2.156511068344116
    3. 'dist' → logprob: -3.281511068344116
    4. 'changed' → logprob: -3.656511068344116
    5. 'edges' → logprob: -4.156511306762695
    6. 'if' → logprob: -4.281511306762695
    7. 'removed' → logprob: -4.281511306762695
    8. ' edges' → logprob: -5.156511306762695
    9. 'count' → logprob: -5.156511306762695
    10. 'reverse' → logprob: -5.281511306762695

Token 228: ' want' (ID: 1682)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.6001909971237183
    2. 'for' → logprob: -2.100191116333008
    3. 're' → logprob: -2.225191116333008
    4. '   ' → logprob: -2.225191116333008
    5. ''ll' → logprob: -2.600191116333008
    6. ' for' → logprob: -2.725191116333008
    7. 'continue' → logprob: -3.100191116333008
    8. ' want' → logprob: -3.100191116333008
    9. ' need' → logprob: -3.225191116333008
    10. '       ' → logprob: -3.850191116333008

Token 229: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.14280258119106293
    2. 'to' → logprob: -2.0178024768829346
    3. '<|end|>' → logprob: -10.142802238464355
    4. '   ' → logprob: -10.892802238464355
    5. 't' → logprob: -11.142802238464355
    6. '
' → logprob: -11.767802238464355
    7. '    ' → logprob: -11.767802238464355
    8. '<|end|>' → logprob: -12.517802238464355
    9. 'def' → logprob: -12.642802238464355
    10. ' for' → logprob: -12.642802238464355

Token 230: ' reduce' (ID: 10389)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.26721736788749695
    2. ' find' → logprob: -1.7672173976898193
    3. 'remove' → logprob: -3.2672173976898193
    4. 'check' → logprob: -4.76721715927124
    5. ' check' → logprob: -5.64221715927124
    6. 'for' → logprob: -6.01721715927124
    7. 'maximize' → logprob: -6.64221715927124
    8. 'simulate' → logprob: -6.64221715927124
    9. 'print' → logprob: -6.76721715927124
    10. ' remove' → logprob: -6.89221715927124

Token 231: ' dist' (ID: 3601)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6259379982948303
    2. ' the' → logprob: -0.8759379982948303
    3. 'original' → logprob: -3.8759379386901855
    4. ' original' → logprob: -4.7509379386901855
    5. ' edges' → logprob: -5.1259379386901855
    6. 'dist' → logprob: -5.2509379386901855
    7. 'edges' → logprob: -5.8759379386901855
    8. 'distance' → logprob: -6.7509379386901855
    9. 'import' → logprob: -7.1259379386901855
    10. 'w' → logprob: -7.5009379386901855

Token 232: ' from' (ID: 591)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.01089407131075859
    2. '[' → logprob: -5.010894298553467
    3. 'from' → logprob: -6.885894298553467
    4. ' =' → logprob: -7.510894298553467
    5. 'to' → logprob: -7.760894298553467
    6. '   ' → logprob: -7.885894298553467
    7. '       ' → logprob: -8.385893821716309
    8. 'for' → logprob: -8.510893821716309
    9. 'n' → logprob: -8.635893821716309
    10. '[i' → logprob: -8.885893821716309

Token 233: ' original' (ID: 4756)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.18089750409126282
    2. 'original' → logprob: -2.4308974742889404
    3. 'float' → logprob: -4.1808977127075195
    4. ' n' → logprob: -4.1808977127075195
    5. 'edges' → logprob: -4.3058977127075195
    6. 'sys' → logprob: -4.9308977127075195
    7. 'c' → logprob: -5.1808977127075195
    8. ' original' → logprob: -5.3058977127075195
    9. '1' → logprob: -5.4308977127075195
    10. 'orig' → logprob: -5.8058977127075195

Token 234: ' >' (ID: 1424)
  Prédit: ' by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.6873045563697815
    2. ' to' → logprob: -2.3123044967651367
    3. 'by' → logprob: -2.4373044967651367
    4. 'for' → logprob: -2.6873044967651367
    5. ' if' → logprob: -3.1873044967651367
    6. ',' → logprob: -3.6873044967651367
    7. 'def' → logprob: -3.9373044967651367
    8. 'to' → logprob: -3.9373044967651367
    9. '
' → logprob: -3.9373044967651367
    10. ' for' → logprob: -4.062304496765137

Token 235: ' c' (ID: 274)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.24748997390270233
    2. 'to' → logprob: -2.4974899291992188
    3. ' by' → logprob: -3.2474899291992188
    4. ' if' → logprob: -3.3724899291992188
    5. '=' → logprob: -4.247489929199219
    6. 'by' → logprob: -4.997489929199219
    7. 'if' → logprob: -5.122489929199219
    8. '-' → logprob: -5.497489929199219
    9. '+' → logprob: -5.747489929199219
    10. ',' → logprob: -5.747489929199219

Token 236: ' to' (ID: 316)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20936541259288788
    2. ' if' → logprob: -2.4593653678894043
    3. '       ' → logprob: -3.3343653678894043
    4. '<|end|>' → logprob: -4.334365367889404
    5. ' by' → logprob: -4.459365367889404
    6. ' 
' → logprob: -5.084365367889404
    7. '        
' → logprob: -5.084365367889404
    8. '  
' → logprob: -5.459365367889404
    9. ' for' → logprob: -5.709365367889404
    10. 'if' → logprob: -5.709365367889404

Token 237: ' exactly' (ID: 9707)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.22403351962566376
    2. 'c' → logprob: -1.9740334749221802
    3. ' original' → logprob: -3.4740335941314697
    4. 'original' → logprob: -4.099033355712891
    5. ' ' → logprob: -5.599033355712891
    6. '0' → logprob: -6.224033355712891
    7. ' True' → logprob: -6.349033355712891
    8. ' at' → logprob: -6.849033355712891
    9. '"' → logprob: -7.224033355712891
    10. 'True' → logprob: -7.599033355712891

Token 238: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.06228628754615784
    2. 'c' → logprob: -2.812286376953125
    3. ' ' → logprob: -8.937286376953125
    4. ''' → logprob: -9.437286376953125
    5. ' ' → logprob: -10.187286376953125
    6. '"' → logprob: -10.812286376953125
    7. '	c' → logprob: -11.812286376953125
    8. ' '' → logprob: -11.937286376953125
    9. '0' → logprob: -12.187286376953125
    10. '`' → logprob: -12.312286376953125

Token 239: ' by' (ID: 656)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4456244707107544
    2. '       ' → logprob: -1.3206244707107544
    3. ' if' → logprob: -2.570624351501465
    4. '        
' → logprob: -5.320624351501465
    5. '<|end|>' → logprob: -6.195624351501465
    6. 'if' → logprob: -6.320624351501465
    7. '.' → logprob: -6.570624351501465
    8. ',' → logprob: -6.570624351501465
    9. '   ' → logprob: -7.195624351501465
    10. ' by' → logprob: -7.445624351501465

Token 240: ' changing' (ID: 13784)
  Prédit: ' removing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' removing' → logprob: -0.9925475716590881
    2. 'rem' → logprob: -1.8675475120544434
    3. ' reducing' → logprob: -2.2425475120544434
    4. ' binary' → logprob: -2.3675475120544434
    5. 'binary' → logprob: -2.7425475120544434
    6. 'redu' → logprob: -3.2425475120544434
    7. ' cutting' → logprob: -3.3675475120544434
    8. ' modifying' → logprob: -3.4925475120544434
    9. ' increasing' → logprob: -4.242547512054443
    10. ' decreasing' → logprob: -4.492547512054443

Token 241: ' minimal' (ID: 19957)
  Prédit: ' one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' one' → logprob: -1.2920966148376465
    2. ' edges' → logprob: -1.2920966148376465
    3. 'edges' → logprob: -1.5420966148376465
    4. 'the' → logprob: -2.9170966148376465
    5. 'one' → logprob: -3.0420966148376465
    6. ' the' → logprob: -3.0420966148376465
    7. '1' → logprob: -3.2920966148376465
    8. ' a' → logprob: -4.1670966148376465
    9. ' ' → logprob: -4.4170966148376465
    10. 'w' → logprob: -5.1670966148376465

Token 242: ' edges' (ID: 22569)
  Prédit: ' one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.12289904057979584
    2. 'one' → logprob: -2.372899055480957
    3. ' edges' → logprob: -5.622899055480957
    4. ' amount' → logprob: -5.747899055480957
    5. ' code' → logprob: -6.372899055480957
    6. 'edges' → logprob: -6.372899055480957
    7. ' ' → logprob: -6.372899055480957
    8. 'weight' → logprob: -6.497899055480957
    9. '1' → logprob: -6.622899055480957
    10. 'amount' → logprob: -6.622899055480957

Token 243: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5190112590789795
    2. '<|end|>' → logprob: -2.0190112590789795
    3. '       ' → logprob: -2.1440112590789795
    4. '.' → logprob: -2.5190112590789795
    5. ' if' → logprob: -3.7690112590789795
    6. '_' → logprob: -4.519011497497559
    7. '        
' → logprob: -4.769011497497559
    8. ',' → logprob: -5.019011497497559
    9. '        ' → logprob: -5.144011497497559
    10. ' ' → logprob: -6.019011497497559

Token 244: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2104732245206833
    2. '       ' → logprob: -2.2104732990264893
    3. ' if' → logprob: -2.9604732990264893
    4. '        
' → logprob: -4.96047306060791
    5. ' for' → logprob: -4.96047306060791
    6. ' 
' → logprob: -5.21047306060791
    7. '\n' → logprob: -6.08547306060791
    8. 'if' → logprob: -6.83547306060791
    9. '#' → logprob: -7.33547306060791
    10. '        ' → logprob: -7.33547306060791

Token 245: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.933381199836731
    2. ' edges' → logprob: -1.933381199836731
    3. ' changes' → logprob: -2.3083810806274414
    4. ' if' → logprob: -2.8083810806274414
    5. 'change' → logprob: -3.3083810806274414
    6. ' for' → logprob: -3.5583810806274414
    7. ' changed' → logprob: -3.6833810806274414
    8. ' change' → logprob: -3.9333810806274414
    9. 'edges' → logprob: -3.9333810806274414
    10. 'dp' → logprob: -4.058381080627441

Token 246: ' We' (ID: 1416)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -1.402306318283081
    2. 'edges' → logprob: -2.277306318283081
    3. 'change' → logprob: -2.402306318283081
    4. ' changes' → logprob: -2.777306318283081
    5. 'dp' → logprob: -2.902306318283081
    6. 'changes' → logprob: -3.277306318283081
    7. 'left' → logprob: -3.277306318283081
    8. 'for' → logprob: -3.527306318283081
    9. 'low' → logprob: -3.527306318283081
    10. 'changed' → logprob: -3.652306318283081

Token 247: ' model' (ID: 2359)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.0797922611236572
    2. '#' → logprob: -2.0797922611236572
    3. 'for' → logprob: -2.0797922611236572
    4. ' =' → logprob: -2.2047922611236572
    5. 'continue' → logprob: -2.5797922611236572
    6. ' need' → logprob: -3.0797922611236572
    7. ' for' → logprob: -3.4547922611236572
    8. ' have' → logprob: -3.4547922611236572
    9. ' #' → logprob: -3.8297922611236572
    10. '=' → logprob: -3.8297922611236572

Token 248: ' a' (ID: 261)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.1525108814239502
    2. 'the' → logprob: -2.52751088142395
    3. ' a' → logprob: -3.65251088142395
    4. ' edges' → logprob: -4.152510643005371
    5. ' this' → logprob: -5.652510643005371
    6. '#' → logprob: -6.027510643005371
    7. 'd' → logprob: -6.152510643005371
    8. 'edges' → logprob: -6.527510643005371
    9. '<|end|>' → logprob: -6.777510643005371
    10. 'def' → logprob: -6.902510643005371

Token 249: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -1.2575982809066772
    2. ' dp' → logprob: -1.8825982809066772
    3. ' ' → logprob: -2.632598400115967
    4. ' bfs' → logprob: -2.757598400115967
    5. 'dp' → logprob: -3.257598400115967
    6. ' BFS' → logprob: -3.382598400115967
    7. '*' → logprob: -3.507598400115967
    8. ' d' → logprob: -3.632598400115967
    9. 'd' → logprob: -3.632598400115967
    10. ' new' → logprob: -3.757598400115967

Token 250: ' where' (ID: 1919)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6431920528411865
    2. ' =' → logprob: -1.8931920528411865
    3. ' with' → logprob: -1.8931920528411865
    4. '<|end|>' → logprob: -2.2681920528411865
    5. ' to' → logprob: -2.6431920528411865
    6. ' for' → logprob: -3.0181920528411865
    7. '=' → logprob: -3.2681920528411865
    8. ' and' → logprob: -3.2681920528411865
    9. 'from' → logprob: -3.5181920528411865
    10. 'with' → logprob: -3.6431920528411865

Token 251: ' each' (ID: 2454)
  Prédit: ' each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.4283754229545593
    2. 'each' → logprob: -1.928375482559204
    3. ' nodes' → logprob: -2.803375482559204
    4. ' edges' → logprob: -3.178375482559204
    5. 'dist' → logprob: -4.428375244140625
    6. ' the' → logprob: -4.428375244140625
    7. 'nodes' → logprob: -4.428375244140625
    8. 'the' → logprob: -4.678375244140625
    9. 'edges' → logprob: -4.928375244140625
    10. 'from' → logprob: -4.928375244140625

Token 252: ' edge' (ID: 11165)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.2545098066329956
    2. 'node' → logprob: -2.629509925842285
    3. ' edge' → logprob: -2.754509925842285
    4. ' (' → logprob: -2.879509925842285
    5. '(node' → logprob: -4.879509925842285
    6. 'edge' → logprob: -5.254509925842285
    7. ' state' → logprob: -5.504509925842285
    8. '(' → logprob: -5.629509925842285
    9. 'state' → logprob: -6.129509925842285
    10. 'dist' → logprob: -6.754509925842285

Token 253: ' change' (ID: 3343)
  Prédit: ' has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' has' → logprob: -0.6051003336906433
    2. ' can' → logprob: -0.9801003336906433
    3. '<|end|>' → logprob: -3.355100393295288
    4. 'can' → logprob: -4.105100154876709
    5. 'has' → logprob: -4.730100154876709
    6. ' is' → logprob: -5.230100154876709
    7. ' represents' → logprob: -5.230100154876709
    8. ''s' → logprob: -6.105100154876709
    9. ',' → logprob: -7.105100154876709
    10. '<|end|>' → logprob: -7.230100154876709

Token 254: ' cost' (ID: 3097)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 255: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22286905348300934
    2. '=' → logprob: -2.3478691577911377
    3. ' is' → logprob: -2.9728691577911377
    4. ')' → logprob: -3.9728691577911377
    5. '=[]' → logprob: -4.722868919372559
    6. 's' → logprob: -4.847868919372559
    7. '<|end|>' → logprob: -4.972868919372559
    8. ',' → logprob: -5.472868919372559
    9. ' and' → logprob: -6.847868919372559
    10. 'def' → logprob: -6.972868919372559

Token 256: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1751369684934616
    2. ' ' → logprob: -2.4251370429992676
    3. '0' → logprob: -3.4251370429992676
    4. 'w' → logprob: -3.6751370429992676
    5. ' w' → logprob: -4.925137042999268
    6. ' float' → logprob: -6.175137042999268
    7. 'float' → logprob: -6.300137042999268
    8. ' (' → logprob: -7.675137042999268
    9. 'inf' → logprob: -7.800137042999268
    10. 'edges' → logprob: -7.800137042999268

Token 257: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14411699771881104
    2. '0' → logprob: -2.7691168785095215
    3. 'w' → logprob: -2.7691168785095215
    4. 'float' → logprob: -5.3941168785095215
    5. ' ' → logprob: -6.5191168785095215
    6. '(' → logprob: -7.8941168785095215
    7. '(float' → logprob: -8.01911735534668
    8. '(w' → logprob: -8.01911735534668
    9. 'edges' → logprob: -8.14411735534668
    10. ' w' → logprob: -8.51911735534668

Token 258: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1937456578016281
    2. '<|end|>' → logprob: -1.8187456130981445
    3. '       ' → logprob: -4.5687456130981445
    4. '<|end|>' → logprob: -6.5687456130981445
    5. '        
' → logprob: -7.4437456130981445
    6. ',' → logprob: -7.4437456130981445
    7. ' and' → logprob: -8.318745613098145
    8. ',
' → logprob: -9.318745613098145
    9. '
' → logprob: -9.318745613098145
    10. '   ' → logprob: -9.443745613098145

Token 259: ' else' (ID: 1203)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6765101552009583
    2. '#' → logprob: -2.4265100955963135
    3. '<|end|>' → logprob: -2.5515100955963135
    4. ' #' → logprob: -2.9265100955963135
    5. '       ' → logprob: -3.0515100955963135
    6. 'dp' → logprob: -3.5515100955963135
    7. 'and' → logprob: -3.6765100955963135
    8. ' dist' → logprob: -3.6765100955963135
    9. 'dist' → logprob: -4.176510334014893
    10. 'visited' → logprob: -4.301510334014893

Token 260: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.44106221199035645
    2. ' ' → logprob: -1.4410622119903564
    3. '<|end|>' → logprob: -3.0660622119903564
    4. 'cost' → logprob: -4.066061973571777
    5. 'dist' → logprob: -4.441061973571777
    6. ',' → logprob: -4.566061973571777
    7. ' cost' → logprob: -5.191061973571777
    8. '1' → logprob: -5.816061973571777
    9. ' the' → logprob: -5.941061973571777
    10. ' ,' → logprob: -6.316061973571777

Token 261: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018129581585526466
    2. ' ' → logprob: -4.518129348754883
    3. 'cost' → logprob: -5.893129348754883
    4. 'inf' → logprob: -6.143129348754883
    5. '=' → logprob: -7.143129348754883
    6. 'dist' → logprob: -8.643129348754883
    7. ' cost' → logprob: -8.643129348754883
    8. 'in' → logprob: -8.893129348754883
    9. '100' → logprob: -9.393129348754883
    10. 'float' → logprob: -9.518129348754883

Token 262: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.027053022757172585
    2. '<|end|>' → logprob: -3.652053117752075
    3. '<|end|>' → logprob: -8.527052879333496
    4. '   ' → logprob: -9.152052879333496
    5. '       ' → logprob: -9.277052879333496
    6. ',' → logprob: -9.777052879333496
    7. 'def' → logprob: -9.902052879333496
    8. '
' → logprob: -10.027052879333496
    9. '#' → logprob: -10.527052879333496
    10. '        
' → logprob: -10.527052879333496

Token 263: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 264: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35556885600090027
    2. '
' → logprob: -1.9805688858032227
    3. ' dist' → logprob: -3.3555688858032227
    4. 'import' → logprob: -3.4805688858032227
    5. 'dist' → logprob: -3.7305688858032227
    6. '        
' → logprob: -4.105568885803223
    7. '   ' → logprob: -4.230568885803223
    8. 'from' → logprob: -4.730568885803223
    9. '<|end|>' → logprob: -4.730568885803223
    10. 'def' → logprob: -5.355568885803223

Token 265: ' Also' (ID: 8820)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0343936681747437
    2. 'dist' → logprob: -1.1593936681747437
    3. 'from' → logprob: -1.7843936681747437
    4. '#' → logprob: -3.409393787384033
    5. 'mod' → logprob: -3.534393787384033
    6. 'import' → logprob: -3.784393787384033
    7. 'change' → logprob: -3.784393787384033
    8. 'cost' → logprob: -4.659393787384033
    9. 'def' → logprob: -4.784393787384033
    10. 'queue' → logprob: -4.909393787384033

Token 266: ',' (ID: 11)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6855395436286926
    2. '#' → logprob: -1.5605394840240479
    3. ' dist' → logprob: -2.060539484024048
    4. ' #' → logprob: -3.310539484024048
    5. '
' → logprob: -3.560539484024048
    6. 'dp' → logprob: -4.685539722442627
    7. ' for' → logprob: -4.935539722442627
    8. '       ' → logprob: -5.060539722442627
    9. 'prev' → logprob: -5.060539722442627
    10. 'change' → logprob: -5.185539722442627

Token 267: ' edge' (ID: 11165)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5064629316329956
    2. 'dist' → logprob: -2.381463050842285
    3. ' we' → logprob: -2.506463050842285
    4. '
' → logprob: -3.006463050842285
    5. ' #' → logprob: -3.131463050842285
    6. 'we' → logprob: -3.381463050842285
    7. 'import' → logprob: -3.631463050842285
    8. ' dist' → logprob: -4.631463050842285
    9. 'from' → logprob: -5.006463050842285
    10. 'change' → logprob: -5.381463050842285

Token 268: ' weights' (ID: 28460)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.18335533142089844
    2. '_lengths' → logprob: -3.3083553314208984
    3. 'cost' → logprob: -3.6833553314208984
    4. '_cost' → logprob: -3.9333553314208984
    5. '_changes' → logprob: -4.308355331420898
    6. '_weights' → logprob: -4.683355331420898
    7. '_count' → logprob: -5.183355331420898
    8. 'case' → logprob: -5.308355331420898
    9. '_' → logprob: -5.558355331420898
    10. '_indices' → logprob: -5.933355331420898

Token 269: ' after' (ID: 1934)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 270: ' change' (ID: 3343)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.2742888331413269
    2. 're' → logprob: -2.6492888927459717
    3. 'change' → logprob: -2.6492888927459717
    4. 'adjust' → logprob: -3.2742888927459717
    5. ' modification' → logprob: -4.149288654327393
    6. 'min' → logprob: -4.274288654327393
    7. ' adjustment' → logprob: -4.899288654327393
    8. 'de' → logprob: -5.399288654327393
    9. 'changes' → logprob: -5.399288654327393
    10. 'changing' → logprob: -5.899288654327393

Token 271: ' must' (ID: 2804)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20674729347229004
    2. '=' → logprob: -2.58174729347229
    3. ' are' → logprob: -2.70674729347229
    4. '<|end|>' → logprob: -4.081747055053711
    5. ' can' → logprob: -4.706747055053711
    6. ',' → logprob: -5.081747055053711
    7. ':' → logprob: -5.581747055053711
    8. ' must' → logprob: -5.831747055053711
    9. ')' → logprob: -6.581747055053711
    10. '<|end|>' → logprob: -7.456747055053711

Token 272: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.01005212590098381
    2. 'be' → logprob: -5.13505220413208
    3. ' not' → logprob: -5.88505220413208
    4. '>=' → logprob: -7.88505220413208
    5. '<=' → logprob: -8.135051727294922
    6. ' remain' → logprob: -8.510051727294922
    7. 'not' → logprob: -8.510051727294922
    8. '<|end|>' → logprob: -9.385051727294922
    9. ' <=' → logprob: -10.260051727294922
    10. ' >=' → logprob: -10.385051727294922

Token 273: ' >=' (ID: 5064)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.865945041179657
    2. 'at' → logprob: -1.6159451007843018
    3. '>=' → logprob: -2.2409451007843018
    4. ' at' → logprob: -2.3659451007843018
    5. '<=' → logprob: -2.8659451007843018
    6. '1' → logprob: -2.9909451007843018
    7. 'w' → logprob: -3.6159451007843018
    8. ' c' → logprob: -3.8659451007843018
    9. '>' → logprob: -4.740944862365723
    10. 'max' → logprob: -6.115944862365723

Token 274: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.042263761162757874
    2. 'c' → logprob: -3.5422637462615967
    3. '0' → logprob: -4.792263984680176
    4. 'w' → logprob: -5.667263984680176
    5. ' ' → logprob: -7.792263984680176
    6. ' c' → logprob: -9.167263984680176
    7. 'original' → logprob: -10.292263984680176
    8. '```' → logprob: -10.542263984680176
    9. ' w' → logprob: -10.792263984680176
    10. 'edges' → logprob: -10.917263984680176

Token 275: ' and' (ID: 326)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6700918078422546
    2. '<|end|>' → logprob: -0.7950918078422546
    3. '       ' → logprob: -3.4200918674468994
    4. '<|end|>' → logprob: -6.42009162902832
    5. '        
' → logprob: -6.79509162902832
    6. 'def' → logprob: -8.17009162902832
    7. '   ' → logprob: -8.29509162902832
    8. '#' → logprob: -8.79509162902832
    9. '```' → logprob: -8.92009162902832
    10. ')' → logprob: -9.42009162902832

Token 276: ' can' (ID: 665)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.06823316216468811
    2. ' <=' → logprob: -3.5682332515716553
    3. 'w' → logprob: -4.943233013153076
    4. 'not' → logprob: -4.943233013153076
    5. 'c' → logprob: -5.068233013153076
    6. ' not' → logprob: -5.318233013153076
    7. 'adj' → logprob: -6.443233013153076
    8. 'original' → logprob: -6.568233013153076
    9. ' c' → logprob: -7.193233013153076
    10. 'the' → logprob: -7.318233013153076

Token 277: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.24897606670856476
    2. 'be' → logprob: -1.8739761114120483
    3. 'not' → logprob: -4.123976230621338
    4. ' at' → logprob: -4.373976230621338
    5. ' only' → logprob: -4.498976230621338
    6. ' not' → logprob: -4.623976230621338
    7. '<|end|>' → logprob: -5.623976230621338
    8. 'only' → logprob: -5.998976230621338
    9. 'at' → logprob: -5.998976230621338
    10. 'increase' → logprob: -6.123976230621338

Token 278: ' adjusted' (ID: 38307)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.9045040011405945
    2. 'adjust' → logprob: -1.9045040607452393
    3. 'c' → logprob: -2.4045040607452393
    4. 'any' → logprob: -2.9045040607452393
    5. ' adjusted' → logprob: -3.2795040607452393
    6. 'ar' → logprob: -3.2795040607452393
    7. 'de' → logprob: -3.5295040607452393
    8. ' any' → logprob: -4.02950382232666
    9. ' c' → logprob: -4.15450382232666
    10. 'changed' → logprob: -4.15450382232666

Token 279: ' to' (ID: 316)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0627448633313179
    2. '       ' → logprob: -3.3127448558807373
    3. '<|end|>' → logprob: -3.8127448558807373
    4. '        
' → logprob: -7.187745094299316
    5. '<|end|>' → logprob: -7.437745094299316
    6. '   ' → logprob: -8.312745094299316
    7. ',' → logprob: -8.937745094299316
    8. '  
' → logprob: -9.562745094299316
    9. '#' → logprob: -9.687745094299316
    10. '    
' → logprob: -9.687745094299316

Token 280: ' non' (ID: 2893)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.2281330823898315
    2. 'make' → logprob: -1.4781330823898315
    3. 'any' → logprob: -1.9781330823898315
    4. '0' → logprob: -2.478133201599121
    5. '1' → logprob: -2.603133201599121
    6. ' c' → logprob: -3.103133201599121
    7. ' any' → logprob: -3.228133201599121
    8. 'ach' → logprob: -3.603133201599121
    9. ' make' → logprob: -4.478133201599121
    10. 'exact' → logprob: -4.478133201599121

Token 281: '-negative' (ID: 126970)
  Prédit: 'negative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'negative' → logprob: -0.1308048665523529
    2. '-negative' → logprob: -2.1308047771453857
    3. ' negative' → logprob: -5.880805015563965
    4. 'de' → logprob: -7.380805015563965
    5. 'zero' → logprob: -9.005805015563965
    6. '-de' → logprob: -9.380805015563965
    7. '-' → logprob: -9.755805015563965
    8. '   ' → logprob: -10.255805015563965
    9. '0' → logprob: -10.630805015563965
    10. '-zero' → logprob: -10.630805015563965

Token 282: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15931548178195953
    2. '<|end|>' → logprob: -2.284315586090088
    3. '       ' → logprob: -3.159315586090088
    4. '        
' → logprob: -6.534315586090088
    5. '<|end|>' → logprob: -7.159315586090088
    6. ',' → logprob: -8.28431510925293
    7. '   ' → logprob: -9.90931510925293
    8. '```' → logprob: -10.03431510925293
    9. '
' → logprob: -10.28431510925293
    10. '  
' → logprob: -10.28431510925293

Token 283: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46452000737190247
    2. '<|end|>' → logprob: -1.21451997756958
    3. '
' → logprob: -2.71451997756958
    4. '   ' → logprob: -5.71451997756958
    5. '        
' → logprob: -6.08951997756958
    6. '<|end|>' → logprob: -6.58951997756958
    7. ')' → logprob: -8.339520454406738
    8. ',' → logprob: -8.839520454406738
    9. ' ' → logprob: -8.964520454406738
    10. ' 
' → logprob: -9.089520454406738

Token 284: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17340075969696045
    2. '
' → logprob: -3.17340087890625
    3. '        
' → logprob: -3.54840087890625
    4. ' dist' → logprob: -4.42340087890625
    5. 'from' → logprob: -4.42340087890625
    6. 'import' → logprob: -4.54840087890625
    7. 'dist' → logprob: -4.79840087890625
    8. '<|end|>' → logprob: -4.79840087890625
    9. '#' (adapté à ' #') → logprob: -4.92340087890625
    10. ' #' → logprob: -5.17340087890625

Token 285: ' So' (ID: 2632)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.848156213760376
    2. '       ' → logprob: -1.973156213760376
    3. 'dp' → logprob: -1.973156213760376
    4. '#' → logprob: -2.098156213760376
    5. 'import' → logprob: -2.723156213760376
    6. 'dist' → logprob: -3.598156213760376
    7. ' from' → logprob: -3.723156213760376
    8. ' #' → logprob: -4.598155975341797
    9. '
' → logprob: -4.723155975341797
    10. '   ' → logprob: -4.973155975341797

Token 286: ' for' (ID: 395)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -1.3762496709823608
    2. '#' → logprob: -1.7512496709823608
    3. ' for' → logprob: -1.8762496709823608
    4. ' #' → logprob: -2.1262497901916504
    5. 'dist' → logprob: -2.2512497901916504
    6. '
' → logprob: -3.2512497901916504
    7. 'for' → logprob: -3.5012497901916504
    8. 'import' → logprob: -3.6262497901916504
    9. 'dp' → logprob: -4.62624979019165
    10. ' import' → logprob: -4.75124979019165

Token 287: ' each' (ID: 2454)
  Prédit: ' each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.9751914739608765
    2. 'each' → logprob: -1.8501914739608765
    3. ' all' → logprob: -2.350191593170166
    4. ' edge' → logprob: -2.475191593170166
    5. 'edge' → logprob: -3.475191593170166
    6. 'e' → logprob: -3.475191593170166
    7. ' u' → logprob: -3.600191593170166
    8. ' i' → logprob: -3.850191593170166
    9. ' now' → logprob: -3.975191593170166
    10. ' _' → logprob: -4.225191593170166

Token 288: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.11662030220031738
    2. 'edge' → logprob: -2.2416203022003174
    3. 'u' → logprob: -6.866620063781738
    4. ' u' → logprob: -7.366620063781738
    5. 'e' → logprob: -7.991620063781738
    6. ' node' → logprob: -8.366620063781738
    7. 'v' → logprob: -8.366620063781738
    8. 'neighbor' → logprob: -8.366620063781738
    9. ' (' → logprob: -8.491620063781738
    10. ' v' → logprob: -8.491620063781738

Token 289: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.031403739005327225
    2. ' ,' → logprob: -4.156403541564941
    3. ' we' → logprob: -5.531403541564941
    4. ' in' → logprob: -5.531403541564941
    5. ':' → logprob: -5.656403541564941
    6. '<|end|>' → logprob: -6.781403541564941
    7. '<|end|>' → logprob: -7.531403541564941
    8. '   ' → logprob: -7.656403541564941
    9. ' if' → logprob: -8.031403541564941
    10. ' for' → logprob: -8.281403541564941

Token 290: 'f' (ID: 69)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.5254294276237488
    2. ')' → logprob: -1.1504294872283936
    3. ',' → logprob: -2.5254294872283936
    4. 'f' → logprob: -5.6504292488098145
    5. ' ,' → logprob: -6.5254292488098145
    6. ' ),' → logprob: -6.7754292488098145
    7. '
' → logprob: -7.0254292488098145
    8. ' f' → logprob: -7.1504292488098145
    9. ' )' → logprob: -7.6504292488098145
    10. ' in' → logprob: -7.7754292488098145

Token 291: ',t' (ID: 26927)
  Prédit: ',t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',t' → logprob: -0.07111655920743942
    2. ',' → logprob: -2.6961164474487305
    3. ',w' → logprob: -7.6961164474487305
    4. ' ,' → logprob: -8.82111644744873
    5. 't' → logprob: -9.07111644744873
    6. ',v' → logprob: -9.57111644744873
    7. ',n' → logprob: -9.82111644744873
    8. ',u' → logprob: -9.94611644744873
    9. ',d' → logprob: -10.44611644744873
    10. '),' → logprob: -10.57111644744873

Token 292: ',w' (ID: 49598)
  Prédit: ',w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',w' → logprob: -0.09016259014606476
    2. ',' → logprob: -2.465162515640259
    3. '),' → logprob: -7.090162754058838
    4. ')' → logprob: -9.46516227722168
    5. ' ,' → logprob: -9.71516227722168
    6. ',f' → logprob: -9.96516227722168
    7. 'w' → logprob: -10.21516227722168
    8. ',
' → logprob: -10.46516227722168
    9. ',v' → logprob: -10.59016227722168
    10. ',n' → logprob: -10.71516227722168

Token 293: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.09057741612195969
    2. ')' → logprob: -2.9655773639678955
    3. '):' → logprob: -3.9655773639678955
    4. ',' → logprob: -4.840577602386475
    5. '):
' → logprob: -4.965577602386475
    6. '):

' → logprob: -7.090577602386475
    7. '),
' → logprob: -8.715577125549316
    8. ' ),' → logprob: -9.590577125549316
    9. ',)' → logprob: -10.590577125549316
    10. ',),' → logprob: -10.590577125549316

Token 294: ' two' (ID: 1920)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.15950898826122284
    2. ' if' → logprob: -2.9095089435577393
    3. ' #' → logprob: -3.2845089435577393
    4. ' pass' → logprob: -4.159509181976318
    5. ' for' → logprob: -4.409509181976318
    6. 'pass' → logprob: -4.909509181976318
    7. 'if' → logprob: -5.159509181976318
    8. '           ' → logprob: -5.909509181976318
    9. '       ' → logprob: -5.909509181976318
    10. 'for' → logprob: -6.034509181976318

Token 295: ' options' (ID: 3880)
  Prédit: ' options'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' options' → logprob: -0.4614177942276001
    2. 'options' → logprob: -1.9614177942276
    3. ' lines' → logprob: -2.4614176750183105
    4. ' possibilities' → logprob: -3.2114176750183105
    5. ' states' → logprob: -3.5864176750183105
    6. 'poss' → logprob: -4.2114176750183105
    7. 'states' → logprob: -4.4614176750183105
    8. 'lines' → logprob: -4.5864176750183105
    9. '
' → logprob: -4.8364176750183105
    10. ' choices' → logprob: -5.5864176750183105

Token 296: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0051436275243759155
    2. ':
' → logprob: -5.630143642425537
    3. '#' → logprob: -7.380143642425537
    4. '<|end|>' → logprob: -8.505143165588379
    5. '
' → logprob: -8.630143165588379
    6. ' are' → logprob: -9.380143165588379
    7. ',' → logprob: -9.505143165588379
    8. ' for' → logprob: -9.630143165588379
    9. ':

' → logprob: -9.755143165588379
    10. 'for' → logprob: -10.130143165588379

Token 297: '       ' (ID: 309)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6386013627052307
    2. '           ' → logprob: -1.263601303100586
    3. ' #' → logprob: -1.763601303100586
    4. '       ' → logprob: -5.013601303100586
    5. '1' → logprob: -5.513601303100586
    6. ':' → logprob: -6.263601303100586
    7. '               ' → logprob: -6.513601303100586
    8. ' ' → logprob: -6.638601303100586
    9. ' (' → logprob: -7.763601303100586
    10. '            ' → logprob: -7.763601303100586

Token 298: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6565580368041992
    2. '#' (adapté à ' #') → logprob: -2.281558036804199
    3. ' #' → logprob: -2.281558036804199
    4. '1' → logprob: -2.406558036804199
    5. ' ' → logprob: -3.281558036804199
    6. ':' → logprob: -3.531558036804199
    7. ' continue' → logprob: -3.906558036804199
    8. '               ' → logprob: -3.906558036804199
    9. '            ' → logprob: -4.156558036804199
    10. '       ' → logprob: -4.281558036804199

Token 299: ' ' (ID: 220)
  Prédit: ' keep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' keep' → logprob: -0.8666195869445801
    2. 'keep' → logprob: -1.11661958694458
    3. ' leave' → logprob: -2.49161958694458
    4. ' use' → logprob: -2.61661958694458
    5. 'leave' → logprob: -3.36661958694458
    6. '#' → logprob: -4.11661958694458
    7. 'use' → logprob: -4.61661958694458
    8. '1' → logprob: -4.86661958694458
    9. ' Keep' → logprob: -5.61661958694458
    10. ' #' → logprob: -5.61661958694458

Token 300: '1' (ID: 16)
  Prédit: 'keep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'keep' → logprob: -0.7384482622146606
    2. ' keep' → logprob: -1.6134482622146606
    3. '#' → logprob: -2.113448143005371
    4. ' use' → logprob: -2.863448143005371
    5. 'use' → logprob: -3.613448143005371
    6. 'leave' → logprob: -3.738448143005371
    7. ' leave' → logprob: -4.113448143005371
    8. ' #' → logprob: -4.738448143005371
    9. 'w' → logprob: -5.113448143005371
    10. 'if' → logprob: -5.238448143005371

Token 301: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5562635660171509
    2. '.' → logprob: -1.3062635660171509
    3. ':' → logprob: -1.9312635660171509
    4. ' Keep' → logprob: -5.556263446807861
    5. ' keep' → logprob: -6.306263446807861
    6. 'Keep' → logprob: -6.681263446807861
    7. ',' → logprob: -6.931263446807861
    8. '           ' → logprob: -7.306263446807861
    9. '#' → logprob: -7.806263446807861
    10. 'keep' → logprob: -8.05626392364502

Token 302: ' do' (ID: 621)
  Prédit: 'keep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'keep' → logprob: -1.09419584274292
    2. ' keep' → logprob: -1.71919584274292
    3. ' use' → logprob: -1.84419584274292
    4. 'Keep' → logprob: -2.46919584274292
    5. ' Keep' → logprob: -2.71919584274292
    6. 'use' → logprob: -2.84419584274292
    7. ' leave' → logprob: -3.84419584274292
    8. ' not' → logprob: -3.84419584274292
    9. 'Use' → logprob: -3.84419584274292
    10. 'leave' → logprob: -4.46919584274292

Token 303: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.14857164025306702
    2. ' nothing' → logprob: -2.648571729660034
    3. 'not' → logprob: -3.398571729660034
    4. 'n't' → logprob: -3.898571729660034
    5. ' no' → logprob: -4.773571491241455
    6. ' ' → logprob: -6.273571491241455
    7. 'n' → logprob: -6.648571491241455
    8. 'nothing' → logprob: -7.398571491241455
    9. 'nt' → logprob: -8.523571968078613
    10. '_not' → logprob: -9.148571968078613

Token 304: ' change' (ID: 3343)
  Prédit: ' change'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' change' → logprob: -0.07005025446414948
    2. 'change' → logprob: -2.6950502395629883
    3. '_change' → logprob: -10.445050239562988
    4. ' ' → logprob: -10.820050239562988
    5. ' decrease' → logprob: -11.320050239562988
    6. ' modify' → logprob: -11.320050239562988
    7. ' reduce' → logprob: -11.570050239562988
    8. 'modify' → logprob: -11.695050239562988
    9. '	change' → logprob: -12.445050239562988
    10. '-' → logprob: -12.445050239562988

Token 305: ':' (ID: 25)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7580165863037109
    2. ':' → logprob: -1.883016586303711
    3. ',' → logprob: -2.133016586303711
    4. '<|end|>' → logprob: -2.133016586303711
    5. '       ' → logprob: -3.633016586303711
    6. ' edges' → logprob: -3.883016586303711
    7. '           ' → logprob: -4.008016586303711
    8. ' or' → logprob: -4.008016586303711
    9. '
' → logprob: -4.258016586303711
    10. '<|end|>' → logprob: -4.633016586303711

Token 306: ' cost' (ID: 3097)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.23227593302726746
    2. 'pass' → logprob: -2.73227596282959
    3. ' continue' → logprob: -2.85727596282959
    4. 'continue' → logprob: -3.48227596282959
    5. ' if' → logprob: -4.35727596282959
    6. 'dist' → logprob: -4.85727596282959
    7. '           ' → logprob: -4.98227596282959
    8. ' for' → logprob: -5.48227596282959
    9. 'if' → logprob: -5.73227596282959
    10. ' w' → logprob: -5.98227596282959

Token 307: ' w' (ID: 286)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.32140833139419556
    2. ' =' → logprob: -1.3214082717895508
    3. ' ' → logprob: -5.446408271789551
    4. '0' → logprob: -5.696408271789551
    5. ',' → logprob: -8.19640827178955
    6. ' ==' → logprob: -10.19640827178955
    7. ':' → logprob: -10.32140827178955
    8. ')' → logprob: -10.44640827178955
    9. ' ,' → logprob: -10.82140827178955
    10. '==' → logprob: -10.94640827178955

Token 308: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5996830463409424
    2. ')' → logprob: -1.3496830463409424
    3. '
' → logprob: -3.3496830463409424
    4. ',w' → logprob: -3.4746830463409424
    5. ')
' → logprob: -3.5996830463409424
    6. '+' → logprob: -3.9746830463409424
    7. ' ,' → logprob: -4.599682807922363
    8. '),' → logprob: -4.599682807922363
    9. ',
' → logprob: -4.599682807922363
    10. '<|end|>' → logprob: -4.849682807922363

Token 309: ' changes' (ID: 6629)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1757564544677734
    2. ' ' → logprob: -1.1757564544677734
    3. ' or' → logprob: -2.5507564544677734
    4. ' #' → logprob: -2.5507564544677734
    5. '<|end|>' → logprob: -2.8007564544677734
    6. ' 
' → logprob: -3.3007564544677734
    7. ' w' → logprob: -3.5507564544677734
    8. 'w' → logprob: -3.9257564544677734
    9. '<|end|>' → logprob: -4.925756454467773
    10. '       ' → logprob: -4.925756454467773

Token 310: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6362775564193726
    2. ' =' → logprob: -0.7612775564193726
    3. ')' → logprob: -6.761277675628662
    4. '+' → logprob: -7.886277675628662
    5. ' +' → logprob: -8.011277198791504
    6. ',' → logprob: -8.011277198791504
    7. ':' → logprob: -8.261277198791504
    8. ' +=' → logprob: -8.261277198791504
    9. ' ' → logprob: -8.511277198791504
    10. '<|end|>' → logprob: -8.761277198791504

Token 311: '0' (ID: 15)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.010661864653229713
    2. ' =' → logprob: -4.760662078857422
    3. '0' → logprob: -6.510662078857422
    4. ' ' → logprob: -9.260662078857422
    5. '=[]' → logprob: -9.510662078857422
    6. ')' → logprob: -10.010662078857422
    7. ',' → logprob: -10.010662078857422
    8. '+' → logprob: -10.260662078857422
    9. '+=' → logprob: -10.385662078857422
    10. '=None' → logprob: -10.760662078857422

Token 312: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0145859718322754
    2. '<|end|>' → logprob: -1.0145859718322754
    3. '#' → logprob: -2.1395859718322754
    4. ',' → logprob: -2.8895859718322754
    5. '
' → logprob: -3.0145859718322754
    6. '           ' → logprob: -4.639585971832275
    7. ')' → logprob: -4.764585971832275
    8. ',
' → logprob: -4.889585971832275
    9. '<|end|>' → logprob: -5.139585971832275
    10. '   ' → logprob: -5.264585971832275

Token 313: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18621264398097992
    2. ',' → logprob: -3.3112125396728516
    3. '2' → logprob: -3.3112125396728516
    4. ' ' → logprob: -3.5612125396728516
    5. '<|end|>' → logprob: -4.061212539672852
    6. ')' → logprob: -4.436212539672852
    7. '   ' → logprob: -4.686212539672852
    8. '#' → logprob: -4.811212539672852
    9. '           ' → logprob: -5.061212539672852
    10. '
' → logprob: -5.186212539672852

Token 314: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09301065653562546
    2. '#' (adapté à ' #') → logprob: -2.968010663986206
    3. '<|end|>' → logprob: -3.718010663986206
    4. '           ' → logprob: -5.593010425567627
    5. ',' → logprob: -5.843010425567627
    6. '   ' → logprob: -6.218010425567627
    7. ' ' → logprob: -6.593010425567627
    8. ')' → logprob: -6.968010425567627
    9. ' #' → logprob: -7.343010425567627
    10. '<|end|>' → logprob: -7.843010425567627

Token 315: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3593662679195404
    2. '       ' → logprob: -2.1093661785125732
    3. '2' → logprob: -2.3593661785125732
    4. '#' → logprob: -2.6093661785125732
    5. ' #' → logprob: -4.984366416931152
    6. '           ' → logprob: -5.734366416931152
    7. '   ' → logprob: -6.359366416931152
    8. '0' → logprob: -9.359366416931152
    9. ')' → logprob: -9.359366416931152
    10. '  ' → logprob: -9.484366416931152

Token 316: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.19766919314861298
    2. ' ' → logprob: -1.9476691484451294
    3. ')' → logprob: -4.19766902923584
    4. '#' → logprob: -5.57266902923584
    5. '0' → logprob: -5.69766902923584
    6. ' #' → logprob: -5.82266902923584
    7. '   ' → logprob: -6.07266902923584
    8. '1' → logprob: -6.32266902923584
    9. '       ' → logprob: -6.44766902923584
    10. ' )' → logprob: -6.69766902923584

Token 317: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.166338137816638e-05
    2. ' )' → logprob: -10.375031471252441
    3. ':' → logprob: -16.000032424926758
    4. ')add' → logprob: -16.625032424926758
    5. '   ' → logprob: -17.125032424926758
    6. ' ' → logprob: -17.250032424926758
    7. ')set' → logprob: -17.625032424926758
    8. ')
' → logprob: -17.750032424926758
    9. ')#' → logprob: -17.750032424926758
    10. '#' → logprob: -18.000032424926758

Token 318: ' if' (ID: 538)
  Prédit: ' change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' change' → logprob: -0.37439465522766113
    2. 'change' → logprob: -1.3743946552276611
    3. ' do' → logprob: -3.749394655227661
    4. ' reduce' → logprob: -4.499394416809082
    5. 'do' → logprob: -4.624394416809082
    6. ' set' → logprob: -4.749394416809082
    7. 'reduce' → logprob: -6.124394416809082
    8. 'set' → logprob: -6.624394416809082
    9. ' decrease' → logprob: -7.374394416809082
    10. ' keep' → logprob: -8.374394416809082

Token 319: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.33797886967658997
    2. ' w' → logprob: -1.3379788398742676
    3. ' c' → logprob: -4.837978839874268
    4. 'c' → logprob: -5.212978839874268
    5. ' changed' → logprob: -6.212978839874268
    6. 'dist' → logprob: -6.462978839874268
    7. ' original' → logprob: -6.587978839874268
    8. 'original' → logprob: -6.837978839874268
    9. ' dist' → logprob: -7.087978839874268
    10. 'changed' → logprob: -7.337978839874268

Token 320: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.163485586643219
    2. '>' → logprob: -1.9134855270385742
    3. ' <' → logprob: -6.163485527038574
    4. ' ==' → logprob: -8.538485527038574
    5. '==' → logprob: -8.663485527038574
    6. '<' → logprob: -8.913485527038574
    7. 'w' → logprob: -8.913485527038574
    8. ' >=' → logprob: -9.163485527038574
    9. '=' → logprob: -9.538485527038574
    10. '>w' → logprob: -9.663485527038574

Token 321: ' new' (ID: 620)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.21574647724628448
    2. ' c' → logprob: -1.965746521949768
    3. '0' → logprob: -2.9657464027404785
    4. ' ' → logprob: -6.3407464027404785
    5. '1' → logprob: -7.4657464027404785
    6. 'original' → logprob: -10.215746879577637
    7. ' original' → logprob: -10.778246879577637
    8. '   ' → logprob: -11.278246879577637
    9. '>' → logprob: -11.340746879577637
    10. '=c' → logprob: -11.653246879577637

Token 322: '_w' (ID: 3567)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8563023805618286
    2. ' c' → logprob: -1.7313023805618286
    3. '=' → logprob: -2.106302261352539
    4. ' ' → logprob: -2.981302261352539
    5. ' =' → logprob: -3.106302261352539
    6. '0' → logprob: -3.231302261352539
    7. 'w' → logprob: -3.481302261352539
    8. '<|end|>' → logprob: -3.606302261352539
    9. ' w' → logprob: -4.106302261352539
    10. '=c' → logprob: -4.231302261352539

Token 323: ' >=' (ID: 5064)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0751621425151825
    2. '=' → logprob: -3.450162172317505
    3. ',' → logprob: -4.075161933898926
    4. ' :' → logprob: -4.575161933898926
    5. ' =' → logprob: -4.825161933898926
    6. ' and' → logprob: -6.200161933898926
    7. '<|end|>' → logprob: -7.450161933898926
    8. ' ' → logprob: -7.575161933898926
    9. ' ,' → logprob: -7.575161933898926
    10. ':
' → logprob: -7.950161933898926

Token 324: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0035434053279459476
    2. 'c' → logprob: -6.003543376922607
    3. ' ' → logprob: -7.003543376922607
    4. 'w' → logprob: -9.503543853759766
    5. ' c' → logprob: -9.878543853759766
    6. '1' → logprob: -11.378543853759766
    7. 'max' → logprob: -12.003543853759766
    8. ' w' → logprob: -13.316043853759766
    9. '(' → logprob: -13.441043853759766
    10. ' (' → logprob: -13.441043853759766

Token 325: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.028027649968862534
    2. ',' → logprob: -4.153027534484863
    3. ':
' → logprob: -5.778027534484863
    4. ' :' → logprob: -6.028027534484863
    5. '<|end|>' → logprob: -6.028027534484863
    6. ' and' → logprob: -6.153027534484863
    7. '   ' → logprob: -7.903027534484863
    8. '           ' → logprob: -8.278027534484863
    9. '<|end|>' → logprob: -8.528027534484863
    10. '       ' → logprob: -8.528027534484863

Token 326: ' and' (ID: 326)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 327: ' we' (ID: 581)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.5917864441871643
    2. ' new' → logprob: -1.4667863845825195
    3. 'w' → logprob: -1.8417863845825195
    4. ' w' → logprob: -3.7167863845825195
    5. ' original' → logprob: -5.0917863845825195
    6. 'original' → logprob: -5.2167863845825195
    7. 'c' → logprob: -5.7167863845825195
    8. ' c' → logprob: -6.0917863845825195
    9. 'cd' → logprob: -6.3417863845825195
    10. '(new' → logprob: -6.3417863845825195

Token 328: ' want' (ID: 1682)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.6191424131393433
    2. 'can' → logprob: -1.3691424131393433
    3. ' want' → logprob: -2.119142532348633
    4. ' set' → logprob: -3.369142532348633
    5. 'want' → logprob: -3.494142532348633
    6. ' have' → logprob: -5.869142532348633
    7. 'adjust' → logprob: -5.869142532348633
    8. 'set' → logprob: -5.994142532348633
    9. ' adjust' → logprob: -5.994142532348633
    10. 'have' → logprob: -6.244142532348633

Token 329: ' total' (ID: 3609)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.10951889306306839
    2. 'to' → logprob: -2.6095190048217773
    3. ' new' → logprob: -4.484519004821777
    4. ' nd' → logprob: -5.234519004821777
    5. ' the' → logprob: -5.734519004821777
    6. 'dist' → logprob: -6.109519004821777
    7. ' dist' → logprob: -6.234519004821777
    8. 'new' → logprob: -6.734519004821777
    9. 'the' → logprob: -6.859519004821777
    10. ' next' → logprob: -7.484519004821777

Token 330: ' path' (ID: 3104)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.9111087322235107
    2. 'cost' → logprob: -1.5361087322235107
    3. ' changes' → logprob: -1.9111087322235107
    4. 'changes' → logprob: -2.4111087322235107
    5. 'dist' → logprob: -3.5361087322235107
    6. 'weight' → logprob: -3.6611087322235107
    7. 'distance' → logprob: -4.03610897064209
    8. '_cost' → logprob: -4.28610897064209
    9. ' weight' → logprob: -4.28610897064209
    10. 'change' → logprob: -4.53610897064209

Token 331: ' cost' (ID: 3097)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.15780848264694214
    2. ' length' → logprob: -2.782808542251587
    3. '_length' → logprob: -3.282808542251587
    4. 'cost' → logprob: -4.282808303833008
    5. '<|end|>' → logprob: -5.032808303833008
    6. 's' → logprob: -5.157808303833008
    7. '_cost' → logprob: -5.282808303833008
    8. ' cost' → logprob: -5.532808303833008
    9. 'weight' → logprob: -6.407808303833008
    10. ')' → logprob: -6.782808303833008

Token 332: ' c' (ID: 274)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.4407280683517456
    2. ')' → logprob: -1.6907280683517456
    3. ' =' → logprob: -2.440728187561035
    4. ' <=' → logprob: -2.440728187561035
    5. ',' → logprob: -2.565728187561035
    6. '=' → logprob: -2.690728187561035
    7. ' >=' → logprob: -3.315728187561035
    8. '   ' → logprob: -4.065728187561035
    9. '...' → logprob: -4.065728187561035
    10. '<=' → logprob: -4.190728187561035

Token 333: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 334: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3034488260746002
    2. '<|end|>' → logprob: -1.8034487962722778
    3. '           ' → logprob: -3.3034489154815674
    4. '#' → logprob: -3.9284489154815674
    5. '<|end|>' → logprob: -4.678448677062988
    6. '        ' → logprob: -4.928448677062988
    7. ' ' → logprob: -5.303448677062988
    8. ' #' → logprob: -5.553448677062988
    9. '               ' → logprob: -6.303448677062988
    10. '   ' → logprob: -6.303448677062988

Token 335: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.24095933139324188
    2. ' need' → logprob: -2.240959405899048
    3. ' want' → logprob: -2.990959405899048
    4. 'can' → logprob: -4.240959167480469
    5. ' continue' → logprob: -4.740959167480469
    6. ' must' → logprob: -4.740959167480469
    7. 'need' → logprob: -5.490959167480469
    8. 'continue' → logprob: -5.990959167480469
    9. ' may' → logprob: -6.115959167480469
    10. ' might' → logprob: -6.115959167480469

Token 336: ' reduce' (ID: 10389)
  Prédit: ' try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' try' → logprob: -0.7235552668571472
    2. ' adjust' → logprob: -1.473555326461792
    3. ' reduce' → logprob: -2.723555326461792
    4. ' set' → logprob: -2.848555326461792
    5. 'adjust' → logprob: -3.098555326461792
    6. ' decrease' → logprob: -3.348555326461792
    7. 'reduce' → logprob: -3.723555326461792
    8. ' change' → logprob: -3.973555326461792
    9. 'try' → logprob: -4.223555088043213
    10. 'change' → logprob: -5.473555088043213

Token 337: ' some' (ID: 1236)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7569345831871033
    2. 'w' → logprob: -1.131934642791748
    3. 'the' → logprob: -2.506934642791748
    4. ' w' → logprob: -2.631934642791748
    5. '<|end|>' → logprob: -4.006934642791748
    6. '<|end|>' → logprob: -5.131934642791748
    7. '...' → logprob: -5.506934642791748
    8. ' _' → logprob: -5.881934642791748
    9. ' edges' → logprob: -6.006934642791748
    10. '_' → logprob: -6.006934642791748

Token 338: ' edges' (ID: 22569)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -1.0253194570541382
    2. 'w' → logprob: -1.2753194570541382
    3. 'edges' → logprob: -1.7753194570541382
    4. ' edges' → logprob: -2.4003195762634277
    5. 'weights' → logprob: -3.5253195762634277
    6. 'distance' → logprob: -4.275319576263428
    7. 'amount' → logprob: -4.400319576263428
    8. '<|end|>' → logprob: -4.400319576263428
    9. 'edge' → logprob: -5.275319576263428
    10. ' weight' → logprob: -5.525319576263428

Token 339: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 340: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14538289606571198
    2. '<|end|>' → logprob: -2.145382881164551
    3. ',' → logprob: -5.020382881164551
    4. '<|end|>' → logprob: -5.270382881164551
    5. ')' → logprob: -7.020382881164551
    6. '#' → logprob: -7.020382881164551
    7. '   ' → logprob: -7.270382881164551
    8. '
' → logprob: -7.270382881164551
    9. '...' → logprob: -7.645382881164551
    10. '        
' → logprob: -7.895382881164551

Token 341: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10885430872440338
    2. '<|end|>' → logprob: -2.358854293823242
    3. '<|end|>' → logprob: -5.858854293823242
    4. '        
' → logprob: -6.608854293823242
    5. '   ' → logprob: -7.108854293823242
    6. '
' → logprob: -7.358854293823242
    7. '        ' → logprob: -7.608854293823242
    8. ' ' → logprob: -7.983854293823242
    9. ',' → logprob: -7.983854293823242
    10. '#' (adapté à ' #') → logprob: -8.108854293823242

Token 342: ' Idea' (ID: 74190)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11405621469020844
    2. '#' → logprob: -2.86405611038208
    3. '
' → logprob: -4.61405611038208
    4. '   ' → logprob: -4.73905611038208
    5. ' #' → logprob: -4.98905611038208
    6. '        
' → logprob: -5.73905611038208
    7. '...' → logprob: -5.73905611038208
    8. '<|end|>' → logprob: -5.73905611038208
    9. ' for' → logprob: -5.86405611038208
    10. ' 
' → logprob: -6.73905611038208

Token 343: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1166960597038269
    2. ' =' → logprob: -2.7416961193084717
    3. '   ' → logprob: -3.6166961193084717
    4. ' :' → logprob: -4.866695880889893
    5. '=' → logprob: -5.366695880889893
    6. ':
' → logprob: -6.616695880889893
    7. '       ' → logprob: -6.616695880889893
    8. '    ' → logprob: -6.741695880889893
    9. ' for' → logprob: -8.11669635772705
    10. ',' → logprob: -8.11669635772705

Token 344: ' D' (ID: 415)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.065741777420044
    2. ' from' → logprob: -1.565741777420044
    3. ' #' → logprob: -1.690741777420044
    4. '#' → logprob: -2.190741777420044
    5. 'import' → logprob: -3.065741777420044
    6. 'dist' → logprob: -3.565741777420044
    7. ' dist' → logprob: -3.940741777420044
    8. ' import' → logprob: -4.565741539001465
    9. ' for' → logprob: -4.690741539001465
    10. 'pass' → logprob: -5.190741539001465

Token 345: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.11581840366125107
    2. 'ist' → logprob: -2.865818500518799
    3. 'ijk' → logprob: -3.740818500518799
    4. 'i' → logprob: -4.865818500518799
    5. 'ij' → logprob: -4.865818500518799
    6. '   ' → logprob: -5.115818500518799
    7. 'istance' → logprob: -6.865818500518799
    8. 'e' → logprob: -6.990818500518799
    9. 'is' → logprob: -7.115818500518799
    10. '=' → logprob: -7.928318500518799

Token 346: ' on' (ID: 402)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 347: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7784217596054077
    2. '(adj' → logprob: -1.4034217596054077
    3. '(n' → logprob: -2.7784218788146973
    4. 'adj' → logprob: -3.4034218788146973
    5. ' a' → logprob: -3.6534218788146973
    6. 'the' → logprob: -3.9034218788146973
    7. '(cost' → logprob: -3.9034218788146973
    8. '(dist' → logprob: -4.028421878814697
    9. 'dist' → logprob: -4.153421878814697
    10. 'states' → logprob: -4.278421878814697

Token 348: 'node' (ID: 7005)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.011334776878357
    2. 'node' → logprob: -1.511334776878357
    3. 'u' → logprob: -2.1363348960876465
    4. 'n' → logprob: -2.2613348960876465
    5. 'dist' → logprob: -3.6363348960876465
    6. 'state' → logprob: -3.8863348960876465
    7. '(n' → logprob: -4.0113348960876465
    8. 'nodes' → logprob: -4.1363348960876465
    9. 'adj' → logprob: -4.2613348960876465
    10. 'c' → logprob: -4.2613348960876465

Token 349: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07881080359220505
    2. ' ,' → logprob: -3.578810691833496
    3. ',state' → logprob: -3.703810691833496
    4. ',u' → logprob: -4.328810691833496
    5. ',n' → logprob: -6.078810691833496
    6. ',index' → logprob: -6.578810691833496
    7. ',node' → logprob: -6.578810691833496
    8. ',c' → logprob: -6.703810691833496
    9. ',v' → logprob: -7.578810691833496
    10. ')' → logprob: -7.703810691833496

Token 350: ' change' (ID: 3343)
  Prédit: 'changes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'changes' → logprob: -0.06820888072252274
    2. ' changes' → logprob: -3.693208932876587
    3. 'changed' → logprob: -3.818208932876587
    4. 'change' → logprob: -4.818208694458008
    5. 'cost' → logprob: -5.193208694458008
    6. 'used' → logprob: -6.318208694458008
    7. ' changed' → logprob: -7.068208694458008
    8. ' cost' → logprob: -7.693208694458008
    9. 'remaining' → logprob: -8.193208694458008
    10. 'distance' → logprob: -8.443208694458008

Token 351: '_count' (ID: 7536)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0064027309417725
    2. '_count' → logprob: -1.0064027309417725
    3. ')' → logprob: -1.7564027309417725
    4. ',' → logprob: -3.2564027309417725
    5. '_cost' → logprob: -3.6314027309417725
    6. '_state' → logprob: -5.381402969360352
    7. ')s' → logprob: -5.381402969360352
    8. 'count' → logprob: -5.881402969360352
    9. ' )' → logprob: -6.006402969360352
    10. ')_' → logprob: -6.006402969360352

Token 352: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012574518099427223
    2. ',' → logprob: -4.512574672698975
    3. 's' → logprob: -7.137574672698975
    4. '_count' → logprob: -8.762574195861816
    5. ')_' → logprob: -9.012574195861816
    6. ',)' → logprob: -9.012574195861816
    7. '),' → logprob: -9.512574195861816
    8. ' )' → logprob: -9.637574195861816
    9. '_' → logprob: -9.762574195861816
    10. '[' → logprob: -10.637574195861816

Token 353: ' store' (ID: 4897)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -1.1216845512390137
    2. ' ' → logprob: -1.2466845512390137
    3. ')' → logprob: -2.2466845512390137
    4. '<|end|>' → logprob: -2.7466845512390137
    5. ' )' → logprob: -2.9966845512390137
    6. '   ' → logprob: -3.2466845512390137
    7. ' 
' → logprob: -3.7466845512390137
    8. ' ,' → logprob: -4.246684551239014
    9. ' n' → logprob: -4.496684551239014
    10. ',' → logprob: -4.621684551239014

Token 354: ' minimal' (ID: 19957)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.1642379760742188
    2. ')' → logprob: -1.7892379760742188
    3. ' distances' → logprob: -1.7892379760742188
    4. 'distance' → logprob: -2.5392379760742188
    5. 'd' → logprob: -2.7892379760742188
    6. ' (' → logprob: -3.1642379760742188
    7. ' dist' → logprob: -3.1642379760742188
    8. '[' → logprob: -3.7892379760742188
    9. ']' → logprob: -4.164237976074219
    10. ' )' → logprob: -4.539237976074219

Token 355: ' distance' (ID: 9324)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5395281910896301
    2. 'distance' → logprob: -1.2895281314849854
    3. ' distance' → logprob: -2.5395281314849854
    4. ' distances' → logprob: -3.5395281314849854
    5. '_distance' → logprob: -4.9145283699035645
    6. ' dist' → logprob: -4.9145283699035645
    7. 'cost' → logprob: -5.2895283699035645
    8. '_dist' → logprob: -5.4145283699035645
    9. 'import' → logprob: -5.7895283699035645
    10. '<|end|>' → logprob: -6.6645283699035645

Token 356: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5667216777801514
    2. '
' → logprob: -1.5667216777801514
    3. '       ' → logprob: -2.0667216777801514
    4. ',' → logprob: -3.4417216777801514
    5. ')' → logprob: -3.9417216777801514
    6. '<|end|>' → logprob: -4.1917219161987305
    7. '    ' → logprob: -4.8167219161987305
    8. 'import' → logprob: -5.3167219161987305
    9. '_' → logprob: -6.0667219161987305
    10. '        
' → logprob: -6.4417219161987305

Token 357: ' given' (ID: 4335)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.5662723183631897
    2. ' change' → logprob: -1.316272258758545
    3. 'changes' → logprob: -3.066272258758545
    4. ' changes' → logprob: -3.316272258758545
    5. 'exact' → logprob: -4.316272258758545
    6. 'changed' → logprob: -4.816272258758545
    7. ' at' → logprob: -4.941272258758545
    8. ' up' → logprob: -5.316272258758545
    9. ' changed' → logprob: -5.441272258758545
    10. ' cost' → logprob: -5.441272258758545

Token 358: ' changed' (ID: 9180)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'change' → logprob: -1.0374484062194824
    2. ' change' → logprob: -1.1624484062194824
    3. ' changes' → logprob: -1.6624484062194824
    4. 'changes' → logprob: -2.1624484062194824
    5. '_change' → logprob: -4.662448406219482
    6. '_changes' → logprob: -5.662448406219482
    7. '_' → logprob: -5.787448406219482
    8. ' number' → logprob: -6.037448406219482
    9. 'count' → logprob: -6.412448406219482
    10. 'distance' → logprob: -6.787448406219482

Token 359: ' edges' (ID: 22569)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.14799803495407104
    2. '_edges' → logprob: -3.022998094558716
    3. 's' → logprob: -3.147998094558716
    4. ')' → logprob: -3.897998094558716
    5. '_nodes' → logprob: -5.397997856140137
    6. '_cost' → logprob: -5.772997856140137
    7. '_counts' → logprob: -5.772997856140137
    8. '_' → logprob: -6.022997856140137
    9. ' =' → logprob: -6.397997856140137
    10. '_token' → logprob: -6.647997856140137

Token 360: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29454120993614197
    2. '   ' → logprob: -2.169541120529175
    3. '       ' → logprob: -2.294541120529175
    4. '<|end|>' → logprob: -3.544541120529175
    5. ')' → logprob: -5.919541358947754
    6. ',' → logprob: -6.419541358947754
    7. '<|end|>' → logprob: -6.794541358947754
    8. '        
' → logprob: -6.919541358947754
    9. '```' → logprob: -7.169541358947754
    10. ')
' → logprob: -7.294541358947754

Token 361: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10005179047584534
    2. '
' → logprob: -3.2250518798828125
    3. '   ' → logprob: -3.2250518798828125
    4. '<|end|>' → logprob: -4.8500518798828125
    5. '        
' → logprob: -6.2250518798828125
    6. ':' → logprob: -6.3500518798828125
    7. ',' → logprob: -6.7250518798828125
    8. ')' → logprob: -7.6000518798828125
    9. '<|end|>' → logprob: -7.9750518798828125
    10. 'import' → logprob: -8.225051879882812

Token 362: ' max' (ID: 2999)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1027592271566391
    2. '       ' → logprob: -3.2277591228485107
    3. ' from' → logprob: -3.9777591228485107
    4. 'from' → logprob: -4.10275936126709
    5. 'import' → logprob: -4.60275936126709
    6. ' dist' → logprob: -5.72775936126709
    7. '    ' → logprob: -6.10275936126709
    8. 'dist' → logprob: -6.47775936126709
    9. ' dp' → logprob: -6.60275936126709
    10. '
' → logprob: -6.85275936126709

Token 363: '_changes' (ID: 119201)
  Prédit: '_changes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_changes' → logprob: -0.02679099515080452
    2. '_change' → logprob: -3.6517910957336426
    3. 'changes' → logprob: -8.526790618896484
    4. '_dist' → logprob: -9.026790618896484
    5. '_changed' → logprob: -9.651790618896484
    6. '_cost' → logprob: -10.776790618896484
    7. '_ch' → logprob: -11.026790618896484
    8. '_distance' → logprob: -11.026790618896484
    9. '_c' → logprob: -11.151790618896484
    10. 'change' → logprob: -11.276790618896484

Token 364: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693072855472565
    2. '=' → logprob: -2.1269307136535645
    3. ',' → logprob: -13.626931190490723
    4. '=int' → logprob: -14.751931190490723
    5. '=max' → logprob: -15.126931190490723
    6. '=n' → logprob: -15.376931190490723
    7. ')' → logprob: -15.501931190490723
    8. '   ' → logprob: -15.751931190490723
    9. '=len' → logprob: -15.876931190490723
    10. ' ' → logprob: -16.626930236816406

Token 365: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.05764232948422432
    2. ' m' → logprob: -3.0576422214508057
    3. 'n' → logprob: -5.057642459869385
    4. ' n' → logprob: -6.182642459869385
    5. '20' → logprob: -8.682641983032227
    6. '100' → logprob: -8.807641983032227
    7. ' ' → logprob: -9.307641983032227
    8. 'len' → logprob: -9.807641983032227
    9. '10' → logprob: -10.307641983032227
    10. '   ' → logprob: -10.682641983032227

Token 366: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.37876513600349426
    2. '
' → logprob: -1.6287651062011719
    3. ' +' → logprob: -2.128765106201172
    4. '<|end|>' → logprob: -10.378765106201172
    5. ' 
' → logprob: -10.878765106201172
    6. '    
' → logprob: -11.128765106201172
    7. '
' → logprob: -11.253765106201172
    8. '   ' → logprob: -11.378765106201172
    9. '  
' → logprob: -11.628765106201172
    10. '+
' → logprob: -11.753765106201172

Token 367: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01285711582750082
    2. '
' → logprob: -5.137856960296631
    3. 'dist' → logprob: -5.887856960296631
    4. 'dp' → logprob: -7.012856960296631
    5. 'import' → logprob: -7.137856960296631
    6. ' dp' → logprob: -7.262856960296631
    7. ' dist' → logprob: -7.637856960296631
    8. 'from' → logprob: -8.137857437133789
    9. '    
' → logprob: -8.262857437133789
    10. '       ' → logprob: -8.762857437133789

Token 368: ' dist' (ID: 3601)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39864370226860046
    2. 'dp' → logprob: -2.273643732070923
    3. 'INF' → logprob: -2.773643732070923
    4. 'dist' (adapté à ' dist') → logprob: -3.148643732070923
    5. 'import' → logprob: -3.523643732070923
    6. ' INF' → logprob: -3.648643732070923
    7. ' dp' → logprob: -3.898643732070923
    8. 'from' → logprob: -4.398643493652344
    9. ' dist' → logprob: -4.398643493652344
    10. ' import' → logprob: -4.773643493652344

Token 369: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31583911180496216
    2. ' =' → logprob: -1.3158390522003174
    3. '=[' → logprob: -6.3158392906188965
    4. '=[[' → logprob: -7.9408392906188965
    5. '2' → logprob: -8.565838813781738
    6. 's' → logprob: -9.315838813781738
    7. ' =[' → logprob: -9.815838813781738
    8. '_' → logprob: -10.815838813781738
    9. '_=' → logprob: -11.440838813781738
    10. '=[]' → logprob: -11.940838813781738

Token 370: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3870040476322174
    2. '=' → logprob: -1.137004017829895
    3. '=[' → logprob: -9.387003898620605
    4. '=[[' → logprob: -10.762003898620605
    5. ',' → logprob: -11.637003898620605
    6. '[' → logprob: -11.762003898620605
    7. ' =[' → logprob: -12.262003898620605
    8. ' ' → logprob: -13.137003898620605
    9. '   ' → logprob: -13.262003898620605
    10. '=[]' → logprob: -14.137003898620605

Token 371: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.003155495971441269
    2. '[' → logprob: -6.003155708312988
    3. ' [[' → logprob: -7.503155708312988
    4. '[{' → logprob: -9.503155708312988
    5. '[(' → logprob: -10.253155708312988
    6. ' [' → logprob: -11.128155708312988
    7. '{' → logprob: -13.253155708312988
    8. ' [[[' → logprob: -14.128155708312988
    9. '[s' → logprob: -14.878155708312988
    10. ' [{}' → logprob: -15.878155708312988

Token 372: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -2.5776860184123507e-06
    2. ' float' → logprob: -13.00000286102295
    3. '(float' → logprob: -15.50000286102295
    4. 'sys' → logprob: -18.250001907348633
    5. '[' → logprob: -18.625001907348633
    6. '	float' → logprob: -20.500001907348633
    7. 'int' → logprob: -20.750001907348633
    8. '(' → logprob: -20.875001907348633
    9. '   ' → logprob: -21.125001907348633
    10. 'False' → logprob: -21.375001907348633

Token 373: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -4.008129963040119e-06
    2. ''in' → logprob: -12.625003814697266
    3. ''s' → logprob: -15.375003814697266
    4. ' ('' → logprob: -15.500003814697266
    5. 'inf' → logprob: -16.125003814697266
    6. ''' → logprob: -17.000003814697266
    7. '(' → logprob: -17.000003814697266
    8. '['' → logprob: -17.250003814697266
    9. '(in' → logprob: -17.375003814697266
    10. '("' → logprob: -17.500003814697266

Token 374: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -5.512236498361744e-07
    2. ''' → logprob: -14.625000953674316
    3. ' inf' → logprob: -17.375
    4. ''in' → logprob: -20.0
    5. ''s' → logprob: -20.375
    6. '('' → logprob: -20.75
    7. '')' → logprob: -20.875
    8. '"' → logprob: -21.5
    9. '.inf' → logprob: -21.75
    10. 'in' → logprob: -21.875

Token 375: '')]' (ID: 94377)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.695360004901886
    2. '')]' → logprob: -0.695360004901886
    3. ')' → logprob: -6.44536018371582
    4. '')' → logprob: -7.94536018371582
    5. ']' → logprob: -8.69536018371582
    6. '']' → logprob: -9.57036018371582
    7. '")]' → logprob: -11.44536018371582
    8. ''' → logprob: -11.94536018371582
    9. '('' → logprob: -12.44536018371582
    10. '']]' → logprob: -13.19536018371582

Token 376: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5021299719810486
    2. ']*(' → logprob: -1.0021300315856934
    3. ' for' → logprob: -4.252130031585693
    4. ']*' → logprob: -4.502130031585693
    5. 'for' → logprob: -6.252130031585693
    6. '*(' → logprob: -8.502129554748535
    7. ' ]' → logprob: -9.252129554748535
    8. ' *' → logprob: -9.752129554748535
    9. '   ' → logprob: -10.752129554748535
    10. '*' → logprob: -10.877129554748535

Token 377: ' (' (ID: 350)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.20874060690402985
    2. '(m' → logprob: -1.9587405920028687
    3. '(n' → logprob: -3.583740711212158
    4. ' (' → logprob: -3.958740711212158
    5. '(' → logprob: -7.958740711212158
    6. '   ' → logprob: -9.958740234375
    7. '(min' → logprob: -10.708740234375
    8. '(c' → logprob: -11.208740234375
    9. '(N' → logprob: -11.583740234375
    10. '(mx' → logprob: -11.583740234375

Token 378: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.04441390186548233
    2. '(max' → logprob: -3.1694138050079346
    3. 'm' → logprob: -7.419414043426514
    4. '(m' → logprob: -7.544414043426514
    5. ' max' → logprob: -8.294413566589355
    6. ' (' → logprob: -10.794413566589355
    7. '(' → logprob: -12.294413566589355
    8. '   ' → logprob: -12.669413566589355
    9. '(n' → logprob: -13.294413566589355
    10. '[max' → logprob: -13.294413566589355

Token 379: '_changes' (ID: 119201)
  Prédit: '_changes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_changes' → logprob: -2.7133641196996905e-05
    2. 'changes' → logprob: -10.75002670288086
    3. '+' → logprob: -12.62502670288086
    4. ' changes' → logprob: -14.50002670288086
    5. 'Changes' → logprob: -14.75002670288086
    6. '   ' → logprob: -15.25002670288086
    7. 'm' → logprob: -15.37502670288086
    8. '```' → logprob: -16.25002670288086
    9. '_m' → logprob: -16.37502670288086
    10. '_moves' → logprob: -16.50002670288086

Token 380: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0019291093340143561
    2. ' +' → logprob: -6.25192928314209
    3. ')' → logprob: -15.37692928314209
    4. '+
' → logprob: -15.87692928314209
    5. '+)' → logprob: -17.501928329467773
    6. '+n' → logprob: -17.626928329467773
    7. '```' → logprob: -17.876928329467773
    8. '
' → logprob: -18.751928329467773
    9. '+m' → logprob: -19.251928329467773
    10. '   ' → logprob: -19.626928329467773

Token 381: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.994086627149954e-05
    2. '2' → logprob: -9.500080108642578
    3. ' ' → logprob: -12.250080108642578
    4. '   ' → logprob: -15.750080108642578
    5. '
' → logprob: -16.500080108642578
    6. '10' → logprob: -18.500080108642578
    7. '5' → logprob: -19.125080108642578
    8. '

' → logprob: -19.125080108642578
    9. '```' → logprob: -19.125080108642578
    10. '  ' → logprob: -19.250080108642578

Token 382: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007680560229346156
    2. ' )' → logprob: -7.250768184661865
    3. ' for' → logprob: -10.750767707824707
    4. ']' → logprob: -11.125767707824707
    5. ')]' → logprob: -11.500767707824707
    6. 'for' → logprob: -12.250767707824707
    7. '   ' → logprob: -12.375767707824707
    8. ')
' → logprob: -14.125767707824707
    9. ' ' → logprob: -14.375767707824707
    10. '    ' → logprob: -14.875767707824707

Token 383: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.012794747948646545
    2. 'for' → logprob: -4.3877949714660645
    3. ']' → logprob: -8.762794494628906
    4. '   ' → logprob: -9.262794494628906
    5. '    ' → logprob: -11.512794494628906
    6. ' ]' → logprob: -11.637794494628906
    7. ' ' → logprob: -11.887794494628906
    8. '       ' → logprob: -13.387794494628906
    9. ')' → logprob: -13.512794494628906
    10. '	for' → logprob: -13.762794494628906

Token 384: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4677707254886627
    2. ' range' → logprob: -1.0927706956863403
    3. ' in' → logprob: -3.71777081489563
    4. ' _' → logprob: -4.592770576477051
    5. 'range' → logprob: -5.842770576477051
    6. '_range' → logprob: -6.967770576477051
    7. 'in' → logprob: -9.96777057647705
    8. '_in' → logprob: -11.96777057647705
    9. '   ' → logprob: -13.09277057647705
    10. '(range' → logprob: -13.46777057647705

Token 385: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6163840293884277
    2. ' in' → logprob: -0.8663840293884277
    3. 'range' → logprob: -3.2413840293884277
    4. ' range' → logprob: -7.741384029388428
    5. ' ' → logprob: -10.366384506225586
    6. '_' → logprob: -10.491384506225586
    7. 'n' → logprob: -10.866384506225586
    8. ' _' → logprob: -12.366384506225586
    9. 'ange' → logprob: -12.866384506225586
    10. '  ' → logprob: -12.991384506225586

Token 386: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011048054322600365
    2. ' range' → logprob: -4.511047840118408
    3. 'in' → logprob: -16.01104736328125
    4. '(range' → logprob: -16.51104736328125
    5. ' in' → logprob: -17.13604736328125
    6. '   ' → logprob: -17.38604736328125
    7. ' ' → logprob: -18.38604736328125
    8. 'n' → logprob: -18.88604736328125
    9. '
' → logprob: -20.01104736328125
    10. '	range' → logprob: -20.26104736328125

Token 387: '(n' (ID: 2406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.61515873670578
    2. ' range' → logprob: -1.3651587963104248
    3. '(n' → logprob: -1.6151587963104248
    4. 'n' → logprob: -5.865158557891846
    5. '(range' → logprob: -6.365158557891846
    6. ' (' → logprob: -7.990158557891846
    7. ' n' → logprob: -8.490159034729004
    8. '   ' → logprob: -9.365159034729004
    9. ' in' → logprob: -10.365159034729004
    10. ' ' → logprob: -12.115159034729004

Token 388: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00013536323967855424
    2. ' +' → logprob: -9.25013542175293
    3. ')]' → logprob: -11.12513542175293
    4. '1' → logprob: -11.37513542175293
    5. '+
' → logprob: -12.00013542175293
    6. ')])' → logprob: -13.37513542175293
    7. ')' → logprob: -13.62513542175293
    8. '   ' → logprob: -13.75013542175293
    9. '+n' → logprob: -13.75013542175293
    10. '       ' → logprob: -15.00013542175293

Token 389: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.165027217415627e-05
    2. '   ' → logprob: -11.750021934509277
    3. ' ' → logprob: -12.000021934509277
    4. '
' → logprob: -12.625021934509277
    5. '0' → logprob: -14.125021934509277
    6. '```' → logprob: -14.125021934509277
    7. 'n' → logprob: -14.625021934509277
    8. '       ' → logprob: -14.625021934509277
    9. '           ' → logprob: -15.437521934509277
    10. '+' → logprob: -15.625021934509277

Token 390: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00419296370819211
    2. ']' → logprob: -5.75419282913208
    3. ')' → logprob: -7.00419282913208
    4. '   ' → logprob: -9.254193305969238
    5. '       ' → logprob: -12.004193305969238
    6. ')]
' → logprob: -13.004193305969238
    7. ' )' → logprob: -14.379193305969238
    8. ' ]' → logprob: -14.504193305969238
    9. ']
' → logprob: -14.629193305969238
    10. ')
' → logprob: -15.379193305969238

Token 391: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21262668073177338
    2. '   ' → logprob: -1.9626266956329346
    3. 'dist' → logprob: -3.4626266956329346
    4. ' dist' → logprob: -4.2126264572143555
    5. '	dist' → logprob: -5.7126264572143555
    6. '<|end|>' → logprob: -6.5876264572143555
    7. '           ' → logprob: -10.337626457214355
    8. '_dist' → logprob: -10.337626457214355
    9. '    ' → logprob: -10.837626457214355
    10. '```' → logprob: -10.962626457214355

Token 392: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.0010075619211420417
    2. ' dist' → logprob: -7.251007556915283
    3. '       ' → logprob: -8.501008033752441
    4. '   ' → logprob: -10.126008033752441
    5. 'import' → logprob: -10.126008033752441
    6. '	dist' → logprob: -11.251008033752441
    7. 'for' → logprob: -14.126008033752441
    8. 'from' → logprob: -15.876008033752441
    9. '_dist' → logprob: -16.001007080078125
    10. 'Dist' → logprob: -16.376007080078125

Token 393: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06999601423740387
    2. '[' → logprob: -2.6949961185455322
    3. '```' → logprob: -10.444995880126953
    4. '   ' → logprob: -11.694995880126953
    5. ' [' → logprob: -12.194995880126953
    6. '][' → logprob: -12.444995880126953
    7. '       ' → logprob: -12.694995880126953
    8. '=' → logprob: -13.819995880126953
    9. '[n' → logprob: -13.944995880126953
    10. ',' → logprob: -14.257495880126953

Token 394: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.961759259458631e-06
    2. '=' → logprob: -13.375004768371582
    3. ' [' → logprob: -13.625004768371582
    4. '][' → logprob: -14.250004768371582
    5. '```' → logprob: -14.625004768371582
    6. ' =' → logprob: -15.000004768371582
    7. ')[' → logprob: -15.750004768371582
    8. '1' → logprob: -16.1250057220459
    9. '[n' → logprob: -16.5000057220459
    10. 'def' → logprob: -16.8750057220459

Token 395: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002697759075090289
    2. 'c' → logprob: -6.377697944641113
    3. '[' → logprob: -7.752697944641113
    4. '0' → logprob: -8.002697944641113
    5. '][' → logprob: -9.127697944641113
    6. '[c' → logprob: -9.502697944641113
    7. ']' → logprob: -10.877697944641113
    8. ' ' → logprob: -12.002697944641113
    9. '   ' → logprob: -12.252697944641113
    10. '
' → logprob: -12.627697944641113

Token 396: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.04339740797877312
    2. '[' → logprob: -3.1683974266052246
    3. ']' → logprob: -8.168396949768066
    4. ' ][' → logprob: -10.543396949768066
    5. '       ' → logprob: -10.793396949768066
    6. '=' → logprob: -10.793396949768066
    7. '   ' → logprob: -10.918396949768066
    8. '0' → logprob: -11.418396949768066
    9. ']=' → logprob: -11.793396949768066
    10. '
' → logprob: -12.793396949768066

Token 397: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '۰' → logprob: -20.125
    4. '０' → logprob: -21.375
    5. '   ' → logprob: -22.0
    6. '০' → logprob: -23.0
    7. '000' → logprob: -23.0
    8. '[' → logprob: -23.5
    9. '00' → logprob: -24.5
    10. '<|end|>' → logprob: -24.5

Token 398: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001192490803077817
    2. ']=' → logprob: -6.751192569732666
    3. '=' → logprob: -11.251192092895508
    4. ' ]' → logprob: -11.626192092895508
    5. ' =' → logprob: -14.876192092895508
    6. '0' → logprob: -18.751192092895508
    7. '`]' → logprob: -19.376192092895508
    8. '   ' → logprob: -19.626192092895508
    9. ']==' → logprob: -19.751192092895508
    10. ')' → logprob: -19.751192092895508

Token 399: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006715370807796717
    2. ' =' → logprob: -5.006715297698975
    3. ']=' → logprob: -18.131715774536133
    4. '=

' → logprob: -20.006715774536133
    5. '=
' → logprob: -20.631715774536133
    6. '＝' → logprob: -20.756715774536133
    7. '=int' → logprob: -21.006715774536133
    8. ' ' → logprob: -21.131715774536133
    9. ')=' → logprob: -21.256715774536133
    10. '[' → logprob: -21.381715774536133

Token 400: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -18.625001907348633
    4. '۰' → logprob: -19.375001907348633
    5. '```' → logprob: -20.875001907348633
    6. '(' → logprob: -20.875001907348633
    7. '00' → logprob: -21.000001907348633
    8. '  ' → logprob: -21.375001907348633
    9. '    ' → logprob: -21.625001907348633
    10. '000' → logprob: -21.937501907348633

Token 401: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '۰' → logprob: -19.625
    4. '   ' → logprob: -20.0
    5. '00' → logprob: -21.0
    6. 'c' → logprob: -21.25
    7. '```' → logprob: -21.375
    8. '(' → logprob: -21.5
    9. '000' → logprob: -22.0
    10. '[' → logprob: -22.5

Token 402: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.543769121170044
    2. '       ' → logprob: -0.918769121170044
    3. '	for' → logprob: -4.793768882751465
    4. '
' → logprob: -5.168768882751465
    5. '	import' → logprob: -6.293768882751465
    6. '	queue' → logprob: -6.793768882751465
    7. 'import' → logprob: -7.168768882751465
    8. '	p' → logprob: -7.668768882751465
    9. '<|end|>' → logprob: -7.668768882751465
    10. '	while' → logprob: -8.043768882751465

Token 403: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5395054817199707
    2. '   ' → logprob: -0.9145054817199707
    3. '	for' → logprob: -4.414505481719971
    4. ' for' → logprob: -6.289505481719971
    5. '	import' → logprob: -6.789505481719971
    6. 'import' → logprob: -7.039505481719971
    7. 'for' → logprob: -9.539505004882812
    8. '	queue' → logprob: -10.164505004882812
    9. '<|end|>' → logprob: -10.289505004882812
    10. '	   ' → logprob: -10.289505004882812

Token 404: ' #' (ID: 1069)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0099280821159482
    2. '   ' → logprob: -5.759928226470947
    3. 'from' → logprob: -5.759928226470947
    4. 'pq' → logprob: -5.759928226470947
    5. '       ' → logprob: -8.009927749633789
    6. 'for' → logprob: -10.009927749633789
    7. ' import' → logprob: -10.509927749633789
    8. 'heap' → logprob: -11.634927749633789
    9. 'hq' → logprob: -12.134927749633789
    10. '```' → logprob: -12.509927749633789

Token 405: ' priority' (ID: 17621)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.052042026072740555
    2. 'from' → logprob: -4.177042007446289
    3. 'for' → logprob: -4.302042007446289
    4. 'pq' → logprob: -4.677042007446289
    5. '   ' → logprob: -5.302042007446289
    6. 'heap' → logprob: -5.427042007446289
    7. ' import' → logprob: -6.302042007446289
    8. 'hq' → logprob: -7.052042007446289
    9. ' for' → logprob: -8.802042007446289
    10. '       ' → logprob: -8.927042007446289

Token 406: ' queue' (ID: 13661)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.021890688687562943
    2. 'queue' → logprob: -4.521890640258789
    3. ' =' → logprob: -4.896890640258789
    4. '_queue' → logprob: -6.646890640258789
    5. 'pq' → logprob: -7.021890640258789
    6. ' queue' → logprob: -7.521890640258789
    7. '=' → logprob: -8.021890640258789
    8. 'que' → logprob: -9.521890640258789
    9. '_q' → logprob: -10.271890640258789
    10. '   ' → logprob: -10.271890640258789

Token 407: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04349339380860329
    2. 'pq' → logprob: -3.5434935092926025
    3. ' pq' → logprob: -4.793493270874023
    4. '=' → logprob: -5.543493270874023
    5. '=[]' → logprob: -7.918493270874023
    6. '   ' → logprob: -8.293493270874023
    7. ',' → logprob: -8.543493270874023
    8. 'q' → logprob: -8.793493270874023
    9. 'import' → logprob: -9.418493270874023
    10. 'heap' → logprob: -9.668493270874023

Token 408: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3180173933506012
    2. ' (' → logprob: -1.9430173635482788
    3. '[(' → logprob: -3.1930174827575684
    4. '(p' → logprob: -3.4430174827575684
    5. '[]' → logprob: -4.068017482757568
    6. '(heap' → logprob: -4.193017482757568
    7. '(priority' → logprob: -4.943017482757568
    8. '(cd' → logprob: -5.568017482757568
    9. '(q' → logprob: -5.943017482757568
    10. '(cost' → logprob: -6.318017482757568

Token 409: 'distance' (ID: 40614)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.22232595086097717
    2. 'distance' → logprob: -2.5973260402679443
    3. 'cost' → logprob: -3.0973260402679443
    4. '0' → logprob: -3.2223260402679443
    5. ')' → logprob: -3.4723260402679443
    6. 'cd' → logprob: -5.972325801849365
    7. 'd' → logprob: -6.097325801849365
    8. ' dist' → logprob: -7.347325801849365
    9. '(dist' → logprob: -7.472325801849365
    10. '(distance' → logprob: -7.597325801849365

Token 410: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0484667643904686
    2. ',u' → logprob: -3.173466682434082
    3. ',c' → logprob: -6.423466682434082
    4. ',n' → logprob: -6.923466682434082
    5. ' ,' → logprob: -7.423466682434082
    6. ',count' → logprob: -7.548466682434082
    7. ',int' → logprob: -8.048466682434082
    8. ',node' → logprob: -8.423466682434082
    9. ',k' → logprob: -8.673466682434082
    10. ',i' → logprob: -8.923466682434082

Token 411: ' changes' (ID: 6629)
  Prédit: 'changes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'changes' → logprob: -0.23224256932735443
    2. 'changed' → logprob: -2.2322425842285156
    3. 'change' → logprob: -2.6072425842285156
    4. ' changes' → logprob: -3.8572425842285156
    5. ' changed' → logprob: -5.607242584228516
    6. ' change' → logprob: -7.232242584228516
    7. 'node' → logprob: -7.732242584228516
    8. 'u' → logprob: -8.857242584228516
    9. ' node' → logprob: -9.857242584228516
    10. 'chang' → logprob: -10.607242584228516

Token 412: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07054684311151505
    2. '_count' → logprob: -2.820546865463257
    3. ',u' → logprob: -5.320546627044678
    4. 'count' → logprob: -6.445546627044678
    5. ',count' → logprob: -6.945546627044678
    6. ')' → logprob: -8.445547103881836
    7. ',_' → logprob: -8.445547103881836
    8. ' ,' → logprob: -9.445547103881836
    9. ',c' → logprob: -9.445547103881836
    10. '_counts' → logprob: -9.570547103881836

Token 413: ' node' (ID: 4596)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.2593311667442322
    2. 'node' → logprob: -1.509331226348877
    3. ' node' → logprob: -5.384331226348877
    4. ' u' → logprob: -5.884331226348877
    5. 'current' → logprob: -13.384330749511719
    6. ')' → logprob: -13.509330749511719
    7. 'vertex' → logprob: -15.384330749511719
    8. '   ' → logprob: -16.00933074951172
    9. 'heap' → logprob: -16.00933074951172
    10. ',node' → logprob: -16.00933074951172

Token 414: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009327789884991944
    2. ')
' → logprob: -7.000932693481445
    3. '   ' → logprob: -12.125932693481445
    4. ',' → logprob: -12.125932693481445
    5. ')
' → logprob: -12.625932693481445
    6. ' )' → logprob: -12.750932693481445
    7. '),' → logprob: -13.625932693481445
    8. '       ' → logprob: -13.750932693481445
    9. '))' → logprob: -14.875932693481445
    10. ')\' → logprob: -15.125932693481445

Token 415: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2421834021806717
    2. '
' → logprob: -1.6171834468841553
    3. '   ' → logprob: -4.992183208465576
    4. '
' → logprob: -5.867183208465576
    5. ',' → logprob: -6.617183208465576
    6. 'heap' → logprob: -6.742183208465576
    7. 'pq' → logprob: -6.992183208465576
    8. ',p' → logprob: -7.742183208465576
    9. '<|end|>' → logprob: -7.742183208465576
    10. '' → logprob: -7.867183208465576

Token 416: ' heap' (ID: 37237)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pq' → logprob: -0.017630865797400475
    2. ' pq' → logprob: -4.3926310539245605
    3. '   ' → logprob: -5.5176310539245605
    4. 'import' → logprob: -6.8926310539245605
    5. '       ' → logprob: -9.767630577087402
    6. 'heap' (adapté à ' heap') → logprob: -12.017630577087402
    7. '
' → logprob: -12.142630577087402
    8. '	p' → logprob: -12.892630577087402
    9. ' import' → logprob: -13.017630577087402
    10. 'PQ' → logprob: -14.142630577087402

Token 417: ' =' (ID: 314)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0013971416046842933
    2. '.' → logprob: -6.751397132873535
    3. '.he' → logprob: -9.501397132873535
    4. '=' → logprob: -9.876397132873535
    5. '.push' → logprob: -10.376397132873535
    6. '.append' → logprob: -10.626397132873535
    7. '```' → logprob: -11.376397132873535
    8. ' =' → logprob: -11.376397132873535
    9. ' .' → logprob: -11.751397132873535
    10. ',' → logprob: -12.626397132873535

Token 418: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -8.061054359131958e-06
    2. ' [(' → logprob: -11.750007629394531
    3. '[]' → logprob: -16.87500762939453
    4. '[' → logprob: -17.12500762939453
    5. '[
' → logprob: -19.50000762939453
    6. '[((' → logprob: -20.62500762939453
    7. '([(' → logprob: -20.75000762939453
    8. '[]
' → logprob: -21.62500762939453
    9. '   ' → logprob: -21.62500762939453
    10. '(' → logprob: -21.62500762939453

Token 419: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.125000953674316
    3. '(' → logprob: -15.500000953674316
    4. '   ' → logprob: -18.0
    5. '۰' → logprob: -19.375
    6. 'dist' → logprob: -19.375
    7. ')' → logprob: -19.5
    8. '```' → logprob: -20.25
    9. '(dist' → logprob: -21.0625
    10. ' (' → logprob: -21.125

Token 420: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.1888679839321412e-05
    2. ' ,' → logprob: -11.000021934509277
    3. '0' → logprob: -12.250021934509277
    4. ',
' → logprob: -15.500021934509277
    5. '   ' → logprob: -16.12502098083496
    6. '	' → logprob: -18.50002098083496
    7. ')' → logprob: -18.75002098083496
    8. ' ' → logprob: -18.75002098083496
    9. '```' → logprob: -18.87502098083496
    10. '       ' → logprob: -19.50002098083496

Token 421: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '<|end|>' → logprob: -20.250001907348633
    4. '   ' → logprob: -20.500001907348633
    5. '۰' → logprob: -21.000001907348633
    6. '000' → logprob: -21.750001907348633
    7. '00' → logprob: -22.125001907348633
    8. ')' → logprob: -22.375001907348633
    9. '  ' → logprob: -22.750001907348633
    10. '০' → logprob: -23.187501907348633

Token 422: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.7146746763028204e-05
    2. ' ,' → logprob: -10.25003719329834
    3. '1' → logprob: -14.00003719329834
    4. '0' → logprob: -14.37503719329834
    5. ',
' → logprob: -16.125036239624023
    6. ')' → logprob: -16.500036239624023
    7. '   ' → logprob: -17.250036239624023
    8. ')]' → logprob: -17.750036239624023
    9. '```' → logprob: -18.000036239624023
    10. ' ' → logprob: -18.250036239624023

Token 423: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -17.375001907348633
    4. '
' → logprob: -19.000001907348633
    5. ')' → logprob: -19.750001907348633
    6. '```' → logprob: -19.750001907348633
    7. '  ' → logprob: -20.500001907348633
    8. '１' → logprob: -20.875001907348633
    9. '    ' → logprob: -21.125001907348633
    10. '۱' → logprob: -21.500001907348633

Token 424: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.01816738210618496
    2. ')' → logprob: -4.018167495727539
    3. ')]
' → logprob: -11.768167495727539
    4. ']' → logprob: -12.643167495727539
    5. ')
' → logprob: -12.768167495727539
    6. '   ' → logprob: -13.518167495727539
    7. ')])' → logprob: -14.268167495727539
    8. '))' → logprob: -14.393167495727539
    9. ' )' → logprob: -14.893167495727539
    10. ')]
' → logprob: -15.393167495727539

Token 425: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4294143617153168
    2. '	while' → logprob: -1.1794143915176392
    3. '       ' → logprob: -3.9294142723083496
    4. ' while' → logprob: -4.55441427230835
    5. 'while' → logprob: -4.55441427230835
    6. '<|end|>' → logprob: -8.054414749145508
    7. '```' → logprob: -8.429414749145508
    8. ')' → logprob: -8.429414749145508
    9. '	   ' → logprob: -10.054414749145508
    10. ',' → logprob: -10.679414749145508

Token 426: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.054931145161390305
    2. '   ' → logprob: -3.429931163787842
    3. ' while' → logprob: -4.054931163787842
    4. '       ' → logprob: -6.179931163787842
    5. '	while' → logprob: -6.429931163787842
    6. 'import' → logprob: -11.054930686950684
    7. '```' → logprob: -11.304930686950684
    8. ')' → logprob: -12.804930686950684
    9. '
' → logprob: -12.804930686950684
    10. '  ' → logprob: -13.304930686950684

Token 427: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.005234356038272381
    2. ' heap' → logprob: -5.255234241485596
    3. '(heap' → logprob: -14.505234718322754
    4. 'he' → logprob: -18.505233764648438
    5. '   ' → logprob: -18.630233764648438
    6. '.heap' → logprob: -19.380233764648438
    7. ' ' → logprob: -19.880233764648438
    8. 'len' → logprob: -20.255233764648438
    9. 'heat' → logprob: -21.005233764648438
    10. '  ' → logprob: -21.255233764648438

Token 428: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43064382672309875
    2. ':
' → logprob: -1.0556437969207764
    3. '[' → logprob: -6.9306440353393555
    4. ',' → logprob: -7.3056440353393555
    5. '):
' → logprob: -8.930644035339355
    6. '):' → logprob: -9.930644035339355
    7. '.pop' → logprob: -10.055644035339355
    8. ':
' → logprob: -10.305644035339355
    9. '=' → logprob: -11.680644035339355
    10. '       ' → logprob: -11.930644035339355

Token 429: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009133517742156982
    2. ',' → logprob: -5.384133338928223
    3. '           ' → logprob: -6.009133338928223
    4. ' ,' → logprob: -7.009133338928223
    5. '   ' → logprob: -7.759133338928223
    6. '	' → logprob: -9.009133338928223
    7. '```' → logprob: -9.259133338928223
    8. ',d' → logprob: -9.509133338928223
    9. '	       ' → logprob: -10.259133338928223
    10. '        
' → logprob: -10.384133338928223

Token 430: ' cd' (ID: 24852)
  Prédit: 'cd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' (adapté à ' cd') → logprob: -0.5683385729789734
    2. 'dist' → logprob: -1.3183386325836182
    3. 'd' → logprob: -1.8183386325836182
    4. ' dist' → logprob: -6.443338394165039
    5. ' cd' → logprob: -7.193338394165039
    6. '(cd' → logprob: -7.818338394165039
    7. 'distance' → logprob: -8.443338394165039
    8. 'cur' → logprob: -8.943338394165039
    9. '   ' → logprob: -9.318338394165039
    10. 'import' → logprob: -9.318338394165039

Token 431: ',ch' (ID: 165575)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001178439473733306
    2. ',c' → logprob: -7.00117826461792
    3. ' ,' → logprob: -8.376178741455078
    4. ',d' → logprob: -11.001178741455078
    5. ',u' → logprob: -12.751178741455078
    6. ',n' → logprob: -13.001178741455078
    7. ',
' → logprob: -13.251178741455078
    8. ',w' → logprob: -13.376178741455078
    9. ',v' → logprob: -13.376178741455078
    10. ',ch' → logprob: -13.751178741455078

Token 432: ',u' (ID: 80698)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011248945258557796
    2. ' ,' → logprob: -5.51124906539917
    3. ',c' → logprob: -6.01124906539917
    4. ',d' → logprob: -6.76124906539917
    5. ',k' → logprob: -7.38624906539917
    6. ',p' → logprob: -7.51124906539917
    7. ',v' → logprob: -7.76124906539917
    8. ',ch' → logprob: -7.76124906539917
    9. ',u' → logprob: -8.636248588562012
    10. 'g' → logprob: -8.761248588562012

Token 433: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47409141063690186
    2. ' =' → logprob: -0.9740914106369019
    3. ')' → logprob: -12.224091529846191
    4. ')=' → logprob: -12.224091529846191
    5. '   ' → logprob: -13.599091529846191
    6. '           ' → logprob: -14.224091529846191
    7. '=
' → logprob: -14.599091529846191
    8. ',' → logprob: -15.224091529846191
    9. '=

' → logprob: -15.724091529846191
    10. ']=' → logprob: -15.849091529846191

Token 434: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.0007107630372047424
    2. ' heap' → logprob: -7.250710964202881
    3. 'he' → logprob: -14.250710487365723
    4. '   ' → logprob: -15.500710487365723
    5. '(heap' → logprob: -18.37571144104004
    6. ' ' → logprob: -19.00071144104004
    7. '
' → logprob: -19.12571144104004
    8. '.heap' → logprob: -19.37571144104004
    9. '
' → logprob: -19.62571144104004
    10. '    ' → logprob: -19.87571144104004

Token 435: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -4.008129963040119e-06
    2. '[' → logprob: -13.500003814697266
    3. 'p' → logprob: -13.625003814697266
    4. '   ' → logprob: -14.375003814697266
    5. 'app' → logprob: -15.125003814697266
    6. '       ' → logprob: -15.500003814697266
    7. '.he' → logprob: -15.750003814697266
    8. '
' → logprob: -16.375003814697266
    9. '=' → logprob: -17.000003814697266
    10. 'h' → logprob: -17.500003814697266

Token 436: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -1.5094070477061905e-05
    2. 'he' → logprob: -11.500015258789062
    3. 'q' → logprob: -12.625015258789062
    4. 'app' → logprob: -14.625015258789062
    5. ' he' → logprob: -14.750015258789062
    6. '.heap' → logprob: -14.750015258789062
    7. '_he' → logprob: -16.250015258789062
    8. '.' → logprob: -16.250015258789062
    9. ' .' → logprob: -17.250015258789062
    10. 'pop' → logprob: -17.375015258789062

Token 437: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -1.3425219549390022e-05
    2. 'pp' → logprob: -11.25001335144043
    3. 'ap' → logprob: -15.50001335144043
    4. 'pop' → logprob: -17.62501335144043
    5. '[' → logprob: -17.87501335144043
    6. 'op' → logprob: -18.12501335144043
    7. 'appe' → logprob: -19.12501335144043
    8. '```' → logprob: -19.12501335144043
    9. 'p' → logprob: -19.25001335144043
    10. 'q' → logprob: -19.37501335144043

Token 438: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.002797153079882264
    2. 'pop' → logprob: -6.5027971267700195
    3. 'pp' → logprob: -7.1277971267700195
    4. 'app' → logprob: -8.50279712677002
    5. 'p' → logprob: -8.75279712677002
    6. 'ush' → logprob: -9.00279712677002
    7. 'he' → logprob: -13.37779712677002
    8. '```' → logprob: -13.75279712677002
    9. 'q' → logprob: -14.00279712677002
    10. 'e' → logprob: -14.12779712677002

Token 439: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -14.750000953674316
    3. 'heap' → logprob: -16.75
    4. ' (' → logprob: -17.25
    5. '```' → logprob: -18.0
    6. '(h' → logprob: -18.5
    7. '   ' → logprob: -19.0
    8. '(queue' → logprob: -19.125
    9. '(
' → logprob: -19.125
    10. '.heap' → logprob: -20.625

Token 440: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005266838241368532
    2. ')
' → logprob: -5.2552666664123535
    3. ')
' → logprob: -10.505267143249512
    4. '           ' → logprob: -12.630267143249512
    5. '   ' → logprob: -14.130267143249512
    6. '       ' → logprob: -14.130267143249512
    7. ')`' → logprob: -15.380267143249512
    8. ')

' → logprob: -15.505267143249512
    9. ' )' → logprob: -15.755267143249512
    10. '),' → logprob: -16.255266189575195

Token 441: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014499354176223278
    2. '       ' → logprob: -4.264499187469482
    3. 'if' → logprob: -9.01449966430664
    4. ' if' → logprob: -9.26449966430664
    5. '<|end|>' → logprob: -9.63949966430664
    6. '   ' → logprob: -11.26449966430664
    7. '
' → logprob: -11.26449966430664
    8. '```' → logprob: -12.01449966430664
    9. '               ' → logprob: -12.13949966430664
    10. '          ' → logprob: -12.13949966430664

Token 442: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03846084699034691
    2. '           ' → logprob: -3.2884607315063477
    3. ' if' → logprob: -7.788460731506348
    4. '       ' → logprob: -12.913460731506348
    5. 'for' → logprob: -13.413460731506348
    6. '   ' → logprob: -14.413460731506348
    7. '```' → logprob: -15.788460731506348
    8. '
' → logprob: -16.538461685180664
    9. '            
' → logprob: -16.788461685180664
    10. '               ' → logprob: -16.788461685180664

Token 443: ' dist' (ID: 3601)
  Prédit: 'cd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.3413628339767456
    2. 'dist' → logprob: -1.5913628339767456
    3. 'u' → logprob: -2.466362953186035
    4. ' dist' → logprob: -8.216362953186035
    5. ' cd' → logprob: -8.591362953186035
    6. '(cd' → logprob: -9.466362953186035
    7. ' u' → logprob: -10.716362953186035
    8. '(dist' → logprob: -10.716362953186035
    9. '   ' → logprob: -11.216362953186035
    10. '(u' → logprob: -11.716362953186035

Token 444: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07909886538982391
    2. '[u' → logprob: -2.57909893989563
    3. '[' → logprob: -9.20409870147705
    4. 'u' → logprob: -10.07909870147705
    5. '```' → logprob: -10.95409870147705
    6. '   ' → logprob: -11.82909870147705
    7. ' u' → logprob: -12.07909870147705
    8. ')' → logprob: -12.32909870147705
    9. '<u' → logprob: -12.45409870147705
    10. '
' → logprob: -12.51659870147705

Token 445: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -6.704273118884885e-07
    2. 'u' → logprob: -15.000000953674316
    3. '```' → logprob: -15.750000953674316
    4. '[' → logprob: -16.0
    5. '<u' → logprob: -17.625
    6. '   ' → logprob: -17.875
    7. ' [' → logprob: -18.25
    8. '
' → logprob: -18.75
    9. '][' → logprob: -19.25
    10. ')[' → logprob: -19.5

Token 446: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.09363438934087753
    2. '[ch' → logprob: -2.4686343669891357
    3. '[u' → logprob: -6.468634605407715
    4. '[' → logprob: -6.468634605407715
    5. ')[' → logprob: -7.343634605407715
    6. ')][' → logprob: -8.093634605407715
    7. ' ][' → logprob: -8.593634605407715
    8. ']' → logprob: -9.468634605407715
    9. '>[' → logprob: -9.843634605407715
    10. '>' → logprob: -9.968634605407715

Token 447: 'ch' (ID: 332)
  Prédit: 'ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -9.088346359931165e-07
    2. ' ch' → logprob: -14.250000953674316
    3. '[ch' → logprob: -15.875000953674316
    4. '	ch' → logprob: -17.875
    5. '(ch' → logprob: -19.875
    6. 'cd' → logprob: -21.0
    7. ',ch' → logprob: -21.125
    8. '
' → logprob: -21.75
    9. '_ch' → logprob: -21.875
    10. '.ch' → logprob: -22.25

Token 448: ']<' (ID: 80424)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6695207953453064
    2. ']<' → logprob: -0.9195207953453064
    3. '<' → logprob: -2.419520854949951
    4. ' <' → logprob: -8.169520378112793
    5. '<u' → logprob: -10.794520378112793
    6. ']>' → logprob: -11.294520378112793
    7. '']' → logprob: -11.544520378112793
    8. ')<' → logprob: -11.669520378112793
    9. '<m' → logprob: -12.544520378112793
    10. ']!=' → logprob: -12.669520378112793

Token 449: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -1.1398757123970427e-05
    2. ' cd' → logprob: -11.500011444091797
    3. '	cd' → logprob: -13.750011444091797
    4. '_cd' → logprob: -16.250011444091797
    5. '(cd' → logprob: -17.125011444091797
    6. 'cdn' → logprob: -17.750011444091797
    7. '   ' → logprob: -19.500011444091797
    8. '
' → logprob: -19.500011444091797
    9. ' ' → logprob: -20.000011444091797
    10. '=' → logprob: -20.625011444091797

Token 450: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0386795774102211
    2. ':
' → logprob: -3.413679599761963
    3. '       ' → logprob: -6.163679599761963
    4. 'continue' → logprob: -6.663679599761963
    5. '           ' → logprob: -6.913679599761963
    6. ' continue' → logprob: -8.413679122924805
    7. '   ' → logprob: -8.538679122924805
    8. '	continue' → logprob: -8.913679122924805
    9. '               ' → logprob: -10.663679122924805
    10. ',' → logprob: -11.163679122924805

Token 451: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6613830924034119
    2. '           ' → logprob: -1.1613831520080566
    3. 'continue' → logprob: -2.2863831520080566
    4. ' continue' → logprob: -2.7863831520080566
    5. '	continue' → logprob: -5.911383152008057
    6. '               ' → logprob: -6.036383152008057
    7. '   ' → logprob: -6.161383152008057
    8. '_continue' → logprob: -8.911382675170898
    9. '		' → logprob: -10.036382675170898
    10. ' continues' → logprob: -10.411382675170898

Token 452: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.025219714269042015
    2. '           ' → logprob: -4.275219917297363
    3. ' continue' → logprob: -4.525219917297363
    4. '               ' → logprob: -9.025219917297363
    5. '       ' → logprob: -11.025219917297363
    6. '	continue' → logprob: -11.150219917297363
    7. '   ' → logprob: -11.525219917297363
    8. '_continue' → logprob: -14.025219917297363
    9. '```' → logprob: -14.900219917297363
    10. 'contin' → logprob: -14.900219917297363

Token 453: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010081578511744738
    2. '<|end|>' → logprob: -7.251008033752441
    3. '       ' → logprob: -8.376008033752441
    4. '   ' → logprob: -10.876008033752441
    5. ' for' → logprob: -11.626008033752441
    6. '               ' → logprob: -11.626008033752441
    7. '<|end|>' → logprob: -11.751008033752441
    8. '          ' → logprob: -12.001008033752441
    9. '	       ' → logprob: -12.626008033752441
    10. '		' → logprob: -12.751008033752441

Token 454: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010834212880581617
    2. '       ' → logprob: -6.8760833740234375
    3. '<|end|>' → logprob: -10.376083374023438
    4. '   ' → logprob: -12.126083374023438
    5. '	       ' → logprob: -12.751083374023438
    6. '		' → logprob: -12.751083374023438
    7. '          ' → logprob: -13.001083374023438
    8. '```' → logprob: -13.376083374023438
    9. '<|end|>' → logprob: -13.751083374023438
    10. '               ' → logprob: -14.126083374023438

Token 455: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3166900873184204
    2. '           ' → logprob: -1.4416900873184204
    3. '       ' → logprob: -3.691689968109131
    4. ' for' → logprob: -4.691689968109131
    5. 'if' (adapté à ' if') → logprob: -7.191689968109131
    6. '	for' → logprob: -10.941690444946289
    7. '   ' → logprob: -11.066690444946289
    8. '```' → logprob: -11.316690444946289
    9. '            
' → logprob: -12.566690444946289
    10. ' if' → logprob: -12.691690444946289

Token 456: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.008706517517566681
    2. ' u' → logprob: -4.758706569671631
    3. 'dist' → logprob: -10.383706092834473
    4. 'cd' → logprob: -10.633706092834473
    5. '(u' → logprob: -11.383706092834473
    6. '   ' → logprob: -11.883706092834473
    7. 'n' → logprob: -12.508706092834473
    8. '	u' → logprob: -13.133706092834473
    9. ' cd' → logprob: -13.258706092834473
    10. ' dist' → logprob: -13.383706092834473

Token 457: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2014911025762558
    2. ' ==' → logprob: -1.701491117477417
    3. ']==' → logprob: -10.201491355895996
    4. ')==' → logprob: -10.451491355895996
    5. '==
' → logprob: -12.076491355895996
    6. '()==' → logprob: -13.076491355895996
    7. '==(' → logprob: -13.576491355895996
    8. '=' → logprob: -13.701491355895996
    9. '===' → logprob: -15.076491355895996
    10. ' ' → logprob: -15.451491355895996

Token 458: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001502717612311244
    2. ' n' → logprob: -6.501502513885498
    3. '   ' → logprob: -15.376502990722656
    4. ' ' → logprob: -15.626502990722656
    5. '	n' → logprob: -16.626502990722656
    6. '
' → logprob: -17.001502990722656
    7. '```' → logprob: -18.126502990722656
    8. ' ' → logprob: -18.376502990722656
    9. '<|end|>' → logprob: -18.376502990722656
    10. '  ' → logprob: -18.501502990722656

Token 459: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.008653807453811169
    2. 'and' → logprob: -5.25865364074707
    3. '           ' → logprob: -6.38365364074707
    4. ':' → logprob: -6.63365364074707
    5. ':
' → logprob: -8.50865364074707
    6. '               ' → logprob: -9.63365364074707
    7. '       ' → logprob: -9.63365364074707
    8. '<|end|>' → logprob: -10.63365364074707
    9. '	and' → logprob: -10.63365364074707
    10. '   ' → logprob: -11.75865364074707

Token 460: ' cd' (ID: 24852)
  Prédit: 'cd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.0008945476147346199
    2. 'dist' → logprob: -7.875894546508789
    3. ' cd' → logprob: -8.000894546508789
    4. '(cd' → logprob: -8.750894546508789
    5. 'ch' → logprob: -11.750894546508789
    6. '	cd' → logprob: -12.875894546508789
    7. 'abs' → logprob: -13.250894546508789
    8. 'any' → logprob: -13.375894546508789
    9. '(' → logprob: -13.625894546508789
    10. '
' → logprob: -13.875894546508789

Token 461: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.43399688601493835
    2. '==' → logprob: -1.1839969158172607
    3. ' <=' → logprob: -3.5589969158172607
    4. '<=' → logprob: -4.058996677398682
    5. '>=' → logprob: -8.93399715423584
    6. ' >=' → logprob: -9.05899715423584
    7. '>' → logprob: -11.18399715423584
    8. ' ' → logprob: -11.55899715423584
    9. ' >' → logprob: -11.68399715423584
    10. '==
' → logprob: -12.43399715423584

Token 462: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00012403888104017824
    2. ' c' → logprob: -9.000123977661133
    3. '   ' → logprob: -15.250123977661133
    4. '	c' → logprob: -16.125123977661133
    5. '```' → logprob: -16.500123977661133
    6. ')c' → logprob: -16.875123977661133
    7. ' ' → logprob: -18.125123977661133
    8. '
' → logprob: -18.375123977661133
    9. '    ' → logprob: -18.500123977661133
    10. '_c' → logprob: -18.625123977661133

Token 463: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02638182044029236
    2. ':
' → logprob: -3.651381731033325
    3. ':return' → logprob: -10.151381492614746
    4. ' and' → logprob: -10.401381492614746
    5. ':
' → logprob: -12.401381492614746
    6. '           ' → logprob: -12.776381492614746
    7. '               ' → logprob: -13.651381492614746
    8. 'and' → logprob: -13.901381492614746
    9. '       ' → logprob: -14.526381492614746
    10. '):' → logprob: -14.651381492614746

Token 464: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002646735229063779
    2. '           ' → logprob: -8.750265121459961
    3. ':' → logprob: -10.000265121459961
    4. '                   ' → logprob: -11.000265121459961
    5. '			' → logprob: -11.500265121459961
    6. '       ' → logprob: -12.125265121459961
    7. '<|end|>' → logprob: -12.250265121459961
    8. '                
' → logprob: -12.625265121459961
    9. '	           ' → logprob: -12.625265121459961
    10. '                       ' → logprob: -13.125265121459961

Token 465: ' print' (ID: 2123)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.054208602756261826
    2. 'print' (adapté à ' print') → logprob: -3.679208517074585
    3. 'break' → logprob: -3.804208517074585
    4. 'return' → logprob: -5.929208755493164
    5. '           ' → logprob: -6.679208755493164
    6. ' break' → logprob: -7.679208755493164
    7. '                   ' → logprob: -7.929208755493164
    8. ' print' → logprob: -8.179208755493164
    9. '   ' → logprob: -9.429208755493164
    10. ' return' → logprob: -9.554208755493164

Token 466: '(ch' (ID: 15574)
  Prédit: '(ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ch' → logprob: -0.11321038752794266
    2. 'ch' → logprob: -2.238210439682007
    3. '(' → logprob: -8.238210678100586
    4. '0' → logprob: -9.863210678100586
    5. 'dist' → logprob: -11.488210678100586
    6. ' ch' → logprob: -11.488210678100586
    7. '(dist' → logprob: -11.613210678100586
    8. '(cd' → logprob: -11.738210678100586
    9. '("' → logprob: -11.863210678100586
    10. 'cd' → logprob: -11.988210678100586

Token 467: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5759729146957397
    2. ')' → logprob: -0.8259729146957397
    3. '               ' → logprob: -11.075972557067871
    4. ')return' → logprob: -11.825972557067871
    5. ')
' → logprob: -11.950972557067871
    6. '           ' → logprob: -13.575972557067871
    7. ')`
' → logprob: -13.950972557067871
    8. '                   ' → logprob: -14.825972557067871
    9. ' )
' → logprob: -14.950972557067871
    10. ' )' → logprob: -15.200972557067871

Token 468: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -9.460291767027229e-05
    2. '<|end|>' → logprob: -9.875094413757324
    3. '           ' → logprob: -11.125094413757324
    4. '                   ' → logprob: -12.000094413757324
    5. '			' → logprob: -12.375094413757324
    6. '	           ' → logprob: -12.375094413757324
    7. '                
' → logprob: -13.000094413757324
    8. '              ' → logprob: -13.000094413757324
    9. '<|end|>' → logprob: -13.125094413757324
    10. '		       ' → logprob: -13.250094413757324

Token 469: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2535437047481537
    2. 'return' → logprob: -1.503543734550476
    3. ' return' → logprob: -6.503543853759766
    4. 'break' (adapté à ' break') → logprob: -9.128543853759766
    5. '	return' → logprob: -12.628543853759766
    6. ' break' → logprob: -13.878543853759766
    7. '			' → logprob: -14.628543853759766
    8. '
' → logprob: -14.628543853759766
    9. '                
' → logprob: -14.753543853759766
    10. '```' → logprob: -15.503543853759766

Token 470: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01617348939180374
    2. '       ' → logprob: -4.141173362731934
    3. 'else' → logprob: -9.516173362731934
    4. '   ' → logprob: -10.516173362731934
    5. 'for' → logprob: -11.016173362731934
    6. '
' → logprob: -12.016173362731934
    7. ' for' → logprob: -12.766173362731934
    8. '		' → logprob: -13.016173362731934
    9. '```' → logprob: -13.141173362731934
    10. '          ' → logprob: -13.391173362731934

Token 471: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18046842515468597
    2. '           ' → logprob: -1.8054684400558472
    3. 'for' → logprob: -8.180468559265137
    4. '   ' → logprob: -8.305468559265137
    5. 'else' → logprob: -9.055468559265137
    6. '```' → logprob: -10.180468559265137
    7. ' for' → logprob: -11.555468559265137
    8. '	       ' → logprob: -12.305468559265137
    9. '	   ' → logprob: -12.555468559265137
    10. '		' → logprob: -12.555468559265137

Token 472: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009946263395249844
    2. '       ' → logprob: -5.009946346282959
    3. 'else' → logprob: -6.134946346282959
    4. '           ' → logprob: -6.884946346282959
    5. ' for' → logprob: -10.5099458694458
    6. '```' → logprob: -12.0099458694458
    7. '   ' → logprob: -12.7599458694458
    8. 'if' (adapté à ' if') → logprob: -15.8849458694458
    9. '	for' → logprob: -15.8849458694458
    10. '            
' → logprob: -16.134946823120117

Token 473: ' u' (ID: 337)
  Prédit: 'cd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.26836782693862915
    2. 'u' → logprob: -1.7683677673339844
    3. 'ch' → logprob: -3.1433677673339844
    4. ' cd' → logprob: -5.018367767333984
    5. 'not' → logprob: -5.518367767333984
    6. 'dist' → logprob: -5.768367767333984
    7. ' u' → logprob: -6.393367767333984
    8. 'False' → logprob: -6.643367767333984
    9. 'True' → logprob: -6.768367767333984
    10. ' ch' → logprob: -6.768367767333984

Token 474: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1668401062488556
    2. ' !=' → logprob: -2.166840076446533
    3. '==' → logprob: -3.416840076446533
    4. '!=' → logprob: -5.541840076446533
    5. ' in' → logprob: -7.291840076446533
    6. '   ' → logprob: -8.041840553283691
    7. ' <' → logprob: -8.041840553283691
    8. ' not' → logprob: -8.291840553283691
    9. ' ' → logprob: -8.416840553283691
    10. ' continue' → logprob: -9.041840553283691

Token 475: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004662949591875076
    2. ' n' → logprob: -5.379662990570068
    3. 'c' → logprob: -10.62966251373291
    4. ' ' → logprob: -11.12966251373291
    5. '0' → logprob: -13.50466251373291
    6. 'm' → logprob: -13.75466251373291
    7. ' c' → logprob: -15.50466251373291
    8. '	n' → logprob: -15.50466251373291
    9. '  ' → logprob: -16.129663467407227
    10. '1' → logprob: -16.317163467407227

Token 476: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.19907385110855103
    2. 'and' → logprob: -2.3240737915039062
    3. ':' → logprob: -3.3240737915039062
    4. ':
' → logprob: -3.3240737915039062
    5. '           ' → logprob: -4.949073791503906
    6. '               ' → logprob: -5.824073791503906
    7. '   ' → logprob: -9.074073791503906
    8. '       ' → logprob: -9.324073791503906
    9. ':return' → logprob: -9.824073791503906
    10. '          ' → logprob: -9.949073791503906

Token 477: ' cd' (ID: 24852)
  Prédit: 'cd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.0002439467643853277
    2. '(cd' → logprob: -8.375244140625
    3. ' cd' → logprob: -11.375244140625
    4. 'abs' → logprob: -13.500244140625
    5. 'dist' → logprob: -15.250244140625
    6. '(' → logprob: -16.250244140625
    7. '	cd' → logprob: -16.250244140625
    8. 'cdn' → logprob: -17.375244140625
    9. 'not' → logprob: -18.000244140625
    10. '(c' → logprob: -18.000244140625

Token 478: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.25907331705093384
    2. ' >' → logprob: -1.759073257446289
    3. '<' → logprob: -3.509073257446289
    4. '!=' → logprob: -4.259073257446289
    5. ' !=' → logprob: -5.009073257446289
    6. ' <' → logprob: -5.259073257446289
    7. '<c' → logprob: -10.759073257446289
    8. '>=' → logprob: -11.259073257446289
    9. ' >=' → logprob: -12.134073257446289
    10. ' ' → logprob: -12.259073257446289

Token 479: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0017035098280757666
    2. ' c' → logprob: -6.37670373916626
    3. '=' → logprob: -14.751703262329102
    4. '	c' → logprob: -14.876703262329102
    5. '
' → logprob: -15.626703262329102
    6. '   ' → logprob: -15.626703262329102
    7. 'cd' → logprob: -16.3767032623291
    8. '=c' → logprob: -16.7517032623291
    9. ' ' → logprob: -16.8767032623291
    10. '  ' → logprob: -17.6267032623291

Token 480: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8874478340148926
    2. ':
' → logprob: -1.1374478340148926
    3. ':' → logprob: -1.6374478340148926
    4. '           ' → logprob: -2.6374478340148926
    5. ' or' → logprob: -7.262447834014893
    6. '   ' → logprob: -8.887447357177734
    7. '       ' → logprob: -8.887447357177734
    8. '                   ' → logprob: -9.262447357177734
    9. ':return' → logprob: -9.262447357177734
    10. '              ' → logprob: -9.387447357177734

Token 481: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00044771170360036194
    2. '           ' → logprob: -8.125447273254395
    3. 'continue' → logprob: -9.125447273254395
    4. ' continue' → logprob: -10.375447273254395
    5. '       ' → logprob: -12.625447273254395
    6. '	           ' → logprob: -13.125447273254395
    7. '   ' → logprob: -13.125447273254395
    8. '	continue' → logprob: -13.875447273254395
    9. '		       ' → logprob: -14.125447273254395
    10. '	       ' → logprob: -14.250447273254395

Token 482: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.043674398213624954
    2. '               ' → logprob: -4.168674468994141
    3. ' continue' → logprob: -4.168674468994141
    4. '           ' → logprob: -4.668674468994141
    5. '   ' → logprob: -6.168674468994141
    6. '       ' → logprob: -9.29367446899414
    7. '	continue' → logprob: -9.66867446899414
    8. 'for' → logprob: -9.91867446899414
    9. 'print' → logprob: -10.41867446899414
    10. '                   ' → logprob: -10.54367446899414

Token 483: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.0590548703912646e-05
    2. '       ' → logprob: -10.625030517578125
    3. '          ' → logprob: -13.375030517578125
    4. '	       ' → logprob: -13.750030517578125
    5. 'for' → logprob: -14.125030517578125
    6. '		' → logprob: -14.250030517578125
    7. '               ' → logprob: -14.625030517578125
    8. '   ' → logprob: -15.000030517578125
    9. '```' → logprob: -15.000030517578125
    10. '
' → logprob: -15.250030517578125

Token 484: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.7888184528565034e-05
    2. 'for' → logprob: -10.3750581741333
    3. '       ' → logprob: -10.7500581741333
    4. ' for' → logprob: -13.2500581741333
    5. '          ' → logprob: -13.3750581741333
    6. '```' → logprob: -14.6250581741333
    7. '   ' → logprob: -15.0000581741333
    8. '	       ' → logprob: -15.2500581741333
    9. '         ' → logprob: -15.3750581741333
    10. '               ' → logprob: -15.5000581741333

Token 485: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.13415761291980743
    2. '           ' → logprob: -2.134157657623291
    3. ' for' → logprob: -5.634157657623291
    4. '       ' → logprob: -5.634157657623291
    5. '   ' → logprob: -10.759157180786133
    6. 'if' → logprob: -11.384157180786133
    7. '```' → logprob: -11.884157180786133
    8. '
' → logprob: -12.259157180786133
    9. 'else' → logprob: -12.259157180786133
    10. '            
' → logprob: -12.884157180786133

Token 486: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.008755793794989586
    2. ' v' → logprob: -5.383755683898926
    3. '(v' → logprob: -5.508755683898926
    4. ' (' → logprob: -11.008755683898926
    5. 'vv' → logprob: -11.133755683898926
    6. 'idx' → logprob: -11.633755683898926
    7. '(u' → logprob: -11.633755683898926
    8. 'u' → logprob: -12.508755683898926
    9. 'nv' → logprob: -12.508755683898926
    10. 'w' → logprob: -13.008755683898926

Token 487: ',w' (ID: 49598)
  Prédit: ',w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',w' → logprob: -0.005442331545054913
    2. ',' → logprob: -5.255442142486572
    3. ' ,' → logprob: -8.88044261932373
    4. ',v' → logprob: -10.25544261932373
    5. ',(' → logprob: -11.38044261932373
    6. ',d' → logprob: -12.00544261932373
    7. ',c' → logprob: -12.50544261932373
    8. ',W' → logprob: -12.88044261932373
    9. ',u' → logprob: -13.25544261932373
    10. 'w' → logprob: -14.00544261932373

Token 488: ',i' (ID: 25032)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18860794603824615
    2. ',ch' → logprob: -2.438607931137085
    3. ',w' → logprob: -2.938607931137085
    4. ' ,' → logprob: -4.688608169555664
    5. ',in' → logprob: -5.063608169555664
    6. ',_' → logprob: -5.688608169555664
    7. ' in' → logprob: -5.938608169555664
    8. ',u' → logprob: -6.063608169555664
    9. ',c' → logprob: -6.313608169555664
    10. ',d' → logprob: -6.438608169555664

Token 489: '_edge' (ID: 43226)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05158393830060959
    2. 'in' → logprob: -3.426584005355835
    3. ',' → logprob: -4.051583766937256
    4. ' ,' → logprob: -8.801584243774414
    5. ',_' → logprob: -9.051584243774414
    6. ',in' → logprob: -10.176584243774414
    7. ',v' → logprob: -10.801584243774414
    8. ')' → logprob: -11.426584243774414
    9. ' ' → logprob: -11.926584243774414
    10. '   ' → logprob: -12.051584243774414

Token 490: ' in' (ID: 306)
  Prédit: ',w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',w' → logprob: -0.61956787109375
    2. ',' → logprob: -1.24456787109375
    3. ' in' → logprob: -2.36956787109375
    4. ',_' → logprob: -3.11956787109375
    5. ' ,' → logprob: -4.74456787109375
    6. ',u' → logprob: -4.86956787109375
    7. ',in' → logprob: -4.99456787109375
    8. 'in' → logprob: -5.36956787109375
    9. ',v' → logprob: -5.61956787109375
    10. ',d' → logprob: -6.49456787109375

Token 491: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.004081367049366236
    2. ' adj' → logprob: -5.5040812492370605
    3. 'range' → logprob: -12.879081726074219
    4. '(adj' → logprob: -15.254081726074219
    5. 'ad' → logprob: -16.62908172607422
    6. 'enumer' → logprob: -18.12908172607422
    7. ' range' → logprob: -18.12908172607422
    8. '   ' → logprob: -18.75408172607422
    9. '_adj' → logprob: -19.25408172607422
    10. ' ' → logprob: -19.75408172607422

Token 492: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -4.320199877838604e-07
    2. 'u' → logprob: -14.75
    3. '[' → logprob: -18.0
    4. ',u' → logprob: -18.25
    5. '	u' → logprob: -19.0
    6. ' u' → logprob: -19.375
    7. '(u' → logprob: -19.625
    8. '<u' → logprob: -19.75
    9. '[v' → logprob: -19.875
    10. '[
' → logprob: -20.125

Token 493: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.026798775419592857
    2. ']:
' → logprob: -3.776798725128174
    3. ':' → logprob: -5.776798725128174
    4. ']' → logprob: -8.526799201965332
    5. '):' → logprob: -9.151799201965332
    6. ']:
' → logprob: -9.651799201965332
    7. ']>' → logprob: -11.151799201965332
    8. ',' → logprob: -11.276799201965332
    9. ']:

' → logprob: -11.526799201965332
    10. '],' → logprob: -11.776799201965332

Token 494: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004984631086699665
    2. ' for' → logprob: -8.50049877166748
    3. '<|end|>' → logprob: -8.87549877166748
    4. '           ' → logprob: -10.12549877166748
    5. '```' → logprob: -10.75049877166748
    6. '       ' → logprob: -10.87549877166748
    7. 'for' → logprob: -11.25049877166748
    8. '                   ' → logprob: -11.87549877166748
    9. '   ' → logprob: -12.12549877166748
    10. ',' → logprob: -12.12549877166748

Token 495: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.32899537682533264
    2. '#' (adapté à ' #') → logprob: -1.9539953470230103
    3. 'if' → logprob: -2.4539954662323
    4. 'for' → logprob: -3.9539954662323
    5. ' if' → logprob: -4.578995227813721
    6. ' #' → logprob: -5.078995227813721
    7. '           ' → logprob: -5.703995227813721
    8. ' for' → logprob: -5.703995227813721
    9. 'new' → logprob: -6.328995227813721
    10. '   ' → logprob: -6.578995227813721

Token 496: ' option' (ID: 5317)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6322322487831116
    2. 'for' → logprob: -1.0072321891784668
    3. 'max' → logprob: -2.632232189178467
    4. '#' → logprob: -4.257232189178467
    5. 'nd' → logprob: -4.757232189178467
    6. 'min' → logprob: -5.882232189178467
    7. 'diff' → logprob: -6.007232189178467
    8. 'new' → logprob: -7.382232189178467
    9. 'remain' → logprob: -7.382232189178467
    10. '               ' → logprob: -7.882232189178467

Token 497: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.394717812538147
    2. ' ' → logprob: -1.144717812538147
    3. ' =' → logprob: -5.769717693328857
    4. '=' → logprob: -6.019717693328857
    5. '0' → logprob: -6.269717693328857
    6. 's' → logprob: -8.394718170166016
    7. '               ' → logprob: -10.644718170166016
    8. ':' → logprob: -10.769718170166016
    9. '   ' → logprob: -10.894718170166016
    10. ' #' → logprob: -10.894718170166016

Token 498: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2363811731338501
    2. ' =' → logprob: -2.2363810539245605
    3. '               ' → logprob: -2.7363810539245605
    4. ':
' → logprob: -4.2363810539245605
    5. '=' → logprob: -5.1113810539245605
    6. ' if' → logprob: -5.2363810539245605
    7. '                   ' → logprob: -5.4863810539245605
    8. ' :' → logprob: -6.3613810539245605
    9. '                ' → logprob: -6.6113810539245605
    10. '                
' → logprob: -6.9863810539245605

Token 499: ' no' (ID: 860)
  Prédit: ' nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.21462129056453705
    2. 'nd' → logprob: -2.3396213054656982
    3. '#' → logprob: -2.8396213054656982
    4. ' new' → logprob: -4.589621067047119
    5. ' #' → logprob: -4.964621067047119
    6. ' if' → logprob: -5.464621067047119
    7. '               ' → logprob: -5.464621067047119
    8. 'if' → logprob: -5.839621067047119
    9. 'new' → logprob: -5.964621067047119
    10. ' no' → logprob: -5.964621067047119

Token 500: ' change' (ID: 3343)
  Prédit: ' change'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' change' → logprob: -0.2843416631221771
    2. 'change' → logprob: -1.4093416929244995
    3. '_change' → logprob: -5.909341812133789
    4. '-change' → logprob: -8.909341812133789
    5. '-' → logprob: -9.159341812133789
    6. 't' → logprob: -10.159341812133789
    7. '_' → logprob: -10.409341812133789
    8. '	change' → logprob: -10.659341812133789
    9. ' changes' → logprob: -10.784341812133789
    10. ' ' → logprob: -10.784341812133789

Token 501: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04459986835718155
    2. ':' → logprob: -4.544600009918213
    3. ',' → logprob: -4.794600009918213
    4. '                
' → logprob: -5.044600009918213
    5. ' =' → logprob: -5.169600009918213
    6. ' if' → logprob: -5.794600009918213
    7. '<|end|>' → logprob: -5.794600009918213
    8. '
' → logprob: -6.169600009918213
    9. '                ' → logprob: -7.044600009918213
    10. '<|end|>' → logprob: -7.294600009918213

Token 502: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0019368429202586412
    2. '                
' → logprob: -6.751936912536621
    3. '
' → logprob: -8.001936912536621
    4. ' if' → logprob: -9.126936912536621
    5. '                ' → logprob: -9.751936912536621
    6. ',' → logprob: -9.751936912536621
    7. '<|end|>' → logprob: -9.751936912536621
    8. '                   ' → logprob: -10.876936912536621
    9. '           ' → logprob: -11.001936912536621
    10. ':' → logprob: -11.251936912536621

Token 503: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' (adapté à ' nd') → logprob: -0.22187666594982147
    2. ' nd' → logprob: -2.221876621246338
    3. 'if' → logprob: -2.471876621246338
    4. 'new' → logprob: -6.096876621246338
    5. ' if' → logprob: -6.221876621246338
    6. '                   ' → logprob: -7.346876621246338
    7. '               ' → logprob: -7.596876621246338
    8. 'n' → logprob: -7.971876621246338
    9. ' new' → logprob: -10.096877098083496
    10. 'ndl' → logprob: -10.221877098083496

Token 504: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759431719779968
    2. ' =' → logprob: -0.8259431719779968
    3. '=
' → logprob: -13.700942993164062
    4. ',' → logprob: -13.700942993164062
    5. ' =
' → logprob: -14.950942993164062
    6. ' ' → logprob: -15.325942993164062
    7. '＝' → logprob: -15.700942993164062
    8. '    ' → logprob: -15.950942993164062
    9. '   ' → logprob: -16.075942993164062
    10. '=int' → logprob: -16.325942993164062

Token 505: ' cd' (ID: 24852)
  Prédit: 'cd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.0007112398743629456
    2. ' cd' → logprob: -7.250711441040039
    3. '	cd' → logprob: -14.500711441040039
    4. '_cd' → logprob: -14.625711441040039
    5. '(cd' → logprob: -15.125711441040039
    6. 'Cd' → logprob: -16.87571144104004
    7. '               ' → logprob: -18.00071144104004
    8. '                   ' → logprob: -18.50071144104004
    9. 'CD' → logprob: -18.62571144104004
    10. '           ' → logprob: -18.75071144104004

Token 506: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.0818658173084259
    2. '+' → logprob: -2.5818657875061035
    3. '+w' → logprob: -5.8318657875061035
    4. ',' → logprob: -10.831866264343262
    5. ' ,' → logprob: -12.706866264343262
    6. ',w' → logprob: -12.956866264343262
    7. ' ' → logprob: -13.081866264343262
    8. '           ' → logprob: -13.206866264343262
    9. '               ' → logprob: -13.331866264343262
    10. ' +
' → logprob: -13.456866264343262

Token 507: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.676292231422849e-05
    2. ' w' → logprob: -11.000017166137695
    3. '               ' → logprob: -18.000017166137695
    4. '   ' → logprob: -18.125017166137695
    5. '
' → logprob: -19.500017166137695
    6. '	w' → logprob: -20.000017166137695
    7. '                   ' → logprob: -20.000017166137695
    8. '    ' → logprob: -20.625017166137695
    9. '           ' → logprob: -20.625017166137695
    10. ' ' → logprob: -21.000017166137695

Token 508: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3489139974117279
    2. '<|end|>' → logprob: -1.9739140272140503
    3. '               ' → logprob: -2.2239139080047607
    4. '                
' → logprob: -3.2239139080047607
    5. '				
' → logprob: -6.09891414642334
    6. ' 
' → logprob: -6.09891414642334
    7. '<|end|>' → logprob: -7.09891414642334
    8. '			' → logprob: -8.09891414642334
    9. '  
' → logprob: -8.34891414642334
    10. '                ' → logprob: -8.34891414642334

Token 509: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012696581892669201
    2. '<|end|>' → logprob: -4.512696743011475
    3. '                
' → logprob: -7.137696743011475
    4. '                ' → logprob: -8.137696266174316
    5. ' if' → logprob: -8.762696266174316
    6. '
' → logprob: -8.762696266174316
    7. '			' → logprob: -10.012696266174316
    8. '<|end|>' → logprob: -10.387696266174316
    9. ' ' → logprob: -10.887696266174316
    10. '              ' → logprob: -10.887696266174316

Token 510: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5328354239463806
    2. ' if' → logprob: -1.4078354835510254
    3. 'if' (adapté à ' if') → logprob: -1.7828354835510254
    4. '                
' → logprob: -9.407835006713867
    5. '                ' → logprob: -10.032835006713867
    6. '	if' → logprob: -10.907835006713867
    7. '              ' → logprob: -11.032835006713867
    8. '                   ' → logprob: -11.657835006713867
    9. '			' → logprob: -11.782835006713867
    10. '           ' → logprob: -11.907835006713867

Token 511: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.5240667462348938
    2. ' nd' → logprob: -0.8990667462348938
    3. 'dist' → logprob: -7.649066925048828
    4. '   ' → logprob: -8.649066925048828
    5. ' dist' → logprob: -8.774066925048828
    6. '(nd' → logprob: -10.524066925048828
    7. '           ' → logprob: -11.399066925048828
    8. '               ' → logprob: -11.399066925048828
    9. ' ' → logprob: -11.399066925048828
    10. '  ' → logprob: -11.649066925048828

Token 512: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.20144569873809814
    2. '<=' → logprob: -1.7014456987380981
    3. ' <' → logprob: -10.701445579528809
    4. '<' → logprob: -11.951445579528809
    5. ')<=' → logprob: -13.576445579528809
    6. '[' → logprob: -14.326445579528809
    7. ']<=' → logprob: -14.326445579528809
    8. ' ' → logprob: -14.701445579528809
    9. ' ≤' → logprob: -16.201446533203125
    10. '```' → logprob: -16.451446533203125

Token 513: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0005760280764661729
    2. ' c' → logprob: -7.500576019287109
    3. 'dist' → logprob: -10.75057601928711
    4. '   ' → logprob: -14.87557601928711
    5. 'float' → logprob: -15.25057601928711
    6. ' dist' → logprob: -15.62557601928711
    7. '
' → logprob: -15.62557601928711
    8. '	c' → logprob: -15.75057601928711
    9. ' ' → logprob: -15.87557601928711
    10. 'max' → logprob: -16.50057601928711

Token 514: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.002262782771140337
    2. 'and' → logprob: -6.127262592315674
    3. '               ' → logprob: -10.127263069152832
    4. '                   ' → logprob: -11.627263069152832
    5. '<|end|>' → logprob: -12.127263069152832
    6. '           ' → logprob: -12.252263069152832
    7. ':
' → logprob: -12.377263069152832
    8. ':' → logprob: -12.377263069152832
    9. '	and' → logprob: -12.877263069152832
    10. ',' → logprob: -13.502263069152832

Token 515: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.503236711025238
    2. 'dist' → logprob: -1.6282367706298828
    3. ' nd' → logprob: -2.003236770629883
    4. ' dist' → logprob: -2.753236770629883
    5. '   ' → logprob: -8.753236770629883
    6. 'cd' → logprob: -8.878236770629883
    7. '(nd' → logprob: -9.878236770629883
    8. '           ' → logprob: -10.628236770629883
    9. '               ' → logprob: -10.628236770629883
    10. '(dist' → logprob: -11.003236770629883

Token 516: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.04087366163730621
    2. '<' → logprob: -4.4158735275268555
    3. ' <=' → logprob: -5.0408735275268555
    4. 'dist' → logprob: -5.6658735275268555
    5. ']' → logprob: -5.7908735275268555
    6. ',' → logprob: -5.7908735275268555
    7. '<=' → logprob: -6.0408735275268555
    8. '][' → logprob: -6.0408735275268555
    9. ' ' → logprob: -6.7908735275268555
    10. ' and' → logprob: -7.0408735275268555

Token 517: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.003178306156769395
    2. ' dist' → logprob: -5.753178119659424
    3. '	dist' → logprob: -15.253178596496582
    4. '
' → logprob: -15.628178596496582
    5. '(dist' → logprob: -16.753177642822266
    6. '   ' → logprob: -17.253177642822266
    7. '           ' → logprob: -17.878177642822266
    8. '               ' → logprob: -18.003177642822266
    9. '=' → logprob: -18.378177642822266
    10. 'Dist' → logprob: -19.128177642822266

Token 518: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.625
    3. '```' → logprob: -16.25
    4. ' ' → logprob: -17.5
    5. '[u' → logprob: -18.3125
    6. '   ' → logprob: -18.5625
    7. '[n' → logprob: -18.75
    8. '[v' → logprob: -19.5
    9. '``' → logprob: -19.625
    10. '...' → logprob: -19.8125

Token 519: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -7.3458322731312364e-06
    2. 'v' → logprob: -11.875007629394531
    3. '[u' → logprob: -16.12500762939453
    4. '<v' → logprob: -17.12500762939453
    5. '```' → logprob: -17.25000762939453
    6. '[' → logprob: -18.62500762939453
    7. '	v' → logprob: -18.87500762939453
    8. ' v' → logprob: -19.50000762939453
    9. ',v' → logprob: -19.75000762939453
    10. '=v' → logprob: -19.75000762939453

Token 520: '][' (ID: 2696)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.03484822437167168
    2. '][' → logprob: -3.409848213195801
    3. '[' → logprob: -6.784848213195801
    4. '[n' → logprob: -11.0348482131958
    5. '[i' → logprob: -11.6598482131958
    6. '[][' → logprob: -11.9098482131958
    7. ']' → logprob: -12.1598482131958
    8. '
' → logprob: -12.4098482131958
    9. ' ][' → logprob: -12.7848482131958
    10. '[u' → logprob: -12.7848482131958

Token 521: 'ch' (ID: 332)
  Prédit: 'ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -6.749814019713085e-06
    2. ' ch' → logprob: -12.000006675720215
    3. '[ch' → logprob: -15.125006675720215
    4. '   ' → logprob: -15.375006675720215
    5. '	ch' → logprob: -16.87500762939453
    6. ' ' → logprob: -17.62500762939453
    7. '(ch' → logprob: -18.37500762939453
    8. '       ' → logprob: -18.50000762939453
    9. '  ' → logprob: -18.87500762939453
    10. ',ch' → logprob: -19.12500762939453

Token 522: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.5542059540748596
    2. ']:
' → logprob: -0.9292059540748596
    3. '               ' → logprob: -3.929205894470215
    4. '                   ' → logprob: -5.429205894470215
    5. ':' → logprob: -5.679205894470215
    6. ']:
' → logprob: -7.679205894470215
    7. '                       ' → logprob: -7.804205894470215
    8. '           ' → logprob: -7.929205894470215
    9. ':
' → logprob: -8.054205894470215
    10. ']' → logprob: -8.179205894470215

Token 523: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.09765032678842545
    2. '               ' → logprob: -3.3476502895355225
    3. '                       ' → logprob: -3.3476502895355225
    4. '                               ' → logprob: -4.847650527954102
    5. '                           ' → logprob: -5.472650527954102
    6. ':' → logprob: -5.847650527954102
    7. ':
' → logprob: -6.097650527954102
    8. '[' → logprob: -6.722650527954102
    9. '<|end|>' → logprob: -7.347650527954102
    10. '):
' → logprob: -7.847650527954102

Token 524: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.16901418566703796
    2. ' dist' → logprob: -2.0440142154693604
    3. '                   ' → logprob: -4.294013977050781
    4. '                       ' → logprob: -4.419013977050781
    5. '               ' → logprob: -8.794013977050781
    6. '	dist' → logprob: -9.419013977050781
    7. 'heap' → logprob: -10.794013977050781
    8. '                    ' → logprob: -11.419013977050781
    9. '_dist' → logprob: -12.294013977050781
    10. '                           ' → logprob: -12.294013977050781

Token 525: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '               ' → logprob: -17.5
    3. '[' → logprob: -18.625
    4. '                   ' → logprob: -18.8125
    5. '           ' → logprob: -19.0
    6. '[v' → logprob: -19.125
    7. '
' → logprob: -19.4375
    8. '   ' → logprob: -19.5625
    9. ' ' → logprob: -20.1875
    10. '_' → logprob: -20.3125

Token 526: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -3.128163257315464e-07
    2. 'v' → logprob: -15.375
    3. '<v' → logprob: -18.5
    4. '[' → logprob: -18.875
    5. '```' → logprob: -19.125
    6. '[u' → logprob: -19.5
    7. '2' → logprob: -19.75
    8. '][' → logprob: -20.125
    9. '	v' → logprob: -20.625
    10. '[val' → logprob: -20.75

Token 527: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.04874417185783386
    2. '[v' → logprob: -3.0487442016601562
    3. ']' → logprob: -9.423744201660156
    4. ' ][' → logprob: -10.048744201660156
    5. '[' → logprob: -11.423744201660156
    6. '   ' → logprob: -12.673744201660156
    7. 'v' → logprob: -12.923744201660156
    8. ')[' → logprob: -13.423744201660156
    9. '"][' → logprob: -13.673744201660156
    10. '	v' → logprob: -13.673744201660156

Token 528: 'ch' (ID: 332)
  Prédit: 'ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -3.650518920039758e-06
    2. '[ch' → logprob: -12.875003814697266
    3. ' ch' → logprob: -13.875003814697266
    4. '(ch' → logprob: -16.500003814697266
    5. '	ch' → logprob: -16.625003814697266
    6. '   ' → logprob: -17.500003814697266
    7. '
' → logprob: -18.000003814697266
    8. ''ch' → logprob: -18.750003814697266
    9. ' ' → logprob: -19.125003814697266
    10. '  ' → logprob: -19.250003814697266

Token 529: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.28136226534843445
    2. ']=' → logprob: -1.4063622951507568
    3. '][' → logprob: -10.531362533569336
    4. ' ]' → logprob: -10.531362533569336
    5. ']==' → logprob: -10.656362533569336
    6. ']<' → logprob: -10.906362533569336
    7. ']
' → logprob: -11.031362533569336
    8. '],' → logprob: -11.281362533569336
    9. '])' → logprob: -11.281362533569336
    10. '   ' → logprob: -11.281362533569336

Token 530: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006713478825986385
    2. ' =' → logprob: -5.131713390350342
    3. ']=' → logprob: -7.256713390350342
    4. ']' → logprob: -10.3817138671875
    5. '=v' → logprob: -10.3817138671875
    6. '[' → logprob: -12.1317138671875
    7. ')=' → logprob: -12.3817138671875
    8. '=
' → logprob: -13.1317138671875
    9. '   ' → logprob: -14.1317138671875
    10. '=

' → logprob: -14.1317138671875

Token 531: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.00671584764495492
    2. ' nd' → logprob: -5.006715774536133
    3. '(nd' → logprob: -14.756715774536133
    4. 'nt' → logprob: -16.881715774536133
    5. '   ' → logprob: -17.131715774536133
    6. '_nd' → logprob: -17.631715774536133
    7. 'ndl' → logprob: -17.631715774536133
    8. 'ng' → logprob: -18.006715774536133
    9. '
' → logprob: -18.256715774536133
    10. 'rd' → logprob: -18.381715774536133

Token 532: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0018687831470742822
    2. '<|end|>' → logprob: -6.751868724822998
    3. '               ' → logprob: -7.751868724822998
    4. '                       ' → logprob: -9.751869201660156
    5. '				' → logprob: -9.876869201660156
    6. '           ' → logprob: -10.376869201660156
    7. 'heap' → logprob: -10.376869201660156
    8. '		           ' → logprob: -10.876869201660156
    9. ',' → logprob: -11.501869201660156
    10. '                  ' → logprob: -11.751869201660156

Token 533: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.000377645599655807
    2. 'heap' → logprob: -8.625377655029297
    3. '               ' → logprob: -9.125377655029297
    4. '                       ' → logprob: -11.000377655029297
    5. '                           ' → logprob: -11.000377655029297
    6. '<|end|>' → logprob: -11.125377655029297
    7. '           ' → logprob: -11.250377655029297
    8. '                  ' → logprob: -11.625377655029297
    9. '                    ' → logprob: -12.500377655029297
    10. '                    
' → logprob: -12.625377655029297

Token 534: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -1.282920129597187e-05
    2. '                   ' → logprob: -11.500012397766113
    3. ' heap' → logprob: -13.000012397766113
    4. '```' → logprob: -15.250012397766113
    5. '               ' → logprob: -15.875012397766113
    6. '           ' → logprob: -17.87501335144043
    7. '                       ' → logprob: -18.87501335144043
    8. '   ' → logprob: -19.50001335144043
    9. '``' → logprob: -19.87501335144043
    10. '.heap' → logprob: -20.00001335144043

Token 535: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.696889623621246e-06
    2. '.he' → logprob: -13.25000286102295
    3. 'he' → logprob: -15.50000286102295
    4. 'h' → logprob: -16.250001907348633
    5. 'app' → logprob: -16.250001907348633
    6. '.push' → logprob: -16.375001907348633
    7. 'push' → logprob: -16.500001907348633
    8. '                   ' → logprob: -16.625001907348633
    9. '```' → logprob: -16.750001907348633
    10. '.' → logprob: -16.750001907348633

Token 536: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.0036687215324491262
    2. 'he' → logprob: -6.003668785095215
    3. 'q' → logprob: -6.753668785095215
    4. '.heap' → logprob: -11.003668785095215
    5. 'heap' → logprob: -12.753668785095215
    6. ' he' → logprob: -13.003668785095215
    7. '.push' → logprob: -13.503668785095215
    8. '_he' → logprob: -14.003668785095215
    9. '.' → logprob: -14.503668785095215
    10. 'ush' → logprob: -14.753668785095215

Token 537: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.08710773289203644
    2. 'pp' → logprob: -2.5871076583862305
    3. 'ush' → logprob: -5.3371076583862305
    4. 'push' → logprob: -5.7121076583862305
    5. 'he' → logprob: -9.96210765838623
    6. 'p' → logprob: -11.21210765838623
    7. '```' → logprob: -13.21210765838623
    8. 'h' → logprob: -13.33710765838623
    9. 'ap' → logprob: -13.71210765838623
    10. '.he' → logprob: -14.21210765838623

Token 538: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.0003595376620069146
    2. 'push' → logprob: -8.250359535217285
    3. 'pp' → logprob: -9.500359535217285
    4. 'app' → logprob: -10.875359535217285
    5. 'sh' → logprob: -12.375359535217285
    6. 'p' → logprob: -15.875359535217285
    7. 'he' → logprob: -17.3753604888916
    8. 'op' → logprob: -17.5003604888916
    9. '```' → logprob: -17.7503604888916
    10. 'q' → logprob: -18.0003604888916

Token 539: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.25
    3. 'heap' → logprob: -15.75
    4. ' (' → logprob: -19.125
    5. '(h' → logprob: -19.75
    6. '(
' → logprob: -20.125
    7. '(queue' → logprob: -20.25
    8. '```' → logprob: -20.625
    9. ' heap' → logprob: -20.875
    10. '.heap' → logprob: -21.0

Token 540: ',(' (ID: 27243)
  Prédit: '(heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(heap' → logprob: -3.650518920039758e-06
    2. '(' → logprob: -13.125003814697266
    3. ' (' → logprob: -13.500003814697266
    4. 'heap' → logprob: -16.125003814697266
    5. ' heap' → logprob: -16.250003814697266
    6. '```' → logprob: -18.125003814697266
    7. '(queue' → logprob: -18.250003814697266
    8. '.heap' → logprob: -18.500003814697266
    9. ',' → logprob: -18.625003814697266
    10. '(dist' → logprob: -19.000003814697266

Token 541: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.0005544631858356297
    2. ' nd' → logprob: -7.50055456161499
    3. '   ' → logprob: -14.000554084777832
    4. '(nd' → logprob: -14.500554084777832
    5. '_nd' → logprob: -17.00055503845215
    6. ' ' → logprob: -17.12555503845215
    7. '
' → logprob: -17.37555503845215
    8. '```' → logprob: -17.50055503845215
    9. '               ' → logprob: -17.62555503845215
    10. '           ' → logprob: -18.37555503845215

Token 542: ',ch' (ID: 165575)
  Prédit: ',ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',ch' → logprob: -0.03815142437815666
    2. ',' → logprob: -3.288151502609253
    3. ' ,' → logprob: -9.163151741027832
    4. ',c' → logprob: -13.538151741027832
    5. ',char' → logprob: -13.788151741027832
    6. ',
' → logprob: -14.038151741027832
    7. '   ' → logprob: -15.288151741027832
    8. ',j' → logprob: -15.288151741027832
    9. ',tr' → logprob: -15.663151741027832
    10. ',int' → logprob: -15.913151741027832

Token 543: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -2.248469718324486e-05
    2. ',' → logprob: -11.250022888183594
    3. ' ,' → logprob: -11.750022888183594
    4. 'v' → logprob: -14.125022888183594
    5. ',u' → logprob: -15.125022888183594
    6. '   ' → logprob: -15.500022888183594
    7. ',
' → logprob: -16.250022888183594
    8. '))' → logprob: -17.125022888183594
    9. '```' → logprob: -17.250022888183594
    10. '                   ' → logprob: -17.375022888183594

Token 544: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0001884015218820423
    2. '))
' → logprob: -8.875188827514648
    3. '               ' → logprob: -10.750188827514648
    4. '                   ' → logprob: -10.750188827514648
    5. ')' → logprob: -12.375188827514648
    6. '           ' → logprob: -14.625188827514648
    7. '                       ' → logprob: -14.875188827514648
    8. ')))' → logprob: -15.000188827514648
    9. ' ))' → logprob: -16.25018882751465
    10. '                           ' → logprob: -16.50018882751465

Token 545: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0023777850437909365
    2. '```' → logprob: -6.252377986907959
    3. '           ' → logprob: -8.2523775100708
    4. '                   ' → logprob: -9.8773775100708
    5. '                
' → logprob: -9.8773775100708
    6. '              ' → logprob: -10.2523775100708
    7. '       ' → logprob: -11.0023775100708
    8. '                ' → logprob: -11.7523775100708
    9. '             ' → logprob: -12.6273775100708
    10. '
' → logprob: -12.6273775100708

Token 546: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07946612685918808
    2. '#' (adapté à ' #') → logprob: -2.5794661045074463
    3. '
' → logprob: -7.829466342926025
    4. '                
' → logprob: -9.579465866088867
    5. ' #' → logprob: -9.829465866088867
    6. '           ' → logprob: -10.454465866088867
    7. '```' → logprob: -11.704465866088867
    8. '       ' → logprob: -12.204465866088867
    9. '              ' → logprob: -12.829465866088867
    10. '                   ' → logprob: -13.079465866088867

Token 547: ' option' (ID: 5317)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05695520341396332
    2. 'option' → logprob: -3.181955099105835
    3. '#' → logprob: -4.306955337524414
    4. '               ' → logprob: -8.556955337524414
    5. ' if' → logprob: -9.306955337524414
    6. '           ' → logprob: -10.056955337524414
    7. 'for' → logprob: -11.056955337524414
    8. ' option' → logprob: -11.556955337524414
    9. '
' → logprob: -11.806955337524414
    10. '       ' → logprob: -12.556955337524414

Token 548: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007713899831287563
    2. '1' → logprob: -7.375771522521973
    3. ':' → logprob: -9.500771522521973
    4. ' ' → logprob: -10.000771522521973
    5. '=' → logprob: -11.000771522521973
    6. ',' → logprob: -13.250771522521973
    7. '```' → logprob: -14.000771522521973
    8. '           ' → logprob: -14.125771522521973
    9. '   ' → logprob: -14.125771522521973
    10. '0' → logprob: -14.125771522521973

Token 549: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0026246467605233192
    2. ' :' → logprob: -6.75262451171875
    3. ' =' → logprob: -7.37762451171875
    4. '               ' → logprob: -7.62762451171875
    5. '           ' → logprob: -9.25262451171875
    6. ',' → logprob: -10.00262451171875
    7. '=' → logprob: -10.00262451171875
    8. ':
' → logprob: -10.00262451171875
    9. ' if' → logprob: -10.12762451171875
    10. '                   ' → logprob: -10.75262451171875

Token 550: ' change' (ID: 3343)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5910527110099792
    2. ' if' → logprob: -0.8410527110099792
    3. ' nd' → logprob: -5.716052532196045
    4. 'w' → logprob: -5.841052532196045
    5. ' w' → logprob: -5.841052532196045
    6. 'ch' → logprob: -6.466052532196045
    7. 'nd' → logprob: -6.591052532196045
    8. ' change' → logprob: -7.341052532196045
    9. 'change' → logprob: -7.591052532196045
    10. '   ' → logprob: -8.091053009033203

Token 551: ' edge' (ID: 11165)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.36151620745658875
    2. 'if' → logprob: -1.8615162372589111
    3. '               ' → logprob: -2.111516237258911
    4. '                   ' → logprob: -3.736516237258911
    5. ':' → logprob: -7.486515998840332
    6. '           ' → logprob: -7.861515998840332
    7. ' =' → logprob: -7.861515998840332
    8. '   ' → logprob: -8.236515998840332
    9. ' for' → logprob: -8.236515998840332
    10. 'for' → logprob: -8.986515998840332

Token 552: ' cost' (ID: 3097)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005422411952167749
    2. ' =' → logprob: -6.505422592163086
    3. '<|end|>' → logprob: -6.755422592163086
    4. ' if' → logprob: -6.880422592163086
    5. '
' → logprob: -7.505422592163086
    6. '                
' → logprob: -8.130422592163086
    7. ':' → logprob: -8.505422592163086
    8. ',' → logprob: -8.755422592163086
    9. '<|end|>' → logprob: -9.255422592163086
    10. '                   ' → logprob: -9.255422592163086

Token 553: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.680350661277771
    2. '               ' → logprob: -1.055350661277771
    3. '=' → logprob: -2.9303507804870605
    4. ' if' → logprob: -3.3053507804870605
    5. ':' → logprob: -3.9303507804870605
    6. '                   ' → logprob: -4.3053507804870605
    7. ',' → logprob: -4.8053507804870605
    8. 'if' → logprob: -5.6803507804870605
    9. '           ' → logprob: -5.8053507804870605
    10. '```' → logprob: -7.4303507804870605

Token 554: ' reduce' (ID: 10389)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7711608409881592
    2. 'c' → logprob: -0.8961608409881592
    3. ' c' → logprob: -2.396160840988159
    4. ' ' → logprob: -4.271161079406738
    5. 'max' → logprob: -4.521161079406738
    6. ' max' → logprob: -5.271161079406738
    7. 'cd' → logprob: -5.771161079406738
    8. ' cd' → logprob: -6.521161079406738
    9. ' nd' → logprob: -6.896161079406738
    10. ' (' → logprob: -7.646161079406738

Token 555: ' path' (ID: 3104)
  Prédit: ' nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.9085596203804016
    2. 'nd' → logprob: -1.2835595607757568
    3. 'if' → logprob: -2.658559560775757
    4. '0' → logprob: -3.033559560775757
    5. 'cd' → logprob: -3.158559560775757
    6. '(nd' → logprob: -3.283559560775757
    7. 'w' → logprob: -3.658559560775757
    8. ' if' → logprob: -3.908559560775757
    9. 'to' → logprob: -4.158559799194336
    10. ' to' → logprob: -4.658559799194336

Token 556: ' cost' (ID: 3097)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10618634521961212
    2. ' if' → logprob: -3.7311863899230957
    3. ',' → logprob: -3.8561863899230957
    4. ' by' → logprob: -4.231186389923096
    5. '                   ' → logprob: -4.731186389923096
    6. '=' → logprob: -4.981186389923096
    7. ' =' → logprob: -5.106186389923096
    8. ' to' → logprob: -5.356186389923096
    9. 'if' → logprob: -5.606186389923096
    10. 'to' → logprob: -5.731186389923096

Token 557: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000866083602886647
    2. ',' → logprob: -7.875865936279297
    3. ' if' → logprob: -8.250865936279297
    4. '                
' → logprob: -9.250865936279297
    5. '
' → logprob: -10.500865936279297
    6. '                ' → logprob: -10.875865936279297
    7. '                   ' → logprob: -11.125865936279297
    8. 'if' → logprob: -11.250865936279297
    9. '```' → logprob: -12.125865936279297
    10. '              ' → logprob: -12.250865936279297

Token 558: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.4142425060272217
    2. ' w' → logprob: -1.2892425060272217
    3. ' nd' → logprob: -3.9142425060272217
    4. 'cd' → logprob: -3.9142425060272217
    5. ' cd' → logprob: -4.164242744445801
    6. 'nd' → logprob: -5.289242744445801
    7. 'ch' → logprob: -7.164242744445801
    8. '(cd' → logprob: -7.664242744445801
    9. '(nd' → logprob: -7.914242744445801
    10. 'c' → logprob: -7.914242744445801

Token 559: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.06994488090276718
    2. ' >' → logprob: -2.6949448585510254
    3. '>w' → logprob: -12.319945335388184
    4. '<|end|>' → logprob: -14.444945335388184
    5. 'w' → logprob: -14.819945335388184
    6. ' ' → logprob: -14.944945335388184
    7. '&gt' → logprob: -15.069945335388184
    8. '>
' → logprob: -15.194945335388184
    9. ' ' → logprob: -15.319945335388184
    10. ')>' → logprob: -15.444945335388184

Token 560: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004565327544696629
    2. ' ' → logprob: -8.250456809997559
    3. 'c' → logprob: -8.625456809997559
    4. ' c' → logprob: -12.125456809997559
    5. 'cd' → logprob: -12.625456809997559
    6. '=' → logprob: -13.125456809997559
    7. '1' → logprob: -13.375456809997559
    8. 'w' → logprob: -14.250456809997559
    9. '(' → logprob: -15.187956809997559
    10. '>' → logprob: -15.312956809997559

Token 561: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000847267743665725
    2. 'c' → logprob: -7.875847339630127
    3. ' ' → logprob: -8.000846862792969
    4. 'cd' → logprob: -10.000846862792969
    5. 'w' → logprob: -10.250846862792969
    6. ' c' → logprob: -11.125846862792969
    7. '1' → logprob: -11.375846862792969
    8. '(' → logprob: -11.750846862792969
    9. ' (' → logprob: -12.875846862792969
    10. 'nd' → logprob: -13.375846862792969

Token 562: ' and' (ID: 326)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00751517666503787
    2. ',' → logprob: -5.757514953613281
    3. ' and' → logprob: -6.007514953613281
    4. '                   ' → logprob: -7.257514953613281
    5. '<|end|>' → logprob: -7.757514953613281
    6. ':' → logprob: -8.632514953613281
    7. '                ' → logprob: -8.757514953613281
    8. '                
' → logprob: -9.007514953613281
    9. ' if' → logprob: -9.632514953613281
    10. '<|end|>' → logprob: -10.132514953613281

Token 563: ' ch' (ID: 549)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.1751309633255005
    2. ' c' → logprob: -1.8001309633255005
    3. ' w' → logprob: -1.9251309633255005
    4. 'c' → logprob: -1.9251309633255005
    5. 'ch' → logprob: -2.925130844116211
    6. ' ch' → logprob: -2.925130844116211
    7. 'cd' → logprob: -3.050130844116211
    8. ' cd' → logprob: -3.175130844116211
    9. ' nd' → logprob: -3.550130844116211
    10. 'nd' → logprob: -5.300130844116211

Token 564: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1370057314634323
    2. ' +' → logprob: -2.8870058059692383
    3. ' <' → logprob: -3.2620058059692383
    4. '<' → logprob: -3.3870058059692383
    5. '<len' → logprob: -10.137005805969238
    6. '<w' → logprob: -10.637005805969238
    7. '<n' → logprob: -11.387005805969238
    8. ' ' → logprob: -11.512005805969238
    9. '   ' → logprob: -11.762005805969238
    10. '<size' → logprob: -11.887005805969238

Token 565: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '   ' → logprob: -19.50010871887207
    4. '+' → logprob: -20.62510871887207
    5. '```' → logprob: -20.62510871887207
    6. '0' → logprob: -21.50010871887207
    7. '
' → logprob: -21.87510871887207
    8. '  ' → logprob: -22.37510871887207
    9. ' ' → logprob: -22.37510871887207
    10. '=' → logprob: -23.00010871887207

Token 566: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.1235378086566925
    2. '<=' → logprob: -2.49853777885437
    3. ' <' → logprob: -3.49853777885437
    4. '<' → logprob: -5.623538017272949
    5. '```' → logprob: -10.24853801727295
    6. '<w' → logprob: -10.87353801727295
    7. '<n' → logprob: -11.12353801727295
    8. '<len' → logprob: -11.12353801727295
    9. ')<=' → logprob: -11.37353801727295
    10. ' ' → logprob: -11.49853801727295

Token 567: 'm' (ID: 76)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0009115827269852161
    2. ' max' → logprob: -7.000911712646484
    3. 'm' → logprob: -17.375911712646484
    4. '(max' → logprob: -18.625911712646484
    5. '	max' → logprob: -19.000911712646484
    6. '[max' → logprob: -19.375911712646484
    7. ' ' → logprob: -20.625911712646484
    8. '_max' → logprob: -20.750911712646484
    9. '=max' → logprob: -21.000911712646484
    10. '```' → logprob: -21.250911712646484

Token 568: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4273691177368164
    2. '               ' → logprob: -1.6773691177368164
    3. '                   ' → logprob: -2.1773691177368164
    4. ':' → logprob: -3.4273691177368164
    5. ':
' → logprob: -4.677369117736816
    6. ',' → logprob: -6.302369117736816
    7. 'and' → logprob: -6.302369117736816
    8. '                       ' → logprob: -7.677369117736816
    9. '                ' → logprob: -8.177369117736816
    10. '   ' → logprob: -8.427369117736816

Token 569: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006295174825936556
    2. '                   ' → logprob: -8.375629425048828
    3. '                
' → logprob: -9.250629425048828
    4. ' if' → logprob: -9.750629425048828
    5. '<|end|>' → logprob: -9.750629425048828
    6. ',' → logprob: -9.875629425048828
    7. '                ' → logprob: -10.375629425048828
    8. '			' → logprob: -11.000629425048828
    9. '	           ' → logprob: -11.125629425048828
    10. '	               ' → logprob: -12.000629425048828

Token 570: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.014756276272237301
    2. '                ' → logprob: -5.139756202697754
    3. ' if' → logprob: -5.389756202697754
    4. '                   ' → logprob: -5.514756202697754
    5. 'if' → logprob: -10.264756202697754
    6. '                       ' → logprob: -10.639756202697754
    7. ' ' → logprob: -10.889756202697754
    8. '                               ' → logprob: -10.889756202697754
    9. '           ' → logprob: -11.014756202697754
    10. '              ' → logprob: -11.264756202697754

Token 571: ' set' (ID: 920)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18877103924751282
    2. 'if' → logprob: -2.3137710094451904
    3. ' if' → logprob: -2.6887710094451904
    4. '           ' → logprob: -6.1887712478637695
    5. '                ' → logprob: -6.4387712478637695
    6. '                   ' → logprob: -6.8137712478637695
    7. '            ' → logprob: -9.18877124786377
    8. '                               ' → logprob: -9.93877124786377
    9. '              ' → logprob: -10.06377124786377
    10. '                           ' → logprob: -10.18877124786377

Token 572: ' edge' (ID: 11165)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.34607577323913574
    2. ' w' → logprob: -2.0960757732391357
    3. 'new' → logprob: -2.4710757732391357
    4. 'w' → logprob: -3.0960757732391357
    5. ' nd' → logprob: -3.5960757732391357
    6. ' nw' → logprob: -5.846076011657715
    7. ' if' → logprob: -6.971076011657715
    8. ' reduced' → logprob: -7.096076011657715
    9. ' to' → logprob: -7.471076011657715
    10. '
' → logprob: -7.596076011657715

Token 573: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.3038637936115265
    2. ' cost' → logprob: -2.303863763809204
    3. '_cost' → logprob: -2.803863763809204
    4. 'w' → logprob: -3.053863763809204
    5. 'weight' → logprob: -3.678863763809204
    6. '_w' → logprob: -4.678864002227783
    7. 'to' → logprob: -5.053864002227783
    8. '_weight' → logprob: -5.303864002227783
    9. ' weight' → logprob: -6.053864002227783
    10. ' =' → logprob: -6.428864002227783

Token 574: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1277470737695694
    2. ' =' → logprob: -2.127747058868408
    3. 'to' → logprob: -8.002747535705566
    4. ' to' → logprob: -8.252747535705566
    5. '=w' → logprob: -9.752747535705566
    6. '0' → logprob: -9.877747535705566
    7. '<|end|>' → logprob: -10.752747535705566
    8. ')' → logprob: -10.877747535705566
    9. ',' → logprob: -10.877747535705566
    10. '=
' → logprob: -11.002747535705566

Token 575: ' max' (ID: 2999)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03435594215989113
    2. 'c' → logprob: -4.034356117248535
    3. 'max' → logprob: -5.534356117248535
    4. 'cd' → logprob: -5.534356117248535
    5. ' ' → logprob: -5.659356117248535
    6. ' c' → logprob: -6.159356117248535
    7. ' max' → logprob: -6.534356117248535
    8. 'w' → logprob: -7.784356117248535
    9. ' cd' → logprob: -7.909356117248535
    10. 'nd' → logprob: -8.909356117248535

Token 576: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.228561349213123e-05
    2. '0' → logprob: -10.500052452087402
    3. '(nd' → logprob: -10.750052452087402
    4. '(w' → logprob: -13.875052452087402
    5. '```' → logprob: -14.000052452087402
    6. '(cd' → logprob: -14.125052452087402
    7. '(
' → logprob: -15.125052452087402
    8. ' (' → logprob: -15.250052452087402
    9. '(n' → logprob: -15.875052452087402
    10. '`' → logprob: -17.000051498413086

Token 577: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013584480620920658
    2. 'c' → logprob: -7.376358509063721
    3. ' ' → logprob: -7.751358509063721
    4. 'w' → logprob: -8.251358032226562
    5. ' c' → logprob: -11.251358032226562
    6. ' w' → logprob: -12.001358032226562
    7. '(' → logprob: -12.251358032226562
    8. '   ' → logprob: -12.376358032226562
    9. 'cd' → logprob: -12.501358032226562
    10. '(w' → logprob: -13.501358032226562

Token 578: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06273937225341797
    2. ',w' → logprob: -2.812739372253418
    3. ' ,' → logprob: -8.312739372253418
    4. ',(' → logprob: -8.937739372253418
    5. '),' → logprob: -9.437739372253418
    6. '               ' → logprob: -9.562739372253418
    7. ',n' → logprob: -9.687739372253418
    8. '0' → logprob: -9.937739372253418
    9. 'w' → logprob: -10.187739372253418
    10. '(w' → logprob: -10.937739372253418

Token 579: ' c' (ID: 274)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.11516492068767548
    2. 'c' → logprob: -2.2401649951934814
    3. ' w' → logprob: -6.740164756774902
    4. ' c' → logprob: -7.865164756774902
    5. '0' → logprob: -7.990164756774902
    6. ')c' → logprob: -9.115164756774902
    7. 'cd' → logprob: -9.615164756774902
    8. '(w' → logprob: -9.740164756774902
    9. '(c' → logprob: -9.865164756774902
    10. ')' → logprob: -9.990164756774902

Token 580: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.28478533029556274
    2. '-' → logprob: -1.409785270690918
    3. '-w' → logprob: -5.909785270690918
    4. '-dist' → logprob: -7.909785270690918
    5. '-c' → logprob: -8.159785270690918
    6. '-n' → logprob: -9.784785270690918
    7. '   ' → logprob: -10.409785270690918
    8. '-d' → logprob: -10.659785270690918
    9. ' ' → logprob: -10.659785270690918
    10. '-(' → logprob: -10.909785270690918

Token 581: ' (' (ID: 350)
  Prédit: '(cd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cd' → logprob: -0.5317976474761963
    2. 'cd' → logprob: -1.1567976474761963
    3. '(nd' → logprob: -2.7817976474761963
    4. 'nd' → logprob: -4.156797409057617
    5. 'dist' → logprob: -5.281797409057617
    6. ' (' → logprob: -5.406797409057617
    7. '(dist' → logprob: -5.531797409057617
    8. ' cd' → logprob: -5.906797409057617
    9. '(c' → logprob: -6.406797409057617
    10. ' nd' → logprob: -6.781797409057617

Token 582: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.32720479369163513
    2. 'nd' → logprob: -1.5772048234939575
    3. '(cd' → logprob: -2.952204704284668
    4. '(nd' → logprob: -4.452204704284668
    5. 'dist' → logprob: -4.952204704284668
    6. '(dist' → logprob: -7.077204704284668
    7. '(' → logprob: -8.327204704284668
    8. '(c' → logprob: -8.577204704284668
    9. ' nd' → logprob: -9.202204704284668
    10. '(n' → logprob: -9.827204704284668

Token 583: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07772719115018845
    2. '-' → logprob: -2.8277270793914795
    3. ')' → logprob: -4.702727317810059
    4. '+' → logprob: -5.577727317810059
    5. '))' → logprob: -7.202727317810059
    6. ')-' → logprob: -7.327727317810059
    7. ')-(' → logprob: -7.452727317810059
    8. ' +' → logprob: -7.827727317810059
    9. '-v' → logprob: -9.327727317810059
    10. '),' → logprob: -9.952727317810059

Token 584: ' sum' (ID: 4215)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.3159158527851105
    2. '(dist' → logprob: -1.815915822982788
    3. 'w' → logprob: -3.190915822982788
    4. '(nd' → logprob: -3.690915822982788
    5. 'nd' → logprob: -3.940915822982788
    6. '(w' → logprob: -5.190916061401367
    7. ' dist' → logprob: -5.565916061401367
    8. ' (' → logprob: -5.565916061401367
    9. '(' → logprob: -6.065916061401367
    10. '(c' → logprob: -6.190916061401367

Token 585: '_of' (ID: 8023)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.5823895931243896
    2. '(w' → logprob: -2.8323895931243896
    3. ' -' → logprob: -3.0823895931243896
    4. ')' → logprob: -3.0823895931243896
    5. '_w' → logprob: -3.4573895931243896
    6. 'of' → logprob: -3.4573895931243896
    7. '[' → logprob: -3.4573895931243896
    8. '-' → logprob: -3.5823895931243896
    9. '[w' → logprob: -3.9573895931243896
    10. '-w' → logprob: -4.082389831542969

Token 586: '_rest' (ID: 70749)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.07483700662851334
    2. '[w' → logprob: -4.1998372077941895
    3. '(w' → logprob: -4.3248372077941895
    4. 'dist' → logprob: -4.5748372077941895
    5. 'rest' → logprob: -5.1998372077941895
    6. ' w' → logprob: -5.1998372077941895
    7. 'heap' → logprob: -5.5748372077941895
    8. 'other' → logprob: -6.1998372077941895
    9. '(heap' → logprob: -6.3248372077941895
    10. '[' → logprob: -6.3248372077941895

Token 587: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.6537766456604004
    2. ' +' → logprob: -1.7787766456604004
    3. '+' → logprob: -2.0287766456604004
    4. ' -' → logprob: -2.5287766456604004
    5. '_edges' → logprob: -3.1537766456604004
    6. ')' → logprob: -4.0287766456604
    7. '_of' → logprob: -5.2787766456604
    8. 'w' → logprob: -5.2787766456604
    9. 'edges' → logprob: -5.6537766456604
    10. '-' → logprob: -5.6537766456604

Token 588: ' but' (ID: 889)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00388926500454545
    2. '                   ' → logprob: -6.878889083862305
    3. '                
' → logprob: -7.378889083862305
    4. '                ' → logprob: -7.753889083862305
    5. ':' → logprob: -8.003889083862305
    6. ':
' → logprob: -8.628889083862305
    7. ' and' → logprob: -8.628889083862305
    8. ',' → logprob: -9.003889083862305
    9. '			' → logprob: -9.128889083862305
    10. '           ' → logprob: -9.128889083862305

Token 589: ' we' (ID: 581)
  Prédit: ' ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ch' → logprob: -0.7135171890258789
    2. ' w' → logprob: -1.463517189025879
    3. 'ch' → logprob: -1.963517189025879
    4. 'w' → logprob: -2.713517189025879
    5. ' not' → logprob: -3.088517189025879
    6. ' cd' → logprob: -4.838517189025879
    7. 'not' → logprob: -5.463517189025879
    8. 'cd' → logprob: -5.838517189025879
    9. ' nd' → logprob: -5.838517189025879
    10. '...' → logprob: -6.713517189025879

Token 590: ' only' (ID: 1606)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.3180598020553589
    2. 'continue' → logprob: -1.8180598020553589
    3. '<' → logprob: -3.3180599212646484
    4. '+' → logprob: -3.9430599212646484
    5. ' <' → logprob: -4.068059921264648
    6. '<v' → logprob: -4.943059921264648
    7. '<=' → logprob: -5.568059921264648
    8. '...' → logprob: -5.818059921264648
    9. ')' → logprob: -6.193059921264648
    10. ' <=' → logprob: -6.318059921264648

Token 591: ' know' (ID: 1761)
  Prédit: 'know'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'know' → logprob: -0.4248429238796234
    2. 'can' → logprob: -1.5498429536819458
    3. ' know' → logprob: -3.0498428344726562
    4. 'consider' → logprob: -3.9248428344726562
    5. ' can' → logprob: -4.049842834472656
    6. 'need' → logprob: -4.174842834472656
    7. 'continue' → logprob: -4.549842834472656
    8. 'have' → logprob: -5.299842834472656
    9. 'if' → logprob: -5.674842834472656
    10. ' need' → logprob: -5.924842834472656

Token 592: ' cd' (ID: 24852)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.26132017374038696
    2. '               ' → logprob: -2.511320114135742
    3. 'if' → logprob: -2.636320114135742
    4. '```' → logprob: -3.511320114135742
    5. ' that' → logprob: -5.011320114135742
    6. '                ' → logprob: -5.261320114135742
    7. '...' → logprob: -5.511320114135742
    8. 'that' → logprob: -5.636320114135742
    9. ' w' → logprob: -5.761320114135742
    10. '                   ' → logprob: -5.886320114135742

Token 593: ' and' (ID: 326)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.34107232093811035
    2. '+' → logprob: -1.4660723209381104
    3. ' and' → logprob: -3.2160723209381104
    4. '               ' → logprob: -4.966072082519531
    5. 'and' → logprob: -5.466072082519531
    6. '                   ' → logprob: -5.716072082519531
    7. '           ' → logprob: -6.841072082519531
    8. ',' → logprob: -8.091072082519531
    9. ')' → logprob: -8.216072082519531
    10. '                ' → logprob: -8.341072082519531

Token 594: ' w' (ID: 286)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.77459716796875
    2. 'w' → logprob: -0.89959716796875
    3. '1' → logprob: -3.02459716796875
    4. ' w' → logprob: -3.64959716796875
    5. 'c' → logprob: -4.14959716796875
    6. 'v' → logprob: -4.89959716796875
    7. ' ch' → logprob: -5.14959716796875
    8. '0' → logprob: -5.27459716796875
    9. ' c' → logprob: -5.27459716796875
    10. ')' → logprob: -5.64959716796875

Token 595: ' now' (ID: 1954)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0034261581022292376
    2. '                   ' → logprob: -6.3784260749816895
    3. '                ' → logprob: -7.2534260749816895
    4. ',' → logprob: -8.253426551818848
    5. '                
' → logprob: -8.253426551818848
    6. '			' → logprob: -9.378426551818848
    7. '           ' → logprob: -9.503426551818848
    8. ' and' → logprob: -10.003426551818848
    9. '              ' → logprob: -10.128426551818848
    10. ' if' → logprob: -10.753426551818848

Token 596: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0020279695745557547
    2. '                   ' → logprob: -6.752027988433838
    3. '                ' → logprob: -8.12702751159668
    4. ',' → logprob: -8.75202751159668
    5. '           ' → logprob: -9.37702751159668
    6. '                
' → logprob: -9.62702751159668
    7. '<|end|>' → logprob: -9.87702751159668
    8. '              ' → logprob: -10.00202751159668
    9. ':' → logprob: -10.62702751159668
    10. '       ' → logprob: -11.00202751159668

Token 597: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001783475512638688
    2. '                   ' → logprob: -6.62678337097168
    3. '                ' → logprob: -8.87678337097168
    4. '```' → logprob: -9.75178337097168
    5. '              ' → logprob: -10.00178337097168
    6. ',' → logprob: -10.00178337097168
    7. '<|end|>' → logprob: -10.50178337097168
    8. '           ' → logprob: -10.50178337097168
    9. ' if' → logprob: -10.62678337097168
    10. '                       ' → logprob: -10.87678337097168

Token 598: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003206234658136964
    2. '                ' → logprob: -5.878206253051758
    3. '                   ' → logprob: -8.253206253051758
    4. '              ' → logprob: -10.378206253051758
    5. ' if' → logprob: -10.628206253051758
    6. '                
' → logprob: -11.253206253051758
    7. '           ' → logprob: -11.378206253051758
    8. '			' → logprob: -11.628206253051758
    9. '       ' → logprob: -11.753206253051758
    10. ' ' → logprob: -11.753206253051758

Token 599: ' ch' (ID: 549)
  Prédit: ' ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ch' → logprob: -0.7139118313789368
    2. ' w' → logprob: -1.088911771774292
    3. 'w' → logprob: -2.338911771774292
    4. 'ch' → logprob: -2.588911771774292
    5. ' cd' → logprob: -6.713912010192871
    6. 'cd' → logprob: -8.088912010192871
    7. '   ' → logprob: -8.963912010192871
    8. '(ch' → logprob: -8.963912010192871
    9. '  ' → logprob: -9.338912010192871
    10. ' ' → logprob: -9.338912010192871

Token 600: '+' (ID: 10)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.580236554145813
    2. '+' → logprob: -0.830236554145813
    3. ' <' → logprob: -5.580236434936523
    4. '<' → logprob: -7.580236434936523
    5. ' ' → logprob: -13.455236434936523
    6. ' ' → logprob: -13.455236434936523
    7. '<len' → logprob: -14.455236434936523
    8. '<int' → logprob: -14.580236434936523
    9. '＋' → logprob: -15.205236434936523
    10. '   ' → logprob: -15.330236434936523

Token 601: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004879915213678032
    2. ' ' → logprob: -7.625487804412842
    3. '   ' → logprob: -17.50048828125
    4. '
' → logprob: -18.62548828125
    5. '```' → logprob: -18.75048828125
    6. '  ' → logprob: -18.87548828125
    7. '<|end|>' → logprob: -20.25048828125
    8. '    ' → logprob: -21.37548828125
    9. '+' → logprob: -21.50048828125
    10. ' 
' → logprob: -21.75048828125

Token 602: '<=' (ID: 16672)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.05499150976538658
    2. '<=' → logprob: -2.9299914836883545
    3. ' <' → logprob: -9.304991722106934
    4. '<' → logprob: -11.304991722106934
    5. ')<=' → logprob: -12.929991722106934
    6. ' ' → logprob: -13.679991722106934
    7. ']<=' → logprob: -14.429991722106934
    8. ' ≤' → logprob: -14.929991722106934
    9. ')' → logprob: -15.054991722106934
    10. '<len' → logprob: -15.179991722106934

Token 603: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.10114283114671707
    2. 'max' → logprob: -2.3511428833007812
    3. ' max' → logprob: -7.101142883300781
    4. ' m' → logprob: -9.101142883300781
    5. '   ' → logprob: -16.85114288330078
    6. ' ' → logprob: -18.10114288330078
    7. '	m' → logprob: -18.72614288330078
    8. '	max' → logprob: -18.72614288330078
    9. 'maks' → logprob: -18.97614288330078
    10. '
' → logprob: -19.60114288330078

Token 604: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.007046286948025227
    2. ':
' → logprob: -5.632046222686768
    3. 'and' → logprob: -6.382046222686768
    4. ':' → logprob: -6.382046222686768
    5. '               ' → logprob: -10.382046699523926
    6. '           ' → logprob: -11.132046699523926
    7. '	and' → logprob: -13.257046699523926
    8. '                   ' → logprob: -13.882046699523926
    9. ',' → logprob: -14.007046699523926
    10. ' ' → logprob: -14.132046699523926

Token 605: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01946546882390976
    2. '               ' → logprob: -4.769465446472168
    3. '                    
' → logprob: -5.519465446472168
    4. ',' → logprob: -6.394465446472168
    5. ' and' → logprob: -6.644465446472168
    6. '                       ' → logprob: -6.644465446472168
    7. '<|end|>' → logprob: -7.519465446472168
    8. '                        
' → logprob: -7.769465446472168
    9. '                ' → logprob: -8.519465446472168
    10. '           ' → logprob: -8.769465446472168

Token 606: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.49157461524009705
    2. 'nd' → logprob: -1.9915746450424194
    3. ' new' → logprob: -1.9915746450424194
    4. ' nd' → logprob: -3.74157452583313
    5. 'max' → logprob: -3.99157452583313
    6. 're' → logprob: -4.616574764251709
    7. 'if' → logprob: -4.616574764251709
    8. ' reduced' → logprob: -4.616574764251709
    9. '#' (adapté à ' #') → logprob: -5.116574764251709
    10. ' if' → logprob: -5.491574764251709

Token 607: ' we' (ID: 581)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.23240624368190765
    2. 're' → logprob: -2.3574061393737793
    3. 'nd' → logprob: -3.4824061393737793
    4. 'max' → logprob: -3.7324061393737793
    5. 'if' → logprob: -4.232406139373779
    6. '   ' → logprob: -4.357406139373779
    7. 'reduce' → logprob: -4.857406139373779
    8. 'min' → logprob: -5.482406139373779
    9. '#' → logprob: -5.607406139373779
    10. 'change' → logprob: -5.857406139373779

Token 608: ' can' (ID: 665)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.47028061747550964
    2. ' can' → logprob: -1.970280647277832
    3. ' =' → logprob: -2.345280647277832
    4. '=' → logprob: -2.970280647277832
    5. '                       ' → logprob: -4.345280647277832
    6. 'can' → logprob: -4.345280647277832
    7. '
' → logprob: -4.470280647277832
    8. '#' → logprob: -4.595280647277832
    9. '               ' → logprob: -5.095280647277832
    10. 'w' → logprob: -5.720280647277832

Token 609: ' set' (ID: 920)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -1.301143765449524
    2. 'set' → logprob: -1.801143765449524
    3. ' try' → logprob: -1.926143765449524
    4. ' reduce' → logprob: -2.0511436462402344
    5. ' set' → logprob: -2.0511436462402344
    6. 'try' → logprob: -2.8011436462402344
    7. 'choose' → logprob: -3.1761436462402344
    8. 'change' → logprob: -3.6761436462402344
    9. ' change' → logprob: -4.301143646240234
    10. ' choose' → logprob: -4.676143646240234

Token 610: ' edge' (ID: 11165)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.6624019145965576
    2. ' new' → logprob: -0.9124019145965576
    3. 'nv' → logprob: -4.287402153015137
    4. 'nw' → logprob: -4.287402153015137
    5. 'edge' → logprob: -4.662402153015137
    6. ' nw' → logprob: -4.787402153015137
    7. ' nv' → logprob: -5.037402153015137
    8. ' nd' → logprob: -5.037402153015137
    9. ' reduced' → logprob: -5.162402153015137
    10. 'nd' → logprob: -5.537402153015137

Token 611: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.23626410961151123
    2. ' cost' → logprob: -1.6112641096115112
    3. '_cost' → logprob: -4.611264228820801
    4. 'w' → logprob: -7.736264228820801
    5. ' w' → logprob: -9.3612642288208
    6. '                   ' → logprob: -9.4862642288208
    7. '=' → logprob: -9.7362642288208
    8. 'weight' → logprob: -9.9862642288208
    9. '-cost' → logprob: -10.4862642288208
    10. ',' → logprob: -10.8612642288208

Token 612: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3138061463832855
    2. ' =' → logprob: -1.313806176185608
    3. '=max' → logprob: -7.813806056976318
    4. '=min' → logprob: -10.438806533813477
    5. 'to' → logprob: -10.813806533813477
    6. '=
' → logprob: -11.188806533813477
    7. ',' → logprob: -11.313806533813477
    8. 'new' → logprob: -11.438806533813477
    9. ' to' → logprob: -11.688806533813477
    10. '=w' → logprob: -11.813806533813477

Token 613: ' c' (ID: 274)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.231523796916008
    2. 'max' → logprob: -1.6065237522125244
    3. 'c' → logprob: -5.4815239906311035
    4. ' max' → logprob: -6.4815239906311035
    5. ' ' → logprob: -8.981523513793945
    6. 'min' → logprob: -9.731523513793945
    7. ' c' → logprob: -9.856523513793945
    8. 'nd' → logprob: -10.106523513793945
    9. 'cd' → logprob: -10.106523513793945
    10. '
' → logprob: -11.106523513793945

Token 614: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.02187984436750412
    2. '-' → logprob: -3.8968799114227295
    3. '-w' → logprob: -6.64687967300415
    4. '-n' → logprob: -11.896880149841309
    5. '-c' → logprob: -12.521880149841309
    6. '-v' → logprob: -12.771880149841309
    7. '   ' → logprob: -13.271880149841309
    8. '-d' → logprob: -13.521880149841309
    9. ',' → logprob: -13.521880149841309
    10. '           ' → logprob: -13.646880149841309

Token 615: ' cd' (ID: 24852)
  Prédit: 'cd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.29462307691574097
    2. '(cd' → logprob: -1.4196231365203857
    3. '(nd' → logprob: -4.919622898101807
    4. 'nd' → logprob: -5.794622898101807
    5. ' cd' → logprob: -7.044622898101807
    6. '(c' → logprob: -7.044622898101807
    7. ' (' → logprob: -7.294622898101807
    8. '(' → logprob: -8.294623374938965
    9. 'c' → logprob: -9.044623374938965
    10. '(n' → logprob: -10.169623374938965

Token 616: ' if' (ID: 538)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.302114337682724
    2. '-' → logprob: -1.5521143674850464
    3. '                   ' → logprob: -3.177114248275757
    4. '                       ' → logprob: -6.552114486694336
    5. '                           ' → logprob: -6.802114486694336
    6. '               ' → logprob: -7.302114486694336
    7. '                               ' → logprob: -7.427114486694336
    8. ',' → logprob: -7.427114486694336
    9. ')' → logprob: -8.177114486694336
    10. ' ' → logprob: -8.177114486694336

Token 617: ' >=' (ID: 5064)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.4852685034275055
    2. 'c' → logprob: -1.235268473625183
    3. '0' → logprob: -2.7352685928344727
    4. ' ' → logprob: -4.360268592834473
    5. ' (' → logprob: -5.235268592834473
    6. 'w' → logprob: -5.860268592834473
    7. ' w' → logprob: -6.110268592834473
    8. ' max' → logprob: -6.360268592834473
    9. 'max' → logprob: -6.610268592834473
    10. '(c' → logprob: -6.610268592834473

Token 618: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.300083648762666e-05
    2. ' ' → logprob: -9.875053405761719
    3. '```' → logprob: -13.750053405761719
    4. '1' → logprob: -15.125053405761719
    5. '   ' → logprob: -16.37505340576172
    6. ' ' → logprob: -17.50005340576172
    7. '`' → logprob: -17.75005340576172
    8. 'w' → logprob: -18.12505340576172
    9. '-' → logprob: -18.50005340576172
    10. '                   ' → logprob: -18.81255340576172

Token 619: ' and' (ID: 326)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0016104355454444885
    2. ',' → logprob: -7.501610279083252
    3. ' and' → logprob: -7.501610279083252
    4. '               ' → logprob: -9.00161075592041
    5. '                       ' → logprob: -9.12661075592041
    6. '				' → logprob: -9.25161075592041
    7. '		           ' → logprob: -9.87661075592041
    8. '	                   ' → logprob: -11.25161075592041
    9. '	               ' → logprob: -11.37661075592041
    10. '                    
' → logprob: -11.37661075592041

Token 620: ' <=' (ID: 5017)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.13306333124637604
    2. ' c' → logprob: -2.133063316345215
    3. 'cd' → logprob: -5.758063316345215
    4. ' cd' → logprob: -6.633063316345215
    5. '<=' → logprob: -7.258063316345215
    6. ' <=' → logprob: -8.383063316345215
    7. '                           ' → logprob: -8.633063316345215
    8. '                               ' → logprob: -9.508063316345215
    9. '                       ' → logprob: -9.508063316345215
    10. '                   ' → logprob: -9.508063316345215

Token 621: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0002615742268972099
    2. ' w' → logprob: -8.250261306762695
    3. 'nd' → logprob: -16.000261306762695
    4. '	w' → logprob: -16.625261306762695
    5. '<w' → logprob: -16.875261306762695
    6. '=w' → logprob: -17.125261306762695
    7. '   ' → logprob: -17.250261306762695
    8. '```' → logprob: -17.500261306762695
    9. 'wd' → logprob: -17.625261306762695
    10. '_w' → logprob: -17.875261306762695

Token 622: ' to' (ID: 316)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005015171132981777
    2. ' and' → logprob: -6.2550153732299805
    3. '               ' → logprob: -6.8800153732299805
    4. ',' → logprob: -7.3800153732299805
    5. '                       ' → logprob: -7.3800153732299805
    6. ' if' → logprob: -8.50501537322998
    7. ':' → logprob: -9.13001537322998
    8. '                    
' → logprob: -9.38001537322998
    9. ':
' → logprob: -9.88001537322998
    10. '				' → logprob: -10.00501537322998

Token 623: ' reduce' (ID: 10389)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.004163637757301331
    2. ' w' → logprob: -5.50416374206543
    3. 'min' → logprob: -11.00416374206543
    4. 'c' → logprob: -11.25416374206543
    5. 'max' → logprob: -11.25416374206543
    6. '```' → logprob: -11.50416374206543
    7. ' min' → logprob: -12.12916374206543
    8. 'continue' → logprob: -13.00416374206543
    9. '<|end|>' → logprob: -13.00416374206543
    10. ' reduce' → logprob: -13.12916374206543

Token 624: ' cost' (ID: 3097)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.9660201668739319
    2. 'cost' → logprob: -1.341020107269287
    3. '                   ' → logprob: -1.716020107269287
    4. 'edge' → logprob: -2.466020107269287
    5. 'if' → logprob: -3.341020107269287
    6. ' new' → logprob: -4.716020107269287
    7. ' if' → logprob: -4.841020107269287
    8. '               ' → logprob: -5.341020107269287
    9. 'possible' → logprob: -5.341020107269287
    10. ' cost' → logprob: -5.466020107269287

Token 625: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0033530937507748604
    2. ',' → logprob: -6.628353118896484
    3. ' and' → logprob: -7.378353118896484
    4. '               ' → logprob: -7.503353118896484
    5. '                       ' → logprob: -7.753353118896484
    6. ' if' → logprob: -9.503353118896484
    7. ':' → logprob: -9.753353118896484
    8. '		           ' → logprob: -10.003353118896484
    9. '	               ' → logprob: -10.253353118896484
    10. '                    
' → logprob: -10.503353118896484

Token 626: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0004166105354670435
    2. '               ' → logprob: -8.12541675567627
    3. '                       ' → logprob: -9.62541675567627
    4. ',' → logprob: -10.50041675567627
    5. '           ' → logprob: -12.12541675567627
    6. ' and' → logprob: -12.25041675567627
    7. '                    
' → logprob: -12.50041675567627
    8. '                    ' → logprob: -12.62541675567627
    9. '		           ' → logprob: -13.37541675567627
    10. '       ' → logprob: -13.75041675567627

Token 627: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.25798049569129944
    2. ' new' → logprob: -1.757980465888977
    3. 're' → logprob: -4.0079803466796875
    4. ' reduced' → logprob: -4.7579803466796875
    5. 'cost' → logprob: -5.5079803466796875
    6. '                   ' → logprob: -5.8829803466796875
    7. ' nw' → logprob: -6.1329803466796875
    8. 'nw' → logprob: -6.1329803466796875
    9. 'reduce' → logprob: -6.2579803466796875
    10. 'red' → logprob: -6.2579803466796875

Token 628: '_w' (ID: 3567)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.2561764717102051
    2. '_w' → logprob: -1.506176471710205
    3. 'cost' → logprob: -5.881176471710205
    4. '_c' → logprob: -7.131176471710205
    5. '_edge' → logprob: -7.881176471710205
    6. '_weight' → logprob: -8.756175994873047
    7. 'w' → logprob: -9.631175994873047
    8. '_dist' → logprob: -11.756175994873047
    9. 'Cost' → logprob: -12.006175994873047
    10. '_price' → logprob: -12.381175994873047

Token 629: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020958632230759
    2. ' =' → logprob: -2.3502094745635986
    3. '=c' → logprob: -13.10020923614502
    4. '=max' → logprob: -14.47520923614502
    5. ' ' → logprob: -16.100210189819336
    6. '=int' → logprob: -16.475210189819336
    7. '＝' → logprob: -17.100210189819336
    8. ')' → logprob: -18.100210189819336
    9. '=

' → logprob: -18.350210189819336
    10. '=}' → logprob: -18.350210189819336

Token 630: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6279160976409912
    2. 'max' → logprob: -1.1279160976409912
    3. ' max' → logprob: -2.127916097640991
    4. ' c' → logprob: -3.752916097640991
    5. '   ' → logprob: -10.75291633605957
    6. 'min' → logprob: -10.87791633605957
    7. ' ' → logprob: -12.25291633605957
    8. ' min' → logprob: -12.50291633605957
    9. '	c' → logprob: -13.00291633605957
    10. '	max' → logprob: -13.75291633605957

Token 631: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.16023863852024078
    2. '-' → logprob: -1.9102386236190796
    3. '   ' → logprob: -11.785238265991211
    4. '-c' → logprob: -12.785238265991211
    5. ' ' → logprob: -13.285238265991211
    6. '	cd' → logprob: -14.285238265991211
    7. '	' → logprob: -14.410238265991211
    8. '-CD' → logprob: -15.410238265991211
    9. '  ' → logprob: -15.660238265991211
    10. '       ' → logprob: -15.785238265991211

Token 632: ' cd' (ID: 24852)
  Prédit: 'cd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -1.1517960956552997e-05
    2. ' cd' → logprob: -11.750011444091797
    3. '(cd' → logprob: -12.625011444091797
    4. '	cd' → logprob: -15.875011444091797
    5. '_cd' → logprob: -16.500011444091797
    6. 'cdn' → logprob: -19.875011444091797
    7. 'nd' → logprob: -20.000011444091797
    8. 'Cd' → logprob: -21.125011444091797
    9. '.cd' → logprob: -21.375011444091797
    10. 'xcd' → logprob: -22.375011444091797

Token 633: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9985289573669434
    2. '<|end|>' → logprob: -1.4985289573669434
    3. '
' → logprob: -1.6235289573669434
    4. '                   ' → logprob: -1.8735289573669434
    5. 'if' → logprob: -3.2485289573669434
    6. '<|end|>' → logprob: -5.623528957366943
    7. '                    
' → logprob: -5.873528957366943
    8. ' 
' → logprob: -6.123528957366943
    9. '	if' → logprob: -6.248528957366943
    10. '  
' → logprob: -6.623528957366943

Token 634: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.028981398791074753
    2. ' if' → logprob: -3.7789814472198486
    3. 'if' → logprob: -5.7789812088012695
    4. '<|end|>' → logprob: -6.7789812088012695
    5. '               ' → logprob: -7.4039812088012695
    6. '				' → logprob: -9.15398120880127
    7. '                    
' → logprob: -9.40398120880127
    8. '		           ' → logprob: -9.40398120880127
    9. '	if' → logprob: -9.40398120880127
    10. '	               ' → logprob: -9.52898120880127

Token 635: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2523218095302582
    2. ' if' → logprob: -1.5023218393325806
    3. '                   ' → logprob: -8.50232219696045
    4. ' and' → logprob: -9.50232219696045
    5. '>=' → logprob: -10.00232219696045
    6. 'and' → logprob: -10.12732219696045
    7. '<=' → logprob: -11.87732219696045
    8. '	if' → logprob: -12.00232219696045
    9. ' >=' → logprob: -12.75232219696045
    10. ' ' → logprob: -13.12732219696045

Token 636: ' new' (ID: 620)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00218392675742507
    2. 'new' → logprob: -6.25218391418457
    3. ' ' → logprob: -8.37718391418457
    4. ' new' → logprob: -10.75218391418457
    5. '                   ' → logprob: -13.12718391418457
    6. '                       ' → logprob: -14.62718391418457
    7. '                           ' → logprob: -15.25218391418457
    8. '   ' → logprob: -15.37718391418457
    9. '                               ' → logprob: -15.62718391418457
    10. '                                   ' → logprob: -16.62718391418457

Token 637: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.0037655243650078773
    2. 'w' → logprob: -5.62876558303833
    3. ' _' → logprob: -9.378765106201172
    4. 'new' → logprob: -10.253765106201172
    5. ' w' → logprob: -11.878765106201172
    6. ' new' → logprob: -11.878765106201172
    7. ' ' → logprob: -12.003765106201172
    8. '>=' → logprob: -12.003765106201172
    9. '>' → logprob: -12.503765106201172
    10. '_' → logprob: -13.253765106201172

Token 638: ' <' (ID: 464)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.006489054299890995
    2. ' >=' → logprob: -5.131489276885986
    3. '<=' → logprob: -7.506489276885986
    4. ' <=' → logprob: -12.381488800048828
    5. '>' → logprob: -13.131488800048828
    6. ')>=' → logprob: -13.506488800048828
    7. '0' → logprob: -13.881488800048828
    8. '!=' → logprob: -14.381488800048828
    9. ' is' → logprob: -14.756488800048828
    10. ']>=' → logprob: -15.006488800048828

Token 639: '0' (ID: 15)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0012177363969385624
    2. '=w' → logprob: -6.876217842102051
    3. '0' → logprob: -9.00121784210205
    4. 'w' → logprob: -9.87621784210205
    5. '=
' → logprob: -12.00121784210205
    6. '=_' → logprob: -13.62621784210205
    7. '=

' → logprob: -14.75121784210205
    8. '=min' → logprob: -14.87621784210205
    9. '=max' → logprob: -14.87621784210205
    10. ' =' → logprob: -15.12621784210205

Token 640: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.35466286540031433
    2. ':' → logprob: -1.8546628952026367
    3. ' and' → logprob: -2.6046628952026367
    4. 'or' → logprob: -3.7296628952026367
    5. 'and' → logprob: -3.8546628952026367
    6. ':
' → logprob: -3.9796628952026367
    7. '<|end|>' → logprob: -6.354662895202637
    8. '                       ' → logprob: -6.854662895202637
    9. ' ' → logprob: -8.729662895202637
    10. '                   ' → logprob: -8.854662895202637

Token 641: '                       ' (ID: 968)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.24960318207740784
    2. '                       ' → logprob: -2.374603271484375
    3. 'continue' → logprob: -2.874603271484375
    4. '                   ' → logprob: -3.124603271484375
    5. ' new' → logprob: -3.749603271484375
    6. ' continue' → logprob: -5.749603271484375
    7. '               ' → logprob: -7.999603271484375
    8. '                           ' → logprob: -9.249603271484375
    9. ' or' → logprob: -10.249603271484375
    10. '```' → logprob: -10.249603271484375

Token 642: ' new' (ID: 620)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.000988030806183815
    2. ' continue' → logprob: -7.250988006591797
    3. '                   ' → logprob: -9.000988006591797
    4. 'new' (adapté à ' new') → logprob: -9.000988006591797
    5. '                       ' → logprob: -10.625988006591797
    6. 'pass' → logprob: -12.250988006591797
    7. '   ' → logprob: -13.875988006591797
    8. '                           ' → logprob: -14.625988006591797
    9. '               ' → logprob: -15.000988006591797
    10. '	continue' → logprob: -15.000988006591797

Token 643: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.41194018721580505
    2. 'continue' → logprob: -1.2869402170181274
    3. 'w' → logprob: -3.286940097808838
    4. ' continue' → logprob: -3.786940097808838
    5. '               ' → logprob: -7.536940097808838
    6. '                   ' → logprob: -8.661940574645996
    7. '   ' → logprob: -8.661940574645996
    8. '           ' → logprob: -8.911940574645996
    9. '       ' → logprob: -9.286940574645996
    10. '_' → logprob: -9.286940574645996

Token 644: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02807169407606125
    2. ' =' → logprob: -4.403071880340576
    3. 'continue' → logprob: -4.653071880340576
    4. ' continue' → logprob: -5.778071880340576
    5. '	continue' → logprob: -6.403071880340576
    6. '==' → logprob: -7.528071880340576
    7. '                   ' → logprob: -9.028071403503418
    8. '           ' → logprob: -9.153071403503418
    9. '               ' → logprob: -9.528071403503418
    10. '   ' → logprob: -9.903071403503418

Token 645: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -18.250036239624023
    4. '<|end|>' → logprob: -18.375036239624023
    5. 'w' → logprob: -19.250036239624023
    6. '  ' → logprob: -19.625036239624023
    7. '۰' → logprob: -19.750036239624023
    8. '```' → logprob: -19.750036239624023
    9. '=' → logprob: -20.000036239624023
    10. ')' → logprob: -20.625036239624023

Token 646: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00887738261371851
    2. '               ' → logprob: -5.258877277374268
    3. '
' → logprob: -6.383877277374268
    4. '<|end|>' → logprob: -7.258877277374268
    5. '                    
' → logprob: -8.508877754211426
    6. '           ' → logprob: -8.758877754211426
    7. '                    ' → logprob: -9.133877754211426
    8. '				' → logprob: -9.133877754211426
    9. '                        
' → logprob: -9.508877754211426
    10. '                ' → logprob: -9.508877754211426

Token 647: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01165434904396534
    2. '               ' → logprob: -4.511654376983643
    3. '                       ' → logprob: -8.636653900146484
    4. '                    ' → logprob: -9.511653900146484
    5. '           ' → logprob: -9.886653900146484
    6. '```' → logprob: -9.886653900146484
    7. '                ' → logprob: -10.011653900146484
    8. ' and' → logprob: -10.011653900146484
    9. '<|end|>' → logprob: -10.261653900146484
    10. '                  ' → logprob: -10.636653900146484

Token 648: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7347656488418579
    2. ' if' → logprob: -1.234765648841858
    3. '                   ' → logprob: -2.1097655296325684
    4. 'and' → logprob: -2.8597655296325684
    5. ' and' → logprob: -2.9847655296325684
    6. '               ' → logprob: -8.734766006469727
    7. '```' → logprob: -8.859766006469727
    8. '   ' → logprob: -11.234766006469727
    9. '
' → logprob: -11.484766006469727
    10. '                    ' → logprob: -11.734766006469727

Token 649: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.16023652255535126
    2. ' new' → logprob: -1.9102364778518677
    3. 'w' → logprob: -11.660236358642578
    4. ' w' → logprob: -13.785236358642578
    5. '0' → logprob: -14.160236358642578
    6. '   ' → logprob: -14.285236358642578
    7. '                   ' → logprob: -14.910236358642578
    8. ' ' → logprob: -15.410236358642578
    9. '	new' → logprob: -16.160236358642578
    10. '```' → logprob: -16.410236358642578

Token 650: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.0001093841710826382
    2. 'w' → logprob: -9.125109672546387
    3. 'new' → logprob: -15.375109672546387
    4. '```' → logprob: -17.12510871887207
    5. '<=' → logprob: -17.75010871887207
    6. '_' → logprob: -17.75010871887207
    7. '\' → logprob: -18.25010871887207
    8. 'W' → logprob: -18.37510871887207
    9. '_new' → logprob: -18.56260871887207
    10. '_weight' → logprob: -18.81260871887207

Token 651: ' <' (ID: 464)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.16022838652133942
    2. ' <=' → logprob: -1.9102283716201782
    3. '<' → logprob: -13.535228729248047
    4. '>=' → logprob: -14.535228729248047
    5. ')<=' → logprob: -14.535228729248047
    6. 'w' → logprob: -14.785228729248047
    7. '<w' → logprob: -14.910228729248047
    8. ' ' → logprob: -15.410228729248047
    9. ']<=' → logprob: -15.410228729248047
    10. '```' → logprob: -15.535228729248047

Token 652: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.14653296768665314
    2. '=' → logprob: -2.1465330123901367
    3. '=w' → logprob: -4.021533012390137
    4. ' w' → logprob: -6.521533012390137
    5. ' =' → logprob: -11.396533012390137
    6. '=
' → logprob: -12.521533012390137
    7. '_w' → logprob: -15.271533012390137
    8. '	w' → logprob: -15.396533012390137
    9. '=

' → logprob: -15.521533012390137
    10. '=int' → logprob: -15.771533012390137

Token 653: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5188410878181458
    2. ' and' → logprob: -1.018841028213501
    3. ':
' → logprob: -3.518841028213501
    4. '                       ' → logprob: -4.64384126663208
    5. '                   ' → logprob: -6.26884126663208
    6. 'and' → logprob: -6.39384126663208
    7. ',' → logprob: -7.76884126663208
    8. '<|end|>' → logprob: -8.643840789794922
    9. '               ' → logprob: -9.018840789794922
    10. '                           ' → logprob: -10.018840789794922

Token 654: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.002305242931470275
    2. '                   ' → logprob: -6.252305030822754
    3. '                           ' → logprob: -8.752305030822754
    4. '               ' → logprob: -9.377305030822754
    5. '                        
' → logprob: -10.377305030822754
    6. ',' → logprob: -10.752305030822754
    7. '```' → logprob: -10.752305030822754
    8. '                        ' → logprob: -10.877305030822754
    9. '<|end|>' → logprob: -11.877305030822754
    10. '                      ' → logprob: -12.002305030822754

Token 655: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' (adapté à ' nd') → logprob: -0.12414637207984924
    2. 'if' → logprob: -2.6241464614868164
    3. ' nd' → logprob: -3.6241464614868164
    4. 'dist' → logprob: -5.124146461486816
    5. '                       ' → logprob: -5.499146461486816
    6. ' if' → logprob: -5.999146461486816
    7. 'new' → logprob: -6.124146461486816
    8. '                           ' → logprob: -6.124146461486816
    9. '                   ' → logprob: -8.624146461486816
    10. '   ' → logprob: -9.124146461486816

Token 656: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132672905921936
    2. ' =' → logprob: -1.3132672309875488
    3. '<=' → logprob: -12.938267707824707
    4. ' <=' → logprob: -13.313267707824707
    5. ',' → logprob: -13.938267707824707
    6. '<|end|>' → logprob: -16.31326675415039
    7. ' ' → logprob: -16.93826675415039
    8. '=
' → logprob: -17.06326675415039
    9. '+=' → logprob: -17.06326675415039
    10. '＝' → logprob: -17.18826675415039

Token 657: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132617771625519
    2. ' =' → logprob: -1.3132617473602295
    3. '＝' → logprob: -18.188261032104492
    4. '=
' → logprob: -18.438261032104492
    5. ',' → logprob: -18.813261032104492
    6. ')' → logprob: -18.938261032104492
    7. ' ' → logprob: -19.063261032104492
    8. '+=' → logprob: -19.563261032104492
    9. '=(' → logprob: -19.813261032104492
    10. ' =
' → logprob: -20.188261032104492

Token 658: ' cd' (ID: 24852)
  Prédit: 'cd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.0017072015907615423
    2. ' cd' → logprob: -6.376707077026367
    3. '	cd' → logprob: -12.626707077026367
    4. '(cd' → logprob: -13.626707077026367
    5. '_cd' → logprob: -14.751707077026367
    6. '   ' → logprob: -16.876707077026367
    7. 'cdn' → logprob: -17.251707077026367
    8. ' ' → logprob: -17.251707077026367
    9. '           ' → logprob: -17.251707077026367
    10. '.cd' → logprob: -18.376707077026367

Token 659: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.47407835721969604
    2. '+' → logprob: -0.974078357219696
    3. ' +
' → logprob: -14.974078178405762
    4. '+
' → logprob: -15.224078178405762
    5. ' ' → logprob: -15.474078178405762
    6. ' ' → logprob: -15.474078178405762
    7. '＋' → logprob: -15.599078178405762
    8. '<|end|>' → logprob: -16.599079132080078
    9. '+n' → logprob: -16.974079132080078
    10. '                               ' → logprob: -17.349079132080078

Token 660: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -4.5491004129871726e-05
    2. ' new' → logprob: -10.000045776367188
    3. '(new' → logprob: -20.250045776367188
    4. '   ' → logprob: -21.625045776367188
    5. '_new' → logprob: -22.125045776367188
    6. '	new' → logprob: -22.375045776367188
    7. 'New' → logprob: -23.000045776367188
    8. '```' → logprob: -23.500045776367188
    9. '$new' → logprob: -23.625045776367188
    10. '[new' → logprob: -23.750045776367188

Token 661: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -1.306760805164231e-05
    2. 'w' → logprob: -11.25001335144043
    3. '_' → logprob: -19.12501335144043
    4. '-w' → logprob: -21.00001335144043
    5. '\' → logprob: -21.25001335144043
    6. '	w' → logprob: -21.62501335144043
    7. ''w' → logprob: -21.75001335144043
    8. 'W' → logprob: -22.12501335144043
    9. '_v' → logprob: -22.50001335144043
    10. ' _' → logprob: -22.50001335144043

Token 662: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.19719715416431427
    2. '<|end|>' → logprob: -1.8221971988677979
    3. '                        
' → logprob: -4.822196960449219
    4. '
' → logprob: -5.947196960449219
    5. ' if' → logprob: -6.572196960449219
    6. 'if' → logprob: -6.822196960449219
    7. '                           ' → logprob: -7.197196960449219
    8. '                        ' → logprob: -7.322196960449219
    9. ',' → logprob: -7.572196960449219
    10. '<|end|>' → logprob: -7.822196960449219

Token 663: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.005136861931532621
    2. '                        
' → logprob: -6.005136966705322
    3. '
' → logprob: -6.630136966705322
    4. '<|end|>' → logprob: -7.755136966705322
    5. '                           ' → logprob: -8.255136489868164
    6. '                        ' → logprob: -8.755136489868164
    7. '                   ' → logprob: -9.380136489868164
    8. '               ' → logprob: -9.505136489868164
    9. ' 
' → logprob: -10.255136489868164
    10. '                            
' → logprob: -10.505136489868164

Token 664: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.47563475370407104
    2. ' if' → logprob: -0.975634753704071
    3. '                       ' → logprob: -6.475634574890137
    4. '                           ' → logprob: -11.725634574890137
    5. '```' → logprob: -12.475634574890137
    6. '                   ' → logprob: -13.600634574890137
    7. '	if' → logprob: -13.975634574890137
    8. '               ' → logprob: -14.350634574890137
    9. '                               ' → logprob: -14.975634574890137
    10. '   ' → logprob: -15.600634574890137

Token 665: ' nd' (ID: 5914)
  Prédit: ' nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.2523530125617981
    2. 'nd' → logprob: -1.5023529529571533
    3. ' dist' → logprob: -8.502352714538574
    4. 'dist' → logprob: -8.877352714538574
    5. '(nd' → logprob: -9.627352714538574
    6. '   ' → logprob: -12.752352714538574
    7. 'n' → logprob: -13.752352714538574
    8. ' ' → logprob: -14.002352714538574
    9. '_nd' → logprob: -14.002352714538574
    10. '```' → logprob: -14.127352714538574

Token 666: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9385402993066236e-05
    2. ' <' → logprob: -11.750019073486328
    3. '<' → logprob: -13.000019073486328
    4. '                   ' → logprob: -13.750019073486328
    5. '+' → logprob: -13.812519073486328
    6. '```' → logprob: -14.062519073486328
    7. '
' → logprob: -14.437519073486328
    8. ' ' → logprob: -14.500019073486328
    9. '   ' → logprob: -14.562519073486328
    10. '[' → logprob: -14.750019073486328

Token 667: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.23581042885780334
    2. ' <=' → logprob: -2.2358105182647705
    3. '<' → logprob: -2.3608105182647705
    4. '<=' → logprob: -4.735810279846191
    5. '<|end|>' → logprob: -10.735810279846191
    6. '<n' → logprob: -12.360810279846191
    7. '<th' → logprob: -12.985810279846191
    8. '<int' → logprob: -13.235810279846191
    9. '<len' → logprob: -13.235810279846191
    10. ' ' → logprob: -13.235810279846191

Token 668: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.014164102263748646
    2. ' c' → logprob: -4.264163970947266
    3. '	c' → logprob: -15.514163970947266
    4. '   ' → logprob: -16.389163970947266
    5. ' ' → logprob: -16.389163970947266
    6. 'dist' → logprob: -16.889163970947266
    7. '                   ' → logprob: -17.514163970947266
    8. '                               ' → logprob: -17.764163970947266
    9. '```' → logprob: -17.764163970947266
    10. '                           ' → logprob: -17.764163970947266

Token 669: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.007163942791521549
    2. '                           ' → logprob: -5.382164001464844
    3. 'and' → logprob: -6.007164001464844
    4. '                       ' → logprob: -10.132164001464844
    5. ',' → logprob: -11.132164001464844
    6. '                            ' → logprob: -12.007164001464844
    7. '<|end|>' → logprob: -12.132164001464844
    8. '                               ' → logprob: -12.132164001464844
    9. '                        ' → logprob: -13.007164001464844
    10. '                          ' → logprob: -13.132164001464844

Token 670: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.07947152107954025
    2. ' nd' → logprob: -2.5794715881347656
    3. 'dist' → logprob: -7.579471588134766
    4. ' dist' → logprob: -9.954471588134766
    5. '                           ' → logprob: -11.329471588134766
    6. '(nd' → logprob: -12.329471588134766
    7. '                               ' → logprob: -12.954471588134766
    8. 'ndl' → logprob: -14.204471588134766
    9. 'nds' → logprob: -14.454471588134766
    10. '                       ' → logprob: -14.829471588134766

Token 671: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.750436007976532e-05
    2. '[' → logprob: -11.00003719329834
    3. ' <' → logprob: -12.00003719329834
    4. '<' → logprob: -12.62503719329834
    5. '   ' → logprob: -13.62503719329834
    6. '```' → logprob: -13.62503719329834
    7. '[
' → logprob: -14.43753719329834
    8. '
' → logprob: -14.62503719329834
    9. '           ' → logprob: -14.75003719329834
    10. ' ' → logprob: -14.81253719329834

Token 672: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.20141927897930145
    2. '<' → logprob: -1.7014192342758179
    3. '<n' → logprob: -13.32641887664795
    4. '<w' → logprob: -14.45141887664795
    5. '<th' → logprob: -14.57641887664795
    6. '<v' → logprob: -14.70141887664795
    7. '<int' → logprob: -14.82641887664795
    8. '<len' → logprob: -15.20141887664795
    9. ' ' → logprob: -15.32641887664795
    10. '<size' → logprob: -15.45141887664795

Token 673: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0001584850688232109
    2. ' dist' → logprob: -8.750158309936523
    3. '	dist' → logprob: -19.750158309936523
    4. '   ' → logprob: -21.250158309936523
    5. '(dist' → logprob: -21.250158309936523
    6. '_dist' → logprob: -22.875158309936523
    7. '.dist' → logprob: -23.000158309936523
    8. 'Dist' → logprob: -23.250158309936523
    9. '           ' → logprob: -24.625158309936523
    10. ' ' → logprob: -24.750158309936523

Token 674: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -18.0
    3. '[' → logprob: -18.875
    4. '   ' → logprob: -19.375
    5. '₂' → logprob: -19.5
    6. '```' → logprob: -19.625
    7. '２' → logprob: -20.875
    8. '۲' → logprob: -20.9375
    9. '_' → logprob: -21.0
    10. '       ' → logprob: -21.125

Token 675: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -9.615255839889869e-05
    2. 'v' → logprob: -9.250096321105957
    3. '```' → logprob: -17.75009536743164
    4. '<v' → logprob: -20.25009536743164
    5. '(v' → logprob: -20.37509536743164
    6. '[' → logprob: -20.37509536743164
    7. '[u' → logprob: -20.37509536743164
    8. '	v' → logprob: -20.75009536743164
    9. ' v' → logprob: -20.75009536743164
    10. '   ' → logprob: -20.87509536743164

Token 676: '][' (ID: 2696)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.021281808614730835
    2. '][' → logprob: -3.8962817192077637
    3. '[ch' → logprob: -8.021282196044922
    4. '[' → logprob: -8.146282196044922
    5. '[i' → logprob: -10.396282196044922
    6. '[u' → logprob: -10.771282196044922
    7. '[var' → logprob: -11.646282196044922
    8. '```' → logprob: -11.646282196044922
    9. '                           ' → logprob: -12.396282196044922
    10. '                               ' → logprob: -12.646282196044922

Token 677: 'ch' (ID: 332)
  Prédit: 'ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -9.729906196298543e-06
    2. '[ch' → logprob: -11.750009536743164
    3. ' ch' → logprob: -13.625009536743164
    4. '(ch' → logprob: -14.500009536743164
    5. '	ch' → logprob: -18.500009536743164
    6. '   ' → logprob: -18.875009536743164
    7. '
' → logprob: -19.000009536743164
    8. '```' → logprob: -19.125009536743164
    9. 'Ch' → logprob: -19.500009536743164
    10. ',ch' → logprob: -19.625009536743164

Token 678: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0001249925117008388
    2. ' +' → logprob: -9.00012493133545
    3. '[' → logprob: -14.00012493133545
    4. '+[' → logprob: -15.25012493133545
    5. ']+' → logprob: -15.50012493133545
    6. '＋' → logprob: -16.750125885009766
    7. '+
' → logprob: -17.250125885009766
    8. '```' → logprob: -17.375125885009766
    9. '][' → logprob: -17.625125885009766
    10. '1' → logprob: -17.625125885009766

Token 679: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.5
    3. ' ' → logprob: -17.875
    4. '   ' → logprob: -18.0
    5. '+' → logprob: -18.75
    6. '
' → logprob: -20.125
    7. '``' → logprob: -20.875
    8. '...' → logprob: -22.125
    9. '`' → logprob: -22.125
    10. '１' → logprob: -22.25

Token 680: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.12715047597885132
    2. ']:
' → logprob: -2.127150535583496
    3. ']' → logprob: -9.127150535583496
    4. ']:
' → logprob: -9.877150535583496
    5. ']:

' → logprob: -11.252150535583496
    6. ':' → logprob: -11.377150535583496
    7. '                       ' → logprob: -11.502150535583496
    8. ']):' → logprob: -11.502150535583496
    9. ']]:
' → logprob: -12.877150535583496
    10. ']):
' → logprob: -13.127150535583496

Token 681: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0022452964913100004
    2. '                               ' → logprob: -6.6272454261779785
    3. '                       ' → logprob: -7.1272454261779785
    4. '                   ' → logprob: -10.25224494934082
    5. '```' → logprob: -10.50224494934082
    6. '                            ' → logprob: -11.37724494934082
    7. '                                   ' → logprob: -11.62724494934082
    8. '           ' → logprob: -11.75224494934082
    9. '               ' → logprob: -12.00224494934082
    10. '                          ' → logprob: -12.12724494934082

Token 682: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.009699787013232708
    2. '                           ' → logprob: -5.009699821472168
    3. ' dist' → logprob: -6.259699821472168
    4. '                               ' → logprob: -6.884699821472168
    5. '                       ' → logprob: -10.759699821472168
    6. '               ' → logprob: -12.134699821472168
    7. '                   ' → logprob: -12.134699821472168
    8. '   ' → logprob: -12.384699821472168
    9. '           ' → logprob: -12.759699821472168
    10. '                                   ' → logprob: -13.384699821472168

Token 683: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '   ' → logprob: -18.375
    3. 'heap' → logprob: -18.5
    4. '```' → logprob: -18.5
    5. '₂' → logprob: -20.125
    6. '               ' → logprob: -20.625
    7. '                   ' → logprob: -20.75
    8. '``' → logprob: -20.75
    9. '                       ' → logprob: -21.0
    10. '２' → logprob: -21.125

Token 684: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: 0.0
    2. 'v' → logprob: -17.125
    3. '```' → logprob: -18.125
    4. '<v' → logprob: -18.875
    5. '2' → logprob: -19.5
    6. '                   ' → logprob: -20.0
    7. '(v' → logprob: -20.125
    8. '                           ' → logprob: -20.375
    9. '[' → logprob: -20.75
    10. 'dist' → logprob: -20.875

Token 685: '][' (ID: 2696)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.12696421146392822
    2. '][' → logprob: -2.1269640922546387
    3. '[' → logprob: -11.876964569091797
    4. '   ' → logprob: -12.501964569091797
    5. '```' → logprob: -12.501964569091797
    6. 'v' → logprob: -12.876964569091797
    7. ' ][' → logprob: -13.001964569091797
    8. '                   ' → logprob: -13.001964569091797
    9. '(v' → logprob: -13.251964569091797
    10. ']' → logprob: -13.376964569091797

Token 686: 'ch' (ID: 332)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -4.842555426876061e-06
    2. 'ch' → logprob: -12.750004768371582
    3. '[v' → logprob: -14.000004768371582
    4. ' v' → logprob: -14.625004768371582
    5. '[ch' → logprob: -15.750004768371582
    6. '```' → logprob: -15.875004768371582
    7. '   ' → logprob: -16.0000057220459
    8. 'c' → logprob: -16.8750057220459
    9. 'vi' → logprob: -17.5000057220459
    10. '(v' → logprob: -17.8750057220459

Token 687: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005899675306864083
    2. '                           ' → logprob: -9.125590324401855
    3. '++' → logprob: -9.250590324401855
    4. '.push' → logprob: -9.375590324401855
    5. 'he' → logprob: -9.875590324401855
    6. '.append' → logprob: -10.125590324401855
    7. 'ush' → logprob: -10.375590324401855
    8. '+=' → logprob: -10.500590324401855
    9. '2' → logprob: -10.750590324401855
    10. '                   ' → logprob: -11.000590324401855

Token 688: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.60414821645827e-06
    2. 'push' → logprob: -13.000004768371582
    3. '```' → logprob: -14.250004768371582
    4. ' ' → logprob: -14.625004768371582
    5. 'heap' → logprob: -15.375004768371582
    6. '   ' → logprob: -15.750004768371582
    7. '+' → logprob: -15.750004768371582
    8. '2' → logprob: -16.000003814697266
    9. '
' → logprob: -16.500003814697266
    10. 'he' → logprob: -16.625003814697266

Token 689: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14405186474323273
    2. ']=' → logprob: -2.0190517902374268
    3. '                           ' → logprob: -7.269052028656006
    4. '=' → logprob: -7.394052028656006
    5. ')' → logprob: -11.144051551818848
    6. ' =' → logprob: -11.394051551818848
    7. ' ]' → logprob: -11.769051551818848
    8. ']=(' → logprob: -11.894051551818848
    9. '                               ' → logprob: -12.644051551818848
    10. '   ' → logprob: -12.894051551818848

Token 690: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0015024791937321424
    2. ' =' → logprob: -6.501502513885498
    3. ']=' → logprob: -16.626502990722656
    4. '   ' → logprob: -17.376502990722656
    5. '                           ' → logprob: -17.876502990722656
    6. '=
' → logprob: -18.751502990722656
    7. ']' → logprob: -19.126502990722656
    8. '=v' → logprob: -19.501502990722656
    9. '=n' → logprob: -19.876502990722656
    10. '=os' → logprob: -20.251502990722656

Token 691: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -5.836499985889532e-05
    2. ' nd' → logprob: -9.7500581741333
    3. '           ' → logprob: -16.875059127807617
    4. '                   ' → logprob: -17.000059127807617
    5. '               ' → logprob: -18.250059127807617
    6. '   ' → logprob: -18.375059127807617
    7. '(nd' → logprob: -18.625059127807617
    8. '                           ' → logprob: -18.750059127807617
    9. 'nds' → logprob: -19.375059127807617
    10. '_nd' → logprob: -19.375059127807617

Token 692: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.088346359931165e-07
    2. '+' → logprob: -15.250000953674316
    3. '```' → logprob: -16.0
    4. 'nd' → logprob: -16.25
    5. ' +' → logprob: -16.25
    6. '   ' → logprob: -16.5
    7. '
' → logprob: -17.125
    8. ' ' → logprob: -17.375
    9. '                   ' → logprob: -17.5
    10. '           ' → logprob: -17.5

Token 693: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0005888947052881122
    2. 'heap' → logprob: -7.750588893890381
    3. '
' → logprob: -10.125589370727539
    4. '                   ' → logprob: -10.500589370727539
    5. '           ' → logprob: -10.625589370727539
    6. '                            
' → logprob: -11.375589370727539
    7. '                       ' → logprob: -11.625589370727539
    8. '                               ' → logprob: -11.750589370727539
    9. '						' → logprob: -12.000589370727539
    10. '               ' → logprob: -12.125589370727539

Token 694: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.004758818540722132
    2. 'heap' → logprob: -5.504758834838867
    3. '```' → logprob: -7.379758834838867
    4. '                               ' → logprob: -11.129758834838867
    5. '                   ' → logprob: -11.129758834838867
    6. '           ' → logprob: -11.504758834838867
    7. '                       ' → logprob: -12.254758834838867
    8. ' heap' → logprob: -12.379758834838867
    9. '               ' → logprob: -12.879758834838867
    10. '                            ' → logprob: -13.629758834838867

Token 695: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -6.704273118884885e-07
    2. '```' → logprob: -14.750000953674316
    3. '                           ' → logprob: -15.750000953674316
    4. ' heap' → logprob: -16.0
    5. '                               ' → logprob: -21.125
    6. '(heap' → logprob: -21.5
    7. '                   ' → logprob: -22.0
    8. '``' → logprob: -22.0
    9. '                       ' → logprob: -22.125
    10. '.heap' → logprob: -22.125

Token 696: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.3856492842023727e-06
    2. 'he' → logprob: -13.750000953674316
    3. '.he' → logprob: -16.750001907348633
    4. 'h' → logprob: -17.125001907348633
    5. '```' → logprob: -17.250001907348633
    6. 'heap' → logprob: -17.500001907348633
    7. 'p' → logprob: -17.625001907348633
    8. 'push' → logprob: -17.750001907348633
    9. ' he' → logprob: -18.000001907348633
    10. '                           ' → logprob: -18.125001907348633

Token 697: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.0009202735964208841
    2. 'he' → logprob: -7.000920295715332
    3. '.heap' → logprob: -12.125920295715332
    4. 'heap' → logprob: -13.500920295715332
    5. 'q' → logprob: -13.625920295715332
    6. '_he' → logprob: -15.500920295715332
    7. '```' → logprob: -15.625920295715332
    8. 'push' → logprob: -16.125919342041016
    9. ' he' → logprob: -16.250919342041016
    10. 'ush' → logprob: -16.625919342041016

Token 698: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.002940382808446884
    2. 'pp' → logprob: -6.1279401779174805
    3. 'ush' → logprob: -7.6279401779174805
    4. 'push' → logprob: -8.37794017791748
    5. 'ap' → logprob: -10.37794017791748
    6. 'p' → logprob: -12.87794017791748
    7. 'he' → logprob: -13.50294017791748
    8. 'q' → logprob: -14.37794017791748
    9. 'op' → logprob: -14.37794017791748
    10. 'e' → logprob: -14.62794017791748

Token 699: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.00041518008220009506
    2. 'push' → logprob: -8.125414848327637
    3. 'app' → logprob: -9.625414848327637
    4. 'op' → logprob: -10.875414848327637
    5. 'pp' → logprob: -11.500414848327637
    6. 'p' → logprob: -11.875414848327637
    7. 'q' → logprob: -12.250414848327637
    8. 'sh' → logprob: -12.375414848327637
    9. '```' → logprob: -13.625414848327637
    10. 'he' → logprob: -14.000414848327637

Token 700: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -3.128163257315464e-07
    2. 'heap' → logprob: -15.375
    3. '(' → logprob: -17.0
    4. '```' → logprob: -17.25
    5. '(h' → logprob: -18.5
    6. '(
' → logprob: -18.875
    7. '(queue' → logprob: -20.125
    8. '(kernel' → logprob: -20.5
    9. '.heap' → logprob: -20.625
    10. '(hero' → logprob: -20.625

Token 701: ',(' (ID: 27243)
  Prédit: '(heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(heap' → logprob: -2.339278580620885e-06
    2. 'heap' → logprob: -13.250001907348633
    3. '```' → logprob: -15.625001907348633
    4. '(hash' → logprob: -16.375001907348633
    5. '(' → logprob: -16.500001907348633
    6. ' (' → logprob: -17.125001907348633
    7. '(kernel' → logprob: -17.375001907348633
    8. '(queue' → logprob: -17.625001907348633
    9. ' heap' → logprob: -18.000001907348633
    10. '(
' → logprob: -18.125001907348633

Token 702: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -1.1472419600977446e-06
    2. ' nd' → logprob: -13.750000953674316
    3. 'cd' → logprob: -18.125001907348633
    4. '(nd' → logprob: -18.625001907348633
    5. '   ' → logprob: -20.125001907348633
    6. 'nds' → logprob: -21.375001907348633
    7. '_nd' → logprob: -21.625001907348633
    8. 'nt' → logprob: -21.750001907348633
    9. 'rd' → logprob: -22.750001907348633
    10. '
' → logprob: -22.875001907348633

Token 703: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.6312321753939614e-05
    2. 'nd' → logprob: -10.250036239624023
    3. ' nd' → logprob: -14.625036239624023
    4. 'cd' → logprob: -15.125036239624023
    5. '(nd' → logprob: -16.000036239624023
    6. '_nd' → logprob: -17.000036239624023
    7. '```' → logprob: -17.250036239624023
    8. 'd' → logprob: -17.500036239624023
    9. '...' → logprob: -17.875036239624023
    10. '
' → logprob: -18.500036239624023

Token 704: ',ch' (ID: 165575)
  Prédit: ',ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',ch' → logprob: -0.014172564260661602
    2. ',' → logprob: -4.264172554016113
    3. ' ,' → logprob: -11.764172554016113
    4. ',c' → logprob: -14.639172554016113
    5. ',
' → logprob: -15.639172554016113
    6. ',h' → logprob: -15.889172554016113
    7. ',char' → logprob: -16.26417350769043
    8. '(ch' → logprob: -16.76417350769043
    9. ',j' → logprob: -16.88917350769043
    10. 'ch' → logprob: -16.88917350769043

Token 705: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.8889261304575484e-06
    2. ' +' → logprob: -12.500003814697266
    3. '+
' → logprob: -16.375003814697266
    4. '＋' → logprob: -19.000003814697266
    5. '+,' → logprob: -19.000003814697266
    6. '1' → logprob: -19.250003814697266
    7. '```' → logprob: -19.875003814697266
    8. '+</' → logprob: -20.750003814697266
    9. '+i' → logprob: -21.375003814697266
    10. '+[' → logprob: -21.500003814697266

Token 706: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '```' → logprob: -15.750000953674316
    3. '+' → logprob: -16.125
    4. ' ' → logprob: -16.5
    5. '<|end|>' → logprob: -17.0
    6. '
' → logprob: -18.625
    7. '...' → logprob: -18.75
    8. '[' → logprob: -19.25
    9. '2' → logprob: -19.625
    10. '   ' → logprob: -19.75

Token 707: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -9.984787902794778e-05
    2. ',' → logprob: -9.250100135803223
    3. 'v' → logprob: -13.250100135803223
    4. ' ,' → logprob: -13.500100135803223
    5. ',
' → logprob: -15.250100135803223
    6. '```' → logprob: -15.750100135803223
    7. '(v' → logprob: -17.625099182128906
    8. '[v' → logprob: -18.125099182128906
    9. '                   ' → logprob: -18.250099182128906
    10. '   ' → logprob: -18.375099182128906

Token 708: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0003391574718989432
    2. '))
' → logprob: -8.00033950805664
    3. ')' → logprob: -13.50033950805664
    4. '                           ' → logprob: -13.62533950805664
    5. '                       ' → logprob: -14.50033950805664
    6. ')))' → logprob: -15.25033950805664
    7. '           ' → logprob: -15.75033950805664
    8. '               ' → logprob: -16.25033950805664
    9. '                   ' → logprob: -16.25033950805664
    10. '))
' → logprob: -16.87533950805664

Token 709: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 710: ' else' (ID: 1203)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7077650427818298
    2. 'else' (adapté à ' else') → logprob: -1.2077651023864746
    3. '<|end|>' → logprob: -1.7077651023864746
    4. '
' → logprob: -4.457765102386475
    5. '```' → logprob: -4.707765102386475
    6. '   ' → logprob: -5.832765102386475
    7. '  
' → logprob: -7.457765102386475
    8. ' else' → logprob: -7.707765102386475
    9. '<|end|>' → logprob: -8.082764625549316
    10. 'elif' → logprob: -8.082764625549316

Token 711: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.034015752375125885
    2. ':
' → logprob: -3.409015655517578
    3. '       ' → logprob: -8.284015655517578
    4. '           ' → logprob: -9.909015655517578
    5. '{' → logprob: -11.159015655517578
    6. '[' → logprob: -11.534015655517578
    7. '   ' → logprob: -11.659015655517578
    8. ':

' → logprob: -12.159015655517578
    9. ':
' → logprob: -12.784015655517578
    10. '(' → logprob: -12.784015655517578

Token 712: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.783160388469696
    2. 'print' → logprob: -0.908160388469696
    3. '       ' → logprob: -2.033160448074341
    4. '           ' → logprob: -5.408160209655762
    5. ' print' → logprob: -5.533160209655762
    6. '	print' → logprob: -8.783160209655762
    7. '```' → logprob: -9.283160209655762
    8. ' ' → logprob: -9.783160209655762
    9. '<|end|>' → logprob: -11.033160209655762
    10. '               ' → logprob: -11.158160209655762

Token 713: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001415473292581737
    2. ' print' → logprob: -6.751415252685547
    3. '       ' → logprob: -8.876415252685547
    4. '   ' → logprob: -9.251415252685547
    5. '           ' → logprob: -12.501415252685547
    6. '```' → logprob: -12.626415252685547
    7. '	print' → logprob: -13.251415252685547
    8. ' ' → logprob: -15.626415252685547
    9. '.print' → logprob: -15.626415252685547
    10. '#print' → logprob: -15.751415252685547

Token 714: ' no' (ID: 860)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0024805311113595963
    2. ' print' → logprob: -6.752480506896973
    3. '   ' → logprob: -7.002480506896973
    4. '       ' → logprob: -7.877480506896973
    5. '           ' → logprob: -10.877480506896973
    6. ' ' → logprob: -13.877480506896973
    7. '	print' → logprob: -14.752480506896973
    8. '  ' → logprob: -14.877480506896973
    9. '    ' → logprob: -17.25248146057129
    10. '.print' → logprob: -17.87748146057129

Token 715: ' break' (ID: 2338)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.019114911556243896
    2. 'answer' → logprob: -5.269114971160889
    3. 'change' → logprob: -5.394114971160889
    4. ' print' → logprob: -6.019114971160889
    5. '           ' → logprob: -6.894114971160889
    6. 'n' → logprob: -7.019114971160889
    7. '       ' → logprob: -7.269114971160889
    8. 'solution' → logprob: -7.519114971160889
    9. 'result' → logprob: -7.769114971160889
    10. 'changes' → logprob: -7.894114971160889

Token 716: ' =>' (ID: 871)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2324019968509674
    2. '(' → logprob: -2.4824020862579346
    3. '       ' → logprob: -2.7324020862579346
    4. 'print' → logprob: -3.7324020862579346
    5. '   ' → logprob: -4.4824018478393555
    6. ':
' → logprob: -5.3574018478393555
    7. '               ' → logprob: -5.8574018478393555
    8. ' print' → logprob: -5.8574018478393555
    9. ':' → logprob: -6.1074018478393555
    10. '(print' → logprob: -6.1074018478393555

Token 717: ' no' (ID: 860)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03167252242565155
    2. ' print' → logprob: -3.531672477722168
    3. '       ' → logprob: -6.281672477722168
    4. '   ' → logprob: -10.531672477722168
    5. '           ' → logprob: -10.781672477722168
    6. '	print' → logprob: -13.156672477722168
    7. ' ' → logprob: -15.281672477722168
    8. '```' → logprob: -16.031673431396484
    9. '  ' → logprob: -17.406673431396484
    10. '.print' → logprob: -17.531673431396484

Token 718: ' exact' (ID: 6354)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2027003914117813
    2. 'solution' → logprob: -1.8277003765106201
    3. 'answer' → logprob: -3.82770037651062
    4. ' solution' → logprob: -7.327700614929199
    5. 'valid' → logprob: -10.3277006149292
    6. ' print' → logprob: -10.4527006149292
    7. 'result' → logprob: -10.5777006149292
    8. '-' → logprob: -10.8277006149292
    9. 's' → logprob: -11.2027006149292
    10. ' answer' → logprob: -11.3277006149292

Token 719: ' c' (ID: 274)
  Prédit: 'solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solution' → logprob: -0.539213240146637
    2. 'answer' → logprob: -1.4142131805419922
    3. ' solution' → logprob: -2.414213180541992
    4. 'print' → logprob: -2.539213180541992
    5. ' answer' → logprob: -5.789213180541992
    6. 'path' → logprob: -7.289213180541992
    7. 'result' → logprob: -7.414213180541992
    8. 'match' → logprob: -8.039213180541992
    9. ' print' → logprob: -8.789213180541992
    10. '-' → logprob: -9.539213180541992

Token 720: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.044703491032123566
    2. 'print' → logprob: -3.294703483581543
    3. ' print' → logprob: -5.794703483581543
    4. '           ' → logprob: -5.919703483581543
    5. '   ' → logprob: -7.169703483581543
    6. '        
' → logprob: -10.544703483581543
    7. '     ' → logprob: -10.544703483581543
    8. ',' → logprob: -10.794703483581543
    9. ' ' → logprob: -11.669703483581543
    10. '      ' → logprob: -11.794703483581543

Token 721: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01225133053958416
    2. 'print' → logprob: -4.762251377105713
    3. '           ' → logprob: -6.262251377105713
    4. '   ' → logprob: -6.387251377105713
    5. ' print' → logprob: -11.137250900268555
    6. '```' → logprob: -11.762250900268555
    7. '	print' → logprob: -12.512250900268555
    8. '	   ' → logprob: -12.762250900268555
    9. '	       ' → logprob: -12.762250900268555
    10. '<|end|>' → logprob: -12.887250900268555

Token 722: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0018766358261927962
    2. '       ' → logprob: -6.5018768310546875
    3. ' print' → logprob: -8.001876831054688
    4. '           ' → logprob: -10.501876831054688
    5. '   ' → logprob: -11.501876831054688
    6. '```' → logprob: -13.501876831054688
    7. '	print' → logprob: -14.751876831054688
    8. ' ' → logprob: -17.251876831054688
    9. '``' → logprob: -17.376876831054688
    10. '               ' → logprob: -18.001876831054688

Token 723: ' but' (ID: 889)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0030717141926288605
    2. '       ' → logprob: -5.8780717849731445
    3. 'dist' → logprob: -9.003071784973145
    4. ' print' → logprob: -9.253071784973145
    5. '   ' → logprob: -11.003071784973145
    6. 'if' → logprob: -11.753071784973145
    7. '```' → logprob: -11.878071784973145
    8. 'for' → logprob: -12.253071784973145
    9. '#' → logprob: -12.878071784973145
    10. '#print' → logprob: -13.628071784973145

Token 724: ' problem' (ID: 4792)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.32171982526779175
    2. ' print' → logprob: -1.3217198848724365
    3. ' if' → logprob: -5.446719646453857
    4. '           ' → logprob: -6.446719646453857
    5. '       ' → logprob: -6.946719646453857
    6. 'if' → logprob: -7.446719646453857
    7. '   ' → logprob: -7.946719646453857
    8. 'dist' → logprob: -8.446720123291016
    9. ' for' → logprob: -9.321720123291016
    10. ' dist' → logprob: -9.696720123291016

Token 725: ' states' (ID: 9407)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8765734434127808
    2. '       ' → logprob: -1.6265734434127808
    3. 'print' → logprob: -1.7515734434127808
    4. ':' → logprob: -2.7515735626220703
    5. '   ' → logprob: -2.8765735626220703
    6. '<|end|>' → logprob: -4.25157356262207
    7. ' is' → logprob: -4.50157356262207
    8. 'is' → logprob: -4.62657356262207
    9. '=' → logprob: -4.75157356262207
    10. '               ' → logprob: -5.25157356262207

Token 726: ' c' (ID: 274)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3650099039077759
    2. ' print' → logprob: -1.2400099039077759
    3. '           ' → logprob: -4.615009784698486
    4. '   ' → logprob: -6.240009784698486
    5. '       ' → logprob: -6.365009784698486
    6. ' that' → logprob: -6.865009784698486
    7. ' we' → logprob: -7.740009784698486
    8. '#' → logprob: -8.115010261535645
    9. '               ' → logprob: -8.115010261535645
    10. 'we' → logprob: -8.615010261535645

Token 727: ' <' (ID: 464)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5069973468780518
    2. 'print' → logprob: -1.3819973468780518
    3. '       ' → logprob: -2.3819973468780518
    4. '   ' → logprob: -3.8819973468780518
    5. '               ' → logprob: -4.631997108459473
    6. ' print' → logprob: -4.881997108459473
    7. '=' → logprob: -5.881997108459473
    8. ' =' → logprob: -6.131997108459473
    9. '#' → logprob: -6.756997108459473
    10. '                   ' → logprob: -6.756997108459473

Token 728: ' original' (ID: 4756)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9971649050712585
    2. '=float' → logprob: -1.4971649646759033
    3. 'float' → logprob: -1.7471649646759033
    4. 'n' → logprob: -2.6221649646759033
    5. '=sys' → logprob: -2.9971649646759033
    6. 'sys' → logprob: -3.2471649646759033
    7. ' float' → logprob: -3.9971649646759033
    8. ' sys' → logprob: -4.372164726257324
    9. ' ' → logprob: -4.497164726257324
    10. ' n' → logprob: -4.997164726257324

Token 729: ' min' (ID: 1349)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014076407998800278
    2. 'print' → logprob: -4.639076232910156
    3. '   ' → logprob: -5.639076232910156
    4. '           ' → logprob: -7.389076232910156
    5. ' print' → logprob: -9.639076232910156
    6. ' ' → logprob: -11.139076232910156
    7. '
' → logprob: -11.264076232910156
    8. '```' → logprob: -11.389076232910156
    9. '<|end|>' → logprob: -11.764076232910156
    10. '        
' → logprob: -11.889076232910156

Token 730: ' cost' (ID: 3097)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006466906052082777
    2. '           ' → logprob: -5.881466865539551
    3. 'print' → logprob: -5.881466865539551
    4. '   ' → logprob: -7.131466865539551
    5. '
' → logprob: -10.75646686553955
    6. ' print' → logprob: -11.00646686553955
    7. '	   ' → logprob: -12.25646686553955
    8. '        
' → logprob: -12.63146686553955
    9. 'import' → logprob: -12.88146686553955
    10. '<|end|>' → logprob: -13.00646686553955

Token 731: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031209301203489304
    2. 'print' → logprob: -3.6562092304229736
    3. '   ' → logprob: -5.531209468841553
    4. '           ' → logprob: -7.156209468841553
    5. ' print' → logprob: -9.031208992004395
    6. '
' → logprob: -11.156208992004395
    7. '	print' → logprob: -12.406208992004395
    8. ' ' → logprob: -12.656208992004395
    9. '	   ' → logprob: -12.656208992004395
    10. 'import' → logprob: -12.781208992004395

Token 732: ' so' (ID: 813)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7078331708908081
    2. 'print' → logprob: -0.8328331708908081
    3. ' print' → logprob: -2.8328332901000977
    4. '           ' → logprob: -4.457833290100098
    5. '   ' → logprob: -7.457833290100098
    6. ' if' → logprob: -7.957833290100098
    7. 'if' → logprob: -8.707833290100098
    8. '```' → logprob: -8.707833290100098
    9. ' for' → logprob: -8.832833290100098
    10. '        
' → logprob: -9.082833290100098

Token 733: ' solution' (ID: 7578)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001605115394340828
    2. ' print' → logprob: -8.875160217285156
    3. '           ' → logprob: -11.000160217285156
    4. '       ' → logprob: -13.000160217285156
    5. '#' → logprob: -14.625160217285156
    6. '   ' → logprob: -14.625160217285156
    7. '```' → logprob: -15.125160217285156
    8. '               ' → logprob: -16.000160217285156
    9. '#print' → logprob: -16.000160217285156
    10. 'for' → logprob: -16.125160217285156

Token 734: ' must' (ID: 2804)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7304743528366089
    2. '=' → logprob: -1.3554743528366089
    3. ':' → logprob: -2.1054744720458984
    4. '   ' → logprob: -3.2304744720458984
    5. ' =' → logprob: -3.3554744720458984
    6. '       ' → logprob: -4.605474472045898
    7. ' is' → logprob: -4.605474472045898
    8. 'print' → logprob: -4.855474472045898
    9. '==' → logprob: -5.105474472045898
    10. '               ' → logprob: -5.480474472045898

Token 735: ' exist' (ID: 4310)
  Prédit: 'exist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exist' → logprob: -0.011258482001721859
    2. ' exist' → logprob: -4.511258602142334
    3. 'exists' → logprob: -9.136258125305176
    4. 'print' → logprob: -9.886258125305176
    5. 'always' → logprob: -10.636258125305176
    6. '_exist' → logprob: -11.136258125305176
    7. 'be' → logprob: -11.761258125305176
    8. 'import' → logprob: -14.136258125305176
    9. 'Exist' → logprob: -14.136258125305176
    10. 'ex' → logprob: -14.261258125305176

Token 736: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009006406180560589
    2. '           ' → logprob: -5.634006500244141
    3. 'print' → logprob: -5.759006500244141
    4. '   ' → logprob: -6.134006500244141
    5. ' print' → logprob: -9.75900650024414
    6. '```' → logprob: -12.13400650024414
    7. ' ' → logprob: -14.13400650024414
    8. '        
' → logprob: -14.13400650024414
    9. '	   ' → logprob: -14.25900650024414
    10. 'import' → logprob: -14.25900650024414

Token 737: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06264039874076843
    2. '   ' → logprob: -3.437640428543091
    3. 'print' → logprob: -3.812640428543091
    4. '           ' → logprob: -5.062640190124512
    5. '<|end|>' → logprob: -9.812640190124512
    6. ' print' → logprob: -10.937640190124512
    7. '	print' → logprob: -11.062640190124512
    8. 'continue' → logprob: -11.437640190124512
    9. '	   ' → logprob: -11.562640190124512
    10. 'return' → logprob: -11.687640190124512

Token 738: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014118142426013947
    2. '       ' → logprob: -4.639118194580078
    3. 'pass' → logprob: -6.014118194580078
    4. 'for' → logprob: -7.639118194580078
    5. '#' (adapté à ' #') → logprob: -7.889118194580078
    6. 'dist' → logprob: -8.014118194580078
    7. '           ' → logprob: -8.139118194580078
    8. '   ' → logprob: -9.389118194580078
    9. ' print' → logprob: -9.764118194580078
    10. 'continue' → logprob: -9.889118194580078

Token 739: ' we' (ID: 581)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007417303277179599
    2. '       ' → logprob: -7.250741958618164
    3. ' print' → logprob: -11.250741958618164
    4. '           ' → logprob: -12.125741958618164
    5. '#' → logprob: -12.375741958618164
    6. 'pass' → logprob: -13.000741958618164
    7. '   ' → logprob: -13.375741958618164
    8. 'for' → logprob: -13.750741958618164
    9. 'continue' → logprob: -14.000741958618164
    10. 'dist' → logprob: -14.250741958618164

Token 740: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4219575822353363
    2. '           ' → logprob: -1.9219576120376587
    3. 'continue' → logprob: -2.046957492828369
    4. 'import' → logprob: -3.796957492828369
    5. 'return' → logprob: -4.421957492828369
    6. 'pass' → logprob: -4.546957492828369
    7. '       ' → logprob: -4.546957492828369
    8. '#' → logprob: -5.046957492828369
    9. '```' → logprob: -6.421957492828369
    10. '   ' → logprob: -6.546957492828369

Token 741: ' minimal' (ID: 19957)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0020042958203703165
    2. '0' → logprob: -7.252004146575928
    3. '-m' → logprob: -7.752004146575928
    4. '-dist' → logprob: -8.377004623413086
    5. '-original' → logprob: -8.752004623413086
    6. 'm' → logprob: -8.877004623413086
    7. 'print' → logprob: -9.127004623413086
    8. 'dist' → logprob: -9.377004623413086
    9. '-print' → logprob: -10.252004623413086
    10. '-im' → logprob: -10.627004623413086

Token 742: ' ch' (ID: 549)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6812595725059509
    2. 'ch' → logprob: -1.4312596321105957
    3. 'min' → logprob: -2.3062596321105957
    4. 'm' → logprob: -2.5562596321105957
    5. 'changes' → logprob: -3.4312596321105957
    6. 'for' → logprob: -3.8062596321105957
    7. 'change' → logprob: -4.556259632110596
    8. '
' → logprob: -5.306259632110596
    9. 'next' → logprob: -6.056259632110596
    10. 'i' → logprob: -6.556259632110596

Token 743: ' that' (ID: 484)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7004920244216919
    2. 'print' → logprob: -1.450492024421692
    3. 'min' → logprob: -1.450492024421692
    4. '   ' → logprob: -4.450491905212402
    5. 'dist' → logprob: -4.450491905212402
    6. 'possible' → logprob: -5.575491905212402
    7. 'max' → logprob: -5.950491905212402
    8. 'for' → logprob: -7.075491905212402
    9. 'minimal' → logprob: -7.825491905212402
    10. 'ans' → logprob: -7.950491905212402

Token 744: ' achieve' (ID: 12998)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3358774483203888
    2. 'dist' → logprob: -1.8358774185180664
    3. 'any' → logprob: -3.2108774185180664
    4. '[min' → logprob: -3.2108774185180664
    5. 'for' → logprob: -3.7108774185180664
    6. ' min' → logprob: -4.835877418518066
    7. 'next' → logprob: -5.210877418518066
    8. ' for' → logprob: -5.960877418518066
    9. 'print' → logprob: -6.710877418518066
    10. '[next' → logprob: -6.960877418518066

Token 745: ' dist' (ID: 3601)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03776223585009575
    2. 'min' → logprob: -4.53776216506958
    3. ' c' → logprob: -4.91276216506958
    4. 'exact' → logprob: -5.28776216506958
    5. '
' → logprob: -5.53776216506958
    6. 'dist' → logprob: -5.91276216506958
    7. 'for' → logprob: -6.03776216506958
    8. '=' → logprob: -6.53776216506958
    9. '=min' → logprob: -7.03776216506958
    10. '=c' → logprob: -7.28776216506958

Token 746: '2' (ID: 17)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4996357262134552
    2. 'min' → logprob: -1.6246356964111328
    3. '           ' → logprob: -2.124635696411133
    4. 'for' → logprob: -4.124635696411133
    5. 'print' → logprob: -4.374635696411133
    6. 'ans' → logprob: -4.624635696411133
    7. 'ch' → logprob: -4.749635696411133
    8. '```' → logprob: -4.999635696411133
    9. 'else' → logprob: -5.499635696411133
    10. '   ' → logprob: -5.624635696411133

Token 747: '[n' (ID: 15433)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8153818845748901
    2. '       ' → logprob: -0.9403818845748901
    3. '   ' → logprob: -3.0653820037841797
    4. ' =' → logprob: -3.4403820037841797
    5. ' for' → logprob: -3.8153820037841797
    6. '=' → logprob: -3.8153820037841797
    7. 'min' → logprob: -4.19038200378418
    8. '           ' → logprob: -4.31538200378418
    9. 'print' → logprob: -4.94038200378418
    10. '```' → logprob: -5.81538200378418

Token 748: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2071274369955063
    2. '].' → logprob: -1.8321274518966675
    3. ']' → logprob: -3.957127332687378
    4. '[' → logprob: -6.207127571105957
    5. 'index' → logprob: -6.332127571105957
    6. '.index' → logprob: -6.582127571105957
    7. '[i' → logprob: -7.457127571105957
    8. '[j' → logprob: -8.207127571105957
    9. '<=' → logprob: -8.207127571105957
    10. ']==' → logprob: -8.832127571105957

Token 749: 'ch' (ID: 332)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1526118963956833
    2. 'ch' → logprob: -2.4026119709014893
    3. 'i' → logprob: -3.1526119709014893
    4. 'k' → logprob: -6.02761173248291
    5. 'idx' → logprob: -6.40261173248291
    6. ']' → logprob: -6.90261173248291
    7. 'x' → logprob: -7.02761173248291
    8. ':]' → logprob: -7.02761173248291
    9. '_]' → logprob: -7.77761173248291
    10. '0' → logprob: -8.52761173248291

Token 750: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1687202751636505
    2. '])' → logprob: -3.293720245361328
    3. '!=' → logprob: -3.918720245361328
    4. ']<' → logprob: -4.043720245361328
    5. '<=' → logprob: -4.418720245361328
    6. 'if' → logprob: -4.543720245361328
    7. ']!=' → logprob: -4.543720245361328
    8. ']==' → logprob: -4.668720245361328
    9. '])
' → logprob: -4.918720245361328
    10. ']<=' → logprob: -5.293720245361328

Token 751: ' ==' (ID: 951)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44445309042930603
    2. '
' → logprob: -1.6944531202316284
    3. '```' → logprob: -2.194453001022339
    4. '           ' → logprob: -4.069453239440918
    5. ' =' → logprob: -4.569453239440918
    6. '   ' → logprob: -5.069453239440918
    7. '        
' → logprob: -5.194453239440918
    8. '<|end|>' → logprob: -5.444453239440918
    9. '=' → logprob: -5.569453239440918
    10. '``' → logprob: -5.694453239440918

Token 752: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.005233882926404476
    2. ' c' → logprob: -5.2552337646484375
    3. '   ' → logprob: -17.255233764648438
    4. '```' → logprob: -17.255233764648438
    5. '	c' → logprob: -18.505233764648438
    6. ' ' → logprob: -19.130233764648438
    7. '
' → logprob: -20.630233764648438
    8. '%c' → logprob: -21.130233764648438
    9. ')c' → logprob: -21.380233764648438
    10. '  ' → logprob: -21.755233764648438

Token 753: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16092869639396667
    2. '   ' → logprob: -2.785928726196289
    3. 'for' → logprob: -2.910928726196289
    4. ' for' → logprob: -4.535928726196289
    5. 'min' → logprob: -4.910928726196289
    6. 'ch' → logprob: -5.160928726196289
    7. '```' → logprob: -5.660928726196289
    8. '
' → logprob: -6.035928726196289
    9. '           ' → logprob: -7.160928726196289
    10. 'possible' → logprob: -7.910928726196289

Token 754: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0380391962826252
    2. 'for' → logprob: -3.538039207458496
    3. ' for' → logprob: -5.413039207458496
    4. '
' → logprob: -6.038039207458496
    5. '   ' → logprob: -7.413039207458496
    6. '```' → logprob: -8.288039207458496
    7. '           ' → logprob: -8.663039207458496
    8. '<|end|>' → logprob: -8.788039207458496
    9. '	for' → logprob: -9.663039207458496
    10. '        
' → logprob: -9.663039207458496

Token 755: ' ans' (ID: 3345)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0242481492459774
    2. 'print' → logprob: -3.7742481231689453
    3. '           ' → logprob: -7.649248123168945
    4. '       ' → logprob: -8.274248123168945
    5. 'ans' (adapté à ' ans') → logprob: -8.899248123168945
    6. ' for' → logprob: -10.149248123168945
    7. 'min' → logprob: -10.524248123168945
    8. '```' → logprob: -10.899248123168945
    9. 'result' → logprob: -11.274248123168945
    10. '   ' → logprob: -11.524248123168945

Token 756: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05499409884214401
    2. ' =' → logprob: -2.9299941062927246
    3. '=None' → logprob: -9.804993629455566
    4. '=find' → logprob: -10.929993629455566
    5. '=int' → logprob: -11.679993629455566
    6. '=max' → logprob: -12.304993629455566
    7. '=[]' → logprob: -12.554993629455566
    8. '=-' → logprob: -12.554993629455566
    9. '=min' → logprob: -12.679993629455566
    10. '=[' → logprob: -13.054993629455566

Token 757: ' -' (ID: 533)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.03154062479734421
    2. 'float' → logprob: -4.031540393829346
    3. 'next' → logprob: -4.656540393829346
    4. 'm' → logprob: -5.656540393829346
    5. 'None' → logprob: -8.406540870666504
    6. '-' → logprob: -10.406540870666504
    7. '0' → logprob: -10.781540870666504
    8. ' min' → logprob: -11.406540870666504
    9. '
' → logprob: -12.281540870666504
    10. '```' → logprob: -12.531540870666504

Token 758: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '2' → logprob: -15.125
    3. ' ' → logprob: -18.25
    4. '```' → logprob: -18.5
    5. '-' → logprob: -19.125
    6. 'import' → logprob: -19.375
    7. '100' → logprob: -19.5
    8. 'print' → logprob: -20.25
    9. '10' → logprob: -20.25
    10. 'sum' → logprob: -20.375

Token 759: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8300719857215881
    2. '
' → logprob: -1.0800719261169434
    3. ' for' → logprob: -1.5800719261169434
    4. '	for' → logprob: -4.455071926116943
    5. '<|end|>' → logprob: -5.830071926116943
    6. '       ' → logprob: -6.080071926116943
    7. '   ' → logprob: -7.580071926116943
    8. '
' → logprob: -8.080072402954102
    9. '```' → logprob: -8.580072402954102
    10. '           ' → logprob: -8.955072402954102

Token 760: '           ' (ID: 352)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5963611006736755
    2. ' for' → logprob: -1.3463611602783203
    3. '
' → logprob: -1.8463611602783203
    4. '<|end|>' → logprob: -3.5963611602783203
    5. '	for' → logprob: -6.47136116027832
    6. ' 
' → logprob: -7.22136116027832
    7. '```' → logprob: -7.34636116027832
    8. '       ' → logprob: -8.09636116027832
    9. '  
' → logprob: -8.59636116027832
    10. '   ' → logprob: -9.97136116027832

Token 761: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -4.320199877838604e-07
    2. ' for' → logprob: -14.875
    3. '           ' → logprob: -17.25
    4. '       ' → logprob: -20.75
    5. '```' → logprob: -21.125
    6. '	for' → logprob: -21.5
    7. '
' → logprob: -22.875
    8. '   ' → logprob: -23.0
    9. 'import' → logprob: -23.75
    10. 'min' → logprob: -24.0

Token 762: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -4.394135612528771e-05
    2. ' ch' → logprob: -10.250043869018555
    3. 'changes' → logprob: -12.250043869018555
    4. 'chg' → logprob: -13.000043869018555
    5. 'change' → logprob: -13.500043869018555
    6. 'i' → logprob: -17.125043869018555
    7. '	ch' → logprob: -17.750043869018555
    8. 'chang' → logprob: -17.875043869018555
    9. 'changed' → logprob: -18.125043869018555
    10. '(ch' → logprob: -18.250043869018555

Token 763: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014173625037074089
    2. 'in' → logprob: -4.26417350769043
    3. ',' → logprob: -11.88917350769043
    4. ' ' → logprob: -13.51417350769043
    5. 'range' → logprob: -14.01417350769043
    6. '	in' → logprob: -15.26417350769043
    7. ',in' → logprob: -15.88917350769043
    8. '   ' → logprob: -16.13917350769043
    9. '```' → logprob: -16.13917350769043
    10. '  ' → logprob: -16.38917350769043

Token 764: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.935296834039036e-06
    2. ' range' → logprob: -12.75000286102295
    3. '(range' → logprob: -22.375003814697266
    4. '   ' → logprob: -24.000003814697266
    5. '
' → logprob: -24.500003814697266
    6. '	range' → logprob: -24.875003814697266
    7. 'Range' → logprob: -25.250003814697266
    8. '_range' → logprob: -25.250003814697266
    9. '```' → logprob: -26.125003814697266
    10. 'rang' → logprob: -26.500003814697266

Token 765: '(max' (ID: 17178)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.36769771575927734
    2. '(max' → logprob: -1.3676977157592773
    3. '1' → logprob: -3.3676977157592773
    4. '(' → logprob: -4.617697715759277
    5. '(m' → logprob: -5.117697715759277
    6. 'm' → logprob: -5.992697715759277
    7. ' max' → logprob: -9.617697715759277
    8. '           ' → logprob: -10.242697715759277
    9. '   ' → logprob: -11.492697715759277
    10. '0' → logprob: -11.492697715759277

Token 766: '_changes' (ID: 119201)
  Prédit: '_changes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_changes' → logprob: -1.7432603272027336e-06
    2. 'Changes' → logprob: -14.000001907348633
    3. 'changes' → logprob: -15.000001907348633
    4. '+' → logprob: -15.625001907348633
    5. ' Changes' → logprob: -16.125001907348633
    6. '```' → logprob: -16.375001907348633
    7. '(m' → logprob: -16.500001907348633
    8. ' changes' → logprob: -17.125001907348633
    9. 'm' → logprob: -17.750001907348633
    10. '_choices' → logprob: -18.125001907348633

Token 767: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.9186317482963204e-05
    2. ' +' → logprob: -10.500049591064453
    3. '):
' → logprob: -11.000049591064453
    4. '):' → logprob: -12.375049591064453
    5. '+
' → logprob: -15.125049591064453
    6. ',' → logprob: -15.125049591064453
    7. '```' → logprob: -16.500049591064453
    8. ',+' → logprob: -17.000049591064453
    9. ')+' → logprob: -17.000049591064453
    10. '+,' → logprob: -17.000049591064453

Token 768: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014691312797367573
    2. '+' → logprob: -4.264691352844238
    3. 'm' → logprob: -7.764691352844238
    4. '2' → logprob: -10.264691352844238
    5. ' ' → logprob: -11.139691352844238
    6. '11' → logprob: -11.264691352844238
    7. '(m' → logprob: -11.389691352844238
    8. 'n' → logprob: -12.139691352844238
    9. '(' → logprob: -12.389691352844238
    10. 'max' → logprob: -12.639691352844238

Token 769: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.09510238468647003
    2. ':
' → logprob: -2.470102310180664
    3. ':' → logprob: -5.595102310180664
    4. '():
' → logprob: -6.720102310180664
    5. '):' → logprob: -7.220102310180664
    6. '+' → logprob: -8.845102310180664
    7. '```' → logprob: -9.345102310180664
    8. ']:
' → logprob: -9.470102310180664
    9. ',' → logprob: -10.095102310180664
    10. '):
' → logprob: -10.345102310180664

Token 770: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07973815500736237
    2. '               ' → logprob: -3.329738140106201
    3. '<|end|>' → logprob: -3.954738140106201
    4. ' if' → logprob: -4.454738140106201
    5. '       ' → logprob: -5.079738140106201
    6. '	       ' → logprob: -6.954738140106201
    7. 'if' → logprob: -6.954738140106201
    8. '   ' → logprob: -7.329738140106201
    9. '<|end|>' → logprob: -7.954738140106201
    10. '	           ' → logprob: -8.82973861694336

Token 771: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1354627013206482
    2. ' if' → logprob: -2.385462760925293
    3. '               ' → logprob: -3.385462760925293
    4. '                   ' → logprob: -7.760462760925293
    5. '           ' → logprob: -8.385462760925293
    6. '   ' → logprob: -10.635462760925293
    7. '	if' → logprob: -10.885462760925293
    8. '```' → logprob: -10.885462760925293
    9. 'If' → logprob: -11.510462760925293
    10. '                       ' → logprob: -11.760462760925293

Token 772: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.000553151941858232
    2. ' dist' → logprob: -7.500553131103516
    3. 'abs' → logprob: -16.750553131103516
    4. '   ' → logprob: -18.625553131103516
    5. '           ' → logprob: -18.625553131103516
    6. '	dist' → logprob: -18.875553131103516
    7. '               ' → logprob: -19.500553131103516
    8. '(dist' → logprob: -19.625553131103516
    9. '       ' → logprob: -21.500553131103516
    10. 'Dist' → logprob: -21.625553131103516

Token 773: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. '[n' → logprob: -16.25
    3. '   ' → logprob: -16.25
    4. '[' → logprob: -17.0
    5. '₂' → logprob: -17.125
    6. '```' → logprob: -17.5
    7. ' ' → logprob: -17.625
    8. '２' → logprob: -18.125
    9. '
' → logprob: -18.25
    10. '۲' → logprob: -18.6875

Token 774: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -9.253090865968261e-06
    2. 'n' → logprob: -11.750009536743164
    3. ' [' → logprob: -14.375009536743164
    4. '(n' → logprob: -14.750009536743164
    5. '```' → logprob: -15.750009536743164
    6. '[' → logprob: -16.250009536743164
    7. '][' → logprob: -17.125009536743164
    8. '[
' → logprob: -18.125009536743164
    9. '
' → logprob: -18.250009536743164
    10. '<n' → logprob: -18.625009536743164

Token 775: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.08913847804069519
    2. '[ch' → logprob: -2.4641385078430176
    3. '[' → logprob: -9.96413803100586
    4. 'ch' → logprob: -10.33913803100586
    5. ')[' → logprob: -10.46413803100586
    6. ']' → logprob: -10.46413803100586
    7. ')][' → logprob: -11.08913803100586
    8. ' ][' → logprob: -11.46413803100586
    9. '```' → logprob: -11.58913803100586
    10. '==' → logprob: -11.96413803100586

Token 776: 'ch' (ID: 332)
  Prédit: 'ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.002495160326361656
    2. 'c' → logprob: -6.002495288848877
    3. ' ch' → logprob: -11.377494812011719
    4. '[ch' → logprob: -11.752494812011719
    5. '```' → logprob: -16.25249481201172
    6. '	ch' → logprob: -18.25249481201172
    7. '[c' → logprob: -18.50249481201172
    8. '(ch' → logprob: -18.62749481201172
    9. '   ' → logprob: -18.87749481201172
    10. ' c' → logprob: -19.00249481201172

Token 777: ']==' (ID: 34128)
  Prédit: ']=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.22155550122261047
    2. ']' → logprob: -1.721555471420288
    3. '==' → logprob: -3.971555471420288
    4. ' ==' → logprob: -6.846555709838867
    5. ')==' → logprob: -11.096555709838867
    6. '']==' → logprob: -11.721555709838867
    7. ' ]' → logprob: -12.846555709838867
    8. '][' → logprob: -13.096555709838867
    9. ']<=' → logprob: -13.346555709838867
    10. ']=' → logprob: -13.971555709838867

Token 778: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.306760805164231e-05
    2. ' c' → logprob: -11.25001335144043
    3. '	c' → logprob: -19.50001335144043
    4. '   ' → logprob: -20.12501335144043
    5. ')c' → logprob: -22.00001335144043
    6. '```' → logprob: -23.12501335144043
    7. ' ' → logprob: -23.50001335144043
    8. '  ' → logprob: -24.00001335144043
    9. '$c' → logprob: -24.12501335144043
    10. '_c' → logprob: -24.75001335144043

Token 779: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.10045790672302246
    2. ':' → logprob: -2.3504579067230225
    3. '):
' → logprob: -8.475458145141602
    4. ':
' → logprob: -11.725458145141602
    5. ':return' → logprob: -11.850458145141602
    6. '):' → logprob: -12.600458145141602
    7. '                   ' → logprob: -12.725458145141602
    8. ' and' → logprob: -12.725458145141602
    9. '           ' → logprob: -12.850458145141602
    10. '               ' → logprob: -13.100458145141602

Token 780: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006424982566386461
    2. '               ' → logprob: -5.381424903869629
    3. 'ans' → logprob: -7.256424903869629
    4. 'print' → logprob: -7.756424903869629
    5. '                       ' → logprob: -8.256424903869629
    6. '           ' → logprob: -9.131424903869629
    7. ' ans' → logprob: -9.506424903869629
    8. '	ans' → logprob: -9.881424903869629
    9. '   ' → logprob: -10.131424903869629
    10. '                           ' → logprob: -10.256424903869629

Token 781: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.11316674947738647
    2. 'print' → logprob: -2.8631668090820312
    3. '                   ' → logprob: -3.3631668090820312
    4. '               ' → logprob: -4.613166809082031
    5. ' ans' → logprob: -6.113166809082031
    6. '	ans' → logprob: -6.613166809082031
    7. '           ' → logprob: -7.238166809082031
    8. '                       ' → logprob: -7.738166809082031
    9. '   ' → logprob: -8.113166809082031
    10. '       ' → logprob: -8.863166809082031

Token 782: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09354374557733536
    2. ' =' → logprob: -2.468543767929077
    3. '=int' → logprob: -6.093543529510498
    4. '=sys' → logprob: -7.593543529510498
    5. '=max' → logprob: -7.968543529510498
    6. '=c' → logprob: -8.593544006347656
    7. '=len' → logprob: -8.843544006347656
    8. '=count' → logprob: -8.968544006347656
    9. '=min' → logprob: -8.968544006347656
    10. '=cv' → logprob: -9.093544006347656

Token 783: 'ch' (ID: 332)
  Prédit: 'ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -1.9361264946837764e-07
    2. ' ch' → logprob: -16.5
    3. '	ch' → logprob: -21.5
    4. '[ch' → logprob: -23.25
    5. '(ch' → logprob: -23.5
    6. 'Ch' → logprob: -24.0
    7. '   ' → logprob: -24.125
    8. '_ch' → logprob: -25.25
    9. ',ch' → logprob: -25.5
    10. 'chg' → logprob: -26.0

Token 784: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.009485119953751564
    2. '           ' → logprob: -4.884485244750977
    3. 'print' → logprob: -6.509485244750977
    4. '               ' → logprob: -8.509485244750977
    5. '       ' → logprob: -9.134485244750977
    6. '   ' → logprob: -9.884485244750977
    7. ' print' → logprob: -11.509485244750977
    8. '                       ' → logprob: -11.634485244750977
    9. '
' → logprob: -12.384485244750977
    10. '                           ' → logprob: -12.884485244750977

Token 785: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004862041678279638
    2. '           ' → logprob: -5.504861831665039
    3. 'print' → logprob: -7.379861831665039
    4. '   ' → logprob: -9.379861831665039
    5. '       ' → logprob: -9.754861831665039
    6. '               ' → logprob: -11.379861831665039
    7. '
' → logprob: -13.004861831665039
    8. '                       ' → logprob: -13.629861831665039
    9. ' print' → logprob: -13.879861831665039
    10. 'break' → logprob: -14.629861831665039

Token 786: ' break' (ID: 2338)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.16473054885864258
    2. 'print' → logprob: -2.1647305488586426
    3. 'break' (adapté à ' break') → logprob: -3.6647305488586426
    4. '           ' → logprob: -5.164730548858643
    5. '               ' → logprob: -5.414730548858643
    6. '                       ' → logprob: -7.789730548858643
    7. ' print' → logprob: -7.914730548858643
    8. ' break' → logprob: -8.039730072021484
    9. '                           ' → logprob: -8.914730072021484
    10. '       ' → logprob: -10.164730072021484

Token 787: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0955604761838913
    2. '   ' → logprob: -2.8455605506896973
    3. 'print' → logprob: -3.8455605506896973
    4. '
' → logprob: -4.470560550689697
    5. '           ' → logprob: -8.720560073852539
    6. '```' → logprob: -10.720560073852539
    7. ' print' → logprob: -11.095560073852539
    8. '        
' → logprob: -11.470560073852539
    9. '    
' → logprob: -12.095560073852539
    10. '            
' → logprob: -14.470560073852539

Token 788: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04393944889307022
    2. 'print' → logprob: -3.4189393520355225
    3. '   ' → logprob: -5.168939590454102
    4. '
' → logprob: -5.543939590454102
    5. '           ' → logprob: -7.418939590454102
    6. '```' → logprob: -11.293939590454102
    7. ' print' → logprob: -11.418939590454102
    8. '        
' → logprob: -12.168939590454102
    9. '<|end|>' → logprob: -12.543939590454102
    10. '    
' → logprob: -12.668939590454102

Token 789: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00012713817704934627
    2. '       ' → logprob: -9.000126838684082
    3. '   ' → logprob: -13.250126838684082
    4. ' print' → logprob: -13.250126838684082
    5. '           ' → logprob: -16.6251277923584
    6. '	print' → logprob: -17.6251277923584
    7. '```' → logprob: -18.5001277923584
    8. 'if' → logprob: -19.0001277923584
    9. '#print' → logprob: -21.3751277923584
    10. ' ' → logprob: -21.6251277923584

Token 790: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -7.941850526549388e-06
    2. 'ans' → logprob: -11.750007629394531
    3. '(answer' → logprob: -18.75000762939453
    4. '	ans' → logprob: -19.25000762939453
    5. ' (' → logprob: -19.50000762939453
    6. '(' → logprob: -20.12500762939453
    7. '(
' → logprob: -21.12500762939453
    8. '(abs' → logprob: -21.25000762939453
    9. ' ans' → logprob: -21.62500762939453
    10. '(an' → logprob: -22.25000762939453

Token 791: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ')}' → logprob: -15.500000953674316
    3. ')
' → logprob: -15.875000953674316
    4. ' )' → logprob: -15.875000953674316
    5. ')}}' → logprob: -17.75
    6. ')`' → logprob: -18.125
    7. '))' → logprob: -18.25
    8. '())' → logprob: -18.25
    9. ')return' → logprob: -18.25
    10. '}' → logprob: -18.625

Token 792: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.048589304089546204
    2. ' ans' → logprob: -3.0485892295837402
    3. '(ans' → logprob: -13.298589706420898
    4. '	ans' → logprob: -15.173589706420898
    5. '
' → logprob: -17.4235897064209
    6. '_ans' → logprob: -18.0485897064209
    7. '   ' → logprob: -19.0485897064209
    8. 'answer' → logprob: -19.5485897064209
    9. '-' → logprob: -19.6735897064209
    10. ' ' → logprob: -19.9235897064209

Token 793: '>=' (ID: 20974)
  Prédit: '!=-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=-' → logprob: -0.026531223207712173
    2. '!=' → logprob: -3.776531219482422
    3. ' !=' → logprob: -5.901531219482422
    4. '>=' → logprob: -7.526531219482422
    5. '==-' → logprob: -13.776531219482422
    6. 'else' → logprob: -13.776531219482422
    7. '>-' → logprob: -13.901531219482422
    8. '```' → logprob: -13.901531219482422
    9. '!==' → logprob: -14.276531219482422
    10. '>' → logprob: -14.401531219482422

Token 794: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '
' → logprob: -19.625003814697266
    4. '```' → logprob: -19.750003814697266
    5. '۰' → logprob: -20.125003814697266
    6. '０' → logprob: -21.000003814697266
    7. 'else' → logprob: -21.250003814697266
    8. '=' → logprob: -21.500003814697266
    9. ' ' → logprob: -21.750003814697266
    10. ')' → logprob: -22.000003814697266

Token 795: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.018150994554162025
    2. ' else' → logprob: -4.018150806427002
    3. '```' → logprob: -14.26815128326416
    4. '	else' → logprob: -15.39315128326416
    5. '
' → logprob: -16.893150329589844
    6. ' ' → logprob: -17.143150329589844
    7. ')' → logprob: -17.393150329589844
    8. '   ' → logprob: -17.768150329589844
    9. '<|end|>' → logprob: -18.018150329589844
    10. '_else' → logprob: -18.018150329589844

Token 796: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.009061814285814762
    2. '0' → logprob: -5.009061813354492
    3. '"' → logprob: -6.509061813354492
    4. '-c' → logprob: -8.509061813354492
    5. ' -' → logprob: -9.259061813354492
    6. 'c' → logprob: -9.634061813354492
    7. ''' → logprob: -9.634061813354492
    8. '-original' → logprob: -9.759061813354492
    9. '-n' → logprob: -9.884061813354492
    10. '-m' → logprob: -10.134061813354492

Token 797: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04935959726572037
    2. '0' → logprob: -3.1743595600128174
    3. '"' → logprob: -5.2993597984313965
    4. '-c' → logprob: -8.049359321594238
    5. ''' → logprob: -8.674359321594238
    6. '-n' → logprob: -8.799359321594238
    7. '-dist' → logprob: -8.799359321594238
    8. '"-' → logprob: -9.424359321594238
    9. ''-' → logprob: -9.799359321594238
    10. 'sys' → logprob: -9.924359321594238

Token 798: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.816093228830141e-06
    2. ')
' → logprob: -13.25000286102295
    3. '())' → logprob: -14.87500286102295
    4. ' )' → logprob: -15.12500286102295
    5. '))' → logprob: -16.625001907348633
    6. ')}' → logprob: -16.625001907348633
    7. '`)' → logprob: -17.000001907348633
    8. '<|end|>' → logprob: -17.000001907348633
    9. ')}}' → logprob: -17.500001907348633
    10. ')return' → logprob: -17.875001907348633

Token 799: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12003143876791
    2. 'main' → logprob: -2.6200313568115234
    3. '<|end|>' → logprob: -3.2450313568115234
    4. '
' → logprob: -8.120031356811523
    5. ' if' → logprob: -8.120031356811523
    6. '```' → logprob: -8.370031356811523
    7. '#' → logprob: -8.620031356811523
    8. '(main' → logprob: -9.245031356811523
    9. ')' → logprob: -9.995031356811523
    10. '<|end|>' → logprob: -9.995031356811523

Token 800: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.3870491683483124
    2. '__' → logprob: -1.1370491981506348
    3. '_' → logprob: -9.762048721313477
    4. 'name' → logprob: -9.887048721313477
    5. '_name' → logprob: -10.262048721313477
    6. ' ' → logprob: -11.887048721313477
    7. '___' → logprob: -11.887048721313477
    8. 'if' → logprob: -12.262048721313477
    9. ' ' → logprob: -12.387048721313477
    10. 'n' → logprob: -13.012048721313477

Token 801: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.019172802567481995
    2. '==' → logprob: -4.269172668457031
    3. ' ==' → logprob: -6.144172668457031
    4. '=="' → logprob: -6.394172668457031
    5. 'name' → logprob: -7.269172668457031
    6. '=='' → logprob: -8.394172668457031
    7. '.__' → logprob: -9.769172668457031
    8. '```' → logprob: -9.769172668457031
    9. '__.__' → logprob: -9.894172668457031
    10. '_' → logprob: -10.769172668457031

Token 802: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.000145137935760431
    2. '==' → logprob: -9.375144958496094
    3. '__.__' → logprob: -9.875144958496094
    4. '=="' → logprob: -12.000144958496094
    5. '__.' → logprob: -14.000144958496094
    6. '=='' → logprob: -14.625144958496094
    7. ' ==' → logprob: -15.250144958496094
    8. '__["' → logprob: -15.375144958496094
    9. '__('' → logprob: -16.000144958496094
    10. '```' → logprob: -16.000144958496094

Token 803: '=="' (ID: 24027)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5523117184638977
    2. '==' → logprob: -1.177311658859253
    3. '=="' → logprob: -2.302311658859253
    4. '=='' → logprob: -4.552311897277832
    5. ' ==' → logprob: -5.177311897277832
    6. '==
' → logprob: -11.427311897277832
    7. '__.__' → logprob: -11.927311897277832
    8. '==="' → logprob: -12.052311897277832
    9. '_' → logprob: -12.177311897277832
    10. '==='' → logprob: -12.177311897277832

Token 804: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6210584044456482
    2. '"' → logprob: -0.8710584044456482
    3. ''' → logprob: -3.121058464050293
    4. 'main' → logprob: -12.496058464050293
    5. ' "__' → logprob: -13.496058464050293
    6. '/__' → logprob: -16.371057510375977
    7. '___' → logprob: -16.496057510375977
    8. '"name' → logprob: -16.621057510375977
    9. '"user' → logprob: -16.996057510375977
    10. ' __' → logprob: -16.996057510375977

Token 805: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -6.392202976712724e-06
    2. 'name' → logprob: -12.000006675720215
    3. ' main' → logprob: -17.1250057220459
    4. '_main' → logprob: -17.1250057220459
    5. '__' → logprob: -17.5000057220459
    6. 'm' → logprob: -20.5000057220459
    7. '-main' → logprob: -20.7500057220459
    8. '"' → logprob: -20.8750057220459
    9. '	main' → logprob: -21.0000057220459
    10. '(main' → logprob: -21.7500057220459

Token 806: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.03858862817287445
    2. '__' → logprob: -3.288588523864746
    3. '__':
' → logprob: -7.538588523864746
    4. '__:' → logprob: -11.663588523864746
    5. '__["' → logprob: -12.913588523864746
    6. '__
' → logprob: -14.038588523864746
    7. '__.__' → logprob: -14.288588523864746
    8. '__
' → logprob: -14.538588523864746
    9. '__.' → logprob: -14.788588523864746
    10. '__",' → logprob: -15.288588523864746

Token 807: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002901877975091338
    2. '	main' → logprob: -6.377902030944824
    3. 'main' → logprob: -6.752902030944824
    4. ' main' → logprob: -10.502902030944824
    5. '    
' → logprob: -13.627902030944824
    6. '```' → logprob: -13.627902030944824
    7. '   ' → logprob: -14.127902030944824
    8. '_main' → logprob: -15.502902030944824
    9. '(main' → logprob: -15.627902030944824
    10. '<|end|>' → logprob: -16.127901077270508

Token 808: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -2.816093228830141e-06
    2. ' main' → logprob: -13.00000286102295
    3. '	main' → logprob: -14.75000286102295
    4. '   ' → logprob: -16.000001907348633
    5. '_main' → logprob: -20.000001907348633
    6. '(main' → logprob: -20.750001907348633
    7. '.main' → logprob: -21.375001907348633
    8. '-main' → logprob: -23.250001907348633
    9. 'Main' → logprob: -24.250001907348633
    10. ' ' → logprob: -24.750001907348633

Token 809: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 807
Tokens correctement prédits (1ère position, stricte): 329
Tokens correctement prédits (1ère position, avec adaptation): 361
Tokens correctement prédits (top 10): 641
Précision stricte (1ère position): 40.77%
Précision adaptée (1ère position): 44.73%
Précision (top 10): 79.43%
================================================================================
