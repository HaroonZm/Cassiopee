================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:17:35
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class CubeRootApproximator:
    """
    Une classe abstraite pour approximer la racine cubique d'un nombre positif
    en utilisant un procédé itératif défini par une fonction d'itération.
    """

    def __init__(self, q: int):
        if q <= 0:
            raise ValueError("q doit être un entier strictement positif")
        self.q = q
        self.tolerance = 0.00001 * q
        self.x = q / 2  # x1 initiale

    def iterate(self, x: float) -> float:
        """
        Calcul de la prochaine approximation selon la formule :
        x_{n+1} = x_n - (x_n^3 - q) / (3 * x_n^2)
        """
        numerator = x ** 3 - self.q
        denominator = 3 * (x ** 2)
        return x - numerator / denominator

    def has_converged(self, x: float) -> bool:
        """
        Condition de convergence : |x^3 - q| < tolerance
        """
        error = abs(x ** 3 - self.q)
        return error < self.tolerance

    def approximate(self) -> float:
        """
        Exécute l'algorithme d'approximation itérative jusqu'à convergence.
        """
        iteration_limit = 1000  # sécurité pour éviter boucle infinie
        for _ in range(iteration_limit):
            if self.has_converged(self.x):
                return self.x
            self.x = self.iterate(self.x)
        # Si on sort de la boucle, on retourne la meilleure approximation trouvée
        return self.x


class CubeRootSolver:
    """
    Gestionnaire d'exécution pour plusieurs données et affichage des résultats
    """

    def __init__(self):
        self.results = []

    def process_input(self, q_values):
        """
        Processus global pour plusieurs données
        """
        for q in q_values:
            if q == -1:
                break
            approximator = CubeRootApproximator(q)
            root = approximator.approximate()
            self.results.append(root)

    def output_results(self):
        """
        Affiche les résultats formatés selon la demande
        """
        for result in self.results:
            print(f"{result:.6f}")


def main():
    import sys

    solver = CubeRootSolver()
    input_values = []

    for line in sys.stdin:
        line = line.strip()
        if line == '':
            continue
        try:
            q = int(line)
            input_values.append(q)
            if q == -1:
                break
        except ValueError:
            continue

    solver.process_input(input_values)
    solver.output_results()


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Cube' (ID: 76129)
  → Token d'amorce (pas de prédiction)

Token 2: 'Root' (ID: 10834)
  → Token d'amorce (pas de prédiction)

Token 3: 'Appro' (ID: 24507)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5150183439254761
    2. '{' → logprob: -1.265018343925476
    3. ':' → logprob: -2.1400184631347656
    4. ' {' → logprob: -7.390018463134766
    5. '```' → logprob: -7.390018463134766
    6. '[' → logprob: -7.890018463134766
    7. '.' → logprob: -7.890018463134766
    8. ' ' → logprob: -9.015018463134766
    9. ' :' → logprob: -9.140018463134766
    10. ' (' → logprob: -9.265018463134766

Token 4: 'xim' (ID: 8411)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.002105529187247157
    2. 'r' → logprob: -6.627105712890625
    3. 'xim' → logprob: -8.627105712890625
    4. '```' → logprob: -8.752105712890625
    5. '{' → logprob: -9.127105712890625
    6. '(' → logprob: -9.752105712890625
    7. 'Calculator' → logprob: -10.127105712890625
    8. 'n' → logprob: -10.127105712890625
    9. 'nt' → logprob: -10.627105712890625
    10. 'space' → logprob: -10.752105712890625

Token 5: 'ator' (ID: 1246)
  Prédit: 'ation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.056904200464487076
    2. 'ator' → logprob: -3.4319043159484863
    3. 'a' → logprob: -3.8069043159484863
    4. 'ate' → logprob: -7.681904315948486
    5. 'at' → logprob: -8.931903839111328
    6. 'er' → logprob: -9.306903839111328
    7. 'ater' → logprob: -10.431903839111328
    8. '```' → logprob: -10.806903839111328
    9. ' at' → logprob: -11.681903839111328
    10. 'atio' → logprob: -11.931903839111328

Token 6: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.42110514640808105
    2. '{' → logprob: -1.546105146408081
    3. ':' → logprob: -2.046105146408081
    4. ' {' → logprob: -7.42110538482666
    5. '.' → logprob: -7.92110538482666
    6. ' ' → logprob: -8.92110538482666
    7. '(:' → logprob: -9.79610538482666
    8. '```' → logprob: -9.79610538482666
    9. ' (' → logprob: -10.17110538482666
    10. ' :' → logprob: -10.92110538482666

Token 7: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15242081880569458
    2. ':' → logprob: -2.02742075920105
    3. '   ' → logprob: -5.527420997619629
    4. '```' → logprob: -5.527420997619629
    5. '(
' → logprob: -7.152420997619629
    6. ':
' → logprob: -8.402420997619629
    7. ' ' → logprob: -8.777420997619629
    8. '.' → logprob: -9.152420997619629
    9. '():' → logprob: -9.152420997619629
    10. '\' → logprob: -9.402420997619629

Token 8: ' """
' (ID: 7037)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0006946325302124
    2. '   ' → logprob: -1.1256946325302124
    3. '    ' → logprob: -1.3756946325302124
    4. '(' → logprob: -3.875694751739502
    5. ' def' → logprob: -4.750694751739502
    6. '```' → logprob: -5.000694751739502
    7. '(n' → logprob: -5.875694751739502
    8. '_' → logprob: -6.250694751739502
    9. '`' → logprob: -6.250694751739502
    10. ' (' → logprob: -6.500694751739502

Token 9: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.19502680003643036
    2. 'C' → logprob: -3.0700268745422363
    3. '   ' → logprob: -3.4450268745422363
    4. 'Calcul' → logprob: -3.5700268745422363
    5. 'Calculate' → logprob: -3.9450268745422363
    6. ' """' → logprob: -4.320026874542236
    7. ' Calculates' → logprob: -4.820026874542236
    8. 'A' → logprob: -4.945026874542236
    9. 'Appro' → logprob: -5.695026874542236
    10. 'Approx' → logprob: -6.195026874542236

Token 10: ' Une' (ID: 19758)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.466521292924881
    2. 'Calcul' → logprob: -1.7165212631225586
    3. 'Calculate' → logprob: -2.7165212631225586
    4. '   ' → logprob: -2.9665212631225586
    5. 'Approx' → logprob: -3.9665212631225586
    6. 'Class' → logprob: -4.466521263122559
    7. ' Calculates' → logprob: -4.591521263122559
    8. 'Provides' → logprob: -4.841521263122559
    9. 'Appro' → logprob: -4.966521263122559
    10. 'A' → logprob: -5.216521263122559

Token 11: ' classe' (ID: 29329)
  Prédit: 'rt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rt' → logprob: -0.6479951739311218
    2. 'x' → logprob: -1.5229952335357666
    3. 'class' → logprob: -2.3979952335357666
    4. 'valu' → logprob: -2.7729952335357666
    5. 'p' → logprob: -3.7729952335357666
    6. '   ' → logprob: -4.2729949951171875
    7. 'st' → logprob: -4.2729949951171875
    8. 'r' → logprob: -4.7729949951171875
    9. ' classe' → logprob: -4.7729949951171875
    10. 'ven' → logprob: -5.3979949951171875

Token 12: ' abstra' (ID: 186216)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0529452562332153
    2. ' qui' → logprob: -1.8029452562332153
    3. '```' → logprob: -2.302945137023926
    4. ' pour' → logprob: -2.677945137023926
    5. ' ' → logprob: -2.802945137023926
    6. ' d' → logprob: -3.177945137023926
    7. ' ```' → logprob: -3.177945137023926
    8. ' Python' → logprob: -3.427945137023926
    9. '   ' → logprob: -3.677945137023926
    10. ' de' → logprob: -4.552945137023926

Token 13: 'ite' (ID: 651)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.22110724449157715
    2. 'c' → logprob: -2.096107244491577
    3. 'ct' → logprob: -3.096107244491577
    4. '   ' → logprob: -4.471107482910156
    5. 'class' → logprob: -5.221107482910156
    6. '  ' → logprob: -5.846107482910156
    7. ' c' → logprob: -5.971107482910156
    8. ' ' → logprob: -6.346107482910156
    9. 'cte' → logprob: -6.721107482910156
    10. '```' → logprob: -7.471107482910156

Token 14: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5321615934371948
    2. ' ' → logprob: -1.5321615934371948
    3. '```' → logprob: -2.2821617126464844
    4. '<|end|>' → logprob: -4.032161712646484
    5. '.' → logprob: -4.282161712646484
    6. '  ' → logprob: -4.907161712646484
    7. '<class' → logprob: -4.907161712646484
    8. 'class' → logprob: -5.282161712646484
    9. 's' → logprob: -5.407161712646484
    10. ' :' → logprob: -5.407161712646484

Token 15: ' approx' (ID: 33956)
  Prédit: ' approxim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' approxim' → logprob: -0.14601311087608337
    2. 'appro' → logprob: -2.771013021469116
    3. '   ' → logprob: -3.896013021469116
    4. 'approx' → logprob: -4.021013259887695
    5. ' approx' → logprob: -4.771013259887695
    6. ' l' → logprob: -4.771013259887695
    7. ' calcul' → logprob: -5.396013259887695
    8. ' approximation' → logprob: -5.771013259887695
    9. ' appro' → logprob: -6.021013259887695
    10. 'l' → logprob: -6.271013259887695

Token 16: 'imer' (ID: 3747)
  Prédit: 'imer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imer' → logprob: -0.058903999626636505
    2. 'im' → logprob: -3.808903932571411
    3. 'i' → logprob: -4.55890417098999
    4. '   ' → logprob: -4.55890417098999
    5. 'imation' → logprob: -5.68390417098999
    6. 'imator' → logprob: -5.68390417098999
    7. 'imiter' → logprob: -6.55890417098999
    8. '\' → logprob: -7.18390417098999
    9. '#' → logprob: -7.80890417098999
    10. ' ' → logprob: -7.80890417098999

Token 17: ' la' (ID: 557)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 18: ' rac' (ID: 12334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6775235533714294
    2. '   ' → logprob: -1.6775236129760742
    3. ' rac' → logprob: -1.9275236129760742
    4. 'rac' → logprob: -2.677523612976074
    5. ' cube' → logprob: -3.177523612976074
    6. '  ' → logprob: -3.802523612976074
    7. '       ' → logprob: -4.927523612976074
    8. '     ' → logprob: -5.677523612976074
    9. 'cube' → logprob: -5.677523612976074
    10. ' valeur' → logprob: -5.802523612976074

Token 19: 'ine' (ID: 514)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -1.4503015279769897
    2. '```' → logprob: -1.9503015279769897
    3. 'î' → logprob: -2.2003016471862793
    4. 'ø' → logprob: -2.3253016471862793
    5. 'í' → logprob: -2.5753016471862793
    6. 'ô' → logprob: -2.8253016471862793
    7. 'i' → logprob: -2.8253016471862793
    8. 'ó' → logprob: -3.7003016471862793
    9. 'e' → logprob: -3.8253016471862793
    10. '   ' → logprob: -4.075301647186279

Token 20: ' cub' (ID: 18538)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1967257857322693
    2. '   ' → logprob: -2.946725845336914
    3. ' ' → logprob: -3.196725845336914
    4. ' carr' → logprob: -3.946725845336914
    5. ' c' → logprob: -4.196725845336914
    6. 'cub' → logprob: -4.196725845336914
    7. 'car' → logprob: -4.696725845336914
    8. '_' → logprob: -5.321725845336914
    9. ' cub' → logprob: -5.821725845336914
    10. 'd' → logprob: -5.946725845336914

Token 21: 'ique' (ID: 2222)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20564092695713043
    2. 'e' → logprob: -2.080641031265259
    3. 'ique' → logprob: -4.33064079284668
    4. '```' → logprob: -4.33064079284668
    5. 'ic' → logprob: -5.33064079284668
    6. 'í' → logprob: -5.70564079284668
    7. '   ' → logprob: -5.70564079284668
    8. '**' → logprob: -5.95564079284668
    9. 'î' → logprob: -5.95564079284668
    10. 'é' → logprob: -6.33064079284668

Token 22: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.345065712928772
    2. '\n' → logprob: -1.470065712928772
    3. '   ' → logprob: -1.970065712928772
    4. 'e' → logprob: -2.0950655937194824
    5. 's' → logprob: -2.5950655937194824
    6. '.' → logprob: -3.0950655937194824
    7. '```' → logprob: -3.7200655937194824
    8. ''' → logprob: -3.7200655937194824
    9. '`' → logprob: -3.8450655937194824
    10. '\' → logprob: -4.470065593719482

Token 23: ''un' (ID: 9788)
  Prédit: ''un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.25544819235801697
    2. 'e' → logprob: -2.50544810295105
    3. ''une' → logprob: -2.63044810295105
    4. 'u' → logprob: -3.25544810295105
    5. ''u' → logprob: -4.130448341369629
    6. ''' → logprob: -4.255448341369629
    7. 'un' → logprob: -7.130448341369629
    8. '’un' → logprob: -7.380448341369629
    9. ''''' → logprob: -7.755448341369629
    10. ''e' → logprob: -8.255448341369629

Token 24: ' nombre' (ID: 9733)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0005132370279170573
    2. 'e' → logprob: -9.125513076782227
    3. '  ' → logprob: -9.250513076782227
    4. ' )' → logprob: -9.875513076782227
    5. ')' → logprob: -10.500513076782227
    6. '.' → logprob: -10.875513076782227
    7. '<|end|>' → logprob: -10.875513076782227
    8. ' cube' → logprob: -11.000513076782227
    9. '   ' → logprob: -11.125513076782227
    10. 'n' → logprob: -11.250513076782227

Token 25: ' positif' (ID: 89008)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5555995106697083
    2. '   ' → logprob: -2.0555994510650635
    3. ' ' → logprob: -2.5555994510650635
    4. 's' → logprob: -2.5555994510650635
    5. 'e' → logprob: -2.6805994510650635
    6. ' 
' → logprob: -3.4305994510650635
    7. '
' → logprob: -5.180599689483643
    8. ',' → logprob: -5.305599689483643
    9. ' ,' → logprob: -6.055599689483643
    10. ')' → logprob: -6.180599689483643

Token 26: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9532085657119751
    2. ' ' → logprob: -1.703208565711975
    3. 's' → logprob: -1.828208565711975
    4. '\n' → logprob: -2.5782084465026855
    5. '.' → logprob: -2.7032084465026855
    6. ' 
' → logprob: -3.2032084465026855
    7. '\' → logprob: -3.7032084465026855
    8. '
' → logprob: -4.3282084465026855
    9. '    ' → logprob: -5.2032084465026855
    10. 'n' → logprob: -5.2032084465026855

Token 27: '   ' (ID: 271)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0594576597213745
    2. '   ' → logprob: -1.0594576597213745
    3. '\n' → logprob: -1.6844576597213745
    4. 's' → logprob: -2.809457778930664
    5. ' ' → logprob: -3.934457778930664
    6. '"""' → logprob: -4.559457778930664
    7. '```' → logprob: -5.184457778930664
    8. '\' → logprob: -5.309457778930664
    9. 'e' → logprob: -5.809457778930664
    10. ''' → logprob: -6.184457778930664

Token 28: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12063451111316681
    2. '```' → logprob: -3.8706345558166504
    3. '"""' → logprob: -3.9956345558166504
    4. '\n' → logprob: -4.24563455581665
    5. 's' → logprob: -4.37063455581665
    6. '
' → logprob: -4.37063455581665
    7. 'n' → logprob: -5.12063455581665
    8. '.' → logprob: -5.62063455581665
    9. '_' → logprob: -5.62063455581665
    10. ' ' → logprob: -5.62063455581665

Token 29: ' utilisant' (ID: 92474)
  Prédit: ' utilisant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisant' → logprob: -0.12893564999103546
    2. '   ' → logprob: -3.1289355754852295
    3. ' Python' → logprob: -4.128935813903809
    4. 'util' → logprob: -4.378935813903809
    5. ' math' → logprob: -4.753935813903809
    6. ' python' → logprob: -4.878935813903809
    7. ' ' → logprob: -5.503935813903809
    8. 'python' → logprob: -5.628935813903809
    9. ' float' → logprob: -5.628935813903809
    10. '```' → logprob: -5.878935813903809

Token 30: ' un' (ID: 537)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.5328816771507263
    2. ' l' → logprob: -1.782881736755371
    3. ' la' → logprob: -2.657881736755371
    4. ' différentes' → logprob: -2.907881736755371
    5. 'une' → logprob: -3.282881736755371
    6. ' des' → logprob: -3.407881736755371
    7. ' un' → logprob: -3.907881736755371
    8. 'l' → logprob: -4.907881736755371
    9. 'des' → logprob: -5.532881736755371
    10. 'diff' → logprob: -5.782881736755371

Token 31: ' procédé' (ID: 170605)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.7786731719970703
    2. ' alg' → logprob: -1.7786731719970703
    3. 'e' → logprob: -1.9036731719970703
    4. ' méthode' → logprob: -1.9036731719970703
    5. 'mé' → logprob: -2.9036731719970703
    6. ' approche' → logprob: -3.0286731719970703
    7. ' crit' → logprob: -3.5286731719970703
    8. ' processus' → logprob: -4.21617317199707
    9. ' point' → logprob: -4.40367317199707
    10. ' ' → logprob: -4.46617317199707

Token 32: ' it' (ID: 480)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.29913368821144104
    2. '.' → logprob: -2.799133777618408
    3. 'd' → logprob: -3.174133777618408
    4. ' ' → logprob: -3.299133777618408
    5. ' iter' → logprob: -3.674133777618408
    6. ' iterative' → logprob: -3.674133777618408
    7. ' de' → logprob: -4.049133777618408
    8. 's' → logprob: -4.049133777618408
    9. '   ' → logprob: -4.674133777618408
    10. 'de' → logprob: -5.549133777618408

Token 33: 'ér' (ID: 2156)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0038548242300748825
    2. 'ér' → logprob: -5.753854751586914
    3. 'e' → logprob: -7.378854751586914
    4. 'ération' → logprob: -10.503854751586914
    5. 'er' → logprob: -12.253854751586914
    6. 'éré' → logprob: -12.378854751586914
    7. 'éra' → logprob: -13.378854751586914
    8. 'érateur' → logprob: -13.378854751586914
    9. 'érations' → logprob: -13.628854751586914
    10. '\'' → logprob: -13.628854751586914

Token 34: 'atif' (ID: 23984)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.34565645456314087
    2. 'a' → logprob: -1.345656394958496
    3. 'e' → logprob: -3.720656394958496
    4. 'ér' → logprob: -5.095656394958496
    5. 'atif' → logprob: -7.470656394958496
    6. 'at' → logprob: -7.720656394958496
    7. '   ' → logprob: -8.845656394958496
    8. '```' → logprob: -9.970656394958496
    9. '"""' → logprob: -10.345656394958496
    10. ''''' → logprob: -10.470656394958496

Token 35: ' déf' (ID: 23956)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24349522590637207
    2. '.' → logprob: -1.618495225906372
    3. '    ' → logprob: -5.243494987487793
    4. '\n' → logprob: -5.743494987487793
    5. '
' → logprob: -6.368494987487793
    6. ' ' → logprob: -6.493494987487793
    7. '    
' → logprob: -6.618494987487793
    8. ',' → logprob: -6.743494987487793
    9. ' 
' → logprob: -7.368494987487793
    10. '```' → logprob: -7.743494987487793

Token 36: 'ini' (ID: 2363)
  Prédit: 'ini'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ini' → logprob: -0.13916167616844177
    2. 'inition' → logprob: -3.7641615867614746
    3. 'inie' → logprob: -3.7641615867614746
    4. '```' → logprob: -3.8891615867614746
    5. 'init' → logprob: -4.014161586761475
    6. 'inir' → logprob: -4.389161586761475
    7. 'in' → logprob: -4.764161586761475
    8. 'i' → logprob: -5.264161586761475
    9. 'inite' → logprob: -6.139161586761475
    10. '_init' → logprob: -6.264161586761475

Token 37: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.6934072971343994
    2. '.' → logprob: -1.4434072971343994
    3. ' ' → logprob: -2.4434072971343994
    4. '   ' → logprob: -2.5684072971343994
    5. ' dans' → logprob: -3.3184072971343994
    6. 'par' → logprob: -4.31840705871582
    7. 's' → logprob: -4.56840705871582
    8. ',' → logprob: -4.81840705871582
    9. 'e' → logprob: -5.19340705871582
    10. 'dans' → logprob: -5.31840705871582

Token 38: ' une' (ID: 2463)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7159404754638672
    2. 'une' → logprob: -1.2159404754638672
    3. ' une' → logprob: -2.465940475463867
    4. 'la' → logprob: -2.590940475463867
    5. ' sa' → logprob: -4.465940475463867
    6. '   ' → logprob: -4.840940475463867
    7. ' l' → logprob: -5.090940475463867
    8. 'l' → logprob: -5.090940475463867
    9. ' ' → logprob: -5.215940475463867
    10. 'un' → logprob: -5.840940475463867

Token 39: ' fonction' (ID: 17610)
  Prédit: ' méthode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' méthode' → logprob: -0.4328623116016388
    2. 'mé' → logprob: -1.5578622817993164
    3. ' fonction' → logprob: -2.5578622817993164
    4. 'fonction' → logprob: -3.4328622817993164
    5. '   ' → logprob: -4.057862281799316
    6. ' ' → logprob: -6.557862281799316
    7. ' étape' → logprob: -6.807862281799316
    8. ' méth' → logprob: -7.182862281799316
    9. ' formule' → logprob: -7.307862281799316
    10. 'dé' → logprob: -7.432862281799316

Token 40: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8702407479286194
    2. '_' → logprob: -1.7452406883239746
    3. ' ' → logprob: -1.7452406883239746
    4. '\' → logprob: -2.4952406883239746
    5. 's' → logprob: -3.6202406883239746
    6. '    ' → logprob: -3.6202406883239746
    7. '\n' → logprob: -3.9952406883239746
    8. '.' → logprob: -4.370240688323975
    9. ' \' → logprob: -4.620240688323975
    10. ' 
' → logprob: -4.995240688323975

Token 41: ''' (ID: 6)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.3502447009086609
    2. 'e' → logprob: -2.4752447605133057
    3. 'éc' → logprob: -2.8502447605133057
    4. ''é' → logprob: -3.2252447605133057
    5. ''' → logprob: -3.6002447605133057
    6. ''appro' → logprob: -3.6002447605133057
    7. 'approx' → logprob: -4.350244522094727
    8. ''améli' → logprob: -4.600244522094727
    9. 'istance' → logprob: -5.350244522094727
    10. ''aj' → logprob: -5.350244522094727

Token 42: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.9270071387290955
    2. 'approx' → logprob: -0.9270071387290955
    3. 'é' → logprob: -2.3020071983337402
    4. 'er' → logprob: -3.4270071983337402
    5. 'appro' → logprob: -3.6770071983337402
    6. 'iteration' → logprob: -3.8020071983337402
    7. 'une' → logprob: -5.55200719833374
    8. 'ét' → logprob: -5.80200719833374
    9. 'ab' → logprob: -6.30200719833374
    10. ''' → logprob: -6.42700719833374

Token 43: 'ération' (ID: 24977)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.021446462720632553
    2. 'ér' → logprob: -4.896446228027344
    3. 'ération' → logprob: -5.021446228027344
    4. 'e' → logprob: -5.146446228027344
    5. '_' → logprob: -7.021446228027344
    6. 'érations' → logprob: -9.521446228027344
    7. '   ' → logprob: -9.771446228027344
    8. 'er' → logprob: -10.396446228027344
    9. '#' → logprob: -10.521446228027344
    10. 'éra' → logprob: -10.896446228027344

Token 44: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13397370278835297
    2. '_' → logprob: -2.6339735984802246
    3. 's' → logprob: -4.258973598480225
    4. ' ' → logprob: -5.008973598480225
    5. '\' → logprob: -5.133973598480225
    6. '.' → logprob: -5.258973598480225
    7. 'n' → logprob: -5.383973598480225
    8. '\n' → logprob: -5.383973598480225
    9. '    ' → logprob: -6.008973598480225
    10. ')' → logprob: -6.133973598480225

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024950411170721054
    2. '"""' → logprob: -6.377494812011719
    3. '\n' → logprob: -8.377494812011719
    4. '    ' → logprob: -9.002494812011719
    5. '```' → logprob: -9.002494812011719
    6. '"' → logprob: -9.752494812011719
    7. '
' → logprob: -9.877494812011719
    8. '`' → logprob: -9.877494812011719
    9. '       ' → logprob: -10.627494812011719
    10. '"""
' → logprob: -10.627494812011719

Token 46: ' """

' (ID: 28800)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016918499022722244
    2. '"""' → logprob: -5.141918659210205
    3. '
' → logprob: -5.891918659210205
    4. ' 
' → logprob: -6.016918659210205
    5. ' """' → logprob: -6.391918659210205
    6. '    ' → logprob: -6.641918659210205
    7. ' ' → logprob: -7.391918659210205
    8. '```' → logprob: -7.891918659210205
    9. '    
' → logprob: -8.141918182373047
    10. '\n' → logprob: -8.266918182373047

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07875823974609375
    2. ' 
' → logprob: -3.3287582397460938
    3. '
' → logprob: -4.328758239746094
    4. '    
' → logprob: -4.453758239746094
    5. '\n' → logprob: -4.828758239746094
    6. 'n' → logprob: -5.953758239746094
    7. ' ' → logprob: -6.703758239746094
    8. '\' → logprob: -7.203758239746094
    9. 'd' → logprob: -7.828758239746094
    10. '     
' → logprob: -7.828758239746094

Token 48: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.6117916107177734
    2. '   ' → logprob: -0.8617916107177734
    3. ' def' → logprob: -3.3617916107177734
    4. 'd' → logprob: -8.361791610717773
    5. 'class' → logprob: -8.986791610717773
    6. '    ' → logprob: -9.486791610717773
    7. 'de' → logprob: -10.361791610717773
    8. ' ' → logprob: -10.861791610717773
    9. ' d' → logprob: -11.111791610717773
    10. '_' → logprob: -11.861791610717773

Token 49: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.06285916268825531
    2. ' _' → logprob: -4.187859058380127
    3. '_' → logprob: -4.312859058380127
    4. ' ' → logprob: -4.562859058380127
    5. '__' → logprob: -4.687859058380127
    6. ' ' → logprob: -5.312859058380127
    7. ' init' → logprob: -6.062859058380127
    8. ' get' → logprob: -7.187859058380127
    9. ' calculate' → logprob: -7.187859058380127
    10. ' compute' → logprob: -7.312859058380127

Token 50: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.0445127372804563e-05
    2. 'ini' → logprob: -12.12501049041748
    3. 'i' → logprob: -12.37501049041748
    4. 'in' → logprob: -14.62501049041748
    5. ' init' → logprob: -15.87501049041748
    6. 'int' → logprob: -17.125009536743164
    7. 'iter' → logprob: -18.500009536743164
    8. '	init' → logprob: -18.625009536743164
    9. 'inite' → logprob: -18.750009536743164
    10. 'inti' → logprob: -19.000009536743164

Token 51: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.012753789313137531
    2. '__' → logprob: -4.512753963470459
    3. '__(
' → logprob: -6.512753963470459
    4. '(' → logprob: -9.3877534866333
    5. '(self' → logprob: -9.6377534866333
    6. '__((' → logprob: -10.7627534866333
    7. '__(*' → logprob: -11.0127534866333
    8. '<|end|>' → logprob: -11.6377534866333
    9. '__('' → logprob: -11.7627534866333
    10. '__(/*!' → logprob: -13.1377534866333

Token 52: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0013269031187519431
    2. ' self' → logprob: -6.626327037811279
    3. ' ' → logprob: -14.751326560974121
    4. '   ' → logprob: -15.251326560974121
    5. '
' → logprob: -16.626327514648438
    6. ')' → logprob: -16.751327514648438
    7. '	self' → logprob: -16.876327514648438
    8. '(self' → logprob: -17.126327514648438
    9. 's' → logprob: -17.251327514648438
    10. '_self' → logprob: -17.501327514648438

Token 53: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.40162190794944763
    2. 'self' → logprob: -1.15162193775177
    3. ' self' → logprob: -4.4016218185424805
    4. ' ,' → logprob: -6.2766218185424805
    5. '(self' → logprob: -8.40162181854248
    6. ',self' → logprob: -8.52662181854248
    7. ')' → logprob: -10.15162181854248
    8. ' ' → logprob: -10.77662181854248
    9. '	self' → logprob: -11.65162181854248
    10. '<|end|>' → logprob: -12.27662181854248

Token 54: ' q' (ID: 2335)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.47680866718292236
    2. ' self' → logprob: -0.9768086671829224
    3. 'x' → logprob: -7.101808547973633
    4. ' x' → logprob: -7.476808547973633
    5. 'n' → logprob: -8.476808547973633
    6. 'initial' → logprob: -8.851808547973633
    7. ' n' → logprob: -9.101808547973633
    8. ' initial' → logprob: -9.101808547973633
    9. 'number' → logprob: -9.351808547973633
    10. '   ' → logprob: -9.351808547973633

Token 55: ':' (ID: 25)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0003144896763842553
    2. ')' → logprob: -9.125314712524414
    3. 'ual' → logprob: -9.625314712524414
    4. '):' → logprob: -10.375314712524414
    5. 'uant' → logprob: -10.375314712524414
    6. ':' → logprob: -10.500314712524414
    7. 'uer' → logprob: -11.750314712524414
    8. 'ue' → logprob: -11.875314712524414
    9. 'uest' → logprob: -12.250314712524414
    10. '=' → logprob: -12.250314712524414

Token 56: ' int' (ID: 677)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.08984032273292542
    2. ' float' → logprob: -2.4648404121398926
    3. 'int' → logprob: -7.339840412139893
    4. ')' → logprob: -8.714839935302734
    5. 'flo' → logprob: -10.714839935302734
    6. ' int' → logprob: -10.964839935302734
    7. '(float' → logprob: -11.589839935302734
    8. ' ' → logprob: -11.964839935302734
    9. '	float' → logprob: -11.964839935302734
    10. ' )' → logprob: -12.339839935302734

Token 57: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5856882929801941
    2. '):' → logprob: -0.8356882929801941
    3. ',' → logprob: -5.46068811416626
    4. '):
' → logprob: -6.08568811416626
    5. ':' → logprob: -6.33568811416626
    6. ' ):' → logprob: -7.83568811416626
    7. '=' → logprob: -7.96068811416626
    8. ' )' → logprob: -7.96068811416626
    9. '   ' → logprob: -8.335688591003418
    10. '       ' → logprob: -11.085688591003418

Token 58: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04790604114532471
    2. ' ' → logprob: -3.797905921936035
    3. ')' → logprob: -5.047905921936035
    4. '<|end|>' → logprob: -5.047905921936035
    5. '   ' → logprob: -6.047905921936035
    6. '    ' → logprob: -6.047905921936035
    7. 'q' → logprob: -6.422905921936035
    8. '        ' → logprob: -6.547905921936035
    9. 'n' → logprob: -7.047905921936035
    10. ',' → logprob: -7.297905921936035

Token 59: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5282983779907227
    2. ' self' → logprob: -1.2782983779907227
    3. 'self' → logprob: -2.0282983779907227
    4. ' super' → logprob: -9.153298377990723
    5. 'super' → logprob: -9.653298377990723
    6. '   ' → logprob: -9.903298377990723
    7. ' ' → logprob: -10.278298377990723
    8. ' ' → logprob: -10.778298377990723
    9. '        ' → logprob: -10.903298377990723
    10. '      ' → logprob: -12.028298377990723

Token 60: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.01664056070148945
    2. ' not' → logprob: -4.766640663146973
    3. 'q' → logprob: -4.891640663146973
    4. '   ' → logprob: -8.766640663146973
    5. 'not' → logprob: -9.141640663146973
    6. ' ' → logprob: -9.516640663146973
    7. '    ' → logprob: -9.891640663146973
    8. '  ' → logprob: -9.891640663146973
    9. ' isinstance' → logprob: -10.266640663146973
    10. ' ' → logprob: -12.266640663146973

Token 61: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.048444170504808426
    2. ' <' → logprob: -3.4234442710876465
    3. '<=' → logprob: -4.7984442710876465
    4. ' >' → logprob: -5.2984442710876465
    5. '<' → logprob: -7.4234442710876465
    6. ' ' → logprob: -7.7984442710876465
    7. '>' → logprob: -8.423443794250488
    8. ')' → logprob: -9.423443794250488
    9. ' >=' → logprob: -10.173443794250488
    10. '   ' → logprob: -10.798443794250488

Token 62: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17976433038711548
    2. ' ' → logprob: -1.8047642707824707
    3. '   ' → logprob: -11.054764747619629
    4. '  ' → logprob: -13.429764747619629
    5. '1' → logprob: -13.804764747619629
    6. '    ' → logprob: -15.117264747619629
    7. '```' → logprob: -15.117264747619629
    8. ' ' → logprob: -15.367264747619629
    9. '       ' → logprob: -16.117263793945312
    10. '     ' → logprob: -16.367263793945312

Token 63: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00043341092532500625
    2. ' ' → logprob: -7.750433444976807
    3. '1' → logprob: -13.250432968139648
    4. '۰' → logprob: -16.00043296813965
    5. '00' → logprob: -16.31293296813965
    6. '2' → logprob: -16.37543296813965
    7. '```' → logprob: -16.68793296813965
    8. '   ' → logprob: -16.81293296813965
    9. '٠' → logprob: -16.81293296813965
    10. '-' → logprob: -16.87543296813965

Token 64: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00016897499153856188
    2. ':
' → logprob: -9.250168800354004
    3. ' :' → logprob: -9.625168800354004
    4. '):' → logprob: -12.125168800354004
    5. ',' → logprob: -14.875168800354004
    6. '<|end|>' → logprob: -15.625168800354004
    7. ')' → logprob: -15.875168800354004
    8. ' or' → logprob: -16.25016975402832
    9. ':return' → logprob: -16.25016975402832
    10. ':

' → logprob: -16.25016975402832

Token 65: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5649551749229431
    2. '           ' → logprob: -1.064955234527588
    3. ':
' → logprob: -3.064955234527588
    4. ' raise' → logprob: -3.689955234527588
    5. ' :' → logprob: -5.439955234527588
    6. 'raise' → logprob: -5.439955234527588
    7. ' :
' → logprob: -5.939955234527588
    8. '       ' → logprob: -6.814955234527588
    9. ',' → logprob: -7.064955234527588
    10. '            ' → logprob: -7.564955234527588

Token 66: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.31365257501602173
    2. ' raise' → logprob: -1.313652515411377
    3. '           ' → logprob: -8.938652992248535
    4. '	raise' → logprob: -9.188652992248535
    5. 'Raise' → logprob: -9.938652992248535
    6. '_raise' → logprob: -10.188652992248535
    7. '
' → logprob: -10.563652992248535
    8. 'raiser' → logprob: -11.188652992248535
    9. '            ' → logprob: -11.688652992248535
    10. '```' → logprob: -11.813652992248535

Token 67: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.00018268341955263168
    2. 'Value' → logprob: -9.25018310546875
    3. ' Val' → logprob: -9.50018310546875
    4. '	Value' → logprob: -12.25018310546875
    5. ' ' → logprob: -12.50018310546875
    6. ' Va' → logprob: -13.37518310546875
    7. ' ' → logprob: -14.87518310546875
    8. ' Vale' → logprob: -15.25018310546875
    9. '<Value' → logprob: -15.25018310546875
    10. ' value' → logprob: -15.37518310546875

Token 68: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.018321078270673752
    2. 'rror' → logprob: -4.0183210372924805
    3. 'ation' → logprob: -9.64332103729248
    4. 'r' → logprob: -10.14332103729248
    5. 'ror' → logprob: -10.26832103729248
    6. 'Value' → logprob: -11.26832103729248
    7. 'tion' → logprob: -11.51832103729248
    8. 'ration' → logprob: -12.76832103729248
    9. 'n' → logprob: -13.14332103729248
    10. 'cation' → logprob: -14.14332103729248

Token 69: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00866219773888588
    2. '(' → logprob: -4.758662223815918
    3. '('' → logprob: -10.508662223815918
    4. '(
' → logprob: -10.883662223815918
    5. '"' → logprob: -14.133662223815918
    6. '       ' → logprob: -15.258662223815918
    7. '("'' → logprob: -15.883662223815918
    8. '(

' → logprob: -16.1336612701416
    9. '           ' → logprob: -16.6336612701416
    10. '("""' → logprob: -16.8836612701416

Token 70: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.8050597906112671
    2. 'Le' → logprob: -0.8050597906112671
    3. 'La' → logprob: -2.3050599098205566
    4. 'L' → logprob: -5.555059909820557
    5. ' q' → logprob: -6.930059909820557
    6. ' Le' → logprob: -7.555059909820557
    7. ' La' → logprob: -8.930059432983398
    8. 'le' → logprob: -9.305059432983398
    9. ''q' → logprob: -9.555059432983398
    10. 'Les' → logprob: -9.555059432983398

Token 71: ' doit' (ID: 21822)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.5802533030509949
    2. ' doit' → logprob: -0.8302533030509949
    3. 'must' → logprob: -5.7052531242370605
    4. ' should' → logprob: -7.3302531242370605
    5. ' debe' → logprob: -9.455253601074219
    6. ' должен' → logprob: -9.955253601074219
    7. ' devrait' → logprob: -10.455253601074219
    8. ' doivent' → logprob: -10.580253601074219
    9. ' deve' → logprob: -10.830253601074219
    10. 'should' → logprob: -10.830253601074219

Token 72: ' être' (ID: 9104)
  Prédit: ' être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.019521940499544144
    2. 'être' → logprob: -4.519521713256836
    3. ' etre' → logprob: -5.144521713256836
    4. ' be' → logprob: -7.019521713256836
    5. ' ' → logprob: -7.144521713256836
    6. 'êt' → logprob: -8.894521713256836
    7. '’être' → logprob: -9.019521713256836
    8. ''être' → logprob: -9.269521713256836
    9. '>' → logprob: -9.394521713256836
    10. ' >' → logprob: -9.644521713256836

Token 73: ' un' (ID: 537)
  Prédit: 'strict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strict' → logprob: -0.8358736634254456
    2. ' un' → logprob: -0.9608736634254456
    3. 'un' → logprob: -2.585873603820801
    4. ' strict' → logprob: -3.085873603820801
    5. ' positif' → logprob: -3.085873603820801
    6. 'posit' → logprob: -4.585873603820801
    7. '>' → logprob: -5.960873603820801
    8. '   ' → logprob: -6.085873603820801
    9. 'sup' → logprob: -7.585873603820801
    10. ' supérieur' → logprob: -8.2108736038208

Token 74: ' entier' (ID: 80473)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.4598851203918457
    2. 'ent' → logprob: -1.8348851203918457
    3. 'strict' → logprob: -1.8348851203918457
    4. 't' → logprob: -4.459885120391846
    5. ' entier' → logprob: -4.584885120391846
    6. 'nombre' → logprob: -4.709885120391846
    7. 'n' → logprob: -5.209885120391846
    8. ' strict' → logprob: -5.834885120391846
    9. ' nombre' → logprob: -5.959885120391846
    10. 'posit' → logprob: -6.459885120391846

Token 75: ' strict' (ID: 12035)
  Prédit: ' positif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positif' → logprob: -0.244357630610466
    2. 'strict' → logprob: -1.8693575859069824
    3. 'posit' → logprob: -2.9943575859069824
    4. ' strict' → logprob: -4.494357585906982
    5. ' positive' → logprob: -8.36935806274414
    6. ' strictly' → logprob: -8.49435806274414
    7. '>' → logprob: -8.49435806274414
    8. 'positive' → logprob: -8.99435806274414
    9. ' positiv' → logprob: -9.11935806274414
    10. ' ' → logprob: -9.24435806274414

Token 76: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.0014786787796765566
    2. 'ment' → logprob: -8.251479148864746
    3. '>' → logprob: -8.376479148864746
    4. 'posit' → logprob: -8.751479148864746
    5. ' positif' → logprob: -8.876479148864746
    6. 'emment' → logprob: -9.501479148864746
    7. 'lement' → logprob: -9.626479148864746
    8. 'ly' → logprob: -9.626479148864746
    9. 'ément' → logprob: -9.626479148864746
    10. 'rement' → logprob: -9.751479148864746

Token 77: ' positif' (ID: 89008)
  Prédit: ' positif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positif' → logprob: -0.47514447569847107
    2. 'posit' → logprob: -0.9751445055007935
    3. 'positive' → logprob: -8.350144386291504
    4. '>' → logprob: -8.850144386291504
    5. ' posit' → logprob: -8.975144386291504
    6. ' supérieur' → logprob: -9.225144386291504
    7. 'sup' → logprob: -9.350144386291504
    8. ' positive' → logprob: -9.350144386291504
    9. 'pos' → logprob: -9.475144386291504
    10. '   ' → logprob: -10.100144386291504

Token 78: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.03384796902537346
    2. '.")' → logprob: -3.6588480472564697
    3. '")
' → logprob: -5.158847808837891
    4. ' ")' → logprob: -7.658847808837891
    5. '.")
' → logprob: -8.03384780883789
    6. ')")' → logprob: -8.15884780883789
    7. ')' → logprob: -8.78384780883789
    8. '.' → logprob: -8.90884780883789
    9. ' ' → logprob: -9.15884780883789
    10. '")
' → logprob: -9.28384780883789

Token 79: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23822246491909027
    2. '
' → logprob: -1.6132224798202515
    3. '        
' → logprob: -4.613222599029541
    4. 'self' → logprob: -6.988222599029541
    5. ' 
' → logprob: -7.363222599029541
    6. ' self' → logprob: -8.363222122192383
    7. '<|end|>' → logprob: -8.363222122192383
    8. '  
' → logprob: -8.488222122192383
    9. '    
' → logprob: -8.613222122192383
    10. '        ' → logprob: -8.988222122192383

Token 80: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05081206187605858
    2. '
' → logprob: -3.300812005996704
    3. ' self' → logprob: -4.925812244415283
    4. 'self' (adapté à ' self') → logprob: -5.300812244415283
    5. '        
' → logprob: -8.300811767578125
    6. '   ' → logprob: -9.425811767578125
    7. ' 
' → logprob: -10.675811767578125
    8. '    
' → logprob: -10.925811767578125
    9. '  
' → logprob: -11.425811767578125
    10. ' ' → logprob: -11.550811767578125

Token 81: '.q' (ID: 20954)
  Prédit: '.q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.q' → logprob: -0.07898177206516266
    2. '.' → logprob: -2.578981876373291
    3. '._' → logprob: -10.078981399536133
    4. ' .' → logprob: -10.328981399536133
    5. '.qu' → logprob: -11.578981399536133
    6. '.qq' → logprob: -13.703981399536133
    7. '.qt' → logprob: -13.703981399536133
    8. '.query' → logprob: -13.953981399536133
    9. '.n' → logprob: -14.328981399536133
    10. '.Q' → logprob: -14.578981399536133

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03806019574403763
    2. '=' → logprob: -3.288060188293457
    3. ' ' → logprob: -11.288060188293457
    4. '=q' → logprob: -12.288060188293457
    5. '.' → logprob: -14.163060188293457
    6. ' =
' → logprob: -14.788060188293457
    7. ' q' → logprob: -15.538060188293457
    8. ' ' → logprob: -15.913060188293457
    9. ',' → logprob: -16.788061141967773
    10. 'q' → logprob: -17.038061141967773

Token 83: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.47407835721969604
    2. 'q' → logprob: -0.974078357219696
    3. ' ' → logprob: -13.849078178405762
    4. '	q' → logprob: -14.974078178405762
    5. ' ' → logprob: -16.849079132080078
    6. '    ' → logprob: -18.224079132080078
    7. ' ' → logprob: -18.724079132080078
    8. '_q' → logprob: -19.349079132080078
    9. '$q' → logprob: -19.474079132080078
    10. ' ' → logprob: -20.099079132080078

Token 84: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04181010276079178
    2. '<|end|>' → logprob: -3.9168100357055664
    3. '    
' → logprob: -5.041810035705566
    4. ' 
' → logprob: -5.166810035705566
    5. '   ' → logprob: -6.166810035705566
    6. 'def' → logprob: -6.416810035705566
    7. '<|end|>' → logprob: -6.541810035705566
    8. '  
' → logprob: -7.166810035705566
    9. '

' → logprob: -7.291810035705566
    10. 'n' → logprob: -7.666810035705566

Token 85: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14564672112464905
    2. ' 
' → logprob: -2.895646810531616
    3. '    
' → logprob: -4.020646572113037
    4. '   ' → logprob: -4.270646572113037
    5. '\n' → logprob: -4.270646572113037
    6. '

' → logprob: -4.895646572113037
    7. 'def' → logprob: -5.145646572113037
    8. '<|end|>' → logprob: -5.270646572113037
    9. '  
' → logprob: -5.395646572113037
    10. ' ' → logprob: -6.145646572113037

Token 86: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.8047664165496826
    2. '       ' → logprob: -1.5547664165496826
    3. 'self' (adapté à ' self') → logprob: -1.6797664165496826
    4. 'def' → logprob: -2.5547664165496826
    5. '   ' → logprob: -3.0547664165496826
    6. ' def' → logprob: -4.179766654968262
    7. '    ' → logprob: -5.429766654968262
    8. ' ' → logprob: -6.304766654968262
    9. '        ' → logprob: -6.429766654968262
    10. '```' → logprob: -7.304766654968262

Token 87: '.t' (ID: 1370)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.12975193560123444
    2. '.q' → logprob: -3.0047519207000732
    3. '._' → logprob: -3.3797519207000732
    4. ' .' → logprob: -4.504752159118652
    5. '.initial' → logprob: -4.754752159118652
    6. '.n' → logprob: -5.879752159118652
    7. '.value' → logprob: -6.129752159118652
    8. '.ap' → logprob: -6.379752159118652
    9. '.iter' → logprob: -6.504752159118652
    10. '.next' → logprob: -6.879752159118652

Token 88: 'olerance' (ID: 52665)
  Prédit: 'olerance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olerance' → logprob: -1.2276694774627686
    2. '0' → logprob: -1.4776694774627686
    3. 'ol' → logprob: -1.4776694774627686
    4. 'h' → logprob: -2.8526694774627686
    5. 'ab' → logprob: -3.4776694774627686
    6. 'mp' → logprob: -3.6026694774627686
    7. 'arget' → logprob: -4.227669715881348
    8. 'emp' → logprob: -4.352669715881348
    9. '_' → logprob: -4.477669715881348
    10. '=' → logprob: -4.727669715881348

Token 89: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002969857305288315
    2. '=' → logprob: -5.877969741821289
    3. ' ' → logprob: -8.752969741821289
    4. '    ' → logprob: -12.877969741821289
    5. '   ' → logprob: -13.377969741821289
    6. '  ' → logprob: -14.002969741821289
    7. ':' → logprob: -14.252969741821289
    8. '.' → logprob: -15.752969741821289
    9. ' ,' → logprob: -15.752969741821289
    10. ' :' → logprob: -15.877969741821289

Token 90: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.007218380458652973
    2. '1' → logprob: -5.007218360900879
    3. '10' → logprob: -7.757218360900879
    4. '0' → logprob: -9.507218360900879
    5. '5' → logprob: -15.132218360900879
    6. 'e' → logprob: -15.132218360900879
    7. '2' → logprob: -16.007219314575195
    8. ' ' → logprob: -16.882219314575195
    9. '9' → logprob: -17.069719314575195
    10. '  ' → logprob: -17.444719314575195

Token 91: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006014714017510414
    2. ' ' → logprob: -5.756014823913574
    3. '10' → logprob: -5.881014823913574
    4. '0' → logprob: -10.131014823913574
    5. '   ' → logprob: -14.006014823913574
    6. 'e' → logprob: -16.006013870239258
    7. '=' → logprob: -16.568513870239258
    8. '-' → logprob: -16.756013870239258
    9. '2' → logprob: -17.068513870239258
    10. '  ' → logprob: -17.131013870239258

Token 92: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.002141101285815239
    2. '1' → logprob: -6.377140998840332
    3. '0' → logprob: -8.377140998840332
    4. 'e' → logprob: -9.127140998840332
    5. '   ' → logprob: -10.377140998840332
    6. '2' → logprob: -11.377140998840332
    7. '000' → logprob: -11.377140998840332
    8. '3' → logprob: -11.752140998840332
    9. ' .' → logprob: -11.877140998840332
    10. ' ' → logprob: -11.877140998840332

Token 93: '000' (ID: 1302)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.062373433262109756
    2. '1' → logprob: -4.062373638153076
    3. '000' → logprob: -4.187373638153076
    4. '0' → logprob: -4.437373638153076
    5. '6' → logprob: -4.437373638153076
    6. '001' → logprob: -6.437373638153076
    7. '01' → logprob: -6.937373638153076
    8. '5' → logprob: -7.437373638153076
    9. '3' → logprob: -8.312373161315918
    10. '9' → logprob: -8.562373161315918

Token 94: '01' (ID: 2290)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00445670448243618
    2. '01' → logprob: -5.629456520080566
    3. '001' → logprob: -7.129456520080566
    4. '000' → logprob: -10.129456520080566
    5. '0' → logprob: -12.254456520080566
    6. '5' → logprob: -12.504456520080566
    7. '2' → logprob: -13.379456520080566
    8. '05' → logprob: -13.816956520080566
    9. '9' → logprob: -14.754456520080566
    10. '   ' → logprob: -14.941956520080566

Token 95: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 96: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.03409351781010628
    2. 'q' → logprob: -3.5340936183929443
    3. ' self' → logprob: -5.659093379974365
    4. '    ' → logprob: -8.534093856811523
    5. ' ' → logprob: -8.659093856811523
    6. 'self' → logprob: -8.659093856811523
    7. ' abs' → logprob: -9.409093856811523
    8. '   ' → logprob: -9.784093856811523
    9. 'abs' → logprob: -10.159093856811523
    10. '1' → logprob: -10.409093856811523

Token 97: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 98: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.125214621424675
    2. '   ' → logprob: -2.6252145767211914
    3. '    
' → logprob: -3.6252145767211914
    4. '<|end|>' → logprob: -4.250214576721191
    5. ' 
' → logprob: -6.500214576721191
    6. '  
' → logprob: -7.000214576721191
    7. '

' → logprob: -8.000214576721191
    8. 'def' → logprob: -8.000214576721191
    9. '<|end|>' → logprob: -8.000214576721191
    10. '        
' → logprob: -8.875214576721191

Token 99: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05580199509859085
    2. '
' → logprob: -3.9308021068573
    3. '   ' → logprob: -4.305801868438721
    4. '<|end|>' → logprob: -4.555801868438721
    5. 'self' (adapté à ' self') → logprob: -5.930801868438721
    6. ' self' → logprob: -6.305801868438721
    7. 'def' → logprob: -6.555801868438721
    8. ' ' → logprob: -6.805801868438721
    9. '    
' → logprob: -6.930801868438721
    10. '    ' → logprob: -7.680801868438721

Token 100: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -1.2101900577545166
    2. '.' → logprob: -1.9601900577545166
    3. ' .' → logprob: -2.0851900577545166
    4. '.t' → logprob: -2.2101900577545166
    5. '.q' → logprob: -2.4601900577545166
    6. '.n' → logprob: -2.9601900577545166
    7. '.initial' → logprob: -3.2101900577545166
    8. '.current' → logprob: -3.4601900577545166
    9. '.iter' → logprob: -4.0851898193359375
    10. '._' → logprob: -4.0851898193359375

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07672203332185745
    2. '0' → logprob: -2.7017221450805664
    3. '=' → logprob: -6.201722145080566
    4. '_' → logprob: -6.451722145080566
    5. ' ' → logprob: -6.576722145080566
    6. '<|end|>' → logprob: -7.701722145080566
    7. '    ' → logprob: -8.201722145080566
    8. '<|end|>' → logprob: -8.326722145080566
    9. 'n' → logprob: -9.201722145080566
    10. '_n' → logprob: -9.326722145080566

Token 102: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.6991472244262695
    2. ' ' → logprob: -0.8241472244262695
    3. '1' → logprob: -3.3241472244262695
    4. 'q' → logprob: -3.8241472244262695
    5. ' self' → logprob: -5.8241472244262695
    6. '0' → logprob: -6.0741472244262695
    7. '   ' → logprob: -8.19914722442627
    8. ' float' → logprob: -8.32414722442627
    9. 'self' → logprob: -8.44914722442627
    10. ' None' → logprob: -9.07414722442627

Token 103: ' /' (ID: 820)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 104: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.18561023473739624
    2. ' ' → logprob: -1.810610294342041
    3. '2' → logprob: -5.185610294342041
    4. '1' → logprob: -9.935609817504883
    5. '  ' → logprob: -10.185609817504883
    6. '   ' → logprob: -10.185609817504883
    7. ' ' → logprob: -10.560609817504883
    8. 'self' → logprob: -10.685609817504883
    9. '4' → logprob: -11.060609817504883
    10. '5' → logprob: -11.560609817504883

Token 105: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.025292949751019478
    2. '2' → logprob: -3.7752928733825684
    3. ' ' → logprob: -6.400292873382568
    4. 'self' → logprob: -9.150293350219727
    5. '4' → logprob: -9.650293350219727
    6. '1' → logprob: -9.650293350219727
    7. '5' → logprob: -10.525293350219727
    8. '10' → logprob: -10.775293350219727
    9. '   ' → logprob: -10.837793350219727
    10. '  ' → logprob: -10.962793350219727

Token 106: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6394225358963013
    2. ' 
' → logprob: -2.1394224166870117
    3. '<|end|>' → logprob: -2.2644224166870117
    4. '   ' → logprob: -2.5144224166870117
    5. ' ' → logprob: -2.7644224166870117
    6. '    
' → logprob: -3.1394224166870117
    7. '\n' → logprob: -4.389422416687012
    8. '

' → logprob: -4.889422416687012
    9. 'n' → logprob: -4.889422416687012
    10. ' 

' → logprob: -5.014422416687012

Token 108: ' x' (ID: 1215)
  Prédit: ' initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.5661210417747498
    2. 'Initial' → logprob: -1.9411211013793945
    3. ' ' → logprob: -2.6911211013793945
    4. ' Initial' → logprob: -2.9411211013793945
    5. 'initial' → logprob: -3.0661211013793945
    6. ' valeur' → logprob: -3.3161211013793945
    7. ' point' → logprob: -3.6911211013793945
    8. ' Point' → logprob: -3.8161211013793945
    9. ' Vale' → logprob: -4.6911211013793945
    10. 'Vale' → logprob: -5.8161211013793945

Token 109: '1' (ID: 16)
  Prédit: ' initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.5033251047134399
    2. '0' → logprob: -2.0033249855041504
    3. 'initial' → logprob: -2.1283249855041504
    4. '_initial' → logprob: -2.7533249855041504
    5. ' =' → logprob: -3.3783249855041504
    6. '<|end|>' → logprob: -4.37832498550415
    7. '_init' → logprob: -4.75332498550415
    8. 'Initial' → logprob: -5.37832498550415
    9. ' initialized' → logprob: -5.62832498550415
    10. ' ' → logprob: -6.12832498550415

Token 110: ' initial' (ID: 4871)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 111: 'e' (ID: 68)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8962543606758118
    2. '
' → logprob: -1.896254301071167
    3. '<|end|>' → logprob: -1.896254301071167
    4. ' ' → logprob: -2.771254301071167
    5. '\n' → logprob: -2.896254301071167
    6. '<|end|>' → logprob: -3.771254301071167
    7. ' 
' → logprob: -3.771254301071167
    8. 'n' → logprob: -3.771254301071167
    9. '    
' → logprob: -3.896254301071167
    10. ')' → logprob: -4.271254539489746

Token 112: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 113: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04531567543745041
    2. 'def' → logprob: -3.545315742492676
    3. '

' → logprob: -5.170315742492676
    4. ' def' → logprob: -5.545315742492676
    5. ' 
' → logprob: -5.670315742492676
    6. '    
' → logprob: -7.045315742492676
    7. '   ' → logprob: -7.170315742492676
    8. '  
' → logprob: -8.420315742492676
    9. '<|end|>' → logprob: -9.170315742492676
    10. '\n' → logprob: -9.295315742492676

Token 114: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4573887586593628
    2. 'def' (adapté à ' def') → logprob: -1.2073887586593628
    3. ' def' → logprob: -2.9573888778686523
    4. '   ' → logprob: -4.957388877868652
    5. ' 
' → logprob: -5.082388877868652
    6. '    
' → logprob: -6.082388877868652
    7. '

' → logprob: -8.332388877868652
    8. '  
' → logprob: -9.207388877868652
    9. '\n' → logprob: -9.832388877868652
    10. ' 

' → logprob: -10.082388877868652

Token 115: ' iterate' (ID: 63166)
  Prédit: ' iterate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' iterate' → logprob: -0.2789764702320099
    2. ' iteration' → logprob: -1.6539764404296875
    3. ' f' → logprob: -4.1539764404296875
    4. ' next' → logprob: -4.9039764404296875
    5. ' iter' → logprob: -5.0289764404296875
    6. ' step' → logprob: -5.5289764404296875
    7. ' approximate' → logprob: -5.9039764404296875
    8. ' ' → logprob: -6.0289764404296875
    9. 'iteration' → logprob: -6.1539764404296875
    10. ' compute' → logprob: -6.1539764404296875

Token 116: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0015716375783085823
    2. '(' → logprob: -6.5015716552734375
    3. '_' → logprob: -11.001571655273438
    4. '_(' → logprob: -11.126571655273438
    5. ' (' → logprob: -12.126571655273438
    6. '(s' → logprob: -12.251571655273438
    7. '_next' → logprob: -12.376571655273438
    8. 'self' → logprob: -12.501571655273438
    9. '_step' → logprob: -12.626571655273438
    10. '(
' → logprob: -13.001571655273438

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9769887328147888
    2. ')(' → logprob: -1.2269887924194336
    3. '):' → logprob: -1.7269887924194336
    4. '(self' → logprob: -2.6019887924194336
    5. 'self' → logprob: -3.2269887924194336
    6. ')' → logprob: -3.7269887924194336
    7. '):
' → logprob: -5.851988792419434
    8. '   ' → logprob: -6.226988792419434
    9. ' ,' → logprob: -6.476988792419434
    10. ',self' → logprob: -6.726988792419434

Token 118: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.9856897592544556
    2. ' self' → logprob: -1.3606897592544556
    3. 'x' → logprob: -1.6106897592544556
    4. 'self' → logprob: -1.8606897592544556
    5. ')' → logprob: -5.235689640045166
    6. '):' → logprob: -5.485689640045166
    7. '   ' → logprob: -6.610689640045166
    8. '):
' → logprob: -6.735689640045166
    9. ' )' → logprob: -7.360689640045166
    10. ' current' → logprob: -7.735689640045166

Token 119: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0069623468443751335
    2. ':' → logprob: -5.631962299346924
    3. ')' → logprob: -6.506962299346924
    4. '):
' → logprob: -6.881962299346924
    5. ' ):' → logprob: -7.131962299346924
    6. '   ' → logprob: -11.506962776184082
    7. ' :' → logprob: -11.756962776184082
    8. ' )' → logprob: -11.881962776184082
    9. '():' → logprob: -12.881962776184082
    10. '):
' → logprob: -13.131962776184082

Token 120: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.05136077105998993
    2. ' float' → logprob: -3.051360845565796
    3. ')' → logprob: -6.051360607147217
    4. '   ' → logprob: -8.926361083984375
    5. '):
' → logprob: -9.426361083984375
    6. 'int' → logprob: -9.551361083984375
    7. '	float' → logprob: -10.051361083984375
    8. '):' → logprob: -10.926361083984375
    9. 'self' → logprob: -11.676361083984375
    10. '       ' → logprob: -11.676361083984375

Token 121: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017362285871058702
    2. '):' → logprob: -6.376736164093018
    3. ' )' → logprob: -11.001736640930176
    4. ')->' → logprob: -11.501736640930176
    5. '):
' → logprob: -12.376736640930176
    6. '   ' → logprob: -13.501736640930176
    7. ',' → logprob: -14.626736640930176
    8. ':' → logprob: -15.501736640930176
    9. ' ):' → logprob: -15.876736640930176
    10. '`)' → logprob: -15.876736640930176

Token 122: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.058034200221300125
    2. ' ->' → logprob: -3.4330341815948486
    3. '->' → logprob: -3.8080341815948486
    4. ':
' → logprob: -6.558034420013428
    5. '):' → logprob: -8.93303394317627
    6. ')' → logprob: -8.93303394317627
    7. ')->' → logprob: -9.43303394317627
    8. ' :' → logprob: -10.18303394317627
    9. '   ' → logprob: -10.43303394317627
    10. '):
' → logprob: -11.30803394317627

Token 123: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.12704160809516907
    2. ' float' → logprob: -2.1270415782928467
    3. 'None' → logprob: -10.127041816711426
    4. '	float' → logprob: -10.627041816711426
    5. ' ' → logprob: -11.002041816711426
    6. '   ' → logprob: -11.752041816711426
    7. ' None' → logprob: -12.252041816711426
    8. 'flo' → logprob: -12.252041816711426
    9. '```' → logprob: -12.877041816711426
    10. '  ' → logprob: -13.127041816711426

Token 124: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002638556994497776
    2. '<|end|>' → logprob: -6.627638339996338
    3. '       ' → logprob: -7.127638339996338
    4. ':
' → logprob: -8.002638816833496
    5. '):' → logprob: -9.502638816833496
    6. '   ' → logprob: -9.877638816833496
    7. ' :' → logprob: -10.627638816833496
    8. ',' → logprob: -11.752638816833496
    9. ':return' → logprob: -12.877638816833496
    10. ')' → logprob: -13.002638816833496

Token 125: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00020568605395965278
    2. ' raise' → logprob: -8.875205993652344
    3. '<|end|>' → logprob: -10.625205993652344
    4. '   ' → logprob: -11.250205993652344
    5. '
' → logprob: -12.375205993652344
    6. 'raise' → logprob: -12.500205993652344
    7. '      ' → logprob: -12.750205993652344
    8. ' ' → logprob: -12.750205993652344
    9. ' Not' → logprob: -12.875205993652344
    10. '    ' → logprob: -13.125205993652344

Token 126: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10355432331562042
    2. 'raise' → logprob: -2.9785542488098145
    3. ' raise' → logprob: -3.1035542488098145
    4. '...' → logprob: -6.4785542488098145
    5. 'pass' → logprob: -7.1035542488098145
    6. ' pass' → logprob: -8.978554725646973
    7. '"""' → logprob: -9.853554725646973
    8. '   ' → logprob: -10.478554725646973
    9. '	raise' → logprob: -10.478554725646973
    10. '#' → logprob: -12.228554725646973

Token 127: '       ' (ID: 309)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.01866525039076805
    2. '       ' → logprob: -5.018665313720703
    3. ' raise' → logprob: -5.143665313720703
    4. 'pass' → logprob: -5.393665313720703
    5. '   ' → logprob: -7.018665313720703
    6. '"""' → logprob: -7.768665313720703
    7. '...' → logprob: -9.768665313720703
    8. 'Not' → logprob: -10.143665313720703
    9. '"""
' → logprob: -10.518665313720703
    10. '#' → logprob: -10.893665313720703

Token 128: ' Calcul' (ID: 57243)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.03355487063527107
    2. ' raise' → logprob: -3.658554792404175
    3. 'pass' → logprob: -5.408555030822754
    4. '"""' → logprob: -6.158555030822754
    5. '       ' → logprob: -8.658555030822754
    6. '#' → logprob: -8.783555030822754
    7. '"""
' → logprob: -9.658555030822754
    8. '   ' → logprob: -9.783555030822754
    9. ' pass' → logprob: -9.783555030822754
    10. 'return' → logprob: -10.033555030822754

Token 129: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8306036591529846
    2. 'er' → logprob: -1.5806035995483398
    3. ' de' → logprob: -1.8306035995483398
    4. '       ' → logprob: -2.95560359954834
    5. 'e' → logprob: -3.33060359954834
    6. '    ' → logprob: -3.70560359954834
    7. '  ' → logprob: -4.08060359954834
    8. ' d' → logprob: -4.33060359954834
    9. '<|end|>' → logprob: -4.70560359954834
    10. 'atrice' → logprob: -4.83060359954834

Token 130: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.26127344369888306
    2. ' l' → logprob: -2.1362733840942383
    3. ' la' → logprob: -2.5112733840942383
    4. 'la' → logprob: -3.8862733840942383
    5. 'self' → logprob: -5.511273384094238
    6. ' the' → logprob: -6.261273384094238
    7. 'the' → logprob: -6.636273384094238
    8. ' next' → logprob: -7.011273384094238
    9. 'next' → logprob: -7.011273384094238
    10. ' self' → logprob: -7.511273384094238

Token 131: ' prochaine' (ID: 78876)
  Prédit: ' prochaine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prochaine' → logprob: -0.1855219006538391
    2. 'pro' → logprob: -1.9355218410491943
    3. 'nou' → logprob: -4.935522079467773
    4. ' nouvelle' → logprob: -5.185522079467773
    5. 'next' → logprob: -6.060522079467773
    6. '   ' → logprob: -6.685522079467773
    7. ' valeur' → logprob: -6.685522079467773
    8. 'fonction' → logprob: -6.685522079467773
    9. 'val' → logprob: -6.810522079467773
    10. ' ' → logprob: -7.560522079467773

Token 132: ' approximation' (ID: 112838)
  Prédit: ' valeur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -0.3373141884803772
    2. ' approximation' → logprob: -1.5873141288757324
    3. 'approx' → logprob: -2.7123141288757324
    4. ' étape' → logprob: -4.837314128875732
    5. 'val' → logprob: -5.712314128875732
    6. ' it' → logprob: -7.462314128875732
    7. ' estimation' → logprob: -7.712314128875732
    8. ' approx' → logprob: -7.837314128875732
    9. ' approxim' → logprob: -7.837314128875732
    10. ' ' → logprob: -8.08731460571289

Token 133: ' selon' (ID: 27571)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 134: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.49553197622299194
    2. ' une' → logprob: -1.8705320358276367
    3. ' l' → logprob: -2.1205320358276367
    4. '       ' → logprob: -2.8705320358276367
    5. 'une' → logprob: -4.120532035827637
    6. 'l' → logprob: -4.120532035827637
    7. 'self' → logprob: -5.120532035827637
    8. ' self' → logprob: -5.120532035827637
    9. 'la' → logprob: -5.245532035827637
    10. ' un' → logprob: -5.370532035827637

Token 135: ' formule' (ID: 84316)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.3107299208641052
    2. ' fonction' → logprob: -1.68572998046875
    3. ' méthode' → logprob: -2.93572998046875
    4. 'mé' → logprob: -4.18572998046875
    5. ' règle' → logprob: -5.81072998046875
    6. 'form' → logprob: -6.43572998046875
    7. 'function' → logprob: -6.68572998046875
    8. ' function' → logprob: -6.81072998046875
    9. 'iteration' → logprob: -7.31072998046875
    10. '   ' → logprob: -7.43572998046875

Token 136: ' :
' (ID: 10039)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04203793779015541
    2. ' :' → logprob: -4.4170379638671875
    3. ':' → logprob: -4.9170379638671875
    4. '   ' → logprob: -5.7920379638671875
    5. '    ' → logprob: -5.7920379638671875
    6. '        ' → logprob: -6.0420379638671875
    7. 'def' → logprob: -6.6670379638671875
    8. '\n' → logprob: -6.6670379638671875
    9. ' de' → logprob: -6.7920379638671875
    10. ' (' → logprob: -7.1670379638671875

Token 137: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0634695291519165
    2. ' (' → logprob: -3.688469409942627
    3. '(' → logprob: -4.063469409942627
    4. '3' → logprob: -5.188469409942627
    5. 'return' → logprob: -6.063469409942627
    6. '2' → logprob: -6.313469409942627
    7. ' self' → logprob: -6.563469409942627
    8. ' return' → logprob: -6.688469409942627
    9. 'x' → logprob: -7.188469409942627
    10. '0' → logprob: -7.188469409942627

Token 138: ' x' (ID: 1215)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31797540187835693
    2. 'x' (adapté à ' x') → logprob: -2.6929755210876465
    3. '3' → logprob: -2.8179755210876465
    4. 'return' → logprob: -3.6929755210876465
    5. 'Not' → logprob: -4.1929755210876465
    6. '0' → logprob: -4.1929755210876465
    7. ' raise' → logprob: -4.5679755210876465
    8. 'self' → logprob: -4.5679755210876465
    9. 'raise' → logprob: -4.6929755210876465
    10. ' Not' → logprob: -4.8179755210876465

Token 139: '_{' (ID: 22305)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.012853478081524372
    2. ' +' → logprob: -5.012853622436523
    3. ' *' → logprob: -5.637853622436523
    4. '*' → logprob: -6.762853622436523
    5. '-' → logprob: -7.637853622436523
    6. ' /' → logprob: -8.262853622436523
    7. ' ' → logprob: -8.637853622436523
    8. '+' → logprob: -8.887853622436523
    9. '**' → logprob: -9.137853622436523
    10. '_next' → logprob: -10.137853622436523

Token 140: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.012558032758533955
    2. ' n' → logprob: -5.5125579833984375
    3. 'k' → logprob: -5.8875579833984375
    4. '_n' → logprob: -6.3875579833984375
    5. '+' → logprob: -6.7625579833984375
    6. '   ' → logprob: -6.8875579833984375
    7. 'next' → logprob: -6.8875579833984375
    8. '1' → logprob: -9.012557983398438
    9. ' +' → logprob: -9.387557983398438
    10. ' ' → logprob: -9.887557983398438

Token 141: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005467113573104143
    2. 'plus' → logprob: -6.130466938018799
    3. ' +' → logprob: -6.880466938018799
    4. '}' → logprob: -7.005466938018799
    5. '1' → logprob: -7.505466938018799
    6. '}+' → logprob: -7.630466938018799
    7. '-' → logprob: -9.505467414855957
    8. '_plus' → logprob: -9.880467414855957
    9. '+
' → logprob: -10.380467414855957
    10. ' plus' → logprob: -10.630467414855957

Token 142: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005658994195982814
    2. '   ' → logprob: -8.375565528869629
    3. ' ' → logprob: -8.500565528869629
    4. '
' → logprob: -10.375565528869629
    5. '}' → logprob: -10.625565528869629
    6. '  ' → logprob: -11.438065528869629
    7. '{' → logprob: -11.750565528869629
    8. '```' → logprob: -11.875565528869629
    9. '2' → logprob: -12.188065528869629
    10. '+' → logprob: -12.438065528869629

Token 143: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0011537936516106129
    2. '+' → logprob: -7.626153945922852
    3. '}=' → logprob: -7.751153945922852
    4. ' =' → logprob: -9.376153945922852
    5. ' }' → logprob: -10.001153945922852
    6. '}
' → logprob: -10.501153945922852
    7. '-' → logprob: -11.001153945922852
    8. '=' → logprob: -11.751153945922852
    9. ' ' → logprob: -11.751153945922852
    10. ')' → logprob: -11.876153945922852

Token 144: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016228025779128075
    2. '=' → logprob: -4.141228199005127
    3. ' =
' → logprob: -9.391227722167969
    4. ' ' → logprob: -10.641227722167969
    5. '/' → logprob: -12.016227722167969
    6. ' ' → logprob: -12.141227722167969
    7. ':' → logprob: -12.141227722167969
    8. 'def' → logprob: -12.141227722167969
    9. '=(' → logprob: -12.141227722167969
    10. ' *' → logprob: -12.266227722167969

Token 145: ' x' (ID: 1215)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7580323815345764
    2. ' self' → logprob: -0.8830323815345764
    3. '(' → logprob: -3.5080323219299316
    4. 'f' → logprob: -3.8830323219299316
    5. ' (' → logprob: -3.8830323219299316
    6. 'x' → logprob: -4.508032321929932
    7. ' f' → logprob: -4.758032321929932
    8. '(self' → logprob: -4.758032321929932
    9. '1' → logprob: -5.758032321929932
    10. '0' → logprob: -6.008032321929932

Token 146: '_n' (ID: 2170)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.15115508437156677
    2. '-' → logprob: -2.2761549949645996
    3. '**' → logprob: -4.4011549949646
    4. ' +' → logprob: -4.4011549949646
    5. '_n' → logprob: -5.2761549949646
    6. '/' → logprob: -5.7761549949646
    7. '+' → logprob: -6.6511549949646
    8. ' /' → logprob: -6.7761549949646
    9. 'n' → logprob: -7.2761549949646
    10. '-n' → logprob: -7.4011549949646

Token 147: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06943076848983765
    2. '-' → logprob: -3.1944308280944824
    3. '**' → logprob: -3.9444308280944824
    4. '*' → logprob: -5.444430828094482
    5. '/' → logprob: -7.569430828094482
    6. ' /' → logprob: -7.944430828094482
    7. ' *' → logprob: -7.944430828094482
    8. ' ' → logprob: -8.819430351257324
    9. ' +' → logprob: -8.819430351257324
    10. '+' → logprob: -8.944430351257324

Token 148: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3311326503753662
    2. '(self' → logprob: -1.7061326503753662
    3. '(' → logprob: -3.206132650375366
    4. '(x' → logprob: -3.831132650375366
    5. 'f' → logprob: -3.956132650375366
    6. '((' → logprob: -5.581132888793945
    7. ' self' → logprob: -5.706132888793945
    8. 'self' → logprob: -5.706132888793945
    9. '(f' → logprob: -5.831132888793945
    10. ' f' → logprob: -5.956132888793945

Token 149: 'x' (ID: 87)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.2720983326435089
    2. 'x' → logprob: -1.6470983028411865
    3. ' (' → logprob: -3.5220983028411865
    4. ' x' → logprob: -5.022098541259766
    5. '(' → logprob: -5.147098541259766
    6. 'f' → logprob: -6.772098541259766
    7. '((' → logprob: -7.022098541259766
    8. '1' → logprob: -7.522098541259766
    9. '(
' → logprob: -8.272098541259766
    10. '(self' → logprob: -8.772098541259766

Token 150: '_n' (ID: 2170)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.006874621845781803
    2. '*' → logprob: -5.1318745613098145
    3. ' **' → logprob: -7.5068745613098145
    4. '*x' → logprob: -8.131875038146973
    5. '***' → logprob: -10.381875038146973
    6. ' *' → logprob: -10.631875038146973
    7. '```' → logprob: -12.006875038146973
    8. '
' → logprob: -12.006875038146973
    9. 'x' → logprob: -12.256875038146973
    10. '3' → logprob: -12.381875038146973

Token 151: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0020411754958331585
    2. '*' → logprob: -6.252041339874268
    3. '*x' → logprob: -9.50204086303711
    4. ' **' → logprob: -10.75204086303711
    5. '***' → logprob: -12.25204086303711
    6. '
' → logprob: -12.50204086303711
    7. '**
' → logprob: -13.12704086303711
    8. '```' → logprob: -13.12704086303711
    9. '***/' → logprob: -13.75204086303711
    10. '3' → logprob: -14.50204086303711

Token 152: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00032044618274085224
    2. '**' → logprob: -8.500320434570312
    3. ' ' → logprob: -9.500320434570312
    4. '33' → logprob: -11.500320434570312
    5. '```' → logprob: -11.750320434570312
    6. '*' → logprob: -11.875320434570312
    7. '
' → logprob: -12.000320434570312
    8. ')' → logprob: -13.750320434570312
    9. ' **' → logprob: -14.187820434570312
    10. ' -' → logprob: -14.250320434570312

Token 153: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.008616581559181213
    2. '-' → logprob: -4.7586164474487305
    3. ' ' → logprob: -14.50861644744873
    4. '```' → logprob: -15.00861644744873
    5. '<|end|>' → logprob: -15.38361644744873
    6. ')' → logprob: -15.38361644744873
    7. ' ' → logprob: -15.50861644744873
    8. '   ' → logprob: -15.75861644744873
    9. '
' → logprob: -16.133617401123047
    10. '  ' → logprob: -16.508617401123047

Token 154: ' q' (ID: 2335)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2025936096906662
    2. 'self' → logprob: -1.7025935649871826
    3. '<|end|>' → logprob: -6.952593803405762
    4. ' q' → logprob: -9.077593803405762
    5. 'q' → logprob: -9.702593803405762
    6. '<|end|>' → logprob: -11.202593803405762
    7. ' ' → logprob: -11.327593803405762
    8. '	self' → logprob: -11.577593803405762
    9. '
' → logprob: -12.577593803405762
    10. '(self' → logprob: -13.452593803405762

Token 155: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020449401927180588
    2. ' )' → logprob: -9.000204086303711
    3. ')/(' → logprob: -9.625204086303711
    4. ')/' → logprob: -11.250204086303711
    5. ')
' → logprob: -15.000204086303711
    6. 'q' → logprob: -15.125204086303711
    7. '```' → logprob: -15.750204086303711
    8. '`)' → logprob: -16.25020408630371
    9. '<|end|>' → logprob: -16.25020408630371
    10. ')**' → logprob: -16.37520408630371

Token 156: ' /' (ID: 820)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013858230784535408
    2. ' )' → logprob: -4.388858318328857
    3. ')/' → logprob: -7.888858318328857
    4. '       ' → logprob: -8.2638578414917
    5. ')/(' → logprob: -8.2638578414917
    6. '*' → logprob: -9.1388578414917
    7. ' *' → logprob: -9.5138578414917
    8. '   ' → logprob: -9.8888578414917
    9. ')*' → logprob: -10.1388578414917
    10. '*)' → logprob: -10.3888578414917

Token 157: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04337754100561142
    2. ' (' → logprob: -3.168377637863159
    3. '3' → logprob: -8.293377876281738
    4. '(
' → logprob: -9.793377876281738
    5. ' ' → logprob: -10.043377876281738
    6. '
' → logprob: -11.418377876281738
    7. '   ' → logprob: -12.293377876281738
    8. '  ' → logprob: -13.418377876281738
    9. '(self' → logprob: -13.543377876281738
    10. '(x' → logprob: -13.543377876281738

Token 158: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.2383906990289688
    2. '(' → logprob: -1.6133906841278076
    3. ' ' → logprob: -4.613390922546387
    4. ' (' → logprob: -5.863390922546387
    5. '(
' → logprob: -10.238390922546387
    6. '   ' → logprob: -10.363390922546387
    7. ')' → logprob: -10.488390922546387
    8. '
' → logprob: -11.238390922546387
    9. '  ' → logprob: -11.863390922546387
    10. '\
' → logprob: -13.488390922546387

Token 159: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.00016754455282352865
    2. '*' → logprob: -8.750167846679688
    3. '*x' → logprob: -12.000167846679688
    4. '*q' → logprob: -13.750167846679688
    5. ' ' → logprob: -14.500167846679688
    6. '<|end|>' → logprob: -15.000167846679688
    7. ' x' → logprob: -15.125167846679688
    8. '*(' → logprob: -15.375167846679688
    9. '   ' → logprob: -16.375167846679688
    10. '*object' → logprob: -16.750167846679688

Token 160: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.034429892897605896
    2. ' x' → logprob: -3.4094297885894775
    3. '(x' → logprob: -7.534430027008057
    4. ' (' → logprob: -8.659429550170898
    5. '
' → logprob: -10.409429550170898
    6. 'self' → logprob: -10.784429550170898
    7. ' self' → logprob: -11.909429550170898
    8. 'q' → logprob: -12.659429550170898
    9. '(' → logprob: -12.659429550170898
    10. '(self' → logprob: -12.784429550170898

Token 161: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -5.3120038501219824e-05
    2. 'n' → logprob: -10.000053405761719
    3. '**' → logprob: -12.375053405761719
    4. '_' → logprob: -13.000053405761719
    5. ' _' → logprob: -14.500053405761719
    6. ' ' → logprob: -15.625053405761719
    7. '
' → logprob: -16.25005340576172
    8. '^' → logprob: -16.50005340576172
    9. '```' → logprob: -17.00005340576172
    10. 'x' → logprob: -17.12505340576172

Token 162: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0009948217775672674
    2. ' **' → logprob: -7.000994682312012
    3. ')' → logprob: -9.875994682312012
    4. '*' → logprob: -11.250994682312012
    5. ')**' → logprob: -12.125994682312012
    6. ' ' → logprob: -12.250994682312012
    7. '
' → logprob: -13.500994682312012
    8. '2' → logprob: -13.500994682312012
    9. '**)' → logprob: -13.625994682312012
    10. ' )' → logprob: -13.875994682312012

Token 163: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00013381359167397022
    2. ' ' → logprob: -9.000133514404297
    3. '**' → logprob: -11.625133514404297
    4. '
' → logprob: -14.750133514404297
    5. ' **' → logprob: -15.000133514404297
    6. '```' → logprob: -15.750133514404297
    7. '

' → logprob: -16.000133514404297
    8. ')' → logprob: -16.125133514404297
    9. '3' → logprob: -16.812633514404297
    10. '   ' → logprob: -16.875133514404297

Token 164: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006211512256413698
    2. ' )' → logprob: -5.131211280822754
    3. '       ' → logprob: -9.006211280822754
    4. ')
' → logprob: -9.006211280822754
    5. '   ' → logprob: -10.881211280822754
    6. '+' → logprob: -12.131211280822754
    7. ' )
' → logprob: -12.131211280822754
    8. ' +' → logprob: -13.131211280822754
    9. '
' → logprob: -14.381211280822754
    10. '))' → logprob: -14.506211280822754

Token 165: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017672907561063766
    2. '   ' → logprob: -4.767673015594482
    3. ')' → logprob: -5.267673015594482
    4. '<|end|>' → logprob: -6.267673015594482
    5. '
' → logprob: -7.767673015594482
    6. '    ' → logprob: -8.142672538757324
    7. '\n' → logprob: -8.267672538757324
    8. ' ' → logprob: -8.392672538757324
    9. 'n' → logprob: -9.517672538757324
    10. ',' → logprob: -9.767672538757324

Token 166: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00046081675100140274
    2. '"""' → logprob: -8.625460624694824
    3. ')' → logprob: -9.250460624694824
    4. '
' → logprob: -9.500460624694824
    5. '   ' → logprob: -10.375460624694824
    6. ' return' → logprob: -11.125460624694824
    7. ' """' → logprob: -11.500460624694824
    8. '"""
' (adapté à ' """
') → logprob: -11.875460624694824
    9. ' """
' → logprob: -11.875460624694824
    10. ' 
' → logprob: -12.000460624694824

Token 167: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020083377603441477
    2. 'return' → logprob: -6.502008438110352
    3. ' return' → logprob: -7.627008438110352
    4. '
' → logprob: -11.127008438110352
    5. '   ' → logprob: -14.002008438110352
    6. '	' → logprob: -14.377008438110352
    7. '```' → logprob: -14.502008438110352
    8. '    ' → logprob: -15.002008438110352
    9. '      ' → logprob: -15.127008438110352
    10. '        
' → logprob: -15.377008438110352

Token 168: ' numerator' (ID: 149054)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.05240963026881218
    2. '       ' → logprob: -3.4274096488952637
    3. 'x' → logprob: -4.677409648895264
    4. ' return' → logprob: -5.427409648895264
    5. 'numer' → logprob: -6.552409648895264
    6. 'if' → logprob: -6.927409648895264
    7. 'next' → logprob: -7.177409648895264
    8. 'xn' → logprob: -7.927409648895264
    9. 'n' → logprob: -8.052409172058105
    10. ' numerator' → logprob: -8.052409172058105

Token 169: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029750952497124672
    2. '=' → logprob: -3.5297510623931885
    3. ' ' → logprob: -15.52975082397461
    4. ' ' → logprob: -15.77975082397461
    5. ',' → logprob: -16.77975082397461
    6. ' =
' → logprob: -17.02975082397461
    7. ' =(' → logprob: -17.15475082397461
    8. ')' → logprob: -18.27975082397461
    9. '   ' → logprob: -18.90475082397461
    10. '	' → logprob: -18.90475082397461

Token 170: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10285624116659164
    2. ' x' → logprob: -2.852856159210205
    3. '(x' → logprob: -3.477856159210205
    4. ' (' → logprob: -4.727856159210205
    5. '(' → logprob: -8.352856636047363
    6. 'self' → logprob: -9.727856636047363
    7. ' self' → logprob: -10.602856636047363
    8. '(self' → logprob: -11.477856636047363
    9. '   ' → logprob: -12.102856636047363
    10. '	x' → logprob: -12.977856636047363

Token 171: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0181703120470047
    2. ' **' → logprob: -4.018170356750488
    3. '*' → logprob: -11.268170356750488
    4. ' *' → logprob: -11.893170356750488
    5. '*x' → logprob: -14.143170356750488
    6. ' ' → logprob: -16.143169403076172
    7. '3' → logprob: -16.893169403076172
    8. '***' → logprob: -17.518169403076172
    9. '```' → logprob: -18.143169403076172
    10. 'x' → logprob: -18.143169403076172

Token 172: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.024604277219623e-05
    2. ' ' → logprob: -10.125040054321289
    3. '```' → logprob: -17.37504005432129
    4. '   ' → logprob: -17.75004005432129
    5. '  ' → logprob: -17.87504005432129
    6. '۳' → logprob: -18.62504005432129
    7. '³' → logprob: -19.06254005432129
    8. '
' → logprob: -20.00004005432129
    9. '３' → logprob: -20.06254005432129
    10. '

' → logprob: -20.43754005432129

Token 173: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '۳' → logprob: -20.125
    4. '³' → logprob: -20.75
    5. '```' → logprob: -20.75
    6. '３' → logprob: -21.0
    7. '३' → logprob: -21.0
    8. '৩' → logprob: -21.375
    9. '   ' → logprob: -21.75
    10. '  ' → logprob: -22.0

Token 174: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0010827097576111555
    2. '-' → logprob: -6.876082897186279
    3. '<|end|>' → logprob: -10.001082420349121
    4. ')' → logprob: -13.126082420349121
    5. ' ' → logprob: -13.876082420349121
    6. ' ' → logprob: -14.126082420349121
    7. ' –' → logprob: -15.626082420349121
    8. ',' → logprob: -16.126083374023438
    9. '<|end|>' → logprob: -16.126083374023438
    10. ' -
' → logprob: -16.376083374023438

Token 175: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.08895745873451233
    2. 'self' → logprob: -2.4639575481414795
    3. '<|end|>' → logprob: -11.213957786560059
    4. ' ' → logprob: -13.588957786560059
    5. '       ' → logprob: -13.713957786560059
    6. '	self' → logprob: -14.088957786560059
    7. '(self' → logprob: -14.838957786560059
    8. ' ' → logprob: -15.338957786560059
    9. '[self' → logprob: -15.838957786560059
    10. ' q' → logprob: -16.213956832885742

Token 176: '.q' (ID: 20954)
  Prédit: '.q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.q' → logprob: -0.029762759804725647
    2. '.' → logprob: -3.5297627449035645
    3. ' .' → logprob: -11.404763221740723
    4. 'q' → logprob: -14.279763221740723
    5. '.qu' → logprob: -15.779763221740723
    6. '.qml' → logprob: -16.404762268066406
    7. ').' → logprob: -16.779762268066406
    8. '.qq' → logprob: -16.904762268066406
    9. '.s' → logprob: -17.154762268066406
    10. '.qt' → logprob: -17.404762268066406

Token 177: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 178: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.205949068069458
    2. ' /' → logprob: -1.330949068069458
    3. ' /
' → logprob: -1.705949068069458
    4. '
' → logprob: -2.205949068069458
    5. '       ' → logprob: -2.580949068069458
    6. '<|end|>' → logprob: -3.455949068069458
    7. '/' → logprob: -5.205948829650879
    8. '/
' → logprob: -5.205948829650879
    9. ' ' → logprob: -5.330948829650879
    10. ')/(' → logprob: -5.580948829650879

Token 179: ' denominator' (ID: 101279)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.2425953894853592
    2. ' /
' → logprob: -2.9925954341888428
    3. '/' → logprob: -3.1175954341888428
    4. ' (' → logprob: -3.3675954341888428
    5. '<|end|>' → logprob: -3.4925954341888428
    6. '       ' → logprob: -4.367595195770264
    7. '(' → logprob: -4.492595195770264
    8. ' ' → logprob: -4.992595195770264
    9. '/
' → logprob: -5.492595195770264
    10. '/(' → logprob: -5.617595195770264

Token 180: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004079470410943031
    2. '=' → logprob: -5.504079341888428
    3. ' =
' → logprob: -14.504079818725586
    4. ' ' → logprob: -15.129079818725586
    5. ')' → logprob: -15.879079818725586
    6. '<|end|>' → logprob: -16.004079818725586
    7. '   ' → logprob: -17.754079818725586
    8. ':' → logprob: -18.129079818725586
    9. ',' → logprob: -18.129079818725586
    10. 's' → logprob: -18.504079818725586

Token 181: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.007612544111907482
    2. ' ' → logprob: -4.882612705230713
    3. '(' → logprob: -12.257612228393555
    4. '   ' → logprob: -14.007612228393555
    5. ' (' → logprob: -14.132612228393555
    6. '  ' → logprob: -16.257612228393555
    7. '
' → logprob: -17.257612228393555
    8. ' ' → logprob: -17.507612228393555
    9. '    ' → logprob: -17.757612228393555
    10. '       ' → logprob: -18.132612228393555

Token 182: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.2020991056924686e-05
    2. ' ' → logprob: -10.500032424926758
    3. '(' → logprob: -12.375032424926758
    4. '   ' → logprob: -16.500032424926758
    5. ' (' → logprob: -17.750032424926758
    6. '
' → logprob: -18.750032424926758
    7. '  ' → logprob: -18.875032424926758
    8. '```' → logprob: -19.250032424926758
    9. '۳' → logprob: -19.625032424926758
    10. '           ' → logprob: -19.875032424926758

Token 183: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0009115827269852161
    2. '*' → logprob: -7.000911712646484
    3. '*(' → logprob: -17.625911712646484
    4. ' ' → logprob: -17.750911712646484
    5. '   ' → logprob: -18.125911712646484
    6. ' ' → logprob: -18.500911712646484
    7. '```' → logprob: -20.125911712646484
    8. '    ' → logprob: -20.250911712646484
    9. '*object' → logprob: -20.375911712646484
    10. ' *
' → logprob: -20.500911712646484

Token 184: ' (' (ID: 350)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.023573411628603935
    2. 'x' → logprob: -4.398573398590088
    3. ' (' → logprob: -4.523573398590088
    4. '(x' → logprob: -9.273573875427246
    5. '(' → logprob: -9.773573875427246
    6. ' ' → logprob: -13.648573875427246
    7. '<|end|>' → logprob: -15.398573875427246
    8. '	x' → logprob: -16.27357292175293
    9. '```' → logprob: -16.52357292175293
    10. ' ' → logprob: -16.64857292175293

Token 185: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0019286326132714748
    2. ' x' → logprob: -6.251928806304932
    3. '(x' → logprob: -17.626928329467773
    4. ')x' → logprob: -17.751928329467773
    5. '	x' → logprob: -18.251928329467773
    6. ')' → logprob: -18.751928329467773
    7. '   ' → logprob: -19.001928329467773
    8. '```' → logprob: -19.751928329467773
    9. ' ' → logprob: -20.626928329467773
    10. '_x' → logprob: -21.001928329467773

Token 186: ' **' (ID: 6240)
  Prédit: ' **'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.002744246507063508
    2. '**' → logprob: -6.002744197845459
    3. ')' → logprob: -8.377744674682617
    4. ')**' → logprob: -11.252744674682617
    5. ' **)' → logprob: -11.252744674682617
    6. ' )' → logprob: -11.752744674682617
    7. ' ' → logprob: -12.877744674682617
    8. ' ' → logprob: -14.127744674682617
    9. ' *' → logprob: -14.377744674682617
    10. '```' → logprob: -15.127744674682617

Token 187: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.020542588084936142
    2. ' ' → logprob: -3.895542621612549
    3. '   ' → logprob: -14.89554214477539
    4. '  ' → logprob: -16.64554214477539
    5. '    ' → logprob: -16.77054214477539
    6. '(' → logprob: -16.77054214477539
    7. '```' → logprob: -16.89554214477539
    8. '     ' → logprob: -17.39554214477539
    9. '       ' → logprob: -17.64554214477539
    10. '           ' → logprob: -18.52054214477539

Token 188: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -17.500030517578125
    4. '(' → logprob: -18.250030517578125
    5. '۲' → logprob: -19.000030517578125
    6. '```' → logprob: -19.125030517578125
    7. '  ' → logprob: -19.750030517578125
    8. '２' → logprob: -20.062530517578125
    9. '    ' → logprob: -20.062530517578125
    10. '     ' → logprob: -20.250030517578125

Token 189: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07889264822006226
    2. ')
' → logprob: -2.578892707824707
    3. ')

' → logprob: -13.953892707824707
    4. ')
' → logprob: -14.203892707824707
    5. ' )' → logprob: -14.203892707824707
    6. '       ' → logprob: -14.953892707824707
    7. ' )
' → logprob: -15.203892707824707
    8. '   ' → logprob: -16.70389175415039
    9. '))' → logprob: -17.57889175415039
    10. ')return' → logprob: -18.07889175415039

Token 190: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008661486208438873
    2. 'return' → logprob: -5.258661270141602
    3. ' return' → logprob: -6.133661270141602
    4. ')' → logprob: -6.883661270141602
    5. '
' → logprob: -9.258661270141602
    6. '	return' → logprob: -10.633661270141602
    7. '	' → logprob: -10.633661270141602
    8. '        
' → logprob: -10.883661270141602
    9. 'x' → logprob: -11.383661270141602
    10. ':return' → logprob: -11.633661270141602

Token 191: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01664150133728981
    2. '       ' → logprob: -4.266641616821289
    3. ' return' → logprob: -6.016641616821289
    4. 'if' → logprob: -10.641641616821289
    5. ')' → logprob: -12.391641616821289
    6. ':return' → logprob: -13.016641616821289
    7. '	return' → logprob: -13.266641616821289
    8. 'x' → logprob: -13.766641616821289
    9. 'next' → logprob: -14.391641616821289
    10. ' ' → logprob: -14.516641616821289

Token 192: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.31326186656951904
    2. 'x' → logprob: -1.313261866569519
    3. '	x' → logprob: -15.563261985778809
    4. '   ' → logprob: -18.313261032104492
    5. ' ' → logprob: -19.813261032104492
    6. '    ' → logprob: -19.938261032104492
    7. ' ' → logprob: -20.563261032104492
    8. '_x' → logprob: -21.063261032104492
    9. '$x' → logprob: -21.063261032104492
    10. 'xn' → logprob: -21.188261032104492

Token 193: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04300205409526825
    2. '-' → logprob: -3.168002128601074
    3. ' ' → logprob: -13.918002128601074
    4. ' ' → logprob: -13.918002128601074
    5. '-n' → logprob: -14.668002128601074
    6. 'numer' → logprob: -15.168002128601074
    7. '_' → logprob: -16.293001174926758
    8. ' -
' → logprob: -16.418001174926758
    9. '```' → logprob: -17.293001174926758
    10. ' numerator' → logprob: -17.855501174926758

Token 194: ' numerator' (ID: 149054)
  Prédit: ' numerator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numerator' → logprob: -0.2519337236881256
    2. 'numer' → logprob: -1.5019336938858032
    3. ' (' → logprob: -13.626934051513672
    4. '(n' → logprob: -13.751934051513672
    5. ' numer' → logprob: -14.251934051513672
    6. 'umerator' → logprob: -14.376934051513672
    7. '   ' → logprob: -14.751934051513672
    8. ' denominator' → logprob: -15.876934051513672
    9. 'num' → logprob: -16.001934051513672
    10. ' ' → logprob: -16.126934051513672

Token 195: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.10020678490400314
    2. '/' → logprob: -2.3502068519592285
    3. ' ' → logprob: -16.60020637512207
    4. ' /
' → logprob: -17.35020637512207
    5. '   ' → logprob: -18.10020637512207
    6. '/d' → logprob: -19.97520637512207
    7. ' ' → logprob: -20.47520637512207
    8. '/
' → logprob: -20.72520637512207
    9. ' denominator' → logprob: -20.97520637512207
    10. ' /

' → logprob: -21.35020637512207

Token 196: ' denominator' (ID: 101279)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.06197429448366165
    2. ' denominator' → logprob: -2.811974287033081
    3. ' den' → logprob: -12.06197452545166
    4. '_den' → logprob: -15.31197452545166
    5. ' denomination' → logprob: -15.56197452545166
    6. ' denom' → logprob: -16.686973571777344
    7. ' denomin' → logprob: -16.686973571777344
    8. ' ' → logprob: -16.936973571777344
    9. ' ' → logprob: -17.186973571777344
    10. '   ' → logprob: -17.311973571777344

Token 197: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 198: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 199: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0659853145480156
    2. '   ' → logprob: -3.1909852027893066
    3. ' def' → logprob: -3.8159852027893066
    4. '	def' → logprob: -8.690985679626465
    5. '    
' → logprob: -8.815985679626465
    6. 'class' → logprob: -8.940985679626465
    7. ' 
' → logprob: -9.815985679626465
    8. ' ' → logprob: -9.940985679626465
    9. '<|end|>' → logprob: -10.065985679626465
    10. '#' → logprob: -11.190985679626465

Token 200: ' has' (ID: 853)
  Prédit: ' approximate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' approximate' → logprob: -0.1497233361005783
    2. 'approx' → logprob: -2.2747232913970947
    3. ' approx' → logprob: -3.7747232913970947
    4. ' compute' → logprob: -5.024723529815674
    5. ' solve' → logprob: -6.774723529815674
    6. ' run' → logprob: -6.899723529815674
    7. ' next' → logprob: -7.274723529815674
    8. 'compute' → logprob: -7.399723529815674
    9. ' get' → logprob: -7.649723529815674
    10. ' approximation' → logprob: -7.649723529815674

Token 201: '_con' (ID: 7531)
  Prédit: '_con'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_con' → logprob: -0.0019388694781810045
    2. '_next' → logprob: -6.376938819885254
    3. '_' → logprob: -8.751938819885254
    4. '_finished' → logprob: -10.501938819885254
    5. '_more' → logprob: -10.626938819885254
    6. '_completed' → logprob: -12.251938819885254
    7. '_error' → logprob: -12.501938819885254
    8. '_failed' → logprob: -12.876938819885254
    9. 'Con' → logprob: -13.251938819885254
    10. '_t' → logprob: -13.626938819885254

Token 202: 'ver' (ID: 445)
  Prédit: 'ver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ver' → logprob: -1.9361264946837764e-07
    2. 'vergence' → logprob: -16.75
    3. 'verg' → logprob: -17.375
    4. 'v' → logprob: -17.5
    5. 'verted' → logprob: -18.25
    6. 'Ver' → logprob: -18.25
    7. '_ver' → logprob: -19.5
    8. 'VER' → logprob: -20.5
    9. '(ver' → logprob: -20.5
    10. 't' → logprob: -20.625

Token 203: 'ged' (ID: 5083)
  Prédit: 'ged'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ged' → logprob: -9.014684110297821e-06
    2. 'ed' → logprob: -13.000008583068848
    3. 'g' → logprob: -13.125008583068848
    4. '   ' → logprob: -13.750008583068848
    5. 'ge' → logprob: -14.250008583068848
    6. '```' → logprob: -14.250008583068848
    7. '
' → logprob: -15.500008583068848
    8. 'r' → logprob: -15.625008583068848
    9. '__' → logprob: -15.875008583068848
    10. 'ges' → logprob: -15.875008583068848

Token 204: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005551783833652735
    2. '(' → logprob: -7.500555038452148
    3. ' (' → logprob: -13.250555038452148
    4. 'self' → logprob: -15.000555038452148
    5. '(
' → logprob: -16.37555503845215
    6. '   ' → logprob: -16.50055503845215
    7. ' ' → logprob: -18.62555503845215
    8. '       ' → logprob: -19.00055503845215
    9. ' self' → logprob: -19.12555503845215
    10. '(sel' → logprob: -19.25055503845215

Token 205: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.054500666621607e-06
    2. ' (' → logprob: -13.62500286102295
    3. 'self' → logprob: -14.25000286102295
    4. '(' → logprob: -14.87500286102295
    5. ',' → logprob: -14.87500286102295
    6. '   ' → logprob: -15.37500286102295
    7. ',self' → logprob: -16.250003814697266
    8. ')' → logprob: -17.000003814697266
    9. ' self' → logprob: -17.000003814697266
    10. '       ' → logprob: -17.625003814697266

Token 206: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.39811110496520996
    2. 'x' → logprob: -1.27311110496521
    3. ' self' → logprob: -3.64811110496521
    4. 'self' → logprob: -4.273111343383789
    5. ' prev' → logprob: -6.273111343383789
    6. ' old' → logprob: -6.398111343383789
    7. 'prev' → logprob: -6.648111343383789
    8. ' previous' → logprob: -6.648111343383789
    9. ' current' → logprob: -6.898111343383789
    10. 'old' → logprob: -7.398111343383789

Token 207: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015051512978971004
    2. ':' → logprob: -4.515051364898682
    3. ' ,' → logprob: -6.515051364898682
    4. '1' → logprob: -7.015051364898682
    5. '_old' → logprob: -7.515051364898682
    6. 'new' → logprob: -8.39005184173584
    7. '_new' → logprob: -8.51505184173584
    8. '):' → logprob: -8.89005184173584
    9. '_prev' → logprob: -9.01505184173584
    10. '   ' → logprob: -9.26505184173584

Token 208: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.04332514852285385
    2. ' float' → logprob: -3.168325185775757
    3. 'self' → logprob: -8.293325424194336
    4. 'loat' → logprob: -11.168325424194336
    5. ',float' → logprob: -11.168325424194336
    6. '   ' → logprob: -11.293325424194336
    7. ')' → logprob: -11.418325424194336
    8. ' self' → logprob: -11.918325424194336
    9. '(float' → logprob: -12.043325424194336
    10. '=float' → logprob: -12.793325424194336

Token 209: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3869629204273224
    2. ',' → logprob: -1.136962890625
    3. '):' → logprob: -10.011962890625
    4. ' )' → logprob: -10.511962890625
    5. ' ,' → logprob: -11.636962890625
    6. '   ' → logprob: -12.636962890625
    7. ',)' → logprob: -12.761962890625
    8. ':' → logprob: -13.511962890625
    9. '`)' → logprob: -14.136962890625
    10. '):
' → logprob: -14.261962890625

Token 210: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4600422978401184
    2. '->' → logprob: -1.2100422382354736
    3. ' ->' → logprob: -3.0850422382354736
    4. ')' → logprob: -3.8350422382354736
    5. '   ' → logprob: -6.960042476654053
    6. ')->' → logprob: -7.085042476654053
    7. ':
' → logprob: -7.460042476654053
    8. ',' → logprob: -7.585042476654053
    9. '       ' → logprob: -8.210041999816895
    10. '):' → logprob: -10.585041999816895

Token 211: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.16034018993377686
    2. ' bool' → logprob: -1.9103401899337769
    3. 'float' → logprob: -9.160340309143066
    4. ' float' → logprob: -11.785340309143066
    5. '	bool' → logprob: -13.535340309143066
    6. '   ' → logprob: -14.035340309143066
    7. ' ' → logprob: -14.660340309143066
    8. '(bool' → logprob: -15.410340309143066
    9. 'abs' → logprob: -15.535340309143066
    10. ' ' → logprob: -16.41033935546875

Token 212: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005719788023270667
    2. ':
' → logprob: -7.500572204589844
    3. '       ' → logprob: -12.375572204589844
    4. '<|end|>' → logprob: -12.500572204589844
    5. '):' → logprob: -12.875572204589844
    6. ',' → logprob: -13.250572204589844
    7. ':return' → logprob: -13.375572204589844
    8. '   ' → logprob: -13.625572204589844
    9. ':**' → logprob: -13.875572204589844
    10. '():' → logprob: -14.250572204589844

Token 213: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016963649541139603
    2. '<|end|>' → logprob: -6.501696586608887
    3. ' return' → logprob: -9.126696586608887
    4. '   ' → logprob: -9.876696586608887
    5. '<|end|>' → logprob: -11.751696586608887
    6. '```' → logprob: -12.376696586608887
    7. '        
' → logprob: -12.376696586608887
    8. '      ' → logprob: -12.876696586608887
    9. 'return' → logprob: -13.251696586608887
    10. ':return' → logprob: -13.876696586608887

Token 214: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10551559180021286
    2. 'return' → logprob: -2.605515480041504
    3. ' return' → logprob: -3.730515480041504
    4. '   ' → logprob: -6.105515480041504
    5. '
' → logprob: -10.230515480041504
    6. '```' → logprob: -11.355515480041504
    7. '        
' → logprob: -11.980515480041504
    8. '	return' → logprob: -13.105515480041504
    9. ':return' → logprob: -13.480515480041504
    10. '{return' → logprob: -14.230515480041504

Token 215: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39710962772369385
    2. 'return' → logprob: -1.1471096277236938
    3. ' return' → logprob: -4.647109508514404
    4. '   ' → logprob: -7.647109508514404
    5. 'abs' → logprob: -9.147109985351562
    6. ' abs' → logprob: -11.397109985351562
    7. '"""' → logprob: -14.022109985351562
    8. '	return' → logprob: -14.647109985351562
    9. '```' → logprob: -15.647109985351562
    10. '      ' → logprob: -16.022109985351562

Token 216: ' Condition' (ID: 30255)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0013932115398347378
    2. '       ' → logprob: -7.2513933181762695
    3. ' return' → logprob: -8.00139331817627
    4. '   ' → logprob: -8.37639331817627
    5. '"""' → logprob: -9.50139331817627
    6. 'Return' → logprob: -10.37639331817627
    7. '"""
' → logprob: -11.62639331817627
    8. ':return' → logprob: -13.87639331817627
    9. 'Retour' → logprob: -14.87639331817627
    10. 'def' → logprob: -15.12639331817627

Token 217: ' de' (ID: 334)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.6206361055374146
    2. '   ' → logprob: -1.7456361055374146
    3. ' de' → logprob: -1.7456361055374146
    4. 'return' → logprob: -2.245635986328125
    5. '       ' → logprob: -2.370635986328125
    6. 'abs' → logprob: -2.620635986328125
    7. ':' → logprob: -2.745635986328125
    8. ' abs' → logprob: -2.870635986328125
    9. 'de' → logprob: -4.245635986328125
    10. ' d' → logprob: -4.495635986328125

Token 218: ' convergence' (ID: 99389)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.4128340184688568
    2. 'con' → logprob: -1.1628340482711792
    3. ' convergence' → logprob: -4.037834167480469
    4. ' abs' → logprob: -5.662834167480469
    5. '(abs' → logprob: -5.662834167480469
    6. 'arr' → logprob: -8.287834167480469
    7. 'return' → logprob: -8.537834167480469
    8. ' conver' → logprob: -9.037834167480469
    9. 'stop' → logprob: -9.412834167480469
    10. 'diff' → logprob: -9.537834167480469

Token 219: ' :' (ID: 712)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.700147807598114
    2. ':' → logprob: -0.950147807598114
    3. 'return' → logprob: -2.575147867202759
    4. '   ' → logprob: -3.950147867202759
    5. ' return' → logprob: -4.45014762878418
    6. ':return' → logprob: -5.20014762878418
    7. ' :' → logprob: -6.07514762878418
    8. '
' → logprob: -7.82514762878418
    9. ':
' → logprob: -8.07514762878418
    10. '```' → logprob: -8.57514762878418

Token 220: ' |' (ID: 1022)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.9653627276420593
    2. 'return' → logprob: -1.215362787246704
    3. ' abs' → logprob: -1.715362787246704
    4. ' return' → logprob: -1.965362787246704
    5. '       ' → logprob: -6.090362548828125
    6. '   ' → logprob: -8.340362548828125
    7. '(abs' → logprob: -10.715362548828125
    8. 'Abs' → logprob: -11.840362548828125
    9. 'self' → logprob: -12.465362548828125
    10. ' ' → logprob: -12.590362548828125

Token 221: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.004163045436143875
    2. ' x' → logprob: -6.2541632652282715
    3. 'self' → logprob: -6.5041632652282715
    4. '(x' → logprob: -7.5041632652282715
    5. '(' → logprob: -9.379162788391113
    6. ' (' → logprob: -10.129162788391113
    7. '(self' → logprob: -10.629162788391113
    8. ' self' → logprob: -11.004162788391113
    9. '   ' → logprob: -11.504162788391113
    10. ' ' → logprob: -13.129162788391113

Token 222: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.003708277130499482
    2. ' **' → logprob: -5.753708362579346
    3. '*' → logprob: -9.128707885742188
    4. '3' → logprob: -9.378707885742188
    5. ' -' → logprob: -9.378707885742188
    6. '
' → logprob: -9.503707885742188
    7. '-' → logprob: -9.878707885742188
    8. '```' → logprob: -10.253707885742188
    9. 'x' → logprob: -11.128707885742188
    10. '**
' → logprob: -11.503707885742188

Token 223: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.1472419600977446e-06
    2. '**' → logprob: -14.375000953674316
    3. ' ' → logprob: -14.625000953674316
    4. '
' → logprob: -17.125001907348633
    5. '   ' → logprob: -17.125001907348633
    6. '```' → logprob: -17.125001907348633
    7. 'n' → logprob: -19.375001907348633
    8. '  ' → logprob: -19.375001907348633
    9. '

' → logprob: -19.500001907348633
    10. '۳' → logprob: -20.000001907348633

Token 224: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.17984560132026672
    2. '-' → logprob: -1.8048455715179443
    3. ' ' → logprob: -9.679845809936523
    4. '*' → logprob: -11.054845809936523
    5. '   ' → logprob: -11.179845809936523
    6. '  ' → logprob: -12.679845809936523
    7. ' *' → logprob: -13.179845809936523
    8. '()' → logprob: -13.554845809936523
    9. ' ' → logprob: -13.554845809936523
    10. '```' → logprob: -15.054845809936523

Token 225: ' q' (ID: 2335)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01815931126475334
    2. ' self' → logprob: -4.01815938949585
    3. '       ' → logprob: -11.893158912658691
    4. 'q' → logprob: -14.268158912658691
    5. '(self' → logprob: -14.643158912658691
    6. '   ' → logprob: -14.893158912658691
    7. 'x' → logprob: -15.268158912658691
    8. ' ' → logprob: -15.518158912658691
    9. '	self' → logprob: -16.268159866333008
    10. '
' → logprob: -16.768159866333008

Token 226: '|' (ID: 91)
  Prédit: '|'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -5.621933451038785e-05
    2. ' |' → logprob: -9.875056266784668
    3. ')' → logprob: -12.375056266784668
    4. ')|' → logprob: -14.875056266784668
    5. '   ' → logprob: -18.00005531311035
    6. '|
' → logprob: -18.12505531311035
    7. '```' → logprob: -18.37505531311035
    8. ' ' → logprob: -18.50005531311035
    9. ']' → logprob: -18.62505531311035
    10. '[' → logprob: -18.87505531311035

Token 227: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -1.1475515365600586
    2. ' <=' → logprob: -1.1475515365600586
    3. ' <' → logprob: -1.2725515365600586
    4. '<=' → logprob: -2.7725515365600586
    5. '|' → logprob: -4.897551536560059
    6. ')' → logprob: -5.022551536560059
    7. '   ' → logprob: -5.147551536560059
    8. '[' → logprob: -7.772551536560059
    9. 'abs' → logprob: -7.897551536560059
    10. '       ' → logprob: -7.897551536560059

Token 228: ' tolerance' (ID: 46581)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1602262556552887
    2. ' self' → logprob: -1.9102262258529663
    3. ' ' → logprob: -13.660225868225098
    4. '0' → logprob: -14.785225868225098
    5. '=self' → logprob: -15.535225868225098
    6. '	self' → logprob: -15.785225868225098
    7. '(self' → logprob: -17.035226821899414
    8. ' ' → logprob: -17.410226821899414
    9. '=' → logprob: -17.410226821899414
    10. '       ' → logprob: -17.660226821899414

Token 229: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030560145154595375
    2. 'return' → logprob: -4.53056001663208
    3. '   ' → logprob: -4.78056001663208
    4. '<|end|>' → logprob: -5.40556001663208
    5. '
' → logprob: -6.03056001663208
    6. ' return' → logprob: -6.53056001663208
    7. ',' → logprob: -7.78056001663208
    8. ')' → logprob: -7.78056001663208
    9. ':return' → logprob: -7.90556001663208
    10. ':' → logprob: -7.90556001663208

Token 230: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004543219227343798
    2. '   ' → logprob: -6.129543304443359
    3. ')' → logprob: -6.754543304443359
    4. 'return' → logprob: -7.629543304443359
    5. ' return' → logprob: -8.62954330444336
    6. '
' → logprob: -9.00454330444336
    7. '<|end|>' → logprob: -9.00454330444336
    8. ',' → logprob: -9.50454330444336
    9. ' or' → logprob: -10.37954330444336
    10. '```' → logprob: -10.62954330444336

Token 231: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09596993029117584
    2. 'return' → logprob: -2.5959699153900146
    3. ' return' → logprob: -4.845970153808594
    4. '
' → logprob: -4.970970153808594
    5. '   ' → logprob: -6.220970153808594
    6. '        
' → logprob: -9.970970153808594
    7. '```' → logprob: -10.345970153808594
    8. ')' → logprob: -11.345970153808594
    9. ':return' → logprob: -11.470970153808594
    10. '	return' → logprob: -11.720970153808594

Token 232: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00553493108600378
    2. 'return' → logprob: -5.880535125732422
    3. '   ' → logprob: -6.255535125732422
    4. ' return' → logprob: -7.130535125732422
    5. '```' → logprob: -12.630535125732422
    6. '
' → logprob: -13.630535125732422
    7. '   ' → logprob: -14.505535125732422
    8. '	return' → logprob: -14.755535125732422
    9. ':return' → logprob: -15.880535125732422
    10. '      ' → logprob: -16.130535125732422

Token 233: ' error' (ID: 2915)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0009326597792096436
    2. '       ' → logprob: -7.000932693481445
    3. ' return' → logprob: -11.250932693481445
    4. '   ' → logprob: -11.750932693481445
    5. 'import' → logprob: -15.750932693481445
    6. 'abs' → logprob: -16.625932693481445
    7. '```' → logprob: -17.250932693481445
    8. '	return' → logprob: -17.375932693481445
    9. ':return' → logprob: -19.500932693481445
    10. '
' → logprob: -19.500932693481445

Token 234: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022443771362305
    2. '=' → logprob: -1.910224437713623
    3. 'abs' → logprob: -16.03522491455078
    4. ' ' → logprob: -16.53522491455078
    5. '_abs' → logprob: -17.28522491455078
    6. 'return' → logprob: -18.03522491455078
    7. ' =
' → logprob: -18.41022491455078
    8. ')' → logprob: -18.41022491455078
    9. ' ' → logprob: -18.53522491455078
    10. 's' → logprob: -18.66022491455078

Token 235: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.25201600790023804
    2. ' abs' → logprob: -1.5020160675048828
    3. '(abs' → logprob: -9.377016067504883
    4. '   ' → logprob: -13.877016067504883
    5. 'x' → logprob: -14.627016067504883
    6. ' x' → logprob: -15.002016067504883
    7. '.abs' → logprob: -15.502016067504883
    8. '_abs' → logprob: -15.627016067504883
    9. '    ' → logprob: -16.502016067504883
    10. '       ' → logprob: -16.877016067504883

Token 236: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00011892046313732862
    2. '((' → logprob: -9.25011920928955
    3. '(' → logprob: -11.12511920928955
    4. 'x' → logprob: -11.75011920928955
    5. ' (' → logprob: -16.750118255615234
    6. '(self' → logprob: -17.250118255615234
    7. '(
' → logprob: -18.000118255615234
    8. '   ' → logprob: -18.625118255615234
    9. '(pow' → logprob: -19.375118255615234
    10. ' x' → logprob: -19.625118255615234

Token 237: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0041142539121210575
    2. ' **' → logprob: -5.504114151000977
    3. ')**' → logprob: -11.504114151000977
    4. ')' → logprob: -11.754114151000977
    5. '***' → logprob: -11.879114151000977
    6. '*' → logprob: -12.254114151000977
    7. '```' → logprob: -13.129114151000977
    8. '³' → logprob: -13.254114151000977
    9. '<|end|>' → logprob: -14.254114151000977
    10. '3' → logprob: -15.004114151000977

Token 238: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '```' → logprob: -17.000001907348633
    4. '   ' → logprob: -19.000001907348633
    5. '³' → logprob: -19.125001907348633
    6. '۳' → logprob: -19.250001907348633
    7. '  ' → logprob: -19.250001907348633
    8. '<|end|>' → logprob: -19.375001907348633
    9. '33' → logprob: -20.750001907348633
    10. '
' → logprob: -21.000001907348633

Token 239: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '۳' → logprob: -19.625
    4. '３' → logprob: -20.25
    5. '```' → logprob: -20.3125
    6. '৩' → logprob: -20.5625
    7. '   ' → logprob: -20.625
    8. '३' → logprob: -20.875
    9. '³' → logprob: -21.0
    10. 'cube' → logprob: -21.125

Token 240: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03364893049001694
    2. '-' → logprob: -3.40864896774292
    3. ' ' → logprob: -13.283648490905762
    4. ' ' → logprob: -14.533648490905762
    5. '–' → logprob: -15.408648490905762
    6. 'self' → logprob: -15.658648490905762
    7. ' –' → logprob: -15.658648490905762
    8. '   ' → logprob: -16.658649444580078
    9. '<|end|>' → logprob: -16.908649444580078
    10. ' self' → logprob: -17.033649444580078

Token 241: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3132665753364563
    2. ' self' → logprob: -1.3132665157318115
    3. '       ' → logprob: -13.18826675415039
    4. '<|end|>' → logprob: -14.06326675415039
    5. '(self' → logprob: -14.68826675415039
    6. '	self' → logprob: -14.81326675415039
    7. ' ' → logprob: -15.18826675415039
    8. ')' → logprob: -15.31326675415039
    9. '   ' → logprob: -15.43826675415039
    10. '[self' → logprob: -15.81326675415039

Token 242: '.q' (ID: 20954)
  Prédit: '.q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.q' → logprob: -0.0010671088239178061
    2. '.' → logprob: -7.001067161560059
    3. 'q' → logprob: -9.126067161560059
    4. 'self' → logprob: -10.001067161560059
    5. ' .' → logprob: -14.251067161560059
    6. ' self' → logprob: -14.876067161560059
    7. ' q' → logprob: -16.126066207885742
    8. '	q' → logprob: -16.126066207885742
    9. 'Q' → logprob: -17.001066207885742
    10. '.self' → logprob: -17.501066207885742

Token 243: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8789383830153383e-05
    2. ')<' → logprob: -12.000019073486328
    3. ' )' → logprob: -12.000019073486328
    4. '       ' → logprob: -12.875019073486328
    5. ')
' → logprob: -13.000019073486328
    6. ')<=' → logprob: -13.875019073486328
    7. '   ' → logprob: -14.750019073486328
    8. ')>' → logprob: -17.000019073486328
    9. ')>=' → logprob: -17.250019073486328
    10. ')

' → logprob: -17.375019073486328

Token 244: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003136552404612303
    2. ' return' → logprob: -9.125313758850098
    3. 'return' → logprob: -9.125313758850098
    4. '<|end|>' → logprob: -10.250313758850098
    5. '   ' → logprob: -10.375313758850098
    6. '	return' → logprob: -11.500313758850098
    7. '	' → logprob: -11.625313758850098
    8. ' <=' → logprob: -13.250313758850098
    9. '<=' → logprob: -13.250313758850098
    10. '      ' → logprob: -13.750313758850098

Token 245: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04878799617290497
    2. '       ' → logprob: -3.048788070678711
    3. ' return' → logprob: -8.548788070678711
    4. '   ' → logprob: -12.298788070678711
    5. '	return' → logprob: -13.173788070678711
    6. '	' → logprob: -16.29878807067871
    7. ':return' → logprob: -16.29878807067871
    8. '{return' → logprob: -16.92378807067871
    9. '```' → logprob: -17.54878807067871
    10. '>' → logprob: -17.67378807067871

Token 246: ' error' (ID: 2915)
  Prédit: ' error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' error' → logprob: -0.029750484973192215
    2. 'error' → logprob: -3.5297505855560303
    3. '(error' → logprob: -19.02975082397461
    4. '	error' → logprob: -19.90475082397461
    5. ' erro' → logprob: -19.90475082397461
    6. 'Error' → logprob: -21.90475082397461
    7. 'er' → logprob: -22.65475082397461
    8. ' er' → logprob: -22.77975082397461
    9. '_error' → logprob: -22.90475082397461
    10. ' erreur' → logprob: -22.90475082397461

Token 247: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6931737065315247
    2. ' <' → logprob: -0.6931737065315247
    3. ' <=' → logprob: -10.9431734085083
    4. '<=' → logprob: -11.6931734085083
    5. '()<' → logprob: -15.9431734085083
    6. ' ' → logprob: -16.318174362182617
    7. '   ' → logprob: -16.943174362182617
    8. ' ' → logprob: -17.193174362182617
    9. '<|end|>' → logprob: -17.568174362182617
    10. ')' → logprob: -17.943174362182617

Token 248: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12693041563034058
    2. ' self' → logprob: -2.1269304752349854
    3. '       ' → logprob: -13.501930236816406
    4. '	self' → logprob: -14.876930236816406
    5. ' ' → logprob: -15.251930236816406
    6. '0' → logprob: -15.626930236816406
    7. '(self' → logprob: -16.501930236816406
    8. '   ' → logprob: -17.126930236816406
    9. '           ' → logprob: -18.251930236816406
    10. '1' → logprob: -19.001930236816406

Token 249: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.006781808100640774
    2. '.' → logprob: -5.006781578063965
    3. ' .' → logprob: -9.631781578063965
    4. '.threshold' → logprob: -15.881781578063965
    5. '._' → logprob: -16.38178253173828
    6. 't' → logprob: -16.63178253173828
    7. '.q' → logprob: -16.75678253173828
    8. '.to' → logprob: -16.75678253173828
    9. 'olerance' → logprob: -16.75678253173828
    10. '.token' → logprob: -17.50678253173828

Token 250: 'olerance' (ID: 52665)
  Prédit: 'olerance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olerance' → logprob: -2.4272752852994017e-05
    2. 'oler' → logprob: -10.87502384185791
    3. 'ol' → logprob: -12.25002384185791
    4. 'o' → logprob: -14.75002384185791
    5. 'olera' → logprob: -17.375024795532227
    6. 'ole' → logprob: -18.000024795532227
    7. 'reshold' → logprob: -18.000024795532227
    8. 'ler' → logprob: -18.250024795532227
    9. 'olation' → logprob: -18.375024795532227
    10. 'olar' → logprob: -18.500024795532227

Token 251: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 252: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.47228583693504333
    2. '   ' → logprob: -1.5972858667373657
    3. '
' → logprob: -2.097285747528076
    4. '<|end|>' → logprob: -3.722285747528076
    5. ' def' → logprob: -3.972285747528076
    6. '    
' → logprob: -5.847285747528076
    7. '

' → logprob: -6.222285747528076
    8. '```' → logprob: -6.972285747528076
    9. '  
' → logprob: -7.847285747528076
    10. ' 
' → logprob: -8.097286224365234

Token 253: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.4498052223643754e-05
    2. ' def' → logprob: -11.375014305114746
    3. '   ' → logprob: -12.750014305114746
    4. '	def' → logprob: -17.625015258789062
    5. '    
' → logprob: -19.625015258789062
    6. ' ' → logprob: -19.875015258789062
    7. '  ' → logprob: -20.375015258789062
    8. 'class' → logprob: -20.500015258789062
    9. '@' → logprob: -20.750015258789062
    10. '#' → logprob: -21.750015258789062

Token 254: ' approximate' (ID: 68753)
  Prédit: ' approximate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' approximate' → logprob: -0.02864689938724041
    2. 'approx' → logprob: -4.028646945953369
    3. ' approx' → logprob: -5.028646945953369
    4. ' compute' → logprob: -5.903646945953369
    5. ' solve' → logprob: -7.903646945953369
    6. ' find' → logprob: -8.028646469116211
    7. ' run' → logprob: -9.278646469116211
    8. 'Approx' → logprob: -9.403646469116211
    9. ' cube' → logprob: -9.778646469116211
    10. ' calculate' → logprob: -10.028646469116211

Token 255: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00032628714689053595
    2. '(' → logprob: -8.125326156616211
    3. '_root' → logprob: -10.625326156616211
    4. '_' → logprob: -13.875326156616211
    5. ' (' → logprob: -14.000326156616211
    6. '()' → logprob: -14.000326156616211
    7. '(s' → logprob: -14.625326156616211
    8. '(
' → logprob: -14.875326156616211
    9. '_cube' → logprob: -15.000326156616211
    10. 'self' → logprob: -15.125326156616211

Token 256: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004456466529518366
    2. '):' → logprob: -6.254456520080566
    3. 'self' → logprob: -6.504456520080566
    4. '):
' → logprob: -7.879456520080566
    5. '   ' → logprob: -8.379456520080566
    6. ' ,' → logprob: -8.504456520080566
    7. '(self' → logprob: -8.879456520080566
    8. '       ' → logprob: -10.004456520080566
    9. ')' → logprob: -11.254456520080566
    10. ',self' → logprob: -12.129456520080566

Token 257: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.921253225300461e-05
    2. '(' → logprob: -9.625069618225098
    3. 'self' → logprob: -13.750069618225098
    4. ':' → logprob: -14.375069618225098
    5. '   ' → logprob: -14.750069618225098
    6. '(
' → logprob: -15.250069618225098
    7. '(s' → logprob: -16.00006866455078
    8. ' (' → logprob: -16.12506866455078
    9. ':self' → logprob: -16.12506866455078
    10. '(Self' → logprob: -16.12506866455078

Token 258: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.16027073562145233
    2. ' float' → logprob: -1.9102706909179688
    3. 'None' → logprob: -10.535270690917969
    4. 'int' → logprob: -11.660270690917969
    5. ' None' → logprob: -11.660270690917969
    6. ' ' → logprob: -13.785270690917969
    7. '   ' → logprob: -14.660270690917969
    8. 'flo' → logprob: -14.910270690917969
    9. ' int' → logprob: -15.160270690917969
    10. '(float' → logprob: -15.285270690917969

Token 259: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04301723092794418
    2. ':
' → logprob: -3.1680171489715576
    3. '       ' → logprob: -11.918017387390137
    4. '):' → logprob: -12.918017387390137
    5. '):
' → logprob: -13.168017387390137
    6. '   ' → logprob: -13.418017387390137
    7. '():' → logprob: -13.543017387390137
    8. ',' → logprob: -13.793017387390137
    9. ':
' → logprob: -14.418017387390137
    10. ':

' → logprob: -14.418017387390137

Token 260: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1640416979789734
    2. '
' → logprob: -1.9140417575836182
    3. '\n' → logprob: -6.164041519165039
    4. '   ' → logprob: -8.164041519165039
    5. '\' → logprob: -8.414041519165039
    6. '        
' → logprob: -8.539041519165039
    7. '  
' → logprob: -8.539041519165039
    8. '<|end|>' → logprob: -8.664041519165039
    9. 'n' → logprob: -9.289041519165039
    10. '#' → logprob: -9.539041519165039

Token 261: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2757953107357025
    2. 'x' → logprob: -1.900795340538025
    3. ' x' → logprob: -2.4007952213287354
    4. 'while' → logprob: -8.275794982910156
    5. ' while' → logprob: -8.525794982910156
    6. '```' → logprob: -8.650794982910156
    7. 'current' → logprob: -9.025794982910156
    8. '   ' → logprob: -10.150794982910156
    9. ' current' → logprob: -10.275794982910156
    10. '
' → logprob: -10.400794982910156

Token 262: '       ' (ID: 309)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.45525994896888733
    2. '       ' → logprob: -1.080259919166565
    3. 'while' → logprob: -3.9552600383758545
    4. 'current' → logprob: -6.080259799957275
    5. ' x' → logprob: -6.205259799957275
    6. ' while' → logprob: -6.330259799957275
    7. '   ' → logprob: -7.705259799957275
    8. ' current' → logprob: -9.205260276794434
    9. 'iteration' → logprob: -9.455260276794434
    10. 'def' → logprob: -9.580260276794434

Token 263: ' Ex' (ID: 1771)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.020862653851509094
    2. '       ' → logprob: -4.645862579345703
    3. 'current' → logprob: -5.520862579345703
    4. 'while' → logprob: -5.520862579345703
    5. ' x' → logprob: -6.395862579345703
    6. 'def' → logprob: -7.520862579345703
    7. ' while' → logprob: -8.645862579345703
    8. 'prev' → logprob: -8.895862579345703
    9. 'result' → logprob: -9.020862579345703
    10. 'iteration' → logprob: -9.270862579345703

Token 264: 'éc' (ID: 5675)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25143784284591675
    2. '       ' → logprob: -2.2514379024505615
    3. 'def' → logprob: -2.8764379024505615
    4. 't' → logprob: -3.6264379024505615
    5. 'p' → logprob: -4.626437664031982
    6. 'trait' → logprob: -5.751437664031982
    7. 'ecution' → logprob: -6.001437664031982
    8. 'tra' → logprob: -6.001437664031982
    9. '"""
' → logprob: -6.376437664031982
    10. 'plic' → logprob: -6.626437664031982

Token 265: 'ute' (ID: 1331)
  Prédit: 'éc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'éc' → logprob: -0.3865417242050171
    2. 'ecute' → logprob: -1.386541724205017
    3. 'écution' → logprob: -3.2615418434143066
    4. 'ec' → logprob: -4.136541843414307
    5. 'ecution' → logprob: -5.386541843414307
    6. 'écut' → logprob: -5.511541843414307
    7. 'ecut' → logprob: -5.761541843414307
    8. 'e' → logprob: -6.136541843414307
    9. 'é' → logprob: -6.511541843414307
    10. 'ecu' → logprob: -8.261541366577148

Token 266: ' l' (ID: 305)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9490649700164795
    2. ' x' → logprob: -1.0740649700164795
    3. 'x' → logprob: -1.3240649700164795
    4. '   ' → logprob: -6.449065208435059
    5. 'self' → logprob: -6.949065208435059
    6. ' self' → logprob: -7.199065208435059
    7. 'while' → logprob: -7.324065208435059
    8. ' while' → logprob: -7.824065208435059
    9. 'n' → logprob: -8.074065208435059
    10. 'result' → logprob: -9.199065208435059

Token 267: ''' (ID: 6)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44832685589790344
    2. '   ' → logprob: -1.448326826095581
    3. 'e' → logprob: -2.698326826095581
    4. ' iterative' → logprob: -3.698326826095581
    5. ' while' → logprob: -4.44832706451416
    6. 'iter' → logprob: -5.57332706451416
    7. ' iter' → logprob: -6.19832706451416
    8. 'approx' → logprob: -6.32332706451416
    9. 'while' → logprob: -6.32332706451416
    10. ' self' → logprob: -6.57332706451416

Token 268: 'alg' (ID: 15258)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7818971276283264
    2. 'approx' → logprob: -0.9068971276283264
    3. 'iteration' → logprob: -2.5318970680236816
    4. ' approximation' → logprob: -4.031897068023682
    5. 'it' → logprob: -4.281897068023682
    6. '       ' → logprob: -4.531897068023682
    7. 'appro' → logprob: -5.406897068023682
    8. 'initial' → logprob: -6.156897068023682
    9. ' approxim' → logprob: -6.406897068023682
    10. 'iter' → logprob: -6.781897068023682

Token 269: 'orith' (ID: 9996)
  Prédit: 'orith'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orith' → logprob: -0.0055536627769470215
    2. 'orithm' → logprob: -6.005553722381592
    3. 'or' → logprob: -6.255553722381592
    4. 'orit' → logprob: -7.255553722381592
    5. 'o' → logprob: -7.880553722381592
    6. 'orique' → logprob: -11.005553245544434
    7. '
' → logprob: -11.880553245544434
    8. '#' → logprob: -12.005553245544434
    9. '   ' → logprob: -12.005553245544434
    10. '```' → logprob: -12.130553245544434

Token 270: 'me' (ID: 1047)
  Prédit: 'me'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.0005088301841169596
    2. 'ime' → logprob: -8.000509262084961
    3. 'e' → logprob: -9.375509262084961
    4. 'm' → logprob: -9.625509262084961
    5. 'isme' → logprob: -11.250509262084961
    6. '   ' → logprob: -13.250509262084961
    7. 'mes' → logprob: -13.375509262084961
    8. 'mie' → logprob: -13.625509262084961
    9. 't' → logprob: -14.250509262084961
    10. 'hme' → logprob: -14.250509262084961

Token 271: ' d' (ID: 272)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031918513122946024
    2. 'd' → logprob: -6.628191947937012
    3. ' d' → logprob: -7.378191947937012
    4. ' de' → logprob: -7.378191947937012
    5. '   ' → logprob: -7.878191947937012
    6. 'de' → logprob: -10.128191947937012
    7. ' complet' → logprob: -10.503191947937012
    8. ' iterative' → logprob: -10.753191947937012
    9. '        
' → logprob: -10.878191947937012
    10. 'n' → logprob: -10.878191947937012

Token 272: ''' (ID: 6)
  Prédit: 'approx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'approx' → logprob: -0.05109052732586861
    2. ''' → logprob: -3.1760904788970947
    3. 'it' → logprob: -5.676090717315674
    4. 'iteration' → logprob: -5.926090717315674
    5. ' approximation' → logprob: -7.176090717315674
    6. ''améli' → logprob: -7.926090717315674
    7. 'a' → logprob: -9.176090240478516
    8. 'im' → logprob: -9.301090240478516
    9. ''appro' → logprob: -9.551090240478516
    10. 'e' → logprob: -9.676090240478516

Token 273: 'approx' (ID: 76945)
  Prédit: 'approx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'approx' → logprob: -0.00012154294381616637
    2. 'it' → logprob: -9.250121116638184
    3. 'appro' → logprob: -11.375121116638184
    4. ' approximation' → logprob: -11.875121116638184
    5. ' approx' → logprob: -12.875121116638184
    6. 'iteration' → logprob: -13.125121116638184
    7. 'apro' → logprob: -14.625121116638184
    8. '
' → logprob: -14.750121116638184
    9. 'approximately' → logprob: -14.875121116638184
    10. ''' → logprob: -15.000121116638184

Token 274: 'imation' (ID: 7922)
  Prédit: 'imation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imation' → logprob: -0.00020985817536711693
    2. 'im' → logprob: -8.50020980834961
    3. 'imate' → logprob: -12.87520980834961
    4. 'IMATION' → logprob: -12.87520980834961
    5. 'imax' → logprob: -14.87520980834961
    6. 'imentation' → logprob: -15.62520980834961
    7. 'imulation' → logprob: -15.75020980834961
    8. 'imination' → logprob: -15.75020980834961
    9. 'imat' → logprob: -16.50020980834961
    10. 'ima' → logprob: -16.75020980834961

Token 275: ' it' (ID: 480)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07157343626022339
    2. '
' → logprob: -2.696573495864868
    3. ',' → logprob: -7.446573257446289
    4. '        
' → logprob: -8.321573257446289
    5. ' pour' → logprob: -9.196573257446289
    6. '```' → logprob: -9.321573257446289
    7. '   ' → logprob: -9.446573257446289
    8. 'x' → logprob: -9.821573257446289
    9. ' avec' → logprob: -9.821573257446289
    10. ' jusqu' → logprob: -9.946573257446289

Token 276: 'ér' (ID: 2156)
  Prédit: 'ér'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ér' → logprob: -0.33342766761779785
    2. 'er' → logprob: -1.4584276676177979
    3. 'ération' → logprob: -3.208427667617798
    4. 'érée' → logprob: -5.458427429199219
    5. 'é' → logprob: -6.583427429199219
    6. 'érés' → logprob: -6.958427429199219
    7. 'éré' → logprob: -7.333427429199219
    8. '   ' → logprob: -7.458427429199219
    9. 'érations' → logprob: -7.708427429199219
    10. 'érit' → logprob: -8.083427429199219

Token 277: 'ative' (ID: 1799)
  Prédit: 'atif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atif' → logprob: -0.8669446110725403
    2. 'ér' → logprob: -0.9919446110725403
    3. 'ative' → logprob: -2.6169445514678955
    4. 'er' → logprob: -2.8669445514678955
    5. 'ativement' → logprob: -2.8669445514678955
    6. '   ' → logprob: -5.116944789886475
    7. 'ération' → logprob: -5.241944789886475
    8. 'ation' → logprob: -5.741944789886475
    9. 'r' → logprob: -6.116944789886475
    10. '       ' → logprob: -6.741944789886475

Token 278: ' jusqu' (ID: 21961)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6381919980049133
    2. '       ' → logprob: -0.7631919980049133
    3. '        
' → logprob: -5.763192176818848
    4. '<|end|>' → logprob: -7.263192176818848
    5. '  
' → logprob: -7.888192176818848
    6. ',' → logprob: -7.888192176818848
    7. '    
' → logprob: -9.013192176818848
    8. '
' → logprob: -9.263192176818848
    9. '		
' → logprob: -9.263192176818848
    10. '<|end|>' → logprob: -9.263192176818848

Token 279: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.01851453259587288
    2. 'à' → logprob: -4.018514633178711
    3. '’à' → logprob: -8.143514633178711
    4. '   ' → logprob: -10.143514633178711
    5. '       ' → logprob: -11.143514633178711
    6. ''au' → logprob: -11.643514633178711
    7. 'au' → logprob: -12.018514633178711
    8. 'a' → logprob: -12.643514633178711
    9. ''a' → logprob: -14.518514633178711
    10. ''' → logprob: -15.018514633178711

Token 280: ' convergence' (ID: 99389)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003175889723934233
    2. ' self' → logprob: -8.750317573547363
    3. 'True' → logprob: -8.750317573547363
    4. '(self' → logprob: -15.125317573547363
    5. ' True' → logprob: -15.750317573547363
    6. 'ce' → logprob: -16.50031852722168
    7. 'la' → logprob: -16.62531852722168
    8. 'se' → logprob: -17.62531852722168
    9. 'con' → logprob: -18.12531852722168
    10. '	self' → logprob: -18.25031852722168

Token 281: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5839210748672485
    2. '       ' → logprob: -0.8339210748672485
    3. '<|end|>' → logprob: -6.583920955657959
    4. '        
' → logprob: -6.833920955657959
    5. '```' → logprob: -6.958920955657959
    6. ',' → logprob: -7.083920955657959
    7. '<|end|>' → logprob: -7.208920955657959
    8. '  
' → logprob: -7.333920955657959
    9. '   ' → logprob: -7.458920955657959
    10. ':' → logprob: -7.958920955657959

Token 282: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012896781787276268
    2. '
' → logprob: -4.63789701461792
    3. 'x' → logprob: -6.63789701461792
    4. ' x' → logprob: -7.26289701461792
    5. 'n' → logprob: -8.012896537780762
    6. '```' → logprob: -8.137896537780762
    7. '        
' → logprob: -8.512896537780762
    8. '   ' → logprob: -8.762896537780762
    9. '  
' → logprob: -10.637896537780762
    10. '	' → logprob: -10.887896537780762

Token 283: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09705940634012222
    2. 'x' → logprob: -2.472059488296509
    3. ' x' → logprob: -4.97205924987793
    4. '   ' → logprob: -8.22205924987793
    5. 'current' → logprob: -8.22205924987793
    6. '```' → logprob: -8.59705924987793
    7. 'while' → logprob: -8.72205924987793
    8. ' current' → logprob: -9.72205924987793
    9. ' while' → logprob: -9.72205924987793
    10. '
' → logprob: -10.22205924987793

Token 284: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10090416669845581
    2. 'x' → logprob: -2.6009042263031006
    3. ' x' → logprob: -4.3509039878845215
    4. ' while' → logprob: -5.3509039878845215
    5. 'while' → logprob: -5.8509039878845215
    6. '   ' → logprob: -7.8509039878845215
    7. '```' → logprob: -8.22590446472168
    8. 'current' → logprob: -8.22590446472168
    9. ' current' → logprob: -8.47590446472168
    10. 'result' → logprob: -10.72590446472168

Token 285: ' iteration' (ID: 43155)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.20410418510437012
    2. 'x' → logprob: -1.7041041851043701
    3. 'current' → logprob: -6.579104423522949
    4. '       ' → logprob: -7.454104423522949
    5. ' while' → logprob: -7.829104423522949
    6. 'prev' → logprob: -8.57910442352295
    7. '   ' → logprob: -9.82910442352295
    8. 'iteration' (adapté à ' iteration') → logprob: -10.32910442352295
    9. 'xn' → logprob: -11.95410442352295
    10. 'previous' → logprob: -11.95410442352295

Token 286: '_limit' (ID: 34361)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07615604996681213
    2. '_x' → logprob: -3.3261561393737793
    3. '=' → logprob: -4.201156139373779
    4. '_value' → logprob: -5.076156139373779
    5. '_result' → logprob: -5.076156139373779
    6. 'al' → logprob: -6.076156139373779
    7. 's' → logprob: -6.326156139373779
    8. 'x' → logprob: -6.701156139373779
    9. '_count' → logprob: -6.701156139373779
    10. '   ' → logprob: -6.951156139373779

Token 287: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759425163269043
    2. '=' → logprob: -0.8259425163269043
    3. ':' → logprob: -13.325942993164062
    4. '   ' → logprob: -14.200942993164062
    5. ',' → logprob: -14.825942993164062
    6. ' ' → logprob: -15.950942993164062
    7. ' ' → logprob: -16.825942993164062
    8. '  ' → logprob: -17.075942993164062
    9. '=int' → logprob: -17.325942993164062
    10. '.' → logprob: -17.825942993164062

Token 288: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -4.127333340875339e-06
    2. '500' → logprob: -13.125003814697266
    3. ' ' → logprob: -13.875003814697266
    4. '50' → logprob: -14.125003814697266
    5. '200' → logprob: -15.500003814697266
    6. '10' → logprob: -15.500003814697266
    7. 'self' → logprob: -17.250003814697266
    8. 'int' → logprob: -17.625003814697266
    9. '300' → logprob: -17.875003814697266
    10. '20' → logprob: -17.875003814697266

Token 289: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -1.6240566083070007e-06
    2. '10' → logprob: -13.625001907348633
    3. '500' → logprob: -15.000001907348633
    4. '1' → logprob: -17.375001907348633
    5. ' ' → logprob: -17.375001907348633
    6. '50' → logprob: -17.375001907348633
    7. '200' → logprob: -17.750001907348633
    8. 'int' → logprob: -18.625001907348633
    9. '１００' → logprob: -20.500001907348633
    10. '20' → logprob: -20.625001907348633

Token 290: '0' (ID: 15)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0009712525061331689
    2. '0' → logprob: -7.00097131729126
    3. '
' → logprob: -10.875970840454102
    4. '        
' → logprob: -11.625970840454102
    5. '       ' → logprob: -11.875970840454102
    6. '  
' → logprob: -11.875970840454102
    7. '

' → logprob: -12.125970840454102
    8. '000' → logprob: -12.250970840454102
    9. 'while' → logprob: -13.375970840454102
    10. ' 
' → logprob: -13.875970840454102

Token 291: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0036937783006578684
    2. '       ' → logprob: -5.753693580627441
    3. '<|end|>' → logprob: -7.753693580627441
    4. '<|end|>' → logprob: -10.628693580627441
    5. '        
' → logprob: -10.753693580627441
    6. '
' → logprob: -11.378693580627441
    7. 'while' → logprob: -11.753693580627441
    8. ',' → logprob: -12.753693580627441
    9. '

' → logprob: -13.003693580627441
    10. ' for' → logprob: -13.003693580627441

Token 292: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -2.8802491215174086e-05
    2. '
' → logprob: -10.750028610229492
    3. '

' → logprob: -13.250028610229492
    4. '       ' → logprob: -13.375028610229492
    5. '        
' → logprob: -13.750028610229492
    6. '  
' → logprob: -14.375028610229492
    7. '<|end|>' → logprob: -14.375028610229492
    8. 'while' → logprob: -14.625028610229492
    9. ' 
' → logprob: -15.000028610229492
    10. '0' → logprob: -15.875028610229492

Token 293: ' sécurité' (ID: 32375)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6588544845581055
    2. 'for' → logprob: -1.9088544845581055
    3. ' for' → logprob: -1.9088544845581055
    4. ' x' → logprob: -2.0338544845581055
    5. 'current' → logprob: -4.2838544845581055
    6. 'iteration' → logprob: -4.4088544845581055
    7. ' iteration' → logprob: -4.6588544845581055
    8. ' current' → logprob: -4.9088544845581055
    9. 'max' → logprob: -5.5338544845581055
    10. ' max' → logprob: -6.0338544845581055

Token 294: ' pour' (ID: 1930)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1298927366733551
    2. '       ' → logprob: -2.1298928260803223
    3. '<|end|>' → logprob: -7.004892826080322
    4. '        
' → logprob: -7.379892826080322
    5. ' for' → logprob: -7.879892826080322
    6. '  
' → logprob: -8.379892349243164
    7. '
' → logprob: -8.879892349243164
    8. 'x' → logprob: -9.004892349243164
    9. '<|end|>' → logprob: -9.254892349243164
    10. 'for' → logprob: -9.754892349243164

Token 295: ' éviter' (ID: 64013)
  Prédit: 'év'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'év' → logprob: -0.4431600272655487
    2. ' éviter' → logprob: -1.068160057067871
    3. 'prevent' → logprob: -4.943160057067871
    4. 'avoid' → logprob: -6.443160057067871
    5. 'pré' → logprob: -6.568160057067871
    6. 'ev' → logprob: -6.568160057067871
    7. ' evitar' → logprob: -6.943160057067871
    8. '’éviter' → logprob: -7.568160057067871
    9. 'é' → logprob: -8.443160057067871
    10. ' prévenir' → logprob: -8.568160057067871

Token 296: ' boucle' (ID: 174211)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.10610079765319824
    2. ' une' → logprob: -2.7311007976531982
    3. ' l' → logprob: -3.9811007976531982
    4. 'les' → logprob: -4.231101036071777
    5. 'une' → logprob: -7.106101036071777
    6. '   ' → logprob: -7.481101036071777
    7. ' des' → logprob: -7.481101036071777
    8. ' infinite' → logprob: -8.981101036071777
    9. 'l' → logprob: -9.856101036071777
    10. ' la' → logprob: -9.981101036071777

Token 297: ' infin' (ID: 93237)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4873095750808716
    2. ' infin' → logprob: -1.1123095750808716
    3. 'while' → logprob: -3.987309455871582
    4. '   ' → logprob: -3.987309455871582
    5. ' while' → logprob: -4.237309455871582
    6. ' infinite' → logprob: -5.737309455871582
    7. 'inf' → logprob: -7.487309455871582
    8. '       ' → logprob: -7.862309455871582
    9. ' infinito' → logprob: -7.862309455871582
    10. ' infinity' → logprob: -8.237309455871582

Token 298: 'ie' (ID: 396)
  Prédit: 'inie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inie' → logprob: -0.4675239324569702
    2. 'nie' → logprob: -1.4675239324569702
    3. 'orme' → logprob: -3.5925240516662598
    4. 'loop' → logprob: -3.8425240516662598
    5. 'orne' → logprob: -4.34252405166626
    6. 'ite' → logprob: -4.46752405166626
    7. 'ie' → logprob: -4.59252405166626
    8. 'nite' → logprob: -4.59252405166626
    9. 'inite' → logprob: -4.96752405166626
    10. 'ine' → logprob: -5.34252405166626

Token 299: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.005045425146818161
    2. '       ' → logprob: -5.380045413970947
    3. '<|end|>' → logprob: -8.880045890808105
    4. '        
' → logprob: -9.255045890808105
    5. '
' → logprob: -10.005045890808105
    6. 'x' → logprob: -10.630045890808105
    7. ' while' → logprob: -10.755045890808105
    8. 'while' → logprob: -11.005045890808105
    9. '  
' → logprob: -11.005045890808105
    10. '```' → logprob: -11.130045890808105

Token 300: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12785671651363373
    2. '
' → logprob: -2.377856731414795
    3. 'x' → logprob: -4.127856731414795
    4. ' x' → logprob: -5.877856731414795
    5. ' while' → logprob: -6.002856731414795
    6. 'while' → logprob: -6.252856731414795
    7. '   ' → logprob: -7.002856731414795
    8. 'current' → logprob: -7.002856731414795
    9. '        
' → logprob: -7.252856731414795
    10. '```' → logprob: -7.377856731414795

Token 301: ' for' (ID: 395)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.40952005982398987
    2. 'for' (adapté à ' for') → logprob: -1.6595200300216675
    3. 'current' → logprob: -3.159520149230957
    4. 'iteration' → logprob: -3.284520149230957
    5. '       ' → logprob: -3.534520149230957
    6. 'while' → logprob: -4.034520149230957
    7. ' for' → logprob: -4.659520149230957
    8. ' x' → logprob: -5.909520149230957
    9. 'count' → logprob: -6.034520149230957
    10. ' iteration' → logprob: -6.159520149230957

Token 302: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.011533919721841812
    2. '_' → logprob: -4.511533737182617
    3. ' i' → logprob: -7.636533737182617
    4. 'i' → logprob: -13.386533737182617
    5. ' iteration' → logprob: -13.886533737182617
    6. '_i' → logprob: -14.511533737182617
    7. '_iteration' → logprob: -15.011533737182617
    8. ' ' → logprob: -16.386533737182617
    9. ' ' → logprob: -17.511533737182617
    10. 'iteration' → logprob: -17.636533737182617

Token 303: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0024779161904007196
    2. 'in' → logprob: -6.002478122711182
    3. ' ' → logprob: -13.502477645874023
    4. 'range' → logprob: -14.627477645874023
    5. ' ' → logprob: -16.627477645874023
    6. 'n' → logprob: -16.752477645874023
    7. 'import' → logprob: -16.752477645874023
    8. 'self' → logprob: -17.002477645874023
    9. ' i' → logprob: -17.002477645874023
    10. ',' → logprob: -17.377477645874023

Token 304: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12692831456661224
    2. ' range' → logprob: -2.1269283294677734
    3. '(range' → logprob: -16.001928329467773
    4. '	range' → logprob: -16.376928329467773
    5. '   ' → logprob: -17.626928329467773
    6. ' ' → logprob: -18.251928329467773
    7. 'rang' → logprob: -19.501928329467773
    8. '    ' → logprob: -19.626928329467773
    9. '_range' → logprob: -19.751928329467773
    10. '```' → logprob: -20.001928329467773

Token 305: '(iter' (ID: 61014)
  Prédit: '(iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(iter' → logprob: -0.0001600347168277949
    2. '(' → logprob: -8.750160217285156
    3. ' (' → logprob: -14.375160217285156
    4. '(iterator' → logprob: -14.500160217285156
    5. 'iteration' → logprob: -14.875160217285156
    6. ' iteration' → logprob: -16.250160217285156
    7. '   ' → logprob: -17.125160217285156
    8. '100' → logprob: -17.750160217285156
    9. '(it' → logprob: -18.625160217285156
    10. '_iteration' → logprob: -19.125160217285156

Token 306: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.0026177512481808662
    2. 'range' → logprob: -6.752617835998535
    3. '(' → logprob: -7.377617835998535
    4. '   ' → logprob: -8.002617835998535
    5. 'ations' → logprob: -8.752617835998535
    6. ' range' → logprob: -9.752617835998535
    7. '_range' → logprob: -10.002617835998535
    8. ' ' → logprob: -10.002617835998535
    9. '       ' → logprob: -10.127617835998535
    10. '(range' → logprob: -10.252617835998535

Token 307: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.002914596116170287
    2. '(' → logprob: -6.1279144287109375
    3. 'limit' → logprob: -8.502914428710938
    4. ' ' → logprob: -8.877914428710938
    5. '100' → logprob: -9.127914428710938
    6. '   ' → logprob: -9.877914428710938
    7. 'Limit' → logprob: -10.002914428710938
    8. '_' → logprob: -10.127914428710938
    9. '(iter' → logprob: -10.252914428710938
    10. 's' → logprob: -10.377914428710938

Token 308: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.127016082406044
    2. '):' → logprob: -2.127016067504883
    3. '):
' → logprob: -9.877016067504883
    4. ' ):
' → logprob: -11.002016067504883
    5. ' ):' → logprob: -12.252016067504883
    6. ',' → logprob: -12.502016067504883
    7. '   ' → logprob: -12.502016067504883
    8. '):

' → logprob: -12.877016067504883
    9. '       ' → logprob: -13.127016067504883
    10. ':' → logprob: -13.502016067504883

Token 309: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0036096973344683647
    2. '
' → logprob: -6.003609657287598
    3. 'self' → logprob: -8.128609657287598
    4. ' self' → logprob: -8.503609657287598
    5. '            
' → logprob: -8.628609657287598
    6. ' if' → logprob: -9.503609657287598
    7. '```' → logprob: -9.503609657287598
    8. ' x' → logprob: -9.753609657287598
    9. 'x' → logprob: -10.003609657287598
    10. '<|end|>' → logprob: -10.628609657287598

Token 310: ' if' (ID: 538)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -1.0447964668273926
    2. ' next' → logprob: -1.1697964668273926
    3. ' new' → logprob: -1.5447964668273926
    4. 'new' → logprob: -2.4197964668273926
    5. 'x' → logprob: -4.294796466827393
    6. '           ' → logprob: -4.669796466827393
    7. ' x' → logprob: -5.169796466827393
    8. 'self' → logprob: -5.419796466827393
    9. ' self' → logprob: -6.169796466827393
    10. ' nxt' → logprob: -9.419795989990234

Token 311: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004078758880496025
    2. ' self' → logprob: -5.5040788650512695
    3. '           ' → logprob: -15.75407886505127
    4. '(self' → logprob: -15.75407886505127
    5. '       ' → logprob: -18.379077911376953
    6. '	self' → logprob: -19.004077911376953
    7. 'not' → logprob: -19.004077911376953
    8. '
' → logprob: -19.504077911376953
    9. '   ' → logprob: -20.129077911376953
    10. '[self' → logprob: -20.254077911376953

Token 312: '.has' (ID: 10752)
  Prédit: '.has'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.has' → logprob: -0.00010437761375214905
    2. 'has' → logprob: -9.750103950500488
    3. '.' → logprob: -11.000103950500488
    4. ' has' → logprob: -11.125103950500488
    5. ' .' → logprob: -11.250103950500488
    6. '	has' → logprob: -13.750103950500488
    7. '   ' → logprob: -14.875103950500488
    8. '.have' → logprob: -17.375104904174805
    9. '       ' → logprob: -17.500104904174805
    10. '.Has' → logprob: -17.625104904174805

Token 313: '_con' (ID: 7531)
  Prédit: '_con'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_con' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.875
    3. ')_' → logprob: -18.25
    4. '_c' → logprob: -18.5
    5. ' _' → logprob: -18.75
    6. ' conver' → logprob: -19.125
    7. '_cons' → logprob: -19.5
    8. ''_' → logprob: -19.875
    9. '_re' → logprob: -20.5
    10. 'con' → logprob: -20.5

Token 314: 'ver' (ID: 445)
  Prédit: 'ver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ver' → logprob: -0.00020497082732617855
    2. 'erged' → logprob: -8.500205039978027
    3. 'erg' → logprob: -14.500205039978027
    4. 'verd' → logprob: -15.000205039978027
    5. 'VER' → logprob: -15.875205039978027
    6. 'erved' → logprob: -16.00020408630371
    7. 've' → logprob: -16.12520408630371
    8. 'verg' → logprob: -16.12520408630371
    9. '_ver' → logprob: -17.12520408630371
    10. 'volved' → logprob: -17.25020408630371

Token 315: 'ged' (ID: 5083)
  Prédit: 'ged'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ged' → logprob: -7.707997428951785e-05
    2. 'ed' → logprob: -10.000077247619629
    3. 'erged' → logprob: -10.750077247619629
    4. 'r' → logprob: -12.875077247619629
    5. 'ved' → logprob: -12.875077247619629
    6. 'd' → logprob: -13.250077247619629
    7. 'aged' → logprob: -14.000077247619629
    8. 'g' → logprob: -14.875077247619629
    9. 'red' → logprob: -15.250077247619629
    10. 'xed' → logprob: -15.250077247619629

Token 316: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.704065213445574e-05
    2. '(' → logprob: -10.000046730041504
    3. ' (' → logprob: -13.500046730041504
    4. 'self' → logprob: -16.25004768371582
    5. ' self' → logprob: -18.12504768371582
    6. '(
' → logprob: -19.12504768371582
    7. '((' → logprob: -19.62504768371582
    8. ',self' → logprob: -19.87504768371582
    9. '	self' → logprob: -21.12504768371582
    10. '=self' → logprob: -21.12504768371582

Token 317: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.001930420519784093
    2. 'x' → logprob: -6.251930236816406
    3. '.' → logprob: -14.001930236816406
    4. ' x' → logprob: -14.251930236816406
    5. ' .' → logprob: -14.876930236816406
    6. ').' → logprob: -17.751930236816406
    7. '	x' → logprob: -18.751930236816406
    8. '.user' → logprob: -19.001930236816406
    9. ' ' → logprob: -19.501930236816406
    10. ')x' → logprob: -19.501930236816406

Token 318: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07942637801170349
    2. '):
' → logprob: -2.5794262886047363
    3. ' ):' → logprob: -7.579426288604736
    4. ' ):
' → logprob: -10.829426765441895
    5. ')' → logprob: -12.579426765441895
    6. '):
' → logprob: -13.204426765441895
    7. '):

' → logprob: -15.454426765441895
    8. ':' → logprob: -15.579426765441895
    9. '   ' → logprob: -16.829425811767578
    10. '    ' → logprob: -18.204425811767578

Token 319: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00025204161647707224
    2. '           ' → logprob: -8.375251770019531
    3. '
' → logprob: -12.125251770019531
    4. ' return' → logprob: -12.500251770019531
    5. ' break' → logprob: -12.750251770019531
    6. ' self' → logprob: -13.125251770019531
    7. '              ' → logprob: -13.625251770019531
    8. '	           ' → logprob: -13.750251770019531
    9. 'self' → logprob: -13.875251770019531
    10. 'return' → logprob: -14.375251770019531

Token 320: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07654692232608795
    2. '           ' → logprob: -3.0765469074249268
    3. '               ' → logprob: -4.326547145843506
    4. ' return' → logprob: -4.326547145843506
    5. 'break' → logprob: -6.826547145843506
    6. ' break' → logprob: -10.701546669006348
    7. '   ' → logprob: -10.826546669006348
    8. '	return' → logprob: -11.451546669006348
    9. '                   ' → logprob: -12.201546669006348
    10. '       ' → logprob: -13.076546669006348

Token 321: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01416350994259119
    2. ' self' → logprob: -4.264163494110107
    3. '(self' → logprob: -18.139163970947266
    4. '	self' → logprob: -18.389163970947266
    5. '           ' → logprob: -18.764163970947266
    6. '   ' → logprob: -18.889163970947266
    7. '       ' → logprob: -19.764163970947266
    8. 'Self' → logprob: -20.139163970947266
    9. 'elf' → logprob: -20.889163970947266
    10. ' ' → logprob: -20.889163970947266

Token 322: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0005649457452818751
    2. 'x' → logprob: -7.875565052032471
    3. '.' → logprob: -8.625564575195312
    4. ' .' → logprob: -12.625564575195312
    5. ' x' → logprob: -13.125564575195312
    6. ' ' → logprob: -17.125564575195312
    7. '._' → logprob: -17.625564575195312
    8. '().' → logprob: -17.875564575195312
    9. '<|end|>' → logprob: -18.125564575195312
    10. ').' → logprob: -18.250564575195312

Token 323: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0028278196696192026
    2. '
' → logprob: -5.8778276443481445
    3. '            
' → logprob: -11.377827644348145
    4. 'self' → logprob: -11.877827644348145
    5. '
' → logprob: -13.127827644348145
    6. '       ' → logprob: -14.127827644348145
    7. ' self' → logprob: -14.502827644348145
    8. '    
' → logprob: -14.877827644348145
    9. 'x' → logprob: -15.502827644348145
    10. '          ' → logprob: -15.627827644348145

Token 324: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.215330409351736e-05
    2. 'self' → logprob: -10.375041961669922
    3. '       ' → logprob: -11.875041961669922
    4. ' self' → logprob: -13.500041961669922
    5. '            
' → logprob: -13.625041961669922
    6. '          ' → logprob: -14.875041961669922
    7. '               ' → logprob: -15.250041961669922
    8. '	       ' → logprob: -15.375041961669922
    9. 'x' → logprob: -15.750041961669922
    10. '
' → logprob: -16.000041961669922

Token 325: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.2258269190788269
    2. '           ' → logprob: -1.7258269786834717
    3. ' self' → logprob: -3.7258269786834717
    4. '       ' → logprob: -11.60082721710205
    5. '   ' → logprob: -13.10082721710205
    6. 'else' → logprob: -13.10082721710205
    7. '          ' → logprob: -13.22582721710205
    8. '```' → logprob: -13.22582721710205
    9. '               ' → logprob: -13.35082721710205
    10. '	self' → logprob: -13.47582721710205

Token 326: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0047918036580085754
    2. '.' → logprob: -5.379791736602783
    3. 'x' → logprob: -8.754792213439941
    4. '=' → logprob: -12.129792213439941
    5. ' .' → logprob: -12.254792213439941
    6. ' =' → logprob: -13.129792213439941
    7. '.=' → logprob: -14.254792213439941
    8. '```' → logprob: -14.754792213439941
    9. ').' → logprob: -16.504791259765625
    10. '._' → logprob: -16.504791259765625

Token 327: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804149478673935
    2. ' =' → logprob: -3.288041591644287
    3. '.=' → logprob: -17.413042068481445
    4. '＝' → logprob: -18.663042068481445
    5. ' ' → logprob: -19.913042068481445
    6. '=

' → logprob: -20.038042068481445
    7. '=self' → logprob: -21.163042068481445
    8. '*=' → logprob: -21.538042068481445
    9. '=
' → logprob: -21.913042068481445
    10. '=}' → logprob: -22.038042068481445

Token 328: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011048170737922192
    2. ' self' → logprob: -4.511048316955566
    3. '           ' → logprob: -15.886048316955566
    4. '       ' → logprob: -16.01104736328125
    5. '   ' → logprob: -16.76104736328125
    6. '(self' → logprob: -16.76104736328125
    7. '	self' → logprob: -18.51104736328125
    8. '[self' → logprob: -18.63604736328125
    9. '=self' → logprob: -19.63604736328125
    10. '
' → logprob: -19.88604736328125

Token 329: '.iter' (ID: 42608)
  Prédit: '.iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.iter' → logprob: -0.0012447552289813757
    2. 'iterate' → logprob: -6.75124454498291
    3. '.' → logprob: -9.62624454498291
    4. ' .' → logprob: -11.87624454498291
    5. ' iterate' → logprob: -14.25124454498291
    6. 'Iter' → logprob: -15.12624454498291
    7. '.ap' → logprob: -16.126245498657227
    8. '.Iter' → logprob: -16.251245498657227
    9. '.iterator' → logprob: -16.376245498657227
    10. '(iter' → logprob: -16.501245498657227

Token 330: 'ate' (ID: 379)
  Prédit: 'ate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -2.2200749754119897e-06
    2. 'x' → logprob: -14.250001907348633
    3. '   ' → logprob: -14.750001907348633
    4. '```' → logprob: -15.375001907348633
    5. '(' → logprob: -15.625001907348633
    6. 'a' → logprob: -16.000001907348633
    7. 'ате' → logprob: -16.375001907348633
    8. ' ate' → logprob: -16.625001907348633
    9. '(x' → logprob: -16.750001907348633
    10. '       ' → logprob: -16.750001907348633

Token 331: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00029923528200015426
    2. '(' → logprob: -8.125299453735352
    3. 'self' → logprob: -13.375299453735352
    4. ' (' → logprob: -13.500299453735352
    5. '(
' → logprob: -15.750299453735352
    6. ',self' → logprob: -17.25029945373535
    7. ' self' → logprob: -17.87529945373535
    8. '[self' → logprob: -19.00029945373535
    9. '```' → logprob: -19.12529945373535
    10. '(

' → logprob: -19.62529945373535

Token 332: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.04862074553966522
    2. 'x' → logprob: -3.0486207008361816
    3. '.' → logprob: -10.42362117767334
    4. ')' → logprob: -13.92362117767334
    5. 'self' → logprob: -14.04862117767334
    6. ' x' → logprob: -14.17362117767334
    7. ' ' → logprob: -15.42362117767334
    8. ',x' → logprob: -15.54862117767334
    9. '(x' → logprob: -16.048620223999023
    10. ' .' → logprob: -16.048620223999023

Token 333: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00047214110963977873
    2. ')
' → logprob: -8.375472068786621
    3. '       ' → logprob: -9.250472068786621
    4. '<|end|>' → logprob: -9.375472068786621
    5. ')return' → logprob: -10.125472068786621
    6. ' )' → logprob: -11.000472068786621
    7. '<|end|>' → logprob: -13.875472068786621
    8. ')

' → logprob: -14.125472068786621
    9. ')}' → logprob: -15.250472068786621
    10. ')#' → logprob: -15.375472068786621

Token 334: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009822790510952473
    2. ' raise' → logprob: -5.259822845458984
    3. 'raise' → logprob: -5.884822845458984
    4. '<|end|>' → logprob: -6.759822845458984
    5. '
' → logprob: -7.884822845458984
    6. 'return' → logprob: -9.634822845458984
    7. '	' → logprob: -9.759822845458984
    8. '	raise' → logprob: -9.884822845458984
    9. '   ' → logprob: -10.884822845458984
    10. '```' → logprob: -11.259822845458984

Token 335: ' #' (ID: 1069)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.0023862337693572044
    2. 'return' → logprob: -6.252386093139648
    3. '       ' → logprob: -7.752386093139648
    4. ' raise' → logprob: -10.502386093139648
    5. 'raises' → logprob: -16.50238609313965
    6. 'Raise' → logprob: -16.75238609313965
    7. '	raise' → logprob: -17.00238609313965
    8. 'raising' → logprob: -17.62738609313965
    9. '   ' → logprob: -17.87738609313965
    10. '```' → logprob: -18.00238609313965

Token 336: ' Si' (ID: 7832)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.005273957271128893
    2. ' raise' → logprob: -5.255273818969727
    3. 'return' → logprob: -10.880273818969727
    4. '       ' → logprob: -11.005273818969727
    5. 'Raise' → logprob: -12.880273818969727
    6. '	raise' → logprob: -14.130273818969727
    7. '   ' → logprob: -14.880273818969727
    8. '#' → logprob: -14.880273818969727
    9. 'raising' → logprob: -15.005273818969727
    10. 'raises' → logprob: -15.130273818969727

Token 337: ' on' (ID: 402)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.5773051977157593
    2. ' not' → logprob: -0.9523051977157593
    3. 'raise' → logprob: -4.452305316925049
    4. 'auc' → logprob: -4.827305316925049
    5. '   ' → logprob: -5.077305316925049
    6. ' la' → logprob: -5.077305316925049
    7. 'la' → logprob: -5.202305316925049
    8. 'n' → logprob: -5.952305316925049
    9. 'non' → logprob: -5.952305316925049
    10. 'l' → logprob: -6.327305316925049

Token 338: ' sort' (ID: 4506)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2498684972524643
    2. ' n' → logprob: -1.7498685121536255
    3. 'raise' → logprob: -3.874868392944336
    4. 'ne' → logprob: -5.124868392944336
    5. 'a' → logprob: -5.249868392944336
    6. 'not' → logprob: -5.874868392944336
    7. ' atteint' → logprob: -5.874868392944336
    8. '   ' → logprob: -6.499868392944336
    9. ' ne' → logprob: -6.874868392944336
    10. '!' → logprob: -6.874868392944336

Token 339: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.22476215660572052
    2. 'de' → logprob: -1.849762201309204
    3. ' du' → logprob: -3.849762201309204
    4. 'du' → logprob: -3.849762201309204
    5. 'sans' → logprob: -7.099761962890625
    6. ' sans' → logprob: -8.224761962890625
    7. '   ' → logprob: -8.974761962890625
    8. 'del' → logprob: -9.599761962890625
    9. ' ' → logprob: -10.349761962890625
    10. 'raise' → logprob: -10.849761962890625

Token 340: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.006138649303466082
    2. ' la' → logprob: -5.131138801574707
    3. 'bou' → logprob: -9.381138801574707
    4. ' boucle' → logprob: -9.881138801574707
    5. 'for' → logprob: -10.006138801574707
    6. 'b' → logprob: -11.381138801574707
    7. '```' → logprob: -12.506138801574707
    8. 'l' → logprob: -12.631138801574707
    9. '   ' → logprob: -13.381138801574707
    10. 'the' → logprob: -13.881138801574707

Token 341: ' boucle' (ID: 174211)
  Prédit: 'bou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bou' → logprob: -0.003961686044931412
    2. ' boucle' → logprob: -5.753961563110352
    3. 'loop' → logprob: -8.003961563110352
    4. 'b' → logprob: -8.503961563110352
    5. 'fonction' → logprob: -9.003961563110352
    6. 'for' → logprob: -9.503961563110352
    7. '   ' → logprob: -10.878961563110352
    8. ' ' → logprob: -11.628961563110352
    9. '```' → logprob: -12.253961563110352
    10. '
' → logprob: -12.503961563110352

Token 342: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8365272879600525
    2. 'raise' → logprob: -0.8365272879600525
    3. '       ' → logprob: -2.0865273475646973
    4. ' raise' → logprob: -4.961527347564697
    5. 'raises' → logprob: -7.711527347564697
    6. 'sans' → logprob: -7.711527347564697
    7. ':' → logprob: -8.461526870727539
    8. ' sans' → logprob: -8.461526870727539
    9. ' without' → logprob: -8.586526870727539
    10. '   ' → logprob: -8.586526870727539

Token 343: ' on' (ID: 402)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.02685263380408287
    2. ' raise' → logprob: -3.776852607727051
    3. '       ' → logprob: -5.651852607727051
    4. '           ' → logprob: -11.15185260772705
    5. 'raises' → logprob: -11.15185260772705
    6. '#' → logprob: -11.27685260772705
    7. '   ' → logprob: -11.27685260772705
    8. 'return' → logprob: -11.40185260772705
    9. '	raise' → logprob: -11.40185260772705
    10. 'raising' → logprob: -12.65185260772705

Token 344: ' retourne' (ID: 178818)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.018368016928434372
    2. ' raise' → logprob: -4.393368244171143
    3. '       ' → logprob: -5.393368244171143
    4. 'raises' → logprob: -7.018368244171143
    5. '	raise' → logprob: -9.018367767333984
    6. '           ' → logprob: -9.518367767333984
    7. '        ' → logprob: -9.893367767333984
    8. '   ' → logprob: -10.518367767333984
    9. ' raises' → logprob: -10.643367767333984
    10. '.raise' → logprob: -10.893367767333984

Token 345: ' la' (ID: 557)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011186653282493353
    2. 'None' → logprob: -7.0011186599731445
    3. ' self' → logprob: -8.501118659973145
    4. ' None' → logprob: -12.876118659973145
    5. '   ' → logprob: -14.626118659973145
    6. 'la' → logprob: -15.126118659973145
    7. 'le' → logprob: -15.251118659973145
    8. '	self' → logprob: -15.626118659973145
    9. '       ' → logprob: -16.87611961364746
    10. ' ' → logprob: -17.00111961364746

Token 346: ' meilleure' (ID: 52387)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0005965200834907591
    2. 'self' → logprob: -8.375596046447754
    3. 'der' → logprob: -8.750596046447754
    4. 'dern' → logprob: -9.500596046447754
    5. 'val' → logprob: -10.000596046447754
    6. '.x' → logprob: -10.500596046447754
    7. 'last' → logprob: -10.875596046447754
    8. ' dernière' → logprob: -10.875596046447754
    9. ' x' → logprob: -11.625596046447754
    10. '       ' → logprob: -12.750596046447754

Token 347: ' approximation' (ID: 112838)
  Prédit: ' approximation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' approximation' → logprob: -0.1275612711906433
    2. 'approx' → logprob: -2.127561330795288
    3. ' approximate' → logprob: -8.252561569213867
    4. ' approxim' → logprob: -8.627561569213867
    5. ' approx' → logprob: -9.127561569213867
    6. ' estimation' → logprob: -10.377561569213867
    7. 'appro' → logprob: -11.127561569213867
    8. '   ' → logprob: -11.502561569213867
    9. 'est' → logprob: -11.627561569213867
    10. ' self' → logprob: -11.752561569213867

Token 348: ' trouv' (ID: 40254)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6698945760726929
    2. 'return' → logprob: -0.9198945760726929
    3. ' return' → logprob: -2.4198946952819824
    4. 'self' → logprob: -7.419894695281982
    5. ' self' → logprob: -9.044894218444824
    6. ':return' → logprob: -11.919894218444824
    7. '   ' → logprob: -12.044894218444824
    8. ',' → logprob: -12.294894218444824
    9. '```' → logprob: -12.419894218444824
    10. '(self' → logprob: -13.419894218444824

Token 349: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -9.849109119386412e-06
    2. 'é' → logprob: -12.250009536743164
    3. 'ee' → logprob: -12.250009536743164
    4. 'rée' → logprob: -15.375009536743164
    5. 'née' → logprob: -17.750009536743164
    6. 'e' → logprob: -18.000009536743164
    7. 'ue' → logprob: -18.250009536743164
    8. 'è' → logprob: -18.750009536743164
    9. 'É' → logprob: -18.750009536743164
    10. 'lée' → logprob: -19.250009536743164

Token 350: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.776483416557312
    2. 'return' → logprob: -0.776483416557312
    3. ' return' → logprob: -2.5264835357666016
    4. ':return' → logprob: -12.151483535766602
    5. '   ' → logprob: -12.526483535766602
    6. 'self' → logprob: -13.151483535766602
    7. ',' → logprob: -13.151483535766602
    8. '```' → logprob: -13.276483535766602
    9. '	return' → logprob: -13.526483535766602
    10. '{return' → logprob: -13.776483535766602

Token 351: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7123633623123169
    2. 'return' → logprob: -0.7123633623123169
    3. ' return' → logprob: -3.9623632431030273
    4. '   ' → logprob: -11.212363243103027
    5. '	return' → logprob: -14.087363243103027
    6. ':return' → logprob: -15.837363243103027
    7. '{return' → logprob: -16.212364196777344
    8. '```' → logprob: -16.462364196777344
    9. '	' → logprob: -16.712364196777344
    10. '           ' → logprob: -17.962364196777344

Token 352: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0065453206188976765
    2. ' return' → logprob: -5.506545543670654
    3. '       ' → logprob: -6.006545543670654
    4. '	return' → logprob: -14.256545066833496
    5. '   ' → logprob: -14.381545066833496
    6. '{return' → logprob: -16.631546020507812
    7. ':return' → logprob: -18.131546020507812
    8. '	' → logprob: -18.381546020507812
    9. '```' → logprob: -18.381546020507812
    10. 'eturn' → logprob: -19.131546020507812

Token 353: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01814994215965271
    2. ' self' → logprob: -4.0181498527526855
    3. '	self' → logprob: -17.768150329589844
    4. '   ' → logprob: -17.768150329589844
    5. '       ' → logprob: -18.643150329589844
    6. ' ' → logprob: -18.768150329589844
    7. ' ' → logprob: -19.018150329589844
    8. '(self' → logprob: -19.393150329589844
    9. '0' → logprob: -21.268150329589844
    10. 'Self' → logprob: -21.643150329589844

Token 354: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -1.8670179997570813e-05
    2. '.' → logprob: -11.125019073486328
    3. ' .' → logprob: -13.125019073486328
    4. 'x' → logprob: -13.250019073486328
    5. '```' → logprob: -17.875019073486328
    6. ').' → logprob: -18.375019073486328
    7. ' x' → logprob: -18.500019073486328
    8. '.s' → logprob: -19.750019073486328
    9. '().' → logprob: -19.750019073486328
    10. '`.' → logprob: -19.750019073486328

Token 355: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 356: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.14167703688144684
    2. '<|end|>' → logprob: -2.766677141189575
    3. '
' → logprob: -3.641677141189575
    4. 'c' → logprob: -3.891677141189575
    5. ' class' → logprob: -4.891676902770996
    6. '```' → logprob: -5.016676902770996
    7. '#' → logprob: -5.766676902770996
    8. ' 
' → logprob: -6.641676902770996
    9. '[' → logprob: -7.141676902770996
    10. 'n' → logprob: -7.266676902770996

Token 357: ' Cube' (ID: 76129)
  Prédit: ' Square'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Square' → logprob: -0.5051764845848083
    2. ' Cube' → logprob: -1.3801765441894531
    3. 'Square' → logprob: -2.505176544189453
    4. 'Cube' → logprob: -3.380176544189453
    5. ' Sphere' → logprob: -3.630176544189453
    6. ' Perfect' → logprob: -7.255176544189453
    7. 'Sphere' → logprob: -7.505176544189453
    8. ' Cub' → logprob: -7.755176544189453
    9. ' Recipro' → logprob: -8.505176544189453
    10. ' S' → logprob: -8.755176544189453

Token 358: 'Root' (ID: 10834)
  Prédit: 'Root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Root' → logprob: -0.007455179933458567
    2. 'Square' → logprob: -5.632455348968506
    3. 'Newton' → logprob: -6.882455348968506
    4. 'Perfect' → logprob: -7.007455348968506
    5. 'Cube' → logprob: -7.882455348968506
    6. 'Rec' → logprob: -8.507454872131348
    7. 'Inverse' → logprob: -8.757454872131348
    8. 'Exact' → logprob: -9.507454872131348
    9. 'S' → logprob: -9.507454872131348
    10. 'Real' → logprob: -10.007454872131348

Token 359: 'Solver' (ID: 70484)
  Prédit: 'Appro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Appro' → logprob: -0.11010134965181351
    2. 'Newton' → logprob: -2.9851014614105225
    3. 'Ref' → logprob: -3.8601014614105225
    4. 'Approx' → logprob: -4.735101222991943
    5. 'Impro' → logprob: -5.360101222991943
    6. 'Exact' → logprob: -5.610101222991943
    7. 'Binary' → logprob: -5.985101222991943
    8. 'Fast' → logprob: -6.110101222991943
    9. 'Iter' → logprob: -6.360101222991943
    10. 'Calculator' → logprob: -6.485101222991943

Token 360: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18340972065925598
    2. '(C' → logprob: -1.9334096908569336
    3. ':
' → logprob: -4.058409690856934
    4. '(' → logprob: -5.308409690856934
    5. ' :' → logprob: -8.183409690856934
    6. '(Abstract' → logprob: -8.183409690856934
    7. ':

' → logprob: -10.433409690856934
    8. '   ' → logprob: -10.933409690856934
    9. '(
' → logprob: -11.308409690856934
    10. '(object' → logprob: -11.308409690856934

Token 361: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03133789077401161
    2. ' def' → logprob: -3.5313379764556885
    3. ':
' → logprob: -7.406337738037109
    4. 'def' → logprob: -7.531337738037109
    5. ':' → logprob: -8.53133773803711
    6. '    
' → logprob: -8.78133773803711
    7. '	def' → logprob: -10.28133773803711
    8. ' 
' → logprob: -11.53133773803711
    9. '):
' → logprob: -11.65633773803711
    10. '
' → logprob: -11.90633773803711

Token 362: ' """
' (ID: 7037)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.06858740001916885
    2. '   ' → logprob: -3.193587303161621
    3. 'def' → logprob: -3.693587303161621
    4. ' """
' → logprob: -8.068587303161621
    5. '    ' → logprob: -10.318587303161621
    6. ' """' → logprob: -11.193587303161621
    7. 'class' → logprob: -11.943587303161621
    8. '	def' → logprob: -12.318587303161621
    9. '"""
' (adapté à ' """
') → logprob: -12.318587303161621
    10. ':' → logprob: -13.568587303161621

Token 363: '   ' (ID: 271)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.03375830501317978
    2. 'def' → logprob: -3.9087584018707275
    3. '   ' → logprob: -4.408758163452148
    4. ' """
' → logprob: -7.033758163452148
    5. 'class' → logprob: -10.533758163452148
    6. '"""
' → logprob: -10.908758163452148
    7. '    ' → logprob: -11.283758163452148
    8. ' ' → logprob: -11.908758163452148
    9. ' """' → logprob: -11.908758163452148
    10. '  ' → logprob: -13.408758163452148

Token 364: ' Gestion' (ID: 109866)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.3008527159690857
    2. 'def' → logprob: -1.4258527755737305
    3. 'class' → logprob: -4.1758527755737305
    4. '   ' → logprob: -6.1758527755737305
    5. ' """
' → logprob: -7.1758527755737305
    6. '"""
' → logprob: -7.3008527755737305
    7. ' class' → logprob: -8.67585277557373
    8. 'Une' → logprob: -9.17585277557373
    9. '"""' → logprob: -9.55085277557373
    10. ' Une' → logprob: -10.05085277557373

Token 365: 'naire' (ID: 30464)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.47534799575805664
    2. ' de' → logprob: -1.2253479957580566
    3. '   ' → logprob: -2.6003479957580566
    4. ' complète' → logprob: -5.100347995758057
    5. 'de' → logprob: -6.350347995758057
    6. 'naire' → logprob: -6.850347995758057
    7. 'des' → logprob: -7.600347995758057
    8. ' du' → logprob: -7.850347995758057
    9. ' d' → logprob: -8.350347518920898
    10. '    ' → logprob: -8.975347518920898

Token 366: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.21245646476745605
    2. ' des' → logprob: -1.712456464767456
    3. ' pour' → logprob: -5.587456703186035
    4. ' for' → logprob: -6.087456703186035
    5. ' d' → logprob: -6.212456703186035
    6. 'de' → logprob: -6.462456703186035
    7. '<|end|>' → logprob: -8.212456703186035
    8. '   ' → logprob: -8.462456703186035
    9. ' of' → logprob: -8.587456703186035
    10. 'des' → logprob: -8.712456703186035

Token 367: ''ex' (ID: 23472)
  Prédit: ''ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ex' → logprob: -1.487032175064087
    2. ''' → logprob: -1.612032175064087
    3. ''une' → logprob: -1.612032175064087
    4. 'e' → logprob: -1.987032175064087
    5. ''appro' → logprob: -1.987032175064087
    6. ''utilisation' → logprob: -3.737032175064087
    7. ''application' → logprob: -4.237031936645508
    8. ''ap' → logprob: -4.487031936645508
    9. 'approx' → logprob: -4.487031936645508
    10. 'a' → logprob: -4.862031936645508

Token 368: 'écution' (ID: 122423)
  Prédit: 'ceptions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ceptions' → logprob: -0.10307808965444565
    2. 'écution' → logprob: -3.1030781269073486
    3. 'ception' → logprob: -3.2280781269073486
    4. 'p' → logprob: -5.1030778884887695
    5. 'ecution' → logprob: -5.9780778884887695
    6. 'em' → logprob: -6.6030778884887695
    7. 'éc' → logprob: -7.1030778884887695
    8. 'port' → logprob: -8.10307788848877
    9. 't' → logprob: -8.35307788848877
    10. 'act' → logprob: -8.47807788848877

Token 369: ' pour' (ID: 1930)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.05420013144612312
    2. ' pour' → logprob: -3.4292001724243164
    3. ' for' → logprob: -5.304200172424316
    4. 'de' → logprob: -5.304200172424316
    5. ' des' → logprob: -5.554200172424316
    6. ' du' → logprob: -5.929200172424316
    7. ' et' → logprob: -6.804200172424316
    8. ',' → logprob: -7.804200172424316
    9. ' d' → logprob: -8.054200172424316
    10. '{
' → logprob: -8.179200172424316

Token 370: ' plusieurs' (ID: 20875)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.0543452501296997
    2. ' Cube' → logprob: -1.0543452501296997
    3. 'Cube' → logprob: -2.05434513092041
    4. ' la' → logprob: -2.42934513092041
    5. 'l' → logprob: -2.92934513092041
    6. ' approxim' → logprob: -4.92934513092041
    7. 'la' → logprob: -5.05434513092041
    8. ' les' → logprob: -5.55434513092041
    9. ' résoudre' → logprob: -6.05434513092041
    10. ' une' → logprob: -6.05434513092041

Token 371: ' données' (ID: 30580)
  Prédit: 'appro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'appro' → logprob: -0.5220866203308105
    2. 'Cube' → logprob: -1.5220866203308105
    3. ' approxim' → logprob: -2.6470866203308105
    4. ' Cube' → logprob: -3.0220866203308105
    5. 'approx' → logprob: -3.7720866203308105
    6. ' appro' → logprob: -5.1470866203308105
    7. ' méthodes' → logprob: -5.1470866203308105
    8. 'instances' → logprob: -5.3970866203308105
    9. ' instances' → logprob: -5.5220866203308105
    10. ' valeurs' → logprob: -5.8970866203308105

Token 372: ' et' (ID: 859)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6922014951705933
    2. '.' → logprob: -1.8172014951705933
    3. ',' → logprob: -2.442201614379883
    4. 'd' → logprob: -2.567201614379883
    5. ' ,' → logprob: -3.442201614379883
    6. ' de' → logprob: -3.942201614379883
    7. ' et' → logprob: -4.442201614379883
    8. ' en' → logprob: -4.692201614379883
    9. 'import' → logprob: -4.692201614379883
    10. ' cubes' → logprob: -4.692201614379883

Token 373: ' affich' (ID: 90179)
  Prédit: ' méthodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' méthodes' → logprob: -0.5605545043945312
    2. 'mé' → logprob: -1.8105545043945312
    3. ' leur' → logprob: -2.9355545043945312
    4. ' leurs' → logprob: -3.6855545043945312
    5. 'leurs' → logprob: -4.060554504394531
    6. 'rés' → logprob: -4.310554504394531
    7. 'appro' → logprob: -4.310554504394531
    8. ' tests' → logprob: -4.310554504394531
    9. ' résultats' → logprob: -4.310554504394531
    10. 'l' → logprob: -4.685554504394531

Token 374: 'age' (ID: 477)
  Prédit: 'age'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -2.2200749754119897e-06
    2. 'ages' → logprob: -13.250001907348633
    3. ' age' → logprob: -15.375001907348633
    4. '   ' → logprob: -17.125001907348633
    5. 'er' → logprob: -17.875001907348633
    6. 'arge' → logprob: -18.000001907348633
    7. 'ation' → logprob: -18.250001907348633
    8. 'hage' → logprob: -18.500001907348633
    9. 'e' → logprob: -18.750001907348633
    10. '#' → logprob: -18.750001907348633

Token 375: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.007803934160619974
    2. '.' → logprob: -5.382803916931152
    3. 'des' → logprob: -6.382803916931152
    4. ' de' → logprob: -7.382803916931152
    5. '   ' → logprob: -8.257803916931152
    6. 'de' → logprob: -8.632803916931152
    7. ' du' → logprob: -8.882803916931152
    8. '<|end|>' → logprob: -9.507803916931152
    9. ',' → logprob: -10.257803916931152
    10. '```' → logprob: -10.632803916931152

Token 376: ' résultats' (ID: 48985)
  Prédit: 'rés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rés' → logprob: -0.12048140913248062
    2. ' résultats' → logprob: -2.370481491088867
    3. 'result' → logprob: -4.245481491088867
    4. 'r' → logprob: -5.995481491088867
    5. 'solutions' → logprob: -5.995481491088867
    6. 'results' → logprob: -8.495481491088867
    7. 'appro' → logprob: -8.745481491088867
    8. ' rés' → logprob: -9.370481491088867
    9. ' solutions' → logprob: -9.495481491088867
    10. 'ré' → logprob: -10.620481491088867

Token 377: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5582901239395142
    2. '
' → logprob: -1.3082901239395142
    3. '.' → logprob: -2.0582900047302246
    4. ',' → logprob: -5.308290004730225
    5. '"""' → logprob: -5.433290004730225
    6. 'import' → logprob: -5.558290004730225
    7. '```' → logprob: -5.683290004730225
    8. '.
' → logprob: -5.683290004730225
    9. ' de' → logprob: -6.183290004730225
    10. ':' → logprob: -6.558290004730225

Token 378: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3758290112018585
    2. '.' → logprob: -1.5008289813995361
    3. '
' → logprob: -2.875828981399536
    4. ',' → logprob: -4.250829219818115
    5. ':' → logprob: -4.750829219818115
    6. '<|end|>' → logprob: -6.000829219818115
    7. '```' → logprob: -6.000829219818115
    8. ')' → logprob: -6.250829219818115
    9. '}' → logprob: -7.000829219818115
    10. '.
' → logprob: -7.250829219818115

Token 379: ' """

' (ID: 28800)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5262860059738159
    2. '"""' → logprob: -1.651286005973816
    3. '.' → logprob: -1.901286005973816
    4. '
' → logprob: -3.2762861251831055
    5. ',' → logprob: -4.7762861251831055
    6. '```' → logprob: -4.9012861251831055
    7. ')' → logprob: -5.4012861251831055
    8. ':' → logprob: -6.0262861251831055
    9. '"""
' → logprob: -6.5262861251831055
    10. '}' → logprob: -6.6512861251831055

Token 380: '   ' (ID: 271)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.31624940037727356
    2. 'def' → logprob: -1.3162493705749512
    3. '   ' → logprob: -5.816249370574951
    4. '	def' → logprob: -12.44124984741211
    5. '   ' → logprob: -15.44124984741211
    6. 'de' → logprob: -16.69124984741211
    7. ' ' → logprob: -16.69124984741211
    8. ' ' → logprob: -17.06624984741211
    9. 'import' → logprob: -17.19124984741211
    10. ' ind' → logprob: -17.81624984741211

Token 381: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00033558503491804004
    2. ' def' → logprob: -8.000335693359375
    3. '@' → logprob: -17.000335693359375
    4. '   ' → logprob: -17.875335693359375
    5. 'import' → logprob: -18.000335693359375
    6. 'de' → logprob: -18.500335693359375
    7. 'from' → logprob: -20.250335693359375
    8. '	def' → logprob: -20.250335693359375
    9. 'class' → logprob: -21.625335693359375
    10. '```' → logprob: -21.875335693359375

Token 382: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.6395228505134583
    2. '__' → logprob: -1.0145227909088135
    3. ' __' → logprob: -2.2645227909088135
    4. 'def' → logprob: -6.014523029327393
    5. '_init' → logprob: -6.139523029327393
    6. ' init' → logprob: -7.139523029327393
    7. 'iter' → logprob: -8.764522552490234
    8. 'it' → logprob: -9.264522552490234
    9. '```' → logprob: -9.389522552490234
    10. '**' → logprob: -9.639522552490234

Token 383: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -17.5
    3. 'int' → logprob: -17.75
    4. 'iter' → logprob: -18.5
    5. 'ini' → logprob: -18.875
    6. 'in' → logprob: -19.25
    7. 'innit' → logprob: -20.125
    8. 'inite' → logprob: -20.75
    9. 'i' → logprob: -20.875
    10. '
' → logprob: -20.875

Token 384: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0020146444439888
    2. '(self' → logprob: -6.377014636993408
    3. '__(
' → logprob: -8.502015113830566
    4. '__' → logprob: -9.877015113830566
    5. '_(' → logprob: -10.752015113830566
    6. 'self' → logprob: -11.377015113830566
    7. ' (' → logprob: -11.627015113830566
    8. ')(' → logprob: -11.877015113830566
    9. '```' → logprob: -13.627015113830566
    10. '(' → logprob: -13.627015113830566

Token 385: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005704291397705674
    2. ' self' → logprob: -7.500570297241211
    3. '
' → logprob: -11.750570297241211
    4. ')' → logprob: -12.000570297241211
    5. '   ' → logprob: -13.500570297241211
    6. '):
' → logprob: -14.375570297241211
    7. ')(' → logprob: -14.625570297241211
    8. '(self' → logprob: -14.750570297241211
    9. ',' → logprob: -15.750570297241211
    10. ' ' → logprob: -16.00057029724121

Token 386: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009761640802025795
    2. 'self' → logprob: -4.884761810302734
    3. '):
' → logprob: -6.509761810302734
    4. '):' → logprob: -8.134761810302734
    5. ' ,' → logprob: -8.634761810302734
    6. '   ' → logprob: -9.509761810302734
    7. ')' → logprob: -10.009761810302734
    8. ',self' → logprob: -10.509761810302734
    9. ' self' → logprob: -10.759761810302734
    10. '(self' → logprob: -11.884761810302734

Token 387: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00029744720086455345
    2. ' self' → logprob: -8.250297546386719
    3. '   ' → logprob: -10.625297546386719
    4. '       ' → logprob: -12.125297546386719
    5. '(self' → logprob: -12.625297546386719
    6. '	self' → logprob: -13.375297546386719
    7. '
' → logprob: -13.500297546386719
    8. ' ' → logprob: -16.87529754638672
    9. '):
' → logprob: -16.87529754638672
    10. ')' → logprob: -17.37529754638672

Token 388: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.018334539607167244
    2. '       ' → logprob: -4.26833438873291
    3. ' self' → logprob: -5.51833438873291
    4. '   ' → logprob: -8.89333438873291
    5. 'pass' → logprob: -12.01833438873291
    6. '
' → logprob: -12.89333438873291
    7. ' ' → logprob: -13.39333438873291
    8. '  ' → logprob: -14.14333438873291
    9. '	self' → logprob: -14.51833438873291
    10. ' pass' → logprob: -14.89333438873291

Token 389: '.results' (ID: 53203)
  Prédit: '.results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.results' → logprob: -0.8177677392959595
    2. '.data' → logprob: -1.3177677392959595
    3. '.values' → logprob: -1.5677677392959595
    4. '.' → logprob: -3.06776762008667
    5. '.inputs' → logprob: -3.81776762008667
    6. '.entries' → logprob: -5.81776762008667
    7. '.c' → logprob: -5.94276762008667
    8. '.samples' → logprob: -6.31776762008667
    9. 'results' → logprob: -6.44276762008667
    10. '.n' → logprob: -6.56776762008667

Token 390: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687849044799805
    2. '=' → logprob: -1.136878490447998
    3. '=[]' → logprob: -12.011878967285156
    4. ':' → logprob: -14.511878967285156
    5. ' ' → logprob: -14.761878967285156
    6. '   ' → logprob: -15.761878967285156
    7. '	' → logprob: -16.136878967285156
    8. '<|end|>' → logprob: -16.761878967285156
    9. '={}' → logprob: -17.011878967285156
    10. '  ' → logprob: -17.261878967285156

Token 391: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.023245826363563538
    2. '{}' → logprob: -3.7732458114624023
    3. '[]
' → logprob: -15.648245811462402
    4. ' []' → logprob: -16.52324676513672
    5. '[]}' → logprob: -17.02324676513672
    6. '[]

' → logprob: -18.14824676513672
    7. 'dict' → logprob: -18.39824676513672
    8. '[' → logprob: -19.27324676513672
    9. '[])' → logprob: -19.77324676513672
    10. '{}
' → logprob: -20.02324676513672

Token 392: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5080428123474121
    2. '   ' → logprob: -1.133042812347412
    3. '<|end|>' → logprob: -3.133042812347412
    4. '    
' → logprob: -4.008042812347412
    5. '

' → logprob: -5.258042812347412
    6. 'def' → logprob: -5.383042812347412
    7. ' def' → logprob: -6.508042812347412
    8. '<|end|>' → logprob: -7.008042812347412
    9. '  
' → logprob: -7.133042812347412
    10. ' 
' → logprob: -7.633042812347412

Token 393: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.005235648714005947
    2. ' def' → logprob: -5.25523567199707
    3. '   ' → logprob: -13.38023567199707
    4. '
' → logprob: -15.13023567199707
    5. '	def' → logprob: -16.50523567199707
    6. '    
' → logprob: -18.25523567199707
    7. '```' → logprob: -18.88023567199707
    8. ' ' → logprob: -19.50523567199707
    9. ' 
' → logprob: -20.13023567199707
    10. 'de' → logprob: -21.00523567199707

Token 394: ' process' (ID: 2273)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.6763482093811035
    2. ' run' → logprob: -1.5513482093811035
    3. 'add' → logprob: -1.9263482093811035
    4. ' solve' → logprob: -2.9263482093811035
    5. 'solve' → logprob: -3.1763482093811035
    6. 'run' → logprob: -3.3013482093811035
    7. ' approximate' → logprob: -7.4263482093811035
    8. ' process' → logprob: -7.9263482093811035
    9. 'approx' → logprob: -8.176347732543945
    10. ' compute' → logprob: -8.551347732543945

Token 395: '_input' (ID: 12507)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0014298786409199238
    2. '(' → logprob: -6.626430034637451
    3. ' (' → logprob: -9.251429557800293
    4. 'self' → logprob: -12.626429557800293
    5. '_data' → logprob: -13.751429557800293
    6. '_list' → logprob: -14.001429557800293
    7. '(data' → logprob: -14.626429557800293
    8. '(s' → logprob: -14.876429557800293
    9. '(
' → logprob: -15.126429557800293
    10. 's' → logprob: -15.251429557800293

Token 396: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00012999906903132796
    2. '(' → logprob: -9.125129699707031
    3. ' (' → logprob: -11.000129699707031
    4. 's' → logprob: -12.875129699707031
    5. '(s' → logprob: -13.500129699707031
    6. 'self' → logprob: -15.625129699707031
    7. '(data' → logprob: -16.50012969970703
    8. ' ' → logprob: -16.50012969970703
    9. '(input' → logprob: -17.50012969970703
    10. '   ' → logprob: -18.25012969970703

Token 397: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003148472751490772
    2. ' ,' → logprob: -8.125314712524414
    3. 'self' → logprob: -11.250314712524414
    4. 's' → logprob: -12.250314712524414
    5. '):' → logprob: -15.250314712524414
    6. ',input' → logprob: -15.375314712524414
    7. '   ' → logprob: -16.250314712524414
    8. ',line' → logprob: -16.250314712524414
    9. ',s' → logprob: -16.500314712524414
    10. '):
' → logprob: -16.625314712524414

Token 398: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.30029064416885376
    2. ' q' → logprob: -2.175290584564209
    3. 'self' → logprob: -2.550290584564209
    4. ' self' → logprob: -3.800290584564209
    5. 'input' → logprob: -4.300290584564209
    6. ' input' → logprob: -5.550290584564209
    7. 'line' → logprob: -5.550290584564209
    8. 'data' → logprob: -5.550290584564209
    9. 'value' → logprob: -5.550290584564209
    10. 'numbers' → logprob: -5.925290584564209

Token 399: '_values' (ID: 20393)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014698355458676815
    2. '):' → logprob: -4.264698505401611
    3. ',' → logprob: -8.139698028564453
    4. ' ):' → logprob: -9.514698028564453
    5. '):
' → logprob: -9.764698028564453
    6. ' :' → logprob: -9.889698028564453
    7. ')' → logprob: -10.514698028564453
    8. 'self' → logprob: -11.139698028564453
    9. ':int' → logprob: -11.514698028564453
    10. '   ' → logprob: -12.514698028564453

Token 400: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.575086236000061
    2. 'self' → logprob: -1.575086236000061
    3. ',' → logprob: -2.3250861167907715
    4. ':' → logprob: -2.3250861167907715
    5. '(self' → logprob: -4.0750861167907715
    6. '):
' → logprob: -4.7000861167907715
    7. ')' → logprob: -5.0750861167907715
    8. '   ' → logprob: -6.4500861167907715
    9. ' self' → logprob: -7.7000861167907715
    10. '       ' → logprob: -8.82508659362793

Token 401: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11811398714780807
    2. '       ' → logprob: -2.2431139945983887
    3. ':
' → logprob: -5.493113994598389
    4. '):
' → logprob: -7.493113994598389
    5. '):' → logprob: -7.993113994598389
    6. ',' → logprob: -8.86811351776123
    7. ' for' → logprob: -10.24311351776123
    8. ' :' → logprob: -10.24311351776123
    9. 'for' → logprob: -11.24311351776123
    10. '   ' → logprob: -11.24311351776123

Token 402: ' """
' (ID: 7037)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.13943473994731903
    2. 'for' → logprob: -2.139434814453125
    3. '       ' → logprob: -4.389434814453125
    4. '
' → logprob: -11.014434814453125
    5. '   ' → logprob: -13.139434814453125
    6. '	for' → logprob: -13.639434814453125
    7. '```' → logprob: -14.139434814453125
    8. '    ' → logprob: -15.764434814453125
    9. ' ' → logprob: -15.889434814453125
    10. ' 
' → logprob: -16.764434814453125

Token 403: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4423656165599823
    2. ' for' → logprob: -1.0673656463623047
    3. '       ' → logprob: -4.317365646362305
    4. 'appro' → logprob: -9.567365646362305
    5. ' approxim' → logprob: -9.567365646362305
    6. 'results' → logprob: -10.567365646362305
    7. 'self' → logprob: -11.067365646362305
    8. '   ' → logprob: -11.567365646362305
    9. ' cube' → logprob: -11.692365646362305
    10. 'approx' → logprob: -12.192365646362305

Token 404: ' Process' (ID: 12482)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38714319467544556
    2. ' for' → logprob: -1.1371431350708008
    3. '       ' → logprob: -8.2621431350708
    4. 'self' → logprob: -12.1371431350708
    5. 'results' → logprob: -12.5121431350708
    6. ' self' → logprob: -13.5121431350708
    7. 'result' → logprob: -14.1371431350708
    8. ' results' → logprob: -14.3871431350708
    9. '
' → logprob: -14.5121431350708
    10. '   ' → logprob: -15.3871431350708

Token 405: 'us' (ID: 385)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.2683570384979248
    2. '       ' → logprob: -1.5183570384979248
    3. ' self' → logprob: -1.8933570384979248
    4. 'ion' → logprob: -2.143357038497925
    5. '   ' → logprob: -2.268357038497925
    6. ' for' → logprob: -2.768357038497925
    7. 'for' → logprob: -3.143357038497925
    8. 'ions' → logprob: -5.268357276916504
    9. 'q' → logprob: -5.518357276916504
    10. 'def' → logprob: -6.143357276916504

Token 406: ' global' (ID: 5466)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08596550673246384
    2. 'for' → logprob: -2.710965394973755
    3. '       ' → logprob: -4.710965633392334
    4. ' pour' → logprob: -5.960965633392334
    5. '   ' → logprob: -6.585965633392334
    6. ' self' → logprob: -6.710965633392334
    7. ' des' → logprob: -7.085965633392334
    8. 'self' → logprob: -8.335965156555176
    9. '(self' → logprob: -9.085965156555176
    10. ':' → logprob: -9.335965156555176

Token 407: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02265164814889431
    2. '       ' → logprob: -4.272651672363281
    3. ' pour' → logprob: -5.397651672363281
    4. 'for' → logprob: -6.147651672363281
    5. ':' → logprob: -7.522651672363281
    6. '   ' → logprob: -7.772651672363281
    7. '        
' → logprob: -9.022651672363281
    8. ',' → logprob: -9.272651672363281
    9. ' :' → logprob: -9.272651672363281
    10. ' self' → logprob: -9.647651672363281

Token 408: ' plusieurs' (ID: 20875)
  Prédit: ' q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.7521638870239258
    2. 'self' → logprob: -1.6271638870239258
    3. 'q' → logprob: -1.7521638870239258
    4. ' self' → logprob: -1.8771638870239258
    5. 'val' → logprob: -6.377163887023926
    6. ' val' → logprob: -6.627163887023926
    7. 'value' → logprob: -7.252163887023926
    8. ' value' → logprob: -7.877163887023926
    9. 'values' → logprob: -8.252163887023926
    10. ' for' → logprob: -8.377163887023926

Token 409: ' données' (ID: 30580)
  Prédit: ' q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.43011733889579773
    2. 'q' → logprob: -1.0551173686981201
    3. ' for' → logprob: -7.305117130279541
    4. 'values' → logprob: -8.4301176071167
    5. ' values' → logprob: -8.8051176071167
    6. ' valeurs' → logprob: -8.9301176071167
    7. 'for' → logprob: -9.0551176071167
    8. '```' → logprob: -11.0551176071167
    9. '       ' → logprob: -11.4301176071167
    10. 'self' → logprob: -11.4301176071167

Token 410: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42242324352264404
    2. ':' → logprob: -1.672423243522644
    3. ' for' → logprob: -3.1724233627319336
    4. ',' → logprob: -3.2974233627319336
    5. '(self' → logprob: -3.7974233627319336
    6. ':
' → logprob: -4.047423362731934
    7. '   ' → logprob: -4.672423362731934
    8. ' (' → logprob: -4.922423362731934
    9. '
' → logprob: -5.047423362731934
    10. ' :' → logprob: -5.047423362731934

Token 411: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02576335333287716
    2. ':' → logprob: -4.275763511657715
    3. '   ' → logprob: -5.900763511657715
    4. ',' → logprob: -5.900763511657715
    5. ' for' → logprob: -6.525763511657715
    6. '
' → logprob: -7.025763511657715
    7. '        
' → logprob: -7.150763511657715
    8. ':
' → logprob: -7.400763511657715
    9. ' :' → logprob: -7.525763511657715
    10. ' (' → logprob: -7.900763511657715

Token 412: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08840100467205048
    2. ' for' → logprob: -2.7134010791778564
    3. 'for' → logprob: -4.838400840759277
    4. '
' → logprob: -4.838400840759277
    5. ':' → logprob: -6.463400840759277
    6. '        
' → logprob: -7.838400840759277
    7. '<|end|>' → logprob: -9.213400840759277
    8. '   ' → logprob: -9.338400840759277
    9. ':
' → logprob: -9.713400840759277
    10. ',' → logprob: -9.713400840759277

Token 413: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7049317955970764
    2. 'for' → logprob: -1.2049317359924316
    3. ' for' → logprob: -1.5799317359924316
    4. '   ' → logprob: -8.95493221282959
    5. '	for' → logprob: -11.45493221282959
    6. 'results' → logprob: -12.95493221282959
    7. '    ' → logprob: -13.07993221282959
    8. 'def' → logprob: -13.07993221282959
    9. '```' → logprob: -13.32993221282959
    10. 'class' → logprob: -13.45493221282959

Token 414: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.017207488417625427
    2. ' for' → logprob: -4.392207622528076
    3. '       ' → logprob: -6.017207622528076
    4. 'self' → logprob: -6.142207622528076
    5. ' self' → logprob: -9.392207145690918
    6. 'results' → logprob: -11.267207145690918
    7. 'appro' → logprob: -13.392207145690918
    8. '   ' → logprob: -14.392207145690918
    9. 'solver' → logprob: -15.017207145690918
    10. '```' → logprob: -15.017207145690918

Token 415: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.10020796209573746
    2. 'q' → logprob: -2.350208044052124
    3. '	q' → logprob: -13.975208282470703
    4. '       ' → logprob: -15.475208282470703
    5. '   ' → logprob: -16.600208282470703
    6. '           ' → logprob: -17.100208282470703
    7. ',q' → logprob: -17.725208282470703
    8. '$q' → logprob: -17.725208282470703
    9. '_q' → logprob: -17.850208282470703
    10. 'value' → logprob: -17.975208282470703

Token 416: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008622493594884872
    2. 'in' → logprob: -4.758622646331787
    3. '_in' → logprob: -12.883622169494629
    4. ' ' → logprob: -13.133622169494629
    5. '_' → logprob: -13.758622169494629
    6. '   ' → logprob: -15.133622169494629
    7. ' ' → logprob: -15.133622169494629
    8. '	in' → logprob: -15.258622169494629
    9. 's' → logprob: -15.383622169494629
    10. ',' → logprob: -15.758622169494629

Token 417: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.03804194927215576
    2. ' q' → logprob: -3.2880420684814453
    3. '   ' → logprob: -15.288042068481445
    4. '	q' → logprob: -16.038042068481445
    5. '[q' → logprob: -16.913042068481445
    6. '_q' → logprob: -17.413042068481445
    7. '$q' → logprob: -17.413042068481445
    8. 'self' → logprob: -17.788042068481445
    9. '       ' → logprob: -18.163042068481445
    10. '    ' → logprob: -18.538042068481445

Token 418: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.0009543364867568016
    2. ' in' → logprob: -7.1259541511535645
    3. '_' → logprob: -9.500954627990723
    4. 'values' → logprob: -10.500954627990723
    5. '_VALUES' → logprob: -11.125954627990723
    6. 's' → logprob: -11.250954627990723
    7. 'in' → logprob: -12.125954627990723
    8. ' ' → logprob: -12.250954627990723
    9. '   ' → logprob: -12.750954627990723
    10. '_vals' → logprob: -13.250954627990723

Token 419: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4293367862701416
    2. ':' → logprob: -1.0543367862701416
    3. '           ' → logprob: -7.8043365478515625
    4. '       ' → logprob: -9.679336547851562
    5. '):
' → logprob: -9.679336547851562
    6. ' :
' → logprob: -10.054336547851562
    7. ':
' → logprob: -10.679336547851562
    8. ',' → logprob: -11.304336547851562
    9. ' :' → logprob: -11.429336547851562
    10. ':

' → logprob: -12.429336547851562

Token 420: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00019829542725346982
    2. '       ' → logprob: -9.375198364257812
    3. ':' → logprob: -11.000198364257812
    4. '```' → logprob: -11.500198364257812
    5. ' cube' → logprob: -11.625198364257812
    6. ' try' → logprob: -11.750198364257812
    7. '
' → logprob: -11.750198364257812
    8. '            
' → logprob: -11.875198364257812
    9. '	       ' → logprob: -12.250198364257812
    10. 'try' → logprob: -12.375198364257812

Token 421: ' if' (ID: 538)
  Prédit: ' approxim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' approxim' → logprob: -0.22965337336063385
    2. '           ' → logprob: -2.2296533584594727
    3. ' try' → logprob: -2.8546533584594727
    4. 'appro' → logprob: -3.8546533584594727
    5. 'try' → logprob: -4.729653358459473
    6. ' cube' → logprob: -5.979653358459473
    7. ' if' → logprob: -5.979653358459473
    8. 'approx' → logprob: -6.604653358459473
    9. ' appro' → logprob: -6.604653358459473
    10. ' solver' → logprob: -7.354653358459473

Token 422: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.07192348688840866
    2. 'q' → logprob: -2.6969234943389893
    3. ' isinstance' → logprob: -6.69692325592041
    4. ' not' → logprob: -7.57192325592041
    5. 'not' → logprob: -8.69692325592041
    6. 'type' → logprob: -10.94692325592041
    7. '   ' → logprob: -11.19692325592041
    8. ' type' → logprob: -11.32192325592041
    9. ' ' → logprob: -12.44692325592041
    10. '       ' → logprob: -12.44692325592041

Token 423: ' ==' (ID: 951)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.6881635189056396
    2. '<=' → logprob: -1.5631635189056396
    3. ' >' → logprob: -1.9381635189056396
    4. '>' → logprob: -1.9381635189056396
    5. ' is' → logprob: -10.813163757324219
    6. ' <' → logprob: -10.938163757324219
    7. ' ' → logprob: -10.938163757324219
    8. '<' → logprob: -11.188163757324219
    9. '>=' → logprob: -12.438163757324219
    10. '==' → logprob: -12.813163757324219

Token 424: ' -' (ID: 533)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0486309714615345
    2. '0' → logprob: -3.048630952835083
    3. '1' → logprob: -11.298630714416504
    4. ' -' → logprob: -11.486130714416504
    5. '  ' → logprob: -12.486130714416504
    6. ' None' → logprob: -12.861130714416504
    7. 'None' → logprob: -12.986130714416504
    8. '   ' → logprob: -13.173630714416504
    9. '-' → logprob: -13.361130714416504
    10. '    ' → logprob: -14.173630714416504

Token 425: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -11.000024795532227
    3. '2' → logprob: -12.500024795532227
    4. '999' → logprob: -13.250024795532227
    5. '99' → logprob: -14.125024795532227
    6. '0' → logprob: -15.000024795532227
    7. '100' → logprob: -15.250024795532227
    8. '42' → logprob: -15.250024795532227
    9. '3' → logprob: -15.750024795532227
    10. '10' → logprob: -16.250024795532227

Token 426: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.11340561509132385
    2. ':' → logprob: -2.238405704498291
    3. ' :
' → logprob: -7.988405704498291
    4. '           ' → logprob: -9.238405227661133
    5. ':return' → logprob: -9.988405227661133
    6. '               ' → logprob: -9.988405227661133
    7. ' :' → logprob: -10.113405227661133
    8. ':
' → logprob: -11.738405227661133
    9. '):
' → logprob: -13.113405227661133
    10. ':

' → logprob: -13.863405227661133

Token 427: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00015681622608099133
    2. '           ' → logprob: -9.00015640258789
    3. '	           ' → logprob: -10.87515640258789
    4. '                   ' → logprob: -12.50015640258789
    5. '              ' → logprob: -13.25015640258789
    6. ':' → logprob: -13.37515640258789
    7. '<|end|>' → logprob: -13.37515640258789
    8. ' break' → logprob: -13.50015640258789
    9. '		       ' → logprob: -13.75015640258789
    10. '   ' → logprob: -14.62515640258789

Token 428: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.3526655435562134
    2. ' break' → logprob: -1.6026655435562134
    3. '               ' → logprob: -2.352665424346924
    4. '                   ' → logprob: -7.852665424346924
    5. '	break' → logprob: -8.602665901184082
    6. 'return' → logprob: -9.227665901184082
    7. '           ' → logprob: -10.727665901184082
    8. ' return' → logprob: -11.852665901184082
    9. '	           ' → logprob: -12.102665901184082
    10. '   ' → logprob: -12.852665901184082

Token 429: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004735803231596947
    2. '
' → logprob: -5.504735946655273
    3. '            
' → logprob: -7.379735946655273
    4. '               ' → logprob: -11.254735946655273
    5. '    
' → logprob: -12.379735946655273
    6. ',' → logprob: -12.504735946655273
    7. ',
' → logprob: -12.504735946655273
    8. '          ' → logprob: -13.629735946655273
    9. '  
' → logprob: -13.754735946655273
    10. '<|end|>' → logprob: -13.754735946655273

Token 430: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00031055594445206225
    2. '            
' → logprob: -8.500310897827148
    3. '
' → logprob: -9.750310897827148
    4. '               ' → logprob: -10.750310897827148
    5. '            ' → logprob: -11.750310897827148
    6. ' 
' → logprob: -12.375310897827148
    7. '    
' → logprob: -12.500310897827148
    8. '          ' → logprob: -12.875310897827148
    9. ',' → logprob: -13.125310897827148
    10. '       ' → logprob: -13.500310897827148

Token 431: ' approxim' (ID: 116685)
  Prédit: ' approxim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' approxim' → logprob: -0.3879254460334778
    2. '           ' → logprob: -1.637925386428833
    3. 'appro' → logprob: -2.512925386428833
    4. ' try' → logprob: -3.512925386428833
    5. 'try' → logprob: -5.012925624847412
    6. 'approx' → logprob: -5.887925624847412
    7. ' appro' → logprob: -6.012925624847412
    8. ' cube' → logprob: -6.762925624847412
    9. '       ' → logprob: -6.762925624847412
    10. ' approx' → logprob: -7.762925624847412

Token 432: 'ator' (ID: 1246)
  Prédit: 'ator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ator' → logprob: -0.7237080931663513
    2. 'ate' → logprob: -0.9737080931663513
    3. 'ateur' → logprob: -2.223708152770996
    4. 'ation' → logprob: -3.723708152770996
    5. 'er' → logprob: -5.723708152770996
    6. 'ations' → logprob: -7.598708152770996
    7. 'e' → logprob: -7.973708152770996
    8. 'ateurs' → logprob: -8.848708152770996
    9. 'ates' → logprob: -8.973708152770996
    10. 'ater' → logprob: -9.098708152770996

Token 433: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0021853535436093807
    2. '=' → logprob: -6.127185344696045
    3. ' ' → logprob: -16.752185821533203
    4. 'er' → logprob: -16.877185821533203
    5. ' =
' → logprob: -17.377185821533203
    6. ' ' → logprob: -17.627185821533203
    7. '   ' → logprob: -17.627185821533203
    8. '.' → logprob: -18.252185821533203
    9. '_' → logprob: -18.377185821533203
    10. 's' → logprob: -18.377185821533203

Token 434: ' Cube' (ID: 76129)
  Prédit: ' Cube'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Cube' → logprob: -0.38687223196029663
    2. 'Cube' → logprob: -1.1368722915649414
    3. ' Cub' → logprob: -13.636872291564941
    4. 'Cub' → logprob: -17.011871337890625
    5. '	C' → logprob: -18.511871337890625
    6. ' cube' → logprob: -18.511871337890625
    7. 'C' → logprob: -19.136871337890625
    8. '_cube' → logprob: -19.761871337890625
    9. ' C' → logprob: -20.261871337890625
    10. 'Cubit' → logprob: -20.636871337890625

Token 435: 'Root' (ID: 10834)
  Prédit: 'Root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Root' → logprob: -4.320199877838604e-07
    2. ' Root' → logprob: -15.125
    3. 'root' → logprob: -17.125
    4. '_root' → logprob: -17.625
    5. '.Root' → logprob: -18.75
    6. ' root' → logprob: -19.75
    7. '-root' → logprob: -20.875
    8. 'Roots' → logprob: -20.875
    9. '_ROOT' → logprob: -21.625
    10. '
' → logprob: -22.375

Token 436: 'Appro' (ID: 24507)
  Prédit: 'Appro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Appro' → logprob: -6.704273118884885e-07
    2. ' Appro' → logprob: -15.500000953674316
    3. 'Approx' → logprob: -16.0
    4. 'A' → logprob: -16.125
    5. 'appro' → logprob: -16.25
    6. 'App' → logprob: -17.5
    7. '_' → logprob: -18.0
    8. 'Ap' → logprob: -18.625
    9. '\' → logprob: -19.25
    10. '```' → logprob: -20.25

Token 437: 'xim' (ID: 8411)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.2064225822687149
    2. 'ator' → logprob: -1.8314225673675537
    3. 'xim' → logprob: -3.8314225673675537
    4. 'x' → logprob: -5.456422805786133
    5. 's' → logprob: -8.706422805786133
    6. 'xm' → logprob: -9.956422805786133
    7. 'imator' → logprob: -10.206422805786133
    8. 'am' → logprob: -10.831422805786133
    9. 'sm' → logprob: -11.581422805786133
    10. 'v' → logprob: -11.706422805786133

Token 438: 'ator' (ID: 1246)
  Prédit: 'ator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ator' → logprob: 0.0
    2. 'ATOR' → logprob: -18.0
    3. 'ater' → logprob: -18.5
    4. 'ato' → logprob: -19.875
    5. 'a' → logprob: -20.125
    6. 'атор' → logprob: -20.375
    7. 'ators' → logprob: -20.5
    8. 'tor' → logprob: -20.5
    9. 'lator' → logprob: -20.875
    10. 'at' → logprob: -20.875

Token 439: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -6.704273118884885e-07
    2. 'q' → logprob: -14.625000953674316
    3. '(' → logprob: -15.875000953674316
    4. '(
' → logprob: -16.625
    5. ' (' → logprob: -17.125
    6. '(qu' → logprob: -18.375
    7. '(c' → logprob: -19.875
    8. '(int' → logprob: -20.125
    9. '(C' → logprob: -20.25
    10. 'C' → logprob: -20.375

Token 440: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47417154908180237
    2. ')
' → logprob: -0.97417151927948
    3. '           ' → logprob: -9.84917163848877
    4. ')
' → logprob: -10.97417163848877
    5. ' )
' → logprob: -11.84917163848877
    6. '       ' → logprob: -12.22417163848877
    7. ').' → logprob: -12.72417163848877
    8. ' )' → logprob: -12.84917163848877
    9. '   ' → logprob: -12.84917163848877
    10. ')

' → logprob: -12.97417163848877

Token 441: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015245724469423294
    2. 'result' → logprob: -4.2652459144592285
    3. ' result' → logprob: -6.8902459144592285
    4. 'approx' → logprob: -10.51524543762207
    5. '       ' → logprob: -12.01524543762207
    6. ' approxim' → logprob: -12.39024543762207
    7. 'solution' → logprob: -12.51524543762207
    8. 'answer' → logprob: -12.76524543762207
    9. 'value' → logprob: -12.76524543762207
    10. ' approximation' → logprob: -13.14024543762207

Token 442: ' root' (ID: 6577)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4172748029232025
    2. 'root' (adapté à ' root') → logprob: -1.667274832725525
    3. 'approx' → logprob: -1.917274832725525
    4. ' result' → logprob: -6.0422749519348145
    5. ' root' → logprob: -6.2922749519348145
    6. ' approx' → logprob: -8.167274475097656
    7. '           ' → logprob: -8.167274475097656
    8. 'res' → logprob: -8.792274475097656
    9. 'self' → logprob: -8.792274475097656
    10. ' approximation' → logprob: -8.917274475097656

Token 443: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04860735312104225
    2. '=' → logprob: -3.048607349395752
    3. '_' → logprob: -11.04860782623291
    4. '_value' → logprob: -13.04860782623291
    5. 'approx' → logprob: -14.04860782623291
    6. '_result' → logprob: -15.42360782623291
    7. '≈' → logprob: -15.54860782623291
    8. ' ' → logprob: -15.67360782623291
    9. '	' → logprob: -15.92360782623291
    10. ' ' → logprob: -16.048606872558594

Token 444: ' approxim' (ID: 116685)
  Prédit: 'appro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'appro' → logprob: -0.03812790662050247
    2. ' approxim' → logprob: -3.288127899169922
    3. 'approx' → logprob: -9.663127899169922
    4. ' appro' → logprob: -11.163127899169922
    5. ' aproxim' → logprob: -12.913127899169922
    6. 'Appro' → logprob: -13.163127899169922
    7. 'approximately' → logprob: -13.663127899169922
    8. 'appropr' → logprob: -13.913127899169922
    9. ' approximate' → logprob: -14.038127899169922
    10. ' approaches' → logprob: -15.038127899169922

Token 445: 'ator' (ID: 1246)
  Prédit: 'ator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ator' → logprob: -0.06205933168530464
    2. 'ate' → logprob: -2.8120594024658203
    3. 'ateur' → logprob: -9.56205940246582
    4. 'e' → logprob: -12.06205940246582
    5. 'root' → logprob: -12.81205940246582
    6. 'ater' → logprob: -13.31205940246582
    7. 'er' → logprob: -13.43705940246582
    8. 'tor' → logprob: -14.43705940246582
    9. 'atore' → logprob: -14.43705940246582
    10. 'атор' → logprob: -14.49955940246582

Token 446: '.ap' (ID: 6672)
  Prédit: '.ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ap' → logprob: -5.512236498361744e-07
    2. '.' → logprob: -14.500000953674316
    3. 'approx' → logprob: -18.0
    4. ' .' → logprob: -18.5
    5. ' approximate' → logprob: -21.625
    6. '.App' → logprob: -21.875
    7. '.append' → logprob: -22.0
    8. '.app' → logprob: -22.125
    9. '.concatenate' → logprob: -22.75
    10. '_APPRO' → logprob: -22.875

Token 447: 'prox' (ID: 142542)
  Prédit: 'prox'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prox' → logprob: -1.0564331205387134e-05
    2. 'pro' → logprob: -12.00001049041748
    3. ' prox' → logprob: -12.37501049041748
    4. 'rox' → logprob: -16.250011444091797
    5. 'p' → logprob: -16.625011444091797
    6. 'prove' → logprob: -17.250011444091797
    7. 'preci' → logprob: -18.500011444091797
    8. 'pr' → logprob: -19.000011444091797
    9. 'proxy' → logprob: -19.250011444091797
    10. 'x' → logprob: -19.750011444091797

Token 448: 'imate' (ID: 4937)
  Prédit: 'ox'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ox' → logprob: -0.026612835004925728
    2. 'imate' → logprob: -3.6516127586364746
    3. 'x' → logprob: -8.651613235473633
    4. 'om' → logprob: -9.651613235473633
    5. 'rox' → logprob: -10.401613235473633
    6. 'ix' → logprob: -11.026613235473633
    7. 'ocate' → logprob: -11.776613235473633
    8. 'ate' → logprob: -12.401613235473633
    9. 'olate' → logprob: -13.151613235473633
    10. 'oxy' → logprob: -13.401613235473633

Token 449: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.709308167453855e-05
    2. '
' → logprob: -9.500086784362793
    3. 'self' → logprob: -12.000086784362793
    4. ' self' → logprob: -12.625086784362793
    5. ',' → logprob: -13.375086784362793
    6. '		' → logprob: -15.250086784362793
    7. '            
' → logprob: -15.250086784362793
    8. '               ' → logprob: -15.375086784362793
    9. ',
' → logprob: -15.375086784362793
    10. '          ' → logprob: -16.50008773803711

Token 450: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00021712594025302678
    2. 'self' → logprob: -8.50021743774414
    3. ' self' → logprob: -11.25021743774414
    4. '       ' → logprob: -15.25021743774414
    5. '		' → logprob: -15.75021743774414
    6. '               ' → logprob: -16.37521743774414
    7. '   ' → logprob: -16.62521743774414
    8. '            
' → logprob: -16.87521743774414
    9. '          ' → logprob: -16.87521743774414
    10. '```' → logprob: -17.25021743774414

Token 451: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.3490268290042877
    2. '           ' → logprob: -1.3490267992019653
    3. ' self' → logprob: -3.349026918411255
    4. '	self' → logprob: -11.349026679992676
    5. '		' → logprob: -13.599026679992676
    6. '	       ' → logprob: -14.599026679992676
    7. '   ' → logprob: -14.974026679992676
    8. '       ' → logprob: -15.599026679992676
    9. '          ' → logprob: -16.099027633666992
    10. '	   ' → logprob: -16.599027633666992

Token 452: '.results' (ID: 53203)
  Prédit: '.results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.results' → logprob: -0.00016778295685071498
    2. 'results' → logprob: -9.000167846679688
    3. '.' → logprob: -10.500167846679688
    4. ' .' → logprob: -11.125167846679688
    5. '	results' → logprob: -14.375167846679688
    6. '.values' → logprob: -15.500167846679688
    7. ' results' → logprob: -15.625167846679688
    8. '.responses' → logprob: -15.875167846679688
    9. '.records' → logprob: -16.000167846679688
    10. '   ' → logprob: -16.000167846679688

Token 453: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.117345684382599e-05
    2. '.' → logprob: -10.875020980834961
    3. ' .' → logprob: -13.500020980834961
    4. '           ' → logprob: -15.000020980834961
    5. '.app' → logprob: -15.375020980834961
    6. '.ap' → logprob: -15.750020980834961
    7. '.extend' → logprob: -16.25002098083496
    8. '.add' → logprob: -17.62502098083496
    9. 'append' → logprob: -18.37502098083496
    10. '.py' → logprob: -18.50002098083496

Token 454: '(root' (ID: 17410)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.008846903219819069
    2. '(' → logprob: -4.758846759796143
    3. '(root' → logprob: -8.3838472366333
    4. '(f' → logprob: -13.2588472366333
    5. '(round' → logprob: -14.1338472366333
    6. ' (' → logprob: -14.6338472366333
    7. '   ' → logprob: -15.1338472366333
    8. '(('' → logprob: -15.7588472366333
    9. '(("' → logprob: -16.008846282958984
    10. '(q' → logprob: -16.133846282958984

Token 455: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.106736039626412e-05
    2. ')
' → logprob: -10.750031471252441
    3. ' )' → logprob: -12.250031471252441
    4. '           ' → logprob: -12.750031471252441
    5. '       ' → logprob: -13.625031471252441
    6. '<|end|>' → logprob: -15.375031471252441
    7. '),' → logprob: -16.125030517578125
    8. '))' → logprob: -16.875030517578125
    9. ')`' → logprob: -16.875030517578125
    10. '   ' → logprob: -17.000030517578125

Token 456: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011712079867720604
    2. 'def' → logprob: -4.511712074279785
    3. ' def' → logprob: -7.511712074279785
    4. '
' → logprob: -9.261712074279785
    5. '<|end|>' → logprob: -11.386712074279785
    6. '       ' → logprob: -12.511712074279785
    7. '    
' → logprob: -12.636712074279785
    8. '	def' → logprob: -13.636712074279785
    9. '  ' → logprob: -13.636712074279785
    10. ' ' → logprob: -14.136712074279785

Token 457: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0015355738578364253
    2. ' def' → logprob: -6.751535415649414
    3. '
' → logprob: -8.001535415649414
    4. '   ' → logprob: -10.501535415649414
    5. '    
' → logprob: -13.751535415649414
    6. '<|end|>' → logprob: -14.126535415649414
    7. '        
' → logprob: -15.376535415649414
    8. '	def' → logprob: -15.376535415649414
    9. '

' → logprob: -15.751535415649414
    10. ' 
' → logprob: -15.751535415649414

Token 458: ' output' (ID: 4733)
  Prédit: 'display'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'display' → logprob: -0.44008466601371765
    2. 'print' → logprob: -1.44008469581604
    3. ' display' → logprob: -2.19008469581604
    4. ' print' → logprob: -4.940084457397461
    5. 'show' → logprob: -10.690084457397461
    6. 'get' → logprob: -11.190084457397461
    7. 'aff' → logprob: -12.690084457397461
    8. ' afficher' → logprob: -12.940084457397461
    9. ' show' → logprob: -13.190084457397461
    10. '_display' → logprob: -13.315084457397461

Token 459: '_results' (ID: 31049)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.40512755513191223
    2. '_results' → logprob: -1.1551275253295898
    3. '(' → logprob: -4.15512752532959
    4. 'self' → logprob: -6.90512752532959
    5. '_' → logprob: -7.15512752532959
    6. '_result' → logprob: -8.53012752532959
    7. '()' → logprob: -9.03012752532959
    8. 's' → logprob: -9.65512752532959
    9. 'Results' → logprob: -9.78012752532959
    10. '_self' → logprob: -10.03012752532959

Token 460: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -8.2994620242971e-06
    2. '(' → logprob: -12.000008583068848
    3. ' (' → logprob: -13.250008583068848
    4. '   ' → logprob: -15.250008583068848
    5. 'self' → logprob: -16.50000762939453
    6. ' self' → logprob: -19.75000762939453
    7. '(
' → logprob: -20.00000762939453
    8. '       ' → logprob: -20.12500762939453
    9. '(Self' → logprob: -20.37500762939453
    10. 'def' → logprob: -20.75000762939453

Token 461: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.39529991149902344
    2. '):
' → logprob: -1.1452999114990234
    3. 'self' → logprob: -5.520299911499023
    4. '(self' → logprob: -6.020299911499023
    5. ')' → logprob: -6.895299911499023
    6. '   ' → logprob: -7.895299911499023
    7. '):
' → logprob: -8.145299911499023
    8. '):

' → logprob: -9.270299911499023
    9. '       ' → logprob: -9.520299911499023
    10. ',' → logprob: -9.770299911499023

Token 462: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36799898743629456
    2. '(self' → logprob: -1.2429989576339722
    3. '(' → logprob: -4.117999076843262
    4. '   ' → logprob: -6.117999076843262
    5. 'self' → logprob: -7.992999076843262
    6. '(
' → logprob: -7.992999076843262
    7. '()' → logprob: -9.742999076843262
    8. ' self' → logprob: -10.492999076843262
    9. '        
' → logprob: -10.742999076843262
    10. ' (' → logprob: -10.867999076843262

Token 463: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.958342432975769
    2. 'for' → logprob: -0.958342432975769
    3. ' for' → logprob: -1.458342432975769
    4. '   ' → logprob: -8.083342552185059
    5. '```' → logprob: -12.333342552185059
    6. '	for' → logprob: -12.708342552185059
    7. ' ' → logprob: -12.833342552185059
    8. 'self' → logprob: -13.708342552185059
    9. '
' → logprob: -14.083342552185059
    10. 'def' → logprob: -14.708342552185059

Token 464: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.40335774421691895
    2. '       ' → logprob: -1.153357744216919
    3. ' for' → logprob: -4.15335750579834
    4. '   ' → logprob: -7.52835750579834
    5. '"""
' → logprob: -9.90335750579834
    6. '"""' → logprob: -10.27835750579834
    7. '
' → logprob: -12.52835750579834
    8. 'print' → logprob: -12.52835750579834
    9. '	for' → logprob: -12.65335750579834
    10. 'self' → logprob: -13.02835750579834

Token 465: ' Aff' (ID: 13741)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007491508033126593
    2. ' for' → logprob: -5.007491588592529
    3. '       ' → logprob: -7.257491588592529
    4. 'def' → logprob: -9.632491111755371
    5. '   ' → logprob: -12.507491111755371
    6. 'For' → logprob: -14.632491111755371
    7. '
' → logprob: -15.382491111755371
    8. 'Pour' → logprob: -15.507491111755371
    9. 'print' → logprob: -15.757491111755371
    10. '"""
' → logprob: -15.757491111755371

Token 466: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.0001317871210630983
    2. 'ic' → logprob: -9.375131607055664
    3. 'ichage' → logprob: -11.000131607055664
    4. 'che' → logprob: -11.125131607055664
    5. '
' → logprob: -12.375131607055664
    6. 'icher' → logprob: -12.375131607055664
    7. '   ' → logprob: -13.500131607055664
    8. 'ich' → logprob: -13.500131607055664
    9. '#' → logprob: -14.125131607055664
    10. '\' → logprob: -14.500131607055664

Token 467: ' les' (ID: 1341)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.10730360448360443
    2. '()' → logprob: -2.7323036193847656
    3. 'self' → logprob: -4.232303619384766
    4. '       ' → logprob: -4.607303619384766
    5. '(' → logprob: -5.482303619384766
    6. '   ' → logprob: -6.107303619384766
    7. 'def' → logprob: -6.607303619384766
    8. 'for' → logprob: -6.982303619384766
    9. ' les' → logprob: -7.482303619384766
    10. '(
' → logprob: -7.607303619384766

Token 468: ' résultats' (ID: 48985)
  Prédit: 'rés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rés' → logprob: -0.09585989266633987
    2. ' résultats' → logprob: -2.720860004425049
    3. 'result' → logprob: -4.220860004425049
    4. 'results' → logprob: -4.595860004425049
    5. ' results' → logprob: -7.845860004425049
    6. 'r' → logprob: -7.970860004425049
    7. ' result' → logprob: -10.72085952758789
    8. 'val' → logprob: -10.97085952758789
    9. 'Rés' → logprob: -11.84585952758789
    10. 'ré' → logprob: -12.34585952758789

Token 469: ' format' (ID: 6011)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.22745788097381592
    2. '       ' → logprob: -2.1024580001831055
    3. 'self' → logprob: -2.8524580001831055
    4. '   ' → logprob: -4.2274580001831055
    5. ' self' → logprob: -5.4774580001831055
    6. '
' → logprob: -5.9774580001831055
    7. '(' → logprob: -6.8524580001831055
    8. 'def' → logprob: -8.227458000183105
    9. ' (' → logprob: -8.977458000183105
    10. '(
' → logprob: -8.977458000183105

Token 470: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.005270753521472216
    2. 'print' → logprob: -6.380270957946777
    3. 'é' → logprob: -6.630270957946777
    4. 'ées' → logprob: -6.880270957946777
    5. '   ' → logprob: -7.380270957946777
    6. 't' → logprob: -9.380270957946777
    7. ':' → logprob: -9.755270957946777
    8. 'ée' → logprob: -9.880270957946777
    9. 'ifiés' → logprob: -9.880270957946777
    10. '```' → logprob: -10.005270957946777

Token 471: ' selon' (ID: 27571)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.6413452625274658
    2. '       ' → logprob: -0.7663452625274658
    3. 'self' → logprob: -5.516345024108887
    4. '   ' → logprob: -5.766345024108887
    5. '(' → logprob: -7.516345024108887
    6. '
' → logprob: -7.516345024108887
    7. '```' → logprob: -9.141345024108887
    8. ' self' → logprob: -9.266345024108887
    9. 'def' → logprob: -9.516345024108887
    10. ' (' → logprob: -10.516345024108887

Token 472: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -1.3280916213989258
    2. '       ' → logprob: -1.4530916213989258
    3. ' la' → logprob: -2.328091621398926
    4. 'f' → logprob: -2.328091621398926
    5. 'le' → logprob: -2.703091621398926
    6. '"' → logprob: -2.828091621398926
    7. '   ' → logprob: -2.953091621398926
    8. 'self' → logprob: -3.453091621398926
    9. 'les' → logprob: -3.578091621398926
    10. ' les' → logprob: -4.578091621398926

Token 473: ' demande' (ID: 26737)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.3645647466182709
    2. ' f' → logprob: -2.6145646572113037
    3. 'format' → logprob: -3.1145646572113037
    4. 'spec' → logprob: -3.1145646572113037
    5. ' spéc' → logprob: -3.4895646572113037
    6. 'print' → logprob: -3.7395646572113037
    7. 'precision' → logprob: -4.364564895629883
    8. 'form' → logprob: -4.614564895629883
    9. 'for' → logprob: -4.739564895629883
    10. 'pr' → logprob: -4.989564895629883

Token 474: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2655385136604309
    2. '   ' → logprob: -1.5155384540557861
    3. '(self' → logprob: -4.515538692474365
    4. 'def' → logprob: -7.390538692474365
    5. 'self' → logprob: -7.640538692474365
    6. '(' → logprob: -7.765538692474365
    7. ' for' → logprob: -7.890538692474365
    8. '           ' → logprob: -8.890538215637207
    9. '
' → logprob: -9.140538215637207
    10. 'for' → logprob: -9.390538215637207

Token 475: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002795133739709854
    2. '   ' → logprob: -6.377795219421387
    3. '(self' → logprob: -7.377795219421387
    4. '
' → logprob: -8.252795219421387
    5. 'self' → logprob: -9.252795219421387
    6. '(' → logprob: -10.752795219421387
    7. '        
' → logprob: -11.127795219421387
    8. ' for' → logprob: -11.377795219421387
    9. 'def' → logprob: -11.502795219421387
    10. ')' → logprob: -11.627795219421387

Token 476: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01916917786002159
    2. ' for' → logprob: -4.394169330596924
    3. 'for' → logprob: -5.394169330596924
    4. 'def' → logprob: -6.894169330596924
    5. '   ' → logprob: -7.394169330596924
    6. '
' → logprob: -8.019168853759766
    7. 'print' → logprob: -10.894168853759766
    8. 'self' → logprob: -11.019168853759766
    9. ')' → logprob: -11.269168853759766
    10. '	for' → logprob: -11.644168853759766

Token 477: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04106052219867706
    2. ' for' → logprob: -3.791060447692871
    3. 'for' → logprob: -4.041060447692871
    4. '   ' → logprob: -9.541060447692871
    5. '	for' → logprob: -12.166060447692871
    6. '	' → logprob: -14.166060447692871
    7. '```' → logprob: -15.291060447692871
    8. '           ' → logprob: -16.041061401367188
    9. '	   ' → logprob: -16.291061401367188
    10. 'def' → logprob: -16.666061401367188

Token 478: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0033358715008944273
    2. ' for' → logprob: -5.753335952758789
    3. '       ' → logprob: -8.753335952758789
    4. '   ' → logprob: -15.753335952758789
    5. '	for' → logprob: -17.25333595275879
    6. '```' → logprob: -18.75333595275879
    7. ' ' → logprob: -20.12833595275879
    8. 'print' → logprob: -20.37833595275879
    9. 'import' → logprob: -20.50333595275879
    10. '           ' → logprob: -21.37833595275879

Token 479: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8907862305641174
    2. 'root' → logprob: -1.0157861709594727
    3. 'res' → logprob: -2.2657861709594727
    4. ' root' → logprob: -2.5157861709594727
    5. ' result' → logprob: -4.140786170959473
    6. ' res' → logprob: -4.515786170959473
    7. 'i' → logprob: -4.890786170959473
    8. 'r' → logprob: -5.515786170959473
    9. ' i' → logprob: -5.890786170959473
    10. 'idx' → logprob: -7.765786170959473

Token 480: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -9.372294698550832e-06
    2. 'in' → logprob: -11.625009536743164
    3. ',' → logprob: -15.250009536743164
    4. ' ' → logprob: -16.000009536743164
    5. '  ' → logprob: -16.750009536743164
    6. '   ' → logprob: -18.125009536743164
    7. 'e' → logprob: -18.125009536743164
    8. ' ' → logprob: -18.125009536743164
    9. 's' → logprob: -18.500009536743164
    10. 'at' → logprob: -18.750009536743164

Token 481: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023245712742209435
    2. ' self' → logprob: -3.7732458114624023
    3. '   ' → logprob: -16.148244857788086
    4. '(self' → logprob: -16.648244857788086
    5. '	self' → logprob: -17.773244857788086
    6. ' ' → logprob: -18.148244857788086
    7. '
' → logprob: -18.773244857788086
    8. '  ' → logprob: -18.773244857788086
    9. '    ' → logprob: -19.023244857788086
    10. '[self' → logprob: -19.148244857788086

Token 482: '.results' (ID: 53203)
  Prédit: '.results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.results' → logprob: -0.00030197695014066994
    2. ' .' → logprob: -8.3753023147583
    3. '.' → logprob: -9.6253023147583
    4. 'results' → logprob: -12.2503023147583
    5. '.result' → logprob: -15.3753023147583
    6. ' results' → logprob: -15.8753023147583
    7. '	results' → logprob: -16.250301361083984
    8. ' ' → logprob: -17.375301361083984
    9. '.s' → logprob: -17.875301361083984
    10. '.Results' → logprob: -18.000301361083984

Token 483: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6606582999229431
    2. ':
' → logprob: -0.9106582999229431
    3. '           ' → logprob: -2.535658359527588
    4. ' print' → logprob: -7.410658359527588
    5. 'print' → logprob: -7.785658359527588
    6. '       ' → logprob: -8.03565788269043
    7. ' :' → logprob: -8.78565788269043
    8. ',' → logprob: -8.78565788269043
    9. ' :
' → logprob: -8.91065788269043
    10. '):
' → logprob: -9.78565788269043

Token 484: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015851469710469246
    2. 'print' → logprob: -4.2658514976501465
    3. ' print' → logprob: -6.3908514976501465
    4. '	       ' → logprob: -12.265851020812988
    5. '       ' → logprob: -13.015851020812988
    6. '```' → logprob: -13.640851020812988
    7. '   ' → logprob: -15.140851020812988
    8. '		' → logprob: -15.265851020812988
    9. '          ' → logprob: -15.640851020812988
    10. '	print' → logprob: -15.765851020812988

Token 485: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.4777742624282837
    2. ' print' → logprob: -0.9777742624282837
    3. '           ' → logprob: -5.602774143218994
    4. '   ' → logprob: -13.477774620056152
    5. '	print' → logprob: -14.727774620056152
    6. '               ' → logprob: -15.227774620056152
    7. '```' → logprob: -15.602774620056152
    8. ' ' → logprob: -15.727774620056152
    9. '       ' → logprob: -16.102773666381836
    10. 'import' → logprob: -16.352773666381836

Token 486: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.000543857691809535
    2. '("{' → logprob: -8.000543594360352
    3. '(' → logprob: -9.000543594360352
    4. '(round' → logprob: -9.625543594360352
    5. '(format' → logprob: -11.500543594360352
    6. '("' → logprob: -12.500543594360352
    7. '("%.' → logprob: -12.625543594360352
    8. 'f' → logprob: -14.375543594360352
    9. '('{' → logprob: -14.500543594360352
    10. '{' → logprob: -15.375543594360352

Token 487: '"{' (ID: 27510)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.4425390064716339
    2. '"{' → logprob: -1.0675389766693115
    3. '"' → logprob: -4.817539215087891
    4. '"La' → logprob: -6.817539215087891
    5. '"C' → logprob: -7.067539215087891
    6. '{"' → logprob: -7.317539215087891
    7. 'Cube' → logprob: -7.567539215087891
    8. 'La' → logprob: -7.692539215087891
    9. ''{' → logprob: -7.942539215087891
    10. 'Root' → logprob: -8.31753921508789

Token 488: 'result' (ID: 2521)
  Prédit: 'result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.8624639324116288e-06
    2. ' result' → logprob: -13.625001907348633
    3. '{' → logprob: -15.125001907348633
    4. 'round' → logprob: -15.375001907348633
    5. 'root' → logprob: -17.875001907348633
    6. '(result' → logprob: -18.125001907348633
    7. '0' → logprob: -18.125001907348633
    8. '	result' → logprob: -19.125001907348633
    9. '1' → logprob: -19.375001907348633
    10. '$result' → logprob: -19.750001907348633

Token 489: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -0.00025275684311054647
    2. ':' → logprob: -9.000252723693848
    3. ' :.' → logprob: -9.000252723693848
    4. ' :' → logprob: -12.750252723693848
    5. '**' → logprob: -13.125252723693848
    6. ' **' → logprob: -14.250252723693848
    7. ':e' → logprob: -15.875252723693848
    8. ' .' → logprob: -16.500253677368164
    9. ':^' → logprob: -17.125253677368164
    10. ':<' → logprob: -17.125253677368164

Token 490: '6' (ID: 21)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.04376692697405815
    2. '6' → logprob: -3.293766975402832
    3. '4' → logprob: -5.918766975402832
    4. '7' → logprob: -6.293766975402832
    5. '8' → logprob: -7.668766975402832
    6. '10' → logprob: -7.793766975402832
    7. '3' → logprob: -8.793766975402832
    8. '2' → logprob: -9.793766975402832
    9. '9' → logprob: -10.043766975402832
    10. '{' → logprob: -11.043766975402832

Token 491: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.9361264946837764e-07
    2. 'g' → logprob: -15.625
    3. '}' → logprob: -20.125
    4. 'e' → logprob: -21.0
    5. '}")' → logprob: -22.125
    6. '6' → logprob: -22.375
    7. '	f' → logprob: -22.625
    8. '{' → logprob: -23.25
    9. ' f' → logprob: -23.25
    10. 'fi' → logprob: -23.75

Token 492: '}"' (ID: 21503)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.009888187982141972
    2. '")' → logprob: -4.634888172149658
    3. '}' → logprob: -9.384888648986816
    4. '}")
' → logprob: -10.759888648986816
    5. ')")' → logprob: -10.884888648986816
    6. ' }' → logprob: -12.634888648986816
    7. 'f' → logprob: -13.634888648986816
    8. 'e' → logprob: -14.384888648986816
    9. '}")
' → logprob: -14.509888648986816
    10. '}")

' → logprob: -15.009888648986816

Token 493: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2961512513575144e-05
    2. '")' → logprob: -11.125022888183594
    3. ')
' → logprob: -12.625022888183594
    4. ' )' → logprob: -13.500022888183594
    5. ')")' → logprob: -13.750022888183594
    6. '}' → logprob: -14.000022888183594
    7. '       ' → logprob: -15.250022888183594
    8. ')}' → logprob: -15.250022888183594
    9. '   ' → logprob: -15.375022888183594
    10. '}")' → logprob: -15.500022888183594

Token 494: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20310737192630768
    2. 'if' → logprob: -1.7031073570251465
    3. 'q' → logprob: -6.8281073570251465
    4. 'import' → logprob: -8.203107833862305
    5. '#' → logprob: -8.953107833862305
    6. '```' → logprob: -8.953107833862305
    7. '
' → logprob: -11.203107833862305
    8. ' if' → logprob: -11.203107833862305
    9. 'input' → logprob: -11.578107833862305
    10. '<|end|>' → logprob: -11.703107833862305

Token 495: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.12693241238594055
    2. 'main' → logprob: -2.126932382583618
    3. ' run' → logprob: -12.626932144165039
    4. '	main' → logprob: -14.501932144165039
    5. 'run' → logprob: -14.501932144165039
    6. '_main' → logprob: -17.87693214416504
    7. ' solve' → logprob: -18.62693214416504
    8. 'solve' → logprob: -19.00193214416504
    9. 'process' → logprob: -19.37693214416504
    10. ' process' → logprob: -19.75193214416504

Token 496: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00012368128227535635
    2. '():
' → logprob: -9.125123977661133
    3. ' ():' → logprob: -11.625123977661133
    4. '()' → logprob: -12.375123977661133
    5. '():
' → logprob: -14.500123977661133
    6. '()>' → logprob: -14.750123977661133
    7. '():

' → logprob: -16.125123977661133
    8. '()">' → logprob: -16.250123977661133
    9. '().' → logprob: -16.375123977661133
    10. ':' → logprob: -16.500123977661133

Token 497: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07737121731042862
    2. 'solver' → logprob: -2.952371120452881
    3. ' solver' → logprob: -3.827371120452881
    4. 'import' → logprob: -8.202371597290039
    5. ' import' → logprob: -10.202371597290039
    6. 'cube' → logprob: -10.202371597290039
    7. ' cube' → logprob: -10.452371597290039
    8. 'c' → logprob: -10.827371597290039
    9. 'q' → logprob: -11.452371597290039
    10. 's' → logprob: -11.452371597290039

Token 498: ' import' (ID: 1588)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.11568313091993332
    2. ' solver' → logprob: -2.740683078765869
    3. 'q' → logprob: -3.490683078765869
    4. '   ' → logprob: -4.865683078765869
    5. ' q' → logprob: -5.990683078765869
    6. 'import' (adapté à ' import') → logprob: -6.115683078765869
    7. 'cube' → logprob: -7.740683078765869
    8. 'c' → logprob: -7.990683078765869
    9. ' import' → logprob: -8.240683555603027
    10. 'inputs' → logprob: -9.240683555603027

Token 499: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.25218823552131653
    2. 'sys' → logprob: -1.5021882057189941
    3. ' math' → logprob: -8.377188682556152
    4. 'math' → logprob: -10.752188682556152
    5. '=sys' → logprob: -12.127188682556152
    6. '	sys' → logprob: -13.377188682556152
    7. '(sys' → logprob: -14.752188682556152
    8. 'random' → logprob: -16.377187728881836
    9. '_sys' → logprob: -16.502187728881836
    10. 'built' → logprob: -17.002187728881836

Token 500: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005142084788531065
    2. '
' → logprob: -5.5051422119140625
    3. '    
' → logprob: -6.8801422119140625
    4. 'q' → logprob: -11.130142211914062
    5. 'for' → logprob: -12.255142211914062
    6. 'input' → logprob: -12.755142211914062
    7. '   
' → logprob: -13.505142211914062
    8. '	
' → logprob: -13.755142211914062
    9. 'import' → logprob: -13.880142211914062
    10. '    ' → logprob: -13.880142211914062

Token 501: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3183385133743286
    2. 'q' → logprob: -1.3183385133743286
    3. 'if' → logprob: -5.818338394165039
    4. ' q' → logprob: -7.068338394165039
    5. 'for' → logprob: -7.943338394165039
    6. 'inputs' → logprob: -8.693338394165039
    7. 'c' → logprob: -8.943338394165039
    8. ' if' → logprob: -8.943338394165039
    9. 'def' → logprob: -9.568338394165039
    10. 'input' → logprob: -9.693338394165039

Token 502: ' solver' (ID: 63271)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.06868579238653183
    2. 'solver' (adapté à ' solver') → logprob: -3.31868577003479
    3. 'cube' → logprob: -4.068686008453369
    4. 'for' → logprob: -5.943686008453369
    5. 'args' → logprob: -6.193686008453369
    6. 'lines' → logprob: -6.318686008453369
    7. 'inputs' → logprob: -6.318686008453369
    8. 'if' → logprob: -6.443686008453369
    9. 'input' → logprob: -6.693686008453369
    10. 'c' → logprob: -7.443686008453369

Token 503: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009757150895893574
    2. '=' → logprob: -4.634757041931152
    3. ' ' → logprob: -14.384757041931152
    4. '   ' → logprob: -14.759757041931152
    5. '.process' → logprob: -16.75975799560547
    6. ' ' → logprob: -16.88475799560547
    7. '  ' → logprob: -17.63475799560547
    8. '.' → logprob: -18.00975799560547
    9. '	' → logprob: -18.25975799560547
    10. '.py' → logprob: -18.25975799560547

Token 504: ' Cube' (ID: 76129)
  Prédit: 'Cube'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cube' → logprob: -7.493430894101039e-05
    2. ' Cube' → logprob: -9.500075340270996
    3. 'Cub' → logprob: -22.00007438659668
    4. 'Cake' → logprob: -24.75007438659668
    5. '_cube' → logprob: -25.37507438659668
    6. 'C' → logprob: -26.12507438659668
    7. 'Cubit' → logprob: -27.00007438659668
    8. 'cube' → logprob: -27.12507438659668
    9. ' cube' → logprob: -27.50007438659668
    10. ' ' → logprob: -27.50007438659668

Token 505: 'Root' (ID: 10834)
  Prédit: 'Root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Root' → logprob: -1.9361264946837764e-07
    2. 'root' → logprob: -16.625
    3. ' Root' → logprob: -17.875
    4. 'Roots' → logprob: -18.25
    5. '_root' → logprob: -18.5
    6. 'Cube' → logprob: -18.625
    7. 'Solver' → logprob: -19.25
    8. '_ROOT' → logprob: -19.75
    9. '   ' → logprob: -20.0
    10. '.Root' → logprob: -20.0

Token 506: 'Solver' (ID: 70484)
  Prédit: 'Solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -1.6240566083070007e-06
    2. 'solver' → logprob: -13.500001907348633
    3. 'Sol' → logprob: -16.500001907348633
    4. '_solver' → logprob: -16.625001907348633
    5. ' solver' → logprob: -17.000001907348633
    6. ' Solver' → logprob: -17.125001907348633
    7. 'Solve' → logprob: -18.250001907348633
    8. 'olver' → logprob: -20.125001907348633
    9. 'Resolver' → logprob: -20.625001907348633
    10. 'Appro' → logprob: -20.875001907348633

Token 507: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20267292857170105
    2. '
' → logprob: -1.7026729583740234
    3. '    
' → logprob: -7.202672958374023
    4. 'for' → logprob: -7.952672958374023
    5. 'q' → logprob: -9.702672958374023
    6. '  
' → logprob: -10.577672958374023
    7. '   
' → logprob: -10.702672958374023
    8. '  ' → logprob: -11.202672958374023
    9. ' for' → logprob: -11.702672958374023
    10. '
' → logprob: -11.952672958374023

Token 508: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004184059798717499
    2. 'q' → logprob: -6.379184246063232
    3. 'for' → logprob: -7.254184246063232
    4. ' for' → logprob: -7.379184246063232
    5. ' lines' → logprob: -7.754184246063232
    6. 'args' → logprob: -8.629183769226074
    7. ' q' → logprob: -8.629183769226074
    8. '    
' → logprob: -9.254183769226074
    9. 'inputs' → logprob: -9.504183769226074
    10. 'lines' → logprob: -9.754183769226074

Token 509: ' input' (ID: 3422)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.20809206366539001
    2. 'for' → logprob: -1.9580920934677124
    3. ' q' → logprob: -4.083092212677002
    4. '   ' → logprob: -4.333092212677002
    5. ' for' → logprob: -4.708092212677002
    6. 'inputs' → logprob: -5.708092212677002
    7. ' lines' → logprob: -6.833092212677002
    8. 'qs' → logprob: -6.833092212677002
    9. 'lines' → logprob: -6.958092212677002
    10. 'input' (adapté à ' input') → logprob: -7.333092212677002

Token 510: '_values' (ID: 20393)
  Prédit: '_lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.6628985404968262
    2. '_values' → logprob: -0.9128985404968262
    3. '_data' → logprob: -2.537898540496826
    4. 's' → logprob: -6.537898540496826
    5. '_line' → logprob: -6.537898540496826
    6. '()' → logprob: -7.537898540496826
    7. '_vals' → logprob: -7.912898540496826
    8. ' =' → logprob: -9.162899017333984
    9. '_numbers' → logprob: -9.162899017333984
    10. '_' → logprob: -9.412899017333984

Token 511: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931505799293518
    2. ' =' → logprob: -0.6931505799293518
    3. '=[]' → logprob: -13.693150520324707
    4. '=sys' → logprob: -13.943150520324707
    5. '   ' → logprob: -14.568150520324707
    6. '＝' → logprob: -15.443150520324707
    7. ' ' → logprob: -15.818150520324707
    8. ' =
' → logprob: -16.443151473999023
    9. '=[]
' → logprob: -16.693151473999023
    10. 's' → logprob: -16.943151473999023

Token 512: ' []

' (ID: 32833)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.23545026779174805
    2. '[list' → logprob: -2.735450267791748
    3. 'list' → logprob: -2.985450267791748
    4. 'map' → logprob: -3.110450267791748
    5. '[]

' → logprob: -3.735450267791748
    6. '[]
' → logprob: -4.360450267791748
    7. '[]' → logprob: -4.985450267791748
    8. ' [' → logprob: -6.235450267791748
    9. '[m' → logprob: -6.610450267791748
    10. 'sys' → logprob: -6.985450267791748

Token 513: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10770817846059799
    2. ' for' → logprob: -2.857708215713501
    3. 'for' → logprob: -3.107708215713501
    4. 'while' → logprob: -12.607707977294922
    5. ' while' → logprob: -12.982707977294922
    6. '	for' → logprob: -14.357707977294922
    7. '
' → logprob: -14.607707977294922
    8. '    
' → logprob: -15.482707977294922
    9. '```' → logprob: -17.232707977294922
    10. ' ' → logprob: -17.732707977294922

Token 514: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0004957250785082579
    2. ' for' → logprob: -8.000495910644531
    3. '   ' → logprob: -8.750495910644531
    4. 'while' → logprob: -13.250495910644531
    5. '
' → logprob: -16.25049591064453
    6. '	for' → logprob: -18.37549591064453
    7. '    
' → logprob: -19.00049591064453
    8. '  ' → logprob: -19.25049591064453
    9. 'line' → logprob: -19.37549591064453
    10. ' ' → logprob: -19.50049591064453

Token 515: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.07893066108226776
    2. 'line' → logprob: -2.578930616378784
    3. ' ligne' → logprob: -10.453930854797363
    4. '	line' → logprob: -12.078930854797363
    5. 'ligne' → logprob: -12.328930854797363
    6. 'Line' → logprob: -13.953930854797363
    7. '_line' → logprob: -15.203930854797363
    8. '(line' → logprob: -15.203930854797363
    9. '```' → logprob: -15.453930854797363
    10. '   ' → logprob: -16.078929901123047

Token 516: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00033713103039190173
    2. 'in' → logprob: -8.000337600708008
    3. ' ' → logprob: -14.250337600708008
    4. 's' → logprob: -15.375337600708008
    5. '_' → logprob: -16.000337600708008
    6. 'de' → logprob: -16.375337600708008
    7. '   ' → logprob: -16.500337600708008
    8. 'import' → logprob: -16.625337600708008
    9. '	in' → logprob: -16.625337600708008
    10. ' ' → logprob: -16.875337600708008

Token 517: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.126929372549057
    2. ' sys' → logprob: -2.12692928314209
    3. '	sys' → logprob: -14.25192928314209
    4. '=sys' → logprob: -14.62692928314209
    5. '(sys' → logprob: -15.62692928314209
    6. 'import' → logprob: -16.876930236816406
    7. 'input' → logprob: -18.251930236816406
    8. 'stdin' → logprob: -18.251930236816406
    9. 'Sys' → logprob: -19.001930236816406
    10. 'in' → logprob: -19.251930236816406

Token 518: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -8.518582762917504e-05
    2. 'stdin' → logprob: -9.50008487701416
    3. '.' → logprob: -11.87508487701416
    4. ' stdin' → logprob: -13.75008487701416
    5. '.stdout' → logprob: -14.00008487701416
    6. '(stdin' → logprob: -14.37508487701416
    7. '.argv' → logprob: -14.87508487701416
    8. '.readline' → logprob: -15.12508487701416
    9. '.std' → logprob: -15.62508487701416
    10. '.stderr' → logprob: -17.875085830688477

Token 519: ':
' (ID: 734)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.9182125926017761
    2. '.readline' → logprob: -1.168212652206421
    3. ' in' → logprob: -1.918212652206421
    4. ':' → logprob: -2.293212652206421
    5. '.readlines' → logprob: -4.293212413787842
    6. ':
' → logprob: -4.418212413787842
    7. '.rstrip' → logprob: -4.668212413787842
    8. 'strip' → logprob: -6.043212413787842
    9. '.' → logprob: -6.293212413787842
    10. '   ' → logprob: -7.668212413787842

Token 520: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012237003829795867
    2. '   ' → logprob: -10.1251220703125
    3. '<|end|>' → logprob: -10.7501220703125
    4. '        
' → logprob: -11.1251220703125
    5. '.strip' → logprob: -11.6251220703125
    6. '    ' → logprob: -11.6251220703125
    7. ' if' → logprob: -11.7501220703125
    8. '      ' → logprob: -12.6251220703125
    9. ',' → logprob: -12.7501220703125
    10. '.rstrip' → logprob: -13.3751220703125

Token 521: ' line' (ID: 2543)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18247880041599274
    2. ' value' → logprob: -2.432478904724121
    3. ' line' → logprob: -2.682478904724121
    4. 'value' → logprob: -4.932478904724121
    5. 'line' (adapté à ' line') → logprob: -6.182478904724121
    6. ' stripped' → logprob: -7.682478904724121
    7. ' q' → logprob: -7.807478904724121
    8. '           ' → logprob: -9.182478904724121
    9. ' val' → logprob: -9.307478904724121
    10. 'q' → logprob: -9.807478904724121

Token 522: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018261387944221497
    2. ' =' → logprob: -4.018261432647705
    3. '.strip' → logprob: -9.393260955810547
    4. '_strip' → logprob: -11.143260955810547
    5. '=line' → logprob: -12.018260955810547
    6. 'strip' → logprob: -12.018260955810547
    7. '=str' → logprob: -14.393260955810547
    8. '_str' → logprob: -14.893260955810547
    9. 's' → logprob: -15.768260955810547
    10. '.=' → logprob: -15.768260955810547

Token 523: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0005530327325686812
    2. ' line' → logprob: -7.500553131103516
    3. '=line' → logprob: -20.250553131103516
    4. '	line' → logprob: -21.125553131103516
    5. '(line' → logprob: -23.000553131103516
    6. '#line' → logprob: -23.625553131103516
    7. 'lin' → logprob: -24.250553131103516
    8. 'Line' → logprob: -24.750553131103516
    9. 'ligne' → logprob: -25.000553131103516
    10. '[line' → logprob: -25.875553131103516

Token 524: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.0018708095885813236
    2. '.' → logprob: -6.376870632171631
    3. '.rstrip' → logprob: -9.126871109008789
    4. 'strip' → logprob: -9.751871109008789
    5. '.readline' → logprob: -14.876871109008789
    6. ' .' → logprob: -15.126871109008789
    7. '.trim' → logprob: -15.626871109008789
    8. ' strip' → logprob: -15.876871109008789
    9. '().' → logprob: -16.12687110900879
    10. 'rstrip' → logprob: -16.12687110900879

Token 525: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027163827791810036
    2. '
' → logprob: -4.777163982391357
    3. '<|end|>' → logprob: -4.902163982391357
    4. '()
' → logprob: -5.402163982391357
    5. '()' → logprob: -6.277163982391357
    6. '<|end|>' → logprob: -7.152163982391357
    7. ')' → logprob: -7.402163982391357
    8. '           ' → logprob: -7.402163982391357
    9. 'if' → logprob: -7.527163982391357
    10. '   ' → logprob: -7.652163982391357

Token 526: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012323977425694466
    2. ' if' → logprob: -4.88732385635376
    3. 'if' → logprob: -5.38732385635376
    4. '   ' → logprob: -9.262324333190918
    5. '<|end|>' → logprob: -10.512324333190918
    6. '           ' → logprob: -12.262324333190918
    7. ' ' → logprob: -13.512324333190918
    8. '	if' → logprob: -13.887324333190918
    9. '        
' → logprob: -14.137324333190918
    10. '      ' → logprob: -14.512324333190918

Token 527: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.1041145626222715e-05
    2. ' if' → logprob: -11.750011444091797
    3. '       ' → logprob: -12.750011444091797
    4. '           ' → logprob: -15.750011444091797
    5. 'If' → logprob: -17.250011444091797
    6. '   ' → logprob: -19.000011444091797
    7. '	if' → logprob: -19.500011444091797
    8. 'try' → logprob: -20.500011444091797
    9. ';if' → logprob: -20.750011444091797
    10. '```' → logprob: -22.250011444091797

Token 528: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5882893204689026
    2. 'line' → logprob: -1.3382892608642578
    3. 'not' → logprob: -2.088289260864258
    4. ' line' → logprob: -2.838289260864258
    5. ' ' → logprob: -13.713289260864258
    6. '	line' → logprob: -13.838289260864258
    7. ' ' → logprob: -14.213289260864258
    8. '=line' → logprob: -14.963289260864258
    9. '(line' → logprob: -15.088289260864258
    10. 'len' → logprob: -15.088289260864258

Token 529: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.014214630238711834
    2. ' ==' → logprob: -4.264214515686035
    3. '()==' → logprob: -10.889214515686035
    4. '=' → logprob: -11.139214515686035
    5. '===' → logprob: -11.389214515686035
    6. '==
' → logprob: -12.889214515686035
    7. ')==' → logprob: -13.639214515686035
    8. ']==' → logprob: -14.139214515686035
    9. '=="' → logprob: -14.514214515686035
    10. 'is' → logprob: -15.014214515686035

Token 530: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.26250195503234863
    2. '""' → logprob: -1.5125019550323486
    3. ''-' → logprob: -5.1375017166137695
    4. '"":' → logprob: -6.2625017166137695
    5. '"-' → logprob: -6.3875017166137695
    6. '"' → logprob: -7.3875017166137695
    7. ''' → logprob: -7.7625017166137695
    8. '-' → logprob: -13.26250171661377
    9. ''''' → logprob: -13.63750171661377
    10. ' '':
' → logprob: -13.63750171661377

Token 531: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000352266215486452
    2. ':' → logprob: -9.000351905822754
    3. '       ' → logprob: -9.250351905822754
    4. ':
' → logprob: -10.000351905822754
    5. ' or' → logprob: -10.250351905822754
    6. '   ' → logprob: -10.625351905822754
    7. '               ' → logprob: -10.875351905822754
    8. '		' → logprob: -13.000351905822754
    9. '	       ' → logprob: -13.000351905822754
    10. '          ' → logprob: -13.375351905822754

Token 532: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.17352154850959778
    2. '           ' → logprob: -1.9235215187072754
    3. 'continue' (adapté à ' continue') → logprob: -4.423521518707275
    4. ' break' → logprob: -6.798521518707275
    5. '               ' → logprob: -9.548521995544434
    6. '       ' → logprob: -11.423521995544434
    7. ' continue' → logprob: -11.548521995544434
    8. '	break' → logprob: -11.673521995544434
    9. '   ' → logprob: -14.298521995544434
    10. '		' → logprob: -14.673521995544434

Token 533: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002557369298301637
    2. '           ' → logprob: -9.625255584716797
    3. '
' → logprob: -9.875255584716797
    4. '<|end|>' → logprob: -10.125255584716797
    5. '        
' → logprob: -10.625255584716797
    6. 'q' → logprob: -10.875255584716797
    7. 'token' → logprob: -11.000255584716797
    8. '   ' → logprob: -11.625255584716797
    9. 'if' → logprob: -12.000255584716797
    10. 'tokens' → logprob: -12.125255584716797

Token 534: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.1318875446449965e-05
    2. 'if' → logprob: -10.750041007995605
    3. '   ' → logprob: -11.875041007995605
    4. 'q' → logprob: -12.500041007995605
    5. '           ' → logprob: -12.625041007995605
    6. ' if' → logprob: -12.750041007995605
    7. 'try' → logprob: -14.250041007995605
    8. '<|end|>' → logprob: -14.250041007995605
    9. '        
' → logprob: -14.375041007995605
    10. '      ' → logprob: -15.250041007995605

Token 535: ' try' (ID: 2075)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.7421255111694336
    2. 'try' (adapté à ' try') → logprob: -1.2421255111694336
    3. 'value' → logprob: -1.4921255111694336
    4. 'input' → logprob: -4.867125511169434
    5. 'val' → logprob: -6.742125511169434
    6. '       ' → logprob: -6.992125511169434
    7. ' try' → logprob: -8.742125511169434
    8. ' value' → logprob: -8.992125511169434
    9. ' q' → logprob: -9.492125511169434
    10. 'if' → logprob: -10.367125511169434

Token 536: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004254811909049749
    2. ':
' → logprob: -5.5042548179626465
    3. '           ' → logprob: -9.129254341125488
    4. ' :' → logprob: -10.254254341125488
    5. '       ' → logprob: -11.504254341125488
    6. '<|end|>' → logprob: -11.629254341125488
    7. '):' → logprob: -12.754254341125488
    8. '   ' → logprob: -12.879254341125488
    9. '):
' → logprob: -13.754254341125488
    10. ':
' → logprob: -13.879254341125488

Token 537: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002966127940453589
    2. ':' → logprob: -8.750296592712402
    3. '	       ' → logprob: -9.625296592712402
    4. '<|end|>' → logprob: -10.750296592712402
    5. '		' → logprob: -11.250296592712402
    6. '               ' → logprob: -11.625296592712402
    7. '<|end|>' → logprob: -12.375296592712402
    8. '       ' → logprob: -12.375296592712402
    9. '   ' → logprob: -12.750296592712402
    10. '    	   ' → logprob: -12.750296592712402

Token 538: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.058646611869335175
    2. 'value' → logprob: -2.9336466789245605
    3. '           ' → logprob: -6.5586466789245605
    4. '               ' → logprob: -6.5586466789245605
    5. 'val' → logprob: -7.6836466789245605
    6. ' q' → logprob: -8.808646202087402
    7. 'v' → logprob: -9.308646202087402
    8. 'int' → logprob: -9.808646202087402
    9. 'n' → logprob: -10.308646202087402
    10. 'num' → logprob: -10.433646202087402

Token 539: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03805089741945267
    2. '=' → logprob: -3.288050889968872
    3. '=int' → logprob: -11.663050651550293
    4. 'int' → logprob: -15.038050651550293
    5. '	' → logprob: -15.788050651550293
    6. ' ' → logprob: -16.03805160522461
    7. '    ' → logprob: -16.66305160522461
    8. '        ' → logprob: -16.91305160522461
    9. 's' → logprob: -17.16305160522461
    10. '＝' → logprob: -17.28805160522461

Token 540: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -7.493430894101039e-05
    2. ' int' → logprob: -9.500075340270996
    3. '(int' → logprob: -20.25007438659668
    4. 'float' → logprob: -20.37507438659668
    5. '[int' → logprob: -20.50007438659668
    6. '=int' → logprob: -20.62507438659668
    7. '<int' → logprob: -21.75007438659668
    8. '	int' → logprob: -22.75007438659668
    9. '   ' → logprob: -23.00007438659668
    10. ':int' → logprob: -23.75007438659668

Token 541: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -2.2127087504486553e-05
    2. '(' → logprob: -10.750021934509277
    3. 'line' → logprob: -15.000021934509277
    4. ' line' → logprob: -16.625022888183594
    5. '#line' → logprob: -16.625022888183594
    6. '[line' → logprob: -17.125022888183594
    7. '=line' → logprob: -17.500022888183594
    8. ',line' → logprob: -19.000022888183594
    9. '	line' → logprob: -19.125022888183594
    10. '(Line' → logprob: -19.250022888183594

Token 542: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.7994282795116305e-05
    2. ')
' → logprob: -10.00004768371582
    3. ' )' → logprob: -13.37504768371582
    4. '       ' → logprob: -15.25004768371582
    5. '<|end|>' → logprob: -15.62504768371582
    6. ')#' → logprob: -16.12504768371582
    7. '   ' → logprob: -16.50004768371582
    8. ')**' → logprob: -16.62504768371582
    9. ')`' → logprob: -16.75004768371582
    10. ')return' → logprob: -16.75004768371582

Token 543: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17705893516540527
    2. 'except' → logprob: -2.5520589351654053
    3. ' except' → logprob: -3.0520589351654053
    4. '       ' → logprob: -3.6770589351654053
    5. '<|end|>' → logprob: -4.677059173583984
    6. '<|end|>' → logprob: -6.427059173583984
    7. '	except' → logprob: -7.552059173583984
    8. '            
' → logprob: -8.927059173583984
    9. 'Except' → logprob: -9.927059173583984
    10. '               ' → logprob: -10.302059173583984

Token 544: ' input' (ID: 3422)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14829571545124054
    2. 'if' → logprob: -2.5232956409454346
    3. '       ' → logprob: -3.0232956409454346
    4. ' if' → logprob: -5.148295879364014
    5. 'except' → logprob: -6.023295879364014
    6. 'solver' → logprob: -8.148295402526855
    7. '<|end|>' → logprob: -8.648295402526855
    8. 'q' → logprob: -9.273295402526855
    9. '<|end|>' → logprob: -9.773295402526855
    10. ' except' → logprob: -10.273295402526855

Token 545: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -2.5107177862082608e-05
    2. 'values' → logprob: -11.375024795532227
    3. '_' → logprob: -11.625024795532227
    4. 'Values' → logprob: -12.750024795532227
    5. '_VALUES' → logprob: -14.125024795532227
    6. '_value' → logprob: -14.750024795532227
    7. ' values' → logprob: -15.750024795532227
    8. '_vals' → logprob: -15.875024795532227
    9. 's' → logprob: -16.375024795532227
    10. '_val' → logprob: -16.750024795532227

Token 546: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0010429323883727193
    2. '.' → logprob: -6.87604284286499
    3. '.app' → logprob: -12.126043319702148
    4. 'append' → logprob: -12.751043319702148
    5. '.ap' → logprob: -14.501043319702148
    6. ' .' → logprob: -14.751043319702148
    7. '.Append' → logprob: -15.626043319702148
    8. '_append' → logprob: -15.626043319702148
    9. '.extend' → logprob: -15.751043319702148
    10. '.setdefault' → logprob: -15.751043319702148

Token 547: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.00026300468016415834
    2. 'q' → logprob: -8.250263214111328
    3. '(' → logprob: -13.250263214111328
    4. ' q' → logprob: -17.125263214111328
    5. '	q' → logprob: -17.875263214111328
    6. ' (' → logprob: -18.375263214111328
    7. '?q' → logprob: -20.125263214111328
    8. '[q' → logprob: -20.625263214111328
    9. '$q' → logprob: -21.125263214111328
    10. '(qu' → logprob: -21.125263214111328

Token 548: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2968868613243103
    2. ')' → logprob: -1.421886920928955
    3. '       ' → logprob: -4.296886920928955
    4. '           ' → logprob: -6.671886920928955
    5. 'except' → logprob: -7.546886920928955
    6. ' except' → logprob: -8.921886444091797
    7. ')
' → logprob: -10.171886444091797
    8. ' )
' → logprob: -10.921886444091797
    9. '	except' → logprob: -12.296886444091797
    10. '               ' → logprob: -12.421886444091797

Token 549: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09118600934743881
    2. '           ' → logprob: -2.466186046600342
    3. 'except' → logprob: -6.341186046600342
    4. ' except' → logprob: -7.716186046600342
    5. '   ' → logprob: -11.716185569763184
    6. '	except' → logprob: -11.716185569763184
    7. '<|end|>' → logprob: -11.966185569763184
    8. '	       ' → logprob: -12.466185569763184
    9. '               ' → logprob: -12.716185569763184
    10. '	   ' → logprob: -12.966185569763184

Token 550: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32831114530563354
    2. '       ' → logprob: -1.9533112049102783
    3. 'if' (adapté à ' if') → logprob: -2.0783112049102783
    4. 'except' → logprob: -4.453310966491699
    5. ' if' → logprob: -6.828310966491699
    6. ' except' → logprob: -9.3283109664917
    7. '	       ' → logprob: -9.9533109664917
    8. '   ' → logprob: -10.9533109664917
    9. '	   ' → logprob: -11.4533109664917
    10. '		   ' → logprob: -11.7033109664917

Token 551: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.004620472434908152
    2. ' q' → logprob: -5.379620552062988
    3. '	q' → logprob: -15.879620552062988
    4. ' ' → logprob: -17.129619598388672
    5. '   ' → logprob: -17.379619598388672
    6. ' ' → logprob: -17.629619598388672
    7. '  ' → logprob: -18.004619598388672
    8. '$q' → logprob: -19.254619598388672
    9. '_q' → logprob: -19.379619598388672
    10. 'qu' → logprob: -20.004619598388672

Token 552: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3873063027858734
    2. '==' → logprob: -1.1373063325881958
    3. '==-' → logprob: -7.762306213378906
    4. '=' → logprob: -12.262306213378906
    5. ')==' → logprob: -12.887306213378906
    6. '==
' → logprob: -13.762306213378906
    7. ']==' → logprob: -14.887306213378906
    8. ')' → logprob: -14.887306213378906
    9. '===' → logprob: -15.137306213378906
    10. ' ' → logprob: -15.762306213378906

Token 553: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.25192946195602417
    2. ' -' → logprob: -1.501929521560669
    3. ' ' → logprob: -14.87692928314209
    4. '   ' → logprob: -17.501930236816406
    5. '  ' → logprob: -19.876930236816406
    6. ' ' → logprob: -20.001930236816406
    7. '	' → logprob: -20.376930236816406
    8. '−' → logprob: -20.751930236816406
    9. '
' → logprob: -21.501930236816406
    10. '```' → logprob: -22.126930236816406

Token 554: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.750000953674316
    3. '-' → logprob: -16.875
    4. '   ' → logprob: -20.75
    5. '```' → logprob: -21.0
    6. '۱' → logprob: -21.625
    7. '１' → logprob: -22.0625
    8. '0' → logprob: -22.125
    9. '  ' → logprob: -22.1875
    10. '<|end|>' → logprob: -22.1875

Token 555: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7952033281326294
    2. '               ' → logprob: -1.0452033281326294
    3. ':
' → logprob: -1.6702033281326294
    4. '           ' → logprob: -4.79520320892334
    5. '       ' → logprob: -8.29520320892334
    6. ',' → logprob: -11.04520320892334
    7. '):
' → logprob: -11.04520320892334
    8. ' break' → logprob: -11.29520320892334
    9. ' :
' → logprob: -11.42020320892334
    10. ' :' → logprob: -11.42020320892334

Token 556: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.021952152252197266
    2. 'break' → logprob: -4.271952152252197
    3. '           ' → logprob: -4.896952152252197
    4. ' break' → logprob: -8.271951675415039
    5. '       ' → logprob: -11.021951675415039
    6. '	break' → logprob: -11.646951675415039
    7. '	           ' → logprob: -12.521951675415039
    8. '                   ' → logprob: -13.896951675415039
    9. '		       ' → logprob: -13.896951675415039
    10. '   ' → logprob: -14.396951675415039

Token 557: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.38750600814819336
    2. ' break' → logprob: -1.6375060081481934
    3. '           ' → logprob: -2.1375060081481934
    4. '               ' → logprob: -4.762506008148193
    5. '	break' → logprob: -8.387506484985352
    6. '       ' → logprob: -10.012506484985352
    7. '   ' → logprob: -12.012506484985352
    8. '                   ' → logprob: -12.262506484985352
    9. '_break' → logprob: -12.512506484985352
    10. '
' → logprob: -12.887506484985352

Token 558: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01468837633728981
    2. '   ' → logprob: -4.639688491821289
    3. 'except' → logprob: -6.014688491821289
    4. '
' → logprob: -6.139688491821289
    5. ' except' → logprob: -8.514688491821289
    6. '    
' → logprob: -9.514688491821289
    7. '           ' → logprob: -11.764688491821289
    8. '    ' → logprob: -11.889688491821289
    9. ')' → logprob: -12.014688491821289
    10. '```' → logprob: -12.264688491821289

Token 559: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02753048576414585
    2. '   ' → logprob: -3.7775304317474365
    3. 'except' → logprob: -5.777530670166016
    4. '
' → logprob: -7.152530670166016
    5. '```' → logprob: -8.527530670166016
    6. ' except' → logprob: -9.027530670166016
    7. '    
' → logprob: -10.402530670166016
    8. '           ' → logprob: -11.652530670166016
    9. '    ' → logprob: -11.902530670166016
    10. ')' → logprob: -12.402530670166016

Token 560: ' except' (ID: 6384)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8338961601257324
    2. 'except' (adapté à ' except') → logprob: -1.2088961601257324
    3. ' except' → logprob: -1.7088961601257324
    4. '   ' → logprob: -2.4588961601257324
    5. '
' → logprob: -8.33389663696289
    6. '	except' → logprob: -8.83389663696289
    7. '    
' → logprob: -10.20889663696289
    8. '    ' → logprob: -10.58389663696289
    9. '```' → logprob: -11.45889663696289
    10. ' ' → logprob: -11.95889663696289

Token 561: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.2530886232852936
    2. 'Value' → logprob: -1.5030885934829712
    3. '	Value' → logprob: -7.253088474273682
    4. '(Value' → logprob: -8.12808895111084
    5. '.Value' → logprob: -9.87808895111084
    6. '_Value' → logprob: -10.50308895111084
    7. '<|end|>' → logprob: -10.50308895111084
    8. '<Value' → logprob: -10.62808895111084
    9. '_value' → logprob: -10.75308895111084
    10. ' ' → logprob: -13.25308895111084

Token 562: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.0024758970830589533
    2. 'rror' → logprob: -6.002475738525391
    3. 'Value' → logprob: -15.87747573852539
    4. 'error' → logprob: -17.75247573852539
    5. 'alue' → logprob: -17.87747573852539
    6. 'ror' → logprob: -18.25247573852539
    7. 'LError' → logprob: -18.87747573852539
    8. '	Error' → logprob: -19.25247573852539
    9. 'SError' → logprob: -19.50247573852539
    10. ' Error' → logprob: -20.12747573852539

Token 563: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019425610080361366
    2. ':
' → logprob: -6.2519426345825195
    3. '):' → logprob: -12.37694263458252
    4. '           ' → logprob: -13.00194263458252
    5. '       ' → logprob: -13.25194263458252
    6. '<|end|>' → logprob: -13.25194263458252
    7. ' :' → logprob: -13.87694263458252
    8. ':

' → logprob: -14.12694263458252
    9. ':**' → logprob: -14.87694263458252
    10. '<|end|>' → logprob: -15.12694263458252

Token 564: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003211342031136155
    2. ' continue' → logprob: -5.753211498260498
    3. 'continue' → logprob: -10.62821102142334
    4. '	       ' → logprob: -12.62821102142334
    5. '       ' → logprob: -13.37821102142334
    6. '		' → logprob: -13.87821102142334
    7. '	continue' → logprob: -14.37821102142334
    8. ' ' → logprob: -14.37821102142334
    9. '               ' → logprob: -14.87821102142334
    10. ' continues' → logprob: -15.00321102142334

Token 565: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.8259874582290649
    2. 'continue' (adapté à ' continue') → logprob: -1.325987458229065
    3. ' pass' → logprob: -1.825987458229065
    4. '           ' → logprob: -2.5759873390197754
    5. 'pass' → logprob: -2.8259873390197754
    6. '       ' → logprob: -8.450987815856934
    7. 'break' → logprob: -10.575987815856934
    8. ' break' → logprob: -11.200987815856934
    9. '   ' → logprob: -11.700987815856934
    10. '               ' → logprob: -12.450987815856934

Token 566: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08386114984750748
    2. '
' → logprob: -2.5838611125946045
    3. '    
' → logprob: -5.333861351013184
    4. 'solver' → logprob: -9.708861351013184
    5. '```' → logprob: -10.708861351013184
    6. '        
' → logprob: -11.208861351013184
    7. '<|end|>' → logprob: -11.708861351013184
    8. '  
' → logprob: -11.833861351013184
    9. '
' → logprob: -12.458861351013184
    10. ' solver' → logprob: -12.458861351013184

Token 567: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11829309165477753
    2. '
' → logprob: -2.243293046951294
    3. 'solver' → logprob: -5.493293285369873
    4. '    
' → logprob: -6.993293285369873
    5. ' solver' → logprob: -8.118292808532715
    6. '```' → logprob: -10.493292808532715
    7. '
' → logprob: -10.993292808532715
    8. '  
' → logprob: -11.243292808532715
    9. '        
' → logprob: -11.368292808532715
    10. '_solver' → logprob: -11.368292808532715

Token 568: ' solver' (ID: 63271)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7032658457756042
    2. 'solver' (adapté à ' solver') → logprob: -0.7032658457756042
    3. '
' → logprob: -4.95326566696167
    4. ' solver' → logprob: -5.82826566696167
    5. '    
' → logprob: -10.203266143798828
    6. '```' → logprob: -11.328266143798828
    7. 'sol' → logprob: -12.078266143798828
    8. '_solver' → logprob: -12.203266143798828
    9. ' 
' → logprob: -14.078266143798828
    10. 's' → logprob: -14.328266143798828

Token 569: '.process' (ID: 28604)
  Prédit: '.process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -1.735893965815194e-05
    2. '.' → logprob: -11.000017166137695
    3. '.processor' → logprob: -16.375017166137695
    4. '.Process' → logprob: -16.375017166137695
    5. '.perform' → logprob: -16.500017166137695
    6. '.mainloop' → logprob: -16.500017166137695
    7. '.processing' → logprob: -17.125017166137695
    8. '.run' → logprob: -17.875017166137695
    9. '.handle' → logprob: -18.000017166137695
    10. 'process' → logprob: -18.000017166137695

Token 570: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.375
    3. '_inputs' → logprob: -17.25
    4. '_output' → logprob: -20.25
    5. '_Input' → logprob: -20.5
    6. 'input' → logprob: -20.75
    7. '(input' → logprob: -20.75
    8. '_in' → logprob: -21.125
    9. '_INPUT' → logprob: -21.625
    10. '_
' → logprob: -21.875

Token 571: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -16.0
    3. ' (' → logprob: -16.375
    4. '(inputs' → logprob: -17.375
    5. '(inp' → logprob: -17.625
    6. '(output' → logprob: -18.125
    7. '[input' → logprob: -18.25
    8. ',input' → logprob: -19.0
    9. '(import' → logprob: -19.0
    10. 'input' → logprob: -19.0

Token 572: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -5.796184723294573e-06
    2. 's' → logprob: -12.375005722045898
    3. '_' → logprob: -13.750005722045898
    4. 'values' → logprob: -15.250005722045898
    5. ')_' → logprob: -16.5000057220459
    6. '_VALUES' → logprob: -17.6250057220459
    7. ' _' → logprob: -17.7500057220459
    8. '_vals' → logprob: -17.8750057220459
    9. '_inputs' → logprob: -19.0000057220459
    10. 'es' → logprob: -19.3750057220459

Token 573: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1307939887046814
    2. ')' → logprob: -2.130794048309326
    3. ')
' → logprob: -5.630794048309326
    4. '    
' → logprob: -9.005793571472168
    5. '
' → logprob: -9.880793571472168
    6. ')s' → logprob: -10.630793571472168
    7. '()' → logprob: -10.630793571472168
    8. '<|end|>' → logprob: -11.255793571472168
    9. '()
' → logprob: -11.380793571472168
    10. 'solver' → logprob: -11.880793571472168

Token 574: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00248909555375576
    2. 'solver' → logprob: -6.00248908996582
    3. '
' → logprob: -12.00248908996582
    4. ' solver' → logprob: -12.50248908996582
    5. '    
' → logprob: -12.87748908996582
    6. '```' → logprob: -14.25248908996582
    7. '_solver' → logprob: -16.00248908996582
    8. 'sol' → logprob: -16.37748908996582
    9. '       ' → logprob: -17.12748908996582
    10. '   ' → logprob: -17.50248908996582

Token 575: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -0.12796370685100555
    2. '   ' → logprob: -2.1279637813568115
    3. ' solver' → logprob: -6.877963542938232
    4. 'sol' → logprob: -13.37796401977539
    5. '  ' → logprob: -13.75296401977539
    6. '```' → logprob: -13.87796401977539
    7. ' ' → logprob: -14.50296401977539
    8. '_solver' → logprob: -15.25296401977539
    9. '
' → logprob: -15.37796401977539
    10. '    
' → logprob: -15.75296401977539

Token 576: '.output' (ID: 27521)
  Prédit: '.output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.output' → logprob: -2.1008713702030946e-06
    2. '.' → logprob: -13.125001907348633
    3. ' .' → logprob: -17.250001907348633
    4. '.input' → logprob: -17.750001907348633
    5. 'output' → logprob: -18.125001907348633
    6. '.Output' → logprob: -19.125001907348633
    7. '.out' → logprob: -19.375001907348633
    8. '.stdout' → logprob: -19.500001907348633
    9. '.outputs' → logprob: -19.500001907348633
    10. '.execute' → logprob: -19.875001907348633

Token 577: '_results' (ID: 31049)
  Prédit: '_results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_results' → logprob: -4.320199877838604e-07
    2. 'results' → logprob: -15.0
    3. '_result' → logprob: -17.75
    4. 'Results' → logprob: -19.0
    5. '_RESULTS' → logprob: -19.125
    6. '```' → logprob: -20.625
    7. ' _' → logprob: -20.875
    8. ' results' → logprob: -20.875
    9. '_res' → logprob: -21.0
    10. '_' → logprob: -21.0

Token 578: '()


' (ID: 29771)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4650907814502716
    2. '<|end|>' → logprob: -1.7150907516479492
    3. '
' → logprob: -2.090090751647949
    4. 'if' → logprob: -3.215090751647949
    5. '()
' → logprob: -3.840090751647949
    6. '(
' → logprob: -5.465090751647949
    7. '()

' → logprob: -7.465090751647949
    8. '(' → logprob: -7.715090751647949
    9. '```' → logprob: -7.965090751647949
    10. '

' → logprob: -8.21509075164795

Token 579: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -7.896309739408025e-07
    2. ' if' → logprob: -14.125000953674316
    3. '```' → logprob: -17.25
    4. 'main' → logprob: -18.25
    5. '
' → logprob: -19.25
    6. '#' → logprob: -20.5
    7. '    
' → logprob: -22.125
    8. 'If' → logprob: -22.375
    9. '<|end|>' → logprob: -22.375
    10. '	if' → logprob: -22.75

Token 580: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.42924800515174866
    2. '__' → logprob: -1.0542479753494263
    3. 'name' → logprob: -8.554247856140137
    4. '_name' → logprob: -8.929247856140137
    5. ' ' → logprob: -9.304247856140137
    6. '_' → logprob: -10.554247856140137
    7. ' ' → logprob: -10.929247856140137
    8. 'Name' → logprob: -10.929247856140137
    9. ''' → logprob: -11.304247856140137
    10. '<|end|>' → logprob: -11.429247856140137

Token 581: 'name' (ID: 897)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6156790256500244
    2. '__' → logprob: -1.1156790256500244
    3. '==' → logprob: -2.1156790256500244
    4. '=="' → logprob: -5.240678787231445
    5. 'name' → logprob: -5.615678787231445
    6. ' __' → logprob: -6.490678787231445
    7. '=='' → logprob: -7.490678787231445
    8. ' =="' → logprob: -9.490678787231445
    9. '_' → logprob: -9.865678787231445
    10. 'main' → logprob: -10.365678787231445

Token 582: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00013035668234806508
    2. '==' → logprob: -9.000130653381348
    3. '__.__' → logprob: -12.625130653381348
    4. ' ==' → logprob: -13.250130653381348
    5. '=="' → logprob: -13.375130653381348
    6. '___' → logprob: -16.62512969970703
    7. '__["' → logprob: -17.00012969970703
    8. '=='' → logprob: -17.12512969970703
    9. '"' → logprob: -17.50012969970703
    10. '____' → logprob: -17.50012969970703

Token 583: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3287332355976105
    2. '==' → logprob: -1.328733205795288
    3. ' ==' → logprob: -4.328733444213867
    4. '=="' → logprob: -6.203733444213867
    5. '=='' → logprob: -9.078733444213867
    6. '=' → logprob: -11.453733444213867
    7. '===' → logprob: -12.078733444213867
    8. '_' → logprob: -12.328733444213867
    9. '___' → logprob: -12.328733444213867
    10. '==
' → logprob: -13.203733444213867

Token 584: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0011746286181733012
    2. ''' → logprob: -6.751174449920654
    3. ' "__' → logprob: -12.501174926757812
    4. '__' → logprob: -14.126174926757812
    5. ' '__' → logprob: -18.126174926757812
    6. '"name' → logprob: -18.126174926757812
    7. '"class' → logprob: -18.501174926757812
    8. '"user' → logprob: -18.626174926757812
    9. '   ' → logprob: -18.876174926757812
    10. '"_' → logprob: -19.126174926757812

Token 585: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.9361264946837764e-07
    2. '__' → logprob: -16.875
    3. 'name' → logprob: -17.625
    4. ' main' → logprob: -18.125
    5. '_main' → logprob: -20.25
    6. 'ma' → logprob: -21.25
    7. '"' → logprob: -21.5
    8. '-main' → logprob: -21.875
    9. '	main' → logprob: -21.875
    10. 'built' → logprob: -21.875

Token 586: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.10037888586521149
    2. '__' → logprob: -2.35037899017334
    3. '__':
' → logprob: -8.72537899017334
    4. '__.' → logprob: -12.85037899017334
    5. '__["' → logprob: -12.97537899017334
    6. '__.__' → logprob: -13.22537899017334
    7. '__:' → logprob: -13.97537899017334
    8. '__
' → logprob: -14.22537899017334
    9. '__
' → logprob: -14.22537899017334
    10. '__("' → logprob: -15.10037899017334

Token 587: '   ' (ID: 271)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.38311201333999634
    2. 'main' → logprob: -1.3831119537353516
    3. '__' → logprob: -2.8831119537353516
    4. ''' → logprob: -4.508111953735352
    5. ' main' → logprob: -7.883111953735352
    6. '   ' → logprob: -9.508111953735352
    7. '_main' → logprob: -11.383111953735352
    8. ' "__' → logprob: -11.383111953735352
    9. '	main' → logprob: -12.883111953735352
    10. ''m' → logprob: -13.008111953735352

Token 588: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.000553151941858232
    2. ' main' → logprob: -7.500553131103516
    3. '   ' → logprob: -16.250553131103516
    4. '	main' → logprob: -16.750553131103516
    5. '_main' → logprob: -21.875553131103516
    6. 'm' → logprob: -22.625553131103516
    7. '.main' → logprob: -22.750553131103516
    8. 'maine' → logprob: -22.875553131103516
    9. 'ma' → logprob: -23.250553131103516
    10. '(main' → logprob: -23.375553131103516

Token 589: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 587
Tokens correctement prédits (1ère position, stricte): 248
Tokens correctement prédits (1ère position, avec adaptation): 272
Tokens correctement prédits (top 10): 462
Précision stricte (1ère position): 42.25%
Précision adaptée (1ère position): 46.34%
Précision (top 10): 78.71%
================================================================================
