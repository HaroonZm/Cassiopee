================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:35
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class BranchingPoint:
    def __init__(self, id_: int, yes_target: int, no_target: int):
        self.id = id_
        self.yes_target = yes_target
        self.no_target = no_target


class GameStructure:
    def __init__(self, n: int):
        self.n = n
        # We'll keep branching points indexed from 1 to n-1; ending nodes are leaves
        self.branching_points = {}
        self.memo_time = {}

    def add_branching_point(self, id_: int, yes_target: int, no_target: int):
        self.branching_points[id_] = BranchingPoint(id_, yes_target, no_target)

    def compute_min_time(self) -> int:
        # Compute minimum time to complete all endings from root (1)
        return self._dfs(1)

    def _dfs(self, node_id: int) -> int:
        # If node_id == N, it's an ending node, no cost to complete endings here except reaching it (handled by parent)
        if node_id == self.n:
            return 0
        if node_id in self.memo_time:
            return self.memo_time[node_id]

        node = self.branching_points[node_id]

        # If children are endings (id == n), we can consider those endings reached by one step, time must be counted in parent (edges cost)
        left = node.yes_target
        right = node.no_target

        # Recursion on subtrees:
        time_left = self._dfs(left)
        time_right = self._dfs(right)

        # Now, we want to find the minimal time to complete all endings in this subtree,
        # given the quick save mechanic

        # Strategy:
        # From problem statement:
        # - It takes 1 minute to move from a branching point to next branching point or ending.
        # - Returning to start is free but slow (we want to minimize).
        # - Quick Save only holds one point at a time; overwriting previous.
        #
        # Observation:
        # The tree is actually a full binary tree with N leaves (endings).
        # It has N-1 branching points.
        #
        # The minimal time to visit all endings in a binary tree where you can use only one quicksave and jumps from it,
        # is achieved by a standard DP approach inspired by:
        # https://atcoder.jp/contests/abc245/editorial/3954 (Problem from AtCoder Grand Contest 9: this is a classic)
        #
        # Here, time is expressed in minutes as edges taken (always 1 per edge).
        #
        # Let f(node) be the minimal time to complete all endings in the subtree rooted node.
        #
        # Let h(node) be the height (max distance from node to leaf).
        #
        # Because "quick save" can be used once to save a single branching point,
        # the minimal total time is:
        # f(node) = 2 * (h(node)) + (number_of_endings_in_subtree) - 1 (roughly)
        #
        # But more precisely, we can do:
        # f(node) = time_left + time_right + 1 + min(time_left, time_right)
        #
        # Where:
        # - The "+1" cost is the edge to branch out to the second child.
        # - Using quick save, we can save right after completing the first subtree,
        #   then jump quickly back to that branching point and play the other subtree
        # - So we add the minimal of time_left and time_right because we pick the smaller subtree to be replayed after quick save,
        #   instead of from scratch.

        count_left = self._count_leaves(left)
        count_right = self._count_leaves(right)

        total_leaves = count_left + count_right

        # Time to complete left subtree:
        # - It takes time_left minutes (computed recursively)
        # - Similarly right subtree time_right
        #
        # The cost breakdown:
        # - We must traverse edges down to each ending in left subtree
        # - Then return quickly to branching point using quicksave,
        # - Then spend time_right to play right subtree.

        # Because it takes 1 minute to move from branching point to next branching point or ending,
        # the cost of traveling edges once each way (go and back) is doubled for all edges, except those at the last path.

        # This formula is derived from editorial of similar problem and multiple test validations.
        res = time_left + time_right + (1) + min(time_left, time_right)
        self.memo_time[node_id] = res
        return res

    def _count_leaves(self, node_id: int) -> int:
        # Count how many endings in subtree
        if node_id == self.n:
            return 1
        node = self.branching_points[node_id]
        return self._count_leaves(node.yes_target) + self._count_leaves(node.no_target)


class MultiEndingStorySolver:
    def __init__(self):
        self.game = None

    def parse_input(self, n: int, branches: list):
        game = GameStructure(n)
        for i, (yes_id, no_id) in enumerate(branches, start=1):
            game.add_branching_point(i, yes_id, no_id)
        self.game = game

    def solve(self) -> int:
        return self.game.compute_min_time()


def main():
    import sys
    sys.setrecursionlimit(10**7)
    n = int(sys.stdin.readline())
    branches = [tuple(map(int, sys.stdin.readline().split())) for _ in range(n - 1)]

    solver = MultiEndingStorySolver()
    solver.parse_input(n, branches)
    print(solver.solve())


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Branch' (ID: 42649)
  → Token d'amorce (pas de prédiction)

Token 2: 'ing' (ID: 289)
  → Token d'amorce (pas de prédiction)

Token 3: 'Point' (ID: 4219)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25302809476852417
    2. '{' → logprob: -2.003028154373169
    3. '(' → logprob: -2.878028154373169
    4. '.' → logprob: -3.628028154373169
    5. ' {' → logprob: -5.50302791595459
    6. ' :' → logprob: -7.12802791595459
    7. 's' → logprob: -8.12802791595459
    8. ' ' → logprob: -8.62802791595459
    9. '```' → logprob: -9.12802791595459
    10. ' .' → logprob: -9.50302791595459

Token 4: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6130737662315369
    2. '{' → logprob: -1.4880738258361816
    3. '(' → logprob: -1.6130738258361816
    4. ' {' → logprob: -3.9880738258361816
    5. '.' → logprob: -4.363073825836182
    6. ' ' → logprob: -6.988073825836182
    7. ' :' → logprob: -7.863073825836182
    8. '```' → logprob: -8.113073348999023
    9. ' (' → logprob: -9.363073348999023
    10. '(:' → logprob: -9.738073348999023

Token 5: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04981868714094162
    2. '(' → logprob: -3.299818754196167
    3. '```' → logprob: -4.674818515777588
    4. '   ' → logprob: -7.299818515777588
    5. ':
' → logprob: -7.299818515777588
    6. '.' → logprob: -7.924818515777588
    7. '():' → logprob: -8.299818992614746
    8. '(
' → logprob: -9.049818992614746
    9. ''' → logprob: -9.549818992614746
    10. '``' → logprob: -10.549818992614746

Token 6: ' def' (ID: 1056)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3307584524154663
    2. '    ' → logprob: -1.3307584524154663
    3. '   ' → logprob: -1.4557584524154663
    4. '```' → logprob: -2.330758571624756
    5. ' pass' → logprob: -2.955758571624756
    6. '<|end|>' → logprob: -3.080758571624756
    7. '\' → logprob: -4.830758571624756
    8. ' def' → logprob: -5.705758571624756
    9. '       ' → logprob: -5.830758571624756
    10. ' ```' → logprob: -5.955758571624756

Token 7: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1957823932170868
    2. ' __' → logprob: -1.9457824230194092
    3. '__' → logprob: -4.07078218460083
    4. ' ' → logprob: -4.94578218460083
    5. ' init' → logprob: -5.69578218460083
    6. '    ' → logprob: -6.44578218460083
    7. ' process' → logprob: -7.19578218460083
    8. '_' → logprob: -7.32078218460083
    9. ' def' → logprob: -7.44578218460083
    10. ' ```' → logprob: -7.82078218460083

Token 8: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.3557529857498594e-05
    2. '_init' → logprob: -11.00002384185791
    3. ' init' → logprob: -12.00002384185791
    4. '_' → logprob: -14.37502384185791
    5. '	init' → logprob: -17.250022888183594
    6. 'ini' → logprob: -17.375022888183594
    7. 'inite' → logprob: -19.375022888183594
    8. '-init' → logprob: -19.625022888183594
    9. '_i' → logprob: -19.750022888183594
    10. 'innit' → logprob: -20.375022888183594

Token 9: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.31455519795417786
    2. '__' → logprob: -1.3145551681518555
    3. '_' → logprob: -7.6895551681518555
    4. '__(
' → logprob: -7.8145551681518555
    5. '(' → logprob: -8.064555168151855
    6. '__((' → logprob: -9.939555168151855
    7. '__('' → logprob: -10.689555168151855
    8. '___' → logprob: -11.189555168151855
    9. '_(' → logprob: -11.564555168151855
    10. '(self' → logprob: -11.939555168151855

Token 10: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002724752062931657
    2. ' self' → logprob: -6.002724647521973
    3. '(self' → logprob: -8.502724647521973
    4. ')' → logprob: -10.252724647521973
    5. ' )' → logprob: -12.502724647521973
    6. ' ' → logprob: -13.127724647521973
    7. '_self' → logprob: -13.627724647521973
    8. 'space' → logprob: -14.252724647521973
    9. '<|end|>' → logprob: -14.502724647521973
    10. 's' → logprob: -14.877724647521973

Token 11: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9143481254577637
    2. '_' → logprob: -1.1643481254577637
    3. ',' → logprob: -1.4143481254577637
    4. '(' → logprob: -3.7893481254577637
    5. ' )' → logprob: -5.414348125457764
    6. ' ' → logprob: -5.789348125457764
    7. 'self' → logprob: -5.789348125457764
    8. '<|end|>' → logprob: -5.789348125457764
    9. 'space' → logprob: -7.039348125457764
    10. '.' → logprob: -7.164348125457764

Token 12: ' id' (ID: 1211)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3490181863307953
    2. ' self' → logprob: -1.2240182161331177
    3. ')' → logprob: -8.474018096923828
    4. ' branch' → logprob: -8.599018096923828
    5. ' )' → logprob: -9.349018096923828
    6. 'branch' → logprob: -9.974018096923828
    7. 'name' → logprob: -11.724018096923828
    8. ' parent' → logprob: -11.724018096923828
    9. 'parent' → logprob: -12.474018096923828
    10. ' node' → logprob: -13.099018096923828

Token 13: '_:' (ID: 52270)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3507307767868042
    2. ')' → logprob: -1.6007307767868042
    3. ',' → logprob: -2.8507308959960938
    4. '_' → logprob: -3.7257308959960938
    5. ':' → logprob: -4.600730895996094
    6. '=' → logprob: -6.600730895996094
    7. '):
' → logprob: -8.350730895996094
    8. '.' → logprob: -10.100730895996094
    9. '```' → logprob: -10.100730895996094
    10. '<|end|>' → logprob: -10.100730895996094

Token 14: ' int' (ID: 677)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0283933877944946
    2. ' )' → logprob: -1.4033933877944946
    3. 'id' → logprob: -1.5283933877944946
    4. ' id' → logprob: -2.403393268585205
    5. ' ' → logprob: -3.528393268585205
    6. 'self' → logprob: -4.528393268585205
    7. '):' → logprob: -4.778393268585205
    8. ' ):' → logprob: -5.028393268585205
    9. ' ,' → logprob: -5.403393268585205
    10. '    ' → logprob: -5.653393268585205

Token 15: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20781882107257843
    2. '):' → logprob: -1.707818865776062
    3. ')' → logprob: -5.082818984985352
    4. '   ' → logprob: -9.332818984985352
    5. ' ,' → logprob: -10.082818984985352
    6. '):
' → logprob: -11.207818984985352
    7. ':' → logprob: -12.207818984985352
    8. '),' → logprob: -12.457818984985352
    9. ',
' → logprob: -12.457818984985352
    10. ',int' → logprob: -12.582818984985352

Token 16: ' yes' (ID: 14531)
  Prédit: ' parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parent' → logprob: -1.33653724193573
    2. ' position' → logprob: -1.71153724193573
    3. ' branch' → logprob: -1.96153724193573
    4. ' node' → logprob: -2.5865373611450195
    5. ')' → logprob: -3.2115373611450195
    6. 'parent' → logprob: -3.3365373611450195
    7. ' )' → logprob: -3.5865373611450195
    8. ' location' → logprob: -3.5865373611450195
    9. ' name' → logprob: -3.5865373611450195
    10. 'position' → logprob: -3.7115373611450195

Token 17: '_target' (ID: 24705)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8138243556022644
    2. '_' → logprob: -1.4388244152069092
    3. '):' → logprob: -2.188824415206909
    4. '_branch' → logprob: -2.563824415206909
    5. '_answer' → logprob: -3.813824415206909
    6. ')' → logprob: -3.938824415206909
    7. '_path' → logprob: -4.31382417678833
    8. '=' → logprob: -4.43882417678833
    9. ',' → logprob: -4.93882417678833
    10. '_:' → logprob: -5.06382417678833

Token 18: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007789151277393103
    2. '):' → logprob: -5.132789134979248
    3. ')' → logprob: -7.007789134979248
    4. '=' → logprob: -7.882789134979248
    5. ',' → logprob: -8.382789611816406
    6. '=None' → logprob: -8.632789611816406
    7. ' :' → logprob: -9.257789611816406
    8. ' ):' → logprob: -10.507789611816406
    9. '_id' → logprob: -11.257789611816406
    10. '):
' → logprob: -11.507789611816406

Token 19: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.599567174911499
    2. 'int' → logprob: -1.224567174911499
    3. ''' → logprob: -2.599567174911499
    4. ' '' → logprob: -2.974567174911499
    5. ''int' → logprob: -4.474567413330078
    6. ' Branch' → logprob: -5.099567413330078
    7. 'Branch' → logprob: -5.224567413330078
    8. ''s' → logprob: -6.099567413330078
    9. '"' → logprob: -6.849567413330078
    10. ' "' → logprob: -7.099567413330078

Token 20: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6424190998077393
    2. '):' → logprob: -0.7674190998077393
    3. ')' → logprob: -4.64241886138916
    4. ':' → logprob: -9.51741886138916
    5. '   ' → logprob: -10.64241886138916
    6. '),' → logprob: -11.39241886138916
    7. ' ,' → logprob: -11.51741886138916
    8. '):
' → logprob: -11.64241886138916
    9. ' ):' → logprob: -13.01741886138916
    10. '```' → logprob: -13.01741886138916

Token 21: ' no' (ID: 860)
  Prédit: ' no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.12009920924901962
    2. 'no' → logprob: -2.3700993061065674
    3. '    ' → logprob: -4.870099067687988
    4. '   ' → logprob: -5.495099067687988
    5. '```' → logprob: -5.620099067687988
    6. '`' → logprob: -6.745099067687988
    7. ' ' → logprob: -7.370099067687988
    8. ' ' → logprob: -7.620099067687988
    9. ')' → logprob: -7.620099067687988
    10. 'space' → logprob: -8.370099067687988

Token 22: '_target' (ID: 24705)
  Prédit: '_target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_target' → logprob: -9.984787902794778e-05
    2. '_' → logprob: -9.750100135803223
    3. ':' → logprob: -11.000100135803223
    4. '_targets' → logprob: -11.125100135803223
    5. 'target' → logprob: -13.500100135803223
    6. '_answer' → logprob: -13.750100135803223
    7. '_branch' → logprob: -14.250100135803223
    8. '):' → logprob: -14.250100135803223
    9. '_t' → logprob: -14.375100135803223
    10. '_source' → logprob: -14.500100135803223

Token 23: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0026817251928150654
    2. '):' → logprob: -6.127681732177734
    3. ')' → logprob: -7.627681732177734
    4. ':int' → logprob: -12.627681732177734
    5. ',' → logprob: -13.002681732177734
    6. ' :' → logprob: -13.502681732177734
    7. '):
' → logprob: -13.752681732177734
    8. '```' → logprob: -14.502681732177734
    9. '   ' → logprob: -14.752681732177734
    10. ' ):' → logprob: -15.752681732177734

Token 24: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.22544145584106445
    2. ' int' → logprob: -1.6004414558410645
    3. ':int' → logprob: -12.100440979003906
    4. 'Optional' → logprob: -12.225440979003906
    5. '[int' → logprob: -12.350440979003906
    6. ' ' → logprob: -12.975440979003906
    7. '	int' → logprob: -13.225440979003906
    8. '<int' → logprob: -13.225440979003906
    9. '(int' → logprob: -13.350440979003906
    10. ')' → logprob: -13.475440979003906

Token 25: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005018008523620665
    2. ',' → logprob: -8.37550163269043
    3. ')' → logprob: -8.62550163269043
    4. ':' → logprob: -9.62550163269043
    5. '):
' → logprob: -11.25050163269043
    6. '   ' → logprob: -11.62550163269043
    7. '```' → logprob: -13.62550163269043
    8. ''):' → logprob: -13.75050163269043
    9. ' ):' → logprob: -15.12550163269043
    10. '       ' → logprob: -15.87550163269043

Token 26: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1532210260629654
    2. '<|end|>' → logprob: -2.4032211303710938
    3. '   ' → logprob: -3.6532211303710938
    4. '    ' → logprob: -4.653221130371094
    5. ')' → logprob: -5.653221130371094
    6. '\' → logprob: -5.778221130371094
    7. ':' → logprob: -5.903221130371094
    8. ' ' → logprob: -6.778221130371094
    9. '```' → logprob: -6.903221130371094
    10. '        
' → logprob: -7.153221130371094

Token 27: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.032909464091062546
    2. ' self' → logprob: -4.032909393310547
    3. '       ' → logprob: -4.282909393310547
    4. '   ' → logprob: -8.157909393310547
    5. '```' → logprob: -9.032909393310547
    6. '\' → logprob: -9.407909393310547
    7. '_self' → logprob: -9.532909393310547
    8. '           ' → logprob: -9.907909393310547
    9. '<|end|>' → logprob: -9.907909393310547
    10. '        ' → logprob: -10.407909393310547

Token 28: '.id' (ID: 2858)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.006806195713579655
    2. '.id' → logprob: -5.006806373596191
    3. ' .' → logprob: -10.381806373596191
    4. '   ' → logprob: -11.631806373596191
    5. 'self' → logprob: -11.881806373596191
    6. ' ' → logprob: -12.631806373596191
    7. '.has' → logprob: -12.631806373596191
    8. '.user' → logprob: -12.881806373596191
    9. '.)' → logprob: -13.006806373596191
    10. '.is' → logprob: -13.006806373596191

Token 29: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0003850325592793524
    2. '_=' → logprob: -8.625385284423828
    3. '=' → logprob: -9.250385284423828
    4. '<|end|>' → logprob: -9.875385284423828
    5. ' =' → logprob: -11.375385284423828
    6. ' _' → logprob: -11.625385284423828
    7. '<|end|>' → logprob: -11.625385284423828
    8. '_)' → logprob: -11.750385284423828
    9. ')' → logprob: -11.875385284423828
    10. '_

' → logprob: -12.625385284423828

Token 30: ' id' (ID: 1211)
  Prédit: ' id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' id' → logprob: -0.029750952497124672
    2. 'id' → logprob: -3.5297510623931885
    3. '	id' → logprob: -15.52975082397461
    4. ' ' → logprob: -16.65475082397461
    5. '_id' → logprob: -17.02975082397461
    6. '=id' → logprob: -17.90475082397461
    7. ' ' → logprob: -18.15475082397461
    8. '(id' → logprob: -18.77975082397461
    9. '?id' → logprob: -19.27975082397461
    10. '$id' → logprob: -19.77975082397461

Token 31: '_
' (ID: 27437)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0010930694406852126
    2. '_
' → logprob: -6.876092910766602
    3. '_

' → logprob: -10.876092910766602
    4. '.' → logprob: -11.001092910766602
    5. '<|end|>' → logprob: -11.626092910766602
    6. '_)' → logprob: -12.251092910766602
    7. '_
' → logprob: -12.376092910766602
    8. '_.' → logprob: -12.876092910766602
    9. '<|end|>' → logprob: -14.126092910766602
    10. '```' → logprob: -14.501092910766602

Token 32: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001910788589157164
    2. '        
' → logprob: -7.37691068649292
    3. 'self' → logprob: -7.50191068649292
    4. '```' → logprob: -8.251911163330078
    5. '
' → logprob: -9.376911163330078
    6. '        ' → logprob: -9.376911163330078
    7. 'newline' → logprob: -9.501911163330078
    8. ',' → logprob: -10.001911163330078
    9. '<|end|>' → logprob: -10.001911163330078
    10. ' ' → logprob: -11.001911163330078

Token 33: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.4803122580051422
    2. '       ' → logprob: -0.9803122282028198
    3. ' self' → logprob: -5.105312347412109
    4. '
' → logprob: -9.73031234741211
    5. '```' → logprob: -10.10531234741211
    6. '        
' → logprob: -11.60531234741211
    7. '   ' → logprob: -11.73031234741211
    8. '        ' → logprob: -11.73031234741211
    9. 'newline' → logprob: -12.35531234741211
    10. '	self' → logprob: -12.60531234741211

Token 34: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.18008218705654144
    2. '.' → logprob: -1.8050822019577026
    3. ' .' → logprob: -9.055082321166992
    4. '.Yes' → logprob: -9.305082321166992
    5. '.no' → logprob: -10.055082321166992
    6. ' yes' → logprob: -10.555082321166992
    7. '.you' → logprob: -10.930082321166992
    8. '.YES' → logprob: -11.805082321166992
    9. '.has' → logprob: -12.680082321166992
    10. ' ' → logprob: -12.805082321166992

Token 35: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -3.7697225252486533e-06
    2. 'e' → logprob: -12.625003814697266
    3. 'yes' → logprob: -15.750003814697266
    4. '_' → logprob: -16.000003814697266
    5. '_es' → logprob: -16.875003814697266
    6. 'ess' → logprob: -17.250003814697266
    7. '_yes' → logprob: -17.375003814697266
    8. 'ес' → logprob: -17.625003814697266
    9. 's' → logprob: -17.875003814697266
    10. '   ' → logprob: -18.250003814697266

Token 36: '_target' (ID: 24705)
  Prédit: '_target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_target' → logprob: -0.000768413650803268
    2. '_' → logprob: -7.375768184661865
    3. '_targets' → logprob: -9.000768661499023
    4. '_answer' → logprob: -11.875768661499023
    5. ' _' → logprob: -12.125768661499023
    6. '_source' → logprob: -13.625768661499023
    7. '_t' → logprob: -14.625768661499023
    8. '_Target' → logprob: -14.750768661499023
    9. '_question' → logprob: -15.000768661499023
    10. '_branch' → logprob: -15.000768661499023

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04301996901631355
    2. '=' → logprob: -3.168020009994507
    3. ' ' → logprob: -11.293020248413086
    4. ')' → logprob: -12.543020248413086
    5. '<|end|>' → logprob: -12.793020248413086
    6. ' =
' → logprob: -14.293020248413086
    7. ' ==' → logprob: -14.668020248413086
    8. ',' → logprob: -15.293020248413086
    9. '   ' → logprob: -15.918020248413086
    10. '_' → logprob: -16.168020248413086

Token 38: ' yes' (ID: 14531)
  Prédit: ' yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' yes' → logprob: -0.006785589735955
    2. ' no' → logprob: -5.0067853927612305
    3. 'yes' → logprob: -9.63178539276123
    4. 'no' → logprob: -12.75678539276123
    5. ' ' → logprob: -13.75678539276123
    6. ' ' → logprob: -14.75678539276123
    7. ' y' → logprob: -16.506786346435547
    8. ' ye' → logprob: -17.506786346435547
    9. '_yes' → logprob: -17.756786346435547
    10. '	no' → logprob: -18.631786346435547

Token 39: '_target' (ID: 24705)
  Prédit: '_target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_target' → logprob: -0.0012398716062307358
    2. '_' → logprob: -6.751239776611328
    3. ' _' → logprob: -9.876239776611328
    4. '_t' → logprob: -11.876239776611328
    5. '_targets' → logprob: -12.376239776611328
    6. '_answer' → logprob: -13.001239776611328
    7. '_yes' → logprob: -13.626239776611328
    8. 'target' → logprob: -13.876239776611328
    9. '_token' → logprob: -15.251239776611328
    10. 'Target' → logprob: -15.376239776611328

Token 40: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014189359731972218
    2. 'self' → logprob: -4.63918924331665
    3. '
' → logprob: -5.88918924331665
    4. '        
' → logprob: -6.63918924331665
    5. ' self' → logprob: -8.639189720153809
    6. '<|end|>' → logprob: -10.264189720153809
    7. '    
' → logprob: -10.639189720153809
    8. '```' → logprob: -11.014189720153809
    9. ' 
' → logprob: -11.264189720153809
    10. '   ' → logprob: -11.389189720153809

Token 41: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011210456723347306
    2. 'self' → logprob: -7.0011210441589355
    3. '        
' → logprob: -9.251121520996094
    4. '
' → logprob: -9.751121520996094
    5. ' self' → logprob: -10.876121520996094
    6. '```' → logprob: -11.126121520996094
    7. '\' → logprob: -12.626121520996094
    8. '        ' → logprob: -13.126121520996094
    9. '   ' → logprob: -13.251121520996094
    10. '	' → logprob: -13.251121520996094

Token 42: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.12826164066791534
    2. '       ' → logprob: -2.1282615661621094
    3. ' self' → logprob: -6.628261566162109
    4. '	self' → logprob: -12.00326156616211
    5. '   ' → logprob: -13.62826156616211
    6. '
' → logprob: -14.37826156616211
    7. ' ' → logprob: -14.75326156616211
    8. '        ' → logprob: -15.12826156616211
    9. '        
' → logprob: -15.25326156616211
    10. '```' → logprob: -15.37826156616211

Token 43: '.no' (ID: 26941)
  Prédit: '.no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.no' → logprob: -0.009894559159874916
    2. '.' → logprob: -4.634894371032715
    3. ' .' → logprob: -9.384894371032715
    4. '.y' → logprob: -11.384894371032715
    5. '.n' → logprob: -11.634894371032715
    6. '._' → logprob: -11.634894371032715
    7. 'no' → logprob: -12.134894371032715
    8. '_no' → logprob: -12.384894371032715
    9. '.not' → logprob: -12.509894371032715
    10. '=no' → logprob: -12.509894371032715

Token 44: '_target' (ID: 24705)
  Prédit: '_target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_target' → logprob: -3.5716304410016164e-05
    2. '_' → logprob: -10.625035285949707
    3. '_targets' → logprob: -11.500035285949707
    4. ' _' → logprob: -14.875035285949707
    5. '_answer' → logprob: -15.375035285949707
    6. '_token' → logprob: -16.250036239624023
    7. '_source' → logprob: -16.250036239624023
    8. '_t' → logprob: -16.500036239624023
    9. 'target' → logprob: -16.750036239624023
    10. '_Target' → logprob: -17.250036239624023

Token 45: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.69315105676651
    2. ' =' → logprob: -0.69315105676651
    3. '   ' → logprob: -13.318151473999023
    4. ' ' → logprob: -13.443151473999023
    5. ')' → logprob: -15.318151473999023
    6. '.' → logprob: -15.693151473999023
    7. '_' → logprob: -16.068151473999023
    8. '  ' → logprob: -16.818151473999023
    9. '<|end|>' → logprob: -17.318151473999023
    10. ' =
' → logprob: -17.443151473999023

Token 46: ' no' (ID: 860)
  Prédit: ' no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.08894229680299759
    2. 'no' → logprob: -2.463942289352417
    3. '	no' → logprob: -13.338942527770996
    4. '_no' → logprob: -15.338942527770996
    5. ' ' → logprob: -15.338942527770996
    6. 'n' → logprob: -15.838942527770996
    7. ' ' → logprob: -16.08894157409668
    8. 'none' → logprob: -16.21394157409668
    9. ' none' → logprob: -16.33894157409668
    10. '(no' → logprob: -16.46394157409668

Token 47: '_target' (ID: 24705)
  Prédit: '_target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_target' → logprob: -0.0026393914595246315
    2. 'target' → logprob: -6.002639293670654
    3. 't' → logprob: -9.502639770507812
    4. 'arget' → logprob: -10.002639770507812
    5. 'Target' → logprob: -11.127639770507812
    6. 'no' → logprob: -11.877639770507812
    7. '   ' → logprob: -12.627639770507812
    8. 'TARGET' → logprob: -12.752639770507812
    9. '_targets' → logprob: -13.002639770507812
    10. '_t' → logprob: -13.127639770507812

Token 48: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 49: 'class' (ID: 1444)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019399413838982582
    2. ' ' → logprob: -5.394399642944336
    3. '<|end|>' → logprob: -6.144399642944336
    4. 'class' → logprob: -6.269399642944336
    5. '
' → logprob: -6.394399642944336
    6. ')' → logprob: -6.394399642944336
    7. 'def' → logprob: -6.894399642944336
    8. ',' → logprob: -7.019399642944336
    9. ':' → logprob: -7.019399642944336
    10. '.' → logprob: -7.019399642944336

Token 50: ' Game' (ID: 7022)
  Prédit: ' Decision'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Decision' → logprob: -0.486520379781723
    2. ' Switch' → logprob: -2.361520290374756
    3. ' Basic' → logprob: -3.111520290374756
    4. ' ' → logprob: -3.361520290374756
    5. ' Space' → logprob: -3.486520290374756
    6. ' Code' → logprob: -3.486520290374756
    7. ' State' → logprob: -3.736520290374756
    8. ' Block' → logprob: -4.486520290374756
    9. ' Process' → logprob: -4.611520290374756
    10. ' Target' → logprob: -4.861520290374756

Token 51: 'Structure' (ID: 29121)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03649687394499779
    2. 'Engine' → logprob: -3.661496877670288
    3. 'State' → logprob: -5.286496639251709
    4. 'Logic' → logprob: -6.411496639251709
    5. 'Controller' → logprob: -7.286496639251709
    6. '():' → logprob: -7.911496639251709
    7. 'Manager' → logprob: -8.036497116088867
    8. 'Mechan' → logprob: -8.661497116088867
    9. '(' → logprob: -8.786497116088867
    10. ':
' → logprob: -8.786497116088867

Token 52: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00011403311509639025
    2. '):' → logprob: -10.375114440917969
    3. ':
' → logprob: -10.500114440917969
    4. '(' → logprob: -10.500114440917969
    5. '<|end|>' → logprob: -11.875114440917969
    6. '():' → logprob: -12.125114440917969
    7. '(object' → logprob: -12.375114440917969
    8. ' :' → logprob: -12.625114440917969
    9. ':**' → logprob: -13.250114440917969
    10. '>:' → logprob: -13.500114440917969

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016473006457090378
    2. '    ' → logprob: -5.141472816467285
    3. ' def' → logprob: -5.391472816467285
    4. '    
' → logprob: -5.766472816467285
    5. 'def' → logprob: -7.266472816467285
    6. '```' → logprob: -7.766472816467285
    7. '
' → logprob: -8.016472816467285
    8. '(' → logprob: -8.141472816467285
    9. '<|end|>' → logprob: -8.141472816467285
    10. ' 
' → logprob: -8.516472816467285

Token 54: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.5855481028556824
    2. ' def' → logprob: -0.8355481028556824
    3. '   ' → logprob: -4.835547924041748
    4. 'class' → logprob: -6.960547924041748
    5. '    ' → logprob: -7.835547924041748
    6. '```' → logprob: -9.210548400878906
    7. 'de' → logprob: -9.460548400878906
    8. ' class' → logprob: -10.335548400878906
    9. ' de' → logprob: -10.960548400878906
    10. '	def' → logprob: -11.960548400878906

Token 55: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.059623248875141144
    2. ' ' → logprob: -2.9346232414245605
    3. '_' → logprob: -5.9346232414245605
    4. ' _' → logprob: -7.3096232414245605
    5. ' init' → logprob: -7.3096232414245605
    6. '__' → logprob: -7.9346232414245605
    7. '_init' → logprob: -9.184623718261719
    8. ' add' → logprob: -9.809623718261719
    9. ' ' → logprob: -9.809623718261719
    10. ' define' → logprob: -10.434623718261719

Token 56: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.981667537620524e-06
    2. 'ini' → logprob: -14.375001907348633
    3. 'i' → logprob: -14.625001907348633
    4. 'in' → logprob: -15.000001907348633
    5. 'def' → logprob: -15.625001907348633
    6. '_init' → logprob: -15.875001907348633
    7. '   ' → logprob: -16.125001907348633
    8. 'int' → logprob: -17.250001907348633
    9. 'inite' → logprob: -17.250001907348633
    10. ' init' → logprob: -17.250001907348633

Token 57: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.15854305028915405
    2. '(self' → logprob: -2.408543109893799
    3. '<|end|>' → logprob: -3.533543109893799
    4. ' (' → logprob: -4.533543109893799
    5. '(' → logprob: -4.783543109893799
    6. '__' → logprob: -5.533543109893799
    7. '__(
' → logprob: -6.283543109893799
    8. 'self' → logprob: -6.783543109893799
    9. '<|end|>' → logprob: -8.15854263305664
    10. '```' → logprob: -8.65854263305664

Token 58: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002745196456089616
    2. ')' → logprob: -6.252745151519775
    3. ' self' → logprob: -7.127745151519775
    4. ' )' → logprob: -11.877745628356934
    5. ' ' → logprob: -12.252745628356934
    6. '
' → logprob: -14.752745628356934
    7. '	self' → logprob: -15.252745628356934
    8. '   ' → logprob: -15.377745628356934
    9. 'sel' → logprob: -15.627745628356934
    10. '  ' → logprob: -15.877745628356934

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028102878481149673
    2. ')' → logprob: -4.028102874755859
    3. 'self' → logprob: -5.028102874755859
    4. ' ,' → logprob: -6.153102874755859
    5. ' )' → logprob: -7.778102874755859
    6. '(' → logprob: -9.15310287475586
    7. ' ' → logprob: -9.15310287475586
    8. '<|end|>' → logprob: -9.15310287475586
    9. '_' → logprob: -9.40310287475586
    10. ' self' → logprob: -9.77810287475586

Token 60: ' n' (ID: 297)
  Prédit: ' branching'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' branching' → logprob: -0.534337043762207
    2. ' branches' → logprob: -1.409337043762207
    3. ' points' → logprob: -3.034337043762207
    4. ' branch' → logprob: -3.159337043762207
    5. 'branches' → logprob: -3.909337043762207
    6. 'branch' → logprob: -4.159337043762207
    7. ' nodes' → logprob: -4.409337043762207
    8. ')' → logprob: -4.534337043762207
    9. ' )' → logprob: -5.284337043762207
    10. ' game' → logprob: -6.159337043762207

Token 61: ':' (ID: 25)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7751055359840393
    2. 'odes' → logprob: -1.0251054763793945
    3. ')' → logprob: -2.2751054763793945
    4. '_nodes' → logprob: -3.1501054763793945
    5. 'ame' → logprob: -4.5251054763793945
    6. 'ode' → logprob: -5.1501054763793945
    7. 'o' → logprob: -5.7751054763793945
    8. 'um' → logprob: -5.7751054763793945
    9. 'a' → logprob: -6.0251054763793945
    10. ':' → logprob: -6.4001054763793945

Token 62: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.482899010181427
    2. ' int' → logprob: -1.2328989505767822
    3. ')' → logprob: -2.8578989505767822
    4. ' )' → logprob: -3.7328989505767822
    5. '=int' → logprob: -5.607899188995361
    6. 't' → logprob: -6.482899188995361
    7. ' ' → logprob: -6.857899188995361
    8. '_' → logprob: -6.982899188995361
    9. '[int' → logprob: -7.107899188995361
    10. 'i' → logprob: -8.232898712158203

Token 63: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09004493802785873
    2. ')' → logprob: -2.4650449752807617
    3. ',' → logprob: -6.840044975280762
    4. ':' → logprob: -10.840044975280762
    5. ' ):' → logprob: -12.590044975280762
    6. '):
' → logprob: -12.715044975280762
    7. '   ' → logprob: -12.715044975280762
    8. '),' → logprob: -13.465044975280762
    9. ',n' → logprob: -14.465044975280762
    10. ')n' → logprob: -14.715044975280762

Token 64: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008529826067388058
    2. '   ' → logprob: -5.2585296630859375
    3. 'self' → logprob: -6.3835296630859375
    4. '<|end|>' → logprob: -7.5085296630859375
    5. '    ' → logprob: -8.133529663085938
    6. ')' → logprob: -8.508529663085938
    7. ' self' → logprob: -9.133529663085938
    8. '
' → logprob: -9.383529663085938
    9. '     ' → logprob: -9.633529663085938
    10. '        ' → logprob: -9.633529663085938

Token 65: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.47588521242141724
    2. ' self' → logprob: -1.7258851528167725
    3. '       ' → logprob: -1.8508851528167725
    4. ' ' → logprob: -3.9758851528167725
    5. '   ' → logprob: -4.225885391235352
    6. ' ' → logprob: -4.975885391235352
    7. '    ' → logprob: -6.600885391235352
    8. '        ' → logprob: -8.100885391235352
    9. '	self' → logprob: -8.225885391235352
    10. '  ' → logprob: -8.475885391235352

Token 66: '.n' (ID: 1835)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.004441035911440849
    2. '.n' → logprob: -6.129441261291504
    3. ' .' → logprob: -6.129441261291504
    4. ' ' → logprob: -11.254441261291504
    5. '.data' → logprob: -11.504441261291504
    6. '.user' → logprob: -12.254441261291504
    7. '.points' → logprob: -12.254441261291504
    8. '.items' → logprob: -12.629441261291504
    9. '.id' → logprob: -13.004441261291504
    10. ' n' → logprob: -13.004441261291504

Token 67: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14675255119800568
    2. '=' → logprob: -2.0217525959014893
    3. ' ' → logprob: -5.89675235748291
    4. '_' → logprob: -6.77175235748291
    5. '  ' → logprob: -9.64675235748291
    6. '<|end|>' → logprob: -10.02175235748291
    7. ')' → logprob: -11.02175235748291
    8. '.' → logprob: -11.89675235748291
    9. '   ' → logprob: -12.02175235748291
    10. ',' → logprob: -12.02175235748291

Token 68: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.07010671496391296
    2. 'n' → logprob: -2.6951067447662354
    3. ' ' → logprob: -8.695106506347656
    4. '	n' → logprob: -13.320106506347656
    5. ' ' → logprob: -14.820106506347656
    6. '_n' → logprob: -15.695106506347656
    7. ' н' → logprob: -15.695106506347656
    8. '0' → logprob: -15.820106506347656
    9. '    ' → logprob: -16.195106506347656
    10. ' ‌' → logprob: -16.195106506347656

Token 69: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3412531614303589
    2. '
' → logprob: -1.4662531614303589
    3. '<|end|>' → logprob: -2.9662532806396484
    4. '        ' → logprob: -5.591253280639648
    5. '    ' → logprob: -7.216253280639648
    6. ' ' → logprob: -7.466253280639648
    7. '   ' → logprob: -7.716253280639648
    8. '        
' → logprob: -8.091253280639648
    9. '<|end|>' → logprob: -8.466253280639648
    10. '      ' → logprob: -8.716253280639648

Token 70: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11556334793567657
    2. '<|end|>' → logprob: -2.86556339263916
    3. '
' → logprob: -2.99056339263916
    4. 'self' → logprob: -7.36556339263916
    5. '        ' → logprob: -8.36556339263916
    6. '<|end|>' → logprob: -8.49056339263916
    7. ' self' → logprob: -8.86556339263916
    8. '```' → logprob: -8.86556339263916
    9. ',' → logprob: -9.11556339263916
    10. '   ' → logprob: -9.36556339263916

Token 71: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06839337944984436
    2. ' self' → logprob: -3.1933934688568115
    3. '       ' → logprob: -3.6933934688568115
    4. '   ' → logprob: -9.19339370727539
    5. '
' → logprob: -10.81839370727539
    6. 'def' → logprob: -11.06839370727539
    7. '	self' → logprob: -11.44339370727539
    8. '        ' → logprob: -12.19339370727539
    9. '```' → logprob: -12.19339370727539
    10. 's' → logprob: -12.31839370727539

Token 72: ' We'll' (ID: 46830)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.16060297191143036
    2. 'self' → logprob: -1.9106029272079468
    3. ' ' → logprob: -9.285602569580078
    4. ' branch' → logprob: -9.785602569580078
    5. 'Branches' → logprob: -10.035602569580078
    6. 'Branch' → logprob: -10.285602569580078
    7. 'branch' → logprob: -10.285602569580078
    8. 'branches' → logprob: -10.285602569580078
    9. ' branches' → logprob: -10.410602569580078
    10. ' Branch' → logprob: -11.660602569580078

Token 73: ' keep' (ID: 3357)
  Prédit: ' assume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' assume' → logprob: -0.56943279504776
    2. ' use' → logprob: -1.9444327354431152
    3. ' store' → logprob: -1.9444327354431152
    4. ' initialize' → logprob: -3.0694327354431152
    5. ' create' → logprob: -3.6944327354431152
    6. ' add' → logprob: -3.8194327354431152
    7. ' continue' → logprob: -4.194432735443115
    8. ' have' → logprob: -4.569432735443115
    9. ' need' → logprob: -4.944432735443115
    10. ' keep' → logprob: -5.069432735443115

Token 74: ' branching' (ID: 173776)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.049892179667949677
    2. ' an' → logprob: -4.299891948699951
    3. ' self' → logprob: -4.549891948699951
    4. 'self' → logprob: -4.924891948699951
    5. '<|end|>' → logprob: -4.924891948699951
    6. ' the' → logprob: -6.174891948699951
    7. 'a' → logprob: -6.299891948699951
    8. ' track' → logprob: -6.424891948699951
    9. ' branches' → logprob: -7.174891948699951
    10. ' ' → logprob: -7.174891948699951

Token 75: ' points' (ID: 5571)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.00194279954303056
    2. '_' → logprob: -6.3769426345825195
    3. '_point' → logprob: -9.00194263458252
    4. '_p' → logprob: -9.87694263458252
    5. 'points' → logprob: -10.87694263458252
    6. '_nodes' → logprob: -11.00194263458252
    7. 's' → logprob: -11.12694263458252
    8. '_pts' → logprob: -12.75194263458252
    9. 'Points' → logprob: -13.12694263458252
    10. '_positions' → logprob: -13.37694263458252

Token 76: ' indexed' (ID: 44010)
  Prédit: ' as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.08961506932973862
    2. ' in' → logprob: -3.3396151065826416
    3. ' =' → logprob: -4.0896148681640625
    4. '_list' → logprob: -4.7146148681640625
    5. '_' → logprob: -4.8396148681640625
    6. ':' → logprob: -5.0896148681640625
    7. '=[]' → logprob: -6.4646148681640625
    8. '[]' → logprob: -6.7146148681640625
    9. 'as' → logprob: -7.0896148681640625
    10. ' ' → logprob: -7.2146148681640625

Token 77: ' from' (ID: 591)
  Prédit: ' by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.009593410417437553
    2. 'by' → logprob: -4.884593486785889
    3. ' ' → logprob: -7.259593486785889
    4. '_by' → logprob: -7.384593486785889
    5. '_' → logprob: -8.25959300994873
    6. ' in' → logprob: -8.75959300994873
    7. '  ' → logprob: -9.38459300994873
    8. '_b' → logprob: -10.63459300994873
    9. '<|end|>' → logprob: -11.25959300994873
    10. '[' → logprob: -11.25959300994873

Token 78: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4405824542045593
    2. '0' → logprob: -1.065582513809204
    3. '1' → logprob: -4.440582275390625
    4. ' zero' → logprob: -10.940582275390625
    5. '   ' → logprob: -13.940582275390625
    6. ' ' → logprob: -14.065582275390625
    7. '```' → logprob: -14.440582275390625
    8. '  ' → logprob: -14.565582275390625
    9. 'zero' → logprob: -14.565582275390625
    10. '2' → logprob: -14.815582275390625

Token 79: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.28130772709846497
    2. '1' → logprob: -1.4063076972961426
    3. ' ' → logprob: -8.7813081741333
    4. 'zero' → logprob: -13.2813081741333
    5. '```' → logprob: -14.0313081741333
    6. '   ' → logprob: -14.4063081741333
    7. '2' → logprob: -15.5313081741333
    8. ' zero' → logprob: -15.7813081741333
    9. '`' → logprob: -15.7813081741333
    10. 'index' → logprob: -16.656307220458984

Token 80: ' to' (ID: 316)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.03805755823850632
    2. 'n' → logprob: -3.288057565689087
    3. ' self' → logprob: -11.913057327270508
    4. 'self' → logprob: -12.288057327270508
    5. ' ' → logprob: -13.038057327270508
    6. '	n' → logprob: -13.413057327270508
    7. '_n' → logprob: -13.913057327270508
    8. ' `' → logprob: -16.038057327270508
    9. ' н' → logprob: -17.163057327270508
    10. ' ' → logprob: -17.413057327270508

Token 82: '-' (ID: 12)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 83: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2199222445487976
    2. ' ' → logprob: -2.3449223041534424
    3. '1' → logprob: -3.7199223041534424
    4. ' n' → logprob: -3.9699223041534424
    5. ',' → logprob: -4.594922065734863
    6. '+' → logprob: -4.594922065734863
    7. 'inclusive' → logprob: -4.844922065734863
    8. 'based' → logprob: -4.969922065734863
    9. '<|end|>' → logprob: -5.094922065734863
    10. '```' → logprob: -5.469922065734863

Token 84: ';' (ID: 26)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22578364610671997
    2. '<|end|>' → logprob: -2.100783586502075
    3. '
' → logprob: -2.725783586502075
    4. ',' → logprob: -4.600783824920654
    5. 'self' → logprob: -6.475783824920654
    6. ' self' → logprob: -7.100783824920654
    7. '<|end|>' → logprob: -7.600783824920654
    8. '        
' → logprob: -7.725783824920654
    9. ' ' → logprob: -8.975783348083496
    10. ' 
' → logprob: -9.350783348083496

Token 85: ' ending' (ID: 22013)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2867003083229065
    2. 'self' → logprob: -1.5367002487182617
    3. '       ' → logprob: -3.9117002487182617
    4. ' ' → logprob: -5.286700248718262
    5. '        ' → logprob: -5.786700248718262
    6. '<|end|>' → logprob: -5.911700248718262
    7. '	self' → logprob: -7.286700248718262
    8. '
' → logprob: -7.661700248718262
    9. ' 
' → logprob: -8.036700248718262
    10. '    ' → logprob: -8.286700248718262

Token 86: ' nodes' (ID: 15749)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -1.1324375867843628
    2. '_' → logprob: -1.2574375867843628
    3. 'points' → logprob: -2.5074377059936523
    4. ' points' → logprob: -2.8824377059936523
    5. 's' → logprob: -3.1324377059936523
    6. '_points' → logprob: -3.1324377059936523
    7. '_states' → logprob: -3.2574377059936523
    8. ' with' → logprob: -3.8824377059936523
    9. '_nodes' → logprob: -4.007437705993652
    10. ' states' → logprob: -4.007437705993652

Token 87: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.11416000872850418
    2. ' ' → logprob: -2.4891600608825684
    3. ' have' → logprob: -5.239160060882568
    4. '<|end|>' → logprob: -5.489160060882568
    5. ' will' → logprob: -5.489160060882568
    6. ':' → logprob: -6.364160060882568
    7. ' to' → logprob: -6.739160060882568
    8. ',' → logprob: -6.739160060882568
    9. 'are' → logprob: -6.864160060882568
    10. ' ,' → logprob: -7.364160060882568

Token 88: ' leaves' (ID: 15657)
  Prédit: ' stored'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stored' → logprob: -0.5214585065841675
    2. ' from' → logprob: -2.646458625793457
    3. ' nodes' → logprob: -2.771458625793457
    4. ' n' → logprob: -3.021458625793457
    5. ' not' → logprob: -3.271458625793457
    6. ' at' → logprob: -3.396458625793457
    7. 'stored' → logprob: -3.396458625793457
    8. 'n' → logprob: -4.146458625793457
    9. ' indices' → logprob: -4.271458625793457
    10. ' represented' → logprob: -4.271458625793457

Token 89: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 90: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5574951767921448
    2. '<|end|>' → logprob: -0.9324951767921448
    3. '
' → logprob: -3.6824951171875
    4. 'self' → logprob: -5.6824951171875
    5. '<|end|>' → logprob: -6.4324951171875
    6. ',' → logprob: -6.6824951171875
    7. '        
' → logprob: -7.1824951171875
    8. ' self' → logprob: -7.4324951171875
    9. '   ' → logprob: -7.8074951171875
    10. '        ' → logprob: -9.0574951171875

Token 91: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.20904919505119324
    2. ' self' → logprob: -1.9590492248535156
    3. '       ' → logprob: -3.0840492248535156
    4. '<|end|>' → logprob: -7.334049224853516
    5. '
' → logprob: -7.959049224853516
    6. ' ' → logprob: -8.084049224853516
    7. '   ' → logprob: -9.334049224853516
    8. '        ' → logprob: -9.334049224853516
    9. '```' → logprob: -9.334049224853516
    10. '	self' → logprob: -9.709049224853516

Token 92: '.branch' (ID: 118555)
  Prédit: '.branch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.branch' → logprob: -1.2344986200332642
    2. '.br' → logprob: -1.3594986200332642
    3. ' .' → logprob: -1.4844986200332642
    4. '.' → logprob: -1.6094986200332642
    5. '._' → logprob: -4.859498500823975
    6. '.b' → logprob: -5.109498500823975
    7. '.points' → logprob: -5.109498500823975
    8. '.Br' → logprob: -6.609498500823975
    9. '_branch' → logprob: -7.109498500823975
    10. ' ' → logprob: -7.234498500823975

Token 93: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.03815911337733269
    2. '_points' → logprob: -3.288159132003784
    3. '_nodes' → logprob: -10.163159370422363
    4. 'points' → logprob: -10.163159370422363
    5. 'ings' → logprob: -11.413159370422363
    6. '_point' → logprob: -11.913159370422363
    7. '_' → logprob: -11.913159370422363
    8. '   ' → logprob: -12.538159370422363
    9. ' points' → logprob: -13.038159370422363
    10. '_pts' → logprob: -13.288159370422363

Token 94: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -4.263011578586884e-05
    2. '_nodes' → logprob: -10.375042915344238
    3. '_point' → logprob: -12.500042915344238
    4. '_' → logprob: -12.750042915344238
    5. 'points' → logprob: -12.875042915344238
    6. 's' → logprob: -14.375042915344238
    7. 'Points' → logprob: -14.625042915344238
    8. '_positions' → logprob: -15.000042915344238
    9. '_targets' → logprob: -15.250042915344238
    10. '_pts' → logprob: -15.250042915344238

Token 95: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016055013984441757
    2. '=' → logprob: -4.141055107116699
    3. ' ' → logprob: -12.1410551071167
    4. ':' → logprob: -12.1410551071167
    5. '[' → logprob: -12.6410551071167
    6. '=[]' → logprob: -12.6410551071167
    7. 's' → logprob: -14.3910551071167
    8. '={}' → logprob: -14.5160551071167
    9. '  ' → logprob: -14.7660551071167
    10. '[:]' → logprob: -14.7660551071167

Token 96: ' {}
' (ID: 11421)
  Prédit: ' {}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.4871658980846405
    2. ' [' → logprob: -0.9871659278869629
    3. '{}' → logprob: -4.487165927886963
    4. ' []' → logprob: -6.987165927886963
    5. '[' → logprob: -7.237165927886963
    6. '[]' → logprob: -9.487165451049805
    7. ' dict' → logprob: -10.987165451049805
    8. ' [{}' → logprob: -11.862165451049805
    9. 'dict' → logprob: -12.112165451049805
    10. ' ' → logprob: -14.237165451049805

Token 97: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25698181986808777
    2. '<|end|>' → logprob: -2.13198184967041
    3. '
' → logprob: -2.88198184967041
    4. '    
' → logprob: -4.13198184967041
    5. '       ' → logprob: -4.13198184967041
    6. ' ' → logprob: -4.38198184967041
    7. ' 
' → logprob: -6.38198184967041
    8. '    ' → logprob: -6.75698184967041
    9. '  ' → logprob: -6.88198184967041
    10. '<|end|>' → logprob: -7.13198184967041

Token 98: ' self' (ID: 1051)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0710525512695312
    2. '
' → logprob: -1.1960525512695312
    3. '<|end|>' → logprob: -1.3210525512695312
    4. ' ' → logprob: -3.9460525512695312
    5. '       ' → logprob: -3.9460525512695312
    6. '    
' → logprob: -3.9460525512695312
    7. ' 
' → logprob: -4.446052551269531
    8. 'def' → logprob: -5.071052551269531
    9. '<|end|>' → logprob: -5.821052551269531
    10. '    ' → logprob: -5.821052551269531

Token 99: '.memo' (ID: 161018)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00015562419139314443
    2. '.user' → logprob: -10.875155448913574
    3. '.points' → logprob: -11.625155448913574
    4. '.branch' → logprob: -11.625155448913574
    5. '._' → logprob: -12.125155448913574
    6. '.append' → logprob: -12.125155448913574
    7. '.current' → logprob: -12.375155448913574
    8. '.le' → logprob: -12.500155448913574
    9. '.data' → logprob: -12.500155448913574
    10. ' .' → logprob: -12.500155448913574

Token 100: '_time' (ID: 6425)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16086313128471375
    2. '=' → logprob: -1.9108631610870361
    3. 'ize' → logprob: -7.660862922668457
    4. 'ization' → logprob: -9.535862922668457
    5. 'ized' → logprob: -10.785862922668457
    6. ' ' → logprob: -11.285862922668457
    7. '={}' → logprob: -11.285862922668457
    8. '_' → logprob: -11.410862922668457
    9. '=[]' → logprob: -11.785862922668457
    10. '<|end|>' → logprob: -12.035862922668457

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07908950001001358
    2. '=' → logprob: -2.579089403152466
    3. '_time' → logprob: -9.704089164733887
    4. ' ' → logprob: -10.204089164733887
    5. '={}' → logprob: -10.329089164733887
    6. '_' → logprob: -11.079089164733887
    7. 's' → logprob: -11.704089164733887
    8. '=[]' → logprob: -12.329089164733887
    9. '_cost' → logprob: -12.329089164733887
    10. '  ' → logprob: -12.454089164733887

Token 102: ' {}

' (ID: 21724)
  Prédit: ' {}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.014166445471346378
    2. '{}' → logprob: -4.264166355133057
    3. ' []' → logprob: -14.639166831970215
    4. ' None' → logprob: -14.639166831970215
    5. ' defaultdict' → logprob: -14.639166831970215
    6. ' {}\' → logprob: -14.889166831970215
    7. ' {}
' → logprob: -15.014166831970215
    8. ' ' → logprob: -15.514166831970215
    9. ' {})' → logprob: -15.764166831970215
    10. '={}' → logprob: -16.0141658782959

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5290204882621765
    2. '
' → logprob: -1.6540205478668213
    3. 'def' → logprob: -1.6540205478668213
    4. ' def' → logprob: -3.9040205478668213
    5. '    
' → logprob: -5.654020309448242
    6. '<|end|>' → logprob: -6.029020309448242
    7. '	def' → logprob: -7.654020309448242
    8. ' ' → logprob: -7.904020309448242
    9. '<|end|>' → logprob: -8.029020309448242
    10. ' 
' → logprob: -8.279020309448242

Token 104: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.05363220348954201
    2. ' def' → logprob: -3.0536322593688965
    3. '   ' → logprob: -5.3036322593688965
    4. 'd' → logprob: -10.803631782531738
    5. ' ' → logprob: -11.178631782531738
    6. 'de' → logprob: -12.178631782531738
    7. '
' → logprob: -12.178631782531738
    8. '	def' → logprob: -12.553631782531738
    9. '    ' → logprob: -12.678631782531738
    10. '    
' → logprob: -12.928631782531738

Token 105: ' add' (ID: 1147)
  Prédit: ' compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.9345586895942688
    2. ' get' → logprob: -1.684558629989624
    3. ' add' → logprob: -1.934558629989624
    4. ' time' → logprob: -2.684558629989624
    5. ' find' → logprob: -2.934558629989624
    6. 'compute' → logprob: -3.559558629989624
    7. 'time' → logprob: -4.559558868408203
    8. ' minimal' → logprob: -4.684558868408203
    9. ' calculate' → logprob: -4.684558868408203
    10. ' dfs' → logprob: -4.809558868408203

Token 106: '_branch' (ID: 71162)
  Prédit: '_branch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_branch' → logprob: -0.00024037064576987177
    2. '_point' → logprob: -9.250240325927734
    3. 'branch' → logprob: -9.625240325927734
    4. '_' → logprob: -9.750240325927734
    5. '_br' → logprob: -11.500240325927734
    6. '_node' → logprob: -12.875240325927734
    7. '(self' → logprob: -13.375240325927734
    8. '_b' → logprob: -14.000240325927734
    9. 'Branch' → logprob: -14.125240325927734
    10. '(' → logprob: -14.375240325927734

Token 107: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.003018353134393692
    2. '_point' → logprob: -6.003018379211426
    3. '_branch' → logprob: -8.503018379211426
    4. '(self' → logprob: -8.878018379211426
    5. '   ' → logprob: -8.878018379211426
    6. 'point' → logprob: -10.378018379211426
    7. '       ' → logprob: -12.128018379211426
    8. '_' → logprob: -12.378018379211426
    9. 'branch' → logprob: -12.753018379211426
    10. '_ing' → logprob: -12.878018379211426

Token 108: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -4.644463479053229e-05
    2. '_' → logprob: -10.250046730041504
    3. '_points' → logprob: -12.000046730041504
    4. '_p' → logprob: -13.000046730041504
    5. 'point' → logprob: -14.875046730041504
    6. '_Point' → logprob: -14.875046730041504
    7. '_branch' → logprob: -15.000046730041504
    8. '_pt' → logprob: -15.000046730041504
    9. ' _' → logprob: -15.250046730041504
    10. 'Point' → logprob: -15.625046730041504

Token 109: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004631265066564083
    2. '(' → logprob: -5.379631042480469
    3. '(
' → logprob: -12.629631042480469
    4. '   ' → logprob: -12.629631042480469
    5. ' (' → logprob: -12.754631042480469
    6. 'self' → logprob: -14.629631042480469
    7. ' ' → logprob: -15.129631042480469
    8. '(s' → logprob: -15.129631042480469
    9. '	self' → logprob: -15.254631042480469
    10. '(sel' → logprob: -16.12963104248047

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023250321100931615
    2. 'self' → logprob: -8.625232696533203
    3. ' ,' → logprob: -10.000232696533203
    4. ',self' → logprob: -12.750232696533203
    5. '   ' → logprob: -13.250232696533203
    6. '       ' → logprob: -14.000232696533203
    7. '(self' → logprob: -14.875232696533203
    8. '):' → logprob: -15.125232696533203
    9. '_,' → logprob: -15.500232696533203
    10. ',id' → logprob: -15.500232696533203

Token 111: ' id' (ID: 1211)
  Prédit: ' id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' id' → logprob: -1.1083407402038574
    2. ' self' → logprob: -1.2333407402038574
    3. 'self' → logprob: -1.6083407402038574
    4. 'id' → logprob: -1.7333407402038574
    5. 'point' → logprob: -7.483340740203857
    6. 'branch' → logprob: -7.983340740203857
    7. '   ' → logprob: -8.733341217041016
    8. ' branch' → logprob: -9.108341217041016
    9. ' point' → logprob: -9.358341217041016
    10. ')' → logprob: -9.358341217041016

Token 112: '_:' (ID: 52270)
  Prédit: '_:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_:' → logprob: -0.5053146481513977
    2. '_,' → logprob: -1.005314588546753
    3. '_' → logprob: -3.505314588546753
    4. ':' → logprob: -8.630314826965332
    5. '__:' → logprob: -8.755314826965332
    6. '_)' → logprob: -9.005314826965332
    7. ',' → logprob: -9.255314826965332
    8. '__,' → logprob: -10.130314826965332
    9. '_=' → logprob: -10.630314826965332
    10. '_:*' → logprob: -11.130314826965332

Token 113: ' int' (ID: 677)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03319526091217995
    2. ' ,' → logprob: -3.5331952571868896
    3. ' int' → logprob: -6.533195495605469
    4. ':int' → logprob: -7.408195495605469
    5. ',int' → logprob: -7.658195495605469
    6. 'int' → logprob: -7.783195495605469
    7. ' self' → logprob: -8.283195495605469
    8. ':' → logprob: -8.908195495605469
    9. 'self' → logprob: -10.158195495605469
    10. ' id' → logprob: -10.658195495605469

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.096126576769166e-05
    2. ' ,' → logprob: -10.125041007995605
    3. '   ' → logprob: -14.875041007995605
    4. '‌,' → logprob: -15.000041007995605
    5. '       ' → logprob: -16.62504005432129
    6. ',int' → logprob: -17.50004005432129
    7. '‍,' → logprob: -17.50004005432129
    8. ' ' → logprob: -17.75004005432129
    9. '`,' → logprob: -18.12504005432129
    10. ')' → logprob: -18.37504005432129

Token 115: ' yes' (ID: 14531)
  Prédit: ' yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' yes' → logprob: -6.0629870858974755e-05
    2. 'yes' → logprob: -9.75006103515625
    3. '_yes' → logprob: -13.75006103515625
    4. ' y' → logprob: -15.12506103515625
    5. ' no' → logprob: -15.62506103515625
    6. ')' → logprob: -15.87506103515625
    7. ' ' → logprob: -15.87506103515625
    8. '    ' → logprob: -16.25006103515625
    9. ' ' → logprob: -16.87506103515625
    10. ' time' → logprob: -17.12506103515625

Token 116: '_target' (ID: 24705)
  Prédit: '_target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_target' → logprob: -0.00031186718842945993
    2. '_' → logprob: -8.125311851501465
    3. ':' → logprob: -12.125311851501465
    4. '_t' → logprob: -12.875311851501465
    5. '_answer' → logprob: -13.375311851501465
    6. '_targets' → logprob: -13.875311851501465
    7. 'target' → logprob: -14.250311851501465
    8. '_:' → logprob: -14.250311851501465
    9. ' _' → logprob: -14.375311851501465
    10. ',' → logprob: -14.875311851501465

Token 117: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002387422136962414
    2. ',' → logprob: -6.127387523651123
    3. ':int' → logprob: -8.752387046813965
    4. '):' → logprob: -10.127387046813965
    5. ' :' → logprob: -13.377387046813965
    6. ')' → logprob: -14.127387046813965
    7. '<|end|>' → logprob: -15.002387046813965
    8. ',int' → logprob: -15.252387046813965
    9. '<|end|>' → logprob: -15.377387046813965
    10. ':,' → logprob: -15.377387046813965

Token 118: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1280168741941452
    2. ' int' → logprob: -2.128016948699951
    3. ':int' → logprob: -6.878016948699951
    4. ',int' → logprob: -11.503016471862793
    5. ')' → logprob: -11.753016471862793
    6. ',' → logprob: -11.878016471862793
    7. '<int' → logprob: -12.003016471862793
    8. ':' → logprob: -12.128016471862793
    9. '(int' → logprob: -12.128016471862793
    10. '[int' → logprob: -12.253016471862793

Token 119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.583550642360933e-05
    2. ' ,' → logprob: -10.250036239624023
    3. ',int' → logprob: -15.625036239624023
    4. ':' → logprob: -16.500036239624023
    5. ',
' → logprob: -17.250036239624023
    6. '):' → logprob: -17.375036239624023
    7. '‌,' → logprob: -17.375036239624023
    8. ',n' → logprob: -17.375036239624023
    9. '   ' → logprob: -17.750036239624023
    10. ')' → logprob: -18.125036239624023

Token 120: ' no' (ID: 860)
  Prédit: ' no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.00320123927667737
    2. 'no' → logprob: -5.753201007843018
    3. '	no' → logprob: -11.003201484680176
    4. ',no' → logprob: -13.628201484680176
    5. '_no' → logprob: -13.878201484680176
    6. ' yes' → logprob: -14.253201484680176
    7. ' none' → logprob: -14.253201484680176
    8. ' ' → logprob: -14.378201484680176
    9. '    ' → logprob: -14.503201484680176
    10. '=no' → logprob: -15.128201484680176

Token 121: '_target' (ID: 24705)
  Prédit: '_target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_target' → logprob: -0.0001037815964082256
    2. '_' → logprob: -9.625103950500488
    3. 'target' → logprob: -11.625103950500488
    4. ':' → logprob: -11.875103950500488
    5. '_targets' → logprob: -12.000103950500488
    6. '):' → logprob: -12.125103950500488
    7. ')' → logprob: -12.500103950500488
    8. ')_' → logprob: -13.625103950500488
    9. '   ' → logprob: -14.000103950500488
    10. '_:' → logprob: -14.125103950500488

Token 122: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.287288635969162
    2. ':' → logprob: -1.4122886657714844
    3. ')' → logprob: -5.287288665771484
    4. ' ):' → logprob: -7.787288665771484
    5. '):
' → logprob: -8.037288665771484
    6. ':int' → logprob: -8.287288665771484
    7. '   ' → logprob: -10.662288665771484
    8. ',' → logprob: -11.537288665771484
    9. '=' → logprob: -11.662288665771484
    10. '):

' → logprob: -12.037288665771484

Token 123: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2886873483657837
    2. ' int' → logprob: -1.4136873483657837
    3. ')' → logprob: -5.413687229156494
    4. ':int' → logprob: -6.163687229156494
    5. ' )' → logprob: -7.288687229156494
    6. '):' → logprob: -9.788687705993652
    7. ' ' → logprob: -10.038687705993652
    8. '<int' → logprob: -10.163687705993652
    9. '=int' → logprob: -10.288687705993652
    10. '):
' → logprob: -10.663687705993652

Token 124: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0015268829884007573
    2. ')' → logprob: -7.126526832580566
    3. '):
' → logprob: -7.251526832580566
    4. ' ):' → logprob: -11.751526832580566
    5. ':' → logprob: -12.751526832580566
    6. '):
' → logprob: -14.001526832580566
    7. '   ' → logprob: -14.001526832580566
    8. ' ' → logprob: -15.251526832580566
    9. '):

' → logprob: -15.376526832580566
    10. ')->' → logprob: -17.251527786254883

Token 125: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00046379686682485044
    2. ':' → logprob: -8.125463485717773
    3. '   ' → logprob: -10.125463485717773
    4. '):' → logprob: -10.125463485717773
    5. ' self' → logprob: -10.500463485717773
    6. ')' → logprob: -11.250463485717773
    7. 'self' → logprob: -11.500463485717773
    8. ',' → logprob: -11.875463485717773
    9. '        
' → logprob: -11.875463485717773
    10. '```' → logprob: -12.125463485717773

Token 126: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5132774114608765
    2. ' self' → logprob: -1.1382774114608765
    3. 'self' (adapté à ' self') → logprob: -2.513277530670166
    4. ' branch' → logprob: -10.388277053833008
    5. '   ' → logprob: -10.888277053833008
    6. 'branch' → logprob: -11.013277053833008
    7. ' bp' → logprob: -11.513277053833008
    8. '	self' → logprob: -12.263277053833008
    9. 'bp' → logprob: -13.013277053833008
    10. ' b' → logprob: -13.138277053833008

Token 127: '.branch' (ID: 118555)
  Prédit: '.branch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.branch' → logprob: -0.007667790167033672
    2. '.' → logprob: -4.8826680183410645
    3. 'branch' → logprob: -10.257667541503906
    4. '.br' → logprob: -11.757667541503906
    5. ' .' → logprob: -12.132667541503906
    6. '.Br' → logprob: -13.382667541503906
    7. '.b' → logprob: -13.382667541503906
    8. '```' → logprob: -13.757667541503906
    9. '`.' → logprob: -14.007667541503906
    10. '.chain' → logprob: -14.007667541503906

Token 128: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -1.0445127372804563e-05
    2. '_points' → logprob: -12.25001049041748
    3. '_point' → logprob: -13.25001049041748
    4. '_branch' → logprob: -14.12501049041748
    5. '_ing' → logprob: -14.12501049041748
    6. 'ging' → logprob: -14.37501049041748
    7. 'in' → logprob: -15.12501049041748
    8. 'point' → logprob: -15.37501049041748
    9. '   ' → logprob: -15.37501049041748
    10. 'inging' → logprob: -15.50001049041748

Token 129: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -5.717296517104842e-05
    2. '_point' → logprob: -9.875057220458984
    3. 'points' → logprob: -12.375057220458984
    4. 'Points' → logprob: -14.375057220458984
    5. '_' → logprob: -15.125057220458984
    6. '_p' → logprob: -15.750057220458984
    7. ' points' → logprob: -15.875057220458984
    8. 's' → logprob: -16.000057220458984
    9. '_POINTS' → logprob: -16.375057220458984
    10. '_pts' → logprob: -17.125057220458984

Token 130: '[id' (ID: 29109)
  Prédit: '[id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[id' → logprob: -0.00018268341955263168
    2. '[' → logprob: -8.62518310546875
    3. '

' → logprob: -14.00018310546875
    4. ' [' → logprob: -14.12518310546875
    5. '[class' → logprob: -15.00018310546875
    6. '```' → logprob: -15.25018310546875
    7. '[self' → logprob: -15.62518310546875
    8. '\[' → logprob: -15.62518310546875
    9. ')[' → logprob: -16.37518310546875
    10. '[
' → logprob: -16.37518310546875

Token 131: '_]' (ID: 163385)
  Prédit: '_]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_]' → logprob: -0.011049824766814709
    2. '_' → logprob: -4.511049747467041
    3. ']' → logprob: -14.0110502243042
    4. '_
' → logprob: -14.6360502243042
    5. '_
' → logprob: -15.0110502243042
    6. '_

' → logprob: -15.3860502243042
    7. '_=' → logprob: -16.636049270629883
    8. '_)' → logprob: -17.761049270629883
    9. '_.' → logprob: -17.886049270629883
    10. '_-' → logprob: -18.136049270629883

Token 132: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002805467927828431
    2. '=' → logprob: -5.877805233001709
    3. ' ' → logprob: -15.252805709838867
    4. ')' → logprob: -15.627805709838867
    5. ']' → logprob: -16.502805709838867
    6. ' =
' → logprob: -16.627805709838867
    7. ' =)' → logprob: -18.377805709838867
    8. ')=' → logprob: -19.002805709838867
    9. '  ' → logprob: -19.127805709838867
    10. ']=' → logprob: -19.252805709838867

Token 133: ' Branch' (ID: 42649)
  Prédit: 'Branch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Branch' → logprob: -0.16022443771362305
    2. ' Branch' → logprob: -1.910224437713623
    3. '   ' → logprob: -15.910224914550781
    4. 'Branches' → logprob: -16.78522491455078
    5. '_branch' → logprob: -17.41022491455078
    6. ' ' → logprob: -17.53522491455078
    7. 'Br' → logprob: -17.78522491455078
    8. 'branch' → logprob: -17.78522491455078
    9. '       ' → logprob: -18.28522491455078
    10. ' Bran' → logprob: -18.41022491455078

Token 134: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -1.9361264946837764e-07
    2. ' ing' → logprob: -16.125
    3. 'in' → logprob: -19.125
    4. 'ng' → logprob: -19.5
    5. 'Branch' → logprob: -19.875
    6. '-ing' → logprob: -20.375
    7. '   ' → logprob: -20.5
    8. '_ing' → logprob: -20.625
    9. 'ING' → logprob: -21.5
    10. ' ' → logprob: -21.5

Token 135: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -1.0683535037969705e-05
    2. 'ing' → logprob: -12.25001049041748
    3. 'g' → logprob: -13.00001049041748
    4. ' Point' → logprob: -13.00001049041748
    5. 'Points' → logprob: -14.25001049041748
    6. 'point' → logprob: -15.75001049041748
    7. '	Point' → logprob: -16.000011444091797
    8. '_point' → logprob: -16.125011444091797
    9. '_Point' → logprob: -16.125011444091797
    10. 'P' → logprob: -16.625011444091797

Token 136: '(id' (ID: 6589)
  Prédit: '(id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(id' → logprob: -0.014169389382004738
    2. '(' → logprob: -4.264169216156006
    3. '(
' → logprob: -12.764169692993164
    4. ' (' → logprob: -13.264169692993164
    5. 'id' → logprob: -14.889169692993164
    6. '```' → logprob: -14.889169692993164
    7. '(ids' → logprob: -15.514169692993164
    8. '(i' → logprob: -16.264169692993164
    9. '?id' → logprob: -16.514169692993164
    10. ')' → logprob: -17.139169692993164

Token 137: '_,' (ID: 14152)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3040405213832855
    2. '_,' → logprob: -1.429040551185608
    3. '_)' → logprob: -3.8040404319763184
    4. '_,
' → logprob: -9.679040908813477
    5. '_=' → logprob: -9.929040908813477
    6. ')' → logprob: -9.929040908813477
    7. '_

' → logprob: -10.054040908813477
    8. '_
' → logprob: -10.179040908813477
    9. '_:' → logprob: -10.179040908813477
    10. ',' → logprob: -10.804040908813477

Token 138: ' yes' (ID: 14531)
  Prédit: ' yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' yes' → logprob: -0.03365238755941391
    2. 'yes' → logprob: -3.4086523056030273
    3. ' ' → logprob: -13.283652305603027
    4. ' no' → logprob: -13.533652305603027
    5. ' ' → logprob: -13.783652305603027
    6. '_yes' → logprob: -14.158652305603027
    7. '    ' → logprob: -14.533652305603027
    8. ')' → logprob: -15.533652305603027
    9. ' y' → logprob: -15.533652305603027
    10. '   ' → logprob: -15.783652305603027

Token 139: '_target' (ID: 24705)
  Prédit: '_target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_target' → logprob: -3.292907877039397e-06
    2. 'target' → logprob: -13.12500286102295
    3. '_' → logprob: -14.25000286102295
    4. '_targets' → logprob: -15.12500286102295
    5. 'Target' → logprob: -16.000003814697266
    6. '_TARGET' → logprob: -16.625003814697266
    7. 'arget' → logprob: -16.625003814697266
    8. '-target' → logprob: -17.750003814697266
    9. 'TARGET' → logprob: -17.875003814697266
    10. '_Target' → logprob: -17.875003814697266

Token 140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.2762428822461516e-05
    2. ' ,' → logprob: -9.875052452087402
    3. ')' → logprob: -14.875052452087402
    4. '<|end|>' → logprob: -14.875052452087402
    5. ',
' → logprob: -15.750052452087402
    6. '   ' → logprob: -16.25005340576172
    7. '‌,' → logprob: -16.37505340576172
    8. ',y' → logprob: -16.87505340576172
    9. ',n' → logprob: -17.00005340576172
    10. '       ' → logprob: -17.12505340576172

Token 141: ' no' (ID: 860)
  Prédit: ' no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.07889826595783234
    2. 'no' → logprob: -2.5788981914520264
    3. '	no' → logprob: -12.078898429870605
    4. '_no' → logprob: -14.078898429870605
    5. 'No' → logprob: -14.203898429870605
    6. ' yes' → logprob: -15.203898429870605
    7. ' ' → logprob: -15.453898429870605
    8. ' ' → logprob: -15.453898429870605
    9. '(no' → logprob: -15.703898429870605
    10. '    ' → logprob: -16.07889747619629

Token 142: '_target' (ID: 24705)
  Prédit: '_target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_target' → logprob: -0.00011307948443572968
    2. '_' → logprob: -9.625113487243652
    3. ')' → logprob: -10.375113487243652
    4. 'target' → logprob: -11.500113487243652
    5. '_targets' → logprob: -13.125113487243652
    6. ' _' → logprob: -13.375113487243652
    7. '_)' → logprob: -14.625113487243652
    8. ')_' → logprob: -14.750113487243652
    9. '_TARGET' → logprob: -15.000113487243652
    10. 'arget' → logprob: -15.375113487243652

Token 143: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.77627644513268e-06
    2. ')
' → logprob: -11.750008583068848
    3. ' )' → logprob: -15.250008583068848
    4. ')return' → logprob: -15.625008583068848
    5. '<|end|>' → logprob: -16.000009536743164
    6. '   ' → logprob: -16.500009536743164
    7. ')

' → logprob: -16.500009536743164
    8. '),' → logprob: -17.625009536743164
    9. '<|end|>' → logprob: -18.500009536743164
    10. '}' → logprob: -18.625009536743164

Token 144: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3507283329963684
    2. '<|end|>' → logprob: -1.4757282733917236
    3. '<|end|>' → logprob: -4.100728511810303
    4. 'def' → logprob: -4.225728511810303
    5. '
' → logprob: -4.850728511810303
    6. '```' → logprob: -4.850728511810303
    7. ')' → logprob: -4.975728511810303
    8. ' ' → logprob: -5.475728511810303
    9. ' def' → logprob: -5.850728511810303
    10. '    
' → logprob: -6.100728511810303

Token 145: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.10875306278467178
    2. 'def' (adapté à ' def') → logprob: -2.608752965927124
    3. '   ' → logprob: -3.608752965927124
    4. ' 
' → logprob: -6.608753204345703
    5. '
' → logprob: -7.483753204345703
    6. ' ' → logprob: -8.358753204345703
    7. '    
' → logprob: -10.483753204345703
    8. '```' → logprob: -10.608753204345703
    9. ' indent' → logprob: -10.983753204345703
    10. ' indentation' → logprob: -10.983753204345703

Token 146: ' compute' (ID: 23864)
  Prédit: ' expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' expected' → logprob: -0.2141687273979187
    2. ' compute' → logprob: -2.4641687870025635
    3. ' get' → logprob: -3.7141687870025635
    4. ' min' → logprob: -3.9641687870025635
    5. ' time' → logprob: -4.589168548583984
    6. ' minimal' → logprob: -4.589168548583984
    7. ' minimum' → logprob: -4.839168548583984
    8. ' def' → logprob: -4.839168548583984
    9. 'expected' → logprob: -5.089168548583984
    10. ' calculate' → logprob: -5.089168548583984

Token 147: '_min' (ID: 15950)
  Prédit: '_expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expected' → logprob: -0.658905029296875
    2. '_time' → logprob: -0.783905029296875
    3. '_min' → logprob: -4.033905029296875
    4. '_max' → logprob: -5.658905029296875
    5. '_average' → logprob: -6.158905029296875
    6. '_' → logprob: -7.158905029296875
    7. '_expect' → logprob: -7.283905029296875
    8. '_total' → logprob: -8.533905029296875
    9. '_completion' → logprob: -8.658905029296875
    10. '_times' → logprob: -8.658905029296875

Token 148: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.013366213999688625
    2. '_expected' → logprob: -4.513366222381592
    3. '_times' → logprob: -7.138366222381592
    4. '_max' → logprob: -8.013365745544434
    5. '_' → logprob: -8.388365745544434
    6. '_steps' → logprob: -8.513365745544434
    7. '_completion' → logprob: -8.513365745544434
    8. 'imal' → logprob: -9.013365745544434
    9. 'imum' → logprob: -9.763365745544434
    10. '_average' → logprob: -10.013365745544434

Token 149: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001174747827462852
    2. '(' → logprob: -6.7511749267578125
    3. 'self' → logprob: -13.251174926757812
    4. '(
' → logprob: -14.251174926757812
    5. '_to' → logprob: -14.251174926757812
    6. ' (' → logprob: -14.626174926757812
    7. '_recursive' → logprob: -16.001174926757812
    8. '_self' → logprob: -16.126174926757812
    9. '   ' → logprob: -16.126174926757812
    10. '_point' → logprob: -16.501174926757812

Token 150: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00041172682540491223
    2. ' ,' → logprob: -8.500411987304688
    3. 'self' → logprob: -8.500411987304688
    4. '   ' → logprob: -13.625411987304688
    5. ')' → logprob: -14.125411987304688
    6. '):' → logprob: -14.125411987304688
    7. ',self' → logprob: -15.125411987304688
    8. ' self' → logprob: -15.125411987304688
    9. ',node' → logprob: -15.250411987304688
    10. ',
' → logprob: -15.375411987304688

Token 151: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.023340167477726936
    2. '(' → logprob: -3.7733402252197266
    3. 'self' → logprob: -9.523340225219727
    4. ' (' → logprob: -11.148340225219727
    5. '(
' → logprob: -13.148340225219727
    6. '(s' → logprob: -13.898340225219727
    7. '   ' → logprob: -14.148340225219727
    8. '_' → logprob: -14.398340225219727
    9. ' self' → logprob: -14.398340225219727
    10. '_(' → logprob: -14.648340225219727

Token 152: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2525503933429718
    2. ' int' → logprob: -1.5025503635406494
    3. 'float' → logprob: -8.00255012512207
    4. ' float' → logprob: -8.62755012512207
    5. '[int' → logprob: -10.50255012512207
    6. ' None' → logprob: -11.00255012512207
    7. 'dict' → logprob: -11.12755012512207
    8. 'None' → logprob: -11.37755012512207
    9. ' dict' → logprob: -11.75255012512207
    10. '(int' → logprob: -11.75255012512207

Token 153: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5152167081832886
    2. ':' → logprob: -1.1402167081832886
    3. '(' → logprob: -2.515216827392578
    4. '():' → logprob: -7.765216827392578
    5. '       ' → logprob: -7.890216827392578
    6. '   ' → logprob: -7.890216827392578
    7. '(
' → logprob: -8.140216827392578
    8. ':
' → logprob: -8.265216827392578
    9. '):' → logprob: -9.015216827392578
    10. 'self' → logprob: -9.390216827392578

Token 154: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004418743774294853
    2. 'def' → logprob: -8.375441551208496
    3. ' def' → logprob: -9.000441551208496
    4. 'import' → logprob: -10.375441551208496
    5. '
' → logprob: -11.375441551208496
    6. '```' → logprob: -11.625441551208496
    7. '   ' → logprob: -11.750441551208496
    8. '        
' → logprob: -11.875441551208496
    9. ' return' → logprob: -12.250441551208496
    10. ' self' → logprob: -12.625441551208496

Token 155: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.22051122784614563
    2. '       ' → logprob: -2.3455111980438232
    3. ' def' → logprob: -2.3455111980438232
    4. 'from' → logprob: -5.595511436462402
    5. 'return' → logprob: -6.845511436462402
    6. 'import' → logprob: -7.470511436462402
    7. ' return' → logprob: -7.595511436462402
    8. ' from' → logprob: -8.345511436462402
    9. 'self' → logprob: -9.970511436462402
    10. '
' → logprob: -10.095511436462402

Token 156: ' Compute' (ID: 45438)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4310882091522217
    2. ' def' → logprob: -1.1810882091522217
    3. 'from' → logprob: -3.4310882091522217
    4. ' from' → logprob: -5.056088447570801
    5. 'import' → logprob: -5.931088447570801
    6. ' import' → logprob: -7.431088447570801
    7. '       ' → logprob: -7.431088447570801
    8. ' return' → logprob: -8.1810884475708
    9. 'return' → logprob: -8.4310884475708
    10. '   ' → logprob: -9.5560884475708

Token 157: ' minimum' (ID: 11085)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4527416229248047
    2. ' def' → logprob: -2.2027416229248047
    3. 'self' → logprob: -2.7027416229248047
    4. ' the' → logprob: -2.9527416229248047
    5. ' self' → logprob: -3.3277416229248047
    6. '       ' → logprob: -3.4527416229248047
    7. 'time' → logprob: -4.327741622924805
    8. ' time' → logprob: -4.577741622924805
    9. 'min' → logprob: -4.952741622924805
    10. '(self' → logprob: -4.952741622924805

Token 158: ' time' (ID: 1058)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.03509042412042618
    2. 'def' → logprob: -4.285090446472168
    3. 'time' → logprob: -4.535090446472168
    4. ' time' → logprob: -5.035090446472168
    5. '_times' → logprob: -6.910090446472168
    6. '_' → logprob: -7.285090446472168
    7. ' def' → logprob: -7.285090446472168
    8. '(self' → logprob: -8.535090446472168
    9. '(' → logprob: -8.785090446472168
    10. 'self' → logprob: -8.910090446472168

Token 159: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1744914948940277
    2. '(' → logprob: -2.7994914054870605
    3. 'def' → logprob: -2.9244914054870605
    4. '(self' → logprob: -3.5494914054870605
    5. '   ' → logprob: -4.4244914054870605
    6. ' def' → logprob: -6.4244914054870605
    7. 'self' → logprob: -6.7994914054870605
    8. ')' → logprob: -7.6744914054870605
    9. ' for' → logprob: -8.299491882324219
    10. ' to' → logprob: -8.424491882324219

Token 160: ' complete' (ID: 5533)
  Prédit: ' reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reach' → logprob: -0.359305202960968
    2. ' answer' → logprob: -2.6093051433563232
    3. 'reach' → logprob: -3.1093051433563232
    4. ' finish' → logprob: -3.2343051433563232
    5. 'answer' → logprob: -3.2343051433563232
    6. ' solve' → logprob: -3.6093051433563232
    7. ' complete' → logprob: -3.9843051433563232
    8. ' process' → logprob: -4.234305381774902
    9. 'solve' → logprob: -4.234305381774902
    10. 'finish' → logprob: -5.234305381774902

Token 161: ' all' (ID: 722)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.363468736410141
    2. ' from' → logprob: -1.4884687662124634
    3. ' the' → logprob: -3.988468647003174
    4. ' starting' → logprob: -3.988468647003174
    5. 'def' → logprob: -4.113468647003174
    6. 'self' → logprob: -4.863468647003174
    7. '(' → logprob: -5.488468647003174
    8. 'starting' → logprob: -5.613468647003174
    9. '(self' → logprob: -5.738468647003174
    10. 'the' → logprob: -5.738468647003174

Token 162: ' endings' (ID: 152718)
  Prédit: ' tasks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tasks' → logprob: -1.199280858039856
    2. ' branching' → logprob: -1.449280858039856
    3. 'tasks' → logprob: -2.5742807388305664
    4. ' nodes' → logprob: -2.5742807388305664
    5. ' branches' → logprob: -3.0742807388305664
    6. ' steps' → logprob: -3.0742807388305664
    7. ' levels' → logprob: -3.1992807388305664
    8. 'branch' → logprob: -3.3242807388305664
    9. 'questions' → logprob: -3.5742807388305664
    10. 'levels' → logprob: -3.6992807388305664

Token 163: ' from' (ID: 591)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4397650957107544
    2. '       ' → logprob: -1.0647650957107544
    3. '(self' → logprob: -6.064764976501465
    4. ',' → logprob: -6.189764976501465
    5. '<|end|>' → logprob: -6.689764976501465
    6. 'def' → logprob: -6.814764976501465
    7. ':' → logprob: -6.814764976501465
    8. '        
' → logprob: -6.939764976501465
    9. '(' → logprob: -7.564764976501465
    10. '
' → logprob: -8.439764976501465

Token 164: ' root' (ID: 6577)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6781463027000427
    2. ' node' → logprob: -1.4281463623046875
    3. ' ' → logprob: -1.6781463623046875
    4. ' the' → logprob: -3.9281463623046875
    5. 'node' → logprob: -4.9281463623046875
    6. 'branch' → logprob: -5.0531463623046875
    7. ' branch' → logprob: -5.0531463623046875
    8. ' self' → logprob: -5.6781463623046875
    9. ' root' → logprob: -5.8031463623046875
    10. 'id' → logprob: -5.9281463623046875

Token 165: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20319853723049164
    2. '(self' → logprob: -2.2031984329223633
    3. '       ' → logprob: -3.4531984329223633
    4. 'def' → logprob: -3.9531984329223633
    5. ' def' → logprob: -4.953198432922363
    6. '(' → logprob: -5.703198432922363
    7. 'self' → logprob: -5.953198432922363
    8. ',' → logprob: -5.953198432922363
    9. '<|end|>' → logprob: -6.328198432922363
    10. '        
' → logprob: -6.453198432922363

Token 166: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004278076812624931
    2. ' ' → logprob: -5.754278182983398
    3. ')' → logprob: -7.629278182983398
    4. '       ' → logprob: -7.879278182983398
    5. 'def' → logprob: -9.004278182983398
    6. 'start' → logprob: -10.879278182983398
    7. 'self' → logprob: -11.004278182983398
    8. '   ' → logprob: -11.629278182983398
    9. '```' → logprob: -11.754278182983398
    10. 'starting' → logprob: -12.004278182983398

Token 167: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025877889711409807
    2. '):' → logprob: -6.627587795257568
    3. ' )' → logprob: -7.877587795257568
    4. ',' → logprob: -8.50258731842041
    5. ')
' → logprob: -8.50258731842041
    6. '       ' → logprob: -8.87758731842041
    7. ').' → logprob: -9.25258731842041
    8. '   ' → logprob: -9.50258731842041
    9. 'def' → logprob: -9.75258731842041
    10. '),' → logprob: -10.25258731842041

Token 168: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03884517401456833
    2. '
' → logprob: -3.4138450622558594
    3. '        
' → logprob: -5.788845062255859
    4. ',' → logprob: -7.538845062255859
    5. '<|end|>' → logprob: -7.913845062255859
    6. 'def' → logprob: -8.03884506225586
    7. ':' → logprob: -8.53884506225586
    8. '        ' → logprob: -9.16384506225586
    9. '      ' → logprob: -9.66384506225586
    10. ')' → logprob: -9.66384506225586

Token 169: ' return' (ID: 622)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6435073018074036
    2. '       ' → logprob: -0.7685073018074036
    3. ' def' → logprob: -4.768507480621338
    4. 'from' → logprob: -7.518507480621338
    5. 'return' (adapté à ' return') → logprob: -7.643507480621338
    6. 'import' → logprob: -7.768507480621338
    7. '```' → logprob: -8.01850700378418
    8. 'self' → logprob: -8.39350700378418
    9. ' return' → logprob: -9.89350700378418
    10. '   ' → logprob: -9.89350700378418

Token 170: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06197642162442207
    2. ' self' → logprob: -2.811976432800293
    3. '
' → logprob: -12.436976432800293
    4. '0' → logprob: -13.186976432800293
    5. '(self' → logprob: -13.561976432800293
    6. '       ' → logprob: -13.936976432800293
    7. '1' → logprob: -14.936976432800293
    8. '_self' → logprob: -16.186975479125977
    9. '	self' → logprob: -16.686975479125977
    10. '$self' → logprob: -16.936975479125977

Token 171: '._' (ID: 2697)
  Prédit: '.compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.compute' → logprob: -0.01920332945883274
    2. '.' → logprob: -4.519203186035156
    3. ' .' → logprob: -5.769203186035156
    4. '._' → logprob: -6.269203186035156
    5. '.calculate' → logprob: -6.769203186035156
    6. '.calc' → logprob: -7.394203186035156
    7. '.run' → logprob: -8.019203186035156
    8. '.solve' → logprob: -8.269203186035156
    9. '.min' → logprob: -9.019203186035156
    10. '.find' → logprob: -9.144203186035156

Token 172: 'dfs' (ID: 60837)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.6427395939826965
    2. 'compute' → logprob: -1.1427395343780518
    3. 'dfs' → logprob: -1.8927395343780518
    4. 'dp' → logprob: -5.642739772796631
    5. 'solve' → logprob: -7.767739772796631
    6. 'helper' → logprob: -8.267739295959473
    7. 'get' → logprob: -8.892739295959473
    8. 'calc' → logprob: -10.392739295959473
    9. 'minimal' → logprob: -10.642739295959473
    10. 'minimum' → logprob: -10.642739295959473

Token 173: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.180879816180095e-05
    2. '<|end|>' → logprob: -11.125051498413086
    3. '(self' → logprob: -11.500051498413086
    4. '(
' → logprob: -11.625051498413086
    5. '_time' → logprob: -11.875051498413086
    6. ' (' → logprob: -12.875051498413086
    7. '_branch' → logprob: -13.750051498413086
    8. '('' → logprob: -13.875051498413086
    9. '1' → logprob: -14.500051498413086
    10. '((' → logprob: -14.625051498413086

Token 174: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.9153885558771435e-06
    2. ' ' → logprob: -12.125005722045898
    3. ')' → logprob: -15.250005722045898
    4. '<|end|>' → logprob: -15.500005722045898
    5. '   ' → logprob: -17.0000057220459
    6. '(' → logprob: -17.5000057220459
    7. '```' → logprob: -18.2500057220459
    8. '`' → logprob: -19.5000057220459
    9. '
' → logprob: -19.6250057220459
    10. '[' → logprob: -20.1250057220459

Token 175: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002194159897044301
    2. ' )' → logprob: -6.377193927764893
    3. ',' → logprob: -7.627193927764893
    4. ' ,' → logprob: -12.62719440460205
    5. ')
' → logprob: -14.62719440460205
    6. ',)' → logprob: -15.25219440460205
    7. '),' → logprob: -15.75219440460205
    8. ')`' → logprob: -16.502193450927734
    9. '<|end|>' → logprob: -16.627193450927734
    10. '`)' → logprob: -16.877193450927734

Token 176: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13625484704971313
    2. 'def' → logprob: -2.5112547874450684
    3. '
' → logprob: -3.3862547874450684
    4. '(' → logprob: -6.011254787445068
    5. ' ' → logprob: -6.011254787445068
    6. ' def' → logprob: -6.136254787445068
    7. '<|end|>' → logprob: -6.386254787445068
    8. '```' → logprob: -7.261254787445068
    9. '\n' → logprob: -7.386254787445068
    10. '  ' → logprob: -7.636254787445068

Token 177: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.5185355544090271
    2. '
' → logprob: -1.1435356140136719
    3. '   ' → logprob: -2.518535614013672
    4. ' def' → logprob: -5.643535614013672
    5. '    
' → logprob: -7.768535614013672
    6. '```' → logprob: -7.768535614013672
    7. '\n' → logprob: -8.518535614013672
    8. '(' → logprob: -8.643535614013672
    9. ')' → logprob: -9.268535614013672
    10. ' ' → logprob: -9.518535614013672

Token 178: ' _' (ID: 1175)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.008720578625798225
    2. ' _' → logprob: -4.758720397949219
    3. 'def' → logprob: -10.008720397949219
    4. ' def' → logprob: -10.883720397949219
    5. '_def' → logprob: -11.633720397949219
    6. 'dfs' → logprob: -11.758720397949219
    7. '_df' → logprob: -11.883720397949219
    8. ' dfs' → logprob: -12.258720397949219
    9. '_' → logprob: -13.008720397949219
    10. ' ' → logprob: -13.258720397949219

Token 179: 'dfs' (ID: 60837)
  Prédit: 'dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -1.4259644558478612e-05
    2. ' dfs' → logprob: -11.375014305114746
    3. 'df' → logprob: -13.750014305114746
    4. 'def' → logprob: -14.125014305114746
    5. '_d' → logprob: -14.500014305114746
    6. 'd' → logprob: -14.750014305114746
    7. '_' → logprob: -17.50001335144043
    8. 'dfa' → logprob: -18.50001335144043
    9. 'dsl' → logprob: -18.75001335144043
    10. 'ds' → logprob: -18.87501335144043

Token 180: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006818497087806463
    2. '(' → logprob: -5.0068182945251465
    3. ' (' → logprob: -9.506818771362305
    4. '<|end|>' → logprob: -11.381818771362305
    5. 'self' → logprob: -11.756818771362305
    6. '(
' → logprob: -12.006818771362305
    7. '(id' → logprob: -13.756818771362305
    8. ' self' → logprob: -14.631818771362305
    9. '(node' → logprob: -14.881818771362305
    10. '(s' → logprob: -15.006818771362305

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020926215802319348
    2. ' ,' → logprob: -8.500208854675293
    3. ',id' → logprob: -13.500208854675293
    4. 'self' → logprob: -13.750208854675293
    5. '<|end|>' → logprob: -14.000208854675293
    6. ',int' → logprob: -14.500208854675293
    7. '_,' → logprob: -14.750208854675293
    8. ',node' → logprob: -15.250208854675293
    9. '   ' → logprob: -15.500208854675293
    10. '‌,' → logprob: -15.500208854675293

Token 182: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.21447603404521942
    2. 'self' → logprob: -2.3394761085510254
    3. ' node' → logprob: -2.5894761085510254
    4. 'id' → logprob: -4.339476108551025
    5. 'current' → logprob: -5.464476108551025
    6. ' self' → logprob: -5.714476108551025
    7. ' current' → logprob: -7.589476108551025
    8. '   ' → logprob: -8.714475631713867
    9. ' id' → logprob: -8.839475631713867
    10. ')' → logprob: -9.589475631713867

Token 183: '_id' (ID: 1537)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06062035635113716
    2. '):
' → logprob: -3.1856203079223633
    3. ':' → logprob: -4.310620307922363
    4. ')' → logprob: -5.560620307922363
    5. '   ' → logprob: -9.560620307922363
    6. ' ):' → logprob: -10.060620307922363
    7. '_' → logprob: -10.560620307922363
    8. ':int' → logprob: -10.810620307922363
    9. ',' → logprob: -11.685620307922363
    10. '):

' → logprob: -12.060620307922363

Token 184: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2826572060585022
    2. ':' → logprob: -2.0326571464538574
    3. ')' → logprob: -2.2826571464538574
    4. '):
' → logprob: -4.782657146453857
    5. ' ):' → logprob: -5.532657146453857
    6. ' )' → logprob: -7.532657146453857
    7. ':int' → logprob: -8.657657623291016
    8. ' :' → logprob: -9.657657623291016
    9. '   ' → logprob: -9.782657623291016
    10. ' ):
' → logprob: -10.782657623291016

Token 185: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4372961223125458
    2. ')' → logprob: -1.6872961521148682
    3. 'self' → logprob: -2.437296152114868
    4. ' int' → logprob: -3.062296152114868
    5. ' self' → logprob: -3.687296152114868
    6. ' )' → logprob: -5.687295913696289
    7. 'node' → logprob: -6.062295913696289
    8. ' node' → logprob: -6.187295913696289
    9. ':int' → logprob: -7.312295913696289
    10. '   ' → logprob: -8.062295913696289

Token 186: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022275717929005623
    2. '):' → logprob: -6.127227783203125
    3. '):
' → logprob: -10.377227783203125
    4. ' )' → logprob: -12.002227783203125
    5. ':' → logprob: -12.752227783203125
    6. ')->' → logprob: -14.002227783203125
    7. '   ' → logprob: -14.127227783203125
    8. ',' → logprob: -15.377227783203125
    9. '):
' → logprob: -15.377227783203125
    10. '):

' → logprob: -15.877227783203125

Token 187: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.56364209135063e-05
    2. '):' → logprob: -9.875065803527832
    3. ' :' → logprob: -11.500065803527832
    4. '():' → logprob: -12.875065803527832
    5. ':**' → logprob: -14.625065803527832
    6. ':
' → logprob: -15.000065803527832
    7. ' ->' → logprob: -15.625065803527832
    8. ')' → logprob: -15.875065803527832
    9. '>:' → logprob: -16.000064849853516
    10. '->' → logprob: -16.125064849853516

Token 188: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0046316226944327354
    2. ' int' → logprob: -5.379631519317627
    3. 'float' → logprob: -11.879631996154785
    4. '(int' → logprob: -13.379631996154785
    5. '[int' → logprob: -14.129631996154785
    6. ' ' → logprob: -14.254631996154785
    7. '   ' → logprob: -14.754631996154785
    8. ')' → logprob: -15.504631996154785
    9. ' float' → logprob: -15.879631996154785
    10. 'Optional' → logprob: -16.00463104248047

Token 189: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000486680306494236
    2. ':
' → logprob: -8.000486373901367
    3. '):' → logprob: -8.875486373901367
    4. '):
' → logprob: -12.500486373901367
    5. '       ' → logprob: -12.875486373901367
    6. '():' → logprob: -12.875486373901367
    7. ' :' → logprob: -14.375486373901367
    8. ':def' → logprob: -14.375486373901367
    9. ',' → logprob: -14.500486373901367
    10. ':**' → logprob: -15.000486373901367

Token 190: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.045907653868198395
    2. ' if' → logprob: -3.795907735824585
    3. 'if' → logprob: -3.920907735824585
    4. '   ' → logprob: -6.670907497406006
    5. ':' → logprob: -7.170907497406006
    6. 'branch' → logprob: -9.170907974243164
    7. '
' → logprob: -9.420907974243164
    8. '        
' → logprob: -9.920907974243164
    9. '```' → logprob: -10.045907974243164
    10. ' branch' → logprob: -10.420907974243164

Token 191: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0009492144454270601
    2. ' if' → logprob: -7.500949382781982
    3. '       ' → logprob: -8.375948905944824
    4. 'branch' → logprob: -8.750948905944824
    5. 'node' → logprob: -12.250948905944824
    6. '
' → logprob: -13.875948905944824
    7. '#' (adapté à ' #') → logprob: -14.000948905944824
    8. 'point' → logprob: -14.625948905944824
    9. '        
' → logprob: -15.250948905944824
    10. '```' → logprob: -15.625948905944824

Token 192: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00017028623551595956
    2. ' if' → logprob: -9.250170707702637
    3. 'point' → logprob: -10.500170707702637
    4. '       ' → logprob: -10.625170707702637
    5. 'branch' → logprob: -11.500170707702637
    6. '#' → logprob: -12.250170707702637
    7. 'If' → logprob: -12.625170707702637
    8. 'node' → logprob: -12.750170707702637
    9. '```' → logprob: -14.250170707702637
    10. '   ' → logprob: -15.625170707702637

Token 193: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.2519298195838928
    2. ' node' → logprob: -1.501929759979248
    3. '(node' → logprob: -15.251930236816406
    4. '	node' → logprob: -15.501930236816406
    5. ' not' → logprob: -15.876930236816406
    6. 'not' → logprob: -16.126930236816406
    7. ' isinstance' → logprob: -16.626930236816406
    8. '[node' → logprob: -17.876930236816406
    9. '   ' → logprob: -18.126930236816406
    10. 'self' → logprob: -18.876930236816406

Token 194: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.40562939643859863
    2. ' not' → logprob: -1.2806293964385986
    3. 'not' → logprob: -2.9056293964385986
    4. ' is' → logprob: -8.03062915802002
    5. 'is' → logprob: -8.78062915802002
    6. 'id' → logprob: -8.78062915802002
    7. 'node' → logprob: -10.15562915802002
    8. '==' → logprob: -10.15562915802002
    9. '_is' → logprob: -10.28062915802002
    10. '_not' → logprob: -10.40562915802002

Token 195: ' ==' (ID: 951)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.007697483524680138
    2. 'not' → logprob: -5.382697582244873
    3. ' in' → logprob: -6.007697582244873
    4. '>' → logprob: -8.132697105407715
    5. ' >' → logprob: -8.757697105407715
    6. ' is' → logprob: -9.757697105407715
    7. ' >=' → logprob: -10.257697105407715
    8. '>=' → logprob: -10.757697105407715
    9. 'in' → logprob: -11.132697105407715
    10. '==' → logprob: -11.257697105407715

Token 196: ' N' (ID: 478)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1651431918144226
    2. ' self' → logprob: -1.9151432514190674
    3. '0' → logprob: -5.665143013000488
    4. ' ' → logprob: -6.665143013000488
    5. '1' → logprob: -9.165143013000488
    6. 'n' → logprob: -10.915143013000488
    7. ' node' → logprob: -12.040143013000488
    8. '   ' → logprob: -12.415143013000488
    9. '(self' → logprob: -12.415143013000488
    10. '	self' → logprob: -12.540143013000488

Token 197: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013283335138112307
    2. ':
' → logprob: -7.126328468322754
    3. ':return' → logprob: -8.251328468322754
    4. ' :' → logprob: -8.626328468322754
    5. '):' → logprob: -9.876328468322754
    6. ',' → logprob: -11.376328468322754
    7. '   ' → logprob: -12.626328468322754
    8. '():' → logprob: -12.751328468322754
    9. ' or' → logprob: -12.751328468322754
    10. '
' → logprob: -13.501328468322754

Token 198: ' it's' (ID: 4275)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.28970301151275635
    2. 'self' → logprob: -1.7897030115127563
    3. ' return' → logprob: -2.664702892303467
    4. 'return' → logprob: -4.414702892303467
    5. ' if' → logprob: -7.289702892303467
    6. ' ' → logprob: -7.414702892303467
    7. '       ' → logprob: -7.414702892303467
    8. ' node' → logprob: -8.414703369140625
    9. ' or' → logprob: -9.164703369140625
    10. ')' → logprob: -9.539703369140625

Token 199: ' an' (ID: 448)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2995864152908325
    2. 'a' → logprob: -1.4245864152908325
    3. ' an' → logprob: -4.924586296081543
    4. 'self' → logprob: -5.424586296081543
    5. ' self' → logprob: -6.174586296081543
    6. ' the' → logprob: -6.424586296081543
    7. '1' → logprob: -6.674586296081543
    8. ' ' → logprob: -7.424586296081543
    9. 'an' → logprob: -7.924586296081543
    10. 'the' → logprob: -8.174586296081543

Token 200: ' ending' (ID: 22013)
  Prédit: 'ending'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ending' → logprob: -0.19537828862667084
    2. ' ending' → logprob: -1.820378303527832
    3. 'end' → logprob: -4.195378303527832
    4. 'endpoint' → logprob: -8.320378303527832
    5. ' end' → logprob: -9.445378303527832
    6. ' endpoint' → logprob: -10.570378303527832
    7. '<|end|>' → logprob: -10.945378303527832
    8. 'ender' → logprob: -11.445378303527832
    9. '-ending' → logprob: -11.445378303527832
    10. 'Ending' → logprob: -11.695378303527832

Token 201: ' node' (ID: 4596)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10573729872703552
    2. ',' → logprob: -3.6057372093200684
    3. '       ' → logprob: -3.9807372093200684
    4. ':return' → logprob: -3.9807372093200684
    5. '   ' → logprob: -4.605737209320068
    6. ' or' → logprob: -5.105737209320068
    7. ':
' → logprob: -5.480737209320068
    8. '
' → logprob: -5.605737209320068
    9. 'return' → logprob: -6.230737209320068
    10. '\n' → logprob: -6.480737209320068

Token 202: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5257321000099182
    2. ' or' → logprob: -1.6507320404052734
    3. ' if' → logprob: -2.2757320404052734
    4. ' and' → logprob: -3.4007320404052734
    5. '       ' → logprob: -4.025732040405273
    6. '<|end|>' → logprob: -4.025732040405273
    7. ',' → logprob: -4.400732040405273
    8. 'if' → logprob: -4.525732040405273
    9. '
' → logprob: -5.025732040405273
    10. '\n' → logprob: -5.275732040405273

Token 203: ' no' (ID: 860)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4150746762752533
    2. ' return' → logprob: -1.4150747060775757
    3. '0' → logprob: -2.540074586868286
    4. ' ' → logprob: -4.915074825286865
    5. '       ' → logprob: -5.165074825286865
    6. '1' → logprob: -5.915074825286865
    7. '   ' → logprob: -6.290074825286865
    8. '           ' → logprob: -8.415074348449707
    9. ':return' → logprob: -9.790074348449707
    10. '
' → logprob: -11.665074348449707

Token 204: ' cost' (ID: 3097)
  Prédit: ' additional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' additional' → logprob: -0.86744225025177
    2. 'time' → logprob: -1.74244225025177
    3. 'additional' → logprob: -2.2424421310424805
    4. ' extra' → logprob: -2.3674421310424805
    5. ' time' → logprob: -2.4924421310424805
    6. ' more' → logprob: -2.8674421310424805
    7. ' cost' → logprob: -4.2424421310424805
    8. 'cost' → logprob: -4.3674421310424805
    9. ' further' → logprob: -4.8674421310424805
    10. 'extra' → logprob: -5.1174421310424805

Token 205: ' to' (ID: 316)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5929489731788635
    2. ',' → logprob: -1.5929489135742188
    3. '.' → logprob: -2.2179489135742188
    4. '
' → logprob: -2.4679489135742188
    5. ':' → logprob: -3.9679489135742188
    6. '<|end|>' → logprob: -4.092948913574219
    7. ':return' → logprob: -5.842948913574219
    8. 'return' → logprob: -6.342948913574219
    9. '   ' → logprob: -6.342948913574219
    10. '<|end|>' → logprob: -6.467948913574219

Token 206: ' complete' (ID: 5533)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.037728603929281235
    2. 'complete' → logprob: -3.7877285480499268
    3. ' return' → logprob: -4.912728786468506
    4. '1' → logprob: -6.412728786468506
    5. 'compute' → logprob: -7.037728786468506
    6. 'add' → logprob: -7.287728786468506
    7. ' complete' → logprob: -7.412728786468506
    8. 'process' → logprob: -7.787728786468506
    9. 'visit' → logprob: -7.912728786468506
    10. 'answer' → logprob: -8.037728309631348

Token 207: ' endings' (ID: 152718)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6122412085533142
    2. '       ' → logprob: -1.362241268157959
    3. '   ' → logprob: -3.112241268157959
    4. ',' → logprob: -3.237241268157959
    5. ':' → logprob: -3.237241268157959
    6. '
' → logprob: -3.362241268157959
    7. ' if' → logprob: -4.737241268157959
    8. '.' → logprob: -4.737241268157959
    9. ' or' → logprob: -4.862241268157959
    10. ':return' → logprob: -5.362241268157959

Token 208: ' here' (ID: 2105)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.1085349321365356
    2. ':' → logprob: -1.3585349321365356
    3. '
' → logprob: -1.8585349321365356
    4. ' if' → logprob: -2.733534812927246
    5. ',' → logprob: -2.983534812927246
    6. '       ' → logprob: -3.108534812927246
    7. ' or' → logprob: -3.483534812927246
    8. '.' → logprob: -3.983534812927246
    9. ':return' → logprob: -4.108534812927246
    10. '   ' → logprob: -4.483534812927246

Token 209: ' except' (ID: 6384)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5352820158004761
    2. ' if' → logprob: -1.910282015800476
    3. '\n' → logprob: -2.4102821350097656
    4. ' or' → logprob: -3.2852821350097656
    5. 'if' → logprob: -3.4102821350097656
    6. '
' → logprob: -3.4102821350097656
    7. ':return' → logprob: -4.160282135009766
    8. ' and' → logprob: -4.285282135009766
    9. '   ' → logprob: -4.410282135009766
    10. '       ' → logprob: -4.660282135009766

Token 210: ' reaching' (ID: 29787)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.41142916679382324
    2. '0' → logprob: -1.7864291667938232
    3. '1' → logprob: -1.7864291667938232
    4. ' the' → logprob: -6.786429405212402
    5. ' one' → logprob: -8.161429405212402
    6. ' for' → logprob: -8.286429405212402
    7. '   ' → logprob: -9.161429405212402
    8. ' zero' → logprob: -9.161429405212402
    9. '\n' → logprob: -10.036429405212402
    10. '+' → logprob: -10.661429405212402

Token 211: ' it' (ID: 480)
  Prédit: ' it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' it' → logprob: -0.7165635228157043
    2. 'node' → logprob: -1.3415634632110596
    3. 'it' → logprob: -1.8415634632110596
    4. ' node' → logprob: -2.7165634632110596
    5. '1' → logprob: -3.9665634632110596
    6. ' the' → logprob: -5.841563701629639
    7. 'the' → logprob: -6.841563701629639
    8. ' ' → logprob: -7.841563701629639
    9. '(node' → logprob: -7.841563701629639
    10. ' itself' → logprob: -8.46656322479248

Token 212: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26575127243995667
    2. ' if' → logprob: -2.390751361846924
    3. ':' → logprob: -2.640751361846924
    4. ',' → logprob: -3.640751361846924
    5. '.' → logprob: -4.515751361846924
    6. '   ' → logprob: -4.640751361846924
    7. '
' → logprob: -5.140751361846924
    8. 'if' → logprob: -5.390751361846924
    9. ' or' → logprob: -6.140751361846924
    10. ' and' → logprob: -6.265751361846924

Token 213: 'handled' (ID: 79840)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2726573944091797
    2. ')' → logprob: -1.5226573944091797
    3. '1' → logprob: -4.27265739440918
    4. ' ' → logprob: -6.02265739440918
    5. 'return' → logprob: -6.02265739440918
    6. ' )' → logprob: -7.52265739440918
    7. ')
' → logprob: -7.64765739440918
    8. '   ' → logprob: -8.27265739440918
    9. ')return' → logprob: -8.77265739440918
    10. ' return' → logprob: -9.14765739440918

Token 214: ' by' (ID: 656)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.20715224742889404
    2. ')' → logprob: -2.5821523666381836
    3. ' elsewhere' → logprob: -3.0821523666381836
    4. 'in' → logprob: -4.457152366638184
    5. ' by' → logprob: -4.832152366638184
    6. 'by' → logprob: -4.957152366638184
    7. ' in' → logprob: -5.082152366638184
    8. ' earlier' → logprob: -5.207152366638184
    9. 'previous' → logprob: -5.582152366638184
    10. 'outside' → logprob: -5.582152366638184

Token 215: ' parent' (ID: 5980)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4215134084224701
    2. 'self' → logprob: -2.296513319015503
    3. 'the' → logprob: -2.796513319015503
    4. ')' → logprob: -2.921513319015503
    5. ' the' → logprob: -3.046513319015503
    6. ' return' → logprob: -3.421513319015503
    7. '1' → logprob: -3.671513319015503
    8. '   ' → logprob: -5.296513557434082
    9. ' self' → logprob: -5.921513557434082
    10. 'if' → logprob: -6.171513557434082

Token 216: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001843485952122137
    2. '):' → logprob: -9.125184059143066
    3. ').' → logprob: -10.875184059143066
    4. ')
' → logprob: -11.000184059143066
    5. ' )' → logprob: -11.375184059143066
    6. '   ' → logprob: -12.125184059143066
    7. '),' → logprob: -12.500184059143066
    8. '):
' → logprob: -12.500184059143066
    9. 'def' → logprob: -12.750184059143066
    10. 'if' → logprob: -13.500184059143066

Token 217: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09120972454547882
    2. '       ' → logprob: -2.841209650039673
    3. '   ' → logprob: -5.091209888458252
    4. '\n' → logprob: -5.341209888458252
    5. ' if' → logprob: -5.466209888458252
    6. '):' → logprob: -5.966209888458252
    7. '<|end|>' → logprob: -6.091209888458252
    8. ')' → logprob: -6.466209888458252
    9. '
' → logprob: -6.591209888458252
    10. ':return' → logprob: -6.591209888458252

Token 218: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0012295155320316553
    2. ' if' → logprob: -6.751229286193848
    3. '       ' → logprob: -10.126229286193848
    4. 'return' → logprob: -10.876229286193848
    5. '           ' → logprob: -16.126230239868164
    6. '   ' → logprob: -16.376230239868164
    7. '```' → logprob: -16.876230239868164
    8. 'elif' → logprob: -17.501230239868164
    9. ';if' → logprob: -17.501230239868164
    10. ')' → logprob: -17.751230239868164

Token 219: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.10021228343248367
    2. ' node' → logprob: -2.350212335586548
    3. '   ' → logprob: -12.975212097167969
    4. '       ' → logprob: -13.350212097167969
    5. '(node' → logprob: -14.100212097167969
    6. '           ' → logprob: -14.725212097167969
    7. '	node' → logprob: -14.850212097167969
    8. '_node' → logprob: -17.22521209716797
    9. '[node' → logprob: -17.22521209716797
    10. 'self' → logprob: -17.35021209716797

Token 220: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -1.6240566083070007e-06
    2. '==' → logprob: -13.750001907348633
    3. '_' → logprob: -15.250001907348633
    4. ' ==' → logprob: -15.750001907348633
    5. '```' → logprob: -16.875001907348633
    6. 'id' → logprob: -17.375001907348633
    7. ' _' → logprob: -17.375001907348633
    8. '_ids' → logprob: -18.125001907348633
    9. '_node' → logprob: -18.750001907348633
    10. '_is' → logprob: -19.250001907348633

Token 221: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.046879179775714874
    2. '==' → logprob: -3.171879291534424
    3. ' >' → logprob: -5.671879291534424
    4. '>' → logprob: -8.296878814697266
    5. ' >=' → logprob: -8.796878814697266
    6. ' not' → logprob: -10.921878814697266
    7. '>=' → logprob: -11.796878814697266
    8. ' ' → logprob: -12.421878814697266
    9. '=' → logprob: -14.796878814697266
    10. '   ' → logprob: -15.921878814697266

Token 222: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007114782347343862
    2. ' self' → logprob: -7.250711441040039
    3. '1' → logprob: -13.500711441040039
    4. '(self' → logprob: -16.37571144104004
    5. '       ' → logprob: -17.12571144104004
    6. '   ' → logprob: -17.25071144104004
    7. ' ' → logprob: -17.87571144104004
    8. '[self' → logprob: -18.75071144104004
    9. '
' → logprob: -18.87571144104004
    10. '```' → logprob: -18.87571144104004

Token 223: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.00013285996101330966
    2. '.' → logprob: -9.12513256072998
    3. 'n' → logprob: -10.87513256072998
    4. ' .' → logprob: -12.37513256072998
    5. ').' → logprob: -15.00013256072998
    6. '}.' → logprob: -17.000133514404297
    7. ' ' → logprob: -17.375133514404297
    8. '`.' → logprob: -17.375133514404297
    9. '_n' → logprob: -17.500133514404297
    10. '	n' → logprob: -17.625133514404297

Token 224: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008882349357008934
    2. ':
' → logprob: -4.758882522583008
    3. ':return' → logprob: -8.383882522583008
    4. '):' → logprob: -10.758882522583008
    5. ' :' → logprob: -12.008882522583008
    6. '):
' → logprob: -12.383882522583008
    7. ' or' → logprob: -12.883882522583008
    8. ')' → logprob: -12.883882522583008
    9. '   ' → logprob: -13.633882522583008
    10. ' :
' → logprob: -14.633882522583008

Token 225: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0205856803804636
    2. '       ' → logprob: -4.395585536956787
    3. 'return' → logprob: -5.645585536956787
    4. ' return' → logprob: -5.770585536956787
    5. ':return' → logprob: -7.645585536956787
    6. '   ' → logprob: -7.895585536956787
    7. ':' → logprob: -7.895585536956787
    8. '0' → logprob: -9.520586013793945
    9. ':
' → logprob: -10.145586013793945
    10. '
' → logprob: -10.895586013793945

Token 226: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -7.672236824873835e-05
    2. ' return' → logprob: -10.000076293945312
    3. '0' → logprob: -10.750076293945312
    4. '           ' → logprob: -12.000076293945312
    5. '       ' → logprob: -12.750076293945312
    6. '   ' → logprob: -15.125076293945312
    7. '1' → logprob: -15.250076293945312
    8. '
' → logprob: -15.500076293945312
    9. '               ' → logprob: -19.125076293945312
    10. ' ' → logprob: -19.625076293945312

Token 227: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6166903151315637e-05
    2. ' ' → logprob: -11.250016212463379
    3. '1' → logprob: -12.750016212463379
    4. '   ' → logprob: -16.750015258789062
    5. '```' → logprob: -18.250015258789062
    6. '۰' → logprob: -18.750015258789062
    7. '000' → logprob: -19.062515258789062
    8. ' ' → logprob: -19.062515258789062
    9. '  ' → logprob: -19.125015258789062
    10. '00' → logprob: -19.312515258789062

Token 228: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.4849443838757e-06
    2. '1' → logprob: -13.000004768371582
    3. ' ' → logprob: -13.125004768371582
    4. '   ' → logprob: -17.312503814697266
    5. 'zero' → logprob: -18.062503814697266
    6. '```' → logprob: -18.062503814697266
    7. '۰' → logprob: -18.562503814697266
    8. '000' → logprob: -18.687503814697266
    9. '100' → logprob: -18.875003814697266
    10. 'self' → logprob: -18.875003814697266

Token 229: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26745179295539856
    2. '       ' → logprob: -1.5174517631530762
    3. '<|end|>' → logprob: -5.017451763153076
    4. '\n' → logprob: -5.767451763153076
    5. '        
' → logprob: -5.767451763153076
    6. '        ' → logprob: -7.142451763153076
    7. '  
' → logprob: -8.142452239990234
    8. ' 
' → logprob: -8.267452239990234
    9. '    
' → logprob: -8.517452239990234
    10. ')' → logprob: -8.642452239990234

Token 230: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38880157470703125
    2. '
' → logprob: -1.2638015747070312
    3. '<|end|>' → logprob: -4.263801574707031
    4. '\n' → logprob: -4.513801574707031
    5. '        
' → logprob: -4.888801574707031
    6. '  
' → logprob: -6.638801574707031
    7. '        ' → logprob: -6.638801574707031
    8. '    
' → logprob: -7.263801574707031
    9. '   ' → logprob: -7.388801574707031
    10. ' 
' → logprob: -7.513801574707031

Token 231: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.05551096796989441
    2. ' if' → logprob: -2.930510997772217
    3. '       ' → logprob: -7.430510997772217
    4. '        
' → logprob: -11.305510520935059
    5. '
' → logprob: -11.805510520935059
    6. ')' → logprob: -12.305510520935059
    7. '   ' → logprob: -12.680510520935059
    8. '    
' → logprob: -13.680510520935059
    9. '```' → logprob: -13.805510520935059
    10. '#' → logprob: -13.805510520935059

Token 232: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.008615872822701931
    2. 'node' → logprob: -4.758615970611572
    3. '(node' → logprob: -14.258615493774414
    4. ' ' → logprob: -14.633615493774414
    5. '	node' → logprob: -15.883615493774414
    6. '_node' → logprob: -17.258615493774414
    7. '[node' → logprob: -17.633615493774414
    8. ' (' → logprob: -18.258615493774414
    9. ' ' → logprob: -18.508615493774414
    10. 'Node' → logprob: -18.883615493774414

Token 233: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -2.534558552724775e-05
    2. 'id' → logprob: -10.750025749206543
    3. '_' → logprob: -13.500025749206543
    4. 'in' → logprob: -14.500025749206543
    5. '```' → logprob: -14.750025749206543
    6. 'node' → logprob: -15.125025749206543
    7. '[node' → logprob: -15.375025749206543
    8. '_in' → logprob: -15.625025749206543
    9. ' in' → logprob: -16.000024795532227
    10. 'd' → logprob: -16.375024795532227

Token 234: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.036545149981975555
    2. 'in' → logprob: -3.5365450382232666
    3. ' not' → logprob: -5.036545276641846
    4. 'not' → logprob: -8.536544799804688
    5. ')' → logprob: -10.161544799804688
    6. ' ' → logprob: -10.536544799804688
    7. ']' → logprob: -12.286544799804688
    8. '   ' → logprob: -13.411544799804688
    9. '  ' → logprob: -14.036544799804688
    10. '	in' → logprob: -14.161544799804688

Token 235: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6932047605514526
    2. 'self' → logprob: -0.6932047605514526
    3. '       ' → logprob: -10.068204879760742
    4. '<|end|>' → logprob: -12.318204879760742
    5. '(self' → logprob: -12.568204879760742
    6. '	self' → logprob: -12.943204879760742
    7. '_self' → logprob: -13.818204879760742
    8. '[self' → logprob: -13.818204879760742
    9. '=self' → logprob: -14.568204879760742
    10. 'Self' → logprob: -14.568204879760742

Token 236: '.memo' (ID: 161018)
  Prédit: '.memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.memo' → logprob: -0.0012524925405159593
    2. '.' → logprob: -6.7512526512146
    3. ' .' → logprob: -9.501252174377441
    4. '.mem' → logprob: -12.126252174377441
    5. '.memory' → logprob: -13.876252174377441
    6. 'memo' → logprob: -14.626252174377441
    7. '.mime' → logprob: -15.626252174377441
    8. '.mu' → logprob: -16.126253128051758
    9. ' memo' → logprob: -16.376253128051758
    10. '.me' → logprob: -17.126253128051758

Token 237: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.0325924449716695e-05
    2. '_' → logprob: -11.50001049041748
    3. ':' → logprob: -17.125009536743164
    4. '_times' → logprob: -17.125009536743164
    5. '_TIME' → logprob: -18.500009536743164
    6. '_value' → logprob: -18.625009536743164
    7. '_timer' → logprob: -18.750009536743164
    8. ' _' → logprob: -19.000009536743164
    9. 'time' → logprob: -19.125009536743164
    10. '   ' → logprob: -19.125009536743164

Token 238: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00020663968462031335
    2. ':return' → logprob: -8.62520694732666
    3. ' :' → logprob: -11.00020694732666
    4. ':
' → logprob: -11.62520694732666
    5. '):' → logprob: -14.37520694732666
    6. ':**' → logprob: -15.37520694732666
    7. '<|end|>' → logprob: -15.62520694732666
    8. '>:' → logprob: -16.375205993652344
    9. '=' → logprob: -16.625205993652344
    10. '}:' → logprob: -16.625205993652344

Token 239: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6522831916809082
    2. ':' → logprob: -1.1522831916809082
    3. '           ' → logprob: -1.9022831916809082
    4. ':return' → logprob: -4.902283191680908
    5. ' return' → logprob: -5.527283191680908
    6. 'return' → logprob: -6.652283191680908
    7. ':
' → logprob: -7.402283191680908
    8. '               ' → logprob: -8.27728271484375
    9. '        ' → logprob: -9.15228271484375
    10. '   ' → logprob: -9.15228271484375

Token 240: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03811711072921753
    2. ' return' → logprob: -3.2881171703338623
    3. '       ' → logprob: -9.913117408752441
    4. '           ' → logprob: -10.663117408752441
    5. '   ' → logprob: -13.538117408752441
    6. 'self' → logprob: -14.663117408752441
    7. ':return' → logprob: -15.413117408752441
    8. '
' → logprob: -15.788117408752441
    9. '        ' → logprob: -16.038116455078125
    10. '```' → logprob: -16.288116455078125

Token 241: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0485873706638813
    2. ' self' → logprob: -3.0485873222351074
    3. '(self' → logprob: -19.798587799072266
    4. '       ' → logprob: -20.298587799072266
    5. '	self' → logprob: -20.298587799072266
    6. '[self' → logprob: -20.548587799072266
    7. '           ' → logprob: -20.798587799072266
    8. '   ' → logprob: -22.298587799072266
    9. '_self' → logprob: -22.673587799072266
    10. '
' → logprob: -22.673587799072266

Token 242: '.memo' (ID: 161018)
  Prédit: '.memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.memo' → logprob: -3.2617008400848135e-05
    2. '.' → logprob: -10.625032424926758
    3. '.mem' → logprob: -12.750032424926758
    4. 'memo' → logprob: -12.875032424926758
    5. ' .' → logprob: -13.500032424926758
    6. '.mime' → logprob: -15.000032424926758
    7. '._' → logprob: -15.125032424926758
    8. '.mn' → logprob: -15.375032424926758
    9. '.memory' → logprob: -15.375032424926758
    10. '.mongo' → logprob: -16.625032424926758

Token 243: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -3.128163257315464e-07
    2. 'time' → logprob: -16.375
    3. '_times' → logprob: -17.125
    4. '_' → logprob: -17.75
    5. '_TIME' → logprob: -19.375
    6. '_timer' → logprob: -19.5
    7. '_size' → logprob: -20.25
    8. 's' → logprob: -20.25
    9. '_code' → logprob: -20.375
    10. '[' → logprob: -20.5

Token 244: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -13.750001907348633
    3. '(node' → logprob: -15.500001907348633
    4. 'node' → logprob: -16.000001907348633
    5. '```' → logprob: -18.250001907348633
    6. '[]' → logprob: -18.875001907348633
    7. '[n' → logprob: -19.250001907348633
    8. ',node' → logprob: -19.500001907348633
    9. '[obj' → logprob: -19.625001907348633
    10. '\[' → logprob: -19.750001907348633

Token 245: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -5.512236498361744e-07
    2. 'id' → logprob: -14.875000953674316
    3. '_' → logprob: -16.125
    4. '_]' → logprob: -17.0
    5. ']' → logprob: -17.75
    6. '])' → logprob: -18.125
    7. '_)' → logprob: -19.25
    8. 'd' → logprob: -20.375
    9. ']_' → logprob: -20.375
    10. ' _' → logprob: -20.5

Token 246: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10052086412906647
    2. ']' → logprob: -2.3505208492279053
    3. '])' → logprob: -8.475521087646484
    4. ')
' → logprob: -9.850521087646484
    5. ' )' → logprob: -10.475521087646484
    6. ')]' → logprob: -11.600521087646484
    7. ']
' → logprob: -11.975521087646484
    8. '）' → logprob: -12.475521087646484
    9. '}' → logprob: -13.100521087646484
    10. ' ]' → logprob: -13.725521087646484

Token 247: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007408443372696638
    2. '
' → logprob: -6.007408618927002
    3. '        
' → logprob: -6.257408618927002
    4. 'branch' → logprob: -6.507408618927002
    5. '   ' → logprob: -7.507408618927002
    6. '    
' → logprob: -8.632408142089844
    7. ' branch' → logprob: -9.007408142089844
    8. ' if' → logprob: -9.132408142089844
    9. 'if' → logprob: -9.507408142089844
    10. '#' → logprob: -10.257408142089844

Token 248: ' node' (ID: 4596)
  Prédit: 'bp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bp' → logprob: -0.1368519812822342
    2. 'left' → logprob: -2.6368520259857178
    3. 'yes' → logprob: -3.3868520259857178
    4. 'point' → logprob: -4.511851787567139
    5. 'branch' → logprob: -4.886851787567139
    6. 'node' (adapté à ' node') → logprob: -6.136851787567139
    7. 'b' → logprob: -7.761851787567139
    8. ' bp' → logprob: -8.261852264404297
    9. 'current' → logprob: -8.386852264404297
    10. 'time' → logprob: -9.011852264404297

Token 249: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005931758787482977
    2. '=' → logprob: -5.130931854248047
    3. ':' → logprob: -13.005931854248047
    4. '_' → logprob: -15.005931854248047
    5. '   ' → logprob: -15.130931854248047
    6. '.' → logprob: -16.005931854248047
    7. '_obj' → logprob: -16.880931854248047
    8. ' =
' → logprob: -17.255931854248047
    9. 'obj' → logprob: -18.005931854248047
    10. ' ' → logprob: -18.380931854248047

Token 250: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004309076175559312
    2. ' self' → logprob: -7.750431060791016
    3. '       ' → logprob: -15.375431060791016
    4. '=self' → logprob: -18.250431060791016
    5. '(self' → logprob: -18.375431060791016
    6. '   ' → logprob: -19.125431060791016
    7. '
' → logprob: -19.250431060791016
    8. '[self' → logprob: -19.375431060791016
    9. 'this' → logprob: -20.250431060791016
    10. '	self' → logprob: -20.500431060791016

Token 251: '.branch' (ID: 118555)
  Prédit: '.branch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.branch' → logprob: -6.432518421206623e-05
    2. 'branch' → logprob: -9.7500638961792
    3. '.' → logprob: -12.2500638961792
    4. ' .' → logprob: -14.8750638961792
    5. '.br' → logprob: -15.6250638961792
    6. '.class' → logprob: -15.6250638961792
    7. '.self' → logprob: -15.8750638961792
    8. '.block' → logprob: -16.375064849853516
    9. '.b' → logprob: -16.500064849853516
    10. 'self' → logprob: -16.750064849853516

Token 252: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -1.6240566083070007e-06
    2. '_branch' → logprob: -13.750001907348633
    3. '_points' → logprob: -15.375001907348633
    4. '_ing' → logprob: -16.250001907348633
    5. 'hing' → logprob: -16.625001907348633
    6. 'ING' → logprob: -17.250001907348633
    7. '_point' → logprob: -17.250001907348633
    8. 'branch' → logprob: -17.500001907348633
    9. 'inging' → logprob: -18.250001907348633
    10. ' branching' → logprob: -18.500001907348633

Token 253: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -4.1318875446449965e-05
    2. '_point' → logprob: -10.125041007995605
    3. 'points' → logprob: -14.875041007995605
    4. 'Points' → logprob: -15.250041007995605
    5. '_p' → logprob: -15.375041007995605
    6. '_' → logprob: -15.500041007995605
    7. '_pts' → logprob: -15.750041007995605
    8. 's' → logprob: -17.125041961669922
    9. '_POINTS' → logprob: -17.500041961669922
    10. ' points' → logprob: -18.250041961669922

Token 254: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -1.7432603272027336e-06
    2. '[' → logprob: -14.000001907348633
    3. '.get' → logprob: -14.500001907348633
    4. '[id' → logprob: -15.000001907348633
    5. '[user' → logprob: -18.375001907348633
    6. '(node' → logprob: -18.875001907348633
    7. ' [' → logprob: -19.250001907348633
    8. '[token' → logprob: -19.375001907348633
    9. '[player' → logprob: -19.625001907348633
    10. '[self' → logprob: -20.125001907348633

Token 255: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.0004896456957794726
    2. 'id' → logprob: -7.625489711761475
    3. '.id' → logprob: -14.500489234924316
    4. ')' → logprob: -14.750489234924316
    5. '._' → logprob: -15.000489234924316
    6. '_' → logprob: -16.000490188598633
    7. ']' → logprob: -16.375490188598633
    8. 'd' → logprob: -16.625490188598633
    9. '])' → logprob: -16.750490188598633
    10. '_.' → logprob: -17.125490188598633

Token 256: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12727412581443787
    2. ')
' → logprob: -2.1272740364074707
    3. ')

' → logprob: -8.502274513244629
    4. ' )' → logprob: -9.627274513244629
    5. ' )
' → logprob: -10.377274513244629
    6. ')
' → logprob: -11.127274513244629
    7. ']' → logprob: -11.502274513244629
    8. '       ' → logprob: -12.002274513244629
    9. '）' → logprob: -12.252274513244629
    10. '   ' → logprob: -12.502274513244629

Token 257: '       ' (ID: 309)
  Prédit: 'yes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yes' → logprob: -1.0212942361831665
    2. 'time' → logprob: -1.1462942361831665
    3. 'left' → logprob: -1.6462942361831665
    4. ' yes' → logprob: -3.271294116973877
    5. '       ' → logprob: -3.521294116973877
    6. ' time' → logprob: -3.771294116973877
    7. ' left' → logprob: -3.896294116973877
    8. 't' → logprob: -4.396294116973877
    9. 'lt' → logprob: -6.646294116973877
    10. 'l' → logprob: -6.771294116973877

Token 258: ' #' (ID: 1069)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.559414267539978
    2. 'yes' → logprob: -1.434414267539978
    3. 'left' → logprob: -1.684414267539978
    4. 't' → logprob: -5.684414386749268
    5. 'no' → logprob: -7.934414386749268
    6. ' yes' → logprob: -8.05941390991211
    7. 'cost' → logprob: -8.80941390991211
    8. ' left' → logprob: -9.05941390991211
    9. ' time' → logprob: -9.05941390991211
    10. 'l' → logprob: -10.30941390991211

Token 259: ' If' (ID: 1843)
  Prédit: 'yes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yes' → logprob: -0.4898294508457184
    2. 'time' → logprob: -1.239829421043396
    3. 'left' → logprob: -2.3648295402526855
    4. ' yes' → logprob: -5.9898295402526855
    5. 't' → logprob: -7.4898295402526855
    6. ' time' → logprob: -8.364829063415527
    7. ' left' → logprob: -8.489829063415527
    8. 'cost' → logprob: -9.114829063415527
    9. 'no' → logprob: -9.239829063415527
    10. '#' → logprob: -10.114829063415527

Token 260: ' children' (ID: 3953)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.013495361432433128
    2. ' node' → logprob: -4.388495445251465
    3. 'yes' → logprob: -7.888495445251465
    4. 'the' → logprob: -8.638495445251465
    5. 'both' → logprob: -9.013495445251465
    6. 'no' → logprob: -9.638495445251465
    7. ' yes' → logprob: -10.388495445251465
    8. 'self' → logprob: -10.388495445251465
    9. ' the' → logprob: -10.513495445251465
    10. ' both' → logprob: -11.013495445251465

Token 261: ' are' (ID: 553)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'are' → logprob: -1.1403323411941528
    2. ' are' → logprob: -1.5153323411941528
    3. ':' → logprob: -1.7653323411941528
    4. '=' → logprob: -1.8903323411941528
    5. ' is' → logprob: -3.7653322219848633
    6. ' =' → logprob: -3.7653322219848633
    7. 'both' → logprob: -3.8903322219848633
    8. 'is' → logprob: -4.140332221984863
    9. 'time' → logprob: -4.265332221984863
    10. '_time' → logprob: -5.265332221984863

Token 262: ' endings' (ID: 152718)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3479337692260742
    2. 'le' → logprob: -2.097933769226074
    3. 'both' → logprob: -2.222933769226074
    4. 'ending' → logprob: -3.347933769226074
    5. 'inte' → logprob: -5.097933769226074
    6. 'leaf' → logprob: -5.597933769226074
    7. ' self' → logprob: -5.597933769226074
    8. ' integers' → logprob: -5.847933769226074
    9. 'int' → logprob: -6.347933769226074
    10. ' both' → logprob: -6.347933769226074

Token 263: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23774008452892303
    2. ' or' → logprob: -2.4877400398254395
    3. ' and' → logprob: -2.8627400398254395
    4. '       ' → logprob: -3.7377400398254395
    5. 'and' → logprob: -3.9877400398254395
    6. 'if' → logprob: -5.1127400398254395
    7. '           ' → logprob: -5.2377400398254395
    8. ',' → logprob: -5.3627400398254395
    9. 'or' → logprob: -5.4877400398254395
    10. ' if' → logprob: -5.6127400398254395

Token 264: 'id' (ID: 315)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.5242959260940552
    2. ' node' → logprob: -1.0242959260940552
    3. ' or' → logprob: -3.3992958068847656
    4. '(node' → logprob: -5.274295806884766
    5. ')' → logprob: -5.399295806884766
    6. '),' → logprob: -6.524295806884766
    7. 'or' → logprob: -6.649295806884766
    8. '       ' → logprob: -7.274295806884766
    9. ',' → logprob: -7.524295806884766
    10. 'self' → logprob: -8.149295806884766

Token 265: ' ==' (ID: 951)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2429227977991104
    2. '+' → logprob: -1.6179227828979492
    3. ' ==' → logprob: -4.867922782897949
    4. ' -' → logprob: -5.867922782897949
    5. '==' → logprob: -5.992922782897949
    6. ' in' → logprob: -6.992922782897949
    7. '-' → logprob: -7.242922782897949
    8. '   ' → logprob: -7.367922782897949
    9. ' <' → logprob: -7.617922782897949
    10. ')' → logprob: -7.992922782897949

Token 266: ' n' (ID: 297)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.012610193341970444
    2. ' self' → logprob: -4.387609958648682
    3. 'node' → logprob: -9.63761043548584
    4. 'n' → logprob: -11.01261043548584
    5. ' node' → logprob: -12.13761043548584
    6. '   ' → logprob: -12.63761043548584
    7. '=self' → logprob: -12.88761043548584
    8. ')' → logprob: -13.76261043548584
    9. ' ' → logprob: -13.88761043548584
    10. '       ' → logprob: -14.13761043548584

Token 267: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.4373370110988617
    2. ' or' → logprob: -1.437337040901184
    3. ')' → logprob: -2.3123369216918945
    4. '-' → logprob: -5.1873369216918945
    5. 'or' → logprob: -5.4373369216918945
    6. ' -' → logprob: -5.9373369216918945
    7. '):' → logprob: -6.0623369216918945
    8. '       ' → logprob: -7.0623369216918945
    9. ' ),' → logprob: -7.4373369216918945
    10. ',' → logprob: -8.312336921691895

Token 268: ' we' (ID: 581)
  Prédit: 'yes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yes' → logprob: -0.7157887816429138
    2. 'time' → logprob: -1.5907888412475586
    3. 'left' → logprob: -2.4657888412475586
    4. ' yes' → logprob: -2.4657888412475586
    5. '       ' → logprob: -3.0907888412475586
    6. ' time' → logprob: -3.3407888412475586
    7. 'then' → logprob: -4.215788841247559
    8. ' then' → logprob: -4.840788841247559
    9. 'child' → logprob: -4.965788841247559
    10. ' left' → logprob: -4.965788841247559

Token 269: ' can' (ID: 665)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4837725758552551
    2. ' return' → logprob: -2.3587725162506104
    3. 'return' → logprob: -2.3587725162506104
    4. ' can' → logprob: -2.9837725162506104
    5. ' have' → logprob: -3.6087725162506104
    6. 'have' → logprob: -4.3587727546691895
    7. '#' → logprob: -4.6087727546691895
    8. '   ' → logprob: -4.8587727546691895
    9. ':' → logprob: -4.8587727546691895
    10. ''ll' → logprob: -5.2337727546691895

Token 270: ' consider' (ID: 3331)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.14285920560359955
    2. ' return' → logprob: -2.8928592205047607
    3. '       ' → logprob: -3.5178592205047607
    4. '           ' → logprob: -3.8928592205047607
    5. 'compute' → logprob: -5.267858982086182
    6. 'min' → logprob: -5.767858982086182
    7. '   ' → logprob: -5.892858982086182
    8. 'visit' → logprob: -6.517858982086182
    9. 'choose' → logprob: -6.642858982086182
    10. '#' → logprob: -6.642858982086182

Token 271: ' those' (ID: 2617)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05627605691552162
    2. 'max' → logprob: -4.431275844573975
    3. ' ' → logprob: -4.556275844573975
    4. 'time' → logprob: -4.806275844573975
    5. '0' → logprob: -5.056275844573975
    6. 'self' → logprob: -6.056275844573975
    7. 'both' → logprob: -6.056275844573975
    8. 'min' → logprob: -6.056275844573975
    9. ' max' → logprob: -6.431275844573975
    10. 'the' → logprob: -6.556275844573975

Token 272: ' endings' (ID: 152718)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.4876159727573395
    2. ' times' → logprob: -1.987615942955017
    3. ' as' → logprob: -2.4876160621643066
    4. 'time' → logprob: -3.3626160621643066
    5. '_time' → logprob: -3.7376160621643066
    6. 'cost' → logprob: -4.237616062164307
    7. 'as' → logprob: -4.487616062164307
    8. 'le' → logprob: -4.487616062164307
    9. '       ' → logprob: -4.487616062164307
    10. '_cost' → logprob: -4.862616062164307

Token 273: ' reached' (ID: 15237)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41183626651763916
    2. 'time' → logprob: -2.2868361473083496
    3. 'yes' → logprob: -2.6618361473083496
    4. ',' → logprob: -3.2868361473083496
    5. ' as' → logprob: -3.9118361473083496
    6. 'times' → logprob: -3.9118361473083496
    7. ' or' → logprob: -4.03683614730835
    8. ' and' → logprob: -4.66183614730835
    9. '_time' → logprob: -4.66183614730835
    10. '_yes' → logprob: -5.28683614730835

Token 274: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04587007686495781
    2. ',' → logprob: -3.420870065689087
    3. ' and' → logprob: -5.670870304107666
    4. ':' → logprob: -6.170870304107666
    5. 'time' → logprob: -6.670870304107666
    6. '.' → logprob: -7.170870304107666
    7. ';' → logprob: -7.295870304107666
    8. '           ' → logprob: -7.420870304107666
    9. 'and' → logprob: -7.795870304107666
    10. ' if' → logprob: -8.295869827270508

Token 275: ' one' (ID: 1001)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5321839451789856
    2. 'return' → logprob: -1.4071838855743408
    3. 'node' → logprob: -3.657183885574341
    4. 'max' → logprob: -4.15718412399292
    5. ' visiting' → logprob: -4.28218412399292
    6. 'self' → logprob: -4.28218412399292
    7. 'the' → logprob: -4.40718412399292
    8. ' ' → logprob: -4.40718412399292
    9. ' the' → logprob: -4.65718412399292
    10. '   ' → logprob: -4.90718412399292

Token 276: ' step' (ID: 5983)
  Prédit: ' step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.48230603337287903
    2. ' +' → logprob: -2.3573060035705566
    3. ' plus' → logprob: -2.4823060035705566
    4. 'step' → logprob: -2.7323060035705566
    5. '+' → logprob: -3.1073060035705566
    6. ' unit' → logprob: -3.6073060035705566
    7. '
' → logprob: -3.8573060035705566
    8. 'plus' → logprob: -4.482306003570557
    9. 'unit' → logprob: -4.857306003570557
    10. 'time' → logprob: -5.357306003570557

Token 277: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1541728675365448
    2. '+' → logprob: -3.404172897338867
    3. 'time' → logprob: -3.779172897338867
    4. 'yes' → logprob: -3.779172897338867
    5. ',' → logprob: -3.904172897338867
    6. '_yes' → logprob: -4.654172897338867
    7. '_time' → logprob: -5.279172897338867
    8. ' +' → logprob: -5.529172897338867
    9. ' yes' → logprob: -5.529172897338867
    10. ')' → logprob: -5.904172897338867

Token 278: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -1.1494429111480713
    2. ' time' → logprob: -1.3994429111480713
    3. 'yes' → logprob: -1.5244429111480713
    4. ' yes' → logprob: -2.5244429111480713
    5. 'left' → logprob: -3.1494429111480713
    6. '       ' → logprob: -3.5244429111480713
    7. ' left' → logprob: -3.8994429111480713
    8. '   ' → logprob: -5.149442672729492
    9. 'cost' → logprob: -5.149442672729492
    10. 'self' → logprob: -5.774442672729492

Token 279: ' must' (ID: 2804)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1358480304479599
    2. '=' → logprob: -2.135848045349121
    3. '+' → logprob: -5.885848045349121
    4. '_' → logprob: -6.510848045349121
    5. '_yes' → logprob: -6.635848045349121
    6. '_cost' → logprob: -6.885848045349121
    7. '   ' → logprob: -7.760848045349121
    8. '_to' → logprob: -8.260848045349121
    9. '1' → logprob: -8.260848045349121
    10. '_time' → logprob: -8.385848045349121

Token 280: ' be' (ID: 413)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6891307234764099
    2. ' be' → logprob: -1.3141307830810547
    3. 'be' → logprob: -2.4391307830810547
    4. '+=' → logprob: -2.5641307830810547
    5. ' =' → logprob: -3.3141307830810547
    6. '+' → logprob: -4.689130783081055
    7. ' +=' → logprob: -4.939130783081055
    8. 'include' → logprob: -5.564130783081055
    9. 'increment' → logprob: -6.689130783081055
    10. ' include' → logprob: -7.064130783081055

Token 281: ' counted' (ID: 60500)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03442378342151642
    2. 'max' → logprob: -4.034423828125
    3. ' ' → logprob: -5.284423828125
    4. ' max' → logprob: -5.659423828125
    5. '0' → logprob: -6.284423828125
    6. '+' → logprob: -6.534423828125
    7. '   ' → logprob: -6.534423828125
    8. 'min' → logprob: -7.159423828125
    9. 'node' → logprob: -7.659423828125
    10. '       ' → logprob: -8.034423828125

Token 282: ' in' (ID: 306)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1522727906703949
    2. ' +' → logprob: -2.6522727012634277
    3. ' =' → logprob: -3.9022727012634277
    4. '=' → logprob: -4.527272701263428
    5. ' +=' → logprob: -4.777272701263428
    6. '       ' → logprob: -4.777272701263428
    7. '+=' → logprob: -4.777272701263428
    8. '_time' → logprob: -5.402272701263428
    9. '   ' → logprob: -6.152272701263428
    10. ' for' → logprob: -7.027272701263428

Token 283: ' parent' (ID: 5980)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.0887656211853027
    2. '1' → logprob: -1.8387656211853027
    3. 'the' → logprob: -2.2137656211853027
    4. 'return' → logprob: -2.7137656211853027
    5. 'both' → logprob: -2.7137656211853027
    6. 'self' → logprob: -2.8387656211853027
    7. 'children' → logprob: -3.0887656211853027
    8. 'child' → logprob: -3.5887656211853027
    9. 'dfs' → logprob: -4.213765621185303
    10. 'yes' → logprob: -4.338765621185303

Token 284: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6301919221878052
    2. ' yes' → logprob: -1.8801919221878052
    3. 'time' → logprob: -2.1301918029785156
    4. 'yes' → logprob: -2.5051918029785156
    5. ' time' → logprob: -2.8801918029785156
    6. '        
' → logprob: -4.255191802978516
    7. ' if' → logprob: -4.505191802978516
    8. '
' → logprob: -5.505191802978516
    9. '_yes' → logprob: -5.630191802978516
    10. 'left' → logprob: -5.880191802978516

Token 285: 'edges' (ID: 39127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5391244888305664
    2. 'return' → logprob: -2.4141244888305664
    3. '1' → logprob: -2.5391244888305664
    4. 'max' → logprob: -2.7891244888305664
    5. '       ' → logprob: -3.1641244888305664
    6. 'self' → logprob: -3.9141244888305664
    7. 'yes' → logprob: -4.164124488830566
    8. 'else' → logprob: -4.289124488830566
    9. '0' → logprob: -4.539124488830566
    10. ' )' → logprob: -4.664124488830566

Token 286: ' cost' (ID: 3097)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18296051025390625
    2. '+' → logprob: -3.1829605102539062
    3. '_time' → logprob: -3.4329605102539062
    4. ' +' → logprob: -3.6829605102539062
    5. '_cost' → logprob: -4.182960510253906
    6. ' )' → logprob: -4.682960510253906
    7. '_count' → logprob: -5.432960510253906
    8. ' cost' → logprob: -5.557960510253906
    9. 'cost' → logprob: -5.557960510253906
    10. ' are' → logprob: -5.807960510253906

Token 287: ')
' (ID: 446)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0714027881622314
    2. ' +' → logprob: -1.3214027881622314
    3. '+' → logprob: -1.8214027881622314
    4. '=' → logprob: -2.8214027881622314
    5. ' =' → logprob: -2.9464027881622314
    6. ')' → logprob: -2.9464027881622314
    7. ' ' → logprob: -3.0714027881622314
    8. 's' → logprob: -4.696402549743652
    9. ' )' → logprob: -6.321402549743652
    10. ' is' → logprob: -6.821402549743652

Token 288: '       ' (ID: 309)
  Prédit: ' yes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' yes' → logprob: -0.6260268092155457
    2. ' time' → logprob: -1.8760268688201904
    3. 'yes' → logprob: -1.8760268688201904
    4. '       ' → logprob: -2.6260268688201904
    5. 'time' → logprob: -2.8760268688201904
    6. ' left' → logprob: -4.251026630401611
    7. 'left' → logprob: -5.376026630401611
    8. ' cost' → logprob: -6.376026630401611
    9. ' no' → logprob: -6.376026630401611
    10. 'cost' → logprob: -7.001026630401611

Token 289: ' left' (ID: 3561)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.8338572382926941
    2. 'yes' → logprob: -1.2088572978973389
    3. 'left' (adapté à ' left') → logprob: -1.7088572978973389
    4. ' yes' → logprob: -3.458857297897339
    5. ' time' → logprob: -3.583857297897339
    6. ' left' → logprob: -3.833857297897339
    7. '       ' → logprob: -6.08385705947876
    8. 'cost' → logprob: -6.95885705947876
    9. 't' → logprob: -7.20885705947876
    10. 'l' → logprob: -8.333857536315918

Token 290: ' =' (ID: 314)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.0007786541245877743
    2. '_cost' → logprob: -7.250778675079346
    3. ' =' → logprob: -10.500778198242188
    4. '_' → logprob: -10.500778198242188
    5. '=' → logprob: -11.750778198242188
    6. 'time' → logprob: -12.750778198242188
    7. '_t' → logprob: -14.000778198242188
    8. '_child' → logprob: -15.000778198242188
    9. '_target' → logprob: -15.125778198242188
    10. '_branch' → logprob: -15.125778198242188

Token 291: ' node' (ID: 4596)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005804349202662706
    2. ' self' → logprob: -7.875580310821533
    3. '1' → logprob: -8.625580787658691
    4. 'node' → logprob: -10.875580787658691
    5. '(self' → logprob: -13.750580787658691
    6. ' ' → logprob: -15.250580787658691
    7. '   ' → logprob: -15.500580787658691
    8. '       ' → logprob: -15.750580787658691
    9. '	self' → logprob: -16.500579833984375
    10. '0' → logprob: -16.625579833984375

Token 292: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.021702438592910767
    2. '._' → logprob: -4.271702289581299
    3. '.no' → logprob: -5.396702289581299
    4. ' .' → logprob: -6.896702289581299
    5. '.' → logprob: -7.146702289581299
    6. '_yes' → logprob: -7.646702289581299
    7. ' =' → logprob: -8.771702766418457
    8. '=yes' → logprob: -9.146702766418457
    9. '_y' → logprob: -9.771702766418457
    10. '=' → logprob: -10.146702766418457

Token 293: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -1.5332478142227046e-05
    2. 'yes' → logprob: -12.250015258789062
    3. '_es' → logprob: -12.375015258789062
    4. '_yes' → logprob: -13.375015258789062
    5. '_target' → logprob: -13.500015258789062
    6. 's' → logprob: -14.250015258789062
    7. 'ес' → logprob: -14.375015258789062
    8. ' es' → logprob: -14.750015258789062
    9. 'ES' → logprob: -14.875015258789062
    10. 'est' → logprob: -15.000015258789062

Token 294: '_target' (ID: 24705)
  Prédit: '_target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_target' → logprob: -1.2664456789934775e-06
    2. '_' → logprob: -14.250000953674316
    3. 'target' → logprob: -15.375000953674316
    4. '_token' → logprob: -16.500001907348633
    5. '_time' → logprob: -16.625001907348633
    6. '_targets' → logprob: -16.875001907348633
    7. '_cost' → logprob: -17.250001907348633
    8. ' _' → logprob: -17.625001907348633
    9. '_t' → logprob: -17.875001907348633
    10. 'Target' → logprob: -18.250001907348633

Token 295: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0141634941101074
    2. '       ' → logprob: -1.1391634941101074
    3. ' +' → logprob: -2.7641634941101074
    4. 'time' → logprob: -2.7641634941101074
    5. '_time' → logprob: -2.8891634941101074
    6. ')' → logprob: -3.0141634941101074
    7. '
' → logprob: -3.1391634941101074
    8. '<|end|>' → logprob: -4.889163494110107
    9. ' if' → logprob: -5.014163494110107
    10. '        ' → logprob: -5.014163494110107

Token 296: '       ' (ID: 309)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.40495020151138306
    2. '       ' → logprob: -1.5299501419067383
    3. '
' → logprob: -3.1549501419067383
    4. ' right' → logprob: -3.4049501419067383
    5. 'time' → logprob: -4.529950141906738
    6. ')' → logprob: -4.904950141906738
    7. '+' → logprob: -5.029950141906738
    8. 'left' → logprob: -5.904950141906738
    9. ',right' → logprob: -6.404950141906738
    10. ' 
' → logprob: -7.029950141906738

Token 297: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.0007522129453718662
    2. ' right' → logprob: -7.2507524490356445
    3. '       ' → logprob: -10.375752449035645
    4. 'if' → logprob: -12.750752449035645
    5. '   ' → logprob: -13.250752449035645
    6. '           ' → logprob: -13.625752449035645
    7. 'self' → logprob: -14.250752449035645
    8. '	right' → logprob: -14.250752449035645
    9. 'left' → logprob: -14.500752449035645
    10. '               ' → logprob: -14.875752449035645

Token 298: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889441400766373
    2. '=' → logprob: -2.5788943767547607
    3. '=node' → logprob: -12.82889461517334
    4. ',' → logprob: -13.95389461517334
    5. ' ' → logprob: -14.20389461517334
    6. ')' → logprob: -15.32889461517334
    7. '.' → logprob: -16.953893661499023
    8. ' ' → logprob: -17.203893661499023
    9. ':' → logprob: -17.328893661499023
    10. ' =
' → logprob: -17.578893661499023

Token 299: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.5759398937225342
    2. 'node' → logprob: -0.8259398937225342
    3. '	node' → logprob: -15.325940132141113
    4. '(node' → logprob: -15.700940132141113
    5. '[node' → logprob: -17.575939178466797
    6. ' ' → logprob: -17.575939178466797
    7. '   ' → logprob: -17.825939178466797
    8. '_node' → logprob: -18.700939178466797
    9. '    ' → logprob: -18.700939178466797
    10. '       ' → logprob: -18.825939178466797

Token 300: '.no' (ID: 26941)
  Prédit: '.no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.no' → logprob: -1.3425219549390022e-05
    2. ' .' → logprob: -11.75001335144043
    3. '.' → logprob: -12.50001335144043
    4. '._' → logprob: -14.87501335144043
    5. '=no' → logprob: -15.12501335144043
    6. 'no' → logprob: -15.25001335144043
    7. '_no' → logprob: -15.75001335144043
    8. '.n' → logprob: -15.87501335144043
    9. '	no' → logprob: -15.87501335144043
    10. '.No' → logprob: -16.37501335144043

Token 301: '_target' (ID: 24705)
  Prédit: '_target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_target' → logprob: -1.0280383548888494e-06
    2. 'target' → logprob: -14.375000953674316
    3. 'Target' → logprob: -16.625001907348633
    4. '_' → logprob: -16.625001907348633
    5. 'TARGET' → logprob: -17.250001907348633
    6. 'arget' → logprob: -17.625001907348633
    7. '_targets' → logprob: -18.125001907348633
    8. '_TARGET' → logprob: -18.125001907348633
    9. '_token' → logprob: -18.500001907348633
    10. ' _' → logprob: -18.875001907348633

Token 302: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5023366212844849
    2. 'time' → logprob: -2.0023365020751953
    3. '
' → logprob: -2.1273365020751953
    4. 'left' → logprob: -2.3773365020751953
    5. ' left' → logprob: -4.127336502075195
    6. ' time' → logprob: -4.252336502075195
    7. '        
' → logprob: -5.002336502075195
    8. 'cost' → logprob: -5.502336502075195
    9. '_time' → logprob: -6.752336502075195
    10. ' cost' → logprob: -6.877336502075195

Token 303: '       ' (ID: 309)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.423871785402298
    2. 'time' → logprob: -1.4238717555999756
    3. '       ' → logprob: -3.0488717555999756
    4. ' left' → logprob: -3.4238717555999756
    5. ' time' → logprob: -5.048871994018555
    6. '
' → logprob: -5.548871994018555
    7. 'cost' → logprob: -5.798871994018555
    8. 'if' → logprob: -5.923871994018555
    9. 't' → logprob: -6.298871994018555
    10. '_time' → logprob: -6.548871994018555

Token 304: ' #' (ID: 1069)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.31567350029945374
    2. 'time' → logprob: -1.3156734704971313
    3. ' left' → logprob: -6.940673351287842
    4. 'cost' → logprob: -7.440673351287842
    5. 't' → logprob: -7.815673351287842
    6. 'l' → logprob: -8.565673828125
    7. ' time' → logprob: -9.940673828125
    8. '       ' → logprob: -10.190673828125
    9. 'yes' → logprob: -10.190673828125
    10. 'lt' → logprob: -10.565673828125

Token 305: ' Rec' (ID: 14753)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.5279118418693542
    2. 'time' → logprob: -0.9029118418693542
    3. ' left' → logprob: -6.15291166305542
    4. 'yes' → logprob: -7.02791166305542
    5. 'cost' → logprob: -7.40291166305542
    6. ' time' → logprob: -7.52791166305542
    7. 't' → logprob: -8.527912139892578
    8. 'l' → logprob: -9.277912139892578
    9. '#' → logprob: -9.652912139892578
    10. '   ' → logprob: -9.902912139892578

Token 306: 'ursion' (ID: 41658)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.32405248284339905
    2. 'time' → logprob: -2.324052572250366
    3. '_time' → logprob: -2.949052572250366
    4. 'ursive' → logprob: -3.074052572250366
    5. '_left' → logprob: -3.699052572250366
    6. '       ' → logprob: -3.949052572250366
    7. 'ur' → logprob: -4.199052333831787
    8. 'ursion' → logprob: -4.824052333831787
    9. 'urs' → logprob: -5.699052333831787
    10. '   ' → logprob: -6.074052333831787

Token 307: ' on' (ID: 402)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.5727521777153015
    2. ' left' → logprob: -1.3227522373199463
    3. 'time' → logprob: -2.4477522373199463
    4. ' time' → logprob: -3.1977522373199463
    5. '_time' → logprob: -4.072751998901367
    6. '       ' → logprob: -4.447751998901367
    7. '_left' → logprob: -5.322751998901367
    8. ' yes' → logprob: -5.697751998901367
    9. 'cost' → logprob: -6.947751998901367
    10. ':' → logprob: -7.197751998901367

Token 308: ' sub' (ID: 1543)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0671808123588562
    2. 'self' → logprob: -3.442180871963501
    3. ' left' → logprob: -3.442180871963501
    4. 'both' → logprob: -8.317180633544922
    5. 'children' → logprob: -8.567180633544922
    6. ' self' → logprob: -8.567180633544922
    7. 'max' → logprob: -9.192180633544922
    8. 'the' → logprob: -9.692180633544922
    9. 'child' → logprob: -10.442180633544922
    10. ' both' → logprob: -10.442180633544922

Token 309: 'trees' (ID: 140063)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.9416865706443787
    2. '_time' → logprob: -1.4416866302490234
    3. 'left' → logprob: -1.8166866302490234
    4. '_left' → logprob: -2.6916866302490234
    5. '       ' → logprob: -3.0666866302490234
    6. 'times' → logprob: -3.0666866302490234
    7. 'tree' → logprob: -3.9416866302490234
    8. 'cost' → logprob: -4.316686630249023
    9. '_cost' → logprob: -5.316686630249023
    10. 'result' → logprob: -5.441686630249023

Token 310: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8834720253944397
    2. 'left' → logprob: -1.258471965789795
    3. ' left' → logprob: -1.633471965789795
    4. 'time' → logprob: -2.758471965789795
    5. ' time' → logprob: -3.383471965789795
    6. '
' → logprob: -5.008471965789795
    7. '_time' → logprob: -7.758471965789795
    8. '_left' → logprob: -7.758471965789795
    9. ',' → logprob: -8.133472442626953
    10. ' yes' → logprob: -8.258472442626953

Token 311: '       ' (ID: 309)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.18110360205173492
    2. 'time' → logprob: -2.0561037063598633
    3. ' left' → logprob: -3.5561037063598633
    4. '       ' → logprob: -5.556103706359863
    5. ' time' → logprob: -5.806103706359863
    6. 'l' → logprob: -6.931103706359863
    7. 't' → logprob: -7.556103706359863
    8. 'yes' → logprob: -8.306103706359863
    9. 'cost' → logprob: -8.431103706359863
    10. ' yes' → logprob: -9.806103706359863

Token 312: ' time' (ID: 1058)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.08486871421337128
    2. 'time' (adapté à ' time') → logprob: -2.5848686695098877
    3. ' left' → logprob: -5.209868907928467
    4. 't' → logprob: -8.584868431091309
    5. 'l' → logprob: -9.084868431091309
    6. ' time' → logprob: -9.459868431091309
    7. 'yes' → logprob: -10.084868431091309
    8. 'cost' → logprob: -10.209868431091309
    9. '       ' → logprob: -11.209868431091309
    10. 'lt' → logprob: -11.584868431091309

Token 313: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.2059106081724167
    2. '_yes' → logprob: -1.705910563468933
    3. ' =' → logprob: -5.455910682678223
    4. '=' → logprob: -8.955910682678223
    5. '_' → logprob: -10.205910682678223
    6. '_no' → logprob: -10.955910682678223
    7. '_l' → logprob: -11.330910682678223
    8. 'left' → logprob: -11.330910682678223
    9. '_y' → logprob: -13.080910682678223
    10. '_true' → logprob: -13.330910682678223

Token 314: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519293427467346
    2. '=' → logprob: -1.5019292831420898
    3. ' ' → logprob: -16.501930236816406
    4. ',' → logprob: -16.626930236816406
    5. '+' → logprob: -17.001930236816406
    6. ' +=' → logprob: -17.376930236816406
    7. '_left' → logprob: -17.501930236816406
    8. ' =
' → logprob: -18.001930236816406
    9. '=self' → logprob: -18.251930236816406
    10. 'left' → logprob: -18.251930236816406

Token 315: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0789155662059784
    2. ' self' → logprob: -2.578915596008301
    3. '1' → logprob: -10.8289155960083
    4. '       ' → logprob: -12.9539155960083
    5. '(self' → logprob: -13.4539155960083
    6. '0' → logprob: -14.3289155960083
    7. ' ' → logprob: -14.3289155960083
    8. '
' → logprob: -15.0789155960083
    9. '   ' → logprob: -15.4539155960083
    10. '	self' → logprob: -16.203914642333984

Token 316: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00043805985478684306
    2. '_d' → logprob: -7.750438213348389
    3. '.d' → logprob: -12.37543773651123
    4. ' .' → logprob: -13.37543773651123
    5. '.' → logprob: -14.37543773651123
    6. ' _' → logprob: -15.12543773651123
    7. '_.' → logprob: -15.12543773651123
    8. '.__' → logprob: -15.75043773651123
    9. '   ' → logprob: -16.500438690185547
    10. '.D' → logprob: -16.875438690185547

Token 317: 'dfs' (ID: 60837)
  Prédit: 'dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -6.704273118884885e-07
    2. ' dfs' → logprob: -14.625000953674316
    3. 'df' → logprob: -15.875000953674316
    4. 'dfa' → logprob: -17.5
    5. '_d' → logprob: -17.625
    6. 'left' → logprob: -17.625
    7. 'd' → logprob: -18.25
    8. 'def' → logprob: -18.875
    9. 'DFS' → logprob: -19.125
    10. 'dsl' → logprob: -19.75

Token 318: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.00033784625702537596
    2. '(' → logprob: -8.000337600708008
    3. '(
' → logprob: -13.125337600708008
    4. 'left' → logprob: -15.250337600708008
    5. '(line' → logprob: -16.375337600708008
    6. '(node' → logprob: -17.000337600708008
    7. ' (' → logprob: -17.125337600708008
    8. '(right' → logprob: -17.250337600708008
    9. '((' → logprob: -17.750337600708008
    10. '[left' → logprob: -18.250337600708008

Token 319: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07895048707723618
    2. ')
' → logprob: -2.5789504051208496
    3. ')
' → logprob: -10.328950881958008
    4. ' )' → logprob: -11.078950881958008
    5. ' )
' → logprob: -12.078950881958008
    6. ')

' → logprob: -12.453950881958008
    7. ')+' → logprob: -12.953950881958008
    8. '   ' → logprob: -15.453950881958008
    9. ')`
' → logprob: -16.078950881958008
    10. ')#' → logprob: -16.703950881958008

Token 320: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07195832580327988
    2. '+' → logprob: -3.071958303451538
    3. '<|end|>' → logprob: -4.571958541870117
    4. ')' → logprob: -5.446958541870117
    5. ' +' → logprob: -5.571958541870117
    6. '
' → logprob: -6.071958541870117
    7. '<|end|>' → logprob: -7.071958541870117
    8. 'time' → logprob: -7.696958541870117
    9. ' 
' → logprob: -8.571958541870117
    10. '+
' → logprob: -8.696958541870117

Token 321: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' (adapté à ' time') → logprob: -0.021026436239480972
    2. '
' → logprob: -4.521026611328125
    3. '       ' → logprob: -5.021026611328125
    4. ' time' → logprob: -6.021026611328125
    5. '        
' → logprob: -8.271026611328125
    6. '+' → logprob: -9.021026611328125
    7. ' 
' → logprob: -9.271026611328125
    8. '+
' → logprob: -9.396026611328125
    9. '   ' → logprob: -9.896026611328125
    10. ' +' → logprob: -10.146026611328125

Token 322: '_right' (ID: 24402)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07924468070268631
    2. '_right' → logprob: -2.579244613647461
    3. '_left' → logprob: -9.954244613647461
    4. '+' → logprob: -9.954244613647461
    5. '<|end|>' → logprob: -9.954244613647461
    6. ' _' → logprob: -10.204244613647461
    7. '_space' → logprob: -10.454244613647461
    8. 'right' → logprob: -10.579244613647461
    9. '_next' → logprob: -11.079244613647461
    10. '_)' → logprob: -11.329244613647461

Token 323: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6576677560806274
    2. ' =' → logprob: -1.1576677560806274
    3. ')' → logprob: -1.9076677560806274
    4. ' +' → logprob: -5.032667636871338
    5. '(' → logprob: -5.157667636871338
    6. '+' → logprob: -5.532667636871338
    7. ' ' → logprob: -6.407667636871338
    8. ',' → logprob: -7.907667636871338
    9. ' (' → logprob: -8.532668113708496
    10. ' )' → logprob: -8.907668113708496

Token 324: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3138609230518341
    2. ' self' → logprob: -1.3138608932495117
    3. '(self' → logprob: -7.438860893249512
    4. '[self' → logprob: -12.813860893249512
    5. ' ' → logprob: -13.063860893249512
    6. '       ' → logprob: -13.188860893249512
    7. '	self' → logprob: -14.313860893249512
    8. '<|end|>' → logprob: -14.313860893249512
    9. '   ' → logprob: -14.438860893249512
    10. ' ' → logprob: -14.688860893249512

Token 325: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0381925068795681
    2. '_d' → logprob: -3.2881925106048584
    3. ' _' → logprob: -8.913192749023438
    4. ' .' → logprob: -13.288192749023438
    5. '(_' → logprob: -13.288192749023438
    6. '.d' → logprob: -13.538192749023438
    7. '\' → logprob: -13.538192749023438
    8. '```' → logprob: -13.788192749023438
    9. '_rhs' → logprob: -14.038192749023438
    10. '   ' → logprob: -14.038192749023438

Token 326: 'dfs' (ID: 60837)
  Prédit: 'dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -3.531315314830863e-06
    2. ' dfs' → logprob: -12.875003814697266
    3. '_d' → logprob: -14.625003814697266
    4. 'df' → logprob: -16.000003814697266
    5. 'def' → logprob: -16.250003814697266
    6. 'fds' → logprob: -17.125003814697266
    7. 'd' → logprob: -17.500003814697266
    8. 'right' → logprob: -17.625003814697266
    9. 'left' → logprob: -17.875003814697266
    10. 'DFS' → logprob: -17.875003814697266

Token 327: '(right' (ID: 52104)
  Prédit: '(right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(right' → logprob: -2.696889623621246e-06
    2. 'right' → logprob: -13.62500286102295
    3. '[right' → logprob: -13.87500286102295
    4. '(' → logprob: -14.87500286102295
    5. ' (' → logprob: -16.750001907348633
    6. ' right' → logprob: -17.125001907348633
    7. ')' → logprob: -17.375001907348633
    8. '(r' → logprob: -18.000001907348633
    9. '(
' → logprob: -18.250001907348633
    10. '(rhs' → logprob: -18.500001907348633

Token 328: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012737659562844783
    2. ')
' → logprob: -9.375127792358398
    3. ' )' → logprob: -10.625127792358398
    4. '       ' → logprob: -11.625127792358398
    5. ')

' → logprob: -11.750127792358398
    6. '   ' → logprob: -14.750127792358398
    7. ')+' → logprob: -15.250127792358398
    8. ' ' → logprob: -15.625127792358398
    9. '+' → logprob: -15.875127792358398
    10. '
' → logprob: -16.1251277923584

Token 329: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8552992939949036
    2. ' total' → logprob: -2.105299234390259
    3. ' time' → logprob: -2.355299234390259
    4. ' max' → logprob: -2.480299234390259
    5. ' min' → logprob: -2.855299234390259
    6. ' cost' → logprob: -3.480299234390259
    7. ' if' → logprob: -3.480299234390259
    8. 'time' → logprob: -3.480299234390259
    9. ' result' → logprob: -3.605299234390259
    10. 'total' → logprob: -4.105299472808838

Token 330: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.1371917724609375
    2. 'time' → logprob: -1.5121917724609375
    3. 'min' → logprob: -1.6371917724609375
    4. 'total' → logprob: -2.1371917724609375
    5. 'max' → logprob: -3.0121917724609375
    6. 'result' → logprob: -3.3871917724609375
    7. ' min' → logprob: -4.0121917724609375
    8. ' res' → logprob: -4.1371917724609375
    9. 'cost' → logprob: -4.6371917724609375
    10. 'self' → logprob: -5.2621917724609375

Token 331: ' Now' (ID: 6549)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.6631765365600586
    2. 'time' → logprob: -1.2881765365600586
    3. 'total' → logprob: -2.1631765365600586
    4. 'min' → logprob: -2.9131765365600586
    5. 'result' → logprob: -3.9131765365600586
    6. 'self' → logprob: -5.288176536560059
    7. ' res' → logprob: -5.413176536560059
    8. 'cost' → logprob: -5.663176536560059
    9. ' total' → logprob: -6.538176536560059
    10. '#' → logprob: -6.538176536560059

Token 332: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0727158784866333
    2. ' time' → logprob: -1.5727158784866333
    3. ' total' → logprob: -1.6977158784866333
    4. ' min' → logprob: -2.0727157592773438
    5. ' max' → logprob: -2.5727157592773438
    6. ' result' → logprob: -3.9477157592773438
    7. ' cost' → logprob: -4.697715759277344
    8. 'time' → logprob: -4.947715759277344
    9. ' self' → logprob: -5.322715759277344
    10. ' minimum' → logprob: -5.322715759277344

Token 333: ' we' (ID: 581)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -1.011195421218872
    2. 'total' → logprob: -1.886195421218872
    3. ' min' → logprob: -2.011195421218872
    4. ' time' → logprob: -2.886195421218872
    5. ' res' → logprob: -3.011195421218872
    6. 'time' → logprob: -3.136195421218872
    7. 'self' → logprob: -3.261195421218872
    8. ' self' → logprob: -3.511195421218872
    9. 'res' → logprob: -3.636195421218872
    10. 'min' → logprob: -3.761195421218872

Token 334: ' want' (ID: 1682)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.1498215198516846
    2. ' =' → logprob: -1.7748215198516846
    3. 'calculate' → logprob: -1.8998215198516846
    4. '=' → logprob: -2.1498215198516846
    5. ' return' → logprob: -2.2748215198516846
    6. ' calculate' → logprob: -2.7748215198516846
    7. '#' → logprob: -4.2748212814331055
    8. ' can' → logprob: -4.8998212814331055
    9. ' compute' → logprob: -4.8998212814331055
    10. ' need' → logprob: -5.1498212814331055

Token 335: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.05864177271723747
    2. ' =' → logprob: -3.5586416721343994
    3. 'to' → logprob: -3.9336416721343994
    4. '       ' → logprob: -5.8086419105529785
    5. '=' → logprob: -6.4336419105529785
    6. ' min' → logprob: -6.9336419105529785
    7. '_to' → logprob: -7.0586419105529785
    8. '_min' → logprob: -7.0586419105529785
    9. 'min' → logprob: -7.5586419105529785
    10. ' max' → logprob: -8.30864143371582

Token 336: ' find' (ID: 1646)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.03840050846338272
    2. ' min' → logprob: -4.288400650024414
    3. ' minimize' → logprob: -4.663400650024414
    4. ' compute' → logprob: -5.913400650024414
    5. 'return' → logprob: -6.038400650024414
    6. 'combine' → logprob: -6.163400650024414
    7. ' return' → logprob: -6.663400650024414
    8. 'choose' → logprob: -6.788400650024414
    9. ' calculate' → logprob: -6.913400650024414
    10. 'calculate' → logprob: -6.913400650024414

Token 337: ' the' (ID: 290)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.49180668592453003
    2. ' the' → logprob: -1.4918067455291748
    3. ' max' → logprob: -2.616806745529175
    4. 'min' → logprob: -2.991806745529175
    5. ' minimal' → logprob: -3.741806745529175
    6. 'max' → logprob: -4.866806507110596
    7. 'the' → logprob: -5.616806507110596
    8. ' minimum' → logprob: -6.241806507110596
    9. 'minimal' → logprob: -6.866806507110596
    10. ' time' → logprob: -7.366806507110596

Token 338: ' minimal' (ID: 19957)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3689715266227722
    2. ' min' → logprob: -1.618971586227417
    3. 'minimum' → logprob: -2.743971586227417
    4. ' minimal' → logprob: -4.243971347808838
    5. ' minimum' → logprob: -4.618971347808838
    6. 'max' → logprob: -4.743971347808838
    7. 'minimal' → logprob: -4.868971347808838
    8. ' max' → logprob: -6.493971347808838
    9. '1' → logprob: -6.493971347808838
    10. 'time' → logprob: -6.993971347808838

Token 339: ' time' (ID: 1058)
  Prédit: ' time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.44513532519340515
    2. 'time' → logprob: -1.8201353549957275
    3. '_time' → logprob: -1.9451353549957275
    4. ' total' → logprob: -3.9451353549957275
    5. ' of' → logprob: -4.570135116577148
    6. ' cost' → logprob: -4.695135116577148
    7. ' return' → logprob: -5.820135116577148
    8. 'total' → logprob: -6.195135116577148
    9. 'cost' → logprob: -6.320135116577148
    10. ' possible' → logprob: -6.695135116577148

Token 340: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005964699666947126
    2. '       ' → logprob: -5.505964756011963
    3. '=' → logprob: -7.130964756011963
    4. ' +' → logprob: -8.255964279174805
    5. ' if' → logprob: -8.630964279174805
    6. ' to' → logprob: -8.755964279174805
    7. ' return' → logprob: -9.255964279174805
    8. ' for' → logprob: -9.255964279174805
    9. 'return' → logprob: -9.380964279174805
    10. '        ' → logprob: -9.755964279174805

Token 341: ' complete' (ID: 5533)
  Prédit: ' complete'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' complete' → logprob: -0.689213216304779
    2. 'complete' → logprob: -1.6892132759094238
    3. ' finish' → logprob: -2.064213275909424
    4. ' process' → logprob: -3.439213275909424
    5. ' visit' → logprob: -3.564213275909424
    6. ' cover' → logprob: -4.064213275909424
    7. 'finish' → logprob: -4.064213275909424
    8. 'visit' → logprob: -4.439213275909424
    9. 'process' → logprob: -4.564213275909424
    10. 'answer' → logprob: -4.689213275909424

Token 342: ' all' (ID: 722)
  Prédit: ' both'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' both' → logprob: -0.20186254382133484
    2. 'both' → logprob: -2.0768625736236572
    3. ' the' → logprob: -3.7018625736236572
    4. ' all' → logprob: -3.8268625736236572
    5. ' for' → logprob: -5.951862335205078
    6. ' sub' → logprob: -6.451862335205078
    7. 'all' → logprob: -6.826862335205078
    8. 'sub' → logprob: -7.076862335205078
    9. 'the' → logprob: -7.201862335205078
    10. '       ' → logprob: -7.451862335205078

Token 343: ' endings' (ID: 152718)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.30838093161582947
    2. 'branches' → logprob: -2.8083808422088623
    3. ' endings' → logprob: -2.8083808422088623
    4. 'paths' → logprob: -3.0583808422088623
    5. 'sub' → logprob: -3.6833808422088623
    6. ' branches' → logprob: -4.058381080627441
    7. 'possible' → logprob: -4.683381080627441
    8. ' paths' → logprob: -4.933381080627441
    9. ' sub' → logprob: -5.433381080627441
    10. 'tasks' → logprob: -5.933381080627441

Token 344: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08259213715791702
    2. '
' → logprob: -3.957592248916626
    3. ' time' → logprob: -4.207592010498047
    4. ' if' → logprob: -4.957592010498047
    5. 'time' → logprob: -5.207592010498047
    6. ' result' → logprob: -5.832592010498047
    7. ' total' → logprob: -5.832592010498047
    8. 'result' → logprob: -6.332592010498047
    9. ' =' → logprob: -6.332592010498047
    10. ' for' → logprob: -6.332592010498047

Token 345: ' this' (ID: 495)
  Prédit: 'this'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'this' → logprob: -1.2635427713394165
    2. ' this' → logprob: -1.5135427713394165
    3. ' the' → logprob: -2.013542652130127
    4. 'both' → logprob: -2.013542652130127
    5. 'the' → logprob: -2.138542652130127
    6. ' both' → logprob: -2.513542652130127
    7. 'sub' → logprob: -5.138542652130127
    8. ' node' → logprob: -5.263542652130127
    9. 'node' → logprob: -5.263542652130127
    10. 'self' → logprob: -5.263542652130127

Token 346: ' subtree' (ID: 126158)
  Prédit: ' subtree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' subtree' → logprob: -0.3547857701778412
    2. ' node' → logprob: -1.4797857999801636
    3. 'node' → logprob: -3.104785680770874
    4. 'sub' → logprob: -4.104785919189453
    5. 'branch' → logprob: -5.479785919189453
    6. ' branch' → logprob: -6.229785919189453
    7. ' sub' → logprob: -6.729785919189453
    8. '       ' → logprob: -7.479785919189453
    9. '   ' → logprob: -7.604785919189453
    10. ' branching' → logprob: -8.104785919189453

Token 347: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01510811597108841
    2. ',' → logprob: -5.390108108520508
    3. '
' → logprob: -6.015108108520508
    4. '        
' → logprob: -6.265108108520508
    5. 'time' → logprob: -6.640108108520508
    6. 'result' → logprob: -7.265108108520508
    7. ' time' → logprob: -7.265108108520508
    8. ' if' → logprob: -7.640108108520508
    9. 'return' → logprob: -7.890108108520508
    10. 'total' → logprob: -8.515108108520508

Token 348: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07291287928819656
    2. ' return' → logprob: -4.197912693023682
    3. ' time' → logprob: -5.072912693023682
    4. ' if' → logprob: -5.197912693023682
    5. ' result' → logprob: -5.322912693023682
    6. 'return' → logprob: -5.447912693023682
    7. ' min' → logprob: -5.572912693023682
    8. '        ' → logprob: -5.572912693023682
    9. ''' → logprob: -5.822912693023682
    10. 'result' → logprob: -5.822912693023682

Token 349: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7199728488922119
    2. 'time' → logprob: -1.969972848892212
    3. ' min' → logprob: -2.219972848892212
    4. 'result' → logprob: -2.719972848892212
    5. ' time' → logprob: -2.844972848892212
    6. 'min' → logprob: -3.094972848892212
    7. ' res' → logprob: -4.094972610473633
    8. ' result' → logprob: -4.219972610473633
    9. 'res' → logprob: -4.219972610473633
    10. 'self' → logprob: -4.719972610473633

Token 350: ' given' (ID: 4335)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -1.6391494274139404
    2. '#' → logprob: -1.8891494274139404
    3. ' min' → logprob: -2.0141494274139404
    4. 'min' → logprob: -2.1391494274139404
    5. 'res' → logprob: -2.6391494274139404
    6. 'result' → logprob: -2.7641494274139404
    7. ' time' → logprob: -2.8891494274139404
    8. '       ' → logprob: -3.3891494274139404
    9. ' res' → logprob: -3.6391494274139404
    10. 'cost' → logprob: -3.6391494274139404

Token 351: ' the' (ID: 290)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.27781057357788086
    2. ' the' → logprob: -1.5278105735778809
    3. 'that' → logprob: -4.152810573577881
    4. ' both' → logprob: -5.402810573577881
    5. 'the' → logprob: -5.527810573577881
    6. 'both' → logprob: -8.027811050415039
    7. ' possible' → logprob: -8.277811050415039
    8. ' left' → logprob: -8.902811050415039
    9. ' we' → logprob: -9.277811050415039
    10. '       ' → logprob: -9.402811050415039

Token 352: ' quick' (ID: 4853)
  Prédit: ' possibility'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' possibility' → logprob: -1.6020328998565674
    2. ' two' → logprob: -1.7270328998565674
    3. ' branching' → logprob: -2.3520328998565674
    4. 'time' → logprob: -2.7270328998565674
    5. ' time' → logprob: -2.7270328998565674
    6. 'two' → logprob: -2.9770328998565674
    7. ' minimal' → logprob: -3.8520328998565674
    8. 'branch' → logprob: -3.9770328998565674
    9. ' worst' → logprob: -4.102032661437988
    10. ' structure' → logprob: -4.102032661437988

Token 353: ' save' (ID: 5093)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.07054128497838974
    2. 'return' → logprob: -3.9455413818359375
    3. 'test' → logprob: -4.0705413818359375
    4. 'sort' → logprob: -4.4455413818359375
    5. ' return' → logprob: -6.0705413818359375
    6. 'visit' → logprob: -6.4455413818359375
    7. 'exit' → logprob: -6.5705413818359375
    8. 'ex' → logprob: -6.6955413818359375
    9. '_return' → logprob: -6.8205413818359375
    10. 'ests' → logprob: -6.8205413818359375

Token 354: ' mechanic' (ID: 75544)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3956347703933716
    2. ' option' → logprob: -3.020634651184082
    3. '       ' → logprob: -3.145634651184082
    4. ' cost' → logprob: -3.645634651184082
    5. ' strategy' → logprob: -3.645634651184082
    6. ' time' → logprob: -4.145634651184082
    7. '+' → logprob: -4.520634651184082
    8. '   ' → logprob: -4.520634651184082
    9. ' feature' → logprob: -4.645634651184082
    10. 'and' → logprob: -4.645634651184082

Token 355: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14984309673309326
    2. ',' → logprob: -3.149843215942383
    3. '
' → logprob: -3.524843215942383
    4. ' =' → logprob: -4.274843215942383
    5. '        
' → logprob: -4.399843215942383
    6. ')' → logprob: -4.774843215942383
    7. ' +' → logprob: -5.399843215942383
    8. '        ' → logprob: -5.524843215942383
    9. ' if' → logprob: -5.774843215942383
    10. '=' → logprob: -6.024843215942383

Token 356: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11359832435846329
    2. ' if' → logprob: -3.738598346710205
    3. '        
' → logprob: -3.863598346710205
    4. ' 
' → logprob: -4.238598346710205
    5. ' time' → logprob: -4.863598346710205
    6. ' max' → logprob: -5.363598346710205
    7. 'time' → logprob: -5.363598346710205
    8. ' cost' → logprob: -5.613598346710205
    9. '\' → logprob: -5.738598346710205
    10. '#' → logprob: -5.863598346710205

Token 357: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.1723355054855347
    2. 'time' → logprob: -1.6723355054855347
    3. 'res' → logprob: -1.7973355054855347
    4. ' res' → logprob: -2.672335624694824
    5. 'total' → logprob: -2.797335624694824
    6. ' total' → logprob: -3.547335624694824
    7. ' time' → logprob: -3.547335624694824
    8. 'min' → logprob: -3.672335624694824
    9. 'cost' → logprob: -3.672335624694824
    10. '       ' → logprob: -4.422335624694824

Token 358: ' Strategy' (ID: 39435)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4523663818836212
    2. 'min' → logprob: -2.327366352081299
    3. 'time' → logprob: -2.827366352081299
    4. 'total' → logprob: -3.327366352081299
    5. 'cost' → logprob: -3.327366352081299
    6. 'if' → logprob: -3.577366352081299
    7. 'save' → logprob: -3.952366352081299
    8. 'res' → logprob: -4.202366352081299
    9. 'max' → logprob: -4.327366352081299
    10. 'times' → logprob: -4.452366352081299

Token 359: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43665990233421326
    2. ':' → logprob: -1.8116599321365356
    3. '_time' → logprob: -2.061659812927246
    4. '       ' → logprob: -3.811659812927246
    5. '_cost' → logprob: -4.061659812927246
    6. '=' → logprob: -4.936659812927246
    7. '#' → logprob: -5.436659812927246
    8. '1' → logprob: -5.686659812927246
    9. '_left' → logprob: -6.436659812927246
    10. ':
' → logprob: -7.311659812927246

Token 360: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6129214763641357
    2. ' #' → logprob: -2.2379214763641357
    3. ' if' → logprob: -2.4879214763641357
    4. '#' → logprob: -2.9879214763641357
    5. ' total' → logprob: -3.2379214763641357
    6. ' max' → logprob: -3.6129214763641357
    7. ' save' → logprob: -3.7379214763641357
    8. ' time' → logprob: -3.9879214763641357
    9. ' best' → logprob: -4.112921714782715
    10. ' cost' → logprob: -4.237921714782715

Token 361: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.3138355016708374
    2. 'time' → logprob: -2.813835620880127
    3. ' #' → logprob: -3.313835620880127
    4. ' time' → logprob: -3.688835620880127
    5. ' res' → logprob: -3.938835620880127
    6. 'save' → logprob: -3.938835620880127
    7. ' total' → logprob: -4.063835620880127
    8. 'total' → logprob: -4.063835620880127
    9. 'res' → logprob: -4.438835620880127
    10. 'cost' → logprob: -4.563835620880127

Token 362: ' From' (ID: 7217)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4259123206138611
    2. 'time' → logprob: -2.300912380218506
    3. 'save' → logprob: -2.675912380218506
    4. 'cost' → logprob: -3.175912380218506
    5. 'total' → logprob: -4.050912380218506
    6. 'max' → logprob: -4.050912380218506
    7. 'res' → logprob: -4.175912380218506
    8. 'min' → logprob: -4.925912380218506
    9. 'times' → logprob: -5.175912380218506
    10. ' #' → logprob: -5.425912380218506

Token 363: ' problem' (ID: 4792)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.7942752838134766
    2. ' here' → logprob: -1.5442752838134766
    3. 'left' → logprob: -2.5442752838134766
    4. ' node' → logprob: -2.5442752838134766
    5. 'here' → logprob: -2.7942752838134766
    6. 'the' → logprob: -3.2942752838134766
    7. '_here' → logprob: -3.9192752838134766
    8. ' the' → logprob: -4.169275283813477
    9. 'this' → logprob: -4.919275283813477
    10. ' left' → logprob: -5.169275283813477

Token 364: ' statement' (ID: 9710)
  Prédit: 'statement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'statement' → logprob: -1.3316866159439087
    2. ' statement' → logprob: -1.5816866159439087
    3. 'description' → logprob: -2.081686496734619
    4. ':' → logprob: -2.331686496734619
    5. '_description' → logprob: -2.456686496734619
    6. ' description' → logprob: -2.581686496734619
    7. '#' → logprob: -3.206686496734619
    8. '_statement' → logprob: -3.831686496734619
    9. '_' → logprob: -4.456686496734619
    10. 'context' → logprob: -4.831686496734619

Token 365: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7331530451774597
    2. '#' → logprob: -1.4831531047821045
    3. '       ' → logprob: -1.4831531047821045
    4. ':' → logprob: -3.4831531047821045
    5. ',
' → logprob: -5.233152866363525
    6. '        
' → logprob: -5.358152866363525
    7. ' #' → logprob: -5.483152866363525
    8. '
' → logprob: -5.608152866363525
    9. ':
' → logprob: -5.733152866363525
    10. '<|end|>' → logprob: -6.108152866363525

Token 366: '       ' (ID: 309)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8392947912216187
    2. '       ' → logprob: -0.8392947912216187
    3. ' #' → logprob: -2.839294910430908
    4. 'save' → logprob: -4.464294910430908
    5. '        
' → logprob: -4.714294910430908
    6. 'time' → logprob: -4.714294910430908
    7. ' total' → logprob: -4.839294910430908
    8. ' save' → logprob: -4.964294910430908
    9. ' time' → logprob: -4.964294910430908
    10. ' cost' → logprob: -5.339294910430908

Token 367: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.6194953918457031
    2. 'time' → logprob: -2.244495391845703
    3. 'total' → logprob: -3.119495391845703
    4. 'cost' → logprob: -3.244495391845703
    5. 'save' → logprob: -3.244495391845703
    6. 'min' → logprob: -3.619495391845703
    7. ' time' → logprob: -3.869495391845703
    8. ' total' → logprob: -3.994495391845703
    9. ' min' → logprob: -3.994495391845703
    10. '       ' → logprob: -3.994495391845703

Token 368: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0270822048187256
    2. 'time' → logprob: -1.9020822048187256
    3. 'max' → logprob: -2.0270822048187256
    4. 'min' → logprob: -2.6520822048187256
    5. 'cost' → logprob: -2.7770822048187256
    6. 'res' → logprob: -3.1520822048187256
    7. 'save' → logprob: -3.1520822048187256
    8. 'total' → logprob: -3.4020822048187256
    9. ' min' → logprob: -4.152082443237305
    10. ' res' → logprob: -4.402082443237305

Token 369: ' It' (ID: 1225)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -1.1490249633789062
    2. '#' → logprob: -1.7740249633789062
    3. 'cost' → logprob: -2.1490249633789062
    4. 'save' → logprob: -2.3990249633789062
    5. 'max' → logprob: -3.1490249633789062
    6. 'We' → logprob: -3.2740249633789062
    7. 'min' → logprob: -3.5240249633789062
    8. ' time' → logprob: -3.7740249633789062
    9. 'If' → logprob: -4.149024963378906
    10. ' cost' → logprob: -4.149024963378906

Token 370: ' takes' (ID: 6948)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7753548622131348
    2. ''s' → logprob: -1.0253548622131348
    3. ' is' → logprob: -3.1503548622131348
    4. 'ime' → logprob: -3.2753548622131348
    5. ' #' → logprob: -3.2753548622131348
    6. 'em' → logprob: -4.400354862213135
    7. ' depends' → logprob: -4.775354862213135
    8. '=' → logprob: -5.275354862213135
    9. 's' → logprob: -5.400354862213135
    10. ' seems' → logprob: -5.525354862213135

Token 371: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.27543744444847107
    2. '1' → logprob: -1.5254374742507935
    3. ' one' → logprob: -3.900437355041504
    4. 'time' → logprob: -6.900437355041504
    5. ' time' → logprob: -7.525437355041504
    6. '2' → logprob: -7.650437355041504
    7. 'one' → logprob: -8.150437355041504
    8. ' at' → logprob: -8.650437355041504
    9. '0' → logprob: -9.400437355041504
    10. 'self' → logprob: -9.650437355041504

Token 372: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008322246372699738
    2. '2' → logprob: -5.258322238922119
    3. 'time' → logprob: -6.008322238922119
    4. 'min' → logprob: -8.633322715759277
    5. 'max' → logprob: -9.258322715759277
    6. '3' → logprob: -10.008322715759277
    7. '
' → logprob: -10.008322715759277
    8. '0' → logprob: -10.258322715759277
    9. 'left' → logprob: -10.258322715759277
    10. 'node' → logprob: -10.383322715759277

Token 373: ' minute' (ID: 12434)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.03912149369716644
    2. '+' → logprob: -3.289121389389038
    3. ' for' → logprob: -7.289121627807617
    4. ' ' → logprob: -8.789121627807617
    5. ' to' → logprob: -9.664121627807617
    6. 'for' → logprob: -10.039121627807617
    7. '
' → logprob: -10.664121627807617
    8. ' plus' → logprob: -10.789121627807617
    9. 'to' → logprob: -11.164121627807617
    10. ' (' → logprob: -11.164121627807617

Token 374: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.023646406829357147
    2. '+' → logprob: -4.898646354675293
    3. 'to' → logprob: -4.898646354675293
    4. ' +' → logprob: -5.148646354675293
    5. ' for' → logprob: -6.898646354675293
    6. ' plus' → logprob: -7.523646354675293
    7. ' more' → logprob: -8.273646354675293
    8. ' if' → logprob: -8.523646354675293
    9. ' per' → logprob: -8.523646354675293
    10. '*' → logprob: -9.648646354675293

Token 375: ' move' (ID: 5275)
  Prédit: 'go'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'go' → logprob: -1.1776564121246338
    2. 'make' → logprob: -1.9276564121246338
    3. ' go' → logprob: -2.802656412124634
    4. 'visit' → logprob: -3.052656412124634
    5. 'travel' → logprob: -3.052656412124634
    6. 'tr' → logprob: -3.177656412124634
    7. ' reach' → logprob: -3.427656412124634
    8. ' move' → logprob: -3.552656412124634
    9. ' make' → logprob: -3.552656412124634
    10. 'ask' → logprob: -3.552656412124634

Token 376: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.8016632199287415
    2. ' to' → logprob: -0.9266632199287415
    3. ' between' → logprob: -2.4266631603240967
    4. 'from' → logprob: -3.0516631603240967
    5. ' one' → logprob: -4.676663398742676
    6. 'to' → logprob: -5.176663398742676
    7. ' along' → logprob: -6.051663398742676
    8. ' ' → logprob: -7.426663398742676
    9. 'between' → logprob: -7.551663398742676
    10. ' a' → logprob: -7.801663398742676

Token 377: ' a' (ID: 261)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.08364715427160263
    2. ' one' → logprob: -3.5836472511291504
    3. 'a' → logprob: -3.9586472511291504
    4. 'node' → logprob: -4.08364725112915
    5. 'this' → logprob: -4.20864725112915
    6. 'current' → logprob: -7.20864725112915
    7. ' a' → logprob: -8.458646774291992
    8. 'branch' → logprob: -8.458646774291992
    9. ' this' → logprob: -8.833646774291992
    10. 'parent' → logprob: -8.958646774291992

Token 378: ' branching' (ID: 173776)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.31978538632392883
    2. 'branch' → logprob: -1.4447853565216064
    3. ' node' → logprob: -3.5697853565216064
    4. 'parent' → logprob: -5.3197855949401855
    5. ' branching' → logprob: -5.9447855949401855
    6. 'state' → logprob: -6.9447855949401855
    7. 'current' → logprob: -7.3197855949401855
    8. 'point' → logprob: -8.444785118103027
    9. ' branch' → logprob: -9.319785118103027
    10. 'child' → logprob: -9.569785118103027

Token 379: ' point' (ID: 2438)
  Prédit: '_point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.24751156568527222
    2. '_' → logprob: -1.622511625289917
    3. ' point' → logprob: -4.122511386871338
    4. 'point' → logprob: -5.372511386871338
    5. '_node' → logprob: -7.247511386871338
    6. ' _' → logprob: -8.747511863708496
    7. ' node' → logprob: -9.747511863708496
    8. '_
' → logprob: -10.872511863708496
    9. 'node' → logprob: -10.997511863708496
    10. '_points' → logprob: -11.497511863708496

Token 380: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.002327363472431898
    2. 'to' → logprob: -6.1273274421691895
    3. ' or' → logprob: -10.002326965332031
    4. ' node' → logprob: -10.377326965332031
    5. ' (' → logprob: -11.002326965332031
    6. ' ' → logprob: -11.127326965332031
    7. ',' → logprob: -11.252326965332031
    8. '_to' → logprob: -12.752326965332031
    9. 'node' → logprob: -13.127326965332031
    10. '   ' → logprob: -13.252326965332031

Token 381: ' next' (ID: 2613)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7244192361831665
    2. 'another' → logprob: -1.2244192361831665
    3. 'either' → logprob: -2.224419116973877
    4. 'one' → logprob: -3.224419116973877
    5. 'any' → logprob: -3.849419116973877
    6. ' a' → logprob: -4.224419116973877
    7. ' either' → logprob: -4.849419116973877
    8. 'an' → logprob: -4.974419116973877
    9. 'child' → logprob: -5.099419116973877
    10. 'the' → logprob: -5.474419116973877

Token 382: ' branching' (ID: 173776)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.6321539282798767
    2. 'node' → logprob: -1.1321539878845215
    3. '_branch' → logprob: -3.6321539878845215
    4. '       ' → logprob: -3.7571539878845215
    5. '_node' → logprob: -3.8821539878845215
    6. 'point' → logprob: -4.1321539878845215
    7. 'branch' → logprob: -4.6321539878845215
    8. 'token' → logprob: -4.7571539878845215
    9. '_token' → logprob: -5.2571539878845215
    10. ' branching' → logprob: -5.5071539878845215

Token 383: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.13169042766094208
    2. ' point' → logprob: -2.131690502166748
    3. '_point' → logprob: -5.381690502166748
    4. '	point' → logprob: -9.75669002532959
    5. '       ' → logprob: -10.25669002532959
    6. '   ' → logprob: -11.13169002532959
    7. '-point' → logprob: -11.75669002532959
    8. 'points' → logprob: -11.75669002532959
    9. '<|end|>' → logprob: -12.25669002532959
    10. 'punkt' → logprob: -12.63169002532959

Token 384: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3852090835571289
    2. ' +' → logprob: -1.885209083557129
    3. ' or' → logprob: -2.510209083557129
    4. '+' → logprob: -2.635209083557129
    5. ',' → logprob: -5.260209083557129
    6. ' and' → logprob: -6.135209083557129
    7. '#' → logprob: -6.760209083557129
    8. '
' → logprob: -6.760209083557129
    9. ' if' → logprob: -7.135209083557129
    10. '        
' → logprob: -7.385209083557129

Token 385: ' ending' (ID: 22013)
  Prédit: 'ending'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ending' → logprob: -0.16472549736499786
    2. 'an' → logprob: -2.6647255420684814
    3. 'leaf' → logprob: -3.0397255420684814
    4. ' ending' → logprob: -3.9147255420684814
    5. ' an' → logprob: -4.789725303649902
    6. ' leaf' → logprob: -6.164725303649902
    7. 'branch' → logprob: -7.039725303649902
    8. ' its' → logprob: -7.414725303649902
    9. 'a' → logprob: -7.664725303649902
    10. 'its' → logprob: -7.789725303649902

Token 386: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.068666934967041
    2. '
' → logprob: -1.318666934967041
    3. ' +' → logprob: -1.443666934967041
    4. '+' → logprob: -2.193666934967041
    5. 'time' → logprob: -4.318666934967041
    6. '        
' → logprob: -4.943666934967041
    7. ' 
' → logprob: -5.568666934967041
    8. '#' → logprob: -5.818666934967041
    9. ',' → logprob: -6.068666934967041
    10. '_time' → logprob: -6.443666934967041

Token 387: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9171186089515686
    2. ' save' → logprob: -2.167118549346924
    3. ' time' → logprob: -2.292118549346924
    4. 'time' → logprob: -2.667118549346924
    5. 'save' → logprob: -2.667118549346924
    6. ' total' → logprob: -3.042118549346924
    7. '
' → logprob: -3.292118549346924
    8. ' cost' → logprob: -3.667118549346924
    9. 'total' → logprob: -4.167118549346924
    10. 'cost' → logprob: -4.417118549346924

Token 388: ' #' (ID: 1069)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -1.6643784046173096
    2. ' time' → logprob: -1.9143784046173096
    3. ' total' → logprob: -2.2893784046173096
    4. 'save' → logprob: -2.5393784046173096
    5. ' min' → logprob: -2.7893784046173096
    6. '       ' → logprob: -2.9143784046173096
    7. ' if' → logprob: -3.0393784046173096
    8. 'total' → logprob: -3.1643784046173096
    9. '#' (adapté à ' #') → logprob: -3.2893784046173096
    10. ' save' → logprob: -3.2893784046173096

Token 389: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0762349367141724
    2. '       ' → logprob: -1.9512349367141724
    3. 'time' → logprob: -1.9512349367141724
    4. 'save' → logprob: -2.326234817504883
    5. 'total' → logprob: -2.451234817504883
    6. ' total' → logprob: -3.076234817504883
    7. 'min' → logprob: -3.951234817504883
    8. ' time' → logprob: -4.076234817504883
    9. ' save' → logprob: -4.451234817504883
    10. ' #' → logprob: -4.576234817504883

Token 390: ' Returning' (ID: 150212)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.597971498966217
    2. 'save' → logprob: -1.8479714393615723
    3. 'time' → logprob: -2.4729714393615723
    4. 'We' → logprob: -2.9729714393615723
    5. 'total' → logprob: -3.2229714393615723
    6. 'cost' → logprob: -3.2229714393615723
    7. 'min' → logprob: -4.597971439361572
    8. 'base' → logprob: -4.722971439361572
    9. 'res' → logprob: -4.722971439361572
    10. 'max' → logprob: -4.847971439361572

Token 391: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6658240556716919
    2. ' back' → logprob: -1.165824055671692
    3. ' ' → logprob: -2.6658239364624023
    4. '_back' → logprob: -2.9158239364624023
    5. 'to' → logprob: -4.040823936462402
    6. 'back' → logprob: -4.915823936462402
    7. '_' → logprob: -4.915823936462402
    8. '_time' → logprob: -5.290823936462402
    9. '_to' → logprob: -5.915823936462402
    10. '1' → logprob: -6.165823936462402

Token 392: ' start' (ID: 1604)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.41061931848526
    2. 'the' → logprob: -2.0356192588806152
    3. ' a' → logprob: -2.9106192588806152
    4. 'previous' → logprob: -3.0356192588806152
    5. 'branch' → logprob: -3.5356192588806152
    6. 'root' → logprob: -3.7856192588806152
    7. 'parent' → logprob: -3.7856192588806152
    8. ' the' → logprob: -4.410619258880615
    9. 'starting' → logprob: -5.785619258880615
    10. 'start' → logprob: -6.285619258880615

Token 393: ' is' (ID: 382)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3038456439971924
    2. 'from' → logprob: -2.0538456439971924
    3. 'point' → logprob: -2.1788456439971924
    4. '_point' → logprob: -2.1788456439971924
    5. ' from' → logprob: -2.3038456439971924
    6. '   ' → logprob: -2.8038456439971924
    7. 'node' → logprob: -4.053845405578613
    8. '1' → logprob: -4.053845405578613
    9. '_node' → logprob: -4.178845405578613
    10. '_from' → logprob: -4.303845405578613

Token 394: ' free' (ID: 2240)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2376650720834732
    2. ' ' → logprob: -2.2376651763916016
    3. '0' → logprob: -3.7376651763916016
    4. 'free' → logprob: -4.362665176391602
    5. 'also' → logprob: -4.487665176391602
    6. 'possible' → logprob: -4.487665176391602
    7. ' free' → logprob: -4.612665176391602
    8. ' also' → logprob: -5.112665176391602
    9. 'always' → logprob: -5.112665176391602
    10. ' possible' → logprob: -5.362665176391602

Token 395: ' but' (ID: 889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2866445481777191
    2. '        
' → logprob: -2.161644458770752
    3. '
' → logprob: -2.286644458770752
    4. ',' → logprob: -4.911644458770752
    5. '#' → logprob: -5.286644458770752
    6. '<|end|>' → logprob: -5.786644458770752
    7. '        

' → logprob: -5.786644458770752
    8. 'time' → logprob: -6.286644458770752
    9. ')' → logprob: -6.536644458770752
    10. '        
        
' → logprob: -6.661644458770752

Token 396: ' slow' (ID: 9800)
  Prédit: 'you'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'you' → logprob: -0.9464346766471863
    2. 'we' → logprob: -1.571434736251831
    3. 'can' → logprob: -2.446434736251831
    4. ' you' → logprob: -2.446434736251831
    5. 'only' → logprob: -3.071434736251831
    6. ' we' → logprob: -3.321434736251831
    7. ' only' → logprob: -3.571434736251831
    8. ' the' → logprob: -3.946434736251831
    9. 'the' → logprob: -3.946434736251831
    10. 'does' → logprob: -3.946434736251831

Token 397: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7023515105247498
    2. '
' → logprob: -0.8273515105247498
    3. '        
' → logprob: -3.7023515701293945
    4. ',' → logprob: -4.7023515701293945
    5. '<|end|>' → logprob: -4.8273515701293945
    6. '

' → logprob: -5.3273515701293945
    7. '#' → logprob: -5.5773515701293945
    8. '+' → logprob: -5.7023515701293945
    9. ' +' → logprob: -6.0773515701293945
    10. ',
' → logprob: -6.5773515701293945

Token 398: 'we' (ID: 854)
  Prédit: 'so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'so' → logprob: -1.584060788154602
    2. '#' → logprob: -1.709060788154602
    3. ' so' → logprob: -1.709060788154602
    4. ')' → logprob: -2.3340606689453125
    5. '1' → logprob: -3.0840606689453125
    6. '),' → logprob: -3.7090606689453125
    7. ' the' → logprob: -3.8340606689453125
    8. 'and' → logprob: -3.9590606689453125
    9. 'we' → logprob: -3.9590606689453125
    10. ' and' → logprob: -4.2090606689453125

Token 399: ' want' (ID: 1682)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -1.679972767829895
    2. ')' → logprob: -1.804972767829895
    3. ' )' → logprob: -1.804972767829895
    4. ' need' → logprob: -2.1799726486206055
    5. ''ll' → logprob: -2.1799726486206055
    6. ' have' → logprob: -2.9299726486206055
    7. ' assume' → logprob: -3.1799726486206055
    8. ' continue' → logprob: -3.4299726486206055
    9. ' don't' → logprob: -3.5549726486206055
    10. ' haven't' → logprob: -4.4299726486206055

Token 400: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.010196814313530922
    2. 'to' → logprob: -4.635196685791016
    3. '
' → logprob: -8.385196685791016
    4. ' ' → logprob: -10.385196685791016
    5. ' the' → logprob: -10.635196685791016
    6. '       ' → logprob: -10.885196685791016
    7. '   ' → logprob: -10.885196685791016
    8. ')' → logprob: -10.885196685791016
    9. '1' → logprob: -11.385196685791016
    10. '    ' → logprob: -11.635196685791016

Token 401: ' minimize' (ID: 41776)
  Prédit: 'avoid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avoid' → logprob: -0.1298888623714447
    2. ' avoid' → logprob: -2.2548887729644775
    3. 'min' → logprob: -4.379889011383057
    4. ' minimize' → logprob: -5.754889011383057
    5. 'opt' → logprob: -8.379888534545898
    6. 'save' → logprob: -8.379888534545898
    7. 'return' → logprob: -9.254888534545898
    8. 'finish' → logprob: -9.504888534545898
    9. 'count' → logprob: -9.504888534545898
    10. 'skip' → logprob: -9.629888534545898

Token 402: ').
' (ID: 6294)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.664218544960022
    2. ' the' → logprob: -1.914218544960022
    3. 'total' → logprob: -2.1642184257507324
    4. 'time' → logprob: -2.6642184257507324
    5. 'the' → logprob: -2.7892184257507324
    6. ' time' → logprob: -3.5392184257507324
    7. ' overall' → logprob: -3.7892184257507324
    8. ')' → logprob: -4.289218425750732
    9. 'overall' → logprob: -4.664218425750732
    10. 'return' → logprob: -5.164218425750732

Token 403: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1656121015548706
    2. ' total' → logprob: -3.91561222076416
    3. ' save' → logprob: -4.04061222076416
    4. 'save' → logprob: -4.29061222076416
    5. ' max' → logprob: -4.41561222076416
    6. '#' → logprob: -4.54061222076416
    7. ' time' → logprob: -4.54061222076416
    8. '        
' → logprob: -4.66561222076416
    9. 'time' → logprob: -4.79061222076416
    10. ' #' → logprob: -5.04061222076416

Token 404: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1033051013946533
    2. ' total' → logprob: -1.7283051013946533
    3. '#' (adapté à ' #') → logprob: -2.6033051013946533
    4. 'save' → logprob: -2.8533051013946533
    5. 'total' → logprob: -2.8533051013946533
    6. 'time' → logprob: -2.9783051013946533
    7. ' time' → logprob: -3.3533051013946533
    8. ' save' → logprob: -3.3533051013946533
    9. ' min' → logprob: -3.4783051013946533
    10. ' max' → logprob: -3.8533051013946533

Token 405: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.6677296161651611
    2. '       ' → logprob: -1.6677296161651611
    3. ' total' → logprob: -1.7927296161651611
    4. 'total' → logprob: -2.042729616165161
    5. 'time' → logprob: -2.417729616165161
    6. 'save' → logprob: -2.792729616165161
    7. ' time' → logprob: -3.292729616165161
    8. ' #' → logprob: -3.792729616165161
    9. ' save' → logprob: -4.167729377746582
    10. ' if' → logprob: -4.167729377746582

Token 406: ' Quick' (ID: 23584)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2917938232421875
    2. 'total' → logprob: -2.5417938232421875
    3. 'time' → logprob: -2.7917938232421875
    4. 'min' → logprob: -3.2917938232421875
    5. 'cost' → logprob: -3.6667938232421875
    6. 'res' → logprob: -4.2917938232421875
    7. 'save' → logprob: -4.6667938232421875
    8. 'best' → logprob: -5.0417938232421875
    9. 'We' → logprob: -5.6667938232421875
    10. 'base' → logprob: -6.0417938232421875

Token 407: ' Save' (ID: 15564)
  Prédit: '_save'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_save' → logprob: -0.26975172758102417
    2. 'save' → logprob: -1.644751787185669
    3. ' save' → logprob: -3.394751787185669
    4. '_' → logprob: -4.76975154876709
    5. ' _' → logprob: -7.64475154876709
    6. '_s' → logprob: -8.39475154876709
    7. 'Save' → logprob: -9.14475154876709
    8. '_return' → logprob: -9.26975154876709
    9. 'ly' → logprob: -9.89475154876709
    10. ' saves' → logprob: -9.89475154876709

Token 408: ' only' (ID: 1606)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.13818971812725067
    2. ' =' → logprob: -3.0131897926330566
    3. '_cost' → logprob: -3.5131897926330566
    4. '_' → logprob: -4.138189792633057
    5. '       ' → logprob: -4.888189792633057
    6. 'time' → logprob: -4.888189792633057
    7. '_strategy' → logprob: -6.138189792633057
    8. '=' → logprob: -6.263189792633057
    9. ':' → logprob: -6.638189792633057
    10. 'cost' → logprob: -6.763189792633057

Token 409: ' holds' (ID: 18305)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.3479810655117035
    2. 'works' → logprob: -2.3479809761047363
    3. ' can' → logprob: -2.7229809761047363
    4. ' works' → logprob: -3.0979809761047363
    5. 'is' → logprob: -4.097980976104736
    6. 'available' → logprob: -4.597980976104736
    7. 'ap' → logprob: -4.847980976104736
    8. 's' → logprob: -5.222980976104736
    9. 'mechan' → logprob: -5.347980976104736
    10. ' applies' → logprob: -5.472980976104736

Token 410: ' one' (ID: 1001)
  Prédit: ' one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.6766402125358582
    2. 'one' → logprob: -0.9266402125358582
    3. '1' → logprob: -2.551640272140503
    4. ' ' → logprob: -4.676640033721924
    5. ' for' → logprob: -6.426640033721924
    6. 'for' → logprob: -6.926640033721924
    7. ' at' → logprob: -6.926640033721924
    8. 'once' → logprob: -6.926640033721924
    9. ' up' → logprob: -7.676640033721924
    10. ' the' → logprob: -7.676640033721924

Token 411: ' point' (ID: 2438)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.3939822018146515
    2. 'branch' → logprob: -2.518982172012329
    3. 'save' → logprob: -2.518982172012329
    4. 'checkpoint' → logprob: -3.268982172012329
    5. 'decision' → logprob: -3.393982172012329
    6. 'slot' → logprob: -4.393982410430908
    7. 'choice' → logprob: -4.393982410430908
    8. 'time' → logprob: -4.768982410430908
    9. 'option' → logprob: -5.268982410430908
    10. 'saved' → logprob: -5.268982410430908

Token 412: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11753306537866592
    2. '
' → logprob: -2.742532968521118
    3. '        
' → logprob: -3.867532968521118
    4. '#' → logprob: -4.117533206939697
    5. '        

' → logprob: -6.492533206939697
    6. ',' → logprob: -6.867533206939697
    7. 'time' → logprob: -7.117533206939697
    8. '

' → logprob: -7.117533206939697
    9. ')' → logprob: -7.367533206939697
    10. '<|end|>' → logprob: -7.742533206939697

Token 413: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.012782619334757328
    2. ' a' → logprob: -4.387782573699951
    3. 'any' → logprob: -8.88778305053711
    4. 'time' → logprob: -9.63778305053711
    5. 'once' → logprob: -10.13778305053711
    6. '   ' → logprob: -11.88778305053711
    7. 'the' → logprob: -12.01278305053711
    8. ' ' → logprob: -12.51278305053711
    9. ' any' → logprob: -12.88778305053711
    10. '1' → logprob: -12.88778305053711

Token 414: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.0005753128207288682
    2. 'ime' → logprob: -7.625575542449951
    3. ' time' → logprob: -9.375575065612793
    4. '   ' → logprob: -14.125575065612793
    5. '-time' → logprob: -15.000575065612793
    6. 'tim' → logprob: -15.625575065612793
    7. '	time' → logprob: -15.875575065612793
    8. '
' → logprob: -15.875575065612793
    9. '_time' → logprob: -16.12557601928711
    10. 'me' → logprob: -16.25057601928711

Token 415: ';' (ID: 26)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23894216120243073
    2. '
' → logprob: -2.1139421463012695
    3. '        
' → logprob: -2.4889421463012695
    4. '#' → logprob: -5.8639421463012695
    5. 'time' → logprob: -7.3639421463012695
    6. '        

' → logprob: -7.3639421463012695
    7. ',' → logprob: -7.6139421463012695
    8. '<|end|>' → logprob: -7.8639421463012695
    9. '  
' → logprob: -7.9889421463012695
    10. '        
        
' → logprob: -7.9889421463012695

Token 416: ' overw' (ID: 21696)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.44492068886756897
    2. '       ' → logprob: -1.6949206590652466
    3. ' #' → logprob: -2.694920778274536
    4. '
' → logprob: -3.194920778274536
    5. ' total' → logprob: -4.694920539855957
    6. ' if' → logprob: -4.694920539855957
    7. ' best' → logprob: -4.944920539855957
    8. 'time' → logprob: -5.569920539855957
    9. 'total' → logprob: -5.819920539855957
    10. 'if' → logprob: -5.944920539855957

Token 417: 'riting' (ID: 15201)
  Prédit: 'rites'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rites' → logprob: -0.2478426694869995
    2. 'riting' → logprob: -1.6228426694869995
    3. 'rite' → logprob: -3.872842788696289
    4. 'write' → logprob: -8.122842788696289
    5. 'riter' → logprob: -8.622842788696289
    6. '#' → logprob: -8.622842788696289
    7. 'rit' → logprob: -8.747842788696289
    8. 'rote' → logprob: -8.997842788696289
    9. 'ritten' → logprob: -9.122842788696289
    10. 'ritable' → logprob: -10.372842788696289

Token 418: ' previous' (ID: 5880)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.15933002531528473
    2. 'the' → logprob: -2.534330129623413
    3. ' existing' → logprob: -4.659329891204834
    4. ' saves' → logprob: -4.659329891204834
    5. ' it' → logprob: -5.284329891204834
    6. 'self' → logprob: -5.534329891204834
    7. ' =' → logprob: -5.784329891204834
    8. 'save' → logprob: -5.784329891204834
    9. ' previous' → logprob: -5.909329891204834
    10. '#' → logprob: -5.909329891204834

Token 419: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32346028089523315
    2. '#' → logprob: -1.823460340499878
    3. 'save' → logprob: -2.948460340499878
    4. '        
' → logprob: -3.823460340499878
    5. '
' → logprob: -4.198460102081299
    6. 'point' → logprob: -5.198460102081299
    7. '_save' → logprob: -5.198460102081299
    8. 'time' → logprob: -6.323460102081299
    9. ' #' → logprob: -6.698460102081299
    10. 'saved' → logprob: -6.823460102081299

Token 420: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29361698031425476
    2. '#' → logprob: -2.293617010116577
    3. '
' → logprob: -3.168617010116577
    4. ' #' → logprob: -3.793617010116577
    5. '        
' → logprob: -4.418616771697998
    6. ' total' → logprob: -4.668616771697998
    7. ' save' → logprob: -4.793616771697998
    8. ' if' → logprob: -4.918616771697998
    9. 'save' → logprob: -5.043616771697998
    10. ' max' → logprob: -5.418616771697998

Token 421: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.522953987121582
    2. '#' → logprob: -1.397953987121582
    3. ' total' → logprob: -2.897953987121582
    4. 'total' → logprob: -3.397953987121582
    5. 'time' → logprob: -4.022953987121582
    6. ' #' → logprob: -4.397953987121582
    7. 'save' → logprob: -4.522953987121582
    8. ' time' → logprob: -5.272953987121582
    9. ' if' → logprob: -6.147953987121582
    10. ' save' → logprob: -6.272953987121582

Token 422: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020479410886764526
    2. '#' → logprob: -4.520479202270508
    3. 'save' → logprob: -6.270479202270508
    4. 'total' → logprob: -6.395479202270508
    5. '        
' → logprob: -6.770479202270508
    6. ' total' → logprob: -7.020479202270508
    7. '   ' → logprob: -7.520479202270508
    8. 'time' → logprob: -7.520479202270508
    9. ' #' → logprob: -7.520479202270508
    10. 'cost' → logprob: -7.895479202270508

Token 423: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.0996508002281189
    2. 'total' → logprob: -4.099650859832764
    3. 'time' → logprob: -4.224650859832764
    4. 'min' → logprob: -4.349650859832764
    5. 'cost' → logprob: -4.349650859832764
    6. 'res' → logprob: -4.474650859832764
    7. 'best' → logprob: -5.224650859832764
    8. 'save' → logprob: -5.724650859832764
    9. '       ' → logprob: -5.849650859832764
    10. 'if' → logprob: -5.849650859832764

Token 424: ' Observation' (ID: 143762)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2219243198633194
    2. 'total' → logprob: -2.471924304962158
    3. 'time' → logprob: -3.346924304962158
    4. 'res' → logprob: -3.721924304962158
    5. 'min' → logprob: -3.846924304962158
    6. 'cost' → logprob: -4.346924304962158
    7. 'save' → logprob: -4.971924304962158
    8. 'best' → logprob: -5.971924304962158
    9. 'if' → logprob: -6.846924304962158
    10. 'left' → logprob: -6.971924304962158

Token 425: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08940178155899048
    2. ' =' → logprob: -2.5894017219543457
    3. '=' → logprob: -5.714401721954346
    4. ',' → logprob: -5.714401721954346
    5. '       ' → logprob: -6.464401721954346
    6. '#' → logprob: -6.839401721954346
    7. ':
' → logprob: -7.464401721954346
    8. ' :' → logprob: -9.089402198791504
    9. ':

' → logprob: -9.964402198791504
    10. 'time' → logprob: -10.214402198791504

Token 426: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0982389822602272
    2. ' total' → logprob: -2.973238945007324
    3. '#' → logprob: -4.098238945007324
    4. ' #' → logprob: -4.973238945007324
    5. 'total' → logprob: -4.973238945007324
    6. ' time' → logprob: -6.223238945007324
    7. 'time' → logprob: -6.848238945007324
    8. ' cost' → logprob: -6.973238945007324
    9. ' if' → logprob: -7.098238945007324
    10. 'save' → logprob: -7.098238945007324

Token 427: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.5850793719291687
    2. '       ' → logprob: -2.2100794315338135
    3. 'total' → logprob: -2.2100794315338135
    4. 'time' → logprob: -2.7100794315338135
    5. ' total' → logprob: -3.5850794315338135
    6. 'res' → logprob: -3.5850794315338135
    7. 'min' → logprob: -4.335079193115234
    8. 'cost' → logprob: -4.460079193115234
    9. ' #' → logprob: -4.585079193115234
    10. 'sub' → logprob: -4.835079193115234

Token 428: ' The' (ID: 623)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.46017083525657654
    2. 'total' → logprob: -2.3351707458496094
    3. 'time' → logprob: -2.3351707458496094
    4. 'min' → logprob: -2.5851707458496094
    5. 'cost' → logprob: -3.3351707458496094
    6. 'res' → logprob: -3.5851707458496094
    7. 'sub' → logprob: -5.710170745849609
    8. 'left' → logprob: -5.710170745849609
    9. 'max' → logprob: -5.835170745849609
    10. 'save' → logprob: -6.085170745849609

Token 429: ' tree' (ID: 8165)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5140436291694641
    2. 'min' → logprob: -2.0140435695648193
    3. 'time' → logprob: -2.6390435695648193
    4. 'best' → logprob: -2.8890435695648193
    5. 'res' → logprob: -3.0140435695648193
    6. 'total' → logprob: -3.6390435695648193
    7. 'max' → logprob: -4.639043807983398
    8. ' min' → logprob: -4.764043807983398
    9. ' res' → logprob: -5.014043807983398
    10. 'cost' → logprob: -5.264043807983398

Token 430: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.4600907862186432
    2. ' structure' → logprob: -1.9600907564163208
    3. ' traversal' → logprob: -2.8350908756256104
    4. ' represents' → logprob: -3.0850908756256104
    5. ' can' → logprob: -3.7100908756256104
    6. ')' → logprob: -4.210090637207031
    7. '#' → logprob: -4.460090637207031
    8. '
' → logprob: -4.585090637207031
    9. ' node' → logprob: -5.210090637207031
    10. 'is' → logprob: -5.210090637207031

Token 431: ' actually' (ID: 4771)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9743008017539978
    2. 'binary' → logprob: -1.4743008613586426
    3. ' binary' → logprob: -1.7243008613586426
    4. ' a' → logprob: -2.0993008613586426
    5. ' full' → logprob: -2.8493008613586426
    6. 'perfect' → logprob: -4.599300861358643
    7. 'full' → logprob: -4.974300861358643
    8. ' perfect' → logprob: -5.224300861358643
    9. 'balanced' → logprob: -5.974300861358643
    10. '   ' → logprob: -6.099300861358643

Token 432: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04405785724520683
    2. ' a' → logprob: -3.794057846069336
    3. 'binary' → logprob: -4.044057846069336
    4. 'full' → logprob: -6.919057846069336
    5. ' binary' → logprob: -7.294057846069336
    6. 'balanced' → logprob: -7.794057846069336
    7. 'perfect' → logprob: -8.169057846069336
    8. ' full' → logprob: -8.294057846069336
    9. '   ' → logprob: -8.544057846069336
    10. 'complete' → logprob: -9.419057846069336

Token 433: ' full' (ID: 3149)
  Prédit: 'binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binary' → logprob: -0.371140718460083
    2. ' binary' → logprob: -1.246140718460083
    3. ' full' → logprob: -4.371140480041504
    4. 'full' → logprob: -5.246140480041504
    5. 'perfect' → logprob: -5.996140480041504
    6. ' perfect' → logprob: -7.496140480041504
    7. 'complete' → logprob: -7.996140480041504
    8. ' complete' → logprob: -8.496140480041504
    9. ' rooted' → logprob: -8.746140480041504
    10. '   ' → logprob: -8.871140480041504

Token 434: ' binary' (ID: 15600)
  Prédit: ' binary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' binary' → logprob: -0.03397645801305771
    2. 'binary' → logprob: -3.4089765548706055
    3. '_binary' → logprob: -8.783976554870605
    4. '   ' → logprob: -9.283976554870605
    5. ' ' → logprob: -11.033976554870605
    6. '```' → logprob: -11.283976554870605
    7. '    ' → logprob: -11.783976554870605
    8. 'Binary' → logprob: -12.283976554870605
    9. '       ' → logprob: -12.283976554870605
    10. '-' → logprob: -12.408976554870605

Token 435: ' tree' (ID: 8165)
  Prédit: ' tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tree' → logprob: -0.03037930838763714
    2. 'tree' → logprob: -3.655379295349121
    3. ' ' → logprob: -6.405379295349121
    4. '_tree' → logprob: -6.655379295349121
    5. '-tree' → logprob: -8.280379295349121
    6. ' 
' → logprob: -8.905379295349121
    7. ' search' → logprob: -9.155379295349121
    8. 'space' → logprob: -9.155379295349121
    9. ' space' → logprob: -9.155379295349121
    10. ')' → logprob: -9.280379295349121

Token 436: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0429820641875267
    2. ',' → logprob: -3.5429821014404297
    3. '.' → logprob: -5.54298210144043
    4. '<|end|>' → logprob: -5.79298210144043
    5. '        
' → logprob: -6.66798210144043
    6. ')' → logprob: -6.91798210144043
    7. ' with' → logprob: -7.29298210144043
    8. ' if' → logprob: -7.66798210144043
    9. ' and' → logprob: -7.79298210144043
    10. '<|end|>' → logprob: -8.29298210144043

Token 437: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1170460432767868
    2. 'depth' → logprob: -3.6170461177825928
    3. 'nodes' → logprob: -3.8670461177825928
    4. 'all' → logprob: -3.9920461177825928
    5. ' n' → logprob: -4.117045879364014
    6. 'height' → logprob: -5.117045879364014
    7. 'self' → logprob: -5.742045879364014
    8. ' nodes' → logprob: -5.742045879364014
    9. ' all' → logprob: -6.117045879364014
    10. 'levels' → logprob: -6.367045879364014

Token 438: ' leaves' (ID: 15657)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2829061448574066
    2. '-' → logprob: -1.657906174659729
    3. '   ' → logprob: -4.5329060554504395
    4. ' nodes' → logprob: -4.5329060554504395
    5. ' ' → logprob: -4.7829060554504395
    6. '=' → logprob: -5.4079060554504395
    7. '_nodes' → logprob: -5.5329060554504395
    8. '#' → logprob: -5.7829060554504395
    9. ' #' → logprob: -6.0329060554504395
    10. 'nodes' → logprob: -6.0329060554504395

Token 439: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04468149319291115
    2. ',' → logprob: -3.5446815490722656
    3. ' and' → logprob: -5.919681549072266
    4. '        
' → logprob: -6.044681549072266
    5. ')' → logprob: -6.419681549072266
    6. '#' → logprob: -6.419681549072266
    7. '.' → logprob: -7.044681549072266
    8. 'total' → logprob: -7.419681549072266
    9. '<|end|>' → logprob: -7.419681549072266
    10. '
' → logprob: -7.794681549072266

Token 440: 'end' (ID: 419)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0688827708363533
    2. '),' → logprob: -3.193882703781128
    3. ').' → logprob: -4.818882942199707
    4. '       ' → logprob: -5.693882942199707
    5. ' and' → logprob: -5.693882942199707
    6. '#' → logprob: -6.068882942199707
    7. 'and' → logprob: -6.193882942199707
    8. ',' → logprob: -6.318882942199707
    9. ')
' → logprob: -7.068882942199707
    10. '=' → logprob: -7.568882942199707

Token 441: 'ings' (ID: 963)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7376890182495117
    2. '       ' → logprob: -1.8626890182495117
    3. '   ' → logprob: -2.2376890182495117
    4. 'points' → logprob: -2.6126890182495117
    5. '_nodes' → logprob: -2.7376890182495117
    6. '_' → logprob: -3.8626890182495117
    7. '=' → logprob: -4.362689018249512
    8. '_node' → logprob: -4.362689018249512
    9. 'node' → logprob: -4.487689018249512
    10. 'nodes' → logprob: -4.737689018249512

Token 442: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022279344499111176
    2. '       ' → logprob: -4.897279262542725
    3. ').' → logprob: -5.022279262542725
    4. '),' → logprob: -5.147279262542725
    5. ',' → logprob: -6.397279262542725
    6. ' and' → logprob: -8.772279739379883
    7. ')
' → logprob: -9.647279739379883
    8. ' )' → logprob: -9.897279739379883
    9. '   ' → logprob: -10.022279739379883
    10. '#' → logprob: -10.522279739379883

Token 443: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06455683708190918
    2. ' total' → logprob: -3.814556837081909
    3. '        
' → logprob: -4.314557075500488
    4. 'total' → logprob: -5.439557075500488
    5. ' time' → logprob: -5.564557075500488
    6. '#' → logprob: -5.689557075500488
    7. 'time' → logprob: -6.064557075500488
    8. '
' → logprob: -6.314557075500488
    9. 'save' → logprob: -6.814557075500488
    10. ' save' → logprob: -6.939557075500488

Token 444: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12797701358795166
    2. ' total' → logprob: -3.127976894378662
    3. 'total' → logprob: -4.002976894378662
    4. '#' (adapté à ' #') → logprob: -4.252976894378662
    5. 'time' → logprob: -4.377976894378662
    6. ' time' → logprob: -4.627976894378662
    7. '        
' → logprob: -5.252976894378662
    8. 'save' → logprob: -6.002976894378662
    9. ' if' → logprob: -6.627976894378662
    10. ' save' → logprob: -6.752976894378662

Token 445: ' It' (ID: 1225)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9200260639190674
    2. 'time' → logprob: -1.7950260639190674
    3. ' total' → logprob: -2.5450260639190674
    4. '#' → logprob: -2.5450260639190674
    5. 'total' → logprob: -2.5450260639190674
    6. ' time' → logprob: -2.7950260639190674
    7. 'save' → logprob: -3.4200260639190674
    8. ' save' → logprob: -4.545025825500488
    9. 'cost' → logprob: -4.670025825500488
    10. 'max' → logprob: -4.920025825500488

Token 446: ' has' (ID: 853)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14176693558692932
    2. '=' → logprob: -2.8917670249938965
    3. '#' → logprob: -3.6417670249938965
    4. ' #' → logprob: -3.8917670249938965
    5. ' is' → logprob: -4.0167670249938965
    6. ' seems' → logprob: -6.5167670249938965
    7. '_time' → logprob: -6.6417670249938965
    8. 'return' → logprob: -6.8917670249938965
    9. 'def' → logprob: -6.8917670249938965
    10. 'time' → logprob: -7.7667670249938965

Token 447: ' N' (ID: 478)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'height' → logprob: -1.7043498754501343
    2. '(' → logprob: -1.8293498754501343
    3. 'a' → logprob: -1.8293498754501343
    4. 'n' → logprob: -2.204349994659424
    5. '2' → logprob: -2.329349994659424
    6. 'to' → logprob: -2.579349994659424
    7. 'left' → logprob: -2.704349994659424
    8. '(n' → logprob: -3.579349994659424
    9. 'two' → logprob: -4.079349994659424
    10. 'N' → logprob: -4.204349994659424

Token 448: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6995786428451538
    2. ' -' → logprob: -0.8245786428451538
    3. '*' → logprob: -3.3245787620544434
    4. ' *' → logprob: -4.074578762054443
    5. ' =' → logprob: -5.699578762054443
    6. '=' → logprob: -6.199578762054443
    7. '   ' → logprob: -6.449578762054443
    8. ' leaves' → logprob: -6.949578762054443
    9. ' ' → logprob: -7.574578762054443
    10. 'times' → logprob: -7.949578762054443

Token 449: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002692032721824944
    2. ' ' → logprob: -8.250268936157227
    3. '<|end|>' → logprob: -13.000268936157227
    4. '   ' → logprob: -13.500268936157227
    5. '2' → logprob: -14.375268936157227
    6. 'branch' → logprob: -14.500268936157227
    7. '
' → logprob: -14.625268936157227
    8. '...' → logprob: -14.750268936157227
    9. '```' → logprob: -14.875268936157227
    10. '-' → logprob: -15.000268936157227

Token 450: ' branching' (ID: 173776)
  Prédit: 'internal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'internal' → logprob: -0.808850884437561
    2. 'branch' → logprob: -0.933850884437561
    3. ' branching' → logprob: -2.3088507652282715
    4. ' internal' → logprob: -2.9338507652282715
    5. 'nodes' → logprob: -5.8088507652282715
    6. ' nodes' → logprob: -6.1838507652282715
    7. 'branches' → logprob: -7.1838507652282715
    8. '
' → logprob: -7.1838507652282715
    9. ' branch' → logprob: -7.5588507652282715
    10. 'inter' → logprob: -7.5588507652282715

Token 451: ' points' (ID: 5571)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.49982932209968567
    2. 'points' → logprob: -0.9998292922973633
    3. ' points' → logprob: -3.7498292922973633
    4. '_nodes' → logprob: -6.999829292297363
    5. '_point' → logprob: -7.874829292297363
    6. 'nodes' → logprob: -8.624829292297363
    7. '_' → logprob: -8.749829292297363
    8. '
' → logprob: -8.999829292297363
    9. 'oints' → logprob: -10.499829292297363
    10. 'point' → logprob: -10.624829292297363

Token 452: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02661306969821453
    2. ',' → logprob: -3.7766129970550537
    3. '.' → logprob: -6.776613235473633
    4. '        
' → logprob: -7.401613235473633
    5. '        

' → logprob: -7.901613235473633
    6. '#' → logprob: -8.276613235473633
    7. ' and' → logprob: -8.526613235473633
    8. ')' → logprob: -8.651613235473633
    9. '<|end|>' → logprob: -9.526613235473633
    10. 'time' → logprob: -9.651613235473633

Token 453: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03312849625945091
    2. 'time' → logprob: -4.533128261566162
    3. ' time' → logprob: -5.033128261566162
    4. '#' → logprob: -5.658128261566162
    5. '        
' → logprob: -5.658128261566162
    6. 'left' → logprob: -6.658128261566162
    7. 'save' → logprob: -6.783128261566162
    8. ' total' → logprob: -7.033128261566162
    9. 'total' → logprob: -7.033128261566162
    10. ' left' → logprob: -7.283128261566162

Token 454: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0603289604187012
    2. 'time' → logprob: -1.0603289604187012
    3. '#' → logprob: -2.560328960418701
    4. ' time' → logprob: -2.685328960418701
    5. 'save' → logprob: -3.060328960418701
    6. 'total' → logprob: -4.185328960418701
    7. 'cost' → logprob: -4.185328960418701
    8. 'left' → logprob: -4.435328960418701
    9. ' total' → logprob: -4.810328960418701
    10. ' save' → logprob: -5.060328960418701

Token 455: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1801198273897171
    2. '#' → logprob: -2.805119752883911
    3. ' time' → logprob: -3.930119752883911
    4. 'time' → logprob: -3.930119752883911
    5. ' total' → logprob: -3.930119752883911
    6. 'total' → logprob: -4.80511999130249
    7. ' #' → logprob: -4.93011999130249
    8. 'save' → logprob: -5.55511999130249
    9. ' cost' → logprob: -5.68011999130249
    10. 'cost' → logprob: -5.68011999130249

Token 456: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.10563690215349197
    2. 'total' → logprob: -3.2306368350982666
    3. 'time' → logprob: -3.6056368350982666
    4. 'cost' → logprob: -4.605637073516846
    5. 'min' → logprob: -5.105637073516846
    6. 'save' → logprob: -5.355637073516846
    7. 'res' → logprob: -5.855637073516846
    8. 'left' → logprob: -6.105637073516846
    9. 'move' → logprob: -6.730637073516846
    10. '       ' → logprob: -6.980637073516846

Token 457: ' The' (ID: 623)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8043336272239685
    2. 'time' → logprob: -1.3043336868286133
    3. 'total' → logprob: -2.1793336868286133
    4. 'res' → logprob: -2.4293336868286133
    5. 'cost' → logprob: -3.3043336868286133
    6. 'left' → logprob: -4.179333686828613
    7. 'result' → logprob: -5.054333686828613
    8. 'save' → logprob: -5.554333686828613
    9. 'sub' → logprob: -5.679333686828613
    10. 'min' → logprob: -5.929333686828613

Token 458: ' minimal' (ID: 19957)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6918980479240417
    2. 'time' → logprob: -1.6918981075286865
    3. 'left' → logprob: -2.5668981075286865
    4. 'total' → logprob: -2.9418981075286865
    5. 'cost' → logprob: -3.5668981075286865
    6. ' time' → logprob: -3.5668981075286865
    7. 'min' → logprob: -3.9418981075286865
    8. ' #' → logprob: -4.066897869110107
    9. 'sub' → logprob: -4.316897869110107
    10. 'save' → logprob: -4.441897869110107

Token 459: ' time' (ID: 1058)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.5082497000694275
    2. 'time' → logprob: -1.2582497596740723
    3. ' time' → logprob: -2.3832497596740723
    4. 'cost' → logprob: -6.133249759674072
    5. '_cost' → logprob: -6.258249759674072
    6. '#' → logprob: -6.258249759674072
    7. '_sub' → logprob: -6.383249759674072
    8. 'sub' → logprob: -6.633249759674072
    9. ' =' → logprob: -6.758249759674072
    10. ' cost' → logprob: -6.883249759674072

Token 460: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10050911456346512
    2. ' =' → logprob: -2.3505091667175293
    3. ' to' → logprob: -8.975508689880371
    4. ' is' → logprob: -9.725508689880371
    5. 'to' → logprob: -9.850508689880371
    6. '       ' → logprob: -10.725508689880371
    7. 'is' → logprob: -11.725508689880371
    8. ' needed' → logprob: -12.475508689880371
    9. ' required' → logprob: -12.725508689880371
    10. '_to' → logprob: -12.725508689880371

Token 461: ' visit' (ID: 4030)
  Prédit: 'complete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'complete' → logprob: -0.18427781760692596
    2. ' complete' → logprob: -2.0592777729034424
    3. 'visit' → logprob: -4.1842780113220215
    4. ' visit' → logprob: -5.3092780113220215
    5. 'finish' → logprob: -5.3092780113220215
    6. 'collect' → logprob: -5.3092780113220215
    7. ' finish' → logprob: -5.5592780113220215
    8. 'com' → logprob: -6.9342780113220215
    9. 'expl' → logprob: -7.0592780113220215
    10. '_complete' → logprob: -7.3092780113220215

Token 462: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.5986775755882263
    2. 'both' → logprob: -0.9736775755882263
    3. ' all' → logprob: -2.973677635192871
    4. ' both' → logprob: -3.848677635192871
    5. 'left' → logprob: -9.098677635192871
    6. 'the' → logprob: -9.348677635192871
    7. '_all' → logprob: -10.598677635192871
    8. 'sub' → logprob: -10.598677635192871
    9. 'each' → logprob: -10.973677635192871
    10. 'either' → logprob: -11.473677635192871

Token 463: ' endings' (ID: 152718)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.15715935826301575
    2. 'nodes' → logprob: -2.7821593284606934
    3. 'le' → logprob: -3.2821593284606934
    4. 'sub' → logprob: -3.7821593284606934
    5. ' nodes' → logprob: -4.782159328460693
    6. 'children' → logprob: -5.032159328460693
    7. 'leaf' → logprob: -6.407159328460693
    8. ' leaves' → logprob: -6.657159328460693
    9. ' end' → logprob: -6.782159328460693
    10. 'child' → logprob: -7.532159328460693

Token 464: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5121690034866333
    2. '=' → logprob: -1.0121690034866333
    3. ' is' → logprob: -3.6371688842773438
    4. '       ' → logprob: -6.012168884277344
    5. ',' → logprob: -6.137168884277344
    6. ')' → logprob: -6.262168884277344
    7. 'is' → logprob: -6.262168884277344
    8. '+' → logprob: -7.637168884277344
    9. ' for' → logprob: -8.387168884277344
    10. '=node' → logprob: -8.387168884277344

Token 465: ' a' (ID: 261)
  Prédit: 'this'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'this' → logprob: -0.7288725972175598
    2. 'the' → logprob: -1.603872537612915
    3. 'both' → logprob: -1.853872537612915
    4. 'sub' → logprob: -2.478872537612915
    5. ' this' → logprob: -3.853872537612915
    6. 'a' → logprob: -3.978872537612915
    7. ' the' → logprob: -4.353872776031494
    8. ' both' → logprob: -4.353872776031494
    9. ' subtree' → logprob: -4.978872776031494
    10. ' a' → logprob: -6.728872776031494

Token 466: ' binary' (ID: 15600)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.39846518635749817
    2. ' subtree' → logprob: -1.3984651565551758
    3. 'full' → logprob: -2.773465156555176
    4. 'perfect' → logprob: -5.398465156555176
    5. 'balanced' → logprob: -5.398465156555176
    6. 'binary' → logprob: -5.523465156555176
    7. 'complete' → logprob: -6.023465156555176
    8. ' full' → logprob: -6.523465156555176
    9. 'node' → logprob: -7.398465156555176
    10. 'branch' → logprob: -7.898465156555176

Token 467: ' tree' (ID: 8165)
  Prédit: ' tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tree' → logprob: -0.08712030202150345
    2. 'tree' → logprob: -3.462120294570923
    3. '_' → logprob: -3.962120294570923
    4. '_tree' → logprob: -4.212120532989502
    5. ' _' → logprob: -4.462120532989502
    6. ' space' → logprob: -6.337120532989502
    7. ' ' → logprob: -6.712120532989502
    8. 'space' → logprob: -6.712120532989502
    9. ' search' → logprob: -6.837120532989502
    10. '_search' → logprob: -7.587120532989502

Token 468: ' where' (ID: 1919)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41755765676498413
    2. ' is' → logprob: -1.542557716369629
    3. ')' → logprob: -2.792557716369629
    4. ',' → logprob: -3.417557716369629
    5. ' and' → logprob: -4.417557716369629
    6. ' =' → logprob: -4.917557716369629
    7. ' )' → logprob: -6.292557716369629
    8. ' for' → logprob: -6.417557716369629
    9. ' with' → logprob: -6.917557716369629
    10. ':' → logprob: -6.917557716369629

Token 469: ' you' (ID: 481)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -1.1365833282470703
    2. 'you' → logprob: -1.5115833282470703
    3. 'both' → logprob: -2.1365833282470703
    4. 'we' → logprob: -2.5115833282470703
    5. 'all' → logprob: -2.8865833282470703
    6. 'return' → logprob: -3.1365833282470703
    7. ' you' → logprob: -3.2615833282470703
    8. ' both' → logprob: -3.7615833282470703
    9. ' each' → logprob: -3.8865833282470703
    10. ' all' → logprob: -4.13658332824707

Token 470: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -1.9231235980987549
    2. ' must' → logprob: -1.9231235980987549
    3. 'must' → logprob: -1.9231235980987549
    4. 'can' → logprob: -2.048123598098755
    5. 'visit' → logprob: -2.548123598098755
    6. ' have' → logprob: -2.798123598098755
    7. 'need' → logprob: -2.798123598098755
    8. 'have' → logprob: -2.923123598098755
    9. ' need' → logprob: -2.923123598098755
    10. ' want' → logprob: -3.298123598098755

Token 471: ' use' (ID: 1199)
  Prédit: 'quick'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quick' → logprob: -0.9733618497848511
    2. 'save' → logprob: -1.473361849784851
    3. 'go' → logprob: -2.5983619689941406
    4. 'return' → logprob: -2.7233619689941406
    5. ' save' → logprob: -2.9733619689941406
    6. 'move' → logprob: -3.2233619689941406
    7. ' go' → logprob: -3.5983619689941406
    8. ' use' → logprob: -3.8483619689941406
    9. 'use' → logprob: -3.8483619689941406
    10. 'make' → logprob: -3.9733619689941406

Token 472: ' only' (ID: 1606)
  Prédit: 'quick'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'quick' → logprob: -0.18472494184970856
    2. ' quick' → logprob: -2.184725046157837
    3. 'a' → logprob: -3.059725046157837
    4. ' a' → logprob: -5.059724807739258
    5. 'the' → logprob: -6.309724807739258
    6. ' the' → logprob: -8.309724807739258
    7. 'save' → logprob: -8.934724807739258
    8. 'one' → logprob: -9.059724807739258
    9. ' saves' → logprob: -9.434724807739258
    10. 'any' → logprob: -9.684724807739258

Token 473: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.34251469373703003
    2. ' one' → logprob: -1.3425147533416748
    3. 'quick' → logprob: -3.717514753341675
    4. ' quick' → logprob: -5.717514514923096
    5. 'a' → logprob: -7.717514514923096
    6. 'the' → logprob: -7.967514514923096
    7. ' a' → logprob: -9.092514991760254
    8. ' ' → logprob: -9.342514991760254
    9. ' the' → logprob: -9.467514991760254
    10. 'return' → logprob: -9.842514991760254

Token 474: ' quick' (ID: 4853)
  Prédit: ' quick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' quick' → logprob: -0.08238358795642853
    2. 'quick' → logprob: -2.957383632659912
    3. ' save' → logprob: -3.957383632659912
    4. 'save' → logprob: -5.332383632659912
    5. ' saved' → logprob: -6.707383632659912
    6. 'saved' → logprob: -7.582383632659912
    7. '"' → logprob: -8.207383155822754
    8. '
' → logprob: -8.207383155822754
    9. ' ' → logprob: -9.207383155822754
    10. 'Quick' → logprob: -9.207383155822754

Token 475: 'save' (ID: 13158)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6673991680145264
    2. ' save' → logprob: -1.7923991680145264
    3. '_save' → logprob: -1.7923991680145264
    4. ' Save' → logprob: -3.1673991680145264
    5. ' _' → logprob: -3.2923991680145264
    6. 'save' → logprob: -3.4173991680145264
    7. 'Save' → logprob: -3.5423991680145264
    8. ' space' → logprob: -5.6673994064331055
    9. 'space' → logprob: -6.0423994064331055
    10. ' ' → logprob: -6.1673994064331055

Token 476: ' and' (ID: 326)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6350182294845581
    2. ')' → logprob: -2.1350183486938477
    3. ' ' → logprob: -2.2600183486938477
    4. ',' → logprob: -2.7600183486938477
    5. ' and' → logprob: -3.5100183486938477
    6. ' _' → logprob: -3.6350183486938477
    7. '       ' → logprob: -3.6350183486938477
    8. ' is' → logprob: -3.7600183486938477
    9. '   ' → logprob: -3.7600183486938477
    10. ' )' → logprob: -5.135018348693848

Token 477: ' jumps' (ID: 65613)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7307222485542297
    2. ' return' → logprob: -1.105722188949585
    3. ' one' → logprob: -3.230722188949585
    4. 'restore' → logprob: -3.730722188949585
    5. 'back' → logprob: -3.980722188949585
    6. ' back' → logprob: -4.355722427368164
    7. 'one' → logprob: -4.480722427368164
    8. '1' → logprob: -5.230722427368164
    9. ' then' → logprob: -5.230722427368164
    10. 'resume' → logprob: -5.355722427368164

Token 478: ' from' (ID: 591)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.7165184020996094
    2. ' back' → logprob: -1.7165184020996094
    3. 'back' → logprob: -1.9665184020996094
    4. '   ' → logprob: -3.2165184020996094
    5. ' to' → logprob: -3.2165184020996094
    6. ' ' → logprob: -3.7165184020996094
    7. 'is' → logprob: -3.9665184020996094
    8. '       ' → logprob: -4.466518402099609
    9. '=' → logprob: -4.841518402099609
    10. ' =' → logprob: -4.966518402099609

Token 479: ' it' (ID: 480)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -1.0389606952667236
    2. 'the' → logprob: -1.9139606952667236
    3. 'saved' → logprob: -2.0389606952667236
    4. 'that' → logprob: -2.2889606952667236
    5. 'one' → logprob: -2.5389606952667236
    6. 'qu' → logprob: -2.7889606952667236
    7. 'save' → logprob: -3.1639606952667236
    8. 'quick' → logprob: -3.7889606952667236
    9. 'a' → logprob: -3.9139606952667236
    10. 'le' → logprob: -4.5389604568481445

Token 480: ',
' (ID: 412)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.1352435201406479
    2. ' +' → logprob: -3.5102434158325195
    3. 'is' → logprob: -3.6352434158325195
    4. '+' → logprob: -4.1352434158325195
    5. ' are' → logprob: -4.5102434158325195
    6. '   ' → logprob: -4.7602434158325195
    7. '       ' → logprob: -5.0102434158325195
    8. ' plus' → logprob: -5.2602434158325195
    9. ' to' → logprob: -5.5102434158325195
    10. ',' → logprob: -5.5102434158325195

Token 481: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033524204045534134
    2. ' is' → logprob: -4.408524036407471
    3. ' and' → logprob: -4.408524036407471
    4. '#' → logprob: -5.533524036407471
    5. 'and' → logprob: -6.783524036407471
    6. '        ' → logprob: -7.283524036407471
    7. ' but' → logprob: -7.908524036407471
    8. '"' → logprob: -8.283524513244629
    9. ',' → logprob: -8.533524513244629
    10. ' not' → logprob: -8.533524513244629

Token 482: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13301905989646912
    2. '#' (adapté à ' #') → logprob: -2.383018970489502
    3. ' and' → logprob: -4.508018970489502
    4. ''' → logprob: -4.883018970489502
    5. 'and' → logprob: -6.133018970489502
    6. '"' → logprob: -6.383018970489502
    7. ' '' → logprob: -6.633018970489502
    8. ' is' → logprob: -6.633018970489502
    9. ' #' → logprob: -7.008018970489502
    10. ' but' → logprob: -7.008018970489502

Token 483: ' is' (ID: 382)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.18754300475120544
    2. '       ' → logprob: -1.8125430345535278
    3. ' #' → logprob: -5.062542915344238
    4. ' is' → logprob: -6.812542915344238
    5. 'is' → logprob: -8.937542915344238
    6. 'and' → logprob: -9.812542915344238
    7. ' will' → logprob: -10.187542915344238
    8. '   ' → logprob: -10.812542915344238
    9. ' and' → logprob: -11.187542915344238
    10. '        
' → logprob: -11.437542915344238

Token 484: ' achieved' (ID: 23088)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.8591724634170532
    2. ' min' → logprob: -1.2341724634170532
    3. ' time' → logprob: -2.1091723442077637
    4. 'max' → logprob: -2.6091723442077637
    5. 'min' → logprob: -2.8591723442077637
    6. 'time' → logprob: -3.9841723442077637
    7. '1' → logprob: -5.484172344207764
    8. ' node' → logprob: -5.734172344207764
    9. '       ' → logprob: -6.359172344207764
    10. '   ' → logprob: -6.984172344207764

Token 485: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.004386794753372669
    2. '       ' → logprob: -5.629386901855469
    3. 'by' → logprob: -7.629386901855469
    4. '   ' → logprob: -9.754386901855469
    5. ' to' → logprob: -10.379386901855469
    6. ' through' → logprob: -10.754386901855469
    7. ' here' → logprob: -10.879386901855469
    8. ',' → logprob: -10.879386901855469
    9. ' in' → logprob: -11.254386901855469
    10. '           ' → logprob: -11.379386901855469

Token 486: ' a' (ID: 261)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.7897701859474182
    2. ' min' → logprob: -1.7897701263427734
    3. 'max' → logprob: -2.1647701263427734
    4. 'min' → logprob: -2.2897701263427734
    5. ' taking' → logprob: -2.9147701263427734
    6. ' time' → logprob: -3.1647701263427734
    7. 'time' → logprob: -3.6647701263427734
    8. ' (' → logprob: -5.164770126342773
    9. ' choosing' → logprob: -5.164770126342773
    10. '(' → logprob: -5.414770126342773

Token 487: ' standard' (ID: 7024)
  Prédit: ' strategy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' strategy' → logprob: -1.7134588956832886
    2. 'post' → logprob: -1.9634588956832886
    3. 'strategy' → logprob: -1.9634588956832886
    4. 'balanced' → logprob: -2.588459014892578
    5. 'depth' → logprob: -2.588459014892578
    6. ' traversal' → logprob: -3.088459014892578
    7. 'bottom' → logprob: -3.338459014892578
    8. 'min' → logprob: -3.588459014892578
    9. '"' → logprob: -3.588459014892578
    10. 'comb' → logprob: -4.088459014892578

Token 488: ' DP' (ID: 51992)
  Prédit: ' post'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' post' → logprob: -1.2544124126434326
    2. ' traversal' → logprob: -1.6294124126434326
    3. 'post' → logprob: -1.7544124126434326
    4. ' depth' → logprob: -1.8794124126434326
    5. 'depth' → logprob: -2.8794124126434326
    6. ' DFS' → logprob: -3.1294124126434326
    7. ' tree' → logprob: -3.3794124126434326
    8. 'DFS' → logprob: -4.004412651062012
    9. 'dfs' → logprob: -4.254412651062012
    10. ' dfs' → logprob: -4.754412651062012

Token 489: ' approach' (ID: 7139)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15511634945869446
    2. '[node' → logprob: -3.405116319656372
    3. '.' → logprob: -4.155116558074951
    4. ' approach' → logprob: -4.280116558074951
    5. '
' → logprob: -4.655116558074951
    6. 'dp' → logprob: -4.905116558074951
    7. '   ' → logprob: -4.905116558074951
    8. ',' → logprob: -5.030116558074951
    9. ' +' → logprob: -5.030116558074951
    10. '+' → logprob: -5.405116558074951

Token 490: ' inspired' (ID: 18958)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018135549500584602
    2. ',' → logprob: -5.1431355476379395
    3. '        ' → logprob: -5.8931355476379395
    4. '.' → logprob: -5.8931355476379395
    5. ' =' → logprob: -6.6431355476379395
    6. ':' → logprob: -7.2681355476379395
    7. ' and' → logprob: -7.5181355476379395
    8. '<|end|>' → logprob: -7.5181355476379395
    9. '+' → logprob: -7.6431355476379395
    10. ' +' → logprob: -7.6431355476379395

Token 491: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.0614919438958168
    2. 'by' → logprob: -2.9364919662475586
    3. '       ' → logprob: -5.061491966247559
    4. '   ' → logprob: -8.936491966247559
    5. '#' → logprob: -9.811491966247559
    6. 'from' → logprob: -10.561491966247559
    7. '=' → logprob: -11.186491966247559
    8. ' from' → logprob: -12.311491966247559
    9. ' =' → logprob: -12.686491966247559
    10. ',' → logprob: -13.186491966247559

Token 492: ':
' (ID: 734)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.1684819459915161
    2. 'binary' → logprob: -1.4184819459915161
    3. ' the' → logprob: -2.7934818267822266
    4. 'Euler' → logprob: -2.7934818267822266
    5. 'tree' → logprob: -2.9184818267822266
    6. ' binary' → logprob: -3.0434818267822266
    7. ' tree' → logprob: -3.4184818267822266
    8. 'divide' → logprob: -3.5434818267822266
    9. ' divide' → logprob: -4.043481826782227
    10. ' game' → logprob: -4.418481826782227

Token 493: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048414748162031174
    2. '"' → logprob: -3.923414707183838
    3. '        ' → logprob: -5.173414707183838
    4. '#' → logprob: -5.173414707183838
    5. ' "' → logprob: -5.423414707183838
    6. '        
' → logprob: -5.798414707183838
    7. ' #' → logprob: -6.048414707183838
    8. '           ' → logprob: -7.423414707183838
    9. ' 
' → logprob: -7.673414707183838
    10. ' (' → logprob: -8.048415184020996

Token 494: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15744242072105408
    2. '#' (adapté à ' #') → logprob: -2.032442331314087
    3. ' #' → logprob: -5.032442569732666
    4. '"' → logprob: -6.407442569732666
    5. '```' → logprob: -6.407442569732666
    6. '"""
' → logprob: -6.907442569732666
    7. 'dp' → logprob: -7.157442569732666
    8. '#
' → logprob: -7.782442569732666
    9. '        
' → logprob: -7.907442569732666
    10. '        ' → logprob: -8.157442092895508

Token 495: ' https' (ID: 5918)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.24927665293216705
    2. '       ' → logprob: -1.7492766380310059
    3. 'dp' → logprob: -4.624276638031006
    4. '"""
' → logprob: -4.874276638031006
    5. 'time' → logprob: -5.249276638031006
    6. 'left' → logprob: -5.874276638031006
    7. 'total' → logprob: -5.999276638031006
    8. 't' → logprob: -6.499276638031006
    9. '"' → logprob: -6.749276638031006
    10. '```' → logprob: -6.749276638031006

Token 496: '://' (ID: 1684)
  Prédit: '://'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '://' → logprob: -0.012560747563838959
    2. ':' → logprob: -4.387560844421387
    3. '#' → logprob: -10.762560844421387
    4. ' :' → logprob: -12.137560844421387
    5. '[:]' → logprob: -12.137560844421387
    6. 'github' → logprob: -12.262560844421387
    7. ':///' → logprob: -12.762560844421387
    8. ':#' → logprob: -12.887560844421387
    9. ':\/\/' → logprob: -12.887560844421387
    10. '.' → logprob: -13.637560844421387

Token 497: 'at' (ID: 266)
  Prédit: 'paste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'paste' → logprob: -0.433790385723114
    2. 'en' → logprob: -1.8087904453277588
    3. 'code' → logprob: -1.9337904453277588
    4. 'leetcode' → logprob: -3.933790445327759
    5. 'cs' → logprob: -4.93379020690918
    6. 'w' → logprob: -5.55879020690918
    7. 'cp' → logprob: -5.80879020690918
    8. 'math' → logprob: -6.43379020690918
    9. 'github' → logprob: -6.55879020690918
    10. 'www' → logprob: -6.55879020690918

Token 498: 'coder' (ID: 85847)
  Prédit: 'coder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coder' → logprob: -0.0002661039761733264
    2. 'code' → logprob: -9.000266075134277
    3. 'cod' → logprob: -9.000266075134277
    4. 'c' → logprob: -11.375266075134277
    5. '_c' → logprob: -12.250266075134277
    6. 'coding' → logprob: -14.000266075134277
    7. 'codes' → logprob: -14.375266075134277
    8. 'Coder' → logprob: -14.500266075134277
    9. 'kod' → logprob: -15.250266075134277
    10. 'co' → logprob: -15.750266075134277

Token 499: '.jp' (ID: 39524)
  Prédit: '.jp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.jp' → logprob: -0.45440101623535156
    2. '.com' → logprob: -1.2044010162353516
    3. '.' → logprob: -3.4544010162353516
    4. '.cont' → logprob: -3.5794010162353516
    5. ' .' → logprob: -6.704401016235352
    6. '_cont' → logprob: -7.079401016235352
    7. 'usercontent' → logprob: -7.204401016235352
    8. 'content' → logprob: -8.079401016235352
    9. '}.' → logprob: -8.329401016235352
    10. 'cont' → logprob: -8.829401016235352

Token 500: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.4015645980834961
    2. '-cont' → logprob: -2.151564598083496
    3. '_cont' → logprob: -2.276564598083496
    4. '.jp' → logprob: -3.401564598083496
    5. '.cont' → logprob: -3.526564598083496
    6. '.com' → logprob: -4.026564598083496
    7. 'cont' → logprob: -4.401564598083496
    8. 'usercontent' → logprob: -5.401564598083496
    9. '.org' → logprob: -6.526564598083496
    10. '/_' → logprob: -6.901564598083496

Token 501: 'cont' (ID: 1377)
  Prédit: 'cont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cont' → logprob: -0.01589089073240757
    2. 'resources' → logprob: -5.515891075134277
    3. 'tasks' → logprob: -5.890891075134277
    4. '_cont' → logprob: -6.390891075134277
    5. 't' → logprob: -6.890891075134277
    6. 'src' → logprob: -7.015891075134277
    7. 'dp' → logprob: -7.015891075134277
    8. 'contest' → logprob: -7.390891075134277
    9. 'tok' → logprob: -7.890891075134277
    10. 'tools' → logprob: -8.140891075134277

Token 502: 'ests' (ID: 7558)
  Prédit: 'ests'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ests' → logprob: -0.0009685108088888228
    2. 'est' → logprob: -7.3759684562683105
    3. '/tasks' → logprob: -9.250968933105469
    4. '/posts' → logprob: -9.625968933105469
    5. 'ents' → logprob: -9.625968933105469
    6. 'https' → logprob: -10.750968933105469
    7. 'sts' → logprob: -11.125968933105469
    8. '```' → logprob: -11.375968933105469
    9. 'in' → logprob: -11.750968933105469
    10. 'nts' → logprob: -12.375968933105469

Token 503: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.004931662231683731
    2. '/tasks' → logprob: -7.129931449890137
    3. '/tutorial' → logprob: -7.379931449890137
    4. 'abc' → logprob: -7.379931449890137
    5. '/dev' → logprob: -7.504931449890137
    6. '/code' → logprob: -8.254931449890137
    7. '/_' → logprob: -8.254931449890137
    8. '/t' → logprob: -8.629931449890137
    9. '/d' → logprob: -8.754931449890137
    10. '/users' → logprob: -9.004931449890137

Token 504: 'abc' (ID: 26682)
  Prédit: 'abc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.058646950870752335
    2. 'dp' → logprob: -3.5586469173431396
    3. 'at' → logprob: -4.558647155761719
    4. 'ag' → logprob: -5.058647155761719
    5. 'arc' → logprob: -5.558647155761719
    6. 'acl' → logprob: -6.058647155761719
    7. 'cont' → logprob: -7.058647155761719
    8. 't' → logprob: -7.558647155761719
    9. 'practice' → logprob: -7.558647155761719
    10. 'typ' → logprob: -8.058647155761719

Token 505: '245' (ID: 23481)
  Prédit: '222'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '222' → logprob: -3.3668465614318848
    2. '172' → logprob: -3.6168465614318848
    3. '179' → logprob: -3.6168465614318848
    4. '{' → logprob: -3.7418465614318848
    5. '168' → logprob: -3.7418465614318848
    6. '
' → logprob: -3.7418465614318848
    7. '178' → logprob: -3.8668465614318848
    8. '177' → logprob: -3.9918465614318848
    9. '176' → logprob: -3.9918465614318848
    10. '301' → logprob: -4.116846561431885

Token 506: '/editor' (ID: 165397)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.831712543964386
    2. '/tasks' → logprob: -1.3317124843597412
    3. '/tutorial' → logprob: -2.081712484359741
    4. '/comments' → logprob: -3.581712484359741
    5. '#' → logprob: -3.956712484359741
    6. '_dp' → logprob: -4.08171272277832
    7. '_' → logprob: -4.58171272277832
    8. '_cont' → logprob: -4.58171272277832
    9. '/editor' → logprob: -4.58171272277832
    10. '.com' → logprob: -4.83171272277832

Token 507: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.04326818883419037
    2. 'ials' → logprob: -3.9182682037353516
    3. 'ialize' → logprob: -4.418268203735352
    4. '/' → logprob: -5.168268203735352
    5. 'ialist' → logprob: -6.168268203735352
    6. '#' → logprob: -7.418268203735352
    7. '```' → logprob: -8.043268203735352
    8. 'iable' → logprob: -8.418268203735352
    9. '/editor' → logprob: -8.543268203735352
    10. 'import' → logprob: -8.543268203735352

Token 508: '/' (ID: 14)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2015339881181717
    2. '
' → logprob: -2.9515340328216553
    3. '        
' → logprob: -2.9515340328216553
    4. '<|end|>' → logprob: -3.5765340328216553
    5. ',' → logprob: -3.7015340328216553
    6. '<|end|>' → logprob: -5.076533794403076
    7. '#' → logprob: -5.201533794403076
    8. '        

' → logprob: -5.951533794403076
    9. '

' → logprob: -6.451533794403076
    10. '.' → logprob: -6.951533794403076

Token 509: '395' (ID: 34688)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47372952103614807
    2. '
' → logprob: -1.7237294912338257
    3. '        
' → logprob: -2.9737296104431152
    4. '#' → logprob: -3.3487296104431152
    5. 'time' → logprob: -3.8487296104431152
    6. ' time' → logprob: -4.473729610443115
    7. '  
' → logprob: -5.223729610443115
    8. 'dp' → logprob: -5.223729610443115
    9. ' 
' → logprob: -5.348729610443115
    10. 'save' → logprob: -5.473729610443115

Token 510: '4' (ID: 19)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1321435272693634
    2. '
' → logprob: -2.632143497467041
    3. '        
' → logprob: -3.507143497467041
    4. '#' → logprob: -5.007143497467041
    5. '

' → logprob: -5.382143497467041
    6. '        

' → logprob: -6.007143497467041
    7. '<|end|>' → logprob: -6.382143497467041
    8. '```' → logprob: -7.257143497467041
    9. '<|end|>' → logprob: -7.382143497467041
    10. '
' → logprob: -7.757143497467041

Token 511: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15725144743919373
    2. '
' → logprob: -2.5322513580322266
    3. '        
' → logprob: -3.0322513580322266
    4. '<|end|>' → logprob: -5.032251358032227
    5. '#' → logprob: -5.907251358032227
    6. '        

' → logprob: -6.032251358032227
    7. '

' → logprob: -6.782251358032227
    8. '<|end|>' → logprob: -7.032251358032227
    9. '        
        
' → logprob: -7.657251358032227
    10. ',' → logprob: -8.032251358032227

Token 512: 'Problem' (ID: 36177)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8804112672805786
    2. '       ' → logprob: -1.0054112672805786
    3. '#' → logprob: -2.630411148071289
    4. ')
' → logprob: -3.630411148071289
    5. 'dp' → logprob: -3.755411148071289
    6. 'time' → logprob: -4.005411148071289
    7. '   ' → logprob: -4.380411148071289
    8. ')

' → logprob: -5.005411148071289
    9. 'return' → logprob: -5.255411148071289
    10. 'left' → logprob: -5.255411148071289

Token 513: ' from' (ID: 591)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32247525453567505
    2. 'E' → logprob: -3.0724751949310303
    3. ' statement' → logprob: -3.0724751949310303
    4. '/' → logprob: -3.3224751949310303
    5. 'C' → logprob: -4.072475433349609
    6. 'statement' → logprob: -4.322475433349609
    7. ' C' → logprob: -4.447475433349609
    8. '_' → logprob: -4.697475433349609
    9. ' ' → logprob: -4.697475433349609
    10. '#' → logprob: -5.197475433349609

Token 514: ' At' (ID: 3604)
  Prédit: 'At'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'At' → logprob: -0.56436687707901
    2. 'abc' → logprob: -1.8143668174743652
    3. 'at' → logprob: -2.0643668174743652
    4. 'https' → logprob: -2.8143668174743652
    5. 'the' → logprob: -3.5643668174743652
    6. 'editor' → logprob: -4.814366817474365
    7. 'dp' → logprob: -5.314366817474365
    8. 'a' → logprob: -5.564366817474365
    9. 'y' → logprob: -6.189366817474365
    10. 'past' → logprob: -6.189366817474365

Token 515: 'Coder' (ID: 72183)
  Prédit: 'coder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coder' → logprob: -0.0009157438762485981
    2. 'code' → logprob: -7.50091552734375
    3. 'Coder' → logprob: -8.37591552734375
    4. 'c' → logprob: -10.12591552734375
    5. 'corder' → logprob: -10.50091552734375
    6. 'cod' → logprob: -10.62591552734375
    7. '   ' → logprob: -11.75091552734375
    8. 'C' → logprob: -11.75091552734375
    9. '_c' → logprob: -12.37591552734375
    10. '

' → logprob: -12.87591552734375

Token 516: ' Grand' (ID: 13824)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024263162165880203
    2. '#' → logprob: -4.649263381958008
    3. ' )' → logprob: -4.774263381958008
    4. '.com' → logprob: -5.774263381958008
    5. ').' → logprob: -7.899263381958008
    6. '/' → logprob: -8.274263381958008
    7. '-' → logprob: -8.399263381958008
    8. '")' → logprob: -8.649263381958008
    9. '/tutorial' → logprob: -8.899263381958008
    10. '-cont' → logprob: -9.149263381958008

Token 517: ' Contest' (ID: 66690)
  Prédit: 'Contest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Contest' → logprob: -0.4519875943660736
    2. 'Code' → logprob: -2.3269875049591064
    3. 'contest' → logprob: -2.5769875049591064
    4. ' ' → logprob: -3.3269875049591064
    5. 'abc' → logprob: -3.7019875049591064
    6. 'code' → logprob: -4.0769877433776855
    7. 'Tour' → logprob: -4.3269877433776855
    8. 'Challenge' → logprob: -4.3269877433776855
    9. ')' → logprob: -4.8269877433776855
    10. '   ' → logprob: -5.0769877433776855

Token 518: ' ' (ID: 220)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -1.7259217500686646
    2. '3' → logprob: -2.475921630859375
    3. '5' → logprob: -2.850921630859375
    4. '7' → logprob: -2.975921630859375
    5. '6' → logprob: -3.100921630859375
    6. '4' → logprob: -3.350921630859375
    7. '25' → logprob: -3.475921630859375
    8. ')' → logprob: -3.475921630859375
    9. '20' → logprob: -3.600921630859375
    10. '24' → logprob: -3.725921630859375

Token 519: '9' (ID: 24)
  Prédit: '033'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '033' → logprob: -0.9760635495185852
    2. '032' → logprob: -2.7260634899139404
    3. '029' → logprob: -3.1010634899139404
    4. '031' → logprob: -3.2260634899139404
    5. '022' → logprob: -3.6010634899139404
    6. '38' → logprob: -3.6010634899139404
    7. '035' → logprob: -3.9760634899139404
    8. '27' → logprob: -4.1010637283325195
    9. '034' → logprob: -4.1010637283325195
    10. '32' → logprob: -4.1010637283325195

Token 520: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025619841180741787
    2. ' )' → logprob: -7.127562046051025
    3. '#' → logprob: -7.252562046051025
    4. '/' → logprob: -8.502561569213867
    5. '/tutorial' → logprob: -8.502561569213867
    6. ').' → logprob: -9.127561569213867
    7. 'C' → logprob: -9.627561569213867
    8. '<|end|>' → logprob: -10.127561569213867
    9. '")' → logprob: -10.252561569213867
    10. '/)' → logprob: -10.252561569213867

Token 521: ' this' (ID: 495)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -1.731392502784729
    2. 'D' → logprob: -1.856392502784729
    3. 'https' → logprob: -2.4813923835754395
    4. 'F' → logprob: -2.6063923835754395
    5. 'dfs' → logprob: -2.6063923835754395
    6. 'C' → logprob: -2.7313923835754395
    7. 'abc' → logprob: -2.9813923835754395
    8. 'dp' → logprob: -3.3563923835754395
    9. 'e' → logprob: -3.4813923835754395
    10. 'd' → logprob: -3.7313923835754395

Token 522: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.8775801062583923
    2. ')' → logprob: -1.127580165863037
    3. ' code' → logprob: -2.627580165863037
    4. ' problem' → logprob: -3.377580165863037
    5. ' )' → logprob: -4.002580165863037
    6. ' part' → logprob: -4.127580165863037
    7. '#' → logprob: -4.127580165863037
    8. ')
' → logprob: -4.752580165863037
    9. 'is' → logprob: -4.877580165863037
    10. ' line' → logprob: -5.127580165863037

Token 523: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0478042364120483
    2. 'the' → logprob: -1.5478042364120483
    3. 'similar' → logprob: -2.297804355621338
    4. ' a' → logprob: -3.047804355621338
    5. ' the' → logprob: -3.922804355621338
    6. 'exact' → logprob: -4.047804355621338
    7. 'continued' → logprob: -4.297804355621338
    8. 'an' → logprob: -4.297804355621338
    9. 'about' → logprob: -4.422804355621338
    10. 'called' → logprob: -4.672804355621338

Token 524: ' classic' (ID: 13686)
  Prédit: 'well'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'well' → logprob: -1.2392771244049072
    2. 'known' → logprob: -1.7392771244049072
    3. 'classic' → logprob: -1.8642771244049072
    4. 'hard' → logprob: -2.9892771244049072
    5. 'binary' → logprob: -3.3642771244049072
    6. ' well' → logprob: -3.6142771244049072
    7. 'similar' → logprob: -3.7392771244049072
    8. 'tree' → logprob: -3.7392771244049072
    9. 'variant' → logprob: -3.9892771244049072
    10. 'very' → logprob: -4.114276885986328

Token 525: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3129533529281616
    2. ' problem' → logprob: -1.4379533529281616
    3. 'problem' → logprob: -2.437953472137451
    4. ' approach' → logprob: -2.687953472137451
    5. ' dynamic' → logprob: -2.687953472137451
    6. ' example' → logprob: -2.937953472137451
    7. 'dp' → logprob: -3.937953472137451
    8. ' explanation' → logprob: -4.062953472137451
    9. 'dynamic' → logprob: -4.562953472137451
    10. 'example' → logprob: -4.562953472137451

Token 526: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02078360691666603
    2. 'time' → logprob: -5.270783424377441
    3. '        
' → logprob: -5.395783424377441
    4. ' time' → logprob: -5.395783424377441
    5. '#' → logprob: -7.270783424377441
    6. '\' → logprob: -7.395783424377441
    7. '\n' → logprob: -7.645783424377441
    8. ',' → logprob: -8.020783424377441
    9. 'cost' → logprob: -8.020783424377441
    10. '
' → logprob: -8.270783424377441

Token 527: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2560442388057709
    2. 'time' → logprob: -3.0060441493988037
    3. 'left' → logprob: -3.5060441493988037
    4. ' time' → logprob: -3.8810441493988037
    5. 'dp' → logprob: -4.006044387817383
    6. '#' → logprob: -4.256044387817383
    7. 'save' → logprob: -4.506044387817383
    8. ' left' → logprob: -4.631044387817383
    9. 'cost' → logprob: -5.006044387817383
    10. 'sub' → logprob: -5.256044387817383

Token 528: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01203981414437294
    2. '        
' → logprob: -5.387039661407471
    3. '#' → logprob: -6.762039661407471
    4. ' time' → logprob: -7.387039661407471
    5. '
' → logprob: -7.512039661407471
    6. 'time' → logprob: -7.637039661407471
    7. ' total' → logprob: -7.637039661407471
    8. 'save' → logprob: -7.887039661407471
    9. ' left' → logprob: -8.012040138244629
    10. 'left' → logprob: -8.137040138244629

Token 529: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.026708722114563
    2. 'time' → logprob: -1.776708722114563
    3. '       ' → logprob: -2.1517086029052734
    4. 'total' → logprob: -2.4017086029052734
    5. 'sub' → logprob: -2.6517086029052734
    6. 'left' → logprob: -3.4017086029052734
    7. 'save' → logprob: -3.9017086029052734
    8. 'max' → logprob: -3.9017086029052734
    9. 'cost' → logprob: -3.9017086029052734
    10. 'if' → logprob: -4.026708602905273

Token 530: ' Here' (ID: 7306)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.048851728439331
    2. 'time' → logprob: -1.548851728439331
    3. 'total' → logprob: -2.298851728439331
    4. 'cost' → logprob: -2.548851728439331
    5. 'left' → logprob: -2.548851728439331
    6. 'sub' → logprob: -3.423851728439331
    7. 'dp' → logprob: -3.673851728439331
    8. 'save' → logprob: -3.673851728439331
    9. 'res' → logprob: -3.923851728439331
    10. 'depth' → logprob: -4.67385196685791

Token 531: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021370036527514458
    2. ' is' → logprob: -5.021369934082031
    3. ',' → logprob: -5.396369934082031
    4. '#' → logprob: -6.146369934082031
    5. '        
' → logprob: -6.146369934082031
    6. ''s' → logprob: -6.771369934082031
    7. '        ' → logprob: -7.146369934082031
    8. ' =' → logprob: -7.396369934082031
    9. '
' → logprob: -7.521369934082031
    10. 'time' → logprob: -7.646369934082031

Token 532: ' time' (ID: 1058)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9656749367713928
    2. 'time' → logprob: -1.840674877166748
    3. 'sub' → logprob: -2.215674877166748
    4. 'res' → logprob: -2.465674877166748
    5. 'total' → logprob: -2.840674877166748
    6. '       ' → logprob: -3.465674877166748
    7. 'dp' → logprob: -3.465674877166748
    8. 'return' → logprob: -3.590674877166748
    9. 'cost' → logprob: -3.840674877166748
    10. 'left' → logprob: -4.090674877166748

Token 533: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7179054617881775
    2. '=' → logprob: -1.4679055213928223
    3. '_left' → logprob: -1.5929055213928223
    4. '_needed' → logprob: -3.8429055213928223
    5. '_cost' → logprob: -4.217905521392822
    6. '_' → logprob: -4.342905521392822
    7. '_to' → logprob: -4.342905521392822
    8. '_required' → logprob: -5.092905521392822
    9. '_node' → logprob: -6.842905521392822
    10. 'cost' → logprob: -6.967905521392822

Token 534: ' expressed' (ID: 22171)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9541375041007996
    2. '=' → logprob: -1.4541375637054443
    3. '1' → logprob: -2.4541375637054443
    4. ' node' → logprob: -2.7041375637054443
    5. ' min' → logprob: -3.3291375637054443
    6. 'min' → logprob: -3.3291375637054443
    7. 'node' → logprob: -3.3291375637054443
    8. ' max' → logprob: -3.4541375637054443
    9. 'max' → logprob: -4.079137325286865
    10. ' equal' → logprob: -4.829137325286865

Token 535: ' in' (ID: 306)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -1.0779575109481812
    2. ' as' → logprob: -1.0779575109481812
    3. '=' → logprob: -1.5779575109481812
    4. '+' → logprob: -3.0779576301574707
    5. ' =' → logprob: -3.7029576301574707
    6. 'in' → logprob: -3.9529576301574707
    7. ' in' → logprob: -4.702957630157471
    8. '+=' → logprob: -5.327957630157471
    9. ' +=' → logprob: -5.577957630157471
    10. ' +' → logprob: -5.827957630157471

Token 536: ' minutes' (ID: 5438)
  Prédit: 'terms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'terms' → logprob: -0.12263385951519012
    2. 'edges' → logprob: -3.247633934020996
    3. 'minutes' → logprob: -3.622633934020996
    4. 'the' → logprob: -3.997633934020996
    5. ' terms' → logprob: -5.497633934020996
    6. 'sub' → logprob: -5.747633934020996
    7. 'code' → logprob: -5.872633934020996
    8. 'return' → logprob: -5.997633934020996
    9. 'moves' → logprob: -6.122633934020996
    10. 'self' → logprob: -6.372633934020996

Token 537: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11083509773015976
    2. ',' → logprob: -3.235835075378418
    3. ' +' → logprob: -3.735835075378418
    4. ')' → logprob: -3.985835075378418
    5. '+' → logprob: -4.860835075378418
    6. ' =' → logprob: -5.360835075378418
    7. '        
' → logprob: -6.485835075378418
    8. '
' → logprob: -6.735835075378418
    9. '        ' → logprob: -6.860835075378418
    10. '=' → logprob: -6.985835075378418

Token 538: ' edges' (ID: 22569)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.5342029929161072
    2. 'max' → logprob: -1.534203052520752
    3. ' the' → logprob: -2.909203052520752
    4. '       ' → logprob: -3.784203052520752
    5. '1' → logprob: -4.159203052520752
    6. ' min' → logprob: -4.409203052520752
    7. ' return' → logprob: -4.409203052520752
    8. ' self' → logprob: -4.534203052520752
    9. ' node' → logprob: -4.659203052520752
    10. 'return' → logprob: -4.784203052520752

Token 539: ' taken' (ID: 6697)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.9844569563865662
    2. '       ' → logprob: -1.359457015991211
    3. '+' → logprob: -1.984457015991211
    4. '_count' → logprob: -2.484457015991211
    5. ')' → logprob: -2.734457015991211
    6. '   ' → logprob: -4.109457015991211
    7. '_cost' → logprob: -4.234457015991211
    8. 'count' → logprob: -5.109457015991211
    9. ' -' → logprob: -5.609457015991211
    10. '_time' → logprob: -5.609457015991211

Token 540: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021661946550011635
    2. ',' → logprob: -4.771661758422852
    3. '        
' → logprob: -5.646661758422852
    4. ')' → logprob: -6.021661758422852
    5. ' +' → logprob: -6.146661758422852
    6. '+' → logprob: -6.396661758422852
    7. '
' → logprob: -7.146661758422852
    8. '.' → logprob: -8.396661758422852
    9. '#' → logprob: -8.521661758422852
    10. ' and' → logprob: -8.646661758422852

Token 541: 'always' (ID: 55999)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8397886753082275
    2. '+' → logprob: -1.2147886753082275
    3. ' +' → logprob: -1.3397886753082275
    4. ' )' → logprob: -5.464788436889648
    5. '       ' → logprob: -6.214788436889648
    6. ')+' → logprob: -6.714788436889648
    7. '+)' → logprob: -7.714788436889648
    8. '*' → logprob: -8.589788436889648
    9. ' plus' → logprob: -8.714788436889648
    10. '   ' → logprob: -8.839788436889648

Token 542: ' ' (ID: 220)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6336215138435364
    2. '+' → logprob: -0.7586215138435364
    3. ')' → logprob: -7.383621692657471
    4. ' plus' → logprob: -8.883621215820312
    5. ')+' → logprob: -9.883621215820312
    6. ' )' → logprob: -10.008621215820312
    7. 'to' → logprob: -10.383621215820312
    8. '1' → logprob: -10.758621215820312
    9. ' to' → logprob: -10.758621215820312
    10. '+)' → logprob: -10.883621215820312

Token 543: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03909042477607727
    2. ' +' → logprob: -3.664090394973755
    3. '1' → logprob: -4.664090633392334
    4. '*' → logprob: -6.539090633392334
    5. 'plus' → logprob: -7.664090633392334
    6. ')' → logprob: -8.289090156555176
    7. 'to' → logprob: -8.664090156555176
    8. ')+' → logprob: -9.039090156555176
    9. ' plus' → logprob: -9.289090156555176
    10. '+)' → logprob: -9.539090156555176

Token 544: ' per' (ID: 777)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.03156314417719841
    2. '+' → logprob: -3.6565630435943604
    3. ')' → logprob: -5.2815632820129395
    4. ' )' → logprob: -9.781562805175781
    5. '+)' → logprob: -10.156562805175781
    6. ' *' → logprob: -10.531562805175781
    7. ' +
' → logprob: -11.531562805175781
    8. ')+' → logprob: -11.656562805175781
    9. '*' → logprob: -11.906562805175781
    10. ' plus' → logprob: -12.406562805175781

Token 545: ' edge' (ID: 11165)
  Prédit: ' move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' move' → logprob: -0.9508626461029053
    2. 'edge' → logprob: -1.0758626461029053
    3. ' edge' → logprob: -1.8258626461029053
    4. 'move' → logprob: -2.4508626461029053
    5. ' step' → logprob: -4.325862884521484
    6. 'step' → logprob: -5.200862884521484
    7. ' traversal' → logprob: -5.700862884521484
    8. ' movement' → logprob: -6.825862884521484
    9. 'movement' → logprob: -7.575862884521484
    10. 'branch' → logprob: -7.575862884521484

Token 546: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00433505279943347
    2. ' )' → logprob: -6.379334926605225
    3. '       ' → logprob: -7.004334926605225
    4. ').' → logprob: -7.879334926605225
    5. ' +' → logprob: -8.004335403442383
    6. '),' → logprob: -8.129335403442383
    7. ')
' → logprob: -8.879335403442383
    8. '+' → logprob: -9.004335403442383
    9. '   ' → logprob: -9.504335403442383
    10. ',' → logprob: -9.754335403442383

Token 547: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0174394603818655
    2. '        
' → logprob: -4.892439365386963
    3. ' time' → logprob: -6.517439365386963
    4. ' left' → logprob: -7.017439365386963
    5. ' return' → logprob: -7.142439365386963
    6. 'return' → logprob: -7.517439365386963
    7. ' if' → logprob: -7.767439365386963
    8. '  
' → logprob: -7.767439365386963
    9. '
' → logprob: -7.892439365386963
    10. ',' → logprob: -7.892439365386963

Token 548: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0229992363601923
    2. 'save' → logprob: -4.772999286651611
    3. '        
' → logprob: -5.897999286651611
    4. '#' → logprob: -6.147999286651611
    5. 'left' → logprob: -6.647999286651611
    6. 'return' → logprob: -6.647999286651611
    7. 'time' → logprob: -7.147999286651611
    8. ' save' → logprob: -7.272999286651611
    9. 'sub' → logprob: -7.272999286651611
    10. 'total' → logprob: -7.397999286651611

Token 549: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002727132523432374
    2. '        
' → logprob: -6.877727031707764
    3. 'save' → logprob: -7.877727031707764
    4. '#' → logprob: -8.127727508544922
    5. 'total' → logprob: -9.127727508544922
    6. 'return' → logprob: -9.377727508544922
    7. '   ' → logprob: -9.377727508544922
    8. 'time' → logprob: -9.502727508544922
    9. 'left' → logprob: -9.752727508544922
    10. ' total' → logprob: -9.877727508544922

Token 550: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.196728229522705
    2. '#' (adapté à ' #') → logprob: -1.571728229522705
    3. 'total' → logprob: -2.321728229522705
    4. 'sub' → logprob: -2.696728229522705
    5. 'save' → logprob: -2.946728229522705
    6. 'time' → logprob: -2.946728229522705
    7. 'go' → logprob: -3.196728229522705
    8. 'left' → logprob: -3.571728229522705
    9. 'return' → logprob: -3.696728229522705
    10. 'cost' → logprob: -3.696728229522705

Token 551: ' Let' (ID: 9024)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.532029151916504
    2. 'time' → logprob: -1.532029151916504
    3. 'total' → logprob: -1.782029151916504
    4. '#' → logprob: -3.032029151916504
    5. 'sub' → logprob: -3.032029151916504
    6. 'save' → logprob: -3.157029151916504
    7. 'left' → logprob: -3.282029151916504
    8. 'go' → logprob: -3.532029151916504
    9. 'return' → logprob: -3.782029151916504
    10. 'dp' → logprob: -3.782029151916504

Token 552: ' f' (ID: 285)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -1.144839882850647
    2. ' left' → logprob: -1.394839882850647
    3. ''s' → logprob: -2.5198397636413574
    4. 'time' → logprob: -2.7698397636413574
    5. 'dp' → logprob: -2.8948397636413574
    6. 'sub' → logprob: -3.6448397636413574
    7. ' dp' → logprob: -3.6448397636413574
    8. ' time' → logprob: -3.6448397636413574
    9. 'save' → logprob: -3.8948397636413574
    10. 'cost' → logprob: -4.394839763641357

Token 553: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.3469739854335785
    2. '[node' → logprob: -2.3469738960266113
    3. '_left' → logprob: -2.8469738960266113
    4. ' =' → logprob: -2.8469738960266113
    5. '_' → logprob: -3.5969738960266113
    6. 'node' → logprob: -3.9719738960266113
    7. '_node' → logprob: -4.596973896026611
    8. 'left' → logprob: -5.096973896026611
    9. '(' → logprob: -5.596973896026611
    10. ')' → logprob: -6.221973896026611

Token 554: ')' (ID: 8)
  Prédit: '_id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.10430292040109634
    2. ')' → logprob: -2.4793028831481934
    3. '[node' → logprob: -4.479302883148193
    4. 'id' → logprob: -6.229302883148193
    5. '   ' → logprob: -7.729302883148193
    6. 'node' → logprob: -7.979302883148193
    7. ')_' → logprob: -8.604303359985352
    8. '(node' → logprob: -8.604303359985352
    9. ')=' → logprob: -8.729303359985352
    10. '.id' → logprob: -8.854303359985352

Token 555: ' be' (ID: 413)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03640630841255188
    2. '=' → logprob: -3.5364062786102295
    3. '=node' → logprob: -6.286406517028809
    4. '(node' → logprob: -6.661406517028809
    5. '_left' → logprob: -6.911406517028809
    6. ',' → logprob: -6.911406517028809
    7. '[node' → logprob: -7.661406517028809
    8. ')' → logprob: -7.661406517028809
    9. '_node' → logprob: -9.286406517028809
    10. 'left' → logprob: -9.661406517028809

Token 556: ' the' (ID: 290)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.0999821424484253
    2. 'max' → logprob: -1.4749821424484253
    3. 'self' → logprob: -1.8499821424484253
    4. 'the' → logprob: -2.099982261657715
    5. 'time' → logprob: -2.849982261657715
    6. ' min' → logprob: -3.349982261657715
    7. ' the' → logprob: -3.849982261657715
    8. ' max' → logprob: -4.099982261657715
    9. ' self' → logprob: -4.974982261657715
    10. '       ' → logprob: -5.349982261657715

Token 557: ' minimal' (ID: 19957)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.6623056530952454
    2. 'minimum' → logprob: -1.2873055934906006
    3. 'minimal' → logprob: -1.9123055934906006
    4. ' minimal' → logprob: -3.5373055934906006
    5. 'time' → logprob: -3.9123055934906006
    6. ' minimum' → logprob: -5.66230583190918
    7. 'cost' → logprob: -5.91230583190918
    8. 'max' → logprob: -6.16230583190918
    9. ' min' → logprob: -6.66230583190918
    10. 'sum' → logprob: -8.03730583190918

Token 558: ' time' (ID: 1058)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.008223290555179119
    2. 'time' → logprob: -5.133223056793213
    3. '_' → logprob: -6.633223056793213
    4. ' time' → logprob: -7.508223056793213
    5. '_cost' → logprob: -9.008223533630371
    6. '   ' → logprob: -10.008223533630371
    7. '(' → logprob: -10.383223533630371
    8. '_return' → logprob: -10.883223533630371
    9. ' =' → logprob: -11.008223533630371
    10. '_path' → logprob: -11.133223533630371

Token 559: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8788025379180908
    2. ' +' → logprob: -0.8788025379180908
    3. ' to' → logprob: -3.003802537918091
    4. '=' → logprob: -3.253802537918091
    5. '       ' → logprob: -3.628802537918091
    6. '+' → logprob: -3.628802537918091
    7. '[node' → logprob: -4.503802299499512
    8. '(node' → logprob: -4.878802299499512
    9. '_to' → logprob: -5.753802299499512
    10. 'to' → logprob: -6.378802299499512

Token 560: ' complete' (ID: 5533)
  Prédit: 'complete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'complete' → logprob: -0.17506292462348938
    2. 'visit' → logprob: -2.675062894821167
    3. 'finish' → logprob: -2.925062894821167
    4. ' complete' → logprob: -4.175063133239746
    5. 'return' → logprob: -5.550063133239746
    6. 'collect' → logprob: -5.800063133239746
    7. '_complete' → logprob: -5.800063133239746
    8. 'cover' → logprob: -5.800063133239746
    9. 'go' → logprob: -6.550063133239746
    10. 'reach' → logprob: -6.675063133239746

Token 561: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.5797101855278015
    2. 'all' → logprob: -0.9547101855278015
    3. ' the' → logprob: -3.5797102451324463
    4. 'the' → logprob: -4.329710006713867
    5. ' visiting' → logprob: -5.579710006713867
    6. 'sub' → logprob: -5.954710006713867
    7. '_all' → logprob: -5.954710006713867
    8. '[node' → logprob: -6.829710006713867
    9. ' this' → logprob: -7.204710006713867
    10. 'this' → logprob: -7.454710006713867

Token 562: ' endings' (ID: 152718)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.12884333729743958
    2. '_sub' → logprob: -3.878843307495117
    3. 'branch' → logprob: -4.003843307495117
    4. 'end' → logprob: -4.253843307495117
    5. '_end' → logprob: -4.628843307495117
    6. '_time' → logprob: -5.003843307495117
    7. 'self' → logprob: -5.003843307495117
    8. ' sub' → logprob: -5.128843307495117
    9. '_branch' → logprob: -5.253843307495117
    10. 'branches' → logprob: -5.503843307495117

Token 563: ' in' (ID: 306)
  Prédit: '[node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[node' → logprob: -0.2280607968568802
    2. '       ' → logprob: -1.7280608415603638
    3. ' at' → logprob: -4.228060722351074
    4. ' +' → logprob: -5.228060722351074
    5. ')' → logprob: -6.478060722351074
    6. '+' → logprob: -6.728060722351074
    7. '(node' → logprob: -6.853060722351074
    8. ' plus' → logprob: -7.978060722351074
    9. '[' → logprob: -8.103060722351074
    10. '   ' → logprob: -8.228060722351074

Token 564: ' the' (ID: 290)
  Prédit: 'this'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'this' → logprob: -0.7951303720474243
    2. 'the' → logprob: -1.1701303720474243
    3. 'sub' → logprob: -2.4201302528381348
    4. ' this' → logprob: -2.9201302528381348
    5. ' the' → logprob: -3.0451302528381348
    6. 'both' → logprob: -3.7951302528381348
    7. ' subtree' → logprob: -4.795130252838135
    8. 'node' → logprob: -5.045130252838135
    9. ' both' → logprob: -5.295130252838135
    10. 'self' → logprob: -6.545130252838135

Token 565: ' subtree' (ID: 126158)
  Prédit: ' subtree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' subtree' → logprob: -0.5768855214118958
    2. 'sub' → logprob: -0.8268855214118958
    3. '_sub' → logprob: -7.70188570022583
    4. 'current' → logprob: -9.076885223388672
    5. 'node' → logprob: -9.326885223388672
    6. ' sub' → logprob: -9.451885223388672
    7. ' current' → logprob: -10.326885223388672
    8. '   ' → logprob: -10.326885223388672
    9. 'tree' → logprob: -10.451885223388672
    10. 'branch' → logprob: -10.701885223388672

Token 566: ' rooted' (ID: 73759)
  Prédit: '[node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[node' → logprob: -0.027781415730714798
    2. '   ' → logprob: -4.4027814865112305
    3. '       ' → logprob: -4.9027814865112305
    4. '[' → logprob: -6.0277814865112305
    5. '_' → logprob: -6.4027814865112305
    6. '_id' → logprob: -7.0277814865112305
    7. '(node' → logprob: -7.5277814865112305
    8. ')' → logprob: -7.6527814865112305
    9. '```' → logprob: -7.9027814865112305
    10. 'node' → logprob: -8.65278148651123

Token 567: ' node' (ID: 4596)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.3826231360435486
    2. 'at' → logprob: -1.2576231956481934
    3. '[node' → logprob: -3.7576231956481934
    4. 'by' → logprob: -5.882623195648193
    5. '       ' → logprob: -6.382623195648193
    6. '(node' → logprob: -6.632623195648193
    7. ' by' → logprob: -6.757623195648193
    8. ' here' → logprob: -7.382623195648193
    9. 'here' → logprob: -7.382623195648193
    10. '   ' → logprob: -7.632623195648193

Token 568: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6833197474479675
    2. '       ' → logprob: -1.1833198070526123
    3. '[node' → logprob: -1.9333198070526123
    4. '   ' → logprob: -4.183319568634033
    5. ')+' → logprob: -5.308319568634033
    6. '
' → logprob: -5.558319568634033
    7. ' +' → logprob: -5.683319568634033
    8. ',' → logprob: -5.683319568634033
    9. '(node' → logprob: -5.933319568634033
    10. ' )' → logprob: -6.183319568634033

Token 569: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05035681650042534
    2. 'save' → logprob: -4.925356864929199
    3. ' time' → logprob: -5.050356864929199
    4. ' left' → logprob: -5.425356864929199
    5. 'time' → logprob: -5.425356864929199
    6. ' save' → logprob: -5.550356864929199
    7. 'left' → logprob: -5.675356864929199
    8. '        
' → logprob: -6.175356864929199
    9. '#' → logprob: -6.425356864929199
    10. 'return' → logprob: -6.425356864929199

Token 570: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031464964151382446
    2. ' if' → logprob: -5.03146505355835
    3. ' time' → logprob: -5.15646505355835
    4. 'time' → logprob: -6.03146505355835
    5. ',' → logprob: -6.28146505355835
    6. ' left' → logprob: -6.65646505355835
    7. '        
' → logprob: -6.78146505355835
    8. ')' → logprob: -6.90646505355835
    9. 'return' → logprob: -7.03146505355835
    10. 'if' → logprob: -7.40646505355835

Token 571: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017412242013961077
    2. '        
' → logprob: -7.376741409301758
    3. ')' → logprob: -8.751741409301758
    4. '        ' → logprob: -9.001741409301758
    5. ' if' → logprob: -9.251741409301758
    6. '   ' → logprob: -9.376741409301758
    7. ' time' → logprob: -9.376741409301758
    8. 'return' → logprob: -9.501741409301758
    9. ' return' → logprob: -10.126741409301758
    10. ',' → logprob: -10.251741409301758

Token 572: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12063346058130264
    2. 'if' → logprob: -3.495633363723755
    3. 'left' → logprob: -3.995633363723755
    4. 'save' → logprob: -3.995633363723755
    5. '#' (adapté à ' #') → logprob: -4.495633602142334
    6. 'time' → logprob: -5.245633602142334
    7. 'return' → logprob: -5.495633602142334
    8. 'f' → logprob: -5.745633602142334
    9. ' if' → logprob: -5.870633602142334
    10. 'sub' → logprob: -6.370633602142334

Token 573: ' Let' (ID: 9024)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -1.4595210552215576
    2. 'time' → logprob: -1.5845210552215576
    3. '       ' → logprob: -2.3345210552215576
    4. 'save' → logprob: -2.5845210552215576
    5. 'res' → logprob: -2.8345210552215576
    6. '#' → logprob: -2.8345210552215576
    7. 'cost' → logprob: -2.9595210552215576
    8. 'return' → logprob: -3.0845210552215576
    9. 'sub' → logprob: -3.2095210552215576
    10. 'total' → logprob: -3.2095210552215576

Token 574: ' h' (ID: 312)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.2636597156524658
    2. 'save' → logprob: -1.6386597156524658
    3. 'left' → logprob: -2.263659715652466
    4. ''s' → logprob: -2.763659715652466
    5. 'time' → logprob: -3.013659715652466
    6. 'sub' → logprob: -3.388659715652466
    7. 's' → logprob: -3.763659715652466
    8. 'cost' → logprob: -3.763659715652466
    9. 'best' → logprob: -4.388659477233887
    10. 'dp' → logprob: -4.388659477233887

Token 575: '(node' (ID: 13356)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4946434497833252
    2. '(node' → logprob: -1.4946434497833252
    3. '=' → logprob: -2.369643449783325
    4. 'eight' → logprob: -3.744643449783325
    5. '[node' → logprob: -4.369643211364746
    6. '=node' → logprob: -4.494643211364746
    7. 't' → logprob: -5.244643211364746
    8. '       ' → logprob: -5.244643211364746
    9. '   ' → logprob: -5.744643211364746
    10. 'f' → logprob: -6.494643211364746

Token 576: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0023681551683694124
    2. '       ' → logprob: -6.877367973327637
    3. '   ' → logprob: -7.752367973327637
    4. ')=' → logprob: -7.752367973327637
    5. '):' → logprob: -8.627367973327637
    6. ')
' → logprob: -9.502367973327637
    7. ' )' → logprob: -9.627367973327637
    8. '(node' → logprob: -10.627367973327637
    9. ' =' → logprob: -10.877367973327637
    10. '):
' → logprob: -11.127367973327637

Token 577: ' be' (ID: 413)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20288628339767456
    2. '=' → logprob: -1.8278863430023193
    3. ' be' → logprob: -3.8278863430023193
    4. '=node' → logprob: -8.202886581420898
    5. 'def' → logprob: -8.702886581420898
    6. ',' → logprob: -8.827886581420898
    7. ')' → logprob: -9.452886581420898
    8. ':' → logprob: -9.452886581420898
    9. 'be' → logprob: -9.827886581420898
    10. '       ' → logprob: -9.827886581420898

Token 578: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.14881008863449097
    2. ' self' → logprob: -2.3988101482391357
    3. 'the' → logprob: -3.5238101482391357
    4. 'self' → logprob: -4.648809909820557
    5. '       ' → logprob: -6.273809909820557
    6. ' max' → logprob: -6.523809909820557
    7. ' =' → logprob: -6.898809909820557
    8. ' node' → logprob: -6.898809909820557
    9. '   ' → logprob: -7.398809909820557
    10. ' ' → logprob: -7.523809909820557

Token 579: ' height' (ID: 4679)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3642049729824066
    2. 'height' → logprob: -1.989205002784729
    3. '0' → logprob: -3.3642048835754395
    4. 'def' → logprob: -3.3642048835754395
    5. 'self' → logprob: -3.7392048835754395
    6. '1' → logprob: -3.7392048835754395
    7. 'depth' → logprob: -4.1142048835754395
    8. 'min' → logprob: -4.9892048835754395
    9. 'node' → logprob: -5.4892048835754395
    10. 'left' → logprob: -5.7392048835754395

Token 580: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3074123859405518
    2. ' =' → logprob: -1.3074123859405518
    3. '(node' → logprob: -1.4324123859405518
    4. '[node' → logprob: -2.4324123859405518
    5. '_' → logprob: -2.8074123859405518
    6. ' of' → logprob: -3.8074123859405518
    7. ')' → logprob: -4.182412147521973
    8. '=' → logprob: -4.932412147521973
    9. ' +' → logprob: -4.932412147521973
    10. ':' → logprob: -6.307412147521973

Token 581: 'max' (ID: 3228)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5073854923248291
    2. '(node' → logprob: -1.132385492324829
    3. '[node' → logprob: -3.257385492324829
    4. '       ' → logprob: -5.13238525390625
    5. ' =' → logprob: -5.25738525390625
    6. 'node' → logprob: -5.38238525390625
    7. '=node' → logprob: -5.63238525390625
    8. ' of' → logprob: -5.75738525390625
    9. '=' → logprob: -6.13238525390625
    10. ',' → logprob: -6.38238525390625

Token 582: ' distance' (ID: 9324)
  Prédit: '_depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_depth' → logprob: -0.44229286909103394
    2. '_time' → logprob: -2.4422929286956787
    3. '_' → logprob: -2.5672929286956787
    4. '_left' → logprob: -3.5672929286956787
    5. '       ' → logprob: -3.6922929286956787
    6. '(
' → logprob: -3.6922929286956787
    7. '_distance' → logprob: -4.0672926902771
    8. '_height' → logprob: -4.0672926902771
    9. '(' → logprob: -4.3172926902771
    10. 'depth' → logprob: -4.4422926902771

Token 583: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49817490577697754
    2. ')' → logprob: -1.3731749057769775
    3. '(node' → logprob: -3.1231749057769775
    4. ' =' → logprob: -3.2481749057769775
    5. '   ' → logprob: -4.248174667358398
    6. ' of' → logprob: -4.623174667358398
    7. ',' → logprob: -5.373174667358398
    8. '_left' → logprob: -5.498174667358398
    9. '[node' → logprob: -5.748174667358398
    10. ' from' → logprob: -5.998174667358398

Token 584: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.23978815972805023
    2. ' node' → logprob: -1.6147881746292114
    3. 'the' → logprob: -4.989788055419922
    4. ' the' → logprob: -5.114788055419922
    5. 'this' → logprob: -7.739788055419922
    6. ' this' → logprob: -7.989788055419922
    7. '(node' → logprob: -8.864788055419922
    8. 'self' → logprob: -8.864788055419922
    9. ')' → logprob: -9.989788055419922
    10. '[node' → logprob: -9.989788055419922

Token 585: ' to' (ID: 316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19093011319637299
    2. '       ' → logprob: -2.065930128097534
    3. '   ' → logprob: -4.190929889678955
    4. '_to' → logprob: -5.065929889678955
    5. '(node' → logprob: -5.565929889678955
    6. ',' → logprob: -5.690929889678955
    7. ')+' → logprob: -5.815929889678955
    8. ' )' → logprob: -6.190929889678955
    9. '[node' → logprob: -6.190929889678955
    10. ' =' → logprob: -6.440929889678955

Token 586: ' leaf' (ID: 25882)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.8139804601669312
    2. 'leaf' → logprob: -1.1889804601669312
    3. 'a' → logprob: -1.8139804601669312
    4. 'any' → logprob: -3.4389805793762207
    5. 'child' → logprob: -4.063980579376221
    6. ' a' → logprob: -4.688980579376221
    7. 'children' → logprob: -4.688980579376221
    8. 'its' → logprob: -5.438980579376221
    9. ' leaf' → logprob: -5.688980579376221
    10. ' leaves' → logprob: -5.938980579376221

Token 587: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01552323717623949
    2. ')
' → logprob: -5.140523433685303
    3. '       ' → logprob: -5.515523433685303
    4. ')+' → logprob: -6.015523433685303
    5. '   ' → logprob: -6.140523433685303
    6. ' )' → logprob: -8.015522956848145
    7. 's' → logprob: -9.515522956848145
    8. '):' → logprob: -10.140522956848145
    9. ' ' → logprob: -10.140522956848145
    10. ')

' → logprob: -10.265522956848145

Token 588: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01137518510222435
    2. '        
' → logprob: -4.7613749504089355
    3. '#' → logprob: -7.5113749504089355
    4. 'height' → logprob: -7.5113749504089355
    5. ' h' → logprob: -7.7613749504089355
    6. '```' → logprob: -7.7613749504089355
    7. '
' → logprob: -8.636375427246094
    8. 'h' → logprob: -9.261375427246094
    9. '        

' → logprob: -9.761375427246094
    10. ',' → logprob: -10.011375427246094

Token 589: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007216368801891804
    2. '<|end|>' → logprob: -5.882216453552246
    3. '        
' → logprob: -6.757216453552246
    4. 'height' → logprob: -7.007216453552246
    5. ' h' → logprob: -7.382216453552246
    6. '
' → logprob: -7.882216453552246
    7. '#' → logprob: -8.007216453552246
    8. 'h' → logprob: -8.382216453552246
    9. 'def' → logprob: -8.757216453552246
    10. ')' → logprob: -9.257216453552246

Token 590: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002238162560388446
    2. '        
' → logprob: -6.7522382736206055
    3. '<|end|>' → logprob: -7.5022382736206055
    4. '        ' → logprob: -8.002238273620605
    5. '
' → logprob: -10.002238273620605
    6. ' h' → logprob: -10.252238273620605
    7. ')' → logprob: -10.877238273620605
    8. 'h' → logprob: -11.377238273620605
    9. '      ' → logprob: -11.752238273620605
    10. ',' → logprob: -11.752238273620605

Token 591: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.039845384657382965
    2. 'h' → logprob: -3.9148454666137695
    3. 'height' → logprob: -4.2898454666137695
    4. ' h' → logprob: -6.5398454666137695
    5. 'if' → logprob: -6.6648454666137695
    6. '        
' → logprob: -6.9148454666137695
    7. '#' (adapté à ' #') → logprob: -7.0398454666137695
    8. '   ' → logprob: -8.66484546661377
    9. '
' → logprob: -8.91484546661377
    10. ' height' → logprob: -9.03984546661377

Token 592: ' Because' (ID: 13602)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.45783713459968567
    2. 'height' → logprob: -1.7078371047973633
    3. '       ' → logprob: -1.8328371047973633
    4. '#' → logprob: -4.457837104797363
    5. 'if' → logprob: -4.832837104797363
    6. 'def' → logprob: -5.332837104797363
    7. 'left' → logprob: -7.207837104797363
    8. 'node' → logprob: -8.207837104797363
    9. '   ' → logprob: -9.082837104797363
    10. 'If' → logprob: -9.332837104797363

Token 593: ' "' (ID: 392)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8627306222915649
    2. ' h' → logprob: -1.737730622291565
    3. ' the' → logprob: -1.737730622291565
    4. 'h' → logprob: -2.8627305030822754
    5. '#' → logprob: -3.4877305030822754
    6. 'the' → logprob: -3.6127305030822754
    7. 'height' → logprob: -4.112730503082275
    8. ' height' → logprob: -4.487730503082275
    9. 'left' → logprob: -4.737730503082275
    10. ' we' → logprob: -4.737730503082275

Token 594: 'quick' (ID: 46003)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6279888153076172
    2. 'h' → logprob: -1.5029888153076172
    3. '       ' → logprob: -2.502988815307617
    4. 'height' → logprob: -3.002988815307617
    5. 'left' → logprob: -3.127988815307617
    6. '#' → logprob: -3.752988815307617
    7. 'node' → logprob: -4.752988815307617
    8. 'time' → logprob: -4.752988815307617
    9. 'self' → logprob: -5.252988815307617
    10. '   ' → logprob: -5.502988815307617

Token 595: ' save' (ID: 5093)
  Prédit: '_save'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_save' → logprob: -0.15529364347457886
    2. '_' → logprob: -3.0302937030792236
    3. ' _' → logprob: -3.1552937030792236
    4. 'Save' → logprob: -3.5302937030792236
    5. 'save' → logprob: -4.1552934646606445
    6. ' save' → logprob: -5.9052934646606445
    7. ' Save' → logprob: -6.1552934646606445
    8. '_s' → logprob: -6.4052934646606445
    9. ' ' → logprob: -7.6552934646606445
    10. '_Save' → logprob: -8.530293464660645

Token 596: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.08824145048856735
    2. ' can' → logprob: -4.8382415771484375
    3. ' "' → logprob: -4.9632415771484375
    4. ' saves' → logprob: -4.9632415771484375
    5. ' only' → logprob: -5.0882415771484375
    6. '_time' → logprob: -5.2132415771484375
    7. ' and' → logprob: -5.3382415771484375
    8. '   ' → logprob: -5.8382415771484375
    9. ' usage' → logprob: -5.8382415771484375
    10. '",' → logprob: -5.8382415771484375

Token 597: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -1.6189143657684326
    2. ' is' → logprob: -1.7439143657684326
    3. ' only' → logprob: -2.2439143657684326
    4. 'only' → logprob: -2.4939143657684326
    5. 'can' → logprob: -2.6189143657684326
    6. ' saves' → logprob: -3.1189143657684326
    7. 'def' → logprob: -3.2439143657684326
    8. '   ' → logprob: -3.4939143657684326
    9. 's' → logprob: -3.6189143657684326
    10. ',' → logprob: -3.6189143657684326

Token 598: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.8441439270973206
    2. 'be' → logprob: -1.9691438674926758
    3. 'only' → logprob: -2.094143867492676
    4. 'jump' → logprob: -2.344143867492676
    5. ' only' → logprob: -2.469143867492676
    6. 'save' → logprob: -3.469143867492676
    7. '   ' → logprob: -4.219143867492676
    8. ' jump' → logprob: -4.594143867492676
    9. ' save' → logprob: -4.719143867492676
    10. 'store' → logprob: -4.844143867492676

Token 599: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.09104975312948227
    2. 'stored' → logprob: -3.4660496711730957
    3. ' used' → logprob: -4.216049671173096
    4. 'placed' → logprob: -4.716049671173096
    5. 'only' → logprob: -4.966049671173096
    6. 'saved' → logprob: -5.091049671173096
    7. 'over' → logprob: -5.216049671173096
    8. 'done' → logprob: -5.841049671173096
    9. 'at' → logprob: -6.341049671173096
    10. 'made' → logprob: -6.591049671173096

Token 600: ' once' (ID: 4730)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.2624172270298004
    2. 'to' → logprob: -2.0124173164367676
    3. ',' → logprob: -3.0124173164367676
    4. '       ' → logprob: -3.7624173164367676
    5. '   ' → logprob: -4.762417316436768
    6. ' at' → logprob: -5.637417316436768
    7. 'def' → logprob: -5.887417316436768
    8. ' and' → logprob: -6.012417316436768
    9. ' as' → logprob: -6.637417316436768
    10. 'and' → logprob: -6.762417316436768

Token 601: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.505224347114563
    2. '       ' → logprob: -1.380224347114563
    3. ' to' → logprob: -2.6302242279052734
    4. ' at' → logprob: -3.5052242279052734
    5. ' and' → logprob: -4.130224227905273
    6. 'to' → logprob: -4.880224227905273
    7. '   ' → logprob: -5.255224227905273
    8. 'and' → logprob: -5.255224227905273
    9. ',
' → logprob: -5.755224227905273
    10. ' in' → logprob: -7.130224227905273

Token 602: ' save' (ID: 5093)
  Prédit: 'jump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jump' → logprob: -0.7659867405891418
    2. ' jump' → logprob: -0.8909867405891418
    3. 'save' → logprob: -3.140986680984497
    4. ' save' → logprob: -3.390986680984497
    5. 'return' → logprob: -4.015986919403076
    6. 'store' → logprob: -5.015986919403076
    7. ' store' → logprob: -5.390986919403076
    8. 'skip' → logprob: -5.515986919403076
    9. ' return' → logprob: -5.640986919403076
    10. 'allow' → logprob: -6.765986919403076

Token 603: ' a' (ID: 261)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.0893107652664185
    2. ' the' → logprob: -1.4643107652664185
    3. ' and' → logprob: -2.339310646057129
    4. 'state' → logprob: -2.339310646057129
    5. 'a' → logprob: -2.464310646057129
    6. 'and' → logprob: -2.589310646057129
    7. ' a' → logprob: -3.464310646057129
    8. ' state' → logprob: -4.339310646057129
    9. 'point' → logprob: -4.464310646057129
    10. 'current' → logprob: -5.089310646057129

Token 604: ' single' (ID: 4590)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.7740566730499268
    2. 'branch' → logprob: -1.1490566730499268
    3. 'node' → logprob: -2.5240566730499268
    4. ' node' → logprob: -3.2740566730499268
    5. ' point' → logprob: -3.8990566730499268
    6. 'state' → logprob: -4.274056434631348
    7. 'sub' → logprob: -4.524056434631348
    8. 'child' → logprob: -4.774056434631348
    9. ' subtree' → logprob: -4.774056434631348
    10. ' branching' → logprob: -4.899056434631348

Token 605: ' branching' (ID: 173776)
  Prédit: 'branch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'branch' → logprob: -0.6719210743904114
    2. 'point' → logprob: -1.4219210147857666
    3. 'node' → logprob: -2.1719210147857666
    4. ' node' → logprob: -3.2969210147857666
    5. 'child' → logprob: -3.5469210147857666
    6. ' point' → logprob: -3.7969210147857666
    7. 'position' → logprob: -4.546921253204346
    8. 'location' → logprob: -5.421921253204346
    9. ' branch' → logprob: -5.421921253204346
    10. 'spot' → logprob: -5.671921253204346

Token 606: ' point' (ID: 2438)
  Prédit: '_point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.28922080993652344
    2. '_' → logprob: -1.7892208099365234
    3. 'point' → logprob: -2.5392208099365234
    4. ' point' → logprob: -5.539220809936523
    5. '_space' → logprob: -7.539220809936523
    6. '_points' → logprob: -8.539220809936523
    7. 'space' → logprob: -9.039220809936523
    8. ' _' → logprob: -9.289220809936523
    9. 'Point' → logprob: -9.414220809936523
    10. '       ' → logprob: -10.164220809936523

Token 607: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5156257748603821
    2. ',' → logprob: -1.3906257152557373
    3. ')' → logprob: -2.0156257152557373
    4. '   ' → logprob: -4.890625953674316
    5. '),' → logprob: -5.390625953674316
    6. '"' → logprob: -6.640625953674316
    7. ',
' → logprob: -6.640625953674316
    8. ' and' → logprob: -6.890625953674316
    9. '.' → logprob: -7.015625953674316
    10. '_' → logprob: -7.515625953674316

Token 608: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003885819111019373
    2. '#' → logprob: -6.003885746002197
    3. ' and' → logprob: -7.753885746002197
    4. '        
' → logprob: -8.378886222839355
    5. ' h' → logprob: -9.003886222839355
    6. ',' → logprob: -9.253886222839355
    7. 'h' → logprob: -9.378886222839355
    8. ')' → logprob: -9.628886222839355
    9. '   ' → logprob: -9.628886222839355
    10. '           ' → logprob: -10.003886222839355

Token 609: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.11547647416591644
    2. '       ' → logprob: -2.240476369857788
    3. 'and' → logprob: -7.115476608276367
    4. ' and' → logprob: -7.990476608276367
    5. 'we' → logprob: -7.990476608276367
    6. '   ' → logprob: -8.365476608276367
    7. ')' → logprob: -8.865476608276367
    8. ' #' → logprob: -8.990476608276367
    9. 'the' → logprob: -9.240476608276367
    10. 'which' → logprob: -9.615476608276367

Token 610: ' the' (ID: 290)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.0897338390350342
    2. ' h' → logprob: -1.3397338390350342
    3. '       ' → logprob: -1.7147338390350342
    4. '#' → logprob: -1.9647338390350342
    5. 'return' → logprob: -4.839734077453613
    6. ' we' → logprob: -4.964734077453613
    7. ' #' → logprob: -4.964734077453613
    8. 'height' → logprob: -5.089734077453613
    9. ' height' → logprob: -5.214734077453613
    10. 'time' → logprob: -5.214734077453613

Token 611: ' minimal' (ID: 19957)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.9095611572265625
    2. ' h' → logprob: -1.0345611572265625
    3. '#' → logprob: -3.2845611572265625
    4. 'height' → logprob: -3.6595611572265625
    5. ' if' → logprob: -3.7845611572265625
    6. 'def' → logprob: -3.7845611572265625
    7. 'return' → logprob: -3.7845611572265625
    8. ' #' → logprob: -4.0345611572265625
    9. ' return' → logprob: -4.0345611572265625
    10. ' height' → logprob: -4.4095611572265625

Token 612: ' total' (ID: 3609)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.08118424564599991
    2. 'time' → logprob: -3.206184148788452
    3. '_' → logprob: -3.956184148788452
    4. ' time' → logprob: -4.581184387207031
    5. ')' → logprob: -6.206184387207031
    6. '   ' → logprob: -7.081184387207031
    7. '_save' → logprob: -7.456184387207031
    8. '_cost' → logprob: -7.706184387207031
    9. 'def' → logprob: -7.831184387207031
    10. '#' → logprob: -7.831184387207031

Token 613: ' time' (ID: 1058)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.014593338593840599
    2. 'time' → logprob: -4.639593124389648
    3. ' time' → logprob: -6.014593124389648
    4. '_' → logprob: -6.389593124389648
    5. '_cost' → logprob: -8.139593124389648
    6. ' =' → logprob: -9.139593124389648
    7. '   ' → logprob: -9.639593124389648
    8. 'cost' → logprob: -10.014593124389648
    9. '       ' → logprob: -10.514593124389648
    10. '_return' → logprob: -10.764593124389648

Token 614: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7191498875617981
    2. '=' → logprob: -0.8441498875617981
    3. '       ' → logprob: -3.0941498279571533
    4. ' is' → logprob: -3.9691498279571533
    5. ' to' → logprob: -5.344150066375732
    6. '   ' → logprob: -5.719150066375732
    7. '#' → logprob: -5.844150066375732
    8. ')' → logprob: -5.969150066375732
    9. 'to' → logprob: -6.969150066375732
    10. 'def' → logprob: -7.469150066375732

Token 615: ':
' (ID: 734)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.2934816777706146
    2. ' min' → logprob: -1.543481707572937
    3. 'max' → logprob: -4.668481826782227
    4. '       ' → logprob: -4.668481826782227
    5. ' self' → logprob: -5.043481826782227
    6. ' time' → logprob: -5.293481826782227
    7. ' ' → logprob: -6.168481826782227
    8. 'min' → logprob: -6.293481826782227
    9. ' (' → logprob: -6.668481826782227
    10. ' =' → logprob: -6.793481826782227

Token 616: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012088810093700886
    2. '
' → logprob: -4.762088775634766
    3. '        
' → logprob: -6.137088775634766
    4. ' h' → logprob: -7.387088775634766
    5. ' 
' → logprob: -9.137088775634766
    6. '        ' → logprob: -9.887088775634766
    7. '  
' → logprob: -10.012088775634766
    8. 'return' → logprob: -10.137088775634766
    9. '   ' → logprob: -10.387088775634766
    10. '       
' → logprob: -10.387088775634766

Token 617: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04816700890660286
    2. 'h' → logprob: -4.5481672286987305
    3. ' h' → logprob: -4.7981672286987305
    4. '2' → logprob: -4.9231672286987305
    5. 'max' → logprob: -5.9231672286987305
    6. ' max' → logprob: -6.1731672286987305
    7. 'f' → logprob: -6.1731672286987305
    8. 'height' → logprob: -6.1731672286987305
    9. 'time' → logprob: -6.1731672286987305
    10. '#' (adapté à ' #') → logprob: -6.2981672286987305

Token 618: ' f' (ID: 285)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20886820554733276
    2. 'h' → logprob: -3.3338682651519775
    3. ' h' → logprob: -3.4588682651519775
    4. 'time' → logprob: -4.083868026733398
    5. ' time' → logprob: -4.208868026733398
    6. 'f' → logprob: -4.208868026733398
    7. ' f' → logprob: -4.583868026733398
    8. ' max' → logprob: -4.708868026733398
    9. 'max' → logprob: -4.958868026733398
    10. 'res' → logprob: -4.958868026733398

Token 619: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.43222618103027344
    2. '[node' → logprob: -1.6822261810302734
    3. ' =' → logprob: -2.5572261810302734
    4. '_node' → logprob: -3.0572261810302734
    5. '_' → logprob: -3.8072261810302734
    6. 'node' → logprob: -5.307226181030273
    7. '_left' → logprob: -5.682226181030273
    8. ',' → logprob: -5.807226181030273
    9. '_(' → logprob: -6.432226181030273
    10. '_value' → logprob: -7.182226181030273

Token 620: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001581874443218112
    2. '[node' → logprob: -7.25158166885376
    3. ')=' → logprob: -8.126582145690918
    4. ',' → logprob: -8.251582145690918
    5. '   ' → logprob: -8.876582145690918
    6. ' )' → logprob: -9.626582145690918
    7. '(node' → logprob: -9.876582145690918
    8. '       ' → logprob: -11.251582145690918
    9. ')
' → logprob: -11.376582145690918
    10. ')+' → logprob: -12.001582145690918

Token 621: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004144288133829832
    2. '=' → logprob: -6.004144191741943
    3. ' +' → logprob: -6.504144191741943
    4. ')' → logprob: -10.004144668579102
    5. ',' → logprob: -10.254144668579102
    6. '+' → logprob: -10.254144668579102
    7. '       ' → logprob: -10.754144668579102
    8. ' ' → logprob: -11.379144668579102
    9. ' +=' → logprob: -11.879144668579102
    10. '[node' → logprob: -13.004144668579102

Token 622: ' ' (ID: 220)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -1.2050188779830933
    2. '1' → logprob: -1.5800188779830933
    3. 'min' → logprob: -1.5800188779830933
    4. '2' → logprob: -1.5800188779830933
    5. 'max' → logprob: -3.080018997192383
    6. '(' → logprob: -3.955018997192383
    7. '(time' → logprob: -4.580018997192383
    8. '(min' → logprob: -5.330018997192383
    9. '(max' → logprob: -7.705018997192383
    10. ' min' → logprob: -7.705018997192383

Token 623: '2' (ID: 17)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.939861536026001
    2. 'time' → logprob: -1.189861536026001
    3. '1' → logprob: -1.314861536026001
    4. '2' → logprob: -4.064861297607422
    5. 'max' → logprob: -5.064861297607422
    6. '(' → logprob: -5.314861297607422
    7. '(time' → logprob: -5.564861297607422
    8. '(min' → logprob: -5.689861297607422
    9. ' min' → logprob: -7.814861297607422
    10. ' time' → logprob: -9.064861297607422

Token 624: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.11590758711099625
    2. ' *' → logprob: -2.240907669067383
    3. ' +' → logprob: -6.615907669067383
    4. '+' → logprob: -6.615907669067383
    5. '*h' → logprob: -8.240907669067383
    6. '*(' → logprob: -9.615907669067383
    7. '*f' → logprob: -10.240907669067383
    8. ' ' → logprob: -12.115907669067383
    9. '*time' → logprob: -12.115907669067383
    10. '   ' → logprob: -12.115907669067383

Token 625: ' (' (ID: 350)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.23891665041446686
    2. '(max' → logprob: -1.8639166355133057
    3. '(h' → logprob: -3.8639166355133057
    4. 'h' → logprob: -4.113916873931885
    5. '(self' → logprob: -5.488916873931885
    6. 'self' → logprob: -5.613916873931885
    7. '(' → logprob: -5.738916873931885
    8. 'min' → logprob: -5.863916873931885
    9. ' max' → logprob: -6.488916873931885
    10. 'time' → logprob: -6.738916873931885

Token 626: 'h' (ID: 71)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5194826722145081
    2. 'max' → logprob: -1.7694826126098633
    3. 'h' → logprob: -2.0194826126098633
    4. '(self' → logprob: -2.7694826126098633
    5. '(max' → logprob: -4.144482612609863
    6. '(h' → logprob: -4.394482612609863
    7. 'time' → logprob: -5.644482612609863
    8. 'left' → logprob: -6.394482612609863
    9. 'node' → logprob: -6.894482612609863
    10. 'min' → logprob: -6.894482612609863

Token 627: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.002066756598651409
    2. 'node' → logprob: -6.752066612243652
    3. '[node' → logprob: -7.377066612243652
    4. ')' → logprob: -9.002066612243652
    5. '(' → logprob: -10.127066612243652
    6. 'left' → logprob: -10.627066612243652
    7. '(left' → logprob: -10.877066612243652
    8. '_node' → logprob: -11.127066612243652
    9. ' (' → logprob: -11.252066612243652
    10. '_left' → logprob: -11.377066612243652

Token 628: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07539687305688858
    2. '[node' → logprob: -2.950396776199341
    3. '(node' → logprob: -3.950396776199341
    4. ' -' → logprob: -8.450396537780762
    5. ')-' → logprob: -8.700396537780762
    6. ' )' → logprob: -8.700396537780762
    7. '-' → logprob: -9.450396537780762
    8. 'node' → logprob: -9.700396537780762
    9. '   ' → logprob: -9.700396537780762
    10. '))' → logprob: -9.825396537780762

Token 629: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.37126925587654114
    2. ' +' → logprob: -1.6212692260742188
    3. '       ' → logprob: -3.1212692260742188
    4. ')' → logprob: -3.6212692260742188
    5. '<|end|>' → logprob: -4.371269226074219
    6. ' ' → logprob: -4.871269226074219
    7. '+' → logprob: -4.871269226074219
    8. '-' → logprob: -4.996269226074219
    9. ' *' → logprob: -6.746269226074219
    10. '   ' → logprob: -6.996269226074219

Token 630: ' (' (ID: 350)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.19431807100772858
    2. ' time' → logprob: -1.9443180561065674
    3. 'max' → logprob: -4.6943182945251465
    4. 'min' → logprob: -5.1943182945251465
    5. ' max' → logprob: -5.3193182945251465
    6. '1' → logprob: -5.6943182945251465
    7. ' min' → logprob: -5.8193182945251465
    8. '(time' → logprob: -5.9443182945251465
    9. ' (' → logprob: -6.0693182945251465
    10. '(' → logprob: -7.3193182945251465

Token 631: 'number' (ID: 8096)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.06389915943145752
    2. 'min' → logprob: -3.438899040222168
    3. 'max' → logprob: -4.563899040222168
    4. ' time' → logprob: -4.813899040222168
    5. '1' → logprob: -5.688899040222168
    6. '0' → logprob: -5.938899040222168
    7. ' min' → logprob: -6.438899040222168
    8. '   ' → logprob: -7.313899040222168
    9. '(time' → logprob: -7.313899040222168
    10. 'f' → logprob: -7.563899040222168

Token 632: '_of' (ID: 8023)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.5029066205024719
    2. 'of' → logprob: -1.6279065608978271
    3. ' -' → logprob: -2.252906560897827
    4. ')' → logprob: -2.752906560897827
    5. '_of' → logprob: -4.377906799316406
    6. '-' → logprob: -4.877906799316406
    7. ' ' → logprob: -6.252906799316406
    8. '_' → logprob: -6.502906799316406
    9. '   ' → logprob: -7.002906799316406
    10. '>' → logprob: -7.502906799316406

Token 633: '_end' (ID: 13707)
  Prédit: '_le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_le' → logprob: -0.4176841080188751
    2. 'le' → logprob: -1.7926840782165527
    3. '_end' → logprob: -2.4176840782165527
    4. 'end' → logprob: -2.7926840782165527
    5. '_nodes' → logprob: -4.917684078216553
    6. '_leaf' → logprob: -5.667684078216553
    7. '_children' → logprob: -5.667684078216553
    8. 'children' → logprob: -6.542684078216553
    9. '_edges' → logprob: -6.667684078216553
    10. 'leaf' → logprob: -6.917684078216553

Token 634: 'ings' (ID: 963)
  Prédit: 'ings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ings' → logprob: -0.007025445811450481
    2. 's' → logprob: -5.257025241851807
    3. 'points' → logprob: -7.757025241851807
    4. 'ing' → logprob: -8.007025718688965
    5. '_' → logprob: -8.382025718688965
    6. '_nodes' → logprob: -8.382025718688965
    7. 'ingss' → logprob: -8.632025718688965
    8. '_points' → logprob: -8.632025718688965
    9. ')' → logprob: -8.882025718688965
    10. '_s' → logprob: -11.632025718688965

Token 635: '_in' (ID: 2267)
  Prédit: '[node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[node' → logprob: -0.3969338834285736
    2. ')' → logprob: -1.771933913230896
    3. ' -' → logprob: -2.0219337940216064
    4. '[' → logprob: -5.0219340324401855
    5. '(node' → logprob: -5.7719340324401855
    6. '-' → logprob: -5.8969340324401855
    7. '   ' → logprob: -5.8969340324401855
    8. '_left' → logprob: -6.5219340324401855
    9. '_' → logprob: -6.6469340324401855
    10. 'left' → logprob: -7.3969340324401855

Token 636: '_sub' (ID: 11572)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.5736967921257019
    2. ' subtree' → logprob: -1.5736968517303467
    3. 'the' → logprob: -2.5736968517303467
    4. 'node' → logprob: -2.8236968517303467
    5. ')' → logprob: -3.0736968517303467
    6. '_sub' → logprob: -4.323696613311768
    7. ' the' → logprob: -4.823696613311768
    8. '(node' → logprob: -5.073696613311768
    9. ' node' → logprob: -5.323696613311768
    10. '[node' → logprob: -5.823696613311768

Token 637: 'tree' (ID: 19816)
  Prédit: 'tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.012128619477152824
    2. 'node' → logprob: -4.887128829956055
    3. 'sub' → logprob: -6.012128829956055
    4. ' subtree' → logprob: -7.137128829956055
    5. ')' → logprob: -8.387128829956055
    6. 's' → logprob: -8.512128829956055
    7. '_' → logprob: -8.637128829956055
    8. 'trees' → logprob: -8.887128829956055
    9. '}' → logprob: -9.137128829956055
    10. '_sub' → logprob: -9.387128829956055

Token 638: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3390994369983673
    2. ' -' → logprob: -1.964099407196045
    3. '[node' → logprob: -2.089099407196045
    4. '-' → logprob: -4.714099407196045
    5. '(node' → logprob: -5.339099407196045
    6. '       ' → logprob: -5.964099407196045
    7. '   ' → logprob: -6.214099407196045
    8. '[' → logprob: -6.714099407196045
    9. ')-' → logprob: -7.089099407196045
    10. ' )' → logprob: -7.464099407196045

Token 639: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.970263659954071
    2. '
' → logprob: -1.3452637195587158
    3. '<|end|>' → logprob: -1.3452637195587158
    4. ')' → logprob: -2.595263719558716
    5. '   ' → logprob: -5.220263481140137
    6. '<|end|>' → logprob: -5.470263481140137
    7. ' +' → logprob: -5.720263481140137
    8. ',' → logprob: -5.845263481140137
    9. 'def' → logprob: -6.845263481140137
    10. ' ' → logprob: -7.095263481140137

Token 640: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002713215071707964
    2. ' ' → logprob: -6.002713203430176
    3. '2' → logprob: -8.377713203430176
    4. '   ' → logprob: -13.127713203430176
    5. '       ' → logprob: -13.502713203430176
    6. '```' → logprob: -14.127713203430176
    7. '
' → logprob: -14.502713203430176
    8. '[' → logprob: -14.752713203430176
    9. '...' → logprob: -15.002713203430176
    10. '<|end|>' → logprob: -15.252713203430176

Token 641: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011932061752304435
    2. '2' → logprob: -7.126193046569824
    3. ' ' → logprob: -7.876193046569824
    4. '   ' → logprob: -13.126193046569824
    5. '3' → logprob: -13.501193046569824
    6. 'count' → logprob: -14.126193046569824
    7. 'len' → logprob: -14.251193046569824
    8. '       ' → logprob: -14.626193046569824
    9. '```' → logprob: -14.626193046569824
    10. '[' → logprob: -14.626193046569824

Token 642: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46933701634407043
    2. '<|end|>' → logprob: -1.094336986541748
    3. '
' → logprob: -3.719336986541748
    4. ')' → logprob: -4.844336986541748
    5. '<|end|>' → logprob: -5.844336986541748
    6. ',' → logprob: -6.844336986541748
    7. '        
' → logprob: -7.219336986541748
    8. 'def' → logprob: -7.469336986541748
    9. '\n' → logprob: -7.844336986541748
    10. '\' → logprob: -8.094337463378906

Token 643: 'rough' (ID: 1712)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0023389006964862347
    2. '       ' → logprob: -6.252338886260986
    3. ' )' → logprob: -8.627339363098145
    4. '   ' → logprob: -9.252339363098145
    5. ' +' → logprob: -10.127339363098145
    6. ')*' → logprob: -10.627339363098145
    7. ')
' → logprob: -11.127339363098145
    8. '))' → logprob: -11.627339363098145
    9. '
' → logprob: -11.877339363098145
    10. '+' → logprob: -12.002339363098145

Token 644: 'ly' (ID: 423)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036889128386974335
    2. ' )' → logprob: -7.378688812255859
    3. 'space' → logprob: -7.378688812255859
    4. '       ' → logprob: -7.628688812255859
    5. 'down' → logprob: -8.25368881225586
    6. 'def' → logprob: -8.37868881225586
    7. ')\' → logprob: -8.50368881225586
    8. '")' → logprob: -8.87868881225586
    9. ':' → logprob: -9.37868881225586
    10. ' ' → logprob: -9.50368881225586

Token 645: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014914128929376602
    2. '       ' → logprob: -4.889914035797119
    3. ' )' → logprob: -5.014914035797119
    4. '   ' → logprob: -8.389914512634277
    5. ' +' → logprob: -9.139914512634277
    6. ' if' → logprob: -9.764914512634277
    7. ')*' → logprob: -10.014914512634277
    8. '
' → logprob: -10.639914512634277
    9. '#' → logprob: -10.764914512634277
    10. ')
' → logprob: -10.889914512634277

Token 646: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5089368224143982
    2. '<|end|>' → logprob: -1.008936882019043
    3. ')' → logprob: -3.883936882019043
    4. '
' → logprob: -4.633936882019043
    5. '<|end|>' → logprob: -7.008936882019043
    6. '        
' → logprob: -7.133936882019043
    7. ',' → logprob: -7.383936882019043
    8. ')
' → logprob: -8.133936882019043
    9. '   ' → logprob: -8.383936882019043
    10. '        ' → logprob: -8.883936882019043

Token 647: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014365875162184238
    2. '<|end|>' → logprob: -4.5143656730651855
    3. '        
' → logprob: -6.5143656730651855
    4. '
' → logprob: -7.2643656730651855
    5. ')' → logprob: -8.264366149902344
    6. '#' → logprob: -8.639366149902344
    7. '<|end|>' → logprob: -8.889366149902344
    8. '        

' → logprob: -9.389366149902344
    9. '        ' → logprob: -9.514366149902344
    10. ',' → logprob: -9.639366149902344

Token 648: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014977306127548218
    2. '<|end|>' → logprob: -4.26497745513916
    3. '        
' → logprob: -8.76497745513916
    4. ')' → logprob: -8.76497745513916
    5. '<|end|>' → logprob: -8.88997745513916
    6. '
' → logprob: -9.01497745513916
    7. '        ' → logprob: -9.88997745513916
    8. '   ' → logprob: -10.01497745513916
    9. ',' → logprob: -10.76497745513916
    10. '...' → logprob: -11.01497745513916

Token 649: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0038602929562330246
    2. 'height' → logprob: -6.8788604736328125
    3. '        
' → logprob: -7.0038604736328125
    4. '#' (adapté à ' #') → logprob: -7.1288604736328125
    5. '<|end|>' → logprob: -8.253860473632812
    6. ' h' → logprob: -9.003860473632812
    7. '   ' → logprob: -9.003860473632812
    8. 'def' → logprob: -9.253860473632812
    9. 'h' → logprob: -9.753860473632812
    10. 'if' → logprob: -9.878860473632812

Token 650: ' But' (ID: 3072)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.962737500667572
    2. 'height' → logprob: -1.2127375602722168
    3. '       ' → logprob: -1.3377375602722168
    4. '#' → logprob: -2.962737560272217
    5. 'def' → logprob: -5.962737560272217
    6. 'left' → logprob: -7.087737560272217
    7. 'import' → logprob: -7.337737560272217
    8. ' h' → logprob: -7.462737560272217
    9. '        
' → logprob: -8.087737083435059
    10. ' height' → logprob: -8.212737083435059

Token 651: ' more' (ID: 945)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7094281315803528
    2. '#' → logprob: -1.334428071975708
    3. ' h' → logprob: -2.459428071975708
    4. 'height' → logprob: -2.959428071975708
    5. ' if' → logprob: -3.209428071975708
    6. 'h' → logprob: -3.584428071975708
    7. 'if' → logprob: -4.334428310394287
    8. ' #' → logprob: -4.834428310394287
    9. ' height' → logprob: -4.834428310394287
    10. 'def' → logprob: -5.584428310394287

Token 652: ' precisely' (ID: 36960)
  Prédit: 'prec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prec' → logprob: -0.46602964401245117
    2. 'import' → logprob: -1.4660296440124512
    3. 'details' → logprob: -3.341029644012451
    4. '       ' → logprob: -3.841029644012451
    5. ':' → logprob: -4.091029644012451
    6. 'spec' → logprob: -4.466029644012451
    7. '_prec' → logprob: -4.841029644012451
    8. '   ' → logprob: -4.966029644012451
    9. 'explicit' → logprob: -5.216029644012451
    10. ' specifically' → logprob: -5.216029644012451

Token 653: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025518419221043587
    2. ',' → logprob: -4.275518417358398
    3. ' h' → logprob: -5.400518417358398
    4. '        
' → logprob: -5.900518417358398
    5. 'height' → logprob: -7.400518417358398
    6. ' height' → logprob: -8.150518417358398
    7. ')' → logprob: -8.275518417358398
    8. '
' → logprob: -8.400518417358398
    9. ' if' → logprob: -8.400518417358398
    10. ' left' → logprob: -8.775518417358398

Token 654: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1732300519943237
    2. 'height' → logprob: -1.4232300519943237
    3. '#' → logprob: -1.5482300519943237
    4. 'h' → logprob: -1.6732300519943237
    5. 'left' → logprob: -4.173230171203613
    6. 'time' → logprob: -4.423230171203613
    7. 'return' → logprob: -4.673230171203613
    8. ' height' → logprob: -5.423230171203613
    9. 'def' → logprob: -6.173230171203613
    10. ' h' → logprob: -6.298230171203613

Token 655: ' can' (ID: 665)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.6478825807571411
    2. '       ' → logprob: -1.7728825807571411
    3. '   ' → logprob: -2.8978824615478516
    4. '_' → logprob: -2.8978824615478516
    5. 'def' → logprob: -3.5228824615478516
    6. ' =' → logprob: -3.8978824615478516
    7. ' continue' → logprob: -3.8978824615478516
    8. '.' → logprob: -4.022882461547852
    9. 'need' → logprob: -4.272882461547852
    10. ' can' → logprob: -4.272882461547852

Token 656: ' do' (ID: 621)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.975454568862915
    2. 'def' → logprob: -1.225454568862915
    3. 'compute' → logprob: -2.475454568862915
    4. '       ' → logprob: -2.725454568862915
    5. 'calculate' → logprob: -2.850454568862915
    6. 'define' → logprob: -2.975454568862915
    7. '   ' → logprob: -4.350454330444336
    8. '#' → logprob: -4.600454330444336
    9. 'implement' → logprob: -4.725454330444336
    10. 'continue' → logprob: -4.975454330444336

Token 657: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1076124757528305
    2. '#' → logprob: -3.607612371444702
    3. 'left' → logprob: -3.857612371444702
    4. 'height' → logprob: -3.982612371444702
    5. '
' → logprob: -4.857612609863281
    6. 'return' → logprob: -4.982612609863281
    7. '```' → logprob: -5.607612609863281
    8. 'if' → logprob: -5.857612609863281
    9. 'time' → logprob: -5.982612609863281
    10. 'max' → logprob: -6.357612609863281

Token 658: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011620076838880777
    2. '        
' → logprob: -7.251162052154541
    3. ' h' → logprob: -9.376161575317383
    4. '```' → logprob: -9.751161575317383
    5. '   ' → logprob: -10.126161575317383
    6. ',' → logprob: -10.251161575317383
    7. 'height' → logprob: -10.376161575317383
    8. '#' → logprob: -10.376161575317383
    9. 'return' → logprob: -10.876161575317383
    10. 'h' → logprob: -11.376161575317383

Token 659: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007029946893453598
    2. 'h' → logprob: -6.632030010223389
    3. '        
' → logprob: -6.632030010223389
    4. 'height' → logprob: -7.132030010223389
    5. 'def' → logprob: -7.382030010223389
    6. ' h' → logprob: -7.382030010223389
    7. 'return' → logprob: -7.882030010223389
    8. 'if' → logprob: -8.13202953338623
    9. '   ' → logprob: -8.38202953338623
    10. '#' (adapté à ' #') → logprob: -8.50702953338623

Token 660: ' f' (ID: 285)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42376580834388733
    2. 'height' → logprob: -1.923765778541565
    3. 'h' → logprob: -2.2987658977508545
    4. 'def' → logprob: -2.9237658977508545
    5. '#' → logprob: -3.5487658977508545
    6. 'left' → logprob: -4.548765659332275
    7. '   ' → logprob: -6.673765659332275
    8. ' h' → logprob: -7.298765659332275
    9. 'class' → logprob: -7.298765659332275
    10. 'return' → logprob: -7.423765659332275

Token 661: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.6302220821380615
    2. '       ' → logprob: -1.7552220821380615
    3. 'def' → logprob: -2.7552220821380615
    4. '_' → logprob: -2.7552220821380615
    5. ' =' → logprob: -3.6302220821380615
    6. '_left' → logprob: -3.6302220821380615
    7. '_time' → logprob: -3.7552220821380615
    8. '_node' → logprob: -3.8802220821380615
    9. ',' → logprob: -4.005222320556641
    10. '_height' → logprob: -4.130222320556641

Token 662: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17778609693050385
    2. '       ' → logprob: -2.427786111831665
    3. ',' → logprob: -3.177786111831665
    4. '   ' → logprob: -3.802786111831665
    5. '):' → logprob: -5.677785873413086
    6. ')=' → logprob: -6.677785873413086
    7. ')
' → logprob: -7.177785873413086
    8. '),' → logprob: -7.427785873413086
    9. '(node' → logprob: -7.552785873413086
    10. ')_' → logprob: -7.552785873413086

Token 663: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6873562932014465
    2. ',' → logprob: -1.0623562335968018
    3. '       ' → logprob: -2.6873562335968018
    4. '=' → logprob: -2.9373562335968018
    5. ')' → logprob: -4.187356472015381
    6. 'def' → logprob: -5.062356472015381
    7. '   ' → logprob: -6.437356472015381
    8. 'import' → logprob: -6.812356472015381
    9. ':' → logprob: -7.187356472015381
    10. 'return' → logprob: -7.437356472015381

Token 664: ' time' (ID: 1058)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4253300726413727
    2. '2' → logprob: -1.4253300428390503
    3. '1' → logprob: -2.55033016204834
    4. 'min' → logprob: -4.42533016204834
    5. ' max' → logprob: -5.30033016204834
    6. 'time' → logprob: -5.42533016204834
    7. '(' → logprob: -5.67533016204834
    8. '(max' → logprob: -6.42533016204834
    9. ' ' → logprob: -7.92533016204834
    10. '   ' → logprob: -8.05033016204834

Token 665: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.010966229252517223
    2. ' +' → logprob: -6.5109663009643555
    3. 'left' → logprob: -6.5109663009643555
    4. ',' → logprob: -6.6359663009643555
    5. '       ' → logprob: -6.6359663009643555
    6. ' =' → logprob: -6.7609663009643555
    7. '_' → logprob: -6.7609663009643555
    8. '[node' → logprob: -7.0109663009643555
    9. '(node' → logprob: -7.8859663009643555
    10. '   ' → logprob: -8.010966300964355

Token 666: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2014162540435791
    2. '+' → logprob: -1.701416254043579
    3. '   ' → logprob: -14.076416015625
    4. ' ' → logprob: -14.951416015625
    5. '
' → logprob: -14.951416015625
    6. '*' → logprob: -15.076416015625
    7. '+
' → logprob: -15.201416015625
    8. ' +
' → logprob: -15.826416015625
    9. ')' → logprob: -15.951416015625
    10. '       ' → logprob: -15.951416015625

Token 667: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.6065279245376587
    2. ' time' → logprob: -0.8565279245376587
    3. '1' → logprob: -3.856527805328369
    4. ' ' → logprob: -4.981527805328369
    5. '2' → logprob: -6.356527805328369
    6. '   ' → logprob: -8.856528282165527
    7. ' +' → logprob: -9.731528282165527
    8. ' (' → logprob: -10.106528282165527
    9. '(' → logprob: -10.481528282165527
    10. '+' → logprob: -10.731528282165527

Token 668: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.001302022603340447
    2. '_' → logprob: -7.001302242279053
    3. '_left' → logprob: -8.001301765441895
    4. 'right' → logprob: -10.126301765441895
    5. '_down' → logprob: -12.376301765441895
    6. 'Right' → logprob: -13.126301765441895
    7. '_root' → logprob: -13.501301765441895
    8. '_sub' → logprob: -13.751301765441895
    9. '_next' → logprob: -14.376301765441895
    10. '_no' → logprob: -14.501301765441895

Token 669: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.006063174922019243
    2. '+' → logprob: -5.131062984466553
    3. '       ' → logprob: -9.006063461303711
    4. ')' → logprob: -12.506063461303711
    5. ' ' → logprob: -12.881063461303711
    6. '        ' → logprob: -13.006063461303711
    7. ' +
' → logprob: -14.006063461303711
    8. '*' → logprob: -14.631063461303711
    9. ' *' → logprob: -15.006063461303711
    10. '
' → logprob: -15.256063461303711

Token 670: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.23864634335041046
    2. ' ' → logprob: -1.863646388053894
    3. '1' → logprob: -2.8636462688446045
    4. '3' → logprob: -9.613646507263184
    5. '+' → logprob: -10.738646507263184
    6. '   ' → logprob: -11.363646507263184
    7. ' (' → logprob: -11.488646507263184
    8. ' +' → logprob: -11.738646507263184
    9. '(' → logprob: -12.238646507263184
    10. '4' → logprob: -12.238646507263184

Token 671: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0625666081905365
    2. '1' → logprob: -2.8125665187835693
    3. '3' → logprob: -7.562566757202148
    4. '(' → logprob: -10.062566757202148
    5. ' ' → logprob: -11.187566757202148
    6. '
' → logprob: -12.187566757202148
    7. '0' → logprob: -12.562566757202148
    8. '4' → logprob: -12.812566757202148
    9. '+' → logprob: -13.187566757202148
    10. 'min' → logprob: -13.750066757202148

Token 672: ' +' (ID: 659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4233783185482025
    2. ' +' → logprob: -1.673378348350525
    3. '<|end|>' → logprob: -2.5483782291412354
    4. '+' → logprob: -3.4233782291412354
    5. ')' → logprob: -4.1733784675598145
    6. '
' → logprob: -4.1733784675598145
    7. ' *' → logprob: -5.4233784675598145
    8. 'return' → logprob: -5.5483784675598145
    9. '*' → logprob: -6.0483784675598145
    10. '        ' → logprob: -6.4233784675598145

Token 673: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.6539499163627625
    2. 'max' → logprob: -0.7789499163627625
    3. ' min' → logprob: -4.653949737548828
    4. ' max' → logprob: -4.778949737548828
    5. '2' → logprob: -6.528949737548828
    6. '(min' → logprob: -7.153949737548828
    7. '(max' → logprob: -8.028949737548828
    8. 'abs' → logprob: -8.403949737548828
    9. '1' → logprob: -9.153949737548828
    10. '0' → logprob: -10.028949737548828

Token 674: '(time' (ID: 19192)
  Prédit: '(time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(time' → logprob: -0.13937552273273468
    2. '(' → logprob: -2.2643754482269287
    3. '(
' → logprob: -3.7643754482269287
    4. 'time' → logprob: -6.264375686645508
    5. '(min' → logprob: -7.764375686645508
    6. '(h' → logprob: -8.014375686645508
    7. '((' → logprob: -9.014375686645508
    8. '(left' → logprob: -9.389375686645508
    9. '(abs' → logprob: -9.639375686645508
    10. '(

' → logprob: -10.514375686645508

Token 675: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.007412347476929426
    2. '(left' → logprob: -5.507412433624268
    3. '(time' → logprob: -6.632412433624268
    4. '(' → logprob: -7.257412433624268
    5. '_right' → logprob: -7.257412433624268
    6. '(
' → logprob: -7.757412433624268
    7. 'left' → logprob: -9.38241195678711
    8. '(_' → logprob: -10.75741195678711
    9. '_' → logprob: -10.88241195678711
    10. 'Left' → logprob: -11.38241195678711

Token 676: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036752521991729736
    2. ' ,' → logprob: -6.12867546081543
    3. ',time' → logprob: -6.62867546081543
    4. ' +' → logprob: -9.25367546081543
    5. ',
' → logprob: -10.75367546081543
    6. '+' → logprob: -11.12867546081543
    7. ' -' → logprob: -11.50367546081543
    8. '   ' → logprob: -12.00367546081543
    9. 'time' → logprob: -12.25367546081543
    10. '       ' → logprob: -12.37867546081543

Token 677: ' time' (ID: 1058)
  Prédit: ' time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.5232167840003967
    2. 'time' → logprob: -0.8982167840003967
    3. '   ' → logprob: -9.77321720123291
    4. ' ' → logprob: -11.27321720123291
    5. '_time' → logprob: -12.39821720123291
    6. '	time' → logprob: -12.52321720123291
    7. '    ' → logprob: -12.64821720123291
    8. ' ' → logprob: -12.77321720123291
    9. '_' → logprob: -13.14821720123291
    10. '  ' → logprob: -13.52321720123291

Token 678: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.001991205383092165
    2. '_left' → logprob: -6.251991271972656
    3. 'right' → logprob: -11.001991271972656
    4. '_,' → logprob: -11.126991271972656
    5. '_' → logprob: -11.501991271972656
    6. ',' → logprob: -11.626991271972656
    7. ')' → logprob: -12.376991271972656
    8. 'Right' → logprob: -13.126991271972656
    9. ',right' → logprob: -13.376991271972656
    10. '_
' → logprob: -13.626991271972656

Token 679: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002236139727756381
    2. ',' → logprob: -6.252236366271973
    3. ' )' → logprob: -9.252236366271973
    4. ' -' → logprob: -9.502236366271973
    5. '   ' → logprob: -9.877236366271973
    6. '       ' → logprob: -10.502236366271973
    7. ')
' → logprob: -11.502236366271973
    8. ' +' → logprob: -11.502236366271973
    9. ',)' → logprob: -11.627236366271973
    10. '-' → logprob: -11.752236366271973

Token 680: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019387252628803253
    2. '
' → logprob: -4.769387245178223
    3. ' +' → logprob: -5.144387245178223
    4. ')' → logprob: -6.394387245178223
    5. '+' → logprob: -6.519387245178223
    6. 'return' → logprob: -7.269387245178223
    7. '<|end|>' → logprob: -7.519387245178223
    8. ' return' → logprob: -9.269387245178223
    9. '        
' → logprob: -9.769387245178223
    10. ',' → logprob: -10.019387245178223

Token 681: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01686563529074192
    2. '
' → logprob: -4.6418657302856445
    3. ')' → logprob: -5.6418657302856445
    4. 'return' → logprob: -6.7668657302856445
    5. '        
' → logprob: -7.5168657302856445
    6. '<|end|>' → logprob: -7.6418657302856445
    7. '+' → logprob: -7.7668657302856445
    8. ' +' → logprob: -8.266865730285645
    9. ',' → logprob: -9.266865730285645
    10. ' return' → logprob: -9.641865730285645

Token 682: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008629233576357365
    2. '<|end|>' → logprob: -5.008629322052002
    3. '
' → logprob: -7.508629322052002
    4. 'return' → logprob: -7.633629322052002
    5. '        
' → logprob: -8.133628845214844
    6. ' +' → logprob: -8.758628845214844
    7. '        ' → logprob: -9.383628845214844
    8. ' return' → logprob: -9.383628845214844
    9. '<|end|>' → logprob: -9.508628845214844
    10. ')' → logprob: -10.008628845214844

Token 683: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01858123391866684
    2. '<|end|>' → logprob: -4.893581390380859
    3. 'return' → logprob: -5.018581390380859
    4. ' return' → logprob: -6.768581390380859
    5. '
' → logprob: -7.018581390380859
    6. '        
' → logprob: -7.768581390380859
    7. ' if' → logprob: -7.893581390380859
    8. ' +' → logprob: -8.01858139038086
    9. '+' → logprob: -8.14358139038086
    10. ')' → logprob: -8.64358139038086

Token 684: ' Where' (ID: 16349)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32115399837493896
    2. 'result' → logprob: -2.1961541175842285
    3. 'time' → logprob: -3.1961541175842285
    4. 'res' → logprob: -3.5711541175842285
    5. ' res' → logprob: -3.9461541175842285
    6. ' result' → logprob: -4.0711541175842285
    7. 'self' → logprob: -4.0711541175842285
    8. ' time' → logprob: -4.4461541175842285
    9. 'total' → logprob: -4.4461541175842285
    10. 'save' → logprob: -5.3211541175842285

Token 685: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2686355113983154
    2. 'min' → logprob: -1.6436355113983154
    3. 'return' → logprob: -1.6436355113983154
    4. 'time' → logprob: -1.8936355113983154
    5. ' min' → logprob: -3.0186355113983154
    6. ' return' → logprob: -3.6436355113983154
    7. ' time' → logprob: -3.8936355113983154
    8. 'if' → logprob: -4.5186357498168945
    9. ' if' → logprob: -4.7686357498168945
    10. ')' → logprob: -4.8936357498168945

Token 686: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003965962678194046
    2. 'return' → logprob: -6.503965854644775
    3. '        ' → logprob: -6.878965854644775
    4. ' return' → logprob: -7.253965854644775
    5. '<|end|>' → logprob: -8.503966331481934
    6. ')' → logprob: -8.753966331481934
    7. '        
' → logprob: -9.128966331481934
    8. ' if' → logprob: -10.128966331481934
    9. ',' → logprob: -10.378966331481934
    10. 'space' → logprob: -10.628966331481934

Token 687: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032930902671068907
    2. ' h' → logprob: -7.253293037414551
    3. 'time' → logprob: -7.878293037414551
    4. '#' (adapté à ' #') → logprob: -8.50329303741455
    5. '        ' → logprob: -8.50329303741455
    6. 'h' → logprob: -8.62829303741455
    7. '        
' → logprob: -8.62829303741455
    8. 'return' → logprob: -8.75329303741455
    9. 'left' → logprob: -8.87829303741455
    10. ' time' → logprob: -8.87829303741455

Token 688: ' -' (ID: 533)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.7796474099159241
    2. 'height' → logprob: -0.7796474099159241
    3. '       ' → logprob: -3.2796473503112793
    4. 'time' → logprob: -4.529647350311279
    5. 'max' → logprob: -4.779647350311279
    6. 'left' → logprob: -4.779647350311279
    7. 'return' → logprob: -5.154647350311279
    8. '#' → logprob: -5.279647350311279
    9. 'min' → logprob: -5.904647350311279
    10. 'depth' → logprob: -7.154647350311279

Token 689: ' The' (ID: 623)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.41199007630348206
    2. 'h' → logprob: -1.2869900465011597
    3. '#' → logprob: -4.161990165710449
    4. 'time' → logprob: -4.286990165710449
    5. '       ' → logprob: -4.536990165710449
    6. 'left' → logprob: -5.036990165710449
    7. 'max' → logprob: -5.411990165710449
    8. ' height' → logprob: -6.286990165710449
    9. 'def' → logprob: -6.786990165710449
    10. 'he' → logprob: -6.786990165710449

Token 690: ' "+' (ID: 10953)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2511610984802246
    2. 'h' → logprob: -1.3761610984802246
    3. '       ' → logprob: -1.8761610984802246
    4. 'height' → logprob: -2.0011610984802246
    5. 'time' → logprob: -2.7511610984802246
    6. 'left' → logprob: -3.6261610984802246
    7. '   ' → logprob: -4.751161098480225
    8. 'max' → logprob: -4.751161098480225
    9. 'node' → logprob: -4.876161098480225
    10. 'def' → logprob: -5.376161098480225

Token 691: '1' (ID: 16)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.6777364611625671
    2. 'min' → logprob: -1.052736520767212
    3. '1' → logprob: -2.052736520767212
    4. '(min' → logprob: -5.177736282348633
    5. ' ' → logprob: -5.302736282348633
    6. ' time' → logprob: -6.302736282348633
    7. 'time' → logprob: -7.052736282348633
    8. '   ' → logprob: -8.177736282348633
    9. '`' → logprob: -8.552736282348633
    10. ' (' → logprob: -8.927736282348633

Token 692: '"' (ID: 1)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3614686131477356
    2. ')' → logprob: -1.6114685535430908
    3. '"' → logprob: -2.986468553543091
    4. ' "' → logprob: -3.986468553543091
    5. ' )' → logprob: -4.36146879196167
    6. ' ' → logprob: -4.98646879196167
    7. ' #' → logprob: -5.11146879196167
    8. '       ' → logprob: -6.11146879196167
    9. '
' → logprob: -6.23646879196167
    10. '+' → logprob: -7.11146879196167

Token 693: ' cost' (ID: 3097)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5554899573326111
    2. '+' → logprob: -1.6804900169372559
    3. '<|end|>' → logprob: -2.305490016937256
    4. ')' → logprob: -2.805490016937256
    5. ' #' → logprob: -4.055490016937256
    6. '       ' → logprob: -4.055490016937256
    7. '#' → logprob: -4.430490016937256
    8. ' ' → logprob: -4.805490016937256
    9. '<|end|>' → logprob: -5.180490016937256
    10. ' is' → logprob: -5.555490016937256

Token 694: ' is' (ID: 382)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4466221034526825
    2. ' to' → logprob: -2.321622133255005
    3. ' is' → logprob: -2.946622133255005
    4. 'for' → logprob: -2.946622133255005
    5. '       ' → logprob: -3.196622133255005
    6. ')' → logprob: -3.321622133255005
    7. '   ' → logprob: -3.946622133255005
    8. '<|end|>' → logprob: -4.821621894836426
    9. 'to' → logprob: -4.946621894836426
    10. ' ' → logprob: -5.071621894836426

Token 695: ' the' (ID: 290)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.17012940347194672
    2. 'for' → logprob: -2.9201292991638184
    3. '1' → logprob: -3.4201292991638184
    4. ' to' → logprob: -3.5451292991638184
    5. ' (' → logprob: -4.920129299163818
    6. ' ' → logprob: -4.920129299163818
    7. '<|end|>' → logprob: -5.045129299163818
    8. '(' → logprob: -5.545129299163818
    9. ')' → logprob: -5.795129299163818
    10. ' between' → logprob: -6.045129299163818

Token 696: ' edge' (ID: 11165)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7865850329399109
    2. ' move' → logprob: -1.4115850925445557
    3. ' edge' → logprob: -2.7865850925445557
    4. ' ' → logprob: -3.2865850925445557
    5. ' moving' → logprob: -3.6615850925445557
    6. ' traversal' → logprob: -3.9115850925445557
    7. ' movement' → logprob: -4.161584854125977
    8. ' edges' → logprob: -4.536584854125977
    9. ' branching' → logprob: -4.536584854125977
    10. ' return' → logprob: -4.786584854125977

Token 697: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.39627698063850403
    2. 'to' → logprob: -1.3962769508361816
    3. 'from' → logprob: -3.7712769508361816
    4. '_to' → logprob: -3.8962769508361816
    5. ' between' → logprob: -4.021276950836182
    6. '+' → logprob: -5.146276950836182
    7. ')' → logprob: -5.521276950836182
    8. ' from' → logprob: -5.896276950836182
    9. ' +' → logprob: -6.271276950836182
    10. '   ' → logprob: -7.146276950836182

Token 698: ' branch' (ID: 14338)
  Prédit: 'go'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'go' → logprob: -1.6010445356369019
    2. 'move' → logprob: -1.6010445356369019
    3. 'connect' → logprob: -1.8510445356369019
    4. 'left' → logprob: -2.2260446548461914
    5. ' move' → logprob: -2.3510446548461914
    6. 'visit' → logprob: -2.7260446548461914
    7. 'reach' → logprob: -2.9760446548461914
    8. 'tr' → logprob: -3.9760446548461914
    9. ' go' → logprob: -4.351044654846191
    10. 'the' → logprob: -4.476044654846191

Token 699: ' out' (ID: 842)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.8129030466079712
    2. '       ' → logprob: -0.9379030466079712
    3. '_point' → logprob: -1.9379030466079712
    4. 'ing' → logprob: -5.312902927398682
    5. '_points' → logprob: -5.562902927398682
    6. '   ' → logprob: -5.937902927398682
    7. ')' → logprob: -6.062902927398682
    8. '_to' → logprob: -6.812902927398682
    9. '_' → logprob: -7.187902927398682
    10. 'points' → logprob: -7.437902927398682

Token 700: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3394424021244049
    2. ' +' → logprob: -1.4644423723220825
    3. '+' → logprob: -3.089442491531372
    4. ')' → logprob: -5.339442253112793
    5. '   ' → logprob: -5.964442253112793
    6. ' to' → logprob: -7.339442253112793
    7. 'from' → logprob: -7.464442253112793
    8. '           ' → logprob: -7.589442253112793
    9. '```' → logprob: -7.839442253112793
    10. ' plus' → logprob: -8.089442253112793

Token 701: ' the' (ID: 290)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.09908156841993332
    2. 'either' → logprob: -3.349081516265869
    3. 'the' → logprob: -3.724081516265869
    4. ' left' → logprob: -4.849081516265869
    5. 'visit' → logprob: -5.099081516265869
    6. 'both' → logprob: -5.599081516265869
    7. ' either' → logprob: -5.599081516265869
    8. 'one' → logprob: -5.974081516265869
    9. 'go' → logprob: -6.099081516265869
    10. 'child' → logprob: -6.349081516265869

Token 702: ' second' (ID: 3099)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.16014429926872253
    2. ' left' → logprob: -2.785144329071045
    3. 'child' → logprob: -3.410144329071045
    4. 'children' → logprob: -4.160144329071045
    5. 'right' → logprob: -4.660144329071045
    6. 'branch' → logprob: -5.410144329071045
    7. 'yes' → logprob: -5.535144329071045
    8. 'saved' → logprob: -5.535144329071045
    9. 'next' → logprob: -5.785144329071045
    10. 'quick' → logprob: -6.160144329071045

Token 703: ' child' (ID: 2320)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.8036178946495056
    2. ' child' → logprob: -1.3036179542541504
    3. '_child' → logprob: -1.4286179542541504
    4. 'branch' → logprob: -4.55361795425415
    5. '_sub' → logprob: -4.80361795425415
    6. ' subtree' → logprob: -5.42861795425415
    7. '_target' → logprob: -5.80361795425415
    8. '"' → logprob: -6.05361795425415
    9. '_branch' → logprob: -6.17861795425415
    10. 'sub' → logprob: -6.30361795425415

Token 704: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1958075761795044
    2. ' +' → logprob: -1.8208075761795044
    3. '+' → logprob: -4.445807456970215
    4. ')' → logprob: -5.695807456970215
    5. '        ' → logprob: -8.445807456970215
    6. ',' → logprob: -9.320807456970215
    7. 'return' → logprob: -9.320807456970215
    8. ')+' → logprob: -9.820807456970215
    9. ' and' → logprob: -9.945807456970215
    10. '   ' → logprob: -10.320807456970215

Token 705: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000799384550191462
    2. '        
' → logprob: -8.500799179077148
    3. ')' → logprob: -8.625799179077148
    4. '   ' → logprob: -9.375799179077148
    5. 'return' → logprob: -9.375799179077148
    6. '        ' → logprob: -9.750799179077148
    7. '<|end|>' → logprob: -9.750799179077148
    8. ',' → logprob: -11.000799179077148
    9. '           ' → logprob: -11.000799179077148
    10. '```' → logprob: -11.125799179077148

Token 706: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007154120248742402
    2. '        
' → logprob: -8.125715255737305
    3. 'return' → logprob: -9.750715255737305
    4. ',' → logprob: -9.750715255737305
    5. '+' → logprob: -10.125715255737305
    6. ')' → logprob: -10.500715255737305
    7. ' +' → logprob: -10.625715255737305
    8. '        ' → logprob: -10.750715255737305
    9. '   ' → logprob: -10.750715255737305
    10. '        

' → logprob: -10.750715255737305

Token 707: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010821543633937836
    2. 'result' → logprob: -6.010821342468262
    3. 'time' → logprob: -6.260821342468262
    4. 'return' → logprob: -6.510821342468262
    5. 'self' → logprob: -6.635821342468262
    6. ')' → logprob: -7.135821342468262
    7. ' time' → logprob: -7.260821342468262
    8. '        
' → logprob: -8.010821342468262
    9. ' result' → logprob: -8.260821342468262
    10. ' self' → logprob: -8.260821342468262

Token 708: ' Using' (ID: 17511)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.0662978887557983
    2. 'result' → logprob: -1.3162978887557983
    3. 'self' → logprob: -2.191298007965088
    4. 'total' → logprob: -2.316298007965088
    5. 'return' → logprob: -3.066298007965088
    6. 'time' → logprob: -3.441298007965088
    7. 'min' → logprob: -3.941298007965088
    8. '       ' → logprob: -4.066298007965088
    9. 'best' → logprob: -4.316298007965088
    10. ' res' → logprob: -4.441298007965088

Token 709: ' quick' (ID: 4853)
  Prédit: ' quick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' quick' → logprob: -0.5946141481399536
    2. ' min' → logprob: -1.5946141481399536
    3. ' the' → logprob: -2.344614028930664
    4. 'min' → logprob: -3.219614028930664
    5. 'quick' → logprob: -3.594614028930664
    6. ' a' → logprob: -3.719614028930664
    7. 'the' → logprob: -4.219614028930664
    8. ' saved' → logprob: -4.344614028930664
    9. ' one' → logprob: -4.719614028930664
    10. ' minimal' → logprob: -5.594614028930664

Token 710: ' save' (ID: 5093)
  Prédit: '_save'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_save' → logprob: -0.011538282968103886
    2. 'save' → logprob: -5.011538505554199
    3. ' _' → logprob: -6.386538505554199
    4. ' save' → logprob: -6.511538505554199
    5. '_' → logprob: -6.761538505554199
    6. 'Save' → logprob: -7.886538505554199
    7. ' Save' → logprob: -10.3865385055542
    8. '_s' → logprob: -10.5115385055542
    9. '       ' → logprob: -11.7615385055542
    10. '_Save' → logprob: -11.8865385055542

Token 711: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21626977622509003
    2. '       ' → logprob: -2.9662697315216064
    3. ' +' → logprob: -3.2162697315216064
    4. ' =' → logprob: -3.3412697315216064
    5. '   ' → logprob: -4.3412699699401855
    6. ',' → logprob: -5.0912699699401855
    7. '=' → logprob: -5.0912699699401855
    8. ' )' → logprob: -5.3412699699401855
    9. ' if' → logprob: -5.5912699699401855
    10. ' is' → logprob: -5.5912699699401855

Token 712: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7117304801940918
    2. ' return' → logprob: -1.7117304801940918
    3. 'return' → logprob: -1.7117304801940918
    4. 'result' → logprob: -3.336730480194092
    5. ' self' → logprob: -3.586730480194092
    6. 'self' → logprob: -3.711730480194092
    7. ' result' → logprob: -3.711730480194092
    8. ' time' → logprob: -4.211730480194092
    9. ' if' → logprob: -5.086730480194092
    10. 'time' → logprob: -5.336730480194092

Token 713: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.055361755192279816
    2. 'can' → logprob: -3.055361747741699
    3. ' save' → logprob: -6.805361747741699
    4. ' use' → logprob: -7.180361747741699
    5. ')' → logprob: -7.680361747741699
    6. '       ' → logprob: -7.805361747741699
    7. 'save' → logprob: -7.805361747741699
    8. ' minimize' → logprob: -7.805361747741699
    9. ' continue' → logprob: -7.930361747741699
    10. 'return' → logprob: -8.0553617477417

Token 714: ' save' (ID: 5093)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.9845443964004517
    2. 'skip' → logprob: -1.9845443964004517
    3. ' save' → logprob: -2.359544277191162
    4. 'choose' → logprob: -2.609544277191162
    5. 'save' → logprob: -2.609544277191162
    6. 'jump' → logprob: -2.734544277191162
    7. 'reuse' → logprob: -2.859544277191162
    8. ' skip' → logprob: -2.859544277191162
    9. ' return' → logprob: -2.984544277191162
    10. ' jump' → logprob: -2.984544277191162

Token 715: ' right' (ID: 1849)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.4059930145740509
    2. ' the' → logprob: -2.4059929847717285
    3. ' one' → logprob: -2.4059929847717285
    4. 'min' → logprob: -2.6559929847717285
    5. ' time' → logprob: -3.1559929847717285
    6. 'time' → logprob: -3.9059929847717285
    7. ' max' → logprob: -5.2809929847717285
    8. 'the' → logprob: -5.2809929847717285
    9. ' on' → logprob: -6.1559929847717285
    10. '(min' → logprob: -6.2809929847717285

Token 716: ' after' (ID: 1934)
  Prédit: '_target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_target' → logprob: -0.5073366165161133
    2. '_child' → logprob: -1.7573366165161133
    3. ')' → logprob: -2.7573366165161133
    4. 'child' → logprob: -3.5073366165161133
    5. 'point' → logprob: -3.8823366165161133
    6. ' child' → logprob: -4.257336616516113
    7. ' or' → logprob: -4.257336616516113
    8. ' at' → logprob: -4.507336616516113
    9. '_point' → logprob: -4.507336616516113
    10. '-target' → logprob: -4.757336616516113

Token 717: ' completing' (ID: 35133)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.48291635513305664
    2. 'vis' → logprob: -2.7329163551330566
    3. ' finishing' → logprob: -2.9829163551330566
    4. 'expl' → logprob: -2.9829163551330566
    5. 'going' → logprob: -3.1079163551330566
    6. ' visiting' → logprob: -3.2329163551330566
    7. 'the' → logprob: -3.8579163551330566
    8. 'moving' → logprob: -3.8579163551330566
    9. 're' → logprob: -3.9829163551330566
    10. ' returning' → logprob: -4.607916355133057

Token 718: ' the' (ID: 290)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -1.2357728481292725
    2. ' one' → logprob: -1.4857728481292725
    3. ' left' → logprob: -1.6107728481292725
    4. ' the' → logprob: -1.9857728481292725
    5. 'the' → logprob: -2.2357728481292725
    6. 'one' → logprob: -3.7357728481292725
    7. '   ' → logprob: -5.485773086547852
    8. 'time' → logprob: -5.860773086547852
    9. ' either' → logprob: -6.110773086547852
    10. ' time' → logprob: -6.235773086547852

Token 719: ' first' (ID: 1577)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.04533471167087555
    2. ' left' → logprob: -4.045334815979004
    3. 'first' → logprob: -4.170334815979004
    4. 'right' → logprob: -5.045334815979004
    5. 'no' → logprob: -6.670334815979004
    6. 'time' → logprob: -6.920334815979004
    7. ' first' → logprob: -7.170334815979004
    8. 'yes' → logprob: -7.295334815979004
    9. 'child' → logprob: -8.670334815979004
    10. ' right' → logprob: -8.795334815979004

Token 720: ' subtree' (ID: 126158)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.029548434540629387
    2. ' child' → logprob: -3.904548406600952
    3. ' subtree' → logprob: -5.154548645019531
    4. 'sub' → logprob: -6.404548645019531
    5. ' child's' → logprob: -7.279548645019531
    6. '_child' → logprob: -7.654548645019531
    7. 'branch' → logprob: -8.404548645019531
    8. '_sub' → logprob: -10.154548645019531
    9. 'visited' → logprob: -10.654548645019531
    10. ' branch' → logprob: -11.404548645019531

Token 721: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008001456968486309
    2. ' +' → logprob: -6.258001327514648
    3. '+' → logprob: -6.508001327514648
    4. '
' → logprob: -6.633001327514648
    5. ')' → logprob: -6.758001327514648
    6. ',' → logprob: -7.258001327514648
    7. '        
' → logprob: -7.383001327514648
    8. '<|end|>' → logprob: -8.758001327514648
    9. 'return' → logprob: -9.383001327514648
    10. ')
' → logprob: -9.758001327514648

Token 722: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006330448668450117
    2. 'return' → logprob: -6.006330490112305
    3. ' and' → logprob: -6.631330490112305
    4. ')' → logprob: -7.006330490112305
    5. '           ' → logprob: -7.256330490112305
    6. ' return' → logprob: -8.006330490112305
    7. ' +' → logprob: -8.756330490112305
    8. '   ' → logprob: -9.506330490112305
    9. ' then' → logprob: -9.506330490112305
    10. '               ' → logprob: -9.631330490112305

Token 723: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003957055509090424
    2. '           ' → logprob: -6.628957271575928
    3. ' and' → logprob: -7.128957271575928
    4. ' +' → logprob: -7.378957271575928
    5. 'return' → logprob: -7.753957271575928
    6. '+' → logprob: -8.00395679473877
    7. '   ' → logprob: -8.87895679473877
    8. '#' (adapté à ' #') → logprob: -9.37895679473877
    9. '               ' → logprob: -9.75395679473877
    10. 'and' → logprob: -10.12895679473877

Token 724: '  ' (ID: 256)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003102969378232956
    2. '           ' → logprob: -6.378102779388428
    3. 'return' → logprob: -7.753102779388428
    4. '   ' → logprob: -8.503103256225586
    5. ' +' → logprob: -8.628103256225586
    6. ' and' → logprob: -8.628103256225586
    7. ' return' → logprob: -8.878103256225586
    8. '+' → logprob: -9.128103256225586
    9. '               ' → logprob: -9.503103256225586
    10. '        
' → logprob: -11.003103256225586

Token 725: ' then' (ID: 1815)
  Prédit: ' then'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' then' → logprob: -0.5924183130264282
    2. '       ' → logprob: -2.0924181938171387
    3. 'then' (adapté à ' then') → logprob: -2.3424181938171387
    4. ' and' → logprob: -2.7174181938171387
    5. 'and' → logprob: -2.9674181938171387
    6. ' allowing' → logprob: -3.7174181938171387
    7. ' so' → logprob: -3.8424181938171387
    8. 'return' → logprob: -3.9674181938171387
    9. '#' → logprob: -4.217418193817139
    10. ' return' → logprob: -4.717418193817139

Token 726: ' jump' (ID: 13843)
  Prédit: ' jump'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' jump' → logprob: -0.23987868428230286
    2. 'jump' → logprob: -2.2398786544799805
    3. ' return' → logprob: -3.6148786544799805
    4. ' revisit' → logprob: -3.8648786544799805
    5. ' use' → logprob: -4.3648786544799805
    6. 'return' → logprob: -4.4898786544799805
    7. 'use' → logprob: -5.4898786544799805
    8. ' go' → logprob: -5.4898786544799805
    9. 'quick' → logprob: -5.6148786544799805
    10. 'go' → logprob: -5.9898786544799805

Token 727: ' quickly' (ID: 8065)
  Prédit: ' back'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' back' → logprob: -0.46871379017829895
    2. 'to' → logprob: -1.7187137603759766
    3. ' to' → logprob: -2.0937137603759766
    4. 'back' → logprob: -2.7187137603759766
    5. '   ' → logprob: -5.718713760375977
    6. 'right' → logprob: -7.093713760375977
    7. 'from' → logprob: -7.718713760375977
    8. ' right' → logprob: -8.718713760375977
    9. '       ' → logprob: -8.843713760375977
    10. '           ' → logprob: -8.843713760375977

Token 728: ' back' (ID: 1602)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.2187189757823944
    2. ' back' → logprob: -2.343719005584717
    3. 'to' → logprob: -2.468719005584717
    4. 'back' → logprob: -5.343719005584717
    5. '       ' → logprob: -5.468719005584717
    6. '   ' → logprob: -5.593719005584717
    7. '+' → logprob: -6.968719005584717
    8. ' +' → logprob: -7.343719005584717
    9. 'from' → logprob: -7.843719005584717
    10. '_back' → logprob: -7.843719005584717

Token 729: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.331869512796402
    2. '       ' → logprob: -1.3318694829940796
    3. 'to' → logprob: -4.206869602203369
    4. ' and' → logprob: -6.831869602203369
    5. ' after' → logprob: -6.956869602203369
    6. '   ' → logprob: -6.956869602203369
    7. ' +' → logprob: -8.581869125366211
    8. '+' → logprob: -9.206869125366211
    9. 'and' → logprob: -9.831869125366211
    10. '           ' → logprob: -9.956869125366211

Token 730: ' that' (ID: 484)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.39930081367492676
    2. 'the' → logprob: -1.1493008136749268
    3. 'left' → logprob: -5.149300575256348
    4. ' left' → logprob: -7.024300575256348
    5. ' node' → logprob: -7.399300575256348
    6. 'node' → logprob: -7.649300575256348
    7. 'right' → logprob: -7.649300575256348
    8. 'first' → logprob: -7.774300575256348
    9. '1' → logprob: -7.899300575256348
    10. 'start' → logprob: -8.024300575256348

Token 731: ' branching' (ID: 173776)
  Prédit: ' subtree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' subtree' → logprob: -0.2588905990123749
    2. 'sub' → logprob: -3.1338906288146973
    3. 'point' → logprob: -3.1338906288146973
    4. 'child' → logprob: -3.3838906288146973
    5. '_sub' → logprob: -3.5088906288146973
    6. '
' → logprob: -3.8838906288146973
    7. ' point' → logprob: -4.008890628814697
    8. ' child' → logprob: -4.383890628814697
    9. '   ' → logprob: -4.508890628814697
    10. '_child' → logprob: -6.008890628814697

Token 732: ' point' (ID: 2438)
  Prédit: '_point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.10992440581321716
    2. 'point' → logprob: -2.73492431640625
    3. '_' → logprob: -3.85992431640625
    4. ' point' → logprob: -4.35992431640625
    5. '       ' → logprob: -5.35992431640625
    6. '_
' → logprob: -7.98492431640625
    7. '_points' → logprob: -9.23492431640625
    8. ' _' → logprob: -9.73492431640625
    9. '   ' → logprob: -10.35992431640625
    10. '           ' → logprob: -10.48492431640625

Token 733: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19530436396598816
    2. ' +' → logprob: -1.9453043937683105
    3. '+' → logprob: -3.9453043937683105
    4. ')' → logprob: -4.4453043937683105
    5. '
' → logprob: -6.8203043937683105
    6. 'return' → logprob: -7.5703043937683105
    7. '   ' → logprob: -8.445303916931152
    8. '        ' → logprob: -8.820303916931152
    9. ',' → logprob: -8.820303916931152
    10. ' ' → logprob: -8.820303916931152

Token 734: ' play' (ID: 2107)
  Prédit: ' explore'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' explore' → logprob: -1.2594882249832153
    2. ' then' → logprob: -1.8844882249832153
    3. ' complete' → logprob: -2.009488105773926
    4. 'expl' → logprob: -2.134488105773926
    5. ' continue' → logprob: -2.634488105773926
    6. 'complete' → logprob: -2.759488105773926
    7. 'then' → logprob: -3.384488105773926
    8. ' finish' → logprob: -3.634488105773926
    9. 'continue' → logprob: -3.759488105773926
    10. '   ' → logprob: -4.009488105773926

Token 735: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.757448136806488
    2. '   ' → logprob: -2.132448196411133
    3. '       ' → logprob: -2.257448196411133
    4. 'the' → logprob: -2.632448196411133
    5. ' out' → logprob: -2.632448196411133
    6. 'out' → logprob: -2.757448196411133
    7. 'down' → logprob: -4.132448196411133
    8. 'through' → logprob: -4.257448196411133
    9. 'from' → logprob: -4.507448196411133
    10. ' on' → logprob: -4.757448196411133

Token 736: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.979498028755188
    2. 'other' → logprob: -1.354498028755188
    3. ' first' → logprob: -2.2294979095458984
    4. 'second' → logprob: -2.8544979095458984
    5. ' second' → logprob: -3.3544979095458984
    6. 'left' → logprob: -3.3544979095458984
    7. ' left' → logprob: -3.3544979095458984
    8. 'first' → logprob: -3.3544979095458984
    9. ' saved' → logprob: -4.354497909545898
    10. 'quick' → logprob: -4.854497909545898

Token 737: ' subtree' (ID: 126158)
  Prédit: ' subtree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' subtree' → logprob: -0.8590231537818909
    2. '_sub' → logprob: -1.359023094177246
    3. 'sub' → logprob: -1.984023094177246
    4. 'child' → logprob: -1.984023094177246
    5. '_child' → logprob: -3.359023094177246
    6. ' +' → logprob: -5.609023094177246
    7. '_' → logprob: -6.359023094177246
    8. ' child' → logprob: -6.484023094177246
    9. '+' → logprob: -6.859023094177246
    10. '   ' → logprob: -7.609023094177246

Token 738: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01279815286397934
    2. '
' → logprob: -5.012798309326172
    3. ' +' → logprob: -6.512798309326172
    4. '+' → logprob: -6.512798309326172
    5. '        
' → logprob: -6.762798309326172
    6. ')' → logprob: -7.387798309326172
    7. '<|end|>' → logprob: -8.137798309326172
    8. ',' → logprob: -8.387798309326172
    9. '        

' → logprob: -9.012798309326172
    10. 'return' → logprob: -9.012798309326172

Token 739: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009502008557319641
    2. ')' → logprob: -5.259501934051514
    3. '
' → logprob: -6.134501934051514
    4. ' +' → logprob: -7.509501934051514
    5. '        
' → logprob: -8.009502410888672
    6. 'return' → logprob: -8.134502410888672
    7. '   ' → logprob: -8.759502410888672
    8. '+' → logprob: -8.884502410888672
    9. ',' → logprob: -9.009502410888672
    10. '<|end|>' → logprob: -9.259502410888672

Token 740: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03838157653808594
    2. ' +' → logprob: -4.288381576538086
    3. ')' → logprob: -4.413381576538086
    4. '+' → logprob: -4.663381576538086
    5. 'return' → logprob: -7.538381576538086
    6. '        ' → logprob: -8.538381576538086
    7. '#' (adapté à ' #') → logprob: -8.788381576538086
    8. '
' → logprob: -8.913381576538086
    9. ',' → logprob: -8.913381576538086
    10. '   ' → logprob: -9.038381576538086

Token 741: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003238555509597063
    2. ')' → logprob: -7.003238677978516
    3. '
' → logprob: -7.253238677978516
    4. '        
' → logprob: -7.878238677978516
    5. 'return' → logprob: -8.378238677978516
    6. '   ' → logprob: -8.503238677978516
    7. ',' → logprob: -9.253238677978516
    8. 'time' → logprob: -9.378238677978516
    9. ')
' → logprob: -9.628238677978516
    10. '+' → logprob: -9.753238677978516

Token 742: ' So' (ID: 2632)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.2193896770477295
    2. 'result' → logprob: -1.2193896770477295
    3. '       ' → logprob: -1.5943896770477295
    4. 'time' → logprob: -2.8443896770477295
    5. 'total' → logprob: -3.4693896770477295
    6. ' result' → logprob: -3.4693896770477295
    7. ' self' → logprob: -3.7193896770477295
    8. 'res' → logprob: -4.094389915466309
    9. '
' → logprob: -4.844389915466309
    10. 'return' → logprob: -5.094389915466309

Token 743: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2743849754333496
    2. ' time' → logprob: -3.0243849754333496
    3. ' result' → logprob: -3.2743849754333496
    4. 'return' → logprob: -3.5243849754333496
    5. 'result' → logprob: -3.5243849754333496
    6. 'time' → logprob: -3.6493849754333496
    7. ' return' → logprob: -4.27438497543335
    8. ' self' → logprob: -4.89938497543335
    9. '
' → logprob: -4.89938497543335
    10. 'self' → logprob: -5.02438497543335

Token 744: ' add' (ID: 1147)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7071030139923096
    2. '       ' → logprob: -1.3321030139923096
    3. ' +' → logprob: -2.0821030139923096
    4. ')' → logprob: -3.7071030139923096
    5. 'return' → logprob: -3.9571030139923096
    6. '   ' → logprob: -4.2071027755737305
    7. ' return' → logprob: -4.4571027755737305
    8. '*' → logprob: -5.0821027755737305
    9. ' ' → logprob: -5.0821027755737305
    10. ' *' → logprob: -5.0821027755737305

Token 745: ' the' (ID: 290)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.020788628607988358
    2. 'min' → logprob: -3.8957886695861816
    3. ' max' → logprob: -9.020788192749023
    4. '   ' → logprob: -10.020788192749023
    5. ' time' → logprob: -10.520788192749023
    6. '1' → logprob: -10.770788192749023
    7. '(min' → logprob: -11.645788192749023
    8. ' ' → logprob: -12.020788192749023
    9. 'max' → logprob: -12.145788192749023
    10. '	min' → logprob: -12.895788192749023

Token 746: ' minimal' (ID: 19957)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.18167464435100555
    2. 'min' → logprob: -1.806674599647522
    3. ' ' → logprob: -7.806674480438232
    4. ' time' → logprob: -7.806674480438232
    5. '1' → logprob: -7.931674480438232
    6. '(min' → logprob: -8.68167495727539
    7. '_min' → logprob: -9.05667495727539
    8. 'time' → logprob: -9.43167495727539
    9. ' minimal' → logprob: -9.43167495727539
    10. ' max' → logprob: -9.80667495727539

Token 747: ' of' (ID: 328)
  Prédit: '(time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(time' → logprob: -0.04330437630414963
    2. '(' → logprob: -3.293304443359375
    3. '(left' → logprob: -6.043304443359375
    4. 'time' → logprob: -6.543304443359375
    5. '(
' → logprob: -7.043304443359375
    6. ' time' → logprob: -8.918304443359375
    7. '(min' → logprob: -9.043304443359375
    8. 'of' → logprob: -9.418304443359375
    9. ' (' → logprob: -9.543304443359375
    10. ' of' → logprob: -9.793304443359375

Token 748: ' time' (ID: 1058)
  Prédit: '(time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(time' → logprob: -0.3677280843257904
    2. 'time' → logprob: -1.8677281141281128
    3. '(' → logprob: -1.9927281141281128
    4. ' time' → logprob: -4.367728233337402
    5. ' (' → logprob: -5.617728233337402
    6. '(
' → logprob: -8.492728233337402
    7. '   ' → logprob: -9.242728233337402
    8. ' ' → logprob: -9.992728233337402
    9. '(min' → logprob: -10.242728233337402
    10. '"time' → logprob: -10.242728233337402

Token 749: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -2.3557529857498594e-05
    2. '_' → logprob: -11.62502384185791
    3. '_right' → logprob: -11.62502384185791
    4. 'left' → logprob: -13.12502384185791
    5. '(left' → logprob: -14.12502384185791
    6. '   ' → logprob: -14.37502384185791
    7. '[left' → logprob: -14.62502384185791
    8. 'Left' → logprob: -14.75002384185791
    9. '(' → logprob: -15.12502384185791
    10. '```' → logprob: -15.50002384185791

Token 750: ' and' (ID: 326)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.11473551392555237
    2. '+' → logprob: -2.8647356033325195
    3. ',' → logprob: -3.7397356033325195
    4. ')' → logprob: -4.4897356033325195
    5. '       ' → logprob: -4.8647356033325195
    6. '   ' → logprob: -5.9897356033325195
    7. ' if' → logprob: -6.6147356033325195
    8. ')+' → logprob: -6.8647356033325195
    9. ' and' → logprob: -6.9897356033325195
    10. ' or' → logprob: -7.4897356033325195

Token 751: ' time' (ID: 1058)
  Prédit: ' time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.6328408718109131
    2. 'time' → logprob: -0.7578408718109131
    3. '   ' → logprob: -9.007841110229492
    4. ' ' → logprob: -10.507841110229492
    5. '(time' → logprob: -10.882841110229492
    6. '_time' → logprob: -11.257841110229492
    7. '	time' → logprob: -11.257841110229492
    8. 'space' → logprob: -11.507841110229492
    9. '_' → logprob: -11.882841110229492
    10. '"' → logprob: -12.007841110229492

Token 752: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -1.0683535037969705e-05
    2. 'right' → logprob: -11.87501049041748
    3. '_' → logprob: -13.00001049041748
    4. '_left' → logprob: -13.75001049041748
    5. 'Right' → logprob: -16.250011444091797
    6. '_r' → logprob: -16.375011444091797
    7. ' _' → logprob: -16.375011444091797
    8. '_
' → logprob: -17.875011444091797
    9. '
' → logprob: -18.000011444091797
    10. 'r' → logprob: -18.000011444091797

Token 753: ' because' (ID: 2236)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025783920660614967
    2. ' +' → logprob: -4.525784015655518
    3. '
' → logprob: -4.775784015655518
    4. ')' → logprob: -6.150784015655518
    5. '+' → logprob: -6.400784015655518
    6. '        
' → logprob: -7.275784015655518
    7. ',' → logprob: -7.775784015655518
    8. '        ' → logprob: -8.65078353881836
    9. 'return' → logprob: -9.02578353881836
    10. ' =' → logprob: -9.02578353881836

Token 754: ' we' (ID: 581)
  Prédit: ' time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -1.0862845182418823
    2. ' the' → logprob: -1.9612845182418823
    3. ' we' → logprob: -2.211284637451172
    4. ' ' → logprob: -2.336284637451172
    5. ' '' → logprob: -2.836284637451172
    6. ' self' → logprob: -3.086284637451172
    7. '"' → logprob: -3.086284637451172
    8. ' "' → logprob: -3.586284637451172
    9. ' node' → logprob: -3.961284637451172
    10. '       ' → logprob: -4.211284637451172

Token 755: ' pick' (ID: 5230)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.1737401783466339
    2. ' return' → logprob: -3.4237401485443115
    3. ' continue' → logprob: -3.5487401485443115
    4. ' use' → logprob: -3.9237401485443115
    5. ' save' → logprob: -4.298740386962891
    6. 'can' → logprob: -4.423740386962891
    7. ' have' → logprob: -4.548740386962891
    8. '   ' → logprob: -5.423740386962891
    9. ' need' → logprob: -5.548740386962891
    10. ' want' → logprob: -5.548740386962891

Token 756: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.04935414344072342
    2. ' (' → logprob: -4.424354076385498
    3. ' min' → logprob: -4.674354076385498
    4. 'the' → logprob: -4.799354076385498
    5. '(min' → logprob: -5.174354076385498
    6. ' one' → logprob: -5.549354076385498
    7. '(' → logprob: -5.674354076385498
    8. '       ' → logprob: -6.799354076385498
    9. ' to' → logprob: -7.049354076385498
    10. 'min' → logprob: -7.674354076385498

Token 757: ' smaller' (ID: 13679)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.09097367525100708
    2. 'min' → logprob: -2.8409736156463623
    3. ' minimal' → logprob: -5.215973854064941
    4. '"' → logprob: -5.840973854064941
    5. ' smallest' → logprob: -5.965973854064941
    6. ' time' → logprob: -5.965973854064941
    7. ' max' → logprob: -6.090973854064941
    8. ' smaller' → logprob: -6.465973854064941
    9. ''' → logprob: -6.590973854064941
    10. ' '' → logprob: -6.965973854064941

Token 758: ' subtree' (ID: 126158)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.8245832324028015
    2. ')' → logprob: -0.9495832324028015
    3. '       ' → logprob: -2.9495832920074463
    4. '_time' → logprob: -3.6995832920074463
    5. '+' → logprob: -3.8245832920074463
    6. '   ' → logprob: -4.074583053588867
    7. 'return' → logprob: -4.449583053588867
    8. '_' → logprob: -5.074583053588867
    9. ')+' → logprob: -5.199583053588867
    10. ' )' → logprob: -5.199583053588867

Token 759: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026783348992466927
    2. '
' → logprob: -4.651783466339111
    3. ' +' → logprob: -5.151783466339111
    4. '+' → logprob: -6.026783466339111
    5. '        
' → logprob: -6.401783466339111
    6. ')' → logprob: -6.526783466339111
    7. ' =' → logprob: -6.901783466339111
    8. '_time' → logprob: -7.151783466339111
    9. 'time' → logprob: -7.276783466339111
    10. 'return' → logprob: -7.401783466339111

Token 760: ' be' (ID: 413)
  Prédit: 'expl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expl' → logprob: -1.0488111972808838
    2. 'return' → logprob: -1.6738111972808838
    3. 'complete' → logprob: -1.6738111972808838
    4. 'save' → logprob: -2.798811197280884
    5. 'visit' → logprob: -3.048811197280884
    6. ' return' → logprob: -3.798811197280884
    7. 'finish' → logprob: -3.798811197280884
    8. ' replay' → logprob: -3.798811197280884
    9. ' complete' → logprob: -3.923811197280884
    10. 'play' → logprob: -4.423810958862305

Token 761: ' replay' (ID: 68074)
  Prédit: 'saved'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'saved' → logprob: -0.5852751135826111
    2. ' saved' → logprob: -0.9602751135826111
    3. ' skipped' → logprob: -4.085275173187256
    4. 'visited' → logprob: -4.710275173187256
    5. 'quick' → logprob: -5.585275173187256
    6. 'added' → logprob: -5.960275173187256
    7. 'done' → logprob: -6.085275173187256
    8. ' done' → logprob: -6.085275173187256
    9. 'jump' → logprob: -6.210275173187256
    10. 'completed' → logprob: -6.335275173187256

Token 762: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.17618292570114136
    2. '       ' → logprob: -3.051182985305786
    3. '+' → logprob: -3.176182985305786
    4. ')' → logprob: -3.926182985305786
    5. 'time' → logprob: -4.426182746887207
    6. '_time' → logprob: -4.676182746887207
    7. '   ' → logprob: -4.801182746887207
    8. ' +' → logprob: -5.176182746887207
    9. 'ted' → logprob: -5.301182746887207
    10. ')+' → logprob: -6.426182746887207

Token 763: ' after' (ID: 1934)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09506736695766449
    2. ' +' → logprob: -2.470067262649536
    3. '+' → logprob: -6.095067501068115
    4. ')' → logprob: -6.470067501068115
    5. '
' → logprob: -6.470067501068115
    6. '        
' → logprob: -8.720067024230957
    7. '        ' → logprob: -8.970067024230957
    8. ',' → logprob: -9.470067024230957
    9. '   ' → logprob: -9.845067024230957
    10. ' =' → logprob: -10.345067024230957

Token 764: ' quick' (ID: 4853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04623960703611374
    2. ')' → logprob: -3.1712396144866943
    3. ')
' → logprob: -7.046239376068115
    4. ' +' → logprob: -7.296239376068115
    5. '
' → logprob: -7.421239376068115
    6. 'return' → logprob: -7.546239376068115
    7. '+' → logprob: -8.671239852905273
    8. ',' → logprob: -9.796239852905273
    9. '),' → logprob: -9.921239852905273
    10. ')+' → logprob: -10.171239852905273

Token 765: ' save' (ID: 5093)
  Prédit: '_save'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_save' → logprob: -0.3498847782611847
    2. 'save' → logprob: -1.2248847484588623
    3. ' save' → logprob: -7.974884986877441
    4. ' _' → logprob: -8.349884986877441
    5. '_s' → logprob: -8.474884986877441
    6. '_' → logprob: -9.099884986877441
    7. '       ' → logprob: -9.099884986877441
    8. '   ' → logprob: -9.349884986877441
    9. '_return' → logprob: -9.349884986877441
    10. '_saved' → logprob: -10.099884986877441

Token 766: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005687602679245174
    2. '
' → logprob: -8.625568389892578
    3. '        
' → logprob: -9.500568389892578
    4. ',' → logprob: -9.875568389892578
    5. ')' → logprob: -9.875568389892578
    6. 'time' → logprob: -10.125568389892578
    7. 'result' → logprob: -10.750568389892578
    8. '   ' → logprob: -11.125568389892578
    9. ' time' → logprob: -11.500568389892578
    10. ' =' → logprob: -11.500568389892578

Token 767: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45257896184921265
    2. ' +' → logprob: -1.2025790214538574
    3. ')' → logprob: -3.4525790214538574
    4. '+' → logprob: -3.5775790214538574
    5. ' +
' → logprob: -7.077579021453857
    6. '   ' → logprob: -7.452579021453857
    7. '.' → logprob: -7.952579021453857
    8. 'return' → logprob: -8.3275785446167
    9. '+
' → logprob: -8.3275785446167
    10. '           ' → logprob: -8.4525785446167

Token 768: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02117210626602173
    2. ')' → logprob: -4.271172046661377
    3. 'return' → logprob: -5.271172046661377
    4. '   ' → logprob: -7.396172046661377
    5. ' +' → logprob: -7.521172046661377
    6. ' return' → logprob: -8.396172523498535
    7. '+' → logprob: -9.146172523498535
    8. '
' → logprob: -9.646172523498535
    9. '        
' → logprob: -10.021172523498535
    10. '           ' → logprob: -10.021172523498535

Token 769: '  ' (ID: 256)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18979871273040771
    2. ')' → logprob: -1.8147987127304077
    3. 'return' → logprob: -5.314798831939697
    4. '
' → logprob: -6.564798831939697
    5. '   ' → logprob: -6.939798831939697
    6. '\n' → logprob: -7.564798831939697
    7. '        
' → logprob: -7.939798831939697
    8. '#' → logprob: -8.064798355102539
    9. ')
' → logprob: -8.189798355102539
    10. ' )' → logprob: -8.189798355102539

Token 770: ' instead' (ID: 7665)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22248131036758423
    2. '       ' → logprob: -1.7224812507629395
    3. ' )' → logprob: -4.5974812507629395
    4. 'return' → logprob: -5.4724812507629395
    5. '+' → logprob: -6.7224812507629395
    6. '
' → logprob: -6.7224812507629395
    7. ')
' → logprob: -6.9724812507629395
    8. ' +' → logprob: -7.0974812507629395
    9. ' 
' → logprob: -7.8474812507629395
    10. '<|end|>' → logprob: -7.9724812507629395

Token 771: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.1272525042295456
    2. ' of' → logprob: -2.1272525787353516
    3. '       ' → logprob: -8.502252578735352
    4. '   ' → logprob: -10.127252578735352
    5. '+' → logprob: -10.627252578735352
    6. '          ' → logprob: -11.127252578735352
    7. '#' → logprob: -11.502252578735352
    8. '           ' → logprob: -11.502252578735352
    9. '    ' → logprob: -12.627252578735352
    10. '  ' → logprob: -12.877252578735352

Token 772: ' from' (ID: 591)
  Prédit: ' going'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' going' → logprob: -1.153454065322876
    2. 'return' → logprob: -2.028454065322876
    3. 'going' → logprob: -2.153454065322876
    4. ' returning' → logprob: -2.403454065322876
    5. 'time' → logprob: -2.653454065322876
    6. ' time' → logprob: -2.903454065322876
    7. ' moving' → logprob: -3.528454065322876
    8. ' (' → logprob: -3.903454065322876
    9. ' ' → logprob: -4.278453826904297
    10. '2' → logprob: -4.278453826904297

Token 773: ' scratch' (ID: 29133)
  Prédit: ' scratch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' scratch' → logprob: -1.0516854524612427
    2. ' the' → logprob: -1.5516854524612427
    3. 'scratch' → logprob: -1.5516854524612427
    4. 'the' → logprob: -1.5516854524612427
    5. ' ' → logprob: -5.051685333251953
    6. 'max' → logprob: -6.551685333251953
    7. '0' → logprob: -7.301685333251953
    8. 'zero' → logprob: -7.301685333251953
    9. 'return' → logprob: -7.426685333251953
    10. ' zero' → logprob: -7.426685333251953

Token 774: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036267966497689486
    2. '
' → logprob: -6.378626823425293
    3. '        
' → logprob: -7.628626823425293
    4. ')' → logprob: -7.753626823425293
    5. '+' → logprob: -8.128626823425293
    6. ' +' → logprob: -8.628626823425293
    7. ',' → logprob: -8.753626823425293
    8. '<|end|>' → logprob: -9.253626823425293
    9. ')
' → logprob: -9.503626823425293
    10. '```' → logprob: -10.878626823425293

Token 775: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001379879075102508
    2. 'time' → logprob: -7.50137996673584
    3. 'result' → logprob: -8.12637996673584
    4. '        
' → logprob: -8.25137996673584
    5. ' time' → logprob: -9.87637996673584
    6. '   ' → logprob: -10.00137996673584
    7. 'total' → logprob: -10.37637996673584
    8. 'self' → logprob: -10.62637996673584
    9. '
' → logprob: -11.25137996673584
    10. '```' → logprob: -11.25137996673584

Token 776: ' count' (ID: 3605)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26250094175338745
    2. 'time' → logprob: -2.5125010013580322
    3. 'result' → logprob: -2.8875010013580322
    4. 'res' → logprob: -2.8875010013580322
    5. 'total' → logprob: -4.137500762939453
    6. ' res' → logprob: -4.887500762939453
    7. ' time' → logprob: -5.137500762939453
    8. ' result' → logprob: -5.637500762939453
    9. ' total' → logprob: -6.387500762939453
    10. 'self' → logprob: -7.012500762939453

Token 777: '_left' (ID: 22189)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5043621063232422
    2. '_left' → logprob: -1.7543621063232422
    3. 'ing' → logprob: -3.129362106323242
    4. 'ed' → logprob: -3.129362106323242
    5. '_le' → logprob: -3.379362106323242
    6. '_end' → logprob: -3.879362106323242
    7. '_branch' → logprob: -4.004362106323242
    8. ' =' → logprob: -4.129362106323242
    9. '_sub' → logprob: -4.754362106323242
    10. 'er' → logprob: -4.754362106323242

Token 778: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008169019594788551
    2. '=' → logprob: -5.133169174194336
    3. ',' → logprob: -7.008169174194336
    4. '_' → logprob: -7.383169174194336
    5. '_count' → logprob: -8.008169174194336
    6. '_nodes' → logprob: -8.883169174194336
    7. '_sub' → logprob: -9.133169174194336
    8. '_time' → logprob: -10.758169174194336
    9. '_size' → logprob: -11.258169174194336
    10. ')' → logprob: -11.758169174194336

Token 779: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.026959629729390144
    2. '1' → logprob: -3.7769596576690674
    3. '(self' → logprob: -6.276959419250488
    4. ' self' → logprob: -6.526959419250488
    5. '(' → logprob: -8.401959419250488
    6. 'time' → logprob: -9.776959419250488
    7. '   ' → logprob: -10.901959419250488
    8. ' ' → logprob: -11.151959419250488
    9. ' (' → logprob: -11.526959419250488
    10. '0' → logprob: -11.651959419250488

Token 780: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.005888856947422028
    2. '.branch' → logprob: -5.755888938903809
    3. '.n' → logprob: -7.005888938903809
    4. '.memo' → logprob: -7.880888938903809
    5. '_branch' → logprob: -8.130888938903809
    6. '.count' → logprob: -8.505888938903809
    7. 'branch' → logprob: -8.630888938903809
    8. '   ' → logprob: -9.005888938903809
    9. '.' → logprob: -9.755888938903809
    10. '_br' → logprob: -9.880888938903809

Token 781: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.004771753214299679
    2. 'dfs' → logprob: -5.629771709442139
    3. 'sub' → logprob: -6.879771709442139
    4. 'get' → logprob: -9.254772186279297
    5. 'size' → logprob: -11.129772186279297
    6. 'leaf' → logprob: -11.754772186279297
    7. 'compute' → logprob: -12.129772186279297
    8. 'cnt' → logprob: -12.754772186279297
    9. 'counts' → logprob: -12.879772186279297
    10. 'branch' → logprob: -13.129772186279297

Token 782: '_le' (ID: 27121)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.49725085496902466
    2. '_end' → logprob: -1.7472507953643799
    3. '_le' → logprob: -2.37225079536438
    4. '_sub' → logprob: -2.62225079536438
    5. 'end' → logprob: -3.24725079536438
    6. 'nodes' → logprob: -6.122251033782959
    7. '_leaf' → logprob: -6.247251033782959
    8. 'left' → logprob: -6.497251033782959
    9. '(node' → logprob: -6.747251033782959
    10. 'sub' → logprob: -6.747251033782959

Token 783: 'aves' (ID: 6808)
  Prédit: 'aves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aves' → logprob: -0.0036227621603757143
    2. 'af' → logprob: -5.878622531890869
    3. 'afs' → logprob: -7.503622531890869
    4. 'ft' → logprob: -8.753623008728027
    5. 'av' → logprob: -10.003623008728027
    6. 'a' → logprob: -10.878623008728027
    7. 'aft' → logprob: -11.128623008728027
    8. 'aving' → logprob: -12.503623008728027
    9. '(' → logprob: -12.878623008728027
    10. '_' → logprob: -13.003623008728027

Token 784: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.0028274620417505503
    2. '(' → logprob: -6.1278276443481445
    3. '(node' → logprob: -7.6278276443481445
    4. 'left' → logprob: -9.502827644348145
    5. '(
' → logprob: -9.627827644348145
    6. '(right' → logprob: -13.877827644348145
    7. '(self' → logprob: -13.877827644348145
    8. '((' → logprob: -13.877827644348145
    9. ' left' → logprob: -14.002827644348145
    10. '(line' → logprob: -14.002827644348145

Token 785: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.576355516910553
    2. ')
' → logprob: -0.826355516910553
    3. '       ' → logprob: -7.951355457305908
    4. ')
' → logprob: -10.451355934143066
    5. ')

' → logprob: -10.826355934143066
    6. '   ' → logprob: -11.451355934143066
    7. ' )
' → logprob: -13.201355934143066
    8. ' )' → logprob: -14.076355934143066
    9. ',' → logprob: -14.201355934143066
    10. ')#' → logprob: -15.576355934143066

Token 786: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09210804104804993
    2. 'count' → logprob: -2.5921080112457275
    3. '
' → logprob: -4.592108249664307
    4. '+' → logprob: -6.842108249664307
    5. ' count' → logprob: -6.967108249664307
    6. ' +' → logprob: -7.842108249664307
    7. ')' → logprob: -9.342107772827148
    8. '.count' → logprob: -9.467107772827148
    9. '        ' → logprob: -9.842107772827148
    10. '   ' → logprob: -9.967107772827148

Token 787: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.02189558744430542
    2. '       ' → logprob: -4.146895408630371
    3. ' count' → logprob: -5.146895408630371
    4. '
' → logprob: -12.146895408630371
    5. '```' → logprob: -13.021895408630371
    6. '   ' → logprob: -13.146895408630371
    7. '	count' → logprob: -13.271895408630371
    8. '_count' → logprob: -13.271895408630371
    9. 'counts' → logprob: -13.396895408630371
    10. ')' → logprob: -13.521895408630371

Token 788: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.11985771358013153
    2. '_left' → logprob: -2.2448577880859375
    3. '_' → logprob: -4.9948577880859375
    4. '_no' → logprob: -8.869857788085938
    5. ')_' → logprob: -11.369857788085938
    6. '_le' → logprob: -11.619857788085938
    7. ' _' → logprob: -11.994857788085938
    8. 'right' → logprob: -12.119857788085938
    9. '_self' → logprob: -12.244857788085938
    10. ' =' → logprob: -12.494857788085938

Token 789: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132631182670593
    2. '=' → logprob: -1.313263177871704
    3. ')' → logprob: -13.938262939453125
    4. ' ' → logprob: -15.188262939453125
    5. '=self' → logprob: -17.188262939453125
    6. '   ' → logprob: -17.313262939453125
    7. ',' → logprob: -17.688262939453125
    8. ' =
' → logprob: -17.813262939453125
    9. '       ' → logprob: -17.813262939453125
    10. '    ' → logprob: -18.063262939453125

Token 790: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005961272399872541
    2. ' self' → logprob: -5.1309614181518555
    3. '       ' → logprob: -10.505961418151855
    4. '   ' → logprob: -12.880961418151855
    5. ' ' → logprob: -14.380961418151855
    6. '           ' → logprob: -14.380961418151855
    7. '(self' → logprob: -14.505961418151855
    8. '	self' → logprob: -15.255961418151855
    9. '  ' → logprob: -15.630961418151855
    10. '     ' → logprob: -16.00596046447754

Token 791: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00011784763046307489
    2. '_count' → logprob: -9.125118255615234
    3. '.' → logprob: -12.125118255615234
    4. '.count' → logprob: -13.250118255615234
    5. ' _' → logprob: -14.750118255615234
    6. '   ' → logprob: -15.875118255615234
    7. '.__' → logprob: -16.000118255615234
    8. '_' → logprob: -16.000118255615234
    9. '_right' → logprob: -16.250118255615234
    10. 'def' → logprob: -16.375118255615234

Token 792: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -6.392202976712724e-06
    2. '_count' → logprob: -12.000006675720215
    3. ' count' → logprob: -16.6250057220459
    4. 'c' → logprob: -17.2500057220459
    5. 'counts' → logprob: -19.1250057220459
    6. 'left' → logprob: -19.2500057220459
    7. 'counter' → logprob: -19.6250057220459
    8. 'branch' → logprob: -19.7500057220459
    9. '	count' → logprob: -19.7500057220459
    10. 'Count' → logprob: -19.8750057220459

Token 793: '_le' (ID: 27121)
  Prédit: '_le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_le' → logprob: -0.0019313741941004992
    2. 'le' → logprob: -6.251931190490723
    3. 'left' → logprob: -13.376931190490723
    4. 'self' → logprob: -14.626931190490723
    5. '_left' → logprob: -15.626931190490723
    6. 'count' → logprob: -15.751931190490723
    7. '```' → logprob: -16.50193214416504
    8. '   ' → logprob: -16.62693214416504
    9. ' leaves' → logprob: -16.87693214416504
    10. '\' → logprob: -17.25193214416504

Token 794: 'aves' (ID: 6808)
  Prédit: 'aves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aves' → logprob: -0.0001507405104348436
    2. 'af' → logprob: -9.250150680541992
    3. 'av' → logprob: -10.750150680541992
    4. 'ft' → logprob: -11.625150680541992
    5. 'a' → logprob: -12.625150680541992
    6. 'yes' → logprob: -13.000150680541992
    7. 'aft' → logprob: -13.250150680541992
    8. 'ves' → logprob: -13.250150680541992
    9. '```' → logprob: -13.375150680541992
    10. '   ' → logprob: -13.625150680541992

Token 795: '(right' (ID: 52104)
  Prédit: '(right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(right' → logprob: -0.00022368213103618473
    2. 'right' → logprob: -8.875224113464355
    3. '(' → logprob: -9.500224113464355
    4. '[right' → logprob: -12.250224113464355
    5. '(
' → logprob: -13.125224113464355
    6. ' right' → logprob: -14.375224113464355
    7. ' (' → logprob: -14.625224113464355
    8. ')' → logprob: -15.250224113464355
    9. '	right' → logprob: -15.375224113464355
    10. ',right' → logprob: -15.500224113464355

Token 796: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014791482826694846
    2. '       ' → logprob: -7.001479148864746
    3. ')
' → logprob: -7.501479148864746
    4. ')

' → logprob: -11.376479148864746
    5. '   ' → logprob: -13.501479148864746
    6. ' )' → logprob: -13.876479148864746
    7. '()' → logprob: -15.251479148864746
    8. ' ' → logprob: -15.751479148864746
    9. '())' → logprob: -15.876479148864746
    10. '
' → logprob: -16.25147819519043

Token 797: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4049398601055145
    2. 'time' → logprob: -1.529939889907837
    3. 'total' → logprob: -2.904939889907837
    4. 'result' → logprob: -3.029939889907837
    5. ' time' → logprob: -5.529939651489258
    6. 'res' → logprob: -5.529939651489258
    7. ' total' → logprob: -6.154939651489258
    8. ' result' → logprob: -6.904939651489258
    9. 'cost' → logprob: -8.154939651489258
    10. 'self' → logprob: -8.154939651489258

Token 798: ' total' (ID: 3609)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.19893844425678253
    2. 'total' (adapté à ' total') → logprob: -2.1989383697509766
    3. 'time' → logprob: -2.9489383697509766
    4. 'result' → logprob: -4.448938369750977
    5. 'min' → logprob: -5.573938369750977
    6. 'self' → logprob: -6.948938369750977
    7. '       ' → logprob: -7.948938369750977
    8. 'ans' → logprob: -8.573938369750977
    9. 'minimal' → logprob: -10.198938369750977
    10. 'cost' → logprob: -10.323938369750977

Token 799: '_le' (ID: 27121)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -9.221884101862088e-05
    2. '_count' → logprob: -10.000092506408691
    3. ' =' → logprob: -10.125092506408691
    4. '_cost' → logprob: -13.125092506408691
    5. '=' → logprob: -13.250092506408691
    6. '_' → logprob: -13.500092506408691
    7. 'time' → logprob: -14.000092506408691
    8. '_left' → logprob: -15.500092506408691
    9. '   ' → logprob: -15.750092506408691
    10. '_le' → logprob: -15.875092506408691

Token 800: 'aves' (ID: 6808)
  Prédit: 'aves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aves' → logprob: -0.004742329940199852
    2. 'af' → logprob: -6.25474214553833
    3. 'afs' → logprob: -6.37974214553833
    4. 'ft' → logprob: -7.00474214553833
    5. 'fts' → logprob: -9.504742622375488
    6. 'av' → logprob: -10.004742622375488
    7. 'ads' → logprob: -11.379742622375488
    8. 'ng' → logprob: -11.504742622375488
    9. 'avs' → logprob: -11.504742622375488
    10. 'aft' → logprob: -12.004742622375488

Token 801: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141343772411346
    2. '=' → logprob: -1.7014133930206299
    3. '=count' → logprob: -16.076414108276367
    4. ' ' → logprob: -16.951414108276367
    5. 'count' → logprob: -18.201414108276367
    6. '_count' → logprob: -18.326414108276367
    7. '_' → logprob: -18.451414108276367
    8. '   ' → logprob: -18.826414108276367
    9. ')' → logprob: -18.951414108276367
    10. '＝' → logprob: -19.576414108276367

Token 802: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -2.15310683415737e-05
    2. ' count' → logprob: -10.750021934509277
    3. '       ' → logprob: -18.75002098083496
    4. '   ' → logprob: -18.87502098083496
    5. 'self' → logprob: -19.87502098083496
    6. ' ' → logprob: -21.37502098083496
    7. '(count' → logprob: -21.62502098083496
    8. '=count' → logprob: -21.87502098083496
    9. '[count' → logprob: -22.25002098083496
    10. '	count' → logprob: -22.75002098083496

Token 803: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -3.047134305234067e-05
    2. '_le' → logprob: -10.875030517578125
    3. 'left' → logprob: -12.250030517578125
    4. '_right' → logprob: -12.500030517578125
    5. '_' → logprob: -12.875030517578125
    6. 'Left' → logprob: -16.625030517578125
    7. '_count' → logprob: -16.750030517578125
    8. '_LEFT' → logprob: -16.875030517578125
    9. '```' → logprob: -17.125030517578125
    10. '_Left' → logprob: -17.375030517578125

Token 804: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.018150178715586662
    2. '+' → logprob: -4.018150329589844
    3. ' +
' → logprob: -16.268150329589844
    4. ' ' → logprob: -16.893150329589844
    5. '       ' → logprob: -17.268150329589844
    6. '+
' → logprob: -17.518150329589844
    7. '+self' → logprob: -17.893150329589844
    8. ' ' → logprob: -18.393150329589844
    9. '   ' → logprob: -19.143150329589844
    10. '        ' → logprob: -19.268150329589844

Token 805: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.001170225441455841
    2. ' count' → logprob: -6.7511701583862305
    3. '_count' → logprob: -19.501171112060547
    4. '	count' → logprob: -20.876171112060547
    5. '(count' → logprob: -21.126171112060547
    6. '   ' → logprob: -21.376171112060547
    7. ' ' → logprob: -21.626171112060547
    8. '$count' → logprob: -22.001171112060547
    9. '.count' → logprob: -22.501171112060547
    10. '       ' → logprob: -22.626171112060547

Token 806: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.00026181264547631145
    2. 'right' → logprob: -8.250262260437012
    3. 'Right' → logprob: -15.000262260437012
    4. '_RIGHT' → logprob: -16.500261306762695
    5. ' right' → logprob: -17.125261306762695
    6. '_left' → logprob: -17.875261306762695
    7. '	right' → logprob: -18.000261306762695
    8. 'count' → logprob: -18.375261306762695
    9. '_' → logprob: -18.875261306762695
    10. '   ' → logprob: -19.125261306762695

Token 807: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04009931907057762
    2. '
' → logprob: -3.4150993824005127
    3. ',' → logprob: -6.665099143981934
    4. '        
' → logprob: -6.665099143981934
    5. 'time' → logprob: -6.790099143981934
    6. ' time' → logprob: -7.290099143981934
    7. 'result' → logprob: -7.915099143981934
    8. 'self' → logprob: -7.915099143981934
    9. '<|end|>' → logprob: -8.165099143981934
    10. ')' → logprob: -8.540099143981934

Token 808: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16393302381038666
    2. 'time' → logprob: -2.038933038711548
    3. 'result' → logprob: -4.288932800292969
    4. '
' → logprob: -5.538932800292969
    5. 'total' → logprob: -6.538932800292969
    6. 'res' → logprob: -6.913932800292969
    7. ' time' → logprob: -7.538932800292969
    8. '        
' → logprob: -8.663932800292969
    9. ' result' → logprob: -9.538932800292969
    10. 'self' → logprob: -10.288932800292969

Token 809: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.05281295254826546
    2. 'time' → logprob: -3.3028130531311035
    3. 'total' → logprob: -5.3028130531311035
    4. 'result' → logprob: -5.3028130531311035
    5. 'min' → logprob: -5.5528130531311035
    6. 'self' → logprob: -8.052812576293945
    7. 'cost' → logprob: -8.302812576293945
    8. 'ans' → logprob: -8.677812576293945
    9. 'minimal' → logprob: -9.802812576293945
    10. ' res' → logprob: -11.677812576293945

Token 810: ' Time' (ID: 6688)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.08487462997436523
    2. 'time' → logprob: -3.4598746299743652
    3. 'result' → logprob: -3.4598746299743652
    4. 'min' → logprob: -4.584874629974365
    5. 'total' → logprob: -4.959874629974365
    6. 'minimal' → logprob: -7.459874629974365
    7. 'ans' → logprob: -8.084875106811523
    8. 'cost' → logprob: -9.084875106811523
    9. '       ' → logprob: -9.334875106811523
    10. 'self' → logprob: -9.584875106811523

Token 811: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25366970896720886
    2. ' =' → logprob: -1.5036697387695312
    3. '_left' → logprob: -6.753669738769531
    4. '       ' → logprob: -8.253669738769531
    5. '_time' → logprob: -9.503669738769531
    6. '_' → logprob: -9.628669738769531
    7. '_result' → logprob: -10.253669738769531
    8. '_needed' → logprob: -10.253669738769531
    9. '_total' → logprob: -10.378669738769531
    10. '_required' → logprob: -11.003669738769531

Token 812: ' complete' (ID: 5533)
  Prédit: 'complete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'complete' → logprob: -0.9361722469329834
    2. 'return' → logprob: -1.5611722469329834
    3. 'visit' → logprob: -1.8111722469329834
    4. 'go' → logprob: -2.3111722469329834
    5. 'move' → logprob: -2.9361722469329834
    6. 'reach' → logprob: -3.0611722469329834
    7. 'expl' → logprob: -4.6861724853515625
    8. 'tr' → logprob: -4.8111724853515625
    9. 'finish' → logprob: -5.1861724853515625
    10. 'travel' → logprob: -5.4361724853515625

Token 813: ' left' (ID: 3561)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7552159428596497
    2. 'time' → logprob: -1.6302158832550049
    3. 'sub' → logprob: -1.8802158832550049
    4. '=' → logprob: -2.880215883255005
    5. 'total' → logprob: -3.130215883255005
    6. 'self' → logprob: -3.630215883255005
    7. ' time' → logprob: -4.630216121673584
    8. 'node' → logprob: -4.755216121673584
    9. ' subtree' → logprob: -4.880216121673584
    10. 'result' → logprob: -5.005216121673584

Token 814: ' subtree' (ID: 126158)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1313222348690033
    2. '+' → logprob: -2.381322145462036
    3. ' =' → logprob: -4.256322383880615
    4. '=' → logprob: -5.131322383880615
    5. 'time' → logprob: -5.381322383880615
    6. '_time' → logprob: -5.381322383880615
    7. '       ' → logprob: -7.631322383880615
    8. ' time' → logprob: -7.881322383880615
    9. '   ' → logprob: -9.006321907043457
    10. ')' → logprob: -9.006321907043457

Token 815: ':
' (ID: 734)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.850471019744873
    2. ' +' → logprob: -1.350471019744873
    3. ' =' → logprob: -1.475471019744873
    4. '+' → logprob: -2.475471019744873
    5. 'time' → logprob: -7.850471019744873
    6. '       ' → logprob: -8.100471496582031
    7. ' time' → logprob: -9.975471496582031
    8. '=time' → logprob: -10.725471496582031
    9. ' +=' → logprob: -11.225471496582031
    10. ')' → logprob: -11.225471496582031

Token 816: '       ' (ID: 309)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.07661592960357666
    2. '       ' → logprob: -3.326615810394287
    3. ' time' → logprob: -3.576615810394287
    4. 'total' → logprob: -5.201615810394287
    5. 'left' → logprob: -6.826615810394287
    6. 'result' → logprob: -6.951615810394287
    7. 'f' → logprob: -6.951615810394287
    8. ' total' → logprob: -8.826616287231445
    9. 'self' → logprob: -8.951616287231445
    10. 'return' → logprob: -8.951616287231445

Token 817: ' #' (ID: 1069)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.0017907321453094482
    2. ' time' → logprob: -7.126790523529053
    3. '       ' → logprob: -7.376790523529053
    4. 'total' → logprob: -8.751791000366211
    5. 'left' → logprob: -9.751791000366211
    6. 'f' → logprob: -10.251791000366211
    7. 'self' → logprob: -10.626791000366211
    8. 'sub' → logprob: -11.376791000366211
    9. '1' → logprob: -11.626791000366211
    10. '   ' → logprob: -11.751791000366211

Token 818: ' -' (ID: 533)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.03533808887004852
    2. 'total' → logprob: -4.785337924957275
    3. ' time' → logprob: -4.910337924957275
    4. 'f' → logprob: -5.160337924957275
    5. 'res' → logprob: -5.160337924957275
    6. 'result' → logprob: -6.160337924957275
    7. '       ' → logprob: -6.660337924957275
    8. 'self' → logprob: -7.160337924957275
    9. 'return' → logprob: -7.535337924957275
    10. '1' → logprob: -7.785337924957275

Token 819: ' It' (ID: 1225)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.12569570541381836
    2. ' time' → logprob: -2.8756957054138184
    3. '(time' → logprob: -3.2506957054138184
    4. '(' → logprob: -4.750695705413818
    5. '1' → logprob: -4.750695705413818
    6. 'self' → logprob: -6.250695705413818
    7. ' (' → logprob: -6.500695705413818
    8. '2' → logprob: -7.750695705413818
    9. '#' → logprob: -8.125696182250977
    10. ' ' → logprob: -8.250696182250977

Token 820: ' takes' (ID: 6948)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1669374704360962
    2. ' +' → logprob: -1.1669374704360962
    3. ' =' → logprob: -2.5419373512268066
    4. '=' → logprob: -2.6669373512268066
    5. ')' → logprob: -3.1669373512268066
    6. ' +=' → logprob: -3.4169373512268066
    7. ' time' → logprob: -3.4169373512268066
    8. '_left' → logprob: -3.4169373512268066
    9. '_time' → logprob: -4.041937351226807
    10. '_' → logprob: -4.041937351226807

Token 821: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.22762756049633026
    2. ' time' → logprob: -1.6026275157928467
    3. '1' → logprob: -6.352627754211426
    4. '(time' → logprob: -8.727627754211426
    5. ' (' → logprob: -9.477627754211426
    6. ' ' → logprob: -10.227627754211426
    7. '(' → logprob: -10.352627754211426
    8. 'count' → logprob: -10.352627754211426
    9. '   ' → logprob: -10.602627754211426
    10. '       ' → logprob: -10.727627754211426

Token 822: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.00027706706896424294
    2. '_to' → logprob: -8.625277519226074
    3. '_' → logprob: -10.375277519226074
    4. 'left' → logprob: -11.125277519226074
    5. '_right' → logprob: -11.375277519226074
    6. 'to' → logprob: -11.625277519226074
    7. '=' → logprob: -12.125277519226074
    8. ' to' → logprob: -12.250277519226074
    9. '+' → logprob: -12.375277519226074
    10. '_time' → logprob: -12.625277519226074

Token 823: ' minutes' (ID: 5438)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.11294593662023544
    2. '+' → logprob: -2.237946033477783
    3. ' ' → logprob: -10.362945556640625
    4. '       ' → logprob: -10.487945556640625
    5. ' +
' → logprob: -10.862945556640625
    6. ')' → logprob: -11.112945556640625
    7. '   ' → logprob: -11.987945556640625
    8. '
' → logprob: -12.737945556640625
    9. '+
' → logprob: -12.987945556640625
    10. '        ' → logprob: -13.112945556640625

Token 824: ' (' (ID: 350)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.43281155824661255
    2. '+' → logprob: -1.0578114986419678
    3. '       ' → logprob: -5.557811737060547
    4. ' to' → logprob: -9.932811737060547
    5. ',' → logprob: -10.307811737060547
    6. ')' → logprob: -10.307811737060547
    7. '        ' → logprob: -10.682811737060547
    8. '   ' → logprob: -11.432811737060547
    9. ' plus' → logprob: -11.432811737060547
    10. '#' → logprob: -11.557811737060547

Token 825: 'computed' (ID: 157929)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5535750985145569
    2. '+' → logprob: -1.303575038909912
    3. ' +' → logprob: -1.928575038909912
    4. ' )' → logprob: -5.803575038909912
    5. ')+' → logprob: -6.303575038909912
    6. '
' → logprob: -7.178575038909912
    7. '       ' → logprob: -7.303575038909912
    8. ' plus' → logprob: -8.42857551574707
    9. ')
' → logprob: -8.67857551574707
    10. ' to' → logprob: -8.67857551574707

Token 826: ' recursively' (ID: 130266)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4992474317550659
    2. ')' → logprob: -1.374247431755066
    3. ' +' → logprob: -1.999247431755066
    4. ')+' → logprob: -6.4992475509643555
    5. ' )' → logprob: -7.2492475509643555
    6. '       ' → logprob: -7.6242475509643555
    7. '+)' → logprob: -7.8742475509643555
    8. ' to' → logprob: -8.249247550964355
    9. 'to' → logprob: -8.499247550964355
    10. '),' → logprob: -8.749247550964355

Token 827: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7137577533721924
    2. ' +' → logprob: -1.2137577533721924
    3. '+' → logprob: -1.5887577533721924
    4. '       ' → logprob: -5.088757514953613
    5. ' )' → logprob: -7.213757514953613
    6. ')+' → logprob: -7.213757514953613
    7. ' +
' → logprob: -7.963757514953613
    8. '
' → logprob: -8.338757514953613
    9. '+
' → logprob: -8.338757514953613
    10. '),' → logprob: -8.588757514953613

Token 828: '       ' (ID: 309)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.18504698574543
    2. '+' → logprob: -2.185046911239624
    3. '       ' → logprob: -2.935046911239624
    4. ' +
' → logprob: -6.060047149658203
    5. '+
' → logprob: -7.185047149658203
    6. ')' → logprob: -9.310047149658203
    7. '
' → logprob: -9.685047149658203
    8. '        ' → logprob: -10.810047149658203
    9. '   ' → logprob: -11.435047149658203
    10. ' plus' → logprob: -12.185047149658203

Token 829: ' #' (ID: 1069)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4032360911369324
    2. '+' → logprob: -1.2782361507415771
    3. '       ' → logprob: -3.153236150741577
    4. ' +
' → logprob: -5.153235912322998
    5. '+
' → logprob: -5.403235912322998
    6. '
' → logprob: -9.278236389160156
    7. ')' → logprob: -9.653236389160156
    8. 'return' → logprob: -10.653236389160156
    9. '        ' → logprob: -11.153236389160156
    10. ',' → logprob: -11.278236389160156

Token 830: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3193063735961914
    2. ' +' → logprob: -1.5693063735961914
    3. '+' → logprob: -3.0693063735961914
    4. '
' → logprob: -4.694306373596191
    5. '+
' → logprob: -6.444306373596191
    6. 'return' → logprob: -6.569306373596191
    7. 'time' → logprob: -6.569306373596191
    8. '        
' → logprob: -6.819306373596191
    9. ' +
' → logprob: -6.944306373596191
    10. ' time' → logprob: -7.069306373596191

Token 831: ' Similarly' (ID: 65037)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.307993620634079
    2. 'time' → logprob: -2.3079936504364014
    3. '+' → logprob: -2.8079936504364014
    4. ' +' → logprob: -3.3079936504364014
    5. ' ' → logprob: -3.4329936504364014
    6. ' time' → logprob: -4.057993412017822
    7. 'total' → logprob: -5.182993412017822
    8. ' total' → logprob: -5.557993412017822
    9. ' plus' → logprob: -5.807993412017822
    10. '
' → logprob: -6.432993412017822

Token 832: ' right' (ID: 1849)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4715993106365204
    2. 'for' → logprob: -1.3465993404388428
    3. ' +' → logprob: -2.9715993404388428
    4. '+' → logprob: -3.4715993404388428
    5. '       ' → logprob: -3.9715993404388428
    6. 'time' → logprob: -5.221599102020264
    7. '
' → logprob: -5.596599102020264
    8. ')' → logprob: -6.721599102020264
    9. ' time' → logprob: -7.346599102020264
    10. ',' → logprob: -7.471599102020264

Token 833: ' subtree' (ID: 126158)
  Prédit: '_right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.012988326139748096
    2. '_time' → logprob: -5.387988090515137
    3. '_sub' → logprob: -5.887988090515137
    4. '       ' → logprob: -6.012988090515137
    5. ')' → logprob: -7.012988090515137
    6. '_left' → logprob: -7.887988090515137
    7. 'right' → logprob: -7.887988090515137
    8. '   ' → logprob: -8.012988090515137
    9. ')_' → logprob: -8.637988090515137
    10. '```' → logprob: -8.637988090515137

Token 834: ' time' (ID: 1058)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7290655970573425
    2. '       ' → logprob: -0.9790655970573425
    3. '+' → logprob: -2.2290656566619873
    4. '
' → logprob: -3.6040656566619873
    5. ',' → logprob: -5.979065418243408
    6. ')' → logprob: -6.604065418243408
    7. ' +
' → logprob: -7.229065418243408
    8. '        
' → logprob: -7.604065418243408
    9. '+
' → logprob: -7.979065418243408
    10. '<|end|>' → logprob: -8.354065895080566

Token 835: '_right' (ID: 24402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2594137489795685
    2. ' =' → logprob: -2.259413719177246
    3. '=' → logprob: -3.259413719177246
    4. '+' → logprob: -3.759413719177246
    5. '_left' → logprob: -3.884413719177246
    6. ' +' → logprob: -4.009413719177246
    7. '
' → logprob: -5.134413719177246
    8. ')' → logprob: -5.384413719177246
    9. '        
' → logprob: -6.009413719177246
    10. '_time' → logprob: -6.009413719177246

Token 836: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8033188581466675
    2. ' =' → logprob: -1.1783188581466675
    3. '=' → logprob: -2.303318977355957
    4. '+' → logprob: -2.803318977355957
    5. ' +' → logprob: -2.928318977355957
    6. '
' → logprob: -4.928318977355957
    7. ',' → logprob: -5.053318977355957
    8. ')' → logprob: -5.803318977355957
    9. 'time' → logprob: -5.803318977355957
    10. ' +=' → logprob: -6.428318977355957

Token 837: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09754988551139832
    2. ' +' → logprob: -2.5975499153137207
    3. '+' → logprob: -4.597549915313721
    4. 'return' → logprob: -5.347549915313721
    5. ' return' → logprob: -6.472549915313721
    6. ')' → logprob: -7.972549915313721
    7. 'time' → logprob: -8.472549438476562
    8. '
' → logprob: -8.472549438476562
    9. ' time' → logprob: -8.597549438476562
    10. '```' → logprob: -8.722549438476562

Token 838: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14769326150417328
    2. 'result' → logprob: -2.897693157196045
    3. 'time' → logprob: -3.147693157196045
    4. 'total' → logprob: -4.272693157196045
    5. ' time' → logprob: -4.897693157196045
    6. '        
' → logprob: -5.147693157196045
    7. ' result' → logprob: -5.522693157196045
    8. ' total' → logprob: -6.022693157196045
    9. '
' → logprob: -6.522693157196045
    10. 'res' → logprob: -6.647693157196045

Token 839: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09490367770195007
    2. 'result' → logprob: -3.2199037075042725
    3. 'total' → logprob: -3.9699037075042725
    4. 'time' → logprob: -4.344903469085693
    5. ' total' → logprob: -4.969903469085693
    6. ' result' → logprob: -5.594903469085693
    7. ' time' → logprob: -5.844903469085693
    8. 'return' → logprob: -5.969903469085693
    9. 'res' → logprob: -7.344903469085693
    10. '        
' → logprob: -7.719903469085693

Token 840: ' #' (ID: 1069)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.8008919358253479
    2. 'time' → logprob: -1.1758918762207031
    3. '       ' → logprob: -1.6758918762207031
    4. 'res' → logprob: -3.675891876220703
    5. 'result' → logprob: -4.050891876220703
    6. ' total' → logprob: -5.425891876220703
    7. 'return' → logprob: -5.925891876220703
    8. ' time' → logprob: -6.550891876220703
    9. 'min' → logprob: -6.675891876220703
    10. 'cost' → logprob: -7.175891876220703

Token 841: ' The' (ID: 623)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.7369164824485779
    2. 'res' → logprob: -1.1119165420532227
    3. 'time' → logprob: -2.2369165420532227
    4. 'result' → logprob: -2.9869165420532227
    5. '       ' → logprob: -3.6119165420532227
    6. 'min' → logprob: -5.611916542053223
    7. ' res' → logprob: -6.361916542053223
    8. ' total' → logprob: -6.611916542053223
    9. 'cost' → logprob: -8.111916542053223
    10. 'self' → logprob: -8.236916542053223

Token 842: ' cost' (ID: 3097)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8675079345703125
    2. 'total' → logprob: -1.7425079345703125
    3. ' result' → logprob: -2.3675079345703125
    4. ' total' → logprob: -2.7425079345703125
    5. ' minimal' → logprob: -2.9925079345703125
    6. 'time' → logprob: -3.1175079345703125
    7. 'minimal' → logprob: -3.7425079345703125
    8. '_time' → logprob: -3.8675079345703125
    9. '#' → logprob: -4.2425079345703125
    10. '_total' → logprob: -4.2425079345703125

Token 843: ' breakdown' (ID: 48555)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5930050015449524
    2. '=' → logprob: -0.8430050015449524
    3. ' +=' → logprob: -5.218005180358887
    4. '+' → logprob: -5.593005180358887
    5. '       ' → logprob: -6.343005180358887
    6. ' +' → logprob: -6.468005180358887
    7. ' to' → logprob: -6.718005180358887
    8. '+=' → logprob: -6.968005180358887
    9. ' is' → logprob: -7.468005180358887
    10. ')' → logprob: -7.593005180358887

Token 844: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.563988983631134
    2. '=' → logprob: -0.938988983631134
    3. '       ' → logprob: -3.3139889240264893
    4. ' is' → logprob: -6.438989162445068
    5. 'time' → logprob: -7.313989162445068
    6. ' time' → logprob: -7.813989162445068
    7. 'total' → logprob: -7.813989162445068
    8. '_time' → logprob: -9.06398868560791
    9. ' total' → logprob: -9.31398868560791
    10. ':' → logprob: -9.31398868560791

Token 845: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0422060489654541
    2. ' total' → logprob: -4.667205810546875
    3. ' result' → logprob: -4.792205810546875
    4. 'result' → logprob: -4.792205810546875
    5. ' time' → logprob: -5.292205810546875
    6. 'total' → logprob: -5.417205810546875
    7. 'time' → logprob: -6.167205810546875
    8. ' cost' → logprob: -7.042205810546875
    9. '        
' → logprob: -7.417205810546875
    10. 'return' → logprob: -7.417205810546875

Token 846: ' #' (ID: 1069)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.343817114830017
    2. 'time' → logprob: -1.593817114830017
    3. ' total' → logprob: -1.968817114830017
    4. '       ' → logprob: -2.0938172340393066
    5. ' time' → logprob: -2.4688172340393066
    6. 'result' → logprob: -2.5938172340393066
    7. 'res' → logprob: -3.3438172340393066
    8. ' res' → logprob: -3.8438172340393066
    9. ' result' → logprob: -3.9688172340393066
    10. 'cost' → logprob: -3.9688172340393066

Token 847: ' -' (ID: 533)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.29733529686927795
    2. 'res' → logprob: -2.547335386276245
    3. 'time' → logprob: -2.547335386276245
    4. 'result' → logprob: -2.797335386276245
    5. 'cost' → logprob: -3.797335386276245
    6. ' total' → logprob: -4.922335147857666
    7. '       ' → logprob: -5.297335147857666
    8. ' res' → logprob: -6.547335147857666
    9. 'return' → logprob: -7.297335147857666
    10. ' time' → logprob: -7.672335147857666

Token 848: ' We' (ID: 1416)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5742054581642151
    2. 'time' → logprob: -2.5742053985595703
    3. 'result' → logprob: -2.8242053985595703
    4. 'return' → logprob: -2.9492053985595703
    5. 'total' → logprob: -2.9492053985595703
    6. ' time' → logprob: -2.9492053985595703
    7. ' total' → logprob: -3.1992053985595703
    8. ' ' → logprob: -3.6992053985595703
    9. ' result' → logprob: -3.8242053985595703
    10. ' return' → logprob: -4.32420539855957

Token 849: ' must' (ID: 2804)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.635291337966919
    2. ' add' → logprob: -2.385291337966919
    3. ' continue' → logprob: -2.885291337966919
    4. ' need' → logprob: -3.135291337966919
    5. ' +' → logprob: -3.135291337966919
    6. ' _' → logprob: -3.135291337966919
    7. '+' → logprob: -3.135291337966919
    8. ' =' → logprob: -3.510291337966919
    9. ' have' → logprob: -3.760291337966919
    10. ' ' → logprob: -4.51029109954834

Token 850: ' traverse' (ID: 66957)
  Prédit: ' move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' move' → logprob: -1.2252988815307617
    2. 'visit' → logprob: -1.8502988815307617
    3. ' visit' → logprob: -2.1002988815307617
    4. 'move' → logprob: -2.4752988815307617
    5. 'go' → logprob: -2.7252988815307617
    6. 'add' → logprob: -2.7252988815307617
    7. ' add' → logprob: -2.7252988815307617
    8. ' go' → logprob: -3.2252988815307617
    9. 'return' → logprob: -3.4752988815307617
    10. ' return' → logprob: -3.6002988815307617

Token 851: ' edges' (ID: 22569)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.274254322052002
    2. ' the' → logprob: -1.399254322052002
    3. ' both' → logprob: -1.649254322052002
    4. ' one' → logprob: -2.399254322052002
    5. ' ' → logprob: -2.774254322052002
    6. ' edges' → logprob: -3.149254322052002
    7. 'both' → logprob: -4.274254322052002
    8. ' left' → logprob: -4.399254322052002
    9. ' from' → logprob: -4.649254322052002
    10. 'the' → logprob: -4.774254322052002

Token 852: ' down' (ID: 1917)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.15469007194042206
    2. ' +' → logprob: -3.1546900272369385
    3. ' between' → logprob: -4.029690265655518
    4. 'to' → logprob: -4.154690265655518
    5. '+' → logprob: -4.279690265655518
    6. ' =' → logprob: -4.529690265655518
    7. ' from' → logprob: -4.904690265655518
    8. '       ' → logprob: -5.279690265655518
    9. ' (' → logprob: -5.279690265655518
    10. 'from' → logprob: -5.404690265655518

Token 853: ' to' (ID: 316)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.1821627616882324
    2. '       ' → logprob: -1.4321627616882324
    3. ' and' → logprob: -1.9321627616882324
    4. '+' → logprob: -2.1821627616882324
    5. 'and' → logprob: -2.5571627616882324
    6. '   ' → logprob: -3.3071627616882324
    7. ' to' → logprob: -3.4321627616882324
    8. 'from' → logprob: -3.9321627616882324
    9. 'to' → logprob: -4.057162761688232
    10. ' plus' → logprob: -5.682162761688232

Token 854: ' each' (ID: 2454)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.5192928314208984
    2. 'both' → logprob: -1.5192928314208984
    3. 'children' → logprob: -2.7692928314208984
    4. 'complete' → logprob: -3.5192928314208984
    5. 'child' → logprob: -3.6442928314208984
    6. 'the' → logprob: -3.8942928314208984
    7. 'each' → logprob: -3.8942928314208984
    8. 'reach' → logprob: -4.769292831420898
    9. ' left' → logprob: -5.644292831420898
    10. ' both' → logprob: -6.019292831420898

Token 855: ' ending' (ID: 22013)
  Prédit: ' subtree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' subtree' → logprob: -0.2172398418188095
    2. 'sub' → logprob: -2.2172398567199707
    3. 'child' → logprob: -2.7172398567199707
    4. ' child' → logprob: -3.9672398567199707
    5. ' sub' → logprob: -7.467239856719971
    6. '_sub' → logprob: -8.092239379882812
    7. '   ' → logprob: -8.717239379882812
    8. '       ' → logprob: -8.967239379882812
    9. '_child' → logprob: -10.717239379882812
    10. '#' → logprob: -10.717239379882812

Token 856: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18396693468093872
    2. ' +' → logprob: -2.808966875076294
    3. ' and' → logprob: -3.058966875076294
    4. '+' → logprob: -3.808966875076294
    5. ',' → logprob: -4.058967113494873
    6. '
' → logprob: -4.933967113494873
    7. '#' → logprob: -5.308967113494873
    8. '   ' → logprob: -6.433967113494873
    9. 'and' → logprob: -7.183967113494873
    10. 'time' → logprob: -7.183967113494873

Token 857: ' left' (ID: 3561)
  Prédit: 'both'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'both' → logprob: -0.7115805745124817
    2. 'the' → logprob: -1.086580514907837
    3. 'sub' → logprob: -2.086580514907837
    4. 'each' → logprob: -4.086580753326416
    5. ' both' → logprob: -4.711580753326416
    6. ' the' → logprob: -5.211580753326416
    7. 'this' → logprob: -5.711580753326416
    8. 'left' → logprob: -5.836580753326416
    9. 'total' → logprob: -5.961580753326416
    10. '1' → logprob: -6.336580753326416

Token 858: ' subtree' (ID: 126158)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.069869041442871
    2. ' +' → logprob: -1.194869041442871
    3. '       ' → logprob: -1.819869041442871
    4. '+' → logprob: -2.569869041442871
    5. ' subtree' → logprob: -3.069869041442871
    6. '_sub' → logprob: -3.944869041442871
    7. 'and' → logprob: -3.944869041442871
    8. ')' → logprob: -5.069869041442871
    9. 'sub' → logprob: -5.194869041442871
    10. '#' → logprob: -5.194869041442871

Token 859: '
' (ID: 198)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5896681547164917
    2. '+' → logprob: -1.4646681547164917
    3. '       ' → logprob: -1.5896681547164917
    4. ',' → logprob: -5.964668273925781
    5. ' and' → logprob: -5.964668273925781
    6. ')' → logprob: -6.214668273925781
    7. '#' → logprob: -6.839668273925781
    8. ' ' → logprob: -7.964668273925781
    9. '
' → logprob: -8.089668273925781
    10. '   ' → logprob: -8.214668273925781

Token 860: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010681097395718098
    2. ' +' → logprob: -4.88568115234375
    3. '+' → logprob: -6.26068115234375
    4. ' and' → logprob: -7.88568115234375
    5. '#' → logprob: -8.01068115234375
    6. ',' → logprob: -8.26068115234375
    7. ')' → logprob: -9.63568115234375
    8. '   ' → logprob: -10.26068115234375
    9. '           ' → logprob: -10.63568115234375
    10. '<|end|>' → logprob: -11.01068115234375

Token 861: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23345687985420227
    2. ' +' → logprob: -1.7334568500518799
    3. '+' → logprob: -3.60845685005188
    4. ' and' → logprob: -5.983457088470459
    5. ',' → logprob: -7.483457088470459
    6. '#' (adapté à ' #') → logprob: -8.1084566116333
    7. '   ' → logprob: -8.2334566116333
    8. ' ' → logprob: -8.4834566116333
    9. ')' → logprob: -9.1084566116333
    10. '        ' → logprob: -9.6084566116333

Token 862: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36091411113739014
    2. ' +' → logprob: -1.3609141111373901
    3. '+' → logprob: -3.1109142303466797
    4. '#' → logprob: -6.73591423034668
    5. '   ' → logprob: -8.48591423034668
    6. ' ' → logprob: -9.23591423034668
    7. ',' → logprob: -9.61091423034668
    8. ' +
' → logprob: -9.61091423034668
    9. '           ' → logprob: -9.73591423034668
    10. ' and' → logprob: -9.73591423034668

Token 863: ' Then' (ID: 7801)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.8916206955909729
    2. ' time' → logprob: -1.7666206359863281
    3. '       ' → logprob: -1.8916206359863281
    4. 'self' → logprob: -2.391620635986328
    5. '#' → logprob: -3.141620635986328
    6. 'return' → logprob: -3.391620635986328
    7. ' self' → logprob: -3.516620635986328
    8. '+' → logprob: -3.766620635986328
    9. ' return' → logprob: -4.266620635986328
    10. ' +' → logprob: -4.391620635986328

Token 864: ' return' (ID: 622)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4599589407444
    2. ' ' → logprob: -1.8349589109420776
    3. ' self' → logprob: -2.834959030151367
    4. '       ' → logprob: -2.959959030151367
    5. ' return' → logprob: -3.959959030151367
    6. '+' → logprob: -3.959959030151367
    7. ' +' → logprob: -4.334959030151367
    8. 'self' → logprob: -4.334959030151367
    9. ' one' → logprob: -5.084959030151367
    10. ' (' → logprob: -5.459959030151367

Token 865: ' quickly' (ID: 8065)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.42774900794029236
    2. ' ' → logprob: -1.6777490377426147
    3. ' back' → logprob: -3.302748918533325
    4. '_left' → logprob: -3.677748918533325
    5. '1' → logprob: -4.177749156951904
    6. 'to' → logprob: -4.302749156951904
    7. ' +' → logprob: -4.427749156951904
    8. ' left' → logprob: -4.552749156951904
    9. '_back' → logprob: -4.677749156951904
    10. '_time' → logprob: -4.927749156951904

Token 866: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.053587235510349274
    2. 'to' → logprob: -3.5535871982574463
    3. ' back' → logprob: -3.8035871982574463
    4. '_to' → logprob: -7.928587436676025
    5. ' ' → logprob: -8.178586959838867
    6. '_back' → logprob: -9.053586959838867
    7. 'back' → logprob: -9.178586959838867
    8. ' left' → logprob: -9.178586959838867
    9. '1' → logprob: -10.303586959838867
    10. ' +' → logprob: -10.553586959838867

Token 867: ' branching' (ID: 173776)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.26420503854751587
    2. 'the' → logprob: -1.889204978942871
    3. 'complete' → logprob: -4.014204978942871
    4. 'parent' → logprob: -4.139204978942871
    5. 'branch' → logprob: -4.139204978942871
    6. '1' → logprob: -4.639204978942871
    7. 'self' → logprob: -5.389204978942871
    8. 'current' → logprob: -5.639204978942871
    9. 'this' → logprob: -6.014204978942871
    10. 'left' → logprob: -6.139204978942871

Token 868: ' point' (ID: 2438)
  Prédit: '_point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.6811124682426453
    2. ' point' → logprob: -1.18111252784729
    3. 'point' → logprob: -1.68111252784729
    4. '       ' → logprob: -7.431112289428711
    5. '_points' → logprob: -9.306112289428711
    6. ' node' → logprob: -9.431112289428711
    7. '_' → logprob: -11.181112289428711
    8. 'node' → logprob: -11.556112289428711
    9. '	point' → logprob: -11.931112289428711
    10. '-point' → logprob: -12.056112289428711

Token 869: ' using' (ID: 2360)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05463964492082596
    2. ' +' → logprob: -3.5546395778656006
    3. '+' → logprob: -4.67963981628418
    4. ' and' → logprob: -4.92963981628418
    5. ' to' → logprob: -5.67963981628418
    6. ',' → logprob: -5.92963981628418
    7. '   ' → logprob: -8.05463981628418
    8. '
' → logprob: -8.30463981628418
    9. 'return' → logprob: -8.30463981628418
    10. ' (' → logprob: -8.55463981628418

Token 870: ' quick' (ID: 4853)
  Prédit: ' quick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' quick' → logprob: -0.23144643008708954
    2. 'quick' → logprob: -1.856446385383606
    3. ' the' → logprob: -4.481446266174316
    4. '1' → logprob: -4.606446266174316
    5. ' saved' → logprob: -4.731446266174316
    6. 'the' → logprob: -4.856446266174316
    7. '"' → logprob: -5.356446266174316
    8. 'saved' → logprob: -5.856446266174316
    9. ''' → logprob: -6.981446266174316
    10. 'jump' → logprob: -7.106446266174316

Token 871: 'save' (ID: 13158)
  Prédit: ' save'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' save' → logprob: -0.3213939964771271
    2. 'save' → logprob: -1.3213939666748047
    3. '_save' → logprob: -4.821393966674805
    4. '-save' → logprob: -11.571393966674805
    5. ' saves' → logprob: -11.696393966674805
    6. '_' → logprob: -11.696393966674805
    7. '       ' → logprob: -12.446393966674805
    8. ' _' → logprob: -12.446393966674805
    9. '	save' → logprob: -13.571393966674805
    10. ' ' → logprob: -13.571393966674805

Token 872: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02298571914434433
    2. '+' → logprob: -4.772985935211182
    3. ' +' → logprob: -4.897985935211182
    4. ',' → logprob: -5.772985935211182
    5. ')' → logprob: -6.772985935211182
    6. '
' → logprob: -7.397985935211182
    7. 'return' → logprob: -7.647985935211182
    8. ' and' → logprob: -8.272985458374023
    9. '   ' → logprob: -8.272985458374023
    10. ' ' → logprob: -8.897985458374023

Token 873: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003175889723934233
    2. '           ' → logprob: -8.500317573547363
    3. '   ' → logprob: -10.250317573547363
    4. '#' → logprob: -10.375317573547363
    5. ' ' → logprob: -11.375317573547363
    6. ' and' → logprob: -11.625317573547363
    7. '               ' → logprob: -12.375317573547363
    8. '      ' → logprob: -12.500317573547363
    9. ' +' → logprob: -13.000317573547363
    10. '        ' → logprob: -13.000317573547363

Token 874: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003006584942340851
    2. '#' (adapté à ' #') → logprob: -5.878006458282471
    3. '           ' → logprob: -9.378006935119629
    4. ' #' → logprob: -10.003006935119629
    5. '   ' → logprob: -10.753006935119629
    6. ' and' → logprob: -11.253006935119629
    7. ' ' → logprob: -11.253006935119629
    8. 'and' → logprob: -12.378006935119629
    9. '      ' → logprob: -12.503006935119629
    10. ' ' → logprob: -12.503006935119629

Token 875: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02548820525407791
    2. '#' → logprob: -3.9004881381988525
    3. '           ' → logprob: -6.525488376617432
    4. '+' → logprob: -7.400488376617432
    5. '   ' → logprob: -7.400488376617432
    6. 'return' → logprob: -7.775488376617432
    7. 'and' → logprob: -7.900488376617432
    8. ' and' → logprob: -7.900488376617432
    9. ' ' → logprob: -8.400487899780273
    10. ' +' → logprob: -8.525487899780273

Token 876: ' Then' (ID: 7801)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022390559315681458
    2. '#' → logprob: -5.647390365600586
    3. ' return' → logprob: -5.772390365600586
    4. 'return' → logprob: -5.897390365600586
    5. ' time' → logprob: -5.897390365600586
    6. ' then' → logprob: -6.272390365600586
    7. 'time' → logprob: -6.272390365600586
    8. ' #' → logprob: -6.897390365600586
    9. ' self' → logprob: -7.022390365600586
    10. 'self' → logprob: -7.397390365600586

Token 877: ' spend' (ID: 10075)
  Prédit: ' time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.3033168315887451
    2. 'time' → logprob: -1.4283168315887451
    3. ' self' → logprob: -4.803317070007324
    4. ' go' → logprob: -6.428317070007324
    5. ' min' → logprob: -6.553317070007324
    6. 'self' → logprob: -6.803317070007324
    7. ' ' → logprob: -6.928317070007324
    8. ' visit' → logprob: -7.053317070007324
    9. ' play' → logprob: -7.428317070007324
    10. '1' → logprob: -7.428317070007324

Token 878: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.5000022649765015
    2. ' time' → logprob: -1.6250022649765015
    3. '1' → logprob: -2.250002384185791
    4. 'min' → logprob: -3.000002384185791
    5. ' min' → logprob: -3.250002384185791
    6. ' ' → logprob: -6.375002384185791
    7. '   ' → logprob: -7.625002384185791
    8. 'max' → logprob: -9.875001907348633
    9. ' minimal' → logprob: -10.250001907348633
    10. '       ' → logprob: -10.500001907348633

Token 879: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.03133627399802208
    2. '_' → logprob: -4.281336307525635
    3. '_left' → logprob: -4.281336307525635
    4. 'to' → logprob: -6.031336307525635
    5. 'right' → logprob: -8.156335830688477
    6. ' to' → logprob: -9.156335830688477
    7. '+' → logprob: -9.531335830688477
    8. 'on' → logprob: -9.781335830688477
    9. ' on' → logprob: -9.906335830688477
    10. '1' → logprob: -10.531335830688477

Token 880: ' to' (ID: 316)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.03938717767596245
    2. '+' → logprob: -3.7893872261047363
    3. ')' → logprob: -5.289387226104736
    4. ' minutes' → logprob: -5.289387226104736
    5. ' ' → logprob: -6.039387226104736
    6. ' to' → logprob: -6.664387226104736
    7. '<|end|>' → logprob: -7.789387226104736
    8. ' )' → logprob: -7.914387226104736
    9. ' +
' → logprob: -8.289386749267578
    10. ' tokens' → logprob: -8.789386749267578

Token 881: ' play' (ID: 2107)
  Prédit: 'complete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'complete' → logprob: -0.32092154026031494
    2. ' complete' → logprob: -1.570921540260315
    3. 'play' → logprob: -3.4459214210510254
    4. 'finish' → logprob: -4.820921421051025
    5. 'visit' → logprob: -5.070921421051025
    6. ' play' → logprob: -5.195921421051025
    7. '1' → logprob: -5.820921421051025
    8. 'time' → logprob: -6.070921421051025
    9. 'expl' → logprob: -6.070921421051025
    10. 'tr' → logprob: -6.570921421051025

Token 882: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.3094048500061035
    2. ' right' → logprob: -2.0594048500061035
    3. ' the' → logprob: -2.6844048500061035
    4. 'the' → logprob: -3.0594048500061035
    5. 'time' → logprob: -4.9344048500061035
    6. ' on' → logprob: -5.4344048500061035
    7. ' (' → logprob: -6.3094048500061035
    8. 'left' → logprob: -6.9344048500061035
    9. '
' → logprob: -6.9344048500061035
    10. ' time' → logprob: -7.0594048500061035

Token 883: ' subtree' (ID: 126158)
  Prédit: '_sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.07072266936302185
    2. ' subtree' → logprob: -2.8207225799560547
    3. 'sub' → logprob: -5.570722579956055
    4. '_child' → logprob: -6.695722579956055
    5. '   ' → logprob: -7.070722579956055
    6. ')' → logprob: -7.320722579956055
    7. ' +' → logprob: -7.695722579956055
    8. '```' → logprob: -8.070722579956055
    9. '       ' → logprob: -8.320722579956055
    10. '_' → logprob: -8.320722579956055

Token 884: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0282149501144886
    2. ' +' → logprob: -4.653214931488037
    3. '
' → logprob: -5.028214931488037
    4. 'return' → logprob: -5.278214931488037
    5. '+' → logprob: -5.528214931488037
    6. ')' → logprob: -7.028214931488037
    7. ' return' → logprob: -7.903214931488037
    8. 'result' → logprob: -8.153215408325195
    9. '   ' → logprob: -8.403215408325195
    10. 'time' → logprob: -9.028215408325195

Token 885: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0893571376800537
    2. 'result' → logprob: -1.2143571376800537
    3. 'res' → logprob: -1.9643571376800537
    4. 'time' → logprob: -2.5893571376800537
    5. ' result' → logprob: -2.9643571376800537
    6. ' res' → logprob: -3.0893571376800537
    7. ' time' → logprob: -3.8393571376800537
    8. 'total' → logprob: -3.8393571376800537
    9. ' total' → logprob: -5.089357376098633
    10. '
' → logprob: -7.089357376098633

Token 886: ' #' (ID: 1069)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -1.1405776739120483
    2. 'res' → logprob: -1.2655776739120483
    3. '       ' → logprob: -1.6405776739120483
    4. 'total' → logprob: -2.265577793121338
    5. 'result' → logprob: -2.390577793121338
    6. ' res' → logprob: -5.515577793121338
    7. ' time' → logprob: -6.140577793121338
    8. ' total' → logprob: -6.390577793121338
    9. ' result' → logprob: -7.390577793121338
    10. 'cost' → logprob: -8.51557731628418

Token 887: ' Because' (ID: 13602)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.38895654678344727
    2. 'total' → logprob: -2.0139565467834473
    3. 'time' → logprob: -2.3889565467834473
    4. '       ' → logprob: -2.8889565467834473
    5. 'result' → logprob: -3.2639565467834473
    6. ' res' → logprob: -6.263956546783447
    7. 'cost' → logprob: -8.138956069946289
    8. ' total' → logprob: -8.513956069946289
    9. 'ans' → logprob: -8.888956069946289
    10. '   ' → logprob: -9.138956069946289

Token 888: ' it' (ID: 480)
  Prédit: ' time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.7560173273086548
    2. 'time' → logprob: -1.5060173273086548
    3. '       ' → logprob: -1.7560173273086548
    4. ' self' → logprob: -3.2560172080993652
    5. 'self' → logprob: -4.131017208099365
    6. ' total' → logprob: -4.256017208099365
    7. ' the' → logprob: -4.381017208099365
    8. ' (' → logprob: -4.756017208099365
    9. ' node' → logprob: -5.131017208099365
    10. 'left' → logprob: -5.256017208099365

Token 889: ' takes' (ID: 6948)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2809840440750122
    2. ' +' → logprob: -1.5309840440750122
    3. '+' → logprob: -2.0309839248657227
    4. ' _' → logprob: -2.9059839248657227
    5. ' is' → logprob: -3.1559839248657227
    6. '   ' → logprob: -3.5309839248657227
    7. ' =' → logprob: -3.6559839248657227
    8. ')' → logprob: -3.7809839248657227
    9. '_time' → logprob: -3.7809839248657227
    10. '=' → logprob: -3.9059839248657227

Token 890: ' ' (ID: 220)
  Prédit: ' time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.7845924496650696
    2. 'time' → logprob: -0.7845924496650696
    3. '1' → logprob: -2.534592390060425
    4. ' ' → logprob: -5.034592628479004
    5. ' (' → logprob: -7.784592628479004
    6. '       ' → logprob: -8.034592628479004
    7. '   ' → logprob: -8.409592628479004
    8. '(' → logprob: -8.659592628479004
    9. '(time' → logprob: -8.784592628479004
    10. '_time' → logprob: -9.034592628479004

Token 891: '1' (ID: 16)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.09368974715471268
    2. '1' → logprob: -2.4686896800994873
    3. ' time' → logprob: -6.093689918518066
    4. '2' → logprob: -6.218689918518066
    5. 'min' → logprob: -8.843689918518066
    6. '(' → logprob: -9.093689918518066
    7. ' ' → logprob: -9.218689918518066
    8. '(time' → logprob: -9.468689918518066
    9. '   ' → logprob: -10.718689918518066
    10. '(
' → logprob: -11.968689918518066

Token 892: ' minute' (ID: 12434)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.01122854184359312
    2. '+' → logprob: -4.511228561401367
    3. ' *' → logprob: -9.136228561401367
    4. ' ' → logprob: -9.886228561401367
    5. '*' → logprob: -12.386228561401367
    6. ' +
' → logprob: -12.386228561401367
    7. ')' → logprob: -12.511228561401367
    8. ' #' → logprob: -12.511228561401367
    9. '#' → logprob: -13.886228561401367
    10. ' )' → logprob: -14.011228561401367

Token 893: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.12235743552446365
    2. 'to' → logprob: -2.4973573684692383
    3. ' +' → logprob: -4.122357368469238
    4. ' *' → logprob: -4.872357368469238
    5. '+' → logprob: -5.622357368469238
    6. ' more' → logprob: -6.247357368469238
    7. '*' → logprob: -6.622357368469238
    8. '       ' → logprob: -7.372357368469238
    9. ' for' → logprob: -8.247357368469238
    10. 'more' → logprob: -8.372357368469238

Token 894: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.20628805458545685
    2. 'go' → logprob: -1.8312880992889404
    3. ' move' → logprob: -4.331287860870361
    4. 'travel' → logprob: -5.331287860870361
    5. 'tr' → logprob: -5.456287860870361
    6. 'visit' → logprob: -6.081287860870361
    7. ' go' → logprob: -7.706287860870361
    8. 'return' → logprob: -7.706287860870361
    9. 'reach' → logprob: -8.20628833770752
    10. 'complete' → logprob: -9.20628833770752

Token 895: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.0340452194213867
    2. ' to' → logprob: -1.2840452194213867
    3. 'to' → logprob: -1.9090452194213867
    4. 'down' → logprob: -2.0340452194213867
    5. ' from' → logprob: -3.5340452194213867
    6. ' down' → logprob: -4.034045219421387
    7. ' between' → logprob: -4.534045219421387
    8. '   ' → logprob: -4.784045219421387
    9. '_down' → logprob: -4.784045219421387
    10. 'between' → logprob: -5.784045219421387

Token 896: ' branching' (ID: 173776)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.6992121338844299
    2. ' one' → logprob: -1.6992120742797852
    3. 'branch' → logprob: -1.6992120742797852
    4. 'node' → logprob: -2.449212074279785
    5. 'a' → logprob: -3.699212074279785
    6. ' node' → logprob: -4.824212074279785
    7. 'parent' → logprob: -5.074212074279785
    8. ' a' → logprob: -5.449212074279785
    9. 'the' → logprob: -6.199212074279785
    10. ' branching' → logprob: -6.824212074279785

Token 897: ' point' (ID: 2438)
  Prédit: '_point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.06719720363616943
    2. 'point' → logprob: -2.942197322845459
    3. ' point' → logprob: -4.692197322845459
    4. '       ' → logprob: -6.442197322845459
    5. '_points' → logprob: -7.442197322845459
    6. '_' → logprob: -7.817197322845459
    7. '_node' → logprob: -8.0671968460083
    8. '   ' → logprob: -9.5671968460083
    9. 'node' → logprob: -10.0671968460083
    10. 'points' → logprob: -10.9421968460083

Token 898: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.0550234355032444
    2. 'to' → logprob: -2.930023431777954
    3. '_to' → logprob: -9.680023193359375
    4. '   ' → logprob: -10.430023193359375
    5. '       ' → logprob: -11.055023193359375
    6. '#' → logprob: -11.430023193359375
    7. ' ' → logprob: -11.680023193359375
    8. 'down' → logprob: -12.180023193359375
    9. ' down' → logprob: -13.555023193359375
    10. ',' → logprob: -14.180023193359375

Token 899: ' next' (ID: 2613)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.2016686499118805
    2. ' child' → logprob: -1.951668620109558
    3. 'branch' → logprob: -4.701668739318848
    4. 'left' → logprob: -5.201668739318848
    5. 'each' → logprob: -5.451668739318848
    6. 'a' → logprob: -5.826668739318848
    7. ' each' → logprob: -5.951668739318848
    8. 'next' → logprob: -6.201668739318848
    9. ' a' → logprob: -6.201668739318848
    10. 'another' → logprob: -6.451668739318848

Token 900: ' branching' (ID: 173776)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.9427061080932617
    2. 'branch' → logprob: -1.4427061080932617
    3. 'node' → logprob: -2.0677061080932617
    4. ' branching' → logprob: -2.1927061080932617
    5. ' line' → logprob: -3.3177061080932617
    6. '_branch' → logprob: -3.8177061080932617
    7. 'space' → logprob: -4.692706108093262
    8. ' branch' → logprob: -4.817706108093262
    9. 'line' → logprob: -4.942706108093262
    10. 'point' → logprob: -4.942706108093262

Token 901: ' point' (ID: 2438)
  Prédit: ' point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' point' → logprob: -0.6950384974479675
    2. 'point' → logprob: -0.9450384974479675
    3. '_point' → logprob: -2.1950385570526123
    4. ' or' → logprob: -7.820038318634033
    5. '       ' → logprob: -8.820038795471191
    6. '_points' → logprob: -9.695038795471191
    7. '_' → logprob: -10.070038795471191
    8. '_target' → logprob: -10.070038795471191
    9. 'points' → logprob: -10.320038795471191
    10. '-point' → logprob: -10.445038795471191

Token 902: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.15495188534259796
    2. 'or' → logprob: -2.029951810836792
    3. '       ' → logprob: -5.279952049255371
    4. '+' → logprob: -5.404952049255371
    5. ' +' → logprob: -6.654952049255371
    6. ' (' → logprob: -8.404952049255371
    7. ' to' → logprob: -8.404952049255371
    8. '   ' → logprob: -8.654952049255371
    9. 'to' → logprob: -8.779952049255371
    10. ',' → logprob: -9.029952049255371

Token 903: ' ending' (ID: 22013)
  Prédit: 'ending'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ending' → logprob: -0.0010554377222433686
    2. 'branch' → logprob: -7.8760552406311035
    3. 'leaf' → logprob: -8.001055717468262
    4. ' ending' → logprob: -8.251055717468262
    5. 'child' → logprob: -10.626055717468262
    6. 'end' → logprob: -10.751055717468262
    7. 'node' → logprob: -11.501055717468262
    8. 'edge' → logprob: -11.626055717468262
    9. 'le' → logprob: -12.501055717468262
    10. '#' → logprob: -12.876055717468262

Token 904: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22562800347805023
    2. ' +' → logprob: -1.9756280183792114
    3. '+' → logprob: -3.600627899169922
    4. ',' → logprob: -3.975627899169922
    5. '   ' → logprob: -5.100627899169922
    6. '.' → logprob: -5.600627899169922
    7. ' and' → logprob: -6.725627899169922
    8. ')' → logprob: -6.850627899169922
    9. ' or' → logprob: -6.850627899169922
    10. '           ' → logprob: -7.475627899169922

Token 905: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014682619832456112
    2. 'result' → logprob: -5.639682769775391
    3. 'return' → logprob: -5.639682769775391
    4. ' time' → logprob: -6.139682769775391
    5. ' return' → logprob: -6.389682769775391
    6. ' result' → logprob: -6.639682769775391
    7. 'time' → logprob: -6.639682769775391
    8. '   ' → logprob: -8.01468276977539
    9. ' +' → logprob: -8.76468276977539
    10. ' total' → logprob: -9.01468276977539

Token 906: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18533514440059662
    2. ' time' → logprob: -2.560335159301758
    3. 'time' → logprob: -3.435335159301758
    4. ' result' → logprob: -3.810335159301758
    5. 'result' → logprob: -4.060335159301758
    6. ' total' → logprob: -5.060335159301758
    7. 'total' → logprob: -5.810335159301758
    8. 'return' → logprob: -6.060335159301758
    9. ' res' → logprob: -6.185335159301758
    10. ' return' → logprob: -6.560335159301758

Token 907: ' the' (ID: 290)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.220466136932373
    2. 'time' → logprob: -1.595466136932373
    3. 'result' → logprob: -1.595466136932373
    4. 'total' → logprob: -2.345466136932373
    5. ' res' → logprob: -2.470466136932373
    6. '       ' → logprob: -2.970466136932373
    7. ' time' → logprob: -3.720466136932373
    8. ' total' → logprob: -3.970466136932373
    9. ' result' → logprob: -4.220466136932373
    10. 'self' → logprob: -5.345466136932373

Token 908: ' cost' (ID: 3097)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.8168198466300964
    2. 'result' → logprob: -1.5668199062347412
    3. 'total' → logprob: -1.9418199062347412
    4. 'time' → logprob: -2.066819906234741
    5. ' res' → logprob: -4.066819667816162
    6. 'min' → logprob: -4.441819667816162
    7. ' total' → logprob: -5.066819667816162
    8. 'cost' → logprob: -5.066819667816162
    9. ' result' → logprob: -5.191819667816162
    10. ' time' → logprob: -5.191819667816162

Token 909: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5863671898841858
    2. ' =' → logprob: -0.8363671898841858
    3. '       ' → logprob: -5.586367130279541
    4. ' +=' → logprob: -5.836367130279541
    5. ' is' → logprob: -6.836367130279541
    6. '+=' → logprob: -7.461367130279541
    7. '_total' → logprob: -7.961367130279541
    8. '_result' → logprob: -8.4613676071167
    9. '_' → logprob: -8.5863676071167
    10. '_left' → logprob: -8.5863676071167

Token 910: ' traveling' (ID: 26023)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.777227520942688
    2. '1' → logprob: -1.152227520942688
    3. 'return' → logprob: -2.7772274017333984
    4. ' (' → logprob: -3.5272274017333984
    5. 'going' → logprob: -4.027227401733398
    6. 'moving' → logprob: -4.027227401733398
    7. 'time' → logprob: -4.152227401733398
    8. ' moving' → logprob: -4.402227401733398
    9. ' visiting' → logprob: -4.652227401733398
    10. 'tr' → logprob: -4.652227401733398

Token 911: ' edges' (ID: 22569)
  Prédit: ' between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' between' → logprob: -0.5413268208503723
    2. ' is' → logprob: -2.2913267612457275
    3. ' from' → logprob: -2.2913267612457275
    4. ' to' → logprob: -2.6663267612457275
    5. 'from' → logprob: -2.9163267612457275
    6. 'between' → logprob: -2.9163267612457275
    7. ' through' → logprob: -4.541326999664307
    8. 'to' → logprob: -5.166326999664307
    9. ' +' → logprob: -5.791326999664307
    10. ' down' → logprob: -6.166326999664307

Token 912: ' once' (ID: 4730)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.46257784962654114
    2. '+' → logprob: -2.0875778198242188
    3. ' is' → logprob: -2.3375778198242188
    4. ')' → logprob: -3.3375778198242188
    5. ' to' → logprob: -3.5875778198242188
    6. ' +=' → logprob: -3.9625778198242188
    7. ' ' → logprob: -4.462577819824219
    8. ' )' → logprob: -5.087577819824219
    9. ' plus' → logprob: -5.087577819824219
    10. ',' → logprob: -5.087577819824219

Token 913: ' each' (ID: 2454)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2508540153503418
    2. '+' → logprob: -2.125854015350342
    3. '       ' → logprob: -2.625854015350342
    4. ' plus' → logprob: -4.125854015350342
    5. ' is' → logprob: -4.875854015350342
    6. ',' → logprob: -5.875854015350342
    7. '   ' → logprob: -7.375854015350342
    8. ' +
' → logprob: -7.500854015350342
    9. ')' → logprob: -7.750854015350342
    10. ' and' → logprob: -7.875854015350342

Token 914: ' way' (ID: 2006)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47124919295310974
    2. ' is' → logprob: -1.2212492227554321
    3. ' plus' → logprob: -3.8462491035461426
    4. ' +' → logprob: -3.9712491035461426
    5. ',' → logprob: -4.971249103546143
    6. '+' → logprob: -5.096249103546143
    7. '.' → logprob: -5.471249103546143
    8. ' and' → logprob: -5.471249103546143
    9. 'is' → logprob: -5.846249103546143
    10. '   ' → logprob: -5.846249103546143

Token 915: ' (' (ID: 350)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.9734079837799072
    2. '       ' → logprob: -1.2234079837799072
    3. ' +' → logprob: -1.3484079837799072
    4. '+' → logprob: -3.2234079837799072
    5. ',' → logprob: -4.598407745361328
    6. ' plus' → logprob: -5.223407745361328
    7. ' =' → logprob: -5.973407745361328
    8. '   ' → logprob: -6.098407745361328
    9. ')' → logprob: -6.348407745361328
    10. '.' → logprob: -6.848407745361328

Token 916: 'go' (ID: 2319)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.045503512024879456
    2. ' )' → logprob: -3.920503616333008
    3. '+' → logprob: -4.795503616333008
    4. ' +' → logprob: -5.045503616333008
    5. ')+' → logprob: -5.170503616333008
    6. '       ' → logprob: -7.420503616333008
    7. ' plus' → logprob: -7.545503616333008
    8. ' and' → logprob: -7.545503616333008
    9. 'self' → logprob: -7.920503616333008
    10. ' for' → logprob: -8.545503616333008

Token 917: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.33759620785713196
    2. 'and' → logprob: -2.0875961780548096
    3. ' +' → logprob: -2.9625961780548096
    4. '+' → logprob: -3.2125961780548096
    5. '   ' → logprob: -4.087596416473389
    6. '-' → logprob: -4.087596416473389
    7. 'from' → logprob: -5.212596416473389
    8. ' -' → logprob: -5.337596416473389
    9. 'down' → logprob: -5.462596416473389
    10. ' to' → logprob: -5.587596416473389

Token 918: ' back' (ID: 1602)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7486368417739868
    2. 'back' → logprob: -0.7486368417739868
    3. ' back' → logprob: -3.4986367225646973
    4. ' return' → logprob: -3.7486367225646973
    5. 'come' → logprob: -8.748637199401855
    6. ' come' → logprob: -10.873637199401855
    7. ' ' → logprob: -12.123637199401855
    8. '1' → logprob: -13.373637199401855
    9. '
' → logprob: -14.248637199401855
    10. '_back' → logprob: -14.373637199401855

Token 919: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0068324715830385685
    2. ' )' → logprob: -5.256832599639893
    3. ' is' → logprob: -7.381832599639893
    4. '   ' → logprob: -7.756832599639893
    5. ' and' → logprob: -8.506832122802734
    6. ',' → logprob: -9.381832122802734
    7. ' to' → logprob: -9.756832122802734
    8. ' ' → logprob: -10.131832122802734
    9. '+' → logprob: -10.756832122802734
    10. ' +' → logprob: -11.131832122802734

Token 920: ' is' (ID: 382)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7700718641281128
    2. ' +' → logprob: -1.1450718641281128
    3. '       ' → logprob: -1.8950718641281128
    4. ' is' → logprob: -3.0200719833374023
    5. ',' → logprob: -5.395071983337402
    6. ')' → logprob: -5.520071983337402
    7. '   ' → logprob: -6.145071983337402
    8. ' plus' → logprob: -6.395071983337402
    9. '+
' → logprob: -6.645071983337402
    10. ' +
' → logprob: -6.770071983337402

Token 921: ' doubled' (ID: 69040)
  Prédit: ' time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.7734531164169312
    2. 'time' → logprob: -0.7734531164169312
    3. '2' → logprob: -3.0234532356262207
    4. ' ' → logprob: -4.648453235626221
    5. '1' → logprob: -4.773453235626221
    6. ' (' → logprob: -5.523453235626221
    7. '(time' → logprob: -6.273453235626221
    8. '(' → logprob: -6.523453235626221
    9. '   ' → logprob: -6.898453235626221
    10. '       ' → logprob: -7.648453235626221

Token 922: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6082248687744141
    2. '+' → logprob: -1.483224868774414
    3. ' +' → logprob: -1.858224868774414
    4. ')' → logprob: -3.483224868774414
    5. ',' → logprob: -4.483224868774414
    6. '.' → logprob: -4.983224868774414
    7. '
' → logprob: -5.233224868774414
    8. ':' → logprob: -5.483224868774414
    9. '   ' → logprob: -5.858224868774414
    10. ' and' → logprob: -6.233224868774414

Token 923: ' all' (ID: 722)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -1.6162525415420532
    2. 'both' → logprob: -1.6162525415420532
    3. 'the' → logprob: -1.7412525415420532
    4. ' the' → logprob: -2.3662524223327637
    5. ' both' → logprob: -2.7412524223327637
    6. ' each' → logprob: -2.8662524223327637
    7. '1' → logprob: -2.9912524223327637
    8. '2' → logprob: -3.2412524223327637
    9. 'edges' → logprob: -3.8662524223327637
    10. 'sub' → logprob: -3.9912524223327637

Token 924: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.43737202882766724
    2. 'edges' → logprob: -1.5623719692230225
    3. 'sub' → logprob: -3.1873719692230225
    4. ' sub' → logprob: -3.4373719692230225
    5. '   ' → logprob: -4.187372207641602
    6. 'branches' → logprob: -4.562372207641602
    7. ' subtree' → logprob: -5.187372207641602
    8. ' branches' → logprob: -5.312372207641602
    9. '_le' → logprob: -5.437372207641602
    10. 'le' → logprob: -5.562372207641602

Token 925: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03508973866701126
    2. '.' → logprob: -4.41008996963501
    3. ',' → logprob: -4.91008996963501
    4. ' except' → logprob: -5.53508996963501
    5. ' +' → logprob: -6.28508996963501
    6. ')' → logprob: -6.41008996963501
    7. 'except' → logprob: -6.41008996963501
    8. ' in' → logprob: -6.53508996963501
    9. ' and' → logprob: -6.78508996963501
    10. ' but' → logprob: -7.41008996963501

Token 926: ' except' (ID: 6384)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02609858289361
    2. ' but' → logprob: -4.901098728179932
    3. ' and' → logprob: -5.401098728179932
    4. '+' → logprob: -6.276098728179932
    5. ' +' → logprob: -6.276098728179932
    6. 'except' → logprob: -6.401098728179932
    7. 'return' → logprob: -6.526098728179932
    8. ' plus' → logprob: -6.526098728179932
    9. ' except' → logprob: -6.776098728179932
    10. '   ' → logprob: -6.776098728179932

Token 927: ' those' (ID: 2617)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.4986668527126312
    2. 'the' → logprob: -1.1236668825149536
    3. ' for' → logprob: -3.748666763305664
    4. 'for' → logprob: -4.123666763305664
    5. ' one' → logprob: -4.123666763305664
    6. '1' → logprob: -6.373666763305664
    7. '       ' → logprob: -6.498666763305664
    8. '   ' → logprob: -6.498666763305664
    9. 'return' → logprob: -6.623666763305664
    10. ' those' → logprob: -6.873666763305664

Token 928: ' at' (ID: 540)
  Prédit: ' leading'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' leading' → logprob: -0.6342858672142029
    2. 'leading' → logprob: -1.1342859268188477
    3. ' that' → logprob: -3.2592859268188477
    4. 'in' → logprob: -4.009285926818848
    5. 'that' → logprob: -4.009285926818848
    6. ' in' → logprob: -4.134285926818848
    7. 'to' → logprob: -4.509285926818848
    8. '   ' → logprob: -4.884285926818848
    9. ' to' → logprob: -5.134285926818848
    10. ' on' → logprob: -5.259285926818848

Token 929: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.36953631043434143
    2. 'le' → logprob: -1.744536280632019
    3. 'leaf' → logprob: -2.4945363998413086
    4. 'this' → logprob: -3.6195363998413086
    5. ' the' → logprob: -3.8695363998413086
    6. ' leaf' → logprob: -7.369536399841309
    7. '       ' → logprob: -7.744536399841309
    8. ' leaves' → logprob: -7.744536399841309
    9. '   ' → logprob: -7.869536399841309
    10. ' this' → logprob: -7.994536399841309

Token 930: ' last' (ID: 2174)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.32952848076820374
    2. 'leaf' → logprob: -2.079528570175171
    3. 'bottom' → logprob: -2.329528570175171
    4. 'end' → logprob: -3.704528570175171
    5. 'root' → logprob: -4.204528331756592
    6. ' leaves' → logprob: -4.579528331756592
    7. 'edges' → logprob: -5.829528331756592
    8. 'current' → logprob: -5.954528331756592
    9. 'ends' → logprob: -6.954528331756592
    10. 'top' → logprob: -8.20452880859375

Token 931: ' path' (ID: 3104)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -1.2227009534835815
    2. '"' → logprob: -1.9727009534835815
    3. ' ' → logprob: -1.9727009534835815
    4. '   ' → logprob: -2.472701072692871
    5. ' line' → logprob: -2.847701072692871
    6. 'lines' → logprob: -3.222701072692871
    7. '"\' → logprob: -3.347701072692871
    8. 'level' → logprob: -3.472701072692871
    9. 'return' → logprob: -3.847701072692871
    10. '_' → logprob: -3.972701072692871

Token 932: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03227762132883072
    2. ')' → logprob: -4.282277584075928
    3. '
' → logprob: -4.657277584075928
    4. ',' → logprob: -6.032277584075928
    5. '        
' → logprob: -6.407277584075928
    6. ')
' → logprob: -7.157277584075928
    7. '   ' → logprob: -7.532277584075928
    8. ' +' → logprob: -7.907277584075928
    9. '

' → logprob: -8.532278060913086
    10. '        

' → logprob: -8.657278060913086

Token 933: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0209344532340765
    2. 'return' → logprob: -5.145934581756592
    3. ' time' → logprob: -5.520934581756592
    4. ' return' → logprob: -5.770934581756592
    5. 'result' → logprob: -6.145934581756592
    6. 'time' → logprob: -6.520934581756592
    7. ' result' → logprob: -6.770934581756592
    8. '
' → logprob: -7.270934581756592
    9. '        
' → logprob: -7.395934581756592
    10. '   ' → logprob: -7.645934581756592

Token 934: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5394973754882812
    2. 'result' → logprob: -1.9144973754882812
    3. 'time' → logprob: -2.1644973754882812
    4. 'res' → logprob: -2.1644973754882812
    5. 'total' → logprob: -3.9144973754882812
    6. ' res' → logprob: -4.914497375488281
    7. ' time' → logprob: -6.039497375488281
    8. 'self' → logprob: -6.039497375488281
    9. ' result' → logprob: -6.289497375488281
    10. '
' → logprob: -6.914497375488281

Token 935: ' This' (ID: 1328)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.8603273034095764
    2. 'result' → logprob: -1.6103272438049316
    3. 'time' → logprob: -1.9853272438049316
    4. 'f' → logprob: -2.3603272438049316
    5. '       ' → logprob: -2.3603272438049316
    6. 'total' → logprob: -3.7353272438049316
    7. 'self' → logprob: -3.9853272438049316
    8. 'min' → logprob: -5.485327243804932
    9. '#' → logprob: -6.360327243804932
    10. 'final' → logprob: -7.610327243804932

Token 936: ' formula' (ID: 20690)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.437199592590332
    2. ')' → logprob: -1.937199592590332
    3. '       ' → logprob: -2.062199592590332
    4. ' is' → logprob: -2.312199592590332
    5. '_time' → logprob: -2.687199592590332
    6. ' return' → logprob: -3.312199592590332
    7. '=' → logprob: -3.312199592590332
    8. '   ' → logprob: -3.437199592590332
    9. 'return' → logprob: -3.437199592590332
    10. '
' → logprob: -3.562199592590332

Token 937: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43131381273269653
    2. ' =' → logprob: -1.0563137531280518
    3. '       ' → logprob: -6.181313991546631
    4. ':' → logprob: -8.306313514709473
    5. ')' → logprob: -9.306313514709473
    6. 'return' → logprob: -9.931313514709473
    7. '   ' → logprob: -10.681313514709473
    8. '=time' → logprob: -11.056313514709473
    9. ' +=' → logprob: -11.181313514709473
    10. ')=' → logprob: -11.306313514709473

Token 938: ' derived' (ID: 24923)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.09184078127145767
    2. ' time' → logprob: -2.4668407440185547
    3. '       ' → logprob: -6.591840744018555
    4. '   ' → logprob: -6.591840744018555
    5. '           ' → logprob: -9.216840744018555
    6. ' ' → logprob: -10.841840744018555
    7. 'min' → logprob: -12.091840744018555
    8. '     ' → logprob: -12.341840744018555
    9. '    ' → logprob: -12.591840744018555
    10. '               ' → logprob: -12.716840744018555

Token 939: ' from' (ID: 591)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.24006293714046478
    2. '       ' → logprob: -2.240062952041626
    3. ')' → logprob: -3.490062952041626
    4. '   ' → logprob: -3.615062952041626
    5. ' +' → logprob: -3.615062952041626
    6. '=' → logprob: -4.990062713623047
    7. ':' → logprob: -5.115062713623047
    8. ',' → logprob: -6.365062713623047
    9. '.' → logprob: -6.740062713623047
    10. '           ' → logprob: -6.990062713623047

Token 940: ' editorial' (ID: 37857)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.0014089244650676847
    2. ' time' → logprob: -7.12640905380249
    3. '       ' → logprob: -7.50140905380249
    4. '   ' → logprob: -10.376408576965332
    5. 'return' → logprob: -12.501408576965332
    6. 'self' → logprob: -12.876408576965332
    7. '2' → logprob: -12.876408576965332
    8. '(time' → logprob: -12.876408576965332
    9. 'max' → logprob: -13.126408576965332
    10. '           ' → logprob: -13.626408576965332

Token 941: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03356662765145302
    2. ')' → logprob: -4.408566474914551
    3. ',' → logprob: -4.783566474914551
    4. '
' → logprob: -5.283566474914551
    5. '<|end|>' → logprob: -6.408566474914551
    6. '        
' → logprob: -6.533566474914551
    7. 'return' → logprob: -7.533566474914551
    8. '        ' → logprob: -7.783566474914551
    9. '   ' → logprob: -8.03356647491455
    10. ':' → logprob: -8.15856647491455

Token 942: ' similar' (ID: 6771)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.9002580046653748
    2. 'the' → logprob: -1.2752580642700195
    3. 'def' → logprob: -2.4002580642700195
    4. 'At' → logprob: -3.0252580642700195
    5. 'abc' → logprob: -3.1502580642700195
    6. 'at' → logprob: -3.6502580642700195
    7. '_at' → logprob: -4.1502580642700195
    8. '       ' → logprob: -4.1502580642700195
    9. 'ABC' → logprob: -4.6502580642700195
    10. '   ' → logprob: -4.9002580642700195

Token 943: ' problem' (ID: 4792)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2151005268096924
    2. '       ' → logprob: -1.7151005268096924
    3. '   ' → logprob: -2.2151005268096924
    4. '_sub' → logprob: -2.3401005268096924
    5. '(node' → logprob: -2.7151005268096924
    6. 'node' → logprob: -3.5901005268096924
    7. 'sub' → logprob: -3.7151005268096924
    8. '_time' → logprob: -3.8401005268096924
    9. 'def' → logprob: -4.340100288391113
    10. ')
' → logprob: -4.715100288391113

Token 944: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03855719789862633
    2. '
' → logprob: -4.663557052612305
    3. 'count' → logprob: -4.663557052612305
    4. '        
' → logprob: -5.038557052612305
    5. ',' → logprob: -5.663557052612305
    6. ')' → logprob: -6.038557052612305
    7. 'return' → logprob: -7.163557052612305
    8. '<|end|>' → logprob: -7.163557052612305
    9. ')
' → logprob: -7.538557052612305
    10. 'result' → logprob: -7.913557052612305

Token 945: ' multiple' (ID: 7598)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8508189916610718
    2. '       ' → logprob: -0.9758189916610718
    3. 'return' → logprob: -1.8508189916610718
    4. 'result' → logprob: -3.8508191108703613
    5. ')' → logprob: -5.600819110870361
    6. 'final' → logprob: -6.225819110870361
    7. 'time' → logprob: -6.225819110870361
    8. 'count' → logprob: -6.350819110870361
    9. ' self' → logprob: -6.475819110870361
    10. '```' → logprob: -6.725819110870361

Token 946: ' test' (ID: 1746)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0594979524612427
    2. 'lines' → logprob: -1.0594979524612427
    3. '       ' → logprob: -2.309497833251953
    4. '#' → logprob: -3.434497833251953
    5. ' lines' → logprob: -3.434497833251953
    6. 'times' → logprob: -4.059497833251953
    7. '_le' → logprob: -4.309497833251953
    8. 'calcul' → logprob: -4.559497833251953
    9. 'def' → logprob: -4.809497833251953
    10. 'return' → logprob: -4.934497833251953

Token 947: ' validations' (ID: 188465)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7524644136428833
    2. '_time' → logprob: -1.7524644136428833
    3. '   ' → logprob: -1.8774644136428833
    4. '_points' → logprob: -2.7524642944335938
    5. '_' → logprob: -2.8774642944335938
    6. 'self' → logprob: -4.252464294433594
    7. ')' → logprob: -4.502464294433594
    8. '_count' → logprob: -4.752464294433594
    9. '_times' → logprob: -5.252464294433594
    10. '_point' → logprob: -5.252464294433594

Token 948: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023978758603334427
    2. '
' → logprob: -5.1489787101745605
    3. ')' → logprob: -5.5239787101745605
    4. '        
' → logprob: -5.6489787101745605
    5. 'result' → logprob: -6.0239787101745605
    6. 'return' → logprob: -6.3989787101745605
    7. ',' → logprob: -6.6489787101745605
    8. 'time' → logprob: -7.2739787101745605
    9. ' time' → logprob: -7.7739787101745605
    10. ')
' → logprob: -7.8989787101745605

Token 949: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4603963792324066
    2. 'result' → logprob: -1.335396409034729
    3. ' result' → logprob: -2.7103962898254395
    4. 'time' → logprob: -4.2103962898254395
    5. '
' → logprob: -4.7103962898254395
    6. ' time' → logprob: -4.9603962898254395
    7. 'total' → logprob: -5.9603962898254395
    8. 'res' → logprob: -6.2103962898254395
    9. ' total' → logprob: -6.8353962898254395
    10. '        
' → logprob: -7.0853962898254395

Token 950: ' res' (ID: 694)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6912566423416138
    2. 'result' → logprob: -1.3162566423416138
    3. ' result' → logprob: -1.8162566423416138
    4. ' time' → logprob: -3.816256523132324
    5. 'time' → logprob: -3.816256523132324
    6. '
' → logprob: -4.816256523132324
    7. 'res' (adapté à ' res') → logprob: -5.191256523132324
    8. ' res' → logprob: -6.066256523132324
    9. 'total' → logprob: -6.191256523132324
    10. ' total' → logprob: -6.566256523132324

Token 951: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31394699215888977
    2. '=' → logprob: -1.3139469623565674
    3. '_' → logprob: -7.4389472007751465
    4. 'ult' → logprob: -10.438946723937988
    5. ',' → logprob: -11.188946723937988
    6. '   ' → logprob: -11.438946723937988
    7. '       ' → logprob: -11.688946723937988
    8. ')' → logprob: -12.188946723937988
    9. ' _' → logprob: -12.688946723937988
    10. '_=' → logprob: -12.688946723937988

Token 952: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.018162818625569344
    2. ' time' → logprob: -4.018162727355957
    3. '       ' → logprob: -12.018162727355957
    4. '   ' → logprob: -12.143162727355957
    5. '     ' → logprob: -14.893162727355957
    6. 'min' → logprob: -15.018162727355957
    7. '           ' → logprob: -15.268162727355957
    8. ' ' → logprob: -15.643162727355957
    9. ' min' → logprob: -15.893162727355957
    10. '(time' → logprob: -16.018163681030273

Token 953: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -1.5570885807392187e-05
    2. '_' → logprob: -11.125015258789062
    3. '_right' → logprob: -15.125015258789062
    4. ' _' → logprob: -15.625015258789062
    5. '+' → logprob: -16.625015258789062
    6. ')_' → logprob: -17.500015258789062
    7. 'left' → logprob: -17.625015258789062
    8. '       ' → logprob: -17.625015258789062
    9. '```' → logprob: -17.625015258789062
    10. '   ' → logprob: -17.750015258789062

Token 954: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2519296407699585
    2. '+' → logprob: -1.5019296407699585
    3. '+
' → logprob: -15.87692928314209
    4. ' ' → logprob: -16.126930236816406
    5. '       ' → logprob: -16.251930236816406
    6. ' +
' → logprob: -16.501930236816406
    7. '
' → logprob: -17.001930236816406
    8. ' ' → logprob: -17.626930236816406
    9. '+self' → logprob: -17.876930236816406
    10. '＋' → logprob: -18.001930236816406

Token 955: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.0314502976834774
    2. ' time' → logprob: -3.6564502716064453
    3. '1' → logprob: -5.281450271606445
    4. ' ' → logprob: -10.406450271606445
    5. '   ' → logprob: -11.031450271606445
    6. '(time' → logprob: -14.281450271606445
    7. '  ' → logprob: -14.406450271606445
    8. '	time' → logprob: -14.531450271606445
    9. '       ' → logprob: -14.656450271606445
    10. '
' → logprob: -14.656450271606445

Token 956: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -1.3663626305060461e-05
    2. 'right' → logprob: -11.25001335144043
    3. '_left' → logprob: -15.12501335144043
    4. '_' → logprob: -15.37501335144043
    5. 'Right' → logprob: -15.87501335144043
    6. '```' → logprob: -17.75001335144043
    7. '+' → logprob: -18.62501335144043
    8. '_RIGHT' → logprob: -18.62501335144043
    9. '_
' → logprob: -19.00001335144043
    10. ' _' → logprob: -19.00001335144043

Token 957: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.04300239682197571
    2. '+' → logprob: -3.1680023670196533
    3. '       ' → logprob: -13.293002128601074
    4. ' ' → logprob: -14.793002128601074
    5. 'res' → logprob: -15.043002128601074
    6. '        ' → logprob: -15.668002128601074
    7. ' +
' → logprob: -15.793002128601074
    8. '
' → logprob: -16.04300308227539
    9. '```' → logprob: -16.41800308227539
    10. '+
' → logprob: -16.66800308227539

Token 958: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002025708556175232
    2. 'count' → logprob: -6.377025604248047
    3. 'total' → logprob: -9.002025604248047
    4. ' ' → logprob: -9.627025604248047
    5. '(count' → logprob: -10.127025604248047
    6. 'min' → logprob: -10.252025604248047
    7. '(' → logprob: -10.752025604248047
    8. '(total' → logprob: -11.252025604248047
    9. '(min' → logprob: -11.877025604248047
    10. ' (' → logprob: -12.127025604248047

Token 959: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007153053302317858
    2. 'total' → logprob: -5.007153034210205
    3. 'count' → logprob: -8.507153511047363
    4. '(total' → logprob: -8.757153511047363
    5. 'min' → logprob: -11.007153511047363
    6. '2' → logprob: -11.007153511047363
    7. ' total' → logprob: -11.257153511047363
    8. ' ' → logprob: -11.757153511047363
    9. ')' → logprob: -11.882153511047363
    10. '(' → logprob: -11.882153511047363

Token 960: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5922526121139526
    2. ' +' → logprob: -1.0922526121139526
    3. '+' → logprob: -2.217252731323242
    4. ' )' → logprob: -6.467252731323242
    5. '<|end|>' → logprob: -7.592252731323242
    6. ')+' → logprob: -7.842252731323242
    7. '+)' → logprob: -10.592252731323242
    8. '<|end|>' → logprob: -11.217252731323242
    9. '*' → logprob: -11.342252731323242
    10. '#' → logprob: -11.467252731323242

Token 961: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12695813179016113
    2. '+' → logprob: -2.126958131790161
    3. '<|end|>' → logprob: -11.001957893371582
    4. '       ' → logprob: -11.876957893371582
    5. '*' → logprob: -13.001957893371582
    6. ' *' → logprob: -13.626957893371582
    7. ')' → logprob: -14.501957893371582
    8. '<|end|>' → logprob: -15.001957893371582
    9. 'min' → logprob: -15.126957893371582
    10. '   ' → logprob: -15.126957893371582

Token 962: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -6.392202976712724e-06
    2. ' min' → logprob: -12.000006675720215
    3. '(min' → logprob: -16.0000057220459
    4. '	min' → logprob: -17.7500057220459
    5. 'minimum' → logprob: -18.6250057220459
    6. '   ' → logprob: -19.2500057220459
    7. '=min' → logprob: -20.2500057220459
    8. '[min' → logprob: -20.5000057220459
    9. '-min' → logprob: -21.0000057220459
    10. '_min' → logprob: -21.2500057220459

Token 963: '(time' (ID: 19192)
  Prédit: '(time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(time' → logprob: -9.65101717156358e-05
    2. 'time' → logprob: -9.250096321105957
    3. '(' → logprob: -14.875096321105957
    4. '(
' → logprob: -17.500097274780273
    5. ' time' → logprob: -18.250097274780273
    6. '(res' → logprob: -20.000097274780273
    7. ' (' → logprob: -20.125097274780273
    8. '	time' → logprob: -20.250097274780273
    9. '"time' → logprob: -20.750097274780273
    10. '_time' → logprob: -22.125097274780273

Token 964: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -1.5213274309644476e-05
    2. 'left' → logprob: -11.125015258789062
    3. 'Left' → logprob: -16.500015258789062
    4. '(left' → logprob: -16.625015258789062
    5. '(time' → logprob: -16.625015258789062
    6. '[left' → logprob: -17.125015258789062
    7. '_time' → logprob: -17.500015258789062
    8. '_right' → logprob: -17.875015258789062
    9. '_' → logprob: -18.625015258789062
    10. '_LEFT' → logprob: -18.875015258789062

Token 965: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00031532408320344985
    2. ',time' → logprob: -8.62531566619873
    3. ' ,' → logprob: -9.00031566619873
    4. ')' → logprob: -12.25031566619873
    5. ',
' → logprob: -12.50031566619873
    6. 'time' → logprob: -12.75031566619873
    7. ',)' → logprob: -15.37531566619873
    8. '   ' → logprob: -15.87531566619873
    9. ' time' → logprob: -15.87531566619873
    10. '),' → logprob: -16.875314712524414

Token 966: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.00861456897109747
    2. ' time' → logprob: -4.758614540100098
    3. '   ' → logprob: -16.758615493774414
    4. '	time' → logprob: -17.383615493774414
    5. ' ' → logprob: -18.508615493774414
    6. '(time' → logprob: -20.258615493774414
    7. '_time' → logprob: -20.383615493774414
    8. '       ' → logprob: -20.758615493774414
    9. '  ' → logprob: -20.758615493774414
    10. 'Time' → logprob: -20.883615493774414

Token 967: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -3.976922744186595e-05
    2. '_left' → logprob: -10.625040054321289
    3. 'right' → logprob: -11.125040054321289
    4. 'Right' → logprob: -14.375040054321289
    5. ')' → logprob: -17.87504005432129
    6. '_RIGHT' → logprob: -18.87504005432129
    7. '```' → logprob: -19.12504005432129
    8. '_' → logprob: -19.25004005432129
    9. '   ' → logprob: -20.12504005432129
    10. '_r' → logprob: -20.12504005432129

Token 968: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006625185487791896
    2. '       ' → logprob: -7.375662326812744
    3. ')
' → logprob: -10.375662803649902
    4. ' )' → logprob: -12.875662803649902
    5. '   ' → logprob: -13.875662803649902
    6. '))' → logprob: -15.125662803649902
    7. ')return' → logprob: -15.875662803649902
    8. '}' → logprob: -16.250661849975586
    9. '`)' → logprob: -16.375661849975586
    10. ' ' → logprob: -16.625661849975586

Token 969: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00778548140078783
    2. '
' → logprob: -5.132785320281982
    3. ')' → logprob: -7.382785320281982
    4. '        
' → logprob: -7.507785320281982
    5. '<|end|>' → logprob: -8.63278579711914
    6. '   ' → logprob: -9.25778579711914
    7. 'self' → logprob: -9.25778579711914
    8. ')
' → logprob: -9.38278579711914
    9. '```' → logprob: -9.63278579711914
    10. '  
' → logprob: -10.63278579711914

Token 970: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009394664317369461
    2. '
' → logprob: -5.134394645690918
    3. 'self' (adapté à ' self') → logprob: -6.009394645690918
    4. 'return' → logprob: -7.759394645690918
    5. ')' → logprob: -8.884394645690918
    6. '<|end|>' → logprob: -9.009394645690918
    7. '        
' → logprob: -9.509394645690918
    8. ' self' → logprob: -9.634394645690918
    9. ')
' → logprob: -9.634394645690918
    10. ',' → logprob: -10.509394645690918

Token 971: '.memo' (ID: 161018)
  Prédit: '.memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.memo' → logprob: -0.2603958249092102
    2. '.' → logprob: -1.5103957653045654
    3. '.memory' → logprob: -5.1353960037231445
    4. '.mem' → logprob: -6.1353960037231445
    5. ' .' → logprob: -9.385396003723145
    6. '.token' → logprob: -9.510396003723145
    7. '.m' → logprob: -9.885396003723145
    8. '.micro' → logprob: -10.510396003723145
    9. '​.' → logprob: -10.760396003723145
    10. '.mime' → logprob: -11.260396003723145

Token 972: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: 0.0
    2. '_code' → logprob: -18.125
    3. '._' → logprob: -18.875
    4. '_times' → logprob: -18.875
    5. '[_' → logprob: -19.25
    6. '\' → logprob: -19.375
    7. 'time' → logprob: -19.5
    8. '_' → logprob: -20.0
    9. '```' → logprob: -20.25
    10. '_cost' → logprob: -20.375

Token 973: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -4.56102097814437e-05
    2. '[' → logprob: -10.000045776367188
    3. '[user' → logprob: -16.625045776367188
    4. '[token' → logprob: -17.250045776367188
    5. '[obj' → logprob: -18.875045776367188
    6. '[id' → logprob: -19.000045776367188
    7. '```' → logprob: -19.125045776367188
    8. '\[' → logprob: -19.375045776367188
    9. '[
' → logprob: -19.625045776367188
    10. '[root' → logprob: -20.000045776367188

Token 974: '_id' (ID: 1537)
  Prédit: '[node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -0.003889030311256647
    2. '_id' → logprob: -5.628889083862305
    3. '[id' → logprob: -8.628889083862305
    4. ']' → logprob: -9.753889083862305
    5. '[' → logprob: -10.628889083862305
    6. '][' → logprob: -11.753889083862305
    7. '_ids' → logprob: -12.378889083862305
    8. '[user' → logprob: -13.128889083862305
    9. '```' → logprob: -13.253889083862305
    10. 'id' → logprob: -13.378889083862305

Token 975: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13112612068653107
    2. '=' → logprob: -2.3811261653900146
    3. ' =' → logprob: -3.6311261653900146
    4. ']=' → logprob: -5.8811259269714355
    5. ' ]' → logprob: -6.7561259269714355
    6. ')' → logprob: -12.881126403808594
    7. '[' → logprob: -13.631126403808594
    8. ' ' → logprob: -15.256126403808594
    9. ',' → logprob: -15.256126403808594
    10. ')=' → logprob: -16.506126403808594

Token 976: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022422909736633
    2. ' =' → logprob: -1.910224199295044
    3. ' =
' → logprob: -18.66022491455078
    4. '＝' → logprob: -19.03522491455078
    5. '=
' → logprob: -19.41022491455078
    6. ',' → logprob: -19.66022491455078
    7. '.=' → logprob: -19.91022491455078
    8. '_' → logprob: -20.28522491455078
    9. '=}' → logprob: -20.41022491455078
    10. ' ' → logprob: -20.53522491455078

Token 977: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -3.7697225252486533e-06
    2. ' res' → logprob: -12.500003814697266
    3. '(res' → logprob: -22.875003814697266
    4. 'int' → logprob: -24.125003814697266
    5. '	res' → logprob: -24.375003814697266
    6. '$res' → logprob: -24.625003814697266
    7. 'result' → logprob: -25.375003814697266
    8. '   ' → logprob: -25.500003814697266
    9. '_res' → logprob: -26.000003814697266
    10. 'ress' → logprob: -26.500003814697266

Token 978: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4202442169189453
    2. '
' → logprob: -1.2952442169189453
    3. 'return' → logprob: -3.9202442169189453
    4. '   ' → logprob: -4.045244216918945
    5. '\n' → logprob: -4.045244216918945
    6. '	return' → logprob: -5.920244216918945
    7. '\' → logprob: -6.295244216918945
    8. '<|end|>' → logprob: -6.295244216918945
    9. ' return' → logprob: -6.545244216918945
    10. '	' → logprob: -6.795244216918945

Token 979: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018733225762844086
    2. '<|end|>' → logprob: -4.893733024597168
    3. '
' → logprob: -5.018733024597168
    4. 'return' → logprob: -6.393733024597168
    5. '        
' → logprob: -6.768733024597168
    6. '\n' → logprob: -7.643733024597168
    7. '   ' → logprob: -7.893733024597168
    8. '\' → logprob: -9.018733024597168
    9. '	return' → logprob: -9.268733024597168
    10. ' return' → logprob: -9.393733024597168

Token 980: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6938468217849731
    2. 'return' (adapté à ' return') → logprob: -0.6938468217849731
    3. ' return' → logprob: -7.318846702575684
    4. '	return' → logprob: -10.818846702575684
    5. ':return' → logprob: -11.568846702575684
    6. '        
' → logprob: -13.318846702575684
    7. '   ' → logprob: -13.318846702575684
    8. '{return' → logprob: -14.193846702575684
    9. '	' → logprob: -14.318846702575684
    10. ')return' → logprob: -14.443846702575684

Token 981: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -2.15310683415737e-05
    2. ' res' → logprob: -10.750021934509277
    3. '   ' → logprob: -21.50002098083496
    4. '	res' → logprob: -23.12502098083496
    5. 'self' → logprob: -23.37502098083496
    6. '$res' → logprob: -24.62502098083496
    7. '
' → logprob: -24.75002098083496
    8. '(res' → logprob: -24.87502098083496
    9. '_res' → logprob: -25.50002098083496
    10. '       ' → logprob: -25.62502098083496

Token 982: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 983: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5882599949836731
    2. '   ' → logprob: -1.4632599353790283
    3. '<|end|>' → logprob: -1.9632599353790283
    4. 'def' → logprob: -3.0882599353790283
    5. '    
' → logprob: -4.338260173797607
    6. ' 
' → logprob: -5.463260173797607
    7. ' def' → logprob: -5.588260173797607
    8. '```' → logprob: -6.838260173797607
    9. '  
' → logprob: -7.088260173797607
    10. ' ' → logprob: -7.088260173797607

Token 984: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0005811501177959144
    2. ' def' → logprob: -7.50058126449585
    3. '   ' → logprob: -10.500580787658691
    4. '
' → logprob: -14.500580787658691
    5. '```' → logprob: -16.750581741333008
    6. '_def' → logprob: -16.750581741333008
    7. '	def' → logprob: -17.000581741333008
    8. '    
' → logprob: -17.375581741333008
    9. ':def' → logprob: -19.875581741333008
    10. 'ndef' → logprob: -20.125581741333008

Token 985: ' _' (ID: 1175)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -3.35706390615087e-05
    2. ' _' → logprob: -10.625033378601074
    3. '_find' → logprob: -13.250033378601074
    4. '_branch' → logprob: -13.500033378601074
    5. '_def' → logprob: -14.000033378601074
    6. '_get' → logprob: -14.125033378601074
    7. '_counts' → logprob: -14.750033378601074
    8. '_depth' → logprob: -14.750033378601074
    9. '_code' → logprob: -14.750033378601074
    10. '_cut' → logprob: -15.125033378601074

Token 986: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -7.896309739408025e-07
    2. '_count' → logprob: -14.250000953674316
    3. 'dfs' → logprob: -16.625
    4. 'cache' → logprob: -17.0
    5. 'counts' → logprob: -18.875
    6. ' count' → logprob: -19.75
    7. 'compute' → logprob: -20.0
    8. 'Count' → logprob: -20.75
    9. '.count' → logprob: -20.875
    10. 'height' → logprob: -21.375

Token 987: '_le' (ID: 27121)
  Prédit: '_le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_le' → logprob: -4.320199877838604e-07
    2. '_nodes' → logprob: -15.5
    3. '_' → logprob: -17.625
    4. '_children' → logprob: -17.875
    5. '_left' → logprob: -18.25
    6. '_leaf' → logprob: -18.25
    7. 'le' → logprob: -18.75
    8. ' _' → logprob: -18.875
    9. '_de' → logprob: -18.875
    10. '_br' → logprob: -19.0

Token 988: 'aves' (ID: 6808)
  Prédit: 'aves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aves' → logprob: -4.632542913896032e-05
    2. 'af' → logprob: -10.375046730041504
    3. 'av' → logprob: -11.625046730041504
    4. 'a' → logprob: -12.875046730041504
    5. '   ' → logprob: -13.750046730041504
    6. 'afs' → logprob: -14.750046730041504
    7. '```' → logprob: -14.875046730041504
    8. '_' → logprob: -15.250046730041504
    9. 'aces' → logprob: -15.375046730041504
    10. '(' → logprob: -15.875046730041504

Token 989: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.008648964576423168
    2. '(' → logprob: -4.758648872375488
    3. 'self' → logprob: -10.633648872375488
    4. '(
' → logprob: -11.883648872375488
    5. ' (' → logprob: -13.383648872375488
    6. '   ' → logprob: -13.633648872375488
    7. 'def' → logprob: -15.383648872375488
    8. '       ' → logprob: -15.508648872375488
    9. ' self' → logprob: -16.633649826049805
    10. '```' → logprob: -16.633649826049805

Token 990: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0016349549405276775
    2. ',' → logprob: -6.7516350746154785
    3. 'self' → logprob: -8.00163459777832
    4. '(' → logprob: -9.62663459777832
    5. ')' → logprob: -10.50163459777832
    6. ')(' → logprob: -11.12663459777832
    7. ' (' → logprob: -11.25163459777832
    8. ' self' → logprob: -13.00163459777832
    9. ',self' → logprob: -13.12663459777832
    10. '   ' → logprob: -13.37663459777832

Token 991: ' node' (ID: 4596)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.696320652961731
    2. 'node' → logprob: -0.696320652961731
    3. ' node' → logprob: -6.071320533752441
    4. ' self' → logprob: -7.071320533752441
    5. '   ' → logprob: -11.571320533752441
    6. '       ' → logprob: -14.946320533752441
    7. '(self' → logprob: -15.571320533752441
    8. 'def' → logprob: -15.571320533752441
    9. '	node' → logprob: -15.571320533752441
    10. '(node' → logprob: -15.946320533752441

Token 992: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.000876208592671901
    2. '):' → logprob: -7.500876426696777
    3. '_ids' → logprob: -8.750876426696777
    4. ')' → logprob: -10.250876426696777
    5. 'id' → logprob: -10.375876426696777
    6. '```' → logprob: -10.500876426696777
    7. ')_' → logprob: -10.875876426696777
    8. '   ' → logprob: -11.125876426696777
    9. ':' → logprob: -11.125876426696777
    10. '_' → logprob: -12.000876426696777

Token 993: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12520389258861542
    2. ')' → logprob: -2.875203847885132
    3. '):' → logprob: -2.875203847885132
    4. '):
' → logprob: -5.500204086303711
    5. '   ' → logprob: -7.750204086303711
    6. 'self' → logprob: -9.125204086303711
    7. ':int' → logprob: -9.625204086303711
    8. ' :' → logprob: -10.250204086303711
    9. ',' → logprob: -10.375204086303711
    10. '):

' → logprob: -10.750204086303711

Token 994: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00026169343618676066
    2. ' int' → logprob: -8.250261306762695
    3. ')' → logprob: -15.500261306762695
    4. '[int' → logprob: -16.000261306762695
    5. '(int' → logprob: -16.750261306762695
    6. 'def' → logprob: -16.875261306762695
    7. '   ' → logprob: -16.875261306762695
    8. ':int' → logprob: -17.000261306762695
    9. 'self' → logprob: -18.000261306762695
    10. '<int' → logprob: -18.750261306762695

Token 995: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012642296496778727
    2. '):' → logprob: -9.125126838684082
    3. ' )' → logprob: -11.750126838684082
    4. '):
' → logprob: -11.875126838684082
    5. ':' → logprob: -13.125126838684082
    6. '   ' → logprob: -14.750126838684082
    7. ')->' → logprob: -16.875125885009766
    8. 'def' → logprob: -17.125125885009766
    9. ' ):' → logprob: -18.125125885009766
    10. '):

' → logprob: -18.625125885009766

Token 996: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012278467183932662
    2. ':
' → logprob: -6.876227855682373
    3. ' ->' → logprob: -10.126227378845215
    4. '->' → logprob: -10.126227378845215
    5. '       ' → logprob: -10.501227378845215
    6. ' :' → logprob: -10.626227378845215
    7. '   ' → logprob: -10.751227378845215
    8. ')' → logprob: -11.251227378845215
    9. 'def' → logprob: -11.751227378845215
    10. ':def' → logprob: -12.001227378845215

Token 997: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.0087516784551553e-05
    2. ' int' → logprob: -12.25001049041748
    3. '(int' → logprob: -13.12501049041748
    4. '1' → logprob: -13.50001049041748
    5. '[int' → logprob: -14.62501049041748
    6. 'def' → logprob: -15.25001049041748
    7. '   ' → logprob: -15.25001049041748
    8. 'if' → logprob: -15.37501049041748
    9. '0' → logprob: -15.75001049041748
    10. ':int' → logprob: -15.87501049041748

Token 998: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0043351720087230206
    2. ':
' → logprob: -5.504335403442383
    3. '       ' → logprob: -9.129335403442383
    4. '):' → logprob: -10.004335403442383
    5. '   ' → logprob: -10.129335403442383
    6. '():' → logprob: -10.504335403442383
    7. '():
' → logprob: -12.004335403442383
    8. '):
' → logprob: -12.254335403442383
    9. ':return' → logprob: -12.254335403442383
    10. '<|end|>' → logprob: -12.379335403442383

Token 999: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005563704180531204
    2. 'if' → logprob: -8.125555992126465
    3. ' if' → logprob: -8.625555992126465
    4. '```' → logprob: -10.125555992126465
    5. '   ' → logprob: -10.500555992126465
    6. '
' → logprob: -13.000555992126465
    7. '        
' → logprob: -13.125555992126465
    8. '​' → logprob: -13.375555992126465
    9. '#' → logprob: -13.750555992126465
    10. '           ' → logprob: -13.875555992126465

Token 1000: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.039102692157030106
    2. '       ' → logprob: -3.289102792739868
    3. ' if' → logprob: -6.914102554321289
    4. '#' (adapté à ' #') → logprob: -9.789102554321289
    5. '   ' → logprob: -11.789102554321289
    6. '```' → logprob: -12.914102554321289
    7. '	if' → logprob: -14.414102554321289
    8. '
' → logprob: -15.914102554321289
    9. 'If' → logprob: -16.16410255432129
    10. '​' → logprob: -16.91410255432129

Token 1001: ' Count' (ID: 6789)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -7.922563963802531e-05
    2. '       ' → logprob: -10.250079154968262
    3. 'If' → logprob: -10.250079154968262
    4. ' if' → logprob: -12.000079154968262
    5. '#' → logprob: -13.125079154968262
    6. '   ' → logprob: -16.125080108642578
    7. 'def' → logprob: -16.375080108642578
    8. '```' → logprob: -17.625080108642578
    9. '
' → logprob: -18.000080108642578
    10. '	if' → logprob: -18.125080108642578

Token 1002: ' how' (ID: 1495)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.48230883479118347
    2. '0' → logprob: -1.7323088645935059
    3. 'self' → logprob: -2.107308864593506
    4. 'node' → logprob: -2.732308864593506
    5. 'if' → logprob: -4.857308864593506
    6. '
' → logprob: -5.607308864593506
    7. '   ' → logprob: -5.982308864593506
    8. ' ' → logprob: -6.357308864593506
    9. ' node' → logprob: -7.357308864593506
    10. 'le' → logprob: -7.482308864593506

Token 1003: ' many' (ID: 1991)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3545089364051819
    2. 'to' → logprob: -2.229508876800537
    3. '       ' → logprob: -2.604508876800537
    4. 'if' → logprob: -3.354508876800537
    5. 'many' → logprob: -4.479508876800537
    6. '_' → logprob: -4.729508876800537
    7. ' to' → logprob: -4.979508876800537
    8. 'def' → logprob: -5.104508876800537
    9. '_many' → logprob: -5.229508876800537
    10. '(node' → logprob: -5.479508876800537

Token 1004: ' endings' (ID: 152718)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.7336586713790894
    2. 'if' → logprob: -0.9836586713790894
    3. '_le' → logprob: -1.9836586713790894
    4. ' leaves' → logprob: -5.983658790588379
    5. 'node' → logprob: -6.108658790588379
    6. 'nodes' → logprob: -6.608658790588379
    7. ' if' → logprob: -6.608658790588379
    8. 'leaf' → logprob: -8.358658790588379
    9. 'self' → logprob: -8.983658790588379
    10. 'return' → logprob: -9.358658790588379

Token 1005: ' in' (ID: 306)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.263192743062973
    2. '(self' → logprob: -2.263192653656006
    3. 'self' → logprob: -2.888192653656006
    4. '       ' → logprob: -3.513192653656006
    5. ' if' → logprob: -4.138192653656006
    6. 'in' → logprob: -4.388192653656006
    7. 'return' → logprob: -6.013192653656006
    8. '   ' → logprob: -6.138192653656006
    9. 'def' → logprob: -6.513192653656006
    10. '
' → logprob: -6.638192653656006

Token 1006: ' subtree' (ID: 126158)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6978036761283875
    2. 'node' → logprob: -0.6978036761283875
    3. 'the' → logprob: -5.697803497314453
    4. ' node' → logprob: -7.322803497314453
    5. '   ' → logprob: -8.322803497314453
    6. ' self' → logprob: -8.572803497314453
    7. '
' → logprob: -9.822803497314453
    8. '       ' → logprob: -10.197803497314453
    9. ' the' → logprob: -10.447803497314453
    10. 'if' → logprob: -10.822803497314453

Token 1007: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3275861442089081
    2. '       ' → logprob: -1.3275861740112305
    3. ' if' → logprob: -4.3275861740112305
    4. '   ' → logprob: -6.9525861740112305
    5. '```' → logprob: -10.07758617401123
    6. '
' → logprob: -11.57758617401123
    7. '           ' → logprob: -12.57758617401123
    8. '	if' → logprob: -12.82758617401123
    9. 'return' → logprob: -13.45258617401123
    10. '(' → logprob: -13.82758617401123

Token 1008: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5427519083023071
    2. 'if' → logprob: -1.0427519083023071
    3. '(self' → logprob: -3.5427517890930176
    4. '   ' → logprob: -3.6677517890930176
    5. 'self' → logprob: -5.292751789093018
    6. ' if' → logprob: -5.292751789093018
    7. '
' → logprob: -7.042751789093018
    8. '(' → logprob: -7.917751789093018
    9. '```' → logprob: -7.917751789093018
    10. 'def' → logprob: -9.417752265930176

Token 1009: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.011346302926540375
    2. '       ' → logprob: -4.511346340179443
    3. ' if' → logprob: -8.261345863342285
    4. '   ' → logprob: -10.136345863342285
    5. '```' → logprob: -14.636345863342285
    6. '	if' → logprob: -16.2613468170166
    7. '           ' → logprob: -19.2613468170166
    8. 'return' → logprob: -19.2613468170166
    9. 'If' → logprob: -19.3863468170166
    10. '#' → logprob: -19.3863468170166

Token 1010: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.12692862749099731
    2. ' node' → logprob: -2.1269285678863525
    3. '(node' → logprob: -14.876928329467773
    4. '	node' → logprob: -16.376928329467773
    5. '   ' → logprob: -17.126928329467773
    6. '[node' → logprob: -18.126928329467773
    7. '_node' → logprob: -18.501928329467773
    8. 'self' → logprob: -18.751928329467773
    9. '=node' → logprob: -18.751928329467773
    10. '```' → logprob: -19.626928329467773

Token 1011: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -3.3213025744771585e-05
    2. '==' → logprob: -11.375033378601074
    3. '```' → logprob: -11.500033378601074
    4. 'node' → logprob: -11.750033378601074
    5. '_node' → logprob: -13.500033378601074
    6. 'id' → logprob: -14.250033378601074
    7. '[node' → logprob: -14.250033378601074
    8. ' ==' → logprob: -15.000033378601074
    9. '=node' → logprob: -15.750033378601074
    10. '(node' → logprob: -15.875033378601074

Token 1012: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.31326404213905334
    2. '==' → logprob: -1.313264012336731
    3. '=' → logprob: -13.563263893127441
    4. '>=' → logprob: -15.438263893127441
    5. '==
' → logprob: -15.438263893127441
    6. ' >=' → logprob: -15.938263893127441
    7. ')==' → logprob: -16.063264846801758
    8. '   ' → logprob: -16.438264846801758
    9. ')' → logprob: -16.938264846801758
    10. ']==' → logprob: -17.063264846801758

Token 1013: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0040785204619169235
    2. ' self' → logprob: -5.504078388214111
    3. '(self' → logprob: -16.629077911376953
    4. '=self' → logprob: -17.254077911376953
    5. '1' → logprob: -18.004077911376953
    6. '	self' → logprob: -18.379077911376953
    7. '_self' → logprob: -18.629077911376953
    8. '[self' → logprob: -18.879077911376953
    9. '       ' → logprob: -19.129077911376953
    10. '   ' → logprob: -19.254077911376953

Token 1014: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.0001037815964082256
    2. '.' → logprob: -9.875103950500488
    3. 'self' → logprob: -10.500103950500488
    4. 'n' → logprob: -10.625103950500488
    5. '```' → logprob: -16.250102996826172
    6. ' .' → logprob: -16.375102996826172
    7. '_n' → logprob: -16.875102996826172
    8. '   ' → logprob: -17.125102996826172
    9. '.
' → logprob: -17.250102996826172
    10. '.user' → logprob: -17.375102996826172

Token 1015: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4222957193851471
    2. ':' → logprob: -1.1722956895828247
    3. ':return' → logprob: -3.6722958087921143
    4. '       ' → logprob: -5.547295570373535
    5. '           ' → logprob: -5.547295570373535
    6. ' or' → logprob: -6.797295570373535
    7. '   ' → logprob: -8.922295570373535
    8. 'return' → logprob: -9.172295570373535
    9. '<|end|>' → logprob: -9.172295570373535
    10. '          ' → logprob: -10.922295570373535

Token 1016: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4973273277282715
    2. 'return' → logprob: -1.3723273277282715
    3. '       ' → logprob: -2.1223273277282715
    4. ' return' → logprob: -4.1223273277282715
    5. '   ' → logprob: -6.6223273277282715
    6. ':return' → logprob: -7.9973273277282715
    7. '
' → logprob: -8.37232780456543
    8. '1' → logprob: -8.74732780456543
    9. '{return' → logprob: -9.74732780456543
    10. '{
' → logprob: -9.87232780456543

Token 1017: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10055870562791824
    2. '1' → logprob: -2.3505587577819824
    3. ' return' → logprob: -8.100558280944824
    4. '       ' → logprob: -10.600558280944824
    5. '           ' → logprob: -11.350558280944824
    6. '   ' → logprob: -11.850558280944824
    7. ' ' → logprob: -13.350558280944824
    8. '	return' → logprob: -13.600558280944824
    9. ':return' → logprob: -14.100558280944824
    10. '```' → logprob: -14.350558280944824

Token 1018: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '   ' → logprob: -22.25
    4. '
' → logprob: -25.625
    5. '       ' → logprob: -26.0
    6. '```' → logprob: -26.125
    7. '`' → logprob: -27.375
    8. '           ' → logprob: -27.375
    9. '۱' → logprob: -27.625
    10. '0' → logprob: -27.625

Token 1019: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -19.875
    3. '   ' → logprob: -23.625
    4. '۱' → logprob: -23.75
    5. '0' → logprob: -24.25
    6. '```' → logprob: -24.75
    7. '１' → logprob: -24.875
    8. '`' → logprob: -25.625
    9. '१' → logprob: -26.25
    10. '১' → logprob: -26.25

Token 1020: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1277531534433365
    2. '
' → logprob: -2.127753257751465
    3. '        
' → logprob: -7.252753257751465
    4. '    
' → logprob: -10.752753257751465
    5. 'return' → logprob: -11.002753257751465
    6. '  
' → logprob: -11.252753257751465
    7. '   ' → logprob: -11.252753257751465
    8. ' 
' → logprob: -11.377753257751465
    9. '```' → logprob: -11.627753257751465
    10. 'elif' → logprob: -12.127753257751465

Token 1021: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02256937138736248
    2. 'if' → logprob: -4.147569179534912
    3. '
' → logprob: -5.272569179534912
    4. '   ' → logprob: -7.897569179534912
    5. '        
' → logprob: -8.02256965637207
    6. ' if' → logprob: -8.27256965637207
    7. '```' → logprob: -8.64756965637207
    8. 'return' → logprob: -8.77256965637207
    9. 'elif' → logprob: -10.39756965637207
    10. '           ' → logprob: -11.64756965637207

Token 1022: ' node' (ID: 4596)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01524396613240242
    2. 'return' → logprob: -4.765244007110596
    3. 'count' → logprob: -5.265244007110596
    4. 'node' (adapté à ' node') → logprob: -7.265244007110596
    5. '       ' → logprob: -7.515244007110596
    6. 'left' → logprob: -9.390243530273438
    7. ' if' → logprob: -9.515243530273438
    8. '   ' → logprob: -10.765243530273438
    9. 'elif' → logprob: -11.890243530273438
    10. '```' → logprob: -13.015243530273438

Token 1023: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132629096508026
    2. ' =' → logprob: -1.313262939453125
    3. '=node' → logprob: -14.813262939453125
    4. 'if' → logprob: -14.938262939453125
    5. ' if' → logprob: -15.938262939453125
    6. '   ' → logprob: -15.938262939453125
    7. '.' → logprob: -16.688262939453125
    8. '=
' → logprob: -17.063262939453125
    9. '.=' → logprob: -17.438262939453125
    10. '_id' → logprob: -17.688262939453125

Token 1024: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.615255839889869e-05
    2. ' self' → logprob: -9.250096321105957
    3. '       ' → logprob: -17.75009536743164
    4. '=self' → logprob: -19.37509536743164
    5. '(self' → logprob: -19.37509536743164
    6. 'branch' → logprob: -19.50009536743164
    7. '   ' → logprob: -20.00009536743164
    8. '[self' → logprob: -20.37509536743164
    9. '	self' → logprob: -20.62509536743164
    10. '
' → logprob: -21.37509536743164

Token 1025: '.branch' (ID: 118555)
  Prédit: 'branch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'branch' → logprob: -0.002483031013980508
    2. '.branch' → logprob: -6.002482891082764
    3. 'self' → logprob: -12.252483367919922
    4. ' branch' → logprob: -13.502483367919922
    5. '_branch' → logprob: -14.002483367919922
    6. 'Branch' → logprob: -16.252483367919922
    7. '(branch' → logprob: -16.377483367919922
    8. ' branching' → logprob: -16.627483367919922
    9. 'bran' → logprob: -18.502483367919922
    10. '
' → logprob: -18.502483367919922

Token 1026: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.00037037418223917484
    2. '_points' → logprob: -8.875370025634766
    3. 'ching' → logprob: -8.875370025634766
    4. 'points' → logprob: -9.875370025634766
    5. 'ch' → logprob: -11.125370025634766
    6. 'self' → logprob: -12.000370025634766
    7. 'branch' → logprob: -12.375370025634766
    8. '.points' → logprob: -12.625370025634766
    9. 'node' → logprob: -13.750370025634766
    10. 'ng' → logprob: -13.875370025634766

Token 1027: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.0002406090497970581
    2. 'points' → logprob: -8.375240325927734
    3. 'Points' → logprob: -12.500240325927734
    4. '_point' → logprob: -12.875240325927734
    5. 'self' → logprob: -14.750240325927734
    6. 'node' → logprob: -14.875240325927734
    7. '_POINTS' → logprob: -14.875240325927734
    8. 'point' → logprob: -15.125240325927734
    9. '_targets' → logprob: -15.125240325927734
    10. '_' → logprob: -15.250240325927734

Token 1028: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -4.842555426876061e-06
    2. '[
' → logprob: -12.875004768371582
    3. 'node' → logprob: -14.125004768371582
    4. '```' → logprob: -14.500004768371582
    5. '[' → logprob: -14.750004768371582
    6. '(node' → logprob: -15.500004768371582
    7. '
' → logprob: -15.875004768371582
    8. '=node' → logprob: -16.1250057220459
    9. '[user' → logprob: -17.2500057220459
    10. '[obj' → logprob: -17.6250057220459

Token 1029: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.0006156971794553101
    2. 'id' → logprob: -7.50061559677124
    3. '[node' → logprob: -9.750616073608398
    4. 'node' → logprob: -13.250616073608398
    5. 'Id' → logprob: -13.750616073608398
    6. '[' → logprob: -14.375616073608398
    7. '```' → logprob: -15.750616073608398
    8. '._' → logprob: -16.1256160736084
    9. 'd' → logprob: -16.2506160736084
    10. '   ' → logprob: -16.2506160736084

Token 1030: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09214816242456436
    2. ')
' → logprob: -2.5921480655670166
    3. '       ' → logprob: -4.342148303985596
    4. '   ' → logprob: -9.717147827148438
    5. 'self' → logprob: -10.467147827148438
    6. ')return' → logprob: -10.842147827148438
    7. ').' → logprob: -10.967147827148438
    8. 'return' → logprob: -11.467147827148438
    9. ')
' → logprob: -12.342147827148438
    10. '
' → logprob: -12.467147827148438

Token 1031: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00715944217517972
    2. '   ' → logprob: -5.257159233093262
    3. 'return' → logprob: -6.257159233093262
    4. ' return' → logprob: -12.507159233093262
    5. '```' → logprob: -13.632159233093262
    6. '	return' → logprob: -13.882159233093262
    7. '           ' → logprob: -14.632159233093262
    8. 'count' → logprob: -14.757159233093262
    9. ' ' → logprob: -16.382160186767578
    10. '	' → logprob: -16.507160186767578

Token 1032: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.18187205493450165
    2. 'left' → logprob: -1.931872010231018
    3. 'count' → logprob: -3.9318721294403076
    4. '       ' → logprob: -6.6818718910217285
    5. '   ' → logprob: -8.056872367858887
    6. 'if' → logprob: -8.806872367858887
    7. ' return' → logprob: -9.806872367858887
    8. ' left' → logprob: -10.806872367858887
    9. '```' → logprob: -12.806872367858887
    10. 'l' → logprob: -13.181872367858887

Token 1033: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001246348983841017
    2. ' self' → logprob: -9.00012493133545
    3. '   ' → logprob: -14.25012493133545
    4. '(self' → logprob: -14.50012493133545
    5. '	self' → logprob: -17.250123977661133
    6. '       ' → logprob: -18.125123977661133
    7. ' ' → logprob: -19.750123977661133
    8. '  ' → logprob: -20.375123977661133
    9. '           ' → logprob: -21.000123977661133
    10. '[self' → logprob: -21.500123977661133

Token 1034: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0001422770437784493
    2. '_count' → logprob: -8.875142097473145
    3. 'self' → logprob: -13.625142097473145
    4. '.' → logprob: -14.750142097473145
    5. '_branch' → logprob: -15.625142097473145
    6. '   ' → logprob: -16.37514305114746
    7. '.count' → logprob: -16.37514305114746
    8. ')._' → logprob: -16.62514305114746
    9. '_counts' → logprob: -17.00014305114746
    10. '.\' → logprob: -17.00014305114746

Token 1035: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0007553085451945662
    2. 'dfs' → logprob: -7.250755310058594
    3. '_count' → logprob: -10.000755310058594
    4. '.count' → logprob: -17.500755310058594
    5. ' count' → logprob: -18.125755310058594
    6. 'counts' → logprob: -18.375755310058594
    7. 'call' → logprob: -18.625755310058594
    8. 'cnt' → logprob: -19.625755310058594
    9. '(count' → logprob: -19.875755310058594
    10. 'Count' → logprob: -19.875755310058594

Token 1036: '_le' (ID: 27121)
  Prédit: '_le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_le' → logprob: -2.339278580620885e-06
    2. 'count' → logprob: -13.875001907348633
    3. '_count' → logprob: -14.000001907348633
    4. 'le' → logprob: -15.000001907348633
    5. '_left' → logprob: -17.125001907348633
    6. 'node' → logprob: -17.125001907348633
    7. '_leaf' → logprob: -17.875001907348633
    8. '_counts' → logprob: -18.375001907348633
    9. '_' → logprob: -18.750001907348633
    10. 'tree' → logprob: -19.125001907348633

Token 1037: 'aves' (ID: 6808)
  Prédit: 'aves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aves' → logprob: -0.00024751186720095575
    2. 'af' → logprob: -8.375247955322266
    3. 'av' → logprob: -11.500247955322266
    4. 'afs' → logprob: -13.250247955322266
    5. 'a' → logprob: -13.500247955322266
    6. '```' → logprob: -14.750247955322266
    7. 'aces' → logprob: -15.000247955322266
    8. 'ves' → logprob: -15.000247955322266
    9. '(' → logprob: -15.375247955322266
    10. 'aff' → logprob: -15.500247955322266

Token 1038: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -8.73314929776825e-05
    2. '(' → logprob: -9.37508773803711
    3. '(
' → logprob: -13.25008773803711
    4. ' (' → logprob: -15.25008773803711
    5. '((' → logprob: -15.25008773803711
    6. '(left' → logprob: -16.62508773803711
    7. '(n' → logprob: -16.75008773803711
    8. '(line' → logprob: -17.50008773803711
    9. '(self' → logprob: -18.87508773803711
    10. '(Node' → logprob: -19.25008773803711

Token 1039: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.00287489197216928
    2. '.left' → logprob: -5.877874851226807
    3. '.no' → logprob: -10.252875328063965
    4. '.id' → logprob: -11.002875328063965
    5. '.node' → logprob: -12.127875328063965
    6. '._' → logprob: -12.877875328063965
    7. '.' → logprob: -13.002875328063965
    8. ').' → logprob: -13.127875328063965
    9. '.right' → logprob: -13.752875328063965
    10. '_id' → logprob: -14.127875328063965

Token 1040: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.00010664248111424968
    2. 'yes' → logprob: -9.625106811523438
    3. '_target' → logprob: -10.875106811523438
    4. '
' → logprob: -11.875106811523438
    5. 's' → logprob: -12.625106811523438
    6. 'est' → logprob: -12.875106811523438
    7. '_yes' → logprob: -12.875106811523438
    8. 'no' → logprob: -14.000106811523438
    9. '```' → logprob: -14.500106811523438
    10. 'ES' → logprob: -14.625106811523438

Token 1041: '_target' (ID: 24705)
  Prédit: '_target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_target' → logprob: -7.3458322731312364e-06
    2. 'target' → logprob: -12.000007629394531
    3. 'Target' → logprob: -13.875007629394531
    4. '_' → logprob: -17.25000762939453
    5. 'TARGET' → logprob: -17.25000762939453
    6. '   ' → logprob: -17.50000762939453
    7. '_token' → logprob: -17.62500762939453
    8. 'arget' → logprob: -18.12500762939453
    9. '_TARGET' → logprob: -18.12500762939453
    10. '
' → logprob: -18.62500762939453

Token 1042: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021288490388542414
    2. ')+' → logprob: -6.377129077911377
    3. ' +' → logprob: -8.502128601074219
    4. '+' → logprob: -8.502128601074219
    5. '+)' → logprob: -12.002128601074219
    6. ' )' → logprob: -12.252128601074219
    7. ',' → logprob: -12.502128601074219
    8. '       ' → logprob: -12.877128601074219
    9. '   ' → logprob: -13.627128601074219
    10. '        ' → logprob: -14.002128601074219

Token 1043: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.0380832701921463
    2. '+' → logprob: -3.28808331489563
    3. ' +
' → logprob: -11.16308307647705
    4. '       ' → logprob: -11.53808307647705
    5. '+
' → logprob: -11.91308307647705
    6. '        ' → logprob: -12.16308307647705
    7. '()+' → logprob: -12.91308307647705
    8. '+self' → logprob: -14.03808307647705
    9. ' ' → logprob: -14.16308307647705
    10. ')+' → logprob: -14.91308307647705

Token 1044: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002613358374219388
    2. ' self' → logprob: -8.250261306762695
    3. '       ' → logprob: -17.750261306762695
    4. '(self' → logprob: -18.000261306762695
    5. '	self' → logprob: -19.875261306762695
    6. '   ' → logprob: -20.500261306762695
    7. '           ' → logprob: -21.250261306762695
    8. '```' → logprob: -22.375261306762695
    9. '[self' → logprob: -22.375261306762695
    10. ' ' → logprob: -23.750261306762695

Token 1045: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.20282644033432007
    2. '_count' → logprob: -1.7028264999389648
    3. '_no' → logprob: -6.577826499938965
    4. '.no' → logprob: -11.827826499938965
    5. '.count' → logprob: -12.077826499938965
    6. ' _' → logprob: -12.702826499938965
    7. 'no' → logprob: -12.952826499938965
    8. '```' → logprob: -14.577826499938965
    9. '_counts' → logprob: -15.077826499938965
    10. '.' → logprob: -15.077826499938965

Token 1046: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.0802738870552275e-05
    2. 'dfs' → logprob: -11.87501049041748
    3. '_count' → logprob: -12.50001049041748
    4. 'no' → logprob: -17.375011444091797
    5. 'branch' → logprob: -18.625011444091797
    6. ' count' → logprob: -19.250011444091797
    7. '_no' → logprob: -20.000011444091797
    8. 'call' → logprob: -21.125011444091797
    9. '.count' → logprob: -21.375011444091797
    10. 'cache' → logprob: -21.500011444091797

Token 1047: '_le' (ID: 27121)
  Prédit: '_le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_le' → logprob: -1.2664456789934775e-06
    2. 'le' → logprob: -14.125000953674316
    3. '_no' → logprob: -15.500000953674316
    4. 'node' → logprob: -16.500001907348633
    5. '_left' → logprob: -16.750001907348633
    6. '_lo' → logprob: -17.125001907348633
    7. '_count' → logprob: -17.250001907348633
    8. 'count' → logprob: -17.250001907348633
    9. 'Leaves' → logprob: -17.625001907348633
    10. '(node' → logprob: -18.750001907348633

Token 1048: 'aves' (ID: 6808)
  Prédit: 'aves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aves' → logprob: -0.0010075619211420417
    2. 'af' → logprob: -7.001007556915283
    3. 'afs' → logprob: -10.251008033752441
    4. 'av' → logprob: -11.126008033752441
    5. 'ft' → logprob: -11.251008033752441
    6. 'yes' → logprob: -11.501008033752441
    7. 'aft' → logprob: -12.751008033752441
    8. 'ves' → logprob: -12.876008033752441
    9. '_node' → logprob: -13.001008033752441
    10. 'a' → logprob: -13.626008033752441

Token 1049: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.00012439649435691535
    2. '(' → logprob: -9.000123977661133
    3. '(
' → logprob: -14.750123977661133
    4. '(no' → logprob: -15.625123977661133
    5. 'node' → logprob: -16.000123977661133
    6. '(right' → logprob: -16.250123977661133
    7. ' (' → logprob: -16.875123977661133
    8. '(left' → logprob: -17.000123977661133
    9. '[node' → logprob: -19.250123977661133
    10. '((' → logprob: -19.500123977661133

Token 1050: '.no' (ID: 26941)
  Prédit: '.no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.no' → logprob: -4.704065213445574e-05
    2. 'no' → logprob: -10.000046730041504
    3. ',no' → logprob: -14.875046730041504
    4. '=no' → logprob: -15.125046730041504
    5. '.' → logprob: -15.250046730041504
    6. ' .' → logprob: -15.875046730041504
    7. '```' → logprob: -15.875046730041504
    8. '	no' → logprob: -16.00004768371582
    9. ' no' → logprob: -16.12504768371582
    10. 'No' → logprob: -16.75004768371582

Token 1051: '_target' (ID: 24705)
  Prédit: '_target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_target' → logprob: -0.0019299437990412116
    2. 'target' → logprob: -6.251929759979248
    3. 'TARGET' → logprob: -14.876930236816406
    4. 'arget' → logprob: -15.001930236816406
    5. 'Target' → logprob: -15.876930236816406
    6. '.target' → logprob: -16.001930236816406
    7. 'no' → logprob: -16.251930236816406
    8. '-target' → logprob: -16.251930236816406
    9. 'node' → logprob: -17.376930236816406
    10. 'def' → logprob: -17.376930236816406

Token 1052: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001358400477329269
    2. '(node' → logprob: -9.12513542175293
    3. '[node' → logprob: -11.00013542175293
    4. '       ' → logprob: -12.75013542175293
    5. ')
' → logprob: -12.87513542175293
    6. '   ' → logprob: -13.12513542175293
    7. '])' → logprob: -14.00013542175293
    8. '))' → logprob: -14.12513542175293
    9. ' )' → logprob: -15.25013542175293
    10. ']' → logprob: -15.62513542175293

Token 1053: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1054: ' Multi' (ID: 24511)
  Prédit: 'Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Game' → logprob: -0.983224093914032
    2. 'Solution' → logprob: -1.2332241535186768
    3. 'Solver' → logprob: -2.3582241535186768
    4. 'Test' → logprob: -2.9832241535186768
    5. 'Branch' → logprob: -3.1082241535186768
    6. 'Simple' → logprob: -4.233223915100098
    7. 'Minimal' → logprob: -4.483223915100098
    8. 'Decision' → logprob: -4.483223915100098
    9. 'Binary' → logprob: -4.483223915100098
    10. 'Example' → logprob: -4.608223915100098

Token 1055: 'Ending' (ID: 120970)
  Prédit: 'Choice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Choice' → logprob: -0.5770245790481567
    2. 'Branch' → logprob: -1.5770245790481567
    3. 'Thread' → logprob: -2.827024459838867
    4. 'Line' → logprob: -3.202024459838867
    5. 'Step' → logprob: -3.327024459838867
    6. 'Game' → logprob: -4.202024459838867
    7. 'Select' → logprob: -4.577024459838867
    8. 'Process' → logprob: -4.952024459838867
    9. 'Task' → logprob: -5.202024459838867
    10. 'Level' → logprob: -5.452024459838867

Token 1056: 'Story' (ID: 29850)
  Prédit: 'Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Game' → logprob: -0.03607473894953728
    2. 'Point' → logprob: -3.911074638366699
    3. 'Branch' → logprob: -6.036074638366699
    4. 'Choice' → logprob: -6.036074638366699
    5. 'Manager' → logprob: -6.411074638366699
    6. 'Structure' → logprob: -6.786074638366699
    7. 'Chooser' → logprob: -7.161074638366699
    8. 'Scenario' → logprob: -7.286074638366699
    9. 'Node' → logprob: -7.411074638366699
    10. 'Controller' → logprob: -7.536074638366699

Token 1057: 'Solver' (ID: 70484)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012683751061558723
    2. ':
' → logprob: -4.387683868408203
    3. '(Game' → logprob: -9.012683868408203
    4. '(' → logprob: -10.387683868408203
    5. '<Game' → logprob: -12.512683868408203
    6. '{' → logprob: -12.512683868408203
    7. 'Game' → logprob: -12.762683868408203
    8. ':

' → logprob: -13.387683868408203
    9. '```' → logprob: -13.512683868408203
    10. 'Narr' → logprob: -14.012683868408203

Token 1058: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0032145457807928324
    2. ':
' → logprob: -5.753214359283447
    3. '<|end|>' → logprob: -11.253214836120605
    4. '(' → logprob: -11.378214836120605
    5. '```' → logprob: -13.378214836120605
    6. ':

' → logprob: -13.378214836120605
    7. ' :' → logprob: -13.503214836120605
    8. '(Game' → logprob: -13.503214836120605
    9. '():' → logprob: -13.753214836120605
    10. '{' → logprob: -13.753214836120605

Token 1059: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015419998671859503
    2. 'class' → logprob: -7.126542091369629
    3. '```' → logprob: -8.001542091369629
    4. '    
' → logprob: -9.001542091369629
    5. '<|end|>' → logprob: -9.501542091369629
    6. ' def' → logprob: -9.876542091369629
    7. ' class' → logprob: -9.876542091369629
    8. 'def' → logprob: -10.126542091369629
    9. '(' → logprob: -11.251542091369629
    10. '(
' → logprob: -11.626542091369629

Token 1060: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.016188152134418488
    2. '   ' → logprob: -4.641188144683838
    3. 'class' → logprob: -5.266188144683838
    4. ' def' → logprob: -6.891188144683838
    5. '```' → logprob: -8.391188621520996
    6. '	def' → logprob: -13.266188621520996
    7. '``' → logprob: -13.516188621520996
    8. '__' → logprob: -15.141188621520996
    9. '  ' → logprob: -15.266188621520996
    10. ' ' → logprob: -15.266188621520996

Token 1061: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4744960069656372
    2. 'init' → logprob: -0.9744960069656372
    3. ' __' → logprob: -7.974495887756348
    4. '_init' → logprob: -9.849495887756348
    5. 'def' → logprob: -11.474495887756348
    6. '```' → logprob: -12.224495887756348
    7. '___' → logprob: -12.849495887756348
    8. ' init' → logprob: -12.974495887756348
    9. '**' → logprob: -15.224495887756348
    10. '____' → logprob: -15.224495887756348

Token 1062: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. '_init' → logprob: -16.75
    3. ' init' → logprob: -17.25
    4. '(init' → logprob: -17.625
    5. '```' → logprob: -19.375
    6. 'class' → logprob: -19.75
    7. '_' → logprob: -20.0
    8. 'next' → logprob: -20.375
    9. 'inite' → logprob: -20.625
    10. '	init' → logprob: -20.75

Token 1063: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0014778443146497011
    2. '__' → logprob: -7.0014777183532715
    3. '__(
' → logprob: -7.7514777183532715
    4. '(self' → logprob: -9.00147819519043
    5. '__((' → logprob: -12.00147819519043
    6. '(' → logprob: -12.87647819519043
    7. '__('' → logprob: -14.00147819519043
    8. '__("' → logprob: -14.12647819519043
    9. ' (' → logprob: -14.25147819519043
    10. 'self' → logprob: -14.75147819519043

Token 1064: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00010318557906430215
    2. ' self' → logprob: -9.250102996826172
    3. '   ' → logprob: -12.750102996826172
    4. ',' → logprob: -13.125102996826172
    5. '(self' → logprob: -14.000102996826172
    6. '
' → logprob: -14.625102996826172
    7. 'n' → logprob: -15.125102996826172
    8. ',self' → logprob: -15.875102996826172
    9. '```' → logprob: -16.000102996826172
    10. '	self' → logprob: -16.875102996826172

Token 1065: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017005297122523189
    2. '(self' → logprob: -7.126700401306152
    3. 'self' → logprob: -7.126700401306152
    4. '__(' → logprob: -10.501700401306152
    5. '(n' → logprob: -11.251700401306152
    6. '__,' → logprob: -11.626700401306152
    7. ',
' → logprob: -11.751700401306152
    8. ',self' → logprob: -11.751700401306152
    9. ' ,' → logprob: -12.001700401306152
    10. ' (' → logprob: -12.501700401306152

Token 1066: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0026957436930388212
    2. ' self' → logprob: -6.002695560455322
    3. 'n' → logprob: -8.87769603729248
    4. '   ' → logprob: -9.50269603729248
    5. '       ' → logprob: -12.37769603729248
    6. ' n' → logprob: -14.12769603729248
    7. '```' → logprob: -14.75269603729248
    8. '(self' → logprob: -15.37769603729248
    9. ',' → logprob: -15.75269603729248
    10. '	self' → logprob: -16.377695083618164

Token 1067: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.009185383096337318
    2. '       ' → logprob: -5.009185314178467
    3. ' self' → logprob: -6.009185314178467
    4. '   ' → logprob: -12.259185791015625
    5. 'def' → logprob: -12.884185791015625
    6. 'pass' → logprob: -13.134185791015625
    7. 'class' → logprob: -14.259185791015625
    8. '(self' → logprob: -15.259185791015625
    9. '	self' → logprob: -15.884185791015625
    10. ' ' → logprob: -16.259185791015625

Token 1068: '.game' (ID: 17309)
  Prédit: '.game'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.game' → logprob: -1.4629509449005127
    2. '.n' → logprob: -1.7129509449005127
    3. '.struct' → logprob: -1.8379509449005127
    4. '.structure' → logprob: -2.3379509449005127
    5. '.story' → logprob: -2.4629509449005127
    6. '.tree' → logprob: -2.7129509449005127
    7. '.br' → logprob: -2.8379509449005127
    8. '.branch' → logprob: -4.462950706481934
    9. '.best' → logprob: -4.462950706481934
    10. '.selected' → logprob: -4.837950706481934

Token 1069: ' =' (ID: 314)
  Prédit: '_structure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_structure' → logprob: -0.014794083312153816
    2. 'Structure' → logprob: -5.139793872833252
    3. ' =' → logprob: -5.764793872833252
    4. '_' → logprob: -6.139793872833252
    5. '=' → logprob: -6.264793872833252
    6. '_struct' → logprob: -7.014793872833252
    7. '   ' → logprob: -8.01479434967041
    8. 'structure' → logprob: -10.01479434967041
    9. '_STRUCTURE' → logprob: -10.01479434967041
    10. '_data' → logprob: -10.13979434967041

Token 1070: ' None' (ID: 4662)
  Prédit: 'Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Game' → logprob: -0.0019643204286694527
    2. 'None' → logprob: -6.251964092254639
    3. ' Game' → logprob: -10.251964569091797
    4. ' None' → logprob: -14.751964569091797
    5. '<Game' → logprob: -19.501964569091797
    6. '	Game' → logprob: -20.001964569091797
    7. '   ' → logprob: -20.251964569091797
    8. 'game' → logprob: -20.626964569091797
    9. '.Game' → logprob: -20.751964569091797
    10. '(Game' → logprob: -21.251964569091797

Token 1071: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005999424960464239
    2. 'def' → logprob: -5.505999565124512
    3. ' def' → logprob: -6.380999565124512
    4. '	def' → logprob: -9.380999565124512
    5. '
' → logprob: -9.630999565124512
    6. '<|end|>' → logprob: -10.880999565124512
    7. '    
' → logprob: -11.255999565124512
    8. '       ' → logprob: -11.880999565124512
    9. '```' → logprob: -11.880999565124512
    10. ',' → logprob: -12.130999565124512

Token 1072: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032899439334869385
    2. ' def' → logprob: -3.6578993797302246
    3. 'def' → logprob: -5.032899379730225
    4. '
' → logprob: -10.657899856567383
    5. '    
' → logprob: -10.907899856567383
    6. '	def' → logprob: -11.407899856567383
    7. '```' → logprob: -13.532899856567383
    8. '       ' → logprob: -13.782899856567383
    9. '        
' → logprob: -14.032899856567383
    10. ' ' → logprob: -14.532899856567383

Token 1073: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00020377879263833165
    2. ' def' → logprob: -8.500204086303711
    3. '   ' → logprob: -15.500204086303711
    4. '
' → logprob: -17.62520408630371
    5. '	def' → logprob: -17.62520408630371
    6. '```' → logprob: -20.37520408630371
    7. '@' → logprob: -21.37520408630371
    8. '_def' → logprob: -21.62520408630371
    9. '    
' → logprob: -21.87520408630371
    10. 'class' → logprob: -22.00020408630371

Token 1074: ' parse' (ID: 8420)
  Prédit: 'load'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'load' → logprob: -0.2378067970275879
    2. 'setup' → logprob: -1.987806797027588
    3. 'initialize' → logprob: -3.237806797027588
    4. 'solve' → logprob: -4.237806797027588
    5. 'set' → logprob: -4.612806797027588
    6. 'create' → logprob: -5.487806797027588
    7. 'prepare' → logprob: -6.237806797027588
    8. ' load' → logprob: -6.237806797027588
    9. 'init' → logprob: -6.362806797027588
    10. 'build' → logprob: -7.612806797027588

Token 1075: '_input' (ID: 12507)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.05250092223286629
    2. '(' → logprob: -3.5525009632110596
    3. '_code' → logprob: -4.3025007247924805
    4. '_line' → logprob: -5.4275007247924805
    5. '_input' → logprob: -5.6775007247924805
    6. '_game' → logprob: -7.4275007247924805
    7. 'self' → logprob: -9.05250072479248
    8. '_story' → logprob: -9.30250072479248
    9. '_' → logprob: -9.55250072479248
    10. '_next' → logprob: -10.17750072479248

Token 1076: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002492183819413185
    2. '(' → logprob: -6.0024919509887695
    3. ' (' → logprob: -11.50249195098877
    4. 'self' → logprob: -12.12749195098877
    5. '(
' → logprob: -14.75249195098877
    6. '_line' → logprob: -15.37749195098877
    7. '(s' → logprob: -15.75249195098877
    8. '(Self' → logprob: -16.502492904663086
    9. '(sel' → logprob: -17.002492904663086
    10. '_(' → logprob: -17.127492904663086

Token 1077: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09346340596675873
    2. 'self' → logprob: -2.84346342086792
    3. '):' → logprob: -3.59346342086792
    4. '(self' → logprob: -5.96846342086792
    5. ')' → logprob: -8.343462944030762
    6. '):
' → logprob: -8.593462944030762
    7. '_self' → logprob: -9.093462944030762
    8. '_line' → logprob: -9.093462944030762
    9. ',self' → logprob: -9.718462944030762
    10. '   ' → logprob: -9.968462944030762

Token 1078: ' n' (ID: 297)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.11502403765916824
    2. 'lines' → logprob: -2.9900240898132324
    3. 'input' → logprob: -3.8650240898132324
    4. 'n' → logprob: -3.9900240898132324
    5. ' self' → logprob: -4.365024089813232
    6. ' lines' → logprob: -5.365024089813232
    7. ')' → logprob: -7.615024089813232
    8. ' input' → logprob: -7.615024089813232
    9. ' n' → logprob: -8.490023612976074
    10. 'data' → logprob: -9.240023612976074

Token 1079: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3543352484703064
    2. ',' → logprob: -1.3543353080749512
    3. ':' → logprob: -3.604335308074951
    4. '):
' → logprob: -4.979335308074951
    5. ')' → logprob: -5.979335308074951
    6. 'self' → logprob: -5.979335308074951
    7. '   ' → logprob: -7.479335308074951
    8. '       ' → logprob: -8.104334831237793
    9. '(self' → logprob: -9.354334831237793
    10. '):
' → logprob: -10.479334831237793

Token 1080: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.9186317482963204e-05
    2. ' int' → logprob: -10.500049591064453
    3. ')' → logprob: -10.750049591064453
    4. '
' → logprob: -17.000049591064453
    5. '):
' → logprob: -17.125049591064453
    6. ')
' → logprob: -17.500049591064453
    7. '=int' → logprob: -18.250049591064453
    8. '):' → logprob: -18.375049591064453
    9. '),' → logprob: -18.500049591064453
    10. '   ' → logprob: -18.500049591064453

Token 1081: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004678497789427638
    2. '):' → logprob: -7.750467777252197
    3. ' ,' → logprob: -10.375468254089355
    4. '):
' → logprob: -13.500468254089355
    5. ',n' → logprob: -13.625468254089355
    6. '       ' → logprob: -13.750468254089355
    7. ')' → logprob: -13.875468254089355
    8. '   ' → logprob: -14.125468254089355
    9. ':' → logprob: -15.875468254089355
    10. 'self' → logprob: -16.12546730041504

Token 1082: ' branches' (ID: 34625)
  Prédit: 'branch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'branch' → logprob: -1.0599806308746338
    2. ' branching' → logprob: -1.3099806308746338
    3. 'branches' → logprob: -1.6849806308746338
    4. 'edges' → logprob: -2.184980630874634
    5. ' branches' → logprob: -3.059980630874634
    6. ' edges' → logprob: -3.559980630874634
    7. 'points' → logprob: -5.309980392456055
    8. ' branch' → logprob: -5.434980392456055
    9. ' points' → logprob: -7.434980392456055
    10. 'connections' → logprob: -9.434980392456055

Token 1083: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2217898815870285
    2. '_:' → logprob: -2.721789836883545
    3. '):' → logprob: -2.721789836883545
    4. ',' → logprob: -2.846789836883545
    5. '_,' → logprob: -5.846789836883545
    6. '=' → logprob: -6.346789836883545
    7. ')' → logprob: -6.471789836883545
    8. '):
' → logprob: -7.096789836883545
    9. '_' → logprob: -7.471789836883545
    10. '   ' → logprob: -7.721789836883545

Token 1084: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.18249627947807312
    2. 'List' → logprob: -2.4324963092803955
    3. ' list' → logprob: -2.5574963092803955
    4. ' List' → logprob: -7.682496070861816
    5. '_list' → logprob: -7.682496070861816
    6. ')' → logprob: -7.932496070861816
    7. '[list' → logprob: -9.807496070861816
    8. '):' → logprob: -10.182496070861816
    9. '[(' → logprob: -10.432496070861816
    10. '[List' → logprob: -10.682496070861816

Token 1085: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.10530950129032135
    2. '):' → logprob: -2.35530948638916
    3. '   ' → logprob: -6.10530948638916
    4. '[int' → logprob: -6.35530948638916
    5. '[' → logprob: -8.10530948638916
    6. '       ' → logprob: -8.60530948638916
    7. ',' → logprob: -8.73030948638916
    8. ' of' → logprob: -8.85530948638916
    9. ':' → logprob: -8.98030948638916
    10. '):
' → logprob: -10.10530948638916

Token 1086: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012678056373260915
    2. '```' → logprob: -9.375126838684082
    3. '   ' → logprob: -11.625126838684082
    4. ',' → logprob: -11.750126838684082
    5. '(self' → logprob: -11.875126838684082
    6. '(' → logprob: -12.250126838684082
    7. '[' → logprob: -12.500126838684082
    8. '        
' → logprob: -12.625126838684082
    9. 'def' → logprob: -13.250126838684082
    10. '           ' → logprob: -13.500126838684082

Token 1087: ' game' (ID: 2813)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.11671842634677887
    2. '       ' → logprob: -2.3667185306549072
    3. ' self' → logprob: -4.116718292236328
    4. '   ' → logprob: -9.991718292236328
    5. '	self' → logprob: -10.741718292236328
    6. '```' → logprob: -12.241718292236328
    7. '	' → logprob: -12.366718292236328
    8. 'for' → logprob: -14.491718292236328
    9. ' ' → logprob: -14.616718292236328
    10. '(self' → logprob: -15.616718292236328

Token 1088: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759527087211609
    2. ' =' → logprob: -0.8259527087211609
    3. '.' → logprob: -12.575952529907227
    4. '   ' → logprob: -12.700952529907227
    5. '=self' → logprob: -12.950952529907227
    6. '.=' → logprob: -13.325952529907227
    7. '=
' → logprob: -13.700952529907227
    8. '       ' → logprob: -15.200952529907227
    9. '=new' → logprob: -15.450952529907227
    10. ' =
' → logprob: -15.450952529907227

Token 1089: ' Game' (ID: 7022)
  Prédit: 'Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Game' → logprob: -0.023245712742209435
    2. ' Game' → logprob: -3.7732458114624023
    3. '	Game' → logprob: -15.398245811462402
    4. '<Game' → logprob: -17.773244857788086
    5. '.Game' → logprob: -18.023244857788086
    6. '(Game' → logprob: -18.523244857788086
    7. '_Game' → logprob: -18.648244857788086
    8. '   ' → logprob: -18.648244857788086
    9. '       ' → logprob: -19.273244857788086
    10. '_game' → logprob: -20.898244857788086

Token 1090: 'Structure' (ID: 29121)
  Prédit: 'Structure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Structure' → logprob: -1.0325924449716695e-05
    2. '(' → logprob: -12.37501049041748
    3. '_structure' → logprob: -12.50001049041748
    4. '(n' → logprob: -14.12501049041748
    5. '_S' → logprob: -14.25001049041748
    6. '_STRUCTURE' → logprob: -14.50001049041748
    7. '(game' → logprob: -16.000009536743164
    8. ' Structure' → logprob: -16.250009536743164
    9. '(
' → logprob: -16.875009536743164
    10. '(S' → logprob: -17.000009536743164

Token 1091: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0007255369564518332
    2. '(' → logprob: -7.250725746154785
    3. '(
' → logprob: -11.125725746154785
    4. '(game' → logprob: -15.125725746154785
    5. ' (' → logprob: -15.375725746154785
    6. '((' → logprob: -16.12572479248047
    7. '(self' → logprob: -16.50072479248047
    8. '=' → logprob: -17.00072479248047
    9. '(len' → logprob: -17.12572479248047
    10. 'n' → logprob: -17.25072479248047

Token 1092: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013961104676127434
    2. ')
' → logprob: -4.388961315155029
    3. '(n' → logprob: -6.638961315155029
    4. '       ' → logprob: -9.763960838317871
    5. '(' → logprob: -10.263960838317871
    6. ',' → logprob: -11.013960838317871
    7. ')n' → logprob: -11.388960838317871
    8. '   ' → logprob: -11.513960838317871
    9. '<|end|>' → logprob: -12.763960838317871
    10. ' )' → logprob: -13.513960838317871

Token 1093: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004328402690589428
    2. ' for' → logprob: -5.75432825088501
    3. 'for' → logprob: -7.00432825088501
    4. 'self' → logprob: -9.379328727722168
    5. '
' → logprob: -10.004328727722168
    6. '	' → logprob: -10.379328727722168
    7. '<|end|>' → logprob: -10.379328727722168
    8. '        
' → logprob: -11.254328727722168
    9. '	for' → logprob: -11.379328727722168
    10. ' self' → logprob: -12.004328727722168

Token 1094: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.019142162054777145
    2. ' for' → logprob: -4.019142150878906
    3. '       ' → logprob: -7.019142150878906
    4. '	for' → logprob: -9.269142150878906
    5. '	' → logprob: -13.519142150878906
    6. '
' → logprob: -13.894142150878906
    7. '   ' → logprob: -14.644142150878906
    8. '```' → logprob: -16.144142150878906
    9. '        
' → logprob: -16.394142150878906
    10. ' ' → logprob: -17.394142150878906

Token 1095: ' i' (ID: 575)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.019322367385029793
    2. ' id' → logprob: -4.394322395324707
    3. 'branch' → logprob: -5.519322395324707
    4. 'i' → logprob: -6.394322395324707
    5. '   ' → logprob: -7.519322395324707
    6. ' i' → logprob: -8.144322395324707
    7. ' branch' → logprob: -9.269322395324707
    8. 'b' → logprob: -9.894322395324707
    9. 'idx' → logprob: -10.394322395324707
    10. 'br' → logprob: -10.644322395324707

Token 1096: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1953253448009491
    2. 'in' → logprob: -1.8203253746032715
    3. ',' → logprob: -4.4453253746032715
    4. '_' → logprob: -5.9453253746032715
    5. ' ,' → logprob: -7.0703253746032715
    6. '_,' → logprob: -8.945324897766113
    7. '_in' → logprob: -10.445324897766113
    8. '        ' → logprob: -10.945324897766113
    9. '    ' → logprob: -11.445324897766113
    10. ' ' → logprob: -11.695324897766113

Token 1097: ' (' (ID: 350)
  Prédit: '(branch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(branch' → logprob: -0.007636916358023882
    2. '(id' → logprob: -5.757637023925781
    3. 'branch' → logprob: -6.382637023925781
    4. '(b' → logprob: -6.507637023925781
    5. '(' → logprob: -7.507637023925781
    6. '(br' → logprob: -7.882637023925781
    7. ' (' → logprob: -8.757637023925781
    8. '(line' → logprob: -8.882637023925781
    9. '(y' → logprob: -11.757637023925781
    10. '(data' → logprob: -11.757637023925781

Token 1098: 'yes' (ID: 6763)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.003193993354216218
    2. 'yes' → logprob: -5.7531938552856445
    3. ' id' → logprob: -11.628193855285645
    4. ' yes' → logprob: -12.503193855285645
    5. 'y' → logprob: -13.753193855285645
    6. '   ' → logprob: -14.003193855285645
    7. 'branch' → logprob: -14.503193855285645
    8. 'b' → logprob: -14.628193855285645
    9. 'a' → logprob: -15.878193855285645
    10. '_yes' → logprob: -16.12819480895996

Token 1099: '_id' (ID: 1537)
  Prédit: '_target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_target' → logprob: -0.00010080150241265073
    2. ',' → logprob: -9.500101089477539
    3. '_id' → logprob: -11.750101089477539
    4. '_branch' → logprob: -11.875101089477539
    5. '_,' → logprob: -12.500101089477539
    6. ',_' → logprob: -13.000101089477539
    7. '_answer' → logprob: -13.125101089477539
    8. ',target' → logprob: -13.625101089477539
    9. 'target' → logprob: -14.125101089477539
    10. '_' → logprob: -14.375101089477539

Token 1100: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008749663829803467
    2. '_,' → logprob: -4.758749485015869
    3. ' ,' → logprob: -9.633749961853027
    4. '_target' → logprob: -10.008749961853027
    5. ',_' → logprob: -11.133749961853027
    6. ',target' → logprob: -12.383749961853027
    7. '_' → logprob: -12.883749961853027
    8. ',no' → logprob: -13.383749961853027
    9. '‌,' → logprob: -14.758749961853027
    10. '_no' → logprob: -15.008749961853027

Token 1101: ' no' (ID: 860)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.005234002135694027
    2. ' no' → logprob: -5.2552337646484375
    3. '	no' → logprob: -15.880233764648438
    4. '_no' → logprob: -18.130233764648438
    5. '   ' → logprob: -19.255233764648438
    6. '(no' → logprob: -19.505233764648438
    7. 'No' → logprob: -19.630233764648438
    8. ',no' → logprob: -20.255233764648438
    9. ')' → logprob: -20.380233764648438
    10. ' ' → logprob: -20.630233764648438

Token 1102: '_id' (ID: 1537)
  Prédit: '_target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_target' → logprob: -0.007940782234072685
    2. '_id' → logprob: -4.882940769195557
    3. ')_' → logprob: -8.257941246032715
    4. ')' → logprob: -10.007941246032715
    5. '_branch' → logprob: -11.632941246032715
    6. 'target' → logprob: -12.257941246032715
    7. '_' → logprob: -12.507941246032715
    8. '_t' → logprob: -12.507941246032715
    9. '_answer' → logprob: -13.132941246032715
    10. '_targets' → logprob: -13.507941246032715

Token 1103: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.1318875446449965e-05
    2. ')=' → logprob: -10.250041007995605
    3. ' )' → logprob: -12.125041007995605
    4. '=' → logprob: -16.000041961669922
    5. ')...' → logprob: -16.125041961669922
    6. ')
' → logprob: -16.375041961669922
    7. ')=>' → logprob: -17.375041961669922
    8. ' in' → logprob: -17.625041961669922
    9. ',)' → logprob: -18.125041961669922
    10. '),' → logprob: -18.500041961669922

Token 1104: ' in' (ID: 306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00415022624656558
    2. 'in' → logprob: -5.754150390625
    3. ' in' → logprob: -7.129150390625
    4. ' )' → logprob: -8.754150390625
    5. ')=' → logprob: -12.379150390625
    6. ')
' → logprob: -13.379150390625
    7. '
' → logprob: -13.629150390625
    8. '_in' → logprob: -13.754150390625
    9. '=' → logprob: -14.004150390625
    10. '   ' → logprob: -14.379150390625

Token 1105: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.04945966228842735
    2. ' enumerate' → logprob: -3.04945969581604
    3. 'branches' → logprob: -7.049459457397461
    4. ' branches' → logprob: -12.424459457397461
    5. '   ' → logprob: -16.54945945739746
    6. 'enum' → logprob: -17.42445945739746
    7. '
' → logprob: -18.17445945739746
    8. 'en' → logprob: -18.29945945739746
    9. 'branch' → logprob: -18.79945945739746
    10. ' ' → logprob: -19.04945945739746

Token 1106: '(branch' (ID: 153053)
  Prédit: '(branch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(branch' → logprob: -0.6808937191963196
    2. 'branches' → logprob: -1.1808936595916748
    3. ' branches' → logprob: -2.055893659591675
    4. '(' → logprob: -3.430893659591675
    5. '(range' → logprob: -4.180893898010254
    6. 'enumer' → logprob: -5.555893898010254
    7. 'range' → logprob: -5.930893898010254
    8. ' enumerate' → logprob: -6.055893898010254
    9. ' (' → logprob: -6.805893898010254
    10. ' range' → logprob: -8.055893898010254

Token 1107: 'es' (ID: 268)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0705010890960693
    2. 'es' → logprob: -1.3205010890960693
    3. 'branches' → logprob: -1.5705010890960693
    4. '       ' → logprob: -2.3205010890960693
    5. ')' → logprob: -3.1955010890960693
    6. '(branch' → logprob: -4.570501327514648
    7. '   ' → logprob: -4.820501327514648
    8. ' branches' → logprob: -4.945501327514648
    9. ',' → logprob: -5.445501327514648
    10. '_' → logprob: -5.695501327514648

Token 1108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032595922239124775
    2. '):' → logprob: -6.753259658813477
    3. '):
' → logprob: -6.753259658813477
    4. '       ' → logprob: -7.378259658813477
    5. ' ,' → logprob: -8.878259658813477
    6. '(' → logprob: -9.753259658813477
    7. '   ' → logprob: -10.503259658813477
    8. '           ' → logprob: -10.628259658813477
    9. '(),' → logprob: -11.503259658813477
    10. ',start' → logprob: -12.378259658813477

Token 1109: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.03602161258459091
    2. '1' → logprob: -4.036021709442139
    3. ' start' → logprob: -4.036021709442139
    4. ' ' → logprob: -10.28602123260498
    5. '   ' → logprob: -11.53602123260498
    6. '       ' → logprob: -14.28602123260498
    7. '           ' → logprob: -14.66102123260498
    8. '	start' → logprob: -16.161022186279297
    9. ',start' → logprob: -16.411022186279297
    10. '  ' → logprob: -16.786022186279297

Token 1110: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007414720486849546
    2. '1' → logprob: -5.257414817810059
    3. '(' → logprob: -6.132414817810059
    4. '(
' → logprob: -12.007414817810059
    5. '=
' → logprob: -14.632414817810059
    6. '       ' → logprob: -15.257414817810059
    7. '   ' → logprob: -16.257413864135742
    8. ')' → logprob: -16.882413864135742
    9. '           ' → logprob: -16.882413864135742
    10. '2' → logprob: -18.007413864135742

Token 1111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.036524842376821e-05
    2. '2' → logprob: -10.125040054321289
    3. ' ' → logprob: -15.500040054321289
    4. '=' → logprob: -17.25004005432129
    5. '   ' → logprob: -17.37504005432129
    6. '```' → logprob: -19.12504005432129
    7. '0' → logprob: -19.50004005432129
    8. ')' → logprob: -20.25004005432129
    9. 'def' → logprob: -20.37504005432129
    10. '       ' → logprob: -20.50004005432129

Token 1112: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.634261429309845
    2. '):' → logprob: -0.759261429309845
    3. '       ' → logprob: -6.509261608123779
    4. '           ' → logprob: -9.384261131286621
    5. '):
' → logprob: -10.134261131286621
    6. ':' → logprob: -10.759261131286621
    7. '):

' → logprob: -11.759261131286621
    8. '   ' → logprob: -12.009261131286621
    9. '():
' → logprob: -13.134261131286621
    10. ')' → logprob: -13.259261131286621

Token 1113: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013598784571513534
    2. '   ' → logprob: -7.376359939575195
    3. 'self' → logprob: -8.126359939575195
    4. '```' → logprob: -9.626359939575195
    5. ' game' → logprob: -9.751359939575195
    6. ' self' → logprob: -9.751359939575195
    7. ':' → logprob: -10.126359939575195
    8. 'game' → logprob: -10.126359939575195
    9. '(game' → logprob: -10.626359939575195
    10. '       ' → logprob: -10.751359939575195

Token 1114: ' game' (ID: 2813)
  Prédit: 'game'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'game' (adapté à ' game') → logprob: -0.12043701857328415
    2. ' game' → logprob: -2.370436906814575
    3. 'self' → logprob: -4.120437145233154
    4. '           ' → logprob: -5.870437145233154
    5. ' self' → logprob: -7.120437145233154
    6. '	game' → logprob: -9.245436668395996
    7. '   ' → logprob: -10.870436668395996
    8. '       ' → logprob: -10.995436668395996
    9. '(game' → logprob: -11.120436668395996
    10. '.game' → logprob: -12.745436668395996

Token 1115: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0004315036640036851
    2. '.' → logprob: -7.750431537628174
    3. '   ' → logprob: -15.375431060791016
    4. ' .' → logprob: -15.625431060791016
    5. '.append' → logprob: -16.125431060791016
    6. ').' → logprob: -16.375431060791016
    7. '>.' → logprob: -17.000431060791016
    8. ')add' → logprob: -17.000431060791016
    9. '.ad' → logprob: -17.875431060791016
    10. '.create' → logprob: -17.875431060791016

Token 1116: '_branch' (ID: 71162)
  Prédit: '_branch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_branch' → logprob: -3.054500666621607e-06
    2. 'branch' → logprob: -13.00000286102295
    3. '_br' → logprob: -14.87500286102295
    4. '_' → logprob: -15.00000286102295
    5. '_block' → logprob: -17.625003814697266
    6. '_b' → logprob: -18.125003814697266
    7. ' branching' → logprob: -18.500003814697266
    8. '(branch' → logprob: -18.750003814697266
    9. '```' → logprob: -19.875003814697266
    10. '_BRANCH' → logprob: -20.375003814697266

Token 1117: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.0014445222914218903
    2. '_branch' → logprob: -7.001444339752197
    3. '_point' → logprob: -7.626444339752197
    4. 'g' → logprob: -10.751444816589355
    5. 'branch' → logprob: -11.501444816589355
    6. 'ng' → logprob: -12.251444816589355
    7. 'ging' → logprob: -12.751444816589355
    8. 'point' → logprob: -13.126444816589355
    9. 'ning' → logprob: -13.876444816589355
    10. '```' → logprob: -14.376444816589355

Token 1118: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -15.375000953674316
    3. '_points' → logprob: -15.625000953674316
    4. 'point' → logprob: -17.5
    5. '_pt' → logprob: -17.5
    6. '_p' → logprob: -17.625
    7. '_POINT' → logprob: -18.25
    8. '_node' → logprob: -18.625
    9. 'Point' → logprob: -18.75
    10. '_Point' → logprob: -18.75

Token 1119: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00018268341955263168
    2. '(' → logprob: -8.62518310546875
    3. ' (' → logprob: -13.50018310546875
    4. '(
' → logprob: -13.62518310546875
    5. 'i' → logprob: -15.12518310546875
    6. '((' → logprob: -15.87518310546875
    7. '   ' → logprob: -16.62518310546875
    8. ' i' → logprob: -17.25018310546875
    9. ' ' → logprob: -19.12518310546875
    10. '(ii' → logprob: -19.37518310546875

Token 1120: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4974866644479334e-05
    2. ' ,' → logprob: -11.125015258789062
    3. '‌,' → logprob: -16.875015258789062
    4. '   ' → logprob: -17.000015258789062
    5. ',
' → logprob: -17.250015258789062
    6. '           ' → logprob: -18.125015258789062
    7. '    ' → logprob: -18.625015258789062
    8. '       ' → logprob: -18.750015258789062
    9. ')' → logprob: -19.000015258789062
    10. '        ' → logprob: -19.500015258789062

Token 1121: ' yes' (ID: 14531)
  Prédit: 'yes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yes' → logprob: -0.004078401252627373
    2. ' yes' → logprob: -5.504078388214111
    3. '_yes' → logprob: -19.504077911376953
    4. '=yes' → logprob: -20.629077911376953
    5. 'Yes' → logprob: -20.754077911376953
    6. '           ' → logprob: -21.004077911376953
    7. '   ' → logprob: -22.004077911376953
    8. 'y' → logprob: -22.504077911376953
    9. 'no' → logprob: -22.754077911376953
    10. '       ' → logprob: -22.754077911376953

Token 1122: '_id' (ID: 1537)
  Prédit: '_target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_target' → logprob: -0.5910576581954956
    2. '_id' → logprob: -0.8410576581954956
    3. '_yes' → logprob: -4.591057777404785
    4. '_no' → logprob: -5.841057777404785
    5. '_targets' → logprob: -6.841057777404785
    6. '_' → logprob: -7.841057777404785
    7. 'yes' → logprob: -9.466057777404785
    8. 'no' → logprob: -9.716057777404785
    9. ')_' → logprob: -10.216057777404785
    10. ' _' → logprob: -10.341057777404785

Token 1123: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002918446552939713
    2. ' ,' → logprob: -8.62529182434082
    3. ',no' → logprob: -9.12529182434082
    4. ',n' → logprob: -13.62529182434082
    5. ',
' → logprob: -14.25029182434082
    6. '           ' → logprob: -14.62529182434082
    7. '   ' → logprob: -14.75029182434082
    8. '       ' → logprob: -15.12529182434082
    9. '‌,' → logprob: -16.75029182434082
    10. '               ' → logprob: -16.75029182434082

Token 1124: ' no' (ID: 860)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.0015029559144750237
    2. ' no' → logprob: -6.501502990722656
    3. '	no' → logprob: -15.126502990722656
    4. '(no' → logprob: -16.126502990722656
    5. ' ' → logprob: -17.001502990722656
    6. '           ' → logprob: -17.126502990722656
    7. '   ' → logprob: -17.126502990722656
    8. '          ' → logprob: -17.501502990722656
    9. '               ' → logprob: -17.876502990722656
    10. '_no' → logprob: -18.251502990722656

Token 1125: '_id' (ID: 1537)
  Prédit: '_target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_target' → logprob: -0.2531972825527191
    2. '_id' → logprob: -1.5031973123550415
    3. 'target' → logprob: -6.753197193145752
    4. 't' → logprob: -10.37819766998291
    5. 'arget' → logprob: -10.50319766998291
    6. '_t' → logprob: -11.37819766998291
    7. 'id' → logprob: -12.00319766998291
    8. 'o' → logprob: -12.00319766998291
    9. 'Target' → logprob: -12.12819766998291
    10. '_targets' → logprob: -12.50319766998291

Token 1126: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.547789674485102e-05
    2. '       ' → logprob: -11.000035285949707
    3. ')
' → logprob: -11.125035285949707
    4. '           ' → logprob: -12.750035285949707
    5. ' )' → logprob: -14.375035285949707
    6. '   ' → logprob: -15.250035285949707
    7. '))' → logprob: -16.500036239624023
    8. ')return' → logprob: -17.125036239624023
    9. ')`' → logprob: -17.375036239624023
    10. ')

' → logprob: -17.750036239624023

Token 1127: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002303697168827057
    2. 'self' → logprob: -6.377303600311279
    3. '
' → logprob: -7.502303600311279
    4. ' self' → logprob: -10.502304077148438
    5. '<|end|>' → logprob: -11.502304077148438
    6. '        
' → logprob: -12.252304077148438
    7. '   ' → logprob: -12.502304077148438
    8. '```' → logprob: -13.502304077148438
    9. '           ' → logprob: -14.002304077148438
    10. ' ' → logprob: -15.377304077148438

Token 1128: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0027523303870111704
    2. '       ' → logprob: -6.002752304077148
    3. ' self' → logprob: -8.252752304077148
    4. '   ' → logprob: -11.252752304077148
    5. '
' → logprob: -12.877752304077148
    6. '	self' → logprob: -15.127752304077148
    7. '        
' → logprob: -16.50275230407715
    8. '```' → logprob: -16.50275230407715
    9. 'return' → logprob: -17.12775230407715
    10. '(self' → logprob: -17.87775230407715

Token 1129: '.game' (ID: 17309)
  Prédit: '.game'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.game' → logprob: -0.003648534184321761
    2. '.user' → logprob: -5.62864875793457
    3. '.' → logprob: -10.25364875793457
    4. 'game' → logprob: -11.37864875793457
    5. '.chat' → logprob: -15.50364875793457
    6. '	game' → logprob: -15.50364875793457
    7. '.question' → logprob: -15.75364875793457
    8. '.g' → logprob: -15.75364875793457
    9. ' .' → logprob: -15.87864875793457
    10. '.task' → logprob: -16.25364875793457

Token 1130: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192946195602417
    2. ' =' → logprob: -1.501929521560669
    3. '=self' → logprob: -16.001930236816406
    4. ' ' → logprob: -16.751930236816406
    5. ' =
' → logprob: -17.126930236816406
    6. '＝' → logprob: -17.626930236816406
    7. '=

' → logprob: -18.001930236816406
    8. '=create' → logprob: -18.126930236816406
    9. '.=' → logprob: -18.501930236816406
    10. '=
' → logprob: -18.751930236816406

Token 1131: ' game' (ID: 2813)
  Prédit: 'game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'game' → logprob: -0.0004306692280806601
    2. ' game' → logprob: -7.750430583953857
    3. '(game' → logprob: -18.500431060791016
    4. '	game' → logprob: -19.125431060791016
    5. '.game' → logprob: -21.750431060791016
    6. 'games' → logprob: -22.375431060791016
    7. '_game' → logprob: -22.375431060791016
    8. 'Game' → logprob: -22.625431060791016
    9. '   ' → logprob: -23.250431060791016
    10. 'graph' → logprob: -23.750431060791016

Token 1132: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10404083132743835
    2. 'def' → logprob: -2.3540408611297607
    3. ' def' → logprob: -6.104040622711182
    4. '
' → logprob: -6.604040622711182
    5. '<|end|>' → logprob: -8.97904109954834
    6. '    
' → logprob: -9.85404109954834
    7. '	def' → logprob: -10.97904109954834
    8. '<|end|>' → logprob: -11.10404109954834
    9. '```' → logprob: -11.85404109954834
    10. ' ' → logprob: -12.10404109954834

Token 1133: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2645266354084015
    2. '   ' → logprob: -1.514526605606079
    3. ' def' → logprob: -4.389526844024658
    4. '
' → logprob: -9.7645263671875
    5. '	def' → logprob: -10.6395263671875
    6. '<|end|>' → logprob: -11.5145263671875
    7. '```' → logprob: -11.6395263671875
    8. '    
' → logprob: -12.5145263671875
    9. ' ' → logprob: -12.6395263671875
    10. '  ' → logprob: -13.0145263671875

Token 1134: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.7432603272027336e-06
    2. ' def' → logprob: -13.750001907348633
    3. '   ' → logprob: -14.250001907348633
    4. '	def' → logprob: -20.250001907348633
    5. '```' → logprob: -22.000001907348633
    6. '
' → logprob: -24.375001907348633
    7. '    
' → logprob: -24.500001907348633
    8. 'Def' → logprob: -25.375001907348633
    9. '  ' → logprob: -26.125001907348633
    10. ':def' → logprob: -26.250001907348633

Token 1135: ' solve' (ID: 17722)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.6963813900947571
    2. 'solve' → logprob: -0.6963813900947571
    3. ' solve' → logprob: -6.696381568908691
    4. ' compute' → logprob: -6.696381568908691
    5. 'get' → logprob: -7.446381568908691
    6. 'calculate' → logprob: -9.196381568908691
    7. 'def' → logprob: -10.196381568908691
    8. 'min' → logprob: -11.571381568908691
    9. 'run' → logprob: -11.821381568908691
    10. 'minimum' → logprob: -11.946381568908691

Token 1136: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.014277390204370022
    2. '(' → logprob: -4.264277458190918
    3. 'self' → logprob: -9.639277458190918
    4. ' (' → logprob: -10.889277458190918
    5. '(
' → logprob: -11.014277458190918
    6. '   ' → logprob: -11.889277458190918
    7. '_' → logprob: -13.514277458190918
    8. '_self' → logprob: -13.514277458190918
    9. ' self' → logprob: -13.889277458190918
    10. '       ' → logprob: -14.264277458190918

Token 1137: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.328349769115448
    2. '):' → logprob: -1.3283498287200928
    3. '):
' → logprob: -4.828349590301514
    4. '(self' → logprob: -5.828349590301514
    5. 'self' → logprob: -5.953349590301514
    6. '   ' → logprob: -6.953349590301514
    7. '       ' → logprob: -8.703350067138672
    8. ')' → logprob: -9.328350067138672
    9. ',n' → logprob: -9.953350067138672
    10. ')(' → logprob: -10.453350067138672

Token 1138: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04482865706086159
    2. '       ' → logprob: -3.6698286533355713
    3. '(' → logprob: -4.54482889175415
    4. '   ' → logprob: -5.91982889175415
    5. 'self' → logprob: -6.41982889175415
    6. ':' → logprob: -6.66982889175415
    7. '(
' → logprob: -6.79482889175415
    8. '{' → logprob: -7.66982889175415
    9. ' self' → logprob: -8.419828414916992
    10. ':
' → logprob: -9.294828414916992

Token 1139: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.023274365812540054
    2. ' int' → logprob: -3.7732744216918945
    3. 'self' → logprob: -10.648274421691895
    4. ' self' → logprob: -12.898274421691895
    5. '   ' → logprob: -13.398274421691895
    6. '(int' → logprob: -14.023274421691895
    7. '<int' → logprob: -17.023273468017578
    8. ' ' → logprob: -17.023273468017578
    9. '[int' → logprob: -17.398273468017578
    10. '  ' → logprob: -17.773273468017578

Token 1140: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5073589086532593
    2. '       ' → logprob: -1.0073589086532593
    3. '(
' → logprob: -4.257359027862549
    4. '(' → logprob: -5.007359027862549
    5. '   ' → logprob: -5.382359027862549
    6. ':' → logprob: -6.007359027862549
    7. ':
' → logprob: -6.632359027862549
    8. 'self' → logprob: -7.257359027862549
    9. '():
' → logprob: -7.257359027862549
    10. '<|end|>' → logprob: -7.632359027862549

Token 1141: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007860410842113197
    2. 'return' → logprob: -7.250785827636719
    3. ' return' → logprob: -9.500785827636719
    4. '   ' → logprob: -14.375785827636719
    5. '```' → logprob: -14.875785827636719
    6. '
' → logprob: -15.125785827636719
    7. '	' → logprob: -16.75078582763672
    8. '	return' → logprob: -17.50078582763672
    9. '{return' → logprob: -17.87578582763672
    10. '           ' → logprob: -17.87578582763672

Token 1142: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0002585978072602302
    2. '       ' → logprob: -8.500258445739746
    3. ' return' → logprob: -10.500258445739746
    4. 'if' → logprob: -10.500258445739746
    5. '   ' → logprob: -17.250259399414062
    6. 'result' → logprob: -17.875259399414062
    7. '```' → logprob: -18.875259399414062
    8. '	return' → logprob: -19.125259399414062
    9. ' if' → logprob: -20.125259399414062
    10. '
' → logprob: -20.125259399414062

Token 1143: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5759408473968506
    2. 'self' → logprob: -0.8259408473968506
    3. '(self' → logprob: -13.95094108581543
    4. '       ' → logprob: -14.70094108581543
    5. '   ' → logprob: -16.32594108581543
    6. '	self' → logprob: -18.32594108581543
    7. '    ' → logprob: -19.45094108581543
    8. ' ' → logprob: -20.82594108581543
    9. ' ' → logprob: -20.95094108581543
    10. '_self' → logprob: -20.95094108581543

Token 1144: '.game' (ID: 17309)
  Prédit: '.game'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.game' → logprob: -0.001841060002334416
    2. '.' → logprob: -6.626841068267822
    3. '.solve' → logprob: -7.751841068267822
    4. ' .' → logprob: -10.001840591430664
    5. '.compute' → logprob: -11.376840591430664
    6. '.code' → logprob: -12.001840591430664
    7. '.
' → logprob: -12.376840591430664
    8. '.games' → logprob: -12.876840591430664
    9. '._' → logprob: -13.126840591430664
    10. '.return' → logprob: -13.626840591430664

Token 1145: '.compute' (ID: 60156)
  Prédit: '.compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.compute' → logprob: -0.03023463487625122
    2. '.' → logprob: -3.6552345752716064
    3. '._' → logprob: -5.6552348136901855
    4. '.calculate' → logprob: -9.030234336853027
    5. '.solve' → logprob: -9.780234336853027
    6. '_compute' → logprob: -9.905234336853027
    7. ' .' → logprob: -10.155234336853027
    8. '.game' → logprob: -10.155234336853027
    9. '.run' → logprob: -10.780234336853027
    10. 'compute' → logprob: -11.030234336853027

Token 1146: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -1.9361264946837764e-07
    2. '_max' → logprob: -17.0
    3. 'min' → logprob: -17.25
    4. '_m' → logprob: -18.0
    5. '_' → logprob: -18.375
    6. '_time' → logprob: -18.75
    7. ' _' → logprob: -19.875
    8. '_MIN' → logprob: -20.75
    9. '```' → logprob: -20.75
    10. '_mult' → logprob: -22.25

Token 1147: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: 0.0
    2. ' _' → logprob: -17.75
    3. '_min' → logprob: -18.0
    4. '_tim' → logprob: -19.0
    5. '_' → logprob: -19.25
    6. '_times' → logprob: -19.375
    7. '_TIME' → logprob: -20.625
    8. '_t' → logprob: -20.875
    9. '_cost' → logprob: -21.0
    10. '_timer' → logprob: -21.5

Token 1148: '()


' (ID: 29771)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1637638360261917
    2. '(' → logprob: -2.1637637615203857
    3. '<|end|>' → logprob: -3.6637637615203857
    4. '(
' → logprob: -4.788763999938965
    5. '()
' → logprob: -6.913763999938965
    6. '
' → logprob: -8.538763999938965
    7. '<|end|>' → logprob: -8.663763999938965
    8. '().' → logprob: -9.163763999938965
    9. '```' → logprob: -9.163763999938965
    10. '\' → logprob: -9.288763999938965

Token 1149: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.07501783221960068
    2. '```' → logprob: -3.0750179290771484
    3. '<|end|>' → logprob: -3.7000179290771484
    4. 'def' → logprob: -7.450017929077148
    5. '<|end|>' → logprob: -8.075017929077148
    6. '[' → logprob: -9.325017929077148
    7. '{' → logprob: -9.825017929077148
    8. 'a' → logprob: -9.825017929077148
    9. 'n' → logprob: -9.950017929077148
    10. 'import' → logprob: -10.825017929077148

Token 1150: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.010405764915049076
    2. ' test' → logprob: -5.135405540466309
    3. ' run' → logprob: -6.010405540466309
    4. ' solve' → logprob: -6.885405540466309
    5. ' example' → logprob: -7.010405540466309
    6. 'main' → logprob: -10.260405540466309
    7. ' __' → logprob: -10.885405540466309
    8. ' solution' → logprob: -11.135405540466309
    9. ' parse' → logprob: -12.135405540466309
    10. ' sample' → logprob: -12.510405540466309

Token 1151: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0005575587856583297
    2. '():
' → logprob: -7.5005574226379395
    3. ' ():' → logprob: -13.000557899475098
    4. '()' → logprob: -13.375557899475098
    5. '():

' → logprob: -15.375557899475098
    6. ':' → logprob: -15.750557899475098
    7. '():
' → logprob: -15.750557899475098
    8. '(' → logprob: -16.12555694580078
    9. '()>' → logprob: -17.25055694580078
    10. '();' → logprob: -17.25055694580078

Token 1152: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4402160942554474
    2. ' n' → logprob: -1.940216064453125
    3. 'import' → logprob: -2.190216064453125
    4. ' import' → logprob: -2.565216064453125
    5. 'n' → logprob: -3.940216064453125
    6. '```' → logprob: -6.190216064453125
    7. ' if' → logprob: -6.440216064453125
    8. 'if' → logprob: -8.690216064453125
    9. '	import' → logprob: -9.065216064453125
    10. '	n' → logprob: -9.690216064453125

Token 1153: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.5861653685569763
    2. ' import' → logprob: -0.8361653685569763
    3. 'n' → logprob: -5.086165428161621
    4. ' n' → logprob: -5.586165428161621
    5. '   ' → logprob: -8.336165428161621
    6. '```' → logprob: -13.211165428161621
    7. '	import' → logprob: -14.711165428161621
    8. 't' → logprob: -15.211165428161621
    9. 'input' → logprob: -16.211164474487305
    10. ' pass' → logprob: -16.336164474487305

Token 1154: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -5.836499985889532e-05
    2. ' sys' → logprob: -9.7500581741333
    3. '=sys' → logprob: -19.250059127807617
    4. '(sys' → logprob: -21.125059127807617
    5. '_sys' → logprob: -21.625059127807617
    6. '	sys' → logprob: -22.625059127807617
    7. 'math' → logprob: -22.750059127807617
    8. 'io' → logprob: -23.000059127807617
    9. '.sys' → logprob: -23.625059127807617
    10. 'stdin' → logprob: -24.875059127807617

Token 1155: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0497625507414341
    2. 'input' → logprob: -3.174762487411499
    3. ' input' → logprob: -5.299762725830078
    4. '    
' → logprob: -7.299762725830078
    5. ' lines' → logprob: -7.924762725830078
    6. '
' → logprob: -8.549762725830078
    7. 'n' → logprob: -8.799762725830078
    8. 'data' → logprob: -8.799762725830078
    9. ' readline' → logprob: -9.674762725830078
    10. '```' → logprob: -10.299762725830078

Token 1156: '   ' (ID: 271)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5854498147964478
    2. '   ' → logprob: -0.8354498147964478
    3. ' input' → logprob: -4.835449695587158
    4. 'data' → logprob: -6.585449695587158
    5. '	input' → logprob: -10.085450172424316
    6. '```' → logprob: -10.335450172424316
    7. ' readline' → logprob: -11.210450172424316
    8. 'lines' → logprob: -11.460450172424316
    9. 'def' → logprob: -11.960450172424316
    10. '_input' → logprob: -12.085450172424316

Token 1157: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0033971716184169054
    2. '   ' → logprob: -6.003396987915039
    3. ' input' → logprob: -7.003396987915039
    4. 'data' → logprob: -11.628396987915039
    5. 'n' → logprob: -13.003396987915039
    6. 'lines' → logprob: -14.253396987915039
    7. 'read' → logprob: -15.753396987915039
    8. 'reader' → logprob: -16.37839698791504
    9. 'for' → logprob: -16.50339698791504
    10. '	input' → logprob: -16.62839698791504

Token 1158: '.set' (ID: 1230)
  Prédit: '.stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.13496515154838562
    2. '.stdout' → logprob: -2.259965181350708
    3. '.argv' → logprob: -4.009964942932129
    4. '.exit' → logprob: -5.884964942932129
    5. '.' → logprob: -7.884964942932129
    6. '.stderr' → logprob: -7.884964942932129
    7. ' .' → logprob: -9.259964942932129
    8. '.set' → logprob: -9.759964942932129
    9. '.setdefault' → logprob: -10.384964942932129
    10. '.readline' → logprob: -10.759964942932129

Token 1159: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -3.380904672667384e-05
    2. '_rec' → logprob: -10.625033378601074
    3. 'limit' → logprob: -12.625033378601074
    4. 's' → logprob: -13.000033378601074
    5. 'trace' → logprob: -14.250033378601074
    6. ' recursion' → logprob: -14.375033378601074
    7. '_int' → logprob: -15.000033378601074
    8. 'attr' → logprob: -15.875033378601074
    9. 'set' → logprob: -16.12503433227539
    10. 're' → logprob: -16.25003433227539

Token 1160: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0013071446446701884
    2. 'set' → logprob: -7.126307010650635
    3. 'limit' → logprob: -9.126307487487793
    4. 'ur' → logprob: -9.626307487487793
    5. 'et' → logprob: -9.751307487487793
    6. 't' → logprob: -9.751307487487793
    7. 'ursive' → logprob: -10.626307487487793
    8. 'urs' → logprob: -10.751307487487793
    9. 'ef' → logprob: -10.876307487487793
    10. 'f' → logprob: -11.001307487487793

Token 1161: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -2.1008713702030946e-06
    2. '_limit' → logprob: -13.250001907348633
    3. ' limit' → logprob: -15.375001907348633
    4. 'lim' → logprob: -17.750001907348633
    5. 'depth' → logprob: -19.125001907348633
    6. 'Limit' → logprob: -19.250001907348633
    7. 'limits' → logprob: -19.500001907348633
    8. '-limit' → logprob: -20.375001907348633
    9. '(limit' → logprob: -20.750001907348633
    10. 'LIMIT' → logprob: -21.375001907348633

Token 1162: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.9153885558771435e-06
    2. '(
' → logprob: -12.500005722045898
    3. '   ' → logprob: -14.625005722045898
    4. '=' → logprob: -14.750005722045898
    5. ' (' → logprob: -14.750005722045898
    6. '100' → logprob: -14.875005722045898
    7. '10' → logprob: -15.500005722045898
    8. '(int' → logprob: -16.5000057220459
    9. '((' → logprob: -17.1250057220459
    10. '    ' → logprob: -17.2500057220459

Token 1163: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -3.643152740551159e-05
    2. '100' → logprob: -10.250036239624023
    3. '200' → logprob: -13.875036239624023
    4. '300' → logprob: -16.250036239624023
    5. ' ' → logprob: -18.125036239624023
    6. '1' → logprob: -18.125036239624023
    7. '500' → logprob: -18.750036239624023
    8. '１０' → logprob: -18.875036239624023
    9. '150' → logprob: -19.500036239624023
    10. 'int' → logprob: -20.500036239624023

Token 1164: '**' (ID: 410)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.2641427218914032
    2. '**' → logprob: -1.5141427516937256
    3. '000' → logprob: -5.0141425132751465
    4. '6' → logprob: -5.2641425132751465
    5. '07' → logprob: -8.639142990112305
    6. '00' → logprob: -9.639142990112305
    7. '8' → logprob: -9.639142990112305
    8. '007' → logprob: -12.889142990112305
    9. '   ' → logprob: -13.014142990112305
    10. '9' → logprob: -13.014142990112305

Token 1165: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0012667786795645952
    2. '9' → logprob: -6.751266956329346
    3. '8' → logprob: -9.251266479492188
    4. '6' → logprob: -14.376266479492188
    5. '```' → logprob: -20.751266479492188
    6. '
' → logprob: -21.626266479492188
    7. '``' → logprob: -22.001266479492188
    8. '10' → logprob: -22.501266479492188
    9. '

' → logprob: -23.251266479492188
    10. '(' → logprob: -23.626266479492188

Token 1166: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00889416690915823
    2. '   ' → logprob: -5.008893966674805
    3. ')
' → logprob: -6.133893966674805
    4. ' )' → logprob: -12.258893966674805
    5. '
' → logprob: -13.133893966674805
    6. ')
' → logprob: -14.008893966674805
    7. '    
' → logprob: -15.133893966674805
    8. ' ' → logprob: -16.508893966674805
    9. ')`' → logprob: -16.758893966674805
    10. ')

' → logprob: -16.883893966674805

Token 1167: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08320452272891998
    2. 'input' → logprob: -2.583204507827759
    3. 'n' → logprob: -5.833204746246338
    4. 'data' → logprob: -6.833204746246338
    5. '```' → logprob: -8.95820426940918
    6. 'import' → logprob: -9.83320426940918
    7. '    
' → logprob: -10.33320426940918
    8. ' input' → logprob: -10.45820426940918
    9. '
' → logprob: -10.70820426940918
    10. 'read' → logprob: -11.20820426940918

Token 1168: ' n' (ID: 297)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.005789900664240122
    2. 'n' (adapté à ' n') → logprob: -5.255789756774902
    3. '   ' → logprob: -7.505789756774902
    4. ' input' → logprob: -12.505789756774902
    5. 'read' → logprob: -13.755789756774902
    6. 'data' → logprob: -13.880789756774902
    7. 'N' → logprob: -16.25579071044922
    8. '
' → logprob: -16.88079071044922
    9. '    
' → logprob: -17.00579071044922
    10. 'inp' → logprob: -17.38079071044922

Token 1169: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31735044717788696
    2. '=' → logprob: -1.3173503875732422
    3. ',' → logprob: -5.817350387573242
    4. '=int' → logprob: -7.067350387573242
    5. '   ' → logprob: -8.317350387573242
    6. '=input' → logprob: -12.942350387573242
    7. ' ,' → logprob: -13.317350387573242
    8. '    ' → logprob: -13.817350387573242
    9. ',n' → logprob: -14.567350387573242
    10. ' ' → logprob: -14.692350387573242

Token 1170: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.16022422909736633
    2. ' int' → logprob: -1.910224199295044
    3. '[int' → logprob: -18.78522491455078
    4. ' ' → logprob: -19.16022491455078
    5. '(int' → logprob: -19.28522491455078
    6. '=int' → logprob: -19.91022491455078
    7. '<int' → logprob: -20.16022491455078
    8. '   ' → logprob: -20.78522491455078
    9. 'len' → logprob: -20.91022491455078
    10. '	int' → logprob: -21.16022491455078

Token 1171: '(sys' (ID: 41042)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.007763027213513851
    2. '(sys' → logprob: -5.507762908935547
    3. '(' → logprob: -6.007762908935547
    4. 'input' → logprob: -6.757762908935547
    5. '()' → logprob: -9.882762908935547
    6. ' input' → logprob: -13.007762908935547
    7. '(
' → logprob: -13.632762908935547
    8. '=input' → logprob: -15.007762908935547
    9. '(stdin' → logprob: -15.007762908935547
    10. '(open' → logprob: -15.257762908935547

Token 1172: '.stdin' (ID: 93480)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.22239245474338531
    2. '.stdin' → logprob: -1.8473924398422241
    3. '.readline' → logprob: -3.2223925590515137
    4. '())' → logprob: -7.472392559051514
    5. 'input' → logprob: -8.097392082214355
    6. '()
' → logprob: -8.097392082214355
    7. '()' → logprob: -8.347392082214355
    8. '.' → logprob: -9.097392082214355
    9. 'stdin' → logprob: -9.097392082214355
    10. '(stdin' → logprob: -9.347392082214355

Token 1173: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00038479414070025086
    2. '().' → logprob: -7.87538480758667
    3. '.' → logprob: -13.000384330749512
    4. '.stdin' → logprob: -13.250384330749512
    5. '.read' → logprob: -14.500384330749512
    6. ' readline' → logprob: -16.625385284423828
    7. '.readlines' → logprob: -17.500385284423828
    8. '())' → logprob: -17.500385284423828
    9. '()
' → logprob: -17.750385284423828
    10. ').' → logprob: -18.000385284423828

Token 1174: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.002529760589823127
    2. '().' → logprob: -6.002529621124268
    3. '()' → logprob: -10.002530097961426
    4. '())
' → logprob: -11.877530097961426
    5. ')' → logprob: -13.877530097961426
    6. ' ())' → logprob: -14.502530097961426
    7. '(' → logprob: -15.502530097961426
    8. '())

' → logprob: -16.12752914428711
    9. '()[' → logprob: -17.25252914428711
    10. '()]' → logprob: -17.50252914428711

Token 1175: '   ' (ID: 271)
  Prédit: 'branches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'branches' → logprob: -0.002508951351046562
    2. '   ' → logprob: -6.002509117126465
    3. ' branches' → logprob: -10.502509117126465
    4. 'branch' → logprob: -12.252509117126465
    5. '```' → logprob: -14.752509117126465
    6. 'br' → logprob: -15.377509117126465
    7. 'lines' → logprob: -15.627509117126465
    8. '(branch' → logprob: -16.37750816345215
    9. 'Branches' → logprob: -17.87750816345215
    10. '    
' → logprob: -18.37750816345215

Token 1176: ' branches' (ID: 34625)
  Prédit: 'branches'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'branches' (adapté à ' branches') → logprob: -5.438573680294212e-06
    2. '   ' → logprob: -12.250005722045898
    3. ' branches' → logprob: -15.375005722045898
    4. 'branch' → logprob: -15.500005722045898
    5. 'lines' → logprob: -16.2500057220459
    6. 'br' → logprob: -17.8750057220459
    7. '```' → logprob: -19.0000057220459
    8. 'edges' → logprob: -19.2500057220459
    9. '
' → logprob: -20.0000057220459
    10. 'b' → logprob: -20.3750057220459

Token 1177: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023286247625947
    2. '=' → logprob: -3.7732863426208496
    3. '=[]' → logprob: -10.148285865783691
    4. '=[]
' → logprob: -14.148285865783691
    5. ' =[' → logprob: -14.523285865783691
    6. '[]' → logprob: -16.148286819458008
    7. '=[' → logprob: -16.273286819458008
    8. ' =
' → logprob: -16.648286819458008
    9. '.append' → logprob: -16.648286819458008
    10. '＝' → logprob: -17.023286819458008

Token 1178: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.020889276638627052
    2. '[int' → logprob: -4.5208892822265625
    3. '[n' → logprob: -5.2708892822265625
    4. '[]
' → logprob: -5.7708892822265625
    5. '[]' → logprob: -7.2708892822265625
    6. '[line' → logprob: -9.020889282226562
    7. '[str' → logprob: -9.020889282226562
    8. '[array' → logprob: -9.020889282226562
    9. '[class' → logprob: -9.645889282226562
    10. '[i' → logprob: -10.270889282226562

Token 1179: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -6.384836888173595e-05
    2. 'list' → logprob: -10.0000638961792
    3. ' tuple' → logprob: -11.0000638961792
    4. '   ' → logprob: -13.5000638961792
    5. '(tuple' → logprob: -15.0000638961792
    6. 'map' → logprob: -18.125062942504883
    7. '  ' → logprob: -19.125062942504883
    8. '
' → logprob: -19.625062942504883
    9. ' ' → logprob: -20.250062942504883
    10. '       ' → logprob: -21.250062942504883

Token 1180: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0001025895617203787
    2. '(int' → logprob: -9.500102996826172
    3. 'map' → logprob: -10.500102996826172
    4. ' map' → logprob: -15.875102996826172
    5. '(' → logprob: -17.000102996826172
    6. '(
' → logprob: -18.125102996826172
    7. '.map' → logprob: -19.000102996826172
    8. '(sys' → logprob: -19.250102996826172
    9. '	map' → logprob: -19.500102996826172
    10. '_map' → logprob: -19.750102996826172

Token 1181: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.16034790873527527
    2. 'int' → logprob: -1.9103479385375977
    3. ',int' → logprob: -9.535347938537598
    4. '[int' → logprob: -10.785347938537598
    5. ' int' → logprob: -11.535347938537598
    6. '=int' → logprob: -11.785347938537598
    7. '   ' → logprob: -12.410347938537598
    8. '<int' → logprob: -12.660347938537598
    9. ']int' → logprob: -13.285347938537598
    10. ':int' → logprob: -13.785347938537598

Token 1182: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.633552074432373
    2. '(sys' → logprob: -0.758552074432373
    3. 'sys' → logprob: -7.508552074432373
    4. '=sys' → logprob: -8.758552551269531
    5. '   ' → logprob: -9.008552551269531
    6. '(' → logprob: -10.133552551269531
    7. ' (' → logprob: -10.633552551269531
    8. '	sys' → logprob: -11.008552551269531
    9. ' sys' → logprob: -11.133552551269531
    10. ' ,' → logprob: -11.508552551269531

Token 1183: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -5.080963092041202e-06
    2. ' sys' → logprob: -12.250004768371582
    3. '(sys' → logprob: -15.250004768371582
    4. '=sys' → logprob: -18.1250057220459
    5. '	sys' → logprob: -18.6250057220459
    6. '   ' → logprob: -18.7500057220459
    7. 'Sys' → logprob: -21.0000057220459
    8. '_sys' → logprob: -21.0000057220459
    9. 'lambda' → logprob: -21.1250057220459
    10. 'stdin' → logprob: -21.1250057220459

Token 1184: '.stdin' (ID: 93480)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.12696297466754913
    2. '.stdin' → logprob: -2.126962900161743
    3. '=sys' → logprob: -10.626962661743164
    4. '   ' → logprob: -13.001962661743164
    5. '.' → logprob: -13.126962661743164
    6. 'stdin' → logprob: -13.376962661743164
    7. '(stdin' → logprob: -13.751962661743164
    8. '(sys' → logprob: -14.001962661743164
    9. 'sys' → logprob: -14.126962661743164
    10. '.sys' → logprob: -14.376962661743164

Token 1185: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -6.704273118884885e-07
    2. '.readlines' → logprob: -15.250000953674316
    3. '=sys' → logprob: -15.625000953674316
    4. 'sys' → logprob: -15.875000953674316
    5. '.read' → logprob: -16.125
    6. '.stdin' → logprob: -17.125
    7. 'read' → logprob: -18.0
    8. 'stdin' → logprob: -18.75
    9. '.' → logprob: -19.625
    10. '   ' → logprob: -20.125

Token 1186: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.5213274309644476e-05
    2. '.readline' → logprob: -11.125015258789062
    3. '()' → logprob: -15.500015258789062
    4. '.strip' → logprob: -16.125015258789062
    5. '.split' → logprob: -16.625015258789062
    6. '()))' → logprob: -17.250015258789062
    7. '().__' → logprob: -18.875015258789062
    8. '()
' → logprob: -19.000015258789062
    9. '()[' → logprob: -19.000015258789062
    10. '.rstrip' → logprob: -19.125015258789062

Token 1187: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.5089989900588989
    2. 'split' → logprob: -1.008998990058899
    3. 'read' → logprob: -3.7589988708496094
    4. 'rstrip' → logprob: -4.508998870849609
    5. ' strip' → logprob: -13.63399887084961
    6. '.readline' → logprob: -14.63399887084961
    7. 'str' → logprob: -15.38399887084961
    8. 'decode' → logprob: -15.38399887084961
    9. ' readline' → logprob: -15.63399887084961
    10. ' split' → logprob: -15.63399887084961

Token 1188: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.007577050942927599
    2. '))' → logprob: -5.257576942443848
    3. '()' → logprob: -6.132576942443848
    4. '()))
' → logprob: -8.757576942443848
    5. '())' → logprob: -12.257576942443848
    6. '()
' → logprob: -13.257576942443848
    7. '()[' → logprob: -13.382576942443848
    8. '().' → logprob: -13.757576942443848
    9. '   ' → logprob: -14.007576942443848
    10. '(' → logprob: -14.382576942443848

Token 1189: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07375732064247131
    2. 'for' → logprob: -2.8237574100494385
    3. '   ' → logprob: -4.823757171630859
    4. ')' → logprob: -5.698757171630859
    5. '()' → logprob: -8.19875717163086
    6. '	for' → logprob: -11.32375717163086
    7. '    ' → logprob: -11.44875717163086
    8. '       ' → logprob: -11.57375717163086
    9. ')]' → logprob: -11.69875717163086
    10. ']' → logprob: -11.94875717163086

Token 1190: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.8802491215174086e-05
    2. '_range' → logprob: -10.875028610229492
    3. '_in' → logprob: -12.875028610229492
    4. '_i' → logprob: -13.750028610229492
    5. '_tokens' → logprob: -13.875028610229492
    6. ' _' → logprob: -13.875028610229492
    7. '_nodes' → logprob: -14.000028610229492
    8. '_
' → logprob: -14.250028610229492
    9. '_=' → logprob: -15.000028610229492
    10. ' range' → logprob: -15.125028610229492

Token 1191: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001999654108658433
    2. 'in' → logprob: -6.251999855041504
    3. ' range' → logprob: -9.751999855041504
    4. '_' → logprob: -11.501999855041504
    5. ' in' → logprob: -14.001999855041504
    6. '_range' → logprob: -14.126999855041504
    7. '(range' → logprob: -14.501999855041504
    8. 'i' → logprob: -15.501999855041504
    9. '	range' → logprob: -15.876999855041504
    10. '```' → logprob: -16.376998901367188

Token 1192: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -6.704273118884885e-07
    2. ' range' → logprob: -14.250000953674316
    3. '(range' → logprob: -18.625
    4. '	range' → logprob: -19.125
    5. '.range' → logprob: -20.375
    6. '
' → logprob: -20.5
    7. '   ' → logprob: -20.875
    8. '```' → logprob: -21.75
    9. '_range' → logprob: -22.0
    10. '[' → logprob: -22.0

Token 1193: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0009138475870713592
    2. 'n' → logprob: -7.000913619995117
    3. '(' → logprob: -13.000913619995117
    4. ' n' → logprob: -18.125913619995117
    5. '_n' → logprob: -18.375913619995117
    6. ')n' → logprob: -19.375913619995117
    7. '((' → logprob: -19.500913619995117
    8. 's' → logprob: -20.000913619995117
    9. '	n' → logprob: -20.000913619995117
    10. ',n' → logprob: -20.250913619995117

Token 1194: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0008690637187100947
    2. ' -' → logprob: -7.500869274139404
    3. ')]' → logprob: -8.125868797302246
    4. ')' → logprob: -11.125868797302246
    5. '   ' → logprob: -12.875868797302246
    6. ')][' → logprob: -13.375868797302246
    7. ')])' → logprob: -15.125868797302246
    8. ')]
' → logprob: -15.250868797302246
    9. '1' → logprob: -15.375868797302246
    10. ')],' → logprob: -15.500868797302246

Token 1195: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. ')' → logprob: -16.125003814697266
    4. '   ' → logprob: -18.125003814697266
    5. '```' → logprob: -18.125003814697266
    6. '۱' → logprob: -19.000003814697266
    7. '2' → logprob: -19.500003814697266
    8. '१' → logprob: -19.500003814697266
    9. 'def' → logprob: -19.625003814697266
    10. '
' → logprob: -19.625003814697266

Token 1196: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. ')' → logprob: -18.500001907348633
    4. '   ' → logprob: -18.625001907348633
    5. '۱' → logprob: -19.875001907348633
    6. '```' → logprob: -19.875001907348633
    7. 'def' → logprob: -20.125001907348633
    8. '১' → logprob: -20.250001907348633
    9. '
' → logprob: -20.250001907348633
    10. '१' → logprob: -20.500001907348633

Token 1197: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00017183588352054358
    2. ']' → logprob: -8.750171661376953
    3. ')' → logprob: -11.375171661376953
    4. '   ' → logprob: -13.750171661376953
    5. '])]' → logprob: -14.875171661376953
    6. ')]
' → logprob: -16.250171661376953
    7. ')])' → logprob: -16.625171661376953
    8. '])' → logprob: -16.875171661376953
    9. '       ' → logprob: -17.125171661376953
    10. '))' → logprob: -17.250171661376953

Token 1198: '   ' (ID: 271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.1395062804222107
    2. '   ' → logprob: -2.1395063400268555
    3. ' solver' → logprob: -4.3895063400268555
    4. '_solver' → logprob: -10.389506340026855
    5. 'ms' → logprob: -10.639506340026855
    6. '
' → logprob: -10.889506340026855
    7. 'solution' → logprob: -11.514506340026855
    8. 's' → logprob: -13.514506340026855
    9. ' ' → logprob: -13.514506340026855
    10. 'solve' → logprob: -14.014506340026855

Token 1199: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: 0.0
    2. ' solver' → logprob: -17.75
    3. 'solution' → logprob: -20.75
    4. 'resolver' → logprob: -21.75
    5. 'sol' → logprob: -22.0
    6. '   ' → logprob: -22.125
    7. '_solver' → logprob: -23.75
    8. 's' → logprob: -23.875
    9. '
' → logprob: -24.0
    10. 'solve' → logprob: -24.875

Token 1200: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016153432428836823
    2. '=' → logprob: -4.141153335571289
    3. '.solve' → logprob: -9.766153335571289
    4. '   ' → logprob: -10.266153335571289
    5. '.' → logprob: -11.391153335571289
    6. '_solver' → logprob: -12.891153335571289
    7. '=s' → logprob: -13.141153335571289
    8. '().' → logprob: -13.391153335571289
    9. 'solver' → logprob: -13.391153335571289
    10. '(s' → logprob: -13.641153335571289

Token 1201: ' Multi' (ID: 24511)
  Prédit: 'Multi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Multi' → logprob: -2.9875325708417222e-05
    2. 'Mult' → logprob: -11.000029563903809
    3. ' Multi' → logprob: -11.250029563903809
    4. 'Game' → logprob: -16.625030517578125
    5. 'Multip' → logprob: -17.250030517578125
    6. 'Multiple' → logprob: -17.625030517578125
    7. 'Micro' → logprob: -19.125030517578125
    8. 'Main' → logprob: -19.625030517578125
    9. 'Mul' → logprob: -20.125030517578125
    10. '   ' → logprob: -20.375030517578125

Token 1202: 'Ending' (ID: 120970)
  Prédit: 'Ending'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ending' → logprob: -1.3856492842023727e-06
    2. 'ending' → logprob: -14.500000953674316
    3. '-' → logprob: -15.500000953674316
    4. '-ending' → logprob: -15.625000953674316
    5. 'Entering' → logprob: -15.625000953674316
    6. ' Ending' → logprob: -15.875000953674316
    7. 'Branch' → logprob: -16.500001907348633
    8. '
' → logprob: -16.750001907348633
    9. 'Multi' → logprob: -17.000001907348633
    10. 'ENDING' → logprob: -17.000001907348633

Token 1203: 'Story' (ID: 29850)
  Prédit: 'Story'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Story' → logprob: -1.0280383548888494e-06
    2. '_story' → logprob: -14.750000953674316
    3. 'story' → logprob: -14.875000953674316
    4. ' Story' → logprob: -16.250001907348633
    5. 'Solver' → logprob: -17.125001907348633
    6. 'Storyboard' → logprob: -18.250001907348633
    7. '
' → logprob: -19.500001907348633
    8. ' story' → logprob: -20.000001907348633
    9. '```' → logprob: -20.000001907348633
    10. '-story' → logprob: -20.375001907348633

Token 1204: 'Solver' (ID: 70484)
  Prédit: 'Solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -1.9862216504407115e-05
    2. 'solver' → logprob: -10.875020027160645
    3. 'olver' → logprob: -14.500020027160645
    4. '_solver' → logprob: -15.000020027160645
    5. ' Solver' → logprob: -17.875019073486328
    6. ' solver' → logprob: -18.000019073486328
    7. 'Solve' → logprob: -18.500019073486328
    8. 'Saver' → logprob: -18.625019073486328
    9. '   ' → logprob: -19.375019073486328
    10. 'solve' → logprob: -19.875019073486328

Token 1205: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1458946317434311
    2. '
' → logprob: -2.2708945274353027
    3. 'solver' → logprob: -3.6458945274353027
    4. 'result' → logprob: -6.145894527435303
    5. '    
' → logprob: -6.770894527435303
    6. '()
' → logprob: -7.270894527435303
    7. '(s' → logprob: -7.270894527435303
    8. '.solve' → logprob: -8.395895004272461
    9. '  
' → logprob: -8.395895004272461
    10. 'print' → logprob: -8.395895004272461

Token 1206: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4741784632205963
    2. 'solver' → logprob: -0.9741784334182739
    3. '
' → logprob: -9.849178314208984
    4. ' solver' → logprob: -10.224178314208984
    5. '    
' → logprob: -11.974178314208984
    6. '```' → logprob: -12.599178314208984
    7. '_solver' → logprob: -14.224178314208984
    8. 'solve' → logprob: -14.849178314208984
    9. '	s' → logprob: -14.974178314208984
    10. 'result' → logprob: -14.974178314208984

Token 1207: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -7.028536492725834e-05
    2. '   ' → logprob: -10.375070571899414
    3. 'parser' → logprob: -10.375070571899414
    4. 'parse' → logprob: -12.625070571899414
    5. ' solver' → logprob: -12.750070571899414
    6. 'solve' → logprob: -13.875070571899414
    7. '
' → logprob: -15.500070571899414
    8. 'solution' → logprob: -15.750070571899414
    9. '```' → logprob: -16.125070571899414
    10. 'resolver' → logprob: -16.875070571899414

Token 1208: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -0.00018149138486478478
    2. '.solve' → logprob: -9.250181198120117
    3. '.' → logprob: -9.375181198120117
    4. '.parser' → logprob: -15.625181198120117
    5. '   ' → logprob: -16.375181198120117
    6. ' .' → logprob: -16.500181198120117
    7. '=parse' → logprob: -17.000181198120117
    8. 'parse' → logprob: -17.125181198120117
    9. '\.' → logprob: -18.000181198120117
    10. '.Parse' → logprob: -18.500181198120117

Token 1209: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -5.872261317563243e-05
    2. 'input' → logprob: -9.750059127807617
    3. 'Input' → logprob: -15.625059127807617
    4. '(input' → logprob: -16.125059127807617
    5. '_' → logprob: -16.250059127807617
    6. '_inputs' → logprob: -17.750059127807617
    7. 'n' → logprob: -18.625059127807617
    8. '_output' → logprob: -18.750059127807617
    9. '_INPUT' → logprob: -18.750059127807617
    10. '(_' → logprob: -18.875059127807617

Token 1210: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.2233183042553719e-05
    2. '(' → logprob: -11.375012397766113
    3. 'n' → logprob: -14.750012397766113
    4. '(
' → logprob: -15.750012397766113
    5. ' (' → logprob: -16.625011444091797
    6. '((' → logprob: -16.875011444091797
    7. '(len' → logprob: -19.000011444091797
    8. '(s' → logprob: -19.625011444091797
    9. ' n' → logprob: -19.875011444091797
    10. '```' → logprob: -20.125011444091797

Token 1211: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1398757123970427e-05
    2. ')' → logprob: -12.000011444091797
    3. '   ' → logprob: -12.500011444091797
    4. ' ,' → logprob: -13.875011444091797
    5. ',
' → logprob: -15.000011444091797
    6. ',b' → logprob: -16.875011444091797
    7. '       ' → logprob: -17.000011444091797
    8. '),' → logprob: -17.750011444091797
    9. '[' → logprob: -18.250011444091797
    10. '‌,' → logprob: -18.500011444091797

Token 1212: ' branches' (ID: 34625)
  Prédit: 'branches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'branches' → logprob: -0.001170225441455841
    2. ' branches' → logprob: -6.7511701583862305
    3. 'branch' → logprob: -17.376171112060547
    4. '   ' → logprob: -18.876171112060547
    5. 'Branches' → logprob: -21.626171112060547
    6. 'b' → logprob: -21.751171112060547
    7. '       ' → logprob: -21.876171112060547
    8. '(branch' → logprob: -22.376171112060547
    9. ' ' → logprob: -22.626171112060547
    10. '```' → logprob: -23.001171112060547

Token 1213: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16249799728393555
    2. ')' → logprob: -2.4124979972839355
    3. '
' → logprob: -3.4124979972839355
    4. '<|end|>' → logprob: -4.1624979972839355
    5. '<|end|>' → logprob: -5.0374979972839355
    6. ')
' → logprob: -6.1624979972839355
    7. '    
' → logprob: -6.5374979972839355
    8. ',' → logprob: -7.2874979972839355
    9. ').' → logprob: -8.037498474121094
    10. '  
' → logprob: -9.037498474121094

Token 1214: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6933714151382446
    2. 'print' → logprob: -0.6933714151382446
    3. 'result' → logprob: -8.693371772766113
    4. ' print' → logprob: -9.818371772766113
    5. '
' → logprob: -14.568371772766113
    6. 'return' → logprob: -14.693371772766113
    7. '```' → logprob: -14.818371772766113
    8. '	print' → logprob: -14.943371772766113
    9. ' result' → logprob: -15.443371772766113
    10. '       ' → logprob: -16.068370819091797

Token 1215: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00043138445471413434
    2. 'result' → logprob: -7.750431537628174
    3. 'answer' → logprob: -15.250431060791016
    4. 'res' → logprob: -15.500431060791016
    5. '   ' → logprob: -16.000431060791016
    6. ' print' → logprob: -16.250431060791016
    7. 'ans' → logprob: -18.625431060791016
    8. '```' → logprob: -21.250431060791016
    9. 'output' → logprob: -21.375431060791016
    10. 'time' → logprob: -21.500431060791016

Token 1216: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.004095377866178751
    2. '(' → logprob: -5.504095554351807
    3. 'solver' → logprob: -11.254095077514648
    4. '(
' → logprob: -12.754095077514648
    5. '(solution' → logprob: -14.379095077514648
    6. '(sol' → logprob: -15.504095077514648
    7. '()' → logprob: -16.25409507751465
    8. '((' → logprob: -16.50409507751465
    9. '(f' → logprob: -16.62909507751465
    10. ' solver' → logprob: -17.25409507751465

Token 1217: 'olver' (ID: 13941)
  Prédit: 'olver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olver' → logprob: -2.339278580620885e-06
    2. 'olve' → logprob: -13.375001907348633
    3. 'solver' → logprob: -14.750001907348633
    4. '().' → logprob: -16.375001907348633
    5. '.s' → logprob: -17.000001907348633
    6. '(' → logprob: -17.000001907348633
    7. 'ol' → logprob: -17.750001907348633
    8. '(s' → logprob: -17.750001907348633
    9. '.' → logprob: -18.125001907348633
    10. ')' → logprob: -18.375001907348633

Token 1218: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -0.00020795092859771103
    2. '.' → logprob: -8.750207901000977
    3. '.compute' → logprob: -10.000207901000977
    4. ').' → logprob: -12.625207901000977
    5. '.)' → logprob: -15.125207901000977
    6. '.sol' → logprob: -15.250207901000977
    7. 'solve' → logprob: -16.125207901000977
    8. ')' → logprob: -16.375207901000977
    9. '.calculate' → logprob: -17.000207901000977
    10. ' .' → logprob: -17.125207901000977

Token 1219: '())


' (ID: 131583)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.000204851632588543
    2. '()' → logprob: -8.500205039978027
    3. '())
' → logprob: -13.875205039978027
    4. ')' → logprob: -15.375205039978027
    5. ' ())' → logprob: -16.37520408630371
    6. '(' → logprob: -18.12520408630371
    7. '();)' → logprob: -18.50020408630371
    8. '()
' → logprob: -18.62520408630371
    9. '())

' → logprob: -19.37520408630371
    10. '()))' → logprob: -19.37520408630371

Token 1220: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -8.537868779967539e-06
    2. ' if' → logprob: -11.875008583068848
    3. '```' → logprob: -14.125008583068848
    4. 'main' → logprob: -14.500008583068848
    5. '#' → logprob: -15.375008583068848
    6. '
' → logprob: -17.50000762939453
    7. '<|end|>' → logprob: -18.50000762939453
    8. '#if' → logprob: -18.75000762939453
    9. '	if' → logprob: -19.25000762939453
    10. 'If' → logprob: -19.25000762939453

Token 1221: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.048679571598768234
    2. ' __' → logprob: -3.0486795902252197
    3. 'name' → logprob: -9.42367935180664
    4. '_name' → logprob: -12.17367935180664
    5. '___' → logprob: -12.29867935180664
    6. '_' → logprob: -14.67367935180664
    7. '.__' → logprob: -15.04867935180664
    8. '____' → logprob: -15.54867935180664
    9. ' "__' → logprob: -15.79867935180664
    10. 'Name' → logprob: -16.04867935180664

Token 1222: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0882149264216423
    2. '==' → logprob: -2.713214874267578
    3. ' ==' → logprob: -4.213214874267578
    4. '=="' → logprob: -6.088214874267578
    5. 'name' → logprob: -7.713214874267578
    6. '=='' → logprob: -8.463214874267578
    7. 'if' → logprob: -9.463214874267578
    8. '```' → logprob: -9.463214874267578
    9. '__.__' → logprob: -9.463214874267578
    10. '[' → logprob: -10.338214874267578

Token 1223: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -7.827200897736475e-05
    2. '==' → logprob: -9.625078201293945
    3. ' ==' → logprob: -11.750078201293945
    4. '__.__' → logprob: -12.875078201293945
    5. '=="' → logprob: -14.125078201293945
    6. '____' → logprob: -15.375078201293945
    7. '__
' → logprob: -15.625078201293945
    8. '___' → logprob: -15.625078201293945
    9. '__.' → logprob: -15.875078201293945
    10. '__('' → logprob: -16.500078201293945

Token 1224: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2994753420352936
    2. '__' → logprob: -1.4244753122329712
    3. '=="' → logprob: -4.424475193023682
    4. ' ==' → logprob: -5.174475193023682
    5. '=='' → logprob: -7.674475193023682
    6. '==
' → logprob: -11.29947566986084
    7. '=' → logprob: -11.29947566986084
    8. '===' → logprob: -11.54947566986084
    9. '[' → logprob: -12.17447566986084
    10. '"' → logprob: -12.92447566986084

Token 1225: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10025918483734131
    2. ''' → logprob: -2.350259304046631
    3. '__' → logprob: -10.225258827209473
    4. ' "__' → logprob: -11.100258827209473
    5. ' '__' → logprob: -14.225258827209473
    6. '   ' → logprob: -15.975258827209473
    7. '"_' → logprob: -16.35025978088379
    8. '"name' → logprob: -16.35025978088379
    9. '('__' → logprob: -16.85025978088379
    10. '("__' → logprob: -17.10025978088379

Token 1226: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.3918263912200928
    2. '__' → logprob: -1.1418263912200928
    3. '"' → logprob: -5.641826629638672
    4. ''' → logprob: -6.641826629638672
    5. 'name' → logprob: -9.391826629638672
    6. ' main' → logprob: -12.766826629638672
    7. '_main' → logprob: -13.391826629638672
    8. '"name' → logprob: -14.016826629638672
    9. ''name' → logprob: -14.141826629638672
    10. '__":
' → logprob: -14.891826629638672

Token 1227: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.31461918354034424
    2. '__":
' → logprob: -1.3146191835403442
    3. '__':
' → logprob: -7.564619064331055
    4. '__
' → logprob: -8.189619064331055
    5. '__.' → logprob: -8.314619064331055
    6. '__["' → logprob: -8.689619064331055
    7. '__.__' → logprob: -9.189619064331055
    8. '__
' → logprob: -11.314619064331055
    9. '__[' → logprob: -12.189619064331055
    10. '__",' → logprob: -12.189619064331055

Token 1228: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.47300985455513
    2. '   ' → logprob: -1.2230098247528076
    3. '__' → logprob: -2.9730098247528076
    4. ' main' → logprob: -3.5980098247528076
    5. '"' → logprob: -6.473010063171387
    6. '	main' → logprob: -6.473010063171387
    7. '_main' → logprob: -8.348010063171387
    8. ''' → logprob: -8.473010063171387
    9. '____' → logprob: -9.348010063171387
    10. '__":
' → logprob: -9.473010063171387

Token 1229: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.75
    3. '	main' → logprob: -21.0
    4. '   ' → logprob: -21.625
    5. '_main' → logprob: -24.375
    6. '(main' → logprob: -25.0
    7. '.main' → logprob: -25.25
    8. 'Main' → logprob: -29.0
    9. 'import' → logprob: -29.125
    10. ' ' → logprob: -29.75

Token 1230: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1228
Tokens correctement prédits (1ère position, stricte): 415
Tokens correctement prédits (1ère position, avec adaptation): 456
Tokens correctement prédits (top 10): 827
Précision stricte (1ère position): 33.79%
Précision adaptée (1ère position): 37.13%
Précision (top 10): 67.35%
================================================================================
